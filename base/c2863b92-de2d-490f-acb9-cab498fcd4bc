{
    "title": "All Five Senses",
    "pages": [
        "All Five Senses\n\nBlindfolded, Andrew needs to work out whose tits are whose.\n\nA huge thank you to my editors, Charlie and Bob.\n\nPlease, if you're still reading when you get to the end scroll down a little and vote. You don't have to log in to vote or comment. Your encouragement will definitely help fuel future efforts. Thanks.\n\nAllie was a little drunk, which in some ways wasn't surprising, given we were in a bar. I've known Allie for eighteen months and, up until this evening, she'd never shown even a remote interest in being in a bar. Tonight, for some reason she was insistent, like she thought it was my birthday and hence a celebration was in order. Even when we'd been to parties, Allie didn't really do much drinking. She was pretty shy and kept to a fairly close set of family and friends.\n\nFor a while she had me worried, like today was a significant date in our relationship and she was giving me an opportunity to realise that and, once the penny had dropped, celebrate some sort of a milestone with her. I was racking my brain -- first time we met, first date, first kiss, first fuck?\n\nThe first time we met was in an aerobics class at the university gym. From my perspective it was love at first sight. If I could pick one word to describe Allie's physique it would be 'lithe'. At 5'9\" she was reasonably tall and her limbs had a gracefulness to them that often left me mesmerised. At the same time, her shoulders, arms, thighs and butt seemed to give her an explosive power. Add to that a pretty face with green eyes sitting under a mop of ginger curls and I was sold.\n\nAt this point I should confess I had an ulterior motive. I like to keep fit and I spend a reasonable amount of time either in the gym or playing one form of sport or another. In my mind the gym is divided into two parts; the weights part and the fitness part. The weights part is mostly alpha male territory with relatively few women -- definitely not for me. The fitness part, on the other hand, has several advantages - it keeps me lean and fit and I'm usually outnumbered three or four to one by sexy, athletic, scantily clad women.\n\nAllie and I would often make small talk before classes and if there was a partner exercise to do, we would often pair up. After a while I managed to pluck up enough courage to ask her out.\n\nOur first date was a casual afternoon at the lake and then dinner afterwards. Gym outfits can be pretty revealing in terms of shape and size but nothing prepared me for that afternoon and Allie in a bikini. My eyes almost fell out of my head. Her tits weren't enormous, maybe C cup, but they sat high on her chest, almost as if they were defying gravity. She had the flattest of abs, the cutest of butts and the sexiest of hips. However, the most striking aspect was her pale alabaster skin. She glowed and I made every opportunity, as we played in the water, to have her in my arms. That night, as I dropped her home, I was rewarded with my first kiss. I was deeply in love.\n\nThings progressed quickly after that. I quickly discovered, much to my delight, Allie loved being held and, within boundaries, caressed. We would often find ourselves intertwined on the sofa, binge watching something like Game of Thrones - the sex scenes made her horny. One evening, when her sister Maddie wasn't home, Allie paused the TV and very casually asked me if I'd like to make love to her. My kiss was enough to answer her question. She stood up and slowly, one piece of clothing at a time, revealed her body to me. I worshipped her body and we made love there on the living room floor.\n\nBut none of that explained this evening; I couldn't think of a single \"anniversary\" we could have possibly been celebrating.\n\nAllie was most definitely keeping a secret from me. She kept looking at her watch, like there was someplace she should be, while at the same time making no effort to move on from the bar. By 10 o'clock I'd worked it out; for reasons unknown, Allie didn't want to go home or at least didn't want me at her place.\n\nI thought that maybe she and her sister had had a fight. Allie shared a house with her older sister Maddie who worked cabin crew. Where they lived was an easy drive to and from the airport. It also worked for Allie as it was a convenient, but slightly longer, drive across town to the university that Allie and I attended.\n\nIn the same way that Allie was a little shy, Maddie, and most of her friends for that matter, were a little wild. Like Maddie, there were a lot of young female cabin crew who lived in and around town. Their favourite summer past time was blowing off steam over at the lake. There would often be a dozen or more of them and their partners partying all afternoon and well into the night. Allie and I joined them occasionally but not very often.\n\nThe one thing that Allie didn't like was when Maddie had some random guy stay over for the night. According to Allie, it wasn't often the same one twice. One guy had surprised Allie in the shared bathroom one morning while she was having a shower. Allie said he was polite enough and beat a hasty retreat, but I could tell it freaked her out a bit.\n\nAt 11 o'clock it was way past Allie's normal home time. We weren't budging. A slightly drunk Allie was kind of cuter, in a funny way -- like she'd lost a level of seriousness somehow and was trying very hard not to appear in any way drunk. I'd stopped buying her alcoholic drinks an hour ago so hopefully she wouldn't be getting any worse, just giggly with a light buzz.\n\nFinally, at a touch after midnight, she decided it was time to go.\n\nAs I turned into Allie's street, she let out a sigh of disappointment. The usually quiet street had a dozen or more cars clustered around the house where she and Maddie lived. By necessity, we parked a little further away than usual. As soon as I got out of the car, I could hear the doof, doof of music and a few female squeals. There was definitely a party going on. I was a little miffed to say the least. Why the hell wasn't I invited.\n\n\"Allie, is there a party going on?\" I asked in an overly innocent voice.\n\n\"Yes,\" she groaned, recognising my mocking tone and screwing up her face in a wince.\n\n\"Any reason we weren't here around four hours ago?\"\n\n\"Sorry Andrew. It's just not your type of party.\"\n\nWhat's not my type of party? I couldn't begin to imagine what sort of party wasn't my sort of party. Obviously, Allie wasn't involved, so this was all Maddie's doing. My immediate thought was that it was a swing party. That definitely fitted Maddie lifestyle.\n\nOne thing I began to notice was a lack of male voices; usually they were the loudest and I couldn't hear one. This was the sound of ladies having fun. Way too much fun.\n\nParked in front of the gate to Allie's house there was a van with advertising on the side for Stephanie's Boutique.\n\n\"Allie, is this a lingerie party?\"\n\n\"Yes,\" she admitted, accompanied by more wincing.\n\n\"I love lingerie parties,\" I declared with enthusiasm.\n\n\"And exactly how many have you been to?\" she enquired with a raised eyebrow.\n\n\"Maybe less than one. But what better opportunity to start?\"\n\n\"Like the idea of trying on a few outfits, do you? I could post some photos online. Maybe send a few to your friends. Maybe your mum.\"\n\n\"Maybe I could try on an outfit or two,\" I said, calling her bluff. I did quite like Rocky Horror Picture Show after all.\n\nAllie wasn't convinced. \"I think maybe we should sit on the porch and wait for them to finish up,\" she suggested.\n\nAs we walked up the path two woman were walking out. We got an even louder blast of music and shrieking as the door briefly opened and closed. I recognised one of the women as Katie, one of Maddie's friends.\n\nAllie stopped to talk to Katie. So annoying, as I was super keen to get inside.\n\n\"Hi Katie,\" said Allie. \"How come things haven't wrapped up yet?\"\n\n\"Actually, we were waiting for you guys to return. Apparently, there's some modelling to be done.\"\n\nMore groaning from Allie. \"I thought Maddie knew I wasn't that interested.\"\n\n\"Not you,\" said Katie. She pointed at me. \"It's Andrew they're waiting for.\"\n\nWhat!? My ticket to entry had arrived. Better late than never.\n\nAllie looked at me sceptically as I mimed edging towards the door. \"Oh alright,\" she said. \"But on two conditions.\"\n\n\"You name it. Anything!\"\n\n\"You have to do exactly as I say, exactly when I say it, without objection.\"\n\n\"Agreed.\" Truth be told, at this point I'd have agreed to just about anything. Done deal. I was in.\n\n\"And,\" she added. \"I know what you're like around tits. Try and keep your hands and your eyes to yourself unless invited otherwise.\"\n\n\"Of course.\" As far as I was concerned that was a no brainer.\n\nEntering the front door I could see a fair scattering of people throughout the living room, dining room, kitchen and spilling out onto the rear deck. Most attention was on the living room where a raucous game of Limbo was under way.\n\nMaddie saw us and quickly came over. I'd seen Maddie in a bikini any number of times. Even caught a quick flash of her tits once. I'd never seen her in a corset and panties before tonight. Now I had. Her tits seemed to be making every effort to escape out of the top. Was it possible I could see the edge of her areola peeking out? It was neither the time nor the place for closer examination. My cock was definitely liking it and I sensed that Maddie was well aware of my level of interest.\n\nMaybe this wasn't Maddie's and Allie's. Maybe this was heaven. I thought I was good to drive as I hadn't had many drinks at the bar. Maybe we'd been in a crash and had died. It was simply too good to be true. Should I be pinching myself? No! If it was a dream, I didn't want it to stop now.\n\nAllie started shouting at her over the music. \"Aren't we going to be annoying the heck out of the neighbours?\"\n\nMaddie shook her head. \"I think our two closest neighbours are both still here somewhere. Actually, I think they're probably up next.\"\n\n\"Up next?\" I asked.\n\n\"Somewhere along the way we decided that each of us would model one outfit.\" explained Maddie. \"The last group are the 'mature' ladies and Mrs C. and Susan should be about to strut their stuff.\"\n\nI could see a falling body in the background and a super loud cheer went up. Apparently, Limbo was over.\n\nMaddie drew Allie and I further into the room. I began to get a good look around me.\n\nI get that anyone looking to sell any sort of product in a party setting, from sex toys to kitchen appliances, was probably looking to get the clientele \"well lubricated\". Maddie's friends seemed intent on taking that to a new level. My sense was that alcohol consumption was high and inhibition was low. About a third of the people were \"conventionally\" dressed. The remainder were, well, mainly undressed. I could see bras, panties, suspenders, thigh highs, negligees, camisoles. My eyes were spinning around in my head and my cock was firmly growing in my jeans.\n\nThe music came down a couple of decibels and an older lady in a pants suite took centre stage. I assumed this was Stephanie.\n\n\"OK Ladies,\" she began \"our last group this evening are two very special ladies who just happen to be Maddie's neighbours, Susan and Evelyn. I think they can amply demonstrate sexy doesn't have a use-by date.\"\n\nHoly crap.\n\nSusan, I'd always known as Susan. She was maybe mid-30s. I didn't know much about her other than she had a husband and two early teenage kids. She usually dressed fairly conservatively and all I was conscious of was that she was fairly slender. Tonight, she'd decided to go what I'd call 'old school'; lace bra and panties, suspender belt, stockings, heels. The bra seemed to be doing her a few favours in terms of how it accentuated her tits, adding a little volume and proving a nice bit of cleavage. When she turned around, I could see most of a firm arse and very little lace. With her hair pinned up, the outfit suited her 'slick' style.\n\nMrs C. I'd only ever known as Mrs C. I had no idea she was Evelyn. It suited her. So did what she was wearing.\n\nShe was a little older than Susan, maybe late 30s or early 40s. I've never seen a Mr C. But I've seen a lot of Mrs C. She has a pool in her back yard and was often swimming or lounging by the pool. Mrs C. was stacked and looked absolutely stunning in a swimsuit. She packed an impressive set of curves.\n\nI was mowing Allie's back lawn one afternoon and I stuck my head over the fence to say hi. Mrs C. was sitting next to the pool, topless, reading a book. I could see all of one breast and most of the other. Suddenly, catching me out of the corner of her eye, she jerked up her hands to cover herself.\n\n\"Sorry.\" I yelled. Ducking back down. \"I was just looking to say hello.\"\n\nI could hear her chuckling to herself. \"That's alright Andrew. No harm done. I think you got a bigger shock than I did.\n\nMrs C. must have relayed this story to Allie. Whenever Allie wanted her lawn done, she would tell me that I should come over as Mrs C. was out by the pool. Allie did however offer fair compensation. The deal was that, if I didn't get to see a topless Mrs C, Allie would give me a blowjob in payment. I left Mrs C. to her privacy and took the blowjob from Allie every time.\n\nTonight Mrs C. was wearing a navy blue babydoll. It was good choice as the cut accentuated her thighs while minimizing her waistline. Her tits didn't need any help with either volume or cleavage and were safely confined in a lace bra. The bra was lined with blue satin and not revealing any of its secrets. The rest of the lace in the outfit wasn't lined, through the lace mesh I could make out the shape of a brief pair of panties underneath.\n\nI wished I'd been here from the beginning to see the earlier displays.\n\nSusan and Mrs C. did a few more spins and twirls before once again sitting down.\n\nMaddie grabbed me by an elbow and guided me forward.\n\n\"Andrew, this is Steph. She's our organiser for tonight.\"\n\n\"Hi,\" said Steph, giving me a quick, but approving, look up and down.\n\nSmiling, she said, \"Andrew, we've been waiting for you. I hope you don't mind doing a little modelling for us. I sell a few matching his and hers outfits and one of the girls would like to see it modelled before she buys it.\"\n\nDigging into a bag she pulled out three of the smallest pieces of material I'd ever seen; two G-strings and what I assumed must be a bra. All in leopard print.\n\n\"Is that OK?\" asked Steph.\n\nMy mind was spinning a little. I suddenly wasn't so sure about this. Either of the G-strings were, to my mind, microscopic. I was super happy for one of the girls to be sporting her outfit. Me? Well, not so much. Sexist? Absolutely! My dignity was at stake.\n\nAllie could sense my sudden discomfort. She didn't give me a chance to respond.\n\n\"He'd love to do it!\" she said. Giving me a look that said basically, \"Well, you asked for it\".\n\n\"Hang on a second. Do I have a choice here?\" I pleaded.\n\n\"What did we agree outside regarding your conditions of entry? Something along the lines of doing everything I said? I also seem to recall something about you wanting to try on an outfit or two?\" Again, I got the raised eyebrows.\n\nI needed a lawyer. A good one.\n\nJane appeared at my side deliciously dressed in a lace bra and matching panties. I'd met her before, most recently when a group of us drove over to the lake for a swim earlier in the summer. She was super tanned, blonde and had a figure much like Allie's. She was also always flirting with any male within a 5-mile radius. I was the only male in the room and seemingly the sole focus of her attention right now.\n\nAllie hated Jane and I suspect Jane was none too fond of Allie. Allie was maybe a little jealous of Jane's tan and referred to her as the \"Baked Bitch.\" Rumour had it Jane called Allie \"Snow White\".\n\nSteph turned to Jane. \"Andrew has kindly agreed.\"\n\nSteph continued, \"Now, I sell these sets either with or without the bra. Which would you prefer?\"\n\n\"Oh, I definitely want the bra.\" With that Jane unsnapped the front of the bra she was wearing and, removing it, passed it to Steph, holding out her hand to receive its replacement\n\nHoly fuck. Her tits were amazing. She was still wearing panties, so I couldn't quite attest to her having an all over tan, but certainly her tits had the same golden glow as the rest of her body. Each was topped with a thick, equally tanned nipple. I was imagining them in my mouth.\n\nIt took way longer than Allie would have preferred for me to regain my composure. Speaking of composure, I could feel my cock now fully erect in my jeans.\n\nAllie held out her hand to Steph. \"Before Jane removes anything else, Andrew will get changed in my room.\" She took a G-string from Steph and passed it to me. As I turned me towards the passage way she gave me a firm slap on the butt, sending me on my way.\n\nI wasn't exactly racing towards Allie's room to get changed. It felt a little more like the walk of a condemned man. Things had gone south fast. Ten minutes ago, I was thinking I died and gone to heaven.\n\nWith the door closed behind me I began to get undressed. It certainly wasn't the first time I'd been naked in Allie's room; far from it. But it was the first time I'd been in here with an entirely unwanted erection.\n\nI held the flimsy G-string in my hand. I haven't got a super huge cock but no way was I going to fit what I was packing into the minuscule pouch provided for the task.\n\nI stepped into it and slid it up my legs. Yep, short of slicing off the top half of my cock, no way was it going to fit. No matter how I rearranged it, a good 3 or 4 inches of my cock was poking out of the top.\n\nI began to consider my options. I could think of two (having already dismissed the slicing in two option). I could wait it out, but that might take some time. Or, I could quickly jerk off, shoot a load, and \"calm down\" a bit. I tried option one for two minutes. No good. I resigned myself to option two.\n\nI was about to start when Allie slipped into the room. My back was to the door.\n\n\"What the fuck are you doing,\" she asked. \"It's not as if there's a lot of 'wardrobe' to adjust.\"\n\n\"Well, if there was more 'wardrobe' to adjust I wouldn't be having this problem.\" I said in exasperation, turning around to reveal my dilemma.\n\n\"Why the fuck are you packing an erection?\"\n\n\"Did you not just see me in a room full of semi naked women, tits on display everywhere?\"\n\n\"You men are so hopeless.\"\n\nLooking at my cock, I stated the obvious. \"Look, the only way we're going to get out of here quickly is if I shoot a load. Are you going to help me, or is this going to be a DIY job?\"\n\nFortunately for me, Allie loved sucking cock. She wasn't a big fan of swallowing, but she did love working a cock.\n\n\"OK. Come over here.\" She gestured for me to sit on the edge of the bed, and began to remove her top. \"I'm not getting completely undressed but, with a mind on expediency, you'll probably want to play with these.\" With that she removed her bra and tossed it on the bed.\n\nMan, I love those tits with their pale pink nipples.\n\nAllie sank to her knees, lowered her mouth and swallowed half my cock. Allie knew my cock all too well. She rolled her tongue around the tip, pumped and twisted one hand on the lower half of my shaft and gently massaged my balls with the other. I reached out with one hand and gently squeezed her breast, teasing the nipple. Slowly her pace increased and I could feel her sensing the tension in my balls. She let go of my shaft and swallowed as much of my cock as she could, working it down her throat.\n\nI was getting close.\n\nShe could sense it.\n\nShe moved back to the tip, bobbing, swirling, sucking. With a grunt from me she took my cock out of her mouth and began furiously pumping her fist up and down my shaft.\n\nI shot my load, pumping cum out of my cock -- squirt after squirt. Most of it landed on her tits. The rest on her shoulder and neck and abs.",
        "\"Fuck you're good at that. Thank you.\"\n\n\"Always happy to be of service\". Allie stood up, grinning, and began using tissues to clean herself up.\n\nA few minutes later I was good to go. My cock and balls now nicely filled out the pouch of the G-string.\n\nAllie had her top and bra back on.\n\n\"OK. Let's go.\" I said, heading for the door.\n\n\"Hang on a sec,\" asked Allie. \"Put your arms out and give me a slow twirl.\"\n\nI did as requested. I'm lean and fit with what I consider to be great muscle tone. Allie has always been a fan of my shoulders and butt.\n\n\"Nice.\" said Allie with an appreciative grin. \"OK Tarzan, let's go. Your butt is about to be the talk of the town.\"\n\nAs we entered back into the living room, most eyes turned in our direction. Maddie raised an eyebrow.\n\n\"Sorry for the delay folks\" apologised Allie \"I think Steph gave us a medium size when we needed an extra-large. We had to make a few adjustments.\"\n\nI was quickly the centre of attention. A few of Maddie's friends would have seen me in shorts and nothing else at the lake, but none had seen me in a G-string before. I was getting plenty of admiring glances and approving nods.\n\nJane, the supposed customer, came over to stand beside me.\n\n\"How tight is that around your waist?\" she asked. She placed one hand flat on my lower abs and slipped the other hand under the waist string and slid it down my butt cheek.\n\n\"What about between the legs?\" not hesitating to reach down between my legs for a quick feel, tickling the back of my balls.\n\n\"Ah, good thanks\" I said with a slightly constricted throat.\n\nI could sense Allie getting protective of her man.\n\nJane knew exactly what she was doing and decided to raise the ante. \"Allie\" she said sweetly. \"Would you like to try on this outfit too?\" She quickly untied the bra, once again bringing her delicious tits into full view. \"Hopefully the bra won't be too big for you.\"\n\nAllie responded equally politely \"Actually you're right, it did look a little big on you. Still, I'm sure I can fill it out. You can keep the panties; I wouldn't want you to share anything with me.\"\n\nMeow.\n\nAllie slipped off her top and bra. With the two topless girls standing side by side, there was a huge contrast between their skin tones -- Jane looking like she was cast in bronze, Allie like she was carved from the purest white marble.\n\nOthers must have also been aware of the tension between Allie and Jane. Jane's usual partner in crime, Rachel, decided to enter the fray. \"That's not even a fair fight.\" She declared.\n\n\"You're right,\" added someone I didn't recognise. \"Allie's definitely got the goods.\"\n\nMaddie stepped in trying to defuse the situation. \"Girls, we're not going to settle this one way or the other.\"\n\nRachel, still liking Jane's chances, wasn't giving up without a fight. \"Why don't we let Andrew decide?\"\n\nJane was quick to dismiss this idea. \"No way. He'll obviously say it's Allie.\"\n\n\"Not if he's blindfolded, he won't.\" suggested Rachel with a sly grin. \"Unless Allie's not willing to take up the challenge.\"\n\nAllie was in a bit of no-win situation here. If Jane lost, it was no big deal. If Allie lost, it was a big deal. Worse, my life could also be at risk, should I make the wrong choice.\n\nStill, Allie wasn't backing down. With the colour coming into her cheeks, I could see she was bristling for a fight.\n\n\"Ready when you are.\"\n\nJane was back in, again raising the stakes. \"And who ever Andrew picks gets to fuck him.\"\n\nWhoa. Jane was in for the kill. This was going way too far.\n\nAllie hadn't considered losing for one minute and wasn't going to back down at this point.\n\n\"Fine,\" said Allie. \"And you can stay and watch me doing it, knowing it's never going to be you. The loser isn't leaving until the winner finishes their victory lap.\"\n\nI'd often fantasied about a threesome, but Allie's proposal wasn't exactly what I'd been hoping for.\n\nIt didn't seem like I had any say in the matter. Maybe they wouldn't be able to find a suitable blindfold.\n\nFive minutes later, still in my G-string, I was sitting on a dining chair in the middle of the living room. I was blindfolded (Who was I kidding? Maddie, being cabin crew, had any number of sleeping masks. They double masked me, just to be sure). The rules had been negotiated. The girls were to sit in my lap facing me, straddling me with one leg either side. I had two minutes to \"examine\" their tits before they swapped. This was way more than I really needed but I argued I needed to be sure. There was a lot at risk, I told them. They reluctantly agreed.\n\nAllie had been wearing jeans and Jane a G-string. So, to ensure that I couldn't tell who was who by what bottoms they were wearing, they were to be naked.\n\nMaddie suggested the girls would cut a deck to decide who went first.\n\n\"OK ladies, pick a card.\" I could hear Maddie's voice. \"Jane you're the guest you can pick first. Don't show the rest of the room. We don't want any oohs and aahs giving things away before we start.\"\n\nThere was a brief pause.\n\n\"OK. Any last-minute details before we start\" asked Maddie.\n\n\"Actually, there is.\" Came a voice. It sounded like Victoria, another of Maddie's friends. \"Is there any chance of anyone else joining in? I mean, if this is a tit appreciation competition, can anyone else join in?\"\n\nThis was definitely Victoria. If there was trouble to be had, Victoria was usually right in the middle of it orchestrating the ensuing chaos (if indeed chaos can be orchestrated).\n\nI couldn't quite understand Victoria's interest. I'd seen her in a bikini at the lake. And I'd also seen her braless, but not topless, at a party a while back. She was pretty flat chested. Not that I disliked that. I'm always amazed by the nipples women with smaller tits have. They always seem to be larger and harder. I don't know whether that is genuinely the case or they just seem larger on the end of smaller tits.\n\nI could hear a slightly exasperated sigh from Maddie. Would she feel sorry for Victoria tit-wise and let her in?\n\n\"I can't see what harm it can do. Does anyone else want to join in? Put up your hand.\"\n\nThere was a brief pause followed by a sudden outburst of giggling.\n\n\"Seriously! Either you guys need to get out more, or I need to find better friends. That's way too many. Victoria's in, she spoke up first. As for the rest of you come and pick a card. The next three highest cards are in.\"\n\nI could hear people moving around the room.\n\n\"OK.\" Announced Maddie. \"Victoria, Julie, Jasmine and Mrs C. are in. I'll point to you individually when you're up.\"\n\nAre you fucking kidding me! Mrs C!!!!!\n\nI had no idea who Jasmine and Julie were.\n\n\"OK. Contestant number one, you're up. Just drop your clothes over there and you can gather them up when you're finished.\"\n\nI could hear a slight rustling and then someone gently lowered themselves onto my lap. I could feel warm butt cheeks on my upper thighs. The person felt lighter than I was expecting.\n\nI slowly bought up my hands, working from butt, to waist, to ribs and then inwards to find two tits. First reaction? No way this was either Jane or Allie, or Mrs C, for that matter. Way too small. I could however feel two eager nipples poking into my palms as I began a gentle caress.\n\nI was pretty sure this was Victoria. Either way, I was quite enjoying myself.\n\nGiven that I was sure it wasn't either Jane or Allie, I decided to have a little fun. I dropped my hands down a little, bent forward, popped a nipple into my mouth and began flicking it with my tongue.\n\n\"Whoa there, cowboy. Nobody said anything about licking,\" Maddie protested.\n\nI was quick to defend myself. \"I wasn't licking, I was tasting. You took away my sight. I have four other senses. I've finished with touch for now and working my way through taste. I still have hearing and smell to go. Anyway, stop interrupting. I only have two minutes. Actually, I think you need to add another 30 seconds, given you distracted me.\"\n\nContestant number one ended the argument by reaching a hand around the back of my head, bringing it forward and gently returning my mouth to her nipple.\n\nAfter a while I shifted my taste testing to the other nipple. Number one wasn't protesting. Far from it, she began to start sliding forward in my lap, grinding on my pouched cock which was beginning to mount a response.\n\nNext, I turned my head sideways and placed my ear over her left nipple. I could hear a thumping heart underneath.\n\n\"One minute to go.\" Announced Maddie.\n\nReally, still a whole minute? I launched a multi-pronged attack - licking and flicking one nipple while I caressed and squeezed the other. Again, the grinding and sliding was happening. My cock was well and truly on the way to an erection and was getting crushed between our two bodies.\n\n\"Ten, Nine, Eight, Seven, Six, Five, Four, Three, Two, One. Time is up.\" Maddie called out.\n\nI dropped my hands and leant back. Number one ground to a halt and let out a soft sigh.\n\nSlowly I could feel their weight lifting off of me. I could also feel my cock taking advantage of the extra space, trying to spring fully to attention, but trapped and twisted by the G-string. It felt slick and sticky with pussy juices.\n\nAs number one stepped clear I could hear a few gasps. I began to reach forward to untangle my cock. My hands were batted away.\n\n\"Uh-Uh. It's my mess, I'll clean it up.\"\n\nI was pretty sure I recognised the voice. Definitely Victoria.\n\nA hand grabbed my cock and lifted it free of the G-string.\n\n\"Lift up your butt for a sec.\"\n\nAs I did, the G-string was sliding down my legs and off.\n\n\"Ah, sorry Steph, I think this G-string is going to need a wash,\" declared Victoria. \"And so's this,\" said Victoria, wrapping a hand around my shaft.\n\nI jumped as a wet and warm mouth descended onto my cock.\n\n\"What the FUCK Victoria! What are you doing!?\" gasped Maddie.\n\nMy cock slipped out of her mouth.\n\n\"Like I said, it's my mess, I'll clean it up. Anyway, he had his two minutes. I should get two minutes as well. I'm starting with taste and touch. Smell and hearing aren't likely to get much of a look in though\".\n\n\"Allie, are you OK with this?\" asked Maddie.\n\nWas Allie going to save me?\n\n\"Well like she said, it's her mess. I'm not cleaning it up. It's a little unorthodox but the same effect really.\"\n\nThe runaway train continued, hurtling wildly down the tracks.\n\nVictoria's mouth was back on my cock. She was enjoying this and doing way more than just cleaning up. She seemed intent on swallowing me whole but couldn't quite get there. It didn't stop her trying though. She backed off and began licking my balls while pumping her fist up and down my shaft.\n\nThe audience were getting into it, giving her instructions and egging her on.\n\nThis was way longer than my two minutes, surely.\n\nEventually Maddie called an end to proceedings.\n\nI kept my hands by my side. I couldn't see my cock but I could feel it swollen and rock hard.\n\nI could hear someone whispering, \"How fucking hot was that?\"\n\n\"OK. Contestant number two. You're up.\"\n\nShortly after I felt someone lowering themselves into my lap.\n\nWhen they settled, I could feel a little more weight than last time. I lifted my hands to their butt, then found a wider set of hips. I was slowly trailing my hands up their ribs when I encountered the outward sweep of two swollen breasts. Holy crap, these were enormous. I abandoned my upwards journey and headed inwards. I slid a hand under each breast and gently lifted them up, feeling the weight in my hands. These were easily the biggest tits I'd ever laid my hands on. Again, I started upwards, finding two nipples. They weren't as large as I was anticipating. I bent forward and began sucking on one nipple, again flicking it with my tongue, while my right hand began massaging its twin.\n\nContestant number two began grinding on my cock. Then she leant back a little, reached one hand behind my head, and squashed my face into her breast. I continued my licking and flicking but, as oxygen started to become a priority, I began gently biting. This didn't get me released, instead I got a soft purr. I bit harder and got pulled in tighter.\n\nI lowered my hands and gently dug my fingers into her ribs. She released me and I took in a few quick gasps of air.\n\nMy cock was loving it. I could begin to feel a stirring in my balls.\n\nThen I was back for more. Like Victoria, I'd abandoned hearing and smell.\n\nA nagging thought started working through my brain. This was most likely Mrs C. I'd longed to get a good look at her tits. What I desperately wanted, more than anything else, was to rip off my blindfold and bask in their glory. It was frustrating the hell out of me that I couldn't. I had my face buried in one of her tits while massaging the other and I couldn't see a thing.\n\nAgain, after what seemed way too long, Maddie called time.\n\nContestant number two lifted herself off. My cock didn't need untangling but I could feel that it was desperately in need of a clean-up. If it was Mrs. C, would she do it?\n\nMaddie must have been wondering the same thing. \"If you like, I can get a wipe,\" she offered.\n\nNumber two wasn't having any of that.\n\n\"Are you kidding me? This is the most fun I've had in ages. Besides, rumour has it, around here, a good blow job gets your lawn done. Is that right?\"\n\nMrs C!\n\nHer warm mouth swallowed my cock.\n\nShe began by running her tongue and wet lips from the base of my cock all the way to the top. She stayed there for a few sloppy kisses and then worked her way back down again. After a few laps she began swallowing my balls and jerking her fist up and down my saliva lubricated shaft.\n\nNo instructions from the room this time around. Class was in session.\n\nMrs C. had one last trick. She worked her way back to the top of my cock before sliding the whole thing down the back of her throat, my balls bouncing against her chin, her nose buried in my pubic hair. She kept on bobbing up and down working my cock in the back of her throat and caressing my balls until time was up.\n\nShe released my cock with a huge gasp of air and received a smattering of applause from around the room. What a performance. No one had ever done that to me before.\n\nMy cock was quickly getting into a state where I was desperately keen to start fucking something.\n\nStill there was no let up. Contestant number three had arrived and a warm arse settled into my lap. A hand settled on each of my shoulders. I hadn't placed a hand on her and already she was grinding on my cock. This was one horny lady.\n\nI found two thighs and from there a nice butt, some flat abs, and shortly after, two firm tits. I was definitely liking these. Were they Allie's? I wasn't sure. I didn't think so. I began tweaking both nipples while I slid my tongue and nose up and down between these two beauties. Then I shifted to one side and latched onto a nipple, again flicking and teasing. I turned my head and rested my ear on a nipple to again find a racing heartbeat.\n\nNumber three was really getting into it, grinding on my cock.\n\nI was at a crossroads. I couldn't tell how much more of this I could handle. I continued to squeeze, lick, suck, twist and pinch. My cock was starting to ache and I potentially still had four more blow jobs to endure.\n\nEndure?!\n\nIt's not as if I didn't like playing with tits or getting blow jobs. Maybe one of each per day, for seven days, was a better option than seven of each in one day. Not really a problem that I had ever envisaged having. I used to envy those guys in porn videos who danced around in a room full of sex starved woman going from one blow job to the next. Right now, that seemed like a less attractive option.\n\nI kept massaging, licking and teasing number three and eventually it was time for our roles to swap. She lifted off me and enthusiastically began cleaning up. She seemed to be on a one-woman mission to make me cum and wasn't making a bad fist of it (if you'll pardon the pun). Most of my cock was in her mouth and she was gently massaging my balls and trying to reach around behind them. I slid forward in the chair, rocked back my hips a little and spread my legs to give her better access. She began tickling the area behind my balls, trying to reach even further back, while furiously bobbing her head up and down on my cock. All to no avail. Somehow, I sensed disappointment from her when Maddie indicated time was up.\n\nThere was a deathly silence in the room. Maybe I wasn't the only one who was flagging. Then again, with what was on display, perhaps the audience had their own issues to deal with. I'm sure there were quite a few well lubricated pussies in the room.\n\nNumber four bought with her confirmation of my suspicions. As soon as she lowered herself into my lap and began the now mandatory grinding on my cock she was gushing with pussy juice. As I began my task, her juices flowed over and around my balls and began trickling back towards the crack of my arse. I hadn't experienced anything like this before and found it more than a little distracting, so I made sure I was concentrating on my part of the bargain. The free-flowing pussy juice was a good indicator that this wasn't Allie. This was backed up by my detailed exploration of her tits. Don't get me wrong, they were a nice set of tits, firm and full with two seeming attentive and tender nipples, just not Allie's.\n\nNumber four was sliding effortlessly back and forward on my cock.\n\nOnce again Maddie indicated it was time to swap. Number four dismounted and knelt down between my legs. She had quite a bit of work to do.\n\nShe started with my cock and swallowed half of it before moving back to the top and swirling her tongue around the tip. Then my cock was out of her mouth as she began licking it top to bottom and all ways around. Once she moved her mouth to my balls, she began pumping her fist up and down my shaft. Next, she was behind my balls and heading still further back, pumping her fist all the while. Her hands abandoned my shaft as she lifted both of my knees up and out before licking my butt hole. This truly was a night of firsts. She kept licking and poking, briefly going back to individually suck my balls into her mouth, before giving my butt hole one last going over.\n\nMy mind briefly turned to Allie. What was she thinking? With a complete stranger's tongue wedged in my butt hole, surely this wasn't all to her liking. My fantasies were one by one being eroded, and the experience, whilst novel, was terrifyingly exhilarating.\n\nNumber four left me and shortly after, number five arrived. She came wet and ready too. As I began to explore her tits, I was taken a little aback. These tits seemed like they were almost an exact replica of number four's. I had a brief moment of panic. If number four and five were Jane and Allie, there was no way I was going to be able to tell them apart. It bought back a sharp focus as I used my fingers and tongue to explore them fully. I was sure they weren't Allie's.\n\nNumber five had undone all of number four's efforts in terms of clean-up. When the time came for her to begin, I simply moved into the same position; knees up and out and hips rolled back. I realised as soon as I'd done it, this was awfully presumptuous. Number five didn't seem to mind. She started with my butt hole and then progressively moved forward ending with her tongue and lips massaging the tip of my cock.\n\nMy balls were killing me. I'd resisted the urge to cum this far because I was pretty sure Allie was yet to have her turn. If, as expected, Allie was number six, I could release some tension. But then again maybe not. Allie's last words were going through my mind: \"The loser isn't leaving until the winner finishes their victory lap.\"\n\nIf that was the case, and Allie wanted to put on a show, then relieving the tension in my aching balls was going to have to wait.",
        "Maddie called for contestant number six to step up to the plate.\n\nA warm firm butt settled into my lap but number six wasn't grinding on me straight away. For the last time my hands began their journey -- butt, hips, waist, ribs, tits.\n\nThis was a fantastic set of tits; firm and proud, topped by two nipples hardening to my touch. I know what Allie liked in terms of having her tits worshipped. Her nipples were super sensitive and she loved having them gently squeezed and rolled between finger and thumb. I set about my work and then, after a while, slipped one nipple in my mouth while I continued to massage the other. It was when I was transferring my mouth from one nipple to the other, I first noticed the smell of cum. Someone had recently cum on these tits. Was it my cum? Were these Allie's tits? It was hard to imagine that they'd be anyone else's. To be sure I moved my ear to a nipple and pressed my nose into a firm breast and inhaled deeply. Definitely cum. Definitely Allie, I told myself.\n\nTime was up and number six began the clean-up routine. Once again, a warm hot mouth descended on my cock. Allie, if it was Allie, was giving me her second blowjob for the night. This one however was a pale comparison to what had happened earlier. Whilst she was bobbing her head up and down there was nothing happening with her tongue.\n\nThis was nothing like Allie. Was number three Allie and this Jane? The lousy blowjob would explain why Jane managed to work her way through so many guys.\n\nNumber six's mouth moved back to the top of my cock. One hand began massaging my balls while the other pumped the lower part of my shaft. Finally, I was getting some tongue action when Maddie called time.\n\nI made it!!!\n\nFiguring we were done; I began to reach up to remove the blindfold. Someone grabbed my hands.\n\nI heard Maddie's voice, \"Not just yet. No eye contact between the judge and the contestants until we have a verdict.\"\n\nI had to make a quick decision. One and two were out. Three could have been Allie but I wasn't quite convinced. Neither four or five could be Allie, too much pussy juice. Which left six. The smell of cum said yes, but the lousy blowjob said no.\n\nThree or six? I had to decide. I wasn't 100% sure either way.\n\n\"We're waiting,\" said Maddie.\n\nA weird though popped into my brain; what if a declared a dead heat between four and five?\n\nFocus!\n\nNever in my life would I ever had considered basing such an important decision on the smell of my own cum -- I was going to trust my instincts and go with number six.\n\n\"Firstly, thank you ladies, that was simply indescribable. I certainly didn't wake up this morning imagining I'd be here, doing this. I'll run through the contestants one by one.\"\n\n\"I'm pretty sure number one was Victoria as she spoke and I recognised her voice. Victoria, don't ever let anyone ever tell you size is important, you have a delicious set of tits.\"\n\n\"I'm guessing Mrs C. was second. At the risk of embarrassing myself when next we make eye contact over the fence, they felt magnificent.\"\n\n\"I have no idea who number three was, but whoever it was, they also had an outstanding set of tits.\"\n\n\"To be honest, I could not tell number four and five apart.\"\n\nFor some reason this bought about a round of giggling, like everyone was in on a secret except me.\n\n\"Were they twins?\" I asked.\n\n\"Maybe,\" said Maddie. \"Maybe it was Jane and Allie,\" she teased.\n\n\"Anyway,\" I continued, \"They were truly impressive.\"\n\n\"However, the most stunning set of tits, by a small margin, belonged to number six.\"\n\nHopefully they were Allie's.\n\nI could feel hands at my elbows, gently lifting. I stood up, more than a little conscious of a very prominent erection arching up in front of me. I couldn't be bothered trying to hide it.\n\nMaddie lifted off my blindfold and casually reached down and gave my cock a brief but firm squeeze. That was so unexpected. Rather than simply letting go, she slid her hand off the end, flicking her thumb over the tip. Her earlier, partially escaped nipple, was now in full view, along with its twin. She was proud that I could see them and she had what I'd call a \"man eater\" look in her eyes. She would have fucked me in a heartbeat.\n\nAs she stepped back, I began to take in the rest of the room and got the shock of my life. When we'd started, I was in the middle of the room and everyone was pressed back against the walls. At some point, people had been drawn in, so that now, I was much more tightly surrounded. I had assumed that once their turn was over, the \"contestants\" would once again be clothed. They weren't.\n\nStanding a few feet in front of me was Victoria, she was stark naked. The one thing I immediately noticed was how dark her nipples and areola were against the paleness of her skin. My sense of sight only enhanced my growing appreciation for her tits. She certainly wasn't being shy, her eyes locked lustfully on my cock.\n\nThis was exactly what my cock was needing. I could feel it achingly hard, thrusting up proudly in front of me.\n\n\"Andrew,\" Maddie called, \"May I formally introduce you to Jasmine and Julie. And yes, as you can see, they are twins.\" I'd never seen either of them in my life and now here they were before me, gloriously naked and giggling.\n\nAs I took in the visual majesty of their tits, I was struck by the thought that I had just felt up two complete strangers, who had both stuck their tongues in my butt, my cock in their mouths and, judging by the smiles on their faces, were completely happy, actually delighted, with that whole scenario.\n\nTotally weird.\n\nMaddie announced, \"Would contestant number six please step forward and claim her prize.\"\n\nWith that Jane began to move forward.\n\nJane!\n\nMy heart leapt out of my chest.\n\nJane!\n\nAre you fucking kidding me!\n\nJane!\n\nAllie would kill me.\n\nThe whole room must have been watching me as abject terror consumed me. The room erupted in laughter as Jane paused and then retreated.\n\nOh my god. My heart, having finished its triple summersault with pike, reluctantly settled back into a more normal rhythm.\n\nNot funny. Way not funny. These ladies had a sick sense of humour.\n\nAllie stepped in front of me, wrapped her arms around me and kissed me passionately.\n\nWhen she finally released me, I quietly asked, \"Are you sure you want to do this?\"\n\n\"Abso-fucking-lutely. I'm sick of these bitches treating me like I'm Maddie's nerdy little sister. I'm going to show them how I do my man. Look at them; they're all dying to be fucked. Sadly, for them, they're going home horny and frustrated. If there was another male in the room I wouldn't dream of it, I'd be the town slut by Monday. These bitches won't be saying anything. The only one I don't really trust is Jane and I doubt she'll be owning up to losing.\"\n\nLet the show begin!\n\nI was determined to give Allie the fuck of her life.\n\nI quickly moved the chair out of the way and gently lowered Allie to the floor. As she lay on her back, I began to kiss her. First thrusting my tongue into her mouth then slowly working my way down her neck, across her shoulder, sweeping around, over and between her breasts, continuing ever so slowly across her abs to her pussy. She began squirming as I gently began flicking her clit with my tongue. It didn't take her long to get soaking wet and I slipped two fingers inside of her as I continued licking her clit.\n\nI knew from previous experience she absolutely loved this. As I continued, I could feel her squirming and jerking as her abdominal muscles began to spasm. I glanced up to see her head arched back and both her hands clawing at her tits, squeezing them hard.\n\nAfter a few minutes I retraced my steps, sliding my tongue back across her abs, over her breasts to her mouth.\n\nI slowly rolled her on her side and slid in behind, spooning her. Knowing exactly what was coming next, Allie lifted her leg a little, grabbed my cock and impaled herself upon it. It slipped smoothly into the warm depths of her pussy. I reached around with my free hand and once again began teasing her clit while I began thrusting slowly but firmly inside her. I worked my other arm underneath her and bought my hand up and across her body to grab her breast. She twisted her head back so that I could once again thrust my tongue into her mouth, kiss her neck, and nibble her ear.\n\nThis, I knew, was her favourite. Her tongue, nipple, clit and pussy were all being worked in perfect symphony. What started with the spasming of her abs began to consume her whole body as she erupted into a series of full-blown orgasms, one rolling into the next. Her squeals of delight perfectly synchronised with the muscles in her pussy contracting around my cock in a vice like grip. She was going off like a firecracker in a room full of people without a care in the world.\n\nI knew she wanted more. She also knew what I wanted. Allie gently rolled out of our embrace onto her hands and knees. I quickly knelt behind her, in between her knees. With more than a little bit of theatre, I slid my cock back and forth between her butt cheeks giving everyone a good look. Then lowered the head of my cock, now sliding it slowly up and down between her pussy lips. Finally, I slid forward until I was once again balls deep in Allie's sopping pussy.\n\nI began a slow and steady rhythm of sliding in and out. Pulling almost all the way out before thrusting forward again; all the time gathering pace and momentum. Soon, Allie was again bucking on the end of my cock as my thighs began slapping loudly into her butt cheeks.\n\nI was getting ready to erupt. For some reason I suddenly became aware of the people in the room standing transfixed, watching us with such an intensity. Every pair of eyes in the room were locked on my cock as it slammed, time after time, into Allie's tight pussy. Allie was now squealing and spasming with every thrust.\n\nThe look in Victoria's eyes had gone from hunger to ravenous greed, the tip of her tongue slowly circling her lips. She was viciously twisting and squeezing one nipple with her other hand buried between her legs. Jane, next to her, had a fierce look upon her face, her chin thrust forward, her mouth angrily opening and closing like she was the one being fucked.\n\nI guiltily turned to look in another direction only to find a naked Mrs C. Her face flushed and her magnificent breasts gently jiggling and swaying as she panted for breath.\n\nAllie let out one enormous groan and shuddered on the end of my cock. I could sense she had reached her pinnacle and was slowly coming down the other side. Her whole body was covered in a sheen of sweat. She looked back at me over her shoulder with a very satisfied smile on her face.\n\nWhat she did next surprised me. She crawled forward, stood up and turned to face me. She held out her hands and helped me to my feet. She grabbed my cock, kissed me passionately, and leant forward to whisper in my ear.\n\n\"Now for the grand finale. Sorry about the early blowjob, I was saving it for now. I want you to cum bucket loads.\"\n\nShe sank to her knees in front of me and swallowed my cock, swirling her tongue around the tip. She reached one arm behind me, slid her hand up the inside of my thigh and began to tickle the bottom of my balls. Slowly, she began sliding her mouth up and down my cock thrusting it into the back of her throat. Her hand drifted back and began to tease my butt hole -- Allie had never done that before. A minute or two of that was more than I could handle and I was about to erupt. I moved to take my cock out of Allie's mouth but she fought firmly against me, shoving my cock once again into her mouth. Maybe she'd missed my cue. I tried again. Again, she fought it.\n\nOK, I thought. I hope this is what you want.\n\nI exploded into Allie's mouth. She immediately released me but only so far as to allow my spasming cock to pump spurt after spurt of cum in a gentle arc into her open, hungry mouth. There was a collective gasp from the room. Then once again her mouth was upon me as she continued to suck every last drop of cum out of my cock. As I looked down, I could see that she was glaring at Jane.\n\nThe look in her eyes was one of contemptuous and dismissive victory.\n\nLoved the story?\n\nExcellent!\n\nScroll down a little and click on star number 5 below.\n\nThanks.\n\nKickIt2Me."
    ],
    "authorname": "KickIt2Me",
    "tags": [
        "exhibitionist",
        "exposed",
        "kissing",
        "stripping",
        "surprise",
        "nudity",
        "twist",
        "humour",
        "lingerie",
        "denial"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/all-five-senses-2"
}