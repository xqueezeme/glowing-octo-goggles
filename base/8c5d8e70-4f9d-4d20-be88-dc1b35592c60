{
    "title": "The Apartment Cumslut Ch. 04",
    "pages": [
        "Content warning: Exhibitionism, cheating, sharing/swinging, dominance, submission, daddy play, cum play, light incest. \n\nThis is obviously not a story steeped in realism, so if you want that I'd probably go elsewhere. I would recommend reading the earlier chapters to get the gist. \n\n--------\n\nI woke up the next morning with a hangover. I had tried keeping up with Clay at the bar and I wasn't quite used to that much booze. A vague sense of shame accompanied the pain in my head. \n\nThe morning sun splashed across the bed from the tiny window near the ceiling of our bedroom. Acacia was asleep on her side, facing me, the sheet tucked around her side and bunched in her hand in such a way that only one of her two massive breasts was visible. It rose and fell gently with her slumbering breaths. Despite her partial nudity, the light hit her in such a way that she looked positively angelic. Indeed, she would have looked like the picture of innocence if I couldn't also see traces of dried semen on parts of her face and matting portions of her curly auburn hair. I couldn't say whether the cum was mine or someone else's. \n\nThe water glass on my nightstand was half empty. I sat up and drained the rest. It was just after 8:15am, so I was probably the only one awake. Without dressing I grabbed my towel and phone and walked naked across the hall to the main bathroom. I drank as much water as I could stomach, used the toilet, and then started running the shower. Once the shower warmed to an acceptable degree I stepped inside. As the jets splashed over me and the steam rose, a feeling of apprehension rose with it.\n\nMy girlfriend was a massive, filthy, unquenchable slut. There was no further use denying it, or rationalizing it, or explaining it away by pointing to unusual circumstances. I needed to come to terms with it, or put an end to it - or the relationship - altogether. Unless, of course, I could figure out a way to use it to my advantage. Right then, in the haze of a hangover shower, I couldn't quite figure out how to do any of it. \n\nThe events of the previous day floated through my brain like a fever dream. Acacia begging me in the morning to let her give my roommates blowjobs. The two texts I'd gotten during the workday, documenting one of my roommates blowing his load in her panties and the other using his to decorate my girlfriend's butthole. The end of our dinner date where Acacia admitted she'd gobbled down Nate's load and licked and fondled his knob in the process. From there the events swam even faster and more intensely. The dive bar. The tattooed older guy. Clay pulling me into the bathroom. The way Acacia delighted in wrapping her lips around his huge drooling cock. The way he mauled and fucked her exposed Double Ds without permission. Acacia's disappointed whines when I told Clay he couldn't have her pussy and ass, not to mention my own tangible twinge of regret that I didn't get to watch one or the other. Jet after jet of his white hot cum splashing on her face and tits. Clay taking pictures as I emptied my balls in the same places on my girlfriend that he just had. \n\nAs if that wasn't enough, somehow I was intoxicated and sex mad enough to force my beautiful, beloved girlfriend to leave all that man-cream on her face, exit the bar, take an Uber home, and encounter all of my roommates and one of their sisters back at the flat before I got her back to the bedroom. Then I shoved her down on the bed, hiked up her skirt, pulled aside her panties, and slid my hardness inside of her in one stroke. Given the drooling wetness of her snatch and how quickly she climaxed I knew that the humiliation of her cumwalk of shame only made my girlfriend even hotter and hornier. \n\nSomehow it did the same to me. As I'd pounded her I leaned into her degradation, calling her a slut, a whore, a skank, a bitch, a cunt... words that felt both alien and appropriate escaping my lips. Each insult I'd given her caused her more and more pleasure. She seemed to agree that she was a lowly tramp only good to serve as a cum dump for multiple men. Still, even then, her mid-fuck responses both acknowledged her depravity and sought reassurance.\n\n\"I love being used like a whore!\" she had shouted at one point, with more than enough volume for everyone else in the apartment to hear. \"Do you like it when I suck other cocks, Daddy!?!\"\n\nRelief and pleasure flashed across her face when I'd nodded and fucked her harder. \n\nShe went on to loudly describe other various debaucherous things that she either had done or wanted to do for my approval. She had described at great length how she loved giving blowjobs and swallowing cum and taking loads all over her and how she wanted to show everyone her fat tits and tight ass and wet pussy and maybe also let them fuck her there and most of all that if I wanted her to do anything with anyone all Daddy had to do was ask. The only reason I had been able to hold off from exploding inside of her during her pornographic descriptions was because I was both very drunk and had climaxed only a little while before. Still, when Acacia bellowed at the top of her lungs that she \"hoped Daddy loved fucking his slut with two loads of fresh cum on my whore face!!\" I could take it no more, burying myself to the hilt inside her cunt and filling her womb with all of my remaining seed. \n\nThen I'd passed out. \n\nMy hangover did not stop the memories from last night from giving me a raging erection. I was considering rubbing one out in the shower when the water began to cool. Like a lot of old buildings, the hot water ran out, though it usually wasn't this quick. I finished rinsing my hair and shut the water off. The clock on my phone read 8:55am. I dried off the best I could, wrapped my towel around my waist in a manner so as to constrain my hard-on, and exited the bathroom turning right toward my room.\n\nWHAM! \n\n\"Ope, sorry!\" came a female voice.\n\nI'd run smack dab into Eliana, who must have been coming from her brother Nate's room further down the hall. The impact of the collision caused my towel to slip off my waist, and it puddled on the floor. Eliana took a step back to steady herself, then looked back at me. \n\nI didn't know whether it was because I was hungover or relaxed from the shower but the fact that I was now nude before my friend's very cute and very sexy Filipina sister did not seem to phase me at all. Eliana was a little bit older than us, in her late twenties, and had a self-assurance and sense of humor that I'd always found attractive. She was wearing a baggy light blue tank top which contrasted delightfully with her cool brown skin, and tiny black shorts. They must have served as her pajamas. She had her long straight black hair pulled back into a messy bun. It wasn't unusual for her to stay the night, though she normally slept on the living room couch, not Nate's room. \n\nShe looked me up and down, her eyebrow arching neatly when she scanned past my still-stiff seven-inch cock. \"Your, uh, towel came off.\" \n\n\"Oh,\" I said. Eliana was the first woman to see me naked since I had started dating Acacia. My cock got a little harder as she looked at it more directly. We both stood there for a moment, me standing on display and her peering through her gold-rimmed glasses at my hardness the rest of my body.\n\n\"Let me get that for you,\" Eliana said, bending down on one knee to pick up the towel. She looked up at my now furiously rigid cock which was pointed right at her lovely heart-shaped face. Again, she waited a beat, eyes locked on my member like she was trying to memorize every detail. I could feel her breath brushing against the crown and just for a moment I thought she might lean in to engulf it between her pretty lips...\n\nInstead, with a giggle, she simply draped my soggy towel over the shaft of my penis like it was a hanging peg. \"There you go, Ben,\" she said standing back up and flashing me a bright happy smile. \"Good morning and happy Saturday!\" She pushed past me into the bathroom and locked the door. \n\nWithout bothering to wrap the towel back around my waist, I walked to my room and found the door slightly ajar. I did not expect the scene when I pushed it open.\n\nAcacia was awake and was no longer under the covers. Instead, she was on top of the sheet, completely nude, her legs spread apart, and both of her hands furiously frigging at her cunny.\n\n\"I, uh... Eliana saw my...,\" I started to say before she cut me off.\n\n\"Oh thank god you're here! I need someone to lick my clit right now can you do that for me please Daddy I need it sooo baaaaaad!!\"\n\nI shrugged, shed the towel and knelt down to position my head in between her creamy thighs. She moved her hands away. The second my tongue brushed the swollen nub of her clit Acacia shuddered in orgasm. She must have woken up horny as well. I kept eating her out, tasting her sweet nectar. I traced my fingers across her gushing snatch to moisten them, then plunged my index and middle fingers into her vagina. She squirmed.\n\n\"Did you wake up all excited from last night?\" I asked as I massaged her g-spot.\n\n\"Yes,\" she panted. \"And...\"\n\n\"And what?\" I asked.\n\n\"If I tell you, you have to promise not to stop doing what you're doing right now.\" \n\nI curled my finger up toward the front wall of her vagina, increasing the pressure. I looked into her eyes, and she looked back, her face flush with bliss and lust but also with a slight hint of fear. What could she be concerned about, I wondered.\n\nThen I saw it. I hadn't noticed when I walked into the room but up close it was unmistakable.\n\nIn addition to the crusts of sperm that a random stranger and I had left drying on her chin, forehead, and hair last night, I saw two or three wet ropes of pearly translucent ejaculate lashed on her cheeks, forehead, and lips. While I was in the shower someone had left a fresh load on my girlfriend's face.\n\nI dug my fingers deeper inside my little slut's cunt. \"Talk,\" I growled. Then I resumed licking her clit while she told the story.\n\nIt was Willy. He was the only other person who was likely to wake up this early. Acacia told me about how as soon as the shower water had started running there was a knock at the door, and Willy came in asking for his turn. She claimed she was too groggy to say no.\n\n\"Don't lie,\" I barked at her, my fingers twisting deeper inside. \"You didn't want to say no, did you, slut?\"\n\n\"I didn't, Daddy. I'm sorry. I wanted to make him cum.\"\n\n\"Good girl,\" I heard myself saying. \"What did you do?\"\n\n\"He was already so hard. He said he'd been thinking about me all night since he heard the nasty things I said when you were fucking me. So he pulled back the sheet and looked at me naked, telling me to spread my legs and open my ass and play with my tits for him while he jerked his dick. He asked if he could lick my pussy and I told him I didn't think so. Then he asked if he could fuck me and I said no.\"\n\nIt angered me to think of my roommates trying to push her boundaries, but I was relieved to hear that she adhered to the rules. \"And then what, Acacia? Did he just nut on your slut face?\"\n\n\"No, Daddy. Then he said that he'd heard me say that some stranger fucked my tits and he said he wanted to do that and, well, I told him he could. So he straddled me and I wrapped my juicy breasts around his hard dick and he was thrusting up into them and his dick was bouncing up against the bottom of my chin. Then he said he'd heard I sucked Nate's cock and he wanted that too.\" \n\n\"Acacia, did you give my roommate a blowjob after he titfucked you?\" I asked, my own cock on fire. \n\nShe nodded, \"I diiiiiid, Daddy. I sucked his big dick right here in this bed oh god it turned me on so much.\"\n\nI began to focus on her clit, licking and sucking and biting gently in ways I knew would drive her wild with lust. \n\nAcacia convulsed, a strong orgasm hitting her and causing her to momentarily lose her train of thought. She eventually continued. \"Then because Willy was on top of me he started facefucking me. I could tell he liked it because he started calling me names.\"\n\n\"What did he call you?\" \n\n\"Ohh, Daddy, he called me every name in the book! He said I was a tramp and a cocksucking cumwhore and he said he'd wanted to fuck my face since the moment he laid eyes on me and then right about when I thought I couldn't take it anymore he started blasting off down my throat and in my mouth and some of it even went up my nose! I thought I was going to choke so I took his cock out of my mouth and jerked the rest on my face for him. Then he took pictures and said he was going to whack off to them later.\"\n\n\"Is that all?\"\n\n\"Yes, Daddy. Then he walked out and left the door wide open and I decided to leave his cum on my face since you said you liked fucking me with another man's load on me last night. I was hoping you'd do the same once you got done with the shower but it took a while and I was horny so I started playing with myself.\" \n\n\"So you didn't push the door shut? You just left yourself naked with a load on your face for anyone to see?\"\n\n\"All the boys here have already seen me very naked and with a lot cum on my face, Daddy.\"\n\nShe had a point, everyone had seen that. However, the door had been shut almost all the way when I came into the room. Someone else must have seen her and pulled it so it was slightly ajar before I got there. Nate and Tommy were almost certainly asleep, so that left...\n\n\"Are you mad at me for giving Willy a blowjob?\" Acacia asked. She looked at me with her big bright blue eyes, her face somehow looking innocent while still obscenely caked with traces of three loads of spunk.\n\n\"No, Acacia,\" I said, as I repositioned my body so that my cock slid into her cunt. \"You can suck their dicks, so long as this pussy stays mine.\" \n\n\"This pussy will always be all yours, Ben.\" \n\nI slammed into her, riding her tight wet hole until I pulled out of her and shot my own heavy load on my slut's face as well. I took pictures of her obscenely cum-covered face and told her to go to the shower to get cleaned up. Acacia's perky large breasts bounced as she bounded out the bedroom door, naked as a jaybird, happily covered in four loads of cum.\n\n-------------------------------\n\nIt was late May in the Bay Area and by noon it was scorching hot. Like a lot of old apartments, ours had no AC or central air. This wasn't a problem most days of the year when the marine layer kept everything cool, but for the two weeks or so things heated up it was unbearable. We had large fans in every room, but the coolest place to be was the living room. That room was away from direct sunlight, had a large window that opened, and was close to the front door which could also be opened to provide air flow. The other rooms were sweltering.\n\nBy 1pm or so there was nothing to do but sit on the couch in a t-shirt and gym shorts, drinking cold beer and doing absolutely nothing. So that's what I did. I was joined by Acacia, Tommy, and Eliana. Nate and Will had decided to head to the coast to try to cool off there and maybe catch some surf. It wasn't terribly unusual for Eliana to be at the flat without her brother for so long, but it was a little strange that she didn't go with them. Eliana loved the beach and surfing, which kept her small body lithe and strong. I had more than once checked out her tight round little ass when she walked out the door in her wetsuit. \n\nShe told us that the reason she wanted to stay home was to watch basketball. It was plausible, as there was a playoff game between the Lakers and Portland, and Eliana and Nate were originally from LA. Tommy also liked hoops and apparently hated the Lakers so he rooted for the Blazers. Acacia and I could frankly care less, but it was something to do that didn't cost any money or involve us going out in the hot sun.\n\nThe heat only got worse as the day went on. Acacia and I alternated between cold beer and ice water. Eliana got pretty animated watching the game, especially since the Lakers were winning pretty comfortably. Occasionally she would jump up from her seat and clap, her baggy tank top making it very clear that she wasn't wearing a bra, as her small but perky tits bounced around freely in their loose confines. One time, after celebrating a particularly good dunk, Eliana caught me checking her out. She winked at me knowingly and adjusted her tank. I winked back. Why should I care if she saw me checking out her breasts after she got more than an eyeful of my erection? I was also pretty sure she had seen my girlfriend masturbating. Who knows, maybe she'd seen more. Either way there was no harm in me looking at a sexy piece of ass like Eliana.\n\nThe game ended and Tommy went to get a beer for himself and anyone else who wanted one, which meant everyone. By now the weather app on my phone said it was 92 degrees outside. It felt like worse. We sat and sipped our cold beers and sweated in our seats. \n\nTommy, who was a bigger dude, was the first to crack. \"I'm sorry y'all, I gotta take my shirt off. Sorry you gotta deal with my manboobs.\" He peeled off his tee and set it aside. \n\n\"Nonsense,\" said Eliana, slapping him on the knee. \"You look good.\"\n\n\"Yeah,\" agreed Acacia. \"You look good without your shirt and... uh... whatnot.\"\n\nShe looked at me, embarrassed, almost having admitted to having seen Tommy's junk. Tommy laughed. He wasn't obese, he was just a big man bear. Knowing my girlfriend's diverse taste in lovers, it didn't surprise me that she thought he looked good naked.\n\nEliana was having none of the bullshit and wheeled on Acacia. \"Do you mean Tom has a nice dick? You've seen it, right?\"\n\nAcacia looked at me for guidance as to how to answer. I shrugged. \"Uh, yeah, I have,\" she answered.\n\n\"And is it nice?\" Eliana pressed on. Tommy's face turned red and he laughed nervously.\n\n\"Yeah! It looks pretty thick and wide.\"\n\nTommy looked at me sheepishly. I rolled my eyes and took another swig of beer. It was ridiculous pretending that Acacia hadn't seen my roommates naked.\n\n\"You have the right idea, Tom,\" said Acacia, as she whipped off her own tank top, freeing her huge bouncy tits and perfect pink nipples. \"Besides, everyone here has seen my tits anyway.\" She used the tank top to wipe sweat out from her underboobs. Then she balled it up and threw it across the room, hitting Tommy in the face. Everyone laughed. \n\nIt was a little uncomfortable sitting around with my girlfriend's tits out for all to see, but she was right. Everyone had seen them. Besides, it WAS sweltering inside. I took off my own shirt and plopped it down on the table. I wasn't super cut or anything, but I wasn't shy about showing off my chest and shoulders, which I thought were my best features. The air on my skin felt good.\n\nWe all sat there for a moment without saying a word, but all of us were thinking the same thing. Here were four people sitting around in the oppressive heat, and three of them had just taken their shirts off. Would Eliana be the fourth?\n\nI looked at her. She cocked her eyebrow at me in the same way she had when she looked at my hard penis that morning. I cocked my eyebrow in return. \n\n\"Fine, you guys win,\" she said. \"Just don't tell Nate.\" She grabbed her tank at the hem and pulled it over her head, releasing her tits and causing her small brown nipples that looked like chocolate kisses to come into full view for everyone. Acacia cheered and gave her a high five. \n\n\"Hell yeah titties!\" said Tommy and toasted me with his beer. I toasted back. We all finished our beers, making more small talk along the way before we got another round. The heat and the alcohol and the nudity were taking their toll on all of us. \n\nAcacia was the first to decide to push the envelope. \"Yep, still sweaty,\" she declared as she popped up from the couch and peeled off her shorts. She wasn't wearing any underwear and we were all treated to a view of her light brown pubic hair cut into a neat landing strip, as well as her beautiful round ass and wide hips.",
        "\"You are so bad,\" I said to her, playfully slapping her on the backside. \n\n\"What? Absolutely everyone here has seen me very, very naked.\"\n\n\"Up close, even!\" agreed Tommy, who immediately looked sheepish. \n\nEliana seized on Tom's comment. \"Oh yeah that's right isn't it? You get to see her as naked as you want once a day per the 'Apartment Cumslut' rules, don't you?\"\n\nTom nodded, his face flushing again.\n\n\"Yeah, my brother told me all about those,\" continued Eliana. \"Fascinating.\" She looked at me again. I looked back at her, and this time I decided to give her the same appreciative downward scan she gave me earlier. Her handful-sized breasts were quite lovely. My cock stirred in my shorts. \"I don't think I can imagine being used by four horny boys all the time,\" she said as my eyes once again met hers.\n\n\"Oh, it's not so bad!\" said Acacia. \"I don't mind at all.\" \n\n\"And what do these boys do to you?\" she asked.\n\nAcacia shuffled in her seat and moaned lightly. I knew she was probably rubbing her pussy against the soft fabric of the couch. \"Whatever they want,\" she replied. Then, as if she remembered me sitting next to her, she added \"as long as it's within the rules, of course.\" As she spoke, Acacia put her hand on my thigh a mere inch from my swelling cock.\n\n\"What, pray tell, are the rules?\" Eliana asked. Tommy, growing visibly uncomfortable, chugged the rest of his beer and asked if anyone wanted another. We all shook our heads, but he got up to get one anyway.\n\n\"Well,\" Acacia answered, \"the rules used to be that they could cum on my tits, but then we changed them that they could cum on my face too.\"\n\n\"Do you like that?\" Eliana asked, somewhat incredulously. \"When they cum on you like that?\"\n\n\"Uhhhh yeah I really do,\" she replied. She was squirming again. I could tell this conversation excited her, probably because it touched on her humiliation fetish. \n\nEliana seemed to pick up on it too. \"Why do you like being used as a cum target, Acacia?\"\n\n\"I just love getting men off, seeing them get excited, seeing them jerk off in front of me while they're looking at me naked. I also really like cum, and feeling it on my face or tits or ass or anywhere. Especially on my face. It feels so good to be marked like that. Like a slut. It's... super fucking hot.\"\n\n\"Huh, that's interesting.\"\n\n\"Have you tried it? Letting someone cum on your face?\" Acacia asked, squirming even more. Her hand had traveled up toward my crotch and was now gently stroking my penis through my shorts.\n\nNow it was Eliana's turn to be a little uncomfortable. She looked at me, looked at Acacia, and shook her head. \"No. On my tits a few times,\" she said as her right hand idly traced a line across both of her hard nipples. \"But not on my face.\" She arched her eyebrow again. \"Not yet.\" \n\n\"Do you like how cum tastes?\" asked Acacia.\n\n\"Yes, I do,\" came the answer. \"I looooove how cum tastes. Can't get enough of it, in fact.\"\n\n\"Well that's a start! What else do you want to know?!? This is fun!\" exclaimed Acacia. She squeezed my cock again. \n\nEliana turned her attention to me now. \"Doesn't this bother you? Your friends using your girlfriend to get off?\" \n\nIn truth on some level it did bother me, but I also knew that it also turned me on, a lot. So, lacking a good way to explain how I felt about it, I decided to put on a veneer of cool detachment. I shrugged and did my best to sound as unconcerned as possible. \"Whatever works, you know?\"\n\nEliana laughed and winked at me. \"Sure,\" she said. I couldn't tell if the wink was supposed to be sarcastic or knowing. She turned her attention back to my girlfriend. \"Has my brother cum on your face?\"\n\n\"Yep!\"\n\n\"What about Willy?\"\n\n\"Sure has, a couple of times.\"\n\n\"Even Tommy?\" Eliana gestured with her hand towards the kitchen. He still wasn't back yet.\n\n\"Ohhh yeah!\" said Acacia. She leaned in a bit \"Though THAT one is more of an ass guy, if you know what I mean.\" \n\nEliana laughed. \"Yes I do! I respect that. So that's all they can do, is jerk off on you?\"\n\nAcacia looked at me for permission to explain more. I nodded. She squeezed my cock in response. \n\n\"Well, yesterday I might have accidentally sort of sucked your brother's cock and then this morning I let Will fuck my tits and face and anyway they can do more but they just can't fuck me.\" \n\nEliana cackled with laughter. \"Oh those boys, always pushing boundaries! So does that mean you haven't even touched Tommy's dick yet?\"\n\nAs she asked, Tommy re-entered the room, heard Eliana's question, and stopped cold. \"Uhhhh, what?\" he asked. \n\n\"Nope! Sure haven't,\" answered Acacia who was now grinding her naked pussy against the couch. I wondered if her leaking cunt juices would leave a stain. \"Tommy I can touch your dick if you want me to now!\" \n\n\"Oh. Wow,\" he responded, dumbstruck. \n\n\"Has Tommy had his turn with you yet today?\" asked Eliana.\n\n\"He hasn't!\" replied Acacia. \"Do you want it now?\" she asked Tom, a hint of hope in her voice.\n\nI could tell Tommy did not know what to say. He looked at me for guidance. Once again, I tried to play it as cool as possible, despite the bizarre scene that was happening. Tommy looked at me, then looked at the two beers in his hands, and then looked at Acacia and shrugged. \n\nEliana stood up and walked over to Tommy, her pretty brown tits bouncing ever-so-slightly as she walked. She took both beers from his big hands. \"Tommy, it's your turn with the Apartment Cumslut for the day. Why don't you take your shorts off and go sit next to her so she can play with that big thick dick I've been wanting to see?\" \n\n\"Uhhh Okay.\" Tommy slid off his shorts, his wang flopping into view. It was not hard, but like the rest of him it was pretty thick. Eliana handed me one of the beers and patted the couch on the other side of Acacia as if to say to Tommy to sit there. He complied, plopping down next to my girlfriend, a little cramped between the arm of the couch and Acacia's thigh. I scooted over to the right to give Acacia and Tom more room, but Acacia's hand never moved from my shorts-covered crotch. The extra room suited both of my couchmates nicely. Eliana reclined on the love-seat on the other side of the room.\n\nAcacia looked at Tom. \"Can I touch your dick?\" she asked. Tom looked past me to make sure I wouldn't say no. I didn't. He nodded at my girlfriend, and she reached with her left hand to encircle his wide member. I watched as she started jerking him and he started to get harder. I was getting harder too. The strain against my shorts became somewhat uncomfortable as I watched my girlfriend give my roommate a handjob. Tom reached his left hand across his body to fondle her breasts for the first time. It was strange to watch in person, and I knew I should feel somewhat uncomfortable. However, for whatever reason, the fact that I was right next to Acacia while she was touching another cock, plus the presence of a half-naked Eliana in the room made it feel less strange. \n\n\"Fuck that's hot,\" said Eliana as she watched my girlfriend pump her fist down on my big friend's member, her chest beginning to flush. Tommy groaned in appreciation. His cock was at full hardness now, and seemed not quite as long as mine but was thick as a beer can, with an uncircumcised head. \n\nAcacia's right hand had never left my crotch. She turned to me with a glint in her eye. \"Do you want to take your shorts off too? I'm sure Eliana wouldn't mind seeing what you got under here.\"\n\n\"Oh I've seen it,\" Eliana quipped. \n\nNow it was Acacia's turn to be surprised. \"Oh? When??\" she asked the other naked girl in the room.\n\n\"This morning. His towel fell off coming out of the bathroom. I think it was mostly an accident,\" Eliana winked at me again. \"But I liked what I saw. You're a very lucky girl, Acacia.\"\n\n\"Ohhh, that's sexy, you should have told me, Daddy,\" said Acacia. \n\n\"I get to have my secrets too,\" I said with a shrug. Then I stood up and slipped out of my shorts, all seven inches of my johnson springing free. My eyes never left Eliana's, who gently licked her lips, making it clear that she enjoyed getting a second look at what I had between my legs. I sat back down on the couch next to Acacia. She grasped my shaft and began working it up and down with her right hand in time with how she worked Tom's with her left. \n\n\"Oh my gooood, this is fun!\" exclaimed Acacia as she ground her pussy into the couch. \"I never thought I'd ever be giving two handjobs at the same time!!\" \n\n\"It's incredibly sexy,\" agreed Eliana. \"You should see yourself.\" \n\n\"Ohh, can you take a picture?\" replied Acacia as she worked both of our cocks. Eliana pulled out her phone and started taking snaps of my girlfriend acting as slutty as she ever had, naked, proudly smiling at the camera, with a fat hard cock in each hand. \n\nAfter a good set of photos were taken, Tom spoke up. \"So, um, this is great but did I hear something about how I can get blowjobs now?\"\n\nInstinctively, I shot him a dirty look. \"C'mon, man.\"\n\n\"Hey man no offense I'm just saying you can do whatever you want to her and if she's sucking everyone else off I want a piece of that too.\" \n\n\"He's right, Ben,\" said Acacia as she squeezed my dick. \"It's only fair. Tommy, I'd love to get this big thing in my mouth. I just don't think I can do it while we're all cramped on the couch so maybe we should go back to my room and I'll get down on my knees and...\"\n\n\"I have a better idea!\" Eliana cut her off. \"Why don't you do it out here where it's relatively cooler? And, if you don't mind, Ben can come here and sit next to me and I'll continue what you've started over there.\"\n\n\"Ohhhh that is a GREAT idea!\" said Acacia. \"I don't mind at all, as long as Ben's OK with it? Are you OK if I suck Tommy's cock while Eliana gives you a handjob? I think that would be really hot.\"\n\nMy mind spun. Between the heat and the booze and the nudity and the rapidly-changing situation, I really wasn't sure what to do. On the one hand, I wasn't sure I really wanted to be in the room while my friend facefucked my girlfriend. On the other, Eliana was really hot and I would love to mess around with her. Would she actually try to get me off? Would I be able to handle it if Tommy tried to take liberties? What if Eliana wanted to do more? What if Acacia wanted to do more? Everyone was looking at me. I took a swig of my now lukewarm beer, and set it down on the end table, took a big breath, and said \"OK.\"\n\nI walked over to the loveseat and sat next to Eliana. She ran a hand across my chest, and I ran a hand across hers, pinching a nipple. She moaned. I felt her hand trace down my cock and fondle my swollen balls. She was so beautiful and our faces were so close to each other. I leaned in to kiss her and was about to start pulling down her shorts when she put a finger on my lips to stop me. \"Not yet, Tiger,\" she said. Then she pushed my chin so that I was looking at Acacia and Tommy on the adjacent couch. \"I just want to jerk off this beautiful hard cock while you watch your slut girlfriend get used.\" Then I felt her hand circle my hardness and begin to stroke.\n\nMy focus returned to the pornographic scene on the other couch. Tommy was still sitting on the couch but now Acacia was on her knees between his legs, her head bobbing up and down on his shaft. Acacia's back was towards us, her ass in the air, giving both Eliana and me a perfect view of her cunt and winking asshole. One of Acacia's hands was playing with her clit. While we couldn't see through the tangle of Acacia's lengthy brown curls, her other hand was undoubtedly circling the base of Tom's shaft. Tommy's face wore a look of bliss.\n\n\"Do you like watching your girlfriend on her knees?\" whispered Eliana in my ear as her tiny hand danced around my drooling penis.\n\n\"Yes,\" I whispered back.\n\n\"Do you think he's going to cum in her mouth or on her tits or maybe... on her face?\"\n\n\"I'm not sure,\" I replied. \"Do you want to see it on her face?\"\n\n\"Maybe,\" she said, her breath quickening. \"I've never seen anyone get a facial and I'm... curious.\" She pumped harder. Tommy groaned again. Acacia began to pick up speed.\n\n\"I don't know,\" I whispered again to Eliana. \"I know Tommy really likes her ass so maybe he'll want to do it there.\"\n\n\"I don't blame him,\" she replied. \"I like her ass too. Look at that thing, it's so big and round and her butthole looks so cute and pretty and tight. Do you ever... fuck her there?\"\n\nI nodded. Eliana groaned and pumped harder. I reached behind her and cupped her beautiful ass through her tiny shorts. Across the room, Acacia was pulling out all of her blowjob tricks, licking the shaft up and down, moaning on the dick, slapping her face with it, the works. I watched as she knelt up and took both of her pendulous breasts in each hand, wrapping them both around Tom's cock so he could titfuck her. As he thrust up into my girlfriend's huge breasts, a typical stream of profanities came from her slutty mouth. \"Fuck my big titties, Tommy! It feels so good to have them fucked by something so thick. Fuck them until you shoot your cream all over me! I can't wait to taste your yummy cum!\"\n\nTom picked up the pace, but his face seemed apprehensive. I wasn't sure if he was going to get off this way. He finally spoke up. \"This is awesome but since you can give me head now, can I... uh, can I lick your asshole?\" \n\n\"Of course you can lick my ass!\" said Acacia. \"I love it when boys do that. As long as Ben doesn't mind. You don't mind if Tommy plays with my butt a bit, do you?\" \n\nThe thought didn't occur to me until right now that any of them would want to do that. I was about to say that seemed like maybe a bridge too far when Eliana stopped her handjob and whispered forcefully in my ear. \"Say that's fine right now or I stop touching you.\"\n\nI was confused as to why it was so important to her, let alone why Tommy would want to do that, but I did not want Eliana to stop playing with my cock. It was also annoying that I felt like I'd lost control of the situation. Still, my general horniness prevailed. \"It's fine, I guess.\"\n\n\"Good, I want to see this.\" \n\nAcacia squealed in glee and got down on the floor on all fours, her head facing Eliana and I. Tommy got off the couch and knelt behind her. He took each of her jiggly butt cheeks on his hands and squeezed, a look of sheer delight and lust over taking him. I knew Tom was an ass man, but I had no idea how much. Eliana resumed her handjob as Tommy spanked and slapped her butt, spreading her apart so that he could look closely at her puckered hole, and then with a tiny groan of anticipation, he dove in, shoving his face in her opened asscrack. \n\nAcacia's eyes rolled back in her head in pleasure. \"Ughhhhh that feels so good,\" she moaned as my roommate rimmed my girlfriend. She looked up at us. \"Oh god, it's also so hot watching my Daddy get a handjob while I get my ass eaten.\" \n\nWatching the contortions of her face was incredibly erotic. She was playing with pussy while Tommy licked her anus, clearly enjoying this. Then her eyes widened and a look of surprise crossed her face.\n\n\"Oh. My. God. Daddy. His tongue is all the way in my butthole!! He's fucking me with it!!\" \n\nMy cock started to leak precum as I watched Tommy furiously jerking his cock while he tonguefucked my girlfriend in the ass. It seemed like he was pounding her with it and she was pushing back with every thrust.\n\nAcacia's breath quickened. \"DADDY THIS FEELS SO GOOD IS IT OK IF I CUM PLEASE SAY YES BECAUSE I AM REALLY CLOSE.\" \n\n\"You should say yes,\" Eliana hissed in my ear.\n\n\"Ye-\"\n\n\"I AM CUMMING DADDY!! UGGGNHHHHHNNN!\" exclaimed Acacia as a wave of climaxes overtook her, her body convulsing and pushing back even farther against Tommy's face. This was too much for my roommate, as he stood up behind her and aimed his angry tool at Acacia before grunting and shooting several ropes of frothy jizz across her backside and into the crevice of her asshole. He collapsed, sweating and naked, on the couch. \n\n\"Uhggghhh that's so fucking sexy,\" said Eliana as she squeezed my cock. I was really close to cumming myself. \"Though I did want to see a facial. Still, I can't stand to see any of that delicious cum go to waste!!\" \n\nEliana stopped my handjob and got up from the couch and announced \"Acacia, I'm going to lick your ass now.\" And with that she plopped down on her knees right where Tommy had been and began licking up the copious deposits of semen all over my girlfriend's ass. I was stunned. Not only did Eliana stop my handjob when I was about to get off, but now she was gobbling up another man's spunk, one hand jammed down her shorts while she diddled herself. When she said she loved the taste of cum earlier, I had no idea how true that was.\n\n\"You look lonely, Daddy,\" said Acacia noticing my over-aroused state. \"Do you want to blow your load on my face while Eliana licks my ass?\"\n\nI looked at my girlfriend on all fours, grinding her ass against the face of a bespectacled and beautiful half naked Filipina girl, who was clearly interested in nothing more than consuming as much semen as possible. Acacia was so sweet to offer her face as a cum target, as she had done for so many other people. But something else came over me at that moment. I couldn't say what it was, but deep down I knew what I had to do. \n\n\"Thank you, Acacia,\" I said. \"You're such a good girl. But I have other ideas.\"\n\nI stood up and strode towards Acacia's rear end, my right hand pumping my throbbing pole. I grabbed a shock of Eliana's straight black hair with my left hand and pulled her face off my girlfriend's ass, her lips and chin smeared with Tom's ejaculate. \n\nEliana looked up at me with a flicker of recognition. \"You wanted to see a facial?\" I said, not waiting for permission. \"Now take one, you fucking slut.\" \n\nI exploded on Eliana's face, shooting my first volley of cream across her face and on her glasses. She groaned with pleasure and opened her mouth and stuck out her tongue in time for the second rope to lash across her teeth and lips. The third pooled on her cheek. Then, I turned and aimed the rest of my load at my girlfriend's asshole, mixing my cum with Tommy's. When I was done ejaculating and without letting go of her hair, I grabbed my phone from the coffee table with my right hand and took a few pictures of Eliana's de-virginized face, painted liberally with my semen. She smiled back at me, somewhat defiant but still in a state of erotic bliss after receiving her very first facial, and with an audience no ness. \n\nI let go of her hair and Tommy and I watched as Eliana returned to the business of eating all the cum she could from her face and Acacia's ass. \"Save some for me!\" said Acacia, who let my roommate's sister take a few more licks off her buttocks and anus before spinning around and locking lips with Eliana in a spermy kiss. As their breasts pressed together and they embraced in sweaty, cum-covered passion, despite my recent emission I felt another stirring in my loins. If they went on like this I was sure both Tommy and I might be up for round two.\n\nIt was right then when we heard a car door shut and voices outside. \"Oh shit that's my brother!\" said Eliana. \"Gotta go!\" \n\nShe grabbed her tank top bunched up on the floor and dashed out of the room. Tommy, Acacia and I followed, getting into our respective bedrooms just in time for Willy and Nate to burst through the front door with Nate bellowing \"Yo what's good???\"\n\nWe did not answer.\n\n--------------------------------------\n\nIt was midafternoon when Acacia and I passed out due to some combination of the heat, alcohol, and sex. I woke up at about 9:30 to an empty bed and a grumbling in my stomach. The portable fan in my bedroom was still going full blast but the temperature had moderated significantly. I threw on a shirt and some shorts and went to the kitchen to find some food. If memory served, I still had a half-eaten burrito from the other day in the fridge. ",
        "I found the burrito and scarfed it down over the sink, then sank a glass of water to quench my thirst. Acacia was not in the kitchen or the dining room. I peeked my head around the corner to the living room and found Willy and Tommy playing video games and Eliana fiddling with her phone. I noticed she had changed clothes and freshened up. I wondered if Tommy had told Will or Nate about Eliana's toplessness, or the handjob, or the facial. \n\nI popped another beer and stood in the living room doorway wondering where my girlfriend was. It wasn't terribly unusual for Acacia to pop down to the corner store to get an ice cream or something, but she'd usually text me to let me know. I had nothing on my phone. I was about to ask my roommates when I heard something that answered my questions. \n\n\"Oooohhhhhhhhh yeah OHHHHHHH\"\n\nIt was Acacia's voice, unmistakably. She was also certainly in the throes of passion. There was also no doubt, given who was in the living room and who was not, that she was currently being used by Nate. I caught a sideways glance from Will and Tom as Acacia's moans wafted through the thin walls of the flat again. Not wanting to be a part of their awkward stares, I slinked out of the living room and walked through the kitchen. Down the hall to the right I could see two doors. My room was the near door, and it was shut. The far door, down the hall, was Nate's. Nate's door was closed. \n\nAcacia moaned again. My heart sank to my stomach. This was humiliating. \n\nI didn't know what to do. Part of me wanted to burst into Nate's room and kick his ass! God knows what he was doing to her in there, and whether he was respecting our rules. I was also jealous of Nate on some level. He was a little taller, better looking, and more successful with women generally. I also knew from the pictures Acacia had sent me that his cock was bigger than mine. He didn't NEED to use my girlfriend as a cum dump, he could get pretty much any girl he wanted! And yet here he was on a Saturday night getting his rocks off with my lady. If he was fucking her to make her moan like that, it was my right to know so I could put a stop to it as breaking the rules. In fact, I should really just put a stop to this whole crazy situation. Yes, that was what I needed to do, end this whole Apartment Cumslut thing. I confidently strode towards Nate's door and was about to fling it open...\n\n\"Yes, yes lick my big titties Nate!\" I heard Acacia cry. I paused. If he was just licking her breasts that was specifically in bounds. I mean, both Willy and Tommy had done the same, right? Or had they just touched Acacia's tits and also fucked them? I couldn't remember, but it seemed like if titfucking was on the table then tit-licking should be too. Right??? My head spun and I froze outside of Nate's room. \n\nI spent what felt like an eternity outside his door, trying to decide what to do, and listening intently at Acacia's sounds of pleasure trying to determine what was happening. My heart was pounding and my dick was stiffening. I was like a stone, in multiple respects.\n\nAfter what felt like hours but must have been minutes I heard a soft feminine voice to my left. \"Hey Ben, come here.\"\n\nIt was Eliana, standing at the entrance to the door to my bedroom. She was still wearing the same shorts but had traded her baggy blue tank top with a grey SJSU vee-neck tee. Her neck craned into my room as if to beckon me to follow her. Then she disappeared inside my room, leaving the door ajar. Walking away from another of my girlfriend's gasps of ecstasy, I followed her into my bedroom and shut the door.\n\n\"Hey,\" she said, standing near the bed. \n\n\"Hey,\" I replied standing near the closed door. \n\n\"Suck my fucking dick you dirty fucking whore\" said Nate to my girlfriend through the paper thin walls separating our bedrooms. \n\n\"Yes sir!\" said Acacia in response. She didn't say anything else, for what I assumed were obvious reasons. \n\n\"If this is about what happened earlier, I'm sorry I came on your face without asking first,\" I said. \"You just left me hanging and I got overexcited.\" I was whispering low enough that they might not be able to hear. It's also possible that they didn't care.\n\n\"It's OK, I didn't mind,\" she said in the same tone. \"I kinda liked it. It actually turned me on a lot.\"\n\n\"Oh, great.\" \n\n\"Yeah, I'm still sort of buzzing a bit,\" said Eliana, as we listened to Acacia gag on her brother's cock. \n\n\"Buzzing?\"\n\n\"I'm horny.\" \n\n\"OK,\" I said, not knowing what to say.\n\n\"I want you to help me get off,\" said Eliana, even quieter than before.\n\n\"And how exactly do you want me to do that?\" I responded in the same tone.\n\n\"Fuck you are such a good cocksucker, Acacia! Don't forget to lick my balls... Ohhh yeah just like that. Ugh lick my taint too, bitch.\" \n\n\"Mmmfhfhfhh,\" Acacia replied, her mouth stuffed with dick and balls and taint.\n\n\"Do you want me to go down on you or something?\" I asked. \n\n\"No, look. There's only two ways I can get off. The first is if I have my very special specific vibrator, which is back in my apartment in Santa Cruz...\" \n\n\"And the second?\"\n\nEliana took a deep breath. I wasn't used to seeing her seem uncomfortable, she always seemed so self-assured. Whatever this was, it seemed to embarrass her. \n\n\"The second is if I have a dick in my ass. Specifically a big one. Specifically one like yours.\" \n\n\"You... want me to just put my dick in your ass?\" I asked, dumbfounded.\n\n\"No, genius, do I have to spell this out for you? I want you to fuck my tight little butthole, as hard as you can, until I get off. Then you can get off too. Got it?\" \n\n\"UGGGHHHH I CAN'T BELIEVE YOU CAN DEEP THROAT MY WHOLE COCK YOU GODDAMNED SLUT\"  said Nate as he facefucked my girlfriend in the next room.\n\n\"I'm not sure,\" I said. \"Why are you asking me?\"\n\n\"You really aren't that bright, are you?\"\n\n\"Fuck you,\" I said turning towards the door.\n\n\"No fuck YOU!\" she retorted in a voice loud enough so that they'd hear us in the next room over.\n\n\"FUCK, YOUR MOUTH FEELS AMAZING, YOU CUNT,\"  said Nate.\n\n\"Listen, Ben,\" said Eliana. \"I like you. I think you're cute. I can see that you like me, given that you blew your wad all over my face a few hours ago. I also REALLY like your cock, which is pretty much the perfect size for anal sex. I don't want to ask Tommy because he's so thick he might kill me and Will has the opposite problem. You also said you like to do it, and I am so horny that I could mount a telephone pole right now.\"\n\n\"Yeah but...\" \n\n\"But what? My brother is balls deep in your girlfriend's throat right fucking now. In a manner of minutes he'll either be busting his nut on her or pounding her pussy like her life depended on it. Meanwhile you're sitting here with your dick in your hand not sure if you want to enjoy yourself and sink your dick into my very tight and very hungry little asshole, or pout in your room like a chump while your girl gets used the next room over. I honestly don't understand what your hesitation is.\"\n\n\"My hesitation is that... It's not in the rules!\" I said with a confidence that surprised even me. \"Acacia and I have hard and fast agreements that do not waiver, and we haven't discussed whether -as much as I might want to- it's OK for me to fuck you in the ass.\"\n\n\"You've GOT to be fucking kidding me with this rules bullshit.\"\n\n\"The rules are REAL, Eliana. That's why she was asking me whether it was OK if Tommy could lick her butthole earlier! Because she needed to know whether that was OK! That's also why, contrary to what you assumed earlier, I know for a FACT that Nate WON'T be touching Acacia's pussy tonight! I told her specifically that her pussy was mine and that everyone else was hands off. And she would NEVER break that rule. Got it?!\"\n\n\"SPREAD YOUR LEGS SO I CAN LICK YOUR SNATCH BEFORE I NUT ON YOU, WHORE!\"  bellowed Nate.\n\n\"MMMMM YES TONGUE-FUCK MY BOX AND MAKE ME CREAM ALL OVER YOU NATE!\" my beloved girlfriend replied. \n\nEliana looked at me through her gold-rimmed glasses and crooked her eyebrow. She had me. She was right. As Acacia's pre-orgasmic moans rattled through the apartment I walked over to the nightstand by the bed and took out the bottle of lube. Eliana smiled broadly, pulled down her pants, bent over the bed, and presented me with her gorgeous brown asshole and nearly hairless pussy. Her ass was everything I'd imagined, tight, firm, round, and juicy. I could not wait to get inside of it.\n\n\"I don't have condoms,\" I said.\n\n\"Don't care, I want it raw,\" she replied. \n\nI pulled down my shorts and started smearing my rod with the cool lubricant.\n\n\"Don't worry about warming me up, Ben,\" said Eliana as she wiggled her tight little behind in my direction and reached beneath her to start gently rolling her clit with her fingers. \"Just lube up and shove that monster right in. I can take it.\" \n\nI hadn't even kissed this girl and here I was about to go balls deep in her tightest hole. Still, when the head of my cock pushed past her anal ring the feeling was incredible. Eliana pushed back on me and soon I was all the way inside of her. I started fucking her and she moaned, softly at first, but gradually louder. I could tell that this was genuinely pleasurable for her. Eliana came the first time within a minute, but I continued to hammer away at her backdoor. Soon, she was climaxing at fairly regular intervals, spraying girlcum like a geyser across my thighs every time. I had heard that some girls out there were buttsluts and I didn't really believe it, but it seemed like Eliana fit the bill to a tee. \n\nIt got to the point that I almost didn't care about what was going on with Nate. Sure, maybe he was playing with my girlfriend's twat and maybe he was going to fuck her but here I was buried to the hilt in his sister's ass! \n\nWhile Eliana's orgasms were constant but relatively quiet, Acacia's the next room over built like a tidal wave and came out all at once. \"I'M CUMMING FUCK LICK MY CLIT AND FINGER MY HOLES THANK YOU THANK YOU I AM CUMMMMIIIINNNNNGGGG!!\"  she screamed as Nate gave my girlfriend a tremendous climax. \n\n\"MY TURN, SLUT. LAY DOWN AND LET ME FUCK THOSE FAT TITS AND JIZZ ALL OVER YOUR WHORE FACE!\" \n\nI fucked Nate's sisters asshole even harder, pulling her hair and driving deeper and deeper into her bowels. Eliana groaned as I pounded into her. If he was going to treat my girlfriend like a cum dump, I was going to do the same to his sister. \n\nI got so into slamming Eliana's butt and getting her off that I apparently lost track of time and what was going on in the next room. Because before I knew it I heard a soft voice behind me. \n\n\"What's going on here?\" It was Acacia. I turned to look at her without removing my cock from Eliana's asshole. She did not look upset, she looked inquisitive and a little turned on. She was also naked and her face and hair was absolutely covered in pearly white cum. \n\nEliana spoke first. \"Ben was being kind enough to help me get off while you were busy. Hope you don't mind!\"\n\n\"Not at all!\" said Acacia. \"My Daddy can do whatever he wants! Is he in your pussy?\"\n\n\"No,\" I interjected. \"That would be against the rules. Right?\"\n\n\"Riiight,\" nodded Acacia. A drop of cum fell off her chin and splattered on her right breast. \"Can't fuck a pussy, got it.\" \n\n\"He's in my asshole, and he feels really good there. I'm a buttslut, and he's made me cum like a dozen times already,\" said Eliana as I continued to thrust in and out of her tightest hole. \n\n\"He DOES feel really good there. I like feeling him in my butt!\" said Acacia as she walked over to the other side of the bed. \n\nIt was the first time Eliana had gotten a good look at the splattering which adorned Acacia's face. She groaned. \"Uggghhhh is that what I think it is all over you?\" \n\n\"Yeah, Nate wanted to give me a facial, and he really blasted me. Even got some up my nose and in my hair. Then he left to go to the bars. I was gonna take a picture of the damage but figured Daddy might want to see it in person instead.\" \n\nI fucked Eliana harder. I did like seeing Acacia covered in cum, even if it wasn't mine. It was sexy.\n\n\"How does it taste?\" asked Eliana. I could tell another orgasm was building inside of her. This was really turning her on.\n\n\"Super yummy!\" replied Acacia, as her tongue flicked out to snare a glob of semen from her chin. \n\nNow it was Eliana's turn to stammer. \"Can I... um... I just want... if you don't mind... and won't tell anyone... while he's in my ass... I just... would love... \" Given how lucid she had been previously I didn't think it was due to the rigorous buttfucking I was giving her.\n\n\"Speak in complete sentences, slut, or I'm going to take my dick out of your ass!\" I said.\n\n\"Can I eat some of the cum on your face?\" Eliana asked.\n\nMy cock was stone hard in her asshole now. I stopped thrusting. \"Are you telling us that you want to taste your brother's jizz while I fuck your asshole?!?! That's sick!\" \n\n\"I don't care that it's my brother's cum, OK!?! I just love eating sperm and love getting buttfucked and I want to do both things at the same time. It's a fantasy!\"\n\nAcacia looked at me and shrugged. I could tell she did not care, but she was willing to defer to my decision. For one of the first times since this all began, I realized I held all the cards.\n\n\"What's in it for me?\" I asked Eliana. \"What do I get if I let you eat your brother's spunk while I pound your asshole?\" \n\nEliana squirmed, impaled to the hilt on my rigid pole. \"Ugh. OK. You can cum on my face again.\" \n\n\"Not good enough,\" I said. \"I want more.\" \n\n\"OK, fine, you can cum on my face once a day for the rest of the week.\" \n\n\"Ohhh that sounds like a good deal, Daddy,\" said Acacia. \"I know you like giving facials to pretty girls!\"\n\n\"I do, babydoll,\" I said to my girlfriend. \"But I also like fucking this asshole too. So here's what I want: In exchange for letting Eliana eat her brother's semen while I fuck her ass, I will get to cum on Eliana's face once a day for the rest of the week and fuck her asshole at least three more times during that time period. Do we have a deal?\"\n\n\"Deal!\" said Eliana. \"Now please let me taste it!! I can't stand being around cum that I can't swallow.\" \n\nAcacia scooped a big glob of Nate's spunk off her cheek and presented it to Eliana's lips. Eliana eagerly slurped it up while I rammed her harder and harder from behind. Acacia fed her more. Each thrust and each serving seemed to bring its own orgasm. Eliana was spasming and climaxing and eating semen and was as blissed out as I thought it was possible for anyone to be. \n\nThe scene was obviously incredibly erotic and the light taboo nature of Eliana swallowing her brother's cum added to my arousal. Not to mention the fact that my beloved girlfriend was not only fine with me using this slut's ass right now, but eagerly cheered my intention to use her as a cum target and buttslut again in the near future. I might have been tired and hot and drunk and a little worn out, but all of this stimulation was more than enough to push me over the edge once more. \n\nA thought occurred to me and I realized it had to happen. \"I'm going to claim my rights under the deal right now. Eliana, on your knees. Acacia, you too.\"\n\nBoth girls plopped down before me, kneeling like they would before a priest. Eliana leaned over to lick some of Nate's cum off Acacia's cheek. Acacia kissed her. Then they both closed their eyes and opened their mouths to await my sacrament. \n\nI exploded all over both of them, my cum streaking across Eliana's glasses and gluing one of Acacia's eyes shut and splurting into both of their mouths. When I was done erupting I shoved my cock first into Acacia's mouth and then into Eliana's. They did not flinch in taking my cock, even though it had just been inside Eliana's nether regions. To be fair, Acacia had specifically agreed to do ass-to-mouth if I'd let her suck my roommates' cocks. Perhaps Eliana was just that kind of buttslut that she didn't care. Either way, it was another first for me.\n\nI tried to get a picture of the first double facial I'd ever given but by the time I could get my camera Eliana had eaten all the cum on either of their faces. As Eliana bounded out of the room to go god knows where I vowed I'd have to get another picture next time.\n\nThen I passed out, again, for the night. \n\n...to be continued. "
    ],
    "authorname": "Raven04",
    "tags": [
        "facial",
        "dominance",
        "sharing",
        "anal",
        "cum eating",
        "rimming",
        "cfnm",
        "cuckold",
        "hotwife",
        "group sex"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/the-apartment-cumslut-ch-04"
}