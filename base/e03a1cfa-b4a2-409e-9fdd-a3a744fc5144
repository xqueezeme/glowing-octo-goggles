{
    "title": "A Boiled Frog Pt. 02",
    "pages": [
        "Part Two -- Simmering in Las Vegas\n\nAuthor's Note: I was literally blown away by the positive comments I got from my first part. This is my first story attempt and I am enjoying the process. Any constructive criticism would be appreciated. I can only get better if I know what I did wrong.\n\nChapter 1\n\nTuesday I woke up with all 12 coins in my possession. This was a first. I had dreamed of this day and I didn't know what to do with them. I was getting as much sex as I wanted -- anytime I hinted anything remotely sexual my wife jumped and the one thing I wanted to use them to get out of doing -- going to the wedding -- I couldn't use them for.\n\nI started to talk myself into doing this. I could do it. First, I decided to go as Tina 24/7 until the weekend so I wouldn't make any mistakes to embarrass myself. That meant I had to be prepared for every situation. I decided first to do laundry and then inventory my limited wardrobe and decide if I needed to go buy anything for the weekend. I texted my wife to see if I could use her luggage and she said yes. I then inventoried all my clothes and saw I had could barely make it through the weekend, only wearing dresses and high heels. I had no casual clothes. And I had nothing to wear outside, no women's coat or anything. But then I remembered we are going to Vegas, I didn't need that stuff. I could survive.\n\nI got a text from an unknown number right after lunch that I needed to come by her office this afternoon. I replied back, \"who is this?\" \"This is Lisa\" was the response. She then texted me to save this number, put it in as a favorite and then delete these messages and send her something sweet. She also told me to delete any romantic correspondence with Julie and to delete her number out of my phone. That is weird, I thought. But then I realized someone could pick up my phone and go through it. A remote chance of that but I could understand the paranoia.\n\nI texted Lisa, \"Thinking of you ...\" and hoped that was sweet enough. It was weird to think of her in any way other than the ice queen.\n\nI showed up at her office, my second solo trip out of the house, to find Lisa not even there. I walked in and said, \"Is Lisa here,\" and was told no. The lady behind the counter, a gorgeous brunette with a pageboy haircut, then asked me my name. I responded, \"Tina.\"\n\nShe nodded and said I was expected and took me back to a patient room and asked me to remove my top. I had on a dress so I zipped it down. She then said the bra as well. I blushed and took off the bra and the breast forms showing my bare chest. She still called me \"ma'am\" despite having no breasts to speak of. I didn't think she knew my secret but couldn't tell. She pulled out these suction cups and put them on my chest, then started a pump. She explained this would need to be done every day for 30 minutes. I asked what this is for. She said it would stretch my skin and enlarge my nipples. I had no clue why I needed that done but had no one to ask really.\n\nAs I was laying there being worked over by the electric pump, she pulled out swatches and tried to match my skin color. I again asked what she was doing. She said she had been told to order special breast forms that matched my skin. She then held different ones up to me, before drawing some marks on my skin with a sharpie, I assumed for placement.\n\nI left the appointment with the pump in a shopping bag dazed and confused. What had Julie and Lisa agreed to? I needed to talk to Julie. She had told me it was okay if things happened on my trip, she understood, and she trusted me. She had been vague though on specifics and I needed clarification.\n\nI picked up my phone and said to Siri, \"Call Julie.\" Siri responded back that she didn't see a Julie in my contacts. Crap, I had deleted her as Lisa had told me. I couldn't call her as I had never bothered to memorize her new cell number when she switched phones last year. I decided to call her at the office but was told by Miss Bitchy Tiffany that she was out of the office for a meeting. She did not offer to take a message.\n\nFrustrated, I went home instead of running the last few errands I had and finished packing. I had to get up way early in the morning to make it to the airport by 6 a.m. I sat there waiting for Julie to come home until 1 a.m. She never showed up. Extremely frustrated, I climbed into bed and fell asleep.\n\nThe alarm woke me up at 4:30 a.m. and I rolled over to see the bed still empty. Julie had never come home. I grabbed my phone and saw no messages from her. What was going on? I needed to talk to her.\n\nI started with a quick shower. I was still in a slow daze as I did my hair and make up to get ready for the day. I finished and looked at myself. I looked good, a little tired in the eyes, but totally natural. You could not tell I was a guy.\n\nI then started to lace myself back into my corset when a thought hit me. Would the steel in the corset set off the metal detector? Then it really hit me. I had to show my ID. I had to pass through security. I could not do that as a girl.\n\nI glanced at the time and saw it said 5:10. I was supposed to leave in five minutes to make it to the airport in time. I said shit and dropped the panties I was wearing to the floor. I took the corset off and shoved it in my suitcase. I quickly scrubbed the makeup off my face and pulled my hair into a ponytail. It still looked too girly so I threw on a baseball cap. That looked better. I ran to my dresser and pulled out some boxers and slipped them on. I then grabbed a pair of jeans out and pulled them up. I hadn't worn jeans in a couple of weeks and they were loose. I needed a belt to hold them up. Already my waist was shrinking, down a couple of inches. I grabbed a band t-shirt and threw that on and as I was reaching to get my wallet out of my purse I noticed my nails. They were painted. Oh crap. I stopped everything and grabbed the nail polish remover and spent a frantic 20 minutes getting rid of the evidence off my hands.\n\nI heard the honk outside of the cab I had ordered. I shoved my purse into the carry-on bag and zipped it up. Grabbing my shoes and socks in one hand and dragging my two bags with the other, with my printed-out boarding pass between my teeth, I muscled my way out the front door.\n\nThe cabbie took the bigger bag and put it in the trunk. I told him I would keep the other one with me in the back and climbed in. Once in the cab, I looked down and saw my toenails were still painted. Oh well, I had socks. On the way to the airport, I put on my shoes and socks and discreetly pulled my wallet out of the purse and put it in my back pocket.\n\nI did a double check and made sure I could rush through the airport as I was now running late. At security, I was a little worried that something in my carry-on would be stopped and they would ask me about it. I was prepared to say that I had grabbed my wife's bag by mistake, but I made it through without any hitches.\n\nI headed down to the gate to where I was to meet Lisa. I was almost to the gate when I felt a hand on my neck. I had literally been grabbed by the scruff of my neck. I spun around to see Lisa standing there looking pissed.\n\nI immediately started to apologize with a \"Sorry I'm late\" when she hissed, \"What are you doing? Why are you dressed like that?\"\n\n\"I had to get through security,\" I said. \"I couldn't fly dressed as a girl. My ID doesn't match up.\"\n\n\"You need to go change NOW!\" she hissed, and started dragging me to the bathroom, still holding onto my neck. \"My sister is picking us up at baggage claim. You CANNOT be dressed like that!\"\n\nShoving me into the bathroom, she took off my hat and threw it in the garbage. She then pulled me into the handicapped stall. It gave us a little more room. I set my carry-on onto the toilet and started to pull out my makeup. She took it from me and started to apply it.\n\nI stood still while she fussed over me. It gave me a chance to look at her. I had never been this close to her without her glaring down at me, causing me to look away. Man, she was beautiful.\n\nAfter a few minutes of applying my makeup, she relaxed and smiled. I pulled the pony tail out and shook my hair and started to grab a brush. She asked me where my earrings were and I said meekly, \"In my bedroom.\"\n\nShe said in a huff, \"I will be right back. You get out of the clothes and put on something more appropriate.\"\n\nI went into my carry-on and pulled out my clothes. Luckily, I had my new dress and heels in this bag. I had the corset which I put on and a bra. My breast forms were still in my bedroom -- oops. I had no clue what to do about that. I found a garter belt and put it around my waist. I pulled out a pair of thigh-highs and sat down on the toilet and worked them up my legs. As always, putting on nylons gave me a hard-on. I slipped on the heels before standing back up and trying to find some panties in my bag.\n\nLisa came back just then and entered the stall without knocking. She blushed a little when she saw me -- all undergarments and my wood pointing directly at her. She had a pair of golden hoop earrings in her hands.\n\n\"Where did you get those,\" I asked.\n\n\"I bought them off of another passenger,\" she said. \"You owe me $100 bucks.\"\n\nShe also slipped a ring on each hand and then opened up her bag and pulled out a set of breast forms, way bigger than the ones I had left at home. It turned out they took me from the A-cup I was used to, all the way to a C-cup. She opened up some sort of adhesive and was pasting it on the back of the forms and then she started applying it to my chest. She then held the forms securely in place on my chest for a couple of minutes, then stepped back and looked at me appraisingly.\n\n\"Perfect,\" she said. \"Now, put that thing away,\" pointing at my penis.\n\n\"Um, I think I packed all my panties in my other bag,\" I replied. I tried to pull the bra over the new implants and it didn't fit at all. It was way too small.\n\nShe annoying ripped it off of me and said, \"We will have to replace that when we get there.\" I guess I was going braless.\n\nI dropped the dress over my head and it went down resting a couple inches higher on my leg than before, exposing a ton of skin. My penis made a large tent right in the middle of it. It was very obvious that I was a male.\n\n\"Make it go down,\" she said, and then she started to wiggle her panties down her legs. She was pulling her own panties off. That right there made my dick get even harder.\n\n\"I can't just will it down,\" I said, kind of embarrassed. \"I have to take care of it.\" And I grabbed my dick and started to stroke it looking right at Lisa. I wondered what her reaction would be. It was a major turn-on to be masturbating in front of a woman besides my wife.\n\nIt felt good. I started to speed up my strokes. Lisa watched with interest as I stroked my penis. Then the intercom went off. \"Flight 462 to Las Vegas is now boarding. All passengers please proceed to the gate.\"\n\nShe hissed, \"Faster, we need to go.\"\n\n\"I can't control how long it takes, Lisa. Julie usually speeds me up when we are in a hurry.\"\n\n\"What does she do?\" she said, desperately looking toward the door and the gate.\n\nI turned bright red and said quietly, \"Um, she usually gives me a blowjob.\"\n\nI watched in slow motion as Lisa's nose wrinkled in disgust. She paused for a second, then dropped to her knees and took me into her mouth in one fell swoop. She sucked on it hard like a vacuum, before starting to bob her head.\n\nOn her third bob, I felt my balls churning. There was something so erotic about having this goddess of a woman, who didn't like men, kneeling before me, sucking me off. I tapped on her head, whispering \"I am going to cum.\"\n\nShe pulled off quickly and aimed my penis at the toilet, still stroking it. A couple of more strokes and I sent rope after rope at the toilet.\n\nMy aim was off and while some of it went into the toilet, some went on the wall and some on the seat; some even landed on the handle. She kept stroking until every last bit had come out. It was a lot. I quickly grabbed a piece of toilet paper and wiped the tip of the penis, some of the paper sticking to it.\n\nShe handed me her panties and said, \"Pull these on. They will be better than nothing. Hurry up. We need to go.\"\n\nI pulled the panties up, and my dick started to rise again, as I realized that I was wearing Lisa's undies that had been nestling her pussy just a few moments ago. I told myself that I needed to shut that thinking off. I did need to go.\n\nI zipped up my carry-on and headed out of the stall, looking back at the mess I had made. Boy I am glad I didn't have to clean that up. I felt sorry for the cleaners, but had no time.\n\nFifteen seconds after we walked out of the bathroom, the verbal abuse started. \"Scumbag! What were you thinking? You haven't even left Chicago and you already threw away your marriage. Julie said things could happen meaning you could kiss her and you took it way too far. And for what, the girl barely tolerates you and you got what, 10 seconds of pleasure before you shot your wad. Douche bag! You weak-willed pussy. Julie will never forgive you. And look at me, I am a circus freak now, with these boulders glued onto my chest. Arrrggh! She is going to tear you up and humiliate you. Your life is over 'cause you can't think past the head in your pants.\"\n\nI kept beating myself up all the way through the ticket line, down the on-ramp to the plane, all the way to first class. I let Julie pull me by the hand, completely shut off from the world around me as I ripped myself a new one. Once I dropped into my seat, I closed my eyes and pretended to be asleep so Lisa wouldn't talk to me. Pretending to be asleep, however, quickly led to me drifting off. Staying up late waiting for Julie, then the frantic pace of this morning, followed by the big cum, and let's not forget me throwing away my marriage and I was beat, both physically and emotionally.\n\nMy last thought I had as I drifted off was that I had just cheated on my wife and she would never forgive me. I couldn't even blame it on Lisa because I was the one who suggested it. I woke up feeling totally guilty and ashamed at what I had done. Julie had said she trusted me but I had gone way too far. I opened my eyes to find Lisa looking at me, mere inches from my face. She must have been studying me in my sleep.\n\nShe leaned forward and kissed me. I pulled back frantically, trying to not draw any attention from the other passengers. \"We can't do this,\" I whispered. \"I can't believe I just cheated on Julie. What have I done?\"\n\n\"You can do this and you WILL,\" Lisa said forcefully. \"Relax, Jules is okay with this. We talked. She is okay with you and me. We need to practice kissing so it will be natural to do in front of other people.\" She leaned in and kissed me again.\n\nThis time I let her. It was so different from a Julie kiss. Her lips seemed a lot softer and the kiss much lighter. Julie's kisses always seemed so hungry and demanding. Lisa's were tentative and uncertain.\n\nI felt my cock rising again and pulled away. \"Is this really necessary?\" I said. \"We don't HAVE to kiss in public. Most couples don't.\"\n\n\"It may come up and so we have to be ready. And most people expect engaged couples to kiss.\"\n\n\"Engaged? I thought we were just dating.\"\n\n\"Jules and I discussed it. Being engaged is more of a bombshell and will stir the pot up more. And it will prove I have gotten over Robin. Now kiss me again.\"\n\nI really need to talk to Julie, I thought, as I let Lisa kiss me again. This time her tongue worked its way into my mouth. I felt it right in my groin. I groaned a little and pulled back. \"Damn, Lisa, you are just too sexy. I can't handle that for too long. Sorry.\"\n\nShe grinned at this. I guess even the ice queen can thaw.\n\nChapter 2\n\nWe got off the plane and headed to baggage claim. I walked through the airport in heels and didn't even think two things about it. I had become comfortable in them. The real difference in my gait came from these huge breasts glued to my chest. They wobbled back and forth as I walked and I watched every man's eyes that passed us immediately focus on them. I felt uncomfortable being gawked at. They were also causing my back to ache. That would take some getting used to.\n\nAs we got to baggage claim, while waiting for our bags to appear, a beautiful young girl between 18-20 years old walked up and gave Lisa a quick hug. She was breathtakingly beautiful just like Lisa, a little shorter, about 5'10\", still two inches taller than me. Her blonde hair was cut short in a punk rocker style, with a black top and with pink highlights on the tips of her bangs. She had several piercings in her ears and one over an eyebrow. She must be the rebel in the family.\n\nLisa turned to me and said, \"Tina, this is my little sister Ashley. \"\n\nAshley interrupted and said, \"It's just Ash,\" sticking out her hand to shake mine. \"Nice to meet you.\"\n\n\"And Ash,\" she said, rolling her eyes at the name. \"This is my fianc\u00e9, Tina.\"\n\n\"Fianc\u00e9?\" Ash started. She grabbed my other hand and looked at my ring. It was the first time I had looked at it as well. On my left ring finger set a beautiful 2.5 carat diamond ring with smaller diamonds all around it. It was gorgeous and obviously expensive.\n\nAsh said, \"Excellent taste, sis. I like it.\"\n\n\"Um,\" I said stammering. \"Uh, pleased to meet you, too.\"\n\n\"Excuse me, Ashley. I need to talk to Tina here for a second,\" she said as she dragged me away to a corner out of ear shot. Once in the corner, she started to hiss at me again. \"What are you doing,\" Lisa said. \"No, scratch that. Who are you?\"\n\n\"I'm who I always am -- me.\"\n\n\"And your name is?\"\n\n\"Chris,\" I responded. \"What are you getting at?\"\n\n\"No, you are not Chris. You are NOT the shy dweeb who married my best friend who can't talk to pretty girls. I did not bring Chris here. I don't need someone who is insecure. You are Tina. You are a pretty girl. So you can talk to pretty girls...\"\n\nI interrupted her. \"You think I am pretty?\"\n\n\"Yes, Tina, you are a pretty girl. In fact, you are downright gorgeous. Accept that fact and own it. I brought you here to be Tina, an OUTGOING, sexy-assed, CONFIDENT girl who must impress my family and shift the attention this weekend from Robin to you. I know Chris is a pussy who hides in the corner but Tina will NOT do that. She WILL be the life of the party. She WILL make Robin and her friends drip with envy that I got you. Do you understand that?\"\n\nI nodded and said to myself, \"I can do this. Julie thought I could do this. Lisa thinks I can do this. I can do this.\"\n\nI took a deep breath and then I surprised myself by reaching up and grabbing Lisa by the back of her neck and pulling her head to me. I kissed her openly and hungrily. She started in surprise before melting into me and letting me explore her mouth with my tongue. After about 20 seconds, I stopped and whispered, \"Let's do this,\" before turning away. I could see Ash watching us intently.\n\nAfter the bags came we took them outside to the curb where a limo was waiting for us. I didn't realize Lisa came from this much money. This should be interesting. We climbed in the back as the driver put the luggage in the trunk. Ash got in first, followed by Lisa who sat next to her so I grabbed the bench facing the two of them.\n\nAs the car took off, Ash looked over at me and said, \"What do you do?\" I looked startled for a second and thought how to respond. How do you impress saying you are an unemployed construction worker? Then I thought about what I had actually been doing the last couple of weeks. I can do this.\n\nI looked up at her and said I am a mechanic. \"I take old classic cars and restore them.\" That was definitely not what she was expecting. Her eyebrows rose at me in disbelief.",
        "\"No, really, I am,\" I said, reaching into my purse for my phone. I opened up the IPhone and pulled up the pictures I had taken of the work on the Pontiac GTO. \"This is my latest project. I really love old-fashioned American muscle. The rumble of the engine really gets me going, if you know what I mean.\"\n\nI handed her the phone and let her scroll through the pictures. She seemed impressed. I glanced over at Lisa to see how I was doing. Lisa was sitting facing me and I could see right up her skirt. She didn't have any panties on. I could see her beautiful pussy right there on display to me. I stared in fascination for a second, but then came to my senses. I quickly looked up, hoping she hadn't seen me. She was looking at me with a smirk. She had been watching me all along, but had not closed her legs.\n\nAfter Ash handed the phone back, Lisa interrupted our conversation. \"What's the plan for the weekend, sis? What do we have to do? \"\n\n\"We'll, you have your bridesmaid fitting this afternoon for your dress and we have the bachelorette party tonight. Tomorrow, everyone is going to the country club to play tennis in the morning, followed by lunch for the bridal family. I'm sure that Tina will be included now that you are engaged. After that is the rehearsal, then on Saturday nothing is planned but the wedding followed by the reception.\"\n\n\"I didn't bring any clothes to play tennis,\" I said to Lisa. \"But I am okay at it.\" I knew Lisa was good. I had watched her play in college a couple times with Julie when we were dating.\n\n\"Yes, we do need to go shopping. Let's go to the house and meet everyone; then we can head out and hit the stores.\"\n\nWe got to the house eventually. It was in a gated community overlooking a golf course. \"Do your parent's golf?\" I asked as we pulled up to the large ostentatious house, thinking this may be another way to impress them. I was a decent golfer. I had worked as a caddy for the one summer after high school when a friend had hooked me up with the job.\n\nAsh responded, \"Mom does and Dad tries, but not really. I think they picked the house more for the view than anything else.\" I looked out and the view was incredible, we could see the entire Las Vegas valley with the strip skyline laid out before us.\n\nWalking up to the house, I kept repeating the word confidence in my head over and over, working myself into the role of Tina, a confident woman. I was trying to embrace my inner actress, something I didn't know if I had or not.\n\nWe entered the room and interrupted a group discussion. There were several people present. A couple of elderly couples, one of these must be Lisa and Ash's parents. There were a couple of guys and a girl my age as well. Everyone turned to look at us as we walked in. One of the elderly women, said \"Lisa,\" excitedly with a smile. That must be her mom.\n\nShe was a MILF. There was no polite way to put it. This woman oozed sex appeal. While shorter than both of her daughters, a couple of inches shorter than my 5'8\", you could see the family resemblance. She was tanned and fit with a monster set of breasts planted on her thin body. I couldn't imagine that they were real. She was dressed in an elegant silver gown, something a celebrity would wear to the Grammy's -- way overdressed for 9 o'clock in the morning.\n\n\"Hi, Mom,\" Lisa said with a genuine smile. It seemed her and her mom got along well. Lisa then went over and put a peck on the cheek of the tallest man in the room, a tall muscular man about 6'5\". That must be where Lisa got her height from. \"And Dad.\"\n\nLisa was so beautiful that every eye in the room was on her but one. The other younger girl was staring directly at me in appraisal. She was a short-haired brunette about 5'3\" and I could tell she was sizing me up. I could also tell that she was comparing herself to me and in her eyes, losing. While she was pretty, she was 20 pounds overweight, and she had a thin, angular nose that just didn't fit exactly with her face. I could also feel hostility like a wave of heat radiating from her as she stared at me. This must be Robin, I thought.\n\n\"Mom, Dad, this is my friend Tina,\" Lisa introduced. \"Tina this is my mom, Amber, and my dad, Tom. This is my uncle, Jonathon and his wife Becky. This here is Billy, my cousin Brian and his fianc\u00e9 Robin.\"\n\nI checked out Brian. He is the one who stole Robin from Lisa. He was a good-looking guy with wavy, blonde hair about 5'10. He had a muscular build that could only be earned by hours in a gym. He probably played football in high school. And he was staring at my tits. I disliked him immediately.\n\nI then looked over at his friend, who was also staring at my tits, just less conspicuously. Billy had shaggy brown hair, the beach surfer look going, and was also a gym rat. I could see they either met on the football field or in a fraternity.\n\n\"Pleased to meet you all,\" I said politely. My Tina voice sounded controlled and flawless to myself. I was doing it. \"I hope you guys won't mind one more interrupting your celebration. I just couldn't let Lisa out of my sight for a whole weekend,\" I said while looking at Lisa and trying to push all the emotion of longing into my face.\n\n\"Nonsense,\" Robin sniped. \"There is always room for one more in the back...\"\n\nThis time Ash interrupted. \"Mom, Dad, they're engaged. She has a ring and everything.\"\n\nAll eyes snapped to me immediately. I blushed and looked at the floor as shy Chris popped out for an instant. I then let Tina take over. \"Ash, we weren't going to tell anyone. This weekend is about Robin, not us. All of y'all, just pretend that you didn't hear that.\"\n\nI felt Robin stiffen at that comment and Lisa's eyes lit up. She nodded slightly in approval. I had done well.\n\nAmber hit me like a mac truck. She reached around and pulled me in. She quashed her ginormous boobs into mine and hugged me hard. She gushed at me, \"Welcome to the family.\" Obviously, in Lisa's mom's mind, the shift from Robin in the spotlight to me had already begun. \"Have you talked about a date yet? And please, call me mom. When can I meet your parents?\"\n\nI could see the wheels turning in Robin's mind as her stare bored into me. She didn't like the spotlight shifted off of her at all.\n\n\"I just had a wonderful idea,\" she said. \"Britt said she couldn't make it, so we have one more groomsman than bridesmaid. Since you are going to be family after all, would you mind filling in so we have equal numbers? That just makes the pictures so much better.\"\n\n\"I couldn't possibly,\" I said and then I saw Lisa out of the corner of my eye looking hopeful. So after a pause I finished, \"not step in to save your pictures. Besides, this way I can sit next to my beautiful Lisa.\"\n\n\"Actually, you can't, we are putting the bridesmaids by height so Ash will be between you two,\" Robin spouted.\n\nI rolled my eyes and said, \"That's fine, she's cute too.\" I winked at Ash. She giggled.\n\nLisa interrupted. \"We'll since both of us need to be fitted for dresses now and we have some shopping to do beforehand, we will see you guys at 3 p.m. at the bridal store.\"\n\nI tried to call Julie at the office while Lisa was pulling out the car but I again got the cold shoulder. I was told she had taken the day off. Julie, off on a week day! What was going on? I was getting concerned. I had to get a hold of her and apologize for being such a tramp. I had forgiven her; she had to forgive me, right?\n\nShopping with Lisa was completely different than anything I had ever experienced. The first store she took me to was one for crossdressers. I didn't even know they had such a store, but Lisa must have done her research.\n\nShe walked in and I followed in tow, blushing beet red, knowing I was going to be outed. She walked up to the first clerk she saw, and asked for the gaffs. She found my size and picked up a dozen different colors and shapes, from thongs to briefs. We had been in the store less than a minute and she had more than $200 worth in her hands. She started walking to the check-out counter and saw a mannequin's bottom half in neon green crotch-less pantyhose.\n\n\"Oooh, I like those,\" she said. \"Give me three of each color that you have in her size.\"\n\n\"We have eleven different colors,\" the man said surprised.\n\nShe responded with, \"That's fine. Please check us out. We are in a hurry.\"\n\nBut then we passed the prosthetic devices. I ended up with a vagina, two femini girdles (one I could fit in now and one I would wear when the corset had done its magic) and a prosthetic camel toe for tomorrow's tennis match.\n\nFive minutes later we were in the car with more than $1,000 in purchases, more than I made in a paycheck at work at my old job, and we really hadn't bought anything useful. I had panties and nylons in my other luggage bag. I was confused. \"Lisa, I really don't need these items and they are way more than I need for the weekend. What are you doing?\"\n\n\"I am getting my fianc\u00e9 properly outfitted,\" she said. \"A woman needs clothes. Now, give me back my panties and put on one of your new ones.\"\n\nI blushed and did it right there in the car. She kept glancing at me as I tucked myself into the new gaff. Then she reached over and felt the front of my panties. I felt my dick try to harden, but bent at the angle it was, it really couldn't. \"Very nice,\" she said.\n\nThe next store was a lingerie store and like before, we were a whirlwind. I left the store with bras, teddies, nightgowns, a couple more garter belts and matching bustiers in white, black, pink and neon green. She even bought me a full body nylon cat suit. I let her lead me through the process like a doll. I tried on blouses and jeans and dresses and shoes and belts and scarfs and I felt sexy and feminine and I stopped worrying about the price of everything and just enjoyed the day, reveling in the feel of the materials and the beauty of the clothes and the beauty of me.\n\nI did assert myself a couple of times. Once I saw a cute adorable nightgown with the Cincinnati Reds logos all over it. The panties that came with it said, \"Batter Up.\" I picked it up and smiled and Lisa looked at me funny and said, \"Baseballs?\"\n\n\"It's my team,\" I replied.\n\nShe rolled her eyes and took it and threw it in the basket. I also saw an adorable spaghetti strapped silver glittery cocktail dress that was close to what our lead singer wore when we played venues. I thought I would look incredible in it. She let me get it as well.\n\nWe made it to the bridal shop right on time to get fit for our dresses. Needless to say, they were pink, of course, and it totally clashed with my light red hair. In my opinion, it wasn't flattering at all. Lisa, on the other hand, anything made her look outstanding. She was a goddess.\n\nI marveled at her and then marveled at myself as I thought about it. I had actually spent a few hours with her and had been comfortable; I had not stuttered once when it was just me and her. Not once had I seen the ice queen stare that I was so used to.\n\nAs we were getting fitted, Ash appeared. She smiled at us and Lisa asked her, \"This bachelorette party, what is the agenda?\"\n\n\"We'll, we are going to Fergie's for karaoke to start off,\" Ash stated in a sympathizing voice. \"Followed by 'Thunder from Down Under' at the Excalibur. Then I'm not sure. But they have rented a party bus to take us around.\"\n\nLisa groaned. \"It's like Robin is trying to torture me on purpose.\" I paled at the thought of going to a male strip revue. Then I stopping thinking about me and asked her what she meant.\n\n\"She knows I can't sing,\" she said. \"She always liked to embarrass me by getting me drunk and up on stage. She would then record me and tease me for weeks. I'm tone deaf.\"\n\nI replied, \"I think I can help out with this one. I sing backup for my band. I can cover for you with karaoke.\"\n\nAsh looked at me with eyes wide open. \"You are in a band? That's so cool. I play bass guitar in my band.\"\n\n\"I'm the drummer,\" I said. I could tell Ash was impressed. Lisa could tell as well. I thought I was winning Ash over.\n\nWe went home to change and I couldn't believe how many bags I had to carry into the house. It took two trips with all three of us carrying in bags. I quickly made sure I was carrying the one from the crossdressing store. I stuck it into another bag so it could not be seen. I told Lisa I was going to have to get some luggage to get all this home. She said she had an extra suitcase here I could use.\n\nKnowing we were going out to hit Vegas, I dressed to the nines. First, I took a shower and did my hair. I combed it out until it looked perfect. I had little wisps that encircled my face. In my opinion, I looked sultry. I did my makeup a little heavy but to emphasize my eyes like I had been taught. I even got out the press on nail set and extended my fingernails. I decided to try out the feminine girdle. I tucked myself into it and pulled it up. I looked like a nude woman. I was turning myself on. I could feel a little pre-cum starting to leak out. I pulled on a pair of the crotch-less pantyhose, a dark one with silver glitter intermixed into it, and then pulled on a black bikini pair of briefs. I struggled into the corset and tightened it up the best I could. I got it down to 25 inches without too much effort, one inch from its maximum setting and I felt I could still breathe. I pulled the silver spaghetti-strapped cocktail dress over my head. Without a bra on I could see sideboobage as well as a vast amount of cleavage. I started to pull it off to add a bra and then said \"screw it\" and pulled it back down. I shimmied into my favorite 4\" black spiked heels. I added a couple of necklaces Lisa had bought me as well as some dangly earrings. I stood up and looked in the mirror. I then put on an anklet to complete the effect.\n\nLisa walked in as I finished. She looked amazing and I stared at her with my mouth open. She had her hair pinned up behind her and was wearing a little black dress that barely covered her rear. There were miles of black nylon-clad legs showing and I started to drool. She was wearing 3\" inch heels making her tower over me.\n\nI felt insignificant next to her and told her so. She smiled at me and said, \"Don't worry about it. You look great. If you had a pussy, I would eat you all up.\" She then grabbed my boob and said, \"I like this look. You will drive people crazy.\"\n\nChapter 3\n\nKaraoke went just like we suspected. There were 11 of us girls there. I was introduced to all, but didn't remember their names. Robin got it started by getting up and singing a Maroon 5 song. She was good, her pitch was perfect and while I could tell her range was limited, she had picked a song that didn't show that.\n\nHer friends started to go as the night went on and none of them were as good as her. Ash got up and did a song and while she sounded just ok, her beauty got her a ton of applause from all the guys in the place.\n\nRobin started in on Lisa to go sing next and her friends started chanting \"Lisa!\" to apply pressure. I interrupted them and said loudly to Lisa, \"Can I sing a song for you instead, baby?\"\n\nShe nodded at me and I got up and headed over to the stage. I decided to go with a popular song and picked Katy Perry's \"I Kissed a Girl.\" I knew I was a good singer but I had always been hesitant and held back as Chris because my voice was so high. But tonight, I was Tina and I decided to let it all out. I danced and pranced and sang my heart out. I could tell I sounded good. I looked out at Lisa and she was beaming with pride. Robin, on the other hand, did not look happy. Good. Everyone else in the place seemed to be enjoying my performance though. I had people on their feet, clapping and cheering. As I finished with a bow, the applause erupted and shouts of \"Encore!\" erupted from several spots.\n\nI held up my finger and said \"One more.\" I decided to go with something that would really show off my range and picked Whitney Houston's \"I Will Always Love You.\" It had been one of my Mom's favorite songs and I had heard it enough as a kid to know it by heart. There was silence as I was singing. I saw tears in some people's eyes. Again, as I finished, the place erupted.\n\nAs I walked off the stage, a couple of guys tried to stop me and pull me over to their table. I said, \"I'm with a bachelorette party, sorry.\" I walked over to our table and Robin's maid of honor gushed, \"You should be on the Voice. You were incredible.\"\n\nRobin started to say it was Lisa's turn now but I stopped the remarks by walking straight over to Lisa and doing the first thing I could think of. I started to make out with her hot and heavy.\n\nThat got some hoots from the guys sitting at the table next to us. When I came up for breath -- Lisa was breathing hard too I could tell -- the waitress approached and said that the guys over in the corner had bought us all a round. I grabbed Lisa's hands and said, \"We will go thank them. Back in a bit.\"\n\nWe walked past the guys table and I said \"thanks for the drinks\" and kept on walking, heading for the bathroom door. I pulled Lisa in the stall with me and started to apologize for kissing her like that in public and she waved it off.\n\n\"I didn't know you could sing like that,\" she said. \"You were amazing. Robin was beside herself. You upstaged her at her thing.\" Then she leaned down and kissed me. I swooned; the most beautiful girl in the place was kissing me.\n\nThen Julie popped into my mind. I had had such a great day that I hadn't thought of her since the limo ride. What kind of husband was I? Guilt racked through my body and I pulled back from the kiss quickly. \"Julie,\" I said. \"I can't do this to her. I feel so guilty.\"\n\n\"Don't feel that way,\" Lisa said. \"Jules and I talked about this. I personally didn't think I would want to kiss you at all, but Jules thought differently. She is the one who bet me that I would fall for you by the end of the weekend. I didn't think that was possible but now I wonder.\"\n\n\"Wait, can you repeat that?\" I said. \"Julie wants me to kiss you?\"\n\n\"She wants more than that, honey.\"\n\nJust at that point, someone barged into the bathroom and the spell was broken. It was Ash, saying that the party bus was here and we were heading out for the Excalibur.\n\nI was dreading this part completely. I had no desire to go watch a bunch of guys strip. As Chris, I would have just gone along, but as Tina I decided to do something about it. I walked out and walked right up to Robin.\n\n\"Sorry Robin,\" I stated. \"Me and Lisa are beat from our flight, and I really wanted to talk to her parents before they go to bed. Plus, you know we both don't do dick, so I am sure you will understand if we pass on the Thunder. You guys have fun without us.\"\n\nRobin spluttered for a second, then said, \"Fine!\" and stomped away. Ash yelled out to her, \"Since I can't drink, I think I am going to go back with Lisa as well.\"\n\nWe pulled back into the house just as Brian, Billy and a nerdy looking guy named Ted, came out of the house. It turned out Ted was Brian's best friend in high school and the best man.\n\n\"Hey, hey, hey ladies,\" Billy said. \"What are you guys doing back so soon? Is the bachelorette party over already? \"\n\n\"No,\" I replied. \"It's just getting started. But Ash here can't drink so we decided to call it an early night.\"\n\n\"We can't drink either,\" mumbled Billy.\n\n\"I promised Robin I would lay off the booze until after the wedding,\" Brian said. \"She doesn't want me plastered during the festivities.\"\n\n\"So where are you guys off to then?\" Ash questioned.\n\n\"We were going to head over to Pole Position and do some racing, then hit the batting cages. You guys wanna come?\"\n\n\"Not really,\" I started to say but Lisa talked over me saying, \"Sure. I really don't want to go in just yet.\"\n\n\"Let's go then,\" I said with a forced smile.\n\nWe all piled in their SUV. Luckily, I got the back bench with Ash and didn't have to sit next to one of the guys. Tina still wasn't comfortable around men yet.",
        "On the drive over the guys challenged us to a race. They said we could do it cross-country style. When I asked what that was they explained that the first-place finisher would get one point all the way through sixth place getting six points. Lowest total wins.\n\nLisa and Ash said in unison, \"You are on!\"\n\nI asked, \"Wait a minute, what's the stakes? \"\n\n\"How 'bout a kiss to the winner?\" Billy said with a smile at me. I could tell he was interested.\n\n\"I don't kiss boys, they are gross,\" I said.\n\n\"That's only cause you haven't kissed the right one,\" Billy quipped back.\n\nBrian then popped in. \"How about we get to watch you girls make out if we win?\"\n\n\"Does that mean if we win we get to watch you guys make out?\" I retorted.\n\n\"Oh, hell no,\" Billy quickly shouted.\n\nLisa then responded, \"How about winners get to pick who kisses them?\"\n\nI stayed quiet. I wasn't happy, but I couldn't argue with her. Not in front of everyone.\n\nLisa said to me, \"Relax, it's only a kiss. Everyone should kiss a boy at least once.\" I paled.\n\nBilly looked at me. \"You mean you have never kissed a guy? Holy crap.\" I turned red and put my hands over my face.\n\n\"I know who I am picking,\" Billy said in a laugh.\n\n\"You've got to win first,\" Lisa replied back.\n\nI blew them all away. It's wasn't even close. I finished in first by half a lap. Thankfully, while Billy and Brian beat Lisa and Ash, Ted came in last place. So our 1+4+5 was less than their 2+3+6. We won, 10-11.\n\n\"I can't believe we just got beat by the girls,\" Brian said. \"Tina, you were amazing. Have you raced before?\"\n\n\"Not really,\" I said. \"But I do like fast cars.\"\n\n\"You should see the project she is working on,\" Ash said. \"It's a muscle car.\" She then started to dig into my purse for my phone.\n\n\"It's nothing really,\" I said.\n\n\"No, it's way cool,\" Ash said. \"Check this out.\"\n\nBilly looked at me in disbelief after looking at the pictures. \"You are a mechanic?\"\n\n\"Yeah, what of it?\"\n\n\"We'll, you can play with my tools and work on my body anytime,\" he said with a laugh.\n\nI slugged him right in the stomach. He laughed at that.\n\n\"Don't forget our rewards,\" Ash said.\n\n\"Oh, right,\" Lisa said. \"What about it, Tina? Are you ready to kiss a boy? You got three here who would be eager for you to pick them.\" Billy nodded in agreement.\n\n\"No, I love kissing you,\" I said. And I leaned up into her. Julie was an inch taller than me and liked to wear heels so I was used to leaning up for a kiss. With Lisa I had to really stretch my neck. She bent down and lightly pecked me on the lips, before slowly pressing her lips to mine. I felt her tongue start to wedge its way between my lips and I let it. She grabbed my head and held it tight, and then explored my mouth thoroughly. I let out a slight whimper when she pulled away. I don't think I have ever been tongue-ravaged like that before. Luckily, my penis was tucked away in the girdle, because it was fighting desperately to get free.\n\n\"That was so hot,\" Billy said. \"I could watch that all night.\"\n\n\"Yes, it was,\" Ash agreed in a whisper I could barely hear. Lisa turned to Ash and said to her, \"Which boy are you going to kiss?\"\n\nAsh blushed red. \"Actually,\" she said hesitantly. \"I am going to pick Tina if that's okay with you.\"\n\nLisa's eyebrow shot up. \"Oh really? I didn't know you went both ways, little sis.\"\n\nAsh blushed even deeper red. \"I have never kissed a girl before. Tina, will you be my first.\"\n\nI looked over at Lisa and she nodded an okay. I decided to take charge on this one. I walked up to Ash. She was so beautiful and she looked very nervous. I smiled at her. I whispered, \"You are such a pretty girl. I don't know if I deserve to kiss someone as beautiful as you. But, since you want this ...\" I left off there and leaned in.\n\nWe brushed lips, then pulled back and came in again -- this time a little stronger. My mind was reeling. This was only the third girl I had ever really kissed and I had just kissed her SISTER a moment ago. My tongue slipped into her mouth and I copied what Lisa had done to me. I explored her. I tasted her. She was wonderful. She was intoxicating. I ran out of breath and had to pull back.\n\nAsh gasped. \"Oh, wow,\" she heaved out. \"That was incredible.\"\n\nBrian grumbled, \"Let's go hit some balls. I got some steam to work off now.\"\n\nWe headed over to the batting cages where Brian and Billy got in. Ted passed when his turn was up. He was obviously out of his element. The boys started teasing him, and I didn't like to see him getting ribbed so I stepped up and said I wanted a turn.\n\nBilly said, \"Sweet. I got to see this.\" He was looking me up and down. Dressed in high heels and a skimpy cocktail dress, I smiled and picked up the bat and walked up to the plate. They started it up and I noticed Billy hit the slow speed of 50 mph. The boys had been doing 70mph.\n\nAs the pitches began to come in, I started lighting them up, sending most of them for line drives. Hitting was always my strong suit in baseball, playing the field -- not so much. As I finished the round, I looked back and caught the bulge in Billy's pants. I glanced over at Brian and he was sporting a wood too. They were obviously turned on by a girl in heels hitting balls.\n\nI said nothing and walked out handing Brian the bat. \"Here you go, slugger.\" Then I walked over and put my arm around Lisa and watched the boys take their turns again. She leaned into me and her breast was nestling into my shoulder. \"You're pretty amazing,\" she whispered in my ear. \"I am starting to see what Jules sees in you. You have those boys all hot and bothered. I haven't seen Brian this unsure of himself in a long time.\"\n\nWe stood there leaning against each other watching the boys hit. Billy finished his turn after Brian and looked over at me. \"You going again?\" he asked. \"We can put it on the faster speed this time. See if you can really hit.\"\n\n\"I can hit anything you can dish out, buddy,\" I quipped back in response.\n\n\"Oh really,\" he said. \"Want to put a bet on that? I would like one of those kisses that Lisa and Ash got.\"\n\n\"Heh. That's no incentive. There is nothing in it for me. Remember, boys are gross.\"\n\n\"She'll do it,\" Lisa said. I looked back in shock over my shoulder. What was going on? What was Lisa's agenda?\n\n\"What's in it for me?\" I said doubtfully. I thought I could hit him but I wasn't sure. He was pretty fit.\n\nLisa answered again. \"If you hit him before he strikes you out, he has to kiss Brian.\" I saw Billy immediately start to shake his head no.\n\n\"What's the matter,\" Lisa said. \"Are you chicken? Is the little girl going to hit you? Trust me, you want one of her kisses. They are so delectable.\" I saw Ash nodding in agreement. Ego boost!\n\nI thought I could see Lisa's plan. She wanted me to humiliate Brian. Chris would run away, but Tina could come through. \"Tell ya what,\" I said. \"I will give all three of you a chance to strike me out. If any of you three do it, I will kiss all three of you. But, if I can hit each one of you, you two have to kiss Brian.\"\n\n\"Deal,\" Ted said quickly. Both guys looked at him in astonishment. \"Dude, there is no way she is going to be able to hit both of you. It's a sure thing.\"\n\nTed's confidence seemed to give them a boost. Billy and then Brian both shrugged and said ok.\n\nI took charge. \"Ash, you are going to be ump since you have nothing invested in this bet. The strike zone is from here to here. Anything outside that or not over the plate is a ball. Got it?\"\n\n\"I played little league softball for one year,\" she replied. \"I know what a strike is.\"\n\n\"Let me go get some gloves out of the car,\" Brian said. \"I'll be right back.\" They had gloves in their car? I was in trouble.\n\nI turned to Lisa. \"Ummm, what did you get me in to? How much experience do these guys have?\"\n\nLisa smirked. \"Well Brian played shortstop in high school and Billy was the pitcher. Billy got a scholarship and is pitching college ball right now.\"\n\nI groaned. I was going to have to kiss these boys. I couldn't do this.\n\nI noticed out of the corner of my eye Lisa had gotten out her phone and was recording this.\n\nTed was up first and his first pitch was into the dirt. I think he would be lucky to get it over the plate. His next pitch was outside, but it was easily hittable and I drove it into right. He looked happy to be done.\n\nI looked back at Billy who was catching, and his eyes were staring right at my legs. I saw hunger in his eyes. That got me nervous. I really didn't want to kiss these guys.\n\nBrian's first pitch was a meatball right down the plate. I flinched rather than swinging and mentally kicked myself. It would have been an easy hit. I had to stop thinking about the consequences and just hit the ball. \"Focus,\" I told myself.\n\nThe next pitch was down and a little outside. I let it go past for a ball. Ash called it a strike. I turned to her and said, \"Are you kidding me that was way outside.\" She shrugged and said, \"Looked good to me.\"\n\n\"Crap,\" I thought. I have two strikes and no balls.\n\nThe next pitch was in the same place, outside, but Ash had called the last one a strike so I swung anyway. I got a piece of it and fouled it back. Brian then put one way high trying to get me to swing. I let it go by and Ash called it a ball, since it obviously was.\n\nThe next pitch was right over the plate waist high and I almost sighed in relief as I connected with it and sent it over his shoulder toward left-center.\n\nI told myself I could do this as Billy and Brian swapped spots. Then Billy threw the first pitch right down the middle of the plate and I swung way too late. Damn, he was fast. I had never hit anything that fast before. I was losing this for sure.\n\nOn the next pitch, he put it on the outside corner, high. I swung earlier than I should and didn't read it right. I whiffed badly. Strike two.\n\nThe boys got a smirk. Brian heckled, \"We should have asked for more than a kiss.\"\n\nBilly was too fast. I couldn't hit him. His first two pitches had been in the middle of the plate and then to the outside. I figured he was showing off and his next pitch would be inside at my knees.\n\nSince my bat speed was too slow, I decided to gamble and swung as if it would be there. The ball hit my bat with a crack as I connected and went deep. It would have been a home run in a ball park.\n\nHis mouth dropped open in amazement.\n\nTed, without a word, walked up to Brian, who was standing at a daze after watching my ball soar, and took his chin in his hand. Then he kissed him directly on the mouth. Wrapping his arms around his neck, he kept Brian locked into place as he openly made out with him. I got the feeling that Ted had kissed a boy before.\n\nBrian fought it for a second, then succumbed and let Ted have his way with him. After a full minute, Ted pushed himself away from Brian and turned to Billy, who had walked up in the process, and said, \"Your turn, big boy.\"\n\nBilly was shaking his head in disbelief. Brian sighed once and then said, \"Just kiss me already.\" Billy scrunched up his face like he was being forced to eat spinach or something else terrible and leaned in. It was incredibly awkward to see those two try to kiss each other while not touching each other. You could tell Billy did not have a homosexual gene in his gorgeous body. After about 10 seconds of watching these two kiss without trying to kiss, I couldn't take it any longer and bust up into laughter.\n\n\"Stop it already. You guys are terrible,\" I giggled. \"I can't take it anymore.\"\n\nThey both immediately parted. Brian then said to me. \"You owe me a kiss for making me do that. That's the least I should get.\"\n\nI said, \"You wish,\" and tossed the bat to him, before turning to walk back to Lisa.\n\nBilly yelled, \"Do you give lessons? Where can I sign up?\"\n\n\"Cut your dick off and maybe we can talk,\" I said with a laugh.\n\n\"Ouch,\" he said, grabbing his groin.\n\nI walked over and looked over Lisa's shoulder to see her sending out the video. I looked at the to: field and saw it was Jules.\n\n\"You sent that to Julie? I really need to talk to her. Can I borrow your phone to call her?\"\n\n\"Not now,\" Lisa replied. \"I want to send this to the bachelorette group, too. This will really give them something to talk about. I was hoping for a picture of Brian kissing you to get back at Robin, but this is oh so much better.\"\n\nI thought about Julie as she kept texting. I hadn't talked to her in more than 24 hours. We had been married eight years now and I had never gone 24 hours without at least a hello. I wondered what she was doing? Was she mad at me for kissing Lisa? Heck, I even let Lisa suck my dick, how was I going to explain that? How much trouble was I in? Doing all I was doing as Tina was an incredible high, but the guilt was an incredible low. My nerves were shot.\n\nI sat contemplating my fate on the drive home. The guys tried to engage me in conversation but I brushed them off. Have I screwed up my marriage? I was actually having fun with Lisa, something I had never thought possible. And I had enjoyed kissing Ash very much. What was wrong with me? Was I becoming a slut?\n\nChapter 4\n\nWe got home to a dark house. The parents were already in bed so when Ash and Lisa started to chat, I just headed up to the room Lisa and I had been put in.\n\nI stripped, took a quick shower, brushed my teeth and changed my clothes. I got out my new Cincinnati Reds nightgown and put it on. I thought it was adorable. I came out of the bathroom to see Lisa coming into the bedroom. Nervous to be alone with her, I told her I was going down to the kitchen to get a bottle of water and did she want anything. She said no and I snuck downstairs. It looked like everyone had gone to bed so I grabbed a water bottle and hustled upstairs.\n\nLisa was in the bathroom. I heard her talking. She was on the phone. Then I heard the word Jules and figured she must be talking to my wife. I wanted to barge in and take the phone from her but I decided to do some recon first. Sneaking up to the door, I pressed my ear against it and listened.\n\n\"Jules, I know you told me he was in a band, but when he started singing my panties went wet. He was soooooo good.\"\n\nThat's right, I'm good.\n\n\"And then he came off stage and kissed me. You know how I like to be in charge. Well when he took charge and kissed me, it felt so good. I am used to being the center of attention and there I definitely wasn't. I felt like I was losing myself.\"\n\n\"About half a dozen times, a few times on the plane practicing, once at the airport in front of Ashley, twice at Karaoke, once in front of everyone and one in the bathroom, and one when we won the bet. Oh, and he kissed Ashley, too.\"\n\nI heard Julie's voice this time as she was loud, \"He what?\"\n\n\"It wasn't like that.\" She then retold the story about racing and how the girls beat the boys. \"Tina had them eating out of the palm of her hand. They were drooling all over her, even Brian. If they only knew. That poor Billy doesn't know what hit him. He has always had the girls chasing after him and Tina isn't giving him the time of day. It's driving him nuts. Especially since she is so tomboyish and right up his alley. When he saw her batting in high heels, his mouth hung open like a dog in heat.\"\n\n\"Yep. Yeah. \"\n\n\"I kind of pushed him. I kept teasing him about kissing the boys. It kept him nervous and on edge. It was adorable to see him panic.\"\n\nGreat, I thought. I don't like the idea that she likes me in panic mode. What else would she do?\n\n\"Yep, they got nothing on our girl.\" Our girl? What did they have planned for me?\n\n\"I think he is downstairs. He went to get a drink. Are you sure you don't want to talk to him? He has been begging to talk to you all day. \"\n\nShe doesn't want to talk to me? I was so confused. I really needed to make sure she is okay with all of this. I wanted my marriage to stay the way it had become. I did love my wife. This unknowing was stressing me out.\n\n\"Yes, I promised.\"\n\nWhat did she promise?\n\n\"I said I would. \"\n\n\"I said I would, didn't I? I will as soon as I get off the phone and get ready for bed.\"\n\n\"Yes.\"\n\n\"Yes.\"\n\n\"Ok, I will.\"\n\n\"Talk to you tomorrow. Good night.\"\n\nAt that, I hurried and jumped into the king-sized bed, slipped to the very edge, faced the wall away from the bathroom, closed my eyes and pretended to be asleep. I kept my eyes closed as I heard Lisa changing her clothes, although my heart did start beating faster. I wondered how I would get to sleep with a strange girl sleeping next to me. I had never slept with anyone other than my wife.\n\nShe had turned off the lights but the full moon was coming in the window so it wasn't completely dark in the room. I heard the bed sink in as Lisa climbed onto it. Then she slid over towards me. I held my breath. I heard her whisper, \"Are you asleep already?\" I didn't know how to respond so I just stayed quiet. After a second, I felt her breasts push into my back and her hand started to fiddle with my panties. She was lightly tugging them down. Then she reached around and grabbed my crotch.\n\n\"What are you doing?\" I hissed.\n\n\"Jules made me promise to take care of you,\" she whispered. \"She said you need to cum every night. A hand job is ok?\"\n\nShe then started to fondle my penis that was quickly growing. I couldn't believe this was happening. Lisa was touching my penis. It felt so good. I turned towards her and felt my back pinch her breast to the bed. She jumped back and said, \"ouch.\"\n\n\"Sorry,\" I said. I laid on my back as she continued to stroke my member. My penis was now 100 percent erect. It felt so good. \"Oh, that's nice,\" I gasped as she rubbed her thumb over my head. I saw her watching her hand as she rubbed my groin. She looked happy.\n\n\"Did you have a good day?\" I asked. \"Did I do ok?\"\n\n\"You did better than I ever expected,\" she said. \"I loved it when you hit Billy's pitch. He was so shocked. And you were right, it was terribly funny to watch them kiss.\"\n\n\"I can't believe you wanted me to kiss them! I would much rather kiss you.\" I then did just that. I eased my lips to hers and started to lightly brush them. I flicked my tongue at her lips and she opened them. I then started to explore her mouth like she had done my earlier.\n\nShe squeezed tighter and started to pump faster. I quickly pulled up my nightgown to above my chest so that I wouldn't spill my seed all over it. She dipped down and grabbed the nub of the breast form in her mouth, then spit it out in distaste. \"We will definitely have to get rid of these soon.\" I kissed her again and groaned into her mouth. I was getting close. I whispered that and she picked up the pace.\n\nRope after rope of semen shot out onto my stomach. She put her other hand up to block it from going everywhere. I twitched until I was spent. \"Thank you,\" I said as she handed me a hand towel from the bathroom she must have brought with her for me to clean up.\n\nAfter mopping up my mess, I turned to her and said, \"Would you like me to return the favor?\"\n\n\"Would you?\" she asked, a little surprised.\n\n\"Absolutely, fair is fair.\"\n\nI leaned forward and kissed her again. I slowly pulled her teddy upwards scrunching it in my hand. Once her breasts were exposed, I asked again hesitantly if I may touch them.\n\nShe replied, \"I said you could.\"\n\nWith permission, my hands were drawn to them like a magnet. I had never seen anything so big. I gasped when I first touched them. They were so soft. Julie's were nothing like this. Hers were firm and perky. These were soft like pillows.\n\n\"It's like you have never touched boobies before,\" she whispered. \"You look like a kid in a candy store.\"\n\n\"Only Julie's,\" I responded. She shook her head in disbelief.\n\nI reached down and kissed her nipple. She let me. I then circled her nipple with my tongue before latching on and sucking as much as I could fit into my mouth. She reached down and shimmied her panties down, burying her fingers in between her legs.",
        "I lifted up and gazed at her body. She was a goddess, her pale white body glowing in the moon light. Soft yet so firm, toned and muscled. Acres of legs capped by the beautiful full bush of blonde hair covering her mound, then a tight muscled stomach, up to those soft mountains of breasts. Flawless skin and an angelic face, with that flowing mane of blonde hair. What more could have been done to describe perfection?\n\nI latched back onto her other breast and suckled on that one while running my hand down her body through her public hair, twirling it around and around. Her skin was so smooth and silky. I lost myself in the feel of it while I got my fill of her breasts. They also smelt and felt so good.\n\nI pushed my fingers past hers and I felt what she was feeling. I found her clit and stroked it lightly. She pulled her hands away and let me work. She lifted my head off her breast and pulled me in for a kiss. I kissed her for all I was worth, speeding up my rubbing. She whispered, \"Not too hard,\" so I slowed down but focused my efforts on pleasing her. She responded and bucked and came.\n\nAs she got out of bed to clean up, I rolled over and fell to blissful sleep.\n\nIn the morning, I woke up intertwined with Lisa, she was holding me tight and I had my head buried between her breasts. I glanced down and my morning wood was pressed directly against the panties. A few millimeters of satin and lace was all that keeping me from rubbing my cock against her pussy.\n\nI slowly started to extricate myself from the situation. At first, she fought it and held me tight, but she was truly asleep and I climbed off the bed as gently as I could, trying not to wake her up.\n\nIn the bathroom, I saw her phone charging and thought to call Julie or at least get her number again. As I swiped the screen, I saw she had a password on it. Crap!\n\nI sat on the toilet and went over last night's events. I had had sex with another woman and I had kissed her sister. Tina was a wild woman. As I was recalling the events, I started to stroke myself. I decided to take care of myself there.\n\nEntering back into the bedroom, Lisa was sitting up. She looked absolutely sexy with her sleep-tossed hair. I was tempted to climb right back into the bed. She looked at me and said, \"I was supposed to take care of that,\" pointing at my groin.\n\n\"Well, it's done. I didn't want to put you out. I know how you feel about men.\"\n\n\"It wasn't too bad last night,\" she said with a smirk, running her hands through her gorgeous locks. Man, she was sexy.\n\n\"We'll I am going down to get some food. I am hungry. You want to come?\"\n\n\"I am going to get a shower and dressed for the day first. Be down in a bit. Help yourself to anything in the kitchen.\"\n\nI walked downstairs to see Ash's cute butt sticking out of the fridge. I walked up and slapped her butt. She jumped, looked at me and smiled. \"Good morning, skank,\" she said. \"How did you sleep?\"\n\nI looked at her in disbelief. \"Excuse me,\" I said, getting a bit of attitude. \"What did you call me?\"\n\nShe blushed. \"Oh sorry, I meant nothing by that. I forgot you and Lisa aren't part of the gossip chain.\"\n\nShe then launched into the tale of what happened last night after Lisa sent out her video of my home run and the boys' smooching as she started preparing some eggs and bacon. The girls had just got out of the strip show and were climbing on the party bus to go to a nightclub when the video came in. The girls passed it around and Robin caught wind of it and demanded to watch it. She was literally fuming when she heard the bet and was embarrassed when the boys made out.\n\nThe moment the video ended, she pulled out her phone and called up Brian, yelling at him, \"Why did you want to kiss that skank in the first place? And I heard what you said about wanting to sleep with her! \"\n\nThey argued all the way to the night club at full volume, and Robin made them turn the party bus around and drop her off at Brian's where she could lay into him some more. She even threatened to cancel the wedding.\n\nAsh had just finished her tale when Billy walked in saying \"I thought I smelt breakfast.\" His hair was mussed and his chest was bare, showing his defined muscles. Each one of his abs was completely defined. He looked like he could have stepped off the front page of a weightlifting magazine. He had on a pair of gray sweat pants with an impressive bulge right in the middle of it.\n\nHe saw me and said,\" Hey, hey, hey Tina. Cincinnati huh, I am a Dodger fan myself.\"\n\nHe was checking out my nightgown. I felt conscious of his eyes on my body and despite being covered up more than I was last night, somehow I felt more naked.\n\n\"I would ask you for that kiss you owe me but morning breath would kill your start on the Billy Thompson addiction,\" he boasted. \"One good kiss from me and that's all you will ever crave.\"\n\nI rolled my eyes and said nothing. Ash heaped some bacon and eggs on my plate and I started eating. She then gave Billy a winning smile and said, \"I will make you some next.\"\n\nI had to admit even though I was a guy, he really was good looking. Did he and Ash hook up last night, I wondered. Is that why he is here? As I was eating, he started to lean into me and smell my hair.\n\nI realized at that moment I had no makeup on. Would he notice I was a guy if he got too close? I turned abruptly to him and said, \"Why are you here? Don't you have someplace else to be? Shouldn't you be with your boyfriend Brian?\" He reddened at the mention of Brian.\n\n\"Mr. and Mrs. K are putting me up for the wedding since they got room, and I was invited to play tennis this morning at the country club with you all to make the pairs even. I am so hoping I draw you as my partner. That way I can stare at your ass all day on the court.\"\n\n\"Then I better go get changed and figure out who I need to bribe so you can't,\" shoving the last of the egg in my mouth.\n\nUpstairs, Lisa was dressed in a white tennis skirt, white blouse, white ankle socks and white tennis shoes. I saw she had laid a matching outfit out for me.\n\nFirst, I did my makeup. Then, as I picked up the skirt, I saw the prosthetic camel toe under it tucked into white panties. I started to change as she stared at me. Her eyes were laser-focused on me as I took off my clothes. I felt conscious of my body and turned away from her.\n\n\"No,\" she said. \"Turn around. I want to watch. \"\n\nI put myself on display as she watched me attach the prosthetic device to my penis. I then pulled up the panties and tried to put on the bra. She got off the bed and came to help me do it up. As I bent over to pull up the skirt, she cupped my butt cheeks. Her fingers trailed up my back as I stood up.\n\n\"You really are sexy,\" she whispered.\n\n\"Puhlease,\" I said. \"I am not even in the same league as you and Julie. You both embody that word.\"\n\nI pulled the blouse over my head and sat down on the bench at the end of the bed to put on my socks and shoes. She grabbed a brush and started combing my hair. She pulled it back in a ponytail. I barely heard her mumble to herself, \"You really don't know, do you?\"\n\nChapter 5\n\nWe drew lots for tennis partners and I ended up with Amber, Lisa and Ash's mom. Unfortunately, we were playing Becky, Brian's mom, and Billy. So instead of my ass, Billy kept staring at my fake tits. Ash and her dad were playing Brian's dad and Julie on the other court.\n\nMy serves were dead on and kept us in the match at first as even Billy had a hard time returning some of them, but these cantaloupes on my chest threw off my game so much that I did make some stupid errors.\n\nAmber's mom wasn't that good, but she did try hard. I gave her lots of encouragement and called her Mom. We knew we were overmatched, but we had a good time and did some bonding.\n\nEvery time we took a break, Billy was there. He was like a buzzing bee, always hanging around trying to grab my attention. We were the first done and rather than watching the other game or letting Billy keep flirting with me, Amber linked my arm and said, \"Let's grab a shower and have some girl talk.\"\n\nWe went out to the cars to get our outfits for the luncheon, mine was a flowery summer dress that Lisa had bought me, with one of the white crotch-less pantyhose we had bought at the crossdressing store, 4-inch spiked heels and white panties. The corset remained off (yes!) and I had a white bustier with a built-in bra for up top. I also had a barrette clip to pin up my hair.\n\nWe walked into the bathroom and I was pleased to see that the showers were not communal but stalls so I would not have to shower with Lisa's mom. I am not sure the prosthetic camel toe would have passed muster. Amber wasted no time stripping off her clothes. I could not help but ogle her breasts when she pulled her tops off. They had to be at least F sized.\n\nShe saw me looking and smiled. \"I got them for Jonathon's 50th birthday present. Don't you just love them? He certainly does.\"\n\n\"Yes, they look wonderful,\" I stammered, fighting to keep my groin under control. Thankfully she turned and got into the shower before I got undressed, chatting amiably about our tennis match. I showered like The Flash so that by the time she walked out stark naked without a care in the world, I had already covered myself with the bustier, pantyhose and panties.\n\nI turned my back to her and slipped on the dress. \"I am so happy you came with Lisa, I can see her eyes sparkle when she talks about you or looks at you. How long have you known each other?\"\n\nTrying to be honest as I can so I remember everything I told her we met in college but just recently reconnected when she moved to Chicago. Trying to postpone wedding talks, I told her that when she asked me to marry her, I agreed on the condition of a long-term engagement.\n\n\"I am just not sure we are 100 percent right for each other, you know, she is so beautiful and perfect and from a different social circle. I am just a normal-looking college dropout who works on cars. We are from two different worlds. I'm more guy than girl. I am not sure it will work out.\"\n\n\"Oh no, she lights up around you in a way I haven't seen in a long time,\" her mom said. She then went on to tell me that Lisa had it hard in high school. \"She shot up to 6' and filled out her freshman year. She towered over most of the boys. I think she intimidated them. The ones that she didn't, all they wanted to do was grab her boobs. I remember days of her coming home just crying. Boys that age can be so cruel. We gave up hopes of grandkids from her in her senior year in high school when she came out. But I have reconciled myself over that. I just want her to be happy, and I think you do that for her.\"\n\nAsh walked in at that point and the focus on Lisa ended. We shifted to my family, where I explained my parents had passed in a car accident during my high school years and my sister had finished raising me. She was married now and stationed in Germany, and I hadn't seen her in a long time. I had a nephew and niece that I hadn't even met yet. While telling all of this, I couldn't help watch out of the corner of my eye as Ash stripped and showered. She left her stall open and her eyes were on me while she bathed, listening to my story.\n\nI had seen Lisa in bed the night before and couldn't find a single flaw with her body. Ash was the same. Her breasts were a little smaller and her pubic hair was shaved completely off, but her body was sleek, tan and toned. I did notice that her only tan line was around her public area. She tanned topless. I started to feel an ache in my groin as my dick started to rise while trapped in the prosthetic.\n\nI turned away from her and sat down and continued talking. Ash got out of the shower and walked around in front of me to where she had put her clothes, drying herself with a towel as she walked. She was right in front of me when she leaned down and grabbed her underclothes out of a bag on the floor. It could have been innocent or it could have been on purpose, but what it did do is give me the perfect view of her pussy. It was glistening. Was that water from the shower or was she aroused? I was so close I could just lean over and taste it. I licked my lips as I stared, and then realized that her MOM was in the room. In panic mode, I quickly glanced at her, praying she hadn't seen me drooling over her daughter, but she was looking in the mirror putting on makeup.\n\nI got up, deciding to do the same. That way I could keep Ash out of my head.\n\nOnce we were all finally primped and dressed for lunch, we headed outside to see the final match in progress. We had just sat down to watch when Ash's phone rang. She talked for a few, before turning to her father.\n\n\"Lisa's and Tina's dresses are ready for pickup. If we leave now, we can grab them and still meet everyone for lunch on time. That way we don't have to go back after. Will you give us a ride Dad? That way Mom can stay and wait for Julie.\"\n\nHe nodded and stood up. We followed him to his truck. He had a bench seat and Ash held the door so I climbed into the middle. I noticed her father look at my stocking-clad knee but said nothing. We picked up the dresses without incident and were heading to the restaurant when a tire blew out.\n\nLuckily, we were able to get to the side of the freeway without incident. Ash's dad got out his cellphone and said he would call AAA and for everyone to sit tight. I turned to Ash and said, \"Get out. It's only a tire. I can get it changed before Triple A gets here. That way we won't be late.\"\n\nI popped the bench seat and grabbed the jack. I went to the rear and looked under the car where the tire was stored. It was there. I tried lowering it with the jack tool and it wouldn't turn properly. Sighing, I dropped to my back and scooted under the truck to where the tire was. As I scooted, I realized that my dress was now bunched around my waist. Glancing back, I saw Ash and her dad, still on the phone, looking right up between my legs.\n\nIn my mind's eye, I saw they could see the crotch-less pantyhose, covered by the tight white panties, and the prosthetic camel toe. Thankfully, with that on, I would look like a girl. I figured nothing could be done and focused on the tire. I got it down and scooted out again. As I started to stand up, I noticed the large bulge in Ash's dad's pants.\n\nAs I started to loosen the lug nuts, Ash's dad hung up the phone with a \"never mind\" and said, \"Let me do that for you.\" I responded, \"It's okay. I am already filthy,\" showing my hands. \"No point you getting messed up as well.\" I then changed the tire quickly.\n\nFive minutes later we were back on the road. I had blackened hands and my dress and pantyhose had streaks of black from the asphalt and tire. Ash's dad still had his wood and kept glancing at my legs.\n\nWe pulled up to the restaurant at the same time as Julie, Billy, Brian's parents and her mom were getting out of their car. Julie took one look at me and walked over pissed. \"What did you do?\" she hissed at me.\n\nI whispered back at her. \"I gave your dad wood.\"\n\nThat startled her anger. Confused now, she said, \"What?\"\n\nAsh walked by and said, \"We got a flat and Tina changed the tire so fast we could have been in a race car pit. Dad didn't even get off the phone with Triple A and she was done.\"\n\nLisa grabbed my arm in hers and said, \"Let's go see if we can clean you up.\"\n\nThe luncheon was boring since I knew no one and they had me sitting with Ash's groomsman on side and Billy on the other. Billy focused completely on me, asking me about my life and trying to be polite yet pry. I answered his questions with as little details as possible, trying to shift the conversation to him.\n\nHe bragged how he was a senior at Ohio State on a baseball scholarship and went on about some of his better exploits. Great he was 300 miles away. Why couldn't he be in school in Hawaii or something? At one point, he slid his hand onto my knee and started to rub the nylons. It felt good and I was shocked for a second that his contact didn't repulse me. I stayed still and ignored him.\n\nThen, when I didn't pull away, he got more aggressive and started to run his hands upward on my thigh. I reached under the table and grabbed his hand and moved it to his own knee. After about five more minutes, I felt his hand again on my knee. This time I immediately stood up and went to the bathroom. I stayed in the stall until 10 minutes later Lisa came in to see if I was okay.\n\nI told her Billy wasn't keeping his hands to himself and she fumed. \"I'll Ronda him,\" she growled. \"You'll what?\" I said puzzled. \"I'll Ronda Rousey his ass for messing with my girl,\" she said and turned to go find Billy.\n\nI laughed and said, \"Don't worry, baby, I can take care of myself. I can handle it.\" I walked back outside with her.\n\nLuckily, the luncheon was breaking up as we came out of the bathroom. I avoided Billy completely and got back in the truck with Ash and her dad.\n\nBack at the house, I went upstairs to change. Billy was trying to talk us girls into joining him in the hot tub, but luckily, Lisa shot him down by saying us ladies needed to get our hair done before the wedding tomorrow.\n\nI had my second trip to a salon. This time no one suspected me at all, and my hair was done up on top of my head. I was actually comfortable talking to the girls as my nails and feet were taken care of. It is amazing the difference a month can make.\n\nWe were discussing what to do with our free evening, when Ash piped in. \"My band is playing at a club tonight. I would really like it if you two came and watched. I know it's not your scene Lisa but I haven't gotten to spend a lot of time with you lately and I really want to introduce Tina to the girls. They all want to meet her since I told them how amazing she was at karaoke night.\"\n\n\"Well, we can stay for a while, little sis,\" Lisa said. \"I promised to get Aunt Jackie and Uncle Justin at the airport for Mom and Dad since they have such a late flight in. \"\n\nAsh beamed in delight. We took separate cars to the club. It was a dive, but hey it was a gig. We walked in as the band was already set up. I looked at the logo on the drum set, it said their band name was, \"The Skanks.\"\n\nI looked at Ash, and said \"Seriously?\"\n\nShe laughed and said, \"Embrace it. You have been called one so you are now an honorary member. Come, let me introduce you to everyone.\"\n\nI found out that the band played here on Saturdays and had extra members for when people didn't show up. They didn't get paid for playing, but could drink all they wanted for free. I was about to ask Ash how she could drink when she was only 18, but then light bulb moment -- fake ID.\n\nThey asked me to sing with them, so I said I would on the songs that I knew. But once I started, I was a hit. They started having me pick the songs. I couldn't get off. As I was on stage singing, I kept looking down at Lisa. She looked so beautiful and had at least a dozen guys walk up to her and try to start a conversation. Despite the fact that she was brushing them off and focused on me, I was feeling intensely jealous.\n\nThen it dawned on me. I had a wife. How fair is it for me to be jealous if Lisa actually met someone and liked them? Not at all. Lisa was gorgeous and I felt like our friendship was growing. I wasn't even thinking of her as the Ice Queen anymore, but as Lisa in my mind. If she found someone to love, I couldn't be in the way.\n\nAsh saw me staring at Lisa all night and for some reason was drinking a lot. She stopped playing after a few songs and some other girl took over on bass. She sat with Lisa and chatted while I was up on stage singing.\n\nFinally, we took a break and Lisa waved me over. She told me she was going to head to the airport to get her relatives, but would I mind staying and taking Ash home since Ash was too drunk to drive.\n\nI said ok, and thirty minutes later I led Ash out the door and we were halfway to the car when she stumbled. Rather than letting her fall, I scooped her up into my arms. For as tall as she was, she wasn't very heavy. She leaned into me and was mumbling into my neck as I walked. I think I made out, \"Lisa gets everything\" but I wasn't sure what she was saying. I tucked her into the back seat before fishing her keys out of her purse and driving her home in silence. She didn't say a word on the drive home so I figured she fell asleep.",
        "As we pulled into the house, thankfully all the lights were off. I went and unlocked the front door and opened it before coming back to the car and picking her up. She snuggled in and wrapped her arms around me. She wasn't asleep but seemed close to it. I carried her into the house, closing the door with my butt, and carried her straight up to her room.\n\nLaying her on her bed, I pulled off her shoes and socks, and then stripped down her pants. Her legs were just as perfect as I remembered from earlier and my penis struggled to say hello. It was getting painful wearing that prosthetic around these girls. I tucked her in and left her with panties, bra, and t-shirt on.\n\nI headed to my room and saw that Lisa had laid out nightwear for me. It was a blue and white teddy with very little room for the imagination. Lots of flesh would be exposed with this one. I sighed and grabbed it and went into the bathroom. Why do girls like to dress me up like a Barbie doll? Julie loved to do it, and now Lisa had started in. I wiped off all the makeup and changed.\n\nI thought about today and how much I missed Julie. Lisa was great and all, but she wasn't my wife, although I had to admit to myself I was starting to feel something for her. I headed into the bedroom and there with the lights down low and two candles lit was Ash. Beautiful, bare-naked, Ashley was sitting in the middle of my bed waiting for me.\n\nI took one look at her and my heart broke for her. How was I going to turn down this adorable sexy 18-year-old who just wanted to be loved without hurting her feelings? I walked up to the edge of the bed and smiled at the smiling girl who was looking at me nervously. I could tell she was trying to strike as seductive pose as possible. She was doing a damn good job of it too.\n\nBut I just wasn't that type of guy to take advantage of her. I eased myself on the bed next to her and whispered out her name, \"Ash\", while shaking my head no. \"We can't do this, Ash,\" I said. \"And trust me, I want to. You are very desirable, very sexy. But I couldn't do this to Lisa, just like if I was with you, I couldn't do this to you. I hope you understand that I find you very attractive, and if Lisa and me work things out and she lets me sleep with you, I will. But we are still just working out our relationship and I can't complicate it even further by bringing you into the picture.\"\n\nTears were leaking out of the corner of her eyes. She wasn't crying openly, but I could tell she was in pain. I reached in and held her (and I will admit, I copped a feel on her cute perky boobs on the way in, I couldn't resist), and pulled her into me. Reaching my hand under her, I lifted her off the bed and started to carry her back to her room. She looked up at me and her lips reached for mine. I let her kiss me. I let her take charge and didn't fight it. I kept slowly moving to her room. It never dawned on me that Billy or her parents could be up and wander into us. I made out with her all the way to her bed, where I laid her down.\n\nI broke the kiss then. She burbled out. \"It isn't fair. Lisa gets everything she ever wants. She always has.\"\n\n\"Well, this weekend you have stolen a piece of my heart,\" I whispered to her. \"One day if I can ...\" and left it at that as I darted from the room before my willpower gave away and I did something to really screw things up.\n\nI went to sleep. I was exhausted from the day and drifted off quickly. I woke up to Lisa stroking my penis as I slept, trying to get it hard.\n\n\"I don't need that,\" I whispered groggily. \"Just come to bed.\"\n\n\"Oh no, I promised,\" Lisa said. \"You already stole this morning's. Just relax.\"\n\nI didn't want to fight and Lisa's always gets her way anyway, so I let her massage me until I firmed, and then massage me to release without saying a word. I just closed my eyes and enjoyed the sensations. In the middle of it, I could've sworn I felt her tongue on the tip of my dick but I wasn't sure. Did she taste my pre-cum?\n\nChapter 6\n\nI woke in the morning again intertwined with Lisa. She had both legs wrapped around one of mine and her head was nestled into my armpit. This time when I tried to extricate myself from her quietly, she awoke.\n\n\"Oh no, you don't,\" she said, tightening her legs around mine. \"You are not getting away that easy this morning.\"\n\nHer head moved down and she nipped at one of my nipples through the teddy I had on.\n\n\"I think you are starting to like me,\" I said.\n\nShe smiled at that. \"You do have some redeeming qualities,\" she said and nipped me again. \"I admit, in some ways, I was completely wrong about you.\"\n\nShe nestled into me and started to kiss on my neck. I pulled away slightly and leaned in to kiss her. I stopped just before her lips and whispered, \"May I?\" She pushed into me and kissed me hard. I returned it with a fervor and we made out despite morning breath. Hers wasn't bad at all but I was sure mine was awful.\n\nMy hands moved towards her magnificent chest and I grabbed them naturally but immediately pulled away as if shocked.\n\n\"Sorry,\" I apologized. \"I should have asked first.\"\n\nShe chuckled deep in her belly. \"You have permission to touch me anywhere you want.\"\n\nI responded with, \"Does that mean I can do this?\"\n\nI reached for her sides and attempted to tickle her. It turned out Lisa was very ticklish and we broke into a semi-wrestling match with her giggling and squirming away from me as I tried to tickle her. She really was stronger than me and probably had me by fifty pounds. I ended up with my arms pinned, one she had pinned by her legs and one with both of her arms. Her boobs were magnificently shoved into my face. I wiggled my fingers and could barely graze her vagina.\n\nOnce she felt what my fingers were doing, she relaxed her grip on them and I slid her panties to the side and started exploring. I took my time and avoided her clitoris, tugging her labia and actually entering her hole. Once I felt moisture and knew she was excited, I then moved up to her clitoris and went to work.\n\nShe released my other hand. I brought it down to her nethers and reached for some of her moisture. I had been thinking about what Julie has said about Lisa tasting good and wanted to see for myself. I gathered some juices on my fingers and brought it to my lips. It was like honey, so sweet and succulent. I wanted more. She came as I buried my tongue into her vagina with my finger rubbing her clitoris and the other fondling one of her nipples.\n\nAs she was lying back catching her breath, I started to jump out of bed to go use the bathroom. She dove at me, catching my panties and tugged, trying to pull me back to her. The panties gave out and ripped.\n\n\"I just need to pee,\" I said. \"I will be right back.\"\n\n\"You better,\" she said. \"We got unfinished business.\"\n\nI had never seen Lisa so relaxed and playful. We spent another 30 minutes in bed, both of us climaxing again, her loudly so. Then we got dressed and walked hand in hand down to breakfast.\n\nAsh was there and I walked right up to her and gave her a kiss and said, \"Good morning.\" Lisa raised her eyebrows but said nothing. Ash smiled and said, \"You just missed Billy. He left a few minutes ago. I think he heard you guys' romper room shenanigans and was on edge. We got an hour before we got to get ready for the ceremony. I'm cooking. What do you want?\n\nOnce you have been to one wedding, you have been to them all. Robin actually looked elegant in her dress and her and Brian managed to project the perfect couple. You would never have known they were at each other's throats a day ago. I had to endure Billy cupping my ass or pressing his boner into me several times during the ceremony and pictures afterwards, but nothing else was remarkable. Billy's charm was disappearing rapidly as I continued to ignore him and he started to act more aggressive or desperate.\n\nIt culminated during the wedding reception that night when he pulled me off to the side and tried to kiss me. I stopped him by shoving my hand in front of his face. \"Do you see this ring,\" I demanded of him. \"This means that I am engaged to be married. MARRIED! That means I have already found the most extraordinary woman on the planet and she has put this ring on my finger saying that I am hers. I don't need you. Lisa is more than I can handle. Just because Robin ditched Lisa for Brian does not mean I am going to ditch her for you.\" I saw Lisa out of the corner of my eye smiling from ear to ear.\n\nShe walked up to me right after that and said, \"Let's get out of here.\" We drove back to her place with her leaning against me as I drove. We made out at every stop light and she actually reached under my dress and pulled me out of the gaff I had on. I was standing rock hard, tenting my dress when we finally got back to her home. She pulled me by the hand up to our room where she started undressing me and told me to undress her.\n\nWe got the hideous gowns off and then plopped on the bed as one. I quickly scooted down to taste her and found her wet with desire. I lapped eagerly. She tasted exquisite, better than any of the champagne I had drunk earlier. She held me head eagerly and directed me where she wanted. I submitted completely and let her use my tongue as her personal toy, moving my head this way and that, pleasing herself as she liked. She came once and I didn't stop, and pushed onward until she came a second time.\n\nShe then rolled over putting herself on top of me. She scooted down and let me suck on her breasts. She positioned herself over my hips and then grabbing my penis, pointed it right at her center. She started to slip me in when I realized what was happening and I bucked, tossing her off to the side.\n\nShe growled and moved back on top. I gasped, \"Julie. I can't do this. I can't cheat on Julie.\"\n\nShe paused, holding my penis in the air and her vagina hovering just over me.\n\n\"It's ok, baby. Jules and I talked. She is ok with this. I told her I wouldn't want it, but she didn't believe me and said I would. And baby, I really do.\"\n\n\"I'm sorry, I can't. I just can't.\" I saw the disappointment on her face. \"Not without talking to Julie,\" I added.\n\nShe said, \"Ok,\" and then slid off to the side to grab her phone. She entered her code and pulled up Julie and handed me the phone. Julie answered on the first ring with a \"How's it going?\"\n\n\"Honey, it's me,\" I said. \"I need to talk to you. Lisa wants me to make love to her.\" Lisa slid back down between my legs, this time taking my dick into her hand and pumping it, listening to my side of the conversation. And just as I began to talk again, she took me into her mouth.\n\n\"From what she has told me, you already have, you cheating sexy husband of mine,\" Julie said teasingly. \"I knew you wouldn't be able to resist her.\"\n\n\"I'm so sorry honey,\" I replied. \"But she wants more. She wants me to fuck her. I can't do that.\"\n\n\"Yes you can,\" Julie responded quietly. \"She is broken. Just like I was when you met me. You can heal her. You are the only one I know who could. I want you to do it.\"\n\n\"Are you sure?\"\n\n\"Yes, it's ok. Where is she now?\"\n\n\"She is actually between my legs sucking me,\" I said.\n\n\"Oh, really, I wish I could see that.\" I said hold on a sec, and switched to facetime. I then put the phone on speaker and pointed the phone at Lisa.\n\nJulie spoke loudly and sexily. \"Hey girlfriend, whatcha doing?\" she drawled. Lisa looked up, saw Julie through the phone and smiled.\n\n\"I found me a friend,\" Lisa said. \"You were right, it does feel good. I want it.\"\n\n\"I want to watch. Go ahead.\" Lisa smiled and moved up, lifted herself on top of me and sank onto my shaft. She let out a sigh and said,\" Oh, that feels good.\" She sank it to the hilt before coming up and repeating the motion a second time.\n\nJulie started talking smack. \"I thought you said Chris was a pussy. How you could never understand what I was doing. I remember you telling me that the thought of the two of us together made you sick. How I was a stupid little girl for wanting to fuck him.\"\n\nLisa turned red with embarrassment. It started in her face but flushed through her body. Even her breasts looked a little red. She never stopped pumping through the criticism and heaved out a single drawn out sentence.\n\n\"I was soooooo wrong.\" You could tell right then she started to orgasm. She bucked and closed her eyes and came.\n\n\"Honey, take me off speaker.\" I put the phone back to my head and listened. Julie's commands were succinct. \"Turn her over and fuck her hard for me. I want you to take control and pound the scrud out of her. She always likes to be in control. Don't let her. Fuck her to another orgasm.\"\n\n\"Yes, dear,\" I said,\" but before I go, why on earth have you avoided me this weekend? Why didn't you want to talk to me? I have felt so guilty and have been so worried....\"\n\n\"If I had told you everything upfront, Lisa would have dominated you,\" she said. \"I needed your natural instincts of loyalty to fight back. You are just too submissive. She is a tidal wave and I didn't want to lose you to her.\"\n\nAs I hung up the phone. I waited for Lisa to respond. She looked completely wiped out, but sat on me still. She had not climbed off, and I had not come yet so I was still rock hard in her. Once she looked up at me, I said, \"You know there is a lot of give and take in a relationship. Relationships are not about one person always being in control.\"\n\n\"I am not always in control,\" she replied. I looked at her with an exaggerated disbelieving stare. She had the decency to blush. Then she said sheepishly, \"We'll I don't have to be. I just prefer to do things my way.\"\n\n\"You need to learn how to give, not just take,\" I said.\n\nShe responded back with, \"I can give....\"\n\n\"Good,\" I interrupted. \"Let's start with you giving me that pussy of yours to ride.\" She smiled at that and said ok.\n\nShe climbed off and spread her legs wide to invite me in. Rather than climbing on, I decided to take it slower. I edged my head between her legs and inspected her pussy. Her blonde bush, while hairy, was trimmed neatly. The hair had obviously been waxed on the sides of her labia since they were bare. Her outer labia were full and puffy and had a glistening that looked and smelled wonderfully. The smell was heady and causing me to lose focus. Her inner lips were asymmetrical and her clit was big and fat and sticking out of its hood. It was easily double the size of Julie's and I couldn't resist sticking out my tongue and giving it a quick lick.\n\nLisa bucked in glee and reached down to hold my head in place but I pulled back quick enough that she couldn't get a hold of me. I then used my teeth to tug on one of the right side of her labia before swirling my tongue into her hole, slurping loudly. She tried to grab my head again but I resisted so she tried to scooch down to bring her clitoris nearer to my mouth. As her hips started to slide down the bed, I followed them, keeping my face buried in her hole and sucking out the sweet nectar that was quickly accumulating.\n\nShe groaned in frustration.\n\n\"Suck on my clitty,\" she ordered. \"It needs you now.\"\n\nI lifted up and looked at her beautiful button. It was exposed out of her hood and throbbing. I drew in and blew out a long breath of air across it. She shuddered. I then pulled back completely and sat up and looked her in the eyes. I could see the edge in her face and could tell she was close.\n\n\"Who's in charge here?\" I said.\n\nShe stuck out her lip in an extenuated pout and didn't say anything.\n\nI repeated. \"Who gave me this pussy to use?\"\n\n\"I did,\" she said reluctantly.\n\n\"So, who is in charge here?\"\n\n\"You are,\" she eked out with a sigh.\n\n\"That's better,\" I said. I then lowered my lips down to her clit and gave it a quick suck before letting it go. Moving further south my lips worked their way back down to her flowing hole and started to clean up more of her tasty nectar. Every couple of seconds I would move up and lightly graze my tongue across her clit, not enough to get her to climax, but enough for her to crave more. I then went back to her juices.\n\nWhen I saw her fists tighten up into frustration and knew she was about to explode, I pulled back, climbed on top and started sawing my penis into her. She sighed in exultation. I took my time, keeping the pace slow and steady, making that extra thrust at each bottoming out to plunge as deep as I could. She bucked her hips trying to speed me up and wrapped her legs around mine, trying to force the tempo. Every time she yelled faster, I slowed down a heartbeat, taking my time and enjoying the grip of her vagina. She started to squeeze her inner muscles, sending a ripple through my travels, and causing my dick to feel like she was milking me. I was starting to get close. At the next bottoming out, I held an extra second to keep from coming. Lisa took that opportunity to take control. She quickly bridged like a wrestler, rolling me over and putting her on top. She then picked up the pace, pumping quick as a rabbit in heat. In a couple of seconds, I exploded, sending stars to my eyes and she kept going for a few more seconds before she started climaxing as well.\n\nShe fell on top of me gasping and trying to catch her breath. As she lay there, I ran my hands through her hair and said quietly,\" What happened to you giving up control?\"\n\n\"I'm sorry,\" she whispered. \"I really tried. Honestly!\"\n\n\"It's ok, baby,\" I said. \"We can work on that.\"\n\nShe looked up at me and smiled.\n\n\"OK, it's a plan. I never knew making love to a man could be so much fun.\"\n\n\"Wait,\" I said. \"I was your first?\"\n\nShe nodded, before laying her head on my shoulder. We stayed like that until we drifted asleep.\n\nLisa woke me up in the middle of the night for another round of ambitious lovemaking that lasted over an hour and then again early in the morning before our 6 am flight. She was insatiable and strove me to perform my best over and over.\n\nBy the time I climbed out of bed the next morning, I was ready for a nap. Luckily, I had packed between the wedding and the reception so I got dressed for the airport.\n\nI went with some faded ripped jeans that Lisa had bought for me, a t-shirt, bikini brief underwear and no bra, with leather miller sandals on my feet.\n\nAfter saying goodbye to Ash and her parents at the drop off point, I ducked into the bathroom with Lisa where she applied the lubricant to take off my breasts forms. I tucked them and my purse in my carry-on and tugged my shirt back into place. I fixed my hair in a ponytail and checked myself out in the mirror. I could see both the boy and the girl. I decided not to care. I was comfortable as me.\n\nWe walked through the airport arm in arm, being checked out by both sexes. I was a little nervous as they checked my ID at security, but nothing was said and I passed through undisturbed. I was quiet the entire flight home.\n\nThoughts kept going through my mind. While I loved Julie, I could not deny that I had strong feelings for Lisa, and sex with her was downright amazing. I sure hoped that I could continue with that. It would be almost impossible to give her up. I also realized that I had a great weekend as Tina; I had started crossdressing for my wife, but I think I was probably enjoying it as much as she did. I had really let myself go this weekend.\n\nAs we were nearing Chicago, I felt anxiety return -- Tina was fading into the background and Chris was emerging. You can only act as someone different for so long. I glanced over at Lisa, and saw her smiling at me.\n\n\"Do you think Julie is going to be mad at me?\" I asked nervously. \"I know she said she wasn't, but I can't imagine she won't be a little mad. How will we ever go back to the same as before?\"\n\nShe reached down and squeezed my hand before lifting it up to her lips and kissing it. How did I ever think she was the ice queen?",
        "\"It's going to be ok, I just know it,\" she said. \"It won't be the same, but it will be better.\" "
    ],
    "authorname": "noobdude",
    "tags": [
        "crossdressing"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/a-boiled-frog-pt-02"
}