{
    "title": "Teresa's Christmas Ordeal Ch. 01",
    "pages": [
        "The chronological order of my stories is now listed in WifeWatchman's biography.\n\nFeedback and constructive criticism is very much appreciated, and I encourage feedback for ideas.\n\nThis story contains graphic scenes, language and actions that might be extremely offensive to some people. These scenes, words and actions are used only for the literary purposes of this story. The author does not condone murder, racial language, violence, rape or violence against women, and any depictions of any of these in this story should not be construed as acceptance of the above.\n\nPart 1 - Prologue\n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" blared the lovely redhead at 7:00am, Monday, December 19th, from in front of the State Weather Service station that was adjacent to County Airport. \"A cold front is expected to come in later this afternoon, bringing frigid temperatures, higher winds, and the possibility that we may have a White Christmas this year!\"\n\n\"According to Fox KXTC Weather experts, this front will only bring light rain.\" Bettina continued. \"But another storm system is coming in behind this one, and it could dump several inches of snow upon us as early as Thursday! This is not the year to wait to get your Christmas shopping done!...\"\n\nAs we drank our coffee in MCD, Cindy Ross said to Teresa Croyle \"As if you need anything else to do. Now we have to plan for weather, and the traffic accidents that will come with it.\"\n\n\"Nature is conspiring with our Commander to keep me on desk duty.\" Teresa replied with exceptionally subtle humor. \"But that's no big deal; we've had those plans in place for years. The Fire Department runs the snowplows and all that stuff, and they and the Electric Company are ready for the storm. We just investigate accidents and help with stuck cars and such.\"\n\n\"Where's Commander Troy?\" Cindy asked.\n\n\"Reviewing my submitted plan for Special Operations training.\" Teresa said. \"We really need more crowd control work.\"\n\n\"Let's go barge in on him and mess up his concentration.\" Cindy said. They left MCD and went across the hall to the Commander's office.\n\nOnce in the hallway, Teresa said quietly \"Have you made any decision yet, about the FBI thing?\"\n\n\"No.\" Cindy said. \"I've already told them I want to get through Christmas before deciding. The Deputy Director said there was no hurry, but I know he'll want an answer before Spring, so they can get me into Quantico sooner rather than later. So what about you? Are you going to ask the Commander for that personal favor?\"\n\n\"Yes.\" Teresa said. \"After our meetings this morning.\"\n\n* * * * * * * * * * * * * * * *\n\n\"Okay, ladies, since I have you in here, let me bring up what I was going to say at the Angels meeting.\" I said to Cindy and Teresa, who were perched in my 'hot chairs' in front of my desk. \"There is one thing I'm getting pressure from the Chief and the Council about, and that's putting some Officers in the Detective Track. I've agreed that we will name some Officers for that Detective Track, to take effect on February 1st.\"\n\nBoth Teresa and Cindy could not help it: they involuntarily looked over at Pete Feeley's badge, which still hung in its frame next to Tanya's on my wall.\n\n\"Yes.\" I said, knowing their thoughts. \"I haven't forgotten that. But let's worry about who we are going to elevate this time around. Teresa, let the Precinct Captains know, and have them submit some names. Cindy, you and I and Wes Masters will evaluate those names and give our recommendations to the Chief, which he will pretty much rubber-stamp.\"\n\nCindy just nodded. I noticed Teresa look at her, then at me, then back to Cindy. Hmmm, what is she thinking, I wondered?\n\nAfter going through some more agenda items, I said, as I usually did, \"Okay, is there anything else?\"\n\n\"Captain Croyle wants to talk to you, sir.\" Cindy said, standing up. Teresa flashed her a 'Teresa Cunt' look while I observed Teresa.\n\n\"Yes, I can see that.\" I said. \"You are dismissed, Captain Ross. See if you can find something less interesting than the conversation I am about to have with Captain Croyle.\"\n\n\"On. My. Way.\" said Cindy, taking no heed of Teresa's look at her. Cindy left the office, closing the door firmly behind her.\n\n\"Okay, spill it.\" I said.\n\n\"She really should mind her own business.\" Teresa said.\n\n\"You'll get her back, one of these days.\" I said. \"Most likely during the Police Boxing Matches.\" That got as close to a grin as I was ever going to get from Teresa. \"Now are you going to ask me to call my wife for you, or are you going to just sit there and waste both our time?\"\n\nTeresa now looked stunned. \"How did you know? Oh, never mind... yes, I was going to ask if you'd call Dr. Fredricson and make an appointment with her for me.\"\n\n\"Absolutely.\" I said. I got out my personal cellphone and speed-dialed my wife's office.\n\n\"Hello, dear.' I said when she answered. \"I need to ask a favor of you. Teresa Croyle needs to make an appointment with you... no, she didn't tell me what it's about, but then again she doesn't need to...\" Teresa rolled her eyes and I had to struggle not to laugh out loud.\n\nLaura said that the best she could do was Thursday at 2:00pm, and was that good for Teresa? I asked Teresa and it was. After confirming, Laura and I exchanged \"I love you\"s and disconnected.\n\n\"Okay,\" I said. \"Thursday at 2:00pm. Don't be late. Now do I need to assign you a watchdog to keep you out of trouble? And don't ask for Captain Ross, because the two of you are double trouble for me.\"\n\n\"And to think they call us your Angels.\" Teresa replied, giving it right back to me. \"Thank you, sir.\" She got up and turned to go.\n\n\"Teresa,\" I said, and she turned back. I said \"Good luck. I'm excited for you, and Todd. I hope it goes very well for you.\"\n\n\"Thank you, sir.\" Teresa said. \"It was a hard decision. But after watching you with your kids, and Todd with his... well, it's about time.\" I nodded, and Teresa left.\n\nNo, it was not too hard to observe Teresa for weeks, and to deduce that the siren call of motherhood was beckoning her. The appointment with Laura was the first step in Teresa's very big step... to become a mother herself.\n\nPart 2 - Plots and Plodding\n\n\"This weather could be a problem.\" said the younger man. \"We might get trapped here, and unable to get back to Apple Grove.\"\n\n\"Relax, Doug.\" said the older man. \"You can spend Christmas with us.\" \n\nIt was Tuesday, December 20th. The younger man was Doug Jackson, father of the late football player Jefferson Davis Jackson. The older man was Michael Burke, father of Todd Burke and the late Jack Burke.\n\nThey were at the Lakeside Inn & Suites on the southern end of Lake Reservoir in Nextdoor County. Their benefactor, Wallace Bedford, was also in the area, attending a Board meeting and Christmas parties at BigPharmaCorp.\n\n\"We're expecting family to come in, and we have to be in Apple Grove.\" said Doug Jackson. His wife Roberta was here with him.\n\n\"I understand.\" said Burke. \"Jeanine and the kids are here with me. I'm inclined to stay here or at our home in Town through the storm instead of trying to get back to Lake Amengi-Nunagen and just being trapped there. You and Roberta are welcome to stay with us, if you like, but I'll understand if you need to get back home.\"\n\n\"So who are these people we're going to be meeting with?\" asked Jackson.\n\n\"Tom Riordan is one of them.\" said Burke. \"I'm not sure who the other is, but he's going to be the liaison for the people implementing our plan.\"\n\n* * * * * * * * * * * * * * * *\n\nI was sitting in my office, pretty much twiddling my thumbs. My paperwork was almost completely caught up; only the year-end stuff remained, and that had to wait until next week and early January. Teresa was too damn good for her own good; her plans to fortify the Special Ops teams had been so well done that all I did was sign my approval and send it to the Police Chief.\n\nChristmas shopping was done. Laura was trying hard to figure out what I was going to do for her gift. After giving her the Mercedes for her birthday, and getting my brains fucked out for weeks in thanks, she knew I wouldn't try to match that. Meanwhile, Carole was learning the concept of 'Santa Claus' and wanted a Barbie doll... and a toy dog for Bowser. I told Carole that Bowser might prefer snacks from Santa.\n\nNormally Molly would stay at the Cabin with Ian and Ross. Her and Cindy's mother was coming down from Canada tomorrow, as well. But we were going to have to see what the weather did---\n\n*BRING!* *BRING!* *BRING!*\n\nIt was my desk phone. I answered.\n\n\"Hell-o, Mr. Crowbar.\" came the voice of Chief Moynahan over the line. \"Agent Muscone of the FBI has requested a few moments of your time at the Federal Building. He assures me that the pile of firewood delivered there is purely for be-nign purrrr-poses.\"\n\n\"I'm sure.\" I said. \"With your permission, Chief, I'll be on my way.\"\n\n\"And swiftly, Mr. Crowbar. And swiftly.\" the Chief admonished.\n\n* * * * * * * * * * * * * * * *\n\nTom Riordan came to Michael Burke's suite at the Lakeside Inn. With him was a slender white man of medium height, his black hair slicked back, wearing black rimmed glasses. He looked young... a bit too young. He was wearing an ordinary black suit, white shirt, and gray tie; in any crowd he would be barely noticed.\n\n\"Hello, gentlemen.\" said Riordan, shaking hands with the other men. \"This is my friend... 'Rusty'. Rusty does not shake hands.\" They nodded to Rusty.\n\n\"Gentlemen,\" the young man said, \"give me a moment to sweep this room for bugs.\" He took a small device out of his pocket, and proceeded to walk around the room methodically but very quickly.\n\n\"Seems clean.\" he said. \"But if you'll put on your jackets, let's talk on the patio.\"\n\nThey went out onto the patio, the view overlooking the lake. The wind was whipping around as the young man again swept for bugs, finding none.\n\n\"My apologies for making you withstand the cold.\" said the young man. \"It will be safer to talk here, where the wind will help mask our voices in case I missed a listening device.\"\n\n\"You're thorough.\" said Michael Burke. \"I like that.\"\n\nThe man nodded shortly. \"My employer requires it. Okay, here's what is going on. My employer has agreed to your request for action to be taken against Dr. P. Harvey Eckhart. Our surveillance of 'The Vision' compound in Coltrane County has been difficult, and any attempt to penetrate the property would be ill-advised. Therefore, we are going to have to strike at him when he is outside the compound. We understand that he will be teaching a seminar next week?\"\n\n\"Yes.\" said Tom Riordan. \"At the new Town Civic Center. Fifteen hundred people will be attending.\"\n\n\"Good.\" said the young man. \"I would suggest that none of you be anywhere near there at any time Eckhart is there. There is one more thing...\" The man paused, then said \"My employer's fees usually start at ten million dollars per attempt. However, he is going to waive that fee, as he considers this to be a special case. In return, Mr. Jackson, you might be asked to provide information in the future, which either he or I will ask you for when the time is right. You will know when you hear the word 'JACKAL' used. Mr. Burke, you may consider this a personal gift, and my employer requires nothing of you\"\n\n\"I'm grateful.\" said Burke, knowing it would be prudent to ask no questions and tell no lies.\n\n\"That will do it, then.\" said the man. \"You may go about your businesses as usual. If you see me in Town or anywhere else, act like I'm not there and like you don't know me at all.\"\n\n\"I have to ask one question.\" said Doug Jackson. \"Is the target Eckhart? Or the pieces of shit that murdered my son?\"\n\nThe young man nodded in understanding. \"All I will say, Mr. Jackson, is that you will not be disappointed with the result.\"\n\n* * * * * * * * * * * * * * * *\n\n\"I'm telling ya,\" said Jack Muscone, \"the paperwork these days is getting more time consuming than actual law enforcement. Washington is killing us. We literally have to document when we take bathroom breaks while on field missions.\"\n\nThe verbal outburst had been caused by the necessity of me signing documentation that I would not reveal the classified information I was about to be told. I signed the papers, then sat back as the monitor on the wall at the end of the table lit up.\n\n\"Okay,\" Jack said, beginning the briefing, \"we told you earlier that we had chatter that your life might be in danger. We've been able to narrow it down somewhat, and my boss and your real boss, that being your wife, have authorized me to give you this information.\"\n\nA fuzzy photograph of a man appeared on the monitor. Muscone said \"This is the only picture the CIA has of a man we know to be a freelance assassin. Our codename for him is JACKAL, after the Frederick Forsyth novel. He operates in Europe and is believed to live in France; ergo, the codename. French Intelligence, pardon the contradiction in terms, calls him Le Cam\u00e9l\u00e9on.\n\n\"The Chameleon.\" I said, almost to myself. \"Because he uses disguises?\"\n\n\"According to this report, he is tremendous with them.\" replied Muscone. \"But that's not his greatest ability. He is considered to be one of the best assassins or snipers in the world. He's like the man with the Golden Gun in the Double-Oh-Seven movies: he can be hired to kill. And he is truly one of the very best in the world at killing.\"\n\n\"His specialty is getting to people who are heavily protected.\" continued Muscone. \"He won't try to to kill the President, but he's believed to have gone after some high-level diplomats and even a couple of CIA spies. He's taken out a few high-level French, German, and Polish Government people, as well. Anyway: he guarantees an attempt within three months, and his fee is a minimum of ten million dollars for a U.S. kill, or ten million euros for a kill in Europe or the Russian Federation.\"\n\n\"In gold?\" I asked.\n\n\"Doesn't say here.\" said Muscone, looking through the report. \"No... apparently in currency, cash.\"\n\n\"Hmmm,\" I said, \"so he keeps his money liquid and able to move around. Interesting.\"\n\n\"Yes.\" said Muscone. \"Anyway, we got some intel that JACKAL is in the United States, and was last known to be headed to the City. And that intel also suggested that the Iron Crowbar was his target.\"\n\n\"May I?\" I asked, taking the report from Jack. I don't think he intended for me to read it, but he did not object an I perused its pages.\n\nAfterwards, I said \"I hate to say this, and don't you get any ideas...\" I grinned as I continued: \"...but if someone wanted to kill your friendly neighborhood Iron Crowbar, it would not be all that difficult to do. Case in point: I've been kidnapped twice. Someone could just as easily have killed me on the spot those two times. I try to take precautions...\"\n\nI then finished: \"Anyway, the point is that someone does not need to hire the Ten Million Dollar Man to rub me out. So something else is going on here. It may be related to me, or someone is using my name as a decoy to hide their real purpose and intent.\"\n\n\"It sounds so simple when you explain it.\" said Muscone. \"And you're right. So... what do you think could be going on here? And if JACKAL is not after you... who is he after?\"\n\n\"It would have to be someone very important, and someone hard to kill, as you said.\" I replied. \"And I don't know of anyone, except maybe your boss, who would merit such expensive attention. Well...\"\n\n\"What?\" said Muscone.\n\n\"P. Harvey Eckhart.\" I said. \"There have been probes of 'The Vision' property in Coltrane County, and he has tight security. It would be hard to kill him... but does even he merit the pursuit of this Chameleon guy?\"\n\n\"What about your wife?\" asked Muscone.\n\n\"Who is trying her damnedest to retire from the CIA?\" I asked back. \"And again, who wants to pay someone ten million dollars to kill her? A needless expenditure of money. Let me ask this: does this guy do anything besides kill? Does he steal art? Diamonds?\"\n\n\"Not that we know of.\" said Jack. \"Just an assassin for hire.\"\n\n\"Who trained him?\" I asked.\n\n\"We don't know.\" said Jack. \"As you just read in that report, he grew up in Switzerland. His mother was Swiss and his father was French and a diplomat, mostly to African nations. He was in the Swiss Army upon reaching adulthood, as all adult Swiss men are, but beyond their basic training, we have no record of him being in any military.\"\n\n\"Swiss.\" I said. \"Banksters.\"\n\n\"What?\" asked Jack. \"What was that?\"\n\n\"That was me thinking out loud.\" I said. \"I am looking for anything, any scrap of information that explains this man... why he became an assassin, what motivates him, stuff like that. These guys usually start out in someone's secret services, CIA, KGB, Stasi before it was dismantled...\" I went into a reverie.\n\n* * * * * * * * * * * * * * * *\n\nTom Riordan and the young man 'Rusty' were gone. Michael Burke and Doug Jackson went to find their wives, and they found them in the main room of Burke's suite. Roberta Jackson and Jeanine Burke Burke were chatting about children, but Michael could feel the strain between the women.\n\n\"Well, ladies, shall we go to lunch?\" Michael said.\n\n\"Doug,\" Roberta said to her husband, \"I think we need to get back home before this weather front comes in.\"\n\n\"I do agree with that.\" said Doug Jackson. \"Michael, we'll have to take a raincheck on lunch.\" The Jackson's left for their room, and would check out and leave within fifteen minutes.\n\n\"They were in a hurry to go.\" said Michael to his wife.\n\n\"Roberta's really worried about the weather.\" said Jeanine. \"She said three times she was concerned about getting back home.\"\n\n\"Yes, Doug mentioned it also.\" said Michael. He peered at his beautiful wife. \"You don't like her, do you?\" he said. \"Roberta.\"\n\nJeanine looked up into her husband's eyes. \"No, and the feeling is mutual. I think she's a racist, and a virulent one. And she knows I'm not one. And we don't have much else in common to talk about except children. And that brings up memories for her about her son being murdered over in Coltrane County.\"\n\nMichael nodded. \"Yes, I think that's their obsession... their son's death.\"\n\n\"So,\" Jeanine said, \"what did you and Doug and your guests talk about?\"\n\n\"Oh, nothing much.\" said Michael. \"Just some possible business deals.\"\n\n\"What kind of business deals?\"\n\nMichael began to look peeved at the line of inquiry. \"Just... things related to my company, maybe some real estate deals up near the Lake.\"\n\nJeanine peered at her husband, then lowered her eyes. \"Michael we need to talk. Every time we come here, you meet with strange people, then you won't talk to me about them nor what you're doing with them. This is the first time I've felt like you're putting up a wall and trying to hide something from me.\"\n\nMichael peered back at his wife, seeing her piercing stare. He said \"Look, honey, you know in your law practice that there were things you didn't discuss with family. I've got some business things going on that I can't talk about.\"\n\n\"Why not?\" said Jeanine. \"What is so secret that you can't talk to your wife, not to mention your real estate lawyer, about it?\"\n\n\"Okay, I was trying to say it the nice way, but obviously that's not working.\" Michael said, anger creeping into his voice. \"So I'll tell you this way: I cannot tell you what it's about, and I'm not going to, at least not until everything is finished. Now stop asking me about it.\"\n\n\"Michael, I---\" Jeanine started.\n\n\"NO MORE!\" Michael shouted. \"DROP IT!\"\n\nJeanine's beautiful face mirrored her total shock. She got up, grabbed her two sons, and took them into her bedroom, slamming the door shut and locking it behind her.\n\n* * * * * * * * * * * * * * * *\n\nJack Muscone took me to the Cop Bar for lunch, where he had the Double Cheeseburger Plate that was named in his honor. I must admit that I had the Double Cheeseburger plate as well, and it was very tasty.",
        "Once I got back to my office, I considered what had been told to me, trying to put together the pieces of the puzzle in my mind, and where this JACKAL fit in. I also had to make a decision, an important one that could have ramifications.\n\nFinally, I decided. I got up to leave. As I was walking down the hall, Cindy came around the corner.\n\n\"There you are.\" she said. \"Where are you off to?\"\n\n\"I'm on a mission.\" I said. \"I'll talk to you later.\"\n\n\"I'll come with you.\" she said. \"You probably shouldn't be driving around alone these days.\"\n\nI did what I had to do: I turned on her. \"No.\" I said. \"You stay here and mind the store. I'll be back soon. That's an order, Captain.\" With that, I went out the side entrance, leaving a stunned platinum blonde in the hallway.\n\nI drove straight to the Cabin on the most traveled, open streets of the Town... down College Avenue, up University Avenue, then turning right on the road that led to the Cabin. Getting there, I went inside to my office and opened the wall safe. I pulled out the blue burner phone I kept in the safe, along with the red and green burner phones.\n\nGoing outside, I went up the trail that led to the top of the mountain and over it, careful to watch and see if I was being observed. Apparently not, I thought to myself. Finding a rock on the trail that overlooked Reservoir Lake, the golf course, and further east, I sat down to send an email on the burner. Destination: France.\n\nPart 3 - Testing, Testing\n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" yelled the lovely redhead from in front of the State Weather Station at 7:00am, Thursday, December 22d. \"Channel Two News has learned that the expected snowstorm tomorrow will be even bigger that originally expected. Our Fox Weather affiliate believes we will set a snowfall record for Christmas Eve and Christmas Day!\"\n\nBettina went on: \"The City is making preparations for the storm, as well. City Airport will remain open for as long as possible, but is expected to shut down on Saturday, Christmas Eve, as temperatures drop, causing black ice and other dangers.\"\n\n\"Grocery stores are being raided and emptied,\" Bettina went on, \"and staples like diapers, powdered milk, toilet paper, and other dry goods are gone from the shelves of Wal-Mart and Target. Meanwhile, Town & County Police Captain Teresa Croyle says that all of the Public Service Departments as well as the Electric Company are ready to help stranded people and battle the damage the storms will cause...\"\n\n\"What, they don't ask you for comments any more, Commander?\" asked Theo Washington in MCD as we drank our coffee.\n\n\"Actually, not as much.\" I replied. \"Our new Public Relations Officer, Captain Briscoe, will either comment himself, or go to the divisional source if he can. He only goes to the Chief or me if he can't find them or if it merits my personal acerbic wit.\"\n\n\"If that were the case,\" Cindy said, \"then he'll go to Captain Croyle every time. Her acerbity and her wits are sharper than yours.\" A red crowbar was waved in her general direction. Teresa merely gave the look that could kill and went on drinking her... water. She was on an overnight fast for her appointment with Laura.\n\n\"The good news,\" I said, \"is that people will be staying off the roads, and we should have much fewer drunk driving accidents. I've already contacted every bar in this County and warned them that my Captain of Operations will not take kindly to any overservings leading to drunk driving on these icy roads. So most of the bars will be shutting down.\"\n\n\"Good.\" Teresa said flatly.\n\n\"How did you contact every bar, Commander?\" asked a stunned Joanne Warner.\n\n\"I'm the Police Commander.\" I said. \"They take my calls.\"\n\n\"Sure it's not because you do business with all of them?\" Cindy asked. The red crowbar was again utilized as a warning device.\n\n\"How many bars are there in this County?\" asked Theo.\n\n\"There are two hundred and seventy-six liquor licenses issued and currently valid.\" I said. \"And by the way, I emailed them all, I didn't have to call anyone. Ain't technology wonderful?\"\n\n* * * * * * * * * * * * * * * *\n\nDr. Laura Fredricson closed the flaps on the portable x-ray machine in her office, then Nurse Jones put its lead-lined cloth cover on it and put it away. \n\n\"Okay, that will wrap this up.\" Laura said. She had thoroughly examined Teresa physically, taken bloodwork, taken a urine sample, then the x-ray, all the while asking Teresa questions:\n\n\"So are you feeling any pain during intercourse?\" Laura had asked.\n\n\"Sometimes.\" Teresa replied. \"Todd is pretty... big.\"\n\n\"Yes.\" Laura said, knowing Todd Burke's endowment very well. \"Have you always had pain during intercourse with Todd?\"\n\n\"Not really, just the last few months.\" Teresa said. \"Sometimes he gets intense when he's about to climax.\"\n\nLaura said nothing more about that, just asking about Teresa's diet and exercise regimen. Teresa explained how she'd been training in Aikido with Todd, Barry Oliver, and Todd's assistant Mariko, under the tutelage of an Aikido sensei.\n\nLaura said to the lovely Nurse Jones: \"Okay, take these samples to the Hospital for the usual tests. Charge it to my Federal grant on pregnancy research.\"\n\n\"That's okay; I've got insurance.\" Teresa said.\n\nLaura smiled. \"We'll save the TCPD's insurance a few dollars and put it on the Federal Government's tab.\" she said. \"After all, you're one of my husband's finest and favorite Officers.\"\n\n\"That's... very nice of you.\" Teresa said.\n\n\u2028\"He's very happy you're taking this step.\" Laura said. \"So am I. I'm sure it wasn't an easy decision to make.\"\n\nTeresa realized this was the psychological portion of the examination. \"No, it wasn't easy.\" she said. \"For a long time, I never wanted kids, nor to continue my father's line. But then I realized I had to let some of that go, do this for Alexis and Amy, and for Todd, of course.\"\n\nLaura said \"And for yourself. This is going to be your baby.\" Teresa nodded.\n\n\"Okay,\" Laura said as Teresa got off the examining table and began dressing, \"the tests won't come back until next week because of Christmas and all the short-staffing at the Hospital. What are you doing next week?\"\n\n\"Oh geez.\" Teresa said. \"We've got Dr. Eckhart's seminar to secure. They're setting up on Tuesday, the seminar is Wednesday through Friday.\"\n\nLaura nodded. \"Well, I'm very influential with the Police Commander there. So if I need you to have more tests, I will have him direct you to come my way.\"\n\n\"Sounds like you won't be taking 'not yet' for an answer.\" Teresa said.\n\n\"Well, it'll depend on how these tests come back, and if we'll need to run more.\" Laura said. \"Meanwhile, stay on the pill, continue eating the diet that the literature I gave you talks about, and we'll go from there.\"\n\n\"Okay.\" said Teresa. \"Thanks, Doctor, and thanks for seeing me.\"\n\n\"My pleasure.\" Laura said. Nurse Jones escorted Teresa out before taking the samples to the Hospital.\n\nLaura went to her office and picked up the phone. \"Yes, this is Dr. Fredricson.\" she said. \"I need to know if there are any openings for the MRI machine next week...\"\n\n* * * * * * * * * * * * * * * *\n\n\"There she is!\" Cindy said as she and her sister Molly watched the crowd of people coming at them at City Airport. \"Mom!\"\n\nMargaret 'Maggie' Ross saw her daughters and rushed up to greet them. After a big group hug, Maggie said \"Oh, you both look great! I am so glad to see you!\" More hugs were exchanged.\n\nAs they went to baggage claim to get Maggie's luggage, Maggie of course asked first about Ross and Ian.\n\n\"Growing like weeds.\" Molly said. \"And they'll be happy to see their grandma.\"\n\n\"Oh, I'm going to have so much fun spoiling them!\" Maggie said. \"Cindy, how are things with you?\"\n\n\"She's been kicking butt.\" Molly said, before Cindy could answer. \"Solved some big cases, cracked some perps down hard.\" \n\nMaggie put her arm around Cindy's waist and hugged her as they walked. \"That's my girl!\" the proud mom said. Cindy smiled shyly and blushed a bit.\n\nAfter getting Maggie's luggage, they piled into Cindy's Police SUV. \"It's got four-wheel drive.\" Cindy said by way of explanation. \"We've got a big storm coming in.\"\n\n\"And that reminds me.\" Molly said as she took the shotgun seat, \"We need to talk about where you're going to stay, Mom. You can stay with me and the boys at my condo in Nextdoor County, you can stay at Don's Cabin like last year, and Cindy has an extra room in her condo.\"\n\n\"It might be boring there.\" Cindy said. \"The only problem with the Cabin is that it's on that hillside, and after the storm hits you might be trapped up there.\"\n\n\"Molly,\" Maggie said, \"why don't you bring the boys to the Cabin and we'll all stay there. It's not like I haven't dealt with winters and snow before.\" They all laughed.\n\n\"I'll tell Don.\" Cindy said. \"And I'll stay up there with you all. I know this SUV can handle the mountain---\"\n\n\"Unless you drive at the speeds you normally do!\" Molly said, teasing her sister.\n\n\"Oh, you will not go fast with my grandbabies in the car!\" Maggie admonished...\n\n* * * * * * * * * * * * * * * *\n\nHelena buzzed me and said that the Duty Desk Sergeant had a package for me. I told her to let him bring it in. He did so.\n\n\"Sir,\" said the Sergeant, \"this is addressed to your home, but the Postman dropped it off here. It is reeking of perfume. We had the dog sniff it, but he didn't react to anything.\"\n\n\"Put it on my desk, here.\" I said as I put on latex gloves. I examined the box with my magnifying glass, seeing nothing unusual. It was a reinforced manila envelope, and the postmark showed it had been locally mailed.\n\nThen the scent of the perfume wafted into my nose, and I knew what this was about. The perfume was the same as what was worn by my sister Elizabeth. I had a fleeting flashback to the 'Murdered Chessplayer' case.\n\n\"Okay,\" I said, carefully slitting open the edge of the envelope. There was no powder inside. Just a bubble-wrap package that computer components were often sent in, that shielded the contents from radiation. Inside were two jump drives.\n\n\"Okay.\" I said. \"Thanks, Sergeant. I don't think this one is a problem. You can go.\" The Sergeant left.\n\nI turned to my safe and opened it, and pulled out my 'clean' computer. This computer had never been connected to the Internet, and had some shielding to prevent its radio signal from going out. I reinforced that with my bug-killer device, turning it on. \n\nAfter powering up the computer, I plugged in the jump drive. There was one file on it, and after checking for viruses, I opened the file. This was from my sister Elizabeth, I immediately realized; she'd arranged for its delivery.\n\n\"Hello Baby Brother.\" the file read. \"The man you asked about, known as JACKAL by the Americans and 'Le Cam\u00e9l\u00e9on' by the French, is one of the best assassins in the world. His accuracy with rifles is on par with your ex-wife.\"\n\nThat did not make me feel any better, I thought, as I continued to read. Elizabeth gave a rundown of his past history, then added this:\n\n\"His experiences in Africa are believed to have made him a white supremacist. He allied himself with a neo-Nazi group in France and Germany, and again allied with Serbian groups in the Balkans, before becoming a solo mercenary assassin. He also worked with 'Bugs' Nelson, who was Henry Wargrave's operative in the Middle East and Israel.\"\n\nOh, the party never stops! I thought to myself. I read on:\n\n\"My sources tell me he went to America, possibly to the City. There is some word that he was hired to kill you, but there is debate on whether that is true or just a smoke screen. By the way, you've become famous in Europe, Baby Brother. Many of my associates were filled with joy to hear of Pastor Westboro's timely death. I'll try to find out more, but in the meantime, be careful, he is a master of disguises. If the target is not you, it might be your FBI Deputy Director or the former Japanese Intelligence master, Takaki Misaki. Say hello to my son and that lovely girlfriend of his.\"\n\nThe other zip drive was identical to the first. There was some data on JACKAL, including several passports, French and American, that he might be using. I made arrangements to cleanly copy that information to another jump drive. I secured my clean computer back in the safe.\n\nThen I went to the janitor closet and got some Clorox and the cleaning mixture that I knew contained Phosphoric Acid. Going outside into the parking lot, I put the pyrex bowl I'd brought on the asphalt, poured in some clorox, pried open the jump drives, and dropped them in. The mixture bubbled merrily. Better living through chemistry! I thought as I watched.\n\nOnce the Clorox bath was done, I poured out the Clorox and poured in some of the other cleaning solution. More happy bubbling, and the jump drives were pretty much dissolved. Still wearing latex gloves, I took the pieces of jump drive out and set fire to them.\n\nAs I finished, I realized I had company. Captain Croyle and Sergeant Rudistan were both watching. \"If you didn't major in Chemistry,\" I called out, \"then you missed out on all the fun! Captain, you can go back inside. Sergeant, I need to talk to you for a moment...\"\n\n* * * * * * * * * * * * * * * *\n\nI got back home fairly late that evening. I had gone by the FBI rooms in the Federal Building and dropped off the passport information on JACKAL. I told Jack Muscone I got it from a C.I., and to not ask further. He mentioned something about ordering wood for a bonfire. Then he said that I would be his C.I. when he sent it up, to protect me. I was grateful to hear that.\n\n\"Daddy!\" I heard as I entered the house. It was my son Jim, who was beginning to learn to talk and to get attention. He ran up to me and I picked him up and we went into the den. Bowser barked at me and Carole came up for a hug. Buddy just sat and watched from in front of the fireplace.\n\nAfter supper, Laura said \"It's getting to be someone's bedtimes.\"\n\n\"Awwww.\" Carole said. She was a curious one, and was not a fan of bedtime, like her father before her. I told her she could read me a book once she was ready to go to bed, and that got her going. And after baths, hugs, being read the \"Santa's Reindeer\" book for the fifth time, and tucking Carole and Bowser in their respective beds, I went back downstairs to find a large drink made for me, and my wife drinking her own gin and tonic.\n\n\"So,\" I said as I sat down beside Laura and took a swig of my 'Godfather', composed of Amaretto and Scotch, \"how was Teresa's exam?\"\n\n\"Well, the tests will be back next week.\" Laura said. I knew then something was not quite right.\n\n\"I infinitely prefer to hear those words preceded by something like 'It went great!'.\" I said. \"Why am I not hearing that?\"\n\nLaura replied \"Not much gets by you.\" Then she said \"Teresa said she had been feeling pain during intercourse the last few weeks. Now we both know Todd is hung like a horse, but she's been dating him for what, a couple of years now, at least? and no complaints before. I asked for some extra tests on the bloodwork, but like I said, they won't be back until next week. It may be nothing, but I want to make sure.\"\n\n\"Uh huh.\" I said. \"But you're worried.\" I thought about it, then said \"You know, now I remember Cindy saying something about Teresa admitting to being in pain. And there was one day Teresa came in in the morning and she hadn't slept...\"\n\n\"When the tests come back,\" Laura said, \"I might schedule an MRI for Teresa. It's hard as hell to get the machine, so whenever I can get it, I need her ass at the Hospital pronto! And that's where you come in.\"\n\n\"Just call me and I'll get her ass up there.\" I said. \"Even if I have to get Cindy to carry her...\"\n\n* * * * * * * * * * * * * * * *\n\nThe storm came in overnight. In the early morning hours of Friday, December 23d, the snow began, heavy wet flakes that quickly began to pile up. As citizens awakened that morning, they were finding that accumulation had already started.\n\nIt went on relentlessly all day, and soon all the County was bathed in white under gray skies. Snowplows went to work, and the main roads remained in drivable condition. But we all knew that after nightfall, the temperatures would drop, and more snow would be on the way.\n\nPart 4 - Remembering\n\nDawn, Saturday, December 24th. Christmas Eve.\n\nAs I slowly approached the grave site where Amy had been laid to rest, I saw Teresa at the foot of Amy's grave, sitting on her knees in Japanese style, seeming to be in deep contemplation. The gravestones were poking out of the white snow piled on the ground, the snowdrifts almost three feet high in some places.\n\nTeresa finally became aware that someone else was there. She looked over her shoulder and saw me, waiting patiently. She half bowed as she said \"Hello, Commander.\"\n\n\"Hello, Teresa.\" I said quietly, bowing back and then coming up to her. I put the bouquet of flowers I'd brought at the base of Amy's gravestone, then sat down on my knees next to Teresa. \"My apologies for disturbing you.\"\n\n\"You're not.\" Teresa said, her voice eerie in the snowbound quiet of the morning, during a respite from the storm. \"I'm glad you're here.\"\n\nWe sat silently for a few moments, then Teresa finally spoke. \"Coming here... I know Amy didn't die on Christmas Eve... but it's like visiting Alexis's grave, too.\"\n\n\"I understand.\" I said. \"What was... Alexis like?\"\n\n\"She was...\" Teresa started, then faltered, then sucked in her breath and said \"She was always sweet to me, protecting me, helping me.\"\n\n\"What was she like as a person?\" I asked. \"Around town, among friends and all that?\"\n\n\"She was always popular in school, had friends, in all the social clubs.\" Teresa said, searching for words, then finding them: \"In some ways... well, she was like Todd, and I guess that makes me Ned...\"\n\n\"You're no Ned.\" I said. \"You are a much, much better person than that. But I understand what you're saying. But you had a good relationship with her in the time you had her with you. My relationship with my sister... not so much. Not so much.\"\n\n\"But you had a chance to make it better.\" Teresa said. \"I never... got to say goodbye to her.\"\n\nThe tears began flowing from Teresa's eyes, and she finally spilled it: \"Why? Why are all the people I love being taken away from me? Alexis... Amy...\"\n\n\"Not all of them are gone.\" I said. \"Cindy's still here for you. And you have me and your Police family.\"\n\n\"But... what if Cindy goes somewhere else?\" Teresa blurted out. \"What if something happens to you?...\" She realized she'd said more than she should, but I let her off the hook.\n\n\"No one's going anywhere.\" I said. \"And Todd is there for you, and he wants to be there for you even more. You just have to embrace the love for you, like Bowser and Buddy do. They don't question anything. They just live for the moment, and embrace the love given them.\"\n\nTeresa nodded. \"I guess I'm being selfish. I should count my blessings.\"\n\nI said \"You're not being selfish to mourn the family you've lost. But yes, you definitely should count your blessings. And I need to practice what I am preaching, and count my blessings. Right now, I feel like I need to go pet some dogs while I'm counting my blessings.\"\n\nWe got up, and then suddenly I felt Teresa wrap her arms around me. \"Thank you, Don. Thank you for being there for me... more than anyone else has been, except Alexis.\" She held me tightly in her hug. I hugged her back.\n\n\"You're welcome.\" I said. \"It's what we do in our family... and you are my family, too. Now let's get the hell out here before the storm starts up again, eh?\" Teresa gasped a laugh and we headed back to Town...\n\n* * * * * * * * * * * * * * * *\n\nThe Fire Department made sure to sweep the road leading up to The Cabin, ostensibly to make sure the Police Commander and a couple of his Captains could get to Town in an emergency. It's possible I just asked them to think of us while on the job, and of course they did.",
        "It is good to be the Police Commander.\n\nI delivered Teresa to The Cabin, where her mission for the day was to pet Buddy. And a successful mission it was. Buddy helped by letting Teresa pet him as long as she wanted to. Meanwhile, Ian and Ross were receiving a lot of love from their maternal grandmother.\n\nLater that day, I transported my mom, Laura, Carole, Jim, and of course Bowser to the Cabin. Carole and Jim were very happy to see their brothers. Buddy was happy to see Bowser. A little bit later, Todd brought little Doug up, and it was a full-blown party.\n\n* * * * * * * * * * * * * * * *\n\nAfter dinner, I went outside as Buddy and Bowser went to do their business. I had shoveled off the walkway, but not their trail, and their experience with the snow covering their trail had been one of not really knowing what to do. They got about ten feet along the trail and decided that was far enough...\n\nI looked over the Town, which was glistening white in the reflected light off the clouds. I had brought my night-vision binoculars, and made a sweep of the area. No threats anywhere nearby, that I could tell. None near the Mountain Nest, I observed as I looked down at it.\n\nSo... why me? Why was this JACKAL person after me? He's just the hired gun, I thought, the real question is who is hiring him to come after me, and why?\n\n\"You need to get back inside.\" I heard a voice behind me say. It belonged to Cindy. \"It's cold out here, and we're getting ready to put all the kids to bed.\" Two excellent dogs had already followed that advice, and had gone back inside when Cindy opened the door.\n\n\"Okay.\" I said. \"So, how are things going with your mom?\" I had observed that Cindy had a coat on, as I did I; ergo, she wanted to talk.\n\n\"Good.\" Cindy said. \"I did bring up her possibly meeting my father, Dr. Eckhart, again. He's always said he'd be glad to see her again, if she was amenable to it.\"\n\n\"And is she?\"\n\n\"I think so.\" Cindy said. \"And if she moves down here, it'll be inevitable that it happens. I told her that.\"\n\n\"Cool beans.\" I said. \"Is she moving past your father... I mean, her husband's death?\"\n\n\"I think so.\" said Cindy. \"And I don't expect her to start dating my dad or anything like that. It'll be awkward. I think the problem is going to be Molly.\"\n\n\"I think you're right.\" I said. \"What gave it away for you?\"\n\n\"Molly is... well, she's not opposed to it,\" Cindy replied, \"but I think she's a bit uncomfortable with it. After all, she's the one on the outside looking in. And also, though she was very, very young, our mother left her with her father during her months with my father. Molly has realized that my mother almost abandoned her. I think that shakes her up if she lets herself remember it.\"\n\nI nodded. \"Good point.\"\n\n\"What about Teresa?\" Cindy said. \"She seems to be doing well.\"\n\n\u2028\"She's trying.\" I said. \"But I've resigned myself to the fact that she will never, ever, get over Christmas Eve being the night her sister died. And she will never, ever get over what her father said to her that night. That one burned her to her very soul.\"\n\n\"Guys, get back inside.\" ordered Laura from the doorway. We obeyed that order, and went inside.\n\n\"Okay, guys,\" Todd said, standing up after Cindy and I took our coats off, \"I have an announcement to make.\" He went over to where Teresa was sitting, next to the Christmas tree. \"I know that this is a hard day for Teresa, and I want to change that. We need better memories for her...\"\n\nWith that, my handsome nephew dropped to one knee and opened the small box in his hand. \"I want this night to be remembered for something better, for this. So... Teresa, will you marry me?\"\n\nThe room just about erupted. Teresa's hands went to cover her mouth and nose. Cindy, Molly, their mom and my wife were just agog. Phyllis was smiling, but it was the smile of a woman who was seeing things unfold just a step or two behind her vision.\n\n\"Oh my... oh my gosh... I can't believe it...\" Teresa said. Then she realized an answer was needed. \"Yes! Yes, of course.\" she said. Todd grinned and slid the beautiful diamond engagement ring on Teresa's finger, the band being white gold instead of yellow gold. Then they hugged and kissed as everyone applauded.\n\n\"Okay, a toast to our newly engaged happy couple!\" Laura said. She already had champagne glasses ready to go. Todd popped the cork on the champagne bottle that was being chilled in the ice bucket near the kitchen, and poured for everyone. We all toasted the happy couple, then some of us began drinking more of the champagne. Yes, I admit I was one of them, and I was going to get a bit toasted.\n\nAfter getting the kids to bed, with only Carole and Doug being excited about what was to come overnight, we sat around and talked some more. Well, everyone else talked; I observed and deduced. Cindy's mom was looking happy at being with her family. My mom was also happy in the same way. Cindy was looking like she was beginning to relax, while Molly was looking a bit tense. Todd was talking with Teresa, making her laugh as they talked about her surprise at being given the ring... which Teresa had not expected until the next day.\n\nAnd Teresa... there was no mistaking it. Even the proposal could not wipe out the years of pain this day had brought, and the memories of Alexis, and then of Amy just the year before. And I wondered if there would ever be a way for Teresa to expunge that pain, and be truly happy...\n\nPart 5 - Decimation of Hope\n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" shouted the lovely redheaded reporterette at 7:00am, Tuesday, December 27th. \"Channel Two News has learned that the group 'Citizens for Police Accountability' has filed a lawsuit against the Town & County Police Department!\"\n\nBettina went on: \"The lawsuit was filed over the strong Police presence at the Bulldogs-Engineers game last month. Spokespersons Jay Swenson and Ken Eidex said in a statement that they were forced to file the lawsuit after the Town & County Public Safety Department refused to meet with them about Commander Donald Troy's excessive use of force.\"\n\n\"In other news,\" Bettina went on, \"State Department of Justice Regional Director Harold Bennett announced that former Assistant District Attorney Jenna Stiles has been hired as a State Attorney for the Region. Ms. Stiles will be prosecuting cases on behalf of the State DOJ. Ms. Stiles said in a statement that she looks forward to representing the State's interests in cases involving the Town & County.\"\n\n\"Is that a good or bad thing?\" asked Theo Washington, astutely picking up on the subtlety of Jenna's statement.\n\n\"I dunno.\" replied Captain Cindy Ross, Jenna's former fianc\u00e9e.\n\n\"Sounds a little ominous.\" I said. \"I can tell you this much: she will not be a friend of Krasney in Court. And one of the roles the State DOJ is trying to create for its State Attorneys is that of defending civil rights. If Jenna thinks Krasney is not giving enough support to minority or women's interests in his prosecutions, she can step in and prosecute those herself... and possibly go after Krasney for not doing so.\"\n\n\"You think Mr. Bennett will keep her in check?\" asked Teddy Parker.\n\n\"I don't know.\" I replied. \"With him, it depends on how the political winds are blowing.\"\n\nJust then I was interrupted by Bettina's last news item: \"And one of the County's, if not the State's most eligible bachelors is now off the market! BOW Enterprises has announced that their CEO, Mr. Todd Burke, is engaged to Police Captain Teresa Croyle of the TCPD. Our congratulations to the happy couple!\"\n\nThere was applause in the room for Teresa, who was sitting there drinking coffee with the rest of us. The engagement ring on her finger suddenly became much more noticed. I eventually left as the coffee klatch became an exercise in diamond inspection among the women...\n\n* * * * * * * * * * * * * * * *\n\nJack Muscone scheduled a meeting with me for 11:00am at the Federal Building. That was smart of him, I thought: it'd take an hour at least to have our meeting, then we could go to the Cop Bar for delicious double cheeseburgers. That was an FBI plan I could live with.\n\nOnce I got there and we were seated in the plexiglass cube, Jack said \"The original paperwork you signed on JACKAL covers all conversations about the subject, so you won't have to re-sign paperwork every time you come in.\" I nodded.\n\n\"What we've found out,\" said Muscone, \"is that one of the U.S. passport numbers you gave us was used to gain entry into America about two months ago. October 27th, to be exact. Flight from Paris, France to New York City.\"\n\n\"Did y'all check to see if the other passport numbers were used after that one was?\" I asked.\n\nJack looked over his notes and said \"Yes. The computer ran the numbers and didn't stop if one hit came up, so all of them were checked. That was the only hit.\"\n\n\"Two months ago.\" I said. \"Right about the time Laura's office was ransacked.\"\n\n\"Think there's a connection?\" Jack said.\n\n\"As of now, not really. But beyond that... this just does not make sense!\" I said in exasperation. \"Why would he come over back then? I really would think he would wait until just before his move against me to come over here.\"\n\n\"Maybe he had other business first.\" Jack replied. \"Or maybe he's been scouting you out.\" Both were logical points.\n\n\"True.\" I said, trying to think. \"But it doesn't seem right.\"\n\n\"Don,\" Jack said, \"I don't requisition firewood for very many people. Most criminals are stupid, and thank God they are!\"\n\n\"Yes, but this JACKAL is not some dumbass like Dirty Lennie or Steven Ikea.\" I replied. \"He's hired for ten million a pop, and there is a reason he's paid that sum when he demands it... because he's that good. No, this does not make any sense... the whole damn thing does not make sense...\" I went into a reverie.\n\n\"Well, you won't be any less dead if he succeeds.\" Jack said.\n\n\"True.\" I said. \"Have y'all found any financial information on him?\"\n\n\"Not a scrap.\" said Muscone. \"And we're not allowed to talk to your Mouseketeers about this one, either. But our own people are really good, and they haven't found anything. We figure he has Swiss bank accounts that are being shielded by their banking laws.\"\n\n\"He's got to have something on this side of the pond, maybe offshore, Cayman Islands, or something like that.\" I said. \"For his American earnings.\"\n\n\"Nothing there, either.\" said Jack. \"By the way, my boss and I did come up with one idea to explain why he's after you, so see how you like it: maybe Raymond Westboro had set up something in the event of his death, something that would trigger the JACKAL to come after whoever killed Westboro. And that being you, maybe now that's coming to fruition?\"\n\n\"Any ten million dollar gaps in Westboro's finances?\" I asked. \"Especially after his death?\"\n\n\"Not that we've found,\" replied Jack, \"but Westboro really tangled up his financial dealings. Threads all over the place, knotted up like crazy... Who knows what may have happened and we plain missed it?\"\n\n\"That's not the worst idea I've ever heard.\" I said. \"My only objection right now is that it was not like Westboro to think for even a minute that he would lose, so he wouldn't set up a doomsday scenario like that... oh, wait...\"\n\n\"What?\" asked Muscone.\n\n\"Maybe not a Westboro post-doomsday scenario,\" I said, \"but what if it's that kind of scenario for something or someone else?...\"\n\n\"What do you mean?\" Jack asked. \"What scenario?\"\n\n\"Mittens Baker.\" I replied. \"Providence Springs, and Apple Grove.\"\n\n* * * * * * * * * * * * * * * *\n\nIt was a long day. Security was ramping up around the Civic Center as 'The Vision' staff and others began building the stage, putting in the audio/visual network, and setting up the tables and chairs for the big event the next day. Both Cindy and Teresa were at the Civic Center all day, planning their portions of the security details.\n\nThe Chief left at 4:00pm, telling me that he was going to a meeting with the Sheriff and other Public Safety Department Chief-level peeps, and saying he would not be back in the office today. He instructed me to take off and go home. I did so, knowing I could think about the problem of the JACKAL while petting Bowser and Buddy just as easily as I could here in the office.\n\n\"Well, hello son.\" my mother said as I came into the Mountain Nest. \"You're home early, for you, that is.\"\n\n\"Yes, the Chief sent me home.\" I said. \"How are the kids?\"\n\n\"Good. They're napping.\" said my mom. \"My, you look either tired or worried. What's on your mind?\"\n\nI sat down beside my mom on the sofa that faced the one against the wall. \"I can't tell you everything, Mom, but there's some scoop that a high-level assassin might be after me.\" Without going into too much detail, I outlined the 'strangenesses' of the whole case.\n\n\"Well, son,\" said my mom, \"it sounds like diversion to me, and you are not the real target.\"\n\n\"Yeah, I thought of that.\" I said. Just then Bowser bounded up, followed by Buddy. I began petting the dogs as I thought and talked. \"But why bother with an expensive assassin?\"\n\n\"To make you keep your head down.\" Phyllis said. \"You're thinking about it now. That means your enemies are succeeding, though you're right to think about it.\"\n\n\"So the question is... who wants me distracted and keeping my head down?\" I said. \"I dunno, Mom... it still doesn't fit the data.\"\n\n\"So, what is your idea, then?\" asked my mom. I realized she was playing the game with me she always had, putting something out there to make me think about it, and ultimately come up with my own answers.\n\n\"Well, nothing really fit... oh, wait a minute... one thing does...\" I went into a reverie. When I finally came out of it, Buddy and Bowser were curled up on either side of me on the sofa, half-asleep.\n\n* * * * * * * * * * * * * * * *\n\nI was finishing up cooking dinner when Laura came in. Not realizing I was home, she had not set her face when she came in, and I had that split-second to read it before she saw me.\n\n\"Oh, you're home early.\" she said. \"And dinner's just about ready! No wonder I married you.\"\n\nI smiled and kissed her. \"Yes, one of those rare days. So, what's bothering you? Teresa's tests?\" Laura's eyebrows arched for a second, then she conceded.\n\n\"Yes.\" my wife said. \"Her tests came back just a while ago. That's why I was running a little late.\"\n\n\"So don't keep me in suspense.\" I said.\n\n\"Let's have supper first.\" Laura said. That did not make me feel like eating, for sure.\n\n* * * * * * * * * * * * * * * *\n\n\"Carole,\" I said, \"green beans are for you, not for Bowser.\" My daughter looked up at me and arched her eyebrows the same way her mother did. \"Now eat your beans, sweetie.\"\n\n\"If I do, can I read you a story at bedtime?\" Carole said. Good grief, my daughter was becoming a Donald-Trump-level negotiator... but it was easy to concede this one, since I would be happy to let her read me a book anyway.\n\n\"Yes, if you clean your plate like I just did, you can read me a story.\" I said. Two plates were devoid of food at the end of suppertime, and Jim and his grandmother had eaten a good portion of theirs. By way of contrast, Laura had set a poor example for Carole; she had barely eaten anything. And the fear in my soul crept up even more.\n\n* * * * * * * * * * * * * * * *\n\nAs my mom got the kids ready for bed, Laura sat down beside me in the den. \"Here are Teresa's test results.\" she said. I opened the folder and immediately saw it.\n\nLaura went on as I read the results: \"I can't get the MRI until Thursday at 11:00am, but I reserved it, so have her at the Hospital an hour before then.\"\n\nI nodded. \"Do you want me to tell her, and before then?\"\n\n\"No.\" Laura said. \"I want to run the MRI first. And while it will be good to have you there, I need to be the one to tell her.\"\n\nI just nodded. I called Buddy and Bowser, who immediately ran to the back door. We went out to the backyard. As they went to do their business, I sat on the patio seat.\n\nI thought about all Teresa had gone through, and how she was just breaking out and going forward, and was just becoming happy in her life. And she was kicking butt in her new position with the TCPD. Everything I hoped for her was just in front of her grasp... and now this...\n\nI realized that tears were flowing from my eyes. I was crying, and I just let myself cry some more. This just was not fair, it just was not right. So close... and now we were going to have to tell Teresa that she had all the signs... of having ovarian cancer.\n\nTo be continued."
    ],
    "authorname": "WifeWatchman",
    "tags": [
        "mystery",
        "police drama",
        "crime drama",
        "iron crowbar",
        "non-erotic",
        "no sex"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/teresas-christmas-ordeal-ch-01"
}