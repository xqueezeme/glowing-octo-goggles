{
    "title": "Spring Break",
    "pages": [
        "*Author's Note: This is another story I nearly had finished. I added a couple more pages then summed it up. I'm still burned out, but I managed to force myself to knock this one out. I hope you enjoy it.\n\nI'm not sure how other services recruit officers who aren't ROTC students, but the Marine Corps uses commissioned officers, first lieutenants and captains, who are called Officer Selection Officers or OSOs (pronounced OH-sews) for short. Like their enlisted counterparts, they are saddled with monthly quotas, and like enlisted recruiters who don't make quota, they are relieved for failing to do so, effectively ending their careers. \n\nLike enlisted recruiters, OSOs work for a Marine major who serves as the commanding officer of a recruiting station (RS) who, in turn, works for a Marine colonel who's in charge of a recruiting district made up of many recruiting stations. The entire east and west coast regions are under the command of a brigadier general, respectively. He or she is referred to as 'the CG' or commanding general.\n\nOSOs typically serve three-year tours in a specific geographical area and recruit from any and all college campuses as well as looking for college graduates under 30 or whatever the current age limit is. More often than not, they wear what is called the dress-blue delta uniform, a term that means: short-sleeved khaki shirt, dress-blue trousers with red stripe, and a white barracks cover (often called a 'saucer cap' by Army soldiers.)\n\n******\n\n\"Lieutenant Lucas. You ready to see the boss?\"\n\n\"Um...yes, sir.\"\n\n\"Okay. I'll let him know we're here. Do you have any questions before we go in?\"\n\nTrevor Lucas had been an OSO for 35 months and never failed to make quota. Still, being summoned to see the commander of the entire district was either very good or very bad, and he couldn't help but wonder if this might possibly be bad.\n\n\"Am I being fired, sir?\"\n\nThe 34-year old major laughed, slapped the 26-year old lieutenant who would soon be a captain, on the shoulder, then said, \"No. Not hardly.\"\n\nThe major popped his head into his CO's office then said, \"Sir? I've got 1stLt Lucas standing by.\"\n\n\"Good. Bring him in,\" the 44-year old veteran of three tours in Iraq and one in Afghanistan said without looking up.\n\n\"Aye, aye, sir,\" the major replied before motioning to the younger officer.\n\nAs Trevor walked in he wondered for the briefest of moments if he should actually report as in standing in front of and centered on the desk while saying, \"Sir, First Lieutenant Lucas reporting as ordered.\"\n\nMarines didn't salute indoors, so that wasn't in question, but as the older man stood up and came around his desk to shake hands, Trevor's question was answered.\n\n\"Lieutenant Lucas. Damn good to meet you, son. Have a seat.\"\n\n\"Aye, sir,\" Trevor said acknowledging the direct order while waiting for the major to point to where.\n\nThe colonel, who wore eight rows of ribbons four across along with gold jump wings and a silver scuba mask on top that nearly went over the seam of the shoulder, grabbed a chair and sat across from him, ignoring the major.\n\n\"You've been kickin' ass and takin' names, Lieutenant,\" the colonel said with a smile.\n\n\"Things have gone pretty well for me, sir,\" the younger officer modestly replied.\n\n\"Bullshit! Marines make things happen. You don't exceed quota every single month starting with your first month for three years by chance. And the Marine Corps rewards outstanding performance.\"\n\nStill having no idea what was coming, Trevor, who was sitting up ramrod straight, replied, \"Yes, sir,\" as he glanced at the major for a facial tell or some other hint.\n\n\"We've got a big-ass military appreciation conference going on in Miami of all places in two weeks\u2014just before you PCS (PCS means permanent change of station and is shorthand for getting orders to a new duty station.) The CG's sending the five best recruiters from the east coast and the number-one OSO to the conference to put our best foot forward with the civilian community. The west coast is doing the same thing down in San Diego. The major will fill you in on the details, but you and the recruiters will spend five days in Miami representing us.\"\n\nThe nearly bald colonel who was built like like a fire hydrant smiled then said, \"Don't screw it up.\"\n\n\"No, sir,\" Trevor replied with a nervous laugh of his own.\n\nThe older man got up as did the major who nodded at Trevor to follow suit. Once he was on his feet, the squatty old salt slapped the lieutenant on his left arm hard enough to almost cause him to lose his balance.\n\n\"Keep up the good work, Lieutenant. You've gotta a helluva future ahead of you.\"\n\nHe turned his back and as he walked toward his desk, he said, \"Major? See the Gunny on the way out. She'll hook your young lieutenant up with orders and some info on the conference.\"\n\n\"Will do, sir,\" the major replied as he again nodded to Trevor to leave the room.\n\nThe female gunnery sergeant handed the major some papers and let him know she had the orders ready to go.\n\n\"I'll send them to your office two days in advance, sir. I'll do the same for the recruiters, but the lieutenant will need to get in touch with them and tell them when and where to meet once they arrive at their hotel in Miami which is...this one.\"\n\nShe had a brochure for the hotel, too, and handed that directly to Trevor.\n\n\"Got it. Thanks, Gunny,\" the major told her.\n\n\"Have fun, sir,\" she said to the lieutenant. \"I hear that's Spring Break week, so it should be pretty arduous duty for a single Marine like yourself.\"\n\nTrevor laughed and told her, \"You know what they say, Gunny. It's a tough job, but someone's gotta do it.\"\n\nShe laughed then went back to the mountain of paperwork in front of her having checked this one thing off of her list.\n\n\"Spring Break, huh? You need a major to carry your bags, Trevor?\" the older officer asked, once they were out of the admin office.\n\nHe understood the comment and laughed.\n\n\"You're welcome to tag along, sir.\"\n\n\"No, thanks. I don't want to be called back into that office again anytime soon for any reason. I'd like to keep my job, too.\"\n\nAgain, Trevor laughed as the major said, \"Speaking of jobs, the Colonel is right. You're killin' it, Trevor. Have a good time in Miami then get back here and get your relief snapped in. Captain Mortenson is due in two days before you get back. That'll give him time to check in and be ready to go to work the day you return.\"\n\nThe major opened the door of their government vehicle then said, \"And you'll have just enough time to get him locked on before you check out and head for Camp Lejeune.\"\n\n\"I am gettin' short, sir,\" the lieutenant replied, indicating he was near the end of his current tour of duty as an OSO.\n\nAs they drove back to the recruiting station, Trevor browsed the materials he'd been given. He and the recruiters would have one day of travel before and after the conference, and being single, he finally allowed himself to think about something other than making quota; something that had consumed him since his first day on the job. \n\nHe could count on one hand the number of women he'd hooked up with in the last three years, and that same hand had sadly become his best friend in the romance department. OSO duty required 12-hours days six or seven days a week, and that left precious little time or energy for anything else.\n\nBy the time they got back to the RS, Trevor had a pretty good handle on what he and the other Marines would be doing. It was mostly a public relations affair. He and the recruiters would be part of a multi-service outreach to the community. He'd only be speaking once to introduce his fellow Marines, who, in turn, would pitch in and help out various businesses that worked with troubled youth. The hope was to attract a good number of those to either get back on the straight and narrow or, if they were 18 and otherwise qualified, to consider joining one of the four branches of the military. Any names of prospective enlistees would be forwarded to local recruiters who would be extremely grateful for the help.\n\nThe following day he called each of the five recruiters he'd be responsible for and let them know everything he knew before asking if they had any questions. The only one who didn't was recently married and not on the hunt.\n\nAll but the married Marine made some remark about Spring Break and/or cute co-eds, and the only thing Trevor could do was laugh and assure them he'd try and give them as much free time as possible. After all, this was essentially what Marines called a boondoggle. It was an unofficial reward for being the best of the best, and if it included some 'horizontal time' with a hot, young college girl or two, all the better.\n\nThe day before he had to fly out, Trevor's latest and last-ever contact passed the physical and would be the last person he would ever send to Marine Officer's Candidate School in Quantico, Virginia, that summer. He'd already reached his quota, so this was icing on the proverbial cake and that extra contract helped the RS make its mission for the month.\n\nHilton Hotel, Miami, FL\n\nThe last recruiter to arrive was a 27-year old staff sergeant who went directly to the hotel lobby to meet up with the other Marines, his bags still in hand. He had no trouble picking out the one and only officer from the others who were all in civilian clothes. It was almost always obvious who the officers were just by the way they looked and carried themselves. Sometimes, Mustangs (officers who'd been enlisted Marines for at least four years) fooled them, but in this case he had no difficulty spotting the boss who was around six feet tall with sandy blond hair, perfectly straight, white teeth, and a face women undoubtedly found attractive.\n\n\"Lieutenant Lucas?\" he asked as he stuck out his hand.\n\n\"Yes. Glad to meet you, Staff Sergeant,\" the lieutenant said. \"Have a seat and we'll be done with business and everyone can go hit the...\"\n\nTrevor smiled then said, \"Weight room,\" and got a laugh.\n\nHe gave them 'the gouge', Marine-speak for what they needed to know for the following day before everyone exchanged room and cell phone numbers.\n\n\"Okay. So if there aren't any questions, we'll see everyone back down here tomorrow at zero six for chow. If you don't do breakfast, be here at zero seven and we'll head over to the convention center in the two cars we have between us.\"\n\nTrevor got a couple of, \"Yes, sir,\" responses along with an 'oorah' and one, \"let's go make some hot young co-eds' day!\"\n\nOnce they were gone, Trevor went back to his room and changed into some swimming trunks, grabbed a towel, his sunglasses and iPod, then went out the back of the hotel to the beach which was less than a hundred yards away.\n\nIt was warm and humid, just as he'd expected, but there was a decent breeze, and as far as he was concerned it was about as close to perfect as he could imagine. It was also as crowded as he'd thought it would be, and again, there was no surprise to find hundreds of college-aged kids, male and female, as far as the eye could see in either direction.\n\nHe found a small, open area in the sand, spread out the towel, then sat down and put in his ear buds. As his favorite music played he thought back on his own college days including the many hookups he'd enjoyed during the four most carefree years of his life. Those thoughts reminded his body of just how badly it needed female companionship which caused him to sit up and begin looking around in earnest.\n\nIt was just after noon, and while he was definitely looking, he realized the need for patience in order to hookup and decided to just sit and watch girls go by for an hour or so. After doing a ton of looking, he finally saw exactly what he wanted and got up and started heading her way.\n\nShe had long, dark hair, a very pretty face, and a body that made his react. But just as he got to within a few feet of her, a guy about her age walked up out of nowhere and put his arm around her. \n\nHe heard her say, \"Hey, baby! Where have you been?\" causing Trevor to spin around to head back to his towel.\n\nBut maybe halfway there he saw a little girl with a shovel and pail making a sand castle and stopped to ask her how it was going.\n\n\"I'm not very good at it,\" the girl told him. \"Every time I try and make the castle higher everything falls over.\"\n\n\"I see,\" Trevor told her. \n\nHe looked at her pail then said, \"Um...can I show you something?\"\n\n\"Okay,\" she told him, neither one of them even thinking about her talking to a stranger.\n\n\"If you really pack the sand down, like this...\"\n\nTrevor compressed the pailful of sand with his hand then turned it over. It was so well packed that the girl said, \"Wow! Can you stack another one on top of it?\"\n\n\"I'm pretty sure I can do that,\" he told her as he scooped up so more sand.\n\nJust as he was getting ready to turn it over he heard the girl say, \"Mom! Look! I'm learning how to make a castle!\"\n\nBut while he was prepping the second pail he saw the girl's mother appear on his right side and reach for her daughter's hand.\n\n\"Khloe. What did I tell you about talking to strange men?\"\n\n\"I know, but he's really nice,\" the girl said, her happiness turning into sadness as she spoke.\n\n\"I'm sorry,\" Trevor said as he set the pail down. \"I uh, I was only trying to be helpful.\"\n\n\"Helpful my...\"\n\nThe woman bit her tongue then said, \"You should know better than to try and do what you're doing with a girl this age!\"\n\nHe saw the look of despair on the girl's face as he stood up, her hand in her mom's.\n\n\"Ma'am? I'm truly sorry. I honestly was just trying to help out. But I understand...\"\n\n\"Understand? You obviously don't have a daughter. If you did, you actually would understand why this is completely unacceptable! So go back to your little college friends and do whatever kids your age do. Just leave my daughter alone! Do you hear me?\"\n\nHe gave the little girl a kind of 'I don't really know what to say' look, apologized to the mom, then went back to grab his towel and head back to his room. As he walked he thought about what just happened and realized he really did understand the woman's concern. However, he couldn't help but think she was just a little bit overprotective. But as she said, he didn't have a daughter and left it at that.\n\nJust the 90 minutes or so he was out in the sun caused his fair skin to redden enough that it stung, and after that experience on the beach, which stung ever more, he decided to give up on the outdoors and try his luck at one of the hundreds of hangouts in the local area.\n\nBy midnight, he was in the room of a pretty blonde college senior who scratched the itch he so desperately needed to satisfy, and by 1am he was back in his own room and minutes later out like a light.\n\nTrevor was used to getting 4-5 hours of sleep and felt good when he woke up at 0500. The hot water stung his skin a little, a reminder of the crazy mom he nicknamed Karen, who'd laid into him at the beach.\n\nHe was showered and shaved and ready to go by 5:55 and downstairs in his dress-blue deltas by six o'clock sharp. All five of the recruiters were there waiting, and the staff sergeant smiled and asked if the lieutenant had gotten lucky.\n\n\"I have no complaints,\" Trevor told him with a smile before suggesting they go get some chow.\n\nThe Marines ate and discussed their hits and misses from the previous night before turning to the subject that consumed their lives\u2014recruiting. To a man, they were all successful, and every one of them was as happy as happy could be to be getting off of recruiting duty and back to the Fleet Marine Force with their careers in tact. One recruiter was an infantryman like Trevor. Another was a supply clerk. A third was an artilleryman, and one was an admin guy. But all of them were Marines and no better or no worse, the infantry's claims to the contrary aside.\n\n\"Okay, Marines. Let's meet back in the lobby at 0745,\" Trevor told them after they'd had their fill of food and coffee.\n\nThis time, Trevor was the first one there. He was standing and looking out the front of the hotel watching people come and go when he heard a woman's voice.\n\n\"Excuse me,\" he heard the voice say.\n\nHe turned around, saw the woman, then said, \"Good morning. May I help you?\"\n\n\"I...I wanted to...\"\n\nTrevor noticed the woman was holding hands with a girl who was almost certainly her daughter, and when he looked at her, she smiled.\n\n\"Hey. I know you!\" he said to the girl when her mom stopped talking.\n\n\"You're the sand castle man!\" she said, a huge smile on her face.\n\nTrevor smiled back then looked at the mom. \n\nHe stopped smiling and said, \"Again. I really am sorry about yesterday.\"\n\nThe woman, who wasn't just attractive but downright beautiful, shook her head.\n\n\"No. I'm the one who owes you and apology. I...I had no idea you were...\"\n\nShe looked at his uniform up and down then said, \"A Marine. My dad was in the Corps back in the '70s, and he was always so proud of his service and the Marine Corps. I feel so embarrassed and...\"\n\nTwo recruiters walked up together, but when they saw the lieutenant talking to someone, they stopped several feet away to give him some privacy. \n\nHe looked their way, and one of them said, \"We thought you were single, sir.\"\n\nTrevor looked at the woman and assumed she would be offended and told him, \"No. We're not together. We just...\"\n\n\"I\"m apologizing,\" the woman said to him. \"I'm afraid there was a huge misunderstanding yesterday, and all of it was on my end.\"\n\n\"So you and the lieutenant aren't...\"\n\nHis fellow recruiter gently nudged him to let him know he should stop talking while he was still ahead.\n\n\"Sorry, ma'am. It's none of my business.\"\n\nBoth Marines turned away as the others joined them, and the woman went back to apologizing.\n\n\"I hope you'll forgive me. I can be a little...\"\n\nTrevor smiled then suggested, \"Overprotective?\"\n\n\"Yes. I...I tend to do that since...\"\n\nShe stopped in mid-sentence then said, \"I don't mean to keep you, but I thought that was you, and you can imagine my horror when I realized it was.\"\n\n\"I saw your first!\" the girl told him.\n\n\"You did?\"\n\n\"Uh-huh. I told my mom, 'Look! See the guy in the Army suit?' and she looked, too.\"\n\n\"And I reminded her you're not in the Army? I let her know that you're a United States Marine. Like her grandpa.\"\n\n\"I love my grandpa!\" she said, a smile on her cute little face.\n\n\"No harm done, ma'am,\" Trevor told her. \"But I'm glad we were able to talk.\"\n\n\"Me, too,\" she said before thanking him for his service and wishing him the best of luck.\n\n\"Same to you,\" Trevor said before bending down and telling the girl, \"and you, too!\"\n\n\"Bye, sand castle man!\" she said as her mom excused herself and told Khloe to come along.\n\nWhen Trevor joined the other Marines, the staff sergeant said, \"Damn, sir. We're used to you officers getting the best looking women, but that one was...hot!\"\n\n\"Yeah, she was pretty good lookin', wasn't she?\" he agreed.\n\n\"Pretty good lookin'? I'd say...smokin',\" the same staff sergeant said.\n\n\"Okay, okay. Everyone ready to get to work?\" Trevor asked without acknowledging the comment about the woman whose name he still didn't know.\n\n\"Yes, sir. This is my kind of work!\" one of the sergeants said as they got ready to get into the two rental cars they'd been authorized to use. The staff sergeant rode with the lieutenant, and the other Marines rode together in the other vehicle.\n\nBy the end of the first day, all of the recruiters had compiled a list of names of potential recruits. Many would clearly not be eligible to serve as they had any number of disqualifying issues from police records to an outrageous amount of tattoos, but their job was to drum up as many potential contacts as they could and turn them over to the local recruiting district. What happened after that wasn't their concern.",
        "Done by 4 o'clock, something unheard of in the last three years, all of the recruiters were in civilian clothes and back in the 'ville' again by five. They were receiving a hefty amount of per diem in Miami and planned to spend every dollar of it and then some on the first real vacation they'd had since finishing recruiter's school in San Diego.\n\nTrevor, however, chose to go down to the hotel restaurant and get something to eat and maybe have a drink or two before trying his luck again with the ladies. He hung out in his room until six then took the stairs down to the lobby feeling refreshed and ready to go. \n\nHe no sooner walked in when a very attractive co-ed spotted him, smiled, then motioned for him to come over. He smiled back and headed her way, but before he got halfway there, he saw a little hand waving. When he turned to look, he saw the same little girl he'd helped on the beach and smiled at her. Her mom was right beside her, and Trevor could hear her telling her daughter the man was very busy as she'd seen him walk in and what happened with the cute college girl.\n\n\"Hi. Again,\" Trevor said as he walked over.\n\n\"Do you wanna sit down with us?\" the girl asked, already forgetting what her mother had just told her.\n\n\"Honey, he...he's meeting someone else, okay?\"\n\n\"What? No. I'm not meeting anyone.\"\n\nTrevor glanced at the attractive college girl who waited for him to look then rolled her eyes when she saw him talking with an even more attractive woman. She assumed it was his wife and daughter, and seconds later she forgot all about him and began looking for someone else.\n\n\"I uh, I don't want to bother you while you eat,\" Trevor said to the girl while looking at her mom.\n\n\"We're almost done, but if...I mean, if you would like to sit down, that would be...very nice.\"\n\n\"Let me grab a plate from the buffet and I'll be right back.\"\n\nIn less than a minute he returned with a modest amount of food and sat across from the two 'girls'.\n\nKhloe asked if she could get another glass of juice, and once she was gone, the woman said, \"I saw what just happened and I feel terrible.\"\n\n\"Something happened?\" a surprised Trevor asked.\n\n\"Well, yes. The pretty young co-ed you were on your way to see.\"\n\n\"Oh. No, I...\"\n\nHe couldn't honestly say he had no interest so he told the truth.\n\n\"Okay. I was headed her way. But girls like that are...distractions. I'd much rather talk with you than any 20-year old...\"\n\nHe wanted to say 'bimbo' but ended the sentence with, \"Girl.\"\n\n\"Mommy! I got grape this time. Look!\"\n\nAfter acknowledging her daughter's comment, Kim turned back to Trevor.\n\n\"I still feel terrible about yesterday.\"\n\n\"It's okay. Really.\"\n\n\"If...I wish we had a moment alone so I could explain why I reacted like I did. But in the meantime, all I can do is apologize again, and I'm glad you chose to join us.\"\n\n\"You're not wearing your uniform,\" Khloe observed after a swallow of grape juice left her tongue a dark purple.\n\n\"I finished work early today then I came back here and changed. Is that okay?\" he asked in a way that made the girl giggle.\n\n\"Of course. Did you know my grandpa was a Marine?\"\n\n\"I heard that. Your mom told me this morning.\"\n\n\"Oh, right. When we saw you and the other Marines.\"\n\n\"Right you are, Miss...\"\n\n\"Khloe,\" her mother said, confirming what he thought was her daughter's name. \"And I'm Kim. Kirkland.\"\n\n\"We're all Ks,\" Khloe said, another smile on her face. \"And my daddy's name is Ken Kirkland.\"\n\n\"I see,\" Trevor replied before telling them his name. \"I'm Trevor and my last name is Lucas.\"\n\n\"I go to school with a boy whose name is Lucas, so that's a first name,\" Khloe informed him.\n\n\"Yes, it is. And may I ask what grade you're in?\"\n\n\"I'm gonna be in fourth grade when I go back to school.\"\n\n\"Okay. So you're...what? Nine years old?\" Trevor guessed.\n\n\"No. I'm still eight, but I'll be nine in January.\"\n\n\"She's a bit of a chatterbox. In case you hadn't noticed,\" Kim said, waiting to get a word in edgewise.\n\n\"I talk a lot,\" Khloe said, just in case Trevor hadn't figured that out yet.\n\n\"That tells me you're smart,\" he replied.\n\n\"I am?\"\n\n\"I'm betting you are. Kids who talk usually have large vocabularies, and if you know a lot of words, you're going to be smart. Right?\"\n\nKhloe looked at her mom and asked if that was true.\n\nShe looked at Trevor as she answered the question with, \"You get all As and Bs, so I think Trevor might be onto something.\"\n\nTrevor narrowed his eyes then said, \"You see, I'm smarter than I look.\"\n\n\"You're funny!\" Khloe told him as she giggled again.\n\n\"Hey! Did you just say I'm funny...looking?\" Trevor asked as he moved his face closer to Khloe's who giggled even louder this time.\n\n\"So what brings you to Miami, Trevor?\" Kim asked, as she found herself enjoying his sense of humor.\n\n\"A conference. We're all recruiters and we're working with the other services in a community relations project involving at-risk youth, and that means we're also looking for, well, recruits.\"\n\n\"Oh. That makes sense,\" she replied. \"But aren't you an officer?\"\n\n\"I am, but we also recruit. We recruit college students and college graduates to become Marine Corps officers.\"\n\n\"I had no idea.\"\n\n\"I'd say most Marines don't even know that.\"\n\nHe took a minute or so to explain what an OSO was and that he was just finishing up his three-year tour of duty.\n\nBefore Kim could reply he asked, \"How about you? What brings you two lovely ladies to Miami?\"\n\n\"Believe it or not, we won a contest.\"\n\n\"My mom called into a radio station, and she was the lucky seventh caller. And she answered the question and won a trip for two to Miami. And since it's Spring Break, we...\"\n\n\"Okay, honey. I think he understands.\"\n\n\"See? I talk a LOT!\" Khloe reminded her new friend.\n\n\"That's okay by me. I was dreading eating all by myself with no one to talk to, so...talk away.\"\n\n\"He's funny, Mom!\"\n\n\"No. He's...he's very nice, Khloe.\"\n\n\"And handsome. Remember you said that this morning when you saw him in his uniform and...\"\n\n\"Okay. That's quite enough,\" the woman said, a look of embarrassment on her face.\n\n\"Uh-oh. I wasn't supposed to say that,\" Khloe said, stating the obvious, a guilty look on her face.\n\n\"Well, if that's true, thank you very much, and if I may say, your mom is a very beautiful woman.\"\n\nTrevor quickly added, \"And your father is a very lucky man.\"\n\n\"My daddy's in prison,\" Khloe blurted out.\n\nKim closed her eyes and shook her head, and Trevor understood how sensitive the family matter was and changed the subject.\n\n\"So have you built any more sand castles?\"\n\n\"Yes. Today I built one that was really, really big!\"\n\n\"Nice.\"\n\n\"And the sand didn't fall apart!\"\n\n\"Khloe said you taught her how to do that. You know, when I...\"\n\nTrevor only smiled then asked where they were from.\n\n\"If you don't mind telling me.\"\n\n\"We live in Beaufort,\" Khloe said before her mom could answer.\n\n\"Beaufort?\"\n\n\"Yes. In North Carolina.\"\n\n\"Interesting. There's a Marine Corps Air Station in Beaufort, South Carolina. Same spelling but different pronunciation.\"\n\nThe city in North Carolina was pronounced BOW-fort rather than BEW-furt.\n\n\"Yes. I've heard of that,\" Kim said.\n\n\"I have orders to Camp Lejeune. I'll be going there in a couple of weeks. Well, after I take some leave so make that 4-6 weeks.\"\n\n\"Oh, my goodness. That's only about 60 miles away from Beaufort, and there's a base called Cherry Point just a half-hour's drive from us. Have you heard of it?\"\n\nTrevor had, of course, heard of it but didn't mention there weren't many Marine bases worldwide or that most Marines knew all of them.\n\n\"Sure. It's an aviation base. Their aviators support the 2nd Marine Division at Camp Lejeune which is where I'm going. I'm not sure which battalion I'll be in, but I do know the regiment.\"\n\n\"Sorry. I don't know the difference between those, but I'm assuming they're units of some kind.\"\n\nTrevor gave her the 3/3/3 explanation in just a few seconds.\n\n\"Yes. There are three infantry battalions in an infantry regiment and three regiments in a division, and finally there are three active duty divisions in the Marine Corps.\"\n\nKim laughed and told him she'd take his word for it.\n\n\"Sorry. That's not exactly the kind of thing that holds a person's interest, huh?\" he replied with a laugh.\n\n\"No. Not at all. I'm very interested. I just don't know enough to understand what it all means.\"\n\n\"Well, maybe we'll have a chance to talk again one day,\" Trevor suggested, knowing that was unlikely in the extreme.\n\n\"I'd like that,\" Kim told him, another smile on her beautiful face; a face Trevor liked even more after seeing it up close for a little while.\n\n\"Yeah. Same here,\" Trevor told her before Kim said they'd already finished eating and should get going.\n\n\"Oh, no. So I am going to have to eat alone,\" Trevor said with a friendly smile.\n\n\"We don't want to monopolize your time.\"\n\nShe looked down at Khloe then back at Trevor and said, \"As my daughter already said, you're a very nice looking young man, and I'm sure you'd like some time to maybe, you know, attract the attention of someone as attractive as you are and closer to your age.\"\n\nTrevor sat back and pretended to be eyeing Kim then said, \"You may have an eight-year old daughter, but you can't be that much older than me.\"\n\nKim started to say something like, \"Bless your heart!\" when Khloe blurted out her mom's actual age.\n\n\"My mom is 40 and she says that's over the hill, but I think she's beaut...\"\n\n\"Okay, honey. I think that's our cue to be going and let Trevor finish his food in peace and quiet.\"\n\n\"Do we have to?\" \n\n\"You're welcome to stay,\" Trevor said to them.\n\n\"Can we, Mom?\"\n\n\"I don't think so, sweetie. We need to get back upstairs.\"\n\n\"But why? It's boring. We just watch TV or play video games, and we do that at home.\"\n\n\"Sorry,\" Kim said to Trevor as though he had to be annoyed by her daughter.\n\n\"No. I'm actually having a nice time. And you really are welcome to stay.\"\n\n\"We're flying home tomorrow morning. Early. So we really do need to get some things done.\"\n\n\"Okay. If you change your mind, I think I'll be in the bar for a an hour or two later on.\"\n\nHe felt beyond stupid when he realized Khloe couldn't come with her mom, and being alone there was no one else to watch her.\n\n\"I think I'll have to take a raincheck,\" Kim told him.\n\n\"Can I hold you to that?\" Trevor asked, only partially kidding.\n\n\"Um...sure,\" she said, the smile still there before telling her daughter to say goodbye.\n\n\"Bye, Trevor,\" she said in a sad voice.\n\n\"Bye, castle maker,\" he told her, getting an immediate smile.\n\n\"It was very nice meeting you,\" Kim told him, \"and I hope you do accept my apology.\"\n\n\"There's nothing to apologize for. Really.\"\n\n\"Well, then I'll just say 'goodbye' and if that raincheck ever happens, that would be very nice.\"\n\n\"Yes it would,\" Trevor told her before also saying goodbye.\n\nKhloe waved as they left the room, and Trevor waved back. To his surprise, Kim also gave a little wave and smiled again leaving him to wonder if there was anything to this chance encounter. She was definitely attractive, but he had no idea if she was still married, and unless she was single, there was zero chance he'd ever consider seeing her. But were she divorced...\n\nHe mostly forgot about the double Ks as he went back upstairs to brush his teeth and kill an hour before going down to the bar which was already packed with coeds old enough to be there or who had convincingly fake IDs.\n\nHe hadn't been there for ten minutes before two very cute 20-somethings approached him and asked if they could buy him a drink.\n\n\"I like modern women,\" Trevor told them.\n\n\"We're not modern. We're horny,\" the cuter of the two told him. \"So if you don't really need another drink, we could just...\"\n\nTrevor didn't hear her final words. He saw something that caught his attention and held it so completely he had no idea the girl was even talking.\n\n\"Will you excuse me?\" he said without looking at them.\n\n\"Just so you know. We come as a package deal. You know, two for one!\" the other girl said as he continued walking away.\n\nTrevor not only didn't hear her he didn't care what she said.\n\n\"Kim?\"\n\n\"Oh. Trevor. Hi.\"\n\n\"I thought. Isn't Khloe...\"\n\n\"The hotel has a service. It's in the room just next to the bar of all places. They have fully-certified daycare providers available 24-7, and I thought maybe I'd stop by for a drink.\"\n\nShe was too embarrassed to tell him that he was the only reason she was there, but he either knew and didn't care or didn't know as his face lit up.\n\n\"I'm glad you did. What can I get you?\"\n\n\"A margarita?\" she told him.\n\n\"Coming right up!\" \n\nHe caught someone's attention and gave her his order then suggested they try and find a seat.\n\nIt was busy but still not so loud they couldn't hear one another speak in a conversational tone of voice.\n\n\"I have to say I was really surprised to see you,\" Trevor told her right after they touched glasses and said 'cheers'.\n\nKim took a much larger first sip than normal, set the glass down, then fessed up.\n\n\"I was actually hoping to bump into you.\"\n\n\"Oh?\"\n\nHe smiled and raised his eyebrows which made her laugh.\n\n\"No. Not...like that.\"\n\n\"I was only kidding around, Kim. I don't have the best sense of humor sometimes.\"\n\n\"You're fine,\" she told him as she nervously picked up her drink and took a second, even larger sip.\n\n\"Nah. I'm 'not bad' on my best day. You are the one who's...fine.\"\n\nThis time she saw no hint of teasing and felt flushed knowing the alternate meaning of 'fine'. \n\nShe wanted to thank him but took a third sip instead when she found herself with a sudden case of dry mouth.\n\n\"That was a compliment. Or at least that's how I intended it.\"\n\n\"Oh. Thank you. I don't know why you'd say that, but it was very nice of you to say it.\"\n\n\"You haven't seen a mirror recently then,\" he told her just as seriously.\n\nShe hadn't come to flirt, and yet Trevor was definitely flirting with her, and the flirting was causing a flutter.\n\n\"It it was 2005 I might agree you with you,\" she told him. \"Well, maybe.\"\n\n\"Hey, it's 2021 and you look amazing.\"\n\nKim thanked him again but found herself looking at the salt rimming her glass as she did.\n\n\"So did you maybe want to talk?\" Trevor asked.\n\n\"Yes. That's the reason I came back down. So I could explain why I was so...rude...at the beach.\"\n\n\"I thought we already covered that.\"\n\n\"The apology part, yes. But not the um...root cause.\"\n\nTrevor knew more was coming and took a second sip as Kim took a fourth.\n\n\"I've always been protective, but I wasn't always so...overprotective,\" she began.\n\n\"It's obvious you love your daughter, and she clearly loves you, too.\"\n\n\"We are very close,\" Kim admitted before finally looking at him again.\n\n\"Two years ago last month, our lives changed forever.\"\n\nTo give her some more time, Trevor took another tiny sip of his drink and continued waiting, never taking his eyes off of this woman he found more beautiful by the minute.\n\n\"My ex-husband, Khloe's father, he...\"\n\nWhen Kim looked back down, Trevor sensed something awful as he connected the beach with her self-admitted overprotectiveness.\n\n\"Did he...\"\n\n\"No. Never. At least not...Khloe,\" she said without looking up.\n\nTrevor could see she was becoming emotional and reached across the table and gently toucher hand.\n\n\"It's okay.\"\n\n\"Sorry. This is still so difficult to talk about.\"\n\n\"You don't have to say anything.\"\n\n\"No. I...I want to,\" she insisted as she looked at him again, blinking away the tears that had welled up in her eyes. \"You need to know this or I won't be able to forgive myself even though you keep saying it's no big deal.\"\n\nShe took a moment, then drew a long breath and slowly exhaled.\n\n\"One day, out of the blue, the FBI came to our door. They had a search warrant and a team of agents.\"\n\nKim found a napkin and dabbed her eyes then continued.\n\n\"My...Khloe's father...had downloaded these...images. Hundreds of them. On our computer. Images of...\"\n\nTrevor also knew what this meant and put his hand on hers and squeezed it as a way of letting her know he understood.\n\n\"You don't need to say anything else, Kim. I know what you mean.\"\n\n\"I...I had no idea. None. I initially was sure it was some kind of mistake. But when I went to see him...in jail...he admitted everything.\"\n\n\"I'm so sorry. For you and Khloe.\"\n\n\"She was such a daddy's girl, and once I knew it was all true, I got so angry! That's when I asked if he'd ever, you know.\"\n\n\"How do you know he was telling the truth?\"\n\n\"I can't be 100% certain, but he tried explaining this...sickness. He...he has an age that, you know, that he...prefers. His was, well, a few years older than Khloe.\"\n\nTrevor knew this, too. He'd heard that nearly all predators had a preferred gender and an age range. Children outside those parameters were of little interest and it was becoming clear that Khloe didn't fit the profile.\n\n\"I've heard about that,\" Trevor offered without saying more other than that he understood that's why Khloe had been spared.\n\n\"I've done some reading myself and that's what I learned, too. And I found a roundabout way to ask Khloe if anything had ever happened without saying anything...directly...and I felt extremely confident that nothing ever had.\"\n\n\"I suppose if there's any silver lining that would be it.\"\n\n\"Yes. Exactly. And so when I saw you, alone with my daughter, I absolutely panicked. I...overreacted. And again, I apol...\"\n\n\"Kim? Please don't. You've been through hell, and yet you've remained strong, and you're a really good mother.\"\n\nShe'd looked back down, and when Trevor saw the first tear run down her cheek, he again squeezed her hand.\n\n\"And you really are beautiful, Kim. Inside and out.\"\n\nShe took her hand away, not because she was offended, but because she now needed two hands to avoid a mess of mascara streaks.\n\nWhen she finished, she set the napkin back down then said, \"I've only told two other people that, and one of them was my divorce attorney, so thank you for listening and...not judging.\"\n\n\"Hey. There's nothing to judge because you did nothing wrong. If I'm doing any judging at all it's to judge you as being a loving, caring mother.\"\n\n\"You're very sweet, Trevor,\" she told him as she managed a little smile.\n\n\"Sweet, huh?\" he replied, a smile and a wince appearing on his face. \"That's not exactly what any guy wants to hear, but...okay.\"\n\n\"What? No. I...I only meant that you're, you know, a very nice guy who...\"\n\n\"Oh, boy. Nice guy? This just keeps getting worse,\" he said with a smile as he pretended to be hurt. \n\n\"That...that wasn't my intention. At all,\" she told him as she fought for control over her emotions.\n\n\"I think maybe I was hoping against hope that you might see me more like I see you,\" he said with no hint of self-pity.\n\n\"I...I don't understand,\" Kim told him as she looked for some hint in his eyes to tell her what she was missing.\n\nHe was thinking of what to say and how to say it when he heard a voice that sounded vaguely familiar.\n\n\"Whenever you and your mom get finished talking, we're still available,\" the voice said.\n\nTrevor looked up in surprise as the 19-year old old and her friend smiled at him.\n\n\"We brought you a room key just in case,\" the second girl said as she laid it on the table next to him.\n\nTrevor couldn't think of a word to say, so he didn't say anything. He just continued looking up at them for another second or two which seemed much longer.\n\nJust before they walked away the first girl said, \"If she's not your mom, she's welcome to join us. We like cougars, too, and she's hot enough to play with us!\"\n\nThen, with a flip of their heads, the two very cute, very young co-eds walked away leaving Trevor speechless.",
        "\"Does that happen often?\" Kim asked, now the one doing the teasing.\n\n\"Um...no. Never.\"\n\n\"I have to say I do understand. I mean, were I that age and here on Spring Break, I'd be willing to risk getting shot down. If the guy was as handsome as you.\"\n\nShe was still smiling, but Trevor wasn't. \n\n\"I...I'm really sorry, Kim. I have no idea who they are or even why...\"\n\nNow she reached over for his hand, laughed a little, then said, \"You don't owe me an apology. You're young, handsome, and single. They're single, very cute, and...extremely young.\"\n\nTrevor'd lost track of time, but it was now 2000 or 8pm, and a piano player sat down and started playing. It was soft and pleasant, and after listening for half a minute or so, Trevor decided to take a chance. \n\n\"Kim? Would you maybe like to dance?\" he asked her out of the blue.\n\n\"Are you serious?\"\n\n\"Yes. Very.\"\n\n\"Um...okay?\" she said, a look of disbelief on her face as she kind of shook her head.\n\nTrevor's mom had taught him to dance when he was still in junior high, and while he didn't exactly enjoy it, there had been many times when it had paid dividends.\n\n\"You're a very good dancer,\" Kim said as they found just enough space to move around on a small open area in front of the piano not covered by college students.\n\nHe laughed then told her she needed to thank his mom.\n\n\"I doubt I'll ever have the opportunity to meet her, but were that to happen, I most definitely will.\"\n\nAfter they both smiled Trevor gently pulled her closer and Kim didn't resist. They danced cheek to cheek for the rest of the song, and when it ended, there was a Hallmark moment when they looked at one another in a way that said they both enjoyed the dance and weren't sure what to do.\n\n\"Would you like to dance again?\" Trevor asked.\n\n\"Yes, but I should probably go get Khloe. I know the service is free, but I didn't come here to leave her alone.\"\n\nTrevor smiled then said, \"You see, you are a good mom.\"\n\n\"I...I had a really nice time talking...and dancing...with you, Trevor. And I'm really glad I had the chance to explain why I was so...obnoxious.\"\n\nHe didn't chide her for apologizing again. He only told her he enjoyed it, too.\n\n\"So I suppose this is...goodbye,\" Kim said as they walked toward the exit of the bar.\n\n\"Unfortunately,\" Trevor told her.\n\nHe walked with her until they got to the room with the 'Free Daycare' sign on it where she turned toward him and wished all the best in his next assignment.\n\n\"At Camp Lejeune.\"\n\n\"Which, as I understand, isn't all that far from Beaufort,\" he replied with a smile.\n\n\"No. No it isn't,\" she said as their eyes met for a brief moment.\n\n\"Well...goodnight,\" she told him before she began moving to open the door. \n\nBut as she did, Trevor reached out and gently touched her arm, causing her to stop.\n\n\"Yes?\" she said as she looked at him again.\n\n\"I uh, I'd like to see you again, Kim. In North Carolina.\"\n\n\"Trevor, I'm flattered. I really am. And as I said before, were I, well, a lot younger, I'd...\"\n\nShe smiled then said, \"I'd have already invited you up to my room. But I'm not...younger, Khloe's here, and you have your whole life ahead of you so...\"\n\nHe reached out and touched her hand then said, \"So do you.\"\n\n\"I just have a lot less of mine to look forward to,\" she told him with a look of sadness in her eyes, eyes that showed the hurt she'd been through and perhaps the feeling of wondering if she would ever find true love before her time on earth was up.\n\n\"None of us knows how much time we have, Kim. But if two people feel an attraction for one another...\"\n\nShe leaned over and kissed him on the cheek then said, \"I really did enjoy our time together,\" then opened the door and went inside.\n\nAs he stood there staring at the door he said out loud to himself, \"At least we'll always have...Miami.\"\n\n*****\n\nTwo Weeks later. Eugene, Oregon.\n\n\"It's been so good having you home, honey!\" his mom said for the third time in less than a week.\n\n\"It's good to be home, Mom.\"\n\n\"I know I've said this already, but your father and I are really sorry about the timeshare.\"\n\n\"It's no problem. Really. You either take your two weeks or you lose them, and there's no reason to stay here just to hang out with me.\"\n\n\"You know you could come with us, right?\" his mother suggested.\n\n\"No thanks, Mom. You and Dad go have a good time. I've actually got somewhere else I'm thinking about going.\"\n\nTrevor's father walked in and overhead the remark and said with a devilish smile, \"Oh, really. Would this 'place' possibly involve a pretty young girl?\"\n\n\"Duane! Seriously?\" his wife replied even though it was probably true.\n\n\"If Trev tells me I'm wrong, fine.\"\n\nHe looked at his son then asked, \"Am I?\"\n\nTrevor laughed, looked apologetically at his mom, then told his father he was correct.\n\n\"Ha! Do I know my son or what?\" the older Lucas said as he puffed out his chest and jutted his jaw.\n\n\"Is this serious?\" his mother asked, drawing a look from her husband.\n\n\"Louise. For cryin' out loud. Give the kid a break. He's too young to get serious.\"\n\n\"He's 26 years old and we'd been married for two years by that age,\" she reminded him.\n\n\"It isn't serious,\" Trevor said, stopping the conversation. \"I met her in Miami and we uh, we really seemed to click. Or at least I felt like we did.\"\n\n\"You clicked with a girl. On Spring Break. In Miami. Really?\" his father asked and said. \"You sure you're not confusing a roll in the hay with connecting?\"\n\nHe got another look from his wife but ignored it.\n\n\"I did. And there was no roll in hay or anywhere else. And she wasn't exactly a girl.\"\n\nBoth sets of eyes that were looking at him got very big causing their son to laugh.\n\n\"No. Not that. She's a she. Trust me. She's just not a co-ed.\"\n\n\"That sounds very nice, honey,\" his mom said, hoping in her heart of hearts that her son would settle down one day in the not too distant future and make her life complete with a grandchild or two.\n\n\"There's nothing wrong with dating someone your own age, Trevor,\" his dad informed him.\n\n\"She's uh, she's a little older than me.\"\n\nHis parents looked at each other then back at their son.\n\nHis mother told him she didn't see any problem with that, either.\n\n\"And she has a daughter named Khloe.\"\n\n\"Oh,\" his mom said, now wanting to ask a bunch of questions.\n\n\"A daughter? How old is this daughter?\"\n\n\"She's eight, Dad.\"\n\n\"Let me guess. Pregnant at 18?\"\n\nWhat started out as an innocent attempt to talk about Kim wasn't going well, so Trevor told his dad it wasn't like that.\n\n\"Hey, just don't let some divorcee rope you into marrying her because you've got a decent job.\"\n\nBefore Trevor could respond, his dad asked another question.\n\n\"Speaking of jobs, when are you supposed to be making captain?\"\n\n\"Looks another couple of months or so.\"\n\n\"That's a pretty big pay raise, right?\"\n\n\"It's not bad.\"\n\n\"Well, all the more reason for a single mom to latch onto a guy like you.\"\n\nTrevor managed not to shake his head then said he thought he'd go for a run.\n\nAfter he walked out he heard his mom say, \"I hope this...woman...isn't married. You don't think she is, do you?\"\n\nHis mom was the worry wart and his father was the cynic. So when he heard his father boom out, \"Where the hell do you come up with that kind of crap, Louise?\" he just shook his head and laughed.\n\nIt was indeed good to be back, and having his 30-day leave at home reduced to ten days no longer seemed like such a bad thing. After his run he was going to book a flight to Charlotte, North Carolina. \n\nHe was able to get a nonstop flight on American whereas he'd have to change planes twice and spend over 12 hours to fly into Jacksonville, NC, which was closer to Camp Lejeune. So he took the easier itinerary and would rent a car in Charlotte that could be dropped off near the base when he was done with it. \n\nThe flight was actually cheaper for the government in terms of reimbursement, and he'd saved a ton of money as an OSO as there'd been precious little time to do much else. He'd made another $3,500 on his car after paying off what he owed, and, as his dad had said, his upcoming promotion meant even more money, so that wasn't a factor in his decision.\n\nHe'd been driving his parents' car while home on leave and had planned on buying a new one while he was in Eugene, but now what had seemed like a pleasant 3-4 day drive across country felt like a waste of time. Buying a new car could wait until he got to North Carolina.\n\nHe'd already looked up the name Kim Kirkland in Beaufort several times. Just that morning he'd spent a few dollars on a site that provided everything from names to criminal records to find out her last known address and phone number and had every intention on paying her a visit. He only wanted an address and phone number and didn't care about anything else. If they somehow hit it off they could go car shopping together one day. If not, he'd get back in his rental car and head to the base and buy one on his own before reporting in. \n\nHis parents' timeshare was in Vancouver, British Columbia, so it worked out perfectly for them to drop him off at the airport in Portland on their way north. He felt bad for almost feeling relieved when he hugged his parents goodbye, but he knew that's just the way things were. He loved his mom and dad and they loved him, but they were on very different wavelengths\u2014especially his dad. \n\nOnce he landed in Charlotte he picked up his keys at Avis which had offered him the best rate on a mid-sized car with unlimited mileage, and in a few minutes after picking up his baggage, Trevor was on the road and headed toward the Atlantic coast.\n\nBeaufort was five hours away, and this was his chance to have some of that relaxing drive he'd thought about so many times the last three years. It would just be a couple of thousand miles shorter. He stayed on I-74 which changed names a couple of times before reaching Jacksonville, a city that was was just north of Camp Lejeune and much smaller than its namesake in Florida. \n\nIt was Friday night so he stopped at a decent motel on the east end of the city. It would be too late to drop in on Kim, and this would give him time to go for a run in the morning, eat breakfast, and still arrive well before noon. With any luck he might end up taking Kim and Khloe to lunch somewhere. \n\nIn the absence of good fortune, he'd turn around and be at the base that afternoon and start checking in (in-processing in the Army) the following day. \n\nMale Marines had to get their hair cut every week without exception unless they were deployed, and Trevor hadn't had a haircut in nearly a month, the longest he'd ever gone since getting commissioned in 2016. So he'd hit the barber shop the first morning, shower, change into uniform, then report in, and while he did he'd have time to do some car shopping before going to work. \n\nHe ran six miles for the first time in months and felt exhilarated when he finished. Running had been his stress relief on OSO duty, but time constraints limited him to 3-4 miles most of the time. \n\nAfter a huge breakfast at a Waffle House, he got back in the Nissan Altima at 10am and plugged in what he believed was Kim's address into his phone's GPS, and headed toward Beaufort with his fingers crossed and high hopes.\n\nIt was 11:12 when he heard a female voice say, \"Arrived. Destination is on the right.\"\n\nHe looked at the modest house, took a deep breath, then opened the car door. He'd stopped at a flower shop in town, also thanks to Google and GPS, and had a bouquet of something the cute girl at the shop convinced him would be perfect for someone who wasn't a girlfriend\u2014yet.\n\n\"With this bouquet and as cute as you are, she might just BE your girlfriend,\" she told him with a bright, warm smile. \n\nAs she rang him up, she gave him a different kind of look and said, \"And if she isn't interested, you know where to find me.\"\n\nAs he walked up the driveway Trevor realized he'd never done anything like this before in his life. It wasn't just dropping in unexpectedly, it was the bouquet and the feeling that there was something special about a woman; a woman who was clearly older than him and who also had an eight-year old child. The closest thing he could think of was walking up the sidewalk to pick up his date for the prom in high school, but that wasn't exactly what he was doing here.\n\nTrevor stopped at the front door, took another deep breath, then pushed the doorbell button.\n\n\"I'll get it!\" he heard.\n\nKnowing it was Khloe's voice made him smile as he heard footsteps approaching.\n\nWhen the door opened, it took her a second to realize who it was. When she did, she smiled and said, \"Trevor!\" just as her mom called out, \"who is it, honey?\"\n\n\"Come in!\" Khloe said as her mom walked toward the door.\n\nTrevor put his index finger on his lips, so Khloe kept their secret, a huge smile on her face. \n\n\"It's a surprise!\" she called back.\n\nTrevor's heart was pounding as he waited for Kim to appear. When she did, it was obvious she'd been cleaning the house, but she looked amazing to him even in an old tee-shirt and jeans.\n\n\"Who's the surp...\"\n\n\"Hi,\" Trevor said once he was sure she recognized him.\n\n\"It's Mr. Sand Castle Man!\"\n\n\"Trevor. What...what are you...?\n\n\"These are for you. I...I hope you like them,\" he said as he extended the bouquet.\n\nKim's hair was pulled back in a ponytail making her look even younger than he'd remembered, but she was embarrassed by the way she looked.\n\n\"They're beautiful, Trevor, but I...I wish I'd known you were coming. I look...hideous!\"\n\nTrevor saw Khloe looking up at him and saw she was still smiling.\n\n\"I don't think your mom looks hideous. Do you?\"\n\nKhloe giggled as she said, \"No! She's pretty!\"\n\n\"See? You don't look hideous,\" Trevor teased as he stood there smiling at her.\n\n\"Well...gee. Um, please come in and give me a minute to go change, okay?\"\n\n\"Kim? You don't need to change. You look...just fine to me.\"\n\n\"Uh...o...okay. I'll just put these in some water then and...\"\n\n\"I apologize for dropping by unannounced,\" Trevor said. \"I thought about calling, but I wasn't sure if I had your number, and now I'm here in North Carolina, and thought...\"\n\n\"No. It's fine. It really is. I just feel so...\"\n\n\"Don't say 'hideous' again, okay?\" Trevor said, smiling at Khloe who was still smiling at him.\n\n\"Okay. How about 'unprepared'?\" she said, a sweet smile on her face that told him she was happy he dropped by, unannounced or otherwise.\n\n\"I can live with that,\" Trevor said then asked them if they'd had lunch yet.\n\n\"No. I was just finishing with the laundry and then I was going to make us something. Would you like to join us?\"\n\nTrevor started to say he hoped to take them somewhere when Khloe said, \"Can you? Please?\"\n\n\"I can, but I'd rather take you guys out somewhere instead. Would that be okay?\"\n\nKim had turned around and when their eyes met, she tilted her head and said, \"I wouldn't be caught dead out in public looking like this!\"\n\n\"Well, maybe we could give you a few minutes to change,\" Trevor told her, the smile now directed at Kim.\n\n\"Yeah, we'll give you a few minutes, Mom!\" Khloe said, chiming in and piling on.\n\n\"We really can just stay here,\" her mother said.\n\n\"I don't think your mom wants to be seen with me in public,\" Trevor said to Khloe in a voice that made her laugh.\n\n\"Or her mom is embarrassed to be seen in public looking like she's been cleaning her house.\"\n\n\"Either way,\" Trevor told her, \"you better go change. We're both hungry.\"\n\n\"Yeah, Mom. We're starving!\" a very excited Khloe told her mom.\n\n\"Well, okay. I'm getting pretty hungry myself, so give me a minute, okay?\" Kim said as she gave Trevor a playful look that him smile. \n\nWhile Kim changed Khloe asked how Trevor had found their house.\n\n\"Well, I knew you guys live in Beaufort, and I also knew your mom's name. So...I got out my rusty, trusty smart phone\u2014which is very smart\u2014and it told me where you live.\"\n\n\"Oh, okay,\" Khloe told him before asking him if he wanted to see her room.\n\n\"I would love to see your room!\" he said as she grabbed his hand and started pulling him that way.\n\nOn their way, Khloe explained the obvious.\n\n\"So that's the bathroom in our hallway, and this is my bedroom, and that one at the end is my mom's.\"\n\n\"Very nice. You should be a tour guide.\"\n\n\"I wanna be a nurse when I grow up so I can help people.\"\n\n\"That's also nice, but you could be a doctor if you want to, too.\"\n\n\"I know,\" she told him before showing him her treasures which were mostly stuffed animals and all things pink.\n\nTrevor oohed and awed appropriately as Khloe went from one thing to another so fast he had to try not to laugh. But when she pulled out a small photo album, the urge to laugh stopped.\n\n\"You can sit on my bed,\" Khloe told him as she sat down herself.\n\n\"Is that a family album?\"\n\n\"Yes, and this is my daddy,\" she told him after opening the book.\n\nTrevor saw a man who looked to be maybe 35 who was very good looking. That made sense as Kim was an extremely attractive woman.\n\nAs Trevor looked Khloe said, \"I love my daddy and he loves me, but he makes mistakes sometimes so he can't live with us anymore.\"\n\n\"I'm really sorry about that, Khloe.\"\n\n\"Me, too, but it's okay because you're here!\" she told him as she looked up at him and smiled.\n\n\"Honey? Trevor is just visiting, okay?\"\n\nKim's voice made them both turn around, and when Trevor saw her he did a double take and stood up.\n\n\"How did you do that?\" he asked as he smiled indicating his approval.\n\n\"Do you mean go from hideous to homely?\"\n\nShe smiled, too, but mostly to avoid being scolded again for using that word.\n\n\"Um, no. You went from cute to...wow. That's what I mean.\"\n\nThe comfortable clothes she'd been wearing to clean in became a very cute, form-fitting white top and a pair of pink shorts with white sandals. Her ponytail was gone and she'd brushed out her hair and applied a bit of makeup which was more than enough to genuinely impress her visitor.\n\nShe laughed as she thanked him and said that she was at least dressed nicely enough to hang out at a Burger King.\n\nTrevor also laughed and told her she didn't give herself enough credit.\n\n\"So what did you have in mind?\" Kim asked before she saw her daughter flipping through the album.\n\nTrevor noticed, too, but didn't mention it for obvious reasons.\n\n\"I was thinking maybe The City Kitchen. Unless you know something I don't.\"\n\n\"Oh. That's not cheap,\" Kim told him.\n\n\"But is the food as good as the online reviews say it is?\"\n\n\"It's been several years since I ate there, but it was very good food as I recall.\"\n\n\"Then let's go!\"\n\n\"Or we could just go to iHop or...\"\n\n\"We could, but I didn't travel two thousand miles to fail to impress you,\" he said with a little tilt of his head and two raised eyebrows.\n\nKim looked at him in a way that made him wonder if she wasn't impressed with him or his sense of humor, but as they walked to the front door she said, \"You already made a rather big impression on me in Miami.\"\n\nShe grabbed her purse and they were on their way.\n\nThe City Kitchen was on the waterfront and the weather was spectacular making the view even more amazing.\n\nThe food was equally wonderful, and as they ate, Kim found herself asking the same questions she'd asked since they danced in Miami. How and why could this very attractive younger man possibly be interested in her, a divorced woman who was 40 years old who had an eight-year old daughter? Just as important and just as puzzling to her was how she could even be considering the possibility of anything more than a friendship with someone so much younger than her.\n\nShe didn't have the answer to either question. All she knew was that she enjoyed being with him, and she loved the way he treated her\u2014and her daughter. He took the time to listen carefully to Khloe no matter how silly her chatter might be then answered her in a way that showed he cared. Unless he was teasing, and even that was always playful and appropriate. And it was obvious that Khloe already liked him very much. And even more inexplicable to her was the growing awareness that she liked him, too.",
        "\"It's so beautiful here on the water,\" Kim said as they finished eating.\n\nTrevor looked right at her then said, \"Yes. It is very beautiful in here.\"\n\nShe tried giving him a look that said his comment was corny, but she liked hearing it so much she found herself breaking eye contact and using Khloe as an excuse to avoid responding to the way it made her feel.\n\n\"You almost done, kiddo?\"\n\n\"Almost,\" her daughter said as she munched on the few remaining fries on her plate.\n\n\"So do you like the water?\" Trevor asked, hoping to return to talking about Kim.\n\n\"I do. I love it. My dream has always been to be able to live on the water and have a boat.\"\n\nTrevor loved the country and the beach and had never tried to decide which one he preferred knowing either would be fine.\n\n\"I could get used to that,\" he said in agreement, a smile on his face that made Kim shudder as she felt like he meant...with her.\n\nBut she shrugged that off as wishful thinking or confusion and told him that would be very nice.\n\n\"But I'd need to work three other jobs to do that, so...\"\n\n\"Or you could find...\"\n\nTheir server interrupted Trevor's comment as she came by with the bill and asked if they needed anything else.\n\n\"Dessert?\" Trevor suggested.\n\n\"No. Definitely not for me, but you go ahead if you like,\" Kim told him.\n\n\"Me!\" Khloe said as she ground up the last fry.\n\nKim went to tell her daughter she didn't need dessert, not because Khloe couldn't 'afford' it. She was thin as a rail. It was more to save Trevor some money because their meals cost more than she normally spent on groceries for three days for her and Khloe.\n\n\"You want some ice cream, Khloe?\" he asked, getting a huge nod and a, \"yes, please!\" before her mother could object.\n\n\"Here's the most important question,\" Trevor said as he leaned in close as though this was top secret.\n\n\"Chocolate or vanilla?\"\n\n\"Vanilla!\" she said without hesitation.\n\n\"Yes!\" Trevor told her as he held up a hand for a high five.\n\n\"Two vanillas, please.\"\n\n\"Ma'am?\" she asked Kim just in case.\n\n\"Come on. You know you want some,\" Trevor teased.\n\n\"My mom likes chocolate,\" Khloe informed him.\n\n\"What? A chocolate lover? At our table?\"\n\nKhloe was already laughing at his antics before he puffed up and said, \"This is...outrageous!\"\n\nKim laughed, too, but mostly because she couldn't remember the last time her daughter had laughed like that, but partly because of who said it.\n\n\"Sorry,\" Kim said to Trevor and her daughter as she turned to the server and whispered, \"chocolate for me, please.\"\n\nAs the young girl walked away, Trevor said, \"Boo! Hiss!\"\n\nKhloe giggled when Trevor made the sign of the cross with his index fingers as though he was warding off an evil spirit.\n\n\"I'll have you know most people prefer chocolate,\" she replied, her chin held high in defiance.\n\n\"Can we even let a chocolate person sit with us, Khloe?\"\n\n\"Well, I guess,\" she said.\n\n\"Yeah. I suppose. After all, she is your mom.\"\n\n\"Okay. She can stay!\"\n\nWhen her mom said, \"Well thank you SO much!\" Khloe giggled yet again.\n\nHer mom was smiling until Khloe grabbed Trevor's arm. When she did, he put the arm around her and pulled her close in a way that made her laugh. But Kim stopped smiling, and the moment Trevor saw it he pulled his arm back so fast it almost scared Khloe.\n\n\"Sorry,\" he told the girl while avoiding looking at her mom.\n\nVery little was said during dessert except by the happy girl who went on and on about vanilla ice cream and an endless number of other things.\n\nAs they drove back to Kim's she glanced at Trevor out of the corner of her eye. She felt so bad she thought she might die if she didn't apologize. His hand was resting on the gearshift, and without thinking Kim reached over and put hers on his.\n\n\"I'm really sorry, Trevor. Again.\"\n\n\"It's okay. I think I understand,\" he replied very quietly. \"You saw the photo album and when I, you know, you...\"\n\n\"I wouldn't blame you if you dropped us off and never came back,\" she replied just as quietly. \"That's twice and I'm sure you think I'm incapable of trusting any man with my daughter.\"\n\nHe looked her way, smiled, then put his hand on top then squeezed hers.\n\n\"Trust is earned. You have every right to be...\"\n\n\"Paranoid?\" she suggested with a wince.\n\nHe smiled again then said, \"Concerned.\"\n\n\"I really am sorry.\"\n\n\"It's okay,\" he said. \"And the only way I'll never come back is if you tell me that's what you want.\"\n\nKim squeezed his hand, and while she couldn't explain it, being with someone so much younger suddenly seemed...right. \n\n\"I won't tell you that,\" she said. \"But there is something I'd like you to tell me.\"\n\n\"Okay.\"\n\n\"Why...me?\" she asked just above a whisper. \"I mean, you barely know me, and I have a daughter, and...I...I'm a lot older than you.\"\n\nKhloe was happily busy with her mom's phone and not really paying any attention.\n\n\"Why not you?\" Trevor asked.\n\nAs Kim got ready to rattle off some of the reasons at the top of her list beginning with age he began listing other reasons.\n\n\"You're beautiful. You're smart. You're a great mom. I like being with you. Both...of you.\"\n\nHe looked over and smiled again then said, \"Did I mention you're beautiful?\"\n\n\"You did, but for the life of me, I don't know why. Unless you need glasses.\"\n\nTrevor laughed and assured her he saw quite well.\n\n\"I've had 20/20 vision or better all my life.\"\n\n\"Then I'm...lost,\" Kim told him, causing him to squeeze her hand again.\n\nWhen he smiled at her again, her tummy fluttered. But what he said and did made her entire body react in a way it hadn't in so long it made her ache with desire.\n\n\"You're not lost anymore. Not since I found you,\" he told her as he lifted her hand up and kissed it. That wasn't even cornier but Kim's heart skipped a beat when he said it.\n\n\"Are you guys in love or something?\" Khloe asked, suddenly coming to life.\n\n\"What? No. We're...we're just...\"\n\nTrevor cut her off and said, \"We like each other very much.\"\n\nHe saw the way Kim looked at him then said to Khloe, \"Is that okay?\"\n\n\"Uh-huh. We like you very much, too, right, Mom?\"\n\nShe turned around enough to make eye contact, smiled, then said, \"Right. Yes we do like Trevor. Very much.\"\n\n\"Yeah?\" Trevor asked just to hear her say it again.\n\n\"Well, maybe.\"\n\n\"Maybe?\"\n\n\"Let's just say, 'so far, so good', okay'?\" she said more playfully that Trevor could remember.\n\nHe made a serious face then told her, \"Works for me!\"\n\nAfter a short moment of silence Kim asked him where he was staying.\n\n\"At the base, right?\"\n\n\"No. I have checked in yet.\"\n\n\"Checked in? As into a motel?\" she asked, not sure if she understood.\n\n\"No. We use that term when we first report to a unit. When we leave after two or three years at a base, we check out.\"\n\nHe looked over at her then said, \"You know, like when you leave a motel.\"\n\n\"Stop!\" Kim said like she was back in high school and not caring.\n\n\"But no, I'm not at the base yet.\"\n\n\"So...where are you staying?\"\n\n\"I kind of need to find a motel. And check in.\"\n\n\"There are a lot of them nearby. But anything near the water is going to cost an arm and a leg.\"\n\n\"Speaking of expensive things, I really need a new car. Or maybe a truck. Would you possibly be interested in doing some car shopping with me?\"\n\n\"A new car? I wanna go!\" Khloe said, suddenly aware of the conversation.\n\n\"Is this a rental?\" Kim asked.\n\n\"It is. I sold my car when I left OSO duty. I had plans of buying one while I was home in Oregon, but...\"\n\n\"You live on the West Coast?\" Kim said, interrupting him but not intentionally.\n\n\"My parents do,\" he tactfully corrected her.\n\n\"Sorry. I didn't mean it that way.\"\n\n\"It's okay. But no, I live here now. Well, a few miles from here, but in North Carolina.\"\n\n\"And how long will you be stationed here? In North Carolina?\"\n\n\"Should be at least three years. Four is more likely because less moves saves the Marine Corps money, and we are very tight with the dollar.\"\n\nHe smiled at her then said, \"We're the skinflints. The Army, and especially the Air Force, have HUGE budgets. But not us. No siree. We try and give money back every year to prove that we are responsible stewards with the taxpayer's money.\"\n\nHe laughed then said, \"If you don't believe it just compare the facilities our Marines live in with what's on an Air Force base.\"\n\nKim laughed then said, \"I've kind of become a skinflint myself.\"\n\nShe looked over at Trevor and explained.\n\n\"Not because I like it. It's out of necessity. You know, single mom with a daughter and all that.\"\n\n\"We have to be very frugal,\" Khloe said, chiming in with a word she'd heard her mom use many times.\n\n\"There's nothing wrong with frugality,\" Trevor told her.\n\n\"Frugality. I just learned a new word!\" she said before going back to her video game.\n\n\"It's always a challenge for us,\" Kim said. \"Money wise.\"\n\nTrevor chuckled then told her what his dad said about women looking for a man with a good job.\n\n\"And yet here I am spending time with someone in the military,\" Kim said with a smile. \"And enjoying it.\"\n\nIt took Trevor a minute, but he figured out what she meant.\n\n\"You might be surprised at how well we do,\" he said without any hint of bragging.\n\n\"All I know is hearing about, you know, soldiers on food stamps and what not. But I don't really care about that.\"\n\nShe felt a little foolish but said what she was thinking anyway.\n\n\"Not when it comes to who I like. Or date.\"\n\nHe looked over at her smiled, then reminded her she'd already said that she like him.\n\n\"Very much, too, as I recall.\"\n\n\"Oh, right. I did say that, didn't I?\" Kim teased back as she stole a real look at Trevor from the side. He was definitely young, but he was so handsome it was hard not to stare.\n\n\"I've only been in for five years, but I know there are a lot of families that love military life. Then again, the divorce rate is pretty high because we are gone quite a bit.\"\n\n\"I'm going to guess that a whole lot of those divorces are from those who married right out of high school and had no idea how much sacrifice was involved to make any marriage work.\"\n\nTrevor was duly impressed by her insight.\n\n\"I agree. My parents have been married for 29 years, and they've often talked about the need to make compromises, be forgiving, and a whole lot of other things they never knew I heard.\"\n\n\"Well, I've got the apologizing thing down, and you seem to be good at forgiving, right?\"\n\nKim had let go of his hand, but when she said that Trevor reached for hers and gave it a squeeze.\n\n\"You're not only gorgeous, you're very intelligent. And smart is very sexy.\"\n\n\"Sexy. Yeah, right,\" Kim said as another flutter flittered.\n\n\"I probably shouldn't tell you this, but every one of the Marines I was with said you were either hot, smoking hot, or...\"\n\nHe leaned closer then said, \"Hot as hell.\"\n\n\"I...I'm...flattered,\" she told him, not sure what else to say in response to something like that because she didn't see it. At least not the least five years or so. \n\nShe thought for a moment, then feeling bolder, said, \"Honestly? That was nice to hear, but I really only care what one of them thinks.\"\n\nTrevor smiled at her then told her he was happy to hear that.\n\n\"I don't know about the smokin' hot part at all, but it was very nice of them to say.\"\n\n\"It's all true, Kim.\"\n\n\"I...I have to admit I don't really understand,\" she replied. \"But one thing's for sure. I don't have any money, so I know you're not looking for a rich, older woman.\"\n\nShe meant it seriously, but the way Trevor looked at her told her he thought it was ridiculous. Just the look on his face made her want to laugh, but she waited until he laughed before joining in just as they turned onto the street where the Kirklands lived.\n\n\"I'd invite you in, but I really do need to finish cleaning the house,\" Kim told him as they pulled into her driveway.\n\n\"No, that's fine. I'm just really glad we got to spend some time together.\"\n\n\"Yes. Me, too,\" Kim told him just before he got out to go open her door.\n\nOn the way, he got Khloe's and helped her out, something her mom noticed and also liked about this handsome, young Marine who really did seem to like her in spite of her being so much older than him.\n\n\"May I walk you to the door?\" Trevor asked even though it was only ten feet away.\n\n\"Sure. That would be nice.\"\n\nKim unlocked it and told Khloe to tell Trevor 'goodbye'. He started to bend down to hug her and stopped.\n\n\"It's okay,\" Kim told him.\n\nTrevor looked at to be sure and she both smiled and nodded.\n\n\"Bye, Miss Khloe,\" he told her.\n\n\"Bye, Sand Castle Man! And thank you for lunch and the vanilla ice cream!\"\n\n\"You're very welcome, my fellow vanilla wafer!\" \n\n\"Huh?\" Khloe said, having no idea what that meant.\n\n\"Yeah, that was pretty bad, huh?\" Trevor said to Khloe as he looked up her mom.\n\n\"I don't know. I thought it was kind of sweet,\" Kim told him.\n\nKhloe put her arms around Trevor's neck and hugged him, and he hugged her back before saying he'd see her soon.\n\n\"Okay. Bye, Trevor!\"\n\nOnce she went inside, he asked Kim if that was possible.\n\n\"Tomorrow's Sunday and I have the day off, so if you want to hang out with a 40-year old divorced mom again, I suppose it...\"\n\nTrevor leaned over and kissed her as she spoke surprising her so much her eyes opened wide and she nearly pulled away.\n\n\"Was it that bad?\" Trevor asked.\n\n\"Um...no. I just wasn't expecting that. At all.\"\n\nHe moved a little closer then took her hands in his and said, \"I wanted you to stop you from putting yourself down again, Kim. And...I've also wanted to kiss you since Miami, but didn't know if...\"\n\nBefore he could finish she kissed him. \n\n\"Now I'm the one who's surprised,\" he said when she pulled away.\n\n\"I know where all of the car dealerships are if you really do want us to go with you,\" she told him as her eyes darted back and forth between his.\n\n\"I do. Very much so.\"\n\n\"Okay. Just let me know when and we'll be ready.\"\n\n\"Is noon too early?\" Trevor asked.\n\n\"I'm up by 6am on weekdays and 'sleep in' until seven on the weekends, so noon isn't early at all.\"\n\n\"We could grab lunch again before we go.\"\n\n\"Trevor, you spent too much on us already. That's very sweet, but we can eat before you come over.\"\n\nShe smiled then said, \"Or you could come over around 11 and eat with us.\"\n\n\"I'll see you tomorrow then. At eleven hundred.\"\n\n\"What?\"\n\nHe laughed then explained military time.\n\n\"Oh. Right. Yes. Eleven hundred it is,\" she told him before thanking him again and slipping inside without any additional affection.\n\n\"Man, oh man, she's hot!\" he said to himself as he backed out of her driveway and feeling on top of the world.\n\nThat evening Trevor went back online to look at new cars with 'car' meaning truck. He was hooked on the Toyota Tundra Limited with a V-8 engine in black. He'd been dreaming of driving one for the last two years and couldn't wait to own one. The $45,000 price tag didn't even phase him as he would put down over half that and finance the rest. Having a $500 car payment seemed more than reasonable even though it would likely cause his dad to have a stroke.\n\nAs he searched he thought about Kim. She was so unlike anyone he'd ever met, and he couldn't get her out of his mind. \n\nThe last time he'd obsessed on a woman, it wasn't a woman. He had a huge crush on a senior girl when he was a junior in high school, and after taking her to homecoming he wondered if they might one day get married. But the fantasy faded within a month of her leaving for college, and from then on he'd never once sought out anything but hookups.\n\nBut now, here he was, sitting in a motel room and wondering those same thoughts. He even took a look at minivans hoping that might help him break out from the spell he was under. But not even the thought of driving something as hideous as that had any effect on him. In fact, he seriously wondered if he should perhaps wait and see how things went before deciding what to buy.\n\nThat thought ended quickly when he consoled himself with the fact that the Tundra had an extra cab which would be more than enough for say...Khloe. He laughed, but did so mostly out of a sense of nervousness, when he imagined another child. One that was very small and wore diapers.\n\n\"Get a hold of yourself, Trevor,\" he said out loud before closing the laptop but not before he smiled again knowing there was still room for a carseat.\n\nKim didn't tell Khloe that Trevor was coming over until an hour beforehand because she knew their would be questions. Endless questions. Even so, the questions began as soon as the squeal of happiness subsided.\n\nKim did her best to answer the ones she could, and when she couldn't, she told her daughter she didn't know. Like when she asked her if she and Trevor were getting married.\n\nThe funny thing about it was that she'd briefly wondered that herself before going to bed. Since the divorce she'd had nothing short of disasters where dating was concerned and had begun wondering if she might be cursed. She knew that wasn't true, but the experiences she had with men were so bad she couldn't help but wonder if something supernatural was messing with her.\n\nShe'd laughed, albeit nervously, when a similar thought hit her right after that one.\n\n\"What if that same 'force' is setting me up for some kind of disastrous failure with Trevor?\"\n\nIt was a reasonable thought in her opinion, because Trevor made no sense. Logically, sensibly, rationally, intuitively, and in several other ways, this was just wrong. But emotionally, Kim couldn't let go of the hope that maybe this was somehow meant to be.\n\nThe physical attraction was obvious, even though it made her wonder if she had some kind of mother-son attraction thing going on in spite of never having had a son. That thought also seemed fair as she tried to understand why else could she possibly even consider dating a man that much younger than her.\n\nSo as those and many other questions and emotions swirled around inside her head, she thought it was perfectly normal for her daughter to have questions that concerned a girl her age.\n\n\"I don't think Trevor and I are going to be getting married,\" she told Khloe.\n\n\"But don't you really like him? Like you said you did?\"\n\nKim hated it when her daughter used her own words against her, but in this case, she had a valid point.\n\n\"Yes. I do really like him. But when grownups go out or go on dates, that doesn't mean they're in love.\"\n\n\"But you could be love. Someday. Right?\" Khloe asked almost hopefully.\n\n\"Maybe someday. But not now, honey.\"\n\nKhloe seemed satisfied with the answer then suddenly asked, \"Mom? When will I be old enough to like boys?\"\n\nHer mom kind of turned her head sideways as her eyes opened a little wider then said, \"You're old enough to like them now. But if you mean 'go out' with them, you have quite a few more years to go. I'd say maybe 14 at the youngest. And then it would only be with other friends and the boy you like. Like a...group...thing...more than a date.\"\n\n\"Okay,\" her little girl said, and with that, the questions stopped. For the time being, anyway.\n\nThe weather was still warm, it just wasn't Miami warm. With that in mind Kim picked out a very cute top she'd been saving for a special occasion. It was navy blue and had little cap sleeves with a square neckline that showed just enough to tantalize without being too revealing and had a thin, white border around the neckline and sleeves. It was perfect for a day like today and would look great with a pair of jeans or capri pants, and she had a pair of white capris that would look fantastic with the form-fitting top. \n\nKim put in some small, white earrings and grabbed a pair of white sandals, and after taking a look at herself felt really good about the outfit. She then pulled her hair back into a flat ponytail and put on a touch of mascara and pronounced herself ready. ",
        "When she went back downstairs to check on Khloe, she was more than a little surprised to see her daughter wearing a dress\u2014the nicest dress she owned.\n\n\"You uh, you look very pretty, honey,\" he mom said without mentioning that a dress was a little much to go look at cars.\n\n\"Do you think Trevor will like it?\" she asked so sweetly it nearly made her tear up.\n\n\"I'm sure he will, sweetheart. But he'd like anything you wear, and maybe something a little less fancy would be better?\"\n\n\"No, that's okay. I really like this dress,\" she informed her mom who only smiled understandingly.\n\n\"All right. Then that will be just fine,\" she said moments before the doorbell rang.\n\n\"Do you want to get it?\" Kim asked with a smile as her daughter's face lit up.\n\n\"Okay!\"\n\nShe watched her baby, who was experiencing her first-ever crush, open the door.\n\n\"Hi, Trevor. Won't you please come in?\" she said, trying to sound like an adult.\n\n\"Why, yes I will. Thank you very much, Khloe,\" he said with no hint of laughter even as Kim did her best to suppress a smile. \n\nWhat didn't occur to her until much later that day was that, for the first time since the FBI came to their house, she didn't have a single thought about...that. It was just...sweet...and seeing her daughter so happy made Kim happy, and she was already very happy herself.\n\n\"Hi,\" Trevor said as Khloe shut the door. \"These are for you.\"\n\nHe produced a bouquet of a dozen red roses, and Kim's heart skipped a beat.\n\n\"Trevor. You...why did you...\"\n\nAs he handed them to her he leaned in a little and softly kissed her. It was only a peck, but it sent chills through Kim's body.\n\n\"I'm still working hard to impress you,\" he said very quietly before stepping back.\n\n\"Did you just kiss my mom?\" Khloe asked, her hands behind her back as she looked up at him.\n\nTrevor squatted down and asked if that was okay.\n\n\"I guess,\" the young girl said with a hint of sadness.\n\nNot sure what to do, Trevor stood up and looked at Kim.\n\n\"I'm gonna go change,\" Khloe said as she walked toward the stairs.\n\n\"Did I do something wrong?\" Trevor asked once Khloe was upstairs.\n\n\"No. She just has a little...crush on you. That's all.\"\n\nFor obvious reasons, Trevor was immediately concerned.\n\n\"Kim. I had no idea. If I ever said or did anything...\"\n\nShe moved closer, put her free arm around his neck and said, \"You haven't done anything wrong. She just...really likes you.\"\n\n\"So you're not upset?\" he asked rather gingerly.\n\n\"Not at all. In fact, I'm just the opposite. I'm very happy that my daughter knows someone who's a gentleman in every respect. Someone she can trust. Someone...I trust. Completely.\"\n\n\"You have no idea how good that makes me feel,\" Trevor told her as he smiled at her. \"And you look absolutely fabulous, by the way.\"\n\n\"You look quite nice yourself.\"\n\nHe was wearing an untucked, light-gray shirt that had no tail with a pair of dark-blue shorts and sandals that made him look...yummy.\n\n\"The weather's pretty great out there,\" he told her as she led him to the kitchen.\n\n\"So do you know what you want to look at today?\" Kim asked as she began trimming stems.\n\n\"I do. But I want to tell you what I was thinking about.\"\n\n\"Oh? Okay,\" she said as she set the first one aside and reached for another.\n\nTrevor gave her the gist of his thoughts about the minivan, and it made Kim laugh.\n\n\"They're very practical, but I think they're...\"\n\nShe put one hand up to the corner of her mouth as though she were telling a secret and said, \"Ugly as sin!\"\n\nTrevor laughed, and as he stood across from her asked how she felt about trucks.\n\n\"I grew up on a farm, so this girl loves trucks. Why? Is that what you're thinking about getting?\"\n\nHe smiled again then said, \"I knew you were awesome, but you just shot straight up to amazing!\"\n\nKim also laughed, and suddenly felt like she'd known him forever.\n\n\"I love horses, too. Does that count?\"\n\n\"You uh, you got me there. I've only ridden a horse once and don't really have an opinion. I mean, they're beautiful animals, but I've never given it much thought.\"\n\n\"There's a riding stable not too far from here. I may have to take you there one of these days.\"\n\n\"Yeah? I think I'd like that.\"\n\n\"What what you like, Mom?\" Khloe asked, now dressed in jeans and a top appropriate for her age.\n\n\"We were just talking about going horseback riding sometime.\"\n\n\"Do I get to go?\" Khloe asked in a way that seemed like she assumed she wouldn't be asked.\n\n\"Of course you do,\" Trevor answered for her mom. \"Wherever we go, you go.\"\n\n\"Okay!\" she said as she looked up at the tall Marine, a big smile on her face.\n\nTrevor waved her closer and when she moved next to him, he put his hand on her shoulder and kind of around her neck.\n\n\"After all, you and your mom are my two favorite girls in the whole world,\" Trevor told her.\n\nKim not only didn't feel sick to her stomach, she smiled when Khloe put her arm around Trevor's waist and leaned into him. She told herself this was how it was supposed to be and felt grateful to have met someone like Trevor for yet another reason.\n\n\"Are you ladies hungry?\" he asked.\n\n\"Oh, right. I promised lunch. Let me get going on that right now,\" Kim said as she cut the last stem and dropped it in a vase.\n\n\"How about we go out again?\" Trevor suggested, causing Kim to give him a 'what are you talking about' look.\n\n\"You eat here three times a day every day, right?\" he said, looking first at Khloe then her mom.\n\n\"We never go out,\" Khloe told him.\n\n\"That's not true,\" her mom said. \"We go out.\"\n\nKhloe stared at her until her mom admitted, \"Okay. It's been a few...months.\"\n\n\"So come on. Let's live a little, shall we?\" Trevor suggested as he squeezed Khloe's shoulder and smiled at her mom.\n\n\"Yeah, Mom. Let's live a little!\"\n\n\"Um...okay,\" she said, knowing she'd lost the battle\u2014a battle she wasn't really fighting as going out sounded a lot better than making lunch for three. \"Let me grab a sweater so I won't be cold, and I'll be ready.\"\n\n\"How about you, Miss Khloe? Do you need a sweater?\"\n\n\"No. I don't get cold. Just old people get cold,\" she told him, unaware of her mother's concern about her age.\n\n\"I believe I was just called old,\" Kim said, bending down to almost touch foreheads with her daughter who came very close to giggling.\n\n\"You're not that old, Mom.\"\n\n\"See?\" Trevor said, as though that settled the issue once and for all.\n\n\"That's easy for you to say,\" Kim replied.\n\nShe looked at both of them then said, \"Both of you.\"\n\n\"We resemble that remark,\" Trevor said with feigned indignance.\n\n\"You sure do,\" Kim said as she tried not to laugh.\n\n\"What does that even mean?\" Khloe asked, a confused look on her face, causing her mom to laugh and Trevor to pull her toward her hard enough that she made a happy shriek before he picked her up and swung her around.\n\nRather than ask to be put down the eight-year old girl hugged Trevor, and once again, her mom felt a lump in her throat and a flutter in her tummy.\n\nKim took Trevor to the Toyota dealer first. But after looking at each of the Tundras they had on the lot, he told her he wasn't quite as excited about a big rig.\n\n\"I hope we're not to blame for that,\" she said with a little laugh.\n\nTrevor didn't even smile as he replied.\n\n\"Blame? No. But I just have this feeling we're going to need something more practical than a truck.\"\n\n\"We?\" Kim replied, her mouth suddenly dry.\n\nTrevor smiled, touched her arm and gently ran his hand up and down in once, then said, \"I'm an optimist.\"\n\n\"Did you say...masochist?\" Kim said, trying to sound funny.\n\nThe younger man laughed and told her that wasn't the case at all.\n\nHe moved a little closer, took both of her hands in his, then said, \"In fact, I can't think of anything that would make me happier than that.\"\n\nKim's heart was pounding in her chest as she spoke.\n\n\"Wow. You uh, you've really set the bar low, haven't you?\"\n\nShe laughed that nervous laugh again, but Trevor just moved closer.\n\n\"Hey,\" he said quietly as he touched her face. \"You promised not to put yourself down anymore, remember?\"\n\nKim couldn't even think let alone remember as she felt him squeeze her hands. It got far worse when he leaned closer and softly kissed on her lips.\n\n\"So no more of that, all right?\"\n\n\"What?\" she asked, having no idea what he meant.\n\n\"Come on. I want to see some another cars.\"\n\n\"Oh. Okay. Sure,\" she told him never taking her eyes off of his.\n\nAfter checking out the RAV-4 and the Highlander, Kim asked a question.\n\n\"Do you like Jeeps?\"\n\n\"I do. Why do you ask?\"\n\n\"I...I've always wanted to go off-roading and I...we'd love to go camping. But our car barely drives on pavement, so...\"\n\nThe look on Trevor's face was priceless.\n\n\"Khloe? You wanna go look at Jeeps?\" he asked after bending down and looking at her.\n\n\"Sure!\" came the reply.\n\nAs he stood up, Khloe grabbed his hand and this time her mom didn't choke up. She only smiled and held her out which Trevor took and squeezed as he did.\n\n\"This is my lucky day,\" he said as they headed toward his rental car.\n\n\"How come?\" Khloe asked.\n\n\"Because I'm holding hands with two beautiful girls.\"\n\nKim almost mentioned that she hadn't been called a girl in some 20 years, but when she thought about who was saying it and why, as well as her promise, she only squeezed his hand.\n\nKhloe smiled then said, \"Mom? Isn't Trevor nice?\"\n\nHe looked at Kim as she said, \"Yes, he is, honey. He's very nice.\"\n\nHe leaned Kim's way then quietly said, \"You forgot handsome.\"\n\nShe made a spurting noise as though what he said was absurd but ended up saying, \"Okay. You're kind of okay looking.\"\n\nHer teasing words came with a look that said, \"I think I'm falling in love with you,\" but Trevor couldn't be sure. What he did know was that he was falling fast and hard for this beautiful older woman with a daughter he would happily and willingly raise as his own were he given the chance to do so.\n\nAs they headed down the road to the local Jeep dealership Trevor said, \"Do you like any Jeep in particular?\"\n\n\"I love the Grand Cherokee, but the Wrangler is my favorite.\"\n\nHe glanced over at her, smiled, then said, \"You're trying to make me fall in love with you, aren't you?\"\n\nAfter what she'd just been thinking his comment stunned her. Not in a bad way, it just caught her completely off guard.\n\nHer brain disengaged again, and the first words she thought of came out.\n\n\"Is it working?\"\n\nHorror struck, she went to cover her mouth before apologizing, but as she raised her hand, Trevor grabbed it and squeezed it again.\n\n\"In a big way,\" he told her, sending her into a dizzying mental spin that lasted until they got out of the car.\n\nTen minutes later, the young salesman asked if they'd like to take one of the Wranglers out for a test drive.\n\n\"I think your wife's partial to the 4-door Sport,\" he said the way sales folk often do, accompanied by a little chuckle.\n\n\"Oh. She's...\"\n\nBefore Trevor could tell him they weren't married, Kim said, \"You saw correctly. We'd love to drive it.\"\n\nWhen Trevor looked at her, she knew it was okay and added, \"Right, honey?\"\n\nHe winked at her then told the salesman, \"Happy wife, happy life, right?\"\n\nHe kind of tapped Trevor's lower arm and said, \"I'll be right back with the plates and keys.\"\n\nKhloe also loved the Sport. So much so that was inside it when the conversation took place. When she hopped out she saw her mom and Trevor with their arms around each other kissing and smiled. She walked over to them, and when they noticed her, they each lowered an arm and pulled in close.\n\nKhloe put an arm around each one of them and as he head was pressed between them she couldn't ever remember being happier since the day her world fell apart.\n\nWhen the young man returned, he attached the plates then held out the keys to Trevor.\n\n\"Honey? You wanna drive it?\" he said, a smile on his handsome face.\n\n\"Are you kidding?\" she replied as she grabbed the keys.\n\n\"Happy wife, right?\" the younger man said to Trevor with a big smile.\n\n\"Yeah. You got that right, my friend.\"\n\nAfter a trip around the block, Kim said she loved it and asked Trevor to take it for a spin. \n\n\"That's okay. We'll take this one,\" he said, making the salesman's day.\n\n\"Great! I'll wrap it up for you guys and meet you back inside.\"\n\n******\n\nSometimes people just know. Most of us needs months or years to be sure we love someone, but occasionally, two people just know. That was the case for Trevor and Kim.\n\nAs they drove back to her place, Kim in the new Jeep and Trevor returning the rental car to the nearest location, both of them knew they loved the other person. During the next three weeks while Trevor was still on leave, they spent as much time together as they possibly could. When they couldn't be together they sent texts. Texts that made Kim smile and sometimes tingle inside.\n\nAfter he reported in, Trevor was often in the field trining with his Marines. Within 60 days of his arrival he was given a rifle company, and between the new job and his new love, he couldn't ever remember being happier. Kim needed a little time to be sure this extremely attractive, much-younger man really loved her, but once she knew it, she gave herself to him and their relationship completely. \n\nTrevor lived in the Bachelor Officer Quarters or BOQ for those first two months, but once Kim was certain of his love, he asked her to move in with him. They found a very cozy two-bedroom apartment off base, and the 'two Ks' left Beaufort for good. \n\nIt was hard to know who was the happiest among them, but most people's money would be Khloe who now had a father figure in her life again. This time, she had a man who was honest, honorable, and loving, and who made her feel like the most special girl in the world.\n\nKim's happiness was off the charts because she not only believed she'd found the most wonderful guy on earth, but she marveled at how he and her daughter had bonded. She often recalled the first time Khloe called Trevor 'Dad' after asking him if it would be okay.\n\nHe'd taken her over to the couch and told her that nothing would make him happier, and when Khloe heard those words she hugged her new dad as tears of joy formed in her eyes. Kim saw them and teared up, too, as her heart swelled with love and gratitude.\n\nFive months later Trevor proposed one evening when the three of them returned to Miami for a four-day weekend. He wasn't sure of the exact spot where Khloe had been making sand castles, but he knew he was within a few feet when he asked her.\n\nHe waited until the sun was setting then got down on one knee and opened a small, fuzzy, blue box as Kim gasped and teared up, her hands shaking as Khloe smiled, her arm around her daddy. The three of them stood up after Kim said 'yes' and held one another as the sun set over the Atlantic Ocean. \n\n\"This is where it all began,\" Kim said, Khloe between them, their arms around her shoulders.\n\n\"I remember,\" Trevor said without mentioning the reason why they met.\n\nBut Kim couldn't help but say something as she took her fianc\u00e9's hand.\n\n\"I can't help but think that my being so overprotective was a good thing,\" she said as she smiled at the man she loved.\n\n\"Listen you you!\" he replied as he smiled back at her.\n\n\"Perspective really is everything, isn't it?\" Kim observed.\n\n\"You know, I loved Spring Break when I was in college,\" Trevor mused. \"But I never once thought it would be the kind of event that would change my life forever.\"\n\nThe last of the sun's disc disappeared as the three of them stood there looking out over the water.\n\n\"Dad? Do you wanna build a sand castle?\" Khloe asked.\n\n\"You got a bucket?\" her dad asked.\n\n\"No, but there's a big can right over there.\"\n\n\"Then what are you waiting for? Go get it and we'll make one.\"\n\n\"Let's make the biggest one ever!\" Khloe said as she ran off to get it.\n\nKim turned to her husband-to-be and put her arms around him.\n\n\"I love you so much, honey.\"\n\nKhloe returned just as Trevor said, \"I love you, too. With all my heart.\"\n\n\"And I love both of you!\" Khloe said as the new family hugged one more time before she scooped up a can full of sand.\n\n\"Pack it down tight!\" her dad told her.\n\n\"I know!\" Khloe told him as she smiled at him and did just that.\n\n*****\n\nSix months to the day after returning from Miami they were married in the Base Chapel on Camp Lejeune. The officers in Trevor's battalion were out front forming a sword arch as the newly-promoted captain in his dress blues walked under it with the beautiful, older women in white who was followed by a smiling, nine-year old girl in a pretty white dress.\n\nA limo was waiting to take them to start their new lives together; a life that would see another life begin just nine months later. \n\nKhloe got to hold her baby brother a few hours after he was born, and her mom couldn't ever remember seeing her daughter so happy. But as Trevor held her hand while she lay there watching, she couldn't remember ever being that happy, either. And all of it was due to them meeting during Spring Break under the most unusual of circumstances."
    ],
    "authorname": "komrad1156",
    "tags": [
        "may-december romance",
        "older woman",
        "younger man",
        "romance",
        "romantic"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/spring-break-2029"
}