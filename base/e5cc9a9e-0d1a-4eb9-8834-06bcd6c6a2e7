{
    "title": "A Funny Thing Happened...",
    "pages": [
        "This one is fiction inspired by a true event....the day a celebrity was in line ahead of me at the grocery store. The studio is just down the street, and she was buying some fresh lunch from the deli section. \n\nIt wasn't Rachel Nichols, and I just watched as she walked away, but for the purposes of this story.....well it's fantasy, after all, isn't it? \n\nI hope you enjoy it. \n\nAnd, if Rachel herself should happen to read it.... I hope you'll get in touch! ;-)\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nIt was a beautiful, near summer day in the lower mainland, with the normal complement of bright sunshine, pleasant temperatures, light breezes and chirping birds. There were plenty of people around, enjoying the sun. \n\nI loved the summers here. The winters could drive you into depression, with weeks of incessant rain, followed by still more of the same....but the summers were perfect. Warm, but not humid, and that warmth led to my favourite thing about summer here. \n\nYou see, there was no shortage of outdoor activities for people to use as exercise, and keep themselves in shape. I say 'people', but I'm a guy, so really, I only noticed the women. Lots of women. Lots of firm, toned women, in shorts and thin, scanty tops. Personally, I thought it was still a little cool for the summer attire, but I was happy to check them out. \n\nStill, there was something different about this one. Well dressed, wearing a long jacket that hid her curves, but she drew my gaze anyway, even from behind. \n\nI was in my car, rolling slowly along through the parking lot of the plaza, and she was on the sidewalk. Relax....I'm not a stalker, but I learned long ago not to assume anything when it comes to pedestrians. \n\nI once had a skateboarder try to do one of those 'board flip grind' tricks, right in front of me, as I entered a parking lot. Something told me to watch out, that he wasn't paying attention, and when he proved his skills didn't match his ambition by sprawling on the pavement in front of me, I was able to stop. \n\nEver since then, I had been extra careful. I just thought of it as being courteous, and safe. \n\nI never thought it would pay dividends, and change my life. \n\nThe woman on the sidewalk had her head down, looking at her phone. Long brown hair hung down her back, and that's part of what had me watching her. \n\nTwo people walking side by side toward her forced her to the left to go around them. Why do people do that? So self absorbed that they become obnoxious, like they own the sidewalk. As the brunette stepped left, they bumped her as well. The rest almost happened in slow motion. \n\nShe was tall, but still wearing boots with a moderate heel, and the bump made her catch her foot. She tried to regain her balance, but was too close to the edge of the sidewalk. Her heel slipped off, and her left ankle buckled, pitching her onto the asphalt, right in front of my bumper. She landed hard, crashing onto her left side, while I screeched to a halt. \n\nI put my flashers on, and jumped out of my car, racing forward to check on her. Surprisingly, I was the only one. The two people who had caused her fall kept walking, oblivious to the world, and while a few others had gathered on the sidewalk and were asking if she was alright, no one else was really helping. As I reached her, I heard the crunch of a car running over her phone, which the fall had sent spinning into the next lane. \n\n\"Are you okay?\" I asked her. She still had her back to me, laying on her side. \n\n\"Um, no, not really,\" she replied. She turned her head, and looked at me appreciatively. There was something familiar about her eyes, but right now, I had other things to deal with. \n\n\"Stay down,\" I said, kneeling beside her. \"Did you hit your head?\" \n\n\"No, I don't think so,\" she moaned, trying to sit up. \"Just everything else.\" \n\n\"Take it easy,\" I said softly, helping her sit. I braced behind her, \"Here....lean back against me and catch your breath.\" \n\n\"Thank you for not running me over,\" she giggled. \"Do you see my phone?\" she added, looking around. \n\n\"Yeah, I do,\" I replied. \"Sorry to say it wasn't so lucky. I think it's fatally wounded.\" I pointed to the shattered pile of glass, plastic and metal in the middle of the other lane. \n\n\"Oh shit! I really liked that phone,\" she grumbled. \n\n\"Well, at least it wasn't anything more important. What hurts?\" I asked. \n\n\"Left hand, elbow, shoulder, hip, knee and ankle,\" she said, brushing the scuffed skin of her palm. \"And my pride. Help me up, please?\" \n\n\"Okay,\" I smiled, and took her right hand. I put my arm around her waist, and gave her something to push against. \"Don't put too much weight on the ankle. I saw the way it twisted when you fell.\" \n\nUsing three of our available four legs, we managed to get her standing, and I propped her up beside my car. She tried to stand on the left ankle, but the pain marred her beautiful face....a face I now recognized, along with the pretty blue eyes. \n\n\"I think we should take you to get that ankle looked at,\" I suggested. She nodded, and smiled. \n\n\"Thank you for helping me. I feel like an idiot, falling like that.\" \n\n\"Well, you shouldn't,\" I smiled back, as I helped her into the passenger seat of my car. \"I saw what happened. It wasn't your fault.\" \n\n\"Thank you anyway,\" she giggled. \"Can I ask one more favour?\" Pick up what's left of my phone? Maybe the sim card and data card are okay.\"\n\nI nodded, and went to retrieve the crushed device, joining her in the car a moment later. As I sat, she extended her hand. \n\n\"My name is....\" she began. \n\n\".... Rachel. Yes, I know,\" I grinned, completing her sentence. \"Rachel Nichols. I recognized you a few minutes ago, but I didn't want to say anything while there were other people around. May as well not be on the front page of the newspaper, right?\" I held her hand. It was soft, and warm. She smiled again. \n\n\"Thank you for your discretion. You are....?\" she asked. \n\n\"Oh, right.....Mike Edwards,\" I blurted, suddenly realizing who was sitting next to me, still holding my hand. \n\n\"Well Mike, if you could drive me back to the studio. It's only two blocks, that way,\" she gestured with her eyes. \"And, if I could borrow your phone for one quick call?\" \n\n\"Of course,\" I smiled, releasing her hand to dig into my pocket. I handed my phone to her, and started the car. I began to drive slowly away, as she made her call. \n\n\"Hi Marcy....it's Rachel,\" I heard her say. \"Yeah, I know... I had to borrow someone's phone. Mine's dead. Car killed it.....I'll explain later. Listen Hon, can you meet us at Medical?... Yes 'us'....I'm afraid I can't walk, and a nice gentleman is giving me a ride back..... Thanks Marcy.\"\n\n\"Thanks Mike,\" she giggled, handing it back. \"My assistant will take me off your hands at the clinic, inside the studio grounds. Turn left here... \"\n\nWe pulled to a stop at the security shack, and a beefy guy in a uniform stepped out. \n\n\"Can I help you?\" he rumbled. I pointed to Rachel, and he ducked his head to look past me. \n\n\"Hi Bill,\" she giggled, waving her fingertips at him.\n\n\"Miss Nichols?\" he answered, confused. \"Didn't you just leave? On foot?\" \n\n\"Yes, but I won't be doing much walking for a while, I fear,\" she replied. \"My friend Mike is helping me home. Can you let us in, and give him a guest pass, please?\" \n\n\"Of course, Ma'am,\" he nodded, and went back into his hut. \n\nI was still considering her words.....that I was a 'friend'....when he returned with two items. The first, a parking pass, he placed on my dashboard, after noting my plate number. The second was a lanyard, with a card that read 'Guest' on it. \n\n\"Thanks, Bill,\" Rachel smiled. \"We're heading for Medical.\" \n\nShe directed me through the lot, finally stopping beside a concerned looking blonde, who had her hands on a wheelchair. \n\n\"What happened?\" Marcy asked, opening the car door. \n\n\"I tripped,\" Rachel replied, \"and Mike, here, helped me up. Mike, meet Marcy. Marcy, meet Mike,\" she grimaced, standing to transfer to the chair. Once she was seated, Marcy handed her a phone. \n\n\"Oh, that's why I love you, honey,\" Rachel smiled. \"I didn't even ask, and you knew what I wanted!\" She handed it to me. \"Mike, could you make the transplant, for me?\" \n\nMarcy pushed Rachel in the chair, through the big door into the clinic, while I performed phone surgery on the roof of my car. She was right....the sim card seemed fine, as did the data card, and I slipped them into their appropriate slots. There was a dial tone. It's alive! \n\nI pocketed her new phone, dumped the corpse into a garbage can, and wandered in the direction they had gone, following the red cross signs until I found the door. I opened it, and found Marcy waiting. \n\n\"Any news yet?\" I asked her, and she shook her head. \n\nIt was only about five minutes before Rachel hobbled out of the exam room, wearing a walking boot. She looked down at her foot and laughed. \n\n\"Not exactly stylish, is it? I'm told it's only sprained, but I'll be out of commission for at least a week. The painkillers are pretty good, though.\"\n\nThe doctor followed her out. \n\n\"It's not 'only' sprained,\" he smiled, \"it is very sprained, hence the boot. Other than that, just a few bruises, and a scraped hand. It could have been a lot worse. I'll let the producers know you're on the bench for a while. The show will have to go around you for a week or so.\"\n\nRachel took a seat in the wheelchair, and Marcy pushed her along while I followed. We stopped as we got near my car. \n\n\"Mike, can I have your phone for a second?\" Rachel asked. I handed it over, and she punched a few buttons. My other pocket began to ring, and I fished her phone out, to answer it. \n\n\"There. Now you have my number, and I have yours,\" she smiled, handing mine back and taking her own. \"I'm going to be sleeping a lot tonight, but I'd like to take you to dinner tomorrow, if that's alright? It's the least I can do after you didn't kill me, and helped me back here. I'll call you, okay?\" \n\nOkay? Are you kidding me? Rachel Nichols wants to take me to dinner? Yeah, I can pencil that into my schedule. \n\n\"Certainly,\" I smiled. \"Call me anytime.\" \n\nShe waved, as I drove away, wending my way out to the gate, where Bill gave me a nod, and watched me leave. \n\nI went home, to watch the saved episodes of Continuum on my PVR, and count my lucky stars. \n\n***\n\nHow is my hero today? my phone asked, just before noon the next day. A text from Rachel Nichols! My friends would never believe me anyway, so I didn't even bother telling the story. \n\nI'm fine. How's your ankle? I typed. The response was quick. \n\nSore. Painkillers helping. Dinner tonight? \n\nOnly if you're up to it. You really don't owe me anything. I was just doing what anyone would have done. I replied. Again, the response was immediate. \n\nI was there, remember? I don't recall anyone else lifting a finger to help, and that's before you recognized me. It's very gallant of you to decline, but I'd really like to say thank you properly. I'll be in touch, later. \n\nI guess I have a date tonight, I thought. I'd better make sure I look good. \n\n***\n\nLater that afternoon, having spent an hour ironing my clothes to within an inch of their lives, I decided to take a nap. I wasn't really tired, but I needed to kill some time, and the tension was killing me. \n\nMy dreams were predictable. A certain brunette was featured strongly throughout. Can't possibly understand why. \n\nMy phone woke me up, just as I was about to kiss her in my dream. The display said Rachel. It's like she was somehow protecting herself from me, even in my subconscious. I picked it up. \n\n\"Hello, Ms. Nichols,\" I answered, trying not to sound like I had been asleep. \n\n\"Well, aren't we proper?\" she laughed. \n\n\"I don't want to be presumptive,\" I replied sheepishly. \n\n\"Uh huh....well, I presume you are going to be eating dinner tonight. Will you join me? No dancing, for reasons you well know, but I could use the company, and I owe you a meal, at least. And, please call me Rachel?\"\n\n\"Okay....Rachel....Am I coming to you, or vice versa?\" I asked. \n\n\"Well, you know where I am, so why don't you pick me up here,\" she said softly. \n\n\"You mean at the studio?\" I asked. \n\n\"Yes. They have a few condos that form one of the boundaries, and I'm in number 4. You didn't think I was staying in a trailer, did you?\" she giggled. I just loved her laugh. \n\n\"Um, no. I just didn't know about the on site accommodation,\" I replied. \n\n\"Okay. Pick me up at seven. I'll make sure the gate knows you're coming, and to direct you to my door. You still have your passes, right?\" Her voice was confident and comforting at the same time. Also sexy as hell. My dick began to react predictably. \n\n\"Yup, still in the car,\" I answered. \n\n\"Good. See you at seven,\" she chirped. You could hear her smile, and the line clicked off. \n\nSeven o'clock. I had almost three hours to get ready. \n\nI decided to start by dealing with the uncomfortable swelling in my crotch, and headed toward the bathroom. \n\n***\n\nTwice. I had to jerk off twice, and still I made it on time, arriving at the studio gate just before seven. \n\nBill, the gate keeper from before, wasn't on tonight. This guy looked a little older, but no less official. I stopped beside the gate house, and he stepped out to greet me. \n\n\"I'll just bet you're Mike,\" he smiled, tapping my windshield over the parking pass. \"Miss Nichols told me you were coming. She said a nice young man in a silver Dodge would be here at seven.\"\n\nThe look on his face was one of envy and surprise, as he gave me the directions to the condos. I picked my way through the lot, and came to the accommodation block with no trouble at all. \n\nUnit 4 was on the lower level, which was fortunate, given Rachel's restricted mobility. I rang the bell, and moments later, the door opened. \n\nWhoa! That's Rachel Nichols. She really is here, waiting for....me! \n\nThat smile, those eyes....she was breathtaking. Now that I wasn't otherwise occupied in trying to help her up, or save her life, I noticed how tall she was, even in the low heels she was wearing. Her legs were endless. The dress she was wearing was a cream colour, with a sort of scoop neckline, and layered across her body in precise folds. It at once both hid and hinted at the wonders underneath \n\n\"I'll take that as a compliment,\" she giggled, stepping out as elegantly as possible in one shoe and one boot. She closed the door behind her, and took my arm. \n\n\"I, uh, I don't think I said anything,\" I stammered. \n\n\"No,\" she smiled, \"but that look speaks volumes. Thank you. So....how hungry are you?\" \n\nWe had reached the car, and I helped her in, then ran around to my side. Sliding behind the wheel, I answered her question. \n\n\"Well, I don't know....\" I began. \n\n\"Oh, stop being so proper, and just pretend I'm any other woman,\" she fixed me with those eyes. \"Are. You. Hungry?\" \n\n\"Starving,\" I nodded, relaxing slightly. \n\n\"Good. So am I. Do you trust me?\" she asked, a little smile fighting with her perfect eyes for top billing. \n\n\"I would say yes,\" I nodded again. \n\n\"Thank you. How do you feel about Italian?\" \n\n\"Um.....Delizioso?\" I laughed. \n\n\"Si!\" she giggled. \"Out the gate, then turn right. I know a place with great pizza!\" \n\nPizza? My big date with a movie star....and she wants pizza? I was braced for a big, fancy restaurant, with people watching us. Pizza? \n\nI drove until she told me to turn, then drove some more. Finally we passed this little, family run, hole in the wall joint, and I parked us half a block away. \n\n\"Are you sure you don't want me to drop you closer?\" I asked her. \n\n\"I'm not broken,\" she smiled. \"Besides, it's a lovely evening. I hope we can get a table on the upper deck, so we can watch the sun set.\"\n\nHoly shit! On second thought, pizza sounds great! I'll trade the fancy restaurant and paparazzi for a quiet sunset dinner with a gorgeous woman, anytime. \n\nRachel took my arm again, and we walked slowly from the car to the restaurant. A guy who looked like he could be the owner greeted us, and escorted us in. \n\n\"Upstairs?\" she asked quietly. \n\n\"Certo, signora,\" he nodded, leading the way. The staircase was narrow, and a little steep. I followed Rachel, getting a better view of those legs as she went. As we reached the top, she turned her head, and gave me a little grin. \n\n\"Ah, this is perfect,\" she smiled, as we reached our table, one of four on the small deck. The others were empty. Sun streamed through the trees that separated us from the beach, a block away. \n\nLuigi, or whatever his name was, left us with menus, and a few minutes alone. \n\n\"I always try to come here when I'm in town,\" she explained. \"It's so beautiful, and peaceful. Great pizza, too.\" \n\nRight now, they could serve me frozen pizza, half cooked, and I wouldn't care. I was in a very romantic setting, with a very beautiful woman. Food was getting pushed down the priority list. Still, it made for a good conversation starter. \n\n\"What do you usually get?\" I asked. \n\n\"Hmmm,\" she pursed her lips in thought. I had some other thoughts about her lips. \"Well, the hand tossed crust is divine. Pepperoni, of course. Mushrooms, black olives, ground beef, sausage, green peppers, extra cheese....\"\n\n\"Jeez, no kitchen sink?\" I joked. \n\n\"No. Too fattening,\" she laughed. \"Bacon, though. Must have bacon.\"\n\nAs if on cue, Luigi reappeared. Rachel repeated the list of toppings, we ordered drinks, and off he went. \n\nThere was a lull in conversation. I couldn't immediately think of anything I thought she'd like to talk about. Everything that crossed my mind was dismissed quickly. Her ankle, the weather? Lame. How, about TV? No, I don't suppose she watches much TV. Although.....she's on TV, isn't she? \n\n\"I just loved you on 'Continuum', I began. \"Great series. I'm going to miss it. The way it ended was heart rending.\" She sat quietly, and nodded. \n\n\"Thank you. I'm going to miss it, too. Kiera was a fun character, much deeper than it initially seemed. I'm glad you enjoyed it,\" she smiled. Her eyes sparkled. \"Listen....I talk about me all the time. It's part of my job. Tonight, I'd like to just be Rachel, if that's okay.\" Her hand touched mine. It was soft, and warm, and electric. \"Tell me about you. What do you do when you're not rescuing clumsy women?\" \n\nI laughed, she laughed, and I suddenly felt much more at ease. If she wanted to 'just be Rachel', that was fine. She was still the most beautiful and captivating dinner partner I'd ever had. I had no illusions about this being anything more than just a meal together. Fantasies? Yes. I'd always have those. \n\nWe talked. She pretended to be interested in my job, which was anything but interesting. Boring even....as just another office worker. When we got to hobbies, and other interests, we really seemed to click. I love nature, and the outdoors, and she just lit up when I told her that. \n\n\"That's one of the things I love about being here,\" she smiled. \"It's just so perfect. The sea, the sky, the mountains....I could go on forever. I would suggest we go for a hike sometime, but I'm obviously not to be trusted on my own two feet,\" she laughed, gesturing to the stylish, grey plastic boot on her left foot.\n\nWe were laughing like two longtime friends when dinner arrived at our table. The pizza was the size of a manhole cover. \n\n\"Holy shit, Rachel! There's enough here to feed an army,\" I chuckled. \n\n\"Or one hungry girl from Maine,\" she smiled, dragging a huge slice onto her plate. \"I'll try to leave you some.\"\n\nShe was right about the pizza. This place just went to the top of my list, even without Rachel's company. It was very good....so good that the pizza just went down so easily. On her third slice, she licked her lips, and smiled at me. ",
        "\"Okay....I know you're dying to talk about movies. Go ahead. Get it out of your system,\" she giggled, going back for more. \n\nAt last. I was about to burst. \n\n\"First, let me say I'm glad you're not wearing the camouflage suit from 'Continuum' tonight. I like being able to see you.\" It was meant as a witty comment....referring to the suit that rendered her invisible on the TV show... but came out more like a blatant flirt. She glanced down and blushed. \n\n\"Yes, well....there are times when disappearing would come in handy,\" she said softly, \"but it's nice to be seen tonight. Do you like my dress?\" \n\nShe returned my volley, and reminded me I hadn't complimented her nearly enough. \n\n\"It's beautiful,\" I replied, \"but it's better with you in it.\" And you'd be better without it. \n\nShe fanned herself theatrically, and giggled, then gestured for me to continue. \n\n\"Star Trek,\" I began.....\n\n\"I'm from Maine, not Orion, and you've probably noticed in not green,\" she tittered. \n\n\"Conan?\" I asked \n\n\"Yes and no. Body double for some of the more revealing bits.\"\n\n\"G.I. Joe?\" \n\n\"Ah....the Scarlett suit? That was fun. A bit warm, but fun. Made my boobs look bigger didn't it?\"\n\nWas she inviting me to make a comparison between the big screen version and real life? Baiting me into taking a peek? There was just a hint of cleavage available for viewing in the neckline of her dress. \n\n\"I think.....they look, um..... I decline to comment on the grounds that I may incriminate myself,\" I pleaded. \n\n\"Ah....gallant, discrete, and diplomatic? What a gentleman,\" she said, raising her glass. \n\nI nodded sheepishly, and clinked my glass with hers. \n\nMore pizza disappeared. Two things were apparent. One, she really was hungry, and two, she had to have some secret technology from 2077 that kept her girlish figure despite her appetite. With one slice left on the tray, I gestured to it. \n\n\"Please, put it out of its misery,\" she laughed, nibbling on her own piece. I took it, and began to pack it away, when she looked past me. \"The sun is starting to set. Why don't you move over here, so you can watch it too?\" \n\nWhat am I going to say? No? I want to stay over here, as far away from you as possible? No? I think you're just trying to flirt with me? \n\nHell yes! Move over! \n\nI scooted around the table, and took the seat beside her, watching the sun move lower, now peeking under the tree branches. It was one of those moments when conversation is superfluous. The view and the company were more than enough. \n\nStill, why not have more, if it's being offered. \n\nRachel slid her chair right against mine, and took my hand. \n\n\"Do you mind?\" she asked. I smiled, and shook my head. She lifted my arm, wrapped it around her shoulder, and snuggled tight against me. \"It's getting cooler,\" she added. The shadows were growing. \n\nReally? It's getting warm for me, I thought. \n\nWe sat there quietly. Rachel rested her head softly on my shoulder. It was pretty nice. \n\nYeah, I'm kidding. It was fan-fucking-tastic! My friends were never going to believe this either. Their loss. \n\nLuigi was back, trying to tempt us with dessert, but I was stuffed. Rachel declined as well. When he came back a minute later with the bill, she snatched it away quickly before I could. \n\n\"Rachel....please,\" I smiled, but she shook her head. \n\n\"If you recall, this evening was supposed to be my way of thanking you. It's my treat. End of discussion,\" she said quietly. She put her card on the bill and Luigi went to process it. \n\nI wondered if he even knew whose autograph he was about to get. \n\nWith the bill paid, Rachel stopped at the top of the stairs. I said they were narrow and steep. I guess they looked worse from the top. \n\n\"Mike could you go first, please. This ankle is going to make getting down awkward. I know I can trust you to catch me if I slip,\" she smiled. \"I'll try not to impose on your rescue twice in two days.\" \n\nI stepped down ahead, then turned to face her, a hand on each rail. Together, and one step at a time, we moved down the flight. Being two steps below her put her boobs right at eye level, so I couldn't help taking a peek. Then another, and another. I was trying to be subtle, but this close, that was difficult. \n\nI reached the bottom step, and released my grip on the railings, reaching up to grasp her waist. I found it firm, and narrow....and incredible, given her appetite. \n\n\"I gotcha,\" I laughed and hoisted her down the last two risers. \"Good Lord woman!\" I grunted dramatically, \"What have you been eating?\" Truthfully, she wasn't heavy, even with excess pizza ballast, and I placed her on her feet safely. Her arms had come down around my neck, and now she was smiling brightly. Those spectacular eyes were twinkling at me, from close range. If it was anyone else....someone I knew and was on a date with....I would have kissed her. I almost did anyway, but thought better of it. \n\nWe stepped outside onto the street. \n\n\"I hope you're not in a hurry to get home,\" she said softly. \"Walk with me?\" She held her hand out, and I took it. \"Well...you walk, I'll hobble as elegantly as possible,\" she giggled. \n\nWe turned the corner, and made our way slowly down to the beach, where she removed her shoe to make at least fifty percent of her steps easier. I steered us toward a big driftwood log, and we perched on it, looking at the warm glow that lit the western sky. I wrapped my arm around her shoulder again, and she resumed her position from before. \n\n\"I could have been killed,\" she whispered. \"If you hadn't been paying attention, or were going faster, I could have been killed.\"\n\n\"You weren't,\" I replied softly. \"That's all that matters. I'd rather not make the papers that way. It's lucky for both of us.\" \n\n\"Thank you,\" she sighed. \"Can I ask you a question?\" \n\n\"Mmmmm hmmm,\" I replied, enjoying the view, and the feel of her pressed softly against me. \"Ask as many as you want.\" \n\n\"Why didn't you kiss me?\" she asked. \"In the restaurant, at the bottom of the stairs....why didn't you kiss me?\" \n\nDumbstruck, it took me a few seconds to formulate a reply that wouldn't sound desperate, or obnoxious. \n\n\"Not my place,\" I finally issued. She still had her head resting softly against my neck and shoulder. \n\n\"I'm just Rachel, remember?\" she whispered. \"I'm just a woman, in the company of a very kind, caring, gentle and wonderful man.\"\n\nI was about to argue that she could never be 'just' another woman. Too beautiful. Too statuesque. Too perfect, to be 'just' anything. She had more to say, though. \n\n\"Rachel wouldn't mind if you kissed her,\" she breathed. \"I'm sure she'd actually like it.\" Her head lifted, and she turned to face me. \n\nHer eyes glittered, reflecting the waning light off the sea. I brushed a strand of hair away from her face, and felt her shiver. It didn't seem like a cold shiver. She licked her lips unconsciously, making them look even more delicious. \n\nOh boy. This is it. How many times have you watched her on screen, and wanted to be right here, in her arms, just like you are right now. You'll never get this chance again. Don't fuck it up. \n\nI touched my lips to hers, feeling the electricity of our excitement. Her kiss was so soft, like an angel, or a cloud. I pulled back, and looked into her eyes, seeing happiness. Those eyes closed, and she took the initiative, this time a little more forcefully. Her lips moved as she swivelled her head slightly, and a hand came up to caress my face. Her tongue peeked out, toying with my lips, until I opened up and let her put it to better use. It was the most incredible first kiss I'd ever experienced, and I would have been happy if that's where it ended. \n\nShe had other ideas. \n\nAfter a second of withdrawal, she was back. What had begun as a tentative pressing of lips was now a full, passionate attack, with her tongue plunging deep into my mouth. My hands were around her waist, while she held me fast with one, and rubbed my chest with the other. \n\n\"Mike,\" she hissed, in a quivering breath of desire, \"I think you'd better take me home, before I do something that gets us arrested.\" \n\nI liked the sound of that. I liked it a lot. I might have been making a big assumption, but I hoped that meant that whatever she couldn't do here, we'd be doing at her place. \n\nWe made our way back to the street, where she paused, presumably to put her shoe back on. I took advantage, pulling her to me for another kiss, then scooping her up. I was going for 'chivalrous', but 'eager' could have been equally appropriate. Rachel rested her head against my chest, arms around my neck, as I whisked her up the sidewalk. I plunked her down on her seat in the car, and took my own place behind the wheel. \n\nWhen I looked over at her, she was smiling, and toying with the thin necklace that hung around her neck. \n\n\"There's no rush, Mike,\" she said softly. \"I'm hoping you will stay with me tonight. Will you?\" \n\nIt was Friday night. I was off tomorrow. My list of potential excuses was pretty thin. Damn! I guess I'd just have to sleep with her. What a pain. \n\n\"I'd like that,\" I replied, returning the smile. \"You're sure that's what you want?\" \n\n\"Yes,\" she nodded, leaning closer, \"and the fact you asked that is proof of why. You really are a nice guy, and I have a soft spot for nice guys.\" Another kiss, and she sat back patiently waiting for me to get myself, and the car, in gear. \n\nUsually, I found the return trip felt shorter than the outward one. Not so much tonight, probably because of what I anticipated was waiting for me. Time was standing still, and it was making me crazy. Every traffic light conspired with the light traffic to prolong the agony, turning red just as we approached. Each red light also gave me a chance to look over at her again, and she stoked the fire by licking her lips, and flashing me that smile. At last, we arrived at the studio gate. \n\nThe guard gave us a quick look, then waved us through, and I drove us through the maze of buildings to her front door. Just in case she'd changed her mind.... \n\n\"Do you still want me to come in?\" I asked, praying the answer was 'yes'. \n\n\"Of course,\" she smiled, kissing me softly. \n\nI let her out, then found a parking spot nearby. When I returned, she was standing in the open doorway, looking exceptionally delicious. \n\n\"Inside, please,\" she directed, and closed the door behind us. She pressed me back against the wall, and kissed me again. My arms came around her for the first time, and I felt her taut, firm body. \n\n'The camera adds ten pounds', or so we're told, so she was taking that into account. I'd done a little Internet research on Ms. Rachel Nichols, and if the information was correct, she was 5 foot 10, pretty tall for a woman, and about 130 pounds, which was quite light for someone her height. She was lean, and lithe, and gorgeous.... and mine, for the moment. \n\nThe embrace continued, with our tongues busily tasting each other. My hands roamed her back, and I cautiously moved further south, feeling the terrain rise under my fingers as I reached her rear end. \n\n\"Mmmmm,\" Rachel moaned, continuing to suck on my tongue. I wasn't sure if that was a 'yes' mmmm, or a 'no' mmmm, so I moved my hand back up. \n\nShe grabbed my wrist, and pushed my hand back down, to cup her ass fully, then did the same to the other hand. I'm grabbing Rachel Nichols' ass! \n\n\"Mmmmm hmmm,\" she clarified, without missing a delicious second of our passionate bout of tonsil inspection. \n\nWe remained in place, feasting on each other, for a few more minutes, before Rachel pulled away. \n\n\"I need to put my foot up,\" she smiled, \"and I'm sure we can find a more comfortable and inviting place to continue. Come on in, and make yourself at home, while I, um, slip into something, more, um.... well, you know the rest. I'll only be a few minutes.\"\n\nI watched her hobble off, around the corner, and down the short hall, presumably to her bedroom. For the first time, I looked around her 'home'. She told me that the studio had bought out these condos when it expanded years ago. Some had been bulldozed to make room for a new soundstage, but these had been kept to provide accommodation for actors, directors and the like. Safe, secure and very convenient, they were also quite nicely appointed, well decorated, and comfortable. Far nicer than a mere hotel room, and more relaxing, I could understand why she was happy to stay here. \n\nI took a seat in a nice, deep, soft chair, to await her return. I realized that all the tongue action had made me a little thirsty, so I made my way into the small kitchen, and opened the fridge. \n\nThe studio took good care of its guests. Bottles of water, various soft drinks, juices, snacks.... all sorts of goodies were available. I plucked up a can of soda, and cracked it open. \n\nI heard a scuff, and a throaty giggle from the hallway. \n\n\"This would be much easier with two feet,\" she smiled, coming into view, \"and at my home, I have a better selection of lingerie. I hope a silky robe, nice bra, and tiny panties will do the job.\"\n\nShe stepped closer, adjusting the sash of her blue satin robe as she did. The robe covered her almost to the floor, but she struck a pose, and her long, sexy leg parted the curtain of shiny blue fabric, showing me a lot of toned thigh and calf muscle. It was her left leg, and ended in the grey plastic of her walking boot. She saw my eyes follow her leg downward, and laughed. \n\n\"Actually, my ankle almost matches the robe. It's a nasty blue bruise colour.\"\n\n\"No, no.... It's better with the boot,\" I smiled. \"It looks sexy, and I'm pretty sure I can catch you.\" \n\n\"So who says I'm running?\" she smiled. Three hobbling steps brought her right in front of me, and she gave me a look with those blue eyes that made me nearly melt. \"I really should get off my foot, though. Would you join me in the bedroom?\" \n\nI answered by handing her my can of drink, and scooping her up. \n\n\"This way?\" I asked, heading the way she came from. \n\n\"First on the left,\" she sighed, resting her head against me. \n\nI eased us through the appropriate door, into the bedroom, which was nicely decorated as well. A big, soft, king sized bed dominated the room, and I laid her gently on it, carefully arranging her injured foot out of the way. I sat on the edge of the bed, and looked down at her. \n\n\"I have to ask this, just one last time ; you're sure this is what you want to do?\" I asked. \n\nNo, I'm not an idiot, and I don't need things repeated a thousand times before I get it. It's just that.... well.... I didn't want what we were about to do to be a prize, for not running her over. Under different circumstances, I would never even ask the question, but I didn't want her to think she owed me anything, just for being conscientious. That debt had been paid by the pizza. If we were moving into new territory, I wanted it to be for the right reasons. \n\nI'm not talking about love, necessarily. Mutual lust would work just fine. \n\nRachel looked up at me, and smiled. Somehow, she knew what I was worried about. Her hand touched my cheek softly. \n\n\"Mike.... I think it's very sweet of you to keep giving me a chance to change my mind. I know you're not saying you don't want to be with me,\" she said quietly. \"I'm not doing this out of any implied obligation.... I'm doing this because I like you. So, if that puts your mind at ease, then lay down and let's enjoy each other.\" \n\nThat about does it. I took a place next to her, and we embraced again, with my hand resting on her hip. I could feel the single strip of fabric underneath, when it rose over her hip from front to back, and rubbed my fingers along the line it drew. The satin felt wonderful, and when I palmed the curve of her rump again, I felt no other interference. Ah.... a thong. \n\nMy hand slid up, dipping down as it approached her waist, and I hooked a finger under the sash that held the robe closed. Rachel moaned into my lips, and rolled back, letting me see what I was about to unwrap. The sash yielded easily, and I let one side of the silky fabric slip away, giving me my first look at the body I had seen so many times on the big screen. Never like this, though. \n\nSeveral fantasies had already been checked off. Meeting Rachel.... Kissing Rachel.... Feeling her body in my arms.... among others that I didn't realize I'd been harbouring. This one, and the one that would logically follow, were the biggest, and my heart was pounding as the shiny blue robe slithered off her left side, letting my eyes feast on her from top to bottom. \n\nWow! was my first thought. Since she was so tall, her torso was very long, and as I touched her reverently, I discovered how firm she was. Fit and muscular, with just enough feminine softness to smooth out the palette, giving her very sexy lines. Her bra and panties were a matching set of lacey white garments, brief enough that they hid little from my gaze. \n\nMy hand slid upwards, stopping just below her breast, as I took in the view again. \n\n\"Oh, please don't stop, Mike,\" she whispered. \"Your hands feel so good on me, and I've been horny since dinner. Touch my breasts, please? It opens in the front, if you're wondering.\" \n\nTo be honest, I hadn't made it that far yet. I was still giddy that I was about to touch her beautiful tits, at last. I palmed her left globe softly, eliciting a moan from her. It was so soft, and perfect. A gentle fondle led to another moan, and I reached for the front clasp, now eager to see what was filling my hand so nicely. \n\nHer bra sprung open at my touch, revealing those breasts for my viewing pleasure. They were everything I imagined they would be, and more, but that would apply equally to all aspects of her. According to the Internet, they were C-cups, but I thought they looked bigger, not that it mattered. Right now, they were mine to play with, and she sighed as I touched the bare skin of her breasts for the first time. Her nipples puckered into tight, coral pink cones, standing up, and looking delicious. \n\nThey did taste as good as they looked, and Rachel held my head as I sucked first one, then the other. \n\n\"Mmmmm, yes, I do like having my nipples sucked,\" she moaned. \"It makes me feel very feminine, and it also gets me very wet.\" \n\nI carefully arranged my body on top of hers. I know, it's her ankle that's hurt, but I still wanted to be gentle. Now I could comfortably reach and suckle both breasts, and since I enjoyed doing it as much as she liked having it done, I settled in for some fun. \n\nI tugged each nipple with my lips, making it stand even more prominently, looking even more delicious, and encouraging further attention. As I kept going from one breast to the other, Rachel kept moaning, and sighing her wishes that I continue. Her body began to quiver with excitement, and her right leg wrapped around my hip, letting her foot express other needs that were surfacing. \n\n\"Oh god, it's like my tits are wired directly to my clit,\" she groaned. \"I've never had anyone make me feel quite like this.\" \n\nAnd I've never had a woman.... any woman, let alone a movie star.... say anything like that to me during the act. Damn! More things that no one will believe!\n\nI decided to investigate a little further down, and left a trail of reverent kisses during my journey across her flat, smooth belly. I tongued her navel, causing a ticklish giggle, then continued, until I reached the silky white barrier of her panties. \n\nNow between her lean thighs, I nuzzled against the smooth satin of her thong. I could smell her womanly scent, a strong, musky aroma that made my mouth water. A small patch of wetness was centred over her vagina, marking her aroused sex. I pulled the tiny curtain aside, and gasped at the sight within. ",
        "I personally find every woman's pussy quite pretty. Some are thin, tight, almost delicate, the type referred to as an 'innie'. Others pout wide open, with thick labia that frame a deep opening ; an 'outie'. Rachel's pussy was neat, and narrow, but her inner lips laid open like a butterfly had landed on her perfect vestibule. It was the kind of pussy that just begged to be licked, tasted and probed. \n\n\"My god, Rachel....it's beautiful!\" I gasped, yet again. \n\n\"Thank you,\" she giggled. She lifted her legs high, and dispatched the thong from her hips, sliding it up her legs, and flicking it across the room with her right foot. When she put her legs back down, she spread wider, and I watched as her slippery lips pulled apart, with little strings of her lubricant stretching from one side to the other. \n\nI inhaled her delicious scent again, and leaned closer, coming within licking range. I felt her body tense, as she held her breath in anticipation of my tongue making contact. Suspense is a vital part of entertainment, and I prolonged the wait, inspecting her photogenic pussy at close range, letting the perfume of her arousal waft over me, until my appetite could no longer be ignored. \n\nI tasted her deliciousness, sliding my tongue upward from her perineum to her clit. I'm sorry.... I just don't know how to describe the most wonderful flavour I've ever tasted. Words seem inadequate. I will say this.... I loved her creamy, tasty texture, and couldn't get enough, burrowing my tongue deep into her juicy opening. Her labia swelled and pouted open wider, dangling as I flicked them, then sucked them into my mouth. \n\n\"My god!\" she gasped, undulating her hips, and smearing her drenched gash across my face. \"Please! Don't stop!\" \n\nWell, she's a lot like that old ad about potato chips.... So good, bet you can't eat her just once! \n\nI pushed my tongue as deep inside her vagina as I could reach, swirling it around to collect more of her ambrosia. I was being completely selfish at this point ; she was so delicious, I wanted more, and if she happened to enjoy it as well, that was a bonus. Adding a finger that could reach further brought more juicy goodness out for my consumption. \n\nRachel was grunting and moaning loudly, with one hand tangled in my hair to keep my mouth in place, pleasuring her cunt. I couldn't see the other hand, of course, as my whole world was her pussy right now, but my guess would be that it was busy pulling on her nipples. \n\nAs my tongue trailed up, twirling her sensitive clit out of its hood, her moans grew in intensity and pitch. A few words crept in, directing my attack. \n\n\"Mna'ahnn.... Yessss.... Gnahhhhn.... Ahhhh.... Fuuuuuuuck yessss.... Right there.... Oh god, right there.... Yes!\"\n\nThe other hand was on my head now, and I concentrated my actions 'right there', otherwise known as her clitoris. A second finger joined the first, probing her pussy, while my tongue went into overdrive at the upper juncture of her floppy lips, torturing her love button. I felt her whole body tense up. Her thighs began to shake, and it began. \n\n\"Oh myyyyfuuuuuuuckinnnnnggodddddddd!\" she shrieked, as she bucked and twisted through the waves of pleasure that hit her. Her hands held my head in place, helping me keep my lips attached, slurping at the gushing sweetness that flowed freely from her snatch. Several seconds of bliss followed, with her screaming unintelligibly. Finally, her body relaxed, melting into the mattress. I gave her a few parting licks, and rested my chin in her pubic bone, catching my breath while watching her desperately do the same. \n\n\"Thank you.... thank you, thank you, thank....you,\" she whispered, as her breathing eased slowly. \"Wow!\" I crawled up to lay beside her. \n\n\"You're very welcome,\" I whispered back. She rolled to face me, and kissed me hard, plunging her tongue into my mouth fervently. \n\nSpeaking of hard.... I was, and she quickly found the bulge during her feverish exploration of my body. She unbuttoned and unfastened everything she came to, baring my skin to match hers. We both peeled away the layers eagerly, and as I wriggled out of my pants, she discarded her bra and robe, which had been open, but still in place. I hooked a thumb into my underwear, the last remaining piece of clothing, but she stopped me. \n\n\"Let me, please,\" she smiled, pushing me flat on my back. Her hands caressed the bloated tent of fabric. \"Nice. So hard, and hot. I think we're going to have fun together.\"\n\nShe dragged the waistband down.... further.... further.... until my erection pushed free, springing straight out at her. \n\n\"Oh my!\" she gasped, wrapping her hand around my thick stiffness. \"I stand corrected ; I KNOW we're going to have fun together. That's a very nice cock!\"\n\nNow that the unveiling was over, I took over, kicking my underwear off, while she took a comfortable place between my legs, stroking my shaft gently. She rubbed her cheek against the head, and purred softly. \n\nI watched as the lips that I fantasized about, through every movie or TV show I'd seen her in, opened slowly, and lowered themselves over the head of my dick. It was my turn to moan in ecstasy. \n\n\"Oh, Rachel,\" I sighed, \"that feels soooooooo goooooood....\" \n\nYes.... It was a huge understatement, but she was sucking the words right out of my brain. Her succulent lips had formed a seal around the shaft, and she was smoothly bobbing her head, while sucking gently. It was an incredible feeling, but truthfully, nearly any pair of lips would feel the same. What made this blowjob so much more than any before, was simple ; this time, Rachel Nichols was sucking my cock! It was her deep, beautiful blue eyes that were looking into mine, and her smooth cheeks that were hollowing with the suction, and her wet tongue that was slithering along the underside of the shaft. As much as anything, the knowledge of who was blowing me, and the sight of her doing it, was driving me crazy. \n\nShe pulled back, and stroked my spit soaked shaft with one hand, slapping the head on her extended tongue a few times. A lascivious grin broke out on her face. \n\n\"I'd love to just suck this beautiful piece of meat until it explodes, but my pussy I feeling very lonely right now,\" she giggled. \"You don't mind it I sit on it, do you?\" \n\n\"Not at all,\" I laughed. \"I'm at your disposal.\"\n\nShe smiled, and struggled to her knees, fighting the boot all the way, then straddled me. Her hand guided my dick into her vestibule, as she perched on her left knee and right foot. With the head safely nestled between her lips, she settled down. The look on her face showed the pleasure she was feeling. \n\n\"Mmmmm, yes....\" she sighed, \".... As I said.... lots of fun, together.\" \n\nYes.... Fun. That's what I was having as well, as the delicious sensation of her warm, wet pussy engulfed my cock. I groaned, and she sang harmony, when we were fully connected. \n\nRachel braced her hands on my chest and began a rhythm of slow, deep strokes, rising and falling sensuously while she looked into my eyes. It was very gentle, and loving, especially for a first time together, without the usual frenzied need. I suppose the boot may have had something to do with it, because the need was still there ; only the desperation was missing. \n\nI was content to lay back, and watch her ride me so nicely. It was an incredibly hot sight, and her eyes told the tale of what she was feeling, expressing her emotions so easily. If this whole 'mainstream movie actress' thing fell through, I'm sure she could have a great future fucking on camera, and I would happily be a fan. Better yet, I'd happily be her stunt cock. She felt wonderful sliding up and down my dick. \n\nI was guiding her through her motions, with a hand on each of her fabulously firm ass cheeks. She would occasionally pause at the top, faking her downward move, playfully teasing me. I began to take advantage of these brief slowdowns, thrusting upward. My hips arched off the bed, slamming my cock up her pussy eagerly. Soon she was pausing on purpose, anticipating my response, which I withheld, returning the tease. \n\nRachel leaned down, resting her breasts on my chest, and kissing me again. We both moaned our happiness, and I mentally calculated which way to roll us over. Let's see.... avoid left ankle, which is beside my right leg, so go this way.... \n\nShe giggled as I reversed our position neatly, without having to withdraw my erection from its warm residence. Her arms wrapped gently around my neck, holding my lips in contact with hers. I began to stroke into her. \n\nIt didn't take long for her to begin sighing in time with my thrusts, and soon after, she pulled her lips away from mine. \n\n\"Mna'ahhhn, yes, baby,\" she growled, tilting her head down, and peering at me from under her furrowed brow. \"Gimme that cock! Fuck my pussy and make me cum again!\"\n\nWith her damaged ankle safely clear, and her right leg wrapped tight around my hip, she spurred me with her right heel, urging me to give it to her with gusto. As I said before, obviously the need was there, so I took it upon myself to supply the desperation, and kicked it up a gear. \n\nI gave it to her as requested, fucking her with long, deep strokes that ended with a loud slap of flesh meeting flesh. I was grunting, and Rachel was moaning.... singing a capella to the percussion of our bodies, until she started to break into a solo aria. Like a good drummer, I let her take the lead, while I kept the rhythm going. \n\n\"Oh, yeah, honey.... That's it baby.... Ooooo, fuck me.... Yeah.... Fuck me good.... Ooooo baby, oh baby.... Ooooo.... Oh.... Ahhhh.... Yes! Gonna cum! Gonna cummm! Gonnnnnna cummmmmmmm!\" she screamed, arching her back. I raised up on my arms to give her space, and to watch the show, as her body shook wildly. The waves passed, and she wilted, her body completely relaxed. \n\nI was not relaxed. I was on the edge of a colossal orgasm of my own, and pounded her furiously. \n\n\"Where would you like it?\" I asked, pistoning into her steadily. \n\n\"Inside me, please,\" she smiled sweetly, the afterglow of her orgasm still obvious in her unfocused eyes. \n\nI had been holding back, but now cut loose with a last few frenzied strokes, and exploded inside her. Surge after ecstatic surge, I spilled the contents of my balls into her warm depths, while she cooed contentedly and stroked my hair. \n\nI rested atop her for a few minutes, catching my breath, before finally rolling off her, and snuggling next to her body. \n\n\"My ankle actually doesn't hurt right now,\" she breathed. \"Gotta love those endorphines. Thank you.\" \n\n\"Mmmmm, no, it's me who should be thanking you,\" I mumbled. \"This beats an autograph any day!\" \n\nRachel giggled, then completely lost it, laughing loudly. She rolled on her side, and looked at me softly. \n\n\"Yeah, I suppose it does, but you can't show it to anyone else!\" \n\n***\n\nI was laying back, with my arms folded behind my head, while Rachel laid on her side next to me. She had the sheet wrapped around her body the way it always is in the love scenes on TV, and in the movies. I suppose old habits die hard. It made me wonder how much of what we just did was real, and how much was for effect. \n\nShe hadn't given me a reason to doubt her veracity, but she was an actress, accustomed to playing a role, and portraying emotions that weren't really there. I was probably being overly cynical to protect myself, as everything, if taken at face value, was going far too well. I couldn't be that lucky. \n\nRachel was twirling her long brown hair around her finger, looking at the locks quizzically. She giggled. \n\nI think I'm actually a blonde,\" she smiled, \"or at least, I used to be. I've changed my colour so often, I can't remember.\"\n\nI lifted the sheet as far as I could, and peeked down her body. It was for effect. I didn't need to take another look, as her incredible pussy was indelibly etched in my memory. An outie, with very sexy, pouting lips.... and not a hair in sight. \n\n\"No corroborating evidence down there. The carpet is missing. You've even been green!\" I laughed. \n\n\"Well, that was green skin,\" she corrected, \"with red hair. I felt like Christmas! The red hair is fun, though. I think it's my favourite.\"\n\nShe traced her hand over my chest softly, with a playful grin on her face. \n\n\"Mike, do you have plans for tomorrow night?\" she asked. \n\nWell, I wasn't even planning on leaving tonight, so I'd have to say no. \n\n\"None whatsoever,\" I replied. \"More pizza?\" \n\n\"No, nothing quite that much fun, I'm afraid. Do you have a tux?\" she giggled. \n\n\"A tuxedo? No, just a nice suit. Why?\" I asked. \n\n\"I'm expected at an art gallery thing downtown. It's black tie only,\" she explained. \"If you want to come, I'd love to have you as my guest, but we'll have to set you up with a nice tux. Will you be my arm holder?\" \n\nAh.... That's what I was expecting tonight. The crowds of onlookers, cameras, and that sort of thing. I knew it was going to happen sometime. I just got the order wrong. \n\n\"Sure, I'll be your formal crutch,\" I laughed. \n\n\"Great!\" she smiled, and picked up her phone. She began to type a message. \"I'll get you something to wear. The studio is already doing a dress for me, so it won't be a problem.\" A few final clicks, and she sent the text. \"Cynthia is my friend in wardrobe. She'll take care of it.\" \n\nCynthia was prompt, too, responding almost immediately. Rachel read the reply. \n\n\"She needs to know your sizes. Height, weight, waist, shoe size. Just to be sure she's got what we need.\" \n\n\"Okay.... 6'4\", 210, 36 inch waist, and size 13 feet,\" I listed, as she transcribed the data into her phone. She sent it. Moments later, Cynthia replied again. \n\nRachel started to laugh, then really lost it. Whatever Cynthia said, it was pretty funny. Rachel turned the screen toward me. \n\nOoooo! Big feet! You know what that means! I read. No problem. Have him come with you tomorrow at 4, and we'll fit him up. \n\n\"Tomorrow at 4. Got it,\" I smiled. \n\n\"So,\" she grinned, putting her phone away. \"What do we do until then?\" she asked, arching her eyebrows suggestively. \"Any ideas?\" \n\n\"What's the script say?\" I asked, smiling back. \n\n\"No script, honey,\" she breathed, moving closer. \"Sometimes, the best scenes are improvised.\" Her lips touched mine, and I pulled her over atop me, enjoying the soft, smoothness of her skin under my hands, as they roamed her body freely. \n\nMore items on the list of things my friends would never believe. \n\n***\n\nSaturday morning, I felt movement beside me in bed. It took a few seconds to remember that this wasn't my bed, and who was moving next to me. \n\n\"Morning, baby,\" she breathed, throwing her arm across my chest. \"I have to go soon. They need me on set.\"\n\n\"I thought the doctor benched you?\" I asked. \n\n\"He benched my ankle, but they still need my face,\" she giggled. \"Actually, they just need to shoot some of the closeups, and non-active stuff. Just minimizing the effect of the injury, until I can do the rest.\"\n\n\"Okay. So, do I need to leave, or can I hang out here for the day?\" I questioned. \"We need to be with your friend Cynthia at 4, right?\" \n\n\"That's right. I don't think I'll be too long, so it would be great if you were still here when I get back. We could have sex again, before we go,\" she smiled, \"if you want to?\" \n\n\"Sounds like a plan,\" I laughed. \"I have my guest pass, so I can wander around a bit without getting arrested, and there's lots to eat here. Cynthia is providing the clothes for tonight, so I really have no reason to leave.\" \n\n\"Awesome! I look forward to seeing you right here, later on. I have one favour to ask right now, though,\" she said softly. I nodded. \"I'll need your help in the shower.\" She saw me smile, and clarified. \"Not that kind of help! I don't have time for that kind of help today, although it sounds like fun. I just need you to help keep me from slipping. I don't feel safe balanced on one foot on the wet tile.\"\n\n\"That I can do,\" I nodded, rolling out of bed and taking her hand to help her to her feet. With her arm around my shoulders, and mine around her deliciously naked waist, we scuttled slowly into the bathroom. Rachel took her seat on the toidy, while I started the shower. When she was ready, I guided her under the warm spray. \n\n\"Mmmmm, that's so nice,\" she sighed, ducking her head into the stream. She braced her hands on the wall, stabilizing her balance. \n\nI grabbed the soap, and began to lather up her back. She moaned, and leaned back against me, letting my soapy hands wander over every inch of her body. I washed her legs, her ass, her back, her front.... especially her front.... her arms, and her front again. My dick was stiffening rapidly, from touching her body. \n\n\"I get the feeling you like my breasts,\" she smiled, pulling me in for a kiss. Her slippery boobs squashed between us, a favourite sensation of mine, as was the softness of her lips. \n\nI rinsed her off, then began my career as a nude hairdresser, pouring some of her shampoo in my hands and lathering her hair. Her eyes fluttered closed, and she moaned softly. \n\n\"Oh, I could get used to this,\" she breathed. \"You're going to get a huge reward for taking such good care of me.\"\n\nI liked the sound of that. After I rinsed her long tresses, she grinned at me, and eased down onto her knees. Her eyes locked on mine as she gripped my hard cock.\n\n\"I thought we didn't have time for this,\" I reminded her. Not that I wanted her to stop. \n\n\"Hmmm, yes, I said that didn't I?\" she giggled, stroking my shaft firmly. \"Well, there's always room for jello,\" she smiled, \"or time for a blowjob!\" \n\nShe pushed me back against the wall of the shower stall, and opened her mouth, swallowing half my cock on the first gobble. Within half a dozen strokes, her lips were nearly touching my pubes, and I was moaning loudly at the incredible feeling of her mouth milking my dick. \n\nI watched her from above. Her eyes, lashes speckled with water droplets, looking up into mine. Her cheeks hollowing with each bobbing stroke of her head, as she sucked hard on my erection. The sight, combined with the sensation of her lips and tongue, had my balls churning within minutes. \n\n\"Rachel, honey.... You're going to make me cum,\" I groaned, just in case she wasn't interested in swallowing my load. \n\n\"Mmmmm hmmm,\" she nodded, and sped up her strokes. \"Mmmmm hmmm!\" \n\nWell, alright then, I thought. Her eagerness to have me spurt down her throat brought that inevitably closer to happening. When her hand cupped my balls, it was the final straw. \n\nI came hard, basting her tonsils with multiple shots of jizz, while she gulped and stroked me through my climax. My legs began to quiver, and I slid slowly down the wet tile wall, dragging my spent noodle out of her gripping mouth. I landed with a splash, gasping in the aftermath for air. She laughed. \n\n\"Oops!\" she smiled. \"I sometimes don't know my own strength.\"\n\nThe water rained down on us for a minute, until I had recovered enough to speak. \n\n\"Thank you,\" I mumbled. \"I'm just gonna sit here a while. You go ahead.\" \n\nRachel stood carefully, and gave herself a final rinse before turning off the water, and stepping out. She wrapped herself in a towel, and hobbled out to get dressed. \n\nI managed to stand and dry myself. She was dressed, and putting the boot back on her damaged ankle, when I stumbled back into the bedroom, and flopped on the bed. \n\n\"Thanks again,\" I sighed. \n\n\"Mmmmm, you're welcome, and delicious,\" she smiled, pecking me on the cheek. \"See you later lover. Get your rest.\" \n\nMy eyes closed, and I fell asleep quickly. \n\n***\n\nI was standing in the wardrobe department, looking over at Rachel who was having her hair and makeup done. This was new for me, and more than a little uncomfortable. ",
        "Well, I just wasn't accustomed to being nearly naked in front of.... and under the direct attention of.... so many strange women. Cynthia and three of her assistants were dressing me. Literally. Currently, I was down to my underwear and socks again, but everyone was milling about with various articles of what would soon be my clothing for the evening. \n\nAs if by magic, a shirt eased over my shoulders. Hands.... Too many for just one person.... reached around and fastened the crisp white garment in place. Moments later, the trousers of the tuxedo arrived in a similar fashion. It was as though an octopus was fitting me, and hands were everywhere. They weren't shy about where they touched, either, and even zipped my fly. \n\nA pair of shoes you could see your face in appeared, and my feet were shod without any real effort on my part. The cummerbund was snapped in place, and the folds were perfected. At last, the jacket was slipped over my shoulders, and the classic bow tie was snugged around my neck. \n\n\"Ooooo! Very 007!\" Cynthia laughed, stepping back to admire her work. \n\n\"Don't sell him short, honey,\" Rachel smiled. \"More like 009! You were right about the big feet!\" She winked at me in the mirror, and both Cynthia and the hairdresser burst out laughing. \n\n\"Okay! Enough said!\" Cynthia giggled, and mopped her brow comically. \n\nRachel rose from her chair, and the swarm of wardrobe bees swept her off behind a screen to apply her dress. She gave me a naughty smile as she tossed her robe away from behind cover. \n\n\"No peeking. It's a surprise!\" she giggled, and gestured for me to turn around. I did as asked, happy to play along. I really didn't need to wait long, as I soon heard her from behind me. \"Okay, I'm ready.\" I turned. \n\nOkay, so I see one immediate problem.... There's no way I'm going to be able to keep my hands off her in public all night! \n\nHer dress was just stunning. Black from the waist down, it gradually became a deep blue as it hugged her upper body like a glove. Insets of lace curved up and across her cleavage, giving just a peek of the crease between her breasts. The neckline was a scooped halter, and there was nothing obscuring her back at all. Separate sleeves, similarly coloured and topped with lace, added elegance to the sexy factor. My mouth must have been hanging open. \n\n\"I guess I don't have to ask what you think of it,\" she smiled. \n\n\"Um, no,\" I choked, \"you don't. It's beautiful, Rachel.... You're beautiful.\" \n\nI was ready to go, and Rachel was looking.... oh, just so fucking good.... so the only thing left to do was get in the limo, and go to the event. \n\nYes, I said limo. \n\nInitially, had assumed that I was driving us to the soir\u00e9e. It wasn't until a few hours before that I learned otherwise. I suppose the limo was more fitting, given the formal theme of the evening, and I would happily take the seat next to Rachel for the trip. \n\nOnce we were comfortably seated, I took her hand. She turned to face me. \n\n\"In the interest of preserving all of Carol's hard work,\" she smiled, gesturing to her makeup, \"I think we should keep the kissing to a minimum.\" She gave me a careful peck on the lips, as a down payment. \"At least on the way there. Coming home, I'm all yours, and I do mean 'all'.\" \n\n***\n\nHonestly, I don't really recall that much of the evening at the Gallery. Rachel was on my right arm, which gave extra support for her left ankle. Several people noticed her fashionable footwear.... one stiletto, one plastic boot, with a shim taped to the bottom to equalize the heel difference.... and she gave them a more interesting tale of her injury to take with them. \n\nWell, that's her job, isn't it? Entertainment. So, a colourful tale of a stunt gone bad makes for better conversation than one of clumsiness and chivalry. I didn't mind losing my billing. My job tonight was to keep her upright, and let her shine, something she did with ease. \n\nPart of the reason for my fuzzy memory might have been the champagne, which was flowing freely. I probably had far too many, but I wasn't really involved in most of the conversations, beyond the occasional introduction, so I had a free hand whenever a tray of flutes went past. Rachel had a few, too, and her consumption went up as the evening went on. \n\n\"My foot is killing me,\" she whispered, as we walked slowly through the crowd. \"Champagne is only so effective as a pain killer.\" She leaned closer, and cupped her hand to my ear. \"The good news is that it makes me horny. I think I'll tell the driver to take the scenic route home.\" \n\n\"Just say when,\" I smiled. \n\n\"Pretty soon. I can hold out for a little while longer,\" she nodded, as another guest approached. She extended her hand, and went into starlet mode. \"Hello! So nice to see you.....\" \n\n***\n\nOur driver held the door open for us to take our seats in the limo. As I was on her left arm, I got in first, supporting her as she paused at the door. I saw her whisper in the driver's ear, then she eased in beside me with a smile. She angled her hips slightly, and leaned back against my chest, extending her leg to rest it on the opposite seat. \n\n\"Oh, I am soooooo glad that's over with,\" she groaned. \"My ankle is worn out. Fortunately...,\" she smiled, \".... I don't plan on spending any more time on my feet tonight. My knees? Probably. My back? Certainly. But not my feet.\"\n\nShe turned her head, and found my lips with hers. After a short kiss, she whispered a secret to me. \n\n\"Remember, I said I was yours on the way home. I told the driver to take the long way back to the studio. Also, I'm not wearing any underwear, so feel free to feel me.\" \n\nI smiled, and wrapped my arms around her, cupping her breasts softly. I already knew there was no bra in the way, as her back was quite bare, but I didn't know about the lower half until she told me. I fondled her gently, caressing the firm fullness of her tits, while she sighed at my touch. She turned again to kiss me, then crawled over my lap. She straddled me, and undid the catch behind her neck, letting the gown drape loosely around her waist, and giving my lips access to her stiff nipples. \n\nWhile I gnawed gently on her pink buds, she reached behind her to grab my burgeoning bulge. Her hand caressed the cramped crotch of my pants, and deftly unzipped the fly. Her touch was gentle, as she freed my stiffness from the confines of my underwear. She rearranged herself slightly, and I felt the warm wetness of her vagina on the head of my cock. \n\n\"Oooooooooo, I've been thinking about doing this all night,\" she moaned, settling lower, and engulfing my shaft in her tight tunnel. \"You're a very effective painkiller. Quite addictive, but not in a bad way.\"\n\nThe motion of the car trundling steadily along made her pussy slide slightly up and down on my cock, even without her consciously moving. When she did start to hump on my dick, I had to release her nipples, and settle for kissing her luscious lips. We moaned into each other's mouths, enjoying the naughtiness of having sex within feet of passersby. If only they knew. \n\nAt least one person did know, and I briefly wondered how often our driver had chauffeured the Fuckmobile around town. Probably quite often, as I'm sure it wasn't a fantasy held solely by me. \n\nRight now, however, it was all mine, and I wasn't just fulfilling it with some prom date or suddenly horny dinner companion ; the vagina currently embracing my shaft within its muscular sheath belonged to a woman I had lusted after on movie and TV screens for years. Yes, we had already done it more than a few times since last night's premiere performance, but this somehow felt different. Not loving.... It was far too early for love. This was just mutual heat. Totally unabashed sexual need, that was demanding to be satisfied, regardless of where we were, or who might hear. \n\nI grabbed her ass with both hands, and speared my hips upward, driving my cock into her cunt feverishly. Rachel broke the kiss, and tilted her head back. \n\n\"Uhhhn! Uhnn! Fuck! Yes, fuck me, baby!\" she snarled, tipping her head forward to glare at me with fire in her cool blue eyes. \"Come on! Fuck my pussy hard!\" \n\nHer arms stretched wide, able to just reach the assist handles on the roof inside each door. She hung on tight, while I drilled her hard from below, making her boobs bounce and quiver in an interesting manner. \n\n\"Yeah, that's it!.... Fuck me, fuck me, fuck me!\" she gasped \"Take me, Mike!\" \n\nI guess champagne really does make her horny, I thought. Horny, and quick to please.... or maybe it was the situation that had her on the verge of cumming already. Could it be that she, like myself, was checking the 'have sex in a limo' box on her fantasy list right now? \n\nI gave another few furious strokes up into her pussy, enough to push her over the edge, and watched as she tried unsuccessfully to suppress a scream of orgasmic joy. Her knuckles turned white as she gripped the handles tighter, and a pink flush bloomed on her chest and neck. Her face twisted into a snarl of pleasure, then she exhaled slowly, and hung from her fingertips. One hand lost purchase, and she slipped, but I caught her. \n\n\"There you go, saving me again,\" she panted. \"A girl could get used to that, you know? You may spoil me for life.\" Her arms wrapped around my neck, and we kissed again, tangling tongues playfully. \n\nSpoil her for life? I rather liked the sound of that. As for myself, I was feeling pretty spoiled, too. Her pussy still had a firm grip on my cock, and was milking me as she flexed her feminine muscle. I moved both hands to her ass again, and scooted forward onto my knees on the limo floor. Her right leg wrapped instinctively around my hip, until I laid her back on one of the longer side couches. Before I released her, I unzipped the lower back of her dress. \n\nWhile I knelt and tried to remove my jacket, Rachel shimmied the dress down over her hips, carefully laying it on the opposite couch. Then she turned her attention to me, and the clothing pile grew rapidly. Her hands caressed my skin gently as she removed my shirt, pants and all the accoutrements of the tux, leaving me to discard my underwear and socks. \n\n\"Never been naked in a limo before,\" I laughed, my erection still glistening with her juices as it bobbed before me. \n\n\"Here,\" she giggled, re-attaching the bow tie around my neck on its little strap, \"now you're not naked. Feel better?\" \n\nI smiled, and pushed her onto her back, dragging her closer to the edge of the couch. I rubbed the head of my cock between her lips, and pushed back inside her. \n\n\"NOW I feel better,\" I growled. \n\n\"Ooooo! Mmmmm.... me too!\" she hissed, as her hands came up to caress my face and neck. The look in her eyes told me what she wanted me to do. \n\nLong, deep strokes split her pussy open neatly, and her moist grip felt wonderful as I fucked her firmly. She no longer even tried to be quiet, moaning loudly, yelping when my thrusts were particularly effective, and screaming instructions when the urge for words arose. Unless the driver was wearing headphones.... a highly unlikely development.... he had to know exactly what was going on a few feet behind him, if her whispered direction to him wasn't obvious enough. \n\nI was pounding her furiously now, adding the slapping of our bodies to the various sounds of sex that filled the passenger cabin. It was raucous, sweaty, and thoroughly enjoyable, as I jabbed my stiff cock balls deep in her delightful cunt, while she screeched blissfully and clawed at my shoulders. \n\nRachel threw her head back, and gripped me tighter as she came again. I kept probing her juicy snatch, watching the pleasure wash over her, until she relaxed under me. Her voice was a raspy whisper when she spoke. \n\n\"Just one more, honey,\" she gasped. \"Please.... Just one more?\" \n\nI did a quick evaluation. I was definitely on approach for my own release, but I might be able to hold off long enough to give her the 'one more' she asked for. I gritted my teeth, and picked up the pace. \n\nHer pussy felt soooooooo goooooood.... I just wanted to fill her up with another load of my jizz, but she had asked nicely, so I was going to do my best to hold back the inevitable. I kept watching her for signs it was working, and fortunately, it was. \n\nA final, gurgling scream announced her orgasm. With my mission accomplished, I was free to cum myself, and pulled out of her pussy just as the first rope of juice raced up my shaft and exploded out, landing on her quivering breasts. Several more shots followed, of various strengths, decorating her torso with streaks and globs of sticky goo. \n\nI sat back, watching her chest heave as she caught her breath, while catching my own. Her head rolled in my direction, and she smiled brightly. \n\n\"Thank you,\" she whispered, and reached over her head. Her knuckles rapped on the privacy divider, which whirred as it lowered a few inches. \n\n\"Yes Ma'am?\" the driver's voice asked. \n\n\"You can take us home now,\" Rachel said, her voice still recovering it's authority. \"We're done. Thank you.\"\n\n\"Yes Ma'am, and you're welcome,\" he replied. The divider went back up smoothly. \n\nShe trailed her fingertips along her body, collecting my spunk, and licking them clean, before going back for more. \n\n\"Mmmmm, yummy,\" she giggled. \"Just like the champagne!\" \n\n***\n\nMonday morning, I walked into the building where I worked. I had spent the entire weekend with my new favourite actress, only leaving her early this morning to change into my work clothes. \n\nI'm sure I didn't look any different than usual, but I sure felt different. Satisfied. Satiated. Sore. Looking forward to Rachel's next call. \n\nA few people in the lobby looked at me, then whispered amongst themselves. Could they tell I'd been having great sex with a movie star all weekend? Was it written on my face? \n\nIt happened again in the elevator. I was beginning to feel a little uncomfortable. \n\nFinally, as I went through our reception area, another gaggle of whisperers broke up on my approach. One of my best friends, Freddie, was among them, and he smiled when I stopped to talk, slapping a copy of the morning paper into my chest. \n\nThere it was.... the reason for the whispers, and his smile. \n\nA picture.... taken Saturday night, at the Art Gallery. There had been photographers around, of course, but I was too enthralled by Rachel's grace, smile and beauty to even register the flash that captured us for posterity. \n\nThere I was, my arm and hand intertwined with that of the beautiful Rachel Nichols. I was looking dapper in my James Bond tuxedo, thanks to Cynthia in wardrobe. Rachel was looking.... well, I didn't need a picture to remind me of how she looked, that night and any other. I wasn't sure of how this whole thing would work out, but I would never forget her. \n\n\"This is how I find out?\" he grinned. \"My good friend goes out with a movie star.... a hot one.... and this is how I find out? What other secrets are you keeping from me?\" I just smiled. \"Okay buddy, I'm taking you to lunch today, and you're going to spill the whole story, right from the beginning.... and you're not going to leave anything out. I want details. Understand?\" \n\nI nodded, but there were some bits I would keep to myself, at least for now, until I knew if she and I had a future as 'we'. It may have been wishful thinking, but then again, stranger things had already happened this weekend, hadn't they? \n\nAnd besides.... I'm still not sure he'd believe it. \n\nI'm not sure I did, either. \n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nI do hope you enjoyed this story. I had fun with it, and I think it stands alone.... Unless you feel otherwise. Please let me know your thoughts, and cast your votes. \n\nI'll be working on several stories while I'm away on vacation, so I hope to have a few new postings quite soon. Thanks for your time. "
    ],
    "authorname": "ilikeithot6308",
    "tags": [
        "movie star",
        "brunette",
        "tall",
        "blue eyes"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/a-funny-thing-happened-2"
}