{
    "title": "Sodomy in Napa Valley Ch. 02",
    "pages": [
        "\"You don't have anything opening up...?\" I hear a woman ask hopelessly at Reception as I enter the main lodge for a quick breakfast. Our law firm has been hosting an all-company retreat at this luxury resort the past 3 days. The event culminated in dinner last night, and most people are leaving this morning. From the outset, I had planned to stay the weekend to enjoy the serene setting and am glad I did. I also don't love running into colleagues at the airport. My personal time is a scarce commodity, and I guard it jealously.\n\nAs I pass Reception, reflexively I check out the person at the desk and see that it's my co-worker Lizzie. Ah, the object of my current fixation. Our interactions at the office and on the retreat have been nothing but professional, yet somehow in the past few weeks she has wormed her way into my subconscious, and my very nasty fantasies, most of which end in me fucking her hard in her ass. Blame it on a hint of stocking top, a glimpse of a bra strap, a glint of body jewelry fleetingly espied after a meeting. Although she is much younger than me (maybe 32), Lizzie is pretty senior at the firm, so I doubt these moments of inattention and indiscretion were intentional. But the net effect is I find myself wondering if she might be as pervy as I am.\n\nTo boot, early yesterday morning I witnessed a woman getting herself off on her balcony with various sex toys. I could only see a part of her and had decided it wasn't Lizzie. In a way, I don't want it to be Lizzie because my head might explode. Then again, if it had been Lizzie... well, the possibilities are endless. Whoever it was, the woman brought herself off with the help of a large anal dildo... at 6:30 in the morning. Needless to say, I also got off spying on her.\n\nAt any rate, I do see that it's Lizzie at Reception, and whether I want to or not, as a managing partner of the firm, if one of my staff is having an issue, I am duty-bound to try to help.\n\n\"Lizzie? Good morning. I thought you were catching an early flight back to Chicago.\"\n\n\"Hi, Marc. Yes, I was. But right after I checked out, I get a text from the airline that my flight has been canceled! And Jonas here says there is no avail for tonight because there is a wedding party coming in today.\"\n\n\"Wow, sorry to hear. Can I help?\"\n\n\"Not unless you have a private jet!\" she jokes. \"But you know what, I will make it work. I still have my rental car so will drop it in San Fran, get a hotel there, make a day out of it. I love San Francisco.\" She smiles ruefully. \"The firm will reimburse for the extra night, right?\"\n\nI admire her pluck and reply, \"Of course, we will. I am sorry for the inconvenience, though. That's great you rigged a quick plan B, but no one likes last minute switch-ups.\" \n\n\"No, it's not ideal. But I'll make the best of it!\"\n\n\"Listen, I was just going to the main dining room for breakfast. Have you eaten? Even if you have, join me for coffee?\"\n\n\"That sounds great! As long as you don't mind that I'll be researching hotels at the table.\"\n\n\"Not at all. It's totally understandable. And again, sorry you're having to retool your weekend this way.\" I stay with her as she deposits her bag with the concierge before we make our way to the dining room. As she's giving her details to the concierge, I discreetly check her out. \n\nAs usual, Lizzie is very well put together, but her travel attire is definitely more relaxed than usual, even a bit bohemian. Usually her shoulder-length reddish brown hair is tied up or pinned up, but today she wears it loose. She has on a sleeveless wrap dress with a small print which helps camouflage how light the fabric is. My practiced eyes see she has a bra on, but the bra can't be substantial because I can see her perky nipples peeking through. Over the dress, she has on a fitted denim jacket, and on her pretty feet, she is wearing open-toe sandals with a high cork heel. Casually classy, and understatedly sexy.\n\nLizzie has a rather boyish figure with smallish breasts, which are the perfect counterpoint to her excellent legs, slim ankles, and very sexy feet. I've noticed her feet long ago, when it was warm out and most women were wearing open-toed shoes to the office. At the time, I didn't give it a second thought, but now I find myself stealing glances at them more often than I'd care to admit. Lizzie has impressively high arches and always impeccably pedicured toes with tantalizing toe cleavage. Today she sports a lighter color pedicure than her usually vampy red, and I am reminded that the woman I spied on the terrace yesterday also had a lighter shade nail varnish. It's exciting to think it might have been Lizzie, after all...\n\nHow I would love to suck on her long toes, lick the arches and her ankles, then work up her svelte calves and thighs, all the way to her cunt and ass... The woman on the balcony yesterday had a smooth pussy, except a small triangle of hair high on the pussy mound. I wonder if Lizzie is sporting something similar. Is there anything better than running your tongue over a slick pussy and ass hole, with your lover's pretty feet hooked behind your neck so you can fondle her toes as you're eating her out? Or slow-fucking her ass in missionary with her toes in your mouth? \n\n\"Marc? Ready?\" I snap out of my daydream, and we make our way to the breakfast room, with me willing my cock to stay down.\n\n+ + +\n\n[Christ, he's so fuckin' hot. All the hotter because he is oh so Mr Managing Partner proper. It was a bummer seeing that text from the airline that my flight got canceled, but when I heard Marc call out to me at Reception, his voice gave me butterflies in my stomach. He looks so sexy today in jeans and a heathered T-shirt - never seen him in weekend clothes before. I'm standing here having a calm banter with him, but I can feel my pussy stir and my nipples perking up. Thank God I have on this denim jacket as a topper over my light dress. \n\nI've been fantasizing about Marc during this whole retreat and have masturbated several times a day with all my toys, imagining how he might use my body for his pleasure. Last night's company finale dinner was especially tantalizing. He was dressed down in an open-collar shirt and after several days of great weather in Napa, he had gotten a bit of color to his naturally olive skin. I've calculated from his bio that he's about 49, very fit, and foxy as hell in that nerdy I-need-my-readers-to-see-the-menu kind of way. I have gotten myself off countless times with the girthiest toy I have, picturing him bending me over and fucking me slow and deep.\n\nIt was a leisurely multi-course dinner and, needless to say, every time I escaped to the ladies' room, I wanked off with the help of my pocket rocket. All through dinner, I kept envisioning him giving me anal missionary so I can watch his face as he stretches my tightest orifice. My fantasy often ended with him unpacking his load in my ass and then enjoying the sight of his cum dribbling out of my ass in a pretty little cream pie as I reach down to spread his semen all over my tight love box. Mmmmmm...]\n\n+ + +\n\nOne thing I've learned from our drive-by conversations when Lizzie's been at the office - she is based in Chicago and I in New York - is that we always have the best talks. We both do charity work and travel to remote places, and she is genuinely an interesting and delightful person, not to mention a consummate professional. And of course, she's extremely easy on the eyes, head to toes. The breakfast goes by quickly, almost too quickly, with her intermittently checking her phone in an effort to snag a reservation in the city. \n\nI sign for the check and ask, \"So, any luck?\"\n\nShe sighs, \"No. Plenty of avail tomorrow night, but nothing tonight. Not even AirBnB, unless I'm willing to stay by the airport in Burlingame. Not exactly my style, fancy girl that I am.\" She grins impishly.\n\n\"Something will turn up. It's early yet. You can also stay here and enjoy the facilities. For what we paid as a company to have the retreat here, they shouldn't begrudge granting you day use of the place.\" I pause then add, \"Another option is to go visit a vineyard. A buddy of mine is a co-owner of one up here, and I was going to drop by later. You are very welcome to join me.\"\n\n\"I may take you up on that. I need to stop searching for a place for a bit. It's kind of stressing me out.\"\n\n\"It's settled then. I was going to leave in about an hour since my buddy wouldn't be there yet. I need to catch up on emails in my suite. There's plenty of workspace if you have work to do as well, or I can meet you down here later.\" Hand to heart, I'm not putting the make on her. I would make the same offer to a male colleague waylaid by travel snafus. (Or would I?)\n\n\"If you're sure you don't mind, I'll come up. I can get ahead of some emails as well, and I wouldn't be able to focus down here with all the comings and goings.\"\n\n\"No problem at all.\" We leave the dining room together and head over to the complex where my suite is. As I walk up the walkway with Lizzie, I wonder if she is feeling at all tingly, as I am. I don't have designs on her, but not 2 hours ago, I had no inkling that I would be strolling back to my suite with the current object of my lust.\n\n+ + + \n\n\"Wow! And I thought my suite was nice. Is this the Presidential suite?!\" She joked, upon entering my place.\n\n\"The benefits of being a senior partner, I guess.\" I answer sheepishly. \"The view from the terrace is pretty nice.\"\n\n\"Oh, may I take a peek?\" We walk out together. \"You know, this was my view, too. This venue truly is beautiful.\" She closes her eyes and leans her head back a little bit. Gazing at her, I imagine her to have exactly this posture and expression if she were having her nipples licked, or her pussy. With the gentle breeze, the front of her dress is snug against her perky tits and her pelvis, faintly outlining the Y where her legs and her pussy meet. My cock perks up, and I am thankful to be wearing well-fitting briefs today. Mmmmmm, I would love to kneel down, lift the hem of her skirt to nuzzle her pussy, run my hands up the backs of her legs and squeeze her ass. I would want her to keep her strappy heels on as I sample her this way...\n\n\"Huh, that looks like the terrace of my old room down there.\" I snap out of my reverie and look in the direction she's pointing. With a jolt, I realize she's indicating the unit where I witnessed the woman having the wank session with her vibrator and sizable anal dildo just the morning before. I could only see the woman's lower body, legs, and feet; her upper body and face had been obscured by the overhang. Watching her, I had also enjoyed a massive orgasm, splashing my semen all over the tiled flooring, right where Lizzie is standing, with her pretty feet and legs in her sexy hippie sandals.\n\nAs I'm quickly replaying some of the visuals in my mind, I see that Lizzie is still looking in that direction and has cocked her head a bit to one side. No doubt, she is wondering if I had seen her.\n\nShe turns to me with a quizzical expression. I was going to deflect and say I hadn't had the chance to enjoy the terrace much, but I see immediately in her eyes that the jig is up. Lizzie is a very astute person. She also knows I'm an early riser since we had talked about exercising in the early morning, swimming for me, running for her.\n\nA small smile plays on her lips as she slides her eyes down to my jeans and can see the now obvious bulge in my crotch, and I see likewise that her nipples are even perkier now.\n\n\"You saw me?\"\n\n\"Yes, I must confess I did. I didn't know it was you then. I didn't have an inkling until this morning when I saw your pedicure was of the same color as that woman's. Usually, your toenails are red.\"\n\n\"You notice my pedicure shade,\" she queried teasingly.\n\n\"Oh, yes. I notice a lot of things. Especially about you.\"\n\n\"Like what else...?\" She arches one eyebrow and half turns to face me.\n\n\"Like, that you favor expensive lingerie and wear open-top stockings. That you wear body jewelry.\"\n\n\"Wow, you surprise me. You're always so buttoned up. I thought you were all business.\"\n\n\"I am all business when it's required. And I am all pleasure when it's time.\" My voice has gotten a little croaky from desire, and my balls are starting to feel tight. She looks so good standing there, her weight favored on one high-heeled foot, one hip set a little forward, an elbow resting on the railing. I'm a hard-nosed attorney, but right now, I feel like an awkward college kid being teased by the prettiest girl on campus. I am dying to kiss her.\n\nI throw caution to the wind and reach out and playfully hook one finger in the tie belt of her wrap dress. I expect no reaction in particular, but Lizzie reaches down, grabs my wrist and draws me toward her. With her other hand, she hooks a finger in my front belt loop and draws me right up to her and says with a low voice, her lips right up to mine, \"You've seen what I like, then.\" She flicks her tongue across my lips which sends a shock to my lower belly and my cock. \n\n\"Yes... I have a pretty good idea.\" I lightly grasp her loose hair with my other hand and give her a long, deep, wet kiss. She is already pressing her pelvis firmly into mine. The good thing about our revelation is there is little room for pretense. I feel nearly light-headed with desire and anticipation, knowing that Lizzie will enjoy everything I would want to do with her, and to her.\n\n\"We're not going to make it to that vineyard, are we?\" She whispers as I kiss her jaw, neck, throat.\n\n\"One day. Not likely today,\" I mutter as I stroke a breast with one hand and brace her low back with the other. She gives a small moan of assent. I shrug off her denim jacket and let it fall on the nearby chair. Almost in a trance, I untie the sash of her dress and let it open so I can appreciate her lithe body, adorned with a thin gold belly chain just below her slim waist. Her nipples are completely erect from lust and the slight chill in the air, even though it promises to be a warm day. \n\nI unclasp her front-closing lacy bra and bend down to run my tongue on first one lovely nipple, then its mate. I go back and forth between the two, licking, sucking, and lightly biting. She has her eyes closed with her head thrown back, as she did not 10 minutes ago while appreciating the view and sunshine. How far we have come, and it's delicious to consider how far we will soon go.\n\nI love on her tits and nipples for a couple of minutes as I stroke her gams and run my hands up her inner thighs. I draw back upright to taste her mouth again as I lightly caress her mound over her expensive knickers, right along her clit and where her pussy must already be creaming. She is cooing her pleasure and also reaches down to take measure of my cock. She grunts deep in the back of her throat when she detects the girth of my package.\n\n\"Oh God, I want to taste your cock. I've been fantasizing about you for so long.\"\n\nThis is the first I hear of her own yearnings. \"You will, soon. I want to taste you between your legs first. I've been thinking about that a lot...\"\n\nShe's wearing the perfect fuck-me dress. It hangs open to give me full access. I crouch down to kneel on the tiles and press my face right in her crotch. She smells amazing. Shower-fresh tinged with eau de pussy. Fuucccckk. I slowly pull her lace knickers down to mid-thigh and pause to gaze at her pussy, from the pretty hooded clit down to her inner lips just visible below her outer labia, already shiny with her girl juice. As I had seen the other morning, her pussy is waxed smooth except for a coquettish martini-glass shaped triangle high on her mound. My tongue snakes out and gives her inner lips a light lick, tasting her natural lubrication, eliciting a gasp from Lizzie. Fuck me, she tastes good. \n\nI bury my face in her crotch and begin eating her out. In the late morning light, I can enjoy looking at her pretty pussy as I lick and toy with her clit and lightly suck on her soft lips. My cock feels strangled in my jeans so I reach down with one hand to unbutton the fly, draw my cock upright, and lazily pull on it. With my other hand, I caress the soft, wet mouth of Lizzie's sweet cunt and insert the tips of two fingers into her velvety wetness and softly tease-fuck her with just two knuckles. She feels, smells, and tastes like absolute heaven.\n\nAfter a few minutes of me feasting on her pussy, she lifts one leg to drape it over my shoulder. Both her arms are now draped across the railing, and she is fully leaning back on it for support. Luckily, I'm in the penthouse so we have privacy. With her leg draped over my shoulder this way, I have more access to her perineum and back side. I expand the reach of my tongue to explore this tasty new territory, sweeping my tongue from clit to perineum, and eventually from clit to her pucker. \n\nShe is breathing hard and whimpering little cries of pleasure. My cock is steadily pearling up precum as I languidly pull on it. I love the anticipation of the buildup, but at the same time, I cannot wait until that moment when I can finally sink my cock inside Lizzie - first her sweet pussy, then yes, absolutely, deep into her rectum.\n\n\"Mmmmm, Marc, that's so good. Your tongue, oh my God.\" She takes one arm off the railing and, raking her fingers through my hair, holds me in place to lick and suck her box. Her asshole is tight, pink, mesmerizing. I will enjoy opening up that taut aperture and fucking it later.\n\n\"Lizzie, baby, turn around. Open your ass to me.\" She shrugs off her dress and lets it fall to the flooring, unhooks her thigh off my shoulder, and slowly does an about-face. Her panties are still around her mid-thigh so I draw them down all the way, and she carefully steps out of them. She shrugs off her unhooked bra as well, so that now she is standing bare-ass naked in platform heels, her perky tits pressed against the terrace railing and her pert bottom wantonly tipped open to my gaze. I take a moment to admire the sight of her puffy pussy lips viewed from behind - one of my favorite POVs. \n\nShe reaches back with both hands and lewdly spreads her ass cheeks apart so I can take in her crinkled wink. I give her one big lick, from pussy to upper crack, and she buckles slightly forward and sucks in her breath sharply through her teeth. I set to rimming her out slowly and thoroughly, alternately running my tongue up and down her entire valley, or swirling small firm circles in the delicious textured indent of her anus, sometimes giving it a wet suck. She smells and tastes amazing. The musk of her ass is a total turn-on, and I continue to pull on my pud, as my other hand trails up between her parted legs to toy with her clit.\n\nWe continue this way for several minutes, and her fingers have started working her clit as well, freeing my hand to gently finger-fuck her pussy. I can eat out Lizzie's ass this way for a very long time, but I do want to savor her tight body in the big bed. I plan to taste all her bits from every angle possible.\n\nI reluctantly pull my mouth off her tasty ass and slowly stand up. Cupping one hand over hers on her mound and rubbing a nipple with the other, I mutter in her neck, \"Let's go inside. Time for you to sit on my face.\" She moans and turns her head to share a deep kiss, imprinting her ass hard into my crotch. My cock nestles in her crack, and I slide my engorged tool up and down her saliva-covered crevice. It takes all my will not to fuck her right then and there. But I want to wait, and I also want her to be begging for my cock.\n\nI turn her around, lift her up to straddle my waist, and slowly walk inside. She reflexively wraps her slim legs around me, sinks her fingers in my fair, and stuffs her tongue in my mouth. We kiss deeply as I make my way into the bedroom of the suite. I gently pose her on the freshly turned bed and devour her with my eyes as I remove my clothes. She has slipped off her heels and is reclining back on her forearms with her legs demurely crossed in front of her pussy, showing off her pretty feet to me. I peel off my shirt then my jeans and briefs in one movement and gaze at sexy Lizzie openly staring at my cock. I've been told by past lovers that I have a nice package. It's certainly served me well. ",
        "Lizzie is now walking on her knees towards me. She looks like pure sex on her 5'6\" frame, with her Brazilian-waxed pussy and her perky tits and her firm butt and her eyes glazed with lust. She reaches out to take hold of my cock, wets her lips, and starts to lick and suck my cock. As I would have guessed by now, she is a very talented cock-sucker and manages to take most of my fat 8 inches. \n\nIt's not long before I can feel my cock head hit against the soft palate of the back of her throat. It feels amazing, but after a few minutes, I gently tug on her hair to signal slowing down. I'm not ready to blow my load just yet. She backs off a bit but continues to suck my cock in long, smooth strokes. Not in my wildest fantasies could I have anticipated doing this right now.\n\n+ + +\n\n[Sweet Jesus, not in my wildest fantasies could I ever have anticipated my day turning out this way. The moment I realized Marc could see my unit from his terrace, I understood right away there was only one outcome for today. It's been maybe half an hour since that moment, and I've already enjoyed his very talented tongue-lashing of my pussy and my ass. My God, the man can eat pussy and rim a girl like nobody's business! \n\nAnd now, we're inside and I finally get to suck on his huge cock. He's a mouthful - 8 inches long and 2 inches across if he's a day, Christ. I can't wait to feel it inside me, but right now I'm loving him fucking the back of my throat, making my eyes tear up from the pressure, and I wouldn't mind swallowing his cum. Maybe we'll get around to it later. He had expressed wanting me to sit on his face. I can accommodate! His cock is so hot, though. Knobby and veiny and fat, just the way I had dreamed it. My pussy and ass are twitching just thinking about him plundering my love tunnels later. He's already seen what I do with my anal dildo when I masturbate so there won't be any pretense. His cock will be a tight fit in my ass, and it will be glorious.]\n\n+ + + \n\nWatching her bob on my cock, I am salivating to taste her again. I gently guide her head off my cock, and she releases her lips with a small pop. I kneel on the bed and kiss her again, re-exploring the inside of her slutty mouth. I lightly flick her pebbly nipples with my index fingers as she continues to pull on my saliva-covered cock. \n\nAfter a moment, I gently press her back onto the bed and, pulling my mouth off of hers, I begin the delicious journey of kissing down the length of her body. First, lifting her arms overhead and licking her armpits, then her nipples and breasts, belly, glossing over her pussy and clit just to drive her a little crazy. She arches her body fetchingly to me, moaning little words of encouragement.\n\nThen I sit up and bending one of her legs, I kiss her ankles, lick the beautiful arch and, one by one, take her toes into my mouth. Her eyes never leaving me, Lizzie tweaks her nipples with one hand and rubs her clit with the other. She bends her idle leg and butterflies it open so that I can gaze at her glistening pussy and enticing ass as I suck on her toes.\n\nI repeat with the other leg, and she mirrors the first side so that her pussy remains open to my gaze. She alternates between rubbing her clit and slipping two slim fingers into her pussy and slowly finger-fucking herself. Sometimes she draws her knee in and swabs pussy cream onto her asshole. My cock is standing straight up, desperate to join the game.\n\n\"I think it's time you straddle my face now.\" As I lie down, she bounds up and swiftly positions herself on top of me in a 69 position. With no preliminaries, I start licking out her cunt and ass, finger-fucking her ass when my tongue isn't busy rimming it. She gobs spit into her hand and works my cock as she gyrates her hips on my face. As much as I enjoy her cock-sucking prowess, I'm glad she's giving a hand job because her mouth would certainly set me off too fast. Her hand pumping is the perfect touch right now.\n\nEventually I'm exclusively licking her pussy and clit as I thumb-fuck her ass, using her love juice as lube. First with one thumb, then with both thumbs stacked over each other. I can tell by the tempo of her hips rocking that she is getting close. I focus my tongue on just her clit and switch to 2 fingers in her cunt and 2 fingers in her ass. This all requires some coordination, but I am eager to get her off on her first orgasm. \n\nIt doesn't take long until she's bucking rhythmically on my tongue as she palms my balls and wraps her lips over my cock. Thank God she doesn't suck too hard. It seems she just wanted something in her mouth for her orgasm. Finally, I hear her muffled cries with my cock in her mouth, as her rocking slows down and her ass clenches around my fingers. Fuck... I want to experience her ass clenching my cock like that. \n\nI keep all four fingers inside her two holes as she rides out the waves of her orgasm, until she becomes still and is just very softly suckling on my cock and mewling her contentment. Her pussy juice is all over my lower face, and I love it. I slowly withdraw my fingers, first from her pussy, then very slowly from her pliant ass hole. I give her anus a quick lick which makes her flinch a little. She releases my swollen cock from her mouth as I help her slide off me. Then I sit up and reach in the drawer for the lube to have it at hand. I kiss her again, both of us tasting her tangy pussy. \n\nNow I reach down to gently stroke her pussy again and, even though I was just down there, I am astounded by how wet it is. I can't wait another second, pry open her legs, and slide my cock into her swampy depths. She yelps from the suddenness of it and clasps her slim stems around my waist, and we enjoy some old-fashioned missionary fucking. I know it's not our end goal, but it feels very, very good. Lizzie's pussy is hot and tight. Her skin is all goosebumps, and her fingernails are digging into my back and buttocks as she offers her mouth to my tongue. I can easily come this way, but I must sample her ass, especially after what I witnessed yesterday.\n\n+ + + \n\n\"Lizzie, what do you want?\" I ask.\n\n\"You know what I want,\" she replies.\n\n\"I want you to tell me,\" I insist.\n\n\"I want you to fuck me like this a little longer. And then I want you to crack my ass open with your massive cock, fuck it good, then come deep inside me,\" she clarifies.\n\nIt is a huge turn-on to hear these words come out of such a classy woman. My eyes hood over with lust as I clamp my mouth over hers and reach underneath her hips to plunge my middle finger into her ass as I fuck her pussy even harder.\n\nI don't keep at this too long as I am very close to blowing my load. Slowing down my kisses and the rhythm of my hips, I reach for the lube and with my cock still in her pussy, I slather her ass with the gel. She draws in one knee to give me more room to maneuver.\n\nThen I pull out of her pussy and add a quantity of lube onto the head and stem of my cock. She now has both knees drawn in so that I can clearly see all her womanly charms. Fuck, she's such a beautiful slut with her pussy and ass open like that. I line up my cock head to her anus and look up at her. Her eyes are half closed, but I know she is watching me, watching my expression at the moment of entry. I push forward about an inch, so that my cock head is partially in. She moans \"Oooohhhh... more... now... please.\" \n\nI pull back a bit and push in again, a little further, this time pushing through her tight anal ring. I start by fucking the mouth of her ass in short strokes with just the first third of my cock. But her ass is irresistible, and it's not long before my cock is completely embedded inside her rectum, the root of my cock right up to her ass cheeks. She rakes her fingers through her hair as she slowly tosses her head side to side. She's whimpering and moaning, \"Oh my god, Marc, yessss, mmmmmm, I can't believe your entire cock is inside my ass... I can feel every millimeter of you in my ass. Fuck me, fuck me, fuck me...\" \n\nHer ass feels absolutely divine, and I love being able to watch her face in this position, play with her tits, see her hand sneak down to play with her clit. Her other hand reaches down to palpate the stretched ring of her ass taking in my cock. I want to feel her come again while her ass is clamped on my cock. \"Can you cum again for me? I want to feel your ass squeeze my cock while you're cumming.\" Hearing my words, she diddles her clit even faster and now she's finger-fucking herself as well as I work her chute slowly with the full length of my cock.\n\n\"Oh my god, I'm gonna cum again. Sweet god, I feel so full with your fat cock in my ass. Oh, fuc...\" And there it is: her second orgasm arrives and cuts her off. She squeezes her legs together with her fingers still rubbing her clit as her mouth half opens in a soundless scream. Her ass is involuntarily contracting again and again around my cock. \n\nWatching her have a quaking orgasm up close takes me over the edge. I grab a pillow to tuck underneath her hips and with my hands on the bed on either side of her, I piston furiously in and out of her ass. I almost fear I'm hurting her, but it's clear Lizzie is delirious in her intense pleasure. She crosses her legs like upside-down Indian style and holds on to the tops of her ankles, so that looking down I can gaze at her soupy well-fucked pussy, my cock plundering her ass, and bonus, her sexy feet and toes.\n\nShe has astonishing sphincter control, squeezing my cock like a little fist. \"Oh fuck, Lizzie, your tight ass is milking my cock! Oh, my fucking god, aaaaahhhhh... fuuucccckkk...\" My own orgasm comes crashing down on me, as I plunge my cock in to the hilt and pump my semen deep into Lizzie's hot rectum, her anal ring strangling the base of my cock. Oh, my lord God, she is the best anal accomplice I could ever ask for.\n\nLizzie has uncrossed her legs and slips the toes of one foot into my mouth as she reaches down and digs her fingers into my buttocks to pull them even more tightly onto hers. I suck on her toes gently as I continue to pump her ass, riding the last waves of my orgasm. Christ, she is really too much. \"God, Lizzie, you're too good... fuck...\" She gives me a lazy, sexy smile as I lean down to kiss her, my breath still ragged. She wraps her lovely legs around my waist and her arms around my neck and kisses me back. \n\n\"I do believe we just broke every rule on fraternization at the workplace,\" she teases as she runs her tongue tip just under my lips.\n\n\"Hmmm, yes. You really should see a lawyer about that,\" I grin wolfishly, enjoying the snugness of my cock in her ass and my pubic plate resting on her moist snatch, already looking forward to our next round."
    ],
    "authorname": "POVscribe",
    "tags": [
        "ass licking",
        "co worker affair",
        "co worker sex",
        "fellatio",
        "foot fetish",
        "office affair",
        "small breasts",
        "toe sucking"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/sodomy-in-napa-valley-ch-02"
}