{
    "title": "Turn the Page",
    "pages": [
        "By blackrandl1958 and \n\nI have long been a Bob Seger and the Silver Bullet Band fan. The ballad, \"Turn the Page,\" is one of their finest. This story is based on that song, but more closely on the music video of the Metallica cover. This story is for my daughter, who pointed the video out to me and asked me to write a story. For you, with my love. Credit to whom due:\n\nThanks to my team: Harddaysknight is my mentor and gives me critical review. SBrooks103x also gives me a pre-post read. Thanks to Hale1 and GeorgeAnderson for their editing and to GeorgeAnderson for his writing contribution. Thanks to the good folks at Systeme International, for their input.\n\nI awoke in a strange place again, and confusion gripped me. I reached out for Nathan, wanting the reassurance of his warmth. The bed was empty, cold lonely emptiness. I fell back on my pillow and the gaping wound of my life overwhelmed me. I wept, the bitterness of my tears scalding my cheeks as it had every morning for five years. I heard stirring in the next room and quickly reached for the box of tissues beside the bed. I composed myself. Merrilee was awake, and I couldn't let her see me crying.\n\nI heard her footsteps and she appeared in the open doorway. Her angelic little face peeked around the door. She saw that I was awake and her face lit with joy. She walked toward the lonely bed, Claire in her right hand, being dragged by one foot, her foam-stuffed head bumping along the carpet.\n\n\"Hi, Mama,\" she said. \"Can we get dressed and go get breakfast?\"\n\n\"Yes, baby,\" I told her. \"Let Mama shower, and we'll go.\" She kissed me and scampered back to the other room. I heard her shower start. I needed a cigarette. There were two left, and I lit the morning's first, got to my feet and staggered off to the bathroom. The hot water washed away the excesses of the night before, and I dressed, my mind a million miles away. I tried to remember where we were. Somewhere east of Omaha, I remembered. So many places had jumbled in my mind that I couldn't remember.\n\nI dressed casually, packed my bag for later and went outside. Merrilee was already outside, sitting on the parking pylon in front of the door in the motel parking lot, talking to Claire. We got in the car and I put in the keys. There was only a click when I turned them. Damn it! This was the last thing I needed! I breathed a quick prayer and turned the key again. On the fourth try, it caught and the car started. I thanked whatever deity had provided and we went down to the diner.\n\nI stopped at the convenience store for a fresh pack of smokes, and we went inside the diner. Merrilee ordered breakfast, and I got coffee. We were running a little short. She chattered away and I divided my attention between her and absent-mindedly looking out the window, lost in my own misery.\n\nI had been happy, once. That all came crashing down on New Year's Eve, five years ago. Nathan and I had a huge fight. I had gone for an audition, and he was very angry with me. He wanted me to go back to college, but I was an actress. The audition turned out to be for a soft-core porn film some sleazy producer was putting together. Nathan hit the roof when I told him.\n\n\"Damn it, Alyssa, why don't you just stand down on the corner and sell yourself?\" I had never seen him so angry. \"Go down to the Kit-Kat club and strip off! What the hell is wrong with you?\"\n\n\"Nathan, it isn't like that.\" I tried to explain. \"It's all about getting a break. Someone sees you and you're on your way, a producer or a director. You get your face in front of the camera and that's what it takes.\"\n\n\"Your face!\" he exploded. \"No, your tits and your ass, that's what you get in front of the camera! Do you imagine that anyone will be looking at your face? Do you think they'll be listening to you do lines? The only reason they will look at your face is to see you fake coming while some diseased porn actor feels you up. I've had enough, Alyssa. I'm through with this 'actress' shit. Get dressed, we have a party to attend.\"\n\nThat had been the beginning of the end. I was mad as hell. Why couldn't he understand? He didn't own me, and I WAS an actress. We went to the party without speaking a word, I got smashed, and the next thing I knew, I was signing the contract to do that film. I would just hide it and Nathan would never know. When that major production came around, I would know I had done the right thing. Of course, someone tipped him off and that was the end.\n\n\"Mama, can I get a Coke to go?\" Merrilee asked.\n\n\"Yes, baby.\" I signaled the waitress.\n\nI never spoke to Nathan again. He refused to have any contact with me and I got the divorce papers a week later. I had a drunken weekend, ended up sleeping with my \"co-star\" and six weeks later, I found out I was pregnant. I never saw my co-star again, and never wanted to see him. He might have tried to take Merrilee from me. I later heard he got hepatitis and died from complications.\n\nThe waitress brought Merrilee's Coke, and we went back to the car. It started and I took her to the park for a while. I pushed her on the swings and the merry-go-round until it was time to go.\n\nThe sign outside Wild Cherries said \"Classy Ladies.\" Right. Well, it was a job, and I needed a job. I even acted. I acted as if I was having a good time, was turned on by all the creeps trying to get their hands on me, and gave a damn about anything that happened.\n\nI took Merrilee to the dressing room, got her a can of Coke to refill her drink and got dressed. Maybe undressed would be a better word. A black leather jacket, black leather shorts, so short my ass hung out, a red lace bra and panties; that's what we actresses wore. At least the ones who worked at Wild Cherries. I kissed Merrilee, put Claire in her arms, told her I'd be back after my set and walked down to the runway for my intro.\n\nI did my thing, shuddering on the inside as the creepy men sitting around the stage, eyes glinting like ravening beasts, greasy lank hair and sweating faces, leered at my routine. Old men, bitter and cynical, young losers, unable to get a date, all lusting over the gyrations of a 30-year-old woman who looked older than she was, five years of self-destruction showing in the lines around her eyes, boobs beginning to sag, ass no longer as tight as it once was. We were a crowd of losers, huddled together in our misery, which always loves company.\n\nI finished my routine and the desultory rain of bills followed. I smiled my plastic smile, gathered the money and strutted off stage, my self-disgust almost more than I could bear. This was the least disgusting thing I was.\n\nWhen I got to the dressing room, I discovered the most disgusting thing I was. There she sat, in front of the mirror, garish makeup applied to that innocence, a pink boa around her little shoulders, some scraps of lace tied around her child's body.\n\n\"Look, Mama, I'm a dancer!\" She was beaming with pride, and my soul withered and died. The tears fell from my eyes in a bitter rain and I collapsed to the floor. If I'd had the means, I would have taken my life, right there in that dressing room. My heart, my only reason for existing, had just finished my own personal tale of horror and despair.\n\n*****\n\n\"Why are you crying, Mama? Didn't I do it right? What's wrong?\" My precious girl flung her tiny arms around my neck and began to cry, too.\n\nWhy was I crying? Because no one including me respected me enough to care whether I lived or died? No. That was exactly how much respect I deserved. Because every bit of hope and potential and joy, every bit of life, had been callously wrung out of me for the amusement of others? No. My own choices had led me here. Was I crying over the way Nathan left me, even after six years? Maybe, a little. \n\nWhy was I crying? Because of all the women in the world, the one I least wanted my daughter to be like was me. \n\nI clutched at Merrilee as if she was all that was left of the shattered former-person I had become. Which was pretty much the truth. A gentle hand on my shoulder recalled me to the present.\n\n\"I'm sorry, Jazz.\" That was my stage name. \"She was so excited and wanted it so badly, and she's so cute we just couldn't tell her no.\" \n\nI nodded. I felt like scratching her eyes out for what she'd done to my innocent daughter, but it wasn't her fault. Like everything else, this was on me. \n\n\"There's a customer asking for Jazz.\" The bored waitress who poked her head in the dressing room door didn't even notice that I was crumpled on the floor, in no shape to see a customer. Hell, she wouldn't have noticed if I had gone ahead and killed myself, as long as there wasn't too much of a mess.\n\n\"I'll take it.\" The hand on my shoulder was gone. It was a measure of my despair that my only thought was that I could really have used the money she was going to get.\n\n\"Mama, your makeup is a mess.\" My daughter was staring critically at my face. \"Come on, we need to wash it all off and start over.\" Merrilee took my hand and pulled me toward the sink in the corner of the dressing room. \n\n\"Well, Young Miss Merrilee, yours isn't any better.\" I held her up so she could see herself in the mirror. She giggled. \"Off it comes now,\" I said, and began to scrub her. The industrial-strength makeup we \"actresses\" used clung tenaciously to her soft tender little-girl skin, but after ten minutes' work I had removed every trace, except for the pink flush which my scrubbing had left on the cheeks I could never resist kissing. I sent her off to find her clothes while I cleaned my own face. \n\nMy face. It was as if it wasn't really part of me, not really; it was something I used, like my stage clothes. Had it always been like that? \n\nI'd always been told I was pretty, even when I was younger than Merrilee. Nathan had always said he could spend hours just looking at my face. It was one of the things I came to love about him: he loved my face just as much as the sexy bits, though he had certainly appreciated those, too. What had happened?\n\nMy musings were interrupted when the dancer who'd taken the call for me put three crisp fifties on the dressing table in front of me. \n\n\"Jazz, you need to go home. I've paid your tip-out; take this and take your daughter home.\" She sighed. \"I've been where you are; I know.\"\n\n\"Does it get better?\" I didn't have to tell her what 'it' was.\n\n\"I don't know. I hope so. It can't get much worse.\"\n\n\"Never say it can't get any worse, because that's when it does.\" The serious tone in which Merrilee recited the old nostrum broke the tension. \n\n\"Let Mama get changed and we'll go. Do you want to go back to the park?\"\n\nShe did. I wondered if I had ever been as excited about anything as she was about the simple treat. I knew I hadn't in the last six years. Oh, right. Acting. I'd been excited about acting.\n\n\"Look, Mama! There are other kids at the park!\" She ran a couple of steps toward the playground, where a half dozen kids her age and maybe a little older were enjoying the slides and the swings. Then she stopped and turned back toward me. \"May I, Mama?\" \n\n\"Sure, baby,\" I nodded. I found a seat and watched. For one of the first times ever, I heard my Merrilee's little voice blending with the shouts and chatter of other children. I watched her face glow as she made her swing go higher than any of the others. My heart swelled with pride as I watched her explain to one of the other girls just how she did it. I envied the ease with which she and the other kids became comfortable with one another. \n\nThe kids were gathered around the merry-go-round, talking about something, at the top of their voices, of course. Finally, one little boy left the group and came toward me, with a scared but determined look on his face. I managed not to laugh, but couldn't help smiling.\n\n\"Hi, you're Merrilee's mom, right?\" he struggled out. I nodded.\n\n\"I'm Jason. Could you come and push us on the merry-go-round? Merrilee says you can push it really fast, and we can't get it going very fast 'cause we're little. Could you, please?\" \n\nThe little knot of kids was silent now, and they were all staring at me. \n\n\"Yes, I'm Merrilee's mom. I'm glad to meet you, Jason.\" I held out my hand to him, just as my own mom had taught me, all those years ago. We shook hands.\n\n\"I'll be glad to push you really fast on the merry-go-round, but you have to promise to hang on tight and not to be afraid.\" I couldn't help smiling as I saw his little chin jut out and his eyes flash. \n\n\"I'm not afraid. That's why they made me come talk to you. You are a stranger, you know. But Merrilee's cool, so I figured you would be, too. And you can push as fast as you want. My dad pushes us real fast sometimes, when he's home from work on the weekends.\"\n\nJason led me to the merry-go-round, the kids all climbed on, and I pushed. If noise was rocket fuel (instead of mooseberries), that thing would have flown to the moon. I stopped when I saw one little guy start to look a little green, to a chorus of groans. He was okay soon enough, and we started again. Eventually, one of the kids saw his mom coming toward us, and it was time to go home. \n\nTo a chorus of \"Bye, Merrilee. Thanks, Merrilee's mom!\" Merrilee took my hand and we started toward the motel. \n\n\"Bye, Merrilee. See you soon?\" Jason was standing by himself, waving at us. Merrilee smiled and waved at him, then took my hand and pulled me toward the crosswalk, skipping as she went. My daughter had made a friend. Who knows, maybe even a future boyfriend, if we were to stay in the area. And so it begins, I thought. Would he treat her differently if he knew who, and what, her mother was? No, he was too young for that. But when she was older, would some boy break my beautiful daughter's heart because of what her mother had done? I had thought, as I lay sobbing on the dressing room floor at \"Wild Cherries,\" that my self-disgust couldn't get any worse. I was wrong.\n\nIt took Merrilee quite a while to wind down from the playground. I wondered how on earth she could still have so much energy in that little body of hers, after going full tilt on slides, swings, and merry-go-rounds for hours, chattering and laughing the whole time. After supper, she sat Claire in her lap, her signal that she had something serious to say.\n\n\"Mama, Jason was talking about school. All the kids that were there go, he said, and they're learning to read and everything. He said I must not be from around there, because if I was, I would be going to the same school with them, since I'm five. He asked where I go to school, and I told him I don't. He said good because if I wasn't going somewhere already, maybe I could come to their school. He says their teacher is really nice, unless you do something you aren't supposed to.\" \n\nMerrilee started rubbing Claire's foam stuffed head. It was her tell; she always did that when she was coming to the point of what she was saying.\n\n\"Mama, can I please go to school with Jason and them tomorrow, instead of going to your work? I'll be really good, and they all said I should come, and I could just hang with them and you could pick me up at the park, just like Jenny's mom does.\" \n\nSchool. I had toyed with the idea of home schooling Merrilee, keeping her to myself, her and me against the world. No chance for her to let slip that her mama worked at Wild Cherries. No chance for her little heart to be broken by someone using the five-letter word for what her mama truly is. Much safer for everyone. \n\nBut I'd seen her at the park, laughing, giggling, running and swinging and having the time of her life. I'd seen her making friends, easily and comfortably. School. But that would mean I would have to settle down, find a place to live that wasn't a motel. Stay in one place long enough that people would get to know me, and know who I am. No. Could I see myself at a PTA meeting? No. Not even Harper Valley would put up with me.\n\nMerrilee was waiting for an answer. \"You know you would have to be there really early in the morning,\" I tried.\n\n\"I can do that, Mama. Claire and me get up before you, anyway. Besides, Jason says some of the kids have breakfast right at the school. Isn't that cool?\"\n\n\"Do you really want to learn to read, baby?\" \n\n\"Uh-huh,\" she answered seriously. \"And write, and draw, and all that stuff.\" \n\n\"What if I taught you? I know how to do all that, you know.\" \n\n\"I know, Mama, but I really had fun with those kids today. Please?\" \n\n\"Let me think about it, okay?\" Tears stung my eyes. A couple of the other \"actresses\" had talked about how they felt when their kids left for school for the first time. I thought they were being over-emotional. I guess they weren't. \n\n\"Yes, Mama. And thanks for pushing us on the merry-go-round. The kids all like you. Jason says you're better at pushing than his dad!\" \n\nMy precious girl was in bed, asleep, looking like an angel. My special angel. Maybe that's what she was; I didn't know much about angels. I did know that she was the one good thing in my life, the one thing worth saving. If I didn't have her, I would literally die: slowly from the inside out, or quickly: there were bridges to jump from, pills to take; I knew I could get a gun if I wanted it. It wouldn't take skill, just despair and self-loathing, and I had more than enough of that. \n\nBut what if I was bad for her? Merrilee was meant to be with other people. All of us humans are. Something bloomed in her as she played happily and innocently with those other children today. It was natural, and right, and she just glowed. She was still glowing, as she lay there sleeping. \n\nI'd thought every now and then about what we'd do about Merrilee's schooling. I'd had this sort of romantic vision of her and me as nomads, going from place to place living off the land, her doing her lessons in the van or the dressing room while I \"acted,\" and being happy and contented with just each other. Then when the time came, she'd take a GED or something. I knew that if I insisted on it, Merrilee would stay with me in my world. But what about all the other stuff that went on in my world? What would happen when she started asking her innocent questions about what I really did at work, and what I was doing with those men? Not to mention the drug exposure. At five, she just accepted without questioning, just like she'd accepted being made up and dressed as a dancer. That wouldn't last forever. Would she come to hate me, then? Or worse yet, if she didn't hate me, would she want to be like me? Heaven help me, not that! Anything but that! \n\nBut what could I do? I was making a living, the only way I knew how, I thought defensively. I was a single mom, playing the hand I'd been dealt as best I could (And just who had dealt that hand?). I was doing my best for my daughter, within my limits and those of my situation. Or was I? Was I just doing what was best for me, and holding on to Merrilee because without her I'd die? What if my holding on to her was destroying her? Shit. I needed a smoke. Well, what I really needed was a good stiff drink or three, but I didn't keep booze in the room with Merrilee. \n\nThe pack I'd bought that morning was still almost full. Good, I thought. Smokes cost money. I smiled briefly as I remembered what I'd been doing that afternoon instead of smoking. Then I frowned as I remembered that there'd be no money coming in tonight. Better make sure there would be tomorrow night. I still had enough on the ball that I was pretty sure I could make that happen. After all, that's what had gotten me this far, right? A wave of disgust passed over me.\n\nI stared at the pack of cigarettes as if it contained the one brilliant answer to all my problems. Yeah, right, I thought, there's nothing wrong with me that a winning lottery ticket wouldn't cure. Nothing except I'm a used-up, washed-out...",
        "For some reason, my idiotic mind brought back the memory of a stupid paper I'd written in high school about tobacco farming. It was a waste of land that could be better used for growing food; we paid huge amounts of tax money to pay people to grow something that was bad for us, and so on. I had argued so passionately. I was passionate about everything, back then. What was I passionate about now? I tossed the pack of smokes to the dresser. No answers there.\n\nI was passionate about one thing, and only one thing: Merrilee. Over the last five years, every other passion, every other bit of life and hope had been wrung out of me for the temporary amusement of others. One pathetic loser to another. It was like wringing a wet rag over the parched ground of the desert: the rag is dry, but the desert is just as arid as before. I didn't use the word love anymore, even with Merrilee. But I would walk through a wall for her. I would give my life for hers, without a second thought. \n\nBut what would become of her then? A penniless orphan, a ward of the state? I knew what happened to young girls in the system. Maybe a family with a little boy like Jason would adopt her. She would like that, I knew. But far more likely, she would be passed from one foster parent to another, and would be lucky to survive. \n\nSuddenly I thought of Nathan's parents. Ben and Sarah were Jewish, not the Orthodox kind with long beards and things, but some other kind. They used to joke that they were the only Jews left in Texas.\n\n\"There used to be another family, but we had a theological disagreement, and we told them Texas wasn't big enough for both of us, so they moved to Arkansas.\" Despite their joking, they were serious about their religion, especially the parts about taking care of other people. They weren't the richest folks I knew by a long shot, but they were the most giving, and Nathan was just like them.\n\nI couldn't think of anyone who would make better parents for her. She wasn't their granddaughter: I didn't know who her father was, and I wasn't their daughter, anymore. But would they be willing to adopt her, just for her? Could I do that for Merrilee? Could they? How would I dare ask? I had to do something, though.\n\n*****\n\nMerrilee went to school. I somehow got that piece of shit started one more time, took her down to the school, filled out some papers with my embarrassing information and an aide took her off down the hall. She turned to wave at the door of the classroom and I walked quickly out, the scalding tears of my loss burning my cheeks. I'd thought I was stronger, but I'd never had my baby in the care of someone else. It was the normal day. The same old clich\u00e9s. The same soulless faces in the crowd.\n\nI did a lap dance for some fat smelly pig. My acting was better than ever. Right, I told myself. Still, it was 50 bucks. I needed more. That always meant one thing. My sense of self-loathing was almost more than I could bear. It was time to pick Merrilee up from the park. I got in the car. The damn thing gave me fits again. What the hell was wrong with it? Nathan could have told me. He knew about cars. We ate supper at the diner in the motel parking lot. My meager collection of bills from the club mostly expended for a greasy meal. Merrilee chattered happily as the fading sound of the pounding music from the club echoed through my head.\n\nWe went back to our rooms. Rent-by-the week: that's how we lived. The air-freshener couldn't mask the funky odor emanating from the pores of the room. Merrilee watched TV for a while and we sat together on my bed, her little warm body cuddled up against me. I read her a book, and she drifted off, an angel with the smell of cigarettes in her hair.\n\nI carried her to her room and tucked her in, kissing her forehead before turning to the bleakness I faced. We needed money. I only knew one thing. The sadness in my heart threatened to overwhelm me and I was drowning in despair. The tears flowed constantly as I dressed.\n\nThe gear was much the same. Advertise and they will come. There would be no stage, but a sidewalk would do. The truck stop was within walking distance. I started, the heels hurting my feet already. I didn't make it to the truck stop.\n\nA black Mercedes pulled up and the darkened window whispered down. A man leaned down and I sauntered to the window, the exaggerated sway of my hips full of promise. I leaned in the window.\n\n\"Hey, baby, you looking for a date?\" I asked.\n\nHe was ruggedly handsome, brown curly hair, not some disgusting pig. I breathed a sigh of relief. There was something about his eyes, though.\n\n\"I'm looking for a date,\" he said. \"You look like you'd be a fun date, hop in.\"\n\nI was smarter than that. \"I've got a place at that motel.\" I indicated it with a wave. \"I'll meet you there.\"\n\nHe made a U-turn, and I walked back. We haggled over the price, and settled on 300 dollars. He settled back on the bed and I did my strip routine. His eyes glittered malevolently, and when I was down to just thigh-highs, garter belt and heels, he stood, taking me in his arms and crushing my lips.\n\nHe forced me to my knees and I sucked him hard. He handed me a condom and I rolled it on. He pulled me back to my feet and everything changed.\n\nI saw his hand move and there was a sharp crack as pain exploded in my cheek. It felt as if my feet left the floor as I flew backward onto the bed. My vision blurred and my head was swimming from the pain. He was on top of me, sitting on my stomach, his erection between my tits and he hit me again. This was going to get ugly. My head rocked from side to side as he methodically turned my face to hamburger.\n\nThe beating stopped and he was forcing himself inside. I was bone-dry, and the pain was excruciating. My scream of pain seemed to turn him on and he battered away at me. My vision narrowed to a small tunnel and I sobbed and whimpered as he hammered away. I turned my head and there Merrilee was, Claire clutched in her little arms, tears streaming down her cheeks, watching her mother be destroyed by a stranger. She fled back to her room.\n\nIt was mercifully short, and he dressed quickly, spitting on me and contemptuously throwing the money on my quivering body. I turned on my stomach and heard the door close. He was gone. I was alone in my pit of torment.\n\nI lay there, face down, staring vacantly at the wall I never saw, mind numbed and body wracked with pain. I did notice that my face was bleeding on the sheets. I felt it.\n\nThere was a feather caress on the skin of my back. Tiny fingers stroked me and I felt a little curly head press against me, a warm little arm over my back.\n\n\"Mama?\" It was her soft inquiry. I couldn't move, couldn't speak. \"Are you...\"\n\nI had to do something. My baby was lost in confusion. \"I'm okay, baby,\" I said. \"Hand Mama a cigarette, please.\"\n\nShe placed it gently between my lips and gave me my lighter. Nothing like a last cigarette at the end of a good day, right? Turn the page.\n\nThis had to end. There was nothing I could possibly do. It had to end, for Merrilee. I didn't matter, just one more broken life lost in a sea of them, going down for the last time. I got Merrilee settled down in her bed, promising to sleep with her after I took a bath. I pulled myself together enough to go down to the ice machine and fill a hand towel.\n\nI ran the bath, lowered my aching body into the soothing water and covered my face with the icy towel. An hour later with four ibuprofens in me, I lay down beside my angel and let blackness comfort me. You don't hurt while you're asleep.\n\nMerrilee was up and pulling at me the next thing I knew, telling me she needed to go to school. \"We aren't going to school today, baby,\" I told her. \"We're going on a little trip, okay?\"\n\n\"Where are we going?\" she asked.\n\n\"Somewhere pretty far,\" I told her. \"Let Mama get ready.\"\n\n*****\n\nTwo hours later, all our meager belongings were packed in the car and we took a last look around. I had no doubt she accepted everything as normal, but I realized what a hole it was. Compared to the little cottage where Nathan and I had lived, it was a pig-sty.\n\nMerrilee had gone ahead, holding Claire. I knew she would be sitting where she always did: on the concrete parking pylon. I heard a noise outside, so I threw the key on the bed and closed the door. I started toward the car and I saw Merrilee looking up at me with wide panicked eyes. Her nose was bleeding and she was holding her hand under it so it wouldn't get on Claire or her dress.\n\nI hurried to her, grabbed some paper towels from the car and cleaned her up with some hand sanitizer while she held some paper towels to her nose. \"What happened, baby?\" I asked. \"Did you bump your nose?\"\n\nShe shook her head. \"No, Mama, it just started bleeding.\"\n\nIt didn't stop. It slowed to a trickle, but no matter what we did, it wouldn't stop. Shit! This was the last thing we needed. I was going to have to take her to urgent care. I had some money saved, but we certainly didn't need to be spending it on doctors. There wasn't a choice, so I took her.\n\nWe didn't have to wait long. The doctor was a young woman, and she didn't seem sure what was happing with Merrilee. \"I need to do a blood test,\" she said.\n\nI held my baby as she whimpered a little when the needle stuck her. She had a tissue stuck up her nose and we sat in the waiting room, changing it about every ten minutes. We were there for hours, it seemed, and finally Dr. Chavez came and got us. At least Merrilee's nose had stopped bleeding. She led us down the hall to a little room that looked like a conference room. It had some toys in one corner, and Merrilee went over and started playing with them.\n\n\"Mrs. Adler,\" she said. \"I'm afraid I need you to be very strong and listen to me. Merrilee has the nose bleed because her platelets, the part of her blood that clots, are very low. The reason they are low is because she has something called acute lymphocytic leukemia.\"\n\nMy vision began to constrict and there was a roaring in my ears. \"I don't know what that is,\" I said. \"Is it bad?\"\n\n\"It can be, but it's also a very curable kind of cancer,\" she said. \"Children Merrilee's age do very well and we cure about ninety percent of children her age. Mrs. Adler, she needs to be hospitalized, right away.\"\n\nI stood, walked to the wall, put my back against it and slowly slid down until I was sitting on the floor. Despair flooded my soul and the acid tears cut a channel down my cheeks. I sensed Dr. Chavez coming to sit beside me, her arm was around me and I sobbed brokenly.\n\n\"I know this is hard to hear,\" she said softly. \"We really are very good at treating this disease, Mrs. Adler.\"\n\nI shook my head. \"You don't understand.\"\n\n\"What? What don't I understand?\"\n\n\"We can't afford to go to the hospital,\" I was choking out the words. \"We don't have any health insurance. We're not rich. We can't... Oh God, my baby is going to die.\" I was no longer able to sit up and I slumped against her.\n\n\"She's not going to die!\" she whispered fiercely. \"Don't say that again, especially if she can hear you! She's going to live and you're going to fight for her, do you understand?\"\n\n\"How... we don't have any money. I could pay for her to come here, but... I can't...\"\n\nShe cut me off. \"We don't allow people to die because they can't pay,\" she said. \"There are funds, there are free hospitals. We are going to fight. Do you understand? Fight for your daughter, for God's sake. You have to be strong, for her!\"\n\nShe took my shoulders and shook me a little. Her dark eyes bored into mine. \"What are we going to do?\" she asked.\n\n\"Fight?\" I said.\n\n\"That's right. We're going to fight. I'll stay here and you go across the hall to the bathroom and compose yourself. You come back here and I'll have a plan ready. Are you going to fight?\"\n\nI nodded. \"Yes, I am.\"\n\nI pulled her into an embrace and clung to her like she was the only life preserver in a sea of despair. She really was. She stood and pulled me to my feet. \"Your mother will be back in a minute; she needs a restroom,\" she told Merrilee. \"I'll stay with you until she gets back.\"\n\nI could barely see Merrilee through my tears but I saw her nod, not looking up from the marbles she was rolling down some wire contraption.\n\n*****\n\nI stood in front of that restroom mirror, water running in the sink. I looked in loathing and horror at the woman in the mirror. Wretched creature, eyes red and swollen, who had been as happy and at peace as she had been in years only a few hours earlier. A new life for Merrilee had been the hope that got me out of bed. I could see the bruises, the abrasions, my penance for my sins.\n\nI washed my face, put on makeup to cover the marks of the beating and squared my shoulders. I needed to be strong for Merrilee; no, I WOULD be strong for Merrilee. I was going to do whatever I needed to do. My baby depended on me.\n\nThey were waiting for me when I returned and Merrilee smiled up at me when I entered the room, breaking my heart all over again. No... I was not going to cry. I went to her, lifting her to her feet, bending to get Claire. I held her on my lap and Dr. Chavez sat beside us.\n\n\"Merrilee...\" I didn't know where to begin. \"Baby, the doctor says that you're sick and you need to go to the hospital. That's why your nose was bleeding. I'm going to be with you, all the time, always. You need to be brave, baby. Can you do that?\"\n\n\"What's wrong with me?\" she asked.\n\n\"You have something called ALL,\" Dr. Chavez told her. \"There is something wrong with the way your body makes blood. The hospital will help you, but you'll have to take a lot of medicine. Will you be brave, like your mother said, and take all the medicine?\"\n\n\"Will it taste nasty?\" Merrilee asked.\n\nWe both laughed a little. \"That's what I love about children,\" Dr. Chavez told me. \"Yes, some of it won't taste very good, Merrilee. We'll always give you something that tastes good, after the medicine, though, so you will only taste the bad things for a second, okay?\"\n\nMerrilee nodded. \"If I have to I will,\" she said. \"I'm not very brave, though.\"\n\n\"That's not true,\" I told her. \"You're the bravest person I know.\"\n\nDr. Chavez promised to meet us at the hospital and make sure everything would be ready for us. All our things were in the car, anyway, so we drove straight to the hospital. Dr. Chavez was as good as her word, and as soon as we were checked in, she brought another doctor and introduced us to her.\n\n\"This is Dr. Morgan,\" she said. \"She's a pediatric oncologist. She knows how to help you,\" she explained to Merrilee. The long nightmare began. Turn the page.\n\n*****\n\nTwo days later, I finally worked up the courage to do what I had been dreading: I called Nathan. I had a very good reason for doing that. Merrilee needed a blood transfusion. She needed platelets, but also red blood cells. They had tested her and it turned out that her blood type was AB-negative. I only knew one person with that blood type: Nathan. Dr. Morgan told us it was very rare and we needed to find donors. She could take O-negative, but AB-negative would be best.\n\nA wild thought had crossed my mind: could it be possible that Nathan was her father? I dredged through my old memories, painful and bleeding though they were. It wasn't impossible. In any case, Nathan was a kind man. I doubted he would refuse to donate, and it was our best possibility. I was an A-negative, so couldn't donate.\n\nI called him on a hospital phone: I doubted he would take a call from me. His phone forwarded to his work number, and he answered.\n\n\"Nathan Adler, how may I help you?\"\n\nI froze. No words came and my mind stopped, along with my heart. That voice, just the same, deep, husky and kind. It paralyzed me.\n\n\"Hello, how may I help you?\"\n\nI forced words through the numb channels of my brain and over my lips. \"Nathan, please don't hang up. A little girl needs your help.\"\n\nThere was silence. \"Nathan? Please don't hang up,\" I begged.\n\n\"Alyssa? What... where... never mind. What did you say about a little girl?\"\n\n\"She needs a blood transfusion; she has your blood type; she has leukemia; I couldn't think of anyone else... She needs help, Nathan. Please, I'm begging you; please do it for her.\"\n\nI knew I was babbling so I stopped. There was another silence. Finally, I heard him clear his throat. \"Who is she? Where is she? Where are you?\"\n\n\"We're in Omaha, Nebraska,\" I said. \"Does it matter who she is, Nathan? I know you have donated blood. You did it every month. This would be something called a \"directed donation.\" Can you help her?\"\n\nSilence. \"Please, Nathan. She needs platelets and red blood cells.\"\n\n\"Is she yours?\" he finally asked.\n\n\"Does it matter?\"\n\n\"Yes, it does... No, I suppose it doesn't. How will this work?\"\n\nI gave him the logistical details and told him we would make the arrangements. All he needed to do was donate. \"Nathan, I'm so grateful. I'll need to talk to the doctors and then can I call you back and tell you what we need to do?\"\n\n\"Yes, I'm leaving work, now. I'll go to the Red Cross. Here's my cell phone number.\"\n\nHe gave it to me and after thanking him again, I called a nurse who got Dr. Chavez. She gave me all the information and I called Nathan back.\n\nHe answered, and I gave him all the information, told him that Dr. Chavez had made all the arrangements and he agreed. He spoke the dreaded words. \"Alyssa, I need to know. Is this girl your daughter?\"\n\nI didn't want to tell him. I was so afraid he would refuse. \"Yes, Nathan, she is. Please, I know you hate me, and it's impossible for you to hate me any more than I hate myself, but please don't punish her because of me. She is innocent, Nathan. Whatever you want to do to me, I deserve, but please don't blame her for anything. She's...\"\n\nHe interrupted. \"I'm not going to punish anyone, Alyssa. Take a breath. I'm almost to the Red Cross. I'm going to donate. What I want to know is... You have a daughter with AB-negative blood. I have AB-negative blood. How old is she, Alyssa?\"\n\nThe nightmare was deepening, the darkness creeping over my mind and body. \"She's five,\" I managed to breathe.\n\n\"Do you know the odds of that?\" he asked. \"Less than one percent of the people in the world have AB-negative. Alyssa, is she my daughter?\"\n\n\"I don't know,\" I wailed. \"I never knew her blood type. I... she just... she's sick, Nathan. Can you please just help her?\"\n\n\"Yes. Alyssa, I'm coming to Omaha,\" he said. \"I want some answers.\"\n\n\"I don't know! I told you...\"\n\n\"We're going to find out,\" he said. \"I'll be there tomorrow. I'm going in the Red Cross now. Call me at 10 in the morning and I'll tell you what time I'll be there. Do you have a phone?\"\n\nI gave him my number and the hospital number, and he ended the call. Terror overcame me. What if she was his? What would he do? What would I do? I wanted to take Merrilee and run, run far away where no one would ever find us, but I couldn't. She was sick. I had to stay. Would he take her away from me? I was nearly paralyzed with dread.\n\nI got a cup of coffee and sat in the waiting room for a minute. My thoughts whirled and suddenly a cold clarity settled over me. If by some wild chance she was Nathan's, if he wanted her and would take her, she would be far better off with him than with me. Did I want the best for her, or was I still the same incredibly selfish and self-centered person I'd always been? I was a stripper. There was no use in clinging to my illusions. Worse, I was a whore. There was no dressing it up.\n\nI was an aging stripper and whore. I wept for those dreams, long vanished over the horizon of my life: dreams of Nathan and me, looking down lovingly on the child we made together. She would be so much better off with Nathan. If Merrilee was with Nathan, she would be immeasurably better off. I had been thinking of his parents, of giving Merrilee to them. Would Nathan not be as good, or better? He would, and they would have a granddaughter they would spoil to death. If she was his. It was time to turn that page.",
        "*****\n\nI spent a long miserable night in the chair beside Merrilee's bed. It reclined a little and one of the kind nurses got me a pillow and a warm blanket. I managed to sleep a little, but my mind and heart were so full of dread, and the horror of my baby having a deadly disease combined with the uncomfortable chair made me sleep in brief nightmare filled episodes.\n\nWhen I awakened from one of those evil dreams, the room was light and Dr. Morgan was writing on her tablet, standing at the foot of Merrilee's bed. \"Good morning,\" she said. \"I have a treatment plan worked out. May I explain it to you?\"\n\n\"Yes, of course,\" I said. \"Can I get a cup of coffee or something, first?\"\n\n\"Yes, just go across the hall and there is a pot there. I should have brought you one,\" she said. \"Do you need something to eat?\"\n\nThe thought of eating anything made me feel sick. \"No, just some coffee,\" I said.\n\nWhen I got back, we sat together beside my sleeping angel and she told me what was going to happen. \"The first thing we're going to do is get her a central-line catheter,\" she explained.\n\n\"What's that?\" I asked. \"I'm sorry, but I don't know very much about medicine.\"\n\nShe patted my arm. \"Honey, no one does,\" she said. \"We need to give her chemotherapy, and there will be a lot of it. We can't stick her with needles all the time. It would be cruel, and it's just impossible. This will be a line that goes into her upper chest and all the way into her heart. It's not dangerous so long as we keep the entry clean. We'll show you how to take care of it. It's a surgical procedure, and she'll need to be in surgery to get it.\"\n\n\"Okay, I guess she needs it,\" I said.\n\n\"Yes, she does. Once we get this done, we can start her treatments. I have her scheduled for 10 AM.\"\n\nI nodded, then remembered. \"Nathan... my ex-husband is coming here. He's the blood donor I told you about. I'm supposed to call him at 10.\"\n\n\"Is he her father?\" she asked.\n\nThat brought the panic to the surface and I began to cry. How many tears did I have? \"I don't...\" I couldn't get the words out.\n\nShe hugged me. \"It doesn't matter,\" she said. \"You'll have to call him earlier, or you can call him while she's in surgery, okay?\" She handed me the box of tissues.\n\nI nodded. I dried my eyes and blew my nose. \"Yes. When will she need to be ready?\"\n\n\"We'll let her sleep as long as she wants,\" she said. \"If she's still asleep when it's prep time, we'll wake her up.\"\n\nShe was still asleep at nine, and two men, dressed in surgical wear came pushing a bed on wheels into the room.\n\nI woke her up. \"Baby, we need to go with these men,\" I told her. \"You are going to get a tube in you so you can get medicine to help you not be sick anymore.\"\n\nShe smiled up at the men and one of them asked, \"Can I pick you up and move you to this other bed?\"\n\n\"Yes,\" she nodded. \"Can Claire come?\"\n\nHe looked confused for a minute until she held Claire up for him to see. He smiled. \"Yes, she can come. When we take you into the other room, can Claire stay with your mom?\"\n\nMerrilee nodded. \"Yes, her and Mom are friends.\"\n\nWe left the room and rode the elevator down two floors. When we got to the surgery, they handed Claire to me, and rolled Merrilee through a set of double doors. They left the doors open so she could still see me and placed a mask on her. I saw one of them open a valve and Merrilee looked at me. I could see a look of panic in her eyes, then they gently closed. I didn't realize I was crying until I felt the hot liquid fall on my arm. \"It's okay,\" one of the guys patted me on the shoulder. \"This isn't dangerous, and the surgeon is very good. We'll keep her safe and it will be over in about an hour. You go to the waiting room and as soon as she goes to recovery, we'll come and get you so you can be there when she wakes up.\"\n\nI made my way on my wobbly legs with my blurred vision to the waiting room. I sat there, in shock for a moment, then something came swimming up from the back of my mind. I needed to call Nathan.\n\nHe answered on the second ring. \"Is everything okay with your daughter?\" I almost broke down. It was so like him. He was worried about Merrilee, even with everything else that he had to be thinking.\n\n\"She's in surgery getting a thing so they can give her chemo,\" I told him.\n\n\"Good,\" he said. \"I'm at the airport, Alyssa. My flight boards in 40 minutes. I'll land there just before noon. What hospital is she in?\"\n\nI gave him the information. \"Nathan, I...\"\n\nHe cut me off. \"It doesn't matter, Alyssa. Take care of her and we can find some answers, get everything out when I get there, okay?\"\n\nI sniffed. \"Yes, Nathan... thank you. I know... she needs...\"\n\n\"Yes, I know. I'll be there. Take care of her.\"\n\nHe was gone. I could feel the pages flipping in my head.\n\n*****\n\nMerrilee was as happy as a little lark. There was some bag of something dripping into her new central line, she had taken some pills and a bitter-tasting liquid, the nurse had given her a bag of cheese and onion flavored chips to take any \"yucky\" taste away. I was watching her little \"cheese\" colored fingers work on emptying the bag. There was a sound at the door, and when I looked up, Nathan was there.\n\nPanic gripped my heart like the jaws of a vice. I stood up and quailed as his eyes took in the scene. I had gone to the car while Merrilee was in surgery, got my least slutty-looking outfit, taken a shower and put on enough makeup to cover the lingering bruises. I knew what he saw, though.\n\n\"Nathan...\"\n\nHe put his fingers to his lips, beckoned to me and stepped outside before Merrilee saw him. \"Mama is going just outside in the hall,\" I told her. \"Call if you need me.\" She nodded and I walked out, my heart thudding a million beats a minute.\n\n\"How do you want to handle this?\" he asked when I stood in front of him, terror freezing me.\n\nI finally found my voice. \"You mean... who you are?\"\n\nHe nodded. \"Maybe I can just be the person giving her blood for now,\" he said. \"Alyssa, I want a DNA test done, as soon as possible.\"\n\n\"Nathan... are you... are you going to try to take her away from me if... if...\"\n\n\"Good God, Alyssa! No, but if I'm her father I want to know, and I want to be part of her life. Surely you can understand that. I'm not a monster who takes some kid away from her mother, no matter what you think about me.\"\n\n\"I... I... I never thought you were a monster,\" I managed to stammer. \"She's... she's all I have, Nathan. Please don't take her away from me. She's all I have.\" I broke down, in spite of all my promises to myself and to God. I started to collapse, and he was there, holding me up, supporting me, and I clung to him like I was drowning and he was a life preserver.\n\nIt took me a few minutes to get myself together, and he held me. I never wanted to move. The memories crowded my mind, flooding over me and I felt safe there, as if the hideous nightmare I'd made of my life could dissolve there in his arms. I knew it couldn't be. I wasn't that starry-eyed girl, that incredibly naiv\u00e9 idiot. Alyssa, the \"actress.\" I was Alyssa, the stripper, the filthy whore. I didn't deserve to touch him. I would make him as unclean as I was. I stepped back.\n\n\"Thank you,\" I managed to whisper. \"I already got them to do a DNA test on her. You need to get one done.\"\n\n\"I did,\" he said. \"I should have the results tomorrow. We'll just need to get them compared.\"\n\n\"Do you want to meet her now?\" I asked.\n\nHis face lit up like a neon sign. \"Please,\" he said. As I turned, and just before we entered the room, he put his hand on my arm. \"I'm not going to try to take her, Alyssa. I can see you love her.\"\n\nI nodded and we went in. She was watching a cartoon and just glanced at us. \"Baby, I want to introduce you to someone,\" I got her attention. \"This is... Nathan. He's here because he has the same kind of blood you do, and he's going to give you his blood when you need it.\"\n\nHer dimples popped out with her smile. \"Hello, Nathan,\" she said. \"Thank you for helping me. I hate getting needles in me, so I know you must not like it. If you stay, we can be friends. I'm Merrilee. This is Claire.\" She held Claire up so he could see her.\n\n\"Can I hold Claire?\" he asked, his voice incredibly gentle.\n\n\"Yes, but not too long,\" she said. \"I'm sick and she takes care of me.\"\n\nHe took Clair and hugged her. \"Thank you for taking care of Merrilee,\" he told her. He handed her back and stood there for a minute, his eyes never leaving Merrilee's face. \"Would you mind if I sat down by you on your bed and we can talk for a while?\" he asked.\n\nShe skootched over a little. \"Yes, but can we wait until the cartoon is over before we talk?\"\n\n\"Absolutely.\" He sat on the bed and turned his attention to the TV. I watched them and saw her little hand reach out and slip into his big one. I nearly lost it. I was feeling so threatened, so emotional, so... every feeling imaginable, even hopeful, something I hadn't felt in a very long time.\n\nNathan spent the afternoon with her, and he was absolutely charming. He told her silly jokes, inspiring her to make up ones just as silly, and they became completely comfortable with each other while I became increasingly agitated. He finally sensed my mood and told Merrilee he was going to talk to me, outside. She said she was going to take a nap, and she was soon dreaming. He disengaged the hand she had been holding all afternoon and we stepped outside.\n\nThere was a little conference room across the hall where the coffee pot was, and he steered me in, got us both a cup of coffee and we sat in facing chairs.\n\n\"Alyssa, have you thought about what we're going to do if I'm her father?\" he asked.\n\n\"Yes, a little bit since we've been here,\" I said. \"I swear to God, Nathan, I had no idea...\"\n\n\"It doesn't matter,\" he said. \"Tell me what you were thinking.\"\n\nI didn't know where to start. \"Do you think you could love her?\" I asked.\n\n\"I already do,\" he said. \"God, how could anyone not love her?\"\n\n\"I don't know,\" I said. \"I know I do. What if she's not, Nathan? What if she's not yours?\"\n\n\"How likely do you think that is?\"\n\nI thought a minute. \"Not very likely,\" I finally decided. \"I swear to you, Nathan, I never knew her blood type. She's never been sick and needed a blood test before.\"\n\n\"I believe you,\" he said. \"Do you live here in Omaha?\"\n\nI had no idea what to say. How could I possibly describe the shit-pile of my life? \"Not really,\" I said. \"I had a gig...\" I just couldn't.\n\n\"It doesn't matter,\" he said. \"How long is she going to be in the hospital?\"\n\n\"Dr. Morgan says like 28 days,\" I said.\n\n\"Where are you going to live after she's released?\" he asked.\n\n\"I hadn't planned anything,\" I was becoming very upset, barely keeping it together.\n\n\"I have an idea,\" he said. \"If she's mine, what would you think about coming back to Mobile and staying with me? She needs a stable place, Alyssa. I don't think 28 days will be the end of it. Did the doctor tell you anything?\"\n\n\"Yes, they said she will be in remission when she's released and that she'll have two years of chemo, then they'll monitor her for five years.\"\n\n\"See, she needs to have a stable life, Alyssa.\"\n\n\"I know. God, Nathan, don't you think I know? I... We don't have anywhere, no one...\" I couldn't go on.\n\n\"That's what I'm telling you,\" he said. \"I will do anything for her, Alyssa. If she's my daughter, and I believe she is, everything I have is hers.\"\n\n\"What about...\" I choked and couldn't get it out.\n\n\"You can stay with me, too,\" he said. \"She needs her mother. I know it will be hard for us. I'm not talking about anything between us but being her parents. You understand?\"\n\nI nodded. \"I'll think about it, Nathan. Thank you. You're being incredibly kind, but then you've always been...\"\n\n\"Good,\" he said. \"Let's go back in there and watch her sleep. I've... I've missed out on five years of watching her.\"\n\n\"I'm so sorry...\" I fled. I found a restroom and sat in a stall, crying bitter tears until my eyes ran dry. I was a fucking mess, but Merrilee needed me. I composed myself as best I could. When I got to the room, he was sitting in a chair by her bed and she had found his hand in her sleep.\n\n*****\n\nThe DNA comparison had a line at the bottom: \"Based on our analysis and on the statistical analysis of the results, it is practically proven that subject B is the biological father of subject A.\"\n\n\"I knew it!\" Nathan was elated. \"When can we tell her, Alyssa?\"\n\nWe were sitting in the little conference room. I was incredibly conflicted. This was what I hoped, what I wanted, but what would this mean? I had no idea. I was at sea without a rudder. I had to say something. Merrilee was getting a breathing treatment.\n\n\"As soon as she gets back?\"\n\n\"Yes, thank you, Alyssa. I promise you won't be sorry,\" he said.\n\nI had to smile. \"I already am,\" I said.\n\nHe grinned that disarming look he had, pulled me to my feet and danced me around the room. A nurse came by and stared at us, shook her head with a smile and left. He practically dragged me back to the room and had a goofy smile permanently fixed on his face.\n\nWhen they brought Merrilee back, he snatched her out of the rolling bed and tucked her into hers. \"I... your mother and I have something to tell you,\" he said, as soon as the nurses were gone.\n\n\"Is it something good?\" she asked. \"Am I getting out of the hospital? Me and Claire want a cheeseburger.\"\n\nI hugged her, sitting on one side of her while Nathan sat on the other, both of us holding her hands.\n\n\"No, baby, we aren't getting out of the hospital yet,\" I said. \"It will be a while longer. We'll get you a cheeseburger, though. This is something else. You know how they took your blood and tested it?\"\n\nShe nodded. \"Yes, I remember.\"\n\n\"Well, they tested Nathan's blood, too, and we found something out. This was before you were born, honey, but Mama and Nathan used to be married. When they tested Nathan's blood, we found out that he's your father.\"\n\nHer eyes got big and round. She looked at my face, then his, and back to mine. \"Really?\"\n\nHe put her hand to his cheek and nuzzled it. \"Really,\" he said. \"You're my baby, too, Merrilee. Do you think you'll like having me for a Dad?\"\n\n\"I like you,\" she said. \"I never had a dad before. It's always been just me and Mama.\"\n\n\"I know,\" he said. \"Do you think you might have room for me to love you, too?\"\n\nShe thought for a minute. \"I still get to have Mama?\"\n\n\"Yes, baby. You'll have me,\" I assured her. I meant it, but I was so afraid, so deep into the thought I wouldn't allow to come into consciousness.\n\nShe thought for another moment. \"Then yes, I want you to be my dad, Nathan. Claire likes you, too.\"\n\nHe snatched her up and hugged her like he was never going to let her go. \"Thank you, Merrilee,\" he said. \"I promise you that I'll be the best dad I can. I have something else to ask you.\"\n\nShe leaned back and looked up at him. \"What?\"\n\n\"When you get out of the hospital, do you think you would like to come and live at my house? I have a dog, and a big yard. You and Mama can stay with me while you still need to go to the doctor. Do you think you would like that?\"\n\nShe considered that, too. \"Yes, I think I would like that. We've never lived in a house before. What kind of a dog do you have, and what's his name? I like BIG dogs.\"\n\nHe gave me a strange look when she mentioned \"never lived in a house\" thing, but he got involved in telling her about the dog.\n\n\"Well, this one is a big dog,\" he said. \"He's an Irish Wolfhound, and his name is Billy.\" He got out his phone and started showing her pictures.\n\n\"He's so fluffy!\" Merrilee was obviously in love, and I was terrified. Things seemed like they were out of my control. My baby was sick; the dearest treasure of my heart was in a hospital and there was not a thing I could do about it. Nathan was her father, and he was obviously not going to be taking any backseat role in her life. Where did that leave me? I was lost, lost in the shuffle, and I decided right there in that hospital room that this was a good thing.\n\nI got my bag, walked to the bed and held my baby. I kissed her, told her I was going for a little walk, and gave her back to her father. I looked back at them before I walked out the door. He was holding her on his lap, the lines from her chemo drooping down from her pole and she was laughing up into her father's face, talking about how much she was going to love her dog. I smiled. This was best. She was where she belonged, and I didn't. Broken, nothing left, just emptiness and a sense that I had made it far enough to see Merrilee with her father, happy and secure.\n\nI made my slow way down the hall, got on the elevator and rode down to the lobby. There were people hurrying on their busy way, things to do. Just a normal day in their lives. Out the door and onto the sidewalk. The sun was shining, it was a beautiful day.\n\nI walked down the sidewalk and there was a food truck there. I remembered that I had promised Merrilee a cheeseburger. I stopped and asked the cook if he could deliver a sandwich to a little girl with cancer in the hospital. He wouldn't take my money, but he promised to take her the cheeseburger. I felt good. He was a good man. He gave me faith in humanity, in Nathan. He was a good man, too. I would bring nothing but pain to her life.\n\nI saw the bus coming. It was a block away. I walked to the front of the food truck and stepped into the gap between it and the car parked in front. I could hear the diesel engine of the bus approaching. The rhythm was the rhythm of my heart. It was there, it was time. I lifted my foot to step into the street. Of all the images to flash through my mind at that moment, it was one of the most absurd. It was the image of Merrilee, standing in the door of a sleazy hotel room, peeking around to see if I was awake, dragging Claire by the foot as she ran joyfully to climb in bed with me. Motherhood, dragging a doll by the foot.\n\nI released the breath I didn't know I was holding and carefully put my foot back to the pavement. I was Merrilee's mother, and she needed me. Not the me that I had become, but a better me. She would never abandon Claire as I was about to abandon her. My eyes were full of tears and I turned, hardly able to see, eyes on the ground in shame at what I had almost done. I took a step and he was there. I bumped against his body and he seized me by the shoulders, pushing me against the front of the food truck.\n\n\"What the fuck, Alyssa!\" His voice was not gentle. It was rough and filled with emotion, a barely held rage. \"You were going to step in front of that bus, weren't you?\"\n\nI couldn't meet his eyes. I was falling to pieces, the brokens shards of me slipping away. I could only nod. He shook me. \"God damn you, Alyssa!\" His hand drew back, and as I cowered away, I saw his eyes blazing at me. He caught himself and the fire slowly banked.\n\n\"No!\" he gathered me in his arms, squeezing me tightly. \"My God, girl, what the hell has happened in your life?\"\n\nI couldn't speak, only cry and tremble as he held me in those strong arms.\n\n\"It doesn't matter,\" he said. \"Forget about that. Tell me why you changed your mind. I wasn't going to let you do that, by the way.\"\n\nI was paralyzed, but he took my chin in his hand and tilted my face up, forcing me to meet his eyes.\n\n\"I thought she would be better off with you, and without me.\" The floodgates were opened and the words wouldn't stop pouring out of me. \"It was Claire. I thought about how much Merrilee loves her, that I should love Merrilee more than she loves Claire. I can't leave her, Nathan. I can't. I know I'm a horrible person, but I'm going to try to change. Do you know, the morning I found out she was... sick, I was going to your parent's house. I was going to ask them to keep her. They are the best people I know, and I thought... I thought I was destroying her life.\"",
        "The story came tumbling out, all the wretched sordidness of my life, the horrible person I had become. It went on until he stopped me, putting his fingers over my lips, shushing me.\n\n\"It doesn't matter, Alyssa,\" he said. \"What matters is that little girl up there. She needs her mother and you can't do this to her. For God's sake, Alyssa, don't you think she has enough... No. It doesn't matter. I'm not going to beat you up. I wish I'd... no, it doesn't matter.\"\n\nI was better. The words had been cathartic, and I was better.\n\nHe forced me to look into his eyes again. \"Promise me, on Merrilee's life, that you aren't going to ever do anything like this again.\" He was insistent, compelling, drawing me and I could not deny.\n\n\"No, Nathan. I won't. But...\"\n\n\"There are no 'buts',\" he was emphatic. \"I don't know what is going to happen, Alyssa. You're not the same person I remember, the person who did that stupid film. I was so... I really thought you were fucking...\" He heaved a sigh and ran his hand through his hair. \"I don't have any idea what I think of you right now, or what I feel for you. I do know I hate what you've been doing. But it doesn't matter.\"\n\nI shook my head. \"You're right. Merrilee matters,\" I said.\n\n\"Yes, she does, and you matter to her. You matter to me, Alyssa. Can we just... I don't know. I'm not making any promises. Let's go back up there and try. Can you do that with me? Let's be strong for that baby, get her healthy. Everything else will take care of itself. Swear, Alyssa, swear to me.\"\n\n\"I swear,\" I said.\n\nHe pushed my shoulders back against the truck, used his handkerchief to clean me up. I needed cleaning up a lot these days, it seemed. \"Head up, shoulders back,\" he said. \"Regardless of our past, or what we feel, or anything else, our little girl needs and deserves the best from both of us. I won't settle for anything less, from me or from you. Are we together on this?\"\n\nI nodded. He took my hand and led me back to the hospital. When we walked into the room, still hand in hand, Merrilee looked up from the cheeseburger she was eating and there was a huge smile on that angel face, shining sweetly despite its heavy coating of ketchup and mustard. Whatever it cost me, so help me God, I would never fail her again. Turn the page."
    ],
    "authorname": "blackrandl1958",
    "tags": [
        "bob seger",
        "divorce",
        "drama",
        "hanging by a thread story",
        "violence"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/turn-the-page-3"
}