{
    "title": "A Second First Time",
    "pages": [
        "\"I'm ready!\" I exclaim, strutting out of the bathroom. I'm nearly naked, save for the mystery item I have just adorned. I appear as a silhouette in the doorway, and you admire my slender feminine figure, tracing the shape of my hips with your lustful eyes. Slowly, I turn to the side, showing you the outline of my pert breasts, my flat stomach, and my little surprise for you.\n\nYour eyes fix on my waist and widen at what they find. The unmistakable phallic shape of a strap-on dildo juts out proudly from my hips, casting its shadow onto the floor in front of you, where you are kneeling. You seem outwardly shocked, but I know how you really feel.\n\n\"I-Is that what I think it is?! Where did you get that?\" you stammer.\n\n\"My little secret.\" I smile. \"You know exactly what this is. I bought it after our conversations about spicing things up in the bedroom. And it's all for you, honey.\"\n\nYou blush at my words, and gaze towards the floor in contemplation.\n\n\"This is the reason you asked me to clean up, er, back there, huh.\" You pause, and look fixedly at my gorgeous strap-on. \"It's... big. And you know, I... I've never done anything like this before.\"\n\nI turn the bathroom light off and saunter towards you, the dildo bobbing up and down slightly with each slow, purposeful step. I now stand in front of you, so that you may take in my beauty, and appreciate the size and shape of my artificial cock. Taking your hand and holding it in mine, your innocent eyes adjust to the dim light and look up, into my own.\n\n\"Don't worry, I'll be gentle.\" I lied. \"Now, come with me.\"\n\nI tug on your wrist, lifting you up and leading you towards the bed, stopping briefly to bring illumination to the twilight by turning on a small lamp. Satin sheets are neatly tucked into the corners of the queen-sized bed, and a large fresh towel has been spread on top. I stop you at the edge of the bed and position myself behind you with my hands on your shoulders, feeling you tense up. I am somewhat taller than you, which suits me just fine; I like to throw my lovers around in the bedroom.\n\n\"Sshh... It's okay. We're going to take this easy, alright?\" I say, massaging your neck.\n\nYou nod, and loosen slightly.\n\n\"Is it gonna... you know... hurt?\" you ask, sheepishly.\n\nYou look pensively over your shoulder at me, and I reply coolly. \"Hey, we talked about this. If you have prepared today, like I asked, it should be easy. You know that we have been wanting to be more adventurous in the bedroom, and this is exactly what we need. I thought you were all about pushing boundaries?\"\n\n\"Okay, okay. You're right. We should experiment more. I did what you asked, and made sure that it's all clean, uh, inside. So, this is that 'pegging' sex you talked about. I understand the basics, I just thought we were gonna start, erm, smaller.\"\n\n\"I wouldn't use anything that could hurt you, honey. I think you'll be just fine. You do trust me, don't you?\"\n\n\"I do. I think... I think I can do this. For you.\"\n\nI stop for a moment to stare into your eyes. \"Thank you, babe. It's gonna be so much fun, I'm so proud of you for doing this.\" \n\nI lean in closer and whisper in your ear: \"Now, let's get these clothes off.\"\n\nYou begin to unbutton your shirt as I reach around and unzip your jeans. I slide them, along with your boxers, down your legs to the floor, exposing your toned lower body. Along the way, I plant soft kisses on your back, stopping just above your adorable butt. My hands find your socks and roll them off your feet as you peel off your unbuttoned shirt. Now you are fully naked, your clothes strewn across the bedroom, and I stand up to whisper once more.\n\n\"Good boy.\" I tease, only a little tongue-in-cheek.\n\nYou turn around and face me, and I can see that you are very receptive to my advances: your penis now stands fully erect, opposite my own fake member. I grin, as you realise that mine is both longer and thicker: 8 inches of high-quality black silicone cock, curved slightly upwards and complete with a realistic texture. You can see that the other end is anchored inside my pussy, and is secured by a shiny leather harness pulled taut against my alabaster skin.\n\n\"Um, are you sure I can handle this?\" You anxiously inquire.\n\nI say nothing, but pull you towards me and bring my lips to yours. They easily part, allowing my tongue access to your warm mouth. My artificial hardness presses against your stomach as your own natural hardness presses against mine. You feel my tongue move deep inside you as we make out, and I run my hands over your body, giving your ass a firm squeeze. A little moan escapes, and I can tell that you are nearly ready. I end the kiss as abruptly as I started it.\n\n\"Get on the bed, and lie down on your back\", I command.\n\nYou awkwardly climb onto the bed and lie on the towel, facing me, propped up by your elbows. You watch attentively as I move to the bedside cabinet and open the top drawer, source of our naughtiest items - I pull out a small bottle of liquid, and a black latex glove. Your cock twitches at the sight, and you wrap your hand around it.\n\n\"Nuh-uh! No touching!\" I chide. \"It'll be better that way, I promise.\"\n\nRetracting your hand from your erection, you ask: \"I take it... I take it you have a bit of experience with this kind of thing?\"\n\n\"Not really.\" I fib, recalling the numerous pegging sessions I coaxed ex-boyfriends into. \"It's just a bit of a fantasy of mine, so I've done my research. Spread your legs for me.\" I reply. As you part your thighs to reveal your back passage I snap the latex glove on and pour out a thick, clear liquid from the bottle onto my gloved hand. It glistens softly in the light of the lamp. I take my hand and begin to run it along the length of my shaft several times, mimicking your own jerk-off motion. Each stroke makes my pussy tingle slightly, hinting at the sensations that are yet to come. Once my synthetic member is thoroughly coated in the lubricant, I squeeze a small amount onto my fingers, and return the bottle to its hiding place.\n\nI climb onto the bed and stop, kneeling, between your open legs. I can just about see the cute opening between your buttocks, the little part of you I have been waiting so long to claim. Tonight, it will become mine.\n\n\"Just relax, breathe deeply. I've got to get you ready first.\" My hand moves between your thighs, out of your view. Our eyes remain locked on each other - yours nervous, and mine assured.\n\nSuddenly, you sense something cold and wet between your cheeks, moving decisively to your anus. You breathe in sharply, and I flash a comforting smile.\n\nYou feel my middle finger run a circle around your anus, sweetly teasing it. I paint the lube onto the soft pinkness of your flesh, making sure to thoroughly coat your entrance to prepare it for what is to come. I then begin to push gently on your hole, and with a little effort, my delicate finger finds its way inside you. I pause for a second to look into your eyes, reassuringly.\n\n\"There we go! See, it's not so bad, is it?\" I say, and you nod back.\n\nSlowly, I push deeper into you, past the first knuckle, and then the second. You feel my finger begin to wiggle inside your ass - I am doing a 'come hither' motion inside you, looking for that special spot. I notice your hands suddenly grab the sheets tightly and my smile widens when I know that I have found it.\n\n\"Wow...\" you exclaim. \"That feels... different.\"\n\n\"I bet it does. Try to focus on the sensation of my fingertips on that spot. It is a more subtle kind of pleasure than you are used to.\"\n\nI rub my finger in circles around your prostate, applying gentle pressure. Your petite asshole contacts tightly around my finger as pre-cum starts leaking out of the tip of your erect cock, dripping onto your navel. I begin to thrust my finger in and out of your ass, slowly, but firmly, coating it thoroughly with slick lube. As I find your p-spot, your whole body experiences a warm, tingly wave, and you arch your back in anal ecstasy.\n\nMy fingers work expertly within you, pressing and rubbing against that special, secret place. Your breathing quickens and you begin to writhe on the bed, as a moan escapes your mouth. Without saying a word, I press my index finger on your ring and it too finds its way into you, alongside my middle finger. With two fingers inside of you now, I can really begin to milk your prostate. My pace quickens, and I go deeper. I can feel the tightness of your ass as it swallows my slender digits, and I stroke them back and forth inside you to loosen your virgin hole. The tingling sensation within you spreads through your body to the tips of your fingers and toes.\n\n\"Oh my god! This feels amazing!\" you say, as sweat beads on your brow.\n\n\"This is just the beginning. I'm gonna make you feel so good tonight honey\", I retort, with a wink and a wry smile.\n\nGradually, I retract my fingers from your welcoming ass, and you shudder at the sudden emptiness. I carefully roll the glove off my right hand and deftly toss it into a wicker waste basket next to the bed.\n\nYou know what is coming next - your eyes dart to the glistening shaft extending from my crotch, and then back to mine. I can see the apprehension in your face, but your own erect cock betrays your true desires.\n\n\"I know this is scary, but you can do this. Just trust me, it will feel amazing. Any time you want to stop, just say so. Tonight, it is all about you.\" I say, to calm your nerves.\n\nIn truth, I'm so tantalisingly close to taking your anal virginity that I'll say anything to get you to put out. I have been fantasising about mounting you for weeks and have no intention to stop at this point, so near to the glorious moment of initial penetration.\n\nI move closer to you, pushing your legs up to fully expose your lubed-up asshole, my fake cock aimed squarely at your entrance.\n\n\"Hold your legs close to your chest.\" I instruct, and you comply. I take a second to observe you in your naked splendor, presenting yourself fully to me, a tender invitation for my synthetic womanhood to fill your untamed boypussy. This is the most beautiful moment, I remark to myself; the instant before you are deflowered by my feminine cock. Steadying myself on your thigh with one hand, I guide the end of my strap-on to your virgin asshole with the other. You feel the tip press up against your anus, and you instinctively jerk away.\n\n\"Hey, hey, it's okay. I won't hurt you. Just let me inside, and see how it feels. If you don't like it, I can pull out.\" I say, reassuringly. If only you knew how wet my pussy is getting - the urge to fuck you senseless is now overwhelming.\n\nI feel the tension in your body release, and again I rest the tip of my cock at your hole. This time, it stays there.\n\n\"You ready?\" I ask. You nod in response.\n\nObserving your receptiveness thus far, I decide to push my luck a little. \"Let me hear you ask for it.\"\n\n\"Uh... what?\"\n\n\"Ask me... to fuck you.\"\n\n\"Okay...\" you whisper. \"Please, fuck me. Please take my... My anal virginity.\"\n\nI smirk. You are exactly as slutty as I thought.\n\nSuddenly you feel the pressure on your entrance increasing, as I press my hips into you. We gaze into each other's eyes, and you recognise a burning desire in mine. However, my fake dick quickly meets resistance from your tightened asshole, and I relent in my attack.\n\n\"Relax. Imagine you are trying to push it out, and it should actually go in easier\", I instruct.\n\n\"Okay... I think I understand.\" you say, so eager to please. \"Like this?\"\n\nI can sense the defiance of your flesh subside, and my cock begins to open you up. I watch you wince as your ring expands to accept the tip of the dildo, but I continue to plunge my hardness into your rectum anyway.\n\n\"Ow, it hu-\" you begin.\n\n\"Sssshhh\" I interrupt. \"Let me in.\" my benevolent smile twists into a sadistic grin for a microsecond.\n\nWith those words, your anus stretches to its fullest as the head of my strap-on pushes past your opening, making you gasp in surprise. It feels much larger than my fingers, and is rather painful, though not without pleasure. I grunt slightly as I feel the base of the toy press into my mound, massaging my clit. When the head is fully inside you, I stop moving - I glance down to see the dildo half-buried in your narrow orifice, a uniquely erotic sight that causes a cascade of bliss to spread from my pussy to my toes.\n\n\"Well done honey, you did it! How does it feel?\" I ask, excitedly.\n\n\"Woah, it feels so... big!\" you exclaim.\n\n\"Flattery will get you nowhere.\" I giggle.\n\n\"It hurts a little, though. Can you be gentler?\"\n\n\"Of course, baby. I'll look after you, I promise.\"\n\nI move my hands to either side of your shoulders, propping myself up over you. My breasts hover above your chest, and my thick, luscious hair hangs just above your face. We remain still for what seems like an eternity, as you get used to this exciting and unfamiliar sensation in a place that was, until this moment, yours alone. I fight the urge to thrust hard into you - I need to go gentle, at least at first. I have found that missionary is the best position to ease men into receptive anal sex, and it has the added benefit that I can watch the delightful expressions on their faces as they inevitably take every inch of my substantial length. I start rocking back and forth, incrementally pushing a little bit more of the phallus into your asshole, though there are still quite a few inches to go yet.\n\nI can see you are finding it a little uncomfortable, so I break the silence.\n\n\"You're doing so well, honey. I'm gonna go a bit deeper now; wrap your legs around my waist.\"\n\nYou dutifully obey, this new position allowing me to drive my shaft a little further into your ass. The head of the cock passes over your prostate, and pain changes to pleasure as you moan in ecstasy. I watch you close your eyes to deal with an overload of new erogenous signals, and your toes curl involuntarily.\n\n\"Mmmm, that's right babe. It's almost all in - just a little more.\" I say, hardly containing my excitement. I decide to go for the final push.\n\nI throw my head back as I thrust my hips powerfully towards you, burying my rigid cock to the hilt in your tight asshole. Now, as my skin meets yours, I have completed your deflowering; we have become one.\n\n\"Oh my GOD!\" You scream. \"Oh fuck, I can't believe how good this feels!\"\n\n\"I told you would enjoy this. Now let me take care of you.\"\n\nYou can sense the end of my dildo deep inside you, and its substantial girth bestows you with a feeling of satisfying fullness. Again, I take a moment to allow you to acquiesce - I want you to be prepared for the intense railing you are about to receive.\n\n\"Ready to be fucked?\" I ask, playfully.\n\n\"Please, take me... take my ass!\" you plead. Luckily for you, I am more than willing.\n\nSlowly, I draw back the length of the strap-on until just the head is gripped by your clenched sphincter, and then drive it deep with a steady, purposeful motion from my hips. My perfect breasts sway just above your face as a result of my movement, almost close enough to taste. You can smell the elegant feminine scent of my skin, a quality in seeming contrast to my increasingly dominant behaviour. I start to retract the dildo from your ass once more, and I see you bite your lower lip, perhaps without even realising. The sultry nature of this gesture causes me to slide into you again almost instinctively. I continue at this pace of gentle fucking for a little while, maintaining reassuring eye contact as I conquer you. With practised timing, I begin to slowly increase my speed and pressure - nothing too extreme yet, I don't want to go too fast too soon; the experience of being anally penetrated by a woman can be overwhelming at first. I offer some words of comfort as I take your ass with my cock, so you can get used to the new sensations.\n\n\"This feels wonderful, honey. You're really doing well, don't be scared to make noise if you feel good too.\" I beam.\n\nYou moan a little in response, and I can feel my desire growing in intensity as my hips gradually speed up. The end of each thrust returns a slightly louder moan from you, and therefore a harder penetration from me, causing a positive feedback loop of sexual pleasure. Over and over again I plunge the entirety of the toy into your eager passage, violating your once sacred place.\n\nNow things were really starting to get going. With grace I fluidly snap my hips backward, until the silicone cockhead once again meets resistance from your ring. You barely have a chance to protest before I drive my phallus deep into you again, nudging your tender prostate along the way.\n\n\"Oohhh! Unnh!\" come your rising groans. I, too, am starting to make passionate noises as I begin to lose control of my hips.\n\n\"Ungh!\" I grunt, as my thighs slap against your buttocks, the base of the strap-on putting pressure on my sensitive clit. Once more, I pull back, before driving it home again. The bulb of the dildo in my wet pussy rubs against my G-spot with every thrust, causing my juices to run down the side of my leg.\n\nI begin to quicken the pace of my thrusting, my full breasts heaving back and forth mere inches from your face. You can feel every inch of my strap-on as it ploughs your tight ass, slowly building a kind of pleasure you never thought possible. You attempt to stifle your moans by holding a hand to your mouth, but it is a futile gesture, hardly containing the sounds at all.\n\n\"You can be as loud as you like, don't hold back. Just go with it.\" I say, in-between the sound of slapping skin. I always like it when men scream uncontrollably as I fuck them senseless with a long, thick strap-on dido.\n\n\"Oh. Mmm. Yeah. Yeah! Fuck! FUCK!\" the words escape your mouth one by one as I bottom out at the end of each thrust. I'm getting quicker still; our breaths start coming in ragged bursts, and we begin to shine sleek with sweat. Fortunately, I have the stamina to keep pounding away at your gaping asshole.\n\nYou begin to snake your arm down your chest towards your penis, in an attempt to release the intense sexual energy I am fucking into you. However, I have other ideas. I grab your wrist before your hand reaches its destination, and pin it next to your head in one swift motion.\n\n\"No! What did I say about touching?\" I snap, as my hips cease their assault.\n\n\"But...\" you trail off.\n\n\"No Touching! Believe me, you'll appreciate it more. Let me worry about your release.\" Of course, I merely wish to come whilst I am inside your butt, before you blow your load and end the pegging prematurely. Slowly, I begin to make love to you again, and before long I am back to a hard pounding rhythm.\n\n\"Let yourself go, babe. Let yourself get fucked by a woman!\" I growl, my aggression starting to show through my normally innocent visage. I feel consumed by an animal desire, and I lust for my release - I get the most powerful orgasms when I fuck a guy in the ass. The feeling of taking complete control, of truly owning a man by plowing him deeply with my strap-on, makes me instantly wet.\n\nI take your free wrist and pin it opposite the other one. Now I have you underneath me and you can feel my weight as I start slamming my hips into yours, my voluptuous breasts smothering your face. There is little you could do to escape, even if you wanted to. I lean my head down and press my tongue into your mouth, muffling your whimpers - Your own tongue offers no resistance. Waves of familiar pleasure are building inside me with each thrust, causing my hips to move faster and faster still.\n\nI break the kiss to give you breath, and you moan in ecstasy beneath me. You are more sensitive than most guys, and I wonder how much more you can take. From the sensations in my pussy, I can tell my own orgasm is fast approaching as I slide in and out of your pink hole.",
        "\"Unh! Unh! Unh!\" come your cries - a chorus I am no stranger to - but they enhance my arousal all the same. This is what I live for, what I crave every day and every night - breaking in an anal virgin by pounding their tight little hole with my superior cock, forever supplanting their masculinity.\n\nWithout prompting, you wrap your legs even more tightly around my waist, and gyrate your hips in time with my fucking. You are now truly taking it like a girl; it seems to come naturally to you. Lowering my head, I bite the soft flesh of your neck, mixing your pleasure with pain. The combination of stimuli - my dildo in your ass, the feeling of my skin on yours, and the scent of my gorgeous body - is proving entirely too much for you, and I can tell you are going to cum hard very soon.\n\nSo I stop thrusting.\n\nI draw the considerable length of my strap-on dick from your ravaged hole and move off of your body in an elegant motion. You let out a tiny whimper as I exit your orifice, leaving you desperate for more of my fake dick. The sudden empty feeling is almost unbearable, and you are already beginning to crave the sensation of a thick strap-on in your ass.\n\n\"Flip over. Get on all fours.\" My voice is commanding, but reassuring. \"I'm not done with you yet.\"\n\nEager to please, you assume the position and present your tender ass to me. You raise your butt into the air as high as you can to allow easy access for my cock - I can tell you really want this.\n\n\"Good boy. You're doing so well. Now, reach back and spread your cheeks for me.\"\n\nYou bury your head into the pillow, and reach back to part your buttocks. The pinkness of your freshly fucked asshole, still slick with lube, is presented to me, and I take your hips with my hands and guide it towards my erect girlcock.\n\n\"Here I come. Let me inside, honey.\" I say, though I doubt you could put up much resistance at this point.\n\nMy strap-on glides effortlessly into your waiting hole, and I drive it even deeper than I could when we were fucking missionary style. You grunt as the shaft is buried fully within you and my thighs press hard against your hands gripping your cheeks. I pause for a moment, admiring the sight of you taking my cock from behind. It fills me with a feeling of power and control, which only adds to my arousal.\n\nWhat a slut! I think to myself. Naturally, all sluts ought to be fucked properly.\n\nI begin my pounding anew, gliding in and out of you with expert precision. It is an incredible turn-on to see my wet cock penetrating you easily with every thrust. I take a moment to reach down and activate my secret weapon - a small bullet vibrator hidden in the base of the dildo. With a 'click', strong vibrations travel through the toy, spreading into your anus and my pussy. You turn to look at me, startled.\n\n\"Sssshh, it's okay, honey.\" I say, comforting you. \"Just a little something to make it more fun for both of us.\"\n\nYou nod in submission, realising that the vibrations really do feel amazing.\n\nMy now buzzing phallus starts to pump in and out of you again with renewed vigor. The vibrations, combined with the motions of my fucking, are driving you crazy.\n\n\"Take it!\" I scream, my caring mask beginning to slip. \"Take my cock, you slut!\"\n\nYou moan hard at the mention of the word slut, and I smile - you know you are a slut. I take my hand and push your head into the pillow, muffling your cries. My hips are slamming into you with true speed and force now, with the singular purpose of bringing me to an amazing orgasm. However, I can sense you are also on the edge, your anal passage contracting around the shaft with each thrust, gripping it firmly and causing the other end of the dildo to massage my pussy in turn. You brace yourself on the bed with your hands to push back against each thrust, and I strike your bare ass with my hand. SMACK!\n\nA muffled moan is the result, and a devilish grin spreads across my face.\n\n\"You like that? Do you like being fucked like a girl, bitch? Answer me!\" I snap, between grunts. SMACK!\n\n\"Yes!\" you scream into the pillow, as my palm hits bare flesh again. SMACK!\n\nI cannot take any more stimulation, my pussy crying out for release. As my climax builds to a crescendo, my thrusts become increasingly erratic, signaling my impending orgasm. The sight of your gyrating body beneath me - face down, ass up - is too much to bear, and combined with the pressure on my clit and vibrations in my g-spot, I am pushed over the edge.\n\n\"Fuck! Ungh! I'm gonna come, slut!\" I scream, and my release arrives in force.\n\nMy soaking wet pussy squeezes the vibrating bulb, as my clit rubs against the base of the dildo, and I throw my head back in the beginning of a fantastic, explosive orgasm.\n\n\"Yes! Yes! Take my dick, whore!\" I shout, as wave after wave of blissful orgasmic release overtakes me. \"Ohh, fuck! FUCK!\" come my screams, as I gush pussy juice down my leg, the familiar heavenly warmth covering my body. I continue to enthusiastically fuck my strap-on cock into your ass with every beat of my climax, heightening my pleasure as well as your own. I barely notice in my passion your own anal orgasm, triggered by my relentless assfucking, is upon you.\n\n\"Oh, fuck! Something's happening! I think I'm cumming! Please, please, don't stop fucking me!\" you scream into the pillow.\n\nI don't stop fucking you - a long groan escapes your lips and you begin to tremble at the end of each of my thrusts; I can tell that you are going to experience a true prostate orgasm for the first time. I perform a final powerful thrust and your whole body tenses up under me, waves of electric warmth emanating from deep inside of you and travelling to the tips of your fingers and toes. Every nerve cell in your body is on fire, overloading your senses with rapturous euphoria. Here it comes!\n\n\"YES! Cum for me! Cum from being fucked by my cock!\" I shout, as your eyes roll back from my onslaught.\n\nAn orgasm more powerful than any you have ever experienced before rushes through your entire body, spreading outwards from that special spot inside you. I ride you as you climax, perfectly matching my thrusts with each wave of your pleasure, a scream escaping your lips as I bury the entire length of the strap-on each time. Thick ropes of fluid spurt from the tip of your penis, coating the towel placed strategically beneath you. Each pump of my hips causes you to jet out another stream. I begin to lessen my pace in time with your anal contractions, each one accompanied by an ecstatic moan. Gradually, you descend from the heavenly plateau, and I come to rest with my dildo planted firmly inside you, each of us gasping for breath after the energetic assfucking session. I slump onto your back, and you feel my hard nipples and heavy breasts pushing into your skin, as I switch the vibrations off with a click. I take a moment to regain my composure before I start to withdraw my silicone dick from your tender hole. You gently whimper as the feeling of fullness subsides, before the head of the cock leaves your asshole with a 'pop'. \n\n\"Oh baby, that was fantastic.\" I say, still short of breath. \"Did you enjoy it?\"\n\n\"Uh-huh\" is all you can manage, before you collapse, prostrate, on the bed.\n\nI lean over your back, and moving my lips close to your ear I whisper: \"You were very brave to do this for me, but it was so worth it. Thank you for letting me take your anal virginity, babe.\" With that, I move off your body and roll onto the other side of the bed. As I lie on my back and regain my breath, my still glistening strap-on stands erect and victorious at my hips, and I contemplate our pegging experience.\n\nYour first time has been a real success - I am very proud of just how well you received anal sex. This moment marks a big change in the nature of our relationship - I suspect you will be getting pegged by my strap-on again and again in future. In fact, now that you have experienced the exhilaration of an anal orgasm, I think you will beg me for it.\n\n\"Goodnight, honey\", I whisper.\n\nNo reply comes - you are already asleep, thoroughly exhausted after your second 'first time'.\n\n*****\n\nThanks for reading my first story, I hope you liked it :) Pegging is one of my favourite things; as a man, I find it to be a very beautiful and intimate act to submit so fully to a woman. I definitely enjoyed writing about it, and hope to write more on the subject in future. Any questions/comments, feel free to get in touch with me. Thank you ;)\n\nD"
    ],
    "authorname": "Mysterious_D",
    "tags": [
        "pegging",
        "strap-on",
        "strap on",
        "strapon",
        "femdom",
        "male anal",
        "prostate",
        "prostate orgasm",
        "anal fingering",
        "anal sex"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/a-second-first-time"
}