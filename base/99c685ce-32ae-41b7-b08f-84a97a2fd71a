{
    "title": "Carly's WMAF Fantasy Pt. 23",
    "pages": [
        "As always, thanks again for the support. Everyone from the people who vote and comment to the people who support me more broadly has been terrific. I hope you enjoy this chapter. Thanks especially to JB who's been volunteer editing the last few chapters. And without any further ado, enjoy the next chapter. \n\n---\n\nChapter 23\n\nI woke up the next morning feeling absolutely full of vim and vigor. What was even more surprising is that Carly woke up feeling just as awake. Normally, I wasn't much of a morning person and Carly was even worse but after the night we had with Louise, we both woke up in such a good mood that you'd never know it. \n\nI rolled over and kissed Carly, not minding the morning breath. \"I love you, Carly Young.\"\n\n\"I love you too, Jay Simpson,\" she said earnestly. For once, neither of us felt the fire and passion. We felt something better. It was nice to just sit there and kiss Carly while holding her in my arms. \"What's the plan, Master? We only have a few weeks left until the wedding.\"\n\n\"Do you need any help with the planning?\"\n\n\"It's stressful but I can get through it. I want to do it. It helps me feel useful during the day. You do enough already and I don't want to bother you with it.\"\n\n\"Okay,\" I said, nodding in understanding. I gave her a kiss goodbye as I headed out to work.\n\nI had quite the spring in my step as I walked in and it must have showed. Victoria immediately greeted me with a smile that shifted to a knowing grin as she looked at me, \"Something good happen last night, boss?\"\n\nI nodded and returned her smile, \"You could say that.\" I looked around before lowering my voice, \"Carly and I fucked Louise last night.\"\n\nVictoria's eyes sparkled as she licked her lips, \"I'd love it if you told your work wife all about it.\"\n\nI winked at her, \"In time, my pet.\" \n\nVictoria blushed deep red and sighed before changing the subject, \"How are the wedding plans coming?\"\n\nNow it was my turn to sigh, \"Good, I guess.\" I ran my fingers through my hair, \"Carly wants to plan it all and not bother me with it all but I think it's getting to her.\"\n\nVictoria was silent for a moment before looking up at me and meekly asking, \"Would... would you like me to help?\"\n\nI studied her. She was sitting there trembling slightly as she looked up at me, unsure if she'd just overstepped. \"I think that would be great... if it's not too weird for you that is.\"\n\n\"I told you, Mr. S, I'm totally fine with you having as many lovers as you want.\"\n\n\"It's one thing to know about them. It's another to be actively helping with the wedding plans of one.\"\n\nVictoria stiffened her back up, sticking her prominent chest out in the process. \"I told you, I want to be your help meet. At work and at home. Use me however you want. Not just sexually. If Carly is a little more... relaxed... in bed tonight because I helped ease her burden then that would make me very, very happy.\"\n\nI looked at Victoria and thought about her. She was so different from the other women in my life. So similar to Carly and yet so wildly and completely different. After a long silence, I nodded, \"Thank you. Call her after work, here's her number. Tell her I instructed you to call and offer her help,\" I said as I handed her the note. \"Oh... and also. How well have you gotten to know Tabitha?\"\n\nVictoria frowned and I could tell she was weighing the delivery of bad news, \"I haven't had much of a chance to make progress, Mr. S.\"\n\nI nodded my head, expecting that answer, \"It's fine. Ask her to join us after work for some drinks. Make it sound casual, okay?\"\n\nVictoria nodded with a smile. \"Yes, Sir. Anything else, Sir?\" she said in the same tone she had when taking down my lunch order. It was easy to see how 1950s business execs fell for their secretaries. \n\nI smiled down at her, getting a glimpse down her shirt at the letters of the new tattoo she got the other day, \"No, Victoria. That's all for now. Let me know when the job is done. I'll be in my office.\"\n\n\"Yes, Sir,\" she said and started back to work as if nothing had happened. Which, I suppose for her world view, maybe nothing had. By the end of the day, I'd organized a little impromptu team building exercise. Dave was bringing Madison and Hideo was being met by Sherry. Victoria was going to go help Carly after introducing me to Tabitha so everything was going according to plan.\n\nWhen Victoria confirmed that Tabitha was coming, I found myself getting that familiar feeling of anticipation. Carly had transformed me into some kind of hunter, and I had new prey. It was a ridiculous emotion to run through me and part of my brain knew that. But I couldn't help getting excited at the anticipation.\n\nThere was a quiet little bar right near the office that we all met at after work. It wasn't uncommon for little after work get togethers and the bar staff always made sure to have a little table for us. I started a tab and bought everyone a round which earned a little cheer from the staff. Madison and Sherry showed up at the same time, which was actually kind of amusing. I'd completely forgotten that their one and only encounter was when I was fucking Madison and Sherry was serving as a literal cum dump for Madison's husband, Dave. Dave wasn't allowed to touch but he painted her with five loads while watching me fuck his wife.\n\nThe two beauties paused for a moment, sizing each other up. Madison had come straight from work and was dressed very professionally. Her tight, knee length skirt and expensive looking silk blouse contrasted starkly with Sherry who was wearing short little running shorts and a tight tank t-shirt that showed off her tiny waist and big tits. Hideo and Dave both got up and gave their respective significant others some welcome kisses. I then stood and kissed both women much more thoroughly, allowing my hands to wander up and down their asses. Sherry's kiss was familiar, warm and intimate. Madison's kiss was needful and teasing. I'd only fucked Madison once but that kiss told me she really wanted another round.\n\nTabitha arrived just as I was finishing the kiss with Madison. She did a little double take and whispered something to Victoria. I couldn't tell what was said but Tabitha gave me another look afterwards that was much more appraising.\n\nVictoria brought Tabitha around and introduced everyone. I shook the Latina woman's hand. It was warm and strong and I noticed immediately that her hands were rougher than most women. She worked and she worked hard. She was dressed in her delivery outfit, a pair of tight bike shorts and a company polo-shirt. I could see the straps of a sports bra on. She could have passed for a fitness model with her sun-kissed well toned skin and obvious muscles. The fact that she still retained that feminine look despite the impressive physique was pretty remarkable. Her hair was a beautiful mix of colors and the mixture of golden blonde and chestnut brown shimmered in the dim light of the bar.\n\nHideo and Dave started talking and I realized that my little kiss had inadvertently outed their lifestyles to each other. I made a mental note to apologize to both of them, although neither seemed particularly bothered at the moment. With the two other girls talking and Victoria having already headed out, it gave me the perfect opportunity to get to know Tabitha.\n\n\"So how do you like being a runner?\" I asked.\n\nShe looked at me and snickered before taking a sip of beer. \"It's okay, I guess. It's the best of my jobs at the moment?\"\n\n\"How many jobs do you have?\"\n\n\"I do the runner thing full-time and then drive limos part time on the weekends,\" she said.\n\n\"Oh,\" I replied. I looked at her again, trying to figure her out.\n\n\"Plus I dance two nights a week and bartend once a week at a bikini bar.\"\n\n\"Which one?\" I asked with a grin.\n\nShe sipped her beer again and smiled, \"I'll let you try to figure that out.\" \n\nI liked that she was being flirty with me. It seemed to bode well. \"I know New York is expensive but that sounds rough.\"\n\nShe nodded, looking at me seriously, \"It is. But you do what you gotta do. My sister had her kids sleep over and I've got to pay for them. They've been sleeping over for the past five years.\"\n\n\"Ouch.\" I wasn't sure what to do with that information. I felt bad for her but, judging by the way she talked about it, she wasn't upset.\n\nAs if to prove my thought right, Tabitha just shrugged and looked me dead in the eyes, 'Life can't be easy for everyone. Some of us have to work really hard, you know.\" It was a challenge, I could see the fire in her eyes. \n\nI stiffened up a little, bristling at the implication that I didn't work hard. \"Hard work comes in a lot of different forms.\"\n\nShe nodded and took another sip of her beer, \"Sure. Some of us break our back and sweat all day for ten bucks an hour. Others sit in a nice air conditioned office for hours at a time and get paid ten times that.\"\n\n\"I'm not trying to suggest it's fair or right. Why don't you find something that pays better?\"\n\nShe frowned a bit, \"Because what I'd really like to do I don't have the money for.\"\n\nNow it was my turn to be intrigued, \"What's that?\"\n\n\"I want to run a gym.\"\n\n\"You should get a job at the gym and work your way up. You're obviously not afraid of hard work,\" I said with a smile, grateful to have defused the conversation somewhat.\n\n\"They're all good ol' boy gyms in New York. Every wannabe Jersey Shore Joey and their vapid blonde bimbos,\" she said. She looked away and took a breath. \"Sorry... You obviously work out and that wasn't fair.\"\n\nI laughed a genuine laugh from my gut while Tabitha watched me, \"Nobody's ever accused me of being a Jersey Shore guy.\"\n\n\"You fit the part,\" she said with a smile.\n\n\"Is that a compliment because I'm in good shape or a dig because I've got too much gel in my hair?\"\n\n\"Couldn't it be mocking you for your spray tan?\" she said with a smirk.\n\nI did my best offended look, flailing my hands in dramatic fashion, \"I'm offended. Offended! I've never spray tanned or even touched a tanning booth in my life, thank you very much.\"\n\n\"Uhhuh,\" she said as her eyes flicked over me. \"So what's your deal? You obviously not European.\"\n\nI wasn't sure I'd heard her right. \"European?\" I asked, confused.\n\n\"When I walked in you were kissing those two women. I asked Victoria if you were French or something and all she did was laugh. So why are you kissing the women of those two men? That one even has a ring,\" she said gesturing vaguely at Madison.\n\nMadison and Dave were holding hands while they each talked to their respective conversation partners. They were that obvious \"comfortable with each other\" couple. It was nice to see. \"Dave works for me and that's his wife. Hideo works for him and that's his girlfriend. She,\" I said, pointing at Sherry, \"Is my fiancee's sister.\" I paused for dramatic effect, knowing that I hadn't answered her question, \"And I'm sleeping with all of them.\"\n\nMadison and Sherry heard me. They looked over at Tabitha and I before giggling and returning to their conspiratorial chatter. Tabitha studied me, \"You're very open about it.\"\n\nNow it was my turn to shrug, \"I'm tired of hiding it. People are going to have to get used to this. I love my fiancee. And my girlfriend. And I sleep with a bunch of women. As long as everyone knows about it, what's the problem?\"\n\n\"I can think of a dozen ways any one of you could get hurt,\" she said.\n\nI looked at her. Her green eyes locked onto mine and I held her gaze for a long moment. \"I can't promise that nobody will ever get hurt. I can promise that I won't ever intentionally hurt anyone I care about. It's not normal and we know it's not. But that doesn't mean it can't work for us.\"\n\nTabitha seemed to accept that and gave a slight nod, \"At least your defense wasn't that you belonged to some wacko Mormon secessionist cult.\"\n\nI allowed myself another grin, \"Nope. In fact, this is all new to me. Carly, my fiancee, was the one that pushed me to this place. I'm just enough of a red blooded American male to see an opportunity and run with it.\"\n\n\"Well, I do like red blooded American males,\" she said.\n\n\"Just not Jersey Shore Joeys?\"\n\nShe laughed a musical laugh and finished her beer with a deep chug. \"Something like that.\"\n\nThe six of us talked for another hour. The only other time I got a little nervous was when the three girls went to the bathroom together. God only knows what they discussed in there. I apologized to Dave and Hideo who both quickly let me off the hook.\n\n\"Don't sweat it. I mean... don't do it in front of a partner or something... Although, hell... I bet Madison would love that,\" he said as he trailed off. He snapped back to reality and looked at me, \"Yeah. It's fine man. Madison has been all over me for the last couple weeks and we're better than we ever have been. Hell, I was going to ask you if you wanted to have round two with her soon,\" he said with a laugh. \n\nHideo spoke up as well, \"I'm not upset either, Sir. I was surprised at first but Dave and I have been talking and I think I understand things a little more. And maybe I'm a little more okay with how things are now.\"\n\n\"How's Sherry been the last few days?\"\n\n\"Sir?\" Hideo asked, shifting uncomfortably. He knew what I was asking.\n\n\"How has she been with all of her new tattoos and piercings and you making her cum non-stop?\"\n\nHideo looked at me then at Dave before answering, \"She's been very... domineering,\" he said.\n\n\"Bitchy?\" I asked and Hideo nodded meekly. \"And are you okay with that?\"\n\nHideo looked at me then at Dave, \"Yessir. She's still very nice and loving and... truthfully... I always liked girls with a little sass. It's why none of the girls my mother hooked me up with ever clicked for me. They were always so meek and proper. I much prefer Sherry.\"\n\nI put my hands on his shoulder, \"Good. Then we both get what we want from her, don't we?\"\n\nHideo smiled and nodded eagerly. \"Yessir. Oh, and the tattoos are super hot. Did you know I have a thing for tattooed women? It's so taboo in our culture... it's very hot.\"\n\n\"I didn't but I'm glad you like them.\"\n\nThe girls came back to the table and Madison and Sherry walked up to me with Tabitha behind them. Sherry spoke first, \"Master, we'd like you to take us back to your place so we can continue the party.\"\n\n\"Really? Tabitha too?\"\n\n\"It was Tabitha's idea... Master,\" Madison said, struggling through the word. I knew it wasn't her thing really so she was definitely working hard.\n\n\"Uhhuh. I think it's pretty clear what you both want,\" I said, looking at the two girls as they stood in front of me. \"Tabitha, why do you want to go back to my place?\"\n\n\"I'm intrigued. I want to see how it all works. How you manage to please so many women. Sherry told me it's a pretty big count.\"\n\n\"Truthfully, I usually enjoy my women in ones and twos. But what's life without a little challenge,\" I said as I stood. I settled the bill and we grabbed an Uber to my condo unit. I settled into the backseat and Sherry and Madison eagerly hopped in on either side of me. I put my arms around each of them and tried valiantly to continue the conversation with Tabitha while Madison and Sherry whispered dirty suggestions into my ears. More than once I had to close my eyes and force myself to concentrate on what the beautiful woman was saying. \n\n\"I can't stay long. I've got to get home to the kids. I can't exactly afford extra for a babysitter,\" she said.\n\n\"But we're gonna have such a fun time,\" Madison said though if I'm honest, it didn't particularly sound like she was upset to lose the competition.\n\n\"I'm sure my Master would chip in to cover the extra for the babysitter,\" Sherry said before realizing how that sounds, \"I mean... I didn't mean...\" she stammered in embarrassment.\n\nTabitha's eyes twinkled a little but she didn't look angry, \"It's alright. I understand.\"\n\n\"You'll have to forgive Sherry, she gets a little bubble headed when she hasn't been fucked in awhile. How long has it been, slut?\"\n\n\"Too long, Master. Far, far too long,\" she whispered into my ear making no attempt to keep her voice down.\n\n\"Do they all call you that?\"\n\n\"What? Master? No... I let different girls call me different things. Some of them like rules. Some of them like freedom. I really do get off on watching them get off so I try very hard to give them what they crave.\"\n\nAgain, that mischievous twinkle in her eye flitted by and she evaluated me. I could see her skin slightly flush and her breathing was a little heavy. Her breasts swelled inside the shirt she was wearing, drawing my eye despite my best effort. She pursed her lips and said, \"If you don't mind, I'd like to spend some time watching you guys and how you interact. I'm intrigued.\" She paused for a moment before continuing, \"But I really can't afford it without a little help.\"\n\nI smiled, \"I don't mind at all,\" I said and fished out my wallet. I don't usually carry much cash but was fortunate to have a couple $20s to give her. She took them and smoothly tucked them into her bra.\n\n\"Don't think this means I'm for sale,\" she said with a lopsided grin.\n\nI laughed, \"I wouldn't dream of it. Just a friend helping another friend out.\"\n\nShe squirmed in her seat, watching as Sherry and Madison roamed their hands all over me. She made a quick call to her babysitter while we finished the short ride to my building. We all bundled out of the escalade and quickly walked inside. Once in the elevator, Sherry and Madison both started getting even friskier with Sherry trying to stick her tongue all the way down my throat while Madison continued to whisper dirty things in my ear and rub my cock.\n\nWhen the doors opened, we saw Maureen, my hot redhead MILF neighbor who enjoys being objectified, coming down the hall. Unfortunately, she had her two kids with her. The three of us quickly disentangled our hands from each other to keep the prying eyes of her redheaded progeny from asking awkward questions. \n\n\"Thank you,\" Maureen said softly as we walked past.\n\n\"No problem,\" I said though I frankly wasn't certain if she was thanking me for the night we had together or the courtesy we just displayed. I assumed the latter but my cock was telling me it might be the former. \n\n\"Have fun at your party. We'll be out until late,\" she said, giving me some comfort that if things got loud, I wouldn't be bothering anyone. \n\n\"Thanks. We will,\" I said. The six of us bundled in through the door, laughing about the close call.\n\n\"I told you you're eagerness would get you in trouble some day, dear,\" Dave said to his loving, soon-to-be-cheating-again wife.\n\n\"Oh hush, David. It wasn't THAT close,\" she said as she kissed me again. \"Now go make us some drinks while Jay shows me around.\"\n\nI laughed. My apartment really wasn't that much. A single living room, small kitchen area, bedroom and bathroom. But I was pretty sure Madison was really saying, \"Take me to the bedroom right now.\"\n\nI opened the bedroom door, really not sure what I was expecting to see. What I did see wouldn't have made my top ten list of possibilities, however. Victoria and Carly had both put on one of my dress shirts each and were pounding on each other. With pillows. I stood there, mouth agape, as two of the sexiest women I knew had a legitimate adult pillow fight. The two of them were laughing uproariously as they flailed about, at one point Carly ducked a wild swing from my secretary and gripped her own pillow two handed to deliver a vicious looking uppercut. It actually took Victoria off her feet a little, knocking her onto her back on the bed with a thud. \n\nCarly made a victorious fist pump and only when she leaned over to catch her breath did she notice Madison, Sherry and I standing in the doorway, watching the bizarre scene. \n\n\"Oh... hi, Master,\" she said with a breathless snicker.\n\n\"Hi, Mr. S,\" Victoria said, sitting up quickly on her knees, obviously unfazed by the blow Carly had just delivered. She had only buttoned a couple buttons and her cunt and cleavage were fully on display. She reflexively started to cover herself then realized the silliness of that and clenched her hands into little fists. \"We were just taking a break from the wedding planning.\"",
        "\"Uh-huh,\" I said, appraising the two girls as they looked at me in embarrassment. \"Whatever am I going to do with you two?\"\n\n\"Anything you want, Mr. S,\" Victoria replied then noticed Tabitha over my shoulder, \"Hey, Tabitha! Glad you made it. I knew you and Jay would hit it off.\"\n\n\"Don't count your chickens before they're hatched there, girlie. I'm not totally sold on this whole... lifestyle thing you've got going around here. I only came because he paid me,\" the latina woman said with a smile.\n\n\"You paid her, Mr. S?\" Victoria said, turning to me with annoyance. The look on her face was both cute and surprising. Apparently, she wasn't always an obedient wallflower.\n\n\"Forty bucks to cover her babysitter's extra time,\" I said, defending myself. \n\n\"Like you wouldn't pay me for sex!\" she said with mock indignation. Again, I saw that same twinkle in her eye.\n\nI gestured wide around the room, \"I'm not exactly hurting for beautiful companions, you see.\"\n\nTabitha frowned at that, \"So why am I here? Why pursue me?\"\n\n\"You're the last girl on his list,\" Carly said, walking up to her. \n\n\"List?\"\n\nI knew enough to give Carly a bit of leeway. She read people very well. \"When I agreed to marry Jay, I did it on the condition that he keep hooking up with as many beautiful women as he wanted. I'm a cuckquean, you see.\"\n\n\"A what?\"\n\n\"It's basically a female cuckold. The same way that Dave likes watching Madison get pleasure from my Master, I enjoy watching my Master get pleasure from women that he finds attractive. I know that I can't always be around to please him and I want him to always have whatever pleasure he wants.\"\n\nTabitha looked at Carly, still confused but slowly starting to get it. \"Okay, but what's this about a list?\"\n\n\"I asked him who the women in his life were that he wanted. He told me Sherry's roommate, Victoria and the redheaded neighbor... and you.\"\n\nTabitha looked between Carly and I. \"This is fucked up, you know that, right?\"\n\nBoth Carly and I nodded. I could feel the other eyes in the room watching our exchange. \"We do,\" I said, \"But it works for us.\"\n\nCarly gave me a kiss, \"Why don't you and I and Victoria talk a bit, Tabitha. Let us reassure you about things.\"\n\nTabitha allowed herself to be guided into the bedroom and they shut the door behind them, leaving the five of us standing out in the living room bemused.\n\nMadison was, of course, the first to speak. \"Good... now you and I can have some fun, stud,\" she said and gave me a big kiss. Her tongue danced down my throat.\n\nSherry sauntered up to me and tugged on my shoulder, \"Master can have fun with whomever he wants,\" she said before attempting to outdo Madison's kiss. Her tongue danced in my mouth, teasing me with her new tongue stud. I reached my hand up and tweaked her right nipple. I'd been wanting to play with that nipple ring since she'd gotten it months ago. She gasped into my mouth then that gasp quickly turned into a lusty moan.\n\nMadison grabbed me again, pushing Sherry away and dropped to her knees, fishing out my cock with deft fingers. \"Fuck David. I've been needing this cock again so bad. Your cock is a nice standby but this cock...\" she said, sucking me straight down into the back of her throat. She'd obviously been practicing, \"This cock is fucking amazing.\"\n\n\"Yes, dear,\" Dave said from his seat over on my couch. He and Hideo were watching in rapt attention as the two girls fought over me. \n\nSherry walked up behind me and took my shirt off, letting her fingers trail across my skin sensually, \"Are you going to fuck my tight, young cunt, Master?\" Her voice was sensual and needy, whispered into my ear. \"I need it so bad, Master.\"\n\nMadison looked up at me, letting my cock flop out of her mouth and smack against her face, \"Don't fuck her... Master. Fuck me... Conquer me. Remind me why I fuck real men not little boys like David over there.\"\n\n\"I guess you're not a real slut like Master likes,\" Sherry said with all the sass she could muster, \"I'd fuck Hideo, Dave or anyone else Master told me too. But he's kept my cunt just for him so that's who gets it.\"\n\nMadison shot daggers up at Sherry, \"Keep your trash cunt away from my husband, bitch,\" she said. \n\nSherry simply said, \"I'll fuck whoever Jay tells me to fuck... bitch.\"\n\n\"Ladies,\" I said. \"You play nice with each other or you leave now.\"\n\n\"Yes, Master,\" Sherry said all sweetness and supplication.\n\nMadison continued to shoot daggers at Sherry but finally said, \"Fine. Sorry... Master,\" she said and sucked my cock down.\n\n\"Besides, let's be honest, both of you will fuck any cock I tell you to. And neither of you will be fucking either of them tonight,\" I said waving my hand at the two men merrily sitting on the couch.\n\nMadison's eyes got wide and she moaned on my cock, I could tell I'd hit on something. I pulled her up by her hair and kissed her again, tasting my precum on top of the lipstick on her lips. \"You like that idea, Madison?\"\n\n\"I want your cock,\" she said but it was half hearted.\n\n\"I don't think that's true, Madison. I think you wish you were a slut like Sherry who fucked all kinds of cocks. Did you know that, Dave? Did you know your wife was a real cock slut?\"\n\nDave looked at me and licked his lips. I could tell he was thinking about what answer Madison wanted to hear. I spun Madison around roughly, holding her hands back behind her so that she could stroke my cock. \"Look at your husband, slut. He knows what you are. A cock whore, isn't that right, Dave?\"\n\nDave stared at his wife in rapt attention before slowly nodding. \"Yes,\" he said almost whispering.\n\n\"David!\" Madison said as if she was upset. It would almost have been believable if she wasn't standing there fully clothed and stroking another man's naked cock while her husband watched with complete approval and love. The fact that she had a grin plastered on her face also didn't help.\n\n\"Don't worry Madison. Everyone here knows what you are. You'll get no judgement from us,\" I said and I kissed her. It was a soft, lingering kiss that conveyed promises of things to come before gearing up into a toe curling kiss that was equal parts sexy and slutty. When I finished kissing her, I turned to Sherry and repeated the gesture, kissing the short Asian girl. Unlike Madison, Sherry was more gentle. The new stud in her tongue prevented a full on makeout session and instead I was treated to a slow, almost loving kiss.\n\nAs I ended the kiss, our lips lingered against each other and I whispered to her softly, \"Sherry, we've talked about this before. You're not supposed to be such a bitch to my other lovers.\"\n\nSherry stared at me for a moment, I almost thought she was going to smart off to me but then her eyes went down and she murmured, \"I'm sorry, Master.\"\n\n\"Is this because Hideo made you cum? Is that why you're being all bitchy?\"\n\nShe didn't make eye contact but simply nodded.\n\n\"Well then, I guess you'll have to relearn what happens when you break the rules.\"\n\nSherry's eyes went wide and she dropped to her knees, nuzzling at my hard cock as she begged. \"Please, Master. Please don't.. I'm so sorry. I can do better. I promise. Please don't.\"\n\n\"Shhh,\" I told her as I picked her chin up. She stopped instantly and looked at me, projecting absolute submission and obedience. Madison was watching from my other shoulder and had a look of confusion across her face, \"When she's disobedient, she's punished with a night of endless orgasms.\"\n\nMadison's eyebrows cocked, \"That sounds pretty good to me.\"\n\n\"Oh? Is that what you want? You want her punishment?\"\n\nMadison hadn't expected that question. \"Uhmm... I mean... a whole bunch of orgasms for the rest of the night? Sounds amazing.\"\n\nI smiled and it must have conveyed my cruel intent because both girls shuddered against me. \"That's good, with Sherry's newly pierced clit she's not in any condition to get that treatment. Sherry, go get me the ropes.\"\n\n\"Ropes?\" Madison asked, again confused.\n\n\"You see, Sherry doesn't get fucked for a punishment. That would be pretty foolish. And I can't be bothered to make a dumb cum dumpster like her cum all night. She's not worth it. So instead, we tie her up and strap a vibrator down on her while she cums over and over and over again.\"\n\nMadison's eyes grew even rounder as she realized the fate that she'd requested. \n\n\"But you know the best part?\"\n\nMadison barely whispered, \"What?\"\n\n\"We gag her so she can't even ask for relief,\" I said.\n\nMadison shivered again. \"That's... that's...\"\n\n\"Cruel?\" I said. \"Or so fucking hot that your cunt is dripping down your leg?\"\n\nMadison blushed and whispered, \"No it's not.\" It wasn't a believable lie to anyone in the room and Dave even chuckled. Madison shot him a look but she knew she was busted.\n\n\"Hideo, reach up Madison's skirt. If her panties aren't wet, I'll fuck her. If they're wet then we'll know she wants this.\"\n\nHideo looked at Sherry. His hesitation caused Sherry to bark, \"Do what Master says, Hideo.\"\n\nMadison stood there while the young Asian man reached up her legs and his hand disappeared underneath her short skirt. She kept staring at me in defiance. I'm not sure if she realized she was also shaking like a leaf. She knew what the young man would find. \"She's not wearing any panties, Mr. Simpson. But her legs are wet.\"\n\n\"Hmmm... she's sluttier than I realized Dave. Did you know she was going commando tonight?\" I said. \n\nDave smiled and pulled a pair of white panties out of his jacket pocket, \"She didn't want you to see her plain panties.\"\n\nAgain, Madison shot him a look but this time it was cut short by Sherry and I. Sherry knew what to do and we quickly tied Madison's hands behind her. I grabbed the ball gag that Sherry brought me and put it in Madison's mouth. She was trembling with excitement as we bound her up. Sherry had grabbed a spreader bar too and soon she was fully trussed up. Trapped and ready. Sherry handed me the rabbit vibrator that was Carly's favorite. For a moment, I felt like I was in a hospital operating room doing some sort of kinky operation on a patient. I helped Madison to her knees than eased her onto her back. The bar kept her legs forced wide and made her skirt ride up. I think the fact that she was still mostly clothed turned her on. I know it turned me on. I slid the vibrator into her cunt and she moaned softly into the gag. The vibe slid in effortlessly and as I positioned the rabbit against her clit, I turned it on. Setting it to low at first, I made sure to get the position just right, judging the exact angle and placement based on Madison's muffled moans, whimpers and occasional screams. When I knew I had the right placement, I held it down while Sherry quickly used the tape to lock it firmly in place before turning it up to high.\n\nI then rolled Madison onto her stomach, making the vibrator press firmly into her clit. That action alone elicited a loud scream of surprise and pleasure. I fished out my keys from my pocket and put them in her hand. \"When you drop those, I'll end this. But if you do, you can only fuck Dave for the next month.\"\n\n\"NOOOOO,\" she begged through the gag.\n\n\"Hear that Dave? She must really not want to fuck you,\" I said with a smile. Dave simply shrugged and tucked her panties back into his pocket.\n\n\"Now what should I do with you, slut?\" I said turning to Sherry.\n\n\"Fuck me because you've already punished me?\" she said with an innocent little sway of her hips as she put her hands behind her back and stuck her chest out.\n\nI laughed, \"Hardly,\" then grabbed her hair roughly. \"I think you can have the opposite treatment.\"\n\n\"Opposite, Master?\" she said, sounding scared. I knew she wasn't really. More nervous than anything else. But it sure got my cock hard. \n\n\"Strip, slut.\"\n\nShe didn't need to be told twice. Within 15 seconds, she was completely nude, standing in front of us displaying all of her new decorations. \n\nI walked around her as she stood there, being stared at by the three of us. \"Bend over with your hands on Hideo's knees.\"\n\nShe obeyed quickly, bending over and looking Hideo in the eyes.\n\n\"She's beautiful, isn't she Hideo?\"\n\n\"Yes,\" he said with a whisper.\n\n\"Have you kissed her?\"\n\n\"Yes,\" he said.\n\n\"Kiss her now. Be gentle though. That new tongue stud is still fresh.\" The young man did as he was told. I watched as I fished out a couple needed items from the toy chest Carly and I kept in the living room.\n\n\"Have you played with her tits?\"\n\n\"Yes,\" he said.\n\n\"Play with them now. Just the right one though,\" I said. His hand moved quickly to Sherry's huge, dangling tits. He massaged roughly and inexpertly. \"You need to tease her nipple. Stroke it lightly. Circle it. Listen to her breathing to tell you what she likes. Drive her crazy.\"\n\nHideo adjusted his technique, watching Sherry's eyes as he played with the nipple.\n\n\"Don't be afraid to flick it or pinch it. She's a real painslut, Hideo. You can't really be too rough with this dumb bitch once she's all healed up,\" I said. I moved up behind Sherry and she pressed her ass back into me as she moaned at Hideo's touch. I reached down and held her cunt open with one hand while I slid a small, remote controlled vibrator into her cunt. She sighed softly at the insertion, happy to be partially filled.\n\n\"Has she sucked you?\"\n\n\"No,\" he said.\n\n\"Really?\" I asked.\n\nHideo shook his head again, \"No. She says her holes are your holes, Mr. Simpson.\"\n\n\"Tell you what, Hideo. Once her tongue stud heals, she'll give you one blowjob for every five orgasms you give her. How's that sound?\"\n\nHideo swallowed as he looked at Sherry's lips. Sherry's mouth was agape and her tongue was sticking out and I think we all knew what he was imagining. \"But she'll be pretty bitchy won't she.\"\n\nI shrugged, \"You're saying you don't want those blowjobs?\" My tone made it clear how preposterous I thought that was.\n\n\"Oh no, sir. Just... making sure.\"\n\nI flicked the remote on the vibrator inside Sherry and she let out a scream. At the same time, Madison came, writhing on the floor and making little whimpering sounds through the gag. I laughed, \"Good, then it's agreed. Do you like her when she's a bitch to you, Hideo?\"\n\nHe shook his head no but then thought about it. \"Actually... I... I guess I kind of do. She's pretty hot when she's all fired up.\"\n\nI smacked her ass hard, \"She's pretty hot all the time as far as I can tell.\" I poured some lube onto her ass and positioned my cock at her tight backdoor hole. Hideo only nodded his agreement as he kept playing with Sherry's pierced nipple. I got the head of my cock in and then shoved the remainder in causing Sherry to fall forward into Hideo's lap and scream. \"Is that the closest her mouth has been to your cock, Hideo?\"\n\n\"Uhh... oh... yes,\" he said as my hammering of Sherry's ass caused her head to rub against the young man's clothed cock. \n\n\"You like this? Me fucking your dumb slut girlfriend when you can't?\"\n\nHideo looked at me as I pillaged his girlfriend, treating her like a toy. \"Are... are you... are you going to knock her up?\"\n\nI was surprised by the question. I really wasn't sure where the real world ended and fantasy began for Sherry. Or for Hideo. Or for me for that matter. I considered the question, not stopping the ass fucking that I was delivering. \"Carly and Sherry have told me that Asian women's sole purpose is to be cum dumps for white men. To be bred by our superior seed. So... Yes... Yes I will be breeding this little yellow cunt so she can finally be useful.\"\n\nHideo nodded, \"I will take care of the baby.\"\n\nIt was a weird thing to say. It was also pretty fucking hot. I slammed into Sherry over and over, forcing her face down into Hideo's crotch until I felt my orgasm start to build. When I was close, I pulled out and grabbed Sherry's hair, roughly forcing her to the ground next to Madison. I jerked my cock twice and shot my cum all over Sherry and Madison, covering Sherry's face and Madison's ass and skirt. Madison came again, already starting to whimper as the vibrator continued to work on her clit mercilessly.\n\nI caught my breath as I stood there, cock in my hand. Madison was convulsing on the ground and Sherry was slurping up the cum covering her pretty face. Walking into the kitchen, I wiped myself off. Suddenly a voice came from the door to the bedroom, \"Ahem.\" I looked up and Tabitha was standing there with Victoria and Carly behind her. Carly was grinning wildly and had a twinkling lust in her eye. She sauntered in and sat down between Hideo and Dave. \"Are you having fun, Master?\" she asked. The three of them looked at me and I became acutely aware, for the first time truthfully, at my complete nakedness in front of all these people. \n\n\"I don't know. Did your talk with Tabitha go well?\"\n\nVictoria stepped forward, holding Tabitha's hand. \"She has some questions, Mr. S.\"\n\n\"Uhmm... okay...,\" I said, not really knowing where this all was going.\n\nTabitha walked up to me, glancing down to avoid the two writhing sluts on the floor as she stepped over them. Over her shoulder, I saw Carly biting her lip in anticipation. It occurred to me that I still wasn't sure how Carly and Victoria got along but they seemed to team up well as wingwomen when it came time to seduce new girls. Victoria was just smiling a warm grin\n\nTabitha spoke for the first time. Despite talking to her earlier, this was the first time I really got to focus on her voice without the background buzz of the bar. It was deep and husky with only a small hint of an accent. Her tone carried an unmistakable promise of pleasure assuming I gave the right answers. \"You have quite the lifestyle going here. Seems a shame to add another piece to the puzzle.\" \n\nI swallowed, very aware of my state of dress versus hers. \"What can I say, I really like interesting, intelligent and beautiful women.\"\n\nShe smiled at me and leaned in to give me just the tiniest of kisses at the corner of my mouth. \"Victoria and Carly tell me you like to push the buttons of your girls.\"\n\n\"I... I wouldn't say that,\" I said looking at Victoria for help. She just shrugged and twirled her long hair, enjoying seeing me on the back foot for once.\n\n\"Hmm? You don't like to really hit a girl's kinks?\"\n\n\"Oh! That's what you meant. Well... yeah. Of course I love that. What guy wouldn't?\"\n\nShe laughed and tucked her bright hair behind her ear with her fingers. \"You'd be surprised, Papi.\"\n\n\"Papi?\" I asked. \n\nShe smiled and stepped closer to me, lowering her voice to a throaty whisper. \"I assumed you'd like to make me scream 'Aye Papi',\" she said. \n\nI swallowed again as I felt her breath on my cheek and her hand grazing my hard cock. \"And what would make you scream, Tabitha?\"\n\nShe leaned in, grabbing my cock firmly as she whispered, \"Fuck me in front of your friends.\"\n\n\"Really? That's pretty mundane as far as kinks go,\" I said. It would be kind of nice to have a more vanilla girl to fuck every once in awhile.\n\n\"Carly's going to film it and post it online,\" she said. I looked over and sure enough, Carly was already holding her phone up and presumably already recording.\n\n\"Don't worry, Master. I'll blur the faces,\" she said, allaying my initial fear.\n\n\"You don't have to blur mine, Chica,\" she said with a smile, never breaking eye contact with me as she spoke. I realized that the little latina exhibitionist in front of me wasn't as vanilla as I thought. Oh well. I grabbed her wrist gently and led her over to the slipper chair (you can blame my ex, Sasha, for the fact that I know what those are called) in the corner and sat on it, guiding her on top of me. She straddled me, rubbing herself against my erection and ensuring that I was already ready for her. I reached behind her with one hand holding her shoulder and another her ass, \"My my. You are ready.\"\n\nI snaked my hand up to the back of her head and pulled her in for a kiss. Our tongues touched, tentatively at first, neither of us aware of what the other liked. As we eased into it, she let out a soft, pleasant moan into my mouth.",
        "My hands continued to explore her writhing body, eventually reaching under her shirt to pull it over her head. She quickly reached down and pulled her bra off, taking a moment to tease me before letting her breasts flop out. I was surprised, the tight, utilitarian sports bra made her look like she had relatively small breasts but the illusion was destroyed when a couple very plentiful Cs popped out. They were firm with small brown nipples already hard and eager. I leaned forward, nibbling them lightly which caused her to coo in my ear. \"Aye Papi,\" she squealed for the first time as my tongue flicked across just the right spot. Then she whispered into my ear, \"I have another kink too, Senor.\"\n\n\"What is it?\" I asked as my left hand slid back down her back and into her shorts, cupping her ass and guiding her movements as she continued to grind against me.\n\n\"Your women told me you'd figure it out, stud. But I'll give you a hint, we already danced around it earlier,\" she said. With that cryptic comment, she stepped off of me and started swaying her hips to inaudible music that only she knew. I was mesmerized as her hips moved back and forth. Her firm tits swayed only slightly and her tiny waist was simply hypnotic causing me to sit there and slowly stroke my cock while enjoying the show. She closed her eyes and continued her undulations for at least a minute before turning around and showing me her perfectly toned ass. She leaned forward and slowly slipped out of her shorts while continuing to shake her bubble butt at me. She peeled the offending garment down, revealing a tiny black g-string which hid none of her treasures. Turning back around to me, her eyes latched onto the cock in my hand. She stood transfixed as I slowly stroked it in front of her. Forgotten were the other people in the room. At that moment it was just the two of us.\n\n\"Oh Senor. What do you plan on doing with that big cock?\"\n\n\"What do you want me to do with it?\" I asked with a smile. We were teasing each other and both enjoying it.\n\n\"I want the fairy tale,\" she said.\n\nThat's when it clicked. Calling me Senor, the Julia Roberts quote, the twinkle in her eyes earlier. I leaned back, now sure of myself. \"I don't know why I'm trying so hard. You're a sure thing.\"\n\nHer grin broke even bigger, \"So what do you want, Senor?\"\n\n\"I want to fuck the whore I paid for.\"\n\n\"Aye Papi!\" she said with a tone of relief and lust. Her smile was a mile wide as she climbed back on top of me. \n\n\"That's it. Earn your money,\" I said as I eased my cock into her incredibly wet cunt. She was burning up as she wrapped herself around me, taking the entirety of me in one go as she sat down on my cock. I threw my head back and enjoyed the feeling of a hot, wet, and very eager cunt. \"That's it,\" I encouraged her as I let her set the pace, only guiding her gently with little nudges on her hips. My fingers traced around her nipples, teasing and lightly pinching them. \"Everyone's going to see what a good little whore you are,\" I whispered to her. Her pussy clenched on me tightly and she rode me a little faster. \n\nI looked under her arm at the girls in the room. Madison was still writhing on the ground, all but forgotten while Sherry sat beside her slavishly staring at me. Carly gave me a tiny little wave from behind her phone as she watched me. Victoria had her skirt bunched up around her waist and her fingers were buried in her cunt as she leaned against the door and masturbated.\n\nTabitha moaned into my ear, \"Are you going to post the video online, Papi?\"\n\nI nodded and she moaned. \"You're going to be a pornhub star. I'm sure there will be plenty of offers for your services, whore.\" She squeezed her cunt on me as if she was trying to milk it for cum. I shoved up into her, causing her to gasp then said for the camera, \"All for the low price of 40 bucks.\"\n\nThat did it for Tabitha. She came like a firecracker, screaming and collapsing onto me. Her orgasm quickly triggered my own and I fucked her with hard, ruthless thrusts as I drove her orgasm longer and longer.\n\nThe night continued from that point on. Sherry and Hideo left first, with Hideo sporting an obvious erection and a huge grin. Sherry looked at me in desperation as she left but I knew the denial was driving her crazy with lust. I made Victoria hold Madison up as I fucked Tabitha again. The look of sheer broken lust in Madison's face told me everything I needed to know. By the end, she was whimpering but, to my surprise, she never dropped the keys. Every orgasm she clenched them harder and harder until they were actually cutting into her hands a little when we finally untied her. The response when Carly unhooked the spreader bar was so perfect. She actually spread her legs wider and looked up at me with all the hope and desire of a woman who'd had more orgasms then her mind and body could handle.\n\nWe all laughed a little at the lewd display and I took pity on her, fucking her to a final orgasm with my cock before sending her home with Dave. I imagined that they'd be reliving this night for a long time. Victoria got Tabitha home, with a little money from me and by 2am, Carly and I were finally alone.\n\n\"Was this a good date night, babe?\" I asked as she finished brushing her teeth and was getting ready to climb into bed.\n\nShe laughed and slapped my arm playfully, \"Of course, Master. Any night where you claim new sluts is a good night.\"\n\n\"And are you still happy with the arrangement?\"\n\n\"Are you actually worried about that?\" she asked.\n\nI thought about it for a long moment before answering. Carly just watched me as I thought about the question. \"I guess I'm always a little worried. In the back of my head.\"\n\nI saw a little tear form in the corner of her eye and she stepped to me to give me a big, loving kiss. \"A, don't worry Master. Ever. I love this. B, I promise I will tell you the minute that changes.\"\n\n\"I guess I'm just worried because you've opened this door in me and every new woman makes it a little harder to close.\"\n\nCarly squirmed a little against me. \"That turns me on,\" she whispered.\n\n\"What?\"\n\n\"Just the idea of you being so happy with this lifestyle that you tell me you aren't stopping... even though I want to.\"\n\n\"I'm not...,\" I started but she interrupted me.\n\n\"I know, Master. And I don't want you to. But that doesn't stop me from picturing it and my dumb little chink brain is turned on by it.\"\n\n\"You really are adorably pathetic, my love.\"\n\n\"I know, Master. And you're powerfully superior,\" she said with a smile. \"Is there anything I can do for you before bed, Master?\"\n\nI laughed, I'd cum five times in the last three hours. Not only was my cock empty but it was actually a little sore. \"I'm afraid I'm all fucked out, baby.\"\n\n\"Are you saying those white women all pleased you so much that you have nothing for my empty yellow cunt, Master?\" Her voice was so cute and hopeful.\n\nI rolled over onto my elbow, \"That's exactly what I'm saying, slut.\"\n\nShe smiled and shuddered with pleasure, \"I'm glad, Master.\"\n\n\"But I would like a little white noise for bedtime. Why don't you edge yourself until you hear me snoring,\" I said with an evil grin as I turned the light off.\n\n\"But... but... Master... you don't always snore.\"\n\n\"Then I guess you'll have a long night ahead of you, slut.\"\n\n\"Mmmm... yes my glorious Master,\" she said. \n\nI listened to her for several minutes before sleep overtook me. The last thing I remember was the perfect erotic sounds of my friend and lover tormenting herself for my amusement. Not a bad way to end an evening.\n\n---\n\nIf you enjoyed this chapter, consider checking out my other stories, voting or just leaving a comment or message. You can also check out my profile page to learn how you can see previews of future stories as well as the visual inspiration for various characters. Thank you again for reading! \n\n \n"
    ],
    "authorname": "Masterful_Husband",
    "tags": [
        "cuckquean",
        "dominant male",
        "exhibitionism",
        "fetish",
        "latina",
        "slut",
        "submissive female",
        "whore"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/carlys-wmaf-fantasy-pt-23"
}