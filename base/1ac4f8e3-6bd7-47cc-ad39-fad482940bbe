{
    "title": "Senior Year Memories Ch. 32",
    "pages": [
        "(Usual Disclaimer Time: Even though this story almost entirely takes place in a high school setting, all the characters in this story are 18 years old or older, and since we're living in the wide wonderful world of porno-land here, where clich\u00e9s roam free and things might get a little unrealistic from time to time, please remember it's all in good fun. This story is highly serialized, and though it's not 100% necessary to have read the whole story up until this point to enjoy the content of the chapter, it's definitely advisable to understand some of the ongoing plots.)\n\n(Author's Note: I'm back with another chapter, and while I know Chapter 31 proved to be divisive with some of you, well... I guess it'll stay published and be divisive with some of you. Can't win 'em all. Glad to see that most of you seemed to enjoy it, anyway. I hope you are all healthy and happy and responsible and doing well in quarantineland out there; it's rough going these days, but at least we have the wide, wonderful world of erotica to help distract from time to time. I hope this brings some joy into your world, if just for a little while. On top of everything else, I want to give special thanks to fellow Literotica author and SYM reader Lil_kitty for many excellent ideas and acting as a second set of eyes on this chapter, and for letting me know what did and didn't work; if you get a chance, please check out her work and drop some stars if you enjoyed, she writes some very hot and fun stories. Oh yeah, and sorry in advance if I misrepresent the effects of marijuana use in this story; it has been a while since I have partaken. Also sorry for my limited Spanish.)\n\nPreviously, on Senior Year Memories: Basking in the glow of a new status quo, 18-year-old Ryan Collins couldn't be happier with how well things are going now that he, goth girl Josie Wong and cheerleader Brooke King have come to a supportive and successful polyamorous relationship. January is coming to a close and ending well, and after a busy day of going down on popular flirt Brianna Roth, cheering on skater girl Jess Garza's improved grades, and fucking cheer captain Dakota Lewis, he doesn't think things can get any better. However, after finding himself accidentally naked in the office of insanely busty drama teacher Wanda Harker, Ryan finds himself engaging in a new side project. In exchange for helping her run the occasional errands to help her with the spring musical, Ryan is consensually dominated and fucked hard by the curvy teacher. He is happy to accept this new responsibility, but not as happy as he is to come home to Josie and Brooke at the end of the day.\n\n***\n\nI'll be the first to admit that I've had a bit of a complicated year. I've met a lot of new people, made a lot of new friends, had a few adventures and even more misadventures, had a lot of sex, and even managed to complicate a number of things that I never expected to be all that complicated. I had a lot on my plate, but even though that got exhausting at times, on the whole I was happy for it. I know that level of complications isn't for everyone, but when every year I'd lived before had felt duller than dishwater, I was happy for a few complications.\n\nAdmittedly, I might have taken on one or two too many by the time January ended. Between tutoring three students, working on the school paper, two girlfriends, a whole lot of girls who wanted to have occasional casual sex with me, and signing on to be our insanely hot drama teacher's errand boy/part-time submissive (oddly relaxing, given everything else on my plate), as well as homework going into the final end of my senior year *and* the random month-long projects I seemed to be taking on with increasing frequency, I had a lot going on.\n\nSo, yeah, as much as I enjoyed the complications, when I could take the occasional shortcut that would let me relax, I'd take the shortcut that'd let me relax, even if that meant missing my morning bike ride to school.\n\nStill, when Josie offered to carpool on that last day of the month, I wasn't one to argue.\n\nWhen I heard the horn honking outside, I grabbed up my backpack and waved a quick goodbye to Dad, though he was so wrapped up in the set of antique dental instruments he was restoring that he could only wave half-heartedly back to me.\n\nGetting out on the lawn, I was a bit surprised to see that I wasn't the only one out here. My neighbor, 18-year-old Alice Talbot, stood outside already waiting for the ride expectantly. A beautiful, athletic black girl with soft skin, a tight body, and her impressive curls usually held in a loose afro, she usually rode her bike along with me to school and dressed accordingly. Today, though, she wore a flattering green dress with leggings underneath, and a light jacket on top.\n\nLooking her up and down as we both approached Josie's car, I smiled and asked, \"She call you, too?\"\n\n\"She did,\" Alice confirmed, licking her lips slightly. I shivered at the sight, remembering very fondly what it felt like to have those lips wrapped around my cock. Alice and I hadn't had much free time together to fool around since our memorable first time (that soon became a rather impressive foursome once Josie and Brooke joined in), and I found myself missing that closeness.\n\nI felt a little something pass between us, a certain understanding that both of us wanted a little more of that time.\n\n\"I really need to pry you away from your girlfriends sometime,\" she said, looking down at my crotch.\n\n\"You read my mind, though I think they'd like to see you try. I'd like to see that too, for that matter,\" I joked.\n\nThe rear passenger window rolled down, and a bright, cute face with a bouncy pair of blonde pigtails stuck through. \"Hiya, guys! Josie's driving, and I call Ryan to sit back here with me, so, you, like, get shotgun, Alice! It's normally, like, the best non-driving seat, but not today!\"\n\nI smiled at Brooke King as she beamed at me proudly.\n\n\"This feels terribly strategic,\" Alice said.\n\nLooking at my cute girlfriend's face as she smiled brightly at me, I said, \"Doesn't it?\"\n\nBrooke slid across the seat and let me in next to her, while Alice took her seat right in front of me. Brooke was... well, looking as cute as ever. I never thought I'd be in a relationship with a girl who wore as much hot pink and sounded like as much of a ditz as Brooke King, but now I only ever looked on her with adoration. Her tight and petite body was contained in a pink top, pink coat, and a knee length skirt that was, yup, you guessed it, bright pink, almost as bright as her smile, but few things were.\n\n\"You're looking good today,\" I said to her.\n\n\"Oh, I know it! And you're just so damn cute too!\" she exclaimed, leaning over to kiss me. The kiss soon became something of a tackle as she leaned into me, arms wrapped around my neck as she made out with me. A tongue battle with Brooke King had a way of lasting for quite a while, and normally I'd have been happy for that to be the case, but someone clearing their throat up front broke that up rather quickly.\n\n\"Seatbelts, everyone. Safety first,\" Josie Wong chided from the driver's seat. She looked at me in the rear-view mirror with a single black, raised eyebrow, the faintest hint of a curled smile on her face.\n\nJosie was my first girlfriend, a busty, Chinese goth princess who dressed all in black and fucked like every bit as much of a freak as Brooke. The two of them couldn't have been any more different, but the three of us worked quite well together as a polyamorous trio. We could all bring something fairly unique to the arrangement, and knew how to have fun together. And, well, it was kind of cool that we all liked each other as well. There was no reason the three of us should have worked together, but somehow, we managed it.\n\n\"Yes, ma'am,\" I said, sliding my belt on. Begrudgingly, Brooke did the same. I'm sure she'd have loved nothing more than to slide onto my lap and just fuck me silly (and her position on automotive safety combined with sex was a little flexible), but it was Josie's car, and Josie's tone was quite firm. There would be no car-fucking today.\n\nStill, seeing Brooke in one of her more lusty-looking moods, I knew there was something else I could do.\n\nAs Josie pulled away from the curb, I smiled at Brooke and reached over with my left hand, squeezing her thigh. She purred appreciatively, especially when I began to sneak my hand further up, under her skirt. She looked at me with her cute green eyes and smiled brightly.\n\n\"Oh, I could so go for a cum right now,\" she whispered to me as my fingers found the damp patch at the front of her no doubt bright pink panties.\n\n\"We all could,\" Josie said dryly from up front. \"You're just the one who's lucky enough to actually get one.\"\n\n\"I knew I should've fought for the back seat,\" Alice said, amused but annoyed.\n\n\"Shoulda, but didna, and that's why I get a great great great fucking start to my daaaaaaaaay!\" Brooke squealed as I slipped my fingers underneath her panties and into her pussy. I knew her pussy about as well as I knew anything, and I was quite confident that I could get a good cum out of her before we made the short drive to school.\n\nThe way she bit her lip and still managed to moan through it, I knew I was off to a pretty good start.\n\n\"Did you hear, Ryan?\" Josie asked. \"Nadia's back.\"\n\n\"Oh?\" I said, twisting my hand so my pinkie could graze Brooke's clit. \"That's news.\"\n\nNadia Barclay was an overachiever, the editor of our school paper, and seriously intense in bed. She had been out sick since about the time we'd returned to school with a fairly intense flu, and I got the impression that now that she was back, she'd be trying to make up for lost time. She meant to win some awards for our paper by the end of the year, and she had to be bouncing off the walls for how long she'd spent away.\n\n\"Yeah, should make things fun. I got a text from Nica, she wants a lot of us to swing by for a couple minutes to check in during lunch. You, me, Hope, Nica, Willie, Leah, Tori...\" Josie said, going just shy of listing off every member of the Puma Press.\n\nBrooke groaned at my efforts, holding onto my wrist for dear life. I said to Josie, \"Is it looking bad?\"\n\n\"Well, it's not looking good, but I don't think it looks bad, either,\" Josie said. \"It wouldn't hurt to have a good story or some gossip in mind.\"\n\n\"What kind of gossip?\" I asked.\n\n\"I dunno, I'm a photographer, not a writer,\" Josie replied. \"I was wandering in the science building the other day and I'm pretty sure I heard moaning through a door. By the voices I think Mrs. Chan and Ms. Moore might have been screwing around.\"\n\n\"Mrs. Chan and Ms. Moore?\" I asked. Both of them were popular and well-liked science teachers, and though Ms. Moore was definitely rumored to be a lesbian and I knew of Mrs. Chan's extracurricular fun, I didn't know it was happening on school grounds. They were both pretty hot, so it was not a bad image, but...\n\nI shook my head. \"Hot, but definitely not going to be helpful.\"\n\n\"I know some gossip,\" Brooke moaned.\n\nAlice turned around with interest. She hadn't made a ton of friends at school so far, so she definitely looked ready for some good gossip. Alice said, \"Do tell.\"\n\n\"Well, like, you all totally know the hot new history teacher Mr. Beaumont, right? Well, he's got, like, a lot of girls I know kinda creaming their panties for him... like that Ryan, please... and there's kind of a bet going around to see who can fuck him first...\" Brooke moaned.\n\n\"Isn't he married?\" Alice asked.\n\n\"If you think that's gonna stop any of this school's sluts, you haven't been here long enough. These girls are hot, and determined, and there won't be much that'll stop them,\" Josie explained, eying me in the rearview mirror. I'd had my share of encounters with married women, and \n\nAlice shrugged. \"You make a fair point.\"\n\nSince I had Mrs. Lynn as my history teacher, I didn't know Mr. Beaumont terribly well, but I had seen him around. He was handsome, tall and muscular, and I could see how he'd captured the eyes of the senior class girls. If they were going to start throwing themselves at him... well, he was definitely in trouble.\n\n\"That's probably not the kind of gossip that would make for good use in the paper, either. Teachers and sex... not the kind of story that Nadia would want to publish,\" I admitted.\n\n\"Probably not. It's cool, though,\" Josie replied.\n\n\"Toooooooooootally...\" Brooke groaned, bucking her hips against my hand as I began to finger her more vigorously.\n\n\"I was thinking... since we've had such a great month together, and I consider all of you about my best new friends here, would the rest of you perhaps be interested in doing something tonight?\" Alice suggested.\n\n\"Oh, really?\" Josie asked, raising a suggestive eyebrow.\n\nAlice laughed. \"Not that. I mean, it doesn't have to be that, if it just becomes that I am quite fine, but... I was just thinking maybe ordering some food, watching a movie, playing some games... what would the lot of you think of that?\"\n\n\"I'm down,\" Josie said.\n\n\"Ohgod, ohgod... totally...\" Brooke said, her hands clenching the seat as she got closer and closer. Given our proximity to the school, that was likely for the best.\n\n\"Yeah, that sounds like a lot of fun,\" I said, before a thought about timing hit me. \"But...\"\n\n\"But? But what? You got three hot, very fun, and might I note again hot girls for a night of fun, potentially lust and definitively some hijinks, what's the but about?\" Josie asked.\n\n\"I must echo her sentiment,\" Alice replied, amused.\n\n\"Totally...\" Brooke said, almost breathless. She was panting and looking at me with her big green eyes, needy and wanting me to finish her off with my fingers. Given how I could pretty much live for making Brooke cum, this was something I wasn't going to deny her. Squeezing her clit gently between two of my fingers, I watched and we all listened as she came loudly, jerking in her seat as she moaned and laughed, leaning her head back with her mouth open in a big, broad, silly smile of ecstasy. A flood of her juices coated my hand and her panties, giving us all a nice whiff of her intoxicating scent.\n\n\"Oooh, yesyesyes, like, wow, guys, I never get tired of that,\" Brooke said, leaning over to kiss me.\n\n\"Neither do I,\" I said, kissing her back.\n\n\"Yeah, yeah, yeah, we all love making Brooke cum, and now my car's going to smell like her cunt for the rest of the day thankyouverymuch,\" Josie rattled off quickly.\n\n\"You're welcome!\" Brooke shot back, cheerfully, sticking her tongue out at our girlfriend.\n\nJosie raised her middle finger to Brooke. \"Regardless, that doesn't explain what the fuck Ryan meant when he said 'but'.\"\n\nRight. That.\n\nI pulled my hand from under Brooke's skirt. She quickly grabbed it in her small, strong hands, licking her juices from my fingers luxuriantly. Though the feeling and the sight of her sucking my fingers deep got me rock hard, I needed to focus.\n\n\"The only thing that might mess things up is it being the end of the month,\" I said.\n\nJosie caught on fairly quickly to what I was insinuating.\n\n\"Ah,\" Josie said. \"Right. I've heard of better excuses, but that's not a terrible excuse.\"\n\n\"What does that have to do with anything?\" Alice asked.\n\n\"Jess Garza,\" I explained. \"One of the girls I'm tutoring. I promised her that if she improved her grades, that I'd, uh, rock her world.\"\n\n\"And have her grades been improving?\" Alice asked.\n\n\"Big time,\" I admitted. \"I don't know if she'd come and collect today, but-\"\n\n\"Knowing Jess, she'll collect ASAP,\" Josie said.\n\n\"And you know Jess?\" I asked.\n\n\"Some; Mia and I bum some weed off her sometimes. She's cool, but if she wants something, she's taking it,\" Josie said.\n\nI didn't think she was wrong about this; Jess was a fun-loving and amicable skater and stoner, but I'd come to learn that when there was something she was enthusiastic for she basically became the Juggernaut. Nothing would stop her. As a pretty hot Latina with shockingly great curves under her less than flattering clothes, and one I'd found to be both nice and really fun, I normally wouldn't have minded this, if only it wouldn't mean, you know, losing a night with Josie, Brooke and Alice.\n\n\"So... yes, if that is what happens, or when that happens, I have my doubts about my availability today,\" I said, letting the disappointment seep into my voice.\n\nJosie nodded. \"Yeah, that'll probably happen. She's a tight slut, hope you two have a lot of fun.\"\n\nThough Josie said this with a harsh tone, I could see her lips curling into a smile at the edges in the mirror. Though she loved to give me a hard time, she was having fun with me and would no doubt be begging me for details of what it was like between Jess and me.\n\nWe pulled into the school's parking lot. A little huffy, Alice said, \"Well, bully for you, then. You were starting to sell me on just some after-school sex.\"\n\n\"Ya know if Ryan's busy, like, we can totally have some fun of our own,\" Brooke said, straightening herself out to look at least a little more presentable.\n\n\"Doing our hair and watching movies?\" Alice joked.\n\n\"I was thinking of heading down by the community college,\" Brooke said. \"They got this sex shop nearby with, like, everything cheap and they got these changing rooms that got, like, glory holes in them that only really bring in these neat and clean college guys, and it's, like, totally fun. Kaitlyn and I go there and get all messy every so often, it's pretty fucking sweet.\"\n\nAlice cocked her head. \"Interesting. Enticing. Sounds fun!\"\n\nAs Josie pulled into a spot, I said, \"Well, whatever you three settle on doing, take pictures and have a lot of fun, okay?\"\n\n\"Hey, you're the one abandoning us. You'll be lucky if we even give you stories about the shit we got up to,\" Josie said, shutting down the car and opening up.\n\n\"We'll totally take pictures and tell you what we did,\" Brooke whispered proudly.\n\n\"Well, you girls be safe and suck a lot of cocks and have a lot of fun then,\" I joked.\n\n\"You know we will,\" Brooke said, kissing me again quickly.\n\nI stretched when I got out, slinging my backpack over my shoulder. I took a moment to kiss Josie and Brooke before we began to spread our separate ways into the school. With my hand still covered in Brooke and Brooke's saliva, I knew my first stop was going to be a bathroom where I'd-\n\n\"Ryan!\"\n\nA meek voice called out for me. I turned my head and saw a girl running toward me from the bike racks. With pale skin and dressed in paint spattered overalls and a blue t-shirt, her dark hair pulled back into a ponytail and big brown eyes looking out from behind her glasses, Jennifer Cage ran at me with a bit of a nervous smile on her face. I didn't know her very well, other than her being a bit of a nerd and fairly artsy, and that she was fairly invisible around school, but she always seemed nice enough. The last time I'd seen her she almost caught Brianna Roth and me in one of the school's art rooms, but we'd been lucky enough to avoid an interruption.\n\nHanging around the bike racks, I couldn't help but think she might have been waiting for me where I'd usually be pulling in.\n\n\"Hi, uh, Jennifer,\" I said. \"I'm in a bit of a rush. I need to hit the restroom before class.\"\n\nI didn't have to tell her it was to wash Brooke's pussy off my hand.\n\n\"Oh, I understand, I should be getting to class too... but I was wondering if I could talk to you about something today? Something important?\" Jennifer asked.\n\n\"What kind of important?\" I asked.\n\n\"It's, uh... difficult to explain...\" she said nervously, looking down at the ground. \"And probably not something that we should talk about here, especially if you need to run, because I don't want to make you late or anything, but I feel like I need to, and-\"\n",
        "I didn't know her well, but it still felt bad to cut her off. The bell ringing, however, made that a bit necessary. I asked, \"Can we discuss this later?\"\n\n\"Oh... sure,\" she said, a little deflated. Jennifer pulled out her phone and handed it to me. \"Can you input your number? In case I need to get in touch with you and you're unavailable?\"\n\n\"Sure,\" I said, adding my number to her phone very carefully so as to not spread Brooke's juices on it. There was something off, and a little odd about her. I'd fulfilled a lot of odd requests for women since the beginning of this school year, but I'd only rarely gotten the impression that something was being hidden from me. There was something more to what Jennifer wanted to talk to me about, more than just something about sex (because I wasn't completely blind), but I couldn't quite put my finger on it. It wasn't worrying... but it had me curious.\n\n\"Thanks,\" she said, looking at me nervously before darting away.\n\nSighing and smiling, I followed her into the school, ready to see what the rest of the day had to throw at me.\n\nHonestly, I didn't know that the answer to that was going to be, \"A lot.\"\n\n***\n\nWith what I needed to accomplish during lunchtime, I was glad I packed one that could be eaten quickly. I polished off my sandwich, chips and soda in a few minutes and headed over to the Puma Press offices to see what a newly returned Nadia Barclay had to unleash upon us.\n\nI wasn't alone.\n\n\"B-plus? Not bad!\" I said as I looked at Peter Nixon's history test.\n\n\"I was thinking of calling it pretty fucking great, but I guess I can deal with 'not bad'. Mrs. Lynn said I showed great improvement. I owe a lot of that to you, man, so, thanks,\" Peter said, smiling down at me with his big, joyous grin.\n\nNow, of all my odd friendships this year, Peter Nixon had to be one of the strangest. Peter was large, muscular, black, and popular, one of our school's star football players who actually had something to boast about when it came to on field skill. Devastatingly handsome and a major ladies man, I used to avoid him simply for being one of the popular kids, and then for being friends with my old bully, Kyle Bowman. Tutoring him in history had revealed him to be surprisingly kind and thoughtful, a young man who wanted to graduate on something more than just his skills on the football field in spite of his dyslexia.\n\nI didn't have many guy friends this year, but I knew Peter was a pretty good one to have.\n\n\"Well, pretty fucking great is a much more accurate way to describe it,\" I admitted.\n\n\"See? That's what I'm talking about. Don't hold back, man, just go for what you want to say and say it. Confidence! It's a beautiful thing, isn't it?\" he replied.\n\nI laughed. \"I'm working on it.\"\n\n\"A r\u00e9sum\u00e9 like yours and you're still just 'working on it'? You and me, we gotta hang out some time. You've taught me some lessons, now it's my turn to teach you something,\" he said.\n\nNot that I didn't think he could teach me anything, since Peter was always something of a high school philosopher, but still I asked, \"And what've you got to teach me?\"\n\n\"That you're more than you think you are, Ryan. You still think you're the same skinny nerd that everyone convinced you you were, but you're not that guy anymore. You've done things, seen things that barely anyone gets to experience in a lifetime, and you should own that! Face it, Ryan, you're actually pretty cool, now,\" Peter said.\n\n\"Me? Cool?\" I said, looking out across the quad in disbelief. At a statement like that I nearly expected to see all eyes in school on me, but the only person who looked back at me was Jennifer. I couldn't help but think that she was waiting for me again, but when she ran away that thought fell apart.\n\n\"Not cool like everyone would think of it, because everyone's definition of cool is determined by a pop culture and media that don't really know what it really takes to be cool, but, yeah, I'd say you're definitely pretty cool. You're smart, sometimes you're funny, and your way with the ladies goes beyond a guy who's blessed downtown,\" Peter said, his eyes dropping to what was in my pants for emphasis. \"You're pretty cool, believe it or not. Now you just gotta believe it.\"\n\n\"That's easier said than done,\" I said.\n\n\"You've internalized a lot of shit. I can see that. We all do. Lord knows I have. For the longest time, I thought all I had was a good smile and some serious football skills because that's all anyone ever told me I had. I thought I was happy with that, but I wasn't. Ever since I realized I wanted more, that I wanted people to appreciate me for being more than strong and charming and good-looking, I've been happier with myself. I was well on my way when we first started working together, but now? You've helped me, I want to help you,\" Peter said, smiling warmly.\n\nThat... well, that touched me more than I thought it might. Peter was right, that I had internalized a lot of bad feelings about myself, feelings that others at school and in life had encouraged, and that even though I was happier than I had ever been at school, I could be happier if I got rid of some of those toxic thoughts I still held onto about myself.\n\n\"So... what have you got for me, Cool Sensei?\" I asked.\n\nPeter laughed. \"Cool Sensei... I like that. And what I've got is more than I can teach you in the next thirty feet. It's mostly talking, let's build your confidence, make it so you talk like you know you're worth as much as you are, maybe we can talk about your clothes...\"\n\n\"What's wrong with my clothes? I like my clothes,\" I said, clutching at my sleeves. I was wearing my usual jeans and graphic tee with a light jacket to keep out the modest chill in the air, and on the surface it didn't feel like I was dressed any different than Peter. He had jeans and a t-shirt too, and sure, his looked nicer because they probably were nicer, and sure most things would look nicer on a guy like Peter and... okay, fair enough, he may have known what he was talking about.\n\n\"And there's nothing wrong with someone having a style that suits them, I'm just saying that we can add to your wardrobe instead of replacing it, you know? Help you look a little cooler, impress the girls even more than you already have? Seal some deals, open some doors... keep your own style for most of the time, I'm just helping you in those times when a little style will come in handy, show them your appreciation when they get all nice and dolled up for you...\" he said.\n\nPeter was smooth, I had to give him that. I know a few of the girls I'd been with had offered me some fashion advice, but I'd always tried to hold on to my own style. Maybe Peter was right.\n\n\"Sounds like an idea,\" I said as we reached the Puma Press offices.\n\n\"Good. We'll talk, soon,\" he said, playfully clapping me on the back with one of his big, strong hands. \"And thanks again for the tutoring. I'm liking seeing these grades go up.\"\n\n\"Hey, you earned it, remember,\" I said.\n\n\"I do,\" Peter said, walking away, grinning proudly. \"Oh, how I do.\"\n\nSmiling, I took a breath and stepped inside the Puma Press' offices.\n\nI was expecting a scene of tightly packed, low-key chaos now that Nadia was back.\n\nI wasn't wrong.\n\nAs ever, the room was small and packed, claustrophobic in a busy way that would've really gotten to me if I hadn't spent so much time in here getting used to it. Most of the action seemed to be around the far corner of the room near the dark room, where a cluster had gathered around a pair of computers. I recognized the pair sitting at the computers as Nica Dubois, the slender assistant editor of the paper, and Hope Harris, the lanky brunette band geek and writer for the paper. Standing over them were Josie, who looked at me and rolled her eyes, and Nadia. The beautiful black editor of our school paper and I had had our share of memorable encounters in this very room, but when it came to crunch time, she was a force to be reckoned with, and one whose way you generally wanted to get out of.\n\n\"I'd grab a seat and stay out of this if I were you,\" a cool, calm voice said from behind. \"Perhaps get away while you still could.\"\n\nI looked at the speaker, and found sitting in a chair at one of the desks beside me 18-year-old Leah Sartori, another of our paper's photographers. Olive-skinned and with short, wavy black hair with bangs in the front, she was definitely cute in a bohemian sort of way, 5'4\", tight-bodied and dressed in comfortable jeans, a t-shirt and cardigan. With a small septum piercing and black-painted lips, she's easy to first take for a goth girl, but as an out and proud Wiccan, it was easy to see the other signs, the bracelet of crystals and hematite, the pentacle necklace with a couple nice points of amethyst on either side of the star. We hadn't had much time to talk while on the paper together, but, I'd found her a relaxed presence in a generally stressful place.\n\nI followed her advice, taking a seat next to her while the meeting with the others went down.\n\n\"How bad is it?\" I asked.\n\n\"It would depend on your definition of bad,\" Leah said, turning her chair to face me. \"On a cosmic scale, it's not much to get worried about, lost like dust in the wind, tears in the rain, whichever metaphor suits you best, but if you're in Nadia's shoes, it's close to the end of the world.\"\n\nI couldn't hear what they were saying in their corner, but the body language told me the same story. I said, \"You miss almost a month of school, a lot can happen.\"\n\n\"Oh, definitely,\" Leah said, kicking her feet up on the desk once certain that Nadia couldn't see her. \"January has been a most chaotic month in general, hasn't it? A month of aimlessness and false starts, the kind of month where adventures are had but were uncertain to what end they might be?\"\n\nThat... well, that sounded correct. Almost too correct. Rather than say anything, I simply nodded.\n\nLeah laughed lightly. \"I could go on for ages about planets and moons and explaining how their positions may or may not have led to the strangeness and scattershot path of January, but then I'd be rambling, and who wants a rambling witch?\"\n\n\"I don't mind one,\" I said.\n\n\"*I* mind one,\" she laughed again, tilting her head back cutely. \"February's going to be better. I sense a definite order to things, one that might require a little help, but that's what us helpful types are around for, isn't it?\"\n\nLeah raised an eyebrow at me. I said, \"I'm not sure I know what you're talking about.\"\n\n\"And I'm sure you do,\" she replied. \"You're a helper, Ryan. You help those who need it, when they need it, with whatever skills you have in your arsenal. I find it admirable. I try to help how I can, when I can, and more often than not I've found it doesn't blow up in my face.\"\n\n\"More often than not?\" I asked.\n\n\"Well, we can't always succeed, can we?\" Leah asked.\n\nI spotted a figure slinking out from the Dark Room, the office's photo lab and quiet hangout that I'd had a few fun exploits in. I didn't have to see more than the shock of red curls that quickly ducked down between the tables to know that Tori McNeil was very much trying to avoid Nadia.\n\nI sighed. \"No, we can't.\"\n\nShe crawled in front of Leah and me, keeping low between the tables and quickly looking over her shoulder toward the meeting where Nadia was, before looking back at us.\n\n\"Don't let her know I was in here?\" Tori asked us.\n\n\"Never,\" I said.\n\n\"Your secret's safe with us,\" Leah said, amused.\n\n\"Thanks,\" Tori whispered. \"Nadia thinks I'm late on some projects that Nica gave me more time on to approach more thoroughly, so... I'm dodging her until they're done.\"\n\n\"We've got you,\" I said.\n\nGrateful, Tori looked up at me and repeated, \"Thanks.\"\n\nQuickly, she crawled toward the door and made a quick escape outside.\n\nSmiling, Leah said, \"It's good to see the two of you getting on better.\"\n\n\"It's better to be better. At least, more civil. December... was hard. January's been a little better,\" I said.\n\nLeah nodded knowingly. \"New year. New beginnings. The chance to make it the Fool's Month if you really wish for it to be.\"\n\n\"The Fool's Month?\" I asked. I couldn't understand why anyone would choose to start their year as a fool, but Leah was the kind of girl who had her own reasons and understanding for most things in our world, I'd found.\n\n\"Not an official term, just something I dabble with. Words have a power, I try to... sculpt them, embrace them accordingly,\" she said, nodding at me knowingly. \"The Fool is the first card of the Major Arcana, and is only a fool for not being changed by the journey they've yet to take. They may start a chaotic, confused individual, but they are one who will soon find their purpose and guidance. What may have felt chaotic and uncertain may only reveal a path ahead that feels all too clear, so long as the Fool is brave enough to take those first steps. Depending on your deck, that first step may be off a cliff, but sometimes it's worth it.\"\n\n\"That's...\" I didn't know what that was. I wasn't much of a believer in anything terribly spiritual, but the easy, confident way Leah spoke of it I couldn't help but be a little drawn in.\n\nLaughing nervously, she said, \"I've just... yeah... I like to look into these sorts of things if it wasn't obvious already. Of course, that's only one interpretation, there are a lot of ways of looking at any card.\"\n\nLacking an easy response and sensing her nervousness, I tried to show her I wasn't weirded out by what she'd said, \"Has it been a good Fool's Month for you?\"\n\n\"I think it has,\" she sighed pleasantly, smiling at me brightly. \"I've been doing a lot of soul-searching, a lot of consideration of how I want to handle the rest of senior year... and I think I might have figured out what I wish to do with the rest.\"\n\n\"Yeah?\" I asked.\n\n\"And perhaps there might be a part for you to play as well,\" she said mysteriously. \"We shall see what happens as we transition from the month of fools into the month of lovers, no? February is just around the corner, after all.\"\n\n\"Ryan? Leah?\" Nadia called out, waving us over.\n\n\"Good luck,\" I whispered to Leah as I stood up.\n\n\"And to you as well,\" Leah replied, gently grasping her pentacle.\n\nThe two of us got up and walked over toward Nadia's corner. While Nica stayed with her, Josie and Hope walked toward us on their way out of the room.\n\n\"She's not in as bad a mood as she seems, but it's still not great,\" Josie whispered as she passed.\n\n\"Thanks,\" I whispered back.\n\nNadia wasn't looking at her happiest as she stood over Nica, but Nica, as nearly-unflappable as ever, sat in her seat beaming up at me.\n\n\"Ryan, Leah, thank you for coming in for this check-in,\" Nadia said.\n\n\"What? You don't want to start with the good news first?\" Nica replied, smiling.\n\n\"There's good news?\" I asked.\n\nNadia didn't exactly scowl, but she did something a lot like it. \"I was going to get to that.\"\n\n\"Ah, but if you begin with good news, then whatever follows is easier to swallow. Haven't you watched Mary Poppins?\" Nica chided.\n\n\"What good news?\" Leah asked.\n\n\"More for Ryan and me than you, but good news all the same,\" Nica said smugly, pulling a certificate from beside her computer. \"You and me, Ryan, we got an award.\"\n\n\"An award?\" I asked, surprised. I didn't think any of the school newspaper writing competitions Nadia wanted to win were until the end of the year.\n\n\"It's nothing official,\" Nadia grumbled, snatching the paper from Nica's hands. \"I just wanted to show appreciation for the hard work you two put in while I was out sick, and I might have had a moment of feeling cheesy that I'm suddenly regretting...\"\n\n\"Regret nothing! It is an award! Ryan and I won, we shall enjoy it, shan't we, Ryan?\" Nica said, smiling proudly.\n\nI shared her pride, because such praise from Nadia wasn't exactly common if it didn't involve some quality sex first. That wasn't a criticism Nadia, but more a matter of how serious she took the dealings at the Puma Press.\n\n\"I'll enjoy it,\" I said.\n\n\"Feel free to enjoy it later, now I would greatly like some updates as to what everyone has been keeping up to while I was out,\" Nadia said. Nadia had been keeping up with most of us while she was out sick, and though she may have been out of commission for a couple weeks, you couldn't tell it now for how fiercely she'd jumped back on the horse.\n\n\"If you're asking if I've been keeping up on my sports photos, I have. It's not my favorite, but you know I'm good at it,\" Leah said confidently.\n\n\"She is,\" Nica said.\n\n\"I know. I want to see what you've taken while I've been out,\" Nadia said. \"Upload them to our Google Drive?\"\n\n\"Already done,\" Leah said, sounding nice and smug.\n\n\"Excellent. This is why I love working with you, Leah. And you, Ryan? What's happening in the world of Current Events? Our class president caught doing anything impeachment-worthy?\" Nadia said, her tones equal part joking and hoping that I potentially had found something that fun.\n\nUnluckily for her, our class president, Sabrina Singh, was an overachiever and straight arrow of the highest order and unlikely to have found herself in the midst of that kind of scandal. I did have something, though, from my recent experiences that might have interested her.\n\n\"Well, I've gotten a line in with the drama department recently, there's apparently some drama going on behind the scenes with the spring musical,\" I said.\n\n\"Oh?\" Nadia asked. \"Do tel-\"\n\nWith a cacophony that sounded like the end of the world at our gates, the door to the Puma Press offices slammed open across the room from us, and a voice exuberantly shouted, \"A-FUCKING-MINUS, RYAN!\"\n\nIn the silence that followed, you could have heard a pin drop as all guests turned to our newest guest. Nadia looked at me disgruntled, while the other members of the team looked back and forth from me, to the room's invader, to Nadia, wondering what was going to break first.\n\nSmiling sheepishly, I turned my attention to the figure holding the door open.\n\n\"Hi, Jess,\" I said as inevitability crashed down all around me. Though I'd tensed up upon her initial devastating entry, now I was more relaxed.\n\nOver the last month that I'd gotten to know 18-year-old Jess Garza, I'd known her to have two settings. Affable stoner who enjoyed a good laugh and stirring the pot, and a 5'2\" freight train of energy and enthusiasm that you couldn't hope to contain any more than you could contain an earthquake.\n\nToday she was in freight train mode. The Latina skater was dressed in her usual old hoodie, torn jeans and knit cap, backpack over one shoulder and skateboard tucked under her arm, but none of these could hide how hot she was. Her hoodie was unzipped enough to show off her DD tits hidden behind a tight, midriff baring shirt that displayed a fair stretch of her soft brown cleavage, while her jeans could barely contain her impressively wide, round ass. Short, dark curls hung out from underneath her knit cap, framing a cute face with big eyes and a proud smile. She bounced on her feet, barely able to contain her energy, and when I saw the test she held in her hand with an A- written on top of it, I knew why.\n\n\"Congratulations,\" I added.\n\n\"Thanks!\" Jess exclaimed.\n\n\"Can you step outside, please? We're having a discussion,\" Nadia said, not quite scowling but getting closer by the second. Nica and Leah at least seemed amused by this.\n\n\"And I'm supposed to have a fucking discussion with him too, but probably a way more interesting one because it involves us mixing good grades and sex, ain't that right, Ryan? You made a promise, and it's time to pay up because I got a motherfucking A-minus, bitches!\" Jess declared, not caring for even a second about how flush my face was getting in front of my colleagues.\n\n\"We got that, but good on you,\" Nica said, smirking.",
        "I had to nip this in the bud before Jess said anything else that could be embarrassing. I stepped away from Nadia and the others. \"I should take care of this.\"\n\n\"See that you do,\" Nadia said. \"And text me about your line on the musical.\"\n\n\"I'll do that,\" I said, heading toward the exit with Jess. I was eying her up and down, and from her pretty face with eyes that checked me out to the way she cocked her hips slightly to the side, I knew that sex was the only thing she had on her mind. I'd come to like Jess a lot during out tutoring sessions, finding her a confident and fun-loving girl with some well-internalized self-esteem issues, and once she was able to get past some of those mental blocks about her own academic potential, she had a good head on her shoulders.\n\nI liked her, but that didn't mean I wasn't a little intimidated by the enthusiastic Latina skater, because with energy like hers, I knew I had my work cut out for me when I had to make good on my promise. I'd seen her nearly naked before, briefly stroked her pussy even, and I believed her when she said that she knew how to really fuck.\n\nI was intimidated, but that didn't mean I wasn't looking forward to it.\n\nThe moment we left the Puma Press offices behind us, Jess grabbed me by the wrist and practically took off running, dragging me across the school.\n\n\"Wait, you want to... now?\" I asked as I kept up with her.\n\n\"Uh huh!\" she acknowledged. \"You promised me that you and me were gonna fuck if I made it to the end of the month with improved grades, and you can bet your sweet ass I improved my grades. You can see it here, you've seen it before, I'm improving, and you and me, we're gonna fuck!\"\n\nJess did very little to lower her voice, getting a handful of strange looks from other students as we passed, but to those who were familiar with one or either of us, it didn't seem like they were that surprised.\n\nI was a little confused, but remembering Jess' body and curious to see how accurate her boasts were, I couldn't help but start to harden in my pants.\n\n\"You're not gonna hold back on me, are ya, Ryan? Because I know you're not a guy who holds back. I mean, yeah, the first thing you did was hold back when I was offering to fuck away this tutoring, but ever since, you seem to be the kind of guy who throws himself into what he's doing. So, you're not holding back, right?\" Jess asked enthusiastically.\n\n\"I wasn't planning on it,\" I answered.\n\n\"Good. Because I like to fuck and I like to be fucked and I like it all hard, and if you hold back on me, well, that wouldn't be cool, man. That wouldn't be cool and you wouldn't like it, so, you're not holding back, I'm not holding back, let's make some sweet fucking music,\" she said, finally dragging me out across the quad, past one of the school buildings and toward the parking lot.\n\n\"Where are we going?\" I asked.\n\n\"My van. Nice and private, got A/C, tunes, and a mattress in the back,\" she boasted, taking me over to a white, windowless van that looked a few steps away from being one that a creepy-looking clown would offer candy out of the back of.\n\nStill, I'd hooked up in stranger places.\n\nLooking around to make sure we hadn't been spotted, she unlocked the back doors and swung them open, ushering me inside. I climbed into the van, and though I was dropped into near pitch darkness when she closed the doors behind me, that didn't last long. She climbed into the front, flipping a switch that lit up criss-crossing strings of Christmas lights she'd strung across the van's ceiling, creating a messy starfield. A couple mystery straps hung from the ceiling as well, but I was sure that she had her reasons for them. The walls were decorated with posters for various metal and punk bands, while a small shelf along the left wall held a number of tools, spare skateboard parts, and an impressive collection of differently sized bongs. True to her word, most of the floor behind the driver and passenger seats was taken up by a mattress, with a sheet that actually didn't look too dirty. If I didn't know any better, I'd say she cleaned up for the occasion.\n\nIt was dark, cramped, and smelled heavily of weed, but seeing Jess' broad smile as she turned back to look at me more than made up for any discomfort. Though there was definite lust in her eyes, I could see the pride in her accomplishment in the smile as well. Knowing where this was heading, I pushed my backpack into a corner and took off my shoes.\n\n\"You got no idea how happy I am now,\" Jess said, climbing back between the seats.\n\n\"I think I got an idea,\" I said.\n\n\"No, no, I don't think you do, I don't think you can,\" she said, sitting down at the head of the mattress and working at taking off her boots. \"You've, like, always known you're smart and can do all this stuff in school. I never got that. I mean I knew I wasn't dumb, I've never been dumb, but I've only ever been able to do so much and everyone's only ever thought that I could only do that much and not much more and... ya know if you hear it enough, you start to believe it, right?\"\n\nI knew that well. I'd been told that I was only ever going to be one kind of person for so much of high school that I never imagined this side of me could be possible. At the beginning of the year I had assumed this only to be a me thing, but the more I got to know more people around here, I'd come to see how many of us were dealing with the same problems, just in slightly different flavors.\n\n\"Well, do you still believe it?\" I asked.\n\n\"Nuh uh,\" she said, pulling off her knit cap and shaking out her curls. \"I'll never be valedictorian, but I don't think I'm gonna give up so easy just 'cause I think I can't be any better at something.\"\n\n\"Good. I'm glad to hear that,\" I said, pulling off my socks.\n\n\"It's like... I started taking tutoring because I thought I could improve enough for sex, and now I'm happier for how I did than the hard dicking I'm gonna get,\" she said, unzipping and removing her hoodie.\n\n\"Yeah? Really?\" I asked.\n\n\"Well, like, 60-40, but it's close. Don't mistake me, though, I'm fucking horny, and I wanna see what you got,\" Jess said, crawling over to me on all fours. I was granted a fantastic view down the deep canyon of her soft brown cleavage, her lively, horny eyes every bit as ready as her full, moist lips. She climbed over me, straddling my hips as she pressed her full and very soft tits against my chest.\n\n\"So, I love to talk as much as anyone, but there's a time to talk and a time to fuck. Yeah?\" Jess asked.\n\n\"Yeah,\" I replied.\n\n\"Good,\" she said, pulling out her phone and swiping a couple times, kicking in the opening notes of \"You Shook Me All Night Long.\"\n\n\"AC/DC?\" I asked.\n\n\"The best,\" she confirmed, reaching down for the base of her shirt. \"Almost as good as these, even.\"\n\nWith that, Jess smoothly and quickly pulled her shirt over her head, tossing it aside and giving me a nice, close-up look of her firm, round and completely bare DD's. Clearly Jess wasn't one to overprepare when she was going to get lucky. Her skin was immaculate and even softer-looking up close, her thick, hard nipples surrounded by a dark, palm-sized areola that begged to be sucked on. She looked so achingly hot, her eyes staring up at me with want while her moist lips curled into an enthusiastic grin.\n\n\"Not bad, eh?\" she said.\n\n\"Not at all,\" I replied, kissing her full lips. Jess proved an enthusiastic kisser, her lips running all over mine as her tongue darted into my mouth, wrestling with mine. She tugged at my shirt, pulling it over my head and throwing it to the side as she ground me in time with the music. I reached up, cupping her breasts, squeezing them and pinching her nipples as she groaned against me. She humped against me needily, her crotch rubbing against my erection through our pants.\n\nThough it seemed like she might have been able to pull off my pants with her hips alone at the rate she was going, it would've taken too long for her. She reached for my belt and undid it, pulled down the zipper, and began to pull my pants down. It was awkward in our current position, but her enthusiasm would not be held back. I arched my back against the wall enough to get my ass off the mattress, enough that I could pull my pants down to my thighs and finally releasing all ten inches of my thick cock from their confines.\n\nJess backed off enough, then climbed off of me and knelt on all fours with her face by my cock, taking it all in.\n\n\"Oh, fuck yeah,\" she said, looking it up and down. \"I hear a lot of people talking about how big your cock is, but... fuck, I need this down my throat, now.\"\n\nJess leaned in, parting her lips slightly and wrapping them around the head of my cock. I groaned, already in heaven as she began to lavish attention on the cockhead, running her enthusiastic tongue in circles around it. With a hand barely wrapped around the base, she held me like this, suckling and licking at the head like a lollipop and driving me fucking wild.\n\nAnd then, at once, she dropped down and managed to suck all ten inches into her mouth and throat. Her nose was buried in my pubic hair as she easily deepthroated me, gagging only slightly before she came up for air, then dropped back down, sucking almost my entire length with every bob. When I first met Jess about tutoring, she'd boasted that she was really good at fucking, and while I might have took her at her word, I didn't know that she was this good. Holy fuck, did she know how to suck cock. It was messy and loud, even loud enough that I could hear her over the music, but I didn't care. My cock was just bathed in hot, tight pleasure, and Jess knew how to treat me right.\n\n\"Oh... fuck...\" I groaned, running one hand through her hair while I cupped one of her breasts in the other.\n\n\"Yeah? I told you I was good,\" Jess said, her breathing ragged as she still vigorously jerked my slick cock. \"And they told me you were good, so, matched set.\"\n\n\"Wh-wh-who told you about me?\" I whimpered, barely able to control myself for the amazing handjob she was giving me.\n\n\"Word gets around, and there's a lot of people whispering about the nerd with the huge cock slinging it around to all the girls in school,\" Jess said.\n\n\"Not all of them,\" I corrected.\n\n\"I know, but... I've heard it directly from a few people who claim to have firsthand knowledge. Izzy. Mia. Sarah. Josie has a lot to say about you. Even Kaitlyn got to admitting it to me when we got to racing around the track. And they're just the ones who actually claimed to be with you. There are girls I know lining up to get in on that action who just haven't had it in them to make a move yet, Cara, Doreen, Bev, Olivia... it's more like, who doesn't want a ride on Ryan Collins' cock? But it's mine now, mine, mine, mine, and I'm gonna have fun with it,\" Jess said, inhaling me once again.\n\nI liked a nice, sloppy blowjob as much as the next guy, but I don't think they came any sloppier or more intense than what Jess was giving me. I could feel her saliva dripping down my balls as she forcefully sucked me. She gagged and she choked, but that didn't hold her back for even a second as she inhaled my cock. I definitely was enjoying myself, but I wanted a little more than that.\n\nGrabbing a handful of her curly hair, I pulled her head off of me. A long string of drool connected her mouth to the head of my cock, and her tongue kept reaching out to get good lick at my cockhead.\n\n\"Awww, come on!\" Jess protested, the string of saliva snapping.\n\n\"Love the enthusiasm, but today's your victory. You earned this, and I want to make you feel good,\" I said. \"Take off your pants.\"\n\n\"Oh. Okay!\" Jess said, her eyes brightening immensely. She got up on her knees beside me, turned away and pulled off her pants and panties. Jess looked over her shoulder, making a show of it as she freed her round, delectable ass. As she slowly bent over, pulling her pants off and tossing them to the side, I followed her lead until we were both naked. On all fours, she bent down beside me, showing me her beautiful, soft and nicely rounded ass, her tight winking asshole and the full, dripping pussy lips beneath it.\n\nIt may have been the blowjob talking, but I couldn't recall ever having seen anything quite so sexy in that moment.\n\n\"So, what do you think?\" Jess asked, looking over her shoulder at me and smirking smugly.\n\nI didn't have anything to say to that, so I didn't. Instead, I pushed her face down into the mattress, thrusting her ass out even more dramatically. Then, I did what came naturally. I slid two fingers into her cunt, and then bent down and buried my face into her ass. I worshipped her tight little asshole with my lips and tongue, running tight circles over her forbidden hole.\n\n\"Oh, fuck! Holy fuck! Oh god, like that, like that, eat my fucking ass, Ryan! C\u00d3METE CULO! Fucking hell, lo quiero adentro!\" she groaned as I fingerfucked her and ate her ass.\n\nI'll admit that I was caught up in the moment, and I may not have been at my most skilled, but this wasn't a skilled fuck. Neither of us was trying to impress the other or ourselves, we knew what we were capable of and what we wanted out of this. This was just time, plain and simple, for the two of us to fuck each other in as dirty a fashion as we could, and with most of my face having disappeared into her ass, I think we managed that well. That didn't mean I wasn't fingerfucking her to the best of my ability, but I was more distracted by running my tongue over her asshole, digging, pressing within.\n\n\"Ahhh, that's something all you white boys like, you like that hot, Latin ass, don't you? Oh... fuck... you know how to treat it well, Ryan, I'll- MIERDA!\" she yelped, pounding her fists on the mattress.\n\nYup, that was the sound of my tongue sliding into her asshole. I thrust in and out of her for a little while with my tongue, alternating it in time with my fingers in her cunt, and Jess was wild. She groaned and battered at the mattress, her pussy flooding with juice in anticipation of more. Jess got wet, fast, the intoxicating aroma of her cunt wafting up to my nose. I wanted some of that on my tongue as well and, fuck, I wanted all of her. Jess and I had been building for a while now, and it was fun to finally let loose on each other.\n\nJess forced herself to her hands and knees and pushed my head from her ass.\n\n\"Enough foreplay. I wanna fuck,\" she said, guiding me to lie down on my back. Jess bent over momentarily, making out with me deeply, not caring for a second for where my tongue just was as we made out and I squeezed her nipples. Then she reached up, grabbing one of the straps hanging from the ceiling and swinging slightly so her other hand held onto the other strap.\n\nThis finally gave me a good look at her engorged, soaked pussy lips, a landing strip of jet-black pubic hair on above it. Parting her legs as she lowered herself, I got a view of the tattoos she had on her inner thighs, a pair of ornate, Dia de los Muertos calaveras, one on each thigh. Each skull was entwined with a crown of bright, vividly colored flowers, making them stand out beautifully on her skin. Whoever did those had to have gotten up close and personal with her pussy, which no doubt was a story unto itself.\n\nWith that, she pulled herself into a position where she was poised above my cock, hanging from her van's ceiling straps as her pussy was only perhaps an inch or two above my cock.\n\nI'd never seen straps used that way, but I was excited that Jess seemed to know what she was doing.\n\n\"You'll need to do the aiming like this, 'kay?\" Jess said.\n\n\"On it,\" I replied, grabbing my cock and aiming it at her pussy lips. Slowly, smiling proudly, Jess began to lower herself until her lips grazed up against my cockhead. Then, with only a little resistance, they began to part for me, enveloping me in a sweet, hot tightness.\n\n\"Oh, fuck!\" I groaned.\n\n\"You're telling me! You're not trying to shove this beast cock inside of you... motherfucker!\" Jess said as she began to lower herself down onto me. She was tight, she was hot, and she was very, very wet, but unlike most girls who took it slow, she pretty much attacked my cock. Once she had a few inches in and it was clear that she wasn't going to hurt either of us, she began to drop more quickly, first taking a full half of my length, then settling down entirely on my cock a few seconds later. Her eyes bugged out and her mouth dropped open. Her arms tensed against the straps that held her up and her legs clamped around me tightly.\n\nAnd she screamed, oh how she screamed.\n\n\"HOLY FUCK! QUE GRANDE LA VERGA! You're gonna break me, fuck, so fucking big, this was a bad idea... this was an AMAZING idea... oh fuck... I need to fuck you... god yes...\" she rambled, her eyes rolling back as her mouth opened in a great, broad smile. Without any prompting, she began raising her hips and dropping them down on my cock, squeezing me and riding me so exquisitely that, after her blowjob, I feared I wouldn't be able to last too long for her. I mean, I knew it was lunchtime and that we didn't have a lot of time to spare, but it was something that she'd been looking forward to for a while (and if I'm being honest, I was too), and I wanted to make it good.\n\nSo, with all the restraint I had, I held the cum at bay.\n\nTo call the effort Herculean would have been an understatement. Jess was riding me and riding me hard, shaking the entire van as she braced herself with the ceiling straps and rose up and fell down on me. Every time she took almost my entire length it felt as if I were being dropped into a brand new, impossibly tight hole, every square inch of her milking me as if she desperately needed my cum. I watched her great ass jiggle and flex every time she slammed down onto me, her tits bouncing wildly for control. Her entire body was a perfectly honed sexual engine, and I was merely lucky to be in her presence, let alone in this capacity.\n\nI was holding back, but I was going to have fun.\n\nI reached up, cupping her bouncing tits and squeezing them firmly. I found her nipples and pinched them, making her squeal as she continued to ride me. I thrust up into her, wanting to get in as deeply as possible, enjoying how her eyes either jolted out or rolled back every time I bottomed out inside of her warm, perfect cunt.\n\n\"Oh, fuck, yeah, you're a good fuck Ryan, fuck, one of the best... you put the guys here to shame, I'll tell you that, and I know I've just had your cock and your mouth so far but I know, I can tell, you're gonna be great... you're gonna be a lot of fun... we can get up to a lot of fun together... holy fuck, chingas mi co\u00f1o... how do I stack up, huh? You got a lotta pussy from a lotta sluts around here... how's skater cunt match up?\" Jess said, looking down at me proudly as she continued to ride me savagely.\n\nI let my hands drop down to her hips so I could better thrust back into her, squeezing her ass and getting an amazing view of her bouncing tits. Smiling back, I answered, \"You're fucking amazing and you know it. You're fucking hot, so fucking tight... you're damn good.\"\n\n\"The best,\" she corrected.\n\n\"Damn good,\" I shot back.\n\n\"Oh, that's a challenge, huh?\" Jess said, fucking me even harder.\n\n\"Yeah,\" I admitted. Jess was a girl who seemed to live for challenges, and if it's one that got both of us pleasure, well... I wasn't going to *not* challenge her.\n\n\"That a problem?\" I asked her, challenging her further.\n\n\"Nuh uh. You don't think I'm the best, I wanna show you I'm the best, I think we're at a good place here to settle that,\" Jess said, riding me even harder. How she had the stamina to do this with all the weed she smoked was beyond me, but I was definitely curious to see how far she could go.\n\n\"I'mma gonna show you what some real good pussy can do. Everybody's got their own tricks of the trade, and while I don't got any special moves or distractions or anything like that, I can fuck harder, longer, than any other bitch around here you're gonna find,\" Jess said confidently.",
        "\"I dunno, I've been with a lot of girls, a lot who think they're the best and they can fuck me the hardest, and they've delivered...\" I said.\n\n\"Maybe, and maybe if you sit down and rank us I won't top out, but right now isn't that ranking time, right now it's you and me, and I've got you buried in my cunt, and I'm gonna do everything I can to make sure you don't forget me... you're not gonna forget this body... my dirty fucking mouth, my perfect fucking cunt, and this ass that'll swallow anything you give it whole... I'm gonna milk you dry until you're spewing cum deep inside of me, and then I'm gonna suck out even more because I'm just that good,\" she groaned, disentangling herself from the straps so she could drop down on me. She still rode me hard, but now dropped one hand to work over her clit, while another squeezed her right tit.\n\nJess wanted to get off. That was comforting, since I was damn close myself. We would cum together pretty soon, that much was obvious, and when we did it would be hard.\n\nI groaned as she squeezed me, and Jess smiled. \"You like that, huh? You like being squeezed dry in my tight Latin cunt, huh? Tired of all the white bread sex you get around this school when you could've had the real best in me. So why don't you do it? Why don't we do this together... why don't you just fucking cum for me, make me scream and make me cum and fill me up until we're both a nice, juicy, sweaty mess... do it, Ryan, cum for me... cum in my tight, hot cunt... cum for me... cum for the best...\"\n\nShe was almost whispering at this point, and I was almost beyond words with her... fuck she was hot. She was so damn hot and I was so fucking horny, and both of us were so close to the edge. I thought it would've taken an act of god at this point to stop me from cumming.\n\nInstead, all it took was someone pounding on the outside of the van.\n\n\"GARZA! I KNOW YOU'RE IN THERE AND I KNOW WHAT YOU'RE DOING!\" a harsh, female voice yelled out.\n\nJess' eyes went wide, and this time not in a good way. \"Oh, shit! It's Officer Brandy!\"\n\n\"Officer Brandy? Like school security Officer Brandy?\" I asked, fear flooding my body.\n\n\"Yup. My archnemesis,\" Jess said as she climbed off of me. I let out a disappointed whine at my orgasm being prevented, but fear has a way of helping you reprioritize fast. I didn't know much about Officer Brandy and hadn't even seen her on campus, but had heard rumors that she was one to watch out for.\n\n\"DAMMIT, GARZA, I TOLD YOU NEVER TO PULL THIS SHIT AGAIN!\" Officer Brandy exclaimed, pounding on the side of the van. \"GET OUT OF THERE AND MAKE THIS EASIER ON YOURSELF!\"\n\n\"We're in trouble?\" I asked, getting a sinking feeling in my gut.\n\n\"I've been in trouble before. We don't have to stay in this kind of trouble,\" Jess said, heading to the driver's seat and turning off the music. While I'd started getting dressed, she didn't seem to feel under that same obligation.\n\n\"How?\" I asked.\n\n\"I've got a plan,\" she said, turning the engine on and immediately sending the van jolting backward. I could hear Officer Brandy shouting outside, but it didn't sound like she was in any danger, more like she was exceptionally pissed with Jess. Jess turned the van around and drove away quickly, hastily looking at her mirrors. I was rolling around the back, falling around the mattress and holding on for dear life as I desperately tried to get dressed.\n\nJess frantically drove us away for a few minutes, not stopping, not looking back.\n\nAfter it didn't seem like it was going to end, I carefully crawled up toward her.\n\n\"What's going on?\" I asked.\n\n\"I've got stuff in here she can't find,\" she said, motioning back toward the bongs. \"Can you get me a shirt?\"\n\nI found her shirt and gave it to her. Skillfully, she pulled it on over her head as if she'd done this plenty of times before.\n\n\"And now she won't find it because you ran away? That's your plan?\" I asked.\n\n\"It's worked before! Better to run away and get in trouble for ditching school than getting caught for bringing drugs to school, right?\" Jess asked.\n\nShe had a point. \"So... we've ditched school?\"\n\n\"I can circle around, let you back in when you're dressed,\" Jess said, looking back at me with concern. I felt touched by the offer, but that wasn't something I could accept. She was having a great day, and I couldn't let her be in trouble.\n\n\"I'm not going to leave you alone,\" I said.\n\n\"I can take care of myself,\" she replied.\n\n\"I know, but I've seen you through things this far... I'll take care of this,\" I said.\n\n\"How?\" Jess asked, looking both worried and a little relieved.\n\nI didn't have a good answer for her, but an idea quickly formed. \"I might have a plan too...\"\n\n***\n\nThere was once a time when I used to fear getting in trouble more than anything else. I didn't want to be the guy who broke rules and got in trouble like everyone else, so I toed the line as well as I could. While I still tried to do that these days, it only took the occasional sexual encounter at school or with a married woman to guarantee that my days of 100% following the rules were long behind me.\n\nAnd so, as much as I tried to follow the rules, I wasn't as nervous about breaking them as I used to be. Back at the beginning of the year, I'd have been freaking out like crazy if someone had dragged me along with them outside the school. Now, I was thinking of plans to avoid both of us getting in trouble.\n\nIt involved having friends in both high and low places; I could provide the high, Jess could provide the low.\n\nI had made enough friends of teachers this year that it wasn't difficult to call in a few favors and get a grapevine among them started by Mrs. Lynn, Mrs. Addams and even Mrs. Harker. I'd earned enough goodwill that I could ask them to vouch for both Jess and me, and inform the rest of Jess and my teachers for the day that we were to be marked as \"in\". This wasn't a card that I could play often, but it seemed a good moment to use it. Combined with messages to Brooke and Josie begging them to pick up both of our homework for the rest of the day, Jess and I were pretty well covered.\n\nThen, so we wouldn't get busted by anyone that Officer Brandy was likely to call, we needed a place to lie low until school let out. With Jess' van not exactly being subtle, we couldn't just drive around until day's end or hide at either of our places. And so, we wound up driving to an apartment complex on the other side of the local community college that might've looked new and clean sometime back in the late 1960s.\n\n\"So, what's her name?\" I asked as we walked through the complex.\n\n\"Lana. Lana Granger. She's cool, mostly,\" Jess said.\n\n\"And she's your weed dealer?\" I asked.\n\n\"Yup,\" Jess replied.\n\n\"You do know weed's legal in this state now, right?\" I said.\n\n\"Yeah, but... why spend full price when you can pay less? Lana's a college student, works at a dispensary and manages to get her hands on a fair bit that's 'fallen off the back of a truck' that she sells on the side. It's not always the best quality, but it's a good price. Gets the job done. She's an amazing baker, too, so good, even when it doesn't have bud in it. And I've done enough favors for her that she's always a solid crash house,\" Jess explained.\n\nThough this sounded like it could get dicey, it could have been a lot worse.\n\n\"And what do you mean by she's mostly cool?\" I asked.\n\n\"Well... she's from Texas originally, moved out here because, you know, legal weed, and she's high almost as often as she isn't, so, she can get a little... interesting... sometimes,\" Jess explained. We walked up a set of outside stairs to the apartment complex's second floor, overlooking a pool that was well past needing some landscaping on the plants that surrounded it, but with otherwise clean-looking water.\n\n\"Sometimes?\" I asked.\n\nWe walked up to a door, and Jess knocked on it. She explained, \"Well, kinda all the time. But it's always fun, I swear!\"\n\nWe stood waiting at the door for a good long while, me feeling more nervous by the moment as we were out in the open. The few people we'd seen around the complex barely looked interested enough, and surely we weren't the oddest people to ever come to Lana's door, but...\n\nJess knocked again, louder and more insistently. I could hear movement inside, a faint voice saying, \"Coming, I'm coming, keep your tits on\" before the telltale sound of a number of locks being undone hit my ears, and the door swung open.\n\n\"Hiya, Jess!\" the woman I took to be Lana said in what was a lazy, somewhat faded Southern drawl. She was short at about 5'4\" and petite, a slender young woman in her early 20s. Her skin was pale and quite freckled, especially on her pointed, pixieish face that went well with the long, wavy red hair that cascaded down to her lower back. Time in the sun had faded much of its lustrousness to a pale strawberry blonde, but with her freckles, big blue eyes and paleness she was no doubt a real redhead. She greeted us barefoot at the door in cutoff jeans so short they barely covered her nice round butt, a faded, tight tank top that showed off her small B-cups (and that she wasn't wearing a bra either), and I kid you not, wearing an honest to god cowboy hat.\n\nJess' description began to make sense.\n\n\"Hey, Lana. Is James in?\" Jess asked.\n\n\"James? Naw, he's in classes 'til real late,\" Lana clarified, smiling lazily.\n\n\"James?\" I whispered to Jess.\n\n\"Lana's fianc\u00e9e, he's kind of a dick,\" Jess whispered quickly to me.\n\n\"Awww, he's a sweetie-pie, he just doesn't understand a lot of the finer points in life,\" Lana said, waving us inside her place. It was a small, one bedroom apartment, with a cramped living room to one side, kitchen to the other, and a small hallway that no doubt led toward the bathroom and bedroom. With a perpetual hint of weed in the air and a TV blaring cartoons, this was... well, pretty much exactly what I expected, actually.\n\n\"Like pot?\" I suggested.\n\n\"Yeah! How'd you know?\" Lana asked, her smile stretching into a wide and goofy grin.\n\n\"Lucky guess,\" I said.\n\n\"So, you're sure we're okay to hang out here for a few hours?\" Jess asked.\n\n\"Oh, yeah, definitely, mi casa es su casa and... yeah, that's how it goes,\" Lana said, looking around confused. \"Got a bunch of baked goodies in the fridge, and drinks, just don't eat anything wrapped in the blue cellophane, that's... that's special...\"\n\n\"Got it,\" I replied.\n\n\"Hey, I'm gonna use the bathroom,\" Jess said, pulling me down for a kiss. \"And don't think I've forgotten where we left off.\"\n\nIt was kind of hard to forget where we'd left off. My balls were still swollen with need after what we'd done in the van, and even the slightest touch of her lips was enough to get me fully hard again. I shuffled around uncomfortably, readjusting myself as she walked down the short hall.\n\n\"Well ain't you two just so damn cute. Grab a seat, lemme bend your ear while she does her business!\" Lana said in her cute drawl, motioning for me to sit on the couch. I did as suggested, taking a seat on one end while she grabbed the opposite side of the couch, both of us sitting facing the TV. The cartoons were brightly colored and nonsensical, but at least they were muted.\n\nShe picked up a ceramic pipe from the ash tray on the coffee table before us and tilted a lighter into it, igniting the material inside before lifting it to her lips for a long inhale. She held it in for a while, before exhaling, a rather pleased look crossing her face.\n\n\"Oh, where are my manners?\" she said, offering me the pipe. \"I got some edibles too, if that's more your speed.\"\n\nMy experiences with marijuana were limited, but not wholly negative back when Tori and I used to hang out. I didn't like the taste, and smoking felt like I was inhaling a brushfire, but it kicked in faster and didn't fuck me up nearly as much as edibles did. Figuring I hadn't much to lose at this point, I accepted the pipe and took a hit. It definitely burned going in, but I held on as long as I could before letting go in a heavy coughing fit.\n\nLana giggled. \"Don't smoke much?\"\n\nCoughing, I handed the pipe back to her and asked, \"How'd you guess?\"\n\n\"Oh, I got an eye for these things!\" she said, taking another deep inhale. She passed the pipe to me, and though I wasn't looking forward to the burning, I knew the buzz would be worth it. I pulled in a breath and held it with the greatest effort, and then...\n\nWell, then I was swimming. It was very, very nice, actually. Anything resembling worry had gone away, and I just couldn't stop smiling. It was a wonderful, silly place to be, and though movement felt like one of the hardest things in the world, it felt pretty wonderful to be on the couch.\n\nAnd maybe it was that and a mix of being horny, but I had to say that Lana was looking pretty good, too, in a white-trashy sort of way.\n\n\"So... Jess tells me you go to college?\" I asked.\n\n\"Yup,\" Lana said without elaboration.\n\n\"What do you study?\" I asked.\n\n\"Oh, uh, yeah, right!\" Lana replied, giggling. \"Business. It sounds soooooooooo, fun, I know, but I'll be really good at it. That's how James and I met, he's so cute, and he's in marketing. Put the two of us together, bam, good sex, and we'll run a solid business or two or six, I'd say.\"\n\n\"Lemme guess... dispensaries?\" I asked.\n\nLana laughed. \"If I have my way.\"\n\n\"Will you?\" I asked.\n\nShe shrugged. \"Who knows. Let's see how things go after we're married. Even though it doesn't make a lotta sense with our majors, he's more the money guy, I'm more the idea one... but I think I can get him to think like me better then.\"\n\nFrom my limited relationship experience, I had my doubts that that was how things worked, but since she might've thought differently of things when she was sober, I wasn't going to say anything about it.\n\n\"So, Jess tells me that you're tutoring her in... something?\" Lana asked, frowning in confusion.\n\n\"Something, yeah,\" I said, my words seemed to swim from my mouth slowly in a way that took my mind a moment to catch up with. It reminded me of what I both liked and didn't like about weed, but landed more on the liking it side as I just couldn't stop smiling.\n\n\"Whatever it is, you got her real proud. Like, Jess is cool, and she's usually happy, but you got her, like real happy. She says ya made her smarter. I think you just brought out the smart that was already there. That's pretty darn cool to see,\" Lana said, reaching for a bag of candy on the table. She quickly scooped a few gummy worms into her mouth and began to chew.\n\n\"I'm happy to see her happy, she worked really hard,\" I said.\n\nLana giggled. \"But that's not the only thing that's hard, right?\"\n\nI shifted in my seat. I really couldn't hide how hard I was, so after a moment of attempted readjustment, I decided that I didn't need to readjust. \"Yeah, Jess and I were... interrupted at school.\"\n\n\"Oh, you guys didn't finish? That's so fucked up,\" Lana said, her voice a little sad.\n\n\"It's alright,\" I said.\n\n\"No, it's not alright! Jess is so cool, and so fun, and you... I don't know you, but she talks about you real good, she really likes ya so you gotta be sweet and cool and all that, and she says you're hung like a horse... you're hung like a horse, right?\" Lana asked.\n\nMy tongue was apparently rather loose from the weed, as I acknowledged, \"I got a pretty big dick.\"\n\n\"Really, how big?\" Lana said, deeply curious.\n\n\"Big,\" I said, with no small amount of pride.\n\n\"Can I see it?\" Lana asked as if it was the most natural question in the world.\n\n\"Aren't you, like, engaged?\" I asked, trying to shake my head clear and finding that thoroughly difficult to do.\n\nLana twisted a ring around her finger, but her smile was still goofy. \"Yeah, but he ain't here now, and you are, and it's not often a girl gets to see a dick like what I hear you're packing. And if that's all it is, a little show-but-don't-tell... I won't tell him if you don't.\"\n\nIn my stoned mind, that sounded like as good a logic as any, and with her looking so cute and expectant, it would've felt pretty bad to say no to her.\n\nSo, I didn't. I undid my belt and unzipped my jeans, then fished my cock out of my pants and let it stand at attention. Though I'd cleaned Jess off of me already, I'd been so hard off and on during our flight over here that I was already leaking copious precum.\n\nLana's jaw dropped when she saw it. \"Wow!\"\n\n\"I know,\" I replied.\n\n\"I mean... that's huge!\" she exclaimed.\n\n\"I know,\" I repeated.\n\n\"I mean... fuck, that's bigger around than my wrist, and those balls, man those are some nice-sized balls... you must cum like a fountain,\" she said.\n\n\"I do,\" I admitted, having my fun exposing myself to this college student as she practically drooled over me.\n\n\"I mean... how do you even fit that inside a lady, that's just... wow...\" Lana said, in a kind of awe that couldn't help but fill me with pride. My cock twitched, and if it were capable of growing any more, it might have under her appreciative gaze.\n\n\"With difficulty, but it's a really fun kind of difficulty,\" Jess said, reentering the room. Without needing any prompting, she grabbed Lana's pipe and took a puff of weed, holding it in for a long moment before exhaling. Her face almost instantly relaxed.\n\n\"But you guys didn't finish? You should really finish. Finishing's good for you and healthy and all sorts of fun. Use my bedroom. You guys can, like, fuck and get it all out of you what you need to get out but couldn't get out earlier and, it'll be fun,\" Lana said, lingering on each word as if it were part of a truly profound, world-changing speech.\n\nI was definitely in need of a good cum. I looked up at Jess and asked, \"You wanna?\"\n\n\"I wanna,\" she said without any hesitation, grabbing me by the wrist and helping me stand. I wasn't sure my feet would carry me, but we only had to make it down a hall, right? With my cock already out and leading the way, that didn't sound too hard to me, not one bit, no sirree... (Okay, maybe I wasn't that great with weed after all)\n\nWithout much prompting, Jess took my cock in hand and practically used it as a leash to guide me down the hall. She stopped, only briefly, to turn back to Lana.\n\n\"You wanna watch, don't you?\" Jess asked.\n\n\"I don't need to watch,\" Lana said, noncommittal and giggly.\n\n\"You don't need to, but you wanna? It's not like the first time you've ever seen me do it; you always wanna watch the sex that goes down here,\" Jess said.\n\nLana frowned comically, but that frown soon turned into her big, goofy smile. \"Yeah, I wanna watch. I mean, it's like porn, only better!\"\n\n\"You want her to watch?\" Jess asked me.\n\n\"Oh, yeah,\" I said.\n\n\"Good,\" Jess said, kissing me sweetly. \"Come on, Lana, I don't know if we're up for showy, but you get to watch us fuck.\"\n\n\"I am soooooooo gonna be masturbating to you two,\" Lana promised, getting up on unsteady feet and wobbling toward us eagerly.\n\n\"Why am I not surprised?\" Jess replied with a laugh, guiding me into Lana's bedroom.\n\nJess easily shed her clothes as we walked down the short hall, and though I wasn't nearly as graceful or experienced of stripping while walking and a little high, when we both reached the bedroom in the nude, I wasn't in a position to complain. Not when I had Jess naked again, and not when we were both desperate to finish what we'd started. The bedroom matched the rest of the apartment, small and dim, oddly decorated and smelling of weed, but with a king-sized bed in the middle it looked about as close as you could get to the promised land.\n\nStanding at the foot of the bed, I embraced Jess and made out with her, crushing our naked bodies against each other as our hands roamed, exploring and caressing, squeezing and just having all sorts of delicious fun. Out of the corner of my eye, I caught sight of Lana taking a seat in an old, worn chair in the corner of the room, unbuttoning the front of her cutoffs as she watched the two of us go at it.",
        "\"Mmm, he's got the skinny nerd thing goin' on, but he's still a cute one, and that cock... mmm, that's some quality meat there, I'll tell ya what now,\" Lana said as she watched us.\n\nBreaking the kiss, I said, \"What about Jess? She's hot too.\"\n\n\"Thanks,\" Jess said, pulling me into another deep French kiss.\n\n\"Oh, Jess knows she's hot, and that I know she's hot, I didn't think I needed to tread over that territory again. But you know I think you're a total hottie, right, Jess? I wish I had tits like yours...\" Lana said, idly running some fingers over the stiff nubs pointing through her tank top.\n\n\"I know, but it's always fun to hear it,\" Jess said.\n\nPlayfully, I pushed her onto the bed, enjoying Jess' squeal. I approached her as she crawled backwards up the bed, crawling between her legs and parting her thighs with my hands.\n\n\"I'm going to eat your pussy now,\" I said, licking my lips. I might not have had the munchies yet, but seeing her soaked, full lips just glistening and begging for a mouth on them, I felt utterly and completely famished.\n\n\"Oh, fuck yeah!\" Jess exclaimed.\n\n\"That's an 'oh, fuck yeah'?\" Lana mused, still playing with her nipples as if she'd never found a more fun toy. \"I mean, I like getting my pussy eaten too, but, that was kind of a big wow sorta response you gave there.\"\n\n\"I'm good at eating pussy, like, really good,\" I said, enjoying the surge of confidence my high gave me.\n\n\"A lot of guys say that,\" Lana said.\n\n\"I don't think he's lying,\" Jess replied. \"I've heard it from a lot of girls that he's supposed to be- CHINGAME!\"\n\nI couldn't recall enough of my Spanish to know just what Jess was saying, but I got the impression she liked what I was doing to her pussy with my mouth. With how sensitive both of us were after our interrupted encounter in her van, it wouldn't have taken much for me to make her cum right then and there. I could've given her half my usual effort and had her gushing on my face in no time, but that wouldn't do now, would it?\n\nNo, not when I could give her so much better than that. I was giving Jess my best efforts, licking and sucking at her lips before rolling my tongue leisurely over the firm nub of her clit. I kept it nice and slow, though, taking my time and savoring her taste, inhaling her scent, getting her nice and eager without pushing her over the edge. It made her into a mewling, cursing and moaning mess, grinding her hips against my face but finding no mercy from me.\n\nI wanted her primed, but she wasn't going to cum until I wanted her to.\n\n\"Wow, that does look like fun!\" Lana marveled, her hand now down her cutoffs and rubbing herself slightly. \"Is he as good as advertised?\"\n\n\"Better...\" Jess whimpered, running her hands through my hair. \"Oh man... I don't think my cunt's ever been treated this nice... fuck yes... l\u00e1meme co\u00f1o, like that, fuck... please...\"\n\n\"You like the way I eat you out?\" I teased her.\n\n\"I think that's pretty fucking obvious,\" Jess groaned, grabbing a handful of my hair and pushing me back into her pussy.\n\n\"Obvious, but awesome!\" Lana declared. \"Keep going! Get her off!\"\n\nWith one long, last, lingering lick, pressing between her folds before giving one last circle around her clit, I came up for air. \"I will, but I had... an idea...\"\n\nJess whined, wanting more of my mouth, but as I crawled over her, kissing my way up her belly, to her tits, suckling briefly on each of her perfect and thick nipples, and then to her mouth. Finally, I climbed on top of her, lining up my cock with her pussy once more. We looked into each others' eyes, a silent understanding of what we needed after we were interrupted by school. There were no interruptions, no worries now, just the two of us and this bed, and, okay, maybe Jess' dealer watching us, but she was cute so neither of us really minded.\n\nWith a hiss and a moan, I slid once again back inside of Jess, sheathing myself deep in her pussy until she'd taken my entire length.\n\nThe weed had me feeling slightly sluggish, but everything at once felt a whole lot better, too. It was easier for us to get lost in each other, focusing solely on the simple joining between us and how amazing it felt. I began to thrust into her slowly, watching her face get washed over with pleasure again and again as I thrust into her. In someplace very far away, I'm sure Lana was giggling and talking to us, trying to offer commentary that neither of us cared to hear. This was only me and Jess, two bodies joined in one, having fun, smiling, and looking for the release of pleasure that both of us had been seeking for some time.\n\nIt could have been only a couple minutes, it could have been a couple hours, but thrusting away on top of Jess and hearing her moans fill my ear became my world. Her big, joyful eyes looked at me with great need and lust, her smile transforming with each thrust. Her breasts pressed into my chest were nearly as intoxicating as the way her cunt gripped my shaft, embracing me, teasing me, urging me onward.\n\nJess swung her legs around my ass and locked them in place.\n\n\"Do it... faster... harder... fuck me... so close...\" Jess groaned, looking deeply into my eyes.\n\n\"Me... too...\" I groaned, pumping into her harder.\n\nShe pulled me in closer for a kiss, then whispered in my ear, \"Then... fuck... do it... fuck me, Ryan... fuck this slutty cunt and fill me the fuck up...\"\n\nThe way she nibbled on my ear, I wasn't sure I had much choice in the matter. Though the weed had dulled me somewhat, I was definitely feeling the need for that one, final release. I fucked away at Jess harder, so hard the bed began to knock against the wall. My ass was a blur, the entire length of my cock sliding in and out of her with each thrust. I felt her tense up as my own body felt a great building of pressure.\n\nAnd then what needed to happen, happened. I thrust into her deeply, one last time bottoming out inside of her. The dam broke.\n\n\"Ooooooooh yeeeeeeeeeeeeessssssss!\" Jess cried out, tightening and tensing, her legs wrapping around me even harder as she pulled me in deep with orgasm. \"Thaaaaaaaaaat's iiiiiiiiiiiiiiitt, right there... fuuuuuuck... esto se siente bien, tan jodidamente bien...\"\n\nI grunted, loudly, as my body was overwhelmed by a long, deep orgasm, seemingly a firehose of cum firing into her. The pleasure and the weed swirled together in an intoxicating cocktail, my body sluggish but overwhelmed by the sensory input. I was floating. I was in heaven. Every last thrust spilling cum deep inside of her bringing me to another plane of existence entirely. There's every chance I might have blacked out there for a moment from the pleasure that overtook my body, but once my vision cleared, I looked down into the beautiful, sweet, smiling Latina face of Jess Garza, her short, curly hair splayed about her hair in a halo of filth. She felt like perfection in that moment, and I couldn't hold back from kissing her, the two of us making out long and deep and very, very wet.\n\nSo, maybe there was something to occasionally skipping school after all.\n\n\"THAT! WAS! AWESOME!\" Lana declared from her chair. The two of us turned lazily to look at her as she pointed at us, her face overtaken by a very goofy, very sweet smile. \"You two, you can, like, wow, fuck! It's pretty great... fucking awesome... and did he actually cum inside of you?\"\n\n\"Yeah...\" Jess said, smiling more than a little smugly. \"A whole lot, too... I'm fucking full.\"\n\n\"That's... that's cool... but aren't you, ya know, worried about... ya know, gettin' knocked up and all that? 'cause that really seems like a lotta fuckin' cum,\" Lana mused, sounding more philosophical than worried.\n\nWhile under the influence of a drug that could very easily make one quite paranoid, I think I acquitted myself well under the circumstances, rolling off of Jess and laying on my back next to her as we both caught our breath.\n\n\"Not really,\" Jess said, her fingers toying with the pooling cum that leaked from her gaping pussy. \"You look at it on a large enough scale, this isn't that kind of town, and this isn't that kind of story. Give us a more serious story, and there might be consequences; I mean, how many people at our school oughta be pregnant by now 'cause of Ryan? He cums like a fire hose. But this isn't that serious a story, this is just... fun, you know?\"\n\nI had no idea what she was getting at, as my mellow from the cum and the weed had me quite drowsy and floaty and very easily confused, but she seemed confident enough.\n\nI wasn't alone in my confusion. Lana barked a laugh. \"The fuck are you talkin' about? You are wasted.\"\n\n\"I am not wasted yet. I am buzzed. I am looking forward to being properly baked, though,\" Jess clarified.\n\n\"And how's Ryan, there? You doin' alright there, buddy?\" Lana asked.\n\n\"I'm... good...\" I said, holding a thumb's up to her.\n\n\"Got anything I can smoke?\" Jess asked.\n\n\"Sure,\" Lana said. \"In the usual spot.\"\n\nI couldn't help but notice that she still had her hand down the front of her pants. Was it possible that she'd cum when neither of us were paying attention? I doubted it. Her skin was still fairly flush, but I'd found that redheads got that way pretty easily. She and I both watched as Jess got up from the bed, cum dripping down her legs as she walked toward the front room.\n\n\"Hey Jess, can you toss me my phone?\" I asked.\n\n\"Picture time?\" she asked, smirking, finding my pants on the ground.\n\n\"Picture time,\" I said, smiling.\n\nJess took my phone from my pocket and tossed it to me, crossing her arms under her tits while throwing up devil horns with her hands and spreading her legs in the doorway. Sticking her tongue out like she was screaming enthusiastically at a concert, it was a perfectly lewd picture to add to my album.\n\n\"Thanks,\" I said, putting the phone on a nearby bedside table.\n\n\"Hey, we'll get more before this day's over, believe that,\" Jess said, walking from the room.\n\nBriefly alone, Lana and I looked to each other, our eyes meeting curiously.\n\nWell, for a moment anyway. Lana's eyes soon went to my cock. She licked her lips.\n\n\"What's this about a picture album?\" Lana asked, looking at my cock.\n\n\"Something... something the first girl I got with this year started. She took some pictures while taking my virginity and... it became kind of a tradition, so... keeping, like, a collection of my 'Senior Year Memories',\" I explained.\n\n\"Senior Year Memories?\" Lana asked, amused by the name, her hand still not out of her pants.\n\n\"Her idea, not mine,\" I said, looking Lana up and down. She was breathing heavily, her skin flush from whatever excitement she'd gotten from our show no doubt. The two of us sat here like this for a good long moment, looking at each other and wondering just what was going to happen.\n\nLana bit her lip. \"That was... a mighty fine display you two put on. You sure know how to show a girl a good time. And that cock... holy hell, that's something else...\"\n\nFollowing the momentum of the conversation, I considered how to play this best. Finally, I said, \"You wanna touch this cock, too?\"\n\nLana paused. \"I dunno... I really shouldn't... I mean, it looks tasty and all that, but... James and all that, ya know?\"\n\nI could tell she was nice and horny, and my cock was already coming back to life. \"Are you sure? How often do you get to see a dick this big in person? I'm not saying you have to go do anything crazy if you don't want to, but if you want to touch it, I won't say no.\"\n\n\"I dunno...\" she repeated, though she still had that broad, goofy smile that made her confusion all the more adorable.\n\n\"If you want, I'll totally eat your pussy, too. If it goes further than that, hey, that's up to you, but if you want me to eat your pussy, I'll eat your pussy,\" I said.\n\n\"Yeah?\" she said, biting her lip.\n\n\"Yeah,\" I repeated.\n\n\"Welp!\" Lana said, standing up. \"That seals the deal, then!\"\n\n\"It does?\" I asked. I was expecting a little more coaxing first. I knew she was definitely down, just trying to talk herself into this, but I didn't know her well enough to know what language would and wouldn't work. How readily she made up her mind was surprising, but welcome.\n\n\"Yup! Who doesn't love a good little bit of cunnilingus, amIright?\" Lana intoned. Her legs were a bit wobbly, but she was steady enough as she reached down and pulled her shorts and panties to the floor, exposing her pussy to me. She was completely shaved, and like many a redhead I'd known had very prominent, very, very pink lips. They protruded ever so subtly, and already glistened with her juices.\n\nThat was enough to get a mouth watering, if I must say so myself.\n\n\"Ya like mah cunt?\" Lana asked, leaning a little more heavily into her drawl as she reached down and played with her lips. \"I have a lot of fun with it. I think you will too. I mean, you and Jess, that was somethin' else. I want a piece too.\"\n\n\"Well, then get over here,\" I said, sliding over on the bed and allowing her some space.\n\nSmiling her goofy grin, she climbed over onto the bed and leaned over to kiss me. Her kisses were light and fun and tasting heavily of weed, but in my state that wasn't the worst thing to have to deal with. She was enthusiastic, maybe even a little messy as her tongue jumped into my mouth, but she was definitely fun to kiss.\n\n\"Mmmm, you are a sweet one, but I wanna see that tongue in action. Well, feel it on mah cunt, ya know what I mean!\" Lana said, getting up on her knees beside me. Up close... well, her pussy lips did look rather delicious. I could smell a fair bit of her musky arousal, mixed with a scent that I knew to be weed. I doubted I could get high just by eating her out, but it seemed like if it might happen with anyone, Lana would be the one to make it happen.\n\nJess reentered the room with a pipe in hand and a very satisfied smile on her face. Looking at the two of us, she commented, \"Nice butt, Lana. You giving in to Ryan's charms?\"\n\n\"Oh, entirely!\" Lana exclaimed.\n\n\"Good move. You'll have fun,\" Jess said, walking over and plopping herself down in Lana's chair, spreading her legs to show off her well-used pussy while she got high.\n\n\"Consider it payment for you smoking me out of my stash,\" Lana replied, looking down at me. Her face was undeniably on the cute, pixieish side, an impressive contrast to a girl whose naked pussy was only a matter of inches from my face.\n\n\"Sounds like a deal,\" Jess mused, taking a puff.\n\n\"Good, 'cause I'm gonna sit on his face!\" Lana exclaimed, swinging a leg over my head and dropping her pussy down onto my mouth. I was right, she did taste of pussy and weed, but honestly, I didn't care. She felt good, and I would never turn down my mouth on a good pussy like this.\n\n\"Ride 'im, cowgirl,\" Jess joked with a cough.\n\nHer lips parted easily for my tongue, and she tasted exactly like I expected. It was a different sensation than I was used to, but every girl had her own taste, and Lana's was far from a turnoff. I rolled my tongue slowly over her lips, circling it over her clit before pressing it inside. Lana groaned, then laughed, throwing her head back. Not far back enough to throw her hat off her head, but enough that I felt her hair pool on my stomach.\n\n\"Oh, yes yes yes, that's iiiiiiiiiiiiit.....\" she said, laughing pleasurably. I looked up as she ran her hands up her flat stomach and up to her breasts, squeezing them playfully as she ground her hips against me.\n\n\"That's some good shit, right?\" Jess asked.\n\n\"That might be the best... my word... fuck...\" Lana groaned, rocking her hips against my face playfully as I continued to eat her out. She was giggly, and she was more than a stranger to me, but she was enthusiastic.\n\n\"You know if you turned around, you could see his cock nice and close up, right?\" Jess suggested. My cock twitched at the thought, and if I didn't have a mouth full of pussy right at that moment I probably would have thanked Jess for the suggestion.\n\n\"Oh, wow, you're... fuck, you're right! Stupid, stoned little me!\" Lana giggled, climbing off of my face for a moment, only to turn around and settle her pussy back down on my face in reverse cowgirl.\n\nWait a second, I had an actual cowgirl sitting on my face.\n\nWere I capable of laughing instead of having a mouthful of cunt, I would've laughed, but that's not how things shook out. Instead, my eyes were now consumed by Lana's tight ass, her cheeks spreading ever so slightly as she bent over me and giving me a wonderful view of her asshole. This, or perhaps it was more of her laughter, encouraged me to keep eating as she shook and squealed against me.\n\n\"How's your deep-throating?\" Jess asked, coughing lightly on another puff of smoke.\n\n\"It's pretty good... never had anything this big... but what the fuck, I'll try,\" Lana said, kissing my cock all over with her same giggly enthusiasm, briefly suckling on my balls before planting one big, enthusiastic kiss on the head. Then the kiss became something more as she opened her lips up for me, taking my cock into her mouth an inch at a time. Her mouth was rather amazing, her tongue playing all over my cock as she swallowed more and more. Though I could feel her close to gagging, she easily took the last few inches in, my balls resting against her nose as the entirety of my cock was buried deep within her mouth and throat.\n\nI felt her giggle around my cock, but the vibrations were quite nice.\n\nArching her back slightly, she soon began to bob up and down on my cock while I continued to lick and suckle at her pussy. She began rocking her hips against my face enthusiastically, and though it was difficult to keep my glasses on and keep up with her rocking, I think we both managed pretty well. Her mouth felt more magical by the moment, taking a lot of my length in at once before pulling out almost to the head before swirling her tongue around it and dropping all the way back down again. There were times when she would have to come up for air, coughing and gagging, but then she went back to our 69 with her same giggly enthusiasm as we both sought to pleasure each other.\n\n\"Mmm, fuck, I should've gotten me some of that shit,\" Jess said, watching us and laughing softly to herself. I couldn't see her, but I knew then that she was fingering herself. Well, if she was watching, I'd give her a fun show.\n\nI grabbed Lana's ass roughly and pulled her down onto my face, hard, licking and thrusting my tongue into her energetically. She squealed around my cock, rocking her hips against my face so hard I thought she might knock me out, but she was definitely happy for the attention. Looking up, I watched as Lana flexed her ass cheeks with every bounce, showing me her tight little asshole with every movement. Taking a guess, I ran one of my fingers through her pussy juices, then pressed it against her tight hole.\n\nShe groaned around my cock, making a noise that very well could have been \"mhm\". I took that as a good sign, and began running it in little circles around her asshole. Lana squealed and giggled around my cock, rocking her hips even harder, practically forcing my finger inside her on her own. I did give it a little pressure, but with Lana doing much of the work, I was kind of just along for the ride as this horny redhead rode my face and shoved my own finger up her ass.\n\nLana was greedy, but damn it if she wasn't good at sucking cock too. If I hadn't already put a good load deep inside of Jess, I probably would've already shot down Lana's throat by now. Instead, I got to feel her body tensing as she rode my face harder and harder, her moans and giggles around my cock becoming more tentative between breaths. She was close, but I was going to take her further.\n\nSuckling on her clit and running my tongue over it in nice, tight circles, I then slid a second finger up her ass. Twisting them around in her oh so slightly is what finally took her over the edge. Her body jolted, and she practically screamed around my cock as she sucked me in deeper, almost desperately trying to pull out any little bit of cum that she could. While I didn't have that for her, I kept pleasuring her pussy and ass, enjoying as the orgasm rolled through her body.",
        "Though it still had her shaking, Lana soon came up off my cock, her hat still impressively on her head as she giggled, \"Oh, wow, oh wow, that was... wow...\"\n\n\"I told ya,\" Jess replied.\n\n\"I wasn't sayin' I doubted ya,\" Lana replied, moving off of me slightly, still shaking on the bed next to me. I could finally see Jess again, who was touching herself with one hand while taking another hit with her other.\n\nCoughing slightly, Jess asked me, \"How's her mouth, Ryan?\"\n\n\"It's... really fucking good,\" I admitted.\n\n\"Really? Ya think?\" Lana said, turning around on the bed so she was now facing me. She kissed me with stars in her eyes, gently stroking my cock with her hand. \"This cock's somethin' else too. Biggest I ever set eyes on.\"\n\n\"Thanks,\" I replied. \"Eyes aren't the only thing you set on it.\"\n\n\"That's true!\" Lana laughed, continuing to stroke me slightly.\n\n\"You know, if you think that was fun, you should really try stuffing your pussy with it. It's... amazing,\" Jess said.\n\n\"Thank you,\" I replied, smiling at her.\n\n\"No prob,\" Jess replied.\n\nLana bit her lip. \"I... I dunno... I mean, mouth stuff is one thing, everybody does mouth stuff, but the whole cock in pussy game... my word, I dunno...\"\n\n\"Oh, what's the big deal? This really isn't *that* far off,\" Jess said.\n\n\"It's still a pretty big fucking deal,\" Lana said uncertainly, looking down at my cock and biting her lip again. Looking back at Jess, she asked, \"Gimme a hit?\"\n\n\"Sure,\" Jess said, walking over and placing the pipe in Lana's mouth. Lana took a deep lungful, held it in for a while, and then released it. She looked at me curiously, smiling her goofy smile and looking down at my cock.\n\n\"You need to cum, don'tcha?\" Lana asked, her eyes never drifting from my throbbing cock.\n\n\"Yeah... I'm getting there,\" I admitted.\n\nLana screwed up her face in deep concentration as she tried to figure out how to solve this dilemma. She probably would have been able to solve it more quickly if she hadn't been so high.\n\n\"Well, how about... maybe I finish blowing you, you cum in my mouth and all that? You like my mouth, I like cum, we'll all be happy,\" Lana proposed.\n\nI looked to Jess, who had a mischievous grin on her face. I could see she wanted to see more than a blowjob, and admittedly, I was right up there with her. I wanted to see how far we could push this.\n\n\"I tell ya... I don't smoke often, so it's got me a little wiped right now... I'm not sure a blowjob will be enough,\" I said. Some of that was even the truth. I didn't want to make Lana do anything she didn't want to do, but since she seemed on the fence, it was worth a try to see if there was a side she preferred to be on.\n\nLana looked at Jess for help. Jess answered, \"Shit, don't look at me, I'm too baked to fuck right now.\"\n\nI doubted that Jess was ever too baked to fuck, but she was definitely just baked enough to give in to some mischief.\n\nLana looked at me, biting her lip in deep concentration. I might have given her something resembling puppy dog eyes to help smooth things over, and this seemed to help her make up her mind.\n\n\"Okay... alright, let's do somethin' about this. Tellya what, how 'bout I grind on ya with mah cunt for a bit, get you off all nice and messy like and we call it all square? That way I don't cross too much of a line and we still get you all cummy, right?\" Lana proposed.\n\nJess didn't look too satisfied with that answer, but it was a step in the right direction, and since I was pretty fucking desperate for an orgasm at this point, I said, \"Sure.\"\n\n\"All right!\" Lana declared, pushing herself up onto all fours, then swinging a leg over my hips. She settled her soaking-wet pussy lips against the shaft of my cock, then began gliding back and forth. Her lips against my cock were, well, rather intoxicating, and every time her clit hit the head of my cock, she let out a sound that was somewhere between a hiss, a moan and a giggle, a feeling that must have encouraged her to grind back on me harder on the back stroke.\n\n\"Oh, my word, this is a nice fuckin' cock...\" Lana groaned, pushing off of the bed so she was practically riding me. One at a time she reached her arms into her tank top and then reached under, pulling it up and over her head. Though it sent her hat sprawling onto the bed, I was granted a rather nice view of her soft, firm B-cups, nice puffy nipples standing out rather prominently. She looked down into my eyes, smiling and giggling as her clit hit the head of my cock again, before she reached down and picked her hat back up and plopped it on her head.\n\n\"It's a nicer cock if you put it inside, you know,\" Jess said, tipping me a nod, a hand between her legs lazily playing with her pussy.\n\nLana groaned. \"I know it would be... but... ya know... James...\"\n\n\"He's not here... and for fuck's sake, you've had his cock down your throat already,\" Jess said.\n\n\"That's different,\" Lana replied.\n\n\"Says who?\" Jess asked.\n\n\"Bill Clinton,\" Lana joked back. \"I read about it in history class.\"\n\n\"Ah, we've another history fan here...\" Jess chuckled, looking down at me. \"Ryan here knows more about history I'd say than just about any other person I know.\"\n\n\"That a fact?\" Lana asked.\n\n\"Yeah,\" I nodded, enjoying the false confidence the weed was giving me.\n\n\"Well, the fun part about history as Ryan's taught me, is that it ain't always right. Like, just because the president said something, doesn't mean it's true. Quite often means it isn't, actually. So, despite what our...forty-second president?\"\n\nJess cocked her head at me questioningly, and, groaning from the sensation on my cock, I nodded with approval at her answer. Jess continued, \"Despite what our forty-second president might have said, a blowjob, that's sex. Not the most fun kind of sex, but it's still definitely sex, so why split hairs and deny yourself some serious fun? Letting Ryan slide his big, thick cock into you and fuck your brains out, that's not all that different from what you've already done.\"\n\n\"Uh, it's a bit different,\" Lana said, biting her lip, looking at both me and Jess with a hint of confusion. Her walls were breaking down, and though I didn't want to push her into anything she didn't want to do, it was fun watching Jess press her buttons.\n\n\"Yeah, because it's more fun, and might end in a nice, screaming orgasm. Ten inches buried in your cunt, Lana, it's a whole helluva lot of awesome,\" Jess boasted, taking another hit off her pipe.\n\n\"Yeah, but...\" Lana groaned, running her hands over her tits. She began to grind on me harder, perhaps hopeful that if she got me off sooner that it might be a moot point and that she wouldn't be tempted by what I had. Still, while I was quite in need of a good cum, it was going to take more than that to make me make a mess.\n\n\"But what?\" Jess asked.\n\nLana pushed herself up to the head of my cock and rubbed her clit against it, not pulling herself back as she had done so far. She just sat there, rubbing her clit against me, feeling oh so delicious, almost as delicious as she looked. I reached up with one hand, cupping her left tit, squeezing it and rubbing her nipple with my thumb.\n\nLana groaned. \"But... I have condoms here... but nothing big enough for Ryan...\"\n\n\"Then you'd have to fuck him nice and bareback. It's pretty fucking sweet, believe me,\" Jess urged.\n\nLana let out a sound that might well have been a whine while she thought this over. \"Okay...\"\n\n\"Okay,\" Jess said, smiling.\n\n\"Okay?\" I asked, wanting to make sure that this was what she really wanted.\n\nLana bit her lip and nodded. \"But just the tip, alright? Just so I can... you know, get a feel of it, know what it's like to have some of a cock that big inside of me, alright?\"\n\n\"Alright,\" I said, smiling up at her in a manner I hoped to be comforting.\n\n\"Excellent,\" Jess said, standing unsteadily as she picked up my phone. \"We are so gonna get some pics of this...\"\n\n\"These don't go anywhere...\" Lana groaned as she continued rubbing her clit against my cockhead.\n\n\"These are just for me... for my memories...\" I said, running my hands down her side and holding onto her ass. I squeezed her, gently, helping press her even more against my cock.\n\n\"Okay... good... then y'all are gonna want a good shot of... THIS!\" Lana exclaimed, pressing her entrance against my cock. It was a tight fit, but her lips parted for me, allowing my cock to burrow into her snug tunnel. Her mouth lolled open as her eyes rolled back into her head, and though I didn't see it, I could hear the insistent click of Jess taking pictures.\n\n\"Fuck... you're tight,\" I groaned, my hands sliding up Lana's sides until I could properly cup her tits, rolling my thumbs over her hardened nipples.\n\n\"That happens when you're so big... gawdalmighty...\" Lana groaned, dropping her head back. The head of my cock was nestled snugly in her open, hot pussy, stretching her immensely. It took every bit of willpower I possessed not to pull her down and bury all ten inches deep inside her cunt, but we'd agreed to the tip, and so I would hold where I was. I contented myself with running my hands over her body, squeezing her tits, caressing her sides before getting back down to her ass again... fuck, she had a nice, tight body.\n\n\"How's it feel? Fuckin' amazing, right?\" Jess goaded.\n\n\"Better than that... and just the tip... fuuuuuuck...\" Lana said, rocking her hips against me slightly.\n\n\"You know there's a whole lot more inches where that came from,\" Jess said, smiling down at me as she took more pictures of Lana and me. Briefly, she reached down to me, one of her fingers running over my nipple and causing me to shiver. It was a battle not to cum right then and there in Lana, and Jess knew that she wasn't helping.\n\nThank god the weed was dulling my senses just enough to keep this from being too much of a problem.\n\n\"I know,\" Lana said biting her lip. \"But I really ought not to.\"\n\n\"But do you want it?\" Jess asked.\n\n\"Fuck yeah I want it, why do you think this is such a problem?\" Lana shot back, shivering and tensing up as I ran my fingers over her body. \"You're not makin' this whole 'just the tip' thing easy.\"\n\n\"Just the tip is never easy. That's why it's fun to just go all in,\" Jess said.\n\nLana looked down at me, horny and conflicted and biting her lip so hard I thought she might just have bitten through it. To me, she said, \"You know, you could be making this easier.\"\n\n\"Kinda hard not to be hard around you two,\" I said, honestly.\n\n\"I know...\" Lana admitted, wiggling slightly with my cockhead buried in her tight entrance. Finally, sighing, she said, \"Aw, fuck it. I've come this far. Just not a word to anyone...\"\n\n\"'course,\" Jess replied.\n\n\"I promise,\" I replied.\n\n\"Good,\" Lana said, pressing down onto me.\n\nSlowly she began pressing down, sliding my cock into her a little bit at a time. It was a deep, needed pleasure as I felt her hot, wet sheath embracing my cock. There was definite resistance, as it seemed she didn't have much experience with a cock like mine, but she was nice and determined. Her face kept flying through numerous emotions, from ecstasy to slight pain to that mouth lolling open groaning pleasure, all the way back around to her usual giggling. She giggled the most, of course, but inch by inch, past half of my cock, the look on her face was one of pure determination.\n\n\"Holy fucking shit... holy fucking shit...\" she groaned as she took another inch. \"Awww, hell with it.\"\n\nSteeling herself, she forced herself down the last few inches. Her eyes, closed from determination, now flew open big and wide from shock.\n\n\"HOLY FUCKING SHIT!\" she exclaimed, nearly falling down against me as her mouth hung open. Looking down to where she sat, fully impaled on my cock, she looked from Jess, to me, then back again. \"Is this even real? Are you seeing this shit?\"\n\n\"Oh, I'm seeing it...\" Jess said, smiling as she took another picture.\n\n\"Seeing and feeling,\" I groaned, running my hands up to Lana's breasts. She quivered and squeaked when I caressed them, and when my thumbs ran over her nipples she groaned so deeply I could feel it in the tightening of her pussy.\n\n\"Fuck, you're tight,\" I groaned.\n\n\"I know... definitely, very, very tight... but not for long if I keep this in me,\" Lana giggled, smiling down at me. With seemingly great effort, she rocked her hips, letting some of my cock out of her before dropping down yet again.\n\n\"Awww, fuuuuck...\" she groaned as she began to get a rhythm. \"You're gonna split me open. You're gonna tear me right in half...\"\n\n\"And you're gonna love every second of it,\" I replied, thrusting back into her.\n\nLana giggled. \"I can't lie; this cowgirl loves her a good ride.\"\n\n\"Lucky for you, then; I love to be ridden,\" I said, dropping my hands to her hips, holding on and using my new leverage to fuck into her even harder. She moaned, riding me harder and harder, fucking down onto me as I held on for dear life. Lana wasn't lying about liking a good ride, but the way her face contorted every time she dropped down on to me, the way she unconsciously squeezed me with every thrust, I knew she'd never had a ride quite like me.\n\n\"Damn, that shit's hot,\" Jess said. She'd clearly tired of playing photographer, and instead sat back down to get another hit off the pipe, then started to play with herself. This would normally have been enough to grab my attention, but having a tight-bodied redhead riding me nice and hard, all smiles and giggles and the occasional yelp of pleasure, I was easily overwhelmed.\n\nMy head was swimming, and I was living in a world of pleasure. Not a bad day by my accounts. I didn't see making a habit out of cutting class, but if I had to every so often... well, I hoped I could make it like this.\n\nLana fell down on top of me, still fucking against me but kissing me giddily. I wrapped my arms around her, holding on as I fucked up into her, smiling and kissing her back.\n\n\"I love a good ride... fuck I love a good ride... but you know what I love more?\" Lana said.\n\n\"What?\" I asked.\n\n\"I like being fucked deep, and hard. I want you behind me, fuck me like a bitch,\" Lana whispered into my ear, nibbling on the lobe slightly and giggling as we continued to fuck.\n\n\"You know if we keep this up, I'm gonna be cumming soon, right?\" I warned.\n\n\"Oh, we're both gonna!\" Lana promised.\n\n\"Well, alright,\" I said. With great effort, I rolled over on top of her, then pulled out. Though she lost her hat for a moment, Lana soon rolled over onto her hands and knees and managed it back onto her head.\n\nI got up on my knees behind her, lining up my cock back against her pussy lips, easily sliding back in. I grabbed her by the hips and started thrusting in and out of her vigorously, our bodies slapping into each other and her tits bouncing wildly. Her giggles had become a long, drawn out wail, and I doubted either of us was very long for this world.\n\n\"Nnnnhfuck! Right there... fuck... fuck me... fuck me hard... make me cum...\" Lana groaned.\n\nI didn't need any encouragement to fuck her harder, but it was much appreciated. The simple sound of our frantic coupling pushed me onward, the wonderful feeling of her pussy grabbing and squeezing my cock every time I bottomed out within her. She was taking nearly my entire length with every stroke, and looking over to watch Jess enjoying the sight of us was almost too much.\n\n\"I'm gonna cum soon...\" I warned.\n\n\"Gaaaawd... metoo, fucking me too, dear lord...\" Lana moaned as I thrust into her harder and harder.\n\n\"Oh, sweet, lemme get this...\" Jess said, grabbing my phone and angling herself to see both Lana's and my faces.\n\n\"Where do you want it?\" I groaned, pushing into her harder.\n\nLana squealed. \"Ooooooh...\"\n\n\"You should really make him cum inside of you, it's pretty awesome,\" Jess suggested to Lana.\n\n\"Thanks,\" I replied.\n\n\"No problem,\" Jess said, leaning over to kiss me briefly while Lana considered this through her railing.\n\n\"Oh, fine, fuck, let's take our chances, cum inside of me nice and deep, I wanna feel it all!\" Lana proclaimed.\n\n\"That's what I'm talkin' about!\" Jess cheered, getting the phone ready. \"I'm so gonna get a picture of your face when he cums in you.\"\n\n\"You better,\" Lana exclaimed. \"because... HOLY FUCK, I'M CUMMIN', Y'ALL!\"\n\nShe cried out and went tense, bucking back against me as a gush of liquid splashed against my balls and thighs. Her pussy tightened around me as she laughed and wailed, bucking against me and demanding more and more of my cock.\n\nThat was my cue. Unable to hold back the torrent anymore, I let loose, thrusting deep within and cumming inside of Lana Granger. Pleasure flowed through my body as my cock entered another plane of existence, my eyes lidding over and almost fading into the gray for how good it felt to be gripped within her. Lana was insatiable, squeezing every drop out of me, and though I hadn't many left, I was happy to provide every drop I could.\n\nI could hear the snapping of pictures on my phone as Jess documented the occasion, but I was so overwhelmed I didn't really care much. Rationally I hoped they were good shots. On instinct, I was slowing down, pulling out of Lana and collapsing on the bed beside her. My cock was softening, still dripping with her juices and the last bits of her cum.\n\nIf my head was swimming before, now I was floating with my head barely above the surface enough to breathe. I was inexperienced with weed, and after pulling myself together for some serious exertion, I was spent. I was beyond spent. I was on the precipice between consciousness and unconsciousness, floating away a little bit at a time. Somewhere in the distance I felt Lana fall to the bed beside me before getting up. I felt a kiss on my lips, and her talking about how she needed to get some munchies, before trotting off somewhere far away.\n\n\"Ryan? You in there, buddy?\"\n\nI murmured something. The world drifted further away, and I sat rather well on the precipice of exhaustion and sleep. It was nice.\n\nThen I felt the glass against my lips, and on instinct I sipped, letting the cool water roll down my throat. Soon I was ravenous, chugging it down with great need as if it was the sweetest, cleanest water I'd ever had and that I could never get enough. Coughing slightly as I breathed in some drops, I let myself be roused by the image of Jess standing naked over me.\n\n\"Not an accomplished pothead?\" she asked.\n\n\"No,\" I admitted. My head was a little clearer, but my throat was another battle entirely. I tried clearing it, and for my troubles Jess gave me another sip of the cool water. It didn't make the dry mouth go away, but my head felt a little clearer.\n\n\"You don't have to be to smoke,\" Jess said, setting the glass at a bedside table, \"but it helps to know some of the basics. Like how engaging in a power fuck like that when you're already cotton-mouthy and thirsty's not gonna be the best for you\"\n\n\"Noted,\" I replied.\n\n\"Good,\" she said, scooting closer to me so that she could kiss me. It was a slow, lingering kiss, the kind that tasted wonderful and I could never get enough of. With great effort, I wrapped an arm around her and held her close to me, loving the way her breasts felt pillowing against my chest. We kissed again, slow and lingering, enjoying the closeness. Her hands drifted down to my cock and began to stroke it slightly, bringing what felt like a little life back.\n\n\"I like to party. And I like to fuck hard. When I'm high, though, I'm just as fine to keep things nice and slow, unhurried, ya know? It's more fun that way... and I can keep going for a long, long time,\" Jess said, smiling slyly and kissing me again.\n\n\"I think I've got a lot to learn from you,\" I said, smiling and kissing her back.\n\n\"Let's call it a trade, teaching for teaching,\" Jess replied.\n\nAs my eyes cleared further, I looked around the room for Lana and found us alone. And that the sun had seemingly shifted places in the sky since I last looked.",
        "\"Where's... where's Lana?\" I asked.\n\n\"In the kitchen, staring at the cupboards. Maybe baking, too, I don't know how long she'll be, but you get her started and she can be a while. Especially when she's making cookies,\" Jess explained.\n\n\"Pot cookies?\" I replied, not sure I was ready for that much.\n\nJess laughed, then kissed me. \"No, the regular kind. She makes some pretty mean chocolate chip cookies. Really great when you've got the munchies. I think her fridge is already pretty full, but she wanted 'em fresh.\"\n\n\"Food does sound good,\" I admitted. A lot of things sounded good. Lying down here next to Jess, naked and spent and being so close to someone so soft and fun felt beyond amazing. I wasn't going to make a habit of cutting class, but if I had to, this was the way to do it.\n\n\"Doesn't it?\" Jess admitted, kissing me again, her smile almost as big and goofy as Lana's.\n\n\"You're baked...\" I laughed, kissing her.\n\n\"Damn right I am. And I'm gonna get more baked, too. You want some more?\" Jess asked.\n\n\"Oh, definitely... maybe not now, but definitely...\" I said, running a hand lightly over her side, up the swell of her hip until I could gently cup her ass. She moaned at my touch.\n\nAs my cock swelled in her hand, Jess smiled. \"Feels like you're ready for something.\"\n\n\"For you? Yeah,\" I said, kissing her deeply, slowly.\n\nJess moaned into my mouth. \"Thanks.\"\n\n\"You sound surprised...\" I said, squeezing her ass again, then running my hand between her legs so I could finger her pussy. No surprise, she was still quite wet with a mix of our juices. Jess groaned, shaking against me and pressing herself in closer. She was definitely still quite sensitive.\n\n\"Not surprised... I know I'm good... but you've been with all kinds of girls... women, really... and I know you been up to some crazy shit, so it's pretty cool to know I can get your motor runnin',\" Jess said, kissing me.\n\n\"Oh, you do more than that,\" I said, sliding a finger deep inside of her. Jess moaned.\n\n\"Chingame, I can tell,\" she said. \"But it's nice to be wanted by someone who knows how you want it; compatibility, man, it's so underrated.\"\n\n\"Glad to hear it,\" I replied, gently pressing my thumb against her clit. She hissed pleasurably, rocking side to side ever so slightly so she could drag her nipples against me.\n\n\"You think you might be ready again soon?\" Jess asked, looking up at me hungrily.\n\n\"Yeah,\" I replied.\n\n\"Good,\" she said, rolling over to a bedside table and opening a drawer.\n\n\"Whatcha doin'?\" I asked, looking at her ass appreciatively as she did this.\n\nChuckling, Jess rolled back over to show me the bottle in her hand. \"It's lube time?\"\n\n\"Oh, fuck yeah,\" I said as understanding hit me.\n\n\"Oh, you wanna fuck my slutty, cock-loving ass? Because I'm told that it's, like, the best ass most guys have ever had. Once you've had it, you're pretty much ruined for all other asses. It's pretty awesome. You sure you still want some of this?\" Jess asked, squeezing some lube into her hand, then applying it generously to my cock. Her touch, plus the slippery texture of the lube made my cock twitch. Fuck, it felt good.\n\nHaving had my share of asses before and being very, very happy with each unique experience, I replied, \"I'd have thought that the amount of time I spent with my mouth on your asshole would indicate enough to you of my intentions for your ass.\"\n\nSmiling, Jess leant down to kiss me. \"Bitchin'.\"\n\n\"Yeah, that's definitely bitchin',\" I replied.\n\n\"Good...\" Jess said, lying down so that I was spooning her. My now slick cock rested between her impressive ass cheeks, perfectly sandwiching me. I couldn't help grinding into her like that, wrapping my arm around her so I could better cup her tits. She parted her legs slightly, encouraging me. Briefly, I let go of her tit and grabbed my cock, lining it up and pressing the head against her tight hole.\n\nI'd already had my tongue in there and got a taste of how amazing her ass was, so you could say I was looking forward to this.\n\nJess turned her head so she could look at me as I placed my hand back on her tit and began to press into her. Her full lips parted slightly as she took in a breath. Silently, she nodded to me, as I pushed harder. Her asshole offered resistance, daring me to go at her harder, but with a little more pressure, it began to give. Then, with a pop, the head of my cock slid in.\n\nJess groaned, her mouth lolling open and her eyes rolling back as she adjusted to my size. \"Hijo de puta! Motherfucker, that's... that's...\"\n\n\"Big, huh?\" I groaned. \"Well, you're tight.\"\n\nI pushed a little more into her, sliding another couple inches inside. She said, \"That's what happens when you've got a dick that big.\"\n\n\"You knew I was big,\" I said.\n\n\"You never know how big a guy is until you're taking him in your ass,\" Jess groaned, leaning into me, forcing even more of my cock inside of her.\n\n\"Not the first time I've heard that one,\" I said proudly, forcing a little more inside. I was more than halfway in by this point, it wouldn't take much more to bottom out inside of her. I was lubed, and she was willing, and all it took was a little bit of force. Compared to our earlier fuck and the time I spent with Lana, this just felt nice and relaxed by comparison.\n\nNice and relaxed with an amazing Latina ass wrapped around my cock threatening to squeeze even more cum out of me, but relaxed all the same. I slid the last couple inches of my cock up her ass, and with that, Jess gasped. She never stopped looking at me, her mouth open, smiling somewhat, but still open as she tried to breathe to take in everything that was happening to her. I felt her shudder, quivering slightly against me as her body broke out with goosebumps all over. With the slightest flex, she squeezed my cock with her ass, making me moan with pleasure. In response, I wiggled inside of her a little.\n\nI leaned into her, kissing her gently and squeezing one of her nipples, loving the way she moaned into my mouth.\n\nWiggling again, I smiled. \"So, be honest.\"\n\n\"What?\" she asked.\n\n\"Biggest you've ever had in your ass?\" I asked.\n\nJess laughed. \"Biggest I've had in any hole.\"\n\n\"And you're taking it like a champ,\" I said, smiling and running my fingertips over her soft flesh again.\n\nShe groaned. \"Are you always this proud of yourself?\"\n\n\"Depends on my mood, but today... yeah, I'm pretty fucking proud,\" I said, withdrawing a couple inches and sinking back into her.\n\nJess hissed. \"You've got a lot to be proud of... but so do I.\"\n\nShe pulled away, then arched her back into me, pulling several inches of my cock out, then pressing them back into her. Jess leaned into me, looking into my eyes and kissing me deeply.\n\nThis was the rhythm we developed, a slow, steady fuck as we spooned, making out and touching each other as I methodically fucked her ass. She was right, that her ass was something worth being very proud of. It was one of the best I could remember, and one I knew I could fuck for a very long time without any regret.\n\nTime passed in a strange, slow fashion that made it hard to tell how long we'd been at it. We could smell the tempting aroma of fresh baked cookies that alerted us to what exactly Lana had gotten herself up to, and though it definitely managed to tickle both of our need for the munchies, it didn't stop us. I reached around Jess, dropping my hand between her legs so I could finger her in time with my fucking her ass. Taking our time, I know that I made her cum twice. The first time was quiet and sudden, while the second time had her moaning something long and low in Spanish as my hand was drenched by a flood of her juices.\n\nGrasping onto her more tightly and needing my own release, I thrust into her just a little harder, savoring the tightness of her ass while I fucked into her. The buildup felt natural, and when I was finally ready, I grunted and released another thick load of cum deep within her. Jess gasped and groaned, moaning as she used her ass to coax each and every drop from me. She murmured something low that I couldn't quite hear, but didn't need to. Her smile said everything.\n\nStill conjoined, we lay on the bed spooning, kissing and stroking each other and feeling very, very nice.\n\nWe were like this for a while, making out and curled into each other, before Lana reentered the room, a tray in hand. Wearing not much more than her hat and an apron, she smiled down at us proudly.\n\n\"Hey, guys, I got cookies and milk and some pretty damn good weed. Don't tell me you're finished now?\" she challenged, smiling brightly.\n\nJess and I looked to each other and smiled.\n\n\"Nah, we're just getting warmed up,\" I said, smiling broadly.\n\n***\n\nI know there's been a handful occasions where I've said things were a blur, but when you have as much sex and weed as Jess, Lana and I had on that lost afternoon, it's easy for things to blur into each other. We ate, we got high, and we fucked.\n\nA lot.\n\nI was the center of attention for most of it, Jess and Lana taking turns having me stuff their various holes, but in moments where I was too wasted or tired to do much of anything, I have the vaguest memories of them sometimes getting down and getting each other off. It was great to watch, and great to get me ready again, and soon enough I'd have another nice, long, slow session with one of them while we wiled away the afternoon and early evening until it was time for Jess to take me home.\n\nAs we pulled up next to my place, I felt like I could barely move. It wasn't just the sex, or the weed, or the crazy afternoon I'd had, or the fear of facing school tomorrow (even if I did have a number of texts reassuring me that all was well on the school front), but some amorphous combination of all of those factors hitting me at once. Even as Jess pulled up to the curb, my house so temptingly close, it felt like it might as well have been on the moon.\n\nInstead of leaving, I turned and took a look at Jess. Fuck, I didn't think anyone could have looked hotter than her in that moment. Though she was back to her usual ratty skater wear, the pretty way she smiled at me and the knowledge of what that body was capable of utterly disarmed me.\n\n\"That was... amazing,\" I said.\n\n\"Yeah, it was pretty fuckin' hot,\" Jess replied brightly, leaning over to kiss me. The kiss lasted a few seconds, the familiar feel of our lips and tongues pressed against each other almost beginning another hot and heavy makeout. My hand traveled up to one of her tits, but the moment I felt her nipple hardening under my palm, I pulled back.\n\n\"I should probably stop. If I don't, I don't think we'll ever stop,\" I said.\n\n\"Why should we stop? You got a bed in there, right?\" Jess said, smiling mischievously.\n\nI laughed. \"You're a fucking machine.\"\n\n\"No. I'm a fucking machine who got an A-FUCKING-MINUS!\" Jess cheered, pounding on her wheel triumphantly.\n\n\"Yes, you did, and if we celebrate any more I think I might be comatose,\" I answered honestly. It didn't mean that part of me wasn't tempted, but that was against much of my better judgment.\n\nSmugly, Jess puffed herself up. \"Like I told you, I'm the best.\"\n\n\"I don't think I'll doubt you ever again,\" I said.\n\n\"Good. Are you still gonna tutor me?\" Jess asked.\n\n\"You still want to be tutored?\" I asked.\n\nJess thought about this. \"Yeah. I do. At first I think this was all about the sex, wanting some of that anaconda you got (and might I say it's real prime, fucking meat, thankyouverymuchforsharingitwithme), but seeing my grades go up... it feels good. I liked doing better. I liked having it feel like someone believed in me. So, yeah, I'd still like you tutoring me if you'll still do it, we don't even have to have sex or nothin'.\"\n\nQuickly, I said, \"We can still have sex. Not even just at the end of the month, whenever we, like, can.\"\n\nI swear, I'm more eloquent when I'm not a little baked.\n\nJess smiled at me sweetly. It was a smile I hadn't seen from her, not a hint of edge or amusement, just a pure sweet joy. \"I'd like that.\"\n\n\"I would too,\" I said, leaning in to kiss her. This was a slower, deeper kiss, but one that felt... well, different. Good different. I didn't know what the future would hold for Jess and me, but I was curious to see where our friendship would take us.\n\n\"Good. Now get home before I put you in a coma,\" Jess said, reaching over to grab my cock through my pants. She leaned in, whispering into my ear, \"Because you know I'm the kind of slut who would.\"\n\nFuck, just being this close to her got me hard again. It shouldn't have been physically possible, but she found a way.\n\n\"Oh, I know,\" I said.\n\nGrabbing my backpack, I got up on unsteady feet and opened my door, stepping outside and closing it behind me. Jess gave me a quick honk and then pulled away. It was... darker outside than I remembered, but that was probably for the best. Jess no doubt had kept us at Lana's place for a while, not just for sex, but so she could sober up and drive safe.\n\nThat... was nice and responsible.\n\nWalking unsteadily for the door, I pulled my phone from my pocket, and despite the temptation to look at the pictures I'd taken with Jess and Lana, I instead shot a group text to Josie and Brooke letting them know I was okay.\n\nA few seconds passed as I stood on the walk up to my front lawn before I got a response from Alice, and a picture. Josie and Brooke smiled up at the camera, their lower faces covered in cum.\n\nAlice: We're having a blast at the sex shop. These two are quite popular.\n\nI laughed, texting back.\n\nMe: I bet they are.\n\nI slid the phone into my pocket, then walked up the pathway and laughed again. I was happy to see that the girls were having fun. I'd have enjoyed more coming home and collapsing next to them, but, lacking that, I was glad to see that they were having fun and getting some.\n\nStepping up onto the porch, I fumbled for my keys, and it was in my fumbling in the dark that I finally looked down and saw what was sitting at the door.\n\n\"The hell?\" I muttered, bending over carefully to see what it was. At the base of the door was an ornate, silver tray piled high with cookies and covered in Saran Wrap, and on top of this was a small branch with a bow and a note attached. Though the porch lamp was off (no doubt because Dad was probably out on some hot date), I could see enough in the early evening light the text of the note.\n\nFROM KAREN BOWMAN TO THE COLLINS MEN -- DELICIOUS TREATS!\n\n\"The fuck is this?\" I said, holding the branch as I tried to roll over her words in my head.\n\n\"It's an olive branch,\" a timid voice answered.\n\nI nearly jumped out of my skin screaming as I turned to the source of the voice sitting on my porch and found sitting in a chair Jennifer Cage. Her backpack was with her, and she was still wearing the same clothes she'd worn to school. If I'd smoked any more weed than I had, no doubt I'd be incredibly paranoid right about now, but that didn't mean that I wasn't a bit alarmed to find her here.\n\n\"I don't know why Kyle's mom is putting an olive branch on a cookie tray at your front door, but that's what it is. I could speculate, of course, your history with the family being, uh, the subject of a number of provocative rumors, but... yeah,\" Jennifer said quickly.\n\nI could think of a number of reasons, not the least of which was Addison's warning around Christmas. Apparently, Kyle's mom had been trying to pull strings behind the scenes to get his exile from Regan Hills undone, and no doubt getting in good with me and Addison was a step in the right direction. That, combined with the pressure I'd heard about her putting on the PTA to prevent Mrs. Harker from doing the spring musical that the drama kids wanted, helped me realize that my problems with the Bowman family were far from over.\n\nThe cookies looked good, my munchies not having abated in the slightest, but as tempting as they looked, it certainly felt like they could have been poisoned.\n\nOf course, I had more pressing matters to take care of.\n\n\"Don't take this the wrong way, Jennifer, but what the hell are you doing on my front porch? Have you been here since school let out?\" I asked her, trying to shake my head clear.\n\n\"Yes,\" she answered.\n\n\"Why?\" I asked.\n\nNervously, Jennifer stood up and flexed her hands. \"I said, earlier I mean, I said that I needed to talk to you about something important today, and before you ask, I know I could have texted or called, but I was too afraid to, so I came here instead, and... I'm just making such a mess of things when I didn't want to make a mess of things, but, this isn't easy to talk about, so...\"\n\nI'm not lying when I say that I barely knew Jennifer Cage, but Jennifer was clearly in a lot of distress, and I wanted to help her get out of it if I could.\n\n\"Just take a breath, and tell me what you wanted to tell me,\" I said.\n\n\"Okay, okay, I can breathe... breathing is easy, we do it all the time, I can do it, you can do it, just... breathe...\" Jennifer said to herself, stepping up to me and taking a deep breath. Her big brown eyes were bigger and browner through her glasses when she looked up at me.\n\n\"What's so important that you've been waiting here all evening?\" I asked.\n\nJennifer let her breath out, took in another, and said, \"You're a legend, okay?\"\n\n\"I'm a legend?\" I asked, genuinely surprised by her choice of words.\n\n\"Yeah, a legend. To me, anyway,\" she said.\n\n\"Why?\" I asked.\n\n\"It's... not a secret really, what's been happening to you, what you've done, what you've been doing and who you've been doing it with this year...\" Jennifer said, her voice a little meek, her eyes darting away from me, then nervously back.\n\nThough I knew what she was talking about, I needed to hear it from her lips to make sure I wasn't barking up the wrong tree. \"And what exactly do you think I've done?\"\n\nJennifer gulped. \"Sex. Lots of sex with lots of girls, girls from all over the school, girls of all different types, gorgeous girls who would normally be unattainable to people, nerds, like us, and I know a lot of it's said to be because of your certain... gifts... but that can only explain so much. I know that can't be everything. You've a number of gifts, Ryan, and you've given a lot of us something to aspire to, and... that's why I'm here.\"\n\nShe gulped again, and took in a deep breath. \"I am sick and tired of being looked over and unnoticed by everyone in school. Everybody just looks at me like, 'there goes the art girl with the ponytail and glasses and overalls with paint on them, let's go on with our lives', and I don't want that to be me. I want to be noticed, like you. I want to be remembered. I want to have friends. I'm horny, and I want to get laid! I want to be with boys, and maybe even girls, I'm not really sure about it but I'm game to try... and I want to party and have fun! I don't want to hold myself back anymore just because I feel like I'm expected to act a certain way, or because I'm afraid of people knocking me back to where I was... Ryan... I know I'm a stranger, but I've heard about what you were like before all this, and I've seen how far you've come, and... can you teach me? Teach me how to do what you've done? Teach me what you know about sex and how to be... you know, someone who can enjoy their year more, I guess? Like you and all your friends? Can I... can I be, like, your apprentice?\"\n\nNow it was my time to gulp. What she said... it was a lot to take in, and it sounded like a lot of responsibility to consider... and my head wasn't in the best place in the world either, but was I going to turn her away when she'd opened her heart to me like this?\n\nI cleared my throat. \"I've got some cold milk in there. Would you be up to join me in seeing if these cookies are poisoned while we talk about your situation?\"\n\nJennifer's lips briefly curled into a bright smile. \"Yes. I would like that.\"",
        "\"Good,\" I said, motioning her inside. Following her in with the cookies in hand, I shook my head.\n\nJanuary may have been a busy month, but it was looking like February wasn't planning to let up on me, either. It should have daunted me, and yet as I thought about it, only three words came to mind:\n\nBring it on.\n\n***\n\n(Author's Note 2: Writing this story is something I do in my spare time for fun, so if you're enjoying this, please, please, please drop some stars, reviews or shoot me some feedback, as they really keep me going (and please vote on any earlier chapters you enjoyed if you haven't already!). Though I may not always respond, I do love hearing from all of you and seeing that you're enjoying the series. It motivates me to continue writing more. You've all been wonderful and I can't thank you enough for all of your kind words and encouragement and yes, even the constructive criticisms!\n\nAnd after some recent crises and battles, I want to add one last note on a more practical concern. When it comes to mental health, I hope everyone out there is taking the time to take care of themselves. Mental health may seem like a never-ending battle, but it's a never-ending battle that is always worth fighting, and one that there are plenty of resources to be found to help with should you ever be struggling. Be good to yourselves, and to everyone else.)\n\n \n"
    ],
    "authorname": "aimingtomisbehave33",
    "tags": [
        "18-year-old",
        69,
        "anal",
        "big cock",
        "big tits",
        "creampie",
        "high school",
        "latina",
        "slut",
        "stoner"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/senior-year-memories-ch-32"
}