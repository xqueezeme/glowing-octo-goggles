{
    "title": "The Agency Ch. 11",
    "pages": [
        "*Author's notes: This is a work of fiction, hopefully that is not a word you struggle with. It is a story of fictional, consenting adults who enjoy power exchange, lingerie, heels and the like. It's in the transgender/crossdressing category for a reason, if that scares you please back away slowly. For the rest of you, please enjoy!\n\n~~~~~~~~~~~~~~~~~~\n\nLunch had gone even better than Michelle had expected. The conversation had been relaxed and comfortable, with no odd silences in between, and even the food was really good. When Michelle's leg bumped against Brenda's, she had not only not pulled her leg away, but Brenda made sure her leg remained in contact with Michelle's. With Michelle in her sundress and Brenda in Capris, the feeling of Brenda's soft skin against her own was quite a rush for Michelle. Almost as much of a rush as the almost constant eye contact they'd kept throughout.\n\n\"You know,\" Brenda leaned forward and whispered, \"that guy over there can't seem to take his eye off us.\"\n\n\"Maybe he thinks I'm on a hot date with a beautiful woman!\" Michelle winked.\n\n\"Maybe he thinks the same thing about me?\" Brenda replied with a wry smile. \"Don't worry, your secret is safe with me!\"\n\n\"Thank you for that.\" Michelle smiled, picking up the bill as the waiter put it down. \"Okay you,\" Michelle pretended to speak sternly, \"you need to knock it off, I'm trying to buy you lunch!\"\n\n\"What?\" Brenda giggled softly as she continued to reach for Michelle's hands, \"it's not like he's going to get to see us make out or anything. Just no winking at him this time!\"\n\n\"I'll make sure I control myself better.\" Michelle chuckled.\n\nAs they walked out, Brenda put her arm in Michelle's as they made their way through the mall together. While it wasn't crowded, Michelle still felt as all eyes were on her, and was still waiting to get caught. Like someone would scream and stare while pointing \"A MAN!\" She relaxed a bit more as Brenda pulled her into a store.\n\n\"Here?\" Michelle asked somewhat panicked.\n\n\"Their selection of dresses is perfect!\" Brenda responded leading Michelle to the back section. Looking through a few racks, Brenda found a dress, pulling Michelle to the fitting room to try it on. \"Try this,\" she said stuffing the hanger in her hand, \"I'll be back in a bit to check on you!\"\n\nBefore Michelle could answer, Brenda was already heading off. Leaving on the sneakers she'd borrowed, Michelle removed her outfit, hanging it neatly before putting on the dress. It was strapless, which she had definite concerns about, and snug. The hem was just a couple inches below her crotch, making her cage visible if she simply stood. She tried a couple ways to hide it, but unless she wore the power thong again it was going to be an issue. A knock on the dressing room door jolted Michelle from her thoughts.\n\n\"Let me see.\" Brenda said as she tried the knob.\n\n\"Hang on.\" Michelle said slowly opening the door.\n\n\"Hmmm, that is not going to do,\" Brenda said immediately looking at Michelle's crotch, \"just like I thought, you need something flowy at the bottom. I have just the one in mind, take that one off!\"\n\nMichelle did as she was told, removing the dress and putting it back on the hanger until Brenda knocked again. This time, Brenda stepped into the changing room with Michelle, taking Michelle by surprise. Covering herself slightly, Michelle couldn't quite place why she felt uncomfortable, but she did. When Brenda realized what was going on, and Michelle's discomfort, she took a step back and giggled slightly.\n\n\"You realize I massage your bare chest three times a week,\" Brenda said matter of factly, \"and I've seen your bare butt!\" Leaning closer she whispered, \"By the way, we've even kissed! With tongue!\"\n\n\"You have a point.\" Michelle acquiesced removing the dress from the hanger.\n\n\"I think this will look amazing on you,\" Brenda's voice was excited as Michelle pulled on the dress, \"and will fit you perfectly.\" The minidress had loose layers around Michelle's hips to the hem, hiding her appendage perfectly, but the low cut back and halter style top concerned her. \"Don't worry, I'll up your injection on Friday.\" Brenda smirked at Michelle's shocked look, \"Who do you think fills the syringe?\" Brenda adjusted the sides around Michelle's bra then the neck which was lace to the top of her breasts. \"It's a good thing I liked you immediately,\" she said standing behind Michelle as they both looked in the mirror, \"why do you think you've caught up to Babette so quickly?\"\n\n\"You didn't!\" Michelle asked turning to look at Brenda.\n\n\"Well I did, and I don't feel bad about it,\" Brenda replied, \"she was arrogant and a pain in my ass the first day she walked in! Plus, she hit on me like she was some stud!\"\n\n\"That's not good,\" Michelle replied feeling a bit torn between her two friends, \"she's changed a lot though.\"\n\n\"I know, I've noticed.\" Brenda replied. \"You're going to look amazing in that next weekend!\"\n\n\"Okay, but what are you going to wear?\" Michelle asked while twirling her hips slightly.\n\n\"Oh, I've had my eye on something,\" Brenda replied reaching for the dressing room door, \"you change and I'll put it on.\"\n\nMichelle was excited to see what Brenda would pick out, outside of today, Michelle had only seen Brenda in scrubs. Before removing the dress she had on, Michelle turned several more times and sat on the low stool in the fitting room to make sure she kept everything hidden. It would be okay, although her bare butt was almost making contact with the chair when she sat! Changing back into her original outfit, Michelle made her way out to the area outside the changing room to wait. It was a couple minutes, but eventually Brenda stepped out.\n\n\"Oh my GOD!\" Michelle blurted. \"That is, well holy shit! That's what that is!\"\n\n\"Oh stop it!\" Brenda blushed turning slowly to face the mirrors.\n\n\"Where's the back?\" Michelle said with her mouth falling open.\n\n\"You don't think it's too much is it?\" Brenda asked in the mirror.\n\n\"I don't think anything about that outfit is too much!\" Michelle replied as she slowly stepped forward. \"It looks incredible on you.\"\n\nThe top was a backless silver metallic halter with two strings that crisscrossed Brenda's back and tied behind her neck. If she stood with her arms at her sides, the material of the top was completely hidden from view from behind. She'd paired that with a high waisted black satin skirt that was almost as short as Michelle's mini-dress. Seeing Brenda partially dressed up like she was made Michelle's body ache considerably.\n\n\"You do need a different pair of panties to wear with that skirt though.\" Michelle whispered while placing her hand lightly on Brenda's back.\n\n\"I figured as much.\" Brenda replied with a frown.\n\n\"We can go lingerie shopping next!\" Michelle smiled at the idea. \"My treat!\"\n\n\"I hate to admit this,\" Brenda said, \"I'm betting I'll need heels too. I haven't worn any in forever!\"\n\n\"That's okay,\" Michelle answered, \"I borrowed these sneakers from Babette and want to get a pair of my own.\"\n\n\"Sounds fun!\"\n\nBrenda walked back to the fitting rooms while Michelle window shopped a bit more. When they were done they went to the lingerie store, where Michelle was really able to take charge. As it turned out, Brenda had attended nursing school, and between the bills and the like she rarely got to go out dressed up. While she didn't envy the heels Michelle wore daily, she certainly envied the outfits! The scrubs were what she needed to wear though, so her wardrobe had not been a priority.\n\n\"Do you really think I need these?\" Brenda asked as Michelle rummaged through a pile of lingerie.\n\n\"Honestly,\" Michelle said pulling the item she'd been looking for, \"probably not, but I can't be the only one with amazing lingerie in this relationship.\"\n\n\"Hmmmm, a relationship huh?\" Brenda leaned into Michelle giving her a nudge. \"What kind of relationship are we in?\"\n\n\"I guess we still need to figure that out,\" Michelle replied as she stood up and handed Brenda the items she'd picked for her, \"but I'm praying it's a romantic one.\"\n\n\"Considering how we part,\" Brenda made a quick kissing sound with her lips, \"I'd say it is, wouldn't you?\"\n\n\"Yes I would.\" Michelle felt the happiest she'd been in quite a while with those words. \"Now, head to the fitting room,\" Michelle almost ordered, \"oh and take these.\"\n\n\"Really?\"\n\n\"Yes, now go!\"\n\nWatching Brenda walk away, Michelle had to chuckle. It had taken her becoming a girl in order to get a real girlfriend and a caring relationship! How was that even possible? Was it the fact she was now a girl? Or had she been that much of a loser as Michael when she was a guy? In any case, she had deep feelings for Brenda and had a sense they were mutual. Walking to another section, Michelle retrieved a black lace pair of extra cheeky boycuts for under Brenda's skirt before heading to the fitting rooms.\n\n\"How are you doing?\" Michelle asked.\n\n\"I don't understand how you wear these to work every day!\" Brenda replied. \"They seem like a pain in the ass to me!\"\n\n\"You get used to them.\" Michelle replied.\n\n\"Okay,\" Brenda said as she opened the door part way and peeked out, \"but I have a question.\"\n\n\"I can help!\" Michelle smiled big taking the opportunity to step into the changing room with Brenda.\n\n\"You can't do that!\" Brenda protested.\n\n\"Um, you have seen far more of me than I have of you,\" Michelle said as she closed the door behind herself, \"it seems only fair to me!\" Brenda raise an eyebrown in response but let Michelle stay. \"Okay, so what's your question?\"\n\n\"These silly things?\" Brenda replied. \"Under or over?\"\n\n\"Well,\" Michelle started to answer but found it difficult not to star at Brenda's amazing body, \"I personally think it looks better over, but, that does make going to the bathroom a bit more risky if you know what I mean.\" Michelle tucked the first garter strap underneath Brenda's bikini bottoms before fastening it to her stocking. \"Then you don't want these too tight, or they'll rub on your legs when you walk.\"\n\nLeaning forward, Brenda whispered into Michelle's ear, \"I think you just wanted to slide your hand in my panties.\"\n\n\"You may be right about that!\" Michelle replied with a smirk of her own.\n\n\"Go do something,\" Brenda said as she pushed Michelle toward the dressing room door, \"oh and I'm definitely not modeling these for you!\" She said holding up the small black lace bottoms. \"Yet!\"\n\nUnable to react, Michelle stood there staring at the changing room door as it closed. Yet. What did she mean by yet? Was she going to model them eventually? Michelle's cage grew agonizingly tight at the realization. She quickly left the dressing room area, finding another three piece set of lingerie to fit Brenda and picking up an elegant nightgown for herself. Over Brenda's repeated protests, Michelle paid for the purchases. Walking arm in arm, they made their way to the shoe store.\n\n\"Again, how do you wear these all day long?\" Brenda said as she walked around in a pair of 3 1/2 inch heels. \"I couldn't imagine!\"\n\n\"You spend a lot more time on your feet than I do.\" Michelle replied. \"Trust me, I'm kind of envious!\" She said as she pulled out a pair of sneakers similar to the ones she was wearing. \"This is only the second pair of women's sneakers I own!\"\n\n\"How many pairs of heels do you own though?\" Brenda asked as she continued to slowly walk around.\n\n\"Ummm, that's a good question.\"\n\n\"Oh, I forgot,\" Brenda said as she approached, \"you have heels that coordinate with each dress and lingerie set you own!\"\n\n\"If you buy those,\" Michelle smirked, \"you will too!\"\n\nBrenda simply rolled her eyes as she stepped out of the heels and put them back into the box. It was true, while they both worked in the office, Brenda spend 90 percent of her day on her feet and Michelle spent that much time off hers. In one way or another. They took a cab to Brenda's place, where Michelle quickly put her purchases in one bag leaving the other for Brenda.\n\n\"Okay, so tell me about next weekend,\" Michelle said taking a seat, \"because I'm kind of panicking a bit.\"\n\n\"The girls are awesome, I've known them since college,\" Brenda replied, \"you and I can meet here and help each other get ready.\"\n\n\"That sounds fun!\"\n\n\"It's been far too long since I've put on makeup so it helps me too.\" Brenda replied. \"Honestly, if you think about that, it's really funny.\"\n\n\"Well you've already gotten lingerie advice from me today,\" Michelle beamed with pride, \"why not makeup advice too?\"\n\n\"Well I can't deny that.\" Brenda replied. \"We can eat something before we go out, but they'll have snacks too. They've rented a party bus for the night.\"\n\n\"A bus?\"\n\n\"Yeah, one of those one's that's more like an oversized limo,\" Brenda answered, \"don't worry, you'll be with me and they'll be wonderful to you!\"\n\n\"Okay, I trust you.\"\n\n\"After we meet up, we'll probably go to a club dancing,\" Brenda seemed excited while Michelle was the exact opposite, \"then go take in a male revue!\"\n\n\"Strippers?\"\n\n\"Yeah, strippers!\" Brenda replied. \"Oh don't worry, it won't be that bad!\" Brenda reached across, taking Michelle's hands in hers. All of a sudden, her voice got a bit hesitant but serious. \"You know,\" she was obviously struggling to say the next part, \"if you want, if it's late when we get back.\" Brenda swallowed hard. \"Well, so we don't have to wonder who's going to get the other home,\" she searched for the words, \"you could bring a bag and sleep here.\"\n\n\"That would be great!\" Michelle was genuinely excited about the idea, then quite worried.\n\nWhat did sleeping here mean? On the couch? In the bed? Would there be sleep first or something else? A myriad of questions, going back to the original question of what Brenda wanted with Michelle came racing back to her. She decided to focus on the next week and night and not worry about Saturday until it came.\n\n\"I have to meet the girls,\" Brenda had an obvious sadness in her voice, \"it's not something you can come to this time.\"\n\n\"That's fine,\" Michelle replied, taking Brenda's hand and walking toward the door of her apartment, \"I have to unpack still too.\"\n\nBrenda turned Michelle to face her before they got to the door. \"I hope you don't mind,\" Brenda said as she lightly touched Michelle's face, \"I don't want my neighbors to know I'm apparently into girls.\"\n\nTheir lips met, but unlike the kiss from yesterday, their lips parted quickly, their tongues met, swirling and twisting around each other. Michelle grabbed Brenda's hips, pulling their bodies together while Brenda's hand moved to the back of Michelle's head pinning it in place. Feeling daring, Michelle's hand slowly slithered down Brenda's back until she could feel the fabric of the Capri pants, then the curve of Brenda's butt. Cupping and squeezing Brenda's butt, they continued to kiss passionately.\n\n\"I guess that means you were an ass man?\" Brenda asked with a raise eyebrow.\n\n\"I liked any part a girl let me touch!\" Michelle responded in jest but was still quite serious.\n\n\"Well, just for that!\" Brenda replied slipping her free hand down and grabbing Michelle's bottom.\n\n\"Good thing we're doing this in your apartment then huh?\"\n\n\"I could imagine Ms. Mitchell down the hall,\" Brenda's eye roll was considerably exaggerated, \"seeing me kiss a girl like this!\"\n\n\"It would be far tougher to explain that I'm really not one!\"\n\n\"Oh her head would explode!\" Brenda laughed before kissing Michelle softly. \"I had a really fun day today,\" she said resting her head against Michelle's shoulder, \"thank you for that.\"\n\n\"I had fun too!\"\n\nThey walked hand in hand to the elevator, then quickly kissed just before Michelle got on. It had been one of the more epic days of Michelle's short intern as a girl, but it had also been one of the best of her entire life. Taking a car back to her place, Michelle cleaned Babette's sneakers before returning them, then decided to make something for dinner.\n\n\"You sneak!\" The text from Brenda read. \"When did you get the other set?\"\n\n\"Ummmm who, me?\" Michelle texted back.\n\n\"LOL! Brat! Thank you.\" Brenda texted, then added several heart emoji's.\n\n\"You're welcome!\" Michelle replied sending some heart emoji's back.\n\n\"I can't believe it took me becoming a girl to get a serious girlfriend!\" Michelle said out loud to no one.\n\nShaking her head, Michelle decided being comfortable would be better this evening, particularly with Babette out on a date. It was quite possible, given the way Babette had been speaking, that she wouldn't return until morning as it was. Instead of a nightie or anything overly girlie, Michelle dug through the pile of clothing Babette had left for her, which was a result of Babette cleaning out part of the closet and dresser for Michelle. Finding a bright yellow ribbed tank top, Michelle removed her bra and decided to remain in jut that and her panties. Settling into the couch with a glass of wine and some popcorn, Michelle couldn't stop thinking about her day and what next week would behold for her. She'd seen packs of attractive women at bars before, but never dared to approach them. Most of the time they would dance with each other, but occasionally a guy would work up the nerve to dance with one. She couldn't imagine what she would do if a guy asked her to dance. She'd certainly never danced in high heels before! Nor had she ever been to a male revue. Michelle decided not to focus on that, and think about the fact that she'd actually bought a woman lingerie today.\n\n\"That's an odd first.\" She said between sips of wine.\n\nThe scrubs didn't hide everything, but seeing Brenda in the three piece lingerie ensemble was eye opening for Michelle. Brenda easily had good size C cups, enhanced by the demi bra Michelle had specifically picked out, and a tanned and toned body. There was no way around it, Brenda was HOT! Again, Michelle's mind returned to what Brenda could ever want with her? A commotion in the hall caused Michelle to turn down the TV.\n\n\"UGH!\" Babette huffed as she burst into the condo. \"Thank GOD you're here!\"\n\n\"What happened?\" Michelle leapt off the couch to meet her friend.\n\n\"My date got sick!\" Babette grumped as she stepped out of her heels.\n\n\"Oh no,\" Michelle replied giving Babette a hug, \"anything I can do to help?\"\n\n\"Not unless you're 8 or more throbbing inches of insatiable man meat,\" Babette groused, \"and want to make me your bitch!\"\n\n\"Well,\" Michelle replied trying to lighten the mood, \"I doubt I can manage any of those qualifications.\" She gently lifted Babette's chin, bringing her eye to eye. \"But if I know you at all, I know you have a collection of toys around here,\" Michelle pressed her lips softly to Babette's, \"and I'll help you clean them when we're done.\"\n\nTheir kiss was far more animalistic than Michelle's earlier kiss with Brenda. Instead of wondering if it was okay to cup and squeeze Babette's butt, Michelle fumbled to undo the zipper on her gown. With the gown falling to the floor, Babette and Michelle slowly made their way toward the bedroom, all while trying to maintain a passionate kiss. Their tongues explored each other's mouths with reckless abandon, as their hands moved over each other's bodies. Finally in the bedroom, Michelle pushed Babette down onto the bed.\n\n\"Ohhh, something's gotten into my roomie!\" Babette cooed as she slid up the bed. \"Lube and dildos are in the nightstand,\" she pointed desperately, \"I just wish I had a strapon now!\"\n\n\"Who'd have ever thought,\" Michelle replied as she opened the drawer and pulled out a few dildos, \"that we would need these at this point in our lives!\"\n\n\"I can't think that straight,\" Babette moaned picking up a dildo and thrusting it to Michelle, \"but I need this inside me right now!\"\n\n\"Oh I'm sure it would be,\" Michelle poured some lube in her hand, greasing up a couple fingers, \"but this is my first time, well, like this, so you need to be patient.\"",
        "\"Oh geez, I'm sorry!\" Babette sat up on her elbows with a true look of concern on her face. \"Just take that and... ohhhhh, yeah, just like.... Mmmmm!\"\n\nWhile Babette had been trying to talk Michelle through things, Michelle had gently slid her index finger inside Babette. It was warmer than she'd thought it would be, and obviously tight. The canal seemed to be longer than the last time Michelle remembered doing this with a woman.\n\n\"And you could...,\" Babette gasped slightly at the feel of Michelle's tongue on her swollen balls, \"okay, I'll just shut up now.\" Lying back on the bed, Babette moaned softly as a second finger slid into her ass. \"Ohhhhh yesssss!\" She whimpered feeling the soft suck of Michelle's mouth on the tip of her cage.\n\nMichelle for the first time tasted precum, well, precum that was not her own. She'd experimented with it when she was younger, tasting herself just to \"see what it was like\". But now, with two fingers in her friend's ass, she just HAD to taste Babette too! Salty, sticky, but somehow satisfying. Not wanting to remove her fingers, or lift her head to see, she groped for the dildo with her free hand. Not only did Babette need her, Michelle needed relief too and would get it any way that she could.\n\n\"OH GOD!\" Babette groaned loudly as a Little Mikey size dildo slowly penetrated her.\n\nNot moving fast, but not stopping either, Michelle slowly pushed the fat cock into Babette's ass until the latex balls rested against Babette's body. Precum seemed to pour out even faster, like a steady stream of a faucet drip. Michelle did the best she could giving Babette's phallus shaped cage a blow job, knowing most of the actions of her tongue wouldn't be felt by her friend.\n\n\"Fuck! I need you up here!\" Babette grunted grabbing Michelle's wrist and pulling her onto the bed. \"On your back!\"\n\nMichelle complied, making sure to not lose grip on the dildo inside Babette, who much to her surprise was now straddling her head. Babette pulled Michelle's legs up, causing Michelle to cross them behind Babette's back as she felt Babette's tongue on her own swollen balls.\n\n\"Ohhh my!\" Michelle cooed at the sensation.\n\nHer mind awash with thought, yet none of them were regret. Michael had the caged cock of another man in her mouth, that man's balls resting on Michael's nose while engaged in a 69. It was a thought Michael couldn't even entertain, one that had never crossed his mind. At one fleeting point in his life Michael had wondered if he should try his luck with guys as he had none with girls, but that was unrealistic. Something about Babette softly suckling Michelle's balls while lubing Michelle's ass with a finger just felt right. Practically as right as kissing Brenda earlier. What was most confusing to Michelle was the lack of conflict in her mind. This felt amazing, and she wanted nothing more than for her and Babette to orgasm and to taste her friend's cum!\n\nMichelle began working the dildo into Babette's ass as Babette began to penetrate Michelle with another Little Mikey clone. Her entire body shuddering at the penetration, Michelle wrapped her free arm around Babette's body, grabbing one of her ankles to not only hold her friend in place but offer more of her ass to Babette who happily groaned. Michelle matched Babette's pace with the dildo as the two tried to pleasure each other to the best of their abilities.\n\n\"Right there!\" Babette almost screamed. \"Right there dammit!\" Michelle thrust the dildo into Babette as fast as she could on the angle her friend desperately needed. \"Ohhhhhhhh pppllllleeeeeaaaasssseeeeeee!\" Babette groaned.\n\nThere was no build up, no swelling cock, or hot jets of surging cum splashing into Michelle's mouth. Instead, a steady yet weak stream of cum leaked from Babette's caged member. Her friend collapsing above Michelle's body as the taste filled her mouth. It was disappointing yet wildly erotic. Suddenly, Michelle felt her own slow rush as the dildo stimulated Michelle's prostate\n\n\"Oh wow!\" Michelle's head dropped to the mattress as Babette's tongue explored for every drop of her seed.\n\nSlowly moving, Babette freed herself from Michelle's legs, pressing her torso against Michelle's before bringing their lips to meet. Michelle felt a salty warmth with Babette's tongue, it wasn't just the left over taste, but Babette had not swallowed it all and was not dribbling it into Michelle's mouth. The kiss was erotic and satisfying for Michelle, who plunged her tongue into Babette's mouth searching for more. She'd never tasted herself like this before as the rare girlfriend to give him a blow job preferred him cum in a tissue of napkin.\n\n\"You know what this makes you right?\" Babette asked as their kiss broke. Michelle shook her head no. \"A cock sucker!\"\n\n\"Do you think that counts?\" Michelle teased. \"Or should there be an asterisks after it because you were caged?\"\n\n\"Doesn't matter!\" Babette smiled. \"My cock was in your mouth, and you were sucking!\"\n\n\"Well, truth be told,\" Michelle blushed, \"you're not wrong!\"\n\n\"Thank you for that.\" Babette laid her head on Michelle's shoulder, feeling Michelle embrace her. \"I was just so worked up for tonight.\"\n\n\"It's okay,\" Michelle felt oddly comfortable nearly naked in the bed with Babette, \"I'm your friend and friends help each other!\"\n\nBabette slowly climbed off Michelle, collecting both dildos and disappearing into the bathroom to clean up. When she returned she had on a short purple robe and a nightie. Michelle took the cue, going into the bathroom to clean up herself, eventually deciding on a mid-length nightgown of her own. When she came back to the bedroom Babette had already disappeared. Michelle found her walking to the couch with two glasses of wine.\n\n\"So,\" Babette started as she took a seat on the couch, \"how was your day with naughty nurse Brenda?\"\n\n\"I got a cute little cocktail dress,\" Michelle smiled sheepishly not wanting to let too much on, \"after we had a really nice lunch, then we went lingerie shopping.\"\n\n\"For you or her?\" Babette asked with a raise eyebrow.\n\n\"Both actually!\"\n\n\"Hmmm, I'd never considered Brenda wore lingerie!\" Babette giggled. \"I mean, certainly not like we do given she's in scrubs all the time.\"\n\n\"Well, I bought her some lingerie, so she has some now.\" Michelle's voice was slightly annoyed in tone. \"I really like her though,\" she said taking a long sip of wine, \"and I just don't know how this will all work out?\"\n\n\"You mean the work thing?\" Babette backed off sensing her friend's frustration.\n\n\"Yeah, I mean,\" Michelle searched for her words, \"she and I kissed today, like really, deeply kissed! And now here I am, on a couch after we just did whatever it was we just did.\" Michelle could feel her heart racing as she spoke. \"And there's the whole Big Mikey thing! I mean, after I saw him,\" she shuddered feeling the hair on her arms raise, \"I went home and rode my biggest dildo until my thighs burned!\" Michelle couldn't bring herself to raise her eyes past her wine glass. \"I really like her, but I really like Michelle too.\"\n\n\"Who says you can't have both?\"\n\n\"How could that even happen?\" Michelle shot back. \"Let's face it, I'm living with you and we're obviously intimate,\" Michelle said frantically waving her hands as she spoke, \"Ms. Allison is guaranteed to fuck me three to four times a week.\" Taking a sip of wine before she continued. \"I mean, what girl wants a, I dunno, significant other that finds enjoyment licking their boss' shoes clean?\"\n\n\"The best ones?\" Babette replied.\n\n\"She is something special.\" Brenda smiled warmly at the thought. \"But then there's the whole dating thing,\" Michelle continued, \"it's not like I can tell her she and I can't go to the movies because I'm going on a date with a guy who's going to fuck my brains out later.\" Michelle felt tears welling up in her eyes.\n\n\"Are you dating though?\" Babette asked sincerely. \"Or are you just having fun?\"\n\n\"She invited me to sleep over after the bachelorette party,\" Michelle replied, \"that could mean anything right?\"\n\n\"Don't obsess, just play it by ear.\" Babette responded before pulling Michelle into her, \"She will tell you what she wants eventually.\"\n\nMichelle lay on her side next to Babette into the corner of the couch, thankful her friend was able to talk her down. After an hour they made their way to the bedroom, did their normal nighttime activities and curled up in bed with Babette spooning Michelle. Michelle felt happy and content as she realized she had two, if not three, people that cared for her deeply. Yes, Ms. Allison was her Boss and Madam, but She had always shown concern for Michelle beyond her transformation. On Monday she'd have to ask Ms. Allison for advice.\n\nSunday passed quickly, in part because Michelle and Babette had slept in. They'd spent a lazy Sunday, interrupted by texts with Brenda that were a constant source of teasing from Babette. Sunday night Michelle returned to her apartment, laid out her wardrobe for Monday, texted Babette and Michelle, and gone to bed. Monday would surely be a busy day after all.\n\nIn the morning Michelle woke up feeling wonderful. The idea of going to a bachelorette party intrigued her, and while she wasn't looking forward to trying to dance in heels or getting a lap dance from a guy in a G-string, the idea of having fun with Brenda in that environment was paramount. That was what she committed her focus to, well mostly. Her workout that morning was to find YouTube videos to help her learn to dance in heels. Dressed in her sports bra, spandex boy shorts and 4\" heels, Michelle did her best to keep up with what was on the videos. It was far more of a workout than she'd expected!\n\nAfter her shower, Michelle donned her own three piece lingerie for the day, something close to what she'd helped Brenda find. The white satin garter, bikini and bra set had small multi-colored hearts on them with minimal lace and a few small bows. Michelle paired that with a tan skirt and sleeveless mock turtleneck which showed off her breasts nicely. Stepping into her heels, Michelle made her way to the coffee shop to meet Brenda. Taking a seat by the window, Michelle watched as Brenda walked by, the woman's face beamed as she saw Michelle there already. As she entered, Michelle got up and gave Brenda a hug.\n\n\"You seem really happy this morning.\" Michelle said putting Brenda's coffee in front of her.\n\n\"I don't know,\" Brenda said taking a quick sip, \"I was kind of concerned I wouldn't see you today.\"\n\n\"Why is that?\" Michelle was almost floored that Brenda would think they wouldn't see each other.\n\n\"We had a really fun day, and texted a lot,\" Brenda showed hints of insecurity for the first time, \"but I wasn't sure if maybe I was a bit too forward on offering you to sleep over on Saturday. You don't have to if you don't want to you know.\"\n\n\"Relax!\" Michelle was suddenly thrilled to hear that Brenda was as insecure as she was about their relationship. \"It was sweet of you to offer,\" Michelle gripped Brenda's thigh feeling something different yet familiar under her scrub pants, \"I know it'll be late and we'll both be exhausted and probably a bit tipsy.\" Michelle moved her hand, then looked up at Brenda's face to see a wry smile. \"You're not wearing?\" She whispered excitedly, \"I mean are you?\"\n\nBrenda straightened her leg out, quickly looking around, before tugging the pant leg up to reveal a pair of stockings under her pants and socks before pushing them back down again.\n\n\"Oh my God!\" Michelle was giddy with excitement. \"I can't believe you have them on! How do they feel?\"\n\n\"Kinda sexy.\" Brenda blushed. \"But I think I need help,\" she leaned in closer to Michelle as she spoke, \"the straps are rubbing on my thighs and it's driving me insane!\"\n\n\"I know how to fix that!\" Michelle said proudly. \"Can we get in the office early?\"\n\n\"Sure!\" Brenda replied grabbing her cup. \"Let's go now!\"\n\nThey hurriedly got up and headed for the door, giving the girl behind the counter a quick wave on the way out. Michelle could not focus on anything else outside of Brenda's lingerie. She was actually wearing lingerie that Michelle had bought for her! Poor Michael had bought a girl lingerie once, but his budget didn't really meet her standards. The \"Are you kidding me?\" response hurt. But here was Brenda, confidently walking while holding Michelle's hand, wearing the lingerie she'd purchased! Once in the door, Brenda took charge quickly.\n\n\"We can't mess around,\" she all but barked, \"you go into the first exam room and get ready, I'll do what I need to do here and will join you shortly.\"\n\nMichelle did as she was told, taking her top off on the way down the hall and undoing her bra as she entered the exam room. There, on the table was the gown already. Obviously, Brenda had put it there Friday for her! A moment later Brenda entered while undoing the knot holding her scrub pants in place while pulling up her top and long sleeve undershirt.\n\n\"Honestly, I can't believe I'm doing this!\" Brenda rolled her eyes as she let her pants slide downward.\n\nKneeling in front of Brenda, Michelle couldn't help stop to take in everything. Sure, she'd seen Brenda in this outfit in the dressing room, but she was now face to face with Brenda's panties. The soft, delicate, silky panties covering what Michelle could only imagine as fleshy perfection.\n\n\"Hey, come on now,\" Brenda snapped her fingers, \"what would your Boss do if you were in the office with your skirt pulled down in front of a client?\"\n\n\"Umm,\" Michelle didn't dare go further, \"okay, here's the thing, you need to tighten them just a bit more but also pull the stocking up.\" Michelle put her hands on Brenda's left leg. \"Let your pants fall to your ankles.\"\n\n\"What?\" Brenda couldn't hide her shock. \"You can't be serious.\"\n\n\"Do you want help or chaffing?\"\n\nGrumbling an inaudible response, Brenda let her scrub bottoms fall to her ankles. Working quickly, Michelle tugged the stockings up starting at the ankles, gaining another inch or more of length. She repeated the process for the other one, noticing that as she leaned forward slightly she could smell the slight musk of her friend. Was that a spot on her white panties reflecting a bit of moisture? Was it possible Brenda was getting excited about this too? Michelle struggled to focus as she adjusted the two front straps to her liking.\n\n\"Okay, turn around!\" Michelle ordered.\n\nTurning quickly, Brenda lost a bit of balance moving backward slightly. With her butt now barely inches from Michelle's face, Michelle's cage became significantly more uncomfortable. Not feeling anything happening behind her, Brenda turned slightly.\n\n\"Will you stop ogling my ass and fix these?\" She hissed.\n\n\"But it's such a cute ass!\" Michelle teased as she adjusted the straps. \"It's the first girl's ass I've touched since I've become a girl!\"\n\n\"Well, thank you I think,\" Brenda rolled her eyes again, \"are you all set now?\"\n\n\"Yeah, you're all set.\" Michelle replied, leaning forward to help pull up Brenda's bottoms and catching another waft of her musk.\n\nShe was excited! Michelle was convinced of it! Whether it was the lingerie, or being in the office exposed with Michelle right there she wasn't sure. But something had definitely excited Brenda! Several minutes later the Doctor came in for his exam. He was quite thrilled with the progress and scheduled Michelle for her breast augmentation the following week. He said they would also shave Michelle's Adam's apple a bit as well while she was under. It was not pronounced as some, but the perceptive eye might see it. Plus, it was fairly standard for Ms. Allison's girls regardless of size. With the injections done, the Dr. stepped out leaving Michelle to administer the cream.\n\n\"By next week you won't need your inserts and pads anymore.\" Brenda said as she slowly rubbed cream on Michelle's chest.\n\n\"I'll still need appointments though right?\" Michelle noticed Brenda's cream rubbing seemed less clinical this time out. She appeared to be watching more intently and rubbing slower.\n\n\"Of course!\" Brenda replied with a twinkle in her eye, \"After the procedure you'll need a couple, and you'll still only be a B by then, so follow ups until you're the size you want.\"\n\n\"What do you think?\" Michelle asked. \"About the size I mean?\"\n\n\"I think a C would look really good on you.\" Brenda blushed a bit suddenly realizing she'd been rubbing Michelle's chest a bit longer than needed. \"You'll almost be a B by Friday.\"\n\n\"So long as I can fill out my dress!\" Michelle replied as she stood up letting the gown fall to her wrists. \"We will still have our lunches regardless though, right?\"\n\n\"Absolutely!\" Brenda's eyes met Michelle's for the first time in a few minutes. \"I don't want to lose those!\"\n\n\"Good!\" Michelle daringly stepped forward giving Brenda a peck on the lips before putting on her bra.\n\n\"Brat!\"\n\n\"You'll have to let me know what you think about your stuff there.\" Michelle said as she nodded.\n\n\"I will,\" Brenda replied, \"it does feel better already.\"\n\n\"That's great news! See you at lunch!\"\n\nTen minutes later Michelle was in the office heading down the hallway to Ms. Allison's office. After removing her dress, Michelle noticed three Little Mikey dildos hanging on the back of the door. As neither of them replaced the hanger that Michelle put her clothing on, she gave each ten lovingly long strokes with her mouth before reporting to her Boss. After a quick recap of the weekend, to include the \"sissy sixty-nine\" with Babette, Michelle asked for advice from Ms. Allison.\n\n\"What you do on your time is yours sweetie,\" Ms. Allison said warmly, \"if Brenda wants to be your girlfriend then I'm all for it! Contrary to what a lot of men believe, there's more than one way to please a woman sexually!\" Michelle nodded realizing she'd never pleased a woman that way before. \"Have you brought a woman to orgasm with your mouth before?\"\n\n\"I doubt it Ms. Allison,\" Michelle replied eyes cast downward, \"my last attempt was clumsy at best.\"\n\n\"That's okay, don't feel bad,\" Ms. Allison conveyed an amazing amount of concern with Her voice which took Michelle by surprise, \"on Thursday I'll have you take a video call with a friend of Mine, she can teach you the ropes.\"\n\n\"Really?\" Michelle couldn't believe what she was hearing. \"I just guess I don't understand why,\" her eyes moved back and forth as she searched for words, \"I mean, you want me to be here for clients yet you're making sure I can please someone who isn't one?\"\n\n\"Oh sweetie,\" Ms. Allison walked around to the front of Her desk, taking a seat on the edge, \"there are always more than one reason for the things I do for your training. I have Female clients who expect you to have certain talents, not of all involve a dildo, additionally, I can see you truly care for Brenda, and I want to see you happy.\" Allie smiled at Her charge hoping Michelle was understanding how sincere She actually was. \"You've not had the best luck in life to this point,\" Allie continued, \"as Michelle you have a new beginning and We will change your luck together.\"\n\n\"Thank you so very much Ms. Allison!\" Michelle felt overwhelmed, she wanted to jump up and hug Her.\n\n\"Oh My, is that a speck of dust on My shoe?\" Allie said as She held Her foot outward.\n\nQuickly moving to her knees, Michelle didn't hesitate as she pressed her tongue against the soft leather. Allie was pleased, not only in the speed of Michelle's reaction, but the fact Her newest sissy had crossed her wrists behind her back as well. Yes, Michelle was progressing nicely. In another couple of weeks she would be ready for her first date. Mikey was already looking forward to it and had a very special evening planned for Ms. Allison's dutiful sissy."
    ],
    "authorname": "Ms_Allison",
    "tags": [
        "men in heels",
        "men in lingerie",
        "femdom",
        "sissy slut",
        "strapon play",
        "forced fem",
        "forced feminization",
        "anal training",
        "cross dresser",
        "cross dressing"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/the-agency-ch-11"
}