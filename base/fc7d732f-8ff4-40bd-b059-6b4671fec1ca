{
    "title": "Hampered in His Plans Ch. 01",
    "pages": [
        "The chronological order of my stories is now listed in WifeWatchman's biography.\n\nFeedback and constructive criticism is very much appreciated, and I encourage feedback for ideas.\n\nThis story contains graphic scenes, language and actions that might be extremely offensive to some people. These scenes, words and actions are used only for the literary purposes of this story. The author does not condone murder, racial language, violence, rape or violence against women, and any depictions of any of these in this story should not be construed as acceptance of the above.\n\n*****\n\nPart 1 - Prologue \n\n\"So, my lovely Sinon,\" he said, as he handed her a glass of sherry, \"our friend Bryce went afoul of the Law. He is no longer an asset to us.\"\n\n\"That is correct.\" said the lovely Sinon, accepting the glass and clinking hers with his. She took a sip, then said \"In his defense, he was trying to kill a filthy dog. A couple of the Iron Crowbar's Angels got in the way.\"\n\n\"Yes, I applaud his effort to improve this good world by eliminating filthy dogs.\" he said. \"So, what happened to that foul creature?\"\n\n\"The Iron Crowbar himself is taking care of the dog now.\" said Sinon. \"Which makes the dog untouchable.\"\n\n\"Oh?\" he asked. \"Why do you say that?\"\n\nThe lovely Sinon fixed her eyes upon him. \"You did hear about what was done to Bryan Thatcher at the Asylum? And that was for a Police dog. I want no part of what the Iron Crowbar would do to anyone who went after his own dogs.\"\n\n\"I happen to agree with you. For now, anyway.\" he said in agreement. \"So, McCombs and Hendricks have proved utterly worthless to us, I perceive.\"\n\n\"They never were of much value.\" said Sinon. \"Bryce achieved some things, but the Iron Crowbar is all over all three of them like white on rice, and has been for a while. Fortunately, this distracts from our real assets in the Police Force, the most valuable ones.\"\n\n\"Still, my dear,\" he said, \"we must choose wisely, and not simply discard good assets just because they seem of little value. Take Gor-don, for example... he is going to be a strong asset for us again, I believe. Get in touch with Bryce, through intermediaries; I have plenty of uses for him, and will soon have him freed from the Iron Crowbar's clutches. And Brownlee... even he might be worth saving.\"\n\n\"I understand that Dr. Searles has recommended he be put on the transplant list.\" said the lovely Sinon. \"And in any case, the Iron Crowbar, the Chief of Police, and the Sheriff are all working to keep Brownlee from returning to the TCPD, at least as Deputy Chief.\"\n\n\"Well, then,\" he said, \"we shall have to steer that boat into currents that favor us. I'm sure Jack Lewis can find a place for Brownlee at the State level.\"\n\n\"He's running for Governor, and is very busy right now.\" said Sinon. \"Gaston is practically running the SBI. Governor Jared is getting pissed; Gaston dodges and weaves, doesn't answer the Governor's questions. Gaston and Conlan are in constant conflict, as well. And this might not be good for us. Our people in the SBI have been laying plans for weeks, months even, and are getting ready to go operational. But Gaston could blow it for us, without even realizing it.\"\n\n\"Yes, I'll have to intervene there, get that all straightened out.\" he said. \"One final thing: how is the Iron Crowbar doing in his relentless pursuit of me, the one he calls the Consultant of Crime. Nice name, I like it, but how is he really doing?\"\n\n\"I don't know.\" said the lovely Sinon, her brow furrowing. \"I am not sure. He's been sniffing around 'The Four' after that BigPharmaCorp disaster. Or at least he has his minions Perlman and Nash investigating them for him. They're really concentrating on the Iron Crowbar's sister.\"\n\n\"Ah, that is... interesting.\" he said. \"Most very, very... well, to have subordinates researching that suggests several things. We shall have to see which direction is the true path...\"\n\nPart 2 - Philosophical Discussion \n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" shouted the lovely redheaded reporterette on Tuesday, December 29th. \"Amidst the Joy of the Holiday season, there is serious trouble within the ranks of the Fire Department. The National Brotherhood of Emergency Services Workers, the NBESW, the EMT's Union, has declared the Fire Department's austerity measures cutting all the EMT's pay and furloughing many of the senior EMT personnel to be a violation of the County contract, as well as singling out the EMTs unfairly and unlawfully. The Fire Department has announced they will not cut nor lay off any Fire personnel other than the EMTs. The EMT Union is considering further action, including lawsuits and a possible strike.\"\n\nA video was played, showing Jack Naples of the NBESW. Naples had a long face that angled down to a chin in a triangular way; put some white makeup and a green wig on him, and with his perma-grin, perma-sneer, he could be The Joker of comics fame. \"It is time for the EMTs to stand up to the oppressive actions of the Fire Department and the illegal actions of the Town Council.\" said Naples. \"We must take decisive action to save EMT jobs and serve this County as it deserves to be served!\"\n\nBettina then continued: \"Speaking for the Town & County Council, Thomas P. Cook has declared that a strike by the EMTs would be illegal, allowing the County to fire them and replace them completely. When asked if the EMTs would be replaced by a private ambulance service, he said only that nothing has been decided yet. But he made it clear that the Council would not tolerate a strike by the EMTs.\"\n\n\"And in other news,\" said Bettina, \"the Wildcats are preparing for the National Championship game, to be played at AT&T Stadium in Arlington, Texas. But they'll play without their defensive coordinator, Coach Ted Thrasher, who was released from his contract and is taking over the duties as the Bulldogs' head coach full time.\"\n\n\"Why didn't they keep him through the Title game?\" asked Cindy to me as we drank coffee in MCD. The room was nearly empty; only Joanne Cummings was here already. She and Cindy had gotten in some good crowbar training in the ring. I'd worked out with Sergeant Tate, then run with him and some of the cadets, even though School was not in session for the Holidays.\n\n\"It was kind of a solidarity move.\" I said. \"The Wildcats made a point to tell the Conference they were allowing Coach Thrasher to take over before Christmas because they support the Bulldogs in the controversy against State Tech.\"\n\n\"Oh wow.\" said Cindy. \"That's some solidarity, there. But your Coach Richmond is like that.\"\n\n\"Yes, he is.\" I said. \"The Conference got the hint, though. I heard from my favorite confidential source on Campus that they're backing off and will let hostilities die down. The Bulldog players got justice for Nick Eastwood, and it should be cleaner from now own.\"\n\n\"That's an interesting concept.\" said a voice behind me. I turned to see the lovely light-skinned black woman, ADA Paulina Patterson, come into the room, obviously pregnant, looking radiant.\n\n\"Good morning.\" I said. \"What concept is that?\"\n\n\"Justice.\" said Paulina. \"What is 'Justice'? How do you define it?\"\n\n\"There's earthly Justice, and then there's the Lord's Justice.\" Joanne said.\n\n\"That's a thought.\" said Cindy. \"What do you think it is, Paulina?\"\n\n\"What we do, of course.\" said Paulina. \"Catch criminals, bring them to Court, give them their fair trial, then put them away if and when they're found 'guilty'.\"\n\n\"What if they're actually innocent?\" said Joanne. \"It happens.\"\n\n\"Sure it does.\" I said. \"No system is perfect. But I believe the American Justice System is as good as it's ever going to get on this planet.\"\n\n\"I know a lot of people that don't agree with you, Don.\" said Paulina. \"Most of them have my skin color. I know better, but I'm in the vast minority of that Minority. What about you, Cindy? What do you think?\"\n\n\"One of the many things I've learned from my father, my blood father, Dr. Eckhart,\" said Cindy, \"is sort of what Joanne is saying... but it's more karma than anything else. He says that those who do others wrong on this earth will eventually pay for it. If not here, then in the next life or somewhere else.\"\n\n\"That's what Hell is for, ma'am.\" said Joanne.\n\n\"And that's one of the things about Christianity that I've never liked.\" I said. \"I just cannot accept the concept of Christian 'Hell'. Eternal damnation and torture just for not believing Christ is the Messiah? Or for earthly actions that might be bad, but certainly don't merit torture and damnation for eternity. Not to impugn those who believe, but the concept of Hell seems to contradict the entire rest of the Bible.\" Joanne did not like my words, but did not say anything.\n\n\"What about you, Don?\" asked Paulina. \"What is your idea of 'Justice'?\"\n\nI sighed. \"You know, I could say it's catching the perps and putting them through the Court system. But that's not a perfect answer. Take that Lou Stevens guy. His wife was raped in front of him, and the Statute of Limitations had run out on the crime, insuring that Fulton would never pay for his crimes through the Justice System. Of course, Stevens's own administration of what some would call 'Justice', particularly to Fulton's head, got Stevens in trouble with that same Justice System. That's the law, that's 'Justice'... but is it really?\"\n\n\"So that's why you let Nash solve that case, instead of solving it yourself?\" asked Cindy.\n\n\"Oh no, Nash solved the case because he was working on it and he did a very good job. No need for me to be involved, and I was bringing Dr. Cubbard to 'Justice' at the same time. That's another example: Cubbard did not get nearly what he deserved from the Court system.\"\n\n\"If you'd had to bring in Stevens,\" said Paulina, \"or if there was a crime committed where you sympathized with the criminal, would you let him or her go? Or do the right thing and bring him or her in?\"\n\nI nodded for a second, remaining silent. \"You know,\" I finally said, \"that's like those ethics questions they asked us in our ROTC classes. About war crimes, stuff like that. And while everyone wants to say they'll do the right thing... well, all I can say is that I could only decide when I'm actually confronted by the situation. And I hope I won't ever be.\"\n\nCindy was accepting of my answer. Joanne was thoughtful. Paulina seemed miffed, though. She said \"I really do hope you'd never let a killer walk free.\"\n\n\"Speaking of ADAs,\" I said, changing the subject, \"when is Jenna getting back?\"\n\n\"Oh yes,\" said Paulina, \"how is her uncle?\"\n\n\"He didn't make it.\" Cindy said. \"He died last Tuesday. I called the hospital up there and found out.\" The unspoken implication in my cousin's words was that Jenna had not told her; Cindy had had to find out on her own.\n\n\"Oh, I'm sorry.\" said Joanne. \"Has anyone from the Police Department sent flowers?\"\n\n\"Yes.\" I said. \"Teresa told Scott Peterson, who is Public Relations as well as Press Relations. He had someone send flowers.\"\n\n\"Speaking of Teresa,\" said Cindy, \"How is her friend Amy doing?\"\n\n\"Laura said the tests would be back today.\" I said. \"But we can ask Teresa herself. Good morning, Lieutenant. The coffee is right here waiting for you. I perceive you slept at the Hospital last night.\"\n\n\"Thank you, sir.\" said Teresa. \"And good morning everyone. Amy's doing okay. She's just tires really easily. And how did you know I stayed at the Hospital? Your wife tell you?\"\n\n\"Nope.\" I replied. \"I'll be blunt, Lieutenant: you look like hell. You need to go home, clean up, and get some rest. It's a quiet time. Take half a day.\"\n\n\"Thank you, sir.\" Teresa said.\n\nPart 3 - Storm Clouds Gathering \n\n\"I just don't know, Don.\" said Fire Marshal Zoe Singer. \"It's getting really bad, really hostile. I've been called in to investigate three reports of physical attacks upon EMT technicians. They're refusing to do the grunt work, like clean the Firehouse floors, and a couple of the EMTs were attacked. The leadership is still holding the line and doing the right things, and I've suspended three Firemen already. But it's getting ugly.\"\n\nShe was sitting in my office at 10:00am that same morning, wearing her dark blue shirt and matching dark blue pants, her oak leaf clusters of the same rank as my own on her shoulders. Her badge was like mine, except the lettering and numbering was red and had the words 'Fire Marshal' instead of my blue-colored lettering that said 'Commander'. She was also drinking the coffee I'd poured for her, and she looked very tired.\n\n\"What's the top brass say?\" I asked.\n\n\"Chief Quinlin has put out an edict that he will not tolerate violence or abuse of anyone.\" Zoe said. \"I think he pretty much means it. But the Assistant Chief is openly hostile to the EMTs, as are a couple of the Battalion Chiefs, whose ranks are the same as yours and mine.\"\n\n\"The Superintendents are a mixed bag.\" Zoe continued. \"Davies is the best one of the bunch, and he laid down the law along with the Chief, but Superintendent Harris of the Downtown Station, Fire Station No. 1, has encouraged his people to be as hostile as they like to the EMTs. I secretly had the video cameras in that Station kept on permanently, and your Supervisor Milton is getting a direct feed, in case anything happens.\"\n\n\"Good.\" I said. \"Do you have a warrant to do that?\"\n\n\"Yes.\" said Zoe. \"For the feed to the Police, anyway. Inspector General Wellman had the Police secure one; I think your Lieutenant Perlman formally made the request.\"\n\n\"Good.\" I said. \"Then we'll be able to act immediately upon any probable cause.\" After a pause I said \"Well, I don't know what else we can do, Zoe. Once the New Year hits, I guess we'll find out then.\" After another pause, I added \"I still don't understand the hostility towards the EMTs in this County.\"\n\nZoe nodded, then said \"Neither do I. Changing the subject, how is Jenna Stiles doing?\"\n\n\"As far as the abduction and her ordeal is concerned,\" I said, \"she seems to be doing okay. But as far as her relationship with my Police Captain... I dunno, I'm not liking what I'm seeing and hearing.\"\n\nJust then the phone rang. It was my wife Laura. \"Can you come to the Hospital?\" she asked. My heart felt a chill at her next words: \"And bring Teresa.\"\n\n* * * * * * * * * * * * * * * *\n\n\"Hello, Amy.\" said Laura as she entered Amy's hospital room, followed by me, Teresa, Cindy (of course), and Dr. Richard Searles. \"This is Dr. Searles. He's a heart doctor, but he can do other transplants, and he's the best in the world at what he does.\" \n\n\"Hello, Amy.\" Dr. Searles said quietly, giving as much of a smile as he was capable. \"How are you feeling?\"\n\n\"Okay, I guess.\" said Amy. Teresa came up to the other side of the bed from where Laura was standing, to be by Amy's side.\n\n\"Amy,\" Laura said, \"your tests came back. I'm not going to sugarcoat this. You're very sick.\" She told Amy in fairly simple terms of the serious disease that had befallen the teen girl, and finished by saying \"You need a liver transplant. Dr. Searles is going to put you on the list to get one. You just stay strong, okay?\"\n\nTeresa took Amy's hand in hers. \"Don't worry, we'll get through this. We'll find you a new liver and you'll be a lot better.\"\n\n\"Thanks.\" said Amy, trying to smile to reassure Teresa, and trying to mask her inner fear.\n\n\"And we'll bring Buddy to see you, too.\" said Teresa. She looked over at me.\n\n\"Absolutely.\" I said. \"I'll bring Buddy in later today.\"\n\nJust then, a nurse came in bringing Amy's lunch. I was glad that I did not have to eat it. Laura used the moment as an excuse to call me and Teresa outside.\n\n\"There's one more thing, that I don't want her to hear.\" Laura said. \"Amy's blood type is O-Negative, which is bad enough for getting a transplant. But worse, she has other blood factors that make it pretty unlikely we'll find a good match. We're looking for 'close enough', but I don't want you getting your hopes up too much. It'll be a minor miracle if we get a match... in time.\"\n\n\"How much... how much time does she have?\" asked Teresa, her eyes widening at the import of what she was hearing.\n\nLaura looked into Teresa's eyes and said \"Teresa, you may have found her just in time. She may have only three or four weeks left without a transplant. I'm sorry.\"\n\n\"No.\" said Teresa defiantly. \"She has a chance. We'll find her a liver--\"\n\n\"And who is going to pay for this?\" asked a voice. Laura whirled to face the Hospital Administrator, Dr. Louise Alcott. Dr. Alcott and my wife did not like each other. I'd heard rumors that Alcott had a heart that would turn even Julie Newton's stomach when it came to money, and that Alcott could squeeze a dime out of a turnip.\n\n\"Are you kidding?\" Laura hissed. \"I'm trying to break this news to her closest friends, and you come in talking about money?\"\n\n\"I've talked to the Orphanage.\" said Dr. Alcott, as if Laura had said nothing. \"Their insurance doesn't cover this. And the County's Indigent Services will only pay a certain amount. If she can't make up the rest, she'll be transferred to State Medical in Midtown.\"\n\n\"Come on, Dr. Alcott,\" said Dr. Searles, who had just come into the hallway, \"they don't have the resources we do, the resources this little girl needs to survive.\"\n\n\"That's the regulations.\" Dr. Alcott said. \"I'll only give her 24 more hours to remain here.\" \n\n\"Wait!\" said Teresa. \"I'll get ADA Patterson to file a petition with the Court, and make me her legal guardian. Then I can put her on my insurance.\"\n\n\"That can't happen for at least a month.\" said Dr. Alcott, seeming to hurl the words at Teresa with contemptuous delight. \"And even then, the Insurance Company for the County, which covers the Police Department, will refuse because she has a pre-existing condition. And that's even if you're allowed to become her legal guardian, which will take months for the Court to decide. Months. Your solution is unacceptable, Officer. I'm going to have this girl transferred.\"\n\n\"I've got some money saved up.\" said Teresa. \"Please, just let her stay, I'll find a way to pay for it.\"\n\n\"Teresa,\" whispered Cindy, \"you don't have anywhere near that kind of money. None of us do.\" Dr. Alcott's look at Teresa was a sneer, and my crowbar was whispering to me, aching to wipe that look off that bitch's face.\n\n\"Like your father says, Cindy,\" said Teresa, groping for an answer, \"where there's a will, there's a way.\"\n\n\"Ah, how true that is.\" I heard a gravelly voice say, followed by that shock of white hair coming up behind Dr. Alcott. \"And, my dear Teresa, your will shall become my way. Dr. Alcott, I will be personally taking care of young Amy's expenses while she is in this Medical institution.\"\n\nDr. Alcott seemed none to pleased about that. \"We accept insurance here, Dr. Eckhart, not your ill-gotten money.\" I had to stop Cindy from charging the woman by stepping in front of her.\n\n\"Ah, Dr. Alcott,\" said Eckhart, with a look on his face I had not seen before, a look of cunning mixed with contempt, concealed in a sinister smile, \"I am so sorry to hear that. My money was lawfully earned; it is legal tender, and perfectly legitimate. But of course, if young Amy is denied this Hospital's medical services, then I might have to speak with my nephew, this County's Police Commander, about a few interesting things going on at the very top levels of this hospital, as well as some persons that you've been very friendly with--\"\n\n\"All right!\" hissed Dr. Alcott, cutting him off. \"As long as you pay the bills in full, and keep your mouth shut, she can stay.\" She turned on her heel and walked away. Cindy gave Teresa a hug. Eckhart exchanged a glance with me before turning his attention to the others.\n\n\"I believe my daughter has the very best taste in who she chooses as her friends.\" said Dr. Eckhart, beaming at Teresa. \"Both she and young Amy are fortunate, indeed.\"",
        "\"So am I.\" I said. \"Speaking as her boss, of course. By the way, Doctors Fredricson and Searles... if that woman gives you the first hint of trouble, let me know.\"\n\n\"She really can't fuck with us, we're Staff.\" said Laura. \"And she knows I have more sway with Dr. Wellman than she does.\"\n\n\"I think you have more sway with the Iron Crowbar too, Laura.\" said Cindy.\n\n\"I'm just glad he and and all of you are on my side.\" said Teresa. \"And thank you, Dr. Eckhart.\"\n\n\"My dear,\" said Eckhart, \"that is what family is for.\" Even as he spoke, an idea was forming in my head.\n\n* * * * * * * * * * * * * * * *\n\nAmy's medical bills were taken care of, but we still had some issues. That afternoon, I took Buddy up to see Amy. The young girl's face brightened up considerably when she saw him, and he was very happy to see her, too. She petted him for a long time, until Nurse Jones came around and told me I had to go for the night.\n\nBut the next day, as Cindy and I came through the service entrance that Staff used, we were confronted by two burly security guards.\n\n\"You cannot bring that dog into the hospital.\" one of them snarled at me.\n\n\"What?!\" I said, stunned. \"I most certainly can.\"\n\n\"It's against policy,\" said the guard, \"and we have been given orders to prevent you, especially you, Troy, from bringing that dog into this hospital. If you try, we will stop you by whatever means necessary, including the use of lethal force. And you have no jurisdiction here. State property.\"\n\n\"And whose orders would those be?\"\n\n\"This Hospital's Administration, based upon complaints by the Staff.\"\n\n\"Not the Doctor's Staff.\" Laura said as she walked up behind them. \"Let my husband through... with the dog. By the way, those two officers are SBI Agents, and have all the jurisdiction they need.\" That wasn't true, we couldn't be SBI Reserve Agents in our home jurisdiction, but I wasn't going to correct my wife at this juncture.\n\n\"We have our orders, Doctor.\" said the guard, hurling his words at us. \"And I intend to follow them, including using deadly force to kill your husband if he tries.\"\n\n\"Laura, would you come over here?\" I asked. My wife went past the guards. I handed Buddy to her. The red crowbar came out. \"Two against one, this will be all too easy.\" I said.\n\nA blue crowbar was also produced, by my platinum-blonde-haired partner. \"Two against two, Batman. And it's going to hurt.\"\n\n\"I pity the fools.\" I said. We prepared to charge the guards, who were going for their guns, when an older voice called out:\n\n\"Hold on, hold on!\" The voice belonged to the Captain of the Hospital Security Staff, with whom I'd talked just days before on Hospital security. \"Gentlemen,\" he said to his guards, \"are you crazy? This is the Iron Crowbar. Let 'em through before something wet happens to you.\"\n\n\"Sir, we have our orders.\" said the guard.\n\n\"You have direct orders from me.\" said the Captain. \"Commander, come on through. And I assure this won't happen again.\"\n\n\"Thanks.\" I said. I took Buddy, and with my wife and Cindy in tow, escorted him towards Amy's room.\n\n\"I think we'll know who started this trouble in just a minute.\" I said. Sure enough, as we went past the Nurse's Station, I heard a voice call out \"Stop!\"\n\nIt was the woman we called 'Nurse Ratchett', who looked (and acted) so much like that evil woman in the movie. \"You cannot bring that dog in here! I told Security to stop you at the door!\"\n\n\"Yes they can, and on my authority.\" said Laura.\n\n\"No, Doctor.\" said Nurse Ratchett. \"Either take that dog back out, or I'm calling the Police!\"\n\nI just turned and looked at her with one of those 'Really?' looks. She realized her folly. \"I'll call the SBI, then. The FBI. Whatever it takes, but I'll find someone to stop you!\"\n\nI said nothing, but just turned and walked down the hall... with Buddy.\n\n* * * * * * * * * * * * * * * *\n\nAs Dr. Searles and Laura talked with Amy (and Buddy), I told them that Cindy and I would be back in a moment. As we went down the hall, to the Nurses Station, I told Cindy what we were going to do.\n\nA nursing supervisor was at the desk, listening to Nurse Ratchett's bitter complaints about me bringing in the dog. I could tell she was more furious about the dog's presence than mine.\n\n\"Commander,\" said the supervisor, \"may I speak with you a moment in this private room?\" She indicated a small room behind the nurse's station.\n\n\"No, you may not.\" I said. \"Because I will be talking with this nurse about a very serious situation. Captain, escort the nurse into that room, please, and under arrest if necessary.\" The shocked nurses just watched as Cindy all but shoved Nurse Ratchett into the room. I followed and slammed the door.\n\n\"Have a seat, Nurse.\" I said, bringing out a computer tablet I'd brought, anticipating this situation. Cindy put the chair behind Nurse Ratchett, and pushed her shoulders down, forcing her to sit. I brought a chair up next to the nurse, and set up the tablet.\n\n\"Let's watch some TV, shall we?\" I said. I played a video. \"Ah, this is just a recording of some of the paperwork I have, pertaining to some morphine sulfate being stolen from this Hospital. The SBI investigated, but they didn't do a very good job of investigating, I'm afraid.\" (Author's note: Case of the Paper Trail.)\n\n\"Ah, this file shows where you, Nurse, went out the basement door instead of the normal front door, thus evading search and thus getting the morphine out of the Hospital.\"\n\n\"You'll never prove that.\" said the Nurse.\n\n\"Won't I?\" I said. \"Ah, here's some footage from a Kroger parking lot. We were investigating the murder of Edna Biller, and we found that her husband was the culprit. But I also found this extra piece of video. Now this car on the left... that's Coach Brian Harlan's nurse, who provided medical services for him until his unfortunate death at all too early an age, from cancer. By the way, Nurse, do you see who's car is pulling up to hers?\"\n\n\"Ah, Nurse, here is where it gets good.\" I said. \"The person in that other car is handing a package to Coach Harlan's nurse... ah, looks like a morphine bottle. Well, I do declare, that is very suspicious. And Nurse, do you recognize that other car? Do you know who it belongs to?\"\n\nNurse Ratchett was sitting in her chair, her face set in a prim veneer of anger. I said \"I am sure that if I go into this Hospital's employees parking lot right now, I will find that other car. What do you think, Nurse?\" It was the Nurse's car, of course, and she knew it.\n\n\"What do you want?\" 'Nurse Ratchett' spat.\n\n\"Oh, not much.\" I said. \"Coach Harlan was dying, and was in pain. I certainly have no problem with his nurse wanting to ease his pain in his final days and hours on this earth. But the Medical Examiner did find a lethal amount of morphine in the bag, and he asked for a murder investigation. We still have all that evidence, and there is no Statute of Limitations on murder...\"\n\nI turned to the Nurse and looked her hard in the eyes, and said very quietly \"And if I hear one more God-damned word about bringing that dog to see his owner, a little girl who is dying, I will personally arrest you and you will be charged with conspiracy to commit first degree murder. Oh, you think I won't win that, but I don't have to... the charges will be enough to get your Nursing license suspended. You'll never work in this State again.\"\n\nI then pulled out my FBI Consultant badge. \"You mentioned the FBI, Nurse. Why, I happen to be a Consultant with them. Their Deputy Director does not like racists, Nurse. He does not like them at all. And if I mention to him that you're a racist, support white supremacists, and on top of that you've conspired to commit murder...\" I chuckled, a chuckle which Cindy later told me sent chills down her spine.\n\n\"So that's it.\" I drawled. \"Dog and little girl spend time together, makes her happy... you get to be a nurse. The next peep I hear out of anyone, anyone at all... sad day for you, Nurse. Sad day for you.\"\n\nI got up to go, Cindy following. Once outside I looked at the Supervisor and said \"I think everything is resolved now.\" She hurried into the other room, where Nurse Ratchett apparently decided to not make any more issues out of anything. I would have no further trouble with bringing Buddy to see Amy.\n\n* * * * * * * * * * * * * * * *\n\n\"Well, honey,\" I said to Laura as we prepared for bed. \"I hope what I've done won't cause you any problems at the Hospital.\"\n\n\"Are you kidding?\" Laura said. \"The entire Staff hates Dr. Alcott with a passion. She is a duplicitous, mean-spirited bitch, and that little scene she made was intentional. It was a joy to watch Dr. Eckhart light her up like he did.\"\n\n\"And very, very generous of him to pick up Amy's bills.\" I said. \"Cindy swears she did not tell him nor call him... and neither did I.\"\n\n\"He must be psychic, like everyone says.\" Laura said drily. \"As to the Nurse, you have put the fear of God into her. All the nurses are wondering what you said to her, and she says she won't talk about it. They asked if you threatened her, and she says you didn't, and to just leave it be.\"\n\n\"So, maybe I'll need to talk with my uncle about Dr. Alcott, about those friend he said she has.\" I said. \"Or maybe she'll find her way to another Hospital, along with her little imitation guard dogs that almost got hurt today.\"\n\n\"Imitation?\" asked Laura.\n\n\"Oh yes.\" I said. \"They weren't regulars. The Security Captain doesn't know all his people, as they change in and out all the time. These two... were there simply to stop me. I actually intended to arrest them, find out who they really were, but the Security Captain came in, and with you and the dog there, I chose to de-escalate the situation.\"\n\n\"Oh, wow.\" Laura said. \"As to Alcott, it'd be a crying shame if she did choose to leave. And it was a crying shame I didn't get to watch you and Cindy take down those idiots. I never get to see my husband the fighter... only my husband the lover.\"\n\n\"I hope that's not a complaint.\" I said, rolling over on top of her.\n\n\"Not at all. Not at all.\" my wife replied with a lovely smile as she spread her long, luscious legs and I settled between them...\n\nPart 4 - New Year, New Crimes \n\nThursday, December 31st. It was the New Year celebration at the home of University President Sidney P. Wellman and his lovely wife Sally. It was one of Laura's favorite parties, and she was looking mighty fine. I was exceptionally proud that she was on my arm when I saw the looks coming her way.\n\nThe CEO of BOW Enterprises, that being my nephew Todd Burke, was definitely getting the attention of the lovely ladies in the room, but he was 'taken'... that was my Vice Lieutenant on his arm, and Teresa was looking as lovely as I'd ever seen her.\n\nAt one point in the evening, hostess Sally Wellman asked my wife to come speak with Elsie Gringer and my mother. I knew that there was a reason for this, and it quickly became apparent when Dr. Wellman asked to speak to me in his library, the room I'd introduced Daniel Allgood to him and others as candidate for Sheriff.\n\nAlone in the room, Dr. Wellman offered me a cigar, which I accepted. As we puffed, he said \"I heard there was a ruckus at the Hospital the other day. Your reputation both precedes and follows you, Commander, and you leave... interesting stories in your wake.\"\n\n\"I hope I wasn't too much of a bull in a china shop.\" I said.\n\nDr. Wellman chuckled. \"Ah, let's have a seat.\" We sat down in two comfortable chairs, a small table between them for drinks. I was not having alcohol tonight, and if I had drunk anything, I wouldn't have accepted the cigar... those don't mix well together within Your Iron Crowbar.\n\n\"I was more than a little shocked at the Hospital Administrator's attitude.\" said Wellman. \"I would've made a point to insist that young girl be allowed to stay, even if Dr. Eckhart had not intervened. I'm also going to tell him that while I appreciate his offers to pay for her treatment, it will not be necessary. The flip side of that, of course, is that it's good publicity for the Hospital, and the School.\"\n\n\"Oh, don't do that.\" I said. \"The Hospital deserves to get paid, or at least its costs reimbursed. And just between us, Dr. Wellman... Dr. Eckhart wants to do this, and for more than just helping that girl. And he has more than enough money, many times over.\"\n\n\"Okay, if you insist.\" said Wellman. \"By the way, I made a point to discuss the situation with the Hospital Administrator, Dr. Alcott. I believe she will be much more circumspect in the future, or else she'll be finding employment elsewhere. I don't have totally direct control of the Hospital Board, but I do have considerable influence.\"\n\n\"I appreciate that, Doctor.\" I replied.\n\n\"I also spoke to the Captain of Security, and the owners of that company, as well.\" said Wellman. \"The two guards that accosted you, and very foolishly, I might add, have not shown up to work since that day, but when and if they do return, they will find that they have been reassigned... to where, I have no idea, but it's not this Campus and not the Hospital.\"\n\n\"Thank you for that.\" I said. \"And yes... they were very foolish.\" Wellman chuckled again.\n\n\"So what was that altercation with the nurse about?\" Wellman asked.\n\n\"She objected to my bringing Amy's dog to see her.\" I said. \"I had to redirect her suppositions about a few things.\"\n\n\"I should tell you that her Nursing supervisor complained about the incident, and you.\" said Wellman. \"Something about 'throwing your weight around'. Dr. Searles told her that that beat swinging your crowbar around. He then went on to shame her for complaining about you trying to make a sick girl happy by bringing her dog to see her.\"\n\n\"Well,\" I said, \"I expect no more trouble there.\"\n\n\"No, there won't be.\" said Wellman. \"By the way, I must again congratulate you upon that situation with BigPharmaCorp.\" He sighed, almost a shudder. \"Taking on a company like that, and a man like Dr. Cubbard... that takes some brass stones, there, Commander Troy. No doubt you have them, but it has gained you attention at a national level. And not all good attention, if you understand my drift.\"\n\n\"I think they'll get over it.\" I said. \"I get the feeling they never were all that happy with Cubbard in the first place.\"\n\n\"Ah, yes, you are indeed as observant as you are reputed to be.\" said Wellman, peering at me. \"But there may still be ramifications. If BigPharmaCorp decided they might have to close one of their plants...\"\n\n\"It won't be this one.\" I said. \"It's one of their biggest, most efficient factories, and the lab is their second most important. Their best drugs are made here. And they built the plant because of the proximity to this University. They don't want to give up that asset. And I doubt they really think a local cop on the beat is a problem to them.\"\n\n\"What about those research drugs, the ones that were found in that raid your Police made?\"\n\n\"Ah, that was a bonus.\" I said. \"It blew the doors off of what was going on at BigPharmaCorp. Unfortunately, I have not had time to work on the other end of that smuggling ring.\"\n\nI felt more than saw Wellman peering at me as he sipped his drink. \"Oh?\" he said. \"You haven't had your subordinates working on it? Pardon my directness in saying this, but I heard that your sister and her smuggling operations might've been involved.\"\n\nNow how did he know that? I asked myself. And more, why is he mentioning it to me? I put that into its compartment and moved on.\n\n\"Possibly.\" I said. \"But I have not yet found a direct connection between her and this ring.\"\n\n\"What do you know about that ring?\" asked Wellman. I realized he was trying to glean information from me. As I turned to look at him, he said \"I only ask because of what happened with that PED situation. I remember that your sister's son was a part of that. Of course I know your integrity is of a much higher level than hers, but I want to make sure there is no threat to harm my University.\"\n\n\"I understand.\" I said, knowing that Wellman was lying to me like a dog in the shade. \"I don't think there is any threat to the School. Of course my wife works here, and I have your University under my protection for that reason, if not more. But I haven't connected my sister to whoever was trying to get the BigPharmaCorp research drugs.\"\n\nI don't think Wellman was mollified, but he let it go. He said \"By the way, we've beaten back the Conference over that fight at State Tech. I found it... interesting how the Wildcats and other Schools came so readily to our defense.\"\n\n\"I think every other School was angry at State Tech for that cheap shot that ended Nick Eastwood's career.\" I said. \"State Tech has also been a bit snippy, saying their academics are so much better than everyone else's, and that's the only reason they're so crappy in Sports. I, for one, think that State Tech is nothing special, academically or otherwise. You can pass this along to the Regents, Doctor, but they need to upgrade some of their Engineering programs. They're falling behind the power curve.\"\n\n\"Yes, that has been mentioned at State levels. This is embargoed, but Jack Lewis is going to make improving them, and providing us additional funding, a priority plank of his platform in his campaign for Governor. Governor Jared has been good to us, but the Republicans as a whole are basically telling us to pound sand. Sean Stockton is a disaster. I wish Jared would consider running again, as a Republican or even as an Independent.\"\n\n\"Or you could get Dr. Alcott to run.\" I said. \"She definitely has the temperament to be a State politician.\" Dr. Wellman laughed out loud, a cold sinister laugh that could bode ill for someone if he so chose.\n\nJust then, there was a knock on the door. Sally Wellman peeked her attractive head in and told her husband he was needed. We headed back to the party.\n\n* * * * * * * * * * * * * * * *\n\nAs midnight neared, many of the couples at the party were dancing to the soft music. I had Laura in my arms, with her arms around my neck, and we did not care what anyone else in the world thought of our slow-dancing. Todd and Teresa were dancing a slow-dance, but he held her right hand in his left hand, a bit more formal and 'old-school'.\n\nI had noticed some things. First, Myron Milton and his lovely wife Goth Girl Mary Mahoney Milton were here, and Mary was making all leather look classy. Myron's father Marvin was also here... he was Elsie Gringer's date.\n\nThe only other Police officer here was Julie Newton. She had come with a handsome young man who I had heard worked in the District Attorney's office. I think his name was Scott or Scotty, but for the first time I realized that hostess Sally Wellman had made sure Laura and I were not formally introduced to Julie and her date, which was unusual even though Julie and I certainly knew each other already.\n\nThe other odd thing about it was that the people invited here were either part of the School (like Laura), or were wealthy donors (which explained Todd). Julie had no connection that I knew of to the School, so did her youngish looking date? Hmmm...\n\nJulie's sister Yvonne was also here, escorted by another young man I did not know. As Laura and I danced, I noticed that Sally Wellman was talking with Julie's date Scotty, while Julie was talking to Dr. Wellman in what they thought was a darkened alcove of the room that led to the back patio and back lawn. They were talking animatedly, with Julie's eyes looking up into Wellman's, and his locking with hers as he wore that sinister smile of his. Hmmm...\n\nA few minutes later, everyone counted down the seconds to midnight. As 'Auld Lang Syne' was sung, I of course kissed my beautiful wife very warmly. I noticed out of the corner of my eye that Todd had dramatically bent Teresa backwards and then kissed her. Life of the party, those two...",
        "Part 5 - Family, Friends, and Football \n\nSaturday, January 2d. Cindy and Molly hugged their parents goodbye at City Airport, then watched them go through the line and into the terminal. Then Cindy checked the arrivals.\n\n\"Jenna's plane won't be here for two more hours.\" Cindy said. \"Want to get lunch?\"\n\n\"Sure.\" said Molly. \"As long as it's pizza.\" Fortunately, the Airport had a good California Pizza Kitchen, and soon the two hungry sisters were wolfing down two rather large pizzas.\n\n\"Mmm, didn't realize how hungry I was.\" said Cindy. \n\n\"Oh, I did. I was starving.\" said Molly. \"But that hit the spot. So, I'm glad you got everything worked out with Dad. I think he was very worried about things, but he said you just plowed right into it.\"\n\n\"Yeah.\" said Cindy. \"He told me that, too. But to be honest... I don't think he was upset about putting off meeting Jenna.\"\n\n\"He was ready to, though, for your sake.\" said Molly, peering at her sister. \"Remember that.\" she added cryptically.\n\n\"Well, he said we could come up this Spring.\" Cindy said. Molly didn't say anything. Cindy felt a vibe, and said \"What?\"\n\nMolly said \"Just that Spring is the busy season on the farms, as you well know, and Don thinks things are going to heat up for your Police Department as you go after the Consultant of Crime. It may be months before you get up there.\"\n\n\"You may be right, but we'll see.\" said Cindy. \"There's Easter and Spring Break, and I'll bet I can squeeze in a long weekend.\" When Molly didn't say anything, this time masking it by drinking some of her soda, Cindy knew that there was something Molly wasn't saying.\n\n* * * * * * * * * * * * * * * *\n\n\"Are you ready to go?\" Laura asked.\n\n\"I'm packed. How about you?\" I asked.\n\n\"Ready.\" Laura said. \"Admit it, darling, I surprised you.\"\n\n\"Oh, I admit it: that you did.\" I said, taking her into my arms. My wife had managed to procure four tickets to the National Championship game(!). I need not say that I was absolutely staggered when she presented them to me the day before.\n\n\"Melina and Daniel will be joining us in Dallas on Monday.\" Laura said. \"Todd and Teresa will keep the kids at their place, and your mom is going to watch over Bowser and Buddy. Teresa will take Buddy to see Amy every day. Meanwhile, I've procured a Government jet to take us to Texas. There's someplace I want to visit before we go to Dallas...\"\n\n* * * * * * * * * * * * * * * *\n\n\"There she is.\" Cindy said. \"Jenna! Over here!\" She waved at Jenna, who finally saw her and came over. Jenna looked tired as Cindy hugged her.\n\n\"How are you?\" Cindy asked. \"I'm sorry about your uncle.\"\n\n\"Thanks.\" Jenna said. \"Hi Molly. Yes, my uncle passed on, and we had the funeral and a big family gathering.\"\n\n\"Let's go get your luggage and get back home.\" said Cindy. \"Molly wants to get back to Ian, too, I'm sure.\"\n\n* * * * * * * * * * * * * * * *\n\nSunday, January 3d. Midland, Texas.\n\nLocated along Interstate-20 on the west side of Texas, near Odessa, Midland was near where Laura had grown up. We had landed at Midland International Air and Spaceport, the official name of their airport, the evening before, and checked into our hotel. There not being much else to do, we had sex. Lots and lots of sex.\n\nNow this morning, Sunday, Laura drove our rented car along the roads as I looked at the scenery. I saw a lot of farms. I saw a lot of dirt. It was definitely West Texas.\n\nAfter a tour of the town, Laura stopped at a cemetery. \"This is where my parents are buried.\" she said. \"It was on the outskirts of town when they were buried here, and I left.\" The cemetery was now surrounded by developed housing subdivisions and neighborhoods.\n\nWe walked along the cemetery gravestones until we came upon those of Laura's parents. She had brought some flowers and laid them on the gravestone, then spent a few minutes contemplating. As discreetly as I could, I took a few photographs, which I could show Carole and Jim one day in the future.\n\n\"I haven't been here since the funeral.\" Laura said. \"I've always meant to come back, but haven't had the chance, so I thought now would be the best time.\"\n\n\"I'm glad you did.\" I said.\n\n\"And...\" Laura said, \"this may be the last chance I get, at least for some time.\"\n\n\"Yes.\" I said quietly, knowing that a busy time was ahead for both of us. \"But if we can get you retired from the Company, maybe we can come back with the kids.\"\n\n\"Maybe.\" said Laura. I was a bit disturbed in my heart at the tone of her voice... as if she expected to never come back here again, that this was a 'bucket list' item for her...\n\n* * * * * * * * * * * * * * * *\n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" yelled the lovely redheaded reporterette at 7:00am, Monday January 4th. \"The National Brotherhood of Emergency Service Workers has called upon the Fire Department to engage in formal talks over the severe sanctions placed on the Town & County EMTs by the Fire Department. They are threatening a general strike if the County will not negotiate with them.\n\n\"The Town & County Council has formally stated that any EMTs who go on strike will be formally and summarily fired, and that EMS services will be provided by either the University Hospital or a private company. The National Labor Relations Board has called upon the two sides to engage in negotiations, and are ready to step in with a 30-day cooling off period, but the Council has rejected the Federal Government's overtures, saying the law allows the Council's unilateral actions, and the Council is prepared to go to Federal Court to stop the NLRB, if necessary.\"\n\nBettina continued. \"Sheriff Allgood's office put out a statement that he will not intervene with the Fire Department until both sides make their positions more clear. Calls to his office yesterday and today have not been returned. Chief Moynahan of the TCPD has said that his Police Force remains neutral in this fracas, but his Officers will enforce the law should hostilities become physical or violent, or if the safety of the County's citizens are threatened.\"\n\n\"In other news, it's the big game between the Wildcats and the Rebels at Dallas tonight, and millions will be watching. While the Wildcats are our Bulldogs's conference rival, some of our residents are Wildcat alumni, including our own Police commander, Donald Troy.\" said Bettina...\n\n\"Speaking of Commander Troy,\" said Martin Nash. \"Why isn't he here having coffee with us?\"\n\n\"This is not to get outside of this room.\" said Cindy Ross. She looked around to make sure she had everyone's understanding, then she said \"He's going to be at the game.\"\n\n\"Whaa?!?!\" came a chorus.\n\n\"His wife got him tickets.\" said Cindy. \"They're in Dallas.\" She did not mention that Daniel and Melina were also in Dallas. With the powder keg of the Fire Department situation, Daniel wanted it kept under wraps. He had not even wanted to go, but his wife's persuasive charms won him over.\n\n\"Must be nice.\" Teddy Parker said as everyone chatted, agog at the news. \"I need to find a wife like that.\"\n\n\"Good luck with that.\" said Cindy. \"She's one of a kind.\n\n* * * * * * * * * * * * * * * *\n\nThe 'Jones Mahal'. The 'House That Jerry Built'. AT&T Stadium. It was truly as magnificent as described, and more. Laura had somehow obtained all-access passes to the field, and we were now looking up at the huge video scoreboard hanging over the field. Wow. Just wow.\n\n\"Incredible.\" I said, looking around. It was 8:00am local time, and there were a few employees milling about. It would soon get very busy in anticipation of tonight's game. \"How did you get these passes?\"\n\n\"I've got people.\" said Laura. \"Here come some of them now.\" I looked over to see Edward and Stephanie Steele coming to greet us. Selena and J.P. Goldman were with them, but it was the other person with them that stunned me.\n\n\"Ah, there they are.\" said Steele. \"Jerry, you know Dr. Laura Fredricson, don't you?\"\n\n\"Oh yes, I do. I met you in Washington a few years ago, Doctor.\" said Jerry Jones, giving Laura a hug. Yes... the Jerry Jones. Owner of the Dallas Cowboys and the Stadium.\n\n\"Yes, I remember.\" said Laura. \"Mr. Jones, may I present my husband, Commander Donald Troy?\"\n\n\"Ah,\" said Jerry Jones, looking right up at me and firmly shaking my hand, \"Edward has told me a lot about you, Commander.\"\n\n\"Thank you, sir.\" I said. \"It's an honor to meet you.\" I was still stunned, and then was stunned again.\n\n\"Ah yes, the Iron Crowbar, here in my stadium.\" said Mr. Jones. \"Oh yes, I've heard of your reputation, and what you've done. Your friend in the FBI speaks very highly of you, very highly.\" That would be our mutual friend, the Deputy Director of the FBI, I realized. Wow. Just wow.\n\nWe did not get any time to talk, as one of Mr. Jones's entourage said something to him. \"Okay folks, I have to go. Enjoy yourselves today. Great to see you again, Edward. Good to see all of you.\" He was shaking all our hands again, then went off with his group.\n\n\"I don't think I've ever seen the Iron Crowbar this surprised.\" teased J.P. Goldman.\n\n\"That was... Jerry Jones.\" I said, making the group chuckle.\n\n\"Yes.\" said Edward Steele. \"I met him years ago. I need not say his developments have done much better than mine. Don, Laura, we're going to go see Dealey Plaza. Would you care to join us?\" Laura and I agreed.\n\nJust then a couple of men in Fire-Department-like uniforms came up to us. \"Are you Commander Troy?\" one of them asked, a man becoming overweight, losing his hair, and with a big brown mustache.\n\n\"Yes, I am.\" I said. \"And you are?\"\n\nHe shook my hand. \"My name is Terry Ruffkin, and I'm an administrator in one of the nearby county Fire Departments. I used to be police officer with Angela Harlan.\"\n\nHe must've read my face, because he said \"Yeah, I heard about what happened with her, and I hated it. She was a damn good Detective when she was with us. But that's not why I wanted to talk to you. I've also heard that your EMTs are having problems. We can't take all of them, but if there are one or two that you'd like to send my way, we might can find a place for them.\"\n\n\"Oh, that would be great.\" I said. He handed me his card, and in exchange I gave him mine. \"And maybe one day we can talk about Harlan. I still don't know why she went bad. Maybe there's something you don't realize you know that might help me.\"\n\n\"We'll do that, Commander. And good luck with your EMT situation up there...\"\n\n* * * * * * * * * * * * * * * *\n\nCindy's cellphone went off and she checked it, then laughed. \"Hey guys,\" she said to the MCD Detectives, \"the Commander sent this.\"\n\nShe showed them the photo. It was of the Texas School Book Depository. The text from Commander Troy said \"Hey guys! I have a crime here for you to solve!\"\n\n\"He wants us to solve the Kennedy assassination?\" asked Theo Washington. \"He does set the bar high for us, doesn't he?\" Everyone laughed.\n\n* * * * * * * * * * * * * * * *\n\n\"Have you ever been here before, Don?\" asked Laura as we looked around Dealey Plaza.\n\n\"Yes.\" I said. \"When I was a Boy Scout, we flew into Dallas, then took a bus to Philmont Scout Ranch in New Mexico. We stopped by here, then the bus drove on the Kennedy route on the way out of town.\"\n\n\"Who do you think did it?\" asked Selena as she took pictures. \"Oswald? Someone else?\"\n\nI was very, very aware of who my wife worked for as I said \"I don't think it was a lone gunman.\" I said. \"For example, we are now right below the School Book Depository building. The car slowed down to make the left turn right here. A lone gunman up there had a full frontal shot at President Kennedy at that point, and from close up, with the car just about stopped. Even I could make that shot. Yet, Oswald chose to let the motorcade turn, then make difficult shots from behind. I've never gotten over that question.\"\n\n\"I agree with you, Don.\" said J.P. Goldman. \"And not many snipers can make the shots that were made from up there.\"\n\n\"I know one that can.\" I whispered to Laura, my face away from the others. Laura just arched her eyebrows in agreement. And that sniper and her husband would be joining us at the game later today.\n\n* * * * * * * * * * * * * * * *\n\nIt was a great game, for those without skin in the game. Two great defenses were in competition, and it was grinding and low-scoring. Melina and I were in our Wildcat red jerseys and black pants. Laura wore a solid red blouse that was form-fitting on her lovely body, her large breasts stretching the material, and black pants and black boots. Daniel was wearing a button-down western shirt, similar to what he often wore as Sheriff in our County. Down here in Dallas, though... he was just one of the crowd.\n\nThe Wildcats had the more consistent offense, and drove up and down the field. The Rebels' offense was stymied by the great Wildcat defense, and their quarterback found no refuge but the sidelines when their punter was called to duty.\n\nIn the fourth quarter, the Wildcats led 17-3, when our running back was hit and dropped the ball. Ole Miss ran it back to make it 17-10. They had momentum, and if they could stop us, they'd have a chance to get back in it.\n\nThey did not. Our quarterback was as cool as the other side of the pillow as he led the drive. Coach Richmond showed his trust in our running back by calling for running plays again and again, and there were no more fumbles. Short passes on third down moved the chains. The Wildcats chewed up the last nine minutes of the game. With all of the Rebels's time-outs used up, my team was on the Ole Miss 15-yard-line and got into the best formation of all: the victory formation. Downing the ball twice, the clock was ground out.\n\nAmongst all the cheering and incredible noise in the stadium, I just tried to take it in. My alma mater had just won the National Championship! Laura was taking a picture of me, with Melina on the other side of me jumping up and down. When Laura showed the photo to me, I saw I had a tear running down my cheek. This was nirvana, and I had witnessed it.\n\nI hugged Laura, and said \"I don't know how you got the tickets, but thank you for this!\" She hugged me back and said what good are strings to be pulled if she doesn't pull them...\n\nPart 6 - It Begins \n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" shouted the lovely redheaded reporterette, with University Stadium in the background, at 7:00am, Tuesday, January 5th. \"They have done it! The Wildcats won the National Championship, 17-10 over the Rebels! Let's go to Nick Eastwood for his Sports report!\"\n\n\"Thank you, Bettina!\" shouted Nick Eastwood, also with University Stadium in the background. They were actually only 50 feet apart as Nick said \"It was a great college football game, and the Wildcats brought home the crystal trophy and their first-ever National title! And some of our own County residents are celebrating. Let's go to the tape!\"\n\nThe tape played, and Your Iron Crowbar was being interviewed the night before by Nick Eastwood outside AT&T Stadium. I had been corralled by Nick, and I suspect he had some help locating me. Ah, the price of those tickets, I thought to myself.\n\n\"How do you feel, Commander Troy?\" asked Nick.\n\n\"It... it's awesome!\" I said, obviously exhilarated. \"I'm proud as a fan for my school, but I also know Coach Marshall and some of the other coaches, and I'm happy for them and the players. This is something they'll have for the rest of their lives!\"\n\n\"I have to ask,\" said Nick, \"we just saw Coach Thrasher's defense, led by Coach Marshall tonight. Do you think Coach Thrasher can bring that level of play to the Bulldogs?\"\n\n\"I think Coach Thrasher is going to do very well, and the Bulldogs are going to be a lot better with him.\" I said. \"I'm glad we won tonight, because it's going to be tougher in the coming seasons.\"\n\nNick came back live. \"Police Commander Troy, a very proud Wildcat alumnus, is celebrating today, Bettina. It's also a great day for the Conference, and University President Sidney P. Wellman issued a statement congratulating the Wildcats, their team and their fans on the ultimately successful season...\" \n\n\"How did he find you amongst all those people, Commander?\" asked Martin Nash, and very astutely, I might add.\n\n\"I think he was tipped off.\" I replied. Yes, I was in MCD with everyone else. We'd flown home, arriving at County Airport in the wee hours of the morning. I'd cleaned up, then went right on in to work, knowing that a lot was going on and I had to catch up.\n\nTeddy Parker came in, looking forlorn. He did come up and shake my hand. \"Congratulations, Commander. Your team was definitely the best.\"\n\n\"Thanks, Teddy.\" I said. \"Your team played tough, too. I'm sure those with no skin in the game loved it.\"\n\n\"That we did.\" said Teresa Croyle, who'd joined the coffee klatch. \"The Cop Bar was very rowdy last night. Good thing all the partiers were cops, or we'd all be in jail today.\"\n\n\"I hope you left the place standing.\" I said, grinning.\n\n\"Barely.\" said Chief Moynahan, walking in. \"Congratulations to your team, Commander. When you finish with your coffee, come to my office.\" I took the hint, and immediately followed him to his office.\n\n* * * * * * * * * * * * * * * *\n\n\"I'll tell you right now, we really don't need you here.\" said Hans Logan, a full Paramedic with the TCPD EMTs.\n\n\"Look, guys,\" said Jack Naples, president of the National Brotherhood of Emergency Service Workers (NBESW), \"you need us behind you. You need the power of a national presence, and you need a national story. It's really your only hope.\"\n\nJack Naples was a large, broad-shouldered man, and his physique reminded many of the Iron Crowbar's. But, as was shown on TV, his face was long, his jaw nearly triangular, and he has this sinister perma-grin.\n\n\"You don't know the local issues.\" said Wilbur James, leader of the local NBESW chapter, and nephew of Mrs. Myrtle James's late husband. \"We're really behind the eight ball when it comes to local and State law. This is a Right-To-Work State. We have to take this patiently, or we're out on the streets without jobs, and we'll never be hired by anyone in this County if we get fired.\"\n\n\"Guys,\" said Naples cheerfully, \"they're walking all over you. If you don't stand up to them, if you don't show brotherhood and solidarity, then you're salaries are cut, your jobs are cut to the bone. A strike, with the public opinion behind you, is what you need to force your elected officials to work with you instead of against you.\"\n\n\"Didn't you just hear Mr. James?\" said the last man in the meeting hall. His name was Jimmy Lawson, and he was a young redhead and just months out of the Army as a Medic. His young wife had given birth to their first child, a son, just a couple of months before. \"If we go on strike, they'll fire us, and we're done. My wife has already been told she'll be fired from her job at Target if I go on strike with the EMTs. The whole Town is against us! We can't go on strike!\"\n\n\"Kid, you've got a lot to learn.\" said Naples. \"They threaten you so you won't cross the line, but when you do cross it, all the pressure goes away when they see that you're serious.\"\n\n\"We can't risk it!\" said Lawson, seemingly desperate. \"We can't just throw away our jobs!\"\n\n\"Easy kid.\" said Wilbur James. \"Jack, he's right. We've got to do this carefully. And you've got to let the locals take the lead on this. If you start jumping in front of television cameras with threats to strike, you may do us more harm than good.\"\n\n\"Gentlemen,\" said Naples, as if he were talking to children, \"We've handled dozens of cases like these across the country. That's why I'm here; we know better how to handle this. We know the power of the Press, especially when we have it on our side. Now you guys follow our lead, and we'll teach these local politicians a thing or two about the power of a National Union!\"",
        "* * * * * * * * * * * * * * * *\n\nIt was about 10:00am, and Cindy was in my office, briefing me. \"The EMT Union's national leaders came into Town last night. The scuttlebutt is that they're going to organize everything, get the national Media in, then call for a strike. They may contact the Police Union people, try to get the Police to go on strike in sympathy with them. Lt. Masters has extra patrols near all the Fire Departments, and I put the SWAT on call at all times for the time being.\"\n\n\"What is the sentiment of our guys about all this?\" I asked.\n\n\"It depends.\" said Cindy. \"Many of the older Uniformed Police, that have lived here for a long time, are solidly against the EMTs. Most are pretty neutral, since it's Fire Department vs. EMTs. A good number of the Second Precinct guys are sympathetic to the EMTs, though. Some of that may be because a lot of the Black Community is believing what they are told that 'The Man' is coming down on the EMTs.\n\n\"Cindy,\" I said, \"you've been here a long time, since your college days at least. What is with this animosity, this rift between the Fire Department and the EMTs?\"\n\n\"I really don't know.\" said Cindy. \"In a way, it's like the Hatfields and McCoys: no one is exactly sure why or how the feud started, but it's just ingrained now. I've had some Fire Department people say the EMTs have to go through initiation, like West Point Plebes or basic trainees.\"\n\n\"Except that it never ends for the EMTs. Ever.\" I said. \"I think I'll ask Chief Griswold about it, see what he can tell me--\"\n\nJust then Mary Mahoney Milton burst into my office. \"Commander! Something's happening at the Downtown Station. Myron is recording it onto the evidence servers. A couple of male EMTs are being beaten up, and a female EMT is being raped!\"\n\n\"Shit!\" I gasped. \"Let's go! Ross, deploy our troops!\" Cindy had a habit of running ahead of me, so she was well down the hall when Mary stopped me.\n\n\"Commander, the rapists are filming it.\" she said. \"Get their cell phones.\"\n\n\"Call Paulina for a warrant for them now.\" I said. I then turned and ran down the hall...\n\nTo be continued."
    ],
    "authorname": "WifeWatchman",
    "tags": [
        "hot wife",
        "mystery",
        "crime drama",
        "police drama",
        "football"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/hampered-in-his-plans-ch-01"
}