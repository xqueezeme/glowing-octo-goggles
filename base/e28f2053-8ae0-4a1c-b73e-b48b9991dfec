{
    "title": "Nipplemania - An Advanced Guide for",
    "pages": [
        "Nipplemania: - An Advanced Guide for Pain-sluts and Their Partners \n\nNOTE: This article is for entertainment purposes only. The author assumes absolutely no responsibility or liability resulting from employment of any of the thoughts expressed herein.\n\n*\n\nAfter spanking, nipple torment is probably the most widely practiced S &M activity. It runs the gamut from licking and sucking to biting, pinching, clamps, needles, and fire play. People into BDSM are aware of the commonly available implements for nipple work, even if they haven't personally used all of them. This is not about the generic 'put clamps on, do it, take clamps off.' Rather, here are some idea generators for the advanced practitioner.\n\nThese ideas are applicable to the male as well as the female sub. Female nipples are generally more tender than male, but with consistent work can be toughened up considerably. Proceed slowly and increase the intensity over time. \n\nSimple clamping and the use of candle wax are omitted due to their basic nature, and readily available information of their use. \n\nRather than just putting clamps on, combine several of these disciplines if you desire a grateful, attentive sub.\n\nProbably most people's first exposure to the joys and tears of nipple torment began with simple pinching with the fingertips. Beyond simply pinching and twisting, there are a number of variations for advanced play. Instead of the 'standard' top-and-bottom fingertip pinch, try pinching on the sides of the nipple. \n\nThen there are the fingernails: pinching and twisting/tweaking with the fingernails. Having a sub do this to themselves can yield delightfully sore nipples after a couple of days. Have them do a series of 10 -25 pinches/tweaks at specific intervals throughout the day, perhaps before getting out of bed in the morning, before getting dressed, at mealtimes, bedtime, before a sex session, whenever they use the bathroom, when opening an Email letter from an on-line Master/Mistress, when sending an Email reply, etc. \n\nThese can be done on bare skin, or through clothing. Clothing becomes abrasive when the buds are worked in this way. \n\nA couple of days of this training, and even clothing rubbing across those nipples will remind your sub of the discipline. \n\nAfter the base/body of the nipple is properly sore, fingernail pinches to the very tips will put your sub up on their tiptoes, and extract a satisfying moan.\n\nThe feeling and angle can be enhanced by ordering the sub to cross their arms to inflict them, left hand to right nipple, right hand to left.\n\nOther fingernail possibilities include: pinching and pulling straight out, or up, down, to the inside, or outside, or fingernails to the very tips and dragging the nails off the flesh. \n\nClamps come in two basic varieties, those that crush and those that bite. Most of the commercial ones have adjustment screws so they can be tightened for greater effect. Alligator clamps without the rubber tips represent the 'biters', while most everything else at the 'toy store' are crushers. \n\nSome novel approaches for using these milder clamps include placing them sideways on the nipple, or yanking them off [6-10 repetitions of this, for instance, with clover clamps, will leave them sore and attentive. The human body likes its pain to be balanced, so trick it by putting a clamp from different pairs on each side, or only installing one clamp. Another effective technique is to put a large ring to slide freely on the connector chain. Tie a snap hook to one end of a piece of rope. Shorten the rope so that with a very small loop tied in the other end to slip over a toe or spike heel, it prevents the sub's legs from being straightened without considerable tension to the nipples. This is very useful for keeping a sub's legs apart for penetration. The rope can be shortened enough so that the legs cannot be straightened without actually pulling the clamps off. A whip or cane across the thighs can encourage the sub to complete the discipline. \n\nA different method to keep the nipples under tension and keep the legs up and spread is to obtain two wide nylon dog collars sized to fit the sub's legs tightly just above the knees. Then install fine chain or rope to each clamp individually and hook them to the collars' D-rings. Very effective. The thigh-bands can be worn out, underneath a skirt or dress. For additional training/discipline, genital piercings or clamps could also be attached to the D-rings. This creates a very efficient hobble restraint while keeping the legs spreadable.\n\nFor the true pain-slut, consider multiple temporary piercings. These are done with sterilized needles. Several skewering each nipple will get your sub's undivided attention. \n\nA quick poke to the nipple with needles improves focus. Consider constructing a 'nipple-paddle' with a cluster of needles sized to accommodate the nipple and areola. \n\nTouching the buds with either a lighted cigarette or cigar can produce delightful first degree burns - reddened skin, like a sun-burn.\n\nProper after-care is essential after either using needles or heat to this thin-skinned area. Keep the skin in prime condition to avoid embarrassing trips to medical facilities. \n\nPaddling worked nipples with the bristle side of a stiff-bristled brush also will keep them tender. 'Brushing' them in multiple directions works well too.\n\nStiff brushes, like toilet brushes, with the handles removed can be placed inside bra cups for long-term work. Note, this can also be effective in panties also.\n\nExtended discipline can be achieved by simple cardboard disks sized to cover the breast in a bra cup. A pattern of carpet tacks poked through, then another disk of cardboard glued on to hold the tack heads in place, will give long-term attention to the mammaries.\n\nSome paddle or whip work on clamped breasts or the tack disks will ratchet up the intensity\n\nFor some non-traditional ideas, the hardware store offers a number of delightful possibilities. Miniature 'vise-grip' locking pliers will get your sub's attention. The weight of these is a free bonus. One could use regular pliers, but they require continuous hand pressure and are impractical for any timed endurance discipline. Consider metal spring clamps. These resemble giant clip clothespins, and come in sizes from about an inch up to 8 inches in length. Their strength will bring even the most dedicated pain-slut to their knees. Auto parts stores are a source for large alligator clips as well as replacement battery-charger clamps. The latter give a vicious bite. \n\nAny of these can be bought in pairs, and connected with fine chain [also a hardware store item] easily.\n\nOffice supply stores carry a variety of sizes of the black metal 'bulldog' paper binder clips. The smaller ones can actually produce more bite than the bigger ones. For the truly sadistic, small holes can be drilled through these clamps to guide pins or needles for temporary piercings to the nipple/areola. Once applied and pierced like this, the clamps are essentially 'pinned' on your sub. Wicked indeed!\n\nAny chained pair of clamps can be readily converted into a bit-gag so the sub can participate in their own discipline. Detach the chain from one clamp. Slip a length of plastic pipe or rubber hose over the chain, and reattach. Adjust chain length so the sub can firmly hold the gag, straining the nipples, with their head raised. Begin with two pillows under the head, then remove them one at a time so the sub can experience even more tension. The gag not only induces drooling, but wonderful sound effects too. Once again, a cane or whip across the thighs or other targets of opportunity will 'help' the sub to lower their head. \n\nStandard skirt hangers present unique possibilities. The rubber-jawed clamps can be slid on their metal rod to bring the nipples close together or spread wide to the side. Once positioned, the sub's arms can be moved to increase their distress. The hanger hook can be roped for multi-directional tension as well. \n\nThe intensity of all clamps can be increased by having the sub in a bra. The under-cup elastic band is especially useful for positioning clamps to twist or pinch the nipples even more. \n\nClamps should be removed periodically. Not only is this medically responsible, but increases the sub's distress as blood circulation returns. Each time you reclamp, use different clamps. After several repetitions, even 'mild' clamps will be very effective. The day after an intense session of nipple work, applying clamps again, even for a few minutes, will keep those buds sore and tender. \n\nHopefully this short article will encourage Masters and Mistresses to think in terms of advanced nipple work. The author welcomes readers' input and experiences. Sore nipples forever! "
    ],
    "authorname": "slutty_jannelle",
    "tags": [
        "nipples",
        "torment",
        "discipline",
        "nipple play",
        "sadism",
        "training",
        "bdsm how-to",
        "bdsm advice"
    ],
    "category": "How To",
    "url": "https://www.literotica.com/s/nipplemania-an-advanced-guide-for"
}