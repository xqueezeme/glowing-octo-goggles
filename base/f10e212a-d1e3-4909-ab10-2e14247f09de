{
    "title": "Maybe, It Gets Better",
    "pages": [
        "Hello Readers! This is, in many ways, a fantasy story. Maybe even more fantastic than that alien story I wrote one time. But the beautiful thing about this fantasy is that we can make it come true! I hope reading this story makes you feel good (and horny). Enjoy!\n\n * * * * *\n\n\"Well, I understand that Muriel, but you were the one who told me not to follow along. The fu...\" I caught myself, \"The hell you didn't Muriel! Well it was Carl who said I could get there early and get checked in and you said it was such a GENIUS idea...\" \n\nI should have known that morning when there weren't enough seats on the charter bus for all of the students, that this field trip (like all fucking field trips, to be honest with you) was going to be an absolute shit show. But Carl (my principal) and Muriel (the social studies department head) had convinced me that it was a great opportunity! I could take my car (why my car? Because my ex-husband had insisted on an SUV. And now it was my SUV and I had extra space for the three over-flow students) and I could handle the logistics at the hotel for the night before the bus arrived. Beyond that, once we got to Washington, DC (the site of this year's senior field trip), the teachers would have a car to use if they needed it. And, predictably, the whole plan had now gone to shit.\n\n\"Mrs. S...Mrs. S...,\" Casey Martin from my homeroom said from behind me, she was poking my shoulder, \"Ms. S...you aren't supposed to use a hand held self-phone while driving in this state. Especially not at night,\" she said nervously. I shrugged her finger off of my shoulder.\n\n\"Casey, a little busy,\" I said, rolling my eyes. She sat back, crossing her arms in front of her breasts and huffing. Wounded. It was absolutely on-brand for Casey. She was our senior class president and desperate to already be old and responsible. I was convinced that the 'popular' clique only put up with Casey because she had the largest breasts in the senior class, and she kept the boys interested. \n\nOkay, not just that, she was a legitimate beauty. She was average height, maybe 5'6 or so. She had a build that was somehow petite and voluptuous at the same time. A narrow waist, those big boobs, and very wide hips. She had shoulder-length hair dyed a bright red color, big blue eyes, a Monroe piercing, and big pink lips. She had very pale, almost impossibly pale skin. So, yes, gorgeous. But my goodness, she could be uptight.\n\nAlright, that isn't fair. There were probably worse kids in the class. And, if I had to admit it I would say that she was a great student, sweet to everyone in the school, and she had a subtle sense of humor when you really listened to her. She was just not the kind of student that I usually found myself connecting with. And she was more than a little annoying, poking my shoulder and trying to give me a traffic ticket.\n\n\"Mrs. S...,\" Chloe Oliver said from the passenger seat, \"What's the fucking problem?\" And then she smiled. I rolled my eyes again, put my hand over the microphone on my cell\n\n\"Come on Chloe, its like we are in school right now. Don't make me write you for bad language up on a field trip,\" I said. Chloe was the undisputed leader of my school's little 'popular' clique. She liked to pretend like she had a little bit of an attitude, but in reality she was a more of a coward and a conformist. She just wanted to have a reputation for being slightly rebellious at school. But in my Sociology class, she was attentive and obsequious. She was only rebellious when it didn't cost her anything. Some kids didn't have that option. When I was 18, I certainly didn't.\n\nStill, I figured the whole attitude was to counteract her wholesome girl-next-door look. She had long, gently wavy brown hair with perfect rich girl blonde high lights. She had sleepy brown eyes and small, delicate nose. She had pretty red lips and her two front teeth were a little crooked, but not so much that they looked silly. She was a little taller than Casey, maybe 5'7. She had that classic hourglass shape with high firm breasts, well-proportioned hips, and a tiny waist. Her legs looked longer than they should have given her height. She had the perfectly tanned shade of skin that only a rich white girl can get. \n\n\"No, but really, what is the problem Mrs. S?\" Natalie Doe asked from the seat next to Casey. I didn't know Natalie as well as the other girls. I knew that she had a bit of a reputation of being Chloe's loyal second. Always around to voice support for whatever the queen bee wanted, but a little timid on her own. Which was enough make me annoyed by her most of the time. With that said, I always got the feeling that there was something more to her She had a sly smile that seemed to indicate she saw more than she commented on. I took her to be a bit of a dispassionate observer, and I noted that she wrote excellent articles in the school paper. As a result, I granted her some grudging respect. Though I figured I would like her less if I knew he better.\n\nShe, like the other 'popular' girls who had volunteered to avoid the bus with, was a pretty girl. She was short, maybe 5'4 and had those small, but perfectly perky breasts that only petite girls can have. She had a lithe, slim body. She had incredibly long, black hair and big brown eyes. She had a sort of wide nose, but one that worked perfectly with her somewhat round face. She had very wide mouth with generous lips and perfect, I mean perfect teeth. I had met her parents at some sort of after school event, one was black and the other was east Asian, and she pretty, brown skin.\n\n\"The fucking bus broke down a hundred miles behind us. They have been trying to call, but I didn't have a signal until now,\" I hissed, trying to get the girls to quiet down.\n\n\"Language, Ms. S!\" Chloe said, clucking her tongue and shaking her head exaggeratedly. I stared daggers at Chloe, but decided it wasn't worth trying to start a fight over it. She was, technically right.\n\n\"Okay, just give me a second to figure out what is going on, please,\" I said and the girls all nodded understandingly. Which also sort of annoyed me.\n\nIf it isn't clear already, I was not exactly excited to have ANY three students in my car, but I was particularly not thrilled about these three. For reasons I could not entirely understand, the popular girls this year had decided that I was their 'fun' teacher this year. The one they all liked. Which made no sense to me, because I made it my business to be as mean to my students as humanly possible. Lots of homework, lots of pop quizzes, whatever. The world wouldn't coddle them when they got out.\n\nI didn't cut the pretty girls (or handsome boys for that matter) any extra slack either. If anything, I was rougher on them, because I assumed that everyone else was cutting them slack. Well, I mean, that was some of it. I think a lot of it was probably that my various high school wounds were still really fresh (despite being twenty year old scars at this point), and I recognized these kinds of girls. The pretty, privileged, socially gifted girls who could cut lesser students to the quick without even realizing they did it. The kind of girls who had once tried to destroy me. Or didn't even try, just nearly killed me incidentally while carelessly living their unblemished lives. \n\nSo whether it was entirely fair or not, I was often quite rough and short with the popular girls. And I now had this new theory that high school students were like cats: the more dismissive you were, the more they respected you and wanted to be your friend. And so despite my (somewhat concealed) contempt, they spent their mornings in my homeroom, talking to me and joking. They sometimes swung by for lunch or while they waited for rides. Occasionally, when I wasn't paying attention, I almost sort of liked them. \n\nAnd so I was not surprised when the three little queens of our small school had quickly volunteered to ride with me when the option arose. I supposed I should have been relieved. I could have picked thousands of other combinations of three 18-year-old kids (even some of the other girls or boys in the popular clique) that would have been a lot harder to control during a road trip. The just rubbed some very sensitive spots quite raw, just being themselves.\n\nRegardless, when I really wanted to flatter my ego, I sometimes wondered if maybe they liked me because finally I had gone from the ugly duckling to something resembling a swan. I was 38 years old, but certainly fit in better with these girls now than I ever would have at high school. In fact, this year was the first year I had been happy with the way I looked in years. \n\nSome of that, I think, was that I had finally finished going through a brutally painful divorce. I really don't want to get into everything that went down with Jerry, but it was a relief to be out from under him. And, when the divorce went through, I realized that I had been living under a sort of low-grade depression for years without even realizing it. I hadn't been taking care of myself as well as I had in the past. Didn't look after my appearance. This year, back in the dating scene, that had change. \n\nI mean, I felt like I looked good. I was (and am) very short, only about 5'2. I have long auburn-brown hair that I wear straight with long bangs. I have almond shaped (and colored) eyes and a tiny little nose that I am very proud of. I have a wide mouth with pouty lips. I have somewhat large, round breasts, a flat stomach, and what the kids now call thicc thighs and a big butt. My family was from Mexico (despite the fact that I still went by my married name, Sokolowski. Ana Sokolowksi nee Garcia) and I had clear bronze skin. But anytime I allowed myself to have these thoughts, I immediately felt disgusted with myself. Not only because it was a bit pathetic at my age to even compare myself to 18-year-old beauties, but also because even thinking of myself as the kind of person who would fit in with them felt a bit like a betrayal. Like I was stabbing a younger version of myself in the back, a girl who in no way would have been invited along for this ride 20 years ago.\n\nEventually, Muriel filled me in on the new plan, such as it was, and I hung up my phone. I angrily threw it down into the cup holder between the from seats and let out a loud sigh. The girls were entirely silent, but they were all looking at me, waiting for the information.\n\n\"Haven't all your friends texted you and told you what is up?\" I asked.\n\n\"You're the only one with a signal here,\" Chloe said, in a voice that indicated that it may kill her. \n\n\"It's that teacher salary, lets me get the really good service,\" I laughed, but I decided not to torture them. Less for them, and more because I didn't want to hear them whine. I would fill them in, \"So they can't get the bus fixed. The charter company is sending another bus, but it has to come from back home. So they aren't going to make it to the motel tonight. They are in...Boyntown or some damn place. There is a motel, and the towing company is ferrying students to it in pairs. They will start again in the morning on the new bus,\" I said. The girls laughed at their peers' misfortune. I smiled too.\n\n\"So what happens with us?\" Casey asked. I sort of shrugged.\n\n\"Its already, oh man, 10:30,\" I said, looking at the glowing clock in the dashboard, \"It would take us two hours to drive back and meet up with them. So we are going to drive on to the hotel we were all supposed to stay at. We will stay there, and in the morning we will follow behind the bus when it gets here,\" I explained. Honestly, I had ended up on the long end of the stick this time. Three girls would soon be shunted away to their own private room. I would have mine. I could sleep naked and I wouldn't have to chit-chat with Muriel.\n\n\"So we don't have to deal with Cathy Sutherland and we get to sleep in a little?\" Natalie asked raising he eyebrows. Cathy was another member of the popular clique. But I always got the sense that her abrasive style rubbed the others the wrong way. I disliked her more than any of the three here. Still, I had to lay down the law.\n\n\"No naming names!\" I snapped, But decided no further repercussions were needed, \"But yeah, we can sleep in. I think we lucked out,\" I said. The girls agreed and soon they were chattering pleasantly with one another and leaving me alone while I drove the last twenty miles into Greenville. It was a sleepy little town, little more than a handful of houses, a small hotel, and a gas station. I pulled into the hotel and told the girls to wait in the car while I checked us in.\n\nThe lobby was quite dated, with bright orange carpets and wooden panelling on the walls. It screamed: cheap. And I knew instantly why the school board had approved it. There was a goggle-eyed old woman sitting behind the counter typing into a computer with two fingers, and I walked up to her briskly.\n\n\"Good evening, my name is Ana Sokolowski. I am here to check in for the two of the rooms in the block of rooms for Franklin County High School,\" I said sweetly. One room for me. One for the girls. It was going to be a nice, quiet night. I could barely wait to crawl into bed and turn on the TV. The woman typed for a few more seconds, then turned and to look at me. She sighed, bored, and said.\n\n\"What's 'at?\" And I repeated myself. She looked out the window to the parking lot, seeing my car and no bus, \"I was expecting more of you,\" she said. For the first time I realized how tired I was after a long day on the road. I explained the situation. She shrugged, bored, \"Alright, provide the credit card that you used to make the reservation and I will give you all the room keys.\" I shook my head.\n\n\"I don't have the credit card,\" I explained, \"Its the school board's card. I am just checking in. Do you want to see my teacher's ID? It says Franklin County...\" \n\n\"Need the credit card,\" the woman said.\n\n\"I don't have it,\" I said exasperated.\n\n\"No room keys then,\" the woman said. I argued with he for another five minutes about it. Offering to call the Muriel, who had actually placed the order, to call Carl as the principal. Finally, I offered to call the president of the school board to have him confirm the purchase. She said it was 'corporate policy' and she wouldn't budge Finally, I gave up.\n\n\"Fine, look, I will pay for a room on my own credit card,\" I said, reaching into my purse. The lady shook her head.\n\n\"Can't rent you a room,\" she said.\n\n\"I told you, my credit card. You can swipe it here. Right now. Have a driver's license and everything,\" I said, annoyed. The woman shook her head again.\n\n\"Can't give you a room, we are sold out. No vacancy,\" She said. I looked around the empty lobby. The entire building was as silent as a tomb. I looked out the window. There appeared to be two cars in the parking lot. Mine. And my friendly neighborhood clerk.\n\n\"There is no one here! It is 11 o'clock already!\" I said, almost laughing.\n\n\"We got a whole high school full of kids coming in tonight,\" she said, not the slightest hint of recognition. Now I did laugh.\n\n\"Ma'am, that is my school! That is what we've been talking about the whole time. Those rooms are going to be empty all night...\" I said.\n\n\"Don't matter to us if people are in them. No one called before 9 p.m. to cancel the rooms, so Franklin County High School will be billed for the rooms. They will have to pay for them. Those rooms are occupied,\" she said, looking back at her computer. I nearly screamed\n\n\"Then give me one of them!\"\n\n\"If they show up and I gave away a room to you, I'd be in a heap of shit,\" she said.\n\n\"They aren't showing up!\" I yelled at her. She turned away from her computer and gave me a sour look.\n\n\"So says you,\" she said.\n\n\"Your theory is that I have somehow infiltrated the Franklin County High School system and learned they were going to be stopping here for the night, waylaid them somehow and stole a Franklin County High School teacher's ID, and then showed up here to steal two rooms. And not even steal them, but pay for them. Is that the theory?\" I said, laughing again.\n\n\"The theory is the rooms are already paid for. So I don't give a shit,\" she said.\n\n\"You could get paid twice for them!\" I shot back.\n\n\"I don't own this damned hotel. I don't care even a little bit how much money it makes,\" she said and I sighed. I ran my hands through my hair. I didn't know if it was because I was on a field trip or because I was transporting three teenage girls, but somehow all those high school frustrations were bubbling up. Here was I was, being punished with arbitrary rules for things that I absolutely could not control. Couldn't get this...person to believe I was who I said I was. I opened my purse and went to return my credit card to where it belonged. I saw the cash I had put in there for the trip. $300.00. I sighed again. Whatever. I guessed, as usual, I would have to pay an extra price to get out of this mess\n\n\"How about I make this pay for you?\" I said, pulling a hundred dollar bill out of the purse and laying it on the counter. The woman looked at it out of the corner of her eyes. She paused for a long time.\n\n\"I can't give you one of the rented rooms, if someone finds out...\" she said, and she looked out the door, like someone from corporate was going to show up and audit her. I rolled my eyes and slipped out another hundred.\n\n\"How about a room that isn't necessarily a room. Just a place where maybe you could lay out some cots. A storage room or laundry room or something. Just one little room,\" I said. The woman's eyebrows raised.\n\n* * * * *\n\nFive minutes later Casey, Chloe, Natalie, and I stepped into the hotel's \"linen closet.\" It was about the same size of a hotel room, and in fact might have been originally designed to be one. We entered in one corner of the room and there was a narrow entryway with a closet. To the left there was a spot was where you'd expect to find a bathroom. But instead of a bathroom, there was a large closet with a dirty washtub, a mop, and a bucket. Beyond the washroom was the main, rectangular room about the size of a standard hotel room. Lining the four walls of the room were metal shelves, stuffed with blankets and sheets. Running through the center of the room were another set of freestanding metal shelves, stuffed with towels. It was maybe two or three feet wide. There was a little rectangular walking path, maybe four three feet wide, between those two sets of shelves, all around the room. The clerk had set out four cots, one on each side of this rectangular path.\n\n\"You can use the bathroom in the lobby at night if you need it. Don't use the washtub as a toilet\" the clerk said, as she handed me a key, \"When you need to shower in the morning, I will let you use another room.\" I took the key with...ill grace, and shut the door behind her.\n\n\"Mrs. S...Mrs. S...?\" a voice said. The girls had dropped their bags on the floor and were looking, disgusted, around the room. I turned an saw Casey looking at me, sort of pained.\n\n\"What?\" I asked, sharply. More sharply than I should of.\n\n\"I know it has been a tough day, and I don't mean to bother you...\" Casey said, and I immediately felt bad. They weren't really doing anything wrong. I was just frustrated.\n\n\"It's alright, I am upset with the hotel and the bus and...everything, not you,\" I said, giving a wan smile. Placated, Casey kept talking.\n\n\"But we were supposed to get dinner when everyone got here, and we haven't eaten since lunch,\" she said. I sighed, and felt my own stomach aching with hunger.\n\n\"I saw the burger place we were supposed to go to as we came into town,\" Chloe said casually, \"It was closed.\" I swore under my breath and looked at my phone. It was 11:12 p.m.\n\n\"Dammit, it must have closed at 11,\" I said. Chloe shook her head.\n\n\"No, I mean closed closed,\" Chloe said, unzipping her back and taking out some clothes, \"Like gutted. Did no one do any research at ALL before this trip?\" She asked. That sounded about right. Carl had probably driven through here six years ago, eaten at the restaurant, and just assumed it was still here. ",
        "\"I am really hungry, Mrs. S,\" Casey said, biting her lip. I did my best not to take it out on her.\n\n\"I will see what I can figure out,\" I said, running my hand through my hair and turning back to the door.\n\n* * * * *\n\nHalf an hour later, I walked back into the room with three plastic bags in my hand. I slammed the door behind me and the room, which had been filled with the chatter of girls, immediately became silent. Slowly, the girls emerged from the linen closet area, into the entryway. They looked a little sheepish, like they knew I was going to be angry.\n\nThe girls had gotten changed while I was away, getting into their pajamas. Casey was wearing a pair of loose-fitting cotton pajama pants and a white tanktop. Chloe was wearing a pair billowy boxer shorts that probably belonged to a boyfriend and a tight t-shirt. Natalie was wearing an oversized sweatshirt. I can only assume she was wearing panties underneath, but the sweatshirt went down nearly to her knees. Every boy in Franklin County High School dreamed about this...my nightmare.\n\n\"What took so long?\" Chloe asked, as she approached the bags on the floor. She reached into one bag and pulled out a diet Coke. My diet Coke. I had gotten them regular Cokes. Whatever.\n\n\"Don't be a dick,\" Natalie said.\n\n\"What is this?\" Casey asked, her nose crinkling up as the smell from the bag hit the room. The other girls recoiled a bit too. My whole car already stunk like this, so I didn't care at this point whether they liked it or not.\n\n\"I knew there wasn't anything the way we'd come from. So I kept going about ten miles out of town. I saw a sign saying the next town was another 12 miles away and gave up. I drove back here, went into the gas station and cleared them out on food from the warmers. It is...chicken wings of some kind, a tacquito, and some hot dogs. I also got some chips,\" I said, \"It is this or nothing.\"\n\n\"Don't sweat it Mrs. S., this looks good,\" Casey said helpfully. Natalie reached down and grabbed the bags and took them back into the linen closet area, moving towards the cot on one of the two long sides of the cleared, rectangular path around the room. I was hungry, but I was jealous of how comfortable the girls looked. I wanted to be in my pajamas so I could eat and go to bed.\n\nThe bags were all stacked in a piled next to the washroom. I saw a couple of backpacks, four suitcases, and a laptop case. I did not see my duffel bag. I sighed again and clenched my fists. I wanted to scream, but I calmed myself. \n\n\"Girls,\" I said in a clipped voice.\n\n\"Yeah?\" Chloe's impertinent voice yelled back.\n\n\"I asked you to bring in all of the bags when you got out of the car,\" I said.\n\n\"Yeah, we got all of them. I didn't know if you wanted your computer case, but I got it anyway,\" Natalie said. The three girls had returned to the entryway and looked at the stack of bags.\n\n\"Where is my duffel bag?\" I asked. The girls looked at each other nervously, sort of shrugging.\n\n\"I didn't see one,\" Casey said, biting her lip, \"Want me to go and look?\" I should have appreciated that she was offering to help. But I was too tired, too annoyed with the whole world.\n\n\"In your pajamas, Casey? Does that sound like a smart idea to you? I swear, I... oh fucking shit!\" I suddenly yelled slapping myself so hard on the forehead that I immediately regretted it. The pain was sharp, but a dull throb remained.\n\n\"What's wrong?\" Natalie asked, looking at me warily, like she was scared I was going to explode. She was right to be nervous.\n\n\"My goddamned bag! I put it in the...the...\" the word wouldn't come, \"the fucking compartment in the bottom of the fucking bus. And then I got switched over to driving my car and I forgot to take the damned thing out. And now I don't have any clothes except for what I am wearing. Which means I have to sleep in my jeans and my shirt and then wear it again tomorrow,\" I vented until I felt ridiculous. \n\nOf course, none of the perfect girls had lost any of their stuff. They were comfortable. Well, not entirely comfortable. They stood awkward in the entryway of the linen closet and looked at one another as I yelled. Finally, I let out a low breath, controlling myself.\n\n\"Sorry,\" I said finally, not sure I really felt that or just felt that I should. The girls sort of shrugged.\n\n\"It's been a tough day, Mrs. S.,\" Chloe, of all people, said soothingly. \n\n\"You can wear my other pajamas,\" Natalie said helpfully. \n\n\"Thank you,\" I said, actually sort of touched that she would even offer. Then, I sort of furrowed my brow, \"You aren't even wearing pajamas now.\" The girls laughed a little and I felt some of the tension lessen. I felt silly for being angry.\n\n\"I brought this,\" Natalie said, picking at her sweatshirt, \"In case it got cold. And it is chilly in here. You can wear my other pajamas, for warm weather. We are almost the same size. They should fit.\" She said, and she started rifling through her bag, searching for pajamas.\n\n\"I have a bustier and a thong, if you'd prefer that,\" Chloe joke. Natalie laughed a little.\n\n\"Don't be a jerk, this is serious!\" Casey said, exasperated. \n\n\"Thank you Natalie,\" I said, taking a pair of shorts and a matching top from her. I looked around the room now, as I had them. There was no door on the washroom door.\n\n\"You can get changed in there, Mrs. S. We won't look,\" Casey said, reading my mind. I bit my lip and shook my head.\n\n\"I don't want to do that, I am going to go use the other bathroom that the clerk told me about. You girls go eat and try to relax. Sorry again that I got upset. It isn't you, its just...\" I said, and couldn't finish it.\n\n\"Don't worry about it,\" Natalie said and the other girls nodded. Then they turned and headed back to the linen closet area to eat.\n\nI took the pajamas and left the room. I walked back towards the lobby, to the place where the clerk had indicated I could find a bathroom. I walked briskly through the empty, quiet hallways of the hotel. Knowing that it was basically empty gave me a sort of creepy vibe (visions of the Shining) and I picked up my pace even further. \n\nThe linen closet was about as far from the entrance to the hotel as was possible and it took me a few minutes to reach the lobby. I saw that the clerk was no longer at the front desk, and I walked up to the ladies room. I grabbed the handle and twisted. It didn't move. I yanked on the door. It was locked.\n\n\"Motherfucker!\" I yelled, pulling again on the doorknob. Again, nothing. \"That stupid...\" I started. I turned around, looking to see if the clerk was anywhere in the lobby. I even walked over to the desk and sort of looked over it, seeing if she was napping on the floor or something. She wasn't. \n\nI spent the next 15 minutes trying to find her. I wondered the hallways, looking into the various ice/vending rooms, trying random doorknobs, and calling out \"the bathroom door is locked!\" over and over again. The hotel remained as silent and still as it had ever been. I grew increasingly frustrated, swearing under my breath as I stomped through the hallways. \n\nEventually, I opened up a door that said \"emergency exit only, alarm will sound\" and stuck my head outside when no alarm sounded. And there was the clerk, standing next to the dumpster, taking a drag from a cigarette. She looked a little surprised to find me.\n\n\"The fucking ladies room door is locked,\" I said hotly. I was well beyond the ability to pretend to be nice. My frustration was boiling over.\n\n\"Why didn't you just use the men's room?\" She asked. I felt a strange, familiar, twinge of anxiety. \n\n\"It didn't occur to me,\" I said flatly. I detested men's rooms. I hadn't been in one since I was 13 and I didn't intend on entering one again if I could avoid it.\n\n\"I lock up the women's room at night, so I only have to clean one in the morning. Just use the men's room,\" the clerk said, and then she turned back to the dumpster. She didn't want to deal with me any more than I wanted to deal with her. I sighed loudly and let the door slam behind me.\n\nA few minutes later, I was in the lobby again. I was standing in front of the men's room, looking at the little outline of the white figure. No skirt. A men's room, a room for men. I ran my hands through my hair. I mean, I knew it didn't mean anything. Any of the women in the hotel would use this bathroom. It was just the only open bathroom. It was like a unisex bathroom. I used those without any trouble. Still...that male character stared at me.\n\n\"Whatever, get it over with,\" I said to myself and I pushed open the door. I stepped into the bathroom and the door closet behind me quickly. I turned to the right and saw two urinals up against the wall. I looked straight ahead again, I didn't want to even think about urinals. I turned the other direction and saw my reflection in the mirror. I was a woman. I breathed out slowly. \n\nI turned towards the bathroom stall, walked in, and closed the door behind me. It was a bit of a relief as I was enveloped in the privacy of the stall. There were, thankfully, two hooks on the stall door. On one, I hung the pajamas that Natalie had lent me.\n\nI had dressed somewhat comfortably for the drive. I had a loose-fitting sweatshirt and a pair of well-broken-in jeans. I slipped the sweatshirt up over my head and hung it on the remaining hook, as best I could. I looked down at my sensible, red bra. I reached behind my back, unhooked it, and then through my arms forward. The bra slipped off of me and I hung it as well. My large breasts tumbled out and I sighed with relief. I looked down at my breasts, rubbed them gently where bra had pinched them. Next I unbuttoned my jeans and slipped them down around my ankles. I picked them up and set them on the door as well. Now I was only wearing my white cotton panties.\n\nThese were the only panties I had now. I desperately wanted to just leave them on. Slip into the pajamas and head back. But I would need to wear the same clothes tomorrow. I definitely didn't want to wear the same underwear for 36 hours. But I also couldn't go commando tomorrow. I would be wearing my jeans again and I didn't feel like getting chaffed by rivets and denim. \n\nAnd so, the only choice was to take off my panties now. Save them for tomorrow. I looked around the stall, not really sure what I was nervous about. Someone watching? Whatever. I slipped my fingers into the waistband of my panties, and slipped them down, hung them up on the hooks.\n\nI looked down at my cock, and sighed. If someone had told me when I was in high school that, pushing 40, I would still have that cock, I would have thought something had gone horribly wrong. When I was younger I had been, to my immense shame, hung. It had been well over seven inches long when hard. Given my height, it had looked absolutely massive. And I hated it. I had told myself I was going to have it removed just as soon as I could afford the surgery.\n\nBut then, I had started HRT. I was shocked by how quickly I went from sick, to glowingly healthy. The strange, unpleasant body that I had inhabited for all those horrible years had blossomed, seemingly overnight, into the form I had always known it should have. Softer features, breasts, more pronounced shape...all of those things had been a godsend. But other changes had occurred as well, things I hadn't expected. After a little while, my cock shrank. I didn't believe it at first, but soon the difference was so marked that I couldn't help but notice. It was suddenly two inches shorter than it had been before! The veiny, purpleness of it had changed as well. It had become soft, smooth, and pink. It really wasn't the same cock. It was girly. Cute. And suddenly I didn't hate it any more. I saw in its transformation, my own blossoming writ small. And so I kept it. And my husband, when I met him, had liked it as well. Finding fun ways to incorporate my cock into our bedroom activity (the only part of our relationship that had really worked), was always a surprisingly unexpected thrill. And so I kept it.\n\nBut now, for the first time in years, I thought of it again as an inconvenience. Because I lifted up the shorts that Natalie had given me off of the stall door. And they were tiny. And while Natalie was the closest to me in height, she did not have the same body type. She was slim. Very slim.\n\nWell there wasn't anything to do about it. I stepped into the shorts, pulling them up over my wide thighs. The fabric stretched around my ass and soon I was wearing them. They looked like they were painted on! An unmistakable bulge had formed in the front. I felt my cheeks get red, hot.\n\n\"Nothing to do about it,\" I whispered to myself. I rarely tucked and didn't have any of the stuff necessary to do it. Plus, I really wouldn't have wanted to sleep tucked anyway. I would just walk into the room with my clothes in front of my cock and jump into my cot quickly. \n\n\"Well, this should help,\" I said as I pulled the shirt on. It must've been tight on Natalie. My tits were basically falling out of it. They filled the shirt so well that my midriff was showing. All eyes would be there. And not on my dick, which they never would have thought to look for.\n\nI made my way back to the linen closet and went to open the door. It was locked. I sighed and kicked the door repeatedly. \"Sorry, sorry, sorry!\" I heard someone yelling from inside. A few seconds later Chloe answered the door.\n\n\"Sorry Mrs. S., it was so creepy we got scared and...\" Chloe started, then her eyes found my chest and went wide. Her cheeks went red and she looked away. I stepped past her into the room, holding my clothes in front of my hips.\n\n\"It's fine,\" I said flatly. I walked into the room and saw the other two girls sitting on one of the cots. They looked up at me. Casey did a double take.\n\n\"Damn Mrs. S! You have a killer body!\" she said. I didn't generally wear things to school that would accentuate my body. It seemed the girls were genuinely shocked. Despite myself, I was a bit flattered.\n\n\"It is a starving body. Give me my food,\" I said, looking down at the bags piled on the floor. None of the girls moved. They didn't speak. They eyed each other nervously. I looked over into the bag. Empty.\n\n\"We thought you already ate,\" Chloe said apologetically, \"Like when you picked up the food.\"\n\n\"You ate all the food?\" I asked, more resigned than anything. Of course. That was absolutely my luck. And it was just so...characteristic. These were the kinds of girls who didn't have to think about other people and their needs.\n\n\"There are some chips left,\" Natalie said, holding up a bag of opened potato chips. Somehow, that made me even angrier. I bit my lip so hard I am surprised I didn't draw blood. I was literally shaking. \n\n\"No. Thank you. I am just going to bed,\" I said.\n\n\"Mrs. S...\" Chloe started.\n\n\"No, going to bed!\" I said. The girls were one of the long sides of the rectangular path in the linen closet. I walked around to the opposite side where I couldn't see them. In fact, the linen even muffled their voices. Though, I thought I heard them giggling. I dropped my clothes onto the floor and flopped onto the cot. I grabbed a blanket off of the shelf next to me and covered up and slammed my eyes shut.\n\nI spent a long, hungry time just laying in the cot. My insides felt like they were tangled up. I was anxious and felt exposed. I was frustrated and angry and felt like no one around me had any idea what I was going through. I felt ridiculous and ashamed. I felt like everyone was laughing at me. In short, I felt like I was in high school all over again. \n\nBut, thankfully, at some point, I fell asleep.\n\n* * * * *\n\nI awoke at some point in the night, disoriented. For a long moment, I forgot where I was and what I was doing. And I heard a low, hissing sound. Slowly, my senses sort of returned to me and I rubbed the sleep from my eyes. I followed the sound of the hissing and eventually realize that it is whispering. I look down towards my feet and see that Casey was kneeling next to Natalie's cot, talking quietly but urgently. I knew that those two had been sleeping on opposite sides of the room. It meant that Casey had walked past me to get to Natalie. Perhaps that was what woke me up. \n\nAt first I assumed that Casey had awakened in the middle of the night and needed to use the bathroom. Afraid of going alone, she was waking her friend. I prepared to roll over onto my side and go back to sleep. But now that I was fully awake, I found that I could actually hear what they were saying. Despite the fact that I had no interest in eavesdropping, in the absolute silence of the linen closet, I couldn't help but hear them.\n\n\"No, you have to get up, I have to show you!\" Casey said insistently.\n\n\"I am exhausted, can't you just tell me? Or I can look at it in the morning,\" Natalie whined. I almost yelled at them then that I was exhausted and they needed to sleep. But I actually felt too tired to even complain. \n\n\"I mean...no. Like it won't be there in the morning and you have to see it! I mean I can't believe...\" Casey said, excitedly.\n\n\"Just tell me what it is and I will decide if it is worth looking at,\" Natalie said sensibly. Casey sighed loudly and then waited a long moment.\n\n\"She has a dick! Like...a penis!\" she said and I felt my blood run cold. I made a sharp, strangled noise in the back of my throat. My skin felt prickly all over. My vision sort of narrowed, blackness closing in around the corners of my eyes. I swear to god, my heart actually stopped.\n\nI looked down at my body. My blanket had fallen off at some point in the night. The thick bulge in the middle of my shorts was now very clearly visible. Casey had walked past me in the night, glanced down, and she had seen it! And now she knew! And she was going to tell the other girls. And by tomorrow morning, every student in the school would know that I was a transwoman. I couldn't breathe. I couldn't move.\n\n\"What?!\" Natalie asked, sitting up in the cot. My eyes followed them, I was frozen.\n\n\"I just walked past and I saw it! I mean, I didn't believe it at first. I got kind of close. I mean...it is clearly a penis!\" Casey said.\n\n\"I need to see it!\" Natalie said.\n\n\"I know, that's what I have been trying to tell you!\" Casey said, and Natalie rose up off of her cot. Casey stood too. I held my breath. The girls were going to walk over towards me and start gawking. They were going to point at my penis. They were going to talk about it. They were going to laugh about it. I was humiliated already, and I was certain that this final humiliation was going to kill me.\n\n\"Come on, be quiet,\" Casey said. I wanted to close my eyes, pretend like I didn't know it was happening. But I couldn't. I couldn't even blink, though my eyes burned terribly. The girls moved away from the cot. And walked to the other side of the room. Where Chloe was sleeping. \n\nFor a moment, I couldn't believe it. I wondered if my eyes were showing me what I wanted to see, rather than what I was really seeing. Maybe they were taking the long route around for some reason. But then they never appeared. I finally blinked. And they still weren't there. They were just over on the other side of the shelves. With Chloe.\n\nAfter what felt like an eternity (but was likely only a few seconds), I realized they weren't coming for me. Which meant...what did it mean? For a moment, I had no idea what to do or think. I remained frozen on the cot. But then I realized, if they weren't looking at me, they were looking at something.\n\nI scrambled quickly up out of my cot, trying to be quiet. I moved quickly over to the shelves separating my little piece of the closet from Chloe's side. It was just a hollow set of metal shelves. You could reach the towels in it from either side. I quietly, but swiftly, shoved several towels to the side. And then, I could see the other side of the room through the shelves. And my god,what I saw!",
        "Casey was on her knees on the floor, sitting down so that she blocked the view of Chloe's head from me. Natalie was standing at about Chloe's feet bent over perpendicular at the waist, looking at Chloe. And Chloe was sleeping. Her blanket, like mine, had slipped from the cot and lie in a pile on the floor. Chloe's tight t-shirt had ridden up in the night, bunched below her pert breasts, her bellybutton exposed Her boxer shorts were still on, slung low around her hips. But the button on the fly had apparently popped off. And Chloe's long, veiny, uncircumcised cock had slipped through the fly and was resting against her hip.\n\nFor a long time, neither I nor the girls made any noise at all. The only sound was Chloe gently breathing, oblivious, in her sleep. Honestly, for a long time, my brain couldn't really process what I was looking at. It was sort of strange because, of all people, I was not likely to discount the existence of trans high school students. And yet something about this situation just did not compute with me. Chloe Oliver: the fucking Queen of Franklin County High School was trans. The thought sat on the very top of my brain, but just couldn't sink in. \n\n\"I mean...what is it?\" Casey asked in a soft whisper. For reasons I did not fully understand, I felt my stomach tighten. I leaned forward as best I could, to hear what they were saying. I saw as Natalie rolled her eyes at Casey's question.\n\n\"Well it ain't a fucking salami!\" she hissed back, and the two girls glanced at Chloe's...penis again. The two girls were whispering slightly louder than before. They probably knew they should move away, but they also were just unable to look away. Frankly, I couldn't either. \n\n\"Has she always had it?\" Casey asked and this time Natalie actually laughed a little bit.\n\n\"Her parents bought it for her as an early graduation present,\" Natalie shot back. Casey sort of smirk and crossed her arms in front of her breasts.\n\n\"I mean, like, I don't remember her ever...\" Casey started. Natalie shrugged.\n\n\"She moved to town in like...8th grade. She was always, like...you'd never know,\" Natalie said. So that explained some of it, some of why no one seems to punish Chloe the way I had been punished. I had gone to the same school from kindergarten. Everyone always knew who I was. Well, no, they didn't. They thought they did. And thought it was ridiculous.\n\n\"So you mean this whole time...\" Casey said. And my mind filled in the gaps for her. This whole time Chloe has been lying. The whole time Chloe is has been deceiving us. The whole time Chloe was a boy. I knew they were thinking this, because it was the bullshit that I had heard all during high school. \n\n\"I could have sworn,\" Natalie said, and that last word must have slipped of her lips just a little bit too loudly. Because at that moment, Chloe's eyes opened. Casey and Natalie tensed, but they didn't run. Maybe they knew they were already caught. But it looked to me like they were just shocked. Like Chloe wasn't a real person, and they were surprised to see her springing to life.\n\nChloe sleepily enjoyed the last few seconds of her dignity, as I saw it. She rubbed her eyes with the back of her hands. She yawned and the realized the other girls were sort of crowded around her and jumped a little. Then she laughed softly.\n\n\"Hey guys, what's up?\" She said, a little confused. She threw her legs over the side of the cot. And she felt it. I saw her feel it. Her soft cock brushing against her thigh. The cold air of the linen closet eliminating any doubt. Chloe looked down between her legs. Her eyes grew wide and her face instantly became crimson.\n\n\"I forgot to put my panties on under my boxers,\" Chloe said in a jerky, unnatural sounding voice. I knew that she was saying so much more with those words. In that brief moment, my feelings for Chloe Oliver completely inverted. Suddenly, I saw her in a completely different light. Where once I had seen over-privileged girl with a sneaky disobedient streak, I now saw something else. I saw a girl who had climbed the social ladder of high school on her own terms. Who lived and breathed the truth she felt in her heart. Suddenly, her brashness felt more like openness. Her popularity a reward for her bravery. I saw, reflected in her, a life I might have lived if given half a chance.\n\nAnd then I sensed all of that melting away. I could see it in her face, and hear it in her voice. Everything she had worked so hard to create was falling apart. And instantly. I mean it was all being stripped from her in the blink of an eye. By this time the next day, she would be a pariah. The worst part was, she clearly knew it. \n\n\"Guys, you guys. We were friends...please don't say anything...I will...I don't know,\" Chloe said miserably. She propped her elbows onto her thighs, put her head in her hands. She looked up at her erstwhile friends, pleading with her desperate eyes.\n\n\"You need to go,\" I said to myself, in my mind. I knew that these girls, these popular, pretty girls who never had to worry about the things that Chloe and I worried about, were about to unleash hell. I knew the things they would say, the things they were already thinking. Because I had heard them all before. I knew the ways these girls were. And so I needed to get out there. I needed to protect Chloe.\n\nAnd yet I couldn't. I kept telling my legs to move. I kept willing myself forward. But I remained frozen in place. It wasn't indecision. I knew what I had to do, what I was going to say. In some ways, I had been rehearsing my words in my mind since I was in middle school. It wasn't that I was shocked or confused. It was that I was scared.\n\nSuddenly I didn't feel like \"Mrs. S,\" anymore. The years separating me from high school, from MY high school, had collapsed. I was Ana Garcia again. The short, shy, unhappy girl that pretty girls like this chased out of bathrooms, calling her 'Ana Conda' and giggling viciously. Other names that can't be written. Casey and Natalie were the girls who picked Ana Conda apart like a fly. \n\nI was suddenly overwhelmed by emotions that I hadn't felt in decades. That sensation of pure dread I felt every time I went to school. Every time I saw a pretty, popular girl. My legs felt weak, and my bladder was tight. My eyes were filled with tears and I was covered in a cold sweat. \n\nI needed to be there for Chloe. But my broken parts had never healed. They had scarred over some, and festered underneath. Rotting and reeking. The trauma was still too raw. I couldn't help her. Because right beneath the skin I was still shattered. But while I couldn't help, I also couldn't look away. And so I prepared to watch my own cursed memories come to life. To swallow up another innocent.\n\n\"Please stop staring at me!\" Chloe begged, \"I know I am disgusting, don't look!\" I couldn't breathe as she spoke.\n\n\"Oh god, no!\" It was Natalie. She sat down on the cot next to Chloe, and threw her arm around her. She pulled her close.\n\n\"Chloe! Don't say that! You aren't disgusting! We weren't staring!\" Casey said. She was still on her knees near Chloe's cot, and she rubbed her friend's calf gently. \n\n\"Well, I mean, we kind of were staring,\" Natalie admitted nervously, \"But we were just like...surprised. And curious. We just...\"\n\n\"We didn't know we knew any trans people,\" Casey finished and Natalie nodded emphatically. The scene unfolded before me in a sort of aura of unreality. Like I had experienced some sort of psychotic break and my mind was replaying some sort of fantasy I'd once had.\n\n\"Please don't...\" Chloe said, and I could tell that she didn't really believe it either. Still, she leaned her head against Natalie's shoulder. \n\n\"We are telling the truth. I am sorry we scared you,\" Natalie said, soothingly. She hugged her friend tighter.\n\n\"I told Natalie, and I shouldn't have. I just...I was surprised. But we won't tell anyone else. It isn't anyone's business,\" Casey said with real remorse. Chloe looked back and forth between them. She looked down at her cock, which was still hanging out of her boxer shorts. She breathed heavily for a few seconds.\n\n\"Are you guys fucking with me?\" Chloe asked, her eyes red and her body trembling. \n\n\"No, we are really sorry we made you feel bad. I wouldn't have told Natalie if I thought you'd be so upset. I didn't think...\" Casey said. She bit her lip and I could see that her leg was sort of nervously shaking.\n\n\"For the record, I think it is sort of cool,\" Natalie said. Once again, the girls lapsed into silence. Chloe looked at Casey for a long time, and then turned to Natalie as well. She kept waiting, as I did, for the other shoe to drop. But the other girls just looked at her, warm but nervous. \n\n\"It is okay, I am not mad at you Casey. Don't lose that leg,\" Chloe eventually said and Casey visibly sighed with relief. She stood up quickly and put her arms around Chloe, accidentally bumping Natalie in the head in the process. Natalie laughed and slipped her arm from Casey's shoulder.\n\n\"So we are still friends?\" Casey asked anxiously. A little dazed, Chloe laughed.\n\n\"Yeah, its fine,\" she said in a far away voice. She turned to Natalie, \"You think my...my body is cool?\" she asked a big incredulously. Natalie nodded emphatically.\n\n\"Yeah! Its unique and...Oh my god, I just thought of something,\" Natalie said, \"you never have to have a period!\" Chloe smiled a little and shrugged.\n\n\"Oh jeez, you're right!\" Casey said, \"Okay, actually, now I take back what I said before. I am disgusted. But like, exclusively because you've never had to use a tampon. Or have your mom describe to you how to use a tampon.\" The girls all laughed. And the tension in the room seemed to slip away. Chloe was breathing more normally.\n\n\"I just thought you guys would think I was, like, a pervert or something,\" Chloe said and Casey furrowed her brow. Natalie laughed gently.\n\n\"I mean, two weeks ago you told me that you watch porn where cartoon girls have sex with monsters. You are a pervert,\" Natalie joked, \"but not because you're trans.\"\n\n\"I don't think your, like, gender can make you a pervert,\" Casey said, clearly struggling to put her words in the correct order, based on her thinking, \"Like, being a pervert is about stuff you do or think, not who you are.\" Chloe smiled at that.\n\n\"You know, I think you guys are telling the truth,\" she said after a long pause, \"It just still feels really weird. Like, no one but my parents know that I am...trans. It feels weird having you all know,\" she explained. Natalie nodded understandingly.\n\n\"So remember earlier this year when I dated Ben Whitmere? He asked to watch me pee. Like to squat down close and watch it come out. I let him do it. It was kind of fun,\" Natalie said matter-of-factly. Chloe laughed and put her hand over her mouth.\n\n\"Oh my god, are you for real? Why did you tell me that?\" she asked.\n\n\"Now you know something weird about me that no one else knows. And you know I am a bigger pervert than you. Because, like Casey said, that's a thing I did,\" Natalie explained.\n\n\"You didn't have to...\"Chloe started.\n\n\"I made out with my cousin once,\" Casey threw out quickly, her cheeks red before she even said it, \"Well, more than that, she was like...really insistent on feeling me up.\"\n\n\"She?\" Chloe asked, raising her eyebrow.\n\n\"That is weirder to you than that it was her cousin?\" Natalie laughed. \n\n\"I guess none of that is weird, everyone wants to feel up Casey,\" Chloe joked and the girls laughed. \n\nI had watched all of this unfold in a totally receptive state. Once the girls started really talking, I didn't even had conscious thoughts that I could recall. I just sort of took everything in, letting it wash over me. I guess that was the only way I could make sense of it. If I tried to process it actively, it would have clashed violently against everything I knew to be true. Everything experience had taught me over many, many hard years.\n\nBut as the girl's laughed together, I sort of dropped back inside of myself. I became conscious that I was looking through the shelves in the linen closet at the three girls. But I felt...changed. Like I had climbed back inside of my own brain, but all of the furniture had been rearranged. \n\nI looked at Casey and Natalie, and Chloe. And I didn't see the girls I had driven out to the god-forsaken hotel with. Girls that I hated. No. Wait, that wasn't true. I didn't hate Casey. Casey had always just reminded me of Beth Cramer, the Student Body President who called me by the wrong name at every single school assembly. I didn't hate Natalie. Natalie just reminded me of Andrea Henson, who tried to pants me every day during gym glass. I didn't even hate Chloe, who had once reminded me of Meredith Murphy, who hid notes in my locker from my 'secret admirer' and told everyone I \"fell for it\" even though I knew no one liked me. I had never really seen Casey and Natalie and Chloe before. I had always just seen their analogues, back through the years. Not really them. Not until this very moment. Now Chloe just reminded me of...me. And Casey and Natalie were the girls I needed back then but had never found. I kept watching, recording everything I saw in my mind's eye, too scrambled to really think.\n\n\"So seriously, no pressure. You can say no if you want and I won't say a word or anything. I am just sort of curious...\" Natalie was rambling.\n\n\"What?\" Chloe asked.\n\n\"Can I look at it?\" Natalie said, crinkling up her nose.\n\n\"Yeah, can we?' Casey asked, \"I am just so curious!\" Chloe gave them a sort of incredulous look.\n\n\"You want to look at it?\" she asked. The other girls nodded. Chloe shrugged, \"I mean...Okay,\" she said, and she spread her legs.\n\n\"Take the boxers off, we can't see anything,\" Casey said and Chloe laughed.\n\n\"You've seen plenty, I think,\" she said. Nonetheless, she stood up from the cot. She slipped her thumbs into the waistband of her boxers and dropped them quickly. And suddenly she was standing right in front of two of her classmates, her soft cock entirely exposed.\n\nIt was maybe a little longer than mine, but not as big as I had been before HRT. It somewhat thin and veiny. She had small balls in a tight, smooth scrotum. She was waxed entirely bare. It was cute. She was cute. The other girls seemed to think so to.\n\n\"Woah!\" Casey said.\n\n\"Its so girly!\" Natalie said, scrunching up her nose. Both girls had moved so that they were kneeling on either side of Chloe's body. Far enough away to be respectful, but close enough to see... everything. By chance, neither Casey nor Natalie moved directly in front of me, and I was left with a clear view of Chloe's lovely body. \n\n\"Is it rude if I ask if you an get, like, hard?\" Casey asked, leaning in slightly.\n\n\"No, I don't think it is rude,\" Chloe said, a little self-consciously.\n\n\"Does it get, like, hard?\" Casey asked and Chloe laughed.\n\n\"Sometimes. Don't be offended, I am a little nervous right now,\" she explained and the other two girls giggled playfully. \n\n\"Do girls get you hard?\" Natalie asked, raising her eyebrows. Chloe laughed prettily and nodded, suddenly shier than I'd ever seen her before.\n\n\"Boys and girls,\" Chloe said in a small voice. That answer hung in the air for a very, very long time. Chloe's eyes darted first to one of her friends and then the other, then back between her legs. I saw Natalie looking hungrily between Chloe's legs as well. Her eyes glittering and moving. You could almost see the wheels turning in her mind. Still, it was a surprise when she broke the silence. \n\n\"Can I put it in my mouth?\" Natalie asked in a husky voice. Chloe's eyes got wide.\n\n\"What?\" Casey asked.\n\n\"I wasn't asking you,\" Natalie said, then she looked up at Chloe, \"People say I am good at it.\" She bit her lip and fluttered her eyelashes. Chloe looked at her for a long moment. Her cock pulsed a little and I saw her chest rising and falling more rapidly. She looked over at Casey, who was just looking on intently.\n\nChloe looked as though she had hundreds of questions in that moment, but after another awhile, she asked an interesting one: \"Why?\" she whispered. Natalie smiled and shrugged.\n\n\"You look hot and I like sucking dick,\" Natalie said simply. Natalie settled down a little towards the floor, her body moving languidly, seductively. She bit her lip a little and ran her fingers through her hair. It wasn't clear if she realized how she was moving. Her arousal was just as evident as Chloe's plump cock. \n\n\"Is this some sort of pity thing...\" Chloe started. Natalie rolled her eyes and shook her head vehemently. She didn't even let Chloe finish. \n\n\"I am going to be totally honest with you. I am like super turned on right now and have been this ENTIRE time. It is like...really intense. I don't know why, but you should totally take advantage of it. I am not asking you to marry me, it was to have fun!\" Natalie blurted out and Chloe laughed.\n\n\"I don't know,\" Chloe said, furrowing her brow.\n\n\"Don't you,\" Natalie said, and her eyes darted down to Chloe's cock. No longer hanging limply between Chloe's slim legs, it was plumping up. Maybe half hard. Chloe reached down and pushed her cock down, as though willing it soft again. It just got a little harder.\n\n\"Can I watch?\" Casey blurted out and the other two laughed. And for some reason that seemed to break the impasse, but not the sexual tension. \n\n\"Yes,\" Chloe said, finally, shaking her head in confusion, \"To both of you. If you take your clothes off.\" Natalie and Casey looked at each other. And then suddenly there was flurry of activity and Chloe was laughing. She leisurely removed her tight t-shirt, her perky breasts with big, pink areolas falling out. The other girls tore off their clothes, leaving them in a heap on the floor. \n\n\"Jesus, Casey!\" Chloe said, as the class president got undressed. \n\n\"What?\" Casey asked.\n\n\"You look like a porn star!\" Natalie informed her. Casey's breasts somehow looked larger when she was out of her clothes. But she was only 18, so despite their large size they sat up high and firm on her chest. Her reddish nipples look like they were painted against her pale white skin. Her skin was smooth and even. Her pussy was a small, reddish gash. A small, well-kempt strip of blonde pubic hair above it.\n\n\"You do too,\" Chloe said, turning to look at Natalie. As she spoke, she reached forward and flicked Natalie's nipple. Both of Natalie's small, brownish nipples were pierced with small, silver studs. Her body was lithe and long, making her look taller now that she was naked. She had tight, brownish pussy lips and a landing strip of dark hair. Now all three girls were naked.\n\n\"I mean, if you want to film this...\" Natalie teased.\n\n\"No!\" Casey and Chloe said in unison. Natalie clapped her hands and laughed.\n\n\"I was just kidding,\" Natalie assured them.\n\nLess joking, more blowing,\" Casey said, pointing to Chloe's dick.\n\n\"I could not have said that better myself, thank you Madame President,\" Chloe said. Casey sat down on the opposite end of the cot, next to Chloe. She sort of leaned forward, looking at Chloe's body.\n\n\"This is like...I don't even know,\" Natalie said shaking her head a bit in almost reverence. But she didn't wait any longer. She dropped down quickly on her knees directly in front of Chloe. Her head tilted back and she looked up at Chloe's eyes for a moment. Chloe blushed and bit one of her fingers, looking down at her friend.\n\n\"No one's ever done this for me before,\" she said softly. And it was like that pushed Natalie beyond control. Her hand came up and wrapped quickly around the base of Chloe's penis. Her fingers were pressed against Chloe's balls. Chloe gasped as Natalie pulled her cock forward. Natalie's mouth opened and her head dropped. \n\n\"Oh god!\" Chloe groaned, throwing her head back and running her hand though her hair. Natalie's head slid down slowly, her friend's penis pressing through her lips and disappearing into her throat. Natalie's hand moved off of Chloe's shaft, and now both of her hands were resting on Chloe's thighs, spreading Chloe's legs farther. And still, her head kept dropping. Natalie's chin was resting against Chloe's smooth-shaven balls, her nose was against her stomach. ",
        "\"This is so sexy!\" Casey said, almost in awe. She was leaning forward, watching. But, almost unconsciously, her legs began to spread. Soon, her creamy thighs were bumping into Chloe's spread knees. Her pussy lips had slipped apart. In the low light, her lips already glistened with juices. Her right hand slowly snaked down her body, it found its way to her pussy, and her fingers slipped easily into her slick body. She pulled her wet finger out with a sigh, and then began to circle her finger around her small clitoris. But the whole time, her eyes remained on the other two girls.\n\nThere was a lot to watch. With Chloe's cock buried entirely in her throat, Natalie moved her head side to side. A thick line of drool dribbled out of her mouth, down her chin, and into a small puddle on the floor. But after a long while, with a gasp, Natalie pulled her head back, Chloe's penis slipped back through her lips. Chloe's eyes were closed now and she ran her hands over Natalie's head. But Natalie didn't wait. As soon as she had caught her breath, she pushed her head forward again, faster than before. Once Chloe's cock hit the back of Natalie's throat, Natalie bounced back. And then thrust her head again. Soon, there was a soft \"gluck...gluck...gluck\" sound as Natalie bounced the tip of Chloe's penis hard against the back of her throat over and over again. \n\n\"I have never felt anything so good!\" Chloe gasped. One of her hands rose up to her breast, kneading the flesh slightly, almost like the slight pain was a relief. \n\n\"She isn't bad at that,\" Casey said. As she spoke, she leaned in closer, breathing deeply through her nose, as though she wanted to smell the scent of her friends' arousal. Casey slipped her finger down through her slit again, and then brought it quickly up to her mouth. She sucked on her finger earnestly, moaning a little as she tasted her own flavor. Chloe had turned to look at her, and her eyes grew wider .\n\n\"Did you just taste your own pussy?\" Chloe asked. Casey slipped her finger from her mouth, looked at it.\n\n\"Yeah...\" she said slowly, \"I always do when I masturbate. Is that weird?\" she asked, her cheeks getting a bit red. Chloe sort of shrugged and smiled.\n\n\"You are such a pervert!\" Chloe teased, but followed it up immediately, \"It is really hot, though.\" And Casey smiled. She moved her finger back between her legs. She moved her index finger through her slit. When she lifted it again, she began to bring it up to her mouth again. Then she paused. She thrust her finger towards Chloe's face. Chloe's mouth opened and she groaned as her lips wrapped around Casey's finger, tasting her pussy. Chloe seemed to be enjoying the taste so much that she didn't even notice that Natalie had slowly allowed her cock to slip out. \n\n\"You guys have like a sixth grader's idea of being a pervert,\" she said, with faux annoyance. Before the other two girls had a chance to react, Natalie's hands moved down and slipped underneath of Chloe's knees. Without warning, she pushed them up and back. Chloe let out a little yip as her hips rocked back. She threw her hands back to steady herself and Casey's finger slipped from her mouth. Chloe's hips rolled back as her knees moved towards her chest. Her now completely hard cock pressed against her slim belly, her small balls hanging lower now.\n\nOnce again, Natalie moved like a woman who knew exactly what she was doing. She kept her hands up against the backs of Chloe's knees, her elbows locked out. And then she dropped her head down. First, her tongue darted out softly, sinking into Chloe's scrotum. And then she opened her mouth wider, and Chloe's balls entered her mouth. Chloe gasped, her eyes on Natalie's, watching as her friend massaged her balls with her tongue.\n\n\"Do they taste good?\" Casey asked, gasping a bit, her finger moving more wildly between her legs. She didn't stop watching her friends for a second. Natalie slipped Chloe's balls out of her mouth with an audible pop. She kissed Chloe's scrotum.\n\n\"Very tasty,\" she said, \"But this will be better,\" and with that, she dropped her head lower, with her tongue out. Chloe's whole body shook and she made a strange cooing noise.\n\n\"Oh fuck!\" Chloe groaned, \"She is eating my ass!\" The room filled with a wet sort of noise as Natalie lapped at Chloe's asshole. And at the same time, Casey's lifted one of her breasts up heavily, moving her nipple to her mouth and sucking on it as she watched the others.\n\nI don't know what it was about that moment, but I sort of dropped back inside of myself. It was only when that happened that I realized that anything strange had happened. But now I felt a little like the wind had been knocked out of me. I thought back on what had happened, and it was sort of...impossible to fully understand. I had been like my consciousness had sort of been floating freely around the room, sort of passively observing. I hadn't felt anything. I hadn't even been conscious that I had a body. I had never felt anything like it before. \n\nAnd then, a moment later, I really realized what it was that I was watching. Three of my students, having sex with one another. I mean, they were all 18, so it wasn't like...I don't know, but it was still...This was not something that should be happening. I had a duty, as their guardian, to put a stop to all of this. \n\nBut these thoughts weren't as sharp at the time as they later seemed in retrospect. I still had a sort of dazed, floating feeling. The thoughts passed through my mind in a sort of rote, mechanical way. I think that, largely, it was just instinct. I was a teacher, with my brain in a fog, I sort of defaulted to my original programming: see students having sex, you put a stop to it.\n\nWith no additional thought about what I was going to do or even what I was thinking, I sort of stumbled my way around the outside of the linen closet. I came around the corner and I was looking at them again. It was strange, being on this side of the shelves, no longer looking through the towels and other objects, this suddenly felt more real. This was not some sort of strange fantasy my mind had conjured. This was real. There were three pretty girls having sex with one another.\n\n\"Ahem!\" I said, somewhat loudly. And the girls froze. Casey's legs slammed together and her tit fell from her mouth. Natalie only moved her eyes to look at me, Chloe's balls resting on top of her nose, Chloe's shaft actually resting against the top of her head. Chloe crossed her arms in front of her breasts, her body trembling.\n\n\"Oh shit! Mrs. S...I...\" Casey said. Natalie opened her mouth to speak, but it was like she had forgotten her tongue was up Chloe's ass. She spoke but just made a strange, muffled sound. \n\n\"Girls,\" I said, my voice sounding oddly normal, \"I don't know what you all think you're doing here. But this is totally and completely inappropriate. This is a school trip and it does not matter how old you are, this is not acceptable behavior for...\" The more I spoke, the more comfortable I felt with what I was saying. It was like the world was falling back into its normal places. But then Chloe interrupted me.\n\n\"Uh, Mrs. S...\" she said. I was a bit annoyed.\n\n\"Yes, Chloe, what?\" I asked sharply. For a moment, Chloe just looked at me. Slowly, the look of shock melted from her face, replaced with something that looked strangely like...relief. But that lasted only a moment, and was itself replaced with the more familiar smirk I recognized from school. She tilted her head to the side, \"What is it?\" I asked.\n\n\"Your uh...You...\" Chloe said, and she lifted one hand from her breast and pointed it at me. She sort of circled her finger around.\n\n\"My what?\" I said, trying to follow her finger. My eyes went down. I saw it before she responded.\n\n\"Your dick is hard,\" she said. And she was right. As I looked down, I saw in my small, borrowed shorts were tented. Tented so much that it had pulled the leg hole wide, my balls visible. The other girls turned and looked as well. Casey's mouth dropped open. Natalie pulled her face away from Chloe's asshole to stare at me.\n\nI had, thousands of times, imagined what it would be like if students found out about my gender identity. I had nightmares about it, in fact. I knew, had always known, exactly how I would feel if it had ever happened. Even the thought of it sent a cascade of cold nerves down my spine, settling in the pit of my stomach. Absolute despair. Absolute panic. And yet...here I was.\n\n\"Oh my god!\" Casey said, \"Is this...like for real?\" It felt like a good question. \n\n\"Well, shit,\" I said casually, the 'disappointed teacher' vibe that I had cultivated evaporated. But despair and panic didn't take its place. It should have been terrifying. I should have melted into a puddle on the linen closet floor. I should have been begging, pleading for their silence. I should have felt ashamed. But instead, I was just...calm. \n\nFor reasons I really couldn't explain, the fear and shame didn't feel rational. I guess most of it was just I had seen how the girls reacted to Chloe. Despite myself, I had come to trust their instincts. And, honestly, my cock was still hard (the first time that had happened in such a long time, I hadn't even realized it had happened), the only thing really felt was aroused. \n\nThe girls were still gaping at me, their mouths open, their eyes wide. I probably could have bluffed them down from this. Got more angry and scared them into submission. But I looked at them, their beautiful bodies draped over one another. And they had been having fun, not hurting anyone. They were adults. Really, they had been so sweet to one another, I felt terrible about the idea of pulling them apart. I put my hands on my hips, and sighed. What was obviously right didn't feel right. What was obviously wrong felt...like the only thing I could reasonably do. \n\n\"Alright,\" I said, taking a step toward them. As I moved, I worked my thumbs into the waistband of my shorts, \"You aren't in any trouble. I am not going to say anything to anyone,\" I said, but the girls didn't seem relieved by that. They were still to shocked, \"What do you all want to do? Do you want to go to bed right now? Just be done with this? You want me to pretend I didn't see anything? Just go on the other side of the room and we all keep our mouths shut bout everything?\" I slipped the waistband of my shorts down slightly, \"Or do you want to do something else?\" I could hardly believe what I was saying. But even as I said it, I knew that I meant it. Meant it completely. God, I couldn't remember the last time I was this horny...I would have done anything with anyone at that moment.\n\nThe girls paused for a moment. Casey looked at the other two girls, her eyes wide, shrugging and not speaking. Natalie bit her lip, looking away from me, and turning, looking up at Chloe. Chloe wasn't looking at her. Instead, she was starring right at me. Chloe's smirk was still there, but it didn't seem mocking anymore. She raised her eyebrows.\n\n\"You got to see my dick, Mrs. S. I want to see yours,\" Chloe said. Between Chloe's legs, Natalie nodded enthusiastically and looked at me. I put on a stern face for a moment.\n\n\"No,\" I said flatly, and Chloe flinched a little, \"No, if you see my cock, you call me Ana,\" I said, then I turned to the other girls, \"You all want this?\" I asked and was met by more enthusiastic nods, \"And not a word to anyone! About any of this?\" I said. The girls nodded, \"Say it!\" Insisted.\n\nNot a word to anyone,\" they all said in rough unison. Honestly, I was no longer in control of myself. I wasn't myself...I don't know. I felt like a different person. And to this different person taking off my clothes seemed like the right thing to do. And so I did. I slipped the tight shorts down over my hips, letting my hard, smooth cock pop out. My smooth, shaved balls hung down low and heavy. While the girls were gawking, I slipped the top up over my head and tossed it aside as well, my firm breasts now exposed. Finally, we were all naked. The first time I had been naked in front of anyone since my divorce. \n\nFor a long moment, I just stood, looking at the girls. The room was absolutely silent. In fact, we could hear the sounds of the air conditioning units down on the far side of the building. No one moved. No one breathed. I just looked at them, and they stared back at me. \n\nI guess had expected them to just...go back to what they were doing. And I would join somehow in some way. But they seemed to be waiting for me. And I realized that, despite everything, I was still their teacher. They expected me to take the lead. To instruct them. I smiled a little. \n\n\"Casey, you look a little lonely over there, do you want me to keep you company?\" I asked, before she answered, I started walking in her direction. As I passed the other girls, I said, \"Don't let me interrupt you. That asshole looks nice and wet, you could probably get a finger in there.\" \n\nI walked over to Casey and didn't say a word. Instead, I took her hand and pulled her, gently, up off of the cot. She rose easily. I wrapped my arms around her waist, felt her large breasts press into mine. Casey tilted her head to the side and closed her eyes. Instinctively, I leaned in to kiss her. I felt her soft lips trembling against mine. She was nervous, but also excited. Her lips split open and I felt her warm, assertive tongue lick my mouth. My own lips spread open, I felt Casey's tongue crash into mine. It was warm and soft, and I licked her saliva off of it and swallowed it down. I felt Casey's arms wrap around my neck, she pulled me in deeper, our breasts squeezing tightly.\n\nLike everyone else at Franklin County High School, I had always been curious about Casey's incredible tits, even if I pretended I wasn't. And for that reason, I couldn't bear to kiss Casey any longer, no matter how lovely it felt. Reluctantly I pulled back, feeling Casey's tongue slip from my mouth. She moaned a little. But I pushed her back, feeling her warmth move away from me. Gently, I placed my hands on her shoulder, and pressed her down. I guided and Casey followed, and in a moment, She was laying on her back, her massive breasts spread out across her chest.\n\n\"Push them together,\" I said and clearly, Casey knew exactly what I mean. As I stepped so that I had a foot on either side of waist, she moved her hands up, pressing her large breast together. I moved down so that I was kneeling over top of Casey's body, my ass on her stomach, my cock hovering right above her breasts. I leaned forward, and spit. A large globe of spit, right on my cock. I worked it in slowly, with my hand. At the same time, I spit again, this time between Casey's breasts. Then I moved my cock down, pressing it between her soft breasts.\n\n\"Oh my God, they are lovely!\" I purred as my cock settled down between Casey's large, milk-colored breasts. She smiled up at me, blushing a little. She squeezed her breasts together more tightly as my shaft came to rest against her breastbone. For where I knelt, I began to rock my hips back and forth. My ass rubbed against Casey's flat stomach, and my cock slipped between her soft breasts. We were well-lubricated, and I slipped easily through Casey's flesh. I watched the tip of my penis pop up between her breasts and then slide back.\n\n\"I can't believe this is happening,\" Casey said, looking down at my cock and then up to my breasts. I smiled and reached one hand back behind me. I found my fingers between Casey's legs, she was sopping wet.\n\n\"Do you like it?\" I asked, stroking my finger across her clit.\n\n\"Yes!\" She gasped, making me smile. At that moment, I just happened to look up. I was still thrusting my cock between Casey's massive breasts, but now I was looking back at Natalie and Chloe. Chloe was still spread-legged on the cot, leaning back slightly and grasping her breasts with her small, dainty hands. Natalie was still kneeling between Chloe's legs. But she was no longer eating Chloe's ass. Instead, Chloe's penis was back in Natalie's mouth, and I could actually see Natalie's tongue swirling around the tip. \n\nBut that wasn't all. Natalie had taken my advice. The puckered, pink rosebud of Chloe's tight asshole was spread, and Natalie's long, thin finger was pressed inside of her. I could see Chloe's tight anus squeezed around Natalie's second knuckle. Natalie's finger was dripping with spit. And as I watched, I saw her press the finger deeper in, until it disappeared entirely into Chloe, and then she pulled it out again. Chloe moaned prettily with each motion of Natalie's finger. \n\nAfter a minute, Natalie's eyes flashed opened. And she turned her head, looking towards me. She saw me watching, and she smiled around Chloe's cock. She let Chloe's penis fall from her mouth, and it pushed against her cheek. Natalie looked at me and said, \"Do all you trans girls taste this good?\" she asked. I smiled.\n\n\"You'll find out soon enough,\" I said. And as I spoke, I heard a small mewling sound below me. I had been so engrossed in watching, that I had forgotten that I was still thrusting my cock between Casey's tits.\n\n\"Please, Mrs. S...Ana, please put your dick inside me. Please...fuck me!\"Casey almost screamed. My fingers were still toying with her wet pussy, and I realized just how turned on she was. Still, I paused. Just to tease.\n\n\"But I will miss these lovely tits,\" I said, thrusting once, harder than before. Casey groaned.\n\n\"You can do anything you want with my tits!\" she offered, \"Suck them, squeeze them, spank them! I don't care, just fuck me! Please!\" Casey begged. I felt a little chill run down my spine. No one would have suspected that perfect President Casey could be such a harlot! But I couldn't bear to tease her any longer. I lifted my hips up, my cock slipping out from between Casey's soft breasts. I put my hands under her armpits and sort of rocked my self back. Casey spread her legs as I moved back, and before I knew it, I was on my knees between her legs.\n\nThe scent of Casey's pussy was overpowering. So sweet and musky. Just breathing it in made my nipples hard and my head swim. I couldn't even remember the last time I had smelled pussy. Years. Before I got married. I had forgotten how exciting it could be. It made me feel naughty. I moved one hand to Casey's hip, to balance myself, but my other hand, the one that had been teasing her pussy, quickly moved to her face, \"clean this!\" I said. Casey lunged her neck forward, wrapping her lips around my damp fingers and swirling her tongue around them, tasting them. She moaned and shivered as she tasted herself. Eventually, I slipped my finger from her mouth, finding my own cock.\n\n\"You tell me if this hurts or anything, sweetie,\" I said, looking at Casey as I pushed my cock down, positioning the hard tip against her slick opening. Casey didn't speak, just nodded. I pushed until the bulbous tip of my cock split Casey's tight pussy. \n\n\"Oh God!\" Casey moaned. I felt her legs rise up, squeezing me a little, \"Don't stop!\" she begged, as she felt me hesitate. I moved my hand from my cock. I sort of sank into Casey. She was tight, but so unbelievably wet and willing. I felt my cock press deeper and deeper inside of her, felt her tight body squeeze, wetly, around me. Until, I felt my balls press against her ass. And I realized I was entirely inside of her. Totally enveloped in her warmth.\n\n\"You feel incredible,\" I moaned, and Casey smiled. In fact, the sensation was so overwhelming that I didn't feel the strength to hold myself up. My hand slipped from Casey's hip and I dropped down so that I was laying against Casey's body. I felt her my face settle into her soft breasts. Her hands rose up, wrapping around me and playing with my hair. Casey's breasts were slick with spit and precum. I started to kiss them, sucking on her flesh, eventually finding her nipples, licking those as well. Her hard little nipples pressed between my teeth and I sucked on them deeply. Casey cooed and let her fingers sink into my hair. ",
        "Even while I sucked and played on Casey's breasts, my cock remained inside of her. For a moment, I felt that just her squeezing me was going to feel so incredible that I was going to cum. I was embarrassed just by the thought, but it quickly passed. \n\nBut I decided I needed to do more for Casey. I put my hands on either side of her body, lifted myself up, arching my back. My hips thrust forward, driving my cock more deeply inside of her. Casey moaned and bit her lip. I pulled my hips back, letting my cock slip a couple of delicious inches out of Casey's hot pussy. The cool air felt alien, and I thrust my hips forward again, sinking deeply inside her warmth again.\n\n\"Yes...Ana, oh! Fuck my wet cunt!\" she moaned, as I slowly began to pick up the pace, thrusting my cock in and out of her. I giggled.\n\n\"Language, young lady!\" I teased.\n\n\"Fuck me, fuck me, fuck me!\" Casey moaned, impervious to my scolding. I heard a soft giggle. While I continued to thrust, I looked up. I had almost forgotten that Chloe and Natalie were there. I continued to thrust into Casey's beautiful body as I looked up at the other girls. \n\nChloe was still sitting on the cot, her legs spread. But Natalie wasn't kneeling in front of her anymore. Instead, she had turned around, her lithe, beautiful body clear to me now. Her perky, pierced breasts sitting high on her chest, her legs looking impossibly long. Her hands were on Chloe's thighs. And as I watched, she lower and raised herself gently, slowly. I looked between her legs, which were spread slightly, and I could see Chloe's hard cock slipping in and out of her pussy. \n\nChloe's hands were on Natalie's hip, helping the girl to rise and fall on the hard cock. But as I watched, Natalie began to move herself up and down much faster. It was clear that Natalie didn't need Chloe's assistance. Chloe sensed it too. Her hands rose from Natalie's hips, finding Natalie's narrow hips, and then her ribs. Finally, Chloe's hands moved across Natalie's breasts, eventually slipping her palms over them. I watched as Chloe gently squeezed her friend's breasts, and Natalie moaned appreciatively in response. \n\nNatalie thrust her hips down once, gasping as Chloe's cock pushed deeper inside of her. Natalie paused turned her head over her shoulder, looking at Chloe saw her, and their lips met. I saw their tongues licking one another's lips, tasting each other giggling. Natalie broke the kiss and began to rise and fall on Chloe's cock again. Chloe kept kissing Natalie, on her back now while still massaging Natalie's breasts.\n\nWatching the two girls make love have been so beautiful, I hadn't even been thinking about what I was doing. I was still thrusting my cock in Casey's warm pussy. In fact, while I wasn't paying attention, I had been thrusting harder and faster inside of her, reacting to the excitement of watching Chloe and Natalie. Casey reacted out that new intensity, drew my attention back to her as she moaned loudly.\n\n\"Oh my god, oh my god!\" Casey panted. I looked down at her, saw that her eyes were slammed shut, her face beautifully contorted with pleasure, \"Oh Ana, don't stop, I am going to cum!\" Casey begged. I kept thrusting, but instinctively, my head dropped, my mouth finding Casey. She had just opened her mouth to moan and my tongue plunged inside of her. And I kept thrusting my cock inside of her, if anything getting faster.\n\nNatalie and Chloe heard Casey moaning. They slowly stopped moving. Chloe looked around from behind Natalie's back so that they could both watch Casey cum. I leaned back slightly, and my hand found its way between Casey's legs. While my cock thrust in and out of Casey's body, I felt my thumb land on Casey's clitoris. She felt it as well, as her eyes shot open and her body began to tremble.\n\n\"Don't stop! Don't stop!\" Casey begged. I kept thrusting my cock into her and, at the same circling my wet thumb around Casey's clit. \n\n\"Cum for teacher, you little slut,\" Chloe said, giggling a little. Natalie whistled. Casey's head rolled back and she saw her friends watching her. She smiled at them, and it was like knowing they were watching pushed her over the edge. I heard a loud croaking noise in the back of Casey's throat. And then I felt her thighs close around me, her legs wrapping me. She pulled me in, hard, so that my cock pushed deeper than ever. Casey's entire body was shaking wildly, and her croak had turned into a loud moan. Her eyes were slammed shut and her mouth was frozen open. I felt all of her muscles tighten. And then, slowly, loosen.\n\nI had made a student cum. I'd fucked her with my cock. But I didn't have time to think about it. Even as I was slowly pulling my cock out of Casey's dripping pussy, the other girls were ready for me.\n\n\"You know,\" Chloe said, her hands moving up and down Natalie's body, \"I have always sort of wondered what it would feel like to be with another transwoman,\" she raised her eyebrows. Any nerves were now gone for Chloe, she was back to her commanding self. And suddenly, I found that alluring rather than annoying. Natalie slipped off of Chloe's cock, stood in the room.\n\n\"She is so tight, Ana. And I got her asshole very wet,\" Natalie said, lifting herself up off Chloe's hard cock. I felt my own penis twitch at the idea. \n\n\"I've never fucked anyone in the ass before,\" I said, honestly, \"My husband wouldn't let me.\"\n\n\"We are both virgins then, no one has every put anything...\" and Chloe looked at Natalie, \"Anything bigger than a finger into my ass. We can have some firsts together.\" As she suggested it, Chloe started to rise up off of the cot, until she was standing.\n\n\"God, this is going to be so hot,\" a voice below me said. I looked down at Casey. She had twisted her body around to look at Chloe, even though she was still panting. I returned my gaze to Chloe. She hadn't been waiting for me in the meantime. She had laid down on her back on the floor. She had immediately spread her legs and pulled them up, so that her knees were almost in her armpits. Her asshole was glistening with Natalie's spit, facing towards me, her small balls just above it. Her hard cock was pressed into her stomach, still wet from Natalie's pussy. She reached over on the floor and grabbed a bag, her back. She dug through it quickly and pulled out a large bottle of lube.\n\n\"I thought this was only going to be for masturbating,\" she said, laughing. She squeezed some of the lube into her hand and quickly moved it down, massaging it against her asshole. It was sexy just watching her massage the gentle folds of her anus. Natalie picked up the bottle of lube and squeezed it into her hand. \n\n\"Stand up, Ana,\" Natalie said, and I did as I was told. I walked around Casey's body (and she sat up, her breathing now under control). Natalie walked over towards me. I kept watching Chloe, spread-eagle, spreading lube on and in her cute little ass, her small, perky breasts spread out on her chest. I wasn't even looking at Natalie as she wrapped her hand around my cock. I just a little, the lube had made her hand cold. \n\n\"Sorry,\" Natalie said, and giggled. But she gently began to spread the lube on my cock. Her hands were soft, gentle. But they moved quickly. Somehow, I managed to turn my eyes away from Chloe, turning to look at Natalie. We didn't speak, just looked in one another's eyes. And then my eyes closed and I leaned into her. I felt her lips against mine, her tongue licking my lips, as she continued to stroke my cock and coating it in lube. I felt her pull away and groaned a little, I could feel her lips smiling. She moved her head, so that those delicious lips were against my ear.\n\n\"Fuck her little ass until she cums,\" she whispered, and I felt a nasty warmth flow through me. I turned again and looked at Chloe. She had moved her fingers away from her ass, and she was now just staring at me. At my cock. She saw me looking, and hooked her finger at me. \n\nAlmost in a trance, I moved towards Chloe and dropped down onto my knees in front of her. My cock was dripping wet with lube and harder than it had been in...a decade. As I got closer to Chloe's body, I could see her smooth, beautiful skin, feminine curves, and cute, hard cock. Her body smelled sweet, inviting. \n\n\"Don't worry about hurting me,\" Chloe said, almost reading my thoughts, \"I will take it. I need it,\" she said. I nodded, and reached down, grasping my cock. Natalie dropped down next to me, leaning over Chloe's leg, biting her lip, watching.\n\nI positioned the tip of my cock against Chloe's crinkled anus. I looked up at Chloe, her eyes sparkling She was smiling. She thrust her hips down, bouncing her asshole off of my cock. Chloe wanted it bad. I pushed my hips forward. I felt the tip of my cock press into the Chloe's anus. I felt pressure and a small amount of friction, her virgin body resisting me. Chloe whimpered a little.\n\n\"Shh..its okay,\" Natalie said, soothingly. She reached her hand down over Chloe's thigh, her fingers finding their way to the tip of my penis and Chloe's anus. She gently massaged Chloe's asshole with the tips of her fingers, and I could actually feel Chloe's whole body relax. I felt Natalie's fingers find the tip of my penis. I released my cock, letting Natalie gently guide me. \n\nThere was still some slight pressure, but not nearly as much. Natalie's delicate fingers felt wonderful on my cock, and I felt Chloe's body open for me. Felt her asshole open to me and the tip of my hard cock slipped inside of my student.\n\n\"Oh God!\" Chloe moaned, her body writhing. I could see Natalie smiling. She leaned down and placed a gentle kiss, right where my cock was entering Chloe's body, touching us both. Then she leaned back, just watching. I kept steady, even pressure with my hips. I looked down, watching as Chloe's asshole stretched further and further, and my cock slipping deeper and deeper inside of her. She was unbelievably tight, tighter than Casey's sweet pussy. The insides of her body pillowy and constricting, but well-lubed and friction-free. \n\nAnd then, like magic, I felt Chloe's soft balls pressing against my belly. And my cock was completely inside of her. Chloe's asshole clenched, and I groaned, I had never felt tightness like that before. I looked up now, now longer watching my cock slip in. I saw Chloe's penis, and hard and laying against her smooth belly. I my eyes moved up, over her perky breasts, to her pretty face. She was looking down at me, her eyes wide in amazement. I had never seen her look more beautiful.\n\nChloe's lips were just slightly open. I couldn't resist. I leaned forward, driving my cock deeply into Chloe. She groaned, her mouth opening wider. But I caught her moan in my mouth as my lips came down on hers. I felt her tongue press into my mouth, fervently. Our breasts pressed together, there was no daylight between our bodies, I could feel her cock hard against me. My own penis, buried deeper than ever inside of me. \n\nChloe broke the kiss, and I moved my mouth down to her neck, sucking and licking on her skin. I could feel Chloe's breath against the side of my face, and then to my ear. At first she just panted and moaned into it, but eventually, I could her speaking. Just barely a whisper, so that the other girls could not hear.\n\n\"I am so glad you are who you are, I can't believe it,\" she said and I thrust my cock harder into her, making her shiver. \"Now I know that everything is going to work out. That I can be me,\" she said. I laughed a little, moving my lips away from her neck. I moved my lips to her ear.\n\n\"I am a middle aged, divorced woman currently putting my career in jeopardy in the...most pleasurable possible way. How do you get that?\" I asked. Chloe giggled and wrapped her arms around me. I felt her cock sort of seize against my stomach.\n\n\"You're alive, you're healthy, and you're beautiful. Thank you,\" Chloe whispered back, kissing my lips again. I looked into her eyes as she spoke, I could see them sparkling even more than before. Almost tears. And I felt a flood of affection for her. And relief as well. Remembering how I had hung back in fear earlier, when her peril was at its greatest, I found that I had been given a second chance. I was, just by living, the person that I had needed as a kid. Chloe felt that. I kissed her again, trying not to cry myself.\n\n\"Come on, we want to see more, enough of this lovey-dovey stuff,\" Casey said from behind us. Chloe and I froze for a moment, and then started giggling. It was like, for a moment, Natalie and Casey hadn't existed. \n\n\"Let's show them what girls like us can do,\" I whispered.\n\n\"I am all warmed up, don't hold back,\" Chloe responded. I pushed back, coming back onto my knees between Chloe's body. I felt her soft breasts, and then cock, fall from my body and felt cool, missed their sensation. But now I was perpendicular to Chloe's body and I could look at her. I started to pull my hips back, my cock slipping a few inches out of her. Then I thrust back in, hard, burying it home. I heard the smack of my balls against Chloe's body, saw her cock jiggle with the impact.\n\n\"Fuck, like that!\" Chloe moaned, her hands rising up to squeeze her own breasts.\n\n\"Yeah, like that!\" Natalie said, still sitting beside Chloe. Natalie sort of moved, so that she was kneeling next to me, on the other side of Chloe's leg, watching from roughly the same angle I was. I kept thrusting my cock into Chloe's tight asshole, feeling her squeeze around me. I watched her breasts and her cock bounce with each thrust. \n\nI reached down, wrapping my hand around Chloe's hard cock. Her skin was incredibly soft, but her cock was like warm steel beneath it. I stroked my hand up and down on her, letting my palm circle around the tip, coating it with pre-cum. Chloe moaned and shoved her hips down, driving my cock in deeper as I stroked her.\n\n\"You don't get to have all of her!\" A voice to my side said. Casey had crawled up next to Chloe on her knees. She reached forward and gently took Chloe's hard cock from my hand. She stroked it a few times, looking up towards Chloe's face. \"She looks so cute when she is getting fucked!\" Casey added.\n\n\"Stop talking! Put that dick in your mouth!\" Chloe begged. Casey laughed a little, turned her hand and slipped Chloe's cock effortlessly into her throat. I had never seen anything like it. The cock just disappeared inside of her. Once second, Casey's lips were around the tip of Chloe's penis, and the next her nose was against Chloe's hip. She choked a little, pulled the cock out, and then went back down.\n\n\"Damn, she is good at that!\" Natalie said, and I turned and looked at her. At the same moment, I felt Natalie's hand press against my spine. Then, as I was still thrusting into Chloe, Natalie's hand snaked down, between my ass cheeks. After a moment, the damn, warm pads of her finger found their way to my asshole. She starting to circle her fingers around me. The very tip pop gently inside of me, I jumped a little. Natalie giggled and pulled her hand back. A moment later it, was back. I realized that she wasn't just gently massaging my asshole (though that felt nice), but lubing me up. I turned towards her and kissed her, even as I continued to thrust.\n\nThe four of us continued for a few minutes. Chloe lay on her back, her body tense as she squeezed her breasts and moaned uncontrollably. Casey knelt in front of her, moving her head up and down in rapid, fluid motions. Chloe's cock disappeared into Casey's throat, pulled almost all the way out, then disappeared again. I thrust my cock into Chloe's ass as I watched, moving faster as I felt her asshole relax for me. Her insides squeezed me, pulled me in deeper and deeper. And the whole time, Natalie watched her finger circling gently on my asshole.\n\nIn the end, it was just too much excitement and attention for Chloe. She held on for as long as she could, but I don't think it was that long. I heard her cumming, knew it was happening. Her eyes slammed shut and she moaned so loudly I thought that the old lady at the front desk would hear it. I saw all her muscles seize, saw her hips thrust up hard into Casey's face. And then, I felt her anus clench on me so tightly I thought for a moment that I was going to cum too. I saw Casey sort of pull back slightly, like she was surprised.\n\n\"Oh god!\" Chloe moaned as her body trembled for a long moment. Then she let out a low sigh and collapsed, panting. Chloe's asshole relaxed around my cock. I stopped thrusting, to give her a moment to enjoy savor her orgasm. At that same moment, Casey pulled back entirely, letting Chloe's still-hard cock slip from her mouth. There was cum dripping from Casey's chin. Casey rose quickly, put her hands on my cheeks, and pulled me towards her. In a moment, our lips were pressed together. Our mouths open and a large blob of Chloe's hot, salty sperm poured into my mouth. I shivered at the flavor. She tasted so savory, so lovely. I knew I should share with Casey, but I quickly swallowed all of it down, feeling Chloe's warm cum land heavily in my stomach.\n\nI sighed and rocked back on my hips slightly. I don't know what I was intending, but I felt my hard cock slip out of Chloe's asshole heard her sigh as it moved out of her. I turned to look, watching her cute little asshole gape for a moment, before closing back up, looking as pink and perfect as ever. \n\nBut after a moment, my view was obscured. I saw Natalie's head drop down between my cock and Chloe's ass. It took me a second to realize what she was doing. In fact, I felt it first. Natalie's lips had wrapped around the tip of my cock! Still hot from the inside of Chloe's asshole, Natalie's tongue was licking and sucking my penis! Her head dropped lower and lower, until my entire cock, tasting of Chloe, was inside of Natalie's mouth. \n\n\"Oh my god, that is so nasty!\" Casey said from next to me, wiping her chin with the back of her hand and then licking the cum off it. Her eyes were on Natalie the whole time. Eventually, Natalie pulled back, letting my cock drop from her mouth.\n\n\"See, you all know nothing about being a pervert,\" She said, and then turned and kissed Chloe's cock sweetly.\n\n\"Don't stop sucking!\" I begged. Natalie smiled, turned back to me and kissed my cock again.\n\n\" Get on your hands and knees,\" Natalie ordered. I was unbearably aroused, and not in any position to deny Natalie anything. Without another word, I moved slightly the the side and dropped down to my hands and knees. Natalie followed me over. As soon as I was in position, she dropped down onto her back. She was perpendicular to my body and she sort of slid herself underneath of me. I felt her hand on my cock, and I arched my back down, thrusting my cock towards her face. Natalie deftly guided it down, towards her mouth.\n\nCasey moved quickly as well. She waited for Natalie to get in place, and she knelt down between Natalie's legs. Casey spread them gently, and then dropped her head down between them. I felt Natalie's body tense for a moment, as Casey's tongue began to lap at her wet pussy. Natalie was so aroused that I could actually smell her sweet juices as Casey began to lap at them.\n\nSoon, the only person not involved was Chloe. She was sitting on the floor now, panting a little and propping herself up on her elbows. She was looking at me, as my eyes rolled back in my head. Natalie's mouth felt incredible. Her tongue moved up and down my shaft. And any time I felt like she was getting close to pushing me over the edge, she dropped down and licked my balls. Chloe could barely see that from where she was sitting. She leaned forward, and looked beautiful.\n\n\"I am all lubed up,\" I heard in my voice, and hadn't even realized I had said anything. But I didn't regret it. Chloe smiled and quickly got up off the floor. Her cock bounced lewdly as she rose to her feet. It was still hard glistening with Casey's saliva. She walked up towards me. She bent over at the waist, grabbing my chin in her palm. She pulled my head up.",
        "\"Say what you want,\" Chloe said, leaning down, and kissing me gently on the lips.\n\n\"Fuck me!\" I begged, \"Put that sweet cock in my ass! Fill me with your cum!\" I felt Natalie pick up her speed as she heard me. Chloe smiled, kissed me again. She started to walk around my body, on the opposite side as the other girls. As she walked, she trailed her fingers down my neck, over my shoulder, tickling across my ribs. They moved across my thin waist, grasped at my hip. Chloe stepped over my leg, and then stood behind my ass. One hand remained on my hip, but the other reached down and split my ass cheeks apart. My asshole, covered in the lube Natalie had liberally applied, felt cold. \n\n\"So sexy, Ana,\" Chloe said, and then I felt the hard tip of her penis press against my anus. I gasped, just feeling it against me.\n\n\"I am not a virgin down there, go fast!\" I begged. I arched my back further, rocked back my hips (making Natalie's mouth chase my cock). Chloe rubbed her cock between my ass cheeks, I felt her hard shaft rub against my anus, felt the nerves tingling, \"Put it in!\" I begged.\n\n\"No more teasing, I promise,\" Chloe said, and then rubbed my asshole one last time. And then the tip as pressing into me. I pushed out slightly, knowing what I was doing. Chloe's cock placed just enough pressure, my body opened for her,sucking the tip of her cock inside of me.\n\n\"Oh wow!\" Chloe groaned, and her cock began to sink inside of me. I felt the familiar, but somehow unique, feeling of a perfect cock filling my tight asshole. I squeezed her tightly. Chloe's hand came off of my ass cheeks, grabbing my other hip. She sank deeper into me, until I felt her warm balls settle against mine.\n\n\"Oh so good, Chloe!\" I groaned. Chloe's fingers squeezed into my hips, as she pulled back, her cock sliding out of me. I clenched slightly, holding her tight, but letting her go. The sensation of pulling out was almost as good as going in. And then Chloe was thrusting in again. She moved fast, just like I had begged her too. She thrust in hard, pushing so deep inside of me I felt like the tip of her cock would shoot out of my mouth. I pushed back, willing her deeper.\n\nNatalie came first. I could hear a strange, muffled noise, even as Chloe began to thrust faster. I could feel her tongue going wild on my penis. I turned to look, I could see her body shaking. Her legs were locked around Casey's head, her hips bucking. After a few moments, I saw her muscles go slack, and her chest rose and fell rapidly. \n\nI realized in that moment, that I was barely holding on as well. I had been almost cumming the entire time. And watching Natalie, feeling her body react against me...it was overwhelming. The sounds and smells and sensations in the room were just too much.\n\n\"Fuck!\" I moaned, and shoved my cock down into Natalie's throat. The orgasm was unlike any I'd ever felt before. I had never realized it before, but I think that, for my entire life, I had always held a little back. I had always wondered what I looked like, what I sounded like when I came. Was it as feminine as I knew it should be? I don't know, other dumb thoughts like that. This time, there was none of that. A sensation of pure pleasure rippled out from the tip of my cock, spreading over my entire body like a soothing, electrical balm. I knew I was trembling, I knew I was moaning. I didn't care. I just let the sensation carry me. \n\nThe only thing that I was certain of, as the orgasm tore through my body, was that my asshole had clenched hard around Chloe's cock. I felt her hardness inside of me. I heard her groan. And, after a moment, I felt her cock expanding inside of me, as she came again, quickly. I could feel her cum, less than last time but still a lot, pour into my warm, willing bowels. My asshole relaxed, and I sighed as Chloe's cock pulled out of me.\n\nI didn't know when, but at some point, Natalie had slipped out from underneath of me. I didn't feel her absence (my cock was beautifully numb). Instead, I opened my eyes and she was sitting in front of me. I jumped a little, but Natalie slipped her hands through my hair, pulled me in and kissed me. Our mouths opened, and I was surprised to feel my mouth filling with hot, salty liquid. My own cum! She shoveled it into my mouth, pushing it with her tongue.\n\nAt the same time, I felt another strange sensation. A warm, tickling, massaging feeling on my asshole. I couldn't turn and look, but I could feel Chloe's hair draping over my ass. I knew what she was doing. Her beautiful lips were pressed to my ass. She was sucking her own cum out of me. I moaned, pushing some of my own cum back into Natalie's mouth. We kissed deeply, sharing it back and forth, adding our saliva. Eventually, Natalie let all of the cum with me, breaking our kiss. \n\n\"Chloe is finally a pervert,\" Natalie said, sounding like she was proud of it. I realized as Natalie moved away, that Chloe's lips were no longer on my ass. I slowly sat up, resting on my legs. I spun around awkwardly. Before I could even get my bearings, I felt Chloe's hands on my body, felt her lips pressing against mine. And then we were kissing, mouths open, messy. I pushed my cum into her mouth, she pushed hers into mine. Our tongues swirled in the combine sperm, our flavors, distinct at first, merging into something new and wonderful. \n\nCum and spit dribbled from our mouths, down onto our breasts and legs. I felt tongues on me, and realized that Natalie and Casey were licking up the mess, swallowing it down. I looked down as best I could saw them kissing as well. Some sperm dribbling down onto my cock, and I felt both of them, licking the now-soft shaft clean.\n\nI don't know how long we kissed, but at some point, we had swallowed it all down. My belly felt full, but I knew that each of the other girls had her share as well. As we were clean, we all kissed again, but we pulled apart, panting. The whole experience had been overwhelming. I knew there were things that I should have been thinking, problems I should consider. I should have probably said something to the girls, but I had no idea what it was. Instead, we made ourselves as comfortable as we could, holding one another, and then collapsed down onto the floor together in a sticky, wonderful mess.\n\n* * * * *\n\n\"If you plug it in to charge, it messes with the Bluetooth, Mrs. S. Just...yeah, change the input,\" Casey said from the back seat and soon her music (her terrible, terrible music) was playing again, and she leaned back in her set, turned to Natalie and began chatting again. The air conditioning was blasting (as was the music) and I couldn't hear what they were saying. Chloe, sitting next to me in the front seat reached forward and turned the volume down a couple of notches.\n\n\"Thank you!\" I said with exaggerated gratitude and Chloe smiled. We were sitting in traffic outside of D.C. The big charter bus carrying the rest of Franklin County High School's seniors was pumping big clouds of black smoke at my little car, but I didn't mind. Didn't even mind being stuck in traffic with my phone telling me we were 15 miles and an hour and forty-five minutes from our location. \n\nTo my surprise, I wasn't really looking forward to having the girls, my girls as I thought of them suddenly, melting back into the mass of students. I had spent the morning, and the whole drive that day, dropping my guard in front of them. Getting to know who Natalie really was, who Casey really was, who Chloe really was. And I found that I liked them. I mean...they were still high school seniors with all that that entailed. But they were sweet and funny and loving. They were not the characters I had made them out to be.\n\n\"You are in a good mood,\" Chloe said, now that I could hear her, \"I've never seen someone smile and whistle through a traffic jam before.\" I laughed and reached over and touched Chloe's thigh. She didn't seem to mind.\n\n\"I had fun last night,\" I said, honestly. Chloe blushed.\n\n\"I still can't believe...any of this,\" she said, \"But I had fun too,\" she added, turning and looking at her friends in the back seat.\n\n\"You and me both,\" I said, squeezing her leg and then letting it go. But then, I thought of something and I smiled more broadly, \"But that really isn't the main reason I am happy today,\" I said. Chloe's brow furrowed.\n\n\"Oh yeah?\" she asked and I shrugged a little.\n\n\"Its hard to explain, but last night it was like...it was like a surgeon cut me open. And she cut through the scar tissue, cut out all the the rotten flesh, squeezed out all the pus, then sewed me up and set my bones. And it was like...I had been walking around with all these things just sort of...bad, but had just dealt with it being like that, because I didn't think I could get any better. I thought all those broken parts WERE me. That feeling that way was the price I had to pay to be me. And so they couldn't be fixed. But now I know, all of that pain and rot...it wasn't me. It was because of the world's reaction to me, tearing me up. And that reaction can change. Maybe it has changed. But whatever, I know that I can just be me,\" I said. The words made sense in my brain, and I knew what I meant. But I saw the confusion remain on Chloe's pretty face. I wasn't sure I'd said anything that anyone could get, besides me.\n\n\"Oh...yeah,\" she said and smiled at me. \n\n\"It's okay that you don't understand. You don't have to,\" I said, \"And that's a good thing.\"\n\nThe End\n\nNote: I honestly write so that I can hear the comments you all give. So please just tell me what you think. Even if it is just a sentence or two (though I always prefer more). Consider that your payment for a free story. And if you like this, I beg you to read my other stories and comment on them too. I know who my loyal readers are and I really appreciate you. Thanks!\n\nYKN\n\nP.S. I do one edit of my work and I try to be thorough. But I figure when it comes to handing out free erotica, you all would be better served getting it fast (if a little rough), than waiting for me to polish it like I was getting paid for my work. Seriously, don't complain to me about it. The only way you can change my mind about this is if you say, \"I will pay you to proofread.\" So, in short, I know there are some errors and I don't really care that much. Don't complain about the soundtrack in your porno, don't sweat the typos in your erotica. Thanks."
    ],
    "authorname": "YKN4949",
    "tags": [
        "trans on trans",
        "lesbian",
        "translesbian",
        "anal sex",
        "oral sex",
        "atm",
        "ass to mouth",
        "teacher",
        "group sex",
        "foursome"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/maybe-it-gets-better"
}