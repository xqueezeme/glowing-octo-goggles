{
    "title": "Crash Into Me",
    "pages": [
        "This story is fictional. All persons depicted in sexual situations are over eighteen years of age. It features a character with a physical disability, but this is not a fetish piece. It's also a slow burner, but if you invest the time, I believe the outcome is worth the wait.\n\n* * * * *\n\nAnd when we talked of growing up<br>Knew that we'd halved a soul<br>And fell the one in t'other's arms<br>That we might make it whole;\n\n-- W. B. Yeats, \"Summer and Spring\"\n\n* * * * *\n\nIn my dreams, I do the right thing. The reptilian part of my brain reacts without thinking, and because it does, I'm spared the cacophony accompanying the wrong choice. Time jolts as we come within a hair's breadth of calamity, then share a laugh in the aftermath of the adrenaline rush. Just a couple of girls on a trip down the street to pick up snacks for a movie, my sister and I. Gas station's two minutes away. It's 10:49pm. We'll be back before eleven, stay up until two or three o'clock discussing whatever film we picked out, go to bed, and wake up whenever we want because it's a summer Saturday.\n\nOnly in my dreams.\n\n* * * * *\n\nEveryone said life would change when I got my driver's license, but no one, not even my uncle Jim who fixes cars for a living at his auto-body shop, could have known how much truth those words carried. Like every teenager in the world, I couldn't wait to get behind the wheel. I craved that sweet breath of freedom even if, unlike most of my classmates, I wouldn't get a brand new car for my birthday.\n\nLike that mattered! Borrowing the family wheels for a few hours on the weekend was reward enough. Mom and Dad's rule was good grades translated to car keys, so I brought Chemistry from a 'C+' to a 'B-', maintained Geometry at a steady 'B', and blasted through the rest of my classes with those coveted red 'A's marked across the top of every homework assignment and test. Honor roll was all but assured. Sure enough, my name appeared on the list, with the obligatory form letter of congratulations arriving in the mailbox a day or so later. A few weeks of driver's education taught by the same guy Dad swore taught him, two quick tests, the flash of a camera, and who, aged sixteen-and-six-months, walked into her local branch of the Bureau of Motor Vehicles a passenger and walked out a driver? This girl, Colleen Alexis Singleton. Cue the orchestral swell. I had made it, and I had it made.\n\nMom and Dad didn't hesitate to put my love of the road to work. Whether it was trips to the grocery store or a drive across town to grandma's house to pick up a tin of freshly-baked cookies, I was your girl. The first few months they insisted I be accompanied by an adult, but after proving myself to their satisfaction this restriction was dropped. Most important to me, I could drive myself to school. Most important to my parents, I could drive Lynn.\n\nWhat the fuck were they thinking?\n\n* * * * *\n\nThat incessant buzzing is my alarm, telling me it's time to face another day. Which means it's time for her to face one too.\n\nFlicking the switch on my clock radio, I rise but do not shine. I shove the covers off me in a haze, sit up, run a hand through my hair (a habit I picked up at age eight and have maintained ever since for reasons still unclear), slide my legs off the bed, pad across the floor in my bare feet to the dresser, and grimace at my reflection. Boring as hell shoulder-length, cinnamon-ginger hair, soon to be pulled back in a pony tail? Check. Boring as hell chestnut eyes fitted with leave-in contacts so as to avoid the stigma of wearing glasses at all costs? Check. Average build ensuring I get lost in a crowd of one whether I want to or not? Check and mate. I stick my tongue out at her, and the bitch returns the favor.\n\nBetter make myself presentable. Starting at the top drawer and working my way down, I withdraw:\n\nPanties - white, cotton, store-brand, purchased in a pack of five, all identical.\n\nBra - black, soft cup, 40% off from Victoria's Secret, last one in my size on the rack.\n\nSocks - white, ankle-length, cotton, pink-hued toes and heels, present from the parents last Christmas.\n\nT-shirt - lizard green, collar slightly stretched, loose enough to let air flow, featuring a band I have been told is popular but to whom I've never listened. Present from Lynn, their biggest fan, who won it in a contest only to find it was too large to fit her.\n\nJeans - shit, where are my jeans? I look around the room, but they aren't on the floor or the foot of my bed. Whatever, I'll find them later.\n\nOpening the door to my room and walking out into the hallway I nearly collide with Lynn, who looks up at me with sleep-drooped, gold-flecked cafe-au-lait eyes barely visible through errant strands of her dirty-blonde hair and murmurs, \"G'mornin', Collie.\"\n\nWhen Lynn started talking, she had trouble working out my name; 'Collie' was as close as she could get. Now nineteen, she's fully capable of pronouncing my name correctly in mixed company. When it's just the two of us though, I'm still 'Collie'. She doesn't say it out of spite or to imply I'm a dog, it's just one of those things little sisters do. Honestly I think it's cute, but I'll never tell her that.\n\nI nod and wait as she slowly makes her way down the hall and into the bathroom. After a couple minutes, I hear the shower start up. Most older sisters would push past their younger siblings to engage in a power struggle for the bathroom, but I'm not most older sisters. Lynn means the world to me. I owe her everything, because there's no way I can make up for what she lost six years ago. No matter what I do, it can't change the fact it was all my fault.\n\n\"Collie?\"\n\nHer voice, feminine and still dusky from sleep, pries me out of my thoughts. As usual the rest of the house is quiet. Dad's been at work for an hour already, and Mom's over at grandma's, helping out with the stuff she can't easily do by herself. For reasons I cannot fathom, neither has a problem entrusting me with my sister's care.\n\n\"Collie, you out there?\"\n\nI walk toward the bathroom and pause outside the open door. \"Yeah. Need something?\"\n\n\"Mom forgot to put up new towels. Could you grab me one? I'm already in the shower.\"\n\n\"No prob.\" The linen closet is right inside the bathroom behind a single folding aluminum door, so I step into the steamy room, set my pile of clothes down on the sink, glide the closet door open, pull out four fluffy towels (lemon chiffon yellow for me, sea green for her, and a matching white and black set for our parents ) and hang them on the empty bars. My gaze falls on the tub.\n\nIt still looks as weird to me as the day it was installed. It's the length and width of a normal bathtub, built into a recessed area and surrounded by a shower curtain like a normal bathtub, but it's not normal. This one has a door. It starts on the left-hand side, about four inches away from the wall, and it takes up a good half of the front. It opens like a car door, and if you swing it out, it makes for a very small step up into the bath instead of having to lift your legs over the side. Inside the tub is an elevated area to sit, a seal to prevent leaking, and the taps for the hot and cold water. This one is a bath/shower combination with a waterfall-style shower head which hangs down from the ceiling, and a detachable spray nozzle hooked to a flexible hose so you can target-wash anywhere. You've probably seen them on TV, advertised as ideal for the elderly and those who want the comfort of a Jacuzzi without the added space requirements. Lynn needs it for a different reason, and though she tells me the water jets are relaxing after a long day, I've never used them myself. I'm not afraid of them or anything, I just know I don't deserve them.\n\n* * * * *\n\nWhile I got everything right in my dream, I got everything wrong that night which still feels like yesterday, even though thousands of 'yesterdays' have passed. It was supposed to be a quick trip to the gas station on the corner. I grabbed a bag of hot cheese puffs for myself and a packet of chocolate cupcakes for Lynn while she handled the drinks, a task she relished with all the energy of a hyperactive thirteen year old: forty-four delicious ounces of Wild Cherry Pepsi for her and an equal amount of Mountain Dew for me ensured we'd be punching sleep in the face for hours. Five bucks later (toss the change in the donation bucket) and we were back on the road. It was a routine we'd perfected over the last few months, a dance we could perform in our sleep because traffic was always sparse this time of night.\n\nSo sparse, in fact, that when the signal turned green, I didn't bother to check both ways before entering the intersection, didn't bother to wait a couple seconds, just to be on the safe side. We started through and were t-boned by a guy in a pick-up who, in his booze-addled state, gambled he could beat the yellow. Like four out of every five scratch-off tickets, he lost. So did we.\n\nI don't remember much after the accident, to be honest. The doctor said I had a concussion, and memory problems were normal. When I think about it, all I get are intermittent flashes, like a PowerPoint presentation in fast-forward. I see bright lights. I hear an overwhelming explosion of noise, like someone setting off too many fireworks at once in a confined space. I feel glass raining across my bare arms and legs, and the soda, blasted all over the interior of the car like a Jackson Pollock painting, smeared into my hair, running down my face, staining my clothes and the floor mats Dad only bought a week ago, and all I can think is how upset he's going to be. The smell of all four airbags deploying, front and side, overpowers everything else with its grotesque odor: a toxic mixture of burnt rubber, skunk spray, and high school locker rooms. Moving my tongue across the inside of my mouth, I taste copper.\n\nI know we're facing the wrong way on the road, I know my seat belt is buckled, but my mirrors aren't adjusted properly, and I have to get them just right, because that's what you do before you go anywhere in a car: make sure your mirrors are adjusted. But everything's fuzzy, and the controls don't want to work, and it's all I can do not to start screaming as I turn and see my sister, slumped over in her seat against the belt. Mercifully everything fades into a haze of blue and red strobe lights before I can register what freaked me out in the first place.\n\nNo matter how hard I try, I can't make myself remember what I saw that night. My brain's smarter than I am, I guess. It knows I need to forget what I struggle to remember. The last thing to go through my mind is the realization that when I saw the truck coming, I tried to slam on the brake. In my panic, I pushed the accelerator. Had I done nothing at all, the truck would have hit our engine block. Instead the side where my sister sat holding our drinks (the center console was full of trash I was too lazy to pitch) took impact.\n\nIt was all my fault.\n\n* * * * *\n\nI woke up before my sister did. People were constantly telling me, my parents, and anyone else within earshot how lucky we were, how much worse things could have been, how fortunate the people in the car behind us called 911 and stayed as witnesses. For a while I believed them, at least until I saw Lynn for the first time.\n\nThey wheeled her in from ICU and I thought someone was playing a joke. The top of her head was wrapped in gauze. Her hair was gone, shaved to the scalp because the CAT scan revealed swelling and they'd operated at once to relieve the pressure. A nest of tubes and wires snaked from various parts of her body: IV into the top of her left hand; blood pressure monitor clipped to the tip of one finger; oxygen delivered through a tube in her nose; heart monitors pasted to her chest beneath the flimsy hospital gown; a catheter, the ultimate insult--she couldn't even get herself to the bathroom. Worst of all was the dressing around the calf, ankle and foot of her right leg. Despite the thickness of the wrap, these awful yellow-orange blotches seeped through from the wounds beneath. The doctors stabilized her, then induced a temporary coma to give her body time to recover. It also gave them time to talk to my parents about what they felt was the best course of action.\n\n* * * * *\n\n\"It's called a trans-tibial amputation.\" Dr. Natal was a lean, clean-shaven man whose tan skin and slight accent betrayed an Indian heritage and British education. Rather than standing over my parents and talking down to them like some of the other doctors, he pulled over a wheeled stool and sat right in front of us. \"It sounds complicated, but it simply means the cut is below, rather than above, the knee. It's actually one of the most common procedures performed when it comes to injuries like those sustained by your daughter.\"\n\n\"What, um...\" Dad swallowed. \"Exactly what does this trans-, uh, this, uh, surgery entail?\" He asked the question I didn't want answered. Dr. Natal took a breath, then looked at me briefly, eyebrows arched, giving me time to excuse myself if I didn't want to hear the details. I gritted my teeth and lowered my head. This was my fault\u2015the least I could do was find out how bad things were about to get.\n\nI watched, breath held, as he lifted his right leg up, balanced it across his left, and drew on it with his finger to illustrate. \"Basically, we start midway between the knee and the ankle. We'll do tests to determine the best point and preserve as much as we can. Generally the cut is made right around here.\" His finger traced a curve across the middle of his calf. \"The tissue and bone below this point is excised.\" He smoothed his hand down his leg until it met his ankle and the top of his black athletic shoe. \"We keep as much of the muscle as possible, which in Lynn's case I believe will be a greater-than-normal amount.\" Although the process he described sounded medieval, he was doing his best to accentuate the positives. I had to give him that much.\n\nMom clenched Dad's hand so tightly I thought he'd recoil to find blood, but if he felt anything he didn't show it. Just leaned in, hanging on Dr. Natal's every word, grasping for the good news among the sluice of horrors.\n\n\"In the end, we retain a longer flap of tissue which we sculpt around the excision area,\" Dr. Natal continued, holding up his left hand as a fist and then cupping his right hand gently over his knuckles. \"The tissue will be stapled into place initially to form the...\" He trailed off and looked to my parents again. \"I don't care for the word 'stump'. It's the most common, yet feels the most impersonal. Unfortunately there are no good synonyms except 'residual limb,' which sounds like medical jargon to most. Do you have a preference?\"\n\nMy parents both shook their heads. \"It's what most people will call it,\" Mom said, looking at Dad who nodded in agreement. \"We should get used to hearing it. I mean, that's what people will call it, right? A stump? 'Stump' is\u2015it's, um...\" She choked up, had to stop for a moment, then managed a hoarse whisper: \"Fine.\"\n\nDr. Natal wheeled the stool a few inches closer, took my hand, placed it upon my parents', then closed his hands around ours. \"It will never be 'fine',\" he said quietly. \"Nothing about a situation like this is ever 'fine'. I can tell you how lucky your daughter is to be alive, how she'll receive exceptional care, how this is far from my first time performing this operation, how my colleagues have cared for hundreds of like injuries, and it will not change the fact that in an ideal world, Lynn would not need this. Eventually she, and you, will adapt. Life will get closer to normal. Lynn will walk again. But don't make the mistake of minimizing.\n\n\"Even when you hear me or another medical professional say, 'She is doing fine', or 'Lynn looks well today,' we only mean her recovery is proceeding without complications. No one here,\" he squeezed our hands together tighter, \"believes the situation is 'fine' in any other sense of the word. And you don't have to use 'fine' either, for anything, until you really mean it.\"\n\nFinally, I thought as I gave myself permission to cry, someone understood. Then the horror caught up with me: images of people sawing through the bone and muscle of my sister's still-growing leg flooded my brain. I bent double and spewed my breakfast all over the tile laminate floor. To this day, I still can't eat biscuits and gravy.\n\n* * * * *\n\n\"Want me to leave it running for you?\" Lynn, back-lit by the window, pokes her head out from behind the shower curtain.\n\n\"Yes, please.\"\n\n\"Okalee-dokalee.\" She slides the curtain back then opens the door, which swings a couple inches above the floor so the water swirling around the bottom of the tub stays inside. \"Give me a hand?\"\n\nMy breath catches in my throat the way it does every morning for this routine. It's not right, the way I look at her, but I can't help it. I don't know if the accident broke something inside me, or if I was destined to be defective, but after the crash some switch in my brain flipped to a different setting. Most people love their siblings, but I...\n\nI wonder if she ever feels my heart banging and thumping like the guy in the Edgar Allan Poe story, giving away the truth while I try to play it cool. If she does she pays no attention, and unlike the poor narrator in Poe's tale, I'll never tear up the floorboards over my feelings.\n\nI hold out my hand and she grasps it for support, then pushes herself with her left leg until she's standing upright. The movements by now are natural, pure muscle memory: turning so she can get her arm over my shoulder, wrapping my arm around her hip. Water from her hair soaks into my shirt, and I wish I had already taken it off so I could feel her skin against mine.\n\nShe smells glorious, all berry tangerine body wash and 'Sunrise Breeze' shampoo. Rivulets run down her legs, her back, the curves of her hips, and through the cleft between her pert little breasts. A drop teeters back and forth, dangling from the light pink nipple closest to me until she shifts her weight and brushes her chest across mine. I feel my shirt dampen, and hold that sensation against my skin as she towels her upper torso off, then flips the towel around, sits on the side of the tub, and works it down over her left leg, her knee, her ankle, her foot, between each cute little toe.\n\nI undress, sneaking glances at her as she pays careful attention to her right leg, rubbing all the moisture from her stump. Failing to keep it dry is a recipe for irritated skin and an ill-fitting prosthetic, as she's learned on more than one occasion over the last few years.\n\nI try my best, damn it. I try so hard to be nonchalant as I push my panties off my hips and step out of them, one foot at a time, but she still notices. I know I shouldn't alter my routine, that I shouldn't act like it's a big deal, but I can't help it. The fact remains I have two intact legs, Lynn doesn't, and doing even the simplest things while she's watching always makes me feel awkward.\n\nShe maneuvers herself to the toilet, sits on the closed seat, and slides her left foot into a pair of lemon yellow boy shorts, pulling them up until she reaches the stump of her right leg, then angles it to fit through the hole. She pushes off the seat and tugs them up to her waist, hiding the triangle of neatly-trimmed hair the same dishwater-blonde shade as on her head, then pitches me her winning-est smile. \"Hard part's over with!\"\n\nI smile back, move past her, and step into the shower without using the door. Damn it, old habits are hard to break. Lynn thinks anything less than 'scalding' is too cold, so I dial it back, wait for the temperature to adjust, then move under the waterfall. Just another morning, I tell myself. We'll get through this one like we did the day before, do it all again tomorrow, and the rest of my life if I have to.",
        "\"Alright,\" she says from the other side of the curtain, \"ready for today's question?\"\n\n\"Fire away,\" I answer as enthusiastically as I can muster. Which is to say, not very. My sister thinks she's going to teach me to appreciate poetry, simply because she's acing her poetry appreciation class. She knows I took the same one, and like any younger sibling derives sadistic pleasure from getting better grades than I did. Ergo, the game. Every morning she quotes a verse at me, and I have to guess who wrote it. Apparently I'll get some sort of prize if I ever figure one out, but she won't tell me what, and since she selects everything from Bible verses and Shakespeare up through modern-day poets like Cummings and Thomas, and because I've never had much use for poetry, the reward remains elusive.\n\n\"To see a world in a grain of sand / And a heaven in a wild flower, / Hold infinity in the palm of your hand / And eternity in an hour.\"\n\nHell if I know. \"Tennyson?\" I venture.\n\n\"You asking me or telling me?\"\n\n\"Tennyson,\" I say, \"final answer.\"\n\n\"Ooooh, so sorry. The correct answer is 'William Blake'. C'mon, Collie, would it kill you to browse the poetry section or even flip through my textbook for a few minutes?\"\n\n\"Pretty sure I'd die of boredom. Besides, I don't even know what the prize is. What do I get if I win? Suppose I don't like it?\"\n\n\"Study harder and find out.\" In my mind's eye, I see the tip of her tongue poking out from between her lips, taunting me.\n\nAs I bathe, Lynn maintains a steady stream of chatter about the day-to-day particulars high school life. I squeeze some gel into the magenta bath poof, and Lynn talks about how much she dislikes her Physics teacher. I smooth the soft fabric down one leg, and Lynn informs me that Heather and Chris have gotten back together, again, and asks how many fights it takes before a break-up stays broken. I say it must depend on the couple, moving the loofah over my stomach, washing under my breasts, telling myself over and over that it's only a bath poof, not my sister's hands caressing my skin. My ears turn red and heat stirs between my legs anyway. My nipples stiffen into little rosebud points, and the feel of the loofah gliding over them is too exquisite to experience just once. I jab my teeth into my lower lip so the moan building in my throat doesn't escape.\n\nShe asks about breakfast, and I tell her I'll see if Mom's left anything as she sometimes does, then inquire if she has a preference if Mom didn't have left-overs. I cleanse my face as she asks if I'll make bacon, extra-crispy, and I smile because I knew it's what she'd want even before she opened her mouth. Lynn and Dad both like bacon as close to burnt as humanly possible, with a liberal dash of pepper for spice.\n\nWater runs into my ears as Lynn talks about grapefruit and how good it's supposed to be for you. I hear the metallic snaps as the pins in her prosthetic pop into place when she stands and applies her weight, and as I rinse the shampoo out of my hair I realize she's stopped talking.\n\n\"Sorry, was washing my hair. What did you say?\"\n\nSilence.\n\nThen: \"Do you think I'll go to prom with someone this year?\"\n\nI clench the bath poof, sending a stream of foamy suds cascading over my toes, and close my eyes. More than anything, she wants to go to a dance. Not show up and sit around like a wallflower, not go with a gaggle of classmates like she has in the past, but be asked, by someone else, to attend. She's wanted it twice as much since she watched me get all dressed up for my senior prom. Brian Macintosh surprised me during third period, and before I could even think, I'd said yes.\n\nAfterwards I kicked myself. Not because there was anything wrong with Brian; he played Varsity basketball, wasn't a complete ass-clown like most jocks, and was easy on the eyes, kinda like David Duchovney in his X-Files days. I planned to decline anyone who asked because I knew Lynn might not go to hers, but since you can't go back and tell someone you weren't serious without causing hurt feelings, I shrugged it off. After all, Lynn was almost sixteen at that point, filling out beautifully, curves in all the right places. Surely she'd have no problem getting a date even if she occasionally used a wheelchair because her leg hurt, or was excused from participating in PE because she was working out the kinks of a new prosthetic thanks to her latest growth spurt.\n\nThen her junior year arrived. Come prom season, she was more than prepared to say yes. All her friends went with their dates. She stayed home with us and had ravioli and bread sticks from the 'real Italian, real fast' place down the street. For her classmates it was the best night of their lives, something to gossip and chatter about for weeks over social media. For her, it was Saturday.\n\nWhen she brought it up later, I tried to play it off. I told her prom actually wasn't all that much fun, and a bunch of kids wound up leaving early to go to other parties. Pretty sure she knew I was bullshitting though. Brian didn't deliver me home until two o'clock in the morning and I fell asleep that night for the first time knowing what being a princess in a whirlwind fairy tale felt like. When I woke up the next morning to discover I'd reverted back to plain old, basic Colleen, some of the shine wore off. Congratulations on having the time of your life, now get back to the real world.\n\nHow do you answer a question like hers without coming off bitchy? 'Sure, little sister, someone will see you for how beautiful you are inside.' People are always saying Lynn's beautiful on the inside. Hell, even Mom occasionally lets slip that little nugget of wisdom about how it's what's on the inside that counts. Am I seriously the only one who thinks she's perfect the way she is? How does...how does shit like this even happen?\n\nBut I can't tell her that. I can't tell anyone that. I mean, you start talking to your counselor about how you'd sleep with your own sister if she asked you to, you're not popping a can of worms so much as announcing the grand opening of a whole fucking bait shop.\n\nI sigh, hoping the splashes of water against the tub hide the sound. \"I don't know, Lynn. I hope so.\"\n\n\"Yeah, me too.\" She stands up, only a silhouette visible through the curtain and the liner. With her prosthetic she moves like anyone else, bending this way and that, picking clothes off the floor, pitching them into the laundry hamper, hanging up her towel. I turn the water off after rising out my hair, wanting more than anything to stay in there five more minutes and bang out a quick climax as the thought of her hands caressing my skin explodes through my skull, but I tamp that idea down and step out of the shower. As I wind one towel around my torso, then grab Mom's and twist it around my hair into a makeshift turban, she looks over at me. She's busy threading mint-scented floss through the gaps in her teeth, a habit she keeps much better than I do.\n\n\"Well,\" she says after rinsing her mouth with enough Listerine to bulk-sterilize a dental office, \"can't get asked if I don't get to school, huh?\"\n\nShe beams her flashiest pearly-white smile for my approval, and I give her a thumbs up as I dry myself off. \"Looking like a model for Colgate. I'll see you downstairs for breakfast.\"\n\nAs she exits the bathroom, I enjoy the swish of her butt, ensconced snugly in her gray capris. Then I blow out a long breath, grind my face into the towel, and wonder, not for the first time, what the hell is wrong with me.\n\n* * * * *\n\nThe days following the crash were chaotic. They kept me twenty-four hours for observation. I had a good-size chest contusion where the seat belt caught me, the airbag burned off a few layers of skin on my backs of my thumbs when it deployed, but after I showed no sign of serious damage from the concussion, they discharged me without a fuss. Lynn, of course, was another matter. It was three days before they brought her out of the coma, and even then she spent most of her time sleeping thanks to high doses of pain medicine. My only solace was her quiet \"Collie,\" when she first came out of the haze and locked eyes with me. Everyone standing around her, and that first whisper was for me. I knew then and there: she would get through this.\n\nNurses came every couple hours around the clock to inspect her leg, change the dressing, clean the site, that sort of stuff. Like me, she had bruised ribs where the seat belt hugged her during the impact, and thankfully the swelling in her head lessened with each new MRI. Everyone told us how lucky she was, how they'd seen people involved in smaller accidents who suffered worse injuries, that her guardian angel was working overtime, and a litany of other platitudes I eventually just tuned out. All I wanted was my sister whole again, and what use was a guardian angel if they couldn't even give me that?\n\nA week after the surgery to remove her leg, I entered my rebellious phase. Mom and Dad would see me out the door in the morning like normal, but I'd drive to the hospital to be with her instead. When Mom thought she'd fix that by dropping me off at school herself, I walked two blocks and used my lunch money to catch the bus. Finally after a, shall we say, 'heated' discussion involving my parents, the principal, the dean, my guidance counselor and one of the therapists from the hospital, a solution was devised. As long as I maintained my grades and turned in my homework, I would be excused from classes except on testing days. Mom and Dad didn't argue because they knew I'd do whatever it took to be with Lynn, school be damned. The state didn't argue because West Orchard, being a completely private school, didn't take a cent from the government and thus could dictate educational policies on a student-by-student basis. I can personally attest to how much of an education one can get simply spending a few hours a night bouncing back and forth between a textbook and YouTube. My grades stayed where I needed them.\n\nWatching her there broke my heart. Pumped full of pain medication, she spent a lot of time the first couple of weeks just drifting in and out of consciousness, sometimes falling asleep in the middle of a sentence. I got good at repeating myself and picking up conversation threads where they left off. There were a whole host of restrictions on everything from how she sat in a chair to how she could lie in bed. Nurses would periodically check to make sure she wasn't committing the cardinal sins of sitting cross-legged, dangling her right leg off the side of the bed, or God forbid, trying to support her back with an extra pillow.\n\nThey had their reasons. Dr. Natal explained how circulation problems can develop without warning in the days following surgery, so she had to be restricted. It still drove me up the wall when she would get comfortable only for someone to show up five minutes later and tell her it was time to move. She went along with it, but all it took was one look in her eyes to tell me she wanted them, and the rest of the world, to go to hell.\n\nMom and Dad, of course, visited as often as they could but their time was limited. Dad owns his own small accounting business; if he doesn't work he doesn't make money, and insurance for the self-employed is stupid expensive. Mom used to be a librarian part-time, but after Grandma's stroke the year before she needed more help around the house. She couldn't afford in-home care on her fixed income, Mom was her only child so you can do the math.\n\nEvery day I brought my bag up to the room, planted myself in one of the chairs beside her bed, and held her hand. When she slept, I pulled out my Nook e-reader or slid one of the rolling tray tables close and poured over homework. When she was awake and felt like talking, I'd tell her about things at home. When she needed to cry, I crawled up in bed beside her and stroked her back while she pushed her face into my shoulder. When it was time for physical therapy, I wheeled her to and from in her chair. When she took her first tentative steps post-op, my shoulder steadied her. She became my world, and I became hers.\n\nHer favorite thing was learning what Harry Potter was up to in his magical adventures with his friends at Hogwarts. Lynn was (and still is) a hardcore bibliophile, but couldn't look at the pages for long before the words all slid together and gave her a headache. I volunteered my service as an audio book and read to her until my voice gave out. One day a nurse making the rounds took pity on me and brought a case of Sprite to keep in the mini-fridge. To make it last we shared each can, and I relished every sip I took, knowing her lips had been there just moments before mine.\n\nOnce, when she was asleep, I leaned in close, kissed her on the cheek, and whispered that no matter what happened, I would stay with her. I promised her anything I could give, all she had to do was ask. My family's Irish on mom's side, and we take promises seriously, so if you say it you better be prepared to do it. It was the first time I told Lynn I loved her and meant it in...that way. Just like her, a part of me was broken and it was better to be broken together, I reasoned, than separately shattered.\n\n* * * * *\n\nThree weeks after the amputation, they removed her staples and started a different dressing for her leg. A new doctor, older with thinning hair, a sweaty handshake, and bifocals who always seemed too busy to engage in conversation, started coming around. This was Dr. Michaels, the guy who specialized in fitting people for prosthetic limbs. Fortunately Dr. Natal often sat in while Dr. Michaels hemmed and hawed, looked over Lynn's injury, found a million things not to his satisfaction, and waxed loquacious on how we needed to apply the dressing uniformly so he could take accurate measurements and ensure the fit was proper. More than once my parents cast dubious glances at one another as Michaels recited this fact or another, like a professor lecturing his students, explaining the horror show we could expect if we didn't change her dressing regularly, used an incorrect prosthetic sock, failed to massage the area, or a dozen other things we could screw up. Then with a glance at his watch, he'd swoosh out the door to a round of golf or whatever we were keeping him from. Dr. Natal was left to answer questions and explain things like the differences between a preparatory prosthesis and the real deal, what 'edema' was, and why the socks Lynn would have to wear on the stump came in three different sizes. Nobody explained why Dr. Michaels was too busy to converse with us instead of talk at us. Some people are just assholes, I guess. They don't have a cure for that yet.\n\nBetween the surgery, her recovery, and the countless check-ups, fittings, counseling sessions, physical therapy, and everything else that piles up when life curb stomps you, Lynn lost out on an entire year of education. While her friends went on to high school, she repeated eighth grade with a new set of classmates who had no idea what to make of a girl with one-and-a-half legs. They didn't mean to, but you know kids that age and how they can ostracize people who are different.\n\nSomehow I kept my grades up despite not giving two collective shits about the history of Armenia, matrix algebra, and whatever drivel Perler assigned in Poetry Appreciation. I wish someone had told me that wasn't the goof-off class promised by the handbook's description. If two paths diverge in a wood and you find yourself wishing you could have taken the other, then turn your lazy ass around, walk down the trail, and go the other way already. Two paths diverged in my life too, only I couldn't pick the second option, so suck a bag of dicks, Robert Frost. If I could have gone back and chosen differently, I would -- that would literally make all the difference.\n\n* * * * *\n\nLynn's got her stuff all packed and ready to go by the time I remember where my jeans are, dig them out of the hamper, and pull them on. I only wore them for two days, don't know why I'd chuck them in the dirty clothes basket so early. Mom left breakfast: a heaping pile of cinnamon rolls, scrambled eggs, and bacon (extra crispy) in the fridge, so I warm Lynn's and let her dig in while I pile up my own plate. Two glasses of grapefruit juice complete the ensemble, then we're wolfing it down like we haven't eaten in eight hours.\n\n\"So, what'll it be today: the van or the car?\"\n\n\"Her Majesty requests the van,\" she says, affecting simultaneously the cutest and worst British accent I've heard outside a Mike Meyers movie. Someone's been watching Downton Abbey reruns. \"She pushed herself hard yesterday. 'Tis better to have the chair and not need it, than to need the chair and not have it, yes?\"\n\n\"The van it is.\" I shovel a forkful of eggs into my mouth and chase it with the grapefruit juice. \"When is prom, anyway?\"\n\nShe looks over at me, takes her time chewing the strip of bacon, and swallows. \"It's, like, three weeks away still. Why?\"\n\n\"Just curious. I didn't know if they'd do it the same time every year, or switched around.\" Damn it, why did I have to bring it up? Now she's going to brood. Good job, Colleen.\n\n\"Same bat-time, same bat-channel.\"\n\n\"Could you be a bigger dork?\"\n\n\"You try laying in bed watching TV when all they've got on is re-runs of The Price is Right, Judge Judy, and the Adam West Batman.\"\n\n\"I think I'll pass.\"\n\n\"Some of us,\" she says with a raise of her eyebrow before finishing off her juice, \"didn't get that choice. Besides, knowing which two actresses played Catwoman majorly ups my nerd cred.\"\n\n\"Sure. Among your teachers.\"\n\n\"Maybe I'll take up World of Warcraft.\"\n\n\"Maybe I'll break your laptop.\"\n\n\"I'll bring the Horde down on your ass. Don't mess with me, Collie; I know at least four guys who are level-maxed.\"\n\n\"Yeah, and if I played, I'd be sooo scared. I've watched some anime in my day. Geek thugs are easy to deal with: I flash my tits, and they die of nose bleeds.\"\n\nLynn covers her mouth and tries to stifle a laugh, but she's not successful. Before long both of us are cackling like witches, each feeding off the giggles of the other into a recursive loop that only stops when neither one of us can breathe. Was it all that funny? I don't think so, but I don't care because I love the pink hue it brings to her cheeks when she lets herself go.\n\n\"Come on,\" she admonishes as she pushes herself up from the table and grabs her book bag. \"I don't want to be late.\" She walks over to the front door, opens up the wheelchair, and flops down into it, bag balanced on her lap, eyeing me expectantly.\n\n\"OK, OK, I'm coming, sheesh.\" I grab my purse and sling it over my shoulder, push my feet into my beat-up department store sneakers, and wheel her out to the van. Once there, it's a simple matter of fishing out my keys, opening the side door, and setting up the elevator. She ramps herself onto the platform like a champion, and I run the electric lift as it draws her up and inside. I shove the door closed, get around to the driver's side, and hop behind the wheel.\n\nIn some ways I prefer driving the van over the car. I like the higher vantage point. It feels heavier and more secure, which is nice when Lynn's with me. But it takes a different type of concentration since it's manual transmission, and while I'm better at driving a stick now after a few years' experience, I'd still rather have my car's automatic. But as always, it's whatever she wants. She could ask me to push her all the way to school in her chair or haul her there piggy-back, and I wouldn't argue.\n\nShe's quiet on the drive today, partly lost in the contemplation of her own thoughts, partly exchanging texts with friends, so I turn the radio on low and flip it to the 'we play everything' station, the only place in the city outside of Lynn's iPod where you can hear Miley Cyrus, the Eagles, Eminem, Kenny Chesney and Martin Page in the same music block.",
        "It takes only fifteen minutes to reach West Orchard Preparatory School, pull up to the handicap-accessible area at the front, and help her unload. As with most days when she brings the wheelchair, she doesn't use it herself but instead sets her backpack in it and pushes it around so it'll be handy if she needs it. She hates to rely on it, and I understand that. But like she said, if she pushes herself too hard, she's not doing herself any favors either. I'm glad she has it and the school has elevators.\n\nI go to put the ramp up but feel a tap on my shoulder. I turn, and she's standing in front of me, looking around quickly to see if anyone is watching, but the normal drop-off zone is all the way down near the gym and there's no one around. She throws her arms around me, and squeezes. \"Thank you so much, Collie,\" she whispers. \"Love you!\"\n\n\"Love you too,\" I reply. Then, unable to control myself, I lean forward and give her a quick peck on the cheek. She puts her hand slowly over the spot where I kissed, and I wonder if I've crossed a line, when she breaks into a smile and blows one back at me. Then she turns and is gone, pushing her wheelchair towards the automatic doors, ready to take on the real world of senior year for one more day.\n\nWell, while she's facing the pressure cooker of senior year, I've got my own responsibilities. I clamber back up into the van, ease out of the parking spot, and head back to the road. I should make it to work with plenty of time to grab coffee on the way.\n\nThe girl behind the counter of 'To Bean or Not To Bean', a cheery olive-skinned, raven-haired college student named Ruby, calls my drink order as soon as I walk through the door: \"One medium iced coffee, double sweet, with room, for Colleen.\"\n\n\"You're the best, Roo.\" She gives my total, we exchange money, and I dump my change into the tip jar like always. She's adorable, with her silver nose stud and perpetual grin, but I've seen her smooching her girlfriend while on break so I know she's taken. At any rate my heart belongs to another, even if said other doesn't know and can never find out.\n\n\"Tell Lynn I said hi,\" she calls as I walk to the other side of the counter and retrieve my drink.\n\n\"Will do,\" I reply as I doctor it with half-and-half and two extra packets of sugar, wave, and head out the door. As I look back, Ruby's attention is already buried in a true crime paperback. Not the first thing I'd guess if I were trying to determine her reading habits, but if my job has taught me anything it's that people's tastes run far and wide when it comes to their book selections.\n\n* * * * *\n\nSince there's no need for me to spend seven hours a day with Lynn at school, I spend five hours a day, Monday through Friday, at the local second-hand bookstore. The woman who owns it, Lori Cunningham, couldn't be sweeter if she was Georgia-brewed tea. Ever since I was old enough to read, I wanted to work at Lori's Library. When I needed volunteer credits to graduate from West Orchard, I earned them shelving, sorting, and tidying up while she and the rest of her staff went about the business of buying and selling. You know the saying, 'Nothing attracts a crowd like a crowd'? Well, nothing attracts dust like a building full of old books.\n\nI told Lori (and myself) when I applied this would only be a temporary job, but my third anniversary approaches and I don't see myself moving on anytime soon. The rise of eReaders coupled with Amazon's stranglehold of the online book business has cut into Lori's profits. I take some ribbing from some of my co-workers because I have a Nook, but it's not like I abandoned real books. There's something magical about them, especially older ones. You open them up, smell the pages, look over the words, and wonder who the last person was to read them before you.\n\nLori can't afford to pay much, and at part-time I wouldn't be making bank even if she could, but she gives me something no other job could offer: flexibility. She knows Lynn comes first, and if something happens, if I need to drop everything and pick her up, if I need a day to take her to therapy, whatever, I get the time off, no questions asked. Plus I live at home, drive a long-paid-off Dodge Neon, and don't have student loans hanging over my head...money's hardly my foremost concern. That said, it's far from a career. So far I've been able to brush off Dad when he drops the 'But what do you plan to do with the rest of your life?' bomb, but I'll worry about that once Lynn's off at school. My life's been on hold for three years now. Another few months of the same won't hurt.\n\n* * * * *\n\nI'm barely in the door when Mom unloads her opening salvo: \"I saw you took the van, is everything OK with your sister? Did she push herself too hard in therapy yesterday? I told her not to overdo it, but she never listens to me. Maybe you can talk to her?\"\n\n\"Hello to you too,\" I reply in the space when she stops to breathe. \"In order: Lynn is great; she wanted the wheelchair just in case; and she doesn't need anyone lecturing her about her health. Also, my day was fine, thank you for asking. How's grandma?\"\n\n\"Oh, she's driving me up the wall, but that's nothing new. I'm sorry, I can't seem to get much of anything right today. How are you, Colleen?\"\n\n\"I'm okay. Just thought I'd take a nap before I pick Lynn up.\" I head down the hall.\n\n\"Sweetie, I can get her,\" Mom calls to me as I leave the room. \"Why don't you rest?\"\n\n\"It's all good,\" I say over my shoulder. \"Just make sure I'm up in an hour. You'll have your hands full with dinner anyway. She'll be ready to eat a horse when she gets home.\"\n\n\"She gets that from your father, I'll have you know!\"\n\n\"See you in an hour, Mom.\" I walk into my room, close the door behind me, then lean against it, eyes shut for a few moments. Thoughts suitably gathered, I strip off my t-shirt, get out of my jeans, remove my socks, unclasp my bra, twist my blinds closed, then pull the curtains. The room darkens as the drapes block out the majority of the afternoon light and I crawl into my bed. My sheets, cool from the breeze circulating from the ceiling fan, raise goosebumps on my legs and arms as I settle in.\n\nFor a minute or two I listen and can barely make out the sounds of Mom moving things around in the kitchen. When I'm certain she's fully engaged in her cooking, I slide my hand down between my legs, touching my sex gently through the fabric of my panties. Eyes closed, I tune out everything around me and call forth the memory of this morning as my sister steps out of the shower with my help. Her skin glistens like a radiant prism. Her hair, sodden with moisture, clings to her body and angles downward with that artificial straightness produced by a solid washing. Her lips form the beautiful crescent of a smile as she meets my gaze, and doesn't look away when I allow that gaze to wander down her chest.\n\nI push my panties off my hips, then resume the slow, lazy strokes of my finger. I'm already damp, heart pounding anxiously with the knowledge of what's coming. She watches me watching her, lingering on every line, every curve, every tiny stream of water as it runs over her body and down to the rug beneath our feet. I focus, like a laser, on the memory of that lone water drop dangling from her nipple.\n\nHere is where reality bows off stage. Instead of leaning into me and catching itself on my shirt, the droplet stays, suspended from the pink nub like a gymnast hanging from a bar. Slowly I bend down, mesmerized by its sway as Lynn breathes. My tongue snakes out quickly, darting from between my lips, makes contact with the droplet and brushes my sister's skin oh-so-briefly before retreating back.\n\nHead folding back into the pillow, I prod my clit with my fingertip and simultaneously, in my fantasy, my sister lets out a soft coo. The water, though it's but a single drop, tastes the way lavender smells, the way a perfectly-tuned orchestra sounds, and I want more. Leaning up, I plead with my eyes, begging for her to let me keep going. She smiles, nods, and I slide my lips over her skin. With one little intake of air, I suck her nipple into my mouth. My mind's a blank, and suddenly my imagination is going overtime trying to fill in the gaps with what that little alluring bump tastes like.\n\nI can't think any more as my hips quiver, and I find myself arching my back, fighting to stifle the moan, then giving up and letting it gasp out of me. Jolts of pleasure ping through my skull, down my legs, through my arms, and like a willing puppet, I dance through the sudden climax.\n\nSkin slicked with sweat, ears red with heat, I kick the sheet off my legs and take a moment to compose myself, then look at the clock. Eleven minutes since I laid down? I shake my head. Even in my fantasies, I can't last fifteen fucking minutes without coming. God help me if I ever got Lynn in bed... It would be all over for me before I could even finish undressing her.\n\nUndressing her? Oh my God... What if she let me? Is that how it starts, not in the shower, but before? So many what-if scenarios. Anything could happen.\n\nMy hand slides back between my legs to ponder the possibilities. I manage to last a whole eight minutes before I have to shove my mouth into the crook of my elbow to make sure Mom doesn't hear me. When I'm done, I really want that nap. I close my eyes, knowing whether or not I fall asleep, it won't be long before Mom's knocking at the door.\n\nI kick my panties off completely, roll over on my stomach, move my knees apart, hold the pillow with my left hand and put my right back down between my legs. At this point, sleep seems pretty pointless. My fingers go back to work, stroking my clit, spreading my lips, and pushing their way deeper inside me until they aren't my fingers any longer; they're Lynn's.\n\nBy the time I'm done, I can barely move. Little sparkling dots bob and weave in front of my eyes, I've no idea where my underwear went, and I need to wash my sheets. There's definitely something wrong with me, but I'm sure as hell not interested in fixing it. You shouldn't have to fix something that feels this good.\n\nMom taps my door and I drag my face away from my pillow long enough to tell her I'm awake. Then, on shaky legs, I collect my clothes, pull a fresh pair of undies out of the dresser, and make myself presentable to the rest of the world.\n\n* * * * *\n\nTurns out my sister didn't need her chair at all today, so after she helps me stow it in the back of the van, she clambers up into the passenger seat, ignoring the staccato bursts of quacking ducks issuing forth from her phone indicating she's got approximately nine thousand incoming texts. I pass on Ruby's message, and she grunts noncommittally in response. Whatever's on her mind, she'll either tell me or she won't, and I know better than to pry. She'll talk when she's-\n\n\"Mr. Perler is such an ass.\"\n\nThe remark, completely out of left field, catches me by surprise and I can't help but laugh. Then, when I notice she's not joining me, I pull myself together. \"Sorry. It's just, that was my assessment when I had him too. What happened?\"\n\n\"He hates 'Dead Poets Society'.\"\n\nI gotta admit, that takes me even more by surprise. You'd think a guy with his life tied up in poetry as much as Perler would love a film like that. \"Not surprising. Robin Williams makes him look dull by comparison. Is that it?\"\n\n\"No, it's... He doesn't understand poetry as much as he thinks he does.\"\n\nThis is getting more interesting by the minute. \"So, when you left him you were but the learner, now you are the master?\"\n\n\"I'm serious, Collie. Wes suggested we watch the movie in his class, and he proceeded to lecture us on how Mr. Keating's take on poetry is wrong, he uses verses out of context to make points they were never intended to make, and his tactics are dishonest to his students.\"\n\nAs the light in front of me turns red, I ease the van to a stop and look over at Lynn. \"Well, maybe he has a point. If you're taking something out of context, you're not being honest. I mean, think about a movie where the reviewer writes, 'The story is nothing spectacular, and the effects are hardly out-of-this-world.' If the DVD case quotes the reviewer as saying, 'Spectacular!' and 'Out-of-this-world!' that's dishonest, right?\"\n\n\"Yeah, but we're not talking about film reviews, we're talking about poems.\"\n\n\"What's the diff?\" The light turns green, I check both ways, and head into the intersection.\n\n\"Reviews are somebody's opinion, and if you cherry-pick words to make a quote say the opposite of what it does to fool people into seeing your movie, then you're a dick. Poetry is meant to inspire you, help you reach new heights, make you want to sieze-\"\n\n\"-the day,\" I finish with her. \"Yeah, yeah, 'carpe diem', 'gather ye rosebuds' and all that. But if the poet had something sad in mind, should we use those same words to make ourselves happy? Isn't that kind of...I dunno, rude?\"\n\n\"We can't control where we find inspiration,\" she counters. \"Take music. Bruce Springsteen's 'Born in the U.S.A.' is about one guy's ridiculously shitty life. He's born in a slum, gets in trouble with the law, is drafted, winds up in Vietnam, and sees his best friend die. Then he comes back to unemployment, exchanging one country that wants nothing to do with him for another. By the end of the song he has nothing. 'Nowhere to run, ain't got nowhere to go' is the exact opposite of the American Dream.\"\n\n\"Okay...\"\n\n\"But the song sounds uplifting, right? I mean, you've got it on your workout playlist. How many other people do too? You can't help that hearing the first few bars of 'Born in the U.S.A.' makes you want to get up off the couch. His intentions for the song can't control how we respond to it. Poetry's the same.\"\n\nI have to admit, Lynn's making a creepy amount of sense. \"I can't fault your argument.\"\n\n\"Mr. Perler can. He's just wrong, Collie. It's not up to him what inspires me.\" Point made, she crosses her arms, turns her head, and stares off into space out the window. God, she's adorable when she pouts.\n\nWe pass the remainder of the drive home in silence. As we reach the turn for our neighborhood, I lean over and put my hand on her knee. Without turning to look at me, she sets her hand on top of mine and squeezes. Score is 1 -- 0, I think. Your move, Perler.\n\n* * * * *\n\n\"She walks in beauty, like the night / Of cloudless climes and starry skies; / And all that's best of dark and bright / Meet in her aspect and her eyes.\"\n\nI concentrate on the words as Lynn recites them from memory, and work the shampoo into my hair. I think and think, but try as I might, familiar as the words are, I can't place them. Finally I settle on Browning.\n\n\"Robert, or Elizabeth Barrett?\" Lynn asks.\n\n\"Ah ha! So it is a Browning then?\"\n\n\"Still waiting on your answer.\"\n\nI tilt my head back under the water, washing the suds down the drain. \"Robert,\" I decide. \"Final answer.\"\n\n\"Ooooh, I'm so sorry. The correct answer was 'Lord Byron', but thank you for playing.\"\n\n\"Damn it,\" I mutter.\n\n\"Taking this a bit personally today, are we?\"\n\n\"Coincidence. I got soap in my eye,\" I lie.\n\n\"Ouch. Need the towel?\"\n\n\"No, I'm fine. I'll be out in a minute.\"\n\n\"Great. See you downstairs!\" I hear the floor creak as she walks out of the bathroom. When I'm sure she's out of sight, I run my hands through my hair to collect the last of the shampoo, brush them over my breasts, pinch my nipples gently, move my legs apart, and push my finger into my slit, doubly slick from the water and my own heat.\n\nToday, before helping Lynn out of the shower, I'd stripped off my pajamas on the pretense of running late. Skin-on-skin, my contact with her was electric. I didn't care how wrong it was. I wasn't about to force myself on her, but I saw no reason not to take advantage of a good situation.\n\nWhat I got were her breasts on mine as she reached for the towel. My nipples hardened immediately, and it was all I could do not to press my lips to hers and breathe her into me right then and there. I held her steady as she toweled her midsection off, then sat on the toilet to dry the rest of herself. I hurried into the shower and deliberately took my time so she'd be done and leave before I got out.\n\nThe tile wall sends a shock of cold up my spine as I lean back against it, but the warmth inside me cancels it out quickly. A few gentle strokes of my throbbing clit, and I feel the shudders starting in my thighs. Eyes closed, head tilted, I ride the wave up, crest, then slowly return to sea level. This would have to do.\n\nGod damn it. This would always have to do. I broke her once already. I will not break her again.\n\n* * * * *\n\nI walk into work thirty minutes before my shift starts.\n\n\"You're not scheduled until nine,\" Lori says, looking up from her desk where she's tabulating payroll. \"Need some extra money?\"\n\n\"No, just wanted to shop if that's okay.\"\n\n\"Honey, I've never turned away a customer. Just make sure you've got your name tag on by the time we open. Oh, and you're on register first hour, so leave time to count in.\"\n\n\"Got it.\" I place my purse into my little cubby, pin my name tag to my shirt so I'll be ready, then walk out of the back room and into the store proper. Bolstered by Lynn's words yesterday about not being able to control what inspired us or how, I make my way to the poetry section. Maybe somebody would have something to say about unrequited love. But where, outside of George R. R. Martin's 'A Song of Ice and Fire', does one look for wisdom concerning loving one's own sister?\n\nThe poetry section in our store takes up one column of seven shelves. The first five are devoted to individual works, collections, and the occasional biography, alphabetized by poet, while the bottom two are for anthologies and selections from multiple writers. It's to these lower shelves I gravitate, figuring my best chance for success at finding something that speaks to me is to sample a bunch of writers at one go.\n\nAfter scanning and skipping over some truly mammoth collections, I finally settle on a comparatively smaller anthology of one hundred poems. The table of contents reads like a who's who of the big names I had studied in Perler's class along with those familiar to me through popular culture, but sprinkled within are poets whose names I don't recognize. This, I decide, will be my start, so I settle on the floor, cross-legged, and begin. I like the verse Lynn recited this morning, and a quick check of the index brings me to \"She Walks In Beauty\" by Lord Byron.\n\nI drink the words off the page. Every line carries an image of Lynn: her brow, her smile, her face, her cheek, her hair.\n\nHer heart.\n\nAs I read, I read not with my voice, but hers; not with my eyes, but my sister's, hanging on every line until I reach the end and feel my heart beat anew. Byron, you magnificent bastard...you captured Lynn's essence in your words, and it only took two hundred years for me to find it.\n\nWhat else I could find of my sister between those covers would have to wait for later, as a glance at my watch reveals it's five 'til. Closing the book, holding it to my chest, I get off the floor and haul ass to the cash register.\n\nLori looks up as I walk behind the counter, and a broad grin stretches across her face. \"I know that look, Colleen. Been in this business twenty-nine years, and if there's one thing I know, it's the look of someone who just fell in love. So: who is it?\"\n\nI stammer, wondering how she could know about my feelings for Lynn, then realize she's not talking about a person. Blushing anyway, I hold up the poetry anthology.\n\n\"Oh, thank God,\" she says after seeing the title. \"For a minute there, I thought you were gonna show me 'Fifty Shades' and I was gonna have to introduce you to the customer service stick.\"",
        "I look at her, incredulous. \"Customer service stick?\"\n\nShe glances at the clock, then back at me as she uses her key to open my register and drop in the cash drawer. \"Pop, pop. You got three minutes to count in.\"\n\n\"Lori, what's the customer service stick?\"\n\nShe walks out from behind the register, heading for her office. \"Don't you pay that no nevermind, sweetie. You ever need to know, you'll learn.\" I can't tell as I'm focused on counting my till, but I swear out of the corner of my eye I see her shoulders bob with laughter as she walks away down the center aisle.\n\n* * * * *\n\nDad's car is parked on the street and Mom's in the driveway. That's not a good sign. Any day Dad's home from work before six o'clock means bad news; nothing good ever gets him out of the office early.\n\nSince I don't want to interrupt anything, I drive a short distance down the block, pull over, and send Mom a quick text. \"Running errands after work, home with Lynn later.\" I give it a minute, but when I don't get a reply I know they're in the middle of a serious discussion, or a fight. Mom's not about to lose points by picking up her phone during an argument unless it's to prove someone wrong using Google.\n\nPre-rush hour the streets are relatively clear and there are dozens of choices for where I could wind up. The coffee shop is tempting: pull up a table and read? But alas, I lack the requisite beret, glasses, scarf, skinny jeans and ironic jacket to properly cement my new-found hipster poet enthusiast status. No dice.\n\nFinally after driving aimlessly for about ten minutes, I pull into the local Baskin Robbins, commandeer a scoop of Daiquiri Ice, and hunker down at a corner table to flip through my new book. Twenty minutes later the incoming text alert goes off on my phone: Mom, reminding me not to spoil my dinner (too late) and letting me know Dad's already home.\n\nYay.\n\nI know it's time to stop reading when I turn the page and encounter Robert 'the whole bag of dicks' Frost and his Road Not Taken again. The noise as the cover slams shut is enough to stir the guy behind the counter from his daydream. I take care not to meet his gaze as I pitch my trash and walk out the door.\n\n* * * * *\n\nLynn spends most of the drive home on the phone with Mom, barely able to get a word in as she's regaled with a one-sided version of the events that transpired earlier in the day. I don't have to hear the conversation to know what the fight's over, because Mom and Dad only argue about money.\n\nPrior to the accident we weren't what you'd call wealthy by any stretch of the imagination, but we were firmly-entrenched in the middle class. Dad brought home the bacon with his accounting business, and Mom volunteered as a classroom helper at Tiffton Academy, where Lynn and I went to grade school, and worked for the library.\n\nWe have medical coverage. Lynn's life insurance and my parents' auto policy helped offset the cost of the surgery, her recovery, and physical therapy as well as vehicle repairs and whatnot. But life didn't suddenly become easier once those bills were out of the way. The real sucker punches hit later.\n\nThere are dozens of things you don't even think about until you have to make major life changes for someone you love, and insurance doesn't cover most of them: stuff like Lynn's wheelchair; the new bathtub; buying the van; pouring a concrete ramp connecting our front door to the sidewalk and putting up the hand rails to make it accessible. None of that came cheap, but all those costs were small potatoes compared to her prostheses.\n\nI'd always assumed that when you got a prosthetic limb, you got one limb, because how many artificial legs does one below-the-knee amputee need? Turns out that's not the case. The first was temporary, designed so she could get used to moving around on something that wasn't her original leg. That one was basically a metal rod with an open cup-like depression on one end to support her stump\u2015it looked like something you'd see on a Terminator with as open and exposed as all the parts were. Dr. Michaels always had to adjust this or that to make sure it held her weight, maintained the proper gait, wasn't too long or too short, and so on.\n\nThe second prosthetic, the one that's sculpted to better resemble an actual calf at the top and a foot on bottom, is the one most people think of. You can get ones designed to look like a real leg when viewed from a distance, but we can't afford anything that fancy so my sister's still has the reinforced bar of the ankle visible. Lynn's on her fourth already. Not because she's wearing them out, although that's apparently a thing, but because she lost her leg at thirteen. Every change in her body, from weight gain to puberty-driven growth spurts, has to be accounted for with an artificial leg. That's where the real expenses come from, the giant outlay every time she's fitted for a new one. It stresses me out just thinking about it, and I don't even write the checks. I can't imagine what it does to our parents.\n\nWe eat dinner around the table, but in a frosty silence no one wants to be the first to break. Lynn valiantly tries a couple of times, first complimenting the chili which gets nods of agreement all around, then asking about grandma, which brings one- and two-word replies from Mom. Finally even her optimism is exhausted, and one by one, we finish our bowls, deposit the dishes in the sink, and head off on our own. Lynn retreats to her room to do homework, I head to mine to get lost in the bowels of Facebook. Dad heads to the bathroom because I hear the water jets in the tub fire up.\n\nAfter a few hours, even though the sun is still up, I've had just about all I can take of today, strip to my panties, kick my ceiling fan up a notch and crash into bed.\n\n* * * * *\n\nThe tapping on my door wakes me up, and I turn to look at the clock: just after midnight. Rubbing sleep from my eyes, I sit up in bed. \"Who is it?\"\n\n\"It's me, can I come in?\" Lynn's muffled voice is quiet, subdued on the other side of the door.\n\n\"Uhh...hang on a sec.\" I feel around on the floor until I find my shirt and pull it over my head, then give the OK. Lynn, clad in a nightgown, makes her way into my room, closes the door behind her, then ambles over to sit on the foot of my bed. As my eyes slowly adjust, I see it isn't a gown, but a powder blue oversize sleep shirt with the Snuggle fabric softener bear on the front, which hangs down nearly to her knees.\n\n\"Can I...sleep in here with you tonight? At least for a little while?\"\n\nI frown and sit up straighter. \"What's wrong, hon?\"\n\n\"Mom and Dad are fighting again.\"\n\nLynn's bedroom shares a common wall with our parents', and it's not a very thick one, so sounds louder than normal conversation carry right through. When she was much younger, Lynn told me how she woke up to the sound of their bed frame rhythmically bumping the wall, and knocked on their door to make sure everything was OK. They re-arranged their room that weekend, much to my amusement and Lynn's confusion.\n\nI pat the bed closer to where I'm sitting. \"C'mere.\"\n\nShe scoots over, and I take her hand.\n\n\"I wasn't trying to be nosy, but they weren't exactly making it difficult. Dad's stressing about money.\"\n\n\"He's an accountant, Lynn, he's always stressing about money.\"\n\n\"No, it's different.\" She stands up, pulls me out of bed, and we walk into the hall where my parents' voices, muffled though they are by their own door, are still loud enough to make out.\n\n\"-saying she should either be in college, or out in the real world by now. Is that unreasonable to you?\"\n\n\"Bill, I will not charge our daughter rent while she lives-\"\n\n\"She's doing nothing with her life. By all rights she should be a senior at Valparaiso like she planned, or at least a junior with a healthy load of credits, but instead? Nada, zip, zilch. She's smart, but if she doesn't get herself moving, she's got no future outside of that bookstore.\"\n\n\"She helps take care of Lynn so I can help mom and you can work. Or did you forget because you spend more time at the office than you do at home?\"\n\n\"Lynn's nineteen, and she'll be going off to college\u2015what's Colleen going to do, toddle along after her like a nanny when she's at St. Joseph's next year?\"\n\n\"That's her business, not ours.\"\n\n\"I'm just saying, two hundred dollars a month would go a long way towards-\"\n\n\"Are you even listening to yourself right now?\"\n\n\"Tell me somewhere in this state she could live for two hundred bucks a month. It's hardly highway robbery, and it would help offset the slow period after the end of the fiscal year.\"\n\n\"What are you going to do if she doesn't pay? Kick her out?\"\n\n\"Jesus Christ, Judy, I'm just saying. She could offer to help with bills instead of freeloading. She's twenty-two: old enough to vote, old enough to drink-\"\n\n\"Something you've been doing a lot more lately, I might point out. Funny how you can always find the money for that.\"\n\n\"Oh, so this is all coming back to me again?\"\n\nUnwilling to listen to any more, I turn, pull Lynn back down the hall into my room, and shut my door. Now the argument is barely audible. I open the TuneIn app on my phone and set it to the solo piano channel I listen to when I need help relaxing. The soothing melody of a Wayne Gratz piece drowns out what remains of our parents' fight, and I yawn, suddenly aware of how tired I am.\n\nI push back the covers and scoot toward the far side of my bed. \"Just crawl in,\" I tell her, patting the bed in front of me. \"They'll be fine by tomorrow, you'll see.\"\n\nLynn sits down, fusses with her prosthetic for a minute, then I hear it thud on the floor. She tugs her Snuggle bear shirt out from under her butt and swings around, sliding her legs under the sheet. \"Think it'll be hot under here with the two of us?\"\n\nI know what she's asking, but of course my mind instantly goes there, because I'm a horrible excuse for a sister and a human being. \"Probably, yeah.\"\n\nShe takes hold of her shirttail. \"Um...is it okay if I...?\"\n\nNo. No, it is not okay, Lynn. You should sleep with your shirt on. I'll be just fine. I'll bump the A/C down a couple notches, and that will offset any increase in the room's ambient temperature. That's what I should say. Instead, I manage to croak, \"Sure,\" and watch as she peels the shirt over her head and tosses it down to the foot of the bed. Well...follow the leader. Mine joins hers, and already I feel the temperature spiking.\n\nShe lays down on her side, facing away from me, and thankfully doesn't move to take anything else off. For all I know, there isn't anything else for her to take off, and that warms me all the more. \"Just hold me for a little bit, okay?\"\n\nI assume a position on my side as well, facing her, then scoot closer until my breasts are nearly touching her back. Somewhere in my chest, a professional wrestler choke-slams my heart over and over again, trying to get it to tap out. I smell Pear Berry body wash as errant strands of her hair tickle my nose. I close my eyes and try to think of something, anything, besides the fact my sister's bare skin is centimeters from my own, and I'm just about there when she grabs my hand and I panic.\n\nShit! Did I do something without realizing it? No, I have my hand parked right on my hip, where it's going to stay until my alarm goes off. I freeze, breath held, as she pulls my arm around her side and rests my hand on the smooth flatness of her stomach. Then, because she hasn't already done enough to send my Panic-O-Meter into overdrive, she inches backward until she makes contact with my chest and I am well and truly spooning her with my mouth against the back of her head. Every breath I take makes strands of her hair dance. What the hell is going on...?\n\n\"G'night, Collie,\" she whispers. \"Love you.\"\n\n\"Goodnight,\" I whisper back. \"Love you too.\" Unable to control myself, I shift my head and kiss the back of her neck tenderly. She squeezes my hand, moves it up an inch or so, and settles back against me with a contented sigh.\n\nAt some point I must have fallen asleep because my next memory is of my alarm blaring and the two of us stirring. She waves a hand around my nightstand to turn it off, but she doesn't know where the clock is, so I have to lean up on my shoulder and reach over her with my right arm, mashing my tits into the back of her head as I stretch. Even groggy with sleep, I can't control my thoughts. What if she turned over, right then, and kissed one? What if she wanted to make out in bed for a little bit before we got up? What if things went...further than that? What if we-\n\nI smack the button and my alarm quits blaring, so I quickly roll back off her. \"Sorry,\" I say, \"didn't mean to squish you.\"\n\n\"It's okay. I didn't know how to turn it off.\" She rolls over on her back, and the sheet slips down a few inches. She stretches her arms above her head while yawning, and both breasts peek out from under the sheet, a fact I attempt studiously to avoid allowing my brain to register. After a few seconds, she lowers her arms, sits up, and flips herself around to face me. I blush, caught red-handed in my ogle.\n\n\"You should have said something if you were hot.\"\n\n\"I'm fine.\"\n\n\"Collie, your face is more flushed than a public toilet.\"\n\n\"I know, I know. It's... You're right, I'm warmer than I thought.\"\n\nShe laughs. \"You shouldn't try to lie to me. I can read you like a book.\"\n\nFace still burning, I grab my shirt and slip it over my head while she works, bent forward, to put on her leg. I can't see it from this angle, but in my mind I picture her right breast pressed up against her thigh, which brings me back to the feeling last night as we slept, spooning skin-to-skin.\n\nShe stands, bends to stretch her lower back, picks up her shirt, slings it over her shoulder, and walks, topless, to my door.\n\n\"You, uh, planning on flashing the world there?\"\n\n\"Dad's gone already, I heard him leave earlier. Mom's always at grandma's by now, so the only person here to see is you, and it's nothing you haven't seen hundreds of times before.\" She walks through the door and down to her bedroom to acquire her clothes for the day, and I lay back on my bed with the biggest grin imaginable on my face, fanning myself with the sheet.\n\nIt's not what they normally mean by the phrase, but I could, in fact, testify under oath that I just slept with my sister.\n\nEverything tingles, which take to to be an omen. Today is going to be a good one. Today is the day I will answer Lynn's question correctly and win whatever she's offering.\n\n* * * * *\n\n\"Today's is a little longer than usual. Are you ready?\"\n\n\"Ready as I'll ever be,\" I say, pouring shampoo into my hands.\n\n\"Soul and body have no bounds: / To lovers as they lie upon / Her tolerant enchanted slope / In their ordinary swoon / Grave the vision Venus sends / Of supernatural sympathy, / Universal love and hope;\"\n\nHow the hell does she remember all these? I rack my brain, but don't recognize this one from any of the (admittedly few) entries I've read in my book so far, or from Perler's class, and am reduced to a shot in the dark. \"Umm... Coldridge.\"\n\n\"Coldridge? Who's that?\"\n\n\"You know, he did the...that one poem. You know, where the old sailor shoots the bird?\"\n\n\"That's Coleridge, Collie. Samuel Taylor Coleridge. 'Rime of the Ancient Mariner'. Is that who you're talking about?\"\n\n\"Yeah, him.\"\n\n\"Hundreds of lines in that poem, and you only remember it as the one where a guy kills an albatross? Are you trying to make my heart hurt?\"\n\n\"You're just stalling because you don't want to admit I'm right. No need to be mad, just say the words.\"\n\nShe makes a buzzing noise with her mouth. \"Sorry, the correct answer is not Coleridge, it's W. H. Auden. Thank you for playing, try again tomorrow.\"\n\nWell, shit. I shampoo in silence as she brushes her teeth. \"How many of these do you have memorized anyway, just out of curiosity?\"\n\n\"As many as it takes for you to learn, my Padawan.\" Having so informed me, she slips from the bathroom to acquire sustenance.\n\n* * * * *\n\nI discover William Butler Yeats on my break at work. Or rather I re-discover him, since I remember Perler going on at length about how he was the greatest poet of the twentieth century or some nonsense. Our textbook contained two samples of his work: one was about his intent to go to some island, live in a mud house and raise bees; the other involved counting swans at some lake. Is it any wonder nobody takes poetry seriously when it's crap no student today could identify with that they make kids read?\n\nThe first one in my book, however, is new to me. Called \"No Second Troy,\" it might have been written by a completely different person. The Yeats who wrote those other two poems? He was one dull son of a bitch. This Yeats, on the other hand, was beyond pissed at some woman who probably wouldn't put out for him. The final line proposes she'd wrecked his life because, as his Helen, there was nothing else for her to destroy but him. Whoever she was, I hope she had aloe and ice water handy after she read that sick burn. What catches my eye, however, is a single line: 'Had they but courage equal to desire?'.\n\nTaken in context, the line refers to the foolish men under her sway whom she had spurned to undertake some violent action, and serves as rhyme for 'fire' two lines later.\n\nOut of context, on the other hand, the line seems written for me. What, I ask myself, could I accomplish, could any of us accomplish, if our desires were equal to our courage to face them? I ponder this for the rest of my shift, my brain turning and returning to a potent question posed by a man now dead for some seventy-five years. Customers come and go, but nothing registers at all as my plan pushes everything else in my mind aside.\n\nLynn's right: we can't control what inspires us. My challenge to seize the day has arrived.\n\n* * * * *\n\nLynn climbs into the passenger seat beside me, and suddenly all of the butterflies on the continent return to my stomach to nest, or roost, or whatever a flock of butterflies does in one's gastrointestinal tract. \"How did work go?\" she asks, pulling the seat belt over her shoulder.\n\n\"Not bad. How was school?\"\n\nShe gives a non-committal shrug. \"Eh, you know. School.\"\n\n\"Perler again?\"\n\n\"No, he's fine. We're studying Auden now, hence this morning's question.\" She turns and stares out the window, watching the buildings on the street pass by as I accelerate to merge with traffic.\n\n\"Then what?\"\n\nShe doesn't answer me for a long time, then I hear her sniff and she rubs her nose across the sleeve of her t-shirt. \"Nothing.\"\n\nI have a feeling 'nothing' is, in fact, connected to something she cares an awful lot about, so I probe. \"Worried about Mom and Dad?\"\n\nShe barks out a laugh, but doesn't turn around. \"Well, yeah, but that's... I wasn't even thinking about them until now. You should be, if they're going to charge you rent. Even though that's a total crock of shit.\"\n\nWe'd see about that. I wasn't about to directly confront Mom or Dad about the issue, but I figured I'd be a little passive/aggressive so this morning before I dropped Lynn at school, I left a check for $200 with 'Rent for May' in the memo field in the middle of the table. Surprisingly I haven't gotten a text or a call about it, so I'll cross that bridge when it comes. I was nervous when I left, but honestly I don't care all that much. Two hundred a month is peanuts when you live at home and gassing up your car every two weeks is your only regular expense.\n\nHad I but courage equal to desire? Challenge accepted, Mr. Yeats. It was time to find out.\n\n\"Lynn, I've got something I need to ask you.\"\n\n\"If this is about college, I don't expect you to follow me to St. Joe's.\" She finally turns and looks at me. \"Although I do expect you to visit from time to time. It's only an hour or so away.\"",
        "\"Every chance I get. But that's not my question.\"\n\n\"Look, if it's about last night-\"\n\n\"It's not. Will you let me finish?\" That comes out harsher than I expect, based on the expression she now wears. \"I'm sorry, I didn't mean it to sound like that. But this is... Well, it's serious, and it's honest, and I kinda don't know how you'll take it, so I'm nervous as hell asking, so...\"\n\nI'm babbling, but thankfully her expression softens and she nods.\n\n\"So, first of all, has anyone asked you to prom yet?\"\n\nHer lower lip does that thing where part of it seems to turn inward. She fights to stay composed as tiny pools of water form in the corners of her eyes before turning away to look out the window. Bingo...that's what she's upset about.\n\n\"No...\" she says, a quiver creeping slowly into her voice. \"But, I mean, it's still two weeks away, so there's still time, right? Like, m-maybe somebody just wants to make sure they can rent a tux or...or...you know...before they ask.\"\n\nI swallow. Hard. God, my kingdom for a swig of Mountain Dew. Breathe, Colleen, breathe. \"Are you allowed to bring someone from outside West Orchard?\"\n\n\"Sure, there's always some girl... Who brings her... Public school... Jock douchebag... Boyfriend, isn't there?\" She punctuates every few words with quiet hiccups.\n\n\"In that case,\" I say, putting my hand on her knee as we pull up on the street in front of our house, \"Lynn Elizabeth Singleton...\"\n\nShe turns, confused because no one ever uses her middle name unless she's in trouble.\n\n\"...would you do me the honor...\" I continue, focusing my eyes directly into hers, willing her to connect with the feelings pouring out of me in buckets, \"...of allowing me...\"\n\nShe exhales.\n\n\"...to escort you...\"\n\nShe inhales.\n\n\"...to your senior prom?\"\n\nWhen at first she doesn't answer, I begin kicking myself and preparing my apology. I'm so sorry, that was extremely rude, I didn't mean it, oh fuck me what was I even thinking and fuck poetry for making me believe I had a chance, any chance at all, to make this work, and when I get to my room I'm going to tear that book into pieces, and soak it in water, and flush every word Yeats ever wrote down the toilet, and-\n\nHands covering her mouth, she murmurs something. One syllable, barely audible over the engine idling, the music on the radio, and the blood rushing through my ears at tsunami-level pressures exerted by my thudding heart, but I hear it clear as day. My little sister says, \"Yes.\"\n\n* * * * *\n\nMom doesn't look at me hardly at all during dinner, but Dad is surprisingly cheerful. According to his version of events, he single-handedly crossed two oceans, slew a half-dozen dragons, and recovered the Holy Grail, all before lunch, in order to land a whale. Said whale is the account of a local law firm composed of ambulance-chasing slime-balls, but even ambulance-chasing slime-balls need to keep track of all of the money they spend litigating against other slime-balls, and they're apparently paying Dad a not-inconsiderable sum to do so. Maybe I'll be off the hook for rent, but that's the least of my worries.\n\nLynn can't contain her excitement, and blurts that she has a date for prom in two weeks. Both Mom and Dad ask with whom simultaneously, then turn to stare when she announces it's me. Thankfully they keep it together enough to be supportive, at least until Lynn races off her her room after dumping her dishes in the sink. In my imagination, I see her picking up her phone and texting everyone in her contacts list to let them know she'll be attending.\n\n\"Colleen, what exactly do you think you're doing?\" Mom asks. Dad takes this opportunity to duck into the living room and catch the news.\n\n\"Escorting Lynn to her prom,\" I answer neutrally. \"Why?\"\n\n\"Frankly, that's what I'd like to know. I mean, do you think this is some kind of joke?\"\n\n\"No, as a matter of fact, I don't.\"\n\n\"Sweetie, I know you mean well, but this might not be the best way to show it.\"\n\nI roll my eyes. \"Mom, I'm hardly the first person in the history of high school proms to take her own sibling.\"\n\n\"Colleen, this isn't about you, this is about her.\"\n\n\"Why do you think I asked her, Mom?\"\n\n\"Wait, you asked her? I thought-\"\n\n\"If she'd asked me, I'd have said yes too. But prom's in two weeks. No one asked her last year. This is it: either she goes or she doesn't. You remember yours, right? Senior prom? You're not old enough to have forgotten it?\"\n\n\"For heaven's sake, I'm not senile. But...why you?\"\n\n\"Because no one else was going to. The least I can do is make sure she graduates from high school without thinking I got to do something she didn't.\"\n\nMom sighs, sets her elbows on the table like she's praying, and rests her chin on her thumbs. \"Colleen... You know the accident wasn't your fault, right?\"\n\nFuck. Why does she have to bring that up? \"No, of course it wasn't. I wasn't driving at the time, it was someone else. Here I am thinking it was my fault when it was really 'Not Me' all along.\"\n\n\"Sweetie, no one blames you for what happened. What on earth will it take for you to stop blaming yourself?\"\n\n\"I'll stop blaming myself when Lynn can run down the hall like every other kid who's trying to beat the bell. This isn't an episode of Family Circus, Mom, you can't blame Ida Know. I was there, you weren't, end of story.\"\n\nMom's palm strikes the table a solid blow. \"That's not the end of the story, Colleen Alexis, and some day you'll get that through your thick skull. The man who ran that light was drunker than-\"\n\n\"-Dad last night?\" I interrupt her before I even realize what I'm doing, and as soon as it's out of my mouth, I wish I could take it back. She wouldn't look half as startled if I'd smacked her across the face.\n\n\"Your father,\" she begins levelly, \"is under a lot of pressure with his job at the moment. So yes, things are a little tense right now.\"\n\nOhhhhh shit... \"Mom, I'm sorry, I didn't mean-\"\n\n\"But!\" The word comes out as a single sentence, cutting me off. \"He and I have also been married for twenty-four years. We're allowed to disagree with one another, and yes, even fight, without you playing referee. And much as you might think you're an adult, young lady, you have an awful lot to learn about relationships. Part of being a child is learning how to talk, Colleen, but part of being an adult is learning when to keep your mouth shut.\n\n\"Now. I hope you know what you're doing with Lynn. I know you're close to your sister, but this is moth-and-open-flame territory, and I swear to whatever God might be listening: if this is some sick joke, if you're not completely serious about her feelings, if she comes home and I learn you have in any way ruined her night, there will be hell to pay.\"\n\nThe last six words come out as barely a whisper, and I know it's too late. The damage has been done, and all I can hope to do now is avoid Mom long enough that she cools off, so I head for my room.\n\n\"I tore up that check you left,\" Mom says just as I reach the hallway. \"But don't get too comfortable in your room. I can always reconsider.\"\n\nFlopping down on my bed, I thank God tomorrow's Friday. I'm not sure I could take another week like this one.\n\n* * * * *\n\nI assumed it'd be my responsibility to see Lynn got everything she needed, given Mom's initially frosty reception. As it turned out, not only were Mom and Dad willing to help, but Lynn flat-out barred me from doing anything with her that was at all prom-related. She's been tight-lipped about the whole affair, only telling me what type of corsage she wants (wrist as opposed to pin-on), and what color her dress is (green). With that in mind, I've spent the last two weeks scrambling for suitable attire. It hasn't been easy, but I've got everything assembled:\n\nDress -- Cobalt blue prom gown, strapless, ankle length, bead-wrapped waist, long slit to show some tasteful leg when walking.\n\nShoes -- Dyed blue flats, peep-toe style, one ankle strap, small golden flower design on the instep. Learned my lesson with heels last time\u2015never again!\n\nNails -- Manicured/pedicured to perfection with bright blue polish infused with silver sparkles, and a layer of clear-coat to prevent chipping.\n\nEarrings -- Silver studs, square, simple, elegant.\n\nBra -- Black, strapless, multi-way. You'd be amazed what a bit of push-up can do for a B-cup. Well, I'm amazed at any rate.\n\nPanties -- Dark-blue, black-lace-trimmed, cheeky cut.\n\nAnklet -- Sterling silver chain composed of linked hearts, worn on right ankle for a bit of flair.\n\nNerves -- Shot all to hell. I wasn't even half this nervous with Brian, but maybe that's because I knew we were going just as friends. This is... It's like winning a hundred bucks from lottery scratch-off tickets, only to learn the money's good solely for additional scratch-offs. I got lucky the first time, but now I'm crossing my fingers to hit the jackpot. I'm well aware the odds of winning big on a scratch-off ticket are not at all in my favor. So why can't I keep my eyes off this particular prize?\n\nMaybe it's because I'm spending less time with my sister. Lynn's gone so far as to have Mom drop her off early at school and pick her up afterwards so they can go shopping and set up appointments. The one time I tried to ply Mom for information, she shot me a look that could have cracked granite at twenty yards. I don't even get to enjoy our morning Q&amp;A in the shower, since they're gone before my alarm goes off. That's OK though; with all the prom-related stuff I haven't had much time to read. I got as far as picking up a collection of Yeats' poetry for my Nook and skimming roughly a dozen pieces before real life got hectic. So much for impressing her that way.\n\nNow it's come down to this, I've done all I can, and still I'm not sure it's enough. What if, despite the fancy hair style, the mani-pedi, and the make-up expertly applied with assistance from my friend Sara who knows more about this stuff than I ever will, she still can't see me as more than just 'Collie'?\n\nMore to the point...what if she can?\n\nDeep breaths, Colleen. Deep breaths. In just under an hour, we have to get into the car and drive to the hotel. Before that, I have to open this door, exit my room, walk to the den, and stand before my parents for all the fussing and the pictures. I've checked myself in the mirror a dozen times, and there's nothing out of place. I couldn't look better on my budget if I tried.\n\nHer corsage, freshly cut and cool from the refrigerator, rests in its box on my dresser. No more excuses. No more delays. This happens tonight or not at all, and either way I have to accept the outcome. I hear you in my head, Mr. Yeats: 'Have you but courage equal to desire?' Well, we already know I've got the desire.\n\nThere's the door, Colleen. Reach out, open it, step into the water, and see where the stream takes you.\n\nWith one final glance towards the mirror, I pluck the corsage from its box, spread my wings, and take the first step into the rest of my life. How am I doing so far, Mr. Yeats?\n\n* * * * *\n\n\"Close your eyes, Collie,\" my sister orders from down the hall, and I comply. \"Does she have them closed, Mom?\"\n\n\"Yes, they're closed,\" I growl. \"Good God, what's the big secret? I'm taking you to prom, not walking you down the aisle.\"\n\n\"Colleen, be nice,\" Mom says, but in a tone indicating she's too excited to play the disciplinarian. \"She worked hard getting this right.\"\n\n\"I did too, but you don't see me-\"\n\n\"Shhhh,\" Dad hisses. \"Here she comes.\"\n\nI listen to the sounds of Lynn's footfalls until she reaches the den. I hear her step into the room, and Dad and Mom both go nuts telling her how pretty she looks. Dad starts fussing about how he's not sure the camera battery's charged, Mom's giving him the 'You had one job!' lecture, and I just can't take it any longer. \"Is anybody gonna object if I open my eyes? Or is that still against the rules?\"\n\n\"Open sesame,\" Lynn says. Like the mountain in 'Ali Baba and the Forty Thieves' I obey, and my first thought, which I barely manage not to blurt out, is, 'Holy shit!'.\n\nEven at her most dressed up, Lynn looks insecure and out of place. As a little girl, she turned her nose up at skirts, fussed like a badger if you tried to get her into a dress, and woe betide the person who came between her and her Reeboks when formal time was over. My sister's wardrobe consists almost entirely of t-shirts, capri pants and jeans, stuff she can wear that doesn't call attention to her leg. No wonder she was keeping this a secret\u2015tonight, that all went out the window and I can't help devouring her with my eyes as she does a slow catwalk turn.\n\nHer makeup, what little she used, is perfect. Mascara to thicken her eyelashes, a bit of concealer here and there, and some pink gloss to make her lips shine. Her hair looks like something Jennifer Lawrence would wear to the Oscars: a formal updo, pulled back from the front and wrapped into a complex knot at the back, held in place by physics, not hairspray, the way only a professional stylist can manage. A pair of white-gold studs, her favorites, adorn each ear, and a silver chain choker adds flair without being gaudy. Like me, she's had both hands manicured, the nails ending in a glorious deep green polish. Her shoes, a pair of white strappy heels that will be killing her by the end of the night, reveal the same green hue on the toenails of her left foot. But that's just the show opener; the act everyone's paid to see is the dress.\n\nMy sister wasn't fitted for this dress so much as had it vacuum-formed around her. Emerald fabric contours every curve from her chest down, wrapping tightly at her waist and only giving breathing room once it reaches her thighs. One strap across her left shoulder holds it in place, leaving her back exposed to the base of her spine, and her arms completely bare. Unlike my dress, which flows straight down to my ankles like a waterfall, this one goes to her knees with a sideways-skew in the pleat before coming to a full and complete stop, leaving both legs on display.\n\nShe's made no effort to hide or cover her prosthetic, only using the flesh-colored sock and sleeve to wrap both the stump and the cover of the cup it rests in like normal, and this, along with the way she carries herself, makes her look that much more elegant. It makes a statement, as the fashionistas of the world might say, only in this case the statement is: 'This is who I am, and if you don't like it, fuck off.' If every last boy at this dance isn't wishing he'd asked to be her date by the end of the night, I'll eat my shoes and won't even use barbecue sauce.\n\n\"So...worth the wait?\" she asks with that crooked little grin that tells me she already knows my answer, but wants to hear me say it anyway.\n\n\"So worth the wait,\" I hear myself breathe as I step forward, slip the corsage out of its box, take her left hand, and slide it up and over her wrist. \"God, Lynn, you look...\" She meets my gaze with a steady smile of her own, as we stand, hand in hand. I've no idea what perfume she's dabbed on, but holy shit does it smell incredible. Fortunately for me Dad gets the camera working because never in all my life have I wanted to lip-lock someone as badly as I do right now.\n\n\"Alright you two, come over here in front of the door so we can get pictures.\" Mom directs us into a few different poses, one where we're holding hands looking into the camera, another where I'm standing slightly behind her shoulder, and a third, full-body shot with my arm around her waist and hers held up in front displaying her corsage. Dad suggests a couple of seated shots, so we shuffle over to the sofa to glam it up, until Lynn starts deliberately messing up the pictures by crossing her eyes or rolling her tongue. I join her, and my parents get the hint.\n\n\"Fine, fine,\" Mom says through a fit of laughter, \"get going. Be safe, call if you need anything, and send a text if you're going to be out later than two o'clock, okay?\"\n\nLynn and I chorus our agreement. Dad holds the door open and, with an overly Dad-like dramatic bow and sweep of his arm, ushers us out. The porch light begins flashing on and off repeatedly as if to indicate we're in an episode of the Twilight Zone until I hear Mom sharply intone his name and he stops flicking the switch.\n\nI hold up the keys. \"So, how would Her Mmajesty like to make her appearance this evening: the van or the car?\"\n\n\"The car,\" Her Majesty replies. \"I tossed some clothes in the trunk already in case we want to change afterwards. I just pulled your stuff from the clean laundry tub, so I hope that's all right.\"\n\nMan, she's more prepared for tonight than I am\u2015I wished like everything I'd packed a change of clothes for the after-prom stuff with Brian, who had thought ahead and brought shorts and a less-dressy shirt. It wasn't the end of the world, and I was far from the only girl who didn't have some less-formal wear to change into once we got to Rebecca's house for the after-party, but it still would have been nice to relax in something more casual.\n\n\"The car it is.\" Yeah, we'll likely be the only couple arriving at prom in a Neon, but limousines aren't cheap and much as Lynn obviously got our parents to flip for at least some of tonight's preparations, a limo wasn't in the cards without a half-dozen or so people to split the cost.\n\nI hold the door for her as she slides into her seat, get behind the wheel, and start the car. History...here we come.\n\n* * * * *\n\nThe Jefferson Statesman hotel has hosted West Orchard's prom every year for I don't know how long. Pulling into the parking lot brings back a flurry of memories from my senior year, but one look at Lynn is enough to dismiss them. On the walk to the front door, I watch as she swings her head from side to side, taking in everything: the sign reading 'Jefferson Statesman welcomes the Senior class of West Orchard for Prom Night!', the gaggle of other couples arriving, and the interior.\n\nA multi-tiered fountain, with a weird, slab-like, rough-cut sculpture in the center made of bronze or some similar material dominates the main lobby. The water runs down the front of the roughly three foot wide and ten foot tall piece and collects in the pool at its base. It then flows from the pool across the right side of the atrium through a channel cut into the floor to create a swift stream, and collects in another pool beyond a glass enclosure where it's presumably cycled back into the fountain. For special occasions like this, the hotel sets up a bridge which crosses the stream and employs a photographer who directs every individual or couple to the center of the bridge, poses them, and snaps a photo which you pick up later for a souvenir.\n\nThe photographer this year is a handsome, tuxedo-clad, man in his early thirties, who wears a grin (and bow tie) that says he's having the time of his life. He jokes with everyone, making pithy one-liners and bringing blushes to the cheeks of the girls with his seemingly endless capacity for double-entendre. Once he drops behind the viewfinder of his camera though (a Cannon EOS that cost more than my car, assuming the guy in front of us can be believed), he's all business, and has no problem snapping several shots to make sure the best one winds up in the subjects' hands. Much better than the freckle-faced dork we had my senior year, who barely said two words to anybody and behaved like he'd taken the job because he lost a bet.\n\n\"Hi,\" he greets us as we ascend the bridge. \"I'm Jeff, and this is the only memory I'm in charge of making tonight. The rest are y'all's responsibility. Now, what names do I place on the lovely couple's package?\"\n\n\"Lynn and Colleen,\" my sister says before I can open my mouth and explain that we're not really a couple in that way.",
        "\"Well, Lynn'n'Colleen, let's get the picture part out of the way so we can get you into the party.\" He gives us some directions, has us hold hands, bodies facing one another, but heads turned toward him as we stand between two vertical banners: one reading \"West Orchard Prep.\" with the year, and the other, \"Star-Crossed Lovers\", which explains why the backdrop for the photo is a black sheet with silver sparkles.\n\nAfter looking through the viewfinder, he brings his head back up. \"Young lady,\" he addresses my sister, \"I have a question which I hope you will in no way construe as uncouth, but which I, as a professional, am forced to ask anyway.\"\n\nLynn looks down, extends her right leg towards him, and wiggles the fake foot at the end. \"About this, right?\"\n\n\"Yes, ma'am. In-frame or out's all you need to tell me, though judging by the way you're dressed, I think I got the answer already. Since I'm just a shutterbug and not a mind-reader though, I'll let you tell me.\"\n\nLynn looks at me for a moment, and I see the wheels turning in her head. Prior to tonight her answer would have been 'crop it.' This is a different Lynn though, and with a confidence borne of a blinding, newfound inner radiance, she looks back at Jeff, held held high. \"Keep it in. All of it.\"\n\n\"Kid stays in the picture then,\" he says with a grin. \"You got class and brass, young lady. And you,\" he says, looking at me, \"are one lucky woman to have snagged her.\" Then he's back behind the camera, giving us the 1-2-3 count, and the flash goes off. He studies a screen beside him which shows the preview, taps the screen satisfied, then looks back at us. \"Alright, boring one's done. Let's get the ol' kiss-cam shot and then you can go do your thing.\"\n\n\"We, um...\" Lynn starts, but falters as the blush starts to spread across her cheeks.\n\n\"She's, actually, we're sisters,\" I explain, feeling the heat creeping into my face as well.\n\n\"Oh,\" Jeff says, before a devious grin curls his cheek. \"Want me take one anyway?\" he asks, one eyebrow raised. \"Freak out the folks at home, start some interesting conversations on Facebook...?\" Titters run through the line behind us, and I can't help laughing. As soon as I start, Lynn does too.\n\n\"Maybe...maybe later,\" she croaks between giggles, then drags me down the other side of the bridge.\n\n\"I'll be here all night,\" he calls after us. \"You just let me know! All right, all right, who's next? Come on up here, you two.\" It's a good thing the room on the other side of those doors is dark, because otherwise everyone would think I applied rouge to my cheeks with a putty knife.\n\nLynn says something, but I can't understand her in the midst of all the noise. The DJ is spinning a dance remix of the Doctor Who theme, and what his music doesn't drown out is obscured by the simultaneous conversations of over a hundred teenagers talking, laughing, snapping pictures with their phones, admiring one another's outfits, makeup, and hairstyles. It's barely-controlled chaos, and I feel right at home.\n\nThe next hour passes uneventfully as everyone arrives, meals are served (the spinach ravioli is just as good this year as it was three years ago), and those in attendance start breaking off into pairs to dance or cluster together in groups to chat. Most of Lynn's classmates recognize me as her sister, and though I have no idea who many of them are, I still connect with a name here or there as collaborators on a group project or from her friends list online. As I suspected, quite a few boys (and more than one girl) do double-takes when their gazes fall on Lynn. Much to my amusement, she rejects a couple guys who ask her to dance on the basis that if they wanted to dance with her, they should have asked to be her date. Finally tired of fending off advances, she suggests we find a corner to ourselves.\n\nThe floor is packed towards the DJ's table, both from couples dancing and individuals hanging out to make requests or watch the guy in action. The crowd's thinner towards the back, so we gravitate there, hand in hand. She locates a place she deems acceptable, and we spend a few amusing seconds trying to figure out arm placement. Finally since I'm taller, we settle for my arms looped over her shoulders, and hers around my waist.\n\nShe leans in to me, close and intimate, the heady scent of the rose on her corsage making my head reel. There's a part of me which still can't accept this is happening, even though here we are, just the two of us, off in our little corner. I look down to meet her gaze and she smiles back up at me, elfin and mystical, eyes twinkling in the diffused light.\n\nShe says something, and because I can't hear her over the music, I watch her lips carefully, noting every flash of her gloss and how they bend and curl around her vowels. I can make out 'thank you' in there, so I lean in close to her ear and tell her she's welcome, and ask if she's having fun.\n\nShe pulls me close and we swap positions, her mouth now to my ear, and says she's having a blast. \"Anything's better than just sitting at home tonight.\" She leans back, and I nod in agreement. That's an understatement.\n\nGlimmers of light play across her as she leans closer, resting her head on my shoulder, and for a moment I consider closing my eyes until I realize I don't want to. I don't want to close my eyes, I don't even want to blink, because every moment I'm not looking at her, enjoying her, seeing her so lost in the moment, creates a gap in my memory. And if there ever comes a day when these memories are all I have of her, I want my bank filled to capacity.\n\nThe song changes tempo from a slow melody to a fast-paced one, and I look up to see most of the couples breaking apart. A bunch of the more extroverted ones make their way to the center of the floor, showing off their moves. Neither Lynn nor I are any good at this sort of thing, so we stay out of the spotlight where the DJ is critiquing styles and threatening to come out from behind the mic and show everyone how it's done.\n\nI move one arm off her shoulder, and she leans up to my ear. \"Where you going?\"\n\n\"The song's over,\" I reply. \"You want to stop for a bit?\"\n\n\"Only if you do.\"\n\nI don't. Dear God, I don't want to stop. I want to stand here, on the dance floor, until my feet go numb and my ankles throb, with my arms wrapped around her, until the lights are out, the music stops, and everyone else has gone home. But I can't very well do that without everyone, my sister included, thinking it's weird, so I'll settle for the next-best thing. \"No, but if you need to sit down, it's cool.\"\n\n\"I don't wear out after one dance, Collie.\" Over the next few hours, she proves it.\n\n* * * * *\n\n\"Ladies and gentlemen,\" the DJ intones into his mic, \"I've received word the night is almost over. All those wanting one more dance, take to the floor and let's end things on a high note.\" A soft piano melody drifts up behind his words, promising a slow, somber, sensual closing.\n\nCouples file out from the tables and chairs to pack the floor for the last time, and Lynn and I find ourselves shuffled further into a corner. Like many other girls, she's long since abandoned her heels and is content to dance barefoot. While my feet don't hurt thanks to the flats, I kicked mine off about half an hour ago anyway because the cool wood feels nice. It also keeps me from towering over her so much now that she's lost the height from her own shoes.\n\nMinutes tick by, and I'm barely aware of the song, lost as we are in the crowd and darkness. I catch her eyes, hold them, and let them go as my gaze wanders to her nose, her cheeks, her lips.\n\nI get the feeling I'm staring too long, so I turn my head and look out over the room. No one is paying us any mind. They're all caught up in their dates, the music, the moment. A lone custodian with a dry mop is circling the periphery, getting a head-start on clean up.\n\n\"Guys, if you've been holding back, this is your last chance for that kiss,\" the DJ says. A soothing violin solo backs his words.\n\nI turn and accidentally meet her mouth with mine as she leans in to give me a peck on the cheek. Her eyes pop open, the surprise in hers meeting the surprise in mine head-on. Her recently-refreshed gloss glides over my lips, leaving a strawberry scent lingering in my nostrils.\n\nThis will stop any second now, I tell myself. She'll back off, or I will, and there will be a little laugh, an embarrassed chuckle, and oh my God she's not what do I do now I can't even feel my heart where how why this wasn't I can't breathe can't breathe can't-\n\nThe song ends and each of us takes a shuddering step back, strands of hair disentangling from our foreheads. I hear the DJ but it's all gibberish as I try to process what just happened. I see her eyes moving, looking over my face, searching for some reason and unable to find it because the reason is invisible. Her lips move, but nothing comes out. My throat's dry but my drink's across the room on our table, at least ten feet, ten miles, away but I can't move because I can't blink, and I can't blink because her eyes are back on mine trapping me in full-body stasis.\n\nA lifetime passes in the span of a few seconds.\n\nThe lights snap on, and the shock of sudden brightness finally breaks the spell she's cast over me as we're both forced to squint.\n\nSlowly her hands drop off my waist and I unwrap mine from her shoulders as she busies herself looking for her shoes and I do likewise, picking them up in one hand but not putting them on. She walks to a nearby chair and sits down, picks up a drink that wasn't hers, gives it a long look, then throws it back with a shrug.\n\nFuck...\n\nShe looks back at me, then stands up and wordlessly walks towards the foyer, her heels dangling off her fingers by their straps. All I can do is follow and hope she can at least salvage some good memory of this evening once some more time has passed. Mom's going to kill me. Might be time to start looking for that apartment after all.\n\n* * * * *\n\nOn the drive home there's so much I want to say, but I can't handle Lynn biting my head off. I can't handle the questions I know she wants answered. I can't think about how pissed Mom and Dad are going to be. All I can think about is poetry, Yeats, and how stupid I was for taking his words at anything less than face value.\n\nHaving courage equal to desire isn't a merit, it's a flaw. It gets people killed in wars. It's what gets your heart torn out when someone else rejects you. A poor substitute for some goddamn common sense when it comes to something like asking your own sister to prom. It means that when you put yourself in harm's way, you shouldn't be surprised when harm comes barreling right on through like it's got the right-of-way. I hear his tongue-lashing from beyond the grave: \"Did you not read the rest and realize she destroyed me? That was the whole point of the poem, yet somehow you got 'kiss my sister'? It's a miracle you didn't fail Mr. Perler's class, young lady.\" I don't have it in me to deal with disappointing my sister, my parents, and a long-dead poet all in the same night, so I shut down and just focus on driving.\n\n\"Collie?\"\n\nHer voice breaks my inner monologue, disengaging my auto-pilot. \"Huh?\"\n\n\"Where are we going?\"\n\n\"Home.\"\n\n\"It's not even midnight.\"\n\n\"Yeah.\"\n\n\"Are you tired?\"\n\n\"Yeah.\"\n\n\"Oh.\" She sits back in her seat as I coast to a stop at an intersection, waiting for the light to change, and the car falls back into silence as I focus all my attention on the bright red signal. \"I'm sorry.\"\n\n\"For what?\"\n\n\"You know. The...at the end there.\"\n\nShe can't even bring herself to say the word because it's wrong on so many levels. \"It was my fault, Lynn. I'm sorry.\"\n\n\"No, it wasn't. You didn't know I was gonna do it. It was spur-of-the-moment. Everyone else was making out, so I didn't figure they'd see, and I thought maybe it would be OK if I just gave you a little one. To say thank you.\"\n\n\"Thank me? What for?\"\n\n\"You know. For tonight. You always watch out for me. You didn't have to do all this, but you did. And I had a really good time. At least until I screwed it all up.\"\n\n\"What are you talking about? I'm the one who messed it up. I'm the one who didn't move, the one who froze up. You were going for my cheek and got my mouth.\"\n\n\"I didn't want your cheek, Collie.\"\n\nThe sound you just heard is my brain snapping in half.\n\n\"I was being selfish. I figured you gave one to Brian at the end of the night and I wanted to know what that felt like, to get that last kiss goodnight before the fairy tale has to end, you know?\"\n\n\"You...didn't want...?\" My brain's a manual transmission, and right now I'm stripping the gears trying to keep up with all my shifting thoughts.\n\nI see trembles in the moisture ringing her eyes. \"Just don't take me home. Mom'll know something's up and she'll blow a gasket if I walk in like this. Is there some place we can be alone for a little while? And talk? Please?\"\n\nWe've sat at the light so long it's cycled back to red again, but there isn't anyone behind us to care so I take a few seconds to digest this, cycling through places to go. There's that 24-hour steak burger joint, but dressed as we are we'd attract attention. Same as if we went to the all-night pancake place, or To Bean Or Not To Bean. Besides, other people in Lynn's class could have the same ideas and she wants to be alone. It takes me a little while, but I finally arrive at a solution, flip on my turn signal, and head down a side street.\n\n* * * * *\n\n\"Where are we?\" Lynn asks as we turn on to a dirt road flanked on a wooded area on both sides.\n\n\"Remember when we were little and Dad rented that plot for us to grow veggies and stuff?\"\n\n\"Yeah, kinda. I was, what, seven?\"\n\nWe turn off the road onto a gravel path that ends at a field, and I glide the car to a stop. About a mile in the distance, I see a light on in one window of the solitary farm house, but otherwise there's no sign of life. \"Well, I can't think of anywhere we'd be less likely to be alone this time of night than a rental garden in the middle of nowhere, so...\"\n\nI pop the trunk and drag out the blanket I always carry for weather emergencies, walk a few yards from the car, and unfold it under a nearby tree. I lean back against the trunk, and motion for Lynn to join me.\n\nFor a long time we just sit on the blanket, side by side, looking into the sky at the stars which occasionally peek out from behind the clouds. The silence is unreal, like someone dropped a soundproof dome over our little part of the world, with only the occasional zephyr to stir the leaves. Even the cicadas are quiet. I could close my eyes and sleep if I wasn't so wired with nervous energy. I think I know why she wants to talk, and I think she knows why I'm not freaking out, but neither of us wants to take the first step into that minefield. So we sit, watching the partial moon overhead, saying nothing.\n\nAfter a while, I feel her hand, soft and cool, close over the top of mine. She draws her legs in and folds them in front of her, feet angled to the right, and rests her head on my shoulder. The silence claws at me like a bear, but I can't give voice to the un-voiceable. I know what I want to say just not how, like a frustrated toddler, overflowing with things to say yet lacking the vocabulary to make herself understood. The pressure behind my eyes intensifies, and I keep fighting it back. If it breaks through my wall, I'm done for, but I'm besieged on all sides and can only maintain one area at a time. 'Use your words,' Mom would advise me when I was younger and too worked up to talk. Good advice at the time, now it's as helpful as saying, 'Use your tools' to a construction worker who misplaced his utility harness.\n\n\"She bid me take life easy, as the grass grows on the weirs / But I was young and foolish, and now am full of tears,\" Lynn recites to the sky, and inside I scream with happiness. I might not have my words, but she has hers.\n\n\"Yeats,\" I say, recognizing the lines from one of the poems in his collection that I've read. \"What do I win?\"\n\nShe looks over in surprise, then smiles to herself and leans against me again. \"I don't know. I never came up with a prize. Figured I'd have months before you got one right. Never thought the one you'd guess would be my favorite though.\"\n\n\"You mean Yeats?\"\n\n\"Mmm-hmm.\"\n\n\"Just luck. I read that one in my book a couple days ago. Short, easy to understand. I liked it. Makes a kind of universal sense, I think.\"\n\n\"Yeah.\"\n\nAnother long period of silence drifts by like an iceberg on an ink-black ocean. With a finger, I idly trace around the pattern of a bird printed on the blanket.\n\nHer head slumps against my shoulder. \"Collie...how long have you wanted to kiss me?\"\n\nI swallow. \"I don't know. A couple hours, I guess?\"\n\n\"Be honest.\"\n\n\"I am.\"\n\n\"No you're not.\" She sits up and pulls away from me. \"I've known you my whole life, and I told you before: I can read you like a book.\"\n\n\"I don't know what you-\"\n\n\"Damn it, Collie, you're a terrible liar and I'm not that stupid, so if you have even the least shred of respect for me, drop the act. No more pretending.\" Her demand stabs the air between her lips and my ears. \"How. Long.\"\n\nEverything inside me locks up and it's a good thing, because if it didn't I'm pretty sure the ravioli from before would make its encore appearance. Jammed in neutral as it is, my brain can't come up with a good lie, so there's no squirming my way out of it. I close my eyes, fail to steady my heart, and decide to walk off the plank with as much dignity as is left to muster. \"I don't know, and that's the truth. I can't give you an exact answer. It's been...it's been years.\" The bird on the blanket stares back at me, unblinking. \"I've been fucked up like this for years. I just don't know.\"\n\nThe siege is over; my city lies in ruins. All there is time for now are tears. Oddly enough the admission, drawn forth from the shadows and forced into the light, feels less threatening than before. It exists, it has been acknowledged, and despite the terrible truth, I tilt my head backwards and roll my neck as though feeling the release of a long-restrained pressure. The weight, as the clich\u00e9 goes, lifts from my shoulders. It is no longer my anchor, and I no longer drown under its power.\n\nThe words, \"I do,\" escape her lips as a murmur.\n\nI sniffle, fighting sinuses that have closed themselves off for some reason. \"What?\"\n\n\"I said, I do. I wasn't asleep that evening.\"\n\nThe hospital. Her room. Laying beside her in bed, so certain she was unconscious. Leaning over, whispering I would always love her, and would do anything for her. She heard. She knew. She's always known. The single most critical secret I've ever held in my life, the one I swore no one would ever learn, the last way I could protect Lynn, and I blew it years ago.\n\nShe shakes her head. \"I tried feeding you hints, you know? Little things, here and there, to feel you out, see if I got anything. Lines from poems with a similar theme. I suspected, but you were always so careful I couldn't prove it.\"\n\nSlowly the puzzle begins to snap together. The picture becomes clearer. Spending that night in my bed. Never worrying about being naked in front of me. Never shy when I helped her out of the tub. Did she even need my help after the last few years? Did everything that happened with that kiss all come about because she had feelings too, the way I did? How long had they been bottled up? How long did I spend with her, so close I could feel her skin on mine just by closing my eyes, so caught up in never making my desires obvious that I was overlooking every signal she broadcast?\n\n\"I thought I had the answer when you asked if you could take me tonight, but I wanted everything to be a surprise so I couldn't say anything else. When you and I were in the living room, before Mom started fussing about pictures, you looked me right in the eyes and I thought, maybe, I saw a glimmer. Then when the photographer guy brought it up, you pushed it aside so fast I thought I must have been wrong.\"",
        "\"What was I supposed to do, french you right in front of them?\"\n\n\"No! I mean, that's not what I... Signals got crossed, that's all. And afterwards, when it happened, I didn't want to stop it, but you seemed so angry, and...\"\n\n\"I seemed angry? You didn't say anything, and the look on your face was all, 'I don't want to talk to you right now.' It wasn't how I imagined it, that's all.\"\n\n\"Yeah, me either...\" Her shoulders shake as she lays her palms across her eyes and the words erupt from her like a stream-of-consciousness volcano. \"I just...I can't help it, Collie. I didn't mean to... But you've... Everything that you did, that you gave up, and you picked me up when I fell, and put your life on hold for me, and I lay in bed at night and all I can think about is what you said to me that time, and wonder where in the world I'd find anybody else who would, who would, throw everything aside like that for me, and the only answer I could see no matter where I looked... I just... Do you have any idea what it's like to be that confused? To carry a question around inside for years that I wanted to ask you and I hoped you wanted to ask me, but the consequences are so fucked up if I'm wrong that it's better to do nothing?\n\n\"So now we get to tonight and even though I know this is it, I have to do it tonight or it'll be too late, I can't imagine giving up what I have with you, I can't gamble it away like a drunk in a casino, but the point of no return keeps getting closer and closer, and the DJ says it's my last chance for a kiss, so of course I'm going to take it, and you, you freeze. All I can think is how badly I ruined the night but how good it felt, how mad you have to be, but how I can't take it back, and I can't let the moment get away from me so I either have to ruin everything or win everything when the coin toss feels rigged! I'm just so...I'm so...!\"\n\nShe spends a few seconds breathing, chest heaving, fighting to release that last word and I realize I haven't let out the breath I've been holding the whole time. I kick my lungs and they contract. There are a million things I could say, a billion thoughts darting through my head, but I can't say them all so I reach out my hand, grab the biggest, easiest-to-catch one, and blurt it out. \"I felt like I wanted to live forever and die right there at the same time. I was scared too, Lynn. I was scared too.\"\n\nEven the cicadas have gone quiet, waiting to hear what happens next. For a long moment, we disappoint them. Finally she looks up, holding my eyes with hers the way she did at the end of the dance, the way she did in the living room before the pictures. \"Are you still?\" She takes a slow, expectant breath.\n\n\"Still what?\"\n\n\"Scared.\"\n\n\"No,\" I whisper, turning from the tree and re-settling myself in front of my little sister. I don't bother to correct her. I'm not scared--I'm terrified, and she sees right through me. \"Are you?\"\n\nHer chin quivers slightly as she leans forward, touching my forehead with hers. \"No.\" She's almost as good a liar as I am.\n\n\"Then...since you didn't have a prize in mind, I'd like to submit a suggestion to the judges.\" The tips of our noses touch at an angle. \"A do-over from before.\" I slide my hand on top of hers and squeeze. \"Second chance?\"\n\n\"The judges,\" she murmurs, her lips closing the distance, \"approve.\"\n\nLike before, my heart stops and I feel like I can't breathe. This time it's for all the right reasons, and once her mouth meets mine, the next breath I take is not solely my own. Like two divers sharing one oxygen tank during an ascent, my breath becomes hers, and hers becomes mine.\n\nNo wrathful blast of lightning shines forth from heaven to smite us. No meteor descends from the atmosphere to obliterate us. A million floodlights do not suddenly bathe us in their blinding glare as the police converge to stop me from committing this sin. Not sure what I expected would happen, but I'm okay with this so far.\n\nI bring my hands to her face, sliding my fingers behind her ears, brushing my thumbs against her cheeks as I feel hers wrap around the back of my head. Her lips part, mine follow suit, and the warm sensation which floods through me is partly adrenaline and partly desire, but mostly her tongue.\n\nShe sits up straighter against the tree as I move closer with my knees, and push my tongue in to explore her mouth as she's just done with mine. There's still a faint trace of Sprite inside, mingled with strawberry lip gloss, seasoned with longing. Her other arm slides around my back, holding me as I draw her upward, suck her lower lip between my teeth in rapture, letting it slide slowly out of my mouth, and open my eyes to see she's done the same as she rises her her knees herself, wobbling slightly.\n\n\"Holy shit,\" she whispers after a few seconds, bracing herself against me, noses side to side. \"Good thing that didn't happen at prom.\"\n\nI nod against her cheek, laying my arms across her shoulders and hugging her to me. \"Somebody would've seen.\"\n\n\"Might have been worth it.\"\n\n\"I think it was more worth the wait.\"\n\n\"Even with-\" She can't even finish her sentence, pulling me close to her and kissing me harder than before for a few seconds. \"Even with all the stumbles?\"\n\n\"Mmmhmmm.\" I mean to say more, but my mouth is back on hers again before I even realize what I'm doing. A few minutes later, we're flopped down on the blanket, side by side, staring into one another's eyes again. In hers, I see infinities to which the night sky cannot hope to compare. Like an astronomer, I feel driven to explore them all with her.\n\nShe sits up and runs her hands through her hair, unraveling all the hard work her stylist put in earlier this afternoon, shakes her head from side to side, and looks back at me. \"Does it feel awkward to you?\"\n\nSurprisingly it is. I've fantasized about doing this with Lynn for years: holding her, kissing her, being with her, but it's always been an abstraction, a projection of what my feelings might be like given those circumstances. But that kiss, that first one at prom, even the one we just finished sharing, feels...well, I can't come up with a better word than awkward, so I guess we'll roll with that. \"Yeah, kinda. But I don't want it to be. I mean, are you sure you're OK with it?\"\n\n\"Are you sure you are?\"\n\nI lean in again towards her, touching her lips to mine. \"If you are.\"\n\nThe kiss ends, and I can feel it: that sensation lingering in the air, that mental roadblock hastily erected by our own brains that says, 'You don't do this stuff, it's not right.' Like a drowning woman trapped under a thick sheet of ice, all I can do is beat ineffectually with my fists; I can't break it no matter how loud I scream.\n\nShe shivers. \"I guess you and Brian did something like this, huh?\"\n\n\"He might have wanted to,\" I reply, \"but if he did, he was a good sport. After prom a bunch of us went to Becca Nishimura's place. We played darts, shot pool, watched a movie, a few people brought swimsuits and used the hot tub, and afterwards he brought me home.\"\n\n\"Oh. I thought you were out late 'cause you and he were...you know.\"\n\n\"Nope.\"\n\nShe pulls herself in close to me, running her hands across my back, and after a few seconds she's found the zipper on my dress. \"Then...will you? With me?\"\n\nGod, I want to say yes. I want to say yes more than a jilted bride standing at the altar. But I'm banging at that sheet of ice, yelling and screaming, and I'm running out of air. Give me an excuse, Lynn! Show me a crack, somewhere I can break this wall, because I can't find it on my own. I kiss her again and hold her there, scrabbling with my nails, kicking with my feet, listening for that tell-tale 'crack' to tell me I'm free, I can do this, and it's not wrong.\n\nShe slides the zipper down, parting my dress in the back, exposing my skin to the night air, and I don't fight her. \"Please, Collie,\" she breathes across my ear. \"It's the one thing you didn't do at yours.\"\n\nA seam appears in the sheet between us. Tiny, unobtrusive, but it's there nonetheless. Keep talking, Lynn, keep going.\n\n\"It'll be the one thing neither of us had, and we can share it together.\"\n\nThe seam widens, and I push against it with all my might.\n\n\"It's prom night. I know other people are gonna do this.\"\n\nThe ice creaks as new, small cracks spawn off the main seam, spider-webbing out in front of my face.\n\n\"You promised a long time ago...\" She kisses me again, then looks me in the eye. \"You said you'd do anything for me that I needed. So...I don't just want this.\"\n\nOne by one, holes appear before my eyes. I can suck in little breaths of oxygen.\n\n\"I need you to keep your promise, and I need you to do it now, before I chicken out, before the night is over, before I walk through the front door and everything goes back to normal. Show me this isn't wrong.\"\n\nAn explosion ripples through the icy wall, shattering my common sense into millions of diamond-sparkle shards that plunge, tinkling, to the ground around me as my sister, wise beyond her years, gives me the absolution I never could admit I needed until now. Thank you, Lynn, I want to whisper. Instead I move my lips back to her mouth, feeling no more barriers, no concern about being wrong, only a welcoming sense of home as her fingers move up the back of my neck, tracing little troughs through my hair.\n\nShe responds immediately, yanking the dress, baring my shoulders as I rush to untangle my arms from behind her back. The fabric races past my elbows, over my wrists, and off my hands, slumping on the blanket like an unconscious flunkie in a martial arts flick.\n\nI stand to let the dress slide the rest of the way down my body, and she follows me, holding my hands in hers as I draw her upright. Since I didn't see her put it on, I have no idea how to get her out, but I kick mine with one bare foot over to the edge of the blanket so it's out of the way. I wait a moment to see if she's having second thoughts, then bring my hands up to my chest, pop the four clasps on my front-hook bra, one at a time, and let it drop away.\n\nLynn slips the middle finger of her left hand under the strap of her own dress, lifts, and guides it over her shoulder. As soon as it's off, the dress peels from her body like skin shed by a snake. She steps forward out of it, takes my hand, and places it directly on her bare left breast as I finally register she hasn't had a bra on all evening. Her heart thuds as fast as mine, threatening to burn through the limited number of heartbeats we all have in record time.\n\n\"You're gorgeous.\" The words are out before I even register I've said them. \"I almost...said that in front of Mom and Dad, there in the living room.\"\n\n\"I understood.\" She holds my hand to her chest, and sighs as I give her breast a soft squeeze. \"Don't think they did though.\"\n\n\"Where on earth did you find that dress, anyway?\"\n\n\"Collie, if you say one more thing about clothes I'm not wearing, I swear I'll-\"\n\nI lean in and put my mouth to hers, cutting her off. She's right. What the hell am I thinking? Leaving the dress on the ground where it belongs, I brush a thumb over her nipple and relish the shiver it produces. My mind wanders back to that day when I watched her exit the shower, the little drop of water dangling off the tip of her nipple, and the raging desire to lap it off. Unable to stop myself, I disengage from the kiss, bend forward, and lick.\n\nI feel her hands on the side of my head holding me in place as she pushes her chest forward. \"Again.\"\n\nMy tongue slides over tiny goosebumps as it caresses her nipple a second time, and she releases the breath she's been holding. Unbidden, I do it a third time going left to right, and she strokes my cheek. Her skin tastes a little salty, a little sweet, a little like cinnamon, and leaves my mouth dry in the aftermath. So close to her chest, I catch faint whiffs of what's left of her perfume as my nose bumps her. The nipple seems to strain forward, pleading for more attention. Circling my lips around it, I caress the pink bump again with my tongue, then push my mouth against her skin. Fantasy and reality collide in a burst of kaleidoscopic energy as my imagination no longer has to fill in the details of what it would feel like to do this for real.\n\nI feel her arms fold around my head, hugging me there, not letting me move, barely letting me breathe, as I lavish attention on her breast. I want to tell her how much I've fantasized about doing this, how many times I've soaked my panties, pleasuring myself to this very scenario, and now that it's coming true I wonder how long it will be before my 'rational alarm' goes off and wakes me from the dream.\n\nThey say you shouldn't shatter someone's carefully constructed delusions about the world, so I let that part of my brain go frolic through the garden, picking daisies or whatever it wants to do. The irrational half of my brain takes a brief glance over the top of its sunglasses, then leans back against the wall, drags on its cigarette, and blows the smoke towards the heavens as if to say, 'Whatever, man. Not my circus, not my monkeys, know what I'm saying?'\n\nHer hands around my jaw beckon my head upward, and with the taste of her skin still imprinted on my tongue, she puts her open lips against mine. Everything turns to kaleidoscopic blurs and the ground falls out from under me as I experience 'the kiss'.\n\nNot all kisses are created equal. I've heard Eskimos have hundreds of words for snow. I don't know if that's true, but I do know American English has a woefully inadequate number of ways to describe the act of two mouths meeting. There's the standard 'kiss' of course, and its more exotic cousin the 'French kiss'. Then there are the cutesy, playful words like 'smooch' and 'peck'. When you get right down to it though, the truth is there's no word for what I'm trying to describe. You either know it or you don't, and if you don't you won't know that you don't until it happens. That's the truth of 'the kiss'.\n\n'The kiss' is like somebody setting off a neuron bomb between my lips. It jacks my heart, probes my spine, shoots down my legs, across my shoulders, out to my fingertips then rebounds back the way it came like a pinball caught in an endless triangle of bumpers. 'The kiss' signifies there will never be another one like it, and you better remember it, because just like losing your virginity there is no second time and no going back. It's a bold statement, unmistakable, like Hancock's signature on the Declaration of Independence, telling your partner your intentions. You save 'the kiss' for one special person, the one you want to spend the rest of your life, body and soul, with. It can be delivered at the altar publicly, or on the honeymoon in private, or any time before or after those events, but there's a caveat: once bestowed, 'the kiss' is forever. It can never be taken back, never reclaimed, never returned. A piece of your soul detaches, like a single angel's feather, blows on the steady and eternal winds of love, and takes its place in the empty spot left within your partner who has willingly given the same gift to you.\n\nInstant. Irrevocable. Eternal. In that instant, I experience 'the kiss'. I am bonded now to her, all the days of my life, and even if we separate, if life takes us down a different path, my heart, my spirit, my very essence forever belongs to her. My lover. My soul-mate. My sister.\n\nMy God...\n\nWhat have I done?\n\nWhat has she?\n\nThe answer comes to me in a heartbeat: we have done what we had to do. I hold her tightly, she embraces me, and 'the kiss' encompasses all. Galaxies rise and burn to star dust. Time folds in on itself and upends reality in a dimension so far from our understanding it may as well be beyond math as we know it. The crash, the accident, so many years ago broke us: her in body, me in mind, and both in spirit. It sundered that which cannot remain broken. Half a soul is of no use, as abhorrent to nature as a vacuum. And as my breath joins hers, as her tears join mine, the repairs begin.\n\nThe tip of each finger. The palm of her left hand. Her wrist. Inside elbow. Shoulder. Neck. Chin. Throat. It happens so fast, and yet so slow: I feel all of it but can't remember if the best sensations are my lips exploring her, or hers exploring me. My ring finger up to the first digit. Her sternum, between bare little breasts. An earlobe. I push myself against her back, squeeze her shoulder, kiss the very top of her spine listening to her slow inhalation. Her arms wraps around me, backwards, gripping the backs of my thighs as I embrace her likewise, fingers interlocked over her belly button, kissing across her upper back from one shoulder to the other. My heart jackhammers hard enough to pump blood for both of us and I want to know, need to know, that I could sustain us both with it if I had to. She sucks air in sharply through her teeth as my right hand cups her sex against her panties.\n\nI can't speak. She can't either. We're beyond words...at this point, what do you say that could make any sense? I count heartbeats, eyes closed, my hand between her legs asking the question I can't vocalize.\n\nNothing.\n\nHappens.\n\nEight beats. Two seconds. Two lifetimes, no, two goddamn motherfucking eternities. Her left hand curls around the back of my neck. I have my answer, and in response I close my hand over hers and squeeze, then gently unwrap her arm from behind my head, turning her around to get lost in her eyes again. Taking her hands in mine, our knees meet the ground at the same time.\n\nLaying down on the blanket, I guide her hips to mine, thread my fingers into the waistband of her panties, and she crawls, one knee at a time, over me, stripping the last threads of clothing down her legs, closing the last door I could use as an exit. Bit by bit my sister, trusting me more than I can even trust myself, draws the fabric down, down, down, past her knees, past her ankles (one flesh, one metal, but both hers), off one foot, then the other. Kneeling above me, eyes locked on mine, she watches as I place my hands on her hips and lean upward, inching closer and closer to the core of everything that makes her a woman, until I can stand it no longer. Eyes closed, I feel the soft tickle of her hair on my nose until my mouth makes contact, my tongue darts out to explore, and her fingers circle the back of my head, holding me in place as she breathes my name.\n\nI've never done this before. I've never had this done to me before. I should feel like a frightened explorer, whose native guides have abandoned her in uncharted territory, where any wrong move could lead to tragedy. And yet...\n\nI slide my tongue deeper inside, tasting my sister, learning more of what it means to be Lynn and less of what it means to be me. With each soft stroke, each slow caress, each exploratory probe, my mental map resolves into clearer view. She tastes of dew, of clementines, of clouds and cotton candy and a hundred other secret sensations no one else could understand. She shifts her weight, moves her legs apart, beckoning me to continue my journey, and I comply. Another kiss. Another lick. Another taste. Another shudder (hers or mine oh god I can't tell).\n\nMy eyes are closed but my other senses work just fine. Her breathing tells me her mouth has gone slack. The hand she took from behind my head I feel now slinking down my stomach, over my belly button, her fingers now beneath my underwear, inching towards their goal like a cunning serpent flicking its tongue over my body as she pushes forward, willing me to surrender as she has.\n\nShe moans again as my tongue finds a sensitive spot, and I push gently, moving up and down. Her hand tugs at my panties, but it's a feeble gesture: the angle is all wrong, she can't get them out of the way without moving, and she's in no hurry to do that as I brush her clit with the tip of my now-pointed tongue again and again.",
        "I hear my name, breathed out halfway between her mouth and her nose, and she shakes, balanced above me as she is on both knees. A curse. My name. Another curse. My name, the last syllable of which dissolves into a long-vowel moan of pure ecstasy followed by a gasp. Frustrated she shoves her fingers into my underwear and tries her best to match me, but I tighten my grip on her hips, my own fingers curving around into the soft flesh of her derriere, and open my mouth wider, pushing my tongue in further, driving it inside her until I've stretched as far as I can.\n\nShe takes a long breath and holds it...every part of her clenches, one hand making a fist beneath my panties, the other making a similar fist with my hair. Her thighs lock in place so firmly she actually manages to hold herself still for a few seconds, tightening every muscle in her back, her abs, her pert little butt, squeezing desperately, bracing herself in a bid to ward off the coming tsunami.\n\nFor a second, I pause. No movement, no pressure. I see her mentally, jaw slack, nose skyward, eyes squeezed shut hard enough to make them water, back bent, pushing her breasts towards the moon's yellow haze. I burn the image into my memory. Lynn, my sister, my angel, my partner, dangles on the precipice of eternity, awaiting absolution...teetering...tottering...frozen in the agony of knowing what's coming and powerless in the knowledge it is out of her hands, until finally, finally, I step forward, place my hand on her shoulder.\n\nAnd.\n\nSoftly.\n\nPush.\n\nAt first, I don't know what's happening. I've never seen my sister climax before. I don't even know if Lynn pleasures herself, although I assume she does because when I was her age, I did it all the time. There's a gasp, followed by the quiver of her thighs, and another gasp which she arrests by biting forcefully into her lip, turning it into a low purr and a series of rapid puffs from her nose. Then I understand: she's fighting it, trying to keep it from overwhelming her, playing a game of orgasmic Whack-A-Mole as the pleasure finds a new exit each time she closes off the previous one. She fights and fights, pulling my hair even harder, nails digging into my skin, as I massage her clit with my tongue.\n\n\"Let it out,\" I say, taking my mouth off her sex long enough to whisper the words before I return my attention between her legs.\n\nStill she struggles. Now she's the one banging frantically at the ice just as I was before, fighting an urge she doesn't understand.\n\n\"There's no one else to hear,\" I whisper again, running my fingertips gently down her sides.\n\n\"Collie...\" she manages.\n\n\"Just us,\" I soothe, stroking her back. \"Just you...just me...\"\n\n\"Co-Collie...I'm...\" She clenches again, raising herself up on her knees, away from my mouth.\n\n\"Let it out, angel...\" My palms caress her hips, my thumbs massage the area below her belly button.\n\n\"Col-leee...!\" She's upright fully on her knees now, struggling for all she's worth, and I swear I can hear every snap, every pop, as the shield crumbles all around her, leaving her vulnerable.\n\n\"I love you, Lynn.\" She can escape my mouth, but not my tongue.\n\nThe most beautifully expressive use of the f-bomb I'll ever hear blasts from her lips as she holds my head in place and lowers herself again. Following on its heels are a series of rapid inhales and exhales, each one holding different words, new words, sometimes my name, sometimes not, sometimes just a cry as my tongue tickles her clit and coaxes the climax out of hiding and into the starlight. She gives herself over to the moment, permitting the wrong to become right, accepting her own sister is the cause of it all.\n\nI grab her calves, one soft and supple, the other firm and unyielding, and hold her as she holds my head, letting the waves of heat and pleasure and panic and deliverance carry her away into a world where there is no pain, no rejection, no disorder, no chaos, only us. Her and me. Lynn and Colleen, stranded on a desert island comprised of nothing but beautiful sunrises, perfect sunsets, and clear night skies that stretch into infinity.\n\nI make love to my sister until she's utterly spent, until she's released my head and collapsed to the blanket in surrender, knees, elbows and spine reduced to jelly. Slowly, carefully, I shift around until she's laying beside me, head on my breast, my hand on her stomach just the way she wanted it when we last shared my bed which now seems ages ago.\n\nI listen to her breathe, wondering if she'll fall asleep, wondering what time it is, wondering if Mom and Dad will be upset if we get home late, slowly letting the rest of the world back in until I realize someone's saying my name. I snap back into my head. \"Hmmm?\" I look over to see her eyes, half-closed like little moons, looking into mine.\n\n\"Do you have any idea what it feels like when you want to clench your toes and can't?\" She shifts her artificial leg over the blanket and prods my own with it.\n\n\"Um, no, can't say as I do.\"\n\n\"Good.\" She takes a deep breath and lets out a long, contented sigh. \"I love you too,\" she whispers, closing her eyes and settling back down against my bare chest. I brush the errant strands of hair from her cheek, take in the angle of her nose, and nod. Though she can't see me, I watch her lips curl into a smile of understanding. She is mine. I am hers. 'The kiss' cannot be undone. As I turn my gaze to the heavens, I promise to fight any who would try.\n\nFive minutes. I'll give her five more minutes, then we should get dressed.\n\nHer lips press against my skin, a soft kiss upon my neck. I revise my estimate up to seven.\n\nHer hand scoots down my tummy, over my underwear. My panties, already damp from before, stick to my skin anew as a fresh wave of moisture gathers. Ten minutes, no more.\n\nThirty seconds later, my hips jut into the air and I'm shoving my underwear down my calves, using one foot to push it down the opposite leg, then switching off, as Lynn pulls my nipple into her mouth and starts to gently suck. As she pushes her finger inside me, I give a few half-hearted kicks, trying to disentangle my panties from around my left ankle where they seems determined to stay.\n\n\"Your turn,\" Lynn whispers as the weight of the universe presses down on my chest and I lay back to open myself up to all the possibilities.\n\nShe kisses down my stomach and oh my god, this is gonna take longer than fifteen minutes isn't it, but I feel her finger inside me now her mouth on the inside of my thighs and holy shit yes this can take all night, all night, all...night...!\n\n* * * * *\n\nThe drive home is all flirty banter and giggles, just two girls who've broken barriers most people never will, bonded over sharing something forbidden, and lived to tell the tale. Every few seconds, I can't resist stealing one more glance at her. Every look at the brightness in her eyes, the can't-keep-a-secret grin on her face, the pursed lips that boast of knowing something no one else ever will, makes me feel the last few hours all over again, and helps me forget this is something that cannot last.\n\nShe closes her eyes and rests her head against the seat with a sigh. What we have is doomed, a firefly trapped in a jar with holes poked in the lid. Even under the best of circumstances, even if I followed her to college, even if it survived the long distance, even if Mom and Dad would be 100% on board with it (and trust me, we'll see Hell coated with a fine layer of permafrost before that happens), there are things the world just won't let be. I'm not her future, much as I want, and she cannot be mine.\n\nThat doesn't mean we can't enjoy our time before she leaves, the less-rational side of my brain argues. With this, I agree: she's got all summer before she moves north. There's no saying what can happen in these next few months. But even if we sleep together every single night, an abject impossibility given our living arrangements, that leaves ninety-some days between tonight and when we load up the van. Fewer than one hundred nights between now and goodbye.\n\nCollege will change her, distance will change me, and the world will keep turning just the same. The romantic in me will continue to search poetry for the wisdom to understand when it's time to let her go, and I pray she eventually recognizes she'll need to do the same. Tonight though...tonight we have what we have, and the world can pry that from our cold, dead fingers.\n\nLost in thought, my concentration lapses. I hear Lynn yell my name as I roll right into the intersection, ignoring the outstretched hand of the bright red stop signal. Headlights glare through the passenger-side windows. My heart falls into my stomach and I mash a pedal to the floor, hoping against hope I've done the right thing this time.\n\n* * * * *\n\nIt's mid-morning when I reach the small churchyard cemetery. Soft wisps of cloud drift lazily through the perfect blue sky while the sun shines serenely above. I ignore the other people present as I weave up the path until I reach my destination. The gravestone is simple, a vertical slab of stone bearing a name, two dates, and an epitaph. If you weren't looking for it, you'd pass by without a second thought.\n\nFor a while I regard the well-manicured lawn, the occasional tribute of flowers, lost in contemplation. It doesn't seem real, but here I stand. Life's funny like that. One month earlier, you don't see yourself planning to spend part of a summer day standing in a cemetery, and then suddenly, boom, here you are. And even though I swore up and down I wasn't going to cry, when I look back at the unassuming, unobtrusive stone marking the plot, I feel my eyelids swelling.\n\nBehind me I hear footsteps on the path. \"Sorry, Lynn,\" I whisper as a hand takes mine and gives a squeeze.\n\n\"Just couldn't wait, could you, Collie?\"\n\nI look over to see her grinning up at me like the Cheshire Cat. \"Hey, this is the whole reason we're here. I'm not the one who got distracted on the way in.\"\n\n\"It's not my fault! I didn't know they'd have a bookstore.\"\n\n\"Uh-huh. Anything good?\"\n\n\"Not really. I mean, they have a bunch of, like, pictures, and poetry books and stuff, but nothing I haven't already read.\" She looks back at the gravestone, so remarkable in its unremarkableness, and mouths the words of the epitaph cut into the front:\n\nCast a cold Eye\n\nOn Life, on Death\n\nHorseman pass by.\n\nWords are unnecessary, so I wrap my arm around her shoulder and pull her closer. Memories of that night after prom return: the approaching lights, the squeal as I stomped on the brakes, the blare of the horn on the other car as they swerved around us and continued through the green light. In an instant, it could have been taken away from me. My sister. My love. Everything. But the universe had other plans. The horseman passed by.\n\nShock gave way to nervous laughter, which gave way to us pulling over to the shoulder after the intersection. We hopped out, carefully avoiding the halo cast by the streetlamp, and embraced yet again. I couldn't keep my hands out of her hair, she couldn't keep her mouth off mine, and I'd no desire to push her away. Pressed against the passenger side of the car, we shared a kiss that transcended ages. Every worry from before exited my mind like bits of paper blown off a counter top. In that moment she was mine, I was hers, and nothing, neither distance, nor time, nor common sense, could separate us.\n\nThe idea to visit Ireland came a few days later. I kept it to myself until I looked into the cost, but comparing what I had saved to the potential expenses revealed I had set aside more than enough over the last few years to make it work. I cleared it with Mom and Dad before telling Lynn, and she was head-over-heels at the idea. Anyone who loved Yeats as much as she does would jump at the chance to visit his grave, and if it was going to happen, it should be this summer.\n\nWe stay there, holding hands, each lost in our own thoughts until a large tour group approaches, then take our leave and wander the grounds, reading the ancient stones, listening to the bells of the aged church, shading under a massive tree. I never believed in magic until we came here. Ireland is just...so old that it's new, and so new it's old. I didn't understand until I stood in a cemetery dotted with graves pre-dating the States. I didn't understand Yeats's passion for his country which motivated so much of his writing until the first night when Lynn and I lay in bed at the inn, luxuriating in a bout of post-bliss togetherness, gazing out the window at the setting sun, running my fingers through her hair, and then...I just did. Love truly does trump all here\u2015at home we're cautious: furtive glances over dinner, sharing a hurried kiss in the hallway, or stealing into the other's room in the middle of the night and crossing our fingers nobody hears us and knocks on the door.\n\nHere though, there's none of that. The hills, the grass, the sky, they don't judge. The sun gives permission to be who we are every morning when it shines in our faces to wake us up. It's inexplicable, it's magical, and that's all I can say. Indiana might be where I live, but somewhere in my blood I know Ireland is home and it won't be denied. I'll be back here one day, with her at my side. What we'll do, where we'll live, or even how we'll make it happen, I know not. Mom and Dad will shit bricks when they find out we want to move overseas, so it's hardly a conversation I'm anxious to have. I think for now I'll trust in the fairies and leave the magic in their capable hands. It will happen when it's meant to, and I'm patient enough to wait...at least for a little while.\n\nThat's a story yet to be written though. Lynn has college; I have the bookstore, where I think I'll inquire about taking over the poetry section for a while. Yeats brought us together...who knows what else the world of verse holds? She's taught me more since we continue to play her game every morning, even here on vacation, even though there's no shower, just a claw-foot tub big enough for us to share, even though I won the prize and don't need to guess correctly to win her kiss any longer. I've discovered two new favorites.\n\n'The heart has its reasons, which reason does not know.' Blaise Pascal. She quoted it at me in the original French of course, because she's Lynn, but damned if I can remember how that went. Doesn't matter, the point is it's just one more thing he could have said about the two of us. Apparently mathematician philosophers could be poets as well. Who knew?\n\nShe's curled up in one of the high-backed chairs near the little fireplace, naked under a giant pink cotton robe, head buried in 'Gaelic For Dummies'. \"Good luck with all those silent consonants, nerd.\" She throws a finger without even looking up, then realizes where she is and shifts it to the 'two-finger salute' that means the same thing on this side of the pond. I maintain decorum for roughly two seconds before I crack up and she lowers her hand. \u00c9irinn go Br\u00e1ch, Lynn. Back to the journal.\n\nThe second is, if anything, scarier in light of the simplicity of its truth. 'Some rise by sin,' wrote Shakespeare, 'and some by virtue fall.' If I were good at riddles, this would be the perfect time for something like, 'When is a sin not a sin?', but I'm not so I won't insult your intelligence. I know what I know, I know what I feel, and whether it's right or wrong isn't for anyone to judge. Ultimately whether we rise or fall (by sin, or virtue, or some other means) is yet to be determined, I suppose. Either way she and I will do so together, as only lovers, only soul-mates...only sisters...can. "
    ],
    "authorname": "Areala-chan",
    "tags": [
        "lesbian",
        "older sister",
        "amputee",
        "younger sister",
        "prom",
        "dance",
        "first time",
        "poetry",
        "romance"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/crash-into-me"
}