{
    "title": "The Office Hottie Ch. 02",
    "pages": [
        "When I got home I threw my purse and jacket on the couch, went straight to the bathroom and started a hot shower. I hurriedly stripped off all my clothes, dumped them on the floor and stepped into the shower, savoring the hot water cascading over my body. \n\nThe self-service session in my car on the way home had been a workout and I was sticky with sweat. I stood under the hot water, my hands rinsing the day off my face, my hair, shoulders, chest and boobs. I turned around letting the hot water beat the back of my neck and shoulders while rotating my head to stretch the muscles, the heat of the water relaxing the knots in my neck. \n\nI pulled a couple pumps off the shampoo bottle and rubbed it in, lathering up and working it into my scalp and the ends of my hair. I massaged the shampoo on my head with my fingertips, luxuriating in the feeling as I kneaded the tension out of my mind. The hot water rinsed the shampoo out of my hair and I washed my face then turned the heat up a notch. Steam cascaded throughout the shower as I lathered up a bath lily and rubbed it over my neck, my chest and my arms, then my boobs being gentle with my sensitive nipples. I scrubbed it down my belly and my legs washing off the day's frustrations. I examined the bruise near my knee left by the steering wheel, it was pretty small and would disappear in a few days. I took my razor and shaved off the little bit of stubble on my pubic bone that had appeared. I used to have a little runway there but it was just easier to shave the whole thing and be done with it. My ex loved it, too. \n\nI continued lathering my boobs with the sponge, delightfully wincing at the little sparks in my nipples as I teased them with the soft texture of the lily. They were hard and erect despite the heat of the shower. I ran my hands over my stomach, up to my soapy breasts, cupping them, massaging the lather around them, enjoying the feeling of my slippery mounds, my hard nipples between my fingers. \n\nThoughts of Kelly were strong in my mind and I closed my eyes, imagining her sharing my shower with me, feeling her hands caressing my slick body. I saw her in my mind with soap flowing down her tight little body, her soapy skin sliding against mine as we hugged and kissed, her large slippery tits rubbing up against mine. My hand massaged the soap on my boobs, my smooth belly, and found it's way down to my tingling pussy. \n\nI inserted a soapy finger inside and shuddered at the feeling that ran through my body. One hand massaging and squeezing my slick, lathery tits and the other sliding in and out my pussy. I've never been much into ass play but I fingered myself there, inserting a soapy digit inside. I did like the feeling of my fingers playing inside me, one in my pussy and one in my ass, one feeling the other separated by a thin membrane as they slid in and out. I lifted a leg on the side of the tub with my hand behind me and inserted two fingers really loving the double penetration; the fingers of one hand in my ass and my pussy gliding in and out, the other caressing my soft tits and nipples. I felt my heart racing and my breathing labored, the heat and the steam in the bathroom was intense, the temperature of my body feverish. An orgasm was starting to build and I held it off, wanting it for my bed. \n\nI did a full rinse of my hair, body and pussy then shut the water off and wrung the excess out of my hair. I stepped out of the shower, kicked my clothes out of the way and grabbed a towel to dry off. The steam was thick and had turning my bathroom into a sauna. I dried off, wrapped the towel around my hair and flicked the fan on, shivering slightly when cool air ran across my naked body, my fully erect, tingling nipples. \n\nI reached for my favorite lotion bottle; sandalwood and shea butter. My mother introduced it to me some time ago and I really enjoyed the scent and feel of it on my skin. I squirted some on my hands, rubbed it together and applied it to my arms, belly, and legs. I stood naked in front of the mirror wearing a towel on my hair, I admired the tan skin of my boobs, warm with my arousal, I rubbed lotion on them, the scent of sandalwood heavy in the air, my slippery nipples to sliding through my fingers when I pinched and pulled them. I raised my arms over my head stretching, watching my boobs stretch with my arms, turning from side to side admiring their profile. \n\nI love my boobs; they have a nice shape and I like how they feel in my hands. I like the envious looks I pretend I don't see from girls in the locker room at the gym. They're a good size without being too big, still perky and haven't started to sag yet, my big, dark pink nipples love to be teased and I reminded myself again about getting them pierced. \n\nI was uncertain though, I'd heard good and bad stories, one girlfriend got her nipples pierced and said it hurt like hell. It never infected or turned red but she never really got used to the pain and finally took the barbells out for good. A pity I thought, she'd showed them to me one day and I thought and told her they looked really nice. She hated them though, I guess very girl's different. \n\nI rubbed more lotion on my naked boobs, watching myself in the mirror, cupping them in my palms, slowly squeezing and massaging them, feeling my arousal rise even higher. I payed more attention to my nipples, rubbing circles around the small areoles, twirling the nipples with my finger tips. Electric pulses fired through my nipples into my boobs as I lightly rubbed the tips in circles. I sometimes can't keep my hands off my boobs, especially if I'm horny. I stood there looking at my boobs as I caressed them and rubbed the last of the lotion in. \n\nI was really horny now and couldn't wait to climb in my bed. I took the towel off my head and hung it up to dry, my boobs jiggled as I ran my fingers through my hair to remove the tangles. I picked my clothes up off the floor, walked naked into the bedroom and dropped them into the hamper. My stained panties had fallen on top and I smiled to myself looking at them, thinking of my parking lot play and let my hands roam over my naked body. It was such a sweet, exciting experience and I looked forward to my next adventure. My stomach growled in hunger but my pussy growled even louder. \n\nI lay down on the bed, my damp hair cascading over the soft pillow and pulled the warm blankets on top of me. My hands roamed over my naked body, thoughts of sweet Kelly being with me and I felt a little jealousy. Her husband was one lucky man being able to sleep with her, lie with her every night, fucking her whenever she needed it. I closed my eyes and turned on my side cuddling my boobs under the covers, imagining Kelly was snuggling with me, my pussy beginning to throb at the thought of it. I caressed my boobs, gently squeezing them, my nails teasing my nipples, my pussy gnawing for attention but I waited, lingering in my feeling while I caressed myself. \n\nI don't have any toys but really wish I had one now. I thought a couple times about getting one but was too chicken to go down to an adult store and was really hesitant about going on-line. A cock or a vibrator would feel so good right now, maybe both. I thought about my hairbrush, the handle has those soft rubber ribs and felt it would do nicely. The air in my room was chilly and I was so warm, comfortable and so, so horny under my blankets. I didn't want to get out and spoil it. \n\nI dreamed more of Kelly's naked tits, moaning as I turned on my back and ran my hands over my smooth stomach, cupping my soft breasts and fingering my hard nipples, running my hands over my chest to my shoulders and my neck. I could feel Kelly's hands on me, caressing me, kissing me. My pussy pulsed in anticipation, my hands making their way back down to my boobs, caressing and squeezing them. Little jolts of energy shot through my nipples as I licked a fingertip and teased the tips of them, rolling them back and forth between my fingers. \n\nI sucked in a breath and moaned when I gently pinched and pulled my nipples, my nails lightly raking across them. I enjoyed my foreplay, lost in the feeling, making it last, teasing myself. My pussy was really wet and craved for attention. I couldn't let my kitty wait any longer and slid my hands down my stomach to my legs, spreading them and caressing the inside of my smooth, succulent thighs. My pussy begged to be touched and I slid two fingers over my moist lips, my body shuddering under the bed covers at the sensation of being touched. \n\nMy clitoris was engorged, a tiny hard-on, erect and even under the covers I shivered as I lightly touched it with my finger tip, teasing little circles around it, my body shuddering every time I lightly tapped it. I slid my fingers down, wetting them with the moisture on my lips, my hips rotating to meet my fingers. I slid my middle finger in under my pussy lips, sucking in a luxurious sigh at the intense surge of pleasure that came over me, my finger gliding over the soft, wet surface. I closed my eyes, feeling Kelly's lips on mine, inserted my middle finger deep inside and whimpered, my other hand squeezing my breast. \n\nThoughts of pretty Kelly danced in my head as I slid my finger in and out of my pussy. I could still see her tits jiggling in her top, surrounded by that oh so sexy, lacy bra. I imagined the feel of her boobs as I caressed mine, the feel of her erect nipples as I flicked mine with my fingers. Two fingers in my right hand pumped in and out of my pussy, my eyes closed in delirious, sexual delight. I felt an orgasm building and I slid my fingers over my clit while still massaging my tits and squeezing my nipples. My climax was building and I edged it, letting it climb even higher. The more I edged my orgasm the stronger I felt it grow. \n\nFaster and faster I finger fucked my pussy, my hips rolled back with the onslaught, my other hand pinching and pulling my nipples. My orgasm was very near but I was still in control and pushed it even further out. I was hot and sweating under my blankets, I threw them off with one hand, my naked body exposed to my wide open knees, my hard nipples sprung to full erectness in the chill air making them ache, increasing my sexual desire. \n\nI pinched and pulled my nipples cruelly with my fingernails, the brutal assault on my pussy threatening to send me over the edge, I could feel my orgasm coming, a crushing title wave waiting to descend. I could barely hold it back, more thoughts of Kelly and her sweet naked body burst the dam as my body rocked and thrashed on my bed, my back arched, cumming, crying and whimpering, my hand a blur on my clit as I sadistically squeezed my tits in orgasmic pleasure. \n\nMy hand slowed but I felt another orgasm building and I didn't edge it, I needed to cum, I wanted to cum again and again thinking of her, wanted to cum all night long. My climax fell on me, I gritting my teeth and squeezed my eyes shut, my mind burst in sparks as I came in shuddering desires, crying out, cursing, lusting after my sweet Kelly. \n\nI lay there panting while I slowly caressed my swollen wet clit, a sheen of sweat on my face, I could feel beads of sweat rolling down my scalp. My tits felt bruised, my nipples sore, my clit sore but I couldn't stop. I lay my head to one side with my eyes closed, one hand on my breast, breathing hard, my chest rising and falling, laboring to breath. I imagined Kelly was with me, naked, hovering over me, kissing me, her hand caressing my clit, her tongue teasing my clit, tasting me, licking my pussy while my fingers stroked up and down, a finger gliding in and out, my abused clit being punished by my palm. \n\nMy nipples were too sore to touch, my boobs too sore to squeeze, another orgasm was slowly approaching and mewling, I edged it off. More visions of Kelly danced in my head; she's sitting over my face, I can feel her soft thighs on my cheeks, her sweet treasure inches from my face. I stuck my tongue out to buried deep inside her, she's grinding her pussy on my tongue, her cries of passion echoing mine as my fingers plunge in and out of my pussy. \n\nI couldn't hold the orgasm any longer, it engulfed me, colors swam in my delirious mind as I squeezed my eyes shut, sobbing, whimpering, cumming and cumming, wave after delicious, sexual wave of delirious, passionate energy. Blood rushed through my head, carrying me away in delicious, lustful delight. \n\nI lay there with my eyes closed, gasping and swallowed hard, my chest heaving, weak and exhausted, my hair plastered to my sweaty forehead, my knees spread-eagle, my fingers lifeless in my pussy. I threw a tired arm over my forehead and exhaled in a blissful, satisfied breath wondering how many calories I just burned. Wondering how many brain cells I just killed from that last orgasm. \n\nI don't know how long I lay there on my back, resting and regaining my breath, gathering my strength. I know I dozed a little, waking with a snort. The bedsheets were soaked in sweat and pussy juice, sticking to me, peeling off as I slowly rolled my naked body over and closed my eyes. Five orgasms today, nowhere near my record but still fantastic. I reached back for a blanket to cover my chilled body and curled in a fetal position under the covers, cuddling my boobs. Kisa, my black long-haired cat, jumped up on the bed with a chirp and nuzzled me, looking for a place to nap. She curled up next to me and together we purred and snuggled, falling into a blissful sleep thinking of sweet Kelly. \n\nI awoke sometime later, my stomach growling. My boobs were sore, my nipples were sore, my clit felt like it'd been beaten with a stick. I gingerly climbed out of bed without disturbing Kisa, shivered in the cool air and pulled a pair of panties and a night shirt out of the dresser. I slowly put them on, wincing as the cotton nightshirt dragged across my abused nipples. \n\nMy nipples couldn't take it and I carefully pulled off the nightshirt, throwing it on the disheveled bed. The sheets will have to be changed but probably not tonight. I limped into the kitchen wearing only a pair of panties in search of something to eat. I was ravenous but felt too tired and sleepy to make anything. I turned the radio on out of habit and settled for a bowl of crunchies sitting half naked at the table eating. \n\nWhat the fuck was going on? I can't get Kelly out of my head, even now while eating my pathetic dinner my desire to be with her was unreal. Was I having feelings about her? Yes, I just spent the evening making love to myself while wet-dreaming about her but that should have just been lust. She's adorable and besides being co-workers we're friends. She's a married girl, very straight and wouldn't have any thoughts or feelings like this, could she? Was this infatuation? I haven't been besotted with anyone since high school. I realized I was caressing a bare boob and dropped my hand.\n\nAdele's Love Song suddenly started playing on the radio and I found myself overwhelmed by feelings. Really? Great timing, I thought sarcastically to myself and hit the off button. \n\nI finished my bowl of cereal and rinsed it out in the sink. With my energy somewhat renewed I changed the skanky bedding and climbed in shielding my nipples as well as I could, the feel and smell of clean sheets helping me to relax. Thoughts and feelings swam in my head though, how will I be facing Kelly tomorrow with this dark little secret? I certainly can't let on anything, being bi-curious I'll have to be really careful around her, and the office. \n\nThe cavemen are always on patrol."
    ],
    "authorname": "Lorelei907",
    "tags": [
        "masturbation",
        "shower",
        "office",
        "office sex"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/the-office-hottie-ch-02"
}