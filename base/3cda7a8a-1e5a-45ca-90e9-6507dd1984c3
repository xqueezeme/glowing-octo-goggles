{
    "title": "Memories Of Our Babysitter Ch. 06",
    "pages": [
        "All persons engaged in sexual activity in this story, are over 18 years of age.\n\nIt is certainly worth reading the preceding five chapters first, to understand the full background. However, if you read Ch 5, you will at least get an idea of the story, although you will not understand how I got into this position.\n\nAs in previous chapters, this is the background to the time and place.\n\nThis story is based in the mid 1980's in the United Kingdom when the internet was barely an infant and not available to the majority of individuals. As for mobile phones, they were huge, solid, brick-like blocks weighing over two pounds and were owned by only the very wealthy. This meant that knowledge of sex was gleaned mostly by looking at adult magazines aka Playboy, Hustler and so on which were often bought by older brothers or sisters. Certain books like 'Tropic of Cancer' that were 'borrowed' from someone's father's collection also worked a treat. Hearing playground chat amongst more or less 'informed' friends, proved popular too.\n\nFinding out officially what 'sex' was all about was mainly limited to the teachings of the Biology teacher who, if he/she were confident, would talk you through the reproductive cycle of humans or if not, would tell you how frogs and newts reproduced (not very useful and definitely not very sexy!). Boys and girls were nowhere near as mature or knowledgeable about sex at age 18 compared to many of today's 14, or 15-year-olds, thanks mainly to the multitude of internet 'information' that can now be accessed by anyone that can type 'sex' into a search engine.\n\nAll of this is to set the scene for you, to make you aware that in the late 1970s, early 1980s, unlike the present, boys and girls at age 18 were often considerably na\u00efve when it came to real sexual encounters and in the UK (as is now) anyone over the age of 18 could buy and consume alcohol.\n\n......................................................................................\n\nCh 6.\n\n\"Was Helen ok last night,\" my wife asked me the following morning when she got home from her night shift at the hospital.\n\n\"Yes, she was fine,\" I replied, non-committal.\n\n\"Ah good, it's useful to have someone consistent for the children's sake, I think it makes it easier on them if they already know the person, don't you?\"\n\n\"Yes, we should use her regularly,\" I replied, trying not to sound too eager.\n\n\"Good, because I think we have a few shift clashes coming up and I want to book her in advance, to make sure she is free for them.\"\n\n\"That's a good idea, I'll leave it to you to arrange,\" I said, secretly looking forwards to Helen's next visit, although a bit nervous about whether she had given any thought or said anything to anyone about the last time she was here.\n\n......................................................................................\n\nSure enough, towards the end of the following week, our shifts overlapped again, and my wife told me Helen was going to sit for us.\n\n\"It was a bit strange though,\" my wife said, \"although it is a Friday night again, she seemed very eager to come and babysit rather than go out with her friends.\"\n\n\"Umm, well, maybe she likes the bit of extra money,\" I suggested. \"or maybe, she just likes to be able to watch TV on her own, without the rest of her family squabbling for which channel to watch,\" I laughed.\n\n\"Yea, you could be right, I believe her parents are quite strict with her, so perhaps she gets a bit of freedom being here on her own. I remember what it was like at her age,\" she smiled to herself.\n\nHmmm, I thought, if she is eager, then there can't be a problem and she must have enjoyed what we did together last time, perhaps she is looking for more? That gave me something to think about and anticipate for the next few days.\n\nFriday finally arrived, and I made sure that I left work as early as I could, so that I could spend the maximum amount of time with Helen if she chose to stay and chat this time.\n\nI was about a half hour earlier than normal when I got home. I could hear the TV on in the living room when I came in through the door and could see Helen relaxing on the sofa facing it. She was lying full length, head propped up on her hand supported by her elbow on the sofa. Her long slim legs seemed to stretch almost the length of the three cushions, but I guess that might have been the illusion generated by her tiny skirt, that I was sure was shorter than the last one.\n\n\"Oh, hi Pete,\" she said, starting to sit up, \"you're earlier than I expected.\"\n\n\"Hi Helen, it's ok,\" I said, \"if you're comfortable, don't get up, I'll just go check on the kids, you carry on watching whatever it is, I won't be a minute.\"\n\n\"Oh ok, thanks,\" she said, \"they are fine, been no trouble at all,\" she added.\n\nI went upstairs and did my usual look-in at the children sleeping peacefully. I couldn't remember what it was like to not have any cares or worries so that they could sleep like that. I closed the door quietly and made a detour into our bedroom to pick up something, then went back downstairs.\n\nShe was still lying on the sofa, on her side, her small, white, button-up shirt ending above her belly button, leaving a gap of bare skin between that and the waistband of her skirt. The way she was lying, her long blonde hair was falling down behind her onto the cushion of the sofa, leaving her face clear.\n\nI went and sat at the very end of the sofa, and she bent her knees, withdrawing her bare feet enough so that I could sit down. Now that I was seated, and with her knees slightly bent, I got a tiny flash of white underwear under that skirt, and already my cock was telling me how exciting he found her.\n\n\"How have you been, since I saw you last?\" I asked, trying make some small talk to see if she just wanted to go home now that I was back.\n\nShe turned her head and looked at me with those devastatingly blue eyes, \"I've been great thanks, after our 'chat' I decided to stand up to those so called 'friends' I told you about.\"\n\n\"Oh ok, has it made any difference?\" I asked.\n\n\"Well,\" she hesitated, \"only in so much as I realised that they didn't know much about anything, and that someone a bit older is more interesting,\" she said, a faint blush creeping up her cheeks.\n\n\"Riiiiight,\" I drew the word out, \"as I said last time, they will soon grow out of it and realise that 'impressing the girls' isn't really about belittling them, but about being friends and being interested in them,\" I said.\n\n\"That's more or less what my sister said when I spoke to her this week.\"\n\n\"You have spoken to Cass?\" I asked, wondering what they might have talked about and how much she might have said to her about what we did.\n\n\"Yes, she called me to see how I was, and how I got on here last time,\" a slight smile passing over her sweet features.\n\n\"I see,\" I said, but not really 'seeing' at all yet. \"And...ummm, what did she have to say?\" I asked.\n\n\"Oh, this and that,\" she strung me along, \"I didn't go into details, but I told her you had helped, and she sort of laughed.\"\n\n\"Oh, ok.\"\n\nI knew I would never get to know exactly what they had talked about, and in what detail, but it looked as if Cass was still orchestrating something for Helen even from far away.\n\n\"She told me not to be embarrassed if I wanted to ask you more, as you would be discrete, and I could trust you. I thought that was quite a compliment considering you and Cass only 'chatted',\" she said, sort of tongue in cheek.\n\n\"Err, yes, well, she was probably just being nice,\" I replied lamely. \"Were you watching that,\" I asked, indicating the TV and hoping to change the subject, \"or are you ready to go home now?\"\n\n\"It was just one of those travel programmes, but I was lying here imagining I was on that beach they are showing there, with the sun warming my body.\"\n\n\"In a bikini, like that girl there?\" I said, as a well-built girl, accompanied by an athletic looking man, sauntered across the white sands in front of the camera.\n\n\"Ha, ha,\" she laughed, \"I couldn't wear anything as skimpy as that, 'cos, as you know, I don't have the body for it,\" she ended, wistfully.\n\n\"Nor me in what he's hardly wearing,\" I said, trying to be empathetic, \"I mean, it looks uncomfortably tight,\" I added.\n\n\"Yea,\" she giggled, \"it's so tight, you can almost see all his bits,\" she said, still giggling, \"not that I know what they might really look like.\"\n\nWas she telling me she had never seen a man's cock? I found that hard to believe, even if it was just the cock of one of those irritating boys in her year group, that she had told me about.\n\n\"You mean you have never seen one for real?\" I asked, watching her neck redden and the redness flow up into her cheeks.\n\n\"No, but I shouldn't have said that, I didn't mean anything by it,\" she said, a little more meekly.\n\n\"It's ok, I was just surprised, that's all. I am sorry if I embarrassed you.\"\n\nShe was quiet for a moment, her gaze on the TV that was showing long shots of a white, sandy, beach and various couples enjoying the sun.\n\n\"You don't know what it's like at home,\" she said, quietly, \"no one talks about anything like that. I wouldn't dare to have said that in front of my parents, they really wouldn't have approved, and now that Cass isn't there...\"\n\n\"I imagine it's a bit difficult then, having questions and wanting to talk about things that you can't ask there,\" I said.\n\n\"I think that's why Cass said I could ask you,\" she said, simply.\n\n\"Ah, so I am a substitute for your sister now,\" I said, grinning to let her know I was joking.\n\n\"Well not quite,\" she grinned back, \"but you do know lots of stuff, and you seem easy to talk to.\"\n\n\"As Cass probably told you, it's ok to ask whatever you want if we are alone, I'll try to answer if I can,\" I said, putting my hand on her ankle, and hoping that this conversation might be going somewhere like last time.\n\nShe didn't move her leg, but let my hand lie there.\n\n\"You won't mind if I ask you stupid questions... I mean...you won't think I am totally ignorant because I don't already know stuff?\" she said, looking at my eyes to see my reaction.\n\n\"No, of course not, we aren't born with knowledge built in, we all have to learn things.\"\n\n\"That's true enough,\" she said.\n\nShe glanced back at the TV.\n\n\"For instance,\" she paused, \"that guy there, the one with the too tight swim briefs...,\" she pointed to the TV.\n\n\"Yes,\" I looked, \"what about him?\"\n\n\"His... you know, 'cock',\" she blushed even more and didn't look at me, \"is that the size they are, like,\" she was fumbling for words, \"when they are 'big', you know what I mean?\"\n\nAs it was a TV programme for travel destinations, it was unlikely they would show him with an erection strutting across the beach, and truthfully, all you could really see was a bulge in his swim briefs.\n\n\"Err, no, they wouldn't allow it on TV, it's just that it has nowhere to go, so it looks like a big bulge, that's all,\" I tried to explain.\n\n\"Ohh, I see, I never thought.\"\n\nShe seemed in no hurry to go home, and I was absentmindedly stroking her lower leg as we chatted.\n\n\"You know last time I was here, did, umm, touching me make yours, you know grow big?\" she asked, hesitatingly.\n\nThat wasn't a question I was expecting, but I had said I would answer if I could.\n\n\"To be truthful, it did yes.\"\n\n\"Why, I mean, what makes it do it? I'd like to know for when I meet someone,\" she asked.\n\n\"It's...well, it's because touching an attractive girl like you is exciting, a bit like you got excited when I was touching you,\" I said, \"you said you felt it was different than when you did it to yourself, didn't you?\"\n\n\"Yes, but I didn't touch you.\"\n\n\"No, but for a man, it isn't quite like that, ummm... it's not easy to explain, but just the thought, or touching can make my, if you don't mind me saying, 'cock' grow big or become 'erect'.\"\n\n\"Yes, I know the words, just not the thing itself,\" she giggled, although she was still quite red in the face.\n\n\"Ah, ok, I didn't want to say anything I shouldn't,\" I said.\n\n\"No, I did ask, so I don't mind as long as you are being honest.\"\n\nShe seemed to be getting more comfortable with talking to me now that the ice had been broken, although after what we did last time, I didn't think she would still be so shy of asking.\n\n\"So, touching my leg as you are, is it making your cock hard now? I can't see a bulge like his,\" she asked, straight out.\n\n\"No, ehmmm yes, well it is a little, but I was only touching a bit,\" I said, wondering if she wanted me to get hard.\n\n\"Hang on, let me turn this TV off,\" she said, clicking the remote, \"oh, I see, so what would make it do it?\" she said looking back at me.\n\nJust her lying there asking that sort of intimate question, and looking at me with those eyes, with her long legs extending from that short skirt, now had my cock stirring in my jeans.\n\n\"It's complicated,\" I said, \"it's not just any one thing, but a combination.\"\n\n\"I don't understand, you said last time that it got hard without me touching you.\"\n\nYes, but I was touching and seeing parts of you, that did make me excited enough to get an erection.\"\n\n\"Even my flat chest,\" she grinned.\n\n\"Yes,\" I said, more softly, \"it was very sexy.\"\n\n\"And you did touch my other parts,\" she said, coyly.\n\n\"Yea, I did.\"\n\nNow I was getting slightly embarrassed, because I didn't know where this was going, and my cock was almost at full height, just through hearing her say those things, and remembering how I finger fucked her that night. I decided not to tell her I was already hard.\n\nShe sat up, putting her feet on the floor, her long blonde hair fell down over her front. I thought she was about to say it was time for her to go home, but she didn't make a move to actually stand up. She hesitated, thinking.\n\n\"So, for example, if I took my top off like last time, would that make you hard?\" she asked.\n\n\"Theoretically, it probably would,\" I answered, my hard cock fully erect anyway.\n\nBiting her bottom lip, her fingers went to the few buttons holding her top together over the tiny swell of her breasts.\n\n\"Do you really want to do that,\" I said, seeing her intention, \"it was just a discussion, you know, theory.\"\n\n\"Yes, but I want to know, and as you have seen them before, I don't mind. You know they are small, so it's not such a big deal as the first time,\" she replied, undoing one button at a time.\n\nI watched as she undid the last button and slipped her top off onto the sofa behind her.\n\n\"There,\" she said, with an air of finality, as she pushed her hair back over her shoulders.\n\nShe wasn't wearing a bra. Her small breasts were as I remembered them, the nipples already erect, so I knew she was already excited too.\n\n\"Wow,\" I said, shuffling my legs to try to get my hard cock more comfortable.\n\nShe smiled a radiant smile, \"I guess that proves the theory, does it?\"\n\n\"Yea, you are so sexy, I don't know any man that wouldn't react to seeing you like that,\" I said.\n\n\"You really mean that?\"\n\n\"Yes\" I said, \"and in answer to your question, yes it has,\" I smiled, a bit sheepishly.\n\n\"That didn't take much then; I thought men needed to see women naked to get hard.\"\n\n\"Not necessarily,\" I said.\n\nShe just sat there, nervously fiddling with her hair. I didn't know if she wanted me to touch her or not, we seemed to have arrived at a point where neither of us knew what to do next. She was looking down at the bulge in my jeans.\n\nSuddenly, with a sort of output of breath, she asked, \"Can I see it?\"\n\nI didn't think she would have the nerve to ask outright, but it seems she had been working up to this.\n\n\"You want to see my cock?\" I said, \"out in the open?\" making sure I wasn't misunderstanding her.\n\nShe nodded almost guiltily.\n\nWow, I thought this has taken a turn I didn't really anticipate. I had hoped we might touch, a bit like before, but she seemed to be leading the way.\n\nI stood up and moved closer to her, her eyes now focussed on the front of my jeans.\n\n\"Are you sure you want to,\" I said.\n\nShe looked up at me and nodded 'yes' again.\n\nWell, I thought, it is almost like having Cass here again, I wondered how her sister Helen was going to react.\n\nI undid the button on my jeans and lowered the zip, then peeled my jeans down to my knees. My cock was outlined in all its glory in my underwear.\n\nShe gave in intake of breath when she saw it.\n\n\"Ohh it is bigger than what I imagined\" she whispered, \"could I, like, actually see it, please?\"\n\nI was sure she wanted this, so I lifted the waistband and slipped my underwear down my hips, letting my cock spring free in front of her.\n\nAs a reflex, she moved her head back a little as if it was going to launch itself at her and took another loud inhalation of breath.\n\n\"Ohh, wow, I never... ohh,\" was all she seemed capable of saying.\n\nI don't have a huge dick, but I guess it's average size and maybe a good girth, but I suppose to her, it may have seemed big if it was the first 'real one' she had seen close up.\n\nPre-cum was already oozing out of the tip and pooling where my foreskin was still enclosing the head. She was staring at it, biting her lower lip nervously.\n\nShe moved her hand forwards towards it, then stopped, looked me in the eye as if asking permission, and this time it was me who nodded 'yes'.\n\nGingerly, she put her thumb underneath and forefinger on top and gripped it gently.\n\n\"Ohh, it's warm and hard, but not hard, I mean, it's not what I expected,\" she said, inspecting it with her big eyes wide open.\n\nMy cock twitched at her touch, and she let out a small sound, \"Does it always do that?\"\n\n\"When it is being touched by a sexy woman,\" I said.\n\nShe was concentrating too hard to hear the compliment.\n\n\"Is this the bit you pull back,\" she said, using her fingers to slide the foreskin back exposing the purple head.\n\n\"Yes, but not too hard.\"\n\nDeliciously, she slid my foreskin all the way back and seemed fascinated by the colour of the head compared to the rest of it.\n\n\"Wow, is this the lubricating stuff I have heard about? \"she said, letting the tip of her other forefinger touch the bead of precum emerging from the slit in the end of my cock.\n\n\"Yes, you seem to know a bit about it?\"\n\n\"Cass told me some of it, but I've never seen it before. How does it feel if I smear it over the top bit like this?\" she asked.\n\n\"Mmm, that feels good Helen,\" I said, feeling her small fingers rubbing the pre-cum over my cock head, \"what else did she tell you,\" I asked, wondering whether she had just talked to her in general or had been more specific about where she had gotten the information.\n\n\"She told me what this was, and that it gives the same sensations we get when we, you know, do it to ourselves,\" she said, more candidly than I expected.\n\n\"You mean when you 'masturbate'?\"\n\n\"Yea,\" a bit breathy, \"but to be careful where it goes 'cos there might be sperm in it, and it only takes one,\" she added.\n\nShe became less tentative and started to slowly wank my cock with one hand while continuing to rub her other fingers lightly over the bulbous head. I could hardly believe I was standing here with her half naked, and she was already almost giving me a hand job. Cass must have told her what to do in more detail than she was letting on I thought.\n\nI lifted my hand and moved it towards her breast. She glanced at it but didn't try to stop me. Her small breasts didn't allow for much cupping underneath, but I reached out and started to play with one of her nipples.\n\n\"That's nice Pete,\" she said, still slowly wanking me. She moved her other hand, from the tip to the base of my cock to feel around where my balls were.\n\n\"Is it ok?\" she asked.\n\n\"Yes, but not too rough, they are sensitive now after what you have been doing,\" I replied, loving her touch and the sensations she was giving me.\n\n\"Goodness, they are bigger too than I thought they would be, from the diagrams I have seen,\" she said, gently weighing each one, and feeling round with her delicate fingers.",
        "I could feel her beautifully manicured nails grazing over the skin of my sack, and I was enjoying her ministrations too much to say anything; I was content to let her explore as much as she wished. While she was doing that, I had changed nipple and they were both now as hard as I had seen them before.\n\n\"Cass said...\" she stopped there, biting her lip again.\n\n\"What did Cass say,\" I coaxed her.\n\n\"Emmm, well, I heard my friends talking about it, and the boys joking about it, so I asked her, and she said that guys like it sucked, do they?\"\n\nIt seemed increasingly likely that Cass had been educating Helen, and now here she was asking about blowjobs in a roundabout way. I was wondering if I could get her to try it.\n\n\"It is a nice feeling, for a girl to do that,\" I said, just replying to her question.\n\n\"I am not sure if I could, it looks too big,\" she said, looking at where her fingers only just met around the shaft.\n\n\"If...ummm, if you want to try... you can,\" I said, hopefully, \"just try to keep your teeth out of the way and see what happens.\"\n\n\"You don't mind?\"\n\nDid I mind, wow, definitely not. The thought of her taking me in her small mouth and looking at me with those eyes might make me come just with the thought.\n\n\"No, it's ok, if you don't try, you'll never know,\" I encouraged her.\n\n\"Well, ok then,\" she said, \"I'd like to see what it's like, but you won't squirt into my mouth will you?\" she said, nervously, moving her head slowly closer to my cock.\n\n\"No, I promise.\"\n\nI watched as she kept the foreskin pulled back and opened her lips. At first, she just let it touch them, then opening wider, steering it with her hand, took part of the head into her mouth. She looked up at me for confirmation she was doing it right; again, it was my turn to nod 'yes'.\n\nShe struggled a bit. I felt her teeth touch the head, then she seemed to get the hang of it, and in only a few seconds more, she had the whole head in her mouth, her lips sealed around where the foreskin joined. I felt her tongue exploring around the head in her mouth, which again made my cock twitch, which startled her for a moment. Gradually, she worked out what to do, and was soon slowly letting the whole head slide in and out of her mouth. It was a very erotic sight and sensation.\n\n\"Try a little more,\" I suggested, once it seemed she was doing it without difficulty.\n\nShe didn't attempt to reply, but I saw that each time, she was trying to take more in until I could see less of my cock outside and a bulge in her cheek where the head was inside. She was breathing hard through her nose as she struggled to put more of my cock into her mouth.\n\nAfter several minutes of giving me the most amazing sensations, she pulled my cock from her mouth covered in her saliva and took some deep breaths.\n\n\"Wow, I didn't think I could do that,\" she said, almost beaming with having succeeded, \"was it... you know, ok, what I did?\"\n\n\"Oh yes, you were very good,\" I said, \"did Cass tell you how to do that to boys?\"\n\n\"No, I had just heard what those friends did, or rather said they did, and tried to do it.\"\n\nI was still standing in front of her, my cock as hard as a rock, her small hand still wrapped round it and just idly moving it a little. I wasn't sure what I should do next, as she had hold of my cock.\n\n\"Did it make you feel anything too?\" I asked.\n\nShe sniggered, bashfully, \"To be honest, it has made me have what feels like butterflies, and made me feel a bit sort of wobbly down there,\" she said quietly, looking at where her hand was still stroking my cock.\n\n\"Would you, emmm, like to feel what it's like for me to do that to you?\" I asked.\n\n\"What, you mean use your tongue on me?\" she asked, almost incredulously.\n\n\"Yes, if you'd like to find out what it's like.\"\n\n\"You would really do that?\"\n\n\"Yes, of course, it's something people do sometimes. Didn't Cass ever say anything about that?\"\n\n\"No, we never talked in that much detail,\" she said, giggling again.\n\n\"You don't have to,\" I said, \"I just thought you might like it.\"\n\n\"I don't know, I've never thought about it before...but... I think I might be too embarrassed.\"\n\nShe had got me into a state where I really wanted to see and taste her pussy now. So, as we had progressed this far, and she was sitting there half naked, holding my cock, I decided to take the initiative and see what happened.\n\n\"There is nothing to be embarrassed about, just stay where you are, and lean back on the sofa,\" I instructed.\n\nMeekly, she complied, and in the process, had to let go of my cock, putting her hands on the seat by her sides. I quickly removed my jeans and underwear fully, while she watched nervously, and then I knelt down in front of her. Placing my hands on her slim legs just above her knees, I gently massaged them up and down, getting higher each time until they were going under her short skirt.\n\nShe didn't object, and seemed to be just letting it happen, to see where it was going.\n\nWhen I reached her panties, she stiffened a little, but didn't do anything else. I moved my hands further up until I could grip the waistband at each side and gently started to tug. For a moment, I didn't think she was going to let me, but as I looked her in the eyes, she raised her bottom and allowed me to peel them down and off her legs.\n\nThe only thing stopping her from being totally naked now was her skirt, but I decided to leave it in place in case that was a step too far for her.\n\nGently, I pushed her legs apart and moved in-between them, my hard cock touching the front of the sofa.\n\nI could see quite clearly that she was a true blonde; fine blond hairs covered her mound, which hid nothing of her labia that were already puffy and slightly open. In a poor light, you might think she was shaved clean, her hair was so fine.\n\nI kissed up each leg in turn, feasting my eyes on her pussy, the nub of her clit peeking out from the top. Once I gauged that she was comfortable with the presence of my mouth so close to her pussy, I homed in on it.\n\nThe moment my tongue touched the fine hairs, she jumped, but undeterred I pressed on, sinking my tongue between her waiting lips.\n\n\"Ohhhh,\" she gasped, and put her hands onto my head.\n\nI slid my tongue experimentally up and down, pushing her pussy lips apart and tasting her for the first time. I have tasted quite a number of women and they have all tasted different, but Helen was probably the sweetest I have ever tasted, just that faint bit of saltiness too, but very more-ish.\n\nI slipped my hands under her bottom and gently slid her towards me so that I could get better access. Now I was able to find and probe her entrance with the tip of my tongue. She gripped my hair when she felt my tongue there. Knowing she was holding me to her and not pushing me away, I pushed my tongue as far as I could inside her and lapped gently. I knew from what she had said that she had not had this sensation before, and this seemed to drive her wild.\n\n\"Oh my God, oh my God,\" she gasped out, her fingers curling and uncurling in my hair.\n\nI thought she was about to come after only that brief time, so I let my tongue slip out and licked slowly up each of her labia, avoiding her clit for the moment. Comparatively, that seemed to be less of a sensation for her and she calmed down a little. I let her get used to that for a while, feeling her juices increasing the more I licked.\n\nThen I went for it.\n\nOn one of the upstrokes with my tongue, I found her clit and then quickly put my mouth over it and sucked it in, playing with it with my tongue, inside my mouth.\n\nI thought she had been holding my hair tight before, but now I thought she was trying to pull it out by the roots as I slid her clit gently against my teeth then swished it around.\n\nI didn't let up and felt her bucking her hips to try to press her pussy against my mouth as hard as she could. It was difficult to keep my mouth in place over her clit as she was moving so much, but I held on. She was panting and pulling my hair.\n\nI knew she was about to have a massive orgasm. I hoped she would realise then what amazing feelings someone sucking and licking her pussy would give her.\n\nWhile I continued to stimulate her clit, I put one hand up her body so that I could reach her small breasts and nipples and gave her further sensations by teasing them too.\n\nI released her clit and slid my tongue down between her lips back to her entrance, then probed and pushed until it went inside her again. I was tasting lots more of her juices as I pushed her further towards her climax. As I moved it in and out as much as I could, I kept hearing her moaning quietly more and more. Fortunately, her moans and groans weren't very loud, as I didn't want the children to be disturbed and wake up.\n\nWhen I felt her start to shake and the fist she had in my hair clench and unclench, I quickly moved back to her clit, teasing it with my lips and tongue as I had done previously. I guessed that would take her over the cliff edge and I wasn't wrong.\n\nHer orgasm suddenly took control, and surprisingly, for a girl with such a slight frame, I felt the strength of her muscles in her legs and stomach as she bucked and shook through the peak.\n\n\"Ohhh Pete, w....what...I... Ohhhh...\" she managed to get out, not making much sense at all.\n\nThe fluids she produced as she climaxed, which I remembered from the last time, smelt so very strongly of pure sex, that it was intoxicating having my nose so close. I gently continued to lick and suck while her whole body seemed to convulse, then knowing she would be very sensitive, backed off, just massaging softly round her breast and stomach with my hand.\n\nI looked up at her face to see her big blue eyes wide open, almost staring and I thought for a moment something had happened to her, but as I watched, she blinked a couple of times, and began to focus again. She seemed almost shocked at what she had just experienced. I wondered and hoped if it would give her a taste for doing more.\n\n\"Does that do the same thing to all girls?\" she asked, naively, as her breathing slowly returned to near normal.\n\n\"Well, I don't know how it felt for you, but it looked as though you enjoyed it, I can only guess it may do.\" I answered.\n\n\"Wow, I've never felt it that intense, when I...you know, do it myself, I thought that was how it would always be... but, I thought I might pass out just now,\" she said.\n\n\"Are you ok now?\" I asked, a bit worried.\n\n\"Yes, I am now, but goodness, I am still sort of 'buzzing' from it.\"\n\nI stroked up and down her slim thighs almost as far as her pussy, but just stopping short.\n\n\"Is it the same feeling that I would get from actually having sex?\" she asked, tentatively, after a short pause.\n\n\"I don't know, I think it varies with individuals,\" I answered, \"some find it better, others don't.\"\n\nMy cock was still very hard and twitching at the intimate nature of the conversation I was having with this almost naked, sexy girl, who was lying there with only her short skirt on, and even that was up around her waist.\n\nShe was quiet for a while as I lazily traced my fingers down her stomach and keeping clear of her clit, ran them lightly over the fine hair covering her pussy lips, which were still engorged and puffy looking.\n\n\"That wasn't as embarrassing as you thought then?\" I asked her.\n\nShe giggled, \"No, I guess not. You've seen all of me now, more than anyone else for a long time.\" she said.\n\n\"And very nice the sight is.\"\n\n\"Naw, you're just saying that.\"\n\n\"I wouldn't say it if I didn't mean it,\" I said, \"didn't Cass tell you that about me?\"\n\n\"Yea, I suppose she did say that, it's why I felt I could trust you to even be here like this.\" she said.\n\n\"Perhaps we ought to make ourselves more presentable and get ready for me to see you home,\" I said, thinking that was all she might want to do this evening.\n\n\"Are you trying to get rid of me,\" she said, grinning, but not making any effort to move.\n\n\"Not at all, I just thought you might want to.\"\n\n\"Not yet, if that's ok, what you are doing is nice and it's relaxing, although I still feel sort of tingly and stuff,\" she said, a bit more shyly.\n\n\"I am glad you feel more comfortable, and you seem more confident talking about these things,\" I said, wondering if she wanted to discuss more.\n\n\"You have made me realise how immature those boys in my year group are with their silly comments and making me the butt of their jokes.\" she said, quietly, as I continued to run my hands over her soft skin.\n\n\"Well, that's a good thing,\" I said, \"at least you now know not to take any notice of their jibes because they have no idea how sexy you really are.\"\n\nWeirdly, she blushed at the compliment, even though she was almost naked in front of me, and I was still stroking her legs and bare pussy, there was still some shyness there.\n\n\"I was thinking,\" she started, \"no, doesn't matter, you might think that I have no morals at all or something like that,\" she said.\n\n\"I wouldn't think that of you, whatever you want to say or ask,\" I replied, truthfully.\n\n\"You mean it, if I tell you what I'm thinking?\"\n\n\"Of course, I said before, it's all just between us, you don't have to worry. What's bothering you? You can say.\"\n\n\"Well,\" she looked at me to gauge my reaction to what she was going to say, \"if what you just did, you know going down on me, was so good, I am really curious and wondering what it might be like to go all the way.\"\n\n\"You mean actually have sex for real?\" I said, trying hard not to show my surprise, or of how exciting that might be for me as well.\n\n\"Yes, but I would be frightened of getting pregnant and I don't know if it might hurt. That's what I have been thinking about,\" she said, her big eyes fixed on me for a response.\n\nI considered how to answer for a moment, \"It's good that you are thinking about not getting pregnant, that wouldn't be a good thing, as for the other, I don't know the answer, it depends on a few things. I thought you might have asked your sister about some of this.\"\n\n\"We talked about a lot of stuff, but I was even too shy to ask her about some things,\" she said, \"but you must have been with several girls, did they say it hurt?\"\n\n\"Emmm, not that I recall.\" I answered, honestly.\n\nI thought to myself that out of the other girls I had been with, probably only Cass and Natalie, had been virgins and they hadn't said anything about it being painful, so I could only go by that, to answer her.\n\nThere was a pause as we both thought about this development in our conversation.\n\n\"Are you sayin...\" I started, but Helen started talking at the same time.\n\n\"Would you let...\" We both stopped.\n\n\"You go first,\" I said.\n\n\"I was going to ask,\" she chewed her bottom lip, \"would you try, with me, like now, while we are already sort of comfortable with each other?\" she asked, finally.\n\n\"Helen, I am going to be a bit blunt, but are you saying you want me to put my cock in you so that you can feel what its like?\"\n\nShe looked down, her blush creeping up again.\n\n\"Yes, if... if you are willing to,\" she said very quietly, \"but if I find it too painful or anything, you will stop, won't you?\"\n\nWow, I thought, Cass' sister wants me to fuck her too now, but should I? I didn't think she would be as forward as her sister, and I wanted to be sure she was thinking clearly.\n\n\"Of course I would, but are you sure you want to go that far?\" I asked again.\n\n\"I'm in this trembly sort of state and I can't get it off my mind now about how it might feel, so yes, I do, but what about getting pregnant, that's the only other thing that is worrying me,\" she said.\n\nWe kept a small supply of condoms in our bedroom as a standby in case my wife forgets her pill or something and although not believing I would actually need it for real, but just case, I had brought a condom downstairs with me earlier.\n\n\"Well, the usual way, if you're not taking the contraceptive pill is for the man to wear a condom, or 'Durex', if that's what you know it as,\" I said.\n\n\"Oh, yea, the boys fooled around with one and blew it up into a balloon once, I think they were trying to embarrass me again.\"\n\n\"They really don't sound like good friends,\" I commented.\n\n\"No, I think I have realised that.\" She paused. \"So, do you actually have one, a 'Durex'?\" she asked, sounding very bashful at asking for such a thing.\n\n\"I have, not that I expected to use it,\" I added quickly, \"but I didn't know what you might ask and sometimes it can save a mess if you know what I mean.\"\n\n\"I think I am getting to understand more,\" she said, a faint smile on her face.\n\nI did feel a bit apprehensive. She was the one who was asking to try it, but I did feel she was too trusting, so I tried to give her every opportunity to change her mind, although if she were anything like her sister, I doubted that she would.\n\nDuring this whole conversation, I had remained kneeling in front of her, my cock rigid as a steel pole, pressed against the sofa front, as I stroked my hands up and down her thighs.\n\nI picked up my jeans and felt in the pocket for the condom, pulling out the foil packet and showing it to her.\n\n\"Here it is, do you want to see how it goes on,\" I said, not trusting her to do it with her sharp nails.\n\n\"Oh, yes, that would be great, I've obviously never seen how one goes on before.\"\n\nShe sat up and shuffled forwards to the edge of the sofa so she could be closer, and looked at where my hard cock was sticking up.\n\n\"It looks a bit big to, you know,...fit in me,\" she said, nervously, \"you said you'll stop if it hurts, didn't you?\"\n\n\"Yes, but if you've changed your mind that's ok, I can show you how it goes on anyway, if that's what you'd rather do,\" I said.\n\n\"Hmmm, well, let me see it on first,\" she replied, obviously keen to see something she hadn't seen before.\n\nI tore the foil packet open, aware of how she was watching intently. I showed her what it looked like rolled up, then carefully held the tip, and rolled it down over my hard cock, until I came to the end, and it was mostly covered.\n\n\"What does it feel like,\" she asked.\n\n\"It's sort of tight, but only because I've only just put it on, it is meant so that you shouldn't be able to feel it on after a short while,\" I said.\n\n\"Can I...can I touch it?\"\n\n\"If you want to, but only with your fingertips or hand, don't snag it with your nails, it is no use with a hole in,\" I warned her.\n\nGingerly, she reached out and ran her fingertip over my covered cock, then gently wrapped her hand round it and moved it up and down a little, heeding my warning about her nails.\n\n\"It's so thin,\" she said, \"I didn't think it would be that thin, I see why you need to be careful,\" she added.\n\nShe was giving me nice sensations as she explored, so I just watched her touching and stroking as she satisfied her curiosity.\n\n\"Pete, touching you like this has made me feel even more shaky inside, and the thought that we might actually 'do it', is like even bigger butterflies,\" she said, her throat sounding dry as she spoke.\n\n\"Do you still want to try it?\" I asked, looking into her eyes to gauge the sincerity of her response.\n\n\"If we do, can you just go really slowly,\" she said, her eyes looking excited, but apprehensive.\n\n\"You can tell me if it's ok or not,\" I said, realising she had really decided she wanted to feel a cock inside her for the first time. I hoped that in this situation, I wouldn't embarrass myself and come before I should.\n\n\"What should I do,\" she asked, a slight tremble in her voice.\n\n\"Ermmm, you can just lie back where you were if you like.\"\n\n\"Is this ok,\" she said, lying back on the sofa, her feet on the floor.\n\n\"That's fine, I'm just going to move forwards a bit,\" I told her.\n\nIt was a bit strange telling her what to do, but when I shuffled forwards, she opened her legs naturally so that her thighs were either side of my hips. I began to stroke her legs again, moving progressively further up until I was again running my fingers along her pussy lips. I kept this up until I could feel them getting slick with her juices, then used that to lubricate my fingers. She gradually began to breath more heavily and make little noises.",
        "When I gauged that her arousal state was building back up again, and she was making more quiet sighing sounds, I gently slid one finger inside her a short way and let her get used to that before adding a second. She made more of a groan when she felt my two fingers moving inside her.\n\nShe was very tight, and I wondered how far I might get with my cock before it became too uncomfortable for her.\n\n\"Mmm, that feels good already, just like last time,\" she whispered.\n\nI moved my fingers slowly in and out, gradually lubricating the inside of her pussy lips as her juices began to flow, until I felt that she might be ready.\n\n\"I'm just going to slide my cock up and down, so it gets a bit more slippery,\" I said, taking my fingers out and using them to hold my cock against her slit.\n\nUsing my fingers to steer it and my hips to move it, I began to slide my cock up between her wet labia, parting them and letting them slide back until I could see that my condom covered cock was slick with her secretions.\n\nShe seemed to like this almost as much as my fingers and let out a few moans of appreciation, especially when I deliberately let the tip rub against her clit.\n\n\"Is that your cock I can feel Pete?\" she asked, her voice sexily breathy.\n\n\"Yes, does it feel ok?\"\n\n\"More than 'ok', I think I could just put up with that all night, it feels so good.\"\n\n\"We could just stop at this,\" I said, wondering if that was what she meant really.\n\n\"No, I have this urge now to feel what it is really like, can we try it,\" she said, \"I think I'm ready.\"\n\n\"I'll go slowly, just say if you want to stop.\" I said, excited myself at how close we were to being joined in the most intimate way.\n\n\"I can feel it there,\" she said, as I moved the tip of my cock round where I could see her pink entrance.\n\nI pressed forwards, nudging the tip of my cock against her, seeing part of it opening her up. She flinched when she felt it but didn't say or do anything.\n\nI held her slightly open with my fingers and pushed a little harder, She was tight, but I thought that if I could get the head inside her, and let her become comfortable with it, the rest would follow. However, the harder I pressed, even with the lubrication, the more it seemed to be resisting my penetration. It seemed as though her outer muscles had contracted, perhaps though nervousness, and were preventing my entry.\n\n\"I can't feel anything new, just like... pressure... you're not in yet, are you? Am I too small?\" she said, sounding almost sad.\n\n\"No, it's ok, I just don't want to hurt you, but I may have to push a little harder, is that ok?\"\n\n\"Try, I'll tell you if it's too much.\"\n\nI pressed harder and I could see her entrance starting to stretch around the head of my cock further. I was at the point of thinking perhaps tonight wasn't the night, when I felt more of a movement and with a final push, the head popped through, and I lost sight of it inside her.\n\n\"Oh, Lord, stop,\" she said, loudly, \"now I can feel something new, whew, don't move for a minute.\"\n\nI stayed as I was, looking down, seeing the erotic scene of my cock between her young pussy lips, the fine, blonde. downy, pubic hairs surrounding it. My cock was definitely inside Cass' sister, even if it was just the head for now.\n\nI stroked my hands up and over her breasts, toying with her nipples, giving her all the time she wanted.\n\nIt seemed longer but was probably only a minute or so at the most.\n\n\"Try a bit more now Pete,\" she whispered.\n\n\"You're sure?\"\n\n\"Yes, it was a shock at first feeling stretched so wide suddenly, but I'm ok, I want to see if I can take more.\"\n\nI pressed forwards, and now that the initial resistance had been overcome, a little more of my cock slid inside her.\n\n\"Hold it there for a moment, wow, it feels different to any of the other things,\" she said, \"much bigger too.\"\n\nI gently grazed her clit with my finger, hoping that sensation would take her focus away from the stretching she was feeling.\n\n\"Ohhh, mmmmm,\" she mumbled, so I guessed it was having some effect.\n\n\"Do you want to stop, now that you have felt it,\" I asked, hoping she wouldn't say yes.\n\n\"I think I can take more now, just keep going slowly Pete, please.\" she gasped, her breathing even faster than it was.\n\nMoving my hands up the outside of her thighs to her hips, I held her there to support her and moved my hips slowly forwards, half inch at a time, seeing my cock sliding gently into her tight pussy. I kept the pace deliberately very slow until I felt my pubic hair just touching hers and with a final minute move forwards, our pubic bones met, and I was fully inside her.\n\n\"Oh God, I can feel you deep in me now, I feel just full of you,\" she said, almost as though she never expected it to happen.\n\nI contracted my cock muscles so it twitched inside her.\n\n\"Ahh, I felt that, did you just squirt?\" she asked.\n\n\"No, what you felt was it just twitching inside you,\" I answered.\n\n\"Ohh, it felt sort of funny, but nice sort of funny...do it again.\"\n\nI did it a few times and I saw a slight grin on her face each time.\n\n\"I had no idea it would feel like this, but...will you tell me something honestly?\"\n\n\"Of course.\"\n\n\"Do I feel... I mean does it feel ok for you,...like with other girls, I meant.\" she asked, almost shyly.\n\n\"It feels amazing,\" I said truthfully. \"You are amazing and very sexy. Don't worry about things like that, as long as you are enjoying the feelings and sensations, that's all that matters.\" I said.\n\nI saw with some alarm, a tear run from one of her eyes.\n\n\"Are you ok Helen, am I hurting you? Do you want me to take it out?\" I said, worried for her\n\n\"No, no, sorry about that,\" she replied wiping the tear with a finger, \"don't take it out, I am enjoying feeling it so deep inside me, but I feel a bit emotional at what you just said, and that you helped me be able to do this for the first time. It makes me feel more...ummmm... I don't know, just more confident I suppose, I'm not sure how to explain it.\"\n\n\"Well, I meant it, you are amazing.\"\n\n\"You'll make me cry if you continue saying soppy things like that,\" she said, a tearful smile on her face, \"how about we try moving a bit so I can see how that feels?\"\n\nI had no idea that, unlike her sister, she would be emotional about it. I guess I should have felt bad about it, except she seemed happy that she had done it, and wanted to carry on. I had never had this sort of conversation with a girl while my cock was balls deep inside her for the first time.\n\nI slowly pulled out just a couple of inches then slid back in to get her used to the movement and friction. Then I built up slowly to longer strokes, until after a few minutes, I was only leaving the head inside her each time. The trouble was, she was so tight, that being able to see my cock going in and out of her pussy as well as feel her tight walls around me, were giving me the most fantastic sensations and I was sure it would take me to the edge fairly quickly.\n\n\"Oh God that's amazing,\" she gasped, as I moved a bit faster and felt her trying to move her hips up to meet me, \"ohhh, mmmmmm.\"\n\nNow that she was pushing up to me, I didn't need to hold her hips anymore, so to try to make her come quicker before I totally blew my own load, I used the thumb of one hand to gently rub her clit in time to our thrusting, and the fingers of the other hand to tease one of her nipples.\n\nThat seemed to be having the desired effect, as the thrusting became more powerful, and I felt her legs trembling against my hips as she strained.\n\nShe was no longer the shy, inhibited girl of earlier, now she was sparing nothing to climb up towards her own release. The movements she was making, and the continued sight of my cock sliding in and out of her, was taking me very close, but I desperately wanted her to come, with me inside her, for her first time.\n\n\"Pete, Pete, ohhhhhhh,\" she started, but then made almost a continuous 'AAaiiieeeee' sound, only interrupted when she took a breath.\n\nI knew she was about to have a major orgasm and that did it for me.\n\nI let nature take its course and the familiar feeling starting somewhere deep inside me, streaked up through my balls, and up my cock, culminating in the release of jets of cum into the condom. I pushed my hips as far forwards as I could, burying my cock deep inside her. At the same time, I felt Helen's insides sort of contract around my cock and watched the muscles across her taut stomach ripple as her climax began to roll through her.\n\n\"Oh my God, Oh my God...,\" she started repeating, in a breathless voice, at the same time gripping the edge of the sofa with whitened knuckles, her head rolled from side to side with her eyes screwed tightly shut.\n\nI kept thrusting with her until she gradually slowed down and stopped altogether. She raised her hand and pressed my fingers away from her clit, as I assumed it had become too sensitive for it to be touched for now, but I slowly and gently I continued to move my cock in and out the full length, as little jerks and contractions continued to pass through her body.\n\nEventually she put her hand against my stomach to get me to stop moving, my cock still about halfway inside her.\n\nShe slowly opened her eyes and looked at me.\n\n\"Phew, wow,\" was all she seemed capable of saying, as she got her breathing more under control, but the look in her eyes was a sort of excited and satisfied look, that I thought meant she knew what it was about now, or that at least she had experienced something she had needed to do.\n\nI held tightly onto the condom as I slowly withdrew my cock before it softened. I didn't want any of my copious cum to get inside her.\n\nShe felt what I was doing, \"Can I see, you know, what's in it?\" she asked, more boldly than she had sounded before.\n\n\"Errr, yes,\" I said, holding it out to her.\n\nShe took it off me and squeezed the end where all teh cum was, making it move about inside the thin sheath.\n\n\"Gosh, there is a lot, I didn't think there would be that much Is it always like that?\" she asked, still fascinated by what she was seeing.\n\n\"No, not always,\" I replied, \"but often quite a lot.\"\n\n\"And it only takes one of those microscopic things,\" she mused to herself, still prodding the teat end of the condom.\n\n\"Yes, it does,\" I confirmed, reaching out and taking it safely from her. I didn't want any accidents.\n\n\"I wonder what its like to feel you actually squirt that inside me,\" she said next, her eyes still on me holding it.\n\n\"That's something we can't do,\" I said firmly.\n\nShe lay there sexily naked, apart from her skirt which was still rucked up around her waist, and looked at me with those big blue eyes, \"We could if I were on birth control, couldn't we?\n\nI felt I could almost look through them and the see the cogs going round in her head. My cock began to stir at the thought of how it would feel to release my sperm directly inside her, and I had to quell the desire before we did something stupid.\n\nI stood up and reached for my clothes, \"We might,\" I said, \"but for now, I think I need to make sure you get home safely before someone comes looking for you.\"\n\n\"You're right, it is very late, but don't worry, if anyone asks, I'll just say you were later coming home than you thought,\" she said, picking up her panties and sliding them up her slim thighs, \"I'm beginning to think I might be a bit sore tomorrow,\" she grinned, \"but it was worth it.\"\n\nAs with Cass, I thought she might be doing much more babysitting for us in the future."
    ],
    "authorname": "jasperspen",
    "tags": [
        "young 18",
        "naive",
        "learning",
        "waif-like",
        "mini-skirt",
        "shy",
        "intruction"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/memories-of-our-babysitter-ch-06"
}