{
    "title": "Art of Deception",
    "pages": [
        "When she walked into my office, I thought she was lost. Not many people show up without first contacting me or making an appointment. Fewer still come alone. None has ever looked like her. \n\nTall and willowy with impeccably straight auburn hair styled into an elegant long bob, she looked to be in her mid-30s, though her flawless skin and delicate features made it hard to be certain. She was definitely a few years younger than I was. Her pale blue eyes made a quick sweep of my office, left to right, as though cataloging its contents to form an initial impression before she spoke. When her eyes finished their scan and locked onto mine, I felt as though I were being subjected to the same precise scrutiny. \n\n\"Mr. Weber?\"\n\nI pushed back from my microscope and rose from my desk. \"Yes. May I help you?\"\n\n\"I hope so. I bought a painting I think may be a forgery. I'm hoping you can tell me whether I'm right.\" \n\nStraight to the point. I liked her already. \n\n\"I'll be happy to try.\"\n\n\"No offense, Mr. Weber, but I expect you to do more than that. I'm here because I'm told you're the best.\"\n\n\"And who told you that?\"\n\nShe smiled. \"Just about everyone. But I'm sure you knew that.\"\n\n\"Just about?\"\n\nShe didn't take the bait. \"Just about.\"\n\n\"You're not going to tell me the name of the poor, misguided soul who tried to direct you elsewhere?\"\n\n\"No. I don't think I will.\"\n\n\"Doesn't matter. I have a pretty good idea who it was. And please, call me Adam.\"\n\nShe walked forward to my desk and extended her hand. \"Carina.\"\n\n\"Nice to meet you, Carina. So, tell me about this painting.\" \n\nWe moved to what passed for a sitting area in my lab, a few mismatched chairs haphazardly arranged around a small wooden conference table with one wobbly leg.\n\nThe painting in question was a portrait of a sharecropper by William Aiken Walker that she had purchased at a smaller gallery in Boston eight years ago. The name of the artist didn't surprise me\u2014there had been a fairly well-publicized case involving forgeries of some of Walker's lesser work back in the mid-1990s\u2014but the date of purchase did. \n\n\"Most of my clients come to me before they buy or shortly after. You bought this eight years ago. Why bring it to me now?\"\n\n\"The more pieces I collected, the more something about this one seemed...off. I'm sorry. I don't know how to explain it.\"\n\n\"I understand. A lot of times it starts with a gut feeling. We'll get to the bottom of it.\" I hesitated before continuing. \"You realize, of course, most galleries and auction houses, at least those I work with most often, only offer grace periods of between...\"\n\n\"Yes. I know too much time has passed for me to get my money back if it's a fake.\"\n\nAt least she knew what she was getting into. \"So, you're sure you still want to know?\" \n\nShe cocked her head and stared at me with those startling blue eyes. \n\n\"Wouldn't you want to know?\" she asked. \n\n\"I'm not a collector.\" \n\n\"Yes, but if you were.\"\n\nI paused before answering. \"Sometimes I wonder. I mean, if I really loved the piece, would it matter? Before Michelangelo was Michelangelo, he made money forging ancient Roman sculptures. He'd break off pieces, bury the sculpture in a garden, and then claim he'd discovered a masterpiece. One day, a Cardinal figured out the sculpture he'd purchased was a fake. Instead of being pissed and having the artist thrown in jail, he was so impressed with his talent that he invited him to Rome.\"\n\nShe raised an eyebrow. \"It sounds an awful lot like you're trying to talk me out of bringing you my business.\"\n\nI laughed. \"Not at all. Believe me, I'm happy to take your money. Got my eye on a Fourier transform infrared microscope. Amazing instrument, but damned expensive. Every little bit helps.\"\n\n\"I'd be glad to chip in.\"\n\n\"I'll need a few weeks. Send me everything you have regarding provenance, then I'll write up an estimate. Have the painting shipped here, and I'll get to work.\" \n\nI started to rise from my seat, then decided to throw caution to the wind. \"Or you could always bring it by yourself,\" I added. \n\nShe looked perplexed. \"Why would I do that?\"\n\nI instantly felt two feet shorter. There was not a single good reason why she should hand-deliver a painting worth almost six figures to my office. I didn't know what to say, but I spoke anyway, the words tumbling out before I knew how to piece them together. \"I just meant...if it was easier to...I don't really know,\" I finished with a defeated shrug.\n\nShe watched my fumbling with an amused grin, then said, \"Oh. I thought maybe you wanted to see me again.\" \n\nShe seemed to savor the dumbfounded expression on my face for just a moment before pivoting toward the door. I was left to stare at the enticing sway of her hips as she swept from the room and into the street. \n\n*******\n\nFive weeks later I was pacing my office, waiting for her to arrive. I paused to straighten the chairs around the conference table for the third time. I'd fixed the wobbly leg three weeks ago. \n\nI'd made up some excuse about why I needed to deliver my report to her in person rather than emailing it. Something about wanting to illustrate my conclusions by referencing specific aspects of the work itself. I'd offered to meet somewhere more convenient for her, but she'd insisted my lab was fine.\n\nShe arrived ten minutes before we were scheduled to meet at 4 p.m., dressed in a blue pencil skirt and white button-down blouse. \n\nOn the conference table sat the painting. I took the chair in front of it, and she took the one directly across from me. I placed two printed copies of my report on the table and slid one across to her. I had splurged on fancy binding. She glanced at the report cover, hands held folded in her lap, then looked back up at me. \n\n\"So. What's the verdict?\" \n\nHer voice was calm, without a trace of anxiety about the results of my investigation. She probably realized I hadn't asked her to meet me in person to deliver good news. Or maybe she was so rich she just didn't care. \n\n\"It's a forgery,\" I said. I've found it's best to be direct when breaking bad news. \"One of the best I've seen, actually, but still a fake.\" \n\nI watched her face for a trace of surprise, disappointment, or anger. She just sat there stoically and nodded.\n\n\"I see. And how do you know this?\" \n\n\"Well, nothing seemed amiss with the provenance. The documentation was all expertly done, probably based on papers from some of Walker's other works with a few minor alterations. My guess is the forger even used period typewriters. It's definitely vague enough to be suspicious, but there were no definitive 'gotchas'.\"\n\nShe leaned forward attentively as I spoke, propping an arm on the table and resting her chin between the fingers of her right hand. \n\n\"The frame is also top notch,\" I continued. I flipped the painting over and ran a stylus along the edges. \"Wood was probably cannibalized from period pieces of furniture. Smart to pick an artist who was active in the early 1900s. It's a lot harder to find matching wood if you're forging the work of an old master.\" \n\nI flipped it back over and used my stylus to mimic the motion of a brush over the canvas. \"Brush strokes are well done. Consistent with what you'd find in most of Walker's work. Signature's a match, though that's not surprising, considering it's the easiest element to forge. And the pigments are just about perfect.\"\n\n\"Just about?\" she asked. \n\nI smiled. \"Just about.\"\n\nI pointed to some small white clouds in the middle distance. She leaned forward to see where I was pointing, then decided she needed a better view. She stood and walked around the table, taking the chair next to mine. She slid forward and sideways, bringing herself so close to me that her right leg rested lightly against my left. She leaned over the painting and stared at the clouds. \n\n\"I did a chemical analysis of scrapings from various sections. Here, the forger knew enough to use lead white paint, just like Walker. That's how early forgers of Walker's work got caught. They used zinc white instead.\"\n\n\"But here,\" I pointed to some yellowish strands of grass at the foot of the paintings' subjects. \"See this yellow? It's chemically very similar to a yellow pigment that Walker used in most of his work. But it's not an exact match. This particular variation of the pigment is called Hansagelb, named after the German company that manufactured it.\"\n\nShe turned to me with a skeptical look. \"Seems like a bit of a stretch. Surely you can't expect the artist to have used the same pigment in all his work. I imagine he had more than one type of yellow.\"\n\n\"Absolutely true,\" I said. \"However, I did some research into the history of this pigment, and it turns out that American artists didn't have access to it until after World War II. It would have been tough for Walker to get his hands on some, especially since he died in 1921.\"\n\nI'd rehearsed that big reveal several times before her arrival, and I turned to her, anxious to see how it had landed. She was no longer staring at the painting. She was looking directly at me. \n\n\"You really love your work, don't you?\" she asked.\n\n\"Sorry?\" \n\n\"The way you talk about it. Your eyes light up. It's refreshing to see someone so passionate about his craft.\"\n\n\"Yeah. I do love it,\" I said, holding her gaze. \"Except the delivering bad news part,\" I added hastily. \n\n\"Actually, you rather seemed to enjoy that part, too.\"\n\nI must have looked sheepish, because she laughed and waved her hand dismissively. \"It's fine. I like that you have a flair for the dramatic. Anyway, you warned me up front that I might not like the results.\"\n\nShe stood from the table and gestured to the paintings that dotted the walls of my lab. Each had a small note card below it with handwritten text. She walked to the far wall and pointed to a portrait of a French nobleman.\n\n\"I thought you weren't a collector,\" she said, cocking her head. \n\n\"I'm not. Those were gifts. From clients.\"\n\n\"Forgeries you unmasked?\" \n\nI nodded. \"The cards explain what gave them away. One of these days I'll make them into engraved labels and mount them properly.\" \n\nShe walked from painting to painting, pausing now and then to examine a few of the works and scan the cards below them. As she bent over to read the cards, I tried to keep my eyes from wandering to the fabric that tightened across the lovely curve of her ass.\n\n\"Fascinating,\" she said. \"Though I'm sorry to say you won't be getting my Walker. It may be a fake, but I like it too much. Plus, it'll make for an interesting story.\" She sighed. \"An expensive story, but an interesting one.\"\n\n\"I saw how much you paid for it in the provenance documentation,\" I said. \"If I found out I'd lost that kind of cash, I'd probably want a drink.\" I took a deep breath. \"Can I buy you one?\"\n\nShe stopped in the middle of reading a card, straightened, and turned to face me. \"Yes,\" she said, smiling. \"I think I could use a drink.\" \n\n*******\n\nWe grabbed a booth at a bar not far from my lab in Brooklyn. She ordered a martini. I had a scotch. One drink turned into two, then three. The conversation flowed easily, and Carina's demeanor gradually shifted from stern and reserved to warm and playful. \n\nIt was delightful to watch her loosen up. On a few occasions she would reach across the table and touch me lightly on the arm when laughing at one of my stories. Sometimes she had to lean forward to make herself heard over the music, and when she did, I was able to steal a couple glances down her top. I thought I was being discrete, but she caught me at least once, because I saw her smirk and shake her head disapprovingly before leaning back in the booth. \n\n\"So, who told me you weren't the best?\" she asked. \n\n\"What?\" I said, confused. \n\nShe leaned forward and her blouse shifted, exposing one strap of her white bra. She paused and stared at me with a mischievous expression, as though daring me to look. \n\n\"The day we met,\" she said more loudly. \"You said you knew who told me you weren't the best. Tell me who you think it was and I'll tell you if you're right.\"\n\nI paused before answering. \"Lauren Schrader,\" I said, as neutrally as possible. \n\nShe touched her nose with one index finger and pointed the other toward me, as though we were playing charades. But she was tipsy enough that her finger slipped off her nose and onto her cheek. It was adorable. \n\n\"Why don't you like her?\" she asked. \n\n\"I never said I didn't like her.\" \n\nShe laughed. \"Oh yes, you did. C'mon, Adam. Spill.\" \n\nAs a matter of professional courtesy, I never speak poorly of others in my line of work, even Lauren. But whether it was the alcohol or just the desire to please the gorgeous woman sitting across from me, I decided to forget my manners this evening.\n\n\"She's a hack. Doesn't even take the job seriously. Sees herself as an unappreciated painter who just dabbles in forensic science to pay the bills until someone recognizes her genius. It's pathetic. She only got the in-house position at the Kiefer Gallery because she's sleeping with the head of the Modern and Contemporary Art department.\"\n\nI drained the last of my scotch and set the glass down a little too hard. \n\n\"You wanted that job, didn't you?\"\n\n\"No,\" I lied. Then, when I saw her expression, \"Okay, yes. But this isn't bitterness speaking. Or, at least, not only bitterness speaking.\" \n\n\"You sure? No offense, but it sounds a bit like sour grapes. I mean, how do you know she's even sleeping with that guy?\" \n\n\"Because I'm the one that caught them. Lauren is my ex-wife.\" \n\nCarina's eyes widened. \"Wow, I'm sorry,\" she said. \"That's...\"\n\n\"In the past,\" I interrupted, smiling so that she could see I wasn't upset. \n\n\"So,\" I asked, keen to steer the conversation and my own thoughts in a different direction, \"what do you do for fun when you aren't collecting original works of art? Yacht racing? Vineyard cultivation?\" \n\n\"Ahhh...It's poke-fun-at-the-rich-girl time, is it?\"\n\n\"Depends. Are you rich?\"\n\n\"Would a rich girl deign to be seen with a philistine like you?\" \n\n\"Ouch,\" I said, putting a hand over my heart. She laughed. \n\n\"Okay, let me see here. I'm good at appraising things.\" I leaned back and stroked my chin with an exaggerated motion as I examined at her face. \n\n\"You're a lawyer.\"\n\n\"Nope.\" \n\n\"CEO?\"\n\n\"Nope.\"\n\n\"Bank robber?\"\n\nShe pursed her lips and touched a finger to them. \"Shhh...don't tell anyone.\"\n\n\"Okay. I give up.\"\n\n\"I'm a freelance graphic designer. I work from home.\"\n\n\"Right,\" I said dismissively.\n\n\"I'm serious!\" she protested. \n\n\"Most graphic designers I know can't afford original Walkers.\"\n\n\"Most graphic designers you know probably aren't living off an outrageous inheritance from their dead parents.\"\n\nDamn it, I thought. \"I guess it's my turn to say I'm sorry,\" I offered. \n\n\"Don't be. It was a long time ago. I was nine.\"\n\n\"Nine?\" I said, my jaw slackening. \"That must have been awful.\"\n\n\"It was hard. I was an only child. They died in a car accident, and I moved to Ohio to live with my mom's sister. She was nice enough, but she never wanted children of her own, or anyone else's. \n\n\"She worked as a conservator at the local art museum, so I spent a lot of time there either watching her work or just wandering the halls, looking at paintings. I used to lose myself in those paintings. I'd imagine what my life would be like if I could be a part of those canvases: sprawled on the grass at a summer picnic watching ducks bob on the lake, exploring a rustic farmhouse in bare feet with my sister, standing atop a lighthouse listening to waves crash against the glistening black rocks.\"\n\nCarina stared into the middle distance slightly above my head, lost in recollection. Then her eyes snapped back to meet mine. \n\n\"I guess that's where I developed my love of art. I'm not really a connoisseur of any specific artist. I collect works that speak to me in the same way that those paintings did when I was nine.\"\n\n\"I'd love to see your collection sometime,\" I said, genuinely curious. \n\n\"How about Friday night?\" she asked. \"There's a great Italian place not far from where I live. You treat me to dinner, then we'll swing by my place and you can point out all the other forgeries I've unwittingly purchased.\" \n\nI laughed, then shook my head apologetically. \"Sorry. Not a fan of that idea.\" \n\nShe looked surprised. \"Why's that?\" \n\n\"You're loaded,\" I said. \"How about you treat me to dinner?\"\n\n*******\n\nUntil I saw Carina, I worried that I may have overdressed for dinner. I looked fairly dapper in a navy blazer and my best pair of dress jeans, but she was simply stunning. Her hair was up in a messy bun and she wore a strapless black dress that straddled the line perfectly between sexy and elegant. A simple diamond pendant nestled between the swell of her pert breasts, which were the ideal size for her lithe frame. \n\nDinner was delicious, and our conversation flowed freely and easily. We shared tiramisu for dessert, then took an Uber to her place. \n\nShe lived in an impressive brownstone in Prospect Heights. Bright and open, it was decorated in a minimalist aesthetic. The few pieces of furniture she had were all sleek lines and sharp angles. There was almost no clutter anywhere; everything seemed to have its place. \n\n\"Wow. You're a lot neater than I am.\" \n\n\"My thoughts always feel cluttered,\" she said. \"Like I can't focus sometimes. This helps calm me.\" \n\nWe walked the perimeter of her living room. Paintings of various sizes dotted the walls. Some were prints, but most looked like originals. It was an eclectic collection of artists, just as she had described at the bar, and was impressive without feeling ostentatious. \n\n\"Is that a Pissarro?\" I asked, pausing next to a scene of two women kneeling and talking in a grassy field. \n\n\"Yes,\" she said, moving in front of me. Her hair was inches from my nose. It smelled faintly of apple blossoms. \"From his neo-impressionist period. Not a great example, but the best ones are well outside my price range.\"\n\nWith her body so close to mine, I was finding it difficult to focus on making conversation. \"What was it that you saw in this particular piece?\" I asked. \n\n\"It's more about what I felt. Connection.\" She joined the fingers of her hands together as she spoke the word. \"Two people pausing from their daily labor to share something, maybe a secret longing or a dream of a different life. Most of the canvas depicts this expansive, open space, yet the work still manages to convey an intense intimacy.\" \n\nAs she spoke, my eyes were drawn not to the painting, but to the strands of hair that had escaped her bun and now rested delicately against the nape of her neck. I inched closer to her, so near I could almost feel the warmth radiating from her skin. \n\n\"Tell me what you see,\" she said, aware of my presence but not moving her eyes from the painting. \n\nI let her words hang in the air for a moment while I decided how to answer. When I spoke, I moved my lips to within a few inches of her ear and the words came in a whisper. \n\n\"I see the freckles on your shoulder,\" I said. \"I see a ringlet of hair resting against your neck, and I'm wondering what you'll do if I brush it aside and kiss your skin. I'm surrounded by beautiful paintings, yet you're the only thing in this room I want to look at. It's been that way since you first walked into my office.\" \n\nI waited for her reaction, but she neither spoke nor moved. It was as though she hadn't even heard me. \n\nI bent my head and placed a soft kiss on the side of her neck, right above her back. I heard her breath catch in her chest, but she remained motionless. \n\nI trailed kisses up the side of her neck, stopping just behind her ear. When I placed my right hand gently on her hip, she sighed and relaxed into me, pressing against my erection. When she didn't move away, I slid my hand up her side, cupping her right breast through the fabric of her dress. ",
        "At this, she arched back, resting her head against my shoulder, exposing more of her lovely neck. She brought her arm up and reached behind her, running her fingers through my hair as I nibbled her earlobe. \n\nMy pulse quickened. I removed my lips from her neck and pressed lightly on her side. She turned to face me, and our lips found each other, hot and hungry. \n\nHer tongue slipped into my mouth and I pulled her tightly toward me, groaning with desire as her breasts pressed against my chest. \n\nShe broke the kiss and slipped her hand into mine, guiding me down the hall, through her bedroom door, and then pulling me on top of her as she collapsed backward onto the bed. \n\nWe shed clothes as we kissed, urgently and awkwardly, with Carina laughing into my mouth as I tried to dislodge my belt with one hand. \n\nThen our bare skin pressed together, and the laughter stopped. My hands were everywhere, desperate to explore every slope and curve of her body at once, lingering only briefly in one spot before moving greedily to the next. \n\nShe pulled my head to her chest and I traced the pebbled skin of her areola with my tongue before taking the hard bud of her nipple in my mouth. I cupped the warm flesh of her other breast in my hand and rolled her nipple between my thumb and finger, eliciting a hiss of delight. \n\nHer legs wrapped around my back and tightened, trying to draw me into her. I resisted the urge to drive my throbbing cock insider her, and instead kissed my way down her smooth stomach. Her legs slipped from my back as I made my way lower, then spread wide as my mouth skimmed the neatly trimmed hair above her pussy. \n\nI inhaled her scent as I nipped teasingly around the inside of her thighs. She squirmed in frustration, desperate to make contact with my tongue. I ran a finger slowly up and down her dripping slit until she was writhing with need. \n\n\"More...\" she panted. \"Adam, please...\"\n\nI spread her lips with my thumbs and buried my tongue inside her. She gasped and wound her fingers through my hair, pulling me against her. She tasted exquisite, and I moaned into her sodden pussy so that she could feel my need. \n\nI used slow circles with the pad of my finger to coax her clitoris from its hood, and she mewled with delight as my tongue flicked and darted across it. I took my time, letting her body tell me when she wanted more and when she needed me to back off. \n\nWhen I slipped a finger inside her and curled it rhythmically upward, Carina began a series of quick, sharp exhales that continued to grow louder and more intense. Her hand released my hair and moved to the bed, where it began clenching and unclenching the sheets. \n\n\"Yes, yes...oh, fuck... don't stop...so good...I'm almost there...\" \n\nShe tensed and arched her back off the bed. Her thighs clamped around my ears, released, then clamped again. \n\nWatching her come was intoxicating. I wanted to bury myself inside her right then, but I kept a steady pace, determined to help her ride the wave of her orgasm. Her body gave a final shudder and her hand pressed lightly on my head. \n\nI kissed my way back up her torso. She took my face in her hands and pulled me into a passionate kiss. \n\nShe brought her mouth to my ear. \"I can taste myself on your lips,\" she whispered. \"Now I want to taste you. Lie back.\" \n\nMy cock twitched as I eased onto my back. She moved to the bottom of the bed, straddled me, and circled her fingers around my shaft. While holding my gaze with her hypnotic blue eyes, she brought her tongue to the head of my cock and delicately licked the precum from the tip.\n\nShe raised her head and stroked me slowly in her hand, watching my face with a hungry expression, as though the pleasure she was drawing from me was something she also felt. \n\nThen she lowered her head and began a long, slow lick from the base of my shaft to the head. When she reached the top, she closed her lips over the tip and eased downward, engulfing me in her warm mouth. I nearly came on the spot. \n\nShe bobbed her head slowly, moving at an almost tortuous pace. Sometimes she would draw me completely out, flicking the sensitive skin of my frenulum with her tongue for a few seconds before taking me into her mouth again. All the while she held my eyes with her own. \n\nIt was the most exquisite blowjob I'd ever experienced. Lauren would never deny me blowjobs if I expressed interest, but she rarely initiated them. Oral sex was almost a perfunctory duty she felt compelled to perform. \n\nCarina seemed to revel in it. Her hands and mouth worked in tandem to milk every ounce of pleasure from my aching cock. Her pace increased, slowly at first, then more quickly, until my entire body was vibrating with need. \n\n\"Fuck, that's good,\" I groaned. \"I'm close.\"\n\nShe moaned into my cock and moved faster. Her free hand cupped my balls. When her fingernails lightly scraped my scrotum, I exploded. Spurt after spurt of cum erupted from my pulsing cock. Not a drop escaped her lips. \n\nWhen I finally regained my senses, she pulled her mouth from the head of my cock and smiled. She slid her way up my body until her face was level with mine and trailed her fingers lazily across my chest. \n\n\"I have a sneaking suspicion that you came here tonight hoping to see more than just my paintings.\"\n\n\"I may have had an ulterior motive.\"\n\n\"That's okay,\" she said. \"My motives may not have been exactly pure, either.\" \n\nShe rested her head against my shoulder, and we lay together in silence, her skin warm and soft against my own. I traced my fingertips lightly along her spine. Her breathing slowed, and soon she was asleep. \n\nI tried to let her rest, but after a short time my cock began to stir against her stomach. Her eyes fluttered open. \n\n\"Sorry,\" I said. \n\nShe gave an exaggerated sigh. \"I guess we'll have to take care of this so I can get some rest.\" \n\nShe sat upright and straddled me, trapping my cock between the still slick folds of her labia and pressing it flat against my stomach. With her palms resting against my chest and her eyes locked onto mine, she slid back and forth across the length of my shaft in a slow, teasing rhythm. It was torture not to be inside her, and I moaned in frustration. \n\nHer pussy grew wetter, but her pace remained unhurried. She would slide all the way past the tip of my cock and tilt her hips, presenting me with the perfect angle to slip inside, but when I moved to push up and into her, she just shook her head and slid tantalizingly back down to the base of my shaft. \n\nAgain and again she repeated the tease, grinding into me. I knew if it lasted much longer, it would end with me coming all over my own stomach. She seemed to soak up my agony like a sponge, and her eyes glazed over with lust. \n\nI slid a hand up her back and tilted her forward so that her breasts were inches from face, then raised my head and took her left nipple in my mouth. She groaned and stopped sliding along my shaft so that my mouth could maintain contact with her breast. \n\nI moved my hands to her butt and cupped her firm cheeks. With a steady pressure, I ground her hips against me as I kissed her. \n\nShe was so distracted by the attention I was lavishing on her breasts that she didn't notice when I repositioned the entrance to her sex directly over the head of my cock. With one quick motion, I slid her hips forward and buried myself to the hilt with one hard thrust. \n\nShe cried out and arched back into a sitting position, pulling her breasts from my mouth. I rocked her hips against me. As she moved, the walls of her pussy clung tightly to my thick shaft. It took all my resolve not to erupt instantly inside her scalding depths. \n\nWe found a rhythm and moved desperately together, racing toward our release. She reached hers first, collapsing against my chest in a shuddering heap as her pussy convulsed again and again around my cock. \n\nSomehow, I managed to keep control through her long orgasm, but as soon as she finished, I gripped her hips and began pounding into her. She moaned and whimpered as I sawed into her, but otherwise lay motionless and exhausted atop my chest. \n\nMy movements soon grew erratic. \"Yes. That's it,\" she whispered into my ear. \"I want to feel you come inside me.\" \n\nWith a loud groan, I stiffened and buried myself inside her, flooding her with whatever cum she hadn't already sucked from my cock. \n\nThe muscles in my neck uncoiled, and my head sank into the soft pillow. Carina slipped off to the bathroom, and by the time she returned, I was almost dozing off. She curled her naked body into me and laced her fingers through mine. Her skin warmed my chest until our bodies shared the same temperature and I could no longer tell where her flesh ended and mine began. It was in that pleasant absence of sensation that sleep finally washed over me.\n\n*******\n\nThe fact that she lived close to my lab meant that Carina and I had plenty of opportunities to see one another. Since she freelanced and didn't have a set schedule, she would stop by my office during the day, often with lunch. Forensic work can be tedious, so I was grateful for the company. \n\nWe talked about everything under the sun. Travel was one of her guilty pleasures, and with the money from her parents' estate, she'd been able to indulge in some amazing trips. She'd seen Komodo dragons in Indonesia, walked the halls of the Louvre in Paris, witnessed the splendor of Iguazu Falls from the Argentinian side, and toured the museums of Italy. Not to be outdone, I impressed her with photos of the majestic sphynx and towering pyramid I'd visited in the deserts of Las Vegas, Nevada. \n\nOccasionally, she'd ask about my work, and she did a fairly good job of feigning interest as I discussed the finer points of pigment analysis or showed her how to spot anachronistic fibers under a microscope. \n\nMore often, though, she'd do her best to drag me away from the office, sometimes for a walk through the Brooklyn Botanic Garden, which is gorgeous in spring, or back to her brownstone, where we'd spend a lazy afternoon in bed. \n\nCarina's frequent visits reminded me of the happy times I'd spent early in my marriage to Lauren, shortly after we'd started the business together. Lauren and I would also talk for hours, and in those moments I couldn't believe that I was lucky enough to be doing work that I loved side-by-side with the woman I loved. \n\nAs we were finishing lunch in my office one afternoon, Carina caught me staring at a painting on the wall, lost in a moment of wistful reflection. \n\n\"You're thinking about her, aren't you?\" she asked. \n\n\"Yes,\" I admitted. \"But not because I want to. When I'm in this room, sometimes memories just pop into my head.\" \n\n\"You two must have spent a lot of time together here.\" \n\nIt occurred to me for the first time that maybe Carina spent so much time at my office because she was trying not only to drag me away from work, but also from my memories of Lauren. \n\n\"Yes and no,\" I said. \"Lauren did some of the forensic work, but that was mostly my specialty. Her real talent was marketing. She spent a lot of time visiting galleries in the city, trying to make connections and drum up business. She was smart, beautiful, and persuasive. If I'm honest, we probably would have gone under if she hadn't been so good at it.\" \n\n\"There wouldn't have been a service to market, if it weren't for you,\" Carina said. \n\nI smiled at her defense of my contributions. \n\n\"You're right,\" I said. \"I am amazing.\" \n\n\"You are!\" she said, walking over to me. \"Look at you with your square jaw and that sexy stubble.\" She ran her hand across my cheek, then trailed it down my chest. \"You're built, too. You know, the day I met you, I thought you belonged on the cover of some catalog for rugged outdoorsmen, not behind a microscope.\"\n\n\"Careful. You're going to give me a big head,\" I said. \n\n\"If it weren't for the glasses,\" she said, snatching them from my nose and leaning in to study my face, \"I never would have known you were a huge science nerd.\" \n\n\"Never mind. My head's back to normal size,\" I said. \n\n\"You're welcome,\" she said, pecking me on the lips and slipping my glasses back on. \n\n\"So, what happened with you and Lauren?\" she asked, plucking a crouton from the remnants of my salad. \n\n\"It's a long story,\" I said. \"The short version is that I started paying more attention to the business than her art.\"\n\nCarina looked confused. \"How about the slightly longer version?\" she asked. \n\n\"We were both painters when we married. Lauren was much better than I was, and she had dreams of making it as an artist. For the first few years, I did everything I could to support her. I worked two jobs so that she could devote more time to painting. I fawned over her work and helped her get pieces in a few shows and exhibitions. I always assumed that if the roles were reversed, she would do the same for me, you know?\" \n\n\"But she didn't,\" Carina said. \n\n\"She did at first. Starting the business was my idea, and, like I said, she worked her ass off to help get things going. But once we started to get some work, things changed. It cut into her time to paint. And I no longer had as much time or energy to support her. The better our business did, the more resentful she became. I think she felt like I was choosing my dream over hers.\n\n\"When she met Preston Richards during one of the stops on her marketing blitz, she was starved for attention, and he served her a gourmet meal,\" I said. \n\n\"Preston Richards?\" Carina asked. \n\n\"Head of modern and contemporary art at the Kiefer Gallery.\"\n\n\"Where Lauren works now?\"\n\nI nodded. \"Lauren told him she was an artist, and of course he asked to see her work. All the attention and support that I was no longer providing, he gave her in spades. She ate it up. I don't know how long it took him to wear her down, but it probably wasn't as long as I'd like to believe.\n\n\"The funny thing is, I actually thought our marriage was improving before I caught them. I'd been spending less time at the lab and had been making it a point to talk to Lauren more about her art. I thought it was paying off. She seemed happier. Started going to the gym. Dressing sexier. Even got a Brazilian wax.\" \n\nCarina gave me a pitying look. \"For someone who makes his living detecting fraud, you missed some pretty glaring signs.\" \n\n\"People see what they want to see. I didn't want to see her as an adulterer.\"\n\n\"So, how'd you find out?\" \n\nI gave a bitter chuckle. \"In the most cliched possible way: I came home early. I felt sick after lunch, so I came back to our apartment to rest. Lauren was supposed to be meeting with a gallery owner across town. Instead, she was meeting with Preston in our bed.\" \n\nCarina shook her head. \"What did you do?\" \n\n\"I don't remember exactly. There was a lot of yelling and screaming, I know that. And at some point, I punched Preston. Broke his jaw, I found out later.\"\n\n\"Bet that felt good,\" Carina said. \n\n\"Really good,\" I said, smiling. \"But after that, I didn't feel good again for a really long time.\"\n\nCarina wrapped her arms around me and pulled me tightly against her. She rested her head against my shoulder. \"I'm sorry.\" \n\n\"I wouldn't wish that feeling on anyone,\" I said. \"On the other hand, if it hadn't happened, you wouldn't be here with me right now. And I can't think of anywhere else I'd rather be.\" \n\nCarina looked up at me. I kissed her, and she kissed me back. She broke the kiss and raised herself onto her toes, placing her warm lips against my ear. \n\n\"I know a way to help you escape the memories of your ex-wife that are lurking around here,\" she breathed. \n\n\"Yeah?\" \n\n\"Yeah.\" She nipped at my earlobe. \"We make some memories of our own.\" \n\nIt sounded like a good plan to me. \n\n*******\n\nIn the months that followed, I came to appreciate all the wonderful little quirks and foibles that you discover at the start of a new relationship. For example, Carina hated condiments: ketchup, mustard, mayo, barbecue sauce, pretty much everything that made food taste good. She was superstitious, assiduously avoiding black cats and ladders, and even keeping her second bedroom permanently locked just because the movers had broken a mirror there on her first day. She was a sucker for musicals, but had an awful singing voice, which unfortunately didn't stop her from belting Les Mis\u00e9rables songs in the shower. \n\nA mangled version of \"One Day More\" was emanating from her bathroom one Saturday morning while I searched through some of her kitchen drawers looking for a spare USB cable to charge my phone. Tucked in the back of one of the junk drawers I spotted a folded brochure. The logo caught my eye, because it was one that I immediately recognized. It was from the Kiefer Gallery. \n\nI removed it from the drawer and smoothed it out on the cool granite of the kitchen island. It advertised an auction the gallery was hosting next month. The pages were peppered with glossy photos of paintings. \n\nIt irritated me that Carina was interested in an auction at the gallery where Lauren worked. I knew it was irrational. It wasn't fair to expect Carina to take my failed marriage into account whenever she was considering buying a piece of art. But it upset me that she had never mentioned it. It looked like she'd even tried to hide the brochure. It was deceitful. \n\nI refolded the brochure and slid it back into the drawer, in the exact position I'd found it. I would just pretend I didn't know anything and see if she copped to it. Now I was the one being deceitful, but I didn't care.\n\nCarina came out of the shower wearing only a fluffy white towel. I was standing in the living room, staring at a painting of a fisherman loosing a boat from its moorings. She padded across the hardwood in her bare feet and wrapped her arms around me, running her hands over my chest and pressing her breasts into my back. \n\n\"That's one of my favorites,\" she said. \n\n\"It's beautiful,\" I said. \"All of these pieces are.\"\n\nI turned to face her and kissed the top of her head. Her hair was still damp from the shower. A bead of water trickled between her breasts and disappeared under the towel. \n\n\"Any plans to add to the collection?\" I asked. \n\nShe glanced up at me. For an instant, her expression changed, and I was reminded of the way she'd scanned the room on the day we met, her eyes seeming to absorb every detail. Then, her face softened. \n\n\"Actually, yes,\" she answered with a nervous smile. \"There are one or two pieces I was thinking of bidding on.\" \n\n\"That's great. When's the auction?\"\n\n\"Next month.\"\n\n\"What gallery?\"\n\nShe cringed. \"Okay, don't be mad.\" She closed her eyes, took a breath, then opened them. \"The Kiefer Gallery. Please don't be mad,\" she repeated. \n\n\"Why would I be mad?\" I asked, as though it were the silliest idea in the world. \n\n\"I don't know. It's just...Lauren works there, and I worried...maybe...never mind. It's stupid. I'm sorry. I should have told you sooner.\" \n\n\"Don't worry about it,\" I said. \"I'm happy you found something you like.\" \n\nI hoped my words would put her at ease, especially since I was feeling a little guilty for trying to trap her in a lie, but instead she looked even more nervous. \n\n\"There's one other thing,\" she began. \"If I have the winning bid, do you think maybe you could examine the painting for me?\" \n\nI must have looked surprised, because she added quickly, \"I'd pay you, of course. I'm not asking for a freebie. I'd just feel better if you looked at it.\"\n\nI wasn't sure whether she was trying to soothe any hurt feelings I might have, or whether she really didn't trust Lauren to do her job. Not that it mattered. Both were good reasons. \n\n\"Absolutely,\" I said. \"Of course, since it's from the Kiefer Gallery, I'm going to have to charge you double.\" \n\nShe laughed and finally seemed to relax. \"Then I'll expect your best work,\" she said, standing on her toes to kiss me. ",
        "I slid my hands underneath the towel and over the warm skin of her ass. \n\n\"I always do my best work,\" I said. I scooped her off the floor and she yelped, wrapping her legs around me for balance. I started walking her toward the bedroom. \n\nShe grinned and loosened the front of the towel. It slipped lower with each step we took, exposing the delicious swell of her breasts, then one pink nipple, already erect and inviting. \n\n*******\n\nSometimes after you've finished an initial examination of a painting, you can't escape this nagging feeling that something isn't quite right. That's how I felt after my conversation with Carina. \n\nWhen I feel that way with a painting, I take a second or sometimes even a third pass to see if I can uncover something that I missed the first time around. With Carina, I wasn't quite sure what to do. \n\nHer visits to my lab had become less frequent because she was buried in a freelance project, so I mostly saw her in the evenings. I started taking time away from the office to drive past her brownstone at random times of the day. I wasn't sure what I expected to find. Nothing ever seemed out of the ordinary. \n\nSometimes I would stop by unannounced with lunch. I told myself I did this to return the favor for all the times she'd brought me lunch while I was busy, but really it was just an excuse to make sure she was actually home. Carina was always happy to see me, and usually invited me to stick around and eat with her. \n\nI knew my paranoia stemmed from trust issues over Lauren's affair, and I worried that if I continued along this path, I was going to fuck up a wonderful new relationship before it could take root. It wouldn't be the first time. I resolved to stop being so self-destructive.\n\nProblem is, I've never been good at sticking to resolutions. One morning, after I left her place to go to work, I circled back on foot and walked a few loops along the side streets near her brownstone. After about 45 minutes, a man showed up at her door. I was too far away to make out his features. Carina answered and exchanged a quick kiss on both cheeks before letting him in. \n\nMy stomach lurched and for a moment I thought I was going to be sick. I forced down the nausea and told myself not to jump to conclusions. It could be a friend or relative. Secret lovers don't usually exchange European-style cheek kisses, I reasoned. When I got to her place, she'd probably give a perfectly reasonable explanation and introduce me. \n\nI sent her a quick text as I walked briskly toward her door. \"Hey. Forgot my charger. In the neighborhood so I'll swing by to pick it up.\" \n\nHer reply came a moment later. \"Sure. Where is it? I'll run it down to you.\"\n\n\"Not sure. Just let me in and I'll find it. Don't want to interrupt your work.\" \n\nThis time there was a longer delay before she responded. \"Okay. Let me know when you get here.\" \n\n\"Already here,\" I typed. \n\n\"Wow. That was fast,\" she said, opening the door a moment later. \n\n\"Sorry. I should have texted sooner.\" \n\n\"It's fine. I'm happy to see you. Wish you could stay, though.\" She molded her face into a pout. \"I'm lonely.\" \n\n\"Lonely?\" I asked.\n\n\"Yeah. I'm stuck here by myself working when I could be...\" \n\nI didn't wait for her to finish. I was moving up the steps now, taking them two at a time. Carina almost had to jog to keep up. \n\n\"What's going on, Adam?\" A note of panic had crept into her voice. \n\n\"You never did seem like the superstitious type,\" I said.\n\n\"What are you talking about?\"\n\n\"Never using your second bedroom because the movers broke a mirror there.\" \n\n\"You're scaring me.\" \n\nI was in the hall now, striding toward the spare bedroom. \n\n\"Is he in there?\" I asked.\n\n\"Adam, listen...\"\n\n\"Open it or I'll break it down.\" \n\n\"Just wait a second.\" \n\n\"Wrong answer.\" I kicked the door. Hard. The hinges rattled but held. \n\n\"Stop it! Please!\" \n\nI backed up and kicked it again. There was a loud crack and the sound of wood splintering. \n\nI lifted my leg and took aim, but before I could deliver the final blow, the door swung open. In the doorway stood a tall man with long blond hair and a deep cleft in his chin. He looked to be in his early 50s. \n\n\"No need to keep knocking. I heard you. Please come in.\" He spoke with a French accent and gestured toward the interior of the room. \n\nI brushed past him and took in my surroundings. A large window at the far end of the room flooded the space with light. Various pieces of antique wooden furniture stood propped against the wall on the right side of the room. Some of the furniture looked to have been dismantled or cut into smaller pieces. A plain white mattress with a single pillow rested on the floor in the corner. \n\nOn the other side of the room was a long wooden table littered with various shapes and sizes of jars. Most held paint. Some held brushes. Next to the table was a small shelving unit on wheels stocked with additional paint. \n\nIn the center of the room was a large easel that held a half-finished painting. It was still life in the unmistakable style of Henri Matisse.\n\nCarina spoke calmly and slowly. \"Adam, this is Maxime.\"\n\nI glanced at the man, then at the white mattress in the corner of the room. Carina followed my eyes. \n\n\"Maxime is not my lover,\" she said. \"He's my business partner. He specializes in procurement.\" She gestured to the furniture and the paint. \"Pigments, canvas, wood, anything I need. He's the best in the world at what he does. I would be nothing without him.\" \n\nCarina smiled warmly in Maxime's direction. \n\n\"She is too modest,\" Maxime said to me. \"She has the gift. She could work with a child's brush and finger paints and conjure brilliance.\" \n\nHe turned to Carina. \"I think maybe I will give you some privacy, yes?\" \n\n\"Thank you, Maxime,\" she said. He turned and left the room. I watched him go, still too stunned to speak. \n\nCarina and I stood together in silence, both staring at the canvas in the center of the room. She seemed to understand I needed time to absorb and process things. \n\n\"The Walker you brought to my lab,\" I said. \"You painted it.\" \n\n\"Our first night together I told you my motives weren't exactly pure,\" she said. \n\n\"Why bring it to me?\"\n\n\"Curiosity. I wanted to see if you were as good as advertised. But also, I needed information.\" \n\nI could almost hear the pieces snapping into place inside my sluggish brain. She wanted to sell her forgeries through a gallery with the weakest possible forensic scientist, but she had needed me to tell her who that person was. \n\nShe first tried to coax the name from me in my lab. She told me someone had said I wasn't the best, but she wouldn't say who told her. I thought she was just protecting her source, but the truth was she didn't have a source. She'd made it up, hoping I would fill in the blank for her. \n\nShe tried again at the bar. \"Tell me who you think it was and I'll tell you if you're right,\" she had said. She assumed my answer would be someone I held in very low regard, someone she hoped could be duped relatively easily. \n\nAnd I'd stupidly given her Lauren's name. And then even more stupidly told her how Lauren cheated on me. Carina's eyes had widened when I told her, not because she felt sorry for me, but because she couldn't believe her luck. Not only did she have the name she wanted, but she also knew that Lauren would never consult me on the analysis of her paintings. \n\nI was furious and embarrassed at how easily I'd been manipulated. \n\n\"The brochure,\" I said. \"You're not buying a piece from the auction. You're selling one.\" \n\nShe smiled. I felt my anger threatening to boil over. \n\n\"I should call the police right now,\" I said. \n\n\"And tell them what?\" she replied calmly. \"That your girlfriend is painting in her room?\"\n\n\"Then I'll call the Kiefer Gallery. I'm sure they'll be interested to know that one of the paintings in their auction is a forgery.\" \n\n\"They won't believe you.\" \n\n\"What makes you so sure?\"\n\n\"You said it yourself: people see what they want to see. Everyone wants to believe they've found something special. It makes them feel special, too. My job is to help them believe.\" \n\n\"Is that what you did with me? Trick me into believing I found something special?\"\n\n\"Don't say that. What we have is different. You know that.\"\n\n\"What we have is a mirage. A lie. We have nothing.\" \n\nShe looked as though I'd slapped her. \n\n\"Maxime was furious with me, you know. He told me I was being stupid. That I was risking too much. I knew he was right, but I didn't care. I wanted to be with you. \n\n\"Once I had a name, I was supposed to end it. Every day I told myself that's what I would do, and every day I kept finding excuses to see you again. Even now, a part of me wants to believe there is some way this all works out.\"\n\nMy ego desperately wanted me to believe her, but I knew she was just toying me with me, manipulating me again. \n\n\"Bullshit,\" I said. \"You only stuck around so you could watch me work; to learn how I caught others, so that I wouldn't catch you.\"\n\nFor the first time, her eyes flashed with anger. \"You think I'm a prostitute? That I fucked you for months just so I could pick your brain about forensics? You're not that good.\"\n\n\"Yes, I am.\"\n\nShe laughed. \"So arrogant. I don't need your help. Do you have any idea how successful I've been? You wouldn't have a prayer of spotting one of my pieces.\" \n\n\"I already did.\" \n\n\"Only because I told you that I thought it was a fake.\" \n\n\"That's why you'll be caught one day,\" I said. \"Because you believe you never will be.\" \n\nI turned and started to walk away. I couldn't be near her any longer. Too many emotions were swirling inside my head. \n\nShe grabbed my arm. \"Don't leave. Please.\" There was a slight quaver to her voice, and her eyes had welled with tears. It was a fine performance. \n\n\"That sob story you told me about your parents. Living with your aunt. Wandering the halls of the museum and losing yourself in paintings. Was any of it true?\"\n\nHer face told me all I needed to know. I wrenched my arm from her grasp. \n\n\"The day we met,\" she said, \"I asked if you would want to know whether a painting you owned was a forgery. You told me that if you really loved the piece, you didn't think it would matter. Do you remember?\"\n\n\"I remember,\" I said. \"But I don't love you, Carina.\" \n\nThe tears that had gathered in her eyes spilled down her cheeks. I left the room and started down the steps. \n\n\"Where are you going?\" she called.\n\nI'd had enough lies for the day, so I told her the truth. \n\n\"Away from you,\" I said. \n\n*******\n\nI turned off my phone and spent two days in a hotel. I needed time to think, and I didn't want Carina trying to track me down. \n\nI decided against going to the police. I may have been able to convince them to investigate, but they wouldn't be able to prove anything. Besides, I wanted to be the one to catch her. And I wanted to beat her fair and square. \n\nI thought it unlikely she had someone from the gallery working with her on the inside. That would just complicate things and introduce unnecessary risk. Plus, I was certain Carina believed it was simpler for her to fool someone than pay them off. \n\nMy next step was determining which of the paintings she had forged. I paged through the auction brochure I'd brought with me. It featured a lot of landscapes and still lifes, pieces that looked very similar to those Carina displayed on her walls. It seemed likely she would continue working in that style. \n\nHowever, something she'd told me before I left kept rattling around my brain. Everyone wants to believe they've found something special, she had said. I flipped to the front page of the catalog, which showcased the auction's centerpiece: a newly discovered portrait by Modigliani. That would certainly qualify as finding something special. But would she really be that arrogant? \n\nModigliani was one of the most forged artists of the last century, in part because he had a reputation early in his career for trading canvases for rent money in Paris. That made the provenance of some of his works hard to trace and easy to fake. As a result, any of his paintings up for auction, especially a newly discovered one, would be subjected to intense scrutiny.\n\nThe risk would be huge, but so would be the payoff. An authentic Modigliani could fetch millions. \n\nIf this was Carina's play, then my next stop was unavoidable. It was the place I least wanted to go, but where I most needed to be. \n\n*******\n\nLauren's lab was almost twice the size of mine. She had access to the latest models of all the equipment I used, plus several instruments that I didn't have. I stared longingly at the FTIR microscope in the corner of the room. \n\n\"How've you been, Adam?\" Her words dripped with false sincerity. \"You seeing anyone?\" \n\nMy jealousy, combined with my irritation at her condescending cheeriness, already had my blood boiling.\n\n\"Nope. Preston proposed yet?\" \n\n\"Marriage is an archaic institution. Preston doesn't believe in it.\" \n\n\"How nice. You have that in common.\" \n\nHer jaw tightened in anger, but she recovered quickly. \"What do you want, Adam?\" \n\nI was glad we were through with the pretense. \n\n\"You have a new Modigliani you're planning to auction.\" \n\n\"Looking to bid? I'm afraid it's a bit outside your price range. Unless business has improved?\"\n\n\"I don't want to buy it. I want to examine it.\"\n\nShe laughed. \"You came all this way to ask a question you already know the answer to?\"\n\n\"I mean it, Lauren. I'd like to see it.\"\n\n\"Why?\"\n\n\"Because I have reason to believe it's a forgery.\"\n\n\"Bullshit.\"\n\n\"Why would I lie to you?\" \n\n\"Oh, I don't know, Adam. Here's a theory. You're still bitter I got this job instead of you. You want to believe that you're so much better than I am, and the only reason I'm working here is because of my relationship with Preston. It would crush your fragile ego to admit that maybe, just maybe, I'm also good at what I do. Well, guess what? This may surprise you, but you're not the only one who knows how to work a microscope.\" \n\n\"It's not about that,\" I started, but she continued talking over me. \n\n\"So to get back at me\u2014for the affair and for my getting this job\u2014you want me to declare an authentic Modigliani to be a forgery. The minute I do, the gallery gets sued for defamation. Huge awards have been given in cases involving false forgery claims. You know this as well as I do. And later, when the painting is shown to be authentic, my reputation and career are ruined. Wouldn't that be a nice 'fuck you' to your ex-wife?\"\n\n\"I'm not here to sabotage you, Lauren. I'm just asking you to let me look at it. I'll take on the risk.\" \n\n\"You want the gallery to take the most important piece in this auction and farm it out to someone else for authentication? Instead of trusting their own in-house forensic specialist? What do you think that does for my reputation? No way. You aren't getting within a mile of that painting.\" \n\n\"Then you've completed your forensic analysis?\"\"\n\n\"Of course\". \n\n\"You're convinced it's authentic?\" \n\n\"Not a doubt in my mind.\" \n\n\"And what makes you so certain?\" \n\n\"Because its provenance includes contemporary photographic documentation.\" \n\nShe smiled at the stunned look on my face. A contemporary photograph was pretty close to the holy grail when it came to a work's provenance. It immediately made me question whether I was on the right track with my suspicions about the Modigliani. Maybe Carina was too smart to take such a huge risk. Maybe hers was one of the less conspicuous paintings in the auction. \n\n\"You don't believe me,\" she said. \n\nShe pulled a folder from a drawer and rifled through its contents. She extracted a black and white photo and handed it to me triumphantly. It showed a middle-aged man sitting at a wooden table holding a partially folded newspaper. He was eating breakfast. To his right stood a handsome grandfather clock. The Modigliani was mounted on the wall to his left. \n\nI stared at the photograph, noting the weight and size of the paper. \n\n\"Looks to have been taken with a box camera,\" I said. \"From the size, I'd guess a Kodak Brownie 2.\" \n\nShe nodded, that smug smile still plastered to her face. I pulled out my phone. \n\n\"Do you mind?\" I asked, nodding toward the photograph. \n\n\"Be my guest,\" she said. \n\nI snapped a photo and handed the original back to her. \n\n\"Are we done here?\" she said. It wasn't a question. \n\n\"I'm certainly done with you.\" \n\n\"Good. You can see yourself out.\" \n\nI was halfway through the door when she stopped me. \n\n\"Adam?\" she called. \n\nI swiveled to face her. \n\n\"Don't ever show up unannounced at my place of work and try to pull some shit like this again. I don't need professional advice from you, and if I did, I'd fucking ask for it.\" \n\n*******\n\nIt's possible I could have made more progress with Lauren had I told her about Carina, but that would have involved admitting that I'd dated a master forger for months without realizing it. I wasn't about to confess that embarrassing tidbit, especially to Lauren. Besides, Lauren was more likely to believe that I'd been working with Carina than fooled by her. I didn't need that headache.\n\nBut if I were being honest, I'd chosen to keep silent because I was protecting Carina as much as I was protecting myself. Despite what I'd told Carina in her studio, I did have feelings for her. I'd just done such a good job of closing myself off after the divorce that I wasn't ready to face them. I wanted to stop her, but I also didn't want to hurt her. \n\nProblem was, I didn't know if I could stop her. I was no longer confident the Modigliani was Carina's work. Even if I were certain, I'd have to prove it was a forgery without examining it. \n\nI do my best thinking under pressure, so I decided to manufacture some. I made a call to Nora Turner, the owner of the Kiefer Gallery, and asked for a meeting. Nora was a brusque septuagenarian who had devoted her career to burnishing the reputation of the Kiefer Gallery. She'd risen to become one of the most powerful figures in the New York art world. \n\nI knew Nora didn't suffer fools gladly, but I also knew she cared about reputation. She was aware of mine, and tenacious about protecting her gallery's. I told her I had some information to share about the Modigliani, and that it was important that she, Lauren, and the seller's representative attend. I also asked for her discretion. \n\nShe agreed. Before she hung up, she thanked me for reaching out and said that if I were wasting her time, she'd castrate me and display my balls as part of a special exhibition titled \"Hubris.\" \n\nI had my meeting. Now all I had to do was come up with a reason for it. \n\n*******\n\nA week later I was sitting in the waiting area outside the Kiefer Gallery's conference room. My hands fidgeted in my lap, and my right leg bounced up and down on the ball of my foot. I couldn't decide whether this was a bad idea. That usually meant it was. \n\nThe exterior door burst open and Nora Turner strode into the waiting area. She walked briskly toward me. I managed to pop up from my chair just before she arrived. \n\n\"Mr. Weber,\" she said. She didn't extend her hand, but merely nodded. \n\n\"Ms. Turner,\" I answered. \"Thank you for arranging this.\" \n\n\"Everyone's inside.\"\n\n\"Did you tell them I was coming?\"\n\n\"No. They're both very curious why I've called this meeting.\" Her eyes narrowed and bored into mine. \"I'm curious myself.\" \n\nShe turned on her heel and I followed her to the conference room. She flung open the door and began speaking before she'd even entered the room. \n\n\"This is Adam Weber, an independent forensics specialist. Adam, I believe you know Lauren Schrader.\" \n\nLauren shot me a glare so intense it felt as though she were trying to melt me where I stood. ",
        "\"And this is Georgeanna Wilkes,\" Nora continued, gesturing toward a chair where Carina sat, \"representative of our anonymous seller.\" \n\nCarina rose from the chair, flashed me a pleasant smile, and extended her hand. If she were surprised to see me, she didn't show it. \n\n\"Mr. Weber,\" Carina said in a clipped British accent. \"Very pleased to meet you.\" \n\nI was surprised she'd chosen to serve as her own liaison to the gallery. It dramatically increased her exposure. Most forgers preferred absolute anonymity. Then again, Carina never lacked for confidence in her abilities. \n\n\"Nice to meet you, Ms. Wilkes,\" I replied, taking her hand. \"You're from England?\"\n\n\"Wales, actually.\" \n\n\"You don't say? I've always wanted to make it over to Carmarthenshire to see St. David's Cathedral.\" \n\n\"Oh, it's certainly worth the trip,\" Carina replied. \"Though I'm afraid you won't have much luck in Carmarthenshire county. St. David's is in Pembrokeshire.\"\n\n\"Of course. My mistake,\" I said, doing my best imitation of an embarrassed grin. \n\nNora had given me a few details about the seller, so I'd had a chance to brush up on my geography. Carina had sidestepped my trap effortlessly. Either she had also done her homework, or she'd been faking her American accent and not her Welsh one. \n\nWe all took seats around the ornate conference table. I placed a manila envelope in front of me. Carina glanced at it. \n\n\"Forgive me if this sounds rude, Mr. Weber,\" Carina said, \"but I have to confess that I'm a bit confused why you're here.\" \n\n\"There's no easy way to say this, Ms. Wilkes. But I'm afraid the owner of the Modigliani you're selling is trying to pass off a forgery.\" \n\nLauren snorted derisively. \"You're unbelievable,\" she said. \n\nCarina feigned shock. \"That's quite an accusation, Mr. Weber. I wasn't aware you'd been given an opportunity to examine the painting,\" she said, glaring at Nora. \n\n\"He wasn't,\" Nora replied, making no attempt to hide her irritation at Carina's accusation. \n\n\"He doesn't know what he's talking about,\" Lauren said. \"I'm the only one to examine that painting. And it passed with flying colors. Not a single anachronistic pigment.\"\n\n\"Did you date the frame?\" I asked. \n\n\"What?\"\n\n\"The wood. Did you date it?\"\n\nLauren shot a furtive glance toward Nora, then collected herself and spoke as though she were composing an essay. \n\n\"Given the results of the pigmentation analysis and the provenance, I didn't feel it was necessary in this case to...\" \n\n\"It's necessary in every case,\" I said, my words dripping with disdain. \n\n\"Synthetic fibers?\" I continued, not giving her a chance to respond. \"Did you check to see if anything was embedded in the paint that didn't belong there?\" \n\n\"Of course. I always spot check for...\" \n\n\"How many spots did you check?\"\n\n\"This is ridiculous.\" \n\n\"Why? I'm sure you mapped a grid and marked off each segment you checked so that you could calculate a specific percentage. I mean, not doing so with a work of this importance would constitute gross negligence. So, what percentage of the grid did you spot check?\"\n\n\"Fuck you, Adam.\" \n\nAn awkward silence followed. I let it linger and fought hard to suppress a smile. \n\n\"Do you have any evidence to support your claim, Mr. Weber?\" Nora asked. \"Or are you merely here to settle old scores? For your sake, I hope it's not the latter.\" \n\n\"He doesn't have a shred of evidence,\" Lauren said. \n\n\"I'm afraid that's yet another example of your poor attention to detail,\" I said. \"You showed me a photograph of the painting's owner eating his breakfast, remember? You were even kind enough to let me take a snapshot.\" I pulled four copies of the photo from my manila envelope and passed them around. \n\n\"As I've explained to Ms. Turner, the man in this photograph isn't the original owner,\" Carina said. \"He bought the portrait on a trip to Paris from a landlord who rented to Modigliani. When he returned to New York, he hung it in his home as a joke. He thought the elongated neck looked funny. \n\n\"He and my client's great-grandfather were business acquaintances, and both the painting and the photo changed hands as part of a gentlemen's agreement to settle some old debts. It's been in my client's family ever since, but only recently did they come to realize its value. Understandably, they'd like to avoid the attention that comes with such a find, so they've chosen to remain anonymous.\"\n\n\"Did the man in this photograph have a name?\" I asked. \n\n\"I'm quite sure he did, Mr. Weber,\" Carina said, a hint of irritation creeping into her voice. \"Most people do. But we haven't found a record of it.\" \n\n\"Of course not.\" \n\nI turned to Lauren. \"And what did your undoubtedly meticulous analysis of the photo reveal?\" \n\nLauren glanced again at Nora. This time she answered with confidence, proudly rattling off a series of rapid-fire facts. \n\n\"Black-and-white photo measuring 2-1/4 by 3-1/4 inches. Taken with a Kodak Brownie 2 and developed in a darkroom. Demonstrates wear markings consistent with a photograph of its age. Subject in photo is wearing period clothing. Furniture and dinnerware is also period appropriate. Oh, and the subject is holding a newspaper with the fucking date on it.\" \n\n\"I always thought that was a little on-the-nose, too,\" I said. \"I'm glad you agree.\" \n\n\"What?\" she said, perplexed at my response to her trump card. \n\n\"The newspaper. Held just so. Allowing us to see just enough of the front page and masthead to determine the date: June 13, 1919. Almost as if it were staged.\" \n\nShe laughed. \"It's staged because of the way he's holding the newspaper? That's pathetic, Adam, even for you.\" \n\n\"Did you know you can buy rare and vintage newspapers?\" I said, ignoring her. \"It's a niche market. Not many places sell them. So, I called them all.\" \n\nI glanced at Carina. Her face was expressionless. \n\n\"I told them I was looking for a copy of the New York Times from June 13, 1919. Most said they didn't have it. But do you know what one gentleman in Seattle told me? He said, 'That's amazing. We've never had a single request for that date, and now we've had two almost back to back.' He told me someone else bought one six months ago.\" \n\nI turned to Nora. \"Ms. Turner, my memory isn't what it used to be. Remind me, when did you say this Modigliani came into your gallery's possession?\"\n\n\"Five months ago.\" \n\n\"What a fascinating coincidence,\" I said. \n\n\"A coincidence is hardly proof that the photo is staged, Mr. Weber,\" Carina said. \n\n\"Very true, Ms. Wilkes. Very true,\" I said, standing up. \"However, there's something else odd about this photograph.\" I walked to her seat and pointed to a spot on the photo she was holding. \n\n\"Notice the face of the grandfather clock,\" I said. \n\n\"It says 8:05,\" Carina said. \n\n\"What's odd about that?\" Lauren asked. \n\n\"Nothing at all. I think we'd all agree 8:05 a.m. is a perfectly reasonable time to be eating breakfast. Would we not?\" I looked at each of the women in turn to make clear that my question was not rhetorical. \n\nNora nodded. Lauren shrugged. Carina didn't move. \n\n\"It's not the time that strikes me as odd,\" I continued. \"It's this.\" \n\nI pointed to the face of the grandfather clock with the tip of my pen. \"This grandfather clock has what's called a moon dial. It's hard to see in the original photo without magnification, so I've taken the liberty of enlarging it and making a few copies.\" \n\nI pulled the enlargements from the envelope and walked them around the room. As I did so, I gave Carina a wink. \n\n\"As the name implies, the moon dial displays the current phase of the moon. The dial is calibrated to make one half turn every 29.5 days, the length of the lunar cycle.\" \n\n\"About the length of time you've been talking, Mr. Weber. Would you please get to the point?\" asked Nora. \n\n\"Of course. The handy thing about the moon and the stars is that they move through the sky like...\" I tapped the photo. \"Well, like clockwork. You can work backward to calculate the phase of the moon on almost any given date, even one more than 100 years ago. On June 13, 1919, there was a full moon. Which leaves me to wonder, why does the moon dial on this particular clock show a waning crescent?\"\n\nSilence filled the room. It continued to expand until it felt like there was hardly space to breathe. Carina finally broke it. \"This is absurd. That clock could very easily be stopped. Or broken.\" \n\n\"If that were the case,\" I said, \"then why does it show what we've all agreed is a perfectly reasonable time for breakfast?\"\n\nI glanced at Lauren and Nora. They were both staring at Carina. \n\n\"How should I know?\" Carina answered. \"It was 100 years ago. Maybe the owner didn't care what phase the moon was in, or maybe he just didn't set the dial correctly.\" \n\n\"I think you've hit the mark, Ms. Wilkes,\" I said. \"Only, I don't think it was the owner of the clock who forgot to set the dial or set it incorrectly. I think it was the forgers.\"\n\nCarina was right. I really did enjoy delivering bad news. \n\n\"Well, I think you're grasping at straws, Mr. Weber. And I further think that if you or this gallery are intent on slandering my client with a false claim of forgery, then we will exercise our rights under the law to seek restitution.\" \n\n\"Stop blathering,\" said Nora. \"You won't be suing anyone. I'm not convinced the painting is a forgery. There's just not enough evidence.\"\n\nI was stunned. \"But, surely you don't still intend to sell this at auction?\" \n\n\"It's my gallery, Mr. Weber. I'm quite sure I can do anything I want.\"\n\nI glanced at Carina. She was smiling. \n\n\"However,\" Nora continued, rising from the table, \"based on the irregularities surrounding its provenance, I'm also not convinced the painting is an authentic Modigliani. And I'm not about to risk my gallery's reputation on a work I'm not convinced is genuine.\"\n\nShe turned to Carina. \n\n\"I'm afraid we'll have to pass on your painting, Ms. Wilkes. We will pull it from the auction and return it to your client, with our thanks for giving us an opportunity to sell it, and our best wishes for finding another gallery better suited to your needs.\" \n\nCarina's smile had vanished. \"You realize, of course, that once you pull it, every gallery in the world will treat it like it's a forgery, even if you don't claim it be one.\"\n\n\"Influential as I may be, I'm afraid I haven't yet acquired the ability to control how other owners choose to run their galleries, Ms. Wilkes. Good day.\"\n\nWith that, Nora swept from the room as quickly and purposefully as she had entered it. \n\n*******\n\nA month later, I had almost finished packing up my lab. It was surprisingly emotional. I'd started this business from scratch, and I'd made a lot of memories in this building, some pleasant and others not so pleasant. It was a part of me, and it was hard to leave it behind. \n\nMy job as head of forensic research at the Kiefer Gallery started next week. Nora had offered me the position just a few days after our meeting. Apparently, our little get together had convinced her of the wisdom of expanding the department. She was eager to bring in someone from outside the gallery, as she'd recently lost confidence in the abilities of her in-house staff. \n\nNora told Lauren she was welcome to stay on as my direct report. Surprisingly, Lauren refused that generous offer and resigned immediately. When he heard I had taken the job, Preston seemed to decide it was time to move on to greener pastures, too. I'd heard he had left New York, and Lauren, for a fresh start in San Francisco. It's always a shame to lose good people. \n\nI dropped by Prospect Heights a week or so after our meeting. I didn't expect to find Carina, and was not surprised to learn her brownstone had been vacated for weeks. The place had been rented fully furnished, and the tenant had paid the first year's rent in full. There were still two months remaining on the agreement. \n\nI took a break from packing to scroll through the latest batch of resumes I'd received for Lauren's position. I'd never had an assistant before, and I wanted to be certain I chose the right person. I may be a fine judge of paintings, but I still have a lot to learn when it comes to judging people. \n\nA knock on the door interrupted my work. A FedEx driver had left a large box on the pavement. I carried it to the conference table and opened it. Inside was a painting. There was not an ounce of protective packaging around the frame, and when I slid it from the box, I understood why. It was the Walker that Carina had painted. \n\nAttached to the frame was a handwritten note.\n\nAdam,\n\nI hope this earns a place of honor on your wall. \n\nIt's an early work, so it's a bit clumsy. I like to think I've matured a great deal since then. When you look at it, I hope you have fond memories of our time together. I know I do. \n\nIt's a shame you never had a chance to examine the Modigliani. I doubt even you would have been able to find a flaw. I guess we'll never know. \n\nThat was an impressive bit of work at the Kiefer Gallery, but you caught me on a technicality, so we'll call it a draw. \n\nGiven our professions, I'm sure our paths will cross again. When they do, I'm willing to bet you'll never be the wiser. \n\nThat said, I hope you prove me wrong. I like surprises. \n\nCarina\n\nI smiled. Still as arrogant as ever. Only Carina could lose millions of dollars and call it a draw. \n\nI glanced at the stack of paintings I'd removed from my office walls and realized that what I'd told Carina that first day hadn't been exactly true. I was a collector. I just happened to collect forgeries. \n\nEvery painting in my collection had a story. Carina's painting was my crown jewel, a masterpiece crafted by the da Vinci of forgers, and it had the most interesting story of all. Unfortunately, it was one that I could never share. Only two of us in the world knew the tale. I hoped that, one day, we might have a chance to add another chapter. \n\n*******\n\nAuthors Note: \n\nI had only three minor handicaps in writing this story about a forensic scientist who specializes in exposing art forgeries: I know nothing about art, forgery, or forensic science. \n\nI did some research to paper over my ignorance, but those of you more knowledgeable about these subjects may see through the facade. I apologize for any glaring errors. \n\nThis story was partially inspired by the real-life forgery saga that brought down the Knoedler Gallery. It's an interesting tale, if you enjoy that sort of thing. \n\nIf you made it this far, congrats and thanks for reading. Please consider leaving a comment to tell me what you liked or what you think I need to work on. My goal is to get better, and I sincerely value constructive criticism. \n\nEven better, drop me a line if you'd be willing to beta read for me sometime. I write very, very slowly, so I promise you won't have much work to do.\n\n \n"
    ],
    "authorname": "ThatNewGuy",
    "tags": [
        "auction",
        "detective",
        "les miserables",
        "modigliani",
        "new york",
        "painting",
        "walker",
        "wife"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/art-of-deception"
}