{
    "title": "The Festival",
    "pages": [
        "Author's Note: I am making fewer mistakes. Tim413413's life as an editor is getting easier. Of course, he may just be fixing the blatant errors without telling me. I prefer to think I am growing as a writer, so keep it to yourself Tim. And my thanks as always.\n\n*****\n\nThe Festival \n\nI was already tipsy. The rum was well disguised in a slurry of tropical juices. We started with an orange-pineapple-coconut concoction a little before ten. Now, barely noon, everything was wonderful. I thought I would regret my girlfriends talking me into this trip. Now, I loved them both. We were the three amigos. \n\nSandra was the adventurous one. She dreamed up the kinky adventure, booked the airlines and ocean-side villa. She always wanted to push the envelope to see how far we could spread our wings. She wanted to fly, and I was an official member of her flock. \n\nKendra had a multiple personality disorder. When she was working, Kendra was a straight-laced accountant with starched underwear. She gave one word answers, and they were always correct. She looked more like an evil school teacher with a ruler always within reach. When she was off the clock, the mask was removed and a vamp emerged. It was an amazing transformation. \n\nI was the shy one. Well, not shy, but more the follower. I didn't have Kendra's cleavage or Sandra's bubbly, driving force. If three men vied for our attentions, I was the consolation prize. It didn't bother me. I fed off their energy. Without the pulling and cajoling, I would have spent my vacation at home with a good book. It was so much nicer practicing to be an alcoholic on the beach. \n\nSandra had talked me into a bikini. I had never worn one before. My tummy wasn't the favorite part of my body. I had a small pooch, and was reluctant to share it with the world. Sandra enlisted Kendra to outvote me. I conceded to the peer pressure, finding a bright green two piece that at least covered most of my ass. \n\n\"It's sexy,\" Sandra said and smiled when I came out of the dressing room. I stood before the mirrors, shifting my hips to see my backside. The basics were covered, which was a good thing. I was glad I shaved before we flew down. My dark red hair would have looked nasty sprouting out of the green. My tummy protruded, but less than I imagined. I had envisioned it hanging over like walrus blubber. I actually did look sexy. Maybe it was the rum-filtered mirrors fooling me. \n\n\"It looks good; buy it,\" Kendra said. I always ignored her advice on clothes. She didn't need to worry about anything below her chest. Men never looked lower than that anyway. I straightened the top, tucking what little I had deeper into the cups. The fabric was thin. It was a good thing the temperature hung around the mid-eighties. The air conditioning was already doing a number on my nipples. \n\n\"Should I?\" I asked Sandra. She smiled again and nodded enthusiastically. I felt her excitement. The rum was excited too. It would be the most naked I had ever been in public. The thought earned me my own smile. It felt so provocative. It was only for a week. Let loose - go for it; I deserved to be wanton. Key West had me in its thrall. I bought the bikini and a short, translucent wrap I could wear if my courage faded. Backup plans are important for brave chickens.\n\nLunch was a fun affair. We found a restaurant in an old house on Duval Street. It had most likely been someone's summer mansion at one time. It was a light grayish wooden structure with bright white trim and accents. It fit well with palm trees that surrounded it, almost as if it had grown there as well. I had the blackened shrimp wrap which I needed desperately to soak up some of the alcohol. Sandra bought a trio of rum runners to make sure we stayed well plied. She said she had a surprise of us. The look in her eyes meant I probably needed more liquid courage. \n\nI loved sitting back with no work gnawing at my heels. The conversation was humorously racy and so much more enjoyable than the past year had been. I really needed this vacation. Work was basically hell. About a year ago, I made a decision I regretted. HR had asked me if I wanted to move up to a new position with better pay. I jumped from a general secretary in a pool that handled multiple account reps, to a personal assistant to a full partner. One of the most successful partners. I was told he was difficult, a warning I ignored when they offered a twenty-percent raise. \n\nTimothy Griffin did not smile. I learned that the first day on the job. He burned through assistants at an incredible rate. I lasted the longest when I had my eight-month anniversary of service to his royal highness. He always frowned when he walked in and was frowning when he left. He worked a horrendous number of hours and generated large revenue for the brokerage house. Every dollar he earned cost me a small part of my happiness. Nothing I did was ever right. He was simply a nasty, unforgiving and exhausting man. \n\nMr. Griffin, to call him Tim or Timothy would generate a trip to the unemployment line, had a way of criticizing that would tear at your soul. It wasn't just a mistake - it was an error that only the lowest form of imbecile would make. He corrected my wardrobe, making me spend that raise on clothes that he approved of. Skirts of certain length, blouses closed with a scarf and shoes of an exact heel height. He had approved color schemes I could not deviate from. Image was everything to him. I was made part of that. \n\nI never met anyone who would call Griffin a friend and he certainly had no romantic entanglements. I scheduled all his appointments and booked many dinner reservations for one. He didn't seem to care about the rest of the world. It was all beneath him. I was lower than that, the part of the world he could control. The rest of the office took pity on me. At least that brought me the cooperation I needed to avoid many of Griffin's scoldings. This sunny intermission was a necessary breather. No stiff black pinstriped suit to set my nerves on end. \n\n\"So what's the surprise?\" Kendra asked Sandra. \n\n\"You'll see.\" Sandra smiled. \"And no chickening out.\" She meant that for me. I took another sip of my rum runner. \n\n\"You do it, and I'll do it,\" I said boldly. In another week I would be back playing slave to an asshole. This week, I was going to absorb Sandra and become fun. Rum was a good motivator - so pliable with its sweet, racy promises.\n\nWe were looking forward to the Fantasy Fest parade that night. People-watching at its best. I had never been to anything like it. Sandra had tried to talk me into Mardi Gras a few years back, but I chickened out. Not this time. Not after a year of Timothy Griffin. Deep inside I wanted to let loose, throw my inhibitions to the wind, grab my inner strength and enjoy everything. \n\nThe sun was magnificent. We walked down the street looking in windows and absorbing the warmth. It was getting cold back home, but not here. This was shorts weather. The sun's rays lightly baked my arms and legs, almost a caress and not strong enough to generate sweat. A wonderful, comfortable warmth.\n\nSandra knew where she was going. We followed at a leisurely pace. We talked about Kendra's lost love, Kenny. He had almost been perfect. Her eyes swooned as she hinted about his prowess in bed. He was a really good looking guy, not that you would expect anything less for Kendra. I harbored dreams about him that I kept to myself. Kenny's big mistake was not knowing when to turn off the charm. He flirted constantly, which Kendra initially tolerated. She was secure enough to survive the flirting and even enjoyed the envious eyes of Kenny's targets. He just overstepped when he flirted with someone at Kendra's office. He never understood her dual personality. Kendra laid down the law and Kenny bailed. \n\nI had no such lost love. My affairs had always been brief things, none lasting more than a month or two. The men I attracted seemed to never understand me. What made it so difficult was that I also didn't understand me. I never felt truly comfortable in a relationship. The boundaries were undefined, my shyness always interfering with how I thought things should be. I would follow along at first, quickly tiring of the man's lead and not knowing how to grasp it for myself. It was all one-sided, tilting the wrong way. \n\nIt wasn't that I didn't like the sex. It was pleasurable. It just wasn't everything. I listened to Kendra talk of her dalliances, the way she almost shivers as she describes the feelings. I found sex enjoyable, just not exceptional. I was sure I was doing it wrong. Kendra certainly knew how to do it right. At least she talked a good game, and her partners were always smiling. \n\nSandra pointed down the street to the left when we reached a corner. We headed west, past an ugly light-blue building, dodging the crowds the festival attracted. Key West seemed to have a lot of dropouts. People who looked like they didn't reside on planet earth. We had to split up for a man, dressed in an old poncho, who was straddling the whole sidewalk as he walked. Shifting his weight left and right in a most inefficient manner. Kendra laughed when we met back up behind him. \n\n\"That's your next conquest,\" Sandra said to Kendra. That brought an inebriated smile to my lips. \n\n\"I thought you had the poncho fetish,\" Kendra joked at Sandra. \n\n\"I think he was naked under there,\" I added. They both looked at me like I was a perv. Then started laughing when my face flushed. Sandra's eyes became serious as she read the address of the pink building we were passing.\n\n\"Here we are,\" Sandra said excitedly. She grabbed the door and opened it for us. At first I thought it was a tattoo parlor. I was about to renege on my you-do-it, I'll-do-it statement. I looked closer at the pictures lining the walls. It wasn't tattoos - it was paint. Body paint. The artist was very good. There were cat faces, eyes that looked like sunrises and other carnival-like art. A whole section was devoted to super heroes, a Green Lantern with good abs looking especially nice. \n\nWhat I thought were costumes, at first glance, were not. A lot of the pictures showed people painted from head to toe. The pictures were more shocking than I had first thought. Wonder Woman cast a whole new impression. \n\n\"Face painting?\" I asked with a hopeful smile. Sandra's eyelids flickered high. \n\n\"You dirty girl,\" Kendra said with one of her vamp smiles. \n\n\"You must be the Peterson party,\" a man said as he walked through a curtained doorway from the back. He was older, his brown hair speckled with gray. His skin was leathery from years in the sun.\n\n\"Yes,\" Sandra answered.\n\n\"Come on back,\" the man smiled. Laugh lines burst on the outside of his eyes. \"I have another appointment right after yours, so we have to move quickly.\" I obviously hadn't had enough rum. I was scared to death. Sandra grabbed my hand and pulled me into the back. Kendra followed willingly. \n\nThe paint studio was an organized mess. A long canvas had been hung from the ceiling in one corner and continued folded along the floor. It was dusted with many different colors, like it had been backstopping paint for years. A compressor was under a table next to the canvas. The table held a myriad of white, plastic containers. Paint, I suspected. The man flipped a switch, and a series of bright lights illuminated the canvas. I took a deep breath. \n\n\"Did you have anything particular in mind?\" the man asked Sandra. Sandra, without hesitation, moved onto the canvas and removed her t-shirt. \n\n\"I heard you were the best, Carlos,\" Sandra complimented, \"I leave it to you.\" She unclasped her bra and handed both items to me. My eyes were wide, my hands shaking as I accepted her clothes. Carlos walked up, without reservations, and examined Sandra. Sandra was smiling at me. She knew this would be pushing my limits. I jumped a bit as Carlos reached up, and tested one of Sandra's breasts. It wasn't sensual, just clinical. I assumed he was checking firmness, and how it would take the paint. \n\n\"Flowers,\" Carlos smiled and turned to the table and pulled some of the paint containers forward. I looked back at Sandra's chest and didn't see anything flower-like. Her breasts were bigger than mine, but nothing like Kendra's. I was nervous for Sandra since she didn't seem bothered at all. Carlos tied an apron around Sandra's waist to keep paint off her shorts. \n\n\"Do you have any pictures or samples?\" Kendra asked Carlos. There was excitement in her voice. She harbored none of my inhibitions. \n\n\"Those books over there,\" Carlos said, pointing over his shoulder. \"The green folders contain chest and face. We don't have time for the full body, so skip the red books.\" Kendra moved quickly. I stood, still shocked, holding Sandra's bra and t-shirt. Sandra's eyes were laughing at me. \n\nCarlos went to work. His hands moved with practiced precision, never seeming to waste a single gesture. The compressor was louder than I had expected, eliminating comfortable conversation. Quickly, both of Sandra's breasts became red roses. Carlos switched between paints constantly, rarely touching Sandra's skin. Below the roses, he sprayed stems, then grew them up through her cleavage to add accent flowers above her breasts. He painted a red ribbon below her breasts to hold the stems together. Carlos smiled when he added a small white tag hanging off the ribbon. A note card that simply said 'Love.' It was a beautiful bouquet. I wanted that. I should have gone first. \n\n\"Let that set for a moment,\" Carlos said after he turned off the compressor. \"I'll apply a clear coat later to make it more durable.\" He untied the apron from around Sandra.\n\n\"It's beautiful,\" I said, sounding more awestruck than I intended. Carlos smiled.\n\n\"He's the best,\" Sandra repeated. She stepped away and walked to a full-length mirror in the front corner of the studio. \"Can I touch it?\"\n\n\"It's best to wait for the final coat,\" Carlos said. \"It's durable, but why take chances?\" Sandra nodded as she admired his work. \n\n\"Who's next?\" Carlos asked, looking at me. Kendra jumped ahead with one of the photo books. \n\n\"This,\" Kendra said, pointing at one of the pictures. Carlos looked from the picture to Kendra's chest. \n\n\"I'll have to modify it a bit, but it should work,\" Carlos said, as he pulled the album away and set it on the worktable. He gestured for Kendra to disrobe. Kendra handed me her t-shirt, followed by her bra. It was amazing how much her bra shrank her chest. It was a wonder she didn't have constant backaches. Carlos reached out and examined her breasts briefly, then loaded one of the paints in the sprayer. He put the apron around Kendra and fired the compressor back up. \n\nI watched Carlos go back to work. It was amazing how unerringly he created art. He had Kendra raise her breasts so he could paint underneath, making sure no breaks in the paint would exist to detract from his art. He examined the beginning of his work with a thoughtful pause. I saw him smile and reach for the compressor off switch. \n\n\"I could do it like Minnie with hands like Mickey's,\" Carlos said to Kendra.\n\n\"Oh, that would be wonderful,\" Kendra said, her smile matching his. The compressor went back on, Carlos switched colors and went to work. His confident talent continued to amaze me. Sandra relieved me of the t-shirts and bras I was holding. \n\n\"What are you going to have done?\" Sandra said into my ear, over the noise of the compressor. My turn was coming up. Carlos's work was excellent. My apprehension was replaced with anticipation. \n\n\"I don't know,\" I mouthed through the compressor whine. I moved to the table with the samples. A lot of the samples seemed to demand fuller breasts. I had to find something that would fit my chest. I quickly scanned some of the designs on male bodies, and discounted them as too manly. I wanted something akin to the flowers. My face warmed as I realized I was excited about spending the evening topless. It was so not me. \n\nThere were a lot of designs that were, well, designs. Psychedelic patterns with funky blending of colors. They were interesting, but not lovely like the flowers. There were comical ones, tits painted into headlights attached to a Volkswagen beetle. There was one where the breasts were painted like many - faceted dice, the number twenty at the nipples, with the words 'All Natural' painted below. I didn't understand that at all. Many superhero, lacy bra, bikini and torn t-shirt types. Nothing that really jumped out at me. I wish I would have gone first and gotten the flowers. \n\nI turned from my fruitless search when Carlos shut off the compressor. Sandra was laughing, and Kendra was all smiles. Carlos had painted a red shelf bra with white polka dots on Kendra. He added some sexy lace trim and an large bow of the same color scheme. The shading made the bow look almost real, the ribbons floating above her tummy. Her breasts had two comical white cartoon hands, one grasping each breast. Three fingers with the thumbs covering the nipples. I was sure Walt was rolling over in his grave. It was scandalously adorable. \n\n\"Did you find anything?\" Carlos asked. Kendra moved over to the mirrors, admiring his work. \n\n\"Um, not yet,\" I responded hesitantly and went back to the books. Nothing looked like me, or the me I wanted. \n\n\"You could always trust me,\" Carlos stated. He sounded like he was in a hurry. I wasn't sure if I wanted a drive-thru paint job. \n\n\"I trusted him,\" Sandra added, moving toward me. She leaned into me. \"He is the best.\" I sighed. There was nothing in the books that came close to the flowers. \n\n\"Okay,\" I capitulated softly. Carlos smiled again, obviously trying to sooth my apprehension. I removed my shirt. Hesitated, then removed my bra. Goose bumps rose on my arms as Carlos examined his canvas. His head tilted this way and that; I could almost see his brain churning. Finally, he looked up from my breasts, deep into my eyes and smiled. I was suddenly uncomfortable. I was naked from the waist up, and it was his look that bothered me. \n\nCarlos covered my hips with the apron and pulled forward a bunch of different colors. He sporadically looked back to my eyes. His intense gaze was nerve-wracking. If Sandra and Kendra weren't there, I would have run. Not that I could accurately define my perfect mate, I just knew Carlos wasn't close to it. \n\n\"Put your arms behind your back,\" Carlos commanded. I did. More exposed. His eyes kept digging into mine. The compressor started and he began. The paint slightly tickled at first, before I got used to the sensation. He was spraying quickly, his hands moving in practiced motions, his eyes moving rapidly between my chest and eyes. \n\nI closed my eyes to avoid Carlos's eyes. He stopped painting. I opened my eyes to see if he was done. His eyes were waiting for mine, more intense than before, with a smile added. I was running dialog through my head, kind ways to put a man off. He was too old to begin with. I had no interest in moving to Key West and becoming a body painter groupie. I wished he would stop looking at me. \n\nI sucked in my tummy when Carlos's spray hit it. It surprised me. He paused a moment to let me relax and then continued. He continued his brief flirting, eyes on mine matched with a little smile. I knew Sandra saw it. She was watching Carlos like I was her little sister. Strength from her would make leaving quickly easier. \n\nA woman walked in, more Carlos's age. Her tanned face had the wrinkles of a sun worshiper. Her eyes were carefree, little balls of happiness. She moved like this was her place, not like his next appointment. She stood behind Carlos, looking intently at my chest then lingered on my eyes and then back to my chest. She bent down. Carlos noticed her and they shared a quick smile and a brief kiss. She held up the a bag of take out, obviously used to not fighting the compressor with words. Carlos nodded and she left after taking a quick look at Sandra's and Kendra's art work. Wife was my guess. So why was he back in my eyes?",
        "Carlos finished and turned off the compressor. He stood back admiring his work. \n\n\"Oh my,\" Sandra said, staring at my chest. I moved quickly to the mirror. Carlos had created a pair of beautiful eyes using my small breasts as the center of each. Seductive eyes over a partial rendition of a soft nose, mostly just the bridge. Soft eyebrows, sensual lashes. I didn't know how comfortable I was walking around with eyes. \n\n\"Eyes!\" I said, some of my apprehension coming through. \n\n\"Honey, those are your eyes,\" Kendra said smiling. Can't be. My eyes aren't that sexy. \n\n\"You should sign that one,\" the woman yelled from the front of the store. I looked at my eyes then back at my chest. I couldn't see them at the same time. I looked desperately at Sandra. \n\n\"They're beautiful,\" Sandra sighed. She wanted my eyes; I wanted her bouquet. I turned sideways to the mirror. My green irises protruded slightly from my chest. It was a surreal vision as I turned back. Unblinking bedroom eyes. \n\n\"May I sign it?\" Carlos asked. The woman came in from the front of the store. \n\n\"He doesn't sign many,\" the woman said as way of a compliment, \"he only shows off his best.\" Some of my reservations were flying away. Somehow the signature made me feel better about it. My eyes aren't that pretty. \n\n\"Okay,\" I smiled. I moved back to the canvas. I saw a small spark of jealousy from Sandra and I liked my eyes even more. Carlos fired up the compressor again and a minute later I had Carlos H signed in the lower left, just above the pants line. It was then I realized I wouldn't be fending off unwanted advances from Carlos. His interest was strictly art. He was giving me a sly smile as he winked and put his hand around his wife. Art and teasing. I smiled brightly back.\n\nWe left after our sealing coats dried. Sandra and Kendra walked out of the shop boldly topless. I stalled for a moment, glancing through the windows. People were everywhere. I took a deep breath, closed my eyes and followed. When my eyes opened to the afternoon sun, the world did not end. Sandra and Kendra were waiting with horribly teasing smiles. I laughed, a topless laugh that moved more parts than had moved in public before. They created a spot between themselves, a place they knew I would want. Unnecessary fear needed a fearless buffer. I quickly filled in the slot, absorbing their strength. \n\nWe owned the sidewalk. I went from embarrassed to willful exhibitionist in the space of two blocks. It was freeing. People I didn't know, and would never see again, gawked with wide eyes. Men with plastered smiles, women with a mix of shock and envy. We passed other painted people. Few had works of Carlos's caliber. Pride cloaked me. I tugged my shorts slightly lower to better emphasize the signature. \n\n\"May I?\" an older gentleman asked. He was pointing at his camera. I was in a euphoric haze and answered yes before Sandra and Kendra even processed the request. I dropped my bag, wrapped my hands around Sandra's and Kendra's waists. A second later, we were digitally frozen with silly smiles. \n\n\"That's going to find the Internet,\" Sandra said, poking me in the side. I hadn't thought of that. I shoved it aside. I wasn't going to let the future ruin today. Besides, it wasn't exactly illegal. At least I didn't think it was. They would have to arrest half of Key West if it was. \n\n\"Then we're going to need more drinks,\" I announced. Kendra laughed. We continued to the beach house to drop our extraneous clothing and packages from the morning of light shopping. I spent some time in the bathroom straightening my hair and fixing up around my eyes - the real ones. I was anxious to get back out again and show off. I wasn't quite sure why I enjoyed it so much. It wasn't a sexual feeling, more a sense of power. I felt stronger inside and I liked it. Timothy Griffin be damned. \n\nWe headed out again with the goal to find food and drink. There was no hesitation this time. I was out the door first and no longer needed to be between Kendra and Sandra. We bounced our way down the street. We posed for more pictures, dodged some seedy requests and laughed. The crowds slowly increased as we neared Duval Street. We were not as unique as I had first thought. No matter, I was wearing a Carlos original. At least I was impressed with myself. \n\nWe were able to squeeze into a patio bar. It was a timing thing. One couple left, and we just sort of slid in. It didn't look like we would be able to get in for a sit-down dinner. The whole world had shown up sometime after lunch. We feasted on appetizers washed down with frozen margaritas. There was guy behind the bar who was doing nothing but margaritas. They disappeared as fast as he could crank them out. One hell of a party. \n\n\"That's beautiful,\" a man dressed in some kind of Great Gatsby getup said. Black shirt, fat white tie and topped off with a white fedora trimmed in black. His eyes were directly on my breasts. The margaritas were strong. I arched to display my second set of eyes better. \"Carlos signed it?\"\n\n\"Yes,\" I said proudly, thrusting the signature out. He was kind of margarita cute. \"It's an original.\" \n\n\"You should be out on the street,\" the man commented, waving his hand along the avenue, \"the world needs to see it before it disappears.\" He looked up into my eyes, \"Carlos sure knows how to paint.\" He had a kind smile. \n\n\"I'm Sandra,\" Sandra said. Big sister to the rescue. I wasn't sure I wanted to be rescued. \"And you are?\"\n\n\"Doug...Doug Fuller,\" he answered. His eyes moved to Sandra's chest then widened on Kendra's. Kendra laughed at the attention. Doug flushed and tried desperately to keep his eyes up. \n\n\"This is Victoria and Kendra,\" Sandra said, making Doug fully aware I was not alone. I wasn't sure I needed the protection. I knew I didn't need Kendra's breasts butting in. \n\n\"These are all Carlos's work?\" Doug asked. His eyes once more surveying the art. It was a license to stare at our tits. \n\n\"Yes, they are,\" Kendra replied. She raised her glass and sucked up some of the green slush into her mouth. \n\n\"Simply beautiful,\" Doug repeated, \"you interested in being in the parade?\" \n\n\"Hell yes,\" I answered loudly. I couldn't believe it came out of my mouth. A few hours ago I would never have considered it. Now all I wanted to do is show off. I wanted to be in the center of the party. I felt Sandra elbow me lightly. I was moving too fast for her. I relished the change. \n\n\"There is a float that follows mine,\" Doug continued, \"they are doing a beaded skirt thing. Sort of a surreal luau with painted ladies. They would take you in a heartbeat. You'd have to hula for a few miles.\" \n\n\"We didn't bring our beaded skirts,\" Sandra said. She wasn't smiling. Kendra seemed indifferent. \n\n\"They have a trunk full of them,\" Doug argued, \"they're just plastic that glow in the lighting.\" \n\n\"They sound lovely,\" I responded, maneuvering in front of Sandra. Doug smiled. \n\n\"You've had too much to drink,\" Sandra whispered into my ear. She tried to pull me back, away from Doug. I set my weight and stayed where I was. \"Help me,\" Sandra pleaded with Kendra. \n\n\"This was all your idea,\" I lashed out at Sandra, \"and now you're the one with cold feet. I want to ride on the float.\" I liked being the outgoing one for once. There was a power in it. \n\n\"Not a good idea,\" Kendra added from behind Sandra, \"you sure you want to go that public?\" One thing about alcohol, it doesn't have a strong understanding of the concept of tomorrow. Today, people wanted to check me out. I loved the attention. Half the city was half naked. I wasn't even close to the most brazen. \n\n\"You're not coming?\" I asked Kendra. I had already decided, and Sandra was obviously a party pooper. \n\n\"You can't,\" Sandra jumped back in. She grabbed my hand and turned me toward her. \"This was a silly idea, just for a laugh. You get on the float and half the world is going to see you and they'll tell the other half.\" I ripped my hand from her grasp.\n\n\"I can and I will,\" I said stubbornly. I was tired of people telling me what to do. Twelve months of Timothy Griffin had taken its toll. The tequila was surging courage through my veins. \"Let's go,\" I said brightly to Doug. He took my hand and led me through the growing crowd. I heard the tail end of a desperate plea from Sandra. I turned back to see neither following me. I smiled. Who's the chicken now?\n\nI pulled up next to Doug as we walked. I didn't like him pulling me along. A few steps more, and I was leading him through the crowds. He pointed once in a while to keep me going in the right direction. Other than that, I was leader, the driving force. It was exhilarating not to follow. This was exactly where I wanted to be - in front. I smiled back at Doug and increased my pace. He followed willingly - yes, he followed me. \n\nThe float was as surreal as Doug had said. Neon palm trees, glowing with internal light, growing out of tiered platforms covered in bushes constructed of many different colors of flowers. Anywhere else, the term garish would apply. Here, it was wonderful. \n\nTammy, the float's organizer seemed excited to have another rider. Carlos, it seems, had a cult following. His signature bought me a lot of goodwill. I was given a skirt constructed of strings of red beads that glowed in the hidden black lights that bathed the platforms. Like the flowers, each girl had a different color. The artwork on the other girls was as amazing as mine. I was one of two who hadn't had her face done, which made me slightly jealous. We practiced a simple synchronized hula routine which was more sexy than correct. Tammy was leading us through the choreography, her wide hips doing a much better job than my slender ones would allow. \n\nWhile we waited for the parade to begin, we partied. The whole parade was one big party. Doug and his similarly-dressed bros brought over jugs of cocktails. I no longer had any idea what I was drinking. It was all camouflaged so well with sugar. Knowing my tolerance, I slowed, but didn't stop. For some reason, the strength I was feeling gave me power over the booze. Tammy, obviously, was of a different opinion. About fifteen minutes before our float began to move, she handed me a bottle of water. My glass of whatever-it-was mysteriously disappeared while I was opening the water. It didn't matter, I didn't need the liquid courage anymore. I was invincible. \n\nThe parade was glorious. I couldn't remember when I had had a better time. My glowing skirt, my painted chest and all the cameras flashing. I should have been in theater. I was right at home on my traveling stage, swinging my neon skirt in sync with the others. Tammy had told us to smile, a useless request. I couldn't not smile if I had wanted to. Deep down, I knew the cheers and applause were for the float as a whole. On the surface, I felt it as private adulation. I was disappointed when the parade ended. I wanted my audience back. \n\n\"Was it all you hoped for?\" Doug had come up behind me as I was handing in my skirt of beads. \n\n\"That and more!\" I smiled. \"I am so glad I ran into you today.\" I handed my skirt to Tammy who thanked me sincerely for participating. \n\n\"The night is just starting,\" Doug said, \"a bunch of us are going to a beach bash - should run until the sun comes up.\" He looked younger suddenly. I felt older. I don't do all-night parties anymore. The booze began to weigh heavier on my mind. \n\n\"Not for me,\" I said warmly, \"I have to catch up with my friends.\"\n\n\"Those losers?\" Doug continued, \"come on, join me. I'll show you all that Key West has to offer.\" \n\n\"Not tonight,\" I replied. I really disliked having to say no twice. Doug surprised me by taking my hand. \n\n\"There's no 'no' on fest night,\" Doug said, walking backwards, pulling me along as if I were a dog. I snatched my hand out of his. \n\n\"I said no!\" My voice was louder than I intended and some people turned. Doug's eyes shifted around the crowd then back to mine. \n\n\"Look, you owe me,\" Doug said, his face no longer held a smile. Where was my big sister? He somehow got hold of my arm.\n\n\"Let me go!\" I cried out, this time I meant it to be loud. A tall guy in the same kind of Gatsby dress as Doug broke through the crowd. Fear shivered about my skin. I took a step back, feeling highly outnumbered. The tall guy grabbed Doug's arm and freed me.\n\n\"He's drunk,\" the guy said, \"put a shirt on and get out of here.\" He gestured with his head off toward the main street. I moved quickly. Put a shirt on? Now I felt naked. I didn't have a shirt. I no longer liked the looks people were giving me. Behind all the eyes, I saw the word slut. I moved quickly, I needed Sandra and Kendra. Why did I ever leave them?\n\n\"Bitch!\" Doug shouted. I moved quicker - shame and fear pushing me along. \n\nIt took me a long time to return to the patio bar where I left Sandra and Kendra. Panic set in when they weren't there. Not that I expected them to be after I ditched them. I wanted them to be there. I leaned against a wall and pulled out my phone. People passed, my shoulders hunched, arms and elbows covering myself as much as possible. I sent a text.\n\nhelp\n\nI waited as the alcohol began to wear me down. Doug had slaughtered my courage, and I was replacing it with shame. Nothing had changed but me.\n\nwhere r u\n\nSandra responded quickly. My heart lifted at her text. \n\nsame patio bar\n\nstay - 5 mins\n\nI nearly cried. The day came slamming back on me. I wasn't strong. Doug thought I was weak. I hated not being strong. I was on a float, topless, challenging the world and now I was trying to hide my painted breasts. I wallowed until I saw Sandra and Kendra jogging toward me. Then I did cry.\n\nSandra handed me a t-shirt; they were both covered as well. I tried to speak, but shame kept me silent. I didn't know how to apologize to myself, much less them. They hugged me. \n\n\"I'm sorry I didn't go with you,\" Sandra apologized. \n\n\"I'm sorry I didn't listen,\" I slobbered. \n\n\"Let's get our sorry asses back to the house,\" Kendra added. I nodded and walked between Sandra and Kendra. I needed them there. I loved them both, which was good because I currently had a very low opinion of men, especially one wearing a fedora.\n\nThe next morning was hard. The coffee machine was too noisy, and my stomach wasn't happy to be alive. It took the better part of three hours before I could handle solid food comfortably. I didn't receive the I-told-you-sos I deserved. Just friendship and a mutual hate of men in fedoras. We spent the afternoon on the beach sipping iced tea. Between the waves and the sun, I was feeling worlds better. \n\nThe rest of the week passed in virtual harmony. We went sightseeing, walked the beach and ran up our credit cards shopping for stuff we really didn't need. My brief moment with Doug had been forgotten, and only the pending return to Timothy Griffin weighed heavy. I let it slip to the back of my mind as we enjoyed our last sunset in Key West. Just the three of us, a bottle of wine and a hundred million colors reflecting off the gulf. A picture just wouldn't do it justice so we just greedily memorized it. Not to be shared with anyone else. My new bikini never did see the sun. \n\n~~~~~~~~~~\n\nMonday I was back in hell. I arrived at EL Corcoran Brokerage fifteen minutes early. I had no desire to be late. Mr. Griffin would have a week's worth of stored anger to throw my way, and I would prefer I didn't get it all Monday morning. I was surprised to find Frank, my temporary replacement, sitting at my desk. He looked incredibly nervous, and nearly burst when he saw me. \n\n\"He's not happy,\" Frank started. Not even a hello, how was your vacation. \"I screwed up his calendar somehow and ended up with two overlapping meetings. I was supposed to call this account.\" He held up a notepad with a number written on it, \"and cancel his Tuesday appointment. I don't know whose account it is and there is nothing scheduled on Tuesday.\" I saw the panic in his eyes. He wanted out. \"He also wanted last month's numbers, what the hell are those?\"\n\n\"Didn't you asked him?\" I smiled. \n\n\"I asked him one question on the first day,\" Frank replied, \"I'm never doing that again. That's everything - I think. Oh, wait - pick up dry cleaning. I was supposed to do that Friday, but I didn't know which dry cleaner - he didn't give me any receipts.\" I smiled again. Maybe a week of Frank would lessen my inevitable admonishments. At least I was used to Griffin's tirades and suffered through the necessary questions. \n\n\"I'll take it from here, Frank,\" I said calmly. A week on the beach had done some good. \n\n\"Thanks,\" Frank moved quickly to the door, trying to leave before Griffin arrived. He turned as he exited, \"Oh, and welcome back.\" I gave him a gentle wave and my smile. \n\nI received my welcoming frown at exactly eight o'clock. An immaculate black pinstripe suit, white shirt and red tie. Griffin rarely deviated. I would have considered him fairly good looking, if he ever took the time to smile. His ever-present gloom detracted from his whole appearance. At least I no longer cringed when he walked in. \n\n\"Good morning, Mr Griffin.\"\n\n\"You left me with an idiot,\" Griffin said crossly, \"next time train them better or I'll find someone who can.\" He didn't even slow down. Whipped right past my desk and headed into his office. I didn't respond to his threat of replacing me. I had decided early on to let those comments go. I had become somewhat immune to their effect. \n\nThe morning went as expected. I cleaned up Griffin's calendar, received another verbal scolding for scheduling a Mr. Corey before a Mrs. Sampson. Only a moron would schedule them in that order. I made the necessary calls to switch the appointments and was promptly abused for making the change. Twice the idiot on my first day back. \n\nI fetched Griffin's dry cleaning at lunch. Figured out the who and when of his Tuesday meeting and canceled it. I dreaded that call. Mrs. Pritchard, a widow, was always trying to meet with Griffin. He handled her sizable account, very profitably, but preferred to not meet with the old woman. He would create appointments to appease her and then have me cancel them. She was a sweet lady, obviously bored, who wanted a reason to get out and talk with other humans. She had yet to realize that Griffin wasn't really human. It took twenty minutes of chit-chat to once again cancel one of her meetings. I was beginning to think Mrs. Pritchard knew more about me than Sandra did. \n\nSo went my first week back. One failure after another as graded by the mighty Griffin. Twice during the week, I had letters I developed returned to me with scathing verbal commentary and the most irritating red marks. There was rarely a true mistake. It was all subjective bull that had little to do with the letter accomplishing its task. I developed a strong hatred of that damn red marker of his. The color was chosen specifically to remind me of grade school. He was the learned teacher; I, the adolescent with the learning disability. \n\nMy weekend consisted of laundry, housecleaning and a good book. I should have raked the leaves, but another week would just add more. I wasn't much of a landscaper, and purposely bought my small red brick ranch because the yard was small. I was lax in its care. The hedge needed trimming, leaves raked and the mulch weeded. I was still recovering from my vacation. At least that's the feeble excuse I used to put off the yard work. \n\nMy next week was much the same. At least until Thursday evening, just before close. I was busy building Griffin's special, labor intensive, anally designed month-end report. Most brokers would just accept what came out of the system. Not Griffin. I had to import the data, correlate it with the previous four quarters, develop pivot tables and trend graphs. It was just complicated enough and always contained enough data holes and changes to disallow me from automating it. I knew he did it on purpose. Generate work just for the sake of work. Just so he could tell me how wrong it was. ",
        "My in-box chimed, which allowed me to break from the tedious task. I opened the email, expecting some other duty that would keep me late. Instead, a complete disaster. My heart thumped hard as I saw the pictures. A series of shots of me on the float in Key West. Under one was the only text: Victoria the Bitch. My eyes began to pool when I saw the cc line. It contained EL Corcoran main information address off the website. My first thought was Doug. My only thought was Doug. How did the asshole find out where I worked? I was pretty drunk, maybe we talked while we waited for the parade to start - I couldn't remember. \n\nGriffin walked out of his office. I quickly closed the email, panic coursing through my veins. I shifted in my seat and looked up at him, guilt flushing to my face. \n\n\"Where's the monthly?\" Griffin grumbled. \n\n\"Just about finished, Mr. Griffin,\" I stammered, shifting pages uselessly around my desk. \n\n\"Don't make me stay late,\" Griffin ordered. In other words, I wasn't going home until it was done. I took a deep breath and tried to think. I opened the unfinished worksheet and began finishing the report. My mind kept drifting. I had no idea who the public email address went to. Maybe more than one someone. I had to hit undo a couple of times; I wasn't on task and making mistakes. I was able to finish the report a few minutes before closing. I emailed a copy to Griffin and created two hard copies as was his desire. It was quite possibly the last report I would do. Topless on a float - not even close to the company image. Not within a million miles of Griffin's image. I looked at the pictures again - so brave, so stupid. I was going to be unemployed. \n\n\"The asshole sent photos to my work,\" I cried into the phone as drove home.\n\n\"Oh, no,\" Sandra said. I was so happy she didn't I-told-you-so. \"Who's seen them?\"\n\n\"It was the public email address,\" I whimpered, \"I don't know who gets it. It will ruin me there.\" \n\n\"You weren't exactly topless,\" Sandra argued, \"paint covered the basics. It was your vacation, what can they really do?\"\n\n\"They'll fire me,\" I admitted. In my mind it was already done. I was just awaiting my walk up the gallows.\n\n\"It's all my fault,\" Sandra said, \"I never saw it going this far. I'm so sorry.\" I could hear the pain in her voice. It helped. It helped a lot. \n\n\"I did this to myself.\" I fed off Sandra's sorrow. \"My boss is an asshole, and treats me like dog shit. Maybe this is the push I needed.\" Sandra's guilt somehow ignited some strength in me. \n\n\"You deserve better,\" Sandra said, sensing the change in me. If you can't fight the wave, you might as well go with it. \n\n\"I do,\" I agreed. \"It's time I took control and pushed for something better.\"\n\n\"What can I do?\" Sandra begged. \n\n\"Just love me as always.\" I smiled into the phone. It would be hard starting over again, but at least I had friends. \n\n\"That's the easy part,\" Sandra laughed, \"if you need anything, anything at all, you call.\"\n\n\"I will,\" I sighed, \"I'm sure I'll need you and some wine this weekend.\" \n\n\"Call me,\" Sandra said, \"as soon as you know anything. Maybe it will all blow over. If not, I'll bring two bottles of wine.\" I so dearly loved her. \n\n\"Kisses,\" I said sweetly. An old parting we used in our college days. It warmed me to use it again. \n\n\"Kisses,\" Sandra repeated back. I smiled and disconnected. I felt better about my coming demise. \n\nI went to work early. If I was going down, it wasn't going to be due to my job performance. I brought the instruction file up on the screen, the one I had developed for Frank. I edited it, adding parts that my replacement would need. Things that seemed obvious to me, Frank had found daunting - I made them obvious to the next person who would occupy my desk. I included tidbits that would help keep Griffin in his office working, and not berating my replacement. It took longer than I expected. When it was done, I renamed the file - The Griffin Bible. My most monumental work. I was strangely proud of it. \n\n\"Good morning, Mr. Griffin.\" I received my morning frown.\n\n\"Appointment next Tuesday morning,\" Griffin wasn't even looking at me. \"Cancel it, reschedule it for the following week.\" He continued into his office.\n\nI brought up the calendar and wasn't surprised to find Mrs. Pritchard on Tuesday. I almost picked up the phone before a little trickle of courage surged in. I smiled as I thought about it. My replacement would pay for it and pay dearly. It would most likely be a temp at first anyway. Mrs. Pritchard deserved her one-on-one with Griffin. I didn't make the call, I didn't reschedule, I mutinied for her sake. The idea of Griffin having to politely endure the sweet lady was a very pleasing thought. \n\nI received a call from HR just before lunch. I was to see them at four, just before closing. They lied and said it was routine. I knew it was my last day. I spent the afternoon cleaning up all unfinished business, even the stuff I would have normally put off until next week. No one would be able to say my leaving was due to incompetence. Promptly at four, I was down in HR as requested. \n\n\"I'm sorry, Ms. Paddington,\" Rob Thaxton, Director of HR said, \"this type of activity is against company policy. The same policy you agreed to when you were hired. The employee manual clearly states...\"\n\n\"I am aware,\" I interrupted. I wasn't going to sit there and let him ease his conscience by blathering on. \"Am I fired?\"\n\n\"I am afraid we have to let you go,\" Rob said, almost like he meant the sorrow that leaked into his voice. \n\n\"Fine, let's get it over with,\" I said. Rob passed me documents including a dismissal letter signed by Mr. Corcoran himself. Some information about my rights, insurance information and the appeal process if I felt I had be wronged. I took them all with a sigh. Another chapter of my life was over. I just had to write a new one. \n\n\"Charlie will escort you to your desk so you can collect your things,\" Rob said, indicating to one of the building's security guards. So, shame and embarrassment were part of the package. I would be escorted like a criminal. I stood, more defiant than I felt and walked out of HR without a word. My uniformed shadow followed.\n\nI wasn't sure what I wanted. There wasn't much of mine on the desk. Griffin didn't really approve of much decoration. I had a framed picture of my parents. I would take that just so it didn't end up in the garbage. I had plenty of copies at home, so it wasn't needed. I opened a couple of drawers. Some backup makeup, stain stick and an extra phone charger. Most of my life was at home. \n\n\"What the hell is this?\" Griffin said gruffly. He was looking at Charlie standing over me. \n\n\"I was fired,\" I said, surprised he didn't know it was coming. I opened the last drawer. It held nothing of mine. \n\n\"In my office,\" Griffin commanded. I looked up and smiled. He wasn't my boss anymore. I ignored him and began collecting my meager belongings into a pile I could carry. \"Now!\" he commanded louder. I moved out of habit. I had strength, but after a year I was well trained. \"Not you, idiot,\" he pointed at Charlie when he tried to follow. Charlie stopped in his tracks. \n\n\"I left instructions for my replacement,\" I said, when the door closed. \"A hard copy is in the top drawer.\" Twelve pages - my manifesto to slavery. \n\n\"You go and get yourself fired,\" Griffin went into tirade mode, \"knowing how it will screw up my process. Do you ever have a coherent thought running through that skull of yours?\" I almost lost it. Something about burning bridges held me back.\n\n\"I'm sorry, Mr. Griffin,\" I said. \"The firing wasn't office-related; nothing to do with my work for you. I was hoping I could still use you as a reference.\" It was a dream. I knew it when it came out of my mouth. I was handing him the whip. \n\n\"You leave without warning, and expect me to relish it,\" Griffin whipped hard. \"It will be months before I'm back to any semblance of normalcy. I wouldn't recommend you for crossing guard.\" He lit the match, I just threw it at the bridge. Such an old dry wooden structure. \n\n\"You are the most arrogant, selfish, pig-headed asshole I have ever met in my life,\" I screamed strongly. I wanted the whole building to hear. \"Nothing's ever good enough for you. You've belittled me for over a year, yet here I stand.\" I straightened my shoulders and stared daggers into his eyes. It was unfortunate he was a good deal taller than I. \n\n\"You contemptuous...\" Griffin began. It was flamethrower time. \n\n\"Don't you dare!\" I interrupted, \"I have bowed and scraped at your feet.\" My hand came up of its own volition. I jabbed my finger into his chest. \"I am the best assistant you ever had,\" poke, \"I deserve more,\" poke, \"a measly little angry shit like you will not ruin my life.\" Jab. Griffin was speechless. He was staring at me in shock - maybe the beginnings of a heart attack. I smiled as he shuddered under my wrath. I turned and left his office, useless pride driving me on.\n\n\"Leave it,\" I said to Charlie as I walked past my desk, \"I don't want anything to remind of this shit hole.\" Anger was my strength. The bridge was burning brightly. I smiled at the appalled faces as I was escorted out of the building. \n\nThe adrenaline drained quickly when I exited to the street. Shaking began. I sat at the corner, on a bus stop bench. I had just shattered my resume. I would really be starting over. I closed my eyes and tried not to cry. \n\nI heard my name being called and looked up. Charlie was moving quickly toward me. I was done with EL Corcoran Brokerage. I rose and headed away toward the parking garage. It was time to go home. Charlie called again and increased his pace. I ignored him.  \n\n\"Ms. Paddington,\" Charlie panted. He wasn't in very good shape. \"Mr. Corcoran wants to speak with you.\" Charlie held forth a phone. I waved it away. Like I wanted to have him ranting in my ear. I added a little fuck-off finger to my wave. \n\n\"She doesn't want to speak with you,\" Charlie said into the phone. I moved away quickly. I needed it all behind me as quickly as possible. \n\n\"Yes, sir,\" Charlie said and put the phone in his pocket. \"Mr. Corcoran is on his way down. He asked if you would please wait for him.\" I stopped walking. The word please was, well, pleasing. \n\n\"What's this about?\" I queried. My leaving was the only power I had now. I wasn't convinced I should give it up. \n\n\"I don't know,\" Charlie shrugged his shoulders, \"they never tell the idiot anything.\" I almost laughed.\n\n\"Don't listen to Griffin,\" I said, letting my smile form. Charlie certainly wasn't my enemy. \"He calls everyone an idiot.\" We shared knowing smiles. I decided it was for Charlie's sake that I waited. \n\n\"Ms. Paddington,\" Mr. Corcoran was puffing when he caught up to us. His balding head was sweating, his suit clung weirdly on his bulk. He wore a smile, a salesman's smile. It caught me off guard. \"Thanks, Charlie,\" he said, dismissing Charlie to return to the building. Charlie winked at me as he retreated - at least I had some weak emotional support.\n\n\"Mr. Corcoran,\" I acknowledged. If he was looking for an apology or even a clean exit, it was too late. My opinion of his firm couldn't be any less.\n\n\"It seems we were hasty,\" Corcoran began. \"The photos were a bit shocking, and we acted too quickly. It was your vacation after all, though we wished it was a little less public.\" He shook his head like he had lost his train of thought. \"I would like to undo this afternoon. Pretend it didn't happen. We'll let the pictures go with a verbal warning.\" There was that salesman smile again. \n\n\"Ah..\" His words staggered me. Griffin wouldn't allow it to be undone. \"I'm not sure I understand.\" I stalled.\n\n\"We don't want you to leave,\" Corcoran continued. \"It was my fault really. Please, accept my apology and we can put it all behind us.\" I stared in disbelief. The CEO was apologizing to me for my actions. I felt like I was being conned. \n\n\"I'm sorry, Mr Corcoran,\" I said, shaking my head, \"Mr. Griffin and I kind of had it out. I don't think there is a comfortable way to take any of it back.\" My back stiffened with my resolve, \"I appreciate it, I really do. Maybe it is best for all if I move on.\" I turned away before I sunk myself back into the slave pit of EL Corcoran Brokerage. \n\n\"If it's money,\" Corcoran pleaded, \"I can offer more.\" I stopped. From firing to a raise. I turned back. \n\n\"I just called my boss an arrogant, selfish, pig-headed asshole and you want to give me a raise?\" I asked in exasperation. His expression changed from salesman to contrite. \n\n\"If you're not back on Monday, I lose Griffin,\" Corcoran confessed. \n\n\"What?\"\n\n\"He's twenty percent of the business, Ms. Paddington,\" Corcoran continued. \"He is everything you said and more, but he produces. For some reason, he wants you to stay on.\" My mind was reeling. Griffin backed me? Nothing was making any sense. Corcoran looked at me, his eyes trying to deduce my thoughts. \n\n\"I don't understand,\" I said, my confusion evident. \n\n\"Either do I,\" Corcoran admitted, \"Griffin hates everyone.\" He paused for a second, \"Look, I can offer a twenty-percent raise and five more vacation days.\" My eyes widened. \"I know what it must be like working for him. If you stick it out, I will make it worth your while.\"\n\n\"I yelled at him pretty good,\" I said, more to myself. \n\n\"Take the money and apologize,\" Corcoran said, \"you keep him happy and I'll make sure you have a good future.\" His salesman smile was back. \n\n\"Okay,\" I said, \"but I can't promise happy. Tolerant is the best I have ever done.\" Corcoran laughed. \n\n\"Monday then?\" \n\n\"Yes, sir,\" I answered, my future no longer completely dismal. Corcoran slapped his hands together in glee and returned to the office. I watched him walk off, dazed by what I had just agreed to. Monday would be hell. I would pay for every word I said. I smiled. The asshole had fought for me. I was the best assistant he ever had. \n\n~~~~~~~~~~\n\n\"You called him that?\" Sandra's eyes were alive as I explained the day's events. She had brought over a couple bottles of wine to soothe my sorrows. We toasted instead. \n\n\"And I poked him the chest,\" I said. I animated my jabbing finger. \"You would have been proud of me.\" It was much better sharing the weirdness instead of my unemployment. \"I had thought I had sealed my doom. I had no idea he would threaten to leave the company.\"\n\n\"You must be quite the assistant.\" Sandra tipped her glass to me. \"Have you been...handling his stress?\" She bounced her eyebrows to emphasize her joke. \n\n\"God, no,\" I laughed, \"I question if he's ever had a woman. He's too ornery.\" I imagined him critiquing some poor woman for the blow-job he just received. The image made me laugh all the more. \n\n\"A raise and more vacation. You've done good, girl,\" Sandra said. \n\nSandra and I ordered in some pizza, spent some of my new raise on pay-for-view movies and knocked off the two bottles of wine. A wonderfully relaxing night of watching movies made for teens, just so we could ogle some tight abs. Sandra was greatly relieved that her body painting idea didn't screw up my life. I failed to mention that it was mostly the margaritas. I actually enjoyed her feeling like a guilty older sister. It was selfish of me, but I loved her for it. \n\nThe doorbell rang at eight in the morning. Sandra and I had passed out well after midnight, never quite making it past the couch. I stood, trying to shake the cobwebs out of my head. My mouth tasted like a sewer. Sandra just grabbed a cushion and covered her head. The irritating bell rang again. I moved slowly, scratching my ass. The whole room smelled of stale wine. \n\n\"I woke you up,\" Griffin said. I was stunned. Had I known, I don't think I would have opened the door. He was in jeans with a pullover sweater. I had never seen him not in suit. The whole image was surreal. \"I should leave,\" he said. I closed my mouth. God. I was in pajama bottoms and a t-shirt. I had no idea the direction my hair was going. I shivered in the cool morning air.\n\n\"Too late now,\" I said. I opened the door wider and moved to the side. \"Good morning, Mr. Griffin,\" I said loud enough for Sandra to hear. She popped up as he entered. \n\n\"I should have called,\" Griffin said. I nodded, wondering how he got my address. I nearly fainted when he smiled. \"I lost my assistant who usually handles these things.\" A joke. A piss poor one, but a joke nonetheless. I gave it the half smile it deserved.\n\nGriffin handed me a letter on company stationery. I took it, while trying desperately not to scratch my itchy ass again. Sleeping on the couch had left it all tingly. I walked over to the wall and switched on the light as Griffin and Sandra regarded each other. No hellos, just eyes and a nod. \n\nThe letter was a glowing recommendation from him. Five paragraphs singing my praises. It was beautifully written. The prose he used was concise and stated fact. Naming projects I had been instrumental in. I was choking up. I didn't know he even remembered half of what I had done. I didn't understand.\n\n\"So you don't want me Monday?\" I asked. Griffin's face contorted. He choked back his first response, which I would have recognized and continued with a second. This was new. \n\n\"I want you back Monday,\" Griffin said slowly. \"I owe you that.\" He said pointing at the letter. \"I wrote it in case you don't want to come back.\" I could see him struggle with the words. He wanted so much to lash out. \n\n\"You're apologizing,\" I said. The beautiful letter got to me. Unbidden, my eyes filled. He stood there looking at me with an almost imperceptible nod. I smiled. It was all I would ever get. From him, it was total capitulation - unconditional surrender.\n\n\"I'm sorry for the words I spoke,\" I said. Actually, I was sorry for how I said them, not that I did. \n\n\"Deserved.\" was all he said. Another capitulation. \"You won't do it again, in the office.\" It was an order, not a request. His normal way of communicating had returned. \n\n\"Not out loud,\" I conceded. Damn, if he didn't smile again. In six months, I had never seen him smile. Now, twice in the matter of a few minutes. \n\n\"I'm Sandra,\" Sandra introduced herself. I really hoped my hair didn't look like hers. \n\n\"Yes, the bouquet,\" Griffin said. Sandra's hands instinctively covered her boobs. She flushed. Griffin looked at me. \"I did some research on the festival. It seems well covered in social media. I assume you will be avoiding things like that in the future.\" More commands. Nothing was changing. Well, nothing but my pay and some acknowledgment. I really liked the letter. \n\n\"It was a one-time thing,\" I admitted. I didn't like him telling me what I couldn't do, but the chances of me topless in public again were nil. Griffin nodded. \n\n\"Then it's behind us,\" Griffin said as if he could dismiss the incident with his words. \"I am yours for the day.\"\n\n\"Pardon?\" I asked. I was sure I misunderstood. Sandra's eyes were darting between Griffin and me. \n\n\"I have been informed that I create a stressful work environment.\" Griffin was speaking as if I was a little dull in the head. Nothing had changed. \"I don't expect that will change. I also know that your work has improved mine.\" Another compliment. Why did I find it worth more than the raise? \"Public outbursts and parades are out.\" Another small smile. I just stared. \"Therefore, we must find a new way for you to release your stress. I am your employee for the day.\" \n\n\"My work has improved yours?\" I smiled, ignoring the rest of his analysis. \n\n\"Seven percent increase on existing accounts,\" Griffin nodded, \"you develop the numbers. You must have seen it.\" My smile wouldn't go down. I never really read the numbers, I just generated the reports and sent them on. \"You have developed a rapport with my clients. A skill I lack.\" An understatement. ",
        "\"You need me,\" I said out loud. \n\n\"I am here, am I not,\" Griffin answered without answering. Even his compliments were wrapped in a superior tone. Sandra suppressed a giggle. Griffin's eyes flared. I was still smiling. \n\n\"My employee?\" I asked. \n\n\"For the day,\" Griffin clarified.\n\n\"What does that mean?\" I really wished I could get rid of my growing smile. It was glued in place. Griffin needed me. Corcoran needed me. I had value. I liked having my value clearly defined by others. I liked that it was documented. \n\n\"I work for you,\" Griffin said. He dropped the superior tone, \"whatever you need done. It will allow you to unwind in a sensible way.\" It was all math to him. He was willing to lower himself for a day to keep his numbers up. He was allowing me a modicum of revenge. It was totally unnecessary. I wanted it more than the raise.\n\n\"The yard needs raking,\" I said. I almost formed it as a doubtful question. I changed mid-sentence and turned it into a statement. \n\n\"Where would I find a rake?\" Griffin queried. My heart fluttered. I liked being the boss. \n\n\"In the garage,\" I said, then added, \"where did you expect it to be?\" I used the Griffin you-must-be-an-idiot tone. I wasn't confident I had it down, but it was fun to say. Griffin didn't bat an eye. \n\n\"Of course,\" Griffin replied, looking around the house, \"which way?\" I pointed to the door off the kitchen. He headed off to rake my yard. \n\n\"Okay,\" Sandra said incredulously, once Griffin was in the garage, \"that was bizarre.\" I ran to the window and watched as he started to rake the leaves. There was no hesitation in his movements, no sign he resented it. \"You do know how weird this is?\"\n\n\"With him, I think it's more normal than you know,\" I said, smiling. Griffin was putting effort into his swipes with the rake. He wouldn't even allow a single leaf to escape his gathering. Nothing out of place. It was his way - the anal, OCD way.\n\n\"You're enjoying this,\" Sandra observed. \n\n\"Immensely,\" I agreed. \n\n\"You like him,\" Sandra continued.\n\n\"Today I do,\" I admitted. It would take Griffin a while to gather all the leaves. I remembered my state of dress and probable smell. \"I have to take a shower. Wait for me?\" \n\n\"Sure, that's what bouquets do,\" Sandra smiled. I hugged her and ran to the shower. Everyone needs a friend who doesn't judge her insanity.\n\nGriffin had the leaves in a single pile by the time I cleaned myself up. He'd raked all the leaves, even the ones that had fallen while he had been raking. He had even pulled them out of the landscaping. At least he expected the same perfection out of himself as he did out of me. \n\n\"There are some recycle bags on the second shelf,\" I said, pointing to the garage. Griffin nodded and headed off after them. I sat on the front stoop and watched. I couldn't believe what was happening. Sandra joined me, handing me a cup of coffee. It was a cool morning, but not uncomfortable. We watched as Griffin returned and started filling the bags. \n\n\"You don't think this is weird?\" Sandra asked, warming her hands around her coffee cup.\n\n\"Yes, wonderfully weird,\" I said, mesmerized by the man cleaning my yard. For some reason, I wanted to watch. Not helping like I should, but sitting idling watching Griffin work. He never even looked up at me as he filled three bags full of leaves. All the months of him yelling at me seemed to fade into a distant memory. \n\n\"What about Monday,\" Sandra asked, \"think he'll make you pay for this?\" I could have sworn I saw a quick smirk on Griffin's face. He might have overheard. \n\n\"Maybe,\" I responded quietly, looking around the yard, \"but right now there are things that need to be done.\" I stood up and Griffin folded over the top of the last bag. \"Those go on the left side of the drive. Don't block the driveway.\" It was a command. A wonderful, tasty, lovely, I-am-in-charge command. He picked up the first bag and headed toward the end of the driveway. My smile returned of its own accord. \n\n\"Bitchy, bitchy, bitchy,\" Sandra whispered with a sly smile. I had to bite my lip to stop from laughing. \n\n\"A little more to the left,\" I called to Griffin. The bag was in a fine spot, but that red marker of his was eating at me. A little correcting was in order. He picked up the bag and moved it another foot to the left. \"Too far,\" I corrected again. Sandra hit my arm. I couldn't help it, the whole situation was just too delicious. He moved the bag back about halfway, and I nodded to let him know it was perfect. \n\n\"You're as weird as he is,\" Sandra smiled, \"I can't believe he is just doing it.\"\n\n\"It's my day,\" I said proudly. I watched as Griffin moved the other two bags to the curb. I almost had him move them again, but thought that would be drifting too far to the dark side. Griffin took a good look at the three bags, twisted one a little and pushed another back about an inch. Definitely anal. He moved to the center of the yard, held out his hands as if I was going to nail him to a cross. \n\n\"Next,\" Griffin said, a smile on his face. He was enjoying himself. I stared at that smile, a thing I didn't think existed a day ago. \n\n\"The hedges need trimming,\" I said softly. Why was he smiling? \n\n\"Is the trimmer in the garage?\"\n\n\"Yes, the giant scissor thing,\" I replied, making motions with my fists like I was using it. He moved off to retrieve the trimmer. Sandra stifled a laugh. \"What?\"\n\n\"He likes you as boss,\" Sandra whispered. I felt a warmth rush to my face. \"He really likes it.\" \n\n\"Stop it,\" I said. \n\n\"This is like sex to you two wackos,\" Sandra joked, \"right now you're on top.\" I hit her arm. She laughed. \n\n\"He's precise,\" I responded, \"this is nothing but a means to an end for him. He likes his numbers.\" I smiled at Sandra. \"I'm a really good assistant.\" I loved hearing it out of my mouth. Mr. OCD had quantified it. He put it in writing. Now he was going to trim my bushes. Heat ran through me. Yes, it was a little like sex. \n\nGriffin appeared from the garage with the hand trimmer. He moved to the bushes on the far side of the driveway, the line that marked the property line. He looked up and down the row, knelt a couple of times then turned back to me. \n\n\"Just want it cleaned up or shaped?\" Griffin asked. \n\n\"Oh,\" I sighed, deep in my thoughts, \"shaped would be wonderful.\"\n\n\"Foreplay,\" Sandra whispered with a little smirk, pulling me off my cloud. Griffin didn't seem to notice. His attention was riveted to the bushes as he went to work. I could almost see his mind working as the trimmer tilted this way and that, cutting precisely with aggressive intent. Each time the blades came together, the silvery sound of metal sliding against metal caressed my ears. It was an intoxicating sound, the way it almost echoed off the house itself, each cut severed leaf and branch for me. At my command. Yes, foreplay.\n\n\"Don't,\" Sandra whispered. Her face was cloaked in concern. \"It would be worse than the float.\" I forgot that she could see through me. I gave her my innocent smile, the one that contained humor and confusion.\n\n\"You're imagining things,\" I said. \n\n\"You can't sleep with your boss,\" Sandra said seriously. \n\n\"No intention,\" I laughed in an attempt to relieve her worry. Power surged through me at the thought. If I had Timothy under me, sleep would be that last thing on my mind. Visions of him disrobing at my word made me close my eyes. I let them flutter away. No man would allow that much control, certainly not Griffin. Not Mr. Red Pen. I looked at him working feverishly on my hedges, his arms working back and forth, set on pleasing me. My breath caught in my throat.\n\n\"I mean it,\" Sandra continued. I just smiled.\n\nIt took the rest of the morning for Griffin to finish the bushes. He cleaned up the trimmings, adding another recycle bag at the curb. Sandra had gone inside to clean herself up. I stayed and watched. Griffin didn't seem to notice my vigilance, his intention upon shaping my bushes into uniform fence-like structures took all his attention. A year of fearing his appearance at my desk, and now I couldn't seem to break away. \n\n\"Lunch,\" I called out when Griffin was returning from the curb. He picked up the garden tools and nodded. I went inside and practically ran to the counter. I sat on the stool at the end of the counter. It allowed me the best view. Sandra was giving me a questioning look, but her main attention was on her phone. She had been on a call when I came in. I smiled and mouthed 'lunch' to her. She rolled her eyes and submerged herself back into her phone. It sounded like a work call. \n\nGriffin came in with a neutral expression, pulled the sleeves of his sweater up his forearms, away from his hands, and went to the sink to wash up. \n\n\"You'll ruin the sleeves that way,\" I commented, knowing that the wool would stretch and may not return to its normal diameter. Griffin looked at me with half a smile, reached down to his waist and pulled his sweater up and off his body. He folded it neatly and laid it off to the side. An old faded red Ohio State t-shirt now covered his torso. I had never seen anything that wasn't crisp and new on him. Everything was different today.\n\n\"Is that better, Ms. Paddington?\" Griffin asked. His smile was back again, fighting with mine. He started to wash his hands. \n\n\"Yes,\" I said and risked much by adding, \"Timothy.\" Not even a shimmer of disapproval. My lungs were barely working. He had just given me more power. \n\n\"What would you like me to prepare?\" Timothy asked, looking around the kitchen. It was the most wonderful question. He was truly mine today. Sandra ended her call and was heading toward us. Three's a crowd, came to mind. \n\n\"Sandwiches would be nice,\" I said, half comment, half command. \"There's bread in the box over there.\" I pointed at my lovely wooden bread box with the large box letters that said 'Bread.' I was about to say there was sandwich meat in the fridge, but I was hit with a better idea. \"There's a can of tuna fish in the cupboard above your head; mayo and pickles in the fridge.\" I saw a tiny bit of confusion on his face. \"I even think I have a hard boiled egg in there as well.\" I watched as he deftly collected all the items and put them on the counter. He stared for a moment then looked up at me. \n\n\"I'm at a loss,\" Timothy admitted. I had him.\n\n\"I can help you with that,\" Sandra said, and started to move toward the other side of the counter. I grabbed her wrist and held her back. Three was definitely a crowd. \n\n\"Timothy can handle it,\" I said, pulling Sandra toward a stool next to mine. She gave me her are-you-insane look. \"The mixing bowl is in the cupboard above the stove,\" I told Timothy. He brought down the bright orange plastic bowl. \"Cutting board,\" I added, pointing to the other counter. He brought it over. \"Knife and can opener are in that drawer.\" He added the implements. Sandra looked like she had bitten into a lemon. \"There's a mixing spoon in the other drawer.\" \n\n\"Two cans of tuna in the bowl,\" I instructed as if I was talking with a young child. Timothy smiled, took both cans, unopened, and put them into the bowl. Smart ass. \"Open the cans, idiot.\" I was unable to keep the humor out of my voice. Sandra nudged me with her elbow. She didn't understand. Damn crowds. \n\nTimothy opened the cans and dumped the contents into the bowls. The smell of fish filled the kitchen and wafted toward the rest of the house. \"You have to drain it first,\" I chastised. This was way too much fun. Using the mixing spoon as a dam, Timothy drained the tuna into the sink. \n\n\"What are you doing?\" Sandra whispered. I could tell Timothy overheard, something in the way his eyes moved. \n\n\"Teaching Timothy how to make tuna salad,\" I told her. 'Foreplay,' I told myself. I knew that wasn't what she was asking. She was wondering why I was subtly torturing my boss. Because he was allowing me. I felt like I was topless on a float daring the world to object. Because it felt so damn good. \n\n\"I have to talk to you,\" Sandra said and moved toward the bedroom, beckoning me to follow. \n\n\"Add a couple of dollops of mayonnaise,\" I told Timothy, \"mix it up until it's spreadable.\" I made useless stirring motions with my hands. \"Be right back.\" He nodded as he opened the mayo. \n\n\"What the fuck?\" Sandra said quietly when I entered the bedroom. \n\n\"What?\" I feigned ignorance. It would have taken a year to explain it to her. I couldn't even explain it to myself. I held power willingly given by one of the most powerful people I knew. It was everything I ever wanted, even though I had no idea I had ever wanted it. A drug. A very addictive drug. \n\n\"You two are nuts,\" Sandra commented. I smiled and nodded. \"This will end badly,\" she added. \n\n\"Maybe,\" I said, my mind traveling past the million possibilities, \"maybe not.\" I shrugged my shoulders. \n\n\"I have to leave soon,\" Sandra said. My heart leaped. Two's company. \"I have to go to work for a few hours. A meeting was rescheduled from Wednesday to Monday and we aren't ready. I can come back tonight,\" Sandra offered. \n\n\"I'll call you,\" I said, not wanting to come out and just say 'no' to my best friend. \n\n\"You're insane, but I love you.\" Sandra smiled. \n\n\"Me too,\" I said hugging her. Sandra sighed and we headed out to the kitchen.\n\n\"It was nice the meet you, Timothy,\" Sandra said sweetly, \"I have to hit the grindstone for a few hours.\" Timothy shocked me, wiping his hands on a kitchen towel and coming around the kitchen counter to shake her hand.\n\n\"The bouquet was lovely, Sandra,\" Timothy said nicely in parting. I could swear Sandra blushed. Unwarranted jealousy, green and awful, gushed through me. I tried beat it off. I had no right. I wanted the right. Sandra smiled to me and headed out with a friendly wave. \n\n\"The eyes were lovelier,\" Timothy said with a smirk, once the door was closed. My blood pressure returned to normal. I turned to thank him, but he had already headed back to the kitchen. \"What's the next step?\" he queried, tilting the bowl so I could see the spreadable tuna. My eyes were lovely. I had lovely eyes. He just complimented my eyes, well a painting of my eyes. My breast eyes. Are my breasts lovely too? \n\n\"Ms. Paddington?\" Timothy asked, trying to get my attention. \n\n\"Oh,\" I said, snapping out of it. I quickly returned to my seat. \"Dice the egg and add it to the tuna.\" About a second later, \"Take the shell off first,\" I corrected and Timothy ceased sawing at the egg with the knife. He was playing with me. Where did his humor come from?\n\nI had Timothy add some chopped pickles to the mix and declared it done. I had to yell at him when he attempted to spread it on non-toasted bread. What kind of moron has tuna salad on non-toasted bread? He wouldn't make that mistake again. It was a very therapeutic lesson. Stress relief by revenge. \n\n\"What would you like to drink?\" Timothy asked as he cut my toasted tuna sandwich in half. \n\n\"Ice water,\" I answered, \"glasses are over there.\" I pointed at the cupboard. Timothy filled two glasses with ice and water. He slid my sandwich to me and placed an ice water next it. I sat there for a moment, just staring at him like he was stupid. \n\n\"Napkin?\" I asked, when his ignorance was fully recognized. He hid his smile. This time I made him search the kitchen to find the napkins. It took three drawers before he struck gold. He folded the napkin in half and placed it gently next to my plate. He fixed his own sandwich as I began on mine. He made a slight face when he took his first bite. \n\n\"You like tuna fish?\" I asked as Timothy took his second bite of his sandwich. \n\n\"I hate it.\" I smiled at his words. More power.\n\n\"Why are you eating it?\" I asked. \n\n\"It's the best damn sandwich I've ever had, Ms. Paddington,\" Timothy said. He was looking through me as he said it, sucking power from me. I let a little go. \n\n\"It is damn good, Timothy,\" I flirted back. I just couldn't be as cold as Griffin. I wield my power differently. A compliment now and again wouldn't weaken me much.\n\nWhen Timothy finished the dishes, I had him clean the garage. It was a mess. I had him bring out a chair for me so I could watch more comfortably. He never showed any signs of disliking my orders. I did not tire of giving them. He was beautiful to watch. He worked in well-defined patterns, completing one sub-task completely before starting the next. Nothing was done twice and everything was done to perfection, or what represented perfection in an old one-car garage. He even hosed down the concrete pad to remove the stubborn dust. My garage was probably cleaner than my bathroom. \n\nWe retired to the great room. The room wasn't really that great. It needed a coat a paint. Another day. I had Timothy open a bottle of wine. Not that I really wished to drink any. I just wanted him to serve me some. He did so in his normal impeccable manner. He sat on the other side of the couch, back in his faded Ohio State t-shirt. I pushed. I really wanted to push. I had never had a day like today. I wanted more. \n\n\"Shoes,\" I said, lifting my feet up on his lap. His eyes moved down my feet, along my legs, up my torso and into my eyes. He smiled as he began to untie my pink tennies. I felt every movement of his hands, each finger as it tugged at the laces. He cupped the back of my ankle as he tenderly removed the shoe from my left foot. Heavenly. He repeated the process on my right foot. So wonderful. \"Socks,\" I pushed. Somehow, he made it tickle horribly as he slowly removed my socks, the white ones with the pink stripes across the top. I struggled to look firm, unperturbed by his manipulations. He placed the carefully folded socks on top of my shoes. I am sure the left sock was with the left shoe. It was his way. \n\nI was about to demand a massage. Lousy slave, he acted without orders. I melted into the couch as he worked the pads of my feet, firmly with an unexpected tenderness. His fingers finding the little grooves between my toes, not forcing, just inching gently along. He found a spot just below my ankle, one I didn't know was there. I lost all my power - a small moan escaped. Oh, God, he heard. His fingers concentrated on the spot as my legs turned to jelly. \"Don't stop,\" I demanded, regaining some strength, more drug. Damn his lovely fingers. \n\nSuddenly, Timothy stopped. He lowered my feet to the floor, his smile very sly. \"It's five o'clock,\" he said. I looked at the clock - closing time. My day was over. Griffin stood. I wanted Timothy back. He picked up and donned his sweater - he was planning on leaving. I was speechless. He moved deftly to the door, a typical Griffin silent goodbye. \n\n\"Timothy!\" I ordered. He froze. Sweet wonderful power surged. I've had to put in overtime before. Why not him? I moved in front of him. Damn his height - I was weakened by it. \"Knell,\" I said quietly, a pleading command. My heart surged when he dropped to one knee, looking up at me. I carefully filled my hand with the hair on the back of his head and tightened slightly. His eyes changed to wonder, a lost boy's eyes. \n\n\"I want next weekend,\" I demanded, my lips so close to his. He shuddered. I felt it. I saw it. I was everything at that moment. I wanted to be everything. \n\n\"Yes,\" Timothy replied. I molested his lips with mine. I took, he received. Heat surged through me. My insides tingled with him. I would have him, in time. I released him and took a step back. He staggered for a moment, flushed with the same heat I felt. It was rum and margarita mixed with fire. \n\n\"I will see you Monday, Mr. Griffin,\" I said with a stuttered confidence. Griffin stood.\n\n\"Don't be late.\" Timothy was gone. I missed him already. It would be a long week. \n\nI woke early, my clothes pressed, color palette adhered to, and not a hair out of place. Mr. Griffin demanded perfection, and I intended to give it to him. Monday through Friday were his days. Walking in to EL Corcoran Brokerage on Monday was exhilarating. Eyes followed me, shocked to see the lady who had been escorted out of the building on Friday. As I neared my desk, the surprise grew. These were the people who had heard my verbal tirade on Friday. I barely looked at them. I had work to do. ",
        "My desk was as I'd left it, a mess. I quickly stashed my personal things into their drawers. I fired up the computer and went through the weekend's correspondence which was thankfully light. There was an email from Mr. Griffin. \n\nSubject: Miami Trip\n\nMeeting with Halstead, Wednesday 2PM at the Thompson.\n\nEarly morning flight preferable. \n\nReturn flight Thursday evening.\n\nNeed rental car. \n\nItinerary on my desk by noon.\n\n-Griffin\n\nNothing like short notice. I took a deep breath, let it out and began my research. Booking the Thompson turned out to be the easy part. I reserved a meeting room for two hours, complete with coffee, iced tea and a selection of light snacks. The flights were more difficult. Nothing in first class available on Wednesday morning. I reserved the Wednesday seat and a first class seat on Tuesday night. The rental took a while. I had to find one that was least problematic, one where the in and out was smooth without lines. Mr. Griffin hated lines. I found it odd that he wanted a rental at all. Usually, a ride to and from the airport was all that was necessary. \n\n\"Itinerary?\" Griffin grumbled. I looked up as he walked past the desk. Timothy was inside that gruff exterior somewhere. \n\n\"Good morning, Mr Griffin,\" I said offhandedly. \"First class Tuesday night or coach Wednesday morning?\" \n\n\"Coach - next time call sooner,\" Griffin chastised. I smiled as he disappeared into his office. There was no recognition of our Saturday in his face. I knew it was on his mind. I held his head and watched him quiver because of it. I wanted that power again. \n\nI committed on the Wednesday flight and canceled Tuesday night. I researched the surrounding restaurants and made a list, complete with maps. I included a list of the walking and bike trails in the area. Griffin always had me include these. I assumed they were to help him unwind from traveling. I never asked. Griffin just wasn't the sharing type. \n\nI assembled all the information into a single document and printed it. I placed it all in a folder, most pertinent information on top. I emailed a copy to Griffin and then entered his office. It was only ten, two hours early. I was on an efficiency roll. The best assistants always are.\n\n\"Your itinerary, Sir,\" I said as I placed it on the corner of his desk.\n\n\"I still have a Tuesday appointment on my calendar,\" Griffin said, not looking up from the papers he was reading. My breath caught. My little bit of revenge was now going to bite me back. I almost fell into Saturday. Almost demanded that he meet with Mrs. Pritchard, and allow the sweet lady some time. I sucked it back. It wasn't my day. I didn't relish the idea of breaking the woman's heart again. Griffin was an asshole. My asshole. \n\n\"Yes, Sir,\" I conceded, \"I will reschedule it right now.\" Silence. A dismissal without words. I retreated slowly with my nasty task. I should have canceled it on Friday. Now I had to do it with even shorter notice. \n\nI sat at my desk staring at the phone. Last time I rescheduled, I could almost hear the pain in Mrs. Pritchard's voice. She was such a sweet woman. I bit my lip and picked up the receiver. I could feel the tension in my chest. As painful as it was, it had to be done. I began dialing. My email flickered a new message.\n\nSubject: Mrs. Pritchard\n\nShe doesn't want to speak with me. \n\nGood Morning,\n\nTimothy \n\nI read it four times. I wanted desperately to run into Griffin's office and tackle Timothy for the 'good morning.' I held myself in check. There was no way Griffin or Timothy was this inciteful. I thought back to all the cancellations and reschedulings. The hours of conversations with Mrs. Pritchard. She knew more about me than my own mother. Only Sandra knowing more. I had never met Mrs. Pritchard, but we had inched into a friendship. No wonder it hurt so much to reschedule. \n\nI restarted Mrs. Pritchard's number, forgetting where I left off. It rang twice before she picked up. \n\n\"Good morning,\" Mrs. Pritchard greeted me with her unwavering friendliness.\n\n\"Good morning, Mrs. Pritchard,\" I started, \"this is Victoria, from Mr. Griffin's office.\" \n\n\"Are we going to have to reschedule again?\" I could hear the humor in her voice. I hadn't noticed it before. \n\n\"I'm sorry, Mr. Griffin is tied up tomorrow,\" I answered, \"how about sometime next week?\" \n\n\"Of course, my dear,\" Mrs. Pritchard continued our dance, \"I sure hope you had a nice weekend.\" The conversation turned. This time I listened to what I was saying. It wasn't the small talk I had imagined. She delved as deeply as I would let her. Real curiosity and caring drove her questioning. My questions were always answered then turned back on me. \n\n\"So you met a man,\" Mrs. Pritchard verified. I had let it slip, she was very good. \"What's he like?\" \n\n\"Something completely different,\" I answered truthfully, \"caring and so...he seems to know me.\"\n\n\"Is he good looking?\" I closed my eyes and remembered Timothy on his knee. Those lost boy eyes staring at me. A shiver sailed through me. \n\n\"Oh, yes,\" I said, with more passion than I intended. I quickly looked around. No one had seemed to notice. At least I wasn't talking loudly. Mrs. Pritchard gave me a soft chuckle.\n\n\"I remember my first husband,\" Mrs. Pritchard continued, \"he was 'oh, yes' too.\" I had to chuckle back, covering my mouth so the rest of the office couldn't hear. \n\n\"When did you know?\" I asked, forgetting Mrs. Pritchard was a client, \"I mean, that he was the one.\" \n\n\"That first kiss,\" Mrs. Pritchard sounded lost in a memory, \"it took him three dates to work up to it. I wanted to kiss him on the first date, but I was too much of a chicken back then.\" More giggles. \"Everything seemed right and I knew I wanted a lifetime of his kisses.\" My heart gladdened at her words. \"Alas, his heart gave out after twenty-five years. Best years of my life.\" I felt her sadness. \n\n\"He sounds wonderful.\"\n\n\"The men we love always are,\" Mrs. Pritchard continued, \"difficult, pain-in-the-backside, but oh so wonderful. Do you have another date planned with your new beau.\" 'Beau' sounded silly coming from her. Almost like she was trying to sound young. I let it be. \n\n\"This weekend.\"\n\n\"Will you indulge an old woman and call me next week?\" Mrs. Pritchard asked. She knew I would. I would have to reschedule her again. \"I'd like to hear about what I'm missing these days.\"\n\n\"Of course,\" I said, looking forward to it. We ended the call with some banter about the rain that had been persistent all morning. When I put the phone down, I realized Mrs. Pritchard never asked me for Timothy's name. I would have lied, but it was a curious omission. Probably slipped her mind. At her age, it was the actions that counted, not the names and places. \n\nGriffin walked by my desk, his eyes never drifting to me. He tossed the itinerary folder on my desk. \"If you'd spend less time on the phone, your work wouldn't be so sloppy.\" I watched him exit for his eleven o'clock meeting upstairs. Infuriating. I opened the folder to find all my work had been attacked by his red pen. It was an itinerary, not some doctoral thesis. Of course that's a sentence fragment - it was meant to be simple instructions. Under the list of restaurants, he had commented on the lack of sample menu items, and they were listed alphabetically instead of by distance from the Thompson. Bastard. I really hated that red pen. \n\nI spent the next hour cleaning up the itinerary. The sample menu items were difficult to obtain, not all websites had a menu, not all restaurants had a website. I had to make phone calls. I turned to the last page as I finished my rewrite - trying to make sure I hadn't missed any other frustratingly useless corrections. On the bottom right of the page, tucked in the corner, in the very last position Griffin was able to write in, there was a tiny, hand-drawn red smiley face. Timothy thought it was funny. I knew then, that I was being baited. \n\nMy mind worked feverishly as the smile grew on my face. I would have to dream up something special for this weekend. The punishment must fit the crime. It was going to be a very long week waiting for my power to return. I closed my eyes, imagining Timothy kneeling at my feet once again. Foreplay. A week of tortuous foreplay. I would have him under me, paying dearly for this week. A shudder traveled up my spine. I had never wanted someone so much. \n\nI printed and assembled the new itinerary, sent the revision to his email and placed the hard copy on his desk. I stopped when I saw his red pen. Unlike the two Montblanc pens rising out of the marble holder at the end of his desk, this was a cheap over-the-counter thin red marker. I lifted up my evil nemesis, and a lovely idea formed. The weekend would be delicious.\n\nI headed down the street, wrapped in the heavy coat I finally broke out of the closet that morning. The rain had stopped, but a taste of winter was in the air. I pulled the coat tighter around myself, moving quickly to my favorite sandwich shop. Griffin was off eating with the partners, not that he ever joined me for lunch anyway. Griffin didn't fraternize with underlings. I smiled - Timothy did.\n\n\"Victoria!\" I stopped and turned to see Susan jogging toward me. She worked in the secretarial pool I had left a year ago. I waited for her to catch up. Her cheeks looked as red as mine felt. I really wasn't ready for winter. \n\n\"Lunch?\" Susan smiled.\n\n\"Sure,\" I agreed as Susan moved along side. \"I just heading over to Krockner's Deli.\"\n\n\"Sounds good.\" We walked together, trying to stay warm as the wind whipped between the buildings. \"So, you're like the talk of the office,\" Susan said, smiling. I could see she was dying for information. \n\n\"What do you mean?\" I said, my own smile felt silly. \n\n\"Come on, give,\" Susan said, bouncing her shoulder into mine as we walked. \"You were escorted out of the building on Friday. Half the office heard you lay into Griffin. Now, here you are back at work like nothing happened.\" It was fun being a mystery, but I wasn't sure if I wished to be the main topic of conversation. Who knows where the speculation would lead?\n\n\"Sandwich first,\" I offered, holding the door to the deli open for Susan. She seemed satisfied to wait for a few more minutes. I needed the time to come up with the half truths I wished the office to know. Susan was a nice person, but secret keeper was not in her job description.\n\n\"I kind of let loose during my vacation,\" I started while unwrapping my half tuna salad sandwich. I really liked the pickle spears the deli added in the meal. I moved it off to the side to save for desert. \"HR found out and terminated me.\" I had Susan's complete attention. \n\n\"How loose?\" Susan interrogated. \n\n\"Nothing illegal,\" I hedged. There was no reason the office needed to know I was flashing my painted breasts on a float. \"Just not the image EL Corcoran wished to display.\" \n\n\"Continue,\" Susan prompted, realizing I wasn't going to go any deeper into my violation of company policy.\n\n\"Before I left, I asked Mr. Griffin if he would give me a letter of recommendation,\" I continued, \"I knew it was a long shot, but I tried anyway.\" I paused for a moment to sip my iced tea. I should have gotten something warm to drink. It was too cold for iced tea. \"When he refused, I kind of lost it. I gave him a piece of my mind...loudly.\" I remembered poking him with my finger. His shocked expression. The shudder that went through him. It was the same shudder when I had taken that kiss from him. He liked it. He liked my power. I felt a wonderful clarity at the revelation. I yelled at Griffin and Timothy emerged.\n\n\"So?\" \n\n\"Huh?\"\n\n\"How did you end up with your job again?\" Susan pushed. I had lost my train of thought. \n\n\"He stuck up for me,\" I smiled, thinking of the risk Timothy took. \n\n\"Who?\"\n\n\"Mr. Griffin,\" I answered. Susan's eyes grew. \n\n\"Griffin doesn't like anyone,\" Susan pointed out. \n\n\"Turns out I am a good assistant,\" I said proudly. I had it in writing so I knew it was a fact. \"He told Mr. Corcoran that if I wasn't back on Monday, he wouldn't be either.\" I was bragging now. I kind of wished I hadn't let that last part out. \n\n\"Whoa,\" Susan sighed. I took another bite of many sandwich as she digested what I had said so far. \"You must be very good.\" I was and I had it in writing. I loved that I had it in writing. It was Griffin who wrote it down. It was Timothy who handed it to me. A wondrous gift of power. Only four more lunches to go. \n\n\"It was a really nice compliment,\" I admitted. I saw a new respect emanate from Susan. \n\n\"So, any good boy stories lately?\" Susan asked, changing the subject.\n\n\"Nope,\" I lied, \"you?\" The rest of the lunch was instantly filled with Susan's love life. Some guy she met online. My opinion was suddenly invaluable. I could tell it was a whirlwind Internet romance fostered by her intense need to be liked. I gave her the normal online relationship warnings, but conceded that was where a lot of couples met now. I really couldn't warn her off. I had ignored Sandra's warnings out of hand. So I listened, which seemed to make Susan happy. \n\nThe week crawled. Griffin was gone Wednesday and Thursday. On Tuesday, he assigned me more work than could be humanly done in three days. I wasn't human, so I got it done. I was a really good assistant who worked overtime to please the unpleasable. Somewhere in that disagreeable man was my Timothy. In my mind, he was mine now. I don't know how I found him hiding in that cantankerous shell. I don't know how he knew what I needed. I knew he needed it too. I saw it in his eyes when he kneeled at me feet. Such a beautiful man.\n\nGriffin walked in Friday morning with an urgency, again not acknowledging me, or anyone else, with his eyes. If fact, he avoided my eyes. \"Breakdown Report?\" he growled as he passed.\n\n\"Good morning, Mr. Griffin,\" I said, \"it's on you desk next to the quarterlies.\" I watched him enter his office, smiling at my camouflaged Timothy. One more day. \n\nGriffin spent the day in his office. I expected the reports back on my desk with red graffiti all over them. Nothing. I was practically swimming in red on Tuesday. He had never accepted the first draft of anything. Even perfection needed his improvements. I waited until four, then, like an idiot, I went to seek out his abuse. It is strange what you can get used to. \n\n\"Mr. Griffin,\" I said, knocking on his open door, \"do you need me to redo the Breakdown?\" Griffin immediately spun around his chair, facing away from me, and started playing with the fax machine behind his desk. \n\n\"No, they're fine,\" Griffin said in an unfamiliar tone. The number he was dialing certainly contained a lot of numbers. I moved forward, to the side of his desk. \n\n\"Are you okay?\" I asked. I knew Griffin and I knew Timothy. The man that was fumbling with the fax machine was new. I took another step forward when he didn't answer. His shoulders slumped when I neared. He gave up on the bogus fax and turned toward me. The upper part of his left cheek was swollen, a painful mix of green and purple marked the area. I sucked in my breath inadvertently. \n\n\"I'm fine,\" Griffin spat. I was hurt by his tone. It never really bothered me deeply before, but it had never been accompanied by physical injury. \"I'm fine,\" Timothy repeated, in his softer voice. I wanted so much to make it better - it looked like it hurt something awful. \"Ignore it,\" Griffin ordered. \n\n\"Yes, Sir,\" I replied and stepped out of his office. I wouldn't ignore it tomorrow, though his change in demeanor frightened me. I wondered if tomorrow was in jeopardy. Something terrible happened, and I wasn't sure how deep it went. I wondered if he was mugged in Miami. Maybe he fell. I really knew so little about him, such a guarded man. Maybe a traffic accident. Does he even wear a seat belt? The rental car!\n\nI moved quickly to my computer and looked up the rental company. I called and lied, my anger rising as thoughts ran through my mind. I told them our company tracked all vehicle mileage. It took them a few keystrokes to tell me it was 357 miles. I was livid. I waited until the clock rolled to five. Work day was over, everyone was leaving. The weekend had started. My time!\n\nI slammed the door closed, a little louder than I had intended. Griffin looked up in surprise. I pointed at him trying to get words out, but I couldn't think of where to start. He stood, taller, intimidating, which only angered me more. \n\n\"You drove to Key West,\" I accused him. He visibly shrank. I knew it was true. \"There wasn't a meeting at all, was there?\" \n\n\"How did you...\"\n\n\"You never get a rental car for such a short trip.\" I pointed out his idiocy with all the Griffin tact I had learned in the last year. \"I don't need protecting!\" I sometimes did, but not by him. It granted him too much. I wanted everything. \n\n\"No one calls you a bitch!\" Griffin countered. His fist slammed down on his desk. I felt the vibrations along the floor. I was losing him. My hands were shaking as I closed the distance. I wasn't sure how much I had lost. \n\n\"Kneel,\" I whispered. Slowly, Timothy dropped to his knee. My heart leaped, my smile grew, my lost boy was still here. I reached for the hair on the back of his head and gripped it snugly. \"What did you do?\" I asked, my smile ruining my anger.\n\n\"I had a talk with a Doug Fuller,\" Timothy answered, his smile grew with mine. He was the one shaking now. So much power. \n\n\"I did not ask you to,\" I scolded. \n\n\"You'll never have to,\" he answered. \n\n\"I don't want you fighting for me,\" I insisted. \n\n\"Then leave me,\" Timothy said. His smile was gone. He meant it. I knew I could never do that. \n\n\"You're mine,\" I admitted. I took his lips once again. He shuddered as I parted his lips with mine, my tongue delving into his, my hand gripping his hair tighter. The surge of heat was stronger than before. All mushy, with little waves rippling across my skin. I forcibly broke the kiss. \n\n\"Eight AM\" I reminded him, \"don't you dare be late.\" I turned, a power turn, and sauntered out of the office. He watched in silence. I had lost nothing. If anything, I had more. Timothy was a most wonderful drug. \n\nI grabbed my purse and left for home, silently hoping Doug was living off aspirin and cold compresses. \n\nI was nervous waiting for eight o'clock to roll around. I had barely slept, the last day's events rolling around in my head, mixing with the fantasy my mind was anticipating. I wanted to look and feel sexy. I didn't want that look in Timothy's eyes to fade. I had never spent money on provocative lingerie, never having a boyfriend I deemed worthy of the effort. Now I felt my wardrobe was woefully inadequate. \n\nI did possess an almost see-through robe. It was a gift from Kendra when she returned from a trip to the far east. Soft white silk, mid-thigh in length with a flower design embossed throughout. If the light caught it right, you could see shadows of what lay beneath. I went through my underwear drawer, trying to match bras to panties. All my bras were comfortably functional, nothing frilly or exciting. I wasn't brave enough to start out topless - it was way too early for rum. \n\nI moved to my summer drawer; maybe some shorts. I had thrown the green bikini from Key West on top of my shorts. The labels were still attached. After Doug, the bikini didn't appeal to me so it never saw the sun. Its appeal was returning. I stripped and stepped into the bottoms. I wrapped the strapless top around me, connecting it in the front, then shifting the clasp to my back. I pushed the cups over my breasts and looked in the mirror. I think it looked sexy. I would have to shave more than just my legs. I wished I had bigger tits. \n\nI threw the robe on and turned back and forth in front of the mirror. It looked more cute than sexy. I was too short for sexy. I grabbed some heels out of the closet. I shifted a bit away from cute, but nowhere near sexy. I would rather be short, the business heels made me look goofy. I stood in front of the mirror, opening and closing my robe. I believe I was thinking of confronting Timothy in a swimsuit in November. I tried to step back and think like a man. An objective view of my look. Impossible. I barely knew what made me tick. ",
        "I almost bailed on my look. Jeans and a t-shirt would be safer, less overt. No, I wanted overt. I wanted Timothy naked. It was best that I started halfway there myself. The warmth crept up on me again, a convincing warm blanket accompanied by visions that promised to take me to heaven. The smile in the mirror was sexy.\n\nI disrobed, showered and overworked my razor. After I dried, I cut the labels off the bikini and put it on. I spent some time on my hair, added some light makeup and a few squirts of a body spray titled White Musk - another gift from Kendra. I was about as sexy as I could get at seven in the morning. I straightened up the bedroom, changing the sheets in hopes I would have to do it again soon. \n\nI waited in the great room. Sitting on the couch, not really watching the morning program that was insisting the country was in dire straits. When the doorbell rang, at exactly eight, I nearly hit the ceiling. Every decision I made came back to haunt me. My clothing was the first thing I lost confidence in. I turned off the TV and moved to the door. I opened the door with trepidation, half hiding behind it, wishing I would have opted for the jeans. \n\n\"Good morning, Ms. Paddington,\" Timothy said. He wore a pair of faded jeans with a well-worn long-sleeved, collared shirt. He was ready for labor. My clothes were all wrong. I felt my face flush, my power drained. I was no good at this. He stepped into the house, ignoring my idiotic silence. \n\n\"Did I wake you?\" Timothy asked, looking at my robe. His smile made me wonder if he knew what I was thinking. More power drained. His smile was replaced with concern. \"Should I come back later?\" \n\n\"N..no,\" I lied. Where was my strength? I had let slip everything I envisioned. Timothy should be quaking before me, begging with those lost boy eyes. I could see it in his face now. I put doubt there. I was horribly uncomfortable in my bikini. \n\nTimothy bent down, his hand wrapping softly around the back my neck. There was too much strength in it. His head lowered, eyes leading the way for that poor bruised cheek. His lips were tender on mine, so light a touch I almost cried at the weakness of it. He slowly lowered himself as my lips sought more. My hands gradually moved up his arms as his shoulders dropped below my eyes. He ended on his knee, kissing upward at me. I realized then, I could never take power from him. I was granted power by him. \n\nI whimpered into his mouth as my hands combed into his hair. I pushed my lips into his, grabbing a fistful of his hair and holding him there. He shuddered, giving me what I wanted. \n\n\"I am yours,\" Timothy whispered, our mouths sharing the same air. I smiled as I felt the strength he gave me. The intoxicating drug of control. Heat seared through me. Doubt flew away on frightened little wings. I separated my lips from his and stared into the eyes I now controlled. \n\n\"Take your shirt off,\" I ordered quietly. I didn't even question the possibility he would decline. His hands moved deftly to the buttons that ran down his chest. His eyes never left mine. My hands holding him there, grasping his hair to guarantee compliance. My heartbeat was loud in my ears, blood coursing in waves. He pulled the shirttails out of his pants to get to the last button. I watched him pull his arms out of the sleeves, leaving him in his Ohio State t-shirt.\n\n\"Favorite t-shirt?\" I asked, releasing Timothy's hair. He smiled while nodding. \"Off,\" I commanded. I loved it when he complied. His muscles were tauter than I expected, obviously the result of some anal workout schedule. Doug may have been hospitalized.  \n\nI walked around Timothy, examining him as he knelt before me. I let my right hand trail behind, lightly caressing his skin as I moved. Inadvertent shivers traveled across his skin. They were exciting to see, my pulse quickened in response. I lowered myself along his back, the silk of my robe against his skin. I pulled his head back and looked at his upside down eyes. \n\n\"We're going to break some company rules today,\" I informed him. \n\n\"Rules don't apply to us,\" Timothy gasped as I ran my hand lightly around his exposed neck. We were going to create our own rules. My lips followed my hand, kissing skin, smiling when he twitched. So excitable. So strong. So obedient. So mine. I moved slowly in front of him and opened my robe. I saw him swallow hard.\n\n\"Oh, yes,\" Timothy sighed softly, his eyes scanning down my form. I dropped the robe and moved close, standing before him. He looked up and waited. I smiled at his patience. \n\n\"Touch me,\" I ordered. I almost swooned as his hands ran up from my ankles, following my calves, caressing my thighs. A lovely tingle formed between my legs. I sucked in my breath as his hands ran up the back of my thighs and along my butt cheeks. There was no hesitation in his moves and his hands drove higher, almost tickling my sides. They reached the sides of my breasts, just off the fabric of my bikini. His fingers lightly outlined the fabric sending shivers through me as I looked at the intense pools of wonder staring up at me. I cradled his face in my hands.\n\n\"Stay,\" I said, stealing a passionate kiss. I moved away, Timothy's hands reluctantly let me go. I moved slowly, a graceful power taking the time she owned. The drawer in the end table held my target. I bent slowly knowing his eyes would be enjoying the view. I retrieved my revenge from the drawer, rose and strolled back with my hands behind my back. He was waiting, unmoved from where I had left him, his eyes drifting across my body. I knelt before Timothy, our smiles meeting as I descended. His hands began to return to their tempting caresses. \n\n\"Arms down,\" I ordered. Timothy's hands reluctantly returned to his side. \"Don't move,\" I added, as I brought my hands forward. His sharp intake of breath when he saw the red marker was so yummy. His eyes widened when I removed the cap. \"Hmm,\" I hummed, deep in thought as I examined his chest. A little above his right breast, off toward his armpit was a slight discoloration, a freckle-like mark. An imperfection. A cute one, but one nonetheless. I brought the marker forward and watched his body retreat. \n\n\"Still,\" I commanded. Timothy stiffened. I circled the freckle slowly with the marker. He emitted a low groan, almost as if the felt tip was a blade, as I drew. I looked up from the red circle into his strained eyes. I was pushing him, and it pleased me. For a year I had been receiving red pen corrections, and it was liberating to give them back. My eyes returned to the red circle. I leaned forward and kissed the freckle. Timothy sighed out the breath he had been holding. I could feel him surrender. I reached up and stroked the side of his face.\n\n\"There are so many errors,\" I said, watching the panic rise in his eyes. I found another blemish, smaller than the first, below his rib cage on the left side. I circled it slowly, his skin trying to retreat from the marker. Again, my lips found the circle, this time lingering to taste his skin. It was a sensitive spot, and my tongue sent shivers up his side. \n\nNine times I found errors on Timothy's chest. I corrected each one with my lips. Each time he sighed longingly. I pushed harder, teasing by bringing the marker toward his face. I had expected him to flinch or pull back. He surprised me by closing his eyes and forcing himself to still his movements. He was serenely calm, marred only by a drop of sweat that appeared on his right temple. Full surrender. My hands were trembling as I lowered the marker and replaced its cap. His trust overwhelmed me. My lips found his temple, removing the salty sign of his inner tension. I felt his smile form as he realized his trust was not misplaced. My lips moved to his ear.\n\n\"Remove my top,\" I instructed, not wanting clothes between us anymore. Timothy's hands moved quickly, tracing the bikini fabric under my arms until they found the clasp in the back. I felt his heat rise as my top found the floor. His eyes were not shy. My reservations were long gone as I let him take me in. It was my own impatience that forced me to grab a fistful of his hair and pull his face to my breast. When my nipple disappeared between lips, I gasped. I felt a soft, warm prickling in my breast. It flowed down my tummy and between my legs. I pulled him to my other breast, doubling the sensation, creating an incredible need. I had never wanted someone so much.\n\nI rose slowly, Timothy's lips caressing down my tummy, his tongue leaving a moist trail. My hand firmly disallowing his lips' retreat.\n\n\"Bottoms,\" I ordered. My desire had grown, weakening my legs. Timothy once again ran his hands slowly up my legs, causing a luxurious chill to burn through me. With lips lightly biting my tummy, his fingers sank into the the elastic of my bikini, and lowered it slowly down my legs. I closed my eyes as my scent filled the room. It was incredibly strong, musky and driven by desires I never knew I had. I stepped out of my bottoms as they neared my feet, using my grip on Timothy's hair to steady me. His hands returned to my hips, grasping my butt and holding me steady. He defied my grip and looked up at me with desire in his eyes. I pulled his head down, my legs trembling as I spread them. He submitted with a smile. My lovely, lovely man. \n\nTimothy's kisses traveled over my soft down, teasing my cravings to a fever pitch. I shifted my hips like a lustful animal, exposing more of my sex to his ministrations. He tilted his head uncomfortably, and let me guide his mouth. I nearly fell when his lips graced my vulva. If not for his strength, I would have collapsed. When his tongue began to explore, I shuddered and pulled him tighter. He needed no encouragement, but I wanted the control and held him tightly. \n\nI looked down at the man between my legs, my hand forcing him deeper. Timothy was my willing toy. Something so new. Something so perfect. My steering had his tongue finding places no man had ever found. A massage of my insides sending wonderful sensations through my body, forcing air in and out of my lungs. He was so determined to please me. I was so determined to guide him. I pulled him forward, his lips gracing my clitoris. A spasm forced my hips into him while my legs wobbled. He dragged the flat of his tongue across my swollen bud, causing small convulsions to roll across my tummy; visible waves of uncontrollable pleasure traveling along my skin. \n\nTimothy's lips closed around my pearl, the tip of his tongue teasing mercilessly. I no longer held his hair, my hand floated around his head, my legs failing. A wave a pleasure forced its way through my body and escaped as a drawn-out moan. I was falling into him as the next wave washed over me, electric tingles emanating from my core and spreading across my skin. My hips were driving my sex forward, Timothy was forcing me upright. A third wave slammed into me; a tidal wave of bliss that distorted my sight. I was falling, no longer able to hold myself upright. Timothy was my pillow, catching me gently, wrapping me in his arms. \n\nTimothy held me while my rubbery muscles regained their usefulness. My breath slowly returned to normal as a I snuggled into my warm pillow of a man. My greed sated, I let my hand slowly wander south. His jeans were soft and thin from many years of washing. I lifted up and tucked my hand under, toward his crotch. My intent was to encourage him, bring him to complete arousal. I was thwarted by finding his manhood straining, attempting to burst through the seams. To him, it had all been foreplay. My previous experiences were worthless when dealing with him. Most had considered my pleasure a necessary duty. I crawled forward, my uncontrollable smile became even with his. \n\n\"You want me!\" I said stupidly. It was obvious and I wallowed in it. It seemed so important to tell the world. \n\n\"More than anything,\" Timothy agreed. I continued to rub his erection, while my eyes searched his. I found the lust I was searching for, the animal need I had just experienced. It was so incredibly wonderful. I was a sex goddess for the first time in my life, and the man still had his pants on. It was worth every red mark, every condemnation of my work. I loved the power. It excited every particle of my soul. I rose, turned and sat on his stomach with my butt facing him. A trail of moisture followed my sex, coating his skin with an oily sheen. I had never been so wet. \n\nI quickly undid Timothy's belt buckle and struggled to get it off its loops. The top button was stubborn, but not as much as I. I lowered the zipper and began tugging his pants down, anxious to see what I had been caressing. He raised his hips without prompting, as I pushed his pants and boxers to his knees in one quick effort. His erection sprang forth, pointing directly at me. So proud. So very excited. I folded my hand around it. Timothy jerked and followed that with a strange guttural sound. He was extremely sensitive. I twisted my head back, one hand around his penis, the other stroking the side of his face.\n\n\"It's mine,\" I said. \n\n\"Yes,\" he responded, and his unbidden twitching agreed. I almost just rose up and sat on it. Then I thought it would be more pleasurable to watch his face; to see the moment when he lost all control. I was giddy with the thrill of it all.\n\n\"Stay still,\" I ordered. The control was intoxicating. His body wanted so much to move, to just take me. It was my will that kept him immobile. I moved to his side on my hands and knees. I lowered my mouth and engulfed his erection. His legs trembled while still tangled in his pants. I moved my legs, slowly circling my body to straddle his legs. My tongue was working hard to moisten his shaft, to tease him as mercilessly as he had teased me. I sat back on his thighs when I finally arrived, my hand replacing my mouth as I rose. \n\n\"When I put you inside me,\" I said as I stroked Timothy softly, \"I want you to just let it go. Don't you dare hold back.\" He nodded in between weak grunts. I wanted to see him in the throes of orgasm. It was important that it was his and his alone. I had mine and I intended to have more. I lifted my hips, bringing them above his cock. His face contorted as I dragged the crown along my opening, prolonging with teasing agony. When I saw the first signs of his torture, I guided him into me. Not all at once, but a slow entry replete with my own moans. My hand left his shaft, when it could shrink no smaller. I lowered my pelvis and shifted my hips until he was fully in. It was heaven looking down at Timothy, my red circles littering his torso. He looking up at me, begging me with his eyes, to move. I did. Slowly at first, feeling every inch of him heat my insides, pushing me open in a most pleasing way. \n\nTwice, Timothy tried to rise. Twice he tried to reach out. Twice I forced him back, relishing the smile on his face as he struggled for more contact. I would give him that in time. This time, his orgasm would be my gift. I moved with more purpose, my hips rising and falling with an increasing rhythm followed by a wonderful grind on the down stroke. He began to breath in concert with my efforts, his face flushing with every grind. His hips moving of their own volition. I had him. God, he was beautiful. \n\nI reached behind me, between Timothy's legs and lightly tickled his scrotum. His tangled legs forced his hips upward; a growl, deep and guttural, met my ears. His face warped into a mix of pleasure and pain. I ground into him, our pelvises merging into one, as bliss took over his body. His spasms were intense, lifting me higher than I thought possible. My womb flooded with hot seed as I watched his face wonderfully reflect the pleasure I had given. I leaned forward as it subsided, still fully impaled and snuggled into my pillow. His breathing slowly returned to normal while I held him. \n\n\"No more clothes for you,\" I said softly, \"I want you naked for the rest of the day.\" Timothy chuckled with difficulty, still regaining his strength. \n\n\"I will happily comply,\" Timothy replied. I tilted my head up from his shoulder to see his face. I was comfortable and had no immediate desire to rise or uncouple.\n\n\"How did you know what I wanted?\" I asked, holding him in place on the carpeting.\n\n\"I didn't really,\" Timothy answered, \"it just happened. That day you were fired, when you told me off and jabbed your finger in my chest. It had a profound effect. I found you irresistibly desirable. I wanted you...like that.\" \n\n\"I love this,\" I admitted, \"I don't want it to ever stop. I just don't understand why you like it.\"\n\n\"Strangely,\" Timothy continued, \"I think too much. I over-think everything. It's exhausting. Here with you, you do the thinking. I can just ignore everything but you. It's wonderfully liberating. And you're so damn sexy doing it.\" His words were like my favorite music. Soothing, encouraging and so very comfortable. \n\nI sat up, still joined with Timothy. I picked up the red marker off the carpet, from where it had landed when my orgasm hit. I popped off the cap and drew a small smiley face on his stomach. It was obviously a very ticklish area. \n\n\"You trust me,\" I observed as I recapped the marker. \n\n\"Of course.\" His hands roamed across my thighs and hips. I could tell he enjoyed being inside me as much as I liked him there. \"I suspect that's a requirement.\" He said and paused for a moment, looking seriously at me. \"I love this as well, I don't want it to stop either.\" No one was in charge of the kissing that followed. For a brief moment, we were on neutral ground, trust flowing both ways.\n\nI stood up, leaving our shared fluids in my wake. \"Come,\" I ordered, \"you've made me sweaty. Now you'll have to bathe me.\" I loved his smile. Obviously he didn't think it would be a laborious task. I was thinking how nice it will be to have him wash my hair. I tried not to laugh when he got tangled in his pants trying to stand up. \n\nThe weekend was glorious. I knew I would have to slow things down in time. The pace I had set would burn us out in time. It had been so long since I had fallen asleep satisfied. Satisfied and in the arms of another. Someone willing to fly to Florida and punch out an asshole who called me a bitch. \n\nI lost all my power in bed that Saturday night. Willingly. Timothy wrapped his arms around me as I tucked my head into his shoulder. His penis, still half engorged, resting along my thigh. I needed no protection, but I folded myself into the security he offered. I was changing him. He was changing me. I slept more deeply than I thought possible. Timothy returned my power in the morning. \n\nMonday morning was our breather. I beat Griffin to work, cleaned up his calendar and prepared the documents he would need for his morning meeting with the partners. I straightened the office, aligning papers, shifting trash cans and generally making sure everything was in perfect order. Mr. Griffin demanded as much.\n\nGriffin entered as gruff as ever. He grunted at my good-morning, passing my desk without a look. \"Reschedule my one o'clock Tuesday for next week,\" Griffin called out as he entered his office. I smiled at his act, remembering him naked in the tub with his hands full of shampoo and hair, making me feel so good. I dialed Mrs. Pritchard.\n\n\"How was your weekend?\" Mrs. Pritchard asked. She knew why I had called and didn't seem to mind at all. She picked up our previous conversation without slowing.\n\n\"Truthfully,\" I replied quietly, not wanting the rest of the office to hear, \"it was wonderful.\" \n\n\"Oh, I am so happy for you, dear,\" Mrs. Pritchard continued. \"Do you think he might be the one?\" The question came quickly. I could hear her strong desire for my answer. I hadn't realized I had bonded so deeply with her. I analyzed the question, thinking of the weekend and falling asleep in Timothy's arms. His trust and the way he gave me everything even though he could ruin me with barely a thought. I closed my eyes and tried to imagine things going back to the way they were. It was an ugly thought. I wanted every weekend to be a Timothy weekend. I smiled when I remembered him on the floor with his legs twisted in his pants. Me giving him pleasure he could find no where else. We fit so well together. ",
        "\"Dear?\" Mrs. Pritchard prompted. My silence had been too long. I shielded the mouthpiece with my hand, desperate that no one would hear.\n\n\"Yes,\" I whispered. The truth of it amazed to me.\n\n\"How exciting,\" Mrs. Pritchard sighed, \"have you told him yet?\" I told him many things, but I hadn't told him that. I just figured it out myself. I could also be wrong. \n\n\"No, it's too soon,\" I whispered. \n\n\"How old are you, Victoria?\" Mrs. Pritchard asked. I didn't want to say. I was going to be thirty next month. Encroaching on old maid status. I was content with that, until I met Timothy. Luckily, she accepted my silence. \n\n\"You must have enough experience to know when it's right,\" Mrs. Pritchard continued, \"you don't sound like a woman who lets others' rules decide for her.\" She was very pushy, though her logic was sound. The veiled compliment didn't hurt either.\n\n\"It's right,\" I said, then added, \"but I need more time.\" There was too much to think about. To bare my soul to Timothy before he's ready to hear it was too risky. I didn't want to lose what I had. \n\n\"You would know best,\" Mrs. Pritchard slowed, \"just remember, the world is imperfect, don't waste your life waiting for perfection.\" My bath was perfect. Many parts of the my weekend were perfect. Maybe I shouldn't rock the boat. \n\n\"I'll keep that in mind, Mrs. Pritchard.\" I know I sounded like I was brushing her off. I was. I didn't mind the conversation, but she was trying to hurry my life choices.\n\n\"I guess my age is showing,\" Mrs. Pritchard laughed, \"I have the wisdom of many misgivings. You just make sure you're happy. Okay?\" \n\n\"Of course,\" I answered, more comfortable with her tone. \n\n\"You'll call me next week?\" Mrs. Pritchard asked, her voice hesitant. Maybe she thought she pushed too hard. \n\n\"Like clockwork,\" I answered lightly. This game of canceling appointments seemed important to her. Except for today's brief exchange, I enjoyed it as well. \n\n\"I promise to keep my advice to myself,\" Mrs. Pritchard added. I smiled into the phone. She really liked our talks. In fact, I began to think I was the reason her substantial accounts stayed with Griffin. \n\n\"I wouldn't miss it,\" I said. I paused for a moment, then added, \"And I'll think about what you said.\"\n\n\"I'll look forward to next week,\" Mrs. Pritchard said happily. The call ended with us as friends. Just a minor tiff. I felt a little guilty playing the friend behind the guise of appointment shuffling. I liked her. I promised myself I would see about a personal meeting with her. A sit down where we could share some tea and talk face to face. Maybe I could hand deliver her monthly statement.\n\nMy email beeped. A list of Griffin to-dos appeared, enough to keep me busy all week. The deadlines were ridiculous. Possibly revenge for all the red circles on his chest. I held back my laugh, remembering the bath. The marker was more permanent than I had envisioned. The wonderful tortured-boy look on his face when it wouldn't wash off. He would have to walk around imperfect for a while, waiting for nature and time to do its thing. \n\nI tackled the first task on the list. I had to collect information on four companies Griffin was considering for investing clients' money. He wanted everything, plus a synopsis of the analysis and overlaid comparison charts. Some of it, like the charts, could be computer-generated. The verbiage had to be mine. I knew how he liked it done. Organized, with no single idea broken by a page break. He would spread it across his desk, charts and facts always starting in the upper left and the more subjective material trailing to the bottom right. He would just stand above it all, absorb, analyze and make a decision. \n\nGriffin was two hours into the partner meeting when I finally completed assembling the analysis. I received that wonderful feeling of completion, crossing off the first item on the list. I sighed at the length of the list before I moved to number two. \n\n\"Ms. Paddington?\" a male voice asked. I looked up from my work, my eyes filling with flowers. Pink and red carnations, spotted with pink roses all sitting above a bed of white daisies. I could barely see the delivery man behind them. I almost cried. No one had given me flowers in years. I nodded my head, not trusting my voice, and cleared off the corner of my desk. Curious heads popped up from their own work to watch the delivery. \n\nI thanked the delivery man while trying desperately to bring work decorum back to my smile. The smell filled my space, transporting my nose straight to spring, bypassing the coming winter altogether. I snatched the attached card quickly when I saw Susan approaching. \n\n\"Who's in love with you?\" Susan whispered, wearing a silly grin. Timothy had taken a risk. Then again, the rules didn't apply to us. \n\n\"Lunch?\" I said, stalling for time. \n\n\"Lunch and details,\" Susan responded. I agreed, it gave me a good thirty minutes to come up with a story. I opened the note. It contained only the letter 'T.' I smiled at my bold rule breaker, too chicken to sign his name. The flowers were lovely. I wanted Saturday to hurry up. \n\nI returned to my list of to-dos. I read the next one twice. I wasn't sure the first read was correct. \n\nAnalyze the four companies above, choose the best one for our clients' capital. Submit answer in writing with supporting reasons. \n\nI wasn't an analyst. That's why they tolerated Griffin. He was the best analyst in the firm. The clients weren't 'ours,' they were his. I read the task for the third time. It sounded like a homework assignment for a finance class. I took one, years ago, when I grabbed my associates at Sycamore Junior College. I shrugged my shoulders and cleared off my desk, leaving only my monitor and flowers on top. Like Griffin, I spread the analysis documents across the desk. Facts in the lower right, subjective material toward the top left. I was a rebel. \n\nIt took me until lunch to reach a conclusion. It was not one I think Griffin expected, but it was the one that made sense to me. I collected the papers into a neat pile and reapplied the binder clip. I would have to do the write-up after lunch. Griffin hadn't returned, so I suspected the partners were calling in food. I gathered Susan and headed out for a quick bite. \n\n\"So, who's the flower boy?\" Susan asked as I poured sesame vinaigrette over my spinach salad. Half-truths always worked better than bold-faced lies. \n\n\"A guy I ran into two a couple of weeks ago.\" I tore open a crouton packet and added it to my salad. \"I knew him before, but...he's changed...a lot.\" I was trying not to smile. Changed was such an understatement. \n\n\"Cute?\" \n\n\"Oh yes,\" I replied. He has lost-boy eyes and cute little red circles all over his chest. And a smiley face just above my favorite part. \n\n\"I'm going to need a name,\" Susan prodded. So nosy. Strangely, I enjoyed the attention. \n\n\"Tim,\" I said comfortably. There's no way anyone would connect Tim with Timothy Griffin. It was just too far out there. The man's work persona kept everyone at arm's length. \n\n\"Tall, short, green hair or scars?\" Susan asked jokingly. \n\n\"Tall...well taller than I am,\" I smiled, \"dark hair, cute and thinks only of me.\" I left out the only-on-the-weekends part. \n\n\"Ask him to lunch so I can meet him,\" Susan said, lifting her turkey sandwich and taking a bite. That, of course, would be a problem. I just nodded a weak agreement and changed the subject.\n\n\"How's your Internet romance going?\" I filled my mouth with salad, guaranteeing it was her turn to speak. \n\n\"We traded pictures,\" Susan replied. I noticed a little blush. I wondered what kind of pictures. \"He's always sweet, but sometimes pushy. One email I love him and the next I'm not sure.\"\n\n\"Email is a tough way to communicate. You guys talk on the phone yet?\" I asked.\n\n\"Yes,\" Susan was shaking her head, \"he has a nice voice, though I could tell he was nervous. Hell, I was shaking the whole time.\" I smiled in support. \n\n\"That's a good thing. I would be worried if you both weren't nervous.\" I took a sip of my iced tea. \"Are you planning to meet him soon?\"\n\n\"It's the next step,\" Susan shrugged, \"but neither of us has brought it up yet.\" \n\n\"Slow is better,\" I nodded. We finished our lunch with useless gossip about the office. I felt that I successfully dodged Susan's curiosity. I wasn't sure how long Timothy and I could remain private. Griffin did have a way of making it seem an impossibility to most observers. \n\nI returned to the office and wrote up my analysis of the four companies, attached it to the top of the charts and other documents. I put it on the corner of his desk and received a grunt in reply. I returned to my desk and started on the next task. \n\nAround three, I texted Kendra. I needed her fashion sense. I had always ignored it in the past, but this time I needed her vamp eyes. It took a few texts before she understood. She would meet me at Sinful Angels, a downtown boutique, after work. It brought a smile to my work. I wanted to see Timothy shaking with desire this weekend. \n\n\"In my office,\" Griffin demanded, pulling me from the task at hand. I grabbed a pen and pad and headed in. \"Close the door.\" I did and sat in the leather chair with a silly grin. He was beginning to look like Timothy all the time. I saw right through Griffin now. His coarseness flowed right past me and dissipated in a mist. I controlled all that was left. \n\n\"I asked you to choose a company,\" Griffin said, pointing at my analysis. He didn't ask. Griffin never asked. \n\n\"No, you wanted my opinion on where to put our client's capital,\" I corrected. I had to get rid of the grin. All I saw was my hand in his hair, forcing him down. It was tough being this close. I was addicted.\n\n\"So you chose none of them?\" Griffin pointed out.\n\n\"If you would have asked which one would lose our clients the least,\" I replied, \"you would have gotten a different answer.\" I was cocky. This was Griffin's day, not mine. I really wanted it to be mine. I had visions of Timothy laid across the desk. The pending visit to the boutique had really gotten me going. \n\n\"What's wrong with Tiberian Metals?\" Griffin asked. I thought that was the one he expected me to pick. This whole thing felt like a test and I probably failed.\n\n\"The price is too high,\" I replied, \"it's based on last period results which were an anomaly. They sold off two mines for short-term cash, thus the upswing. This quarter's results will be greatly diminished, and I expect the stock to slide. With the current glut in the metal markets, it will be quite some time before the price recovers.\" Griffin smiled. Not Timothy, but Griffin. It took me by surprise. \n\n\"Back to work,\" Griffin said, waving me away. I rose, fueled by the smile. The door was closed, so I made sure my hips moved as I returned to it. I heard Timothy's intake of breath. I ignored it as I opened the door and continued, more business-like, to my desk.\n\n~~~~~~~~~~\n\n\"Does this have to do with your boss?\" Kendra asked as we walked along the lingerie aisles. \n\n\"You've been talking with Sandra,\" I guessed. \n\n\"You know it will never work out, right?\" Kendra pointed out. I just smiled. The rules didn't apply to us. \"Okay, what's the look you're going for?\" she conceded.\n\n\"Sexy, of course, and,\" I blushed, \"in charge.\" This time Kendra smiled. \n\n\"Victoria the Dom?\" Kendra whispered. Her eyes were alive with incredulity. \n\n\"Don't tell Sandra,\" I requested, hopelessly. \n\n\"Like whips and stuff?\" \n\n\"No,\" I answered quickly, \"he does what I say. That's all.\" I couldn't imagine hurting Timothy. The red pen was far enough. And the hair, I really liked grabbing his hair. \n\n\"Blindfolds?\" Kendra continued. \n\n\"No... but that sounds nice.\" I said, thinking out loud. The things I could do with him blindfolded. It would be another degree hotter. I was getting excited just thinking about it. Kendra laughed. \"Just help me find something,\" I pleaded, trying to get the blood to drain from my face. \n\nKendra was an expert in bedroom wear. She quickly eliminated a lot of the styles that required bigger boobs. Others for color and some for over-the-top slutty. We settled on a solid black leather corset with a lace-up back. It had a hidden side zipper that allowed for easy removal. I found some low-cut, black-lace panties and matching thigh-high stockings. Kendra wanted me to add high heels. I decided the stockings were enough. The heels would just get in the way, and make me less confident. Control would be awkward if I was teetering on stilettos. \n\nKendra met me at the register after splitting off for a few minutes. I assumed she was shopping for herself. Instead, she placed a long, soft white silk scarf on top of my pile. Her smile was scandalous. I loved it. \n\nIt was a brutally long week. I spent all five days wishing for Saturday to hurry up and arrive. Griffin kept piling on the work; things I had never done before, along with my normal tasks. At least the work helped in keeping my mind off the coming weekend. \n\n~~~~~~~~~~\n\nI was hot, smoking hot. I looked at the image in the mirror, amazed at my transformation. The corset pushed what little I had into taut handful-sized bulges with cleavage and sucked in my waist. The skimpy panties barely covered me, and the lace tantalized my butt. The thigh-high stockings made my legs look longer. I had 'sexy bitch' going on. My stupid smile was the only thing interfering with the look. I was so pleased with myself, I couldn't get my lips to form a serious scowl. \n\nThe doorbell rang promptly at eight. I was sure he waited outside the door, staring at his watch, waiting for the second hand to cross the twelve. I opened the door, hiding my body behind it. Timothy was in jeans and a really ugly green sweater. It looked like something an old aunt would give you on Christmas. He stepped in boldly. \n\n\"Good morning, Mrs. Padd...\" His words caught in his throat as I closed the door. I saw lust fill his eyes as he took in my new look. An exciting warmth grew from my toes and pleasantly filled my body. I merely pointed at the ground, and Timothy dropped to his knees. I stepped forward, his eyes moving back up to mine. I combed my hand into the hair on the back of his head, gripping tightly. I loved life at that moment.\n\n\"You were awfully hard on your assistant this week,\" I taunted. My damn smile was ruining the effect. I felt him quiver and something, almost a moan, escaped his lips as he responded. My strong, lovely man was a quivering bowl a jelly in my hands. Such pleasure.\n\n\"You...you're stunning,\" Timothy stuttered. It was the first time I had ever heard him slaughter a sentence. My breathing quickened. My role-play shattered. Our lips connected, powerful magnets refusing to break away. I fell forward, forcing him to the floor; tugging at his ugly sweater, trying to get it off his body. He rolled on top of me, lifting the sweater over his head and letting it fly past our heads. The Ohio State t-shirt followed. I no longer cared who was in charge. \n\nTimothy scooted back between my legs, staring at me while he undid his belt. I struggled to help him, nothing was moving fast enough. He crawled out of his pants, his erection stiffly fighting the effort. His hand moved quickly to my panties. I raised my butt and they were gone. I reached up to unzip the corset. \n\n\"Leave it!\" Griffin ordered. Oh shit, Griffin was going to take me. I shifted my hips, pointing myself at him. I let go of everything, willingly. \n\n\"I am yours,\" I pleaded. I just wanted him. I didn't care how. \n\nGriffin guided himself into me. A single determined, yet not angry, thrust. I exhaled in a verbally dull thump as he filled me. I wrapped my arms and legs around him, pulling him deeper. He moved strongly, ignoring my death grasp, in and out of me in the most forceful manner. My insides were tingling, my breath gasping at each thrust. My stomach was curling as my orgasm neared sooner than I expected. It had crept steadily, climbing higher without pause. My fingers gripped his back, nails digging in as my muscles tightened. \n\nMy insides let loose. All my muscles strained to ride the waves Griffin shot through me. Every nerve responded as I yelled. I was off the ground, latched to him, shaking as I felt him stiffen. His growl joined my wail. Warmth flooded, muscles failed, faces strained. He collapsed us slowly to the ground. Little wondrous tremors toured my body as everything slowed. Griffin, panting, moved his weight to his elbows and kissed me. A wonderful, languishing kiss. A lovers' kiss. When he parted from my lips I saw it in his eyes. My Timothy loved me. \n\nSomehow, Timothy rolled over, pulling my marshmallow bones over his. I smiled weakly from above. He reached up and pushed my sweaty hair behind my ear. \n\n\"I'm sorry,\" Timothy said softly, \"I ruined your day.\" I nuzzled into his shoulder, not wanting to use any strength to hold up my neck. \n\n\"I would like it ruined more often,\" I responded. I could feel his smile form. His arms enveloped me, gluing us together. I could hear his heart slowing as did his breathing. I closed my eyes wondering if heaven was equivalent. \"You liked my outfit,\" I whispered.\n\n\"Oh yes,\" he whispered, his hands tenderly moving along my back, finding skin around my corset. \"I love the woman in it as well.\" A horribly perfect time to tell me. The emotion was too strong and tears filled my eyes. If he would have waited another moment or two, I could have formed a wonderful response. Instead I half cried, half blubbered a 'me-too' which made little sense as a reply. Luckily, he understood. Lips said it better anyway. \n\nTimothy returned the day to me. Not that I minded losing it, but it was enjoyable to have it back. Being spoiled by him was sheer pleasure. Spoiling me at my command, even better. I sat in the tub, his cocked legs a makeshift chair back, leaning my head listlessly back as he washed my hair for the second time. I loved how his fingers massaged their way into my scalp mixing with the warm water he kept lifting up. I wondered how long this man had been hiding in Griffin's interior. \n\n\"Why did you push me so hard this week?\" I asked lazily. It wasn't an admonishment, merely a question. Griffin did little that didn't have a purpose. \n\n\"Just testing,\" Timothy responded, \"did you know that the other partners thought Tiberian Metals was an excellent investment?\"\n\n\"So, I was wrong,\" I admitted. Didn't matter, I wasn't a analyst anyway. \n\n\"You're the only one who got it right,\" Timothy admitted, chuckling to himself, \"those guys regurgitate the S&P 500 sheets and ignore logic. Investments are about the future, not the past. You see that intuitively.\" \n\n\"Timothy Griffin, are you complimenting me?\" I smiled. \n\n\"Yes,\" Timothy continued, \"you are the sexiest, smartest woman I know.\" \n\nSex in a tub full of water is more difficult than you would imagine. There is a lot of slipping, shampoo in the eyes, smushed limbs and lots of laughter. I took Timothy there. I wasn't sure if it was because I was the sexiest or because I was the smartest. I think it was because I could. He was mine and looked so damned hot with those faded red circles all over his chest.\n\nThe problems with weekends is the word 'ends.' Monday came around before I was ready. We would really have to leave the house one of these weekends. Break up the time more, make it last longer in our heads. We had an unspoken agreement to not broadcast our office affair, but we needed some public 'us time.' I promised myself I would broach the subject next weekend. Mr. Rules-don't-apply would agree out of stubbornness. And because I asked. \n\nI was surprised to see Griffin enter the office a few minutes late. He was never late. Each of the secretaries he passed gave him the prerequisite 'good morning.' Instead of ignoring them, he nodded. There were more than a few open mouths by the time he came up to my desk. ",
        "\"Good morning, Mr. Griffin,\" I said as pleasantly as I could. He smiled. I blushed. It was the same smile he wore when his head lifted from between my thighs Sunday afternoon.\n\n\"Good morning, Ms. Paddington,\" he said nicely. His smile disappeared as he entered his office. Everyone was staring. I dropped my eyes and pretended to work. I couldn't believe he did that. He had no right being pleasant. That damn smile making my Monday last longer. My email dinged.\n\nBest weekend of my life.\n\nLove T\n\nBastard. \n\nMe too.\n\nLove V\n\nHe'd pay for his kindness. I didn't know how, but I would come up with something. Blindfold and tickling, or some other form of grueling torture. I looked up from my desk. There were still eyes on me, with many a gaped mouth. Oh, he'll pay alright. \n\nAround ten my phone rang. I was surprised to hear Mrs. Pritchard on the other end. I was more surprised that Griffin hadn't told me to reschedule. I may have sexed the grumpiness out of him. A shocking thought.\n\n\"Mrs. Pritchard, are you canceling on me?\" I asked with humor in my voice. \n\n\"No,\" Mrs. Pritchard answered abruptly, \"is Timothy available?\" I have never heard anyone but Mr. Corcoran call him Timothy. It sounded so odd. \n\n\"I'm sorry,\" I replied, \"he's in meetings the rest of the morning.\" For once, I wasn't lying to her. \n\n\"Dear, we have problem,\" Mrs. Pritchard continued, \"I received a packet in the mail. It has pictures of you on some float.\" My heart thickened. I didn't want Mrs. Pritchard to think less of me. \"The caption says 'your investments at work.' Your name and position are listed.\"\n\n'Oh, God,\" I cried into the phone. Doug was intent on ruining me. \"I am so sorry, Mrs. Pritchard.\" My eyes, along with my future faded to a blur. Her account was huge - it would ruin Timothy. \"It had nothing to do with Mr. Griffin,\" I begged, \"he didn't know anything about it. I'll resign so you can stay with him.\"\n\n\"Poppycock,\" Mrs. Pritchard blurted out, \"you're not resigning and I am certainly not leaving Timothy for a few topless photos. Very striking by the way, I had you plumper in my head for some reason.\" I have a fat voice. \"The problem is, I suspect I'm not the only one who has received this.\" I closed my eyes. Visions of angry clients calling, the whole office knowing. Why didn't I listen to Sandra that night?\n\n\"I'll...I'll have to resign,\" I stuttered. I wondered if it would hurt my relationship with Timothy. It shouldn't, but the fear of it strengthened. \n\n\"Stop that!\" Mrs. Pritchard demanded, \"tell me what happened. All of it.\" I did. I told her everything about Key West and the asshole Doug. I left out the part of sleeping with my boss. She asked questions and I filled in parts. I could swear she was taking notes. \n\n\"And that's all of it?\" Mrs. Pritchard asked.\n\n\"Yes,\" I said, somewhat relieved to have been able to explain it to her. \n\n\"How was your weekend?\" \n\n\"Wonderful,\" I answered, \"up until your phone call.\"\n\n\"Did you tell him?\" Mrs. Pritchard asked slyly. I could hear her waiting anxiously. Of all the things to worry about and she choose my love life. \n\n\"He told me first,\" I answered, \"then I told him.\"\n\n\"Well I'll be damned,\" Mrs. Pritchard said, completely out of character. I was silent, trying to figure out what that meant. She just switched the topic back. \"Tell Timothy to call me as soon as he's free. And Victoria?\"\n\n\"Yes.\"\n\n\"I am going to take care of this. If Edward demands your resignation, tell him to call me.\" Mrs. Pritchard sounded quite sure of herself. I was not. \n\n\"I don't think it's a good idea\", I said, \"you shouldn't get involved in my problems.\" Mrs. Pritchard laughed. Very disconcerting. Maybe she was senile and I never knew it. \n\n\"Wild horses couldn't drag me away. Head up, girl!\" Mrs. Pritchard said, followed by a disconnect. The woman sounded like she had more strength than I had given her credit for. I wasn't sure what to make of it. At least she had given me warning. \n\nI went to lunch with Susan. Griffin hadn't returned from his meeting, so I assumed it was lunch in for the partners as usual. I left an email, letting him know I needed to talk with him as soon as possible. \n\n\"What's wrong? You're a million miles away,\" Susan asked. \n\n\"I'm in trouble,\" I responded, twirling my spoon in the potato soup I didn't really want, \"Some embarrassing pictures have been sent to our clients.\" There was no point in keeping it secret, she would find out soon enough. I preferred to have someone to talk about it with.\n\n\"Of you?\" Susan asked, her sandwich laid untouched as well. \n\n\"My trip to Key West,\" I nodded, \"I kind of got crazy. Body paint and topless on a parade float.\" My hand circled my breasts as I spoke, like she really needed to know what topless meant. \n\n\"Shit,\" Susan commiserated, \"who sent them?\"\n\n\"Some guy who thought I owed him,\" I sighed, \"I guess he's pissed I didn't sleep with him.\" \n\n\"What an asshole,\" Susan continued her support. I was glad I had at least moral support. \n\n\"Yeah,\" I went on, \"if you find yourself in Key West, steer clear of Doug Fuller.\"\n\n\"Oh God!\" Susan said, covering her mouth with her hand. Her face went white as a sheet. Her hand was shaking. I let go of my spoon and grabbed her arm. \n\n\"What's wrong?\" \n\n\"I did this,\" Susan's eyes were tearing as she spoke. \"No wonder he cut me off.\"\n\n\"Did what?\" \n\n\"My Internet guy,\" Susan replied. I nodded. \"His name was Doug Fuller.\" Her tears were flowing now. Her words were coming out all crunchy and broken. \n\n\"The asshole Doug?\" I added.\n\n\"I'm sorry,\" Susan said. \"He told me he sold yachts. He wanted a mailing list of rich people.\" She dropped her head into her hands. \"I fucked you over trying to get a guy.\" Things snapped into place. Her tears were real remorse. I had no recourse here. \n\n\"Shh,\" I said, as I moved around the table and hugged her. \"You didn't know. The guy is scum and screwed us both.\" \n\n\"Now we'll both be fired,\" Susan cried. \n\n\"No,\" I added strength to my words, \"we'll tell no one about it. I'm screwed either way.\" \n\n\"I so sorry,\" Susan repeated. \n\n\"It's my own fault,\" I said, since it was. \"I got on the float. I was all cocky and let the thrill get the better of me. If not you, he would have just found another way.\" Somehow I felt better. Susan's misery made mine easier to bear. Misery does love company.\n\nWe finished what we could eat. Susan said she was sorry a dozen more times. I assured her I didn't hate her, which she seemed to find impossible. My dislike of Doug increased by many levels. The weasel didn't care who he hurt. His stalker mentality was disturbing. \n\nIt took me twenty minutes to talk Griffin out of flying back down to Florida. He was beyond angry. I had to close the door and kiss him sane. I was sure he would be on trial for murder if he found his way down to Key West. He didn't seem surprised when I told him Mrs. Pritchard wanted him to call. I didn't delve into it, happy that I had calmed him down. No other clients had called, so maybe Mrs. Pritchard was the only one who had received the pictures. \n\nTuesday slaughtered the hope that other clients hadn't received the pictures. Obviously, Doug was a skilled mass mailer. Corcoran went into Griffin's office at ten and again at three. The door was closed, but syllables escaped. Loud ones. Corcoran wouldn't meet my apologetic eyes, so I had no idea how things were going. Griffin kept telling me it was going to be alright. I didn't really believe him. Half the office was giving me strange looks. The word was obviously out. I felt my future sliding away. \n\nWednesday I was called into the office with Corcoran and Griffin. The door closed like a coffin lid. I felt weak and a little nauseous. \n\n\"I need your resignation,\" Corcoran told me. He didn't even explain why. I guess his frequent discussions with Griffin made it moot. I was about to respond.\n\n\"You're not going to get it,\" Griffin jumped in. He stepped forward like he could physically shield me from the demand. \n\n\"It's her call, Timothy,\" Corcoran insisted. \"I'm screwed here either way.\" He looked at me like I was the plague. I was the topless painted plague. \n\n\"She goes, I go with her,\" Griffin said, pounding his hand on his desk. \n\n\"The math doesn't support the threat anymore, Timothy,\" Corcoran spat back. He looked at me, \"Resign or I'll fire you. I can't withstand the loss of clients.\" I stared at him. It had gotten bad. Real bad. My mind was lost in the pain of it all. I stalled. \n\n\"Mrs. Pritchard said you should call her before you fire me,\" I said, finding it sounded silly and desperate as it left my lips.\n\n\"What the hell does your mother have to do with this?\" Corcoran asked Griffin. All the blood left my face. Griffin rolled his eyes and looked at the ceiling. My arms found my hips as I glared at the man who was keeping secrets from me. We were both staring at Griffin with angry eyes. Griffin ignored Corcoran.\n\n\"I was going to tell you,\" Griffin appealed to me. \"It wasn't my idea. It was hers.\" It was easy to hold the frown. My anger was setting in deep. \"She thought I needed help. It's hard to say no to her.\" He threw his hands in the air as I visibly ignored his excuses, \"She's my mother.\" I moved toward him. All those conversations with his mother and she had always known who I was talking about. She tried to push me into his arms. \n\n\"When were you going to tell me?\" I demanded. \"When we were walking down the aisle?\" My anger faded when Griffin's smile formed. \n\n\"You would say yes?\" Griffin asked. He ignored my anger. The trust I felt he had trampled on was shoved aside. My God, he wanted to marry me. Corcoran was looking rapidly between the two of us, half understanding what was going on. \n\n\"That depends on who asked,\" I replied, my employment problems sliding away. \n\n\"I would cherish you,\" Timothy continued. He moved closer, looking unsure of my state. \"From now until forever.\"\n\n\"Are there any rules you two won't break?\" Corcoran growled. He had connected the dots. \n\n\"No!\" we answered in unison. Rules didn't apply to us. It brought a smile to my face. I could deal with a pushy mother-in-law. Timothy and I were in sync. Nothing was worth tossing that away. \n\n\"I would say yes,\" I answered Timothy's previous question. I moved closer, my hand finding his. I struggled not to jump into his arms with Corcoran standing there. Timothy's eyes filled with me. He was mine. God help me, I was his. Corcoran actually smiled. \n\n\"End of the week,\" Corcoran said, \"I can stall until then.\" He was shaking his head in disbelief as he exited the office. When the door closed, I attacked Timothy. He counterattacked. I broke off and locked the door. Might as well break all the rules. \n\n~~~~~~~~~~\n\nOn Thursday, Corcoran caught me alone. I followed him to a conference room and we sat across from each other. He seemed anxious. Probably worried Griffin would show up, and screw up what he wanted to say. \n\n\"I don't have any good choices here,\" Corcoran began, \"I've got clients thinking there should be an investigation. I spent half my morning explaining that we didn't endorse or fund your...parade. The whole incident makes us look frivolous. People don't trust frivolous brokerage firms.\"\n\n\"I'm sorry,\" I said poorly. I couldn't take it back so I had to live with it. I knew what was coming and I also knew I would concede. There were no good options, only less bad ones.\n\n\"If I have to fire you tomorrow, I'll lose Timothy,\" Corcoran continued ,\"then everyone suffers. The firm is going to suffer as it is. To lose Timothy, the storm becomes a hurricane.\" I nodded looking down at the table. I was the only one who could end this without damaging everything. \n\n\"I'll resign,\" I conceded. My eyes swelled up. It hurt badly. I even knew it was coming. \"And I'll talk with Timothy.\" He would stay for me. If you pull the emotion out of it, it was the only option. \n\n\"I am truly sorry,\" Corcoran said. He eyes told me he meant it. \n\n\"I'll give you my letter tomorrow, after I talk with him,\" I added. \n\n\"If it's any consolation,\" Corcoran said, patting the back of my hand, \"I have the IT department looking into how our client list got out. When I find out who did it, I'll prosecute.\" I closed my eyes and took a deep breath. Susan in prison would make an awful situation worse. Doug would fully win. \n\n\"Please stop looking,\" I asked. My watery eyes met his. He had a confused expression on his face. \n\n\"You know who did this?\" Corcoran asked.\n\n\"It was unintentional,\" I pleaded, \"just one favor, please. Stop looking.\" Corcoran looked at me with a deep concern. I think he saw himself as a father and I, the daughter who just admitted she was pregnant. He stood.\n\n\"One favor,\" Corcoran said, nodding his head, \"you tell whoever screwed you over, that they owe you big. If it happens again, I'll ruin them.\" His voice was firm. He exited the room without looking back. He didn't like the idea of a traitor in his company. I dropped my head to the conference table. I won a small battle, but lost the war. I didn't relish my coming talk with Timothy. He would be adamant that we leave together and punish EL Corcoran. I would have to be firm, for real. \n\nI didn't sleep a second that night. I wrote and rewrote my resignation. The first was a two-page dissertation on how I felt about the whole situation. Totally inappropriate. The second was filled with anger. It found the delete key as well. After five tries, I settled on a single sentence with the effective date and my claim I was resigning. No reason and no emotion. I signed it and spent the rest of the night lying in bed. I didn't want to fight with Timothy the next day. It would be a small fight, one that I would eventually win. I just didn't want it to damage us. I had lost so much, I certainly didn't want to lose the grand prize. He was the only thing that made this suffering bearable. The only one who could make the memory dim and replace it with good ones. \n\nI was an hour late to work. On purpose. I almost didn't go in at all. I had to walk past everyone like I was heading to the gallows. It wasn't a pleasant thought. It took me awhile to get my emotions in check. I wouldn't suit to do it with tears. I gathered my strength, my one sentence resignation and entered EL Corcoran. I tried not to meet any eyes. I wanted in and out without becoming an emotional mess. Strength, forged with a little anger at my situation, carried me past the secretarial pool. \n\nI saw smiles at the edges of my vision. They all knew now and thought it funny. I raised my head higher, the topless snob. I snaked through the desks quickly, heading to my undesired talk with Griffin. Everyone was smiling at me. I must be the butt of the company joke. It would only be for a short time. A short talk, drop off the letter and leave to never return. I could do that and still hold on to my pride. \n\nThere was an older woman sitting on the end of my desk as I approached. Her back was starch straight, her graying hair still, as if molded in place. She looked somewhat strange, yet powerful. Pants instead of the expected dress, end of the desk instead of a chair. Our eyes met and she stood with a smile. I have seen the masculine version of that smile. Mrs. Pritchard. \n\nI approached slowly, Mrs. Pritchard wasn't in my morning calculations. Her eyes were so alive as I neared, both hands held out, wanting to join with mine. \"Victoria,\" she said my name with a warming happiness. \"I have so wanted to meet you.\" Great, she could watch me resign. \n\n\"Mrs. Pritchard...\" I said. \n\n\"Catherine, please,\" she corrected. Her hand found my empty one and drew me close. I stood like a statue as she leaned forward and kissed my cheek. There was nothing old about her movements. \n\n\"This is not really a good day,\" I finished, trying to put off the inevitable discussion between the two of us. \n\n\"Nonsense,\" Catherine smiled, \"this is a wonderful day.\" I took a deep breath, and decided to ignore her optimism. I had to get this over with. \n\n\"Where is Timothy?\" I asked, seeing his office empty. This was going to take longer than I thought. I needed this to end quickly.\n\n\"Talking with Edward,\" Catherine answered, \"probably trying to figure out which office will be yours.\" Her smile grew as she waved off my question, \"I'm more interested in you and my son.\" She pulled me gracefully toward Timothy's office. I stopped in my tracks.\n\n\"I have to resign right now,\" I told Catherine, \"we can talk later. I need to speak with Timothy first.\"\n\n\"Oh, I don't think Edward is going to accept your resignation,\" Catherine responded, \"you haven't seen this morning's Journal.\" I shook my head, staring at her with wonder. She was either insane or I picked the wrong day to be late. Her smile leaned toward the insane side. She took pity on me, \"I told you I would take care of it.\"\n\n\"What...I'm confused,\" I admitted. Catherine reached behind me, lifting this morning's Journal and turned to the Special Interest section. A picture of five women, chests painted like mine, beautiful eyes that I suspected matched their own. Next to them was a smiling Carlos. \n\nMy Eyes are Down Here\n\nIn a humorous protest on the objectification of women, renowned body artist Carlos Hernandez, transferred the eyes of his models to their chests. One of his models, the Oscar-winning actress Beth Hawkins, stated \"It's about time men talked to my eyes.\" The protest was the brainchild of Victoria Paddington, an account executive for EL Corcoran Brokerage. Ms. Paddington boldly made her statement during the Fantasy Fest Parade in October. Mr. Hernandez stated that it was some of his finest work. He is scheduled to continue the...\n\nThe article continued with endorsements from prominent women. A list of places where Carlos was traveling to. Promises of a continued movement. I was now longer standing alone on the float. \n\n\"You did this?\" I asked, \"for me.\"\n\n\"Oh no, Dear,\" Catherine smiled, \"I did this for me. The mere possibility of grandchildren will make me move mountains.\" \n\n\"I'm not an account executive,\" I said, looking back at the article. \n\n\"My fault,\" Catherine continued humorously, \"I got your title mixed up. I'll let Edward fix it.\" \n\n\"This changes things?\" \n\n\"My Dear, this changes everything,\" Catherine said. I followed her into Timothy's office. The whole thing had stunned me. I moved like a zombie, walking and rereading the article. \"Beth Hawkins can say picking your nose is hip. The next day, all the money in the world would have their fingers in their noses. It's all how you spin it.\" \n\n\"Why?\"\n\n\"He loves you, Dear,\" Catherine sat down, indicating a seat for me. \"You love him. You're stuck with me now. I'm not much for sitting around when there is a war on.\" I sat down, wondering where all this was going. I wasn't used to this type of help. \n\n\"I don't know what to say,\" I said, looking up at her happy eyes. She was extremely pleased with herself. I was pleased with her. \"Thank you.\"\n\n\"Well, you're welcome,\" Catherine said honestly. \"So tell me, how did you get crabby pants to be pleasant?\" I laughed. Only his mother could call Griffin that. \n\n\"I'm not sure,\" I replied, \"I was almost fired for this a month ago.\" I held up the paper. \"Timothy told Mr. Corcoran that If I go, he goes.\" I laughed again at the memory. \"I had just finished telling him off and he went to bat for me.\" \n\n\"That's because you scared the hell of him,\" Catherine explained. \"He was smitten about a month after you started working for him.\" She shook her head slowly, \"He always overthinks things. For some reason, my boy needs a road map for everything.\" We shared a smile. \"I'm sorry we played that scheduling game with you, but I feared he would screw it up. I was trying to be your sounding board.\" \n\n\"He talked about me?\" I said. I liked the idea. I had had a secret admirer.",
        "\"Obliquely,\" Catherine answered sweetly, \"in the only way Timothy can. I am still shocked he told you he loved you first.\" I blushed, remembering my corset and the way he had taken me. I could see a spark of understanding in her eyes. It seemed to please her.\n\n\"You're late.\" I turned to the door to see Timothy with a huge smile. He looked rather pleased with himself as well. I no longer cared about the rules at all. I leaped from the chair and into his arms, my lips finding a home in his. \n\n\"I really like your mother,\" I told Timothy as I turned to Catherine. She seemed very pleased to see me in his arms. \n\n\"She's a busybody,\" Timothy joked. I smacked his arm. He winked at his mother, then loosened his grip on me.\"You've been promoted.\" \n\n\"It seems I am hard to get rid of,\" I said, more surprised than anyone else. \n\n\"Edward will give you the details, but in a nutshell,\" Timothy continued, \"yesterday's sin is today's marketing plan. A lot of wealthy women have been calling - they are asking for you.\" \n\n\"Me?\" Timothy nodded at my word. \n\n\"We need to get you certified. In the meantime, you and I will manage your accounts together,\" Timothy said proudly. \n\n\"So you men just sat around and planned my future,\" I said with a faux scowl. \n\n\"You could always resign and give Edward a heart attack,\" Timothy joked, seeing right through my feint. I hugged him again. I was such a rebel rule breaker.\n\n\"No,\" I said, \"I think I will stick around.\"\n\n\"Good,\" Corcoran interrupted as he entered the office, \"you have numerous calls set up for next week.\" I was being handled. Considering how my day started out, I was going to let it go. \"Timothy assures me you can handle it. You are going to need an assistant.\"\n\n\"Susan Duncan,\" I replied instantly. The thought of Doug's manipulations failing completely filled me with joy. A promotion for both of us would feel like a strong victory. Corcoran nodded his head. He was pretty agreeable when it came to dollar signs. \n\n\"Good morning, Edward,\" Catherine said with a little bit of pride. I could see something pass between the two of them in their expressions. \n\n\"You were right,\" Corcoran surrendered, \"I was wrong.\" Obviously, they had discussed this a few days ago. \n\n\"Thank you, Edward,\" Catherine said, smiling at me. She enjoyed this little war. I would hate to be on her bad side. \n\n\"You have a meeting this afternoon with HR,\" Corcoran told me. He paused for a moment then lowered his voice, \"and my apologies for the unemployment roller coaster.\" At least he looked at me as he said. It was hard for him. \n\n\"I understood, Mr. Corcoran.\" I let him off the hook. Not that I could blame him for it in the first place. He gave me a smile and continued with my coming events, which were numerous. I listened, taking mental notes. It would be the last day I was late for work. \n\nCatherine took me out to lunch, insisting that Timothy was not invited. I could see a little harmless jealousy in his eyes, which Catherine and I shared a smile over. We got to know each other over chicken salad. I learned a lot about Timothy growing up. Little embarrassing tales I could dredge up in the future, when the timing was right. I gave her a quick synopsis of my life to date. It wasn't nearly as exciting as Catherine's. She had been everywhere, knew everyone and didn't seem to be slowing down. The connections she had developed over her life allowed her to change my mindless exposure into a meaningful protest. Such confidence, such power. I admired her. I wanted her son more.\n\nThat Saturday, I finally blindfolded my desire. Naked on the bed, with strict instructions not to move, I tortured Timothy with love. I could feel the pent up energy as he struggled to remain still as my lips and hands explored. I caressed and kissed every inch of his skin, voicing my desire in delicious moans that made his erection twitch. I loved the power, the strength given and accepted. \n\nAll lovely things in life come with interruptions. The doorbell rang and Timothy groaned. I had wound us both up pretty well. I took a deep breath when the bell rang again with rude insistence. I sighed, lifted the blindfold and kissed him. \"Be right back,\" I said, smiling while I grabbed my robe. \n\n\"Ignore it,\" Timothy pleaded. I could see his dismay. He was enjoying our new game as much as I was. \n\n\"It will just take a moment,\" I replied. I held backup keys for a couple of my neighbors. For all I knew, one of their kids was locked out. I couldn't not answer. Timothy gave me a childish little grunt of dismay. I would make up for it. \"Stay,\" I ordered. He smiled and leaned back into the pillows. He looked so good naked on my bed. I wrapped the robe tightly around me and headed to the door. \n\nThe latch clicked as I turned the handle. The door exploded into my face, knocking me back, my nose screaming, eyes erupting in bright light. I stuttered a scream as Doug rushed me. Somehow, he ended up behind me, his arm across my throat pulling me back. I struggled and clawed at him with no effect. I felt my throat collapsing. A brief moment of clarity brought my heel down hard on his instep. My bare foot was useless against his boots. I went for his eyes as my vision began to fade and the panic of my empty lungs flooded me. \n\nDoug's arm suddenly loosened, then let go. I dropped to my knees and took a desperate breath. I started to crawl away when I heard gurgling. I turned to see Doug's face bright red as blood and air failed to travel through his neck. Timothy's face was a terrible thing to see. So much hate, it even scared me. Doug was dying. His head was being forced forward over Timothy's forearm and Timothy wasn't going to stop. \n\n\"Don't kill him,\" I tried to scream. My throat wasn't working yet and my voice came out all gravelly. I stood and shouted again as Doug's lips started turning blue and his pupils rolled up into his head. Timothy dropped him. Doug's body fell like a bean bag, his head bounced. He wasn't moving. \n\nTimothy wrapped me in his arms. I cried when I felt his heart thumping. So much anger. I never wanted to see it again. I hated Doug with every fiber of my being. I pushed Timothy away and began kicking Doug's prone torso. Timothy let me connect twice before he pulled me away. Doug was not moving, dead to my revenge. \n\n\"It's over,\" Timothy whispered, his arms once again surrounding me. Doug still wasn't moving. He looked dead. I turned in Timothy's arms and pushed myself into his chest. He held me while I listened to his heart slow, in sync with mine. \"We have to call the police,\" Timothy said softly. I nodded, but didn't leave his arms right away. It wasn't the safety, it was the love I needed. I had to know his hate was gone. I stayed until I was sure. \n\nThe police took a few minutes to show up. It gave us time to put on some clothes and hold each other some more. Doug groaned. Timothy didn't like it. Doug was silent again when the police showed. We had a broken jaw to explain as well. \n\nDoug was packed into an ambulance. The paramedics felt confident he would recover. The police took our statements. My neck had begun to bruise which helped our version of things. We went over the story twice, adding bits and pieces as our memories were sparked. It was an exhausting two hours. My day was ruined. The blindfold wasn't even slightly appealing anymore. \n\nMy nose woke me the next morning. Timothy and I had stayed up late; wine and movies was the most our moods would allow. Our time. It was nice to know that we could enjoy ourselves with our clothes on. I smelled sausage. He must have found it in the freezer. I smiled, wondering how long it had been in there. It was one those things that looked good while I was at the grocery store, but failed to ever find a pan. I got up and followed the scent to the kitchen. \n\n\"I was just about to wake you.\" Timothy gave me his best smile. I returned it, scratching what had to be a rat's nest of hair. He had made french toast to go with the sausage links. It was impressive. He even found the syrup. I gave him a quick kiss and sat down in front of my plate. I ate in silence for a few minutes as I watched Timothy think. I could almost see his mind working. It must have been bothering him since he woke up. I wasn't sure when he had become so transparent to me. \n\n\"What would you expect out of a marriage?\" Timothy asked, completely out of the blue. I had trouble swallowing the mouthful I was working on.\n\n\"Love,\" I answered with my hand covering my mouth, trying to hide a still unchewed bit of food. \n\n\"Besides love?\" Timothy clarified. I tried not to laugh.\n\n\"Are you negotiating?\" I asked. \n\n\"I'm overthinking,\" Timothy admitted, \"I don't want to disappoint you. Promise you something when you wanted something else.\" I laid my fork down and sat up straighter. Mr. OCD was looking for perfection. I hadn't thought much past the love part. Then it came to me, a desire I had even hid from myself.\n\n\"At least two kids,\" I said, expecting him to panic, \"and I won't stop until at least one is a girl.\" He is the one who wanted honesty.\n\n\"I want veto power on the names,\" Timothy returned. I lifted my eyebrows. He conceded children and would let me name them. \n\n\"House in the suburbs, good school district,\" I added. \n\n\"Granted,\" Timothy agreed, \"I want a rider mower if it's more than a \u00bc acre.\" I laughed. \n\n\"Christmas at my parents,\" I added. \n\n\"Every other year,\" Timothy countered, \"my mother would never forgive me.\" I tried to not laugh again. \n\n\"Agreed,\" I said, \"we can flip flop Thanksgiving.\" Timothy nodded. \n\n\"Any other deal breakers?\" Timothy asked. \n\n\"Those are the big ones,\" I replied. Timothy opened my silverware drawer and pulled out a small felt-covered ring box he must have hidden there. He held it across the table in one hand and opened it with his other. \n\n\"Victoria Paddington, will you marry me?\" Timothy asked. My eyes fought against filling. It was a wonderfully beautiful ring. A large center stone with two smaller ones on either side, sitting atop a shiny platinum band. I stared at something I thought I would never receive. Timothy took my silence as some kind of failure on his part. \"I thought kneeling had a different meaning for us, but I'll do it,\" he said, moving quickly. \n\n\"Yes, I'll marry you,\" I said much louder than necessary. It was a good thing he moved. It made the kissing much easier. Leaning over syrup would have been messy. \n\n~~~~~~~~~~\n\nCatherine and my mother were intolerable. They bonded quickly and attacked the wedding with fervor. My parents didn't have the resources to fund a large affair, but Catherine insisted she would foot the bill. They deluged me with colors and flowers and bands and place settings and venues and dresses. My mother was the worst. She had never had a blank check before and Catherine was having a ball watching her work. I was willing to go to a Justice of the Peace and bypass the whole thing. I finally cracked and went all bridezilla during one of the 100-question sessions. \n\n\"This isn't a wedding,\" I shouted, \"it's a damn festival.\" Both mothers looked up like I was crazy. Each was marrying off her only child. It was going to be a grand affair whether the participants desired it or not. \n\n\"Stop thinking,\" Timothy whispered into my ear. He had sneaked up behind me, his arms wrapping around me. Our mothers smiled. He switched to my other ear, the one our mothers could not see and whispered again, \"I have a desire to blindfold you right now.\" I closed my eyes and sank into him. I could easily let him do the thinking for a while. I opened my eyes again.\n\n\"I'm taking a break,\" I told our mothers. They wisely let me go. Timothy took me home. We had our own festival. I was his. \n\n~~~~~~~~~~\n\nDoug Fuller walked down the hall slowly. His group meetings were unbearable. He should never have agreed to therapy. Fucking nut farm. This one had locks and fences. Tall fences. The orderly walked behind him, always within reach. \n\nNot one doctor could understand. He didn't have an anger problem. That bitch is the one with the problem. He gave her the world and she spit it back at him. What did they expect him to do? A man could only take so much. That last session was the worst. The gall of the doctor to ask him to look inward. The bitch was outward. The doctor deserved more than the bloody nose. \n\n\"In here, Mr. Fuller,\" the orderly said. Doug looked into the vacant room with padded walls. \n\n\"Fuck you,\" Doug said, and started to run. The orderly deftly grasped the ties on the back of Doug's straitjacket and yanked him back, pulling him into the cell. The orderly deposited Doug on his ass and quickly left, closing the cell door. He shook his head, thinking that Doug would never see the light of day. \n\n\"That bitch will get hers!\" Doug screamed. \n\nAcross town, a huge festival of a wedding just finished. Victoria Griffin had gotten hers."
    ],
    "authorname": "DreamCloud",
    "tags": [
        "vacation",
        "drunk",
        "key west",
        "parade",
        "body painting",
        "eyes",
        "blindfold",
        "personal assistant",
        "float",
        "rum and margaritas"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/the-festival-4"
}