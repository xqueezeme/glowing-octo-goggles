{
    "title": "Good Grief Ch. 10",
    "pages": [
        "Sienna sped to Jason's apartment with mental clarity for the first time in a long time. She was driving so fast, catching all the yellow lights. She was glad there weren't any cops around. She was elated and felt so light, like a heavy weight had been lifted off her shoulders. \n\nShe loved Jason plain and simple. If he still loved her, she would never let him go. \n\nShe parked down the street and briskly walked towards his building. Was his building always this far? \n\nShe couldn't wait to see him, even if it was a frustrated or mad look on his face. She had to see him. She had no idea what he would say or if he would take her back. Lord knows, she didn't deserve it. But she had to apologize... she had to tell him how she felt.\n\nShe finally walked through the impressive doors of his building. The lobby area already brought back memories; it seemed like a lifetime ago. It was an old Victorian building with massive marble columns holding its structure up. They had completely renovated it to be stylishly modern while keeping the essence of the building's age. It had an alluring character, Sienna wondered how much heartache and joys its walls witnessed. \n\nShe heard the elevator ding and her face parted in a smile when she saw him. \n\nWhy was he walking so slowly? She blinked several times and realized it wasn't him; it wasn't even close to looking like him. It was an elderly man who walked slowly with a bag in his hand. She must really be losing it.\n\nSienna was about to walk straight to the elevator to go to his floor but was stopped by armed security. That was new. \n\nHe asked a list of questions and wanted her license and phone number. Undoubtedly this had to do with the whole Suzy ordeal; security in Jason's building was now a lot tighter. \n\nSienna waited patiently; nervously as the man rang for Jason...he was the only one who could walk her up.\n\nSeconds seemed like hours. \n\nSienna could hear the long rings on the end of the receiver. Maybe Jason couldn't hear the phone ring she reasoned. She desperately just wanted to see him, she tried to convince the security guard to just let her go up and knock on his door.\n\n\"Impossible.\" The man said. His voice was stern but his eyes were kind.\n\nUnfortunately, after the man called him twice it was evident Jason was not in. \n\nThis is not how the story is supposed to go, Sienna thought. \n\nThis is so frustrating! Another pang of guilt coursed her veins as she thought of what Jason had gone through this past month. She didn't want to call him she needed to see him.\n\nSienna sighed. She would just have to wait.\n\nSienna didn't leave a message at the front desk and slowly walked back.\n\nShe moved her car when she found a parking spot a little farther down but under a big shady tree. As she sat she made herself comfortable and rolled down her window. She was not going to leave. She would stay there all day and night if she had to. \n\nSienna looked out of her window and observed people walking by. It's so easy to just not notice people when there are so many. For such a loud busy city, she couldn't hear anything but the chirping birds and faint sound from her radio.\n\nShe smiled and her stomach fluttered when she observed the elderly man who she confused with Jason meet an elderly woman and grab hold of her hand. His snow white hair glimmered in the sunlight. The woman's deep wrinkles shifted into a smile when he pulled out flowers from the bag he carried. \n\nThere was a mother who securely grabbed her little daughter's hand as they crossed the street. The little girl had a styled bun high on her head. She squirmed in her ballet outfit but skipped along next to her mom. \n\nOutside the little French cafe on the corner, there was a tall barista who brought out a tray of espressos and pastries to a group of friends. The friends laughed loudly, apparently recalling stories of each other. \n\nSienna smiled as she felt so much life around her. How could she be so absent from the living for so long? Even before she met Jason, she didn't exactly live life to the fullest. She was just there. With so much life around her and she realized she had wasted so much time. She vowed to never waste time again, starting with Jason. He was the key ingredient she needed to feel completely alive.\n\nSienna closed her eyes and enjoyed the breeze. It wasn't too hot and it wasn't too cold. The pleasant breeze gently caressed her face and hair. \n\nShe inhaled her city's smells. It smelled like peanuts roasting in cinnamon and sugar. The smells lulled her and calmed her nerves as she waited for the man she loved.\n\nA sense of peace swept over her. \n\nAfter about an hour she was still sitting in her car. She aimlessly scanned channels on her radio while her thoughts were surprisingly quiet. \n\nHer finger released the seek button when she heard a familiar deep drum beat and then a swaying melody. Her lips quirked a smile as she remembered the inevitable lyrics to come. She looked up and slightly nodded towards the heavens as if in appreciation of the next words she would hear... \n\nLet me be patient, let me be kind\nMake me unselfish without bein' blind\nThough I may suffer, I'll envy it not\nAnd endure what comes, 'cause he's all that I got and tell him\n\nSienna's eyes pooled with unshed tears when the chorus sang on. Lauryn Hill surely must have and written and foretold this song just for her.\n\nNow I may have faith, to make mountains fall\nBut if I lack love, then I am nothin' at all\nI can give away, everything I possess\nBut I'm without love then I have no happiness\nI know I'm imperfect and not without sin\nBut now that I'm older all childish things end and tell him...\n\nJust then, she saw Jason approaching his building. Her heart pounded deeply in sync with the music. \n\nSienna inhaled and exhaled.\n\nAs she was about to leave the car, she noticed something wasn't right. She squinted her eyes because Jason was walking next to a gorgeous blonde woman. Oh no, it couldn't be. A lingering slither of doubt threatened to overcrowd her thinking. \n\nBut then Lauryn's voice whispered...\n\nTell him I need him\nTell him I love him\n\nSienna got a burst of desperate energy. She scrambled out of the car and ran towards the building; her heart still beat in sync with the song now engrained in her mind. \n\nJason's back was facing Sienna and he still hadn't noticed there was anyone coming towards him. But he had this odd feeling, impelling him to look back. He was confused when he saw a crazed running woman coming towards him. His eyes widened at the recognition of Sienna. \n\nSienna slowed from her run and jumped into hugging him. She kissed him passionately while clinging to him. He had barely managed to grab her but held her in the kiss momentarily forgetting everything else around him. \n\nThe kiss lingered as they relished in the sweet taste of reunion. Their tongues dueled while they embraced each other for what seemed like an eternity. He tasted even better than she remembered. \n\nShe felt like she was home, like she never left.\n\nWhen their lips parted there was a spilt second of complete silence. \n\n\"I love you... I-I\" Sienna whispered.\n\nJason's gorgeous face parted in a smile and he kissed her again. This time he took control of every movement. His tongue gently massaged hers in a lovely erotic dance.\n\nThey heard someone clearing their throat and Jason ended the kiss. He placed Sienna on the floor but kept his arm around her.\n\n\"I'm sorry Jacquelyn, I forgot you were there.\"\n\nThe woman smiled and said, \"It's quite alright. I completely understand. Oh there he is...\"\n\nA tall handsome man crossed the street and joined them.\n\n\"It was a nightmare finding parking.\" He huffed.\n\n\"Jacqueline, Ethan this is Sienna.\" Jason said as he introduced them.\n\n\"It's nice to finally meet you.\" Jacqueline said.\n\nSienna was thoroughly confused but politely shook their hands in greeting. Jason ushered them all into the building but held Sienna close to him. \n\n\"I'll fill you in later.\" Jason whispered. \n\nSienna felt like she was bursting with all the things she needed to tell him. But it was obviously not quite the time so she would just go with the flow. As they walked, she stared up at Jason not believing he was actually there. As they rode the elevator she savored his scent and held him close. He kissed the top of her head.\n\nWhen they got into his apartment, she noticed it was full of boxes. Was he moving? \n\nJacqueline and Ethan were oblivious to the fact that Sienna was beyond confused. They walked through the apartment commenting as they went. \n\n\"Oh honey, look at this view! I love it. I just have a feeling.\" Jacqueline said.\n\nEthan walked around and saw the impressive kitchen and was impressed. \n\n\"I agree.\" Ethan said. He and Jacqueline walked to the bedroom.\n\nWhen they were out of earshot, Jason looked at a confused Sienna who waited patiently in the corner. He smirked and thought of all the days, she comes back to him today. \n\nHe stalked over to her and lifted her chin and peered into her beautiful hazel eyes. He lowered his lips to hers needing to taste her again, still not believing she was there. \n\nAfter a moment they heard footsteps approaching.\n\n\"Jason, we'll take it.\" Jacqueline said confidently.\n\n\"Yea this is exactly what we are looking for.\" Ethan said.\n\nJason turned and smiled at them. \n\n\"Great! I'll fax over the contract by the end of the day.\" Jason said.\n\nThey said their goodbyes and left Jason and Sienna alone.\n\nBefore Sienna could voice the question, Jason tugged her towards the couch. He sat down and pulled her on his lap.\n\n\"Before you ask me any questions, tell me what you came here to tell me.\" \n\nAlthough Jason was affectionately holding her, his tone was serious. Sienna cleared her dry throat and looked at him with watery eyes.\n\n\"I've been miserable without you, Jason. I'm sorry. I'm so sorry for not believing you. I'm sorry for all the things I said to you and I'm sorry for not listening to you. I should have directed my anger to the source of the problem. I've learned a lot about myself this past month. I carried a lot of issues I didn't know I had. I'm sorry you had to deal with my sister. And I'm sorry for not telling you sooner that I love you. Because I do. I love you more than I ever thought I was capable of. I know I don't deserve a second chance but I want it... Because-\"\n\n\"Because?\" Jason questioned.\n\n\"Because I refuse... to live without you. I love you so much.\"\n\nJason leaned towards her and hovered over her mouth.\n\n\"And I never stopped.\" He whispered.\n\nHe kissed her and he felt her smile through the kiss. As their tongues dueled, they moaned at the taste. He angled her head as he deepened the kiss. Sienna felt electricity as he moved his hands down her body. She was already wet and getting wetter as he grinded her onto him.\n\n\"Are you moving away?\" Sienna asked breathlessly between kisses.\n\n\"I'm subletting the apartment for a year.\" Jason responded breathing heavily. He didn't stop the assault on her mouth.\n\n\"Where will you go?\" Sienna breathed; surprised she had a coherent thought between the intense sensations.\n\n\"I'm traveling to Europe, I own a couple of properties I'll stay in. While I'm there, I might go back to graduate school.\" Jason said before he nibbled on her lips.\n\nHe smoothly slipped his right hand in her pants and rubbed her wet hot pussy. Sienna groaned at his touch. \n\nShe was on fire, on the verge of cumming. \n\nShe didn't really register what he just said. Jason's strong fingers pumped into her furiously and he circled her clit quickly. Sienna started trembling and knew she was a second away from heaven.\n\n\"Come with me.\" Jason whispered sexily in her ear before licking it.\n\n\"Fuuuccckkkk\" Sienna wailed.\n\n\"Beautiful.\" Jason said in awe as he stared at her.\n\nSienna was breathing heavily and her heart was pounding. When she came down from her high and her tremors subsided she looked at Jason. He was waiting for her to respond. She realized he asked her a question.\n\n\"You want me to move away with you?\" Sienna asked when she found her voice.\n\n\"Forget about everything and come with me. I'll take care of you. I won't go without you. Now that you're on leave-\"\n\n\"Wait, how do you know I'm on leave?\"\n\nJason smiled mischievously and shrugged his shoulders.\n\nSienna chuckled and shook her head. Of course, Jason had something to do with that. Sienna remembered Mr. Stein's cryptic sentence about dreaming a new dream. \n\nSienna stared into Jason's piercing gray eyes and knew he had everything she'd ever need. He already had everything she had ever wanted. \n\n\"Yes.\"\n\n\"Yes?\" Jason asked.\n\n\"Yes.\"\n\nJason grabbed her tightly and kissed her fervently. They suddenly had too many clothes on. He smoothly took them off her in seconds. Sienna chucked his shirt off and bit her lip at the sight of his perfectly sculpted chest, just as she remembered it. She desperately unbuckled his pants and shoved her hand in to greet Mr. Man. He was hard and ready for her. Sienna moaned as she kissed him again. Jason roughly grabbed her breasts and tore her bra off. \n\nSienna hissed. \n\nShe straddled his lap and ground on his dick. He rubbed her breasts testing their weight; they seemed a bit smaller than he remembered. \n\nSienna reached down, moved her panties to the side and slid his thick dick home. \n\n\"Oh shit.\" Jason growled.\n\nShe felt herself gripping his cock and they groaned together. He grabbed hold of her waist as she raised herself up and down. She arched her back and slightly bent backwards and slammed herself on his dick franticly. Her beautiful mahogany skin glistened with sweat. \n\nHis chiseled arms flexed as he controlled her movements. She loved how easily he invoked in her raw pleasure. \n\nShe missed it so much, missed him so much. She felt her pussy oozing as she relentlessly fucked herself on him. \n\nThey started panting in unison. Jason looked at his baby's beautiful wild body ramming herself on his dick and thought there was not a more perfect sight in the world. He reached up and roughly squeezed her breast and rubbed her nipples with his thumbs. He was in total bliss focusing on her pleasure. He felt the pressure build in his balls. He wasn't going to last long if she kept this pace.\n\nHe leaned forward secured her waist and stood up. His pants dragged on the floor as he walked but he did not let up from pumping into her. He tried reaching his bedroom but didn't quite get there. He leaned her against a wall and planted his feet on the floor. His strong arms held her still as he thrust into her pussy as his cock plunged into her inner wet folds. \n\nShe moaned and withered as she came. Jason kept going riding out her orgasm as he continued to pound into her mercilessly. Sienna screamed as she felt his dick ripping into her. She could feel herself soak his dick completely. She continued to let herself be bucked and loved every minute of it. \n\nDamn, she loved this dick and loved this man. \n\nShe cried out loudly as she came again. Her pussy squeezed Jason's thick cock tightly. Jason groaned as he came deep within her. \n\nHe kissed her while he grabbed her breasts and pulled at her hardened peaks. He then pulled her close and walked her to his bedroom. He threw her on the bed.\n\n\"Get on all fours, ass up head down.\"\n\nSienna complied quickly... eager for more dick. She desperately took off her remaining clothing. She positioned herself in front of him, her head all the way down until she turned her head to lay her cheek on the bed. She slightly arched her back which pushed her ass higher in the air. Jason finished undressing and stroked his dick while admiring her ass. \n\nDamn, he missed that ass.\n\nSienna jiggled her ass cheeks. She grabbed and pulled her ass cheeks apart giving him a terrific view of her dripping pussy and ass bud. She wanted to provoke him; she loved him being rough with her. \n\nShe felt his hardened body behind her. His hands slid down her silky smooth back and lingered at her waist. She looked smaller than he remembered. Her waist was impossibly small and her thighs, hips and ass were smaller as well. He didn't like that.\n\n\"Baby, why are you so much thinner?\"\n\nSienna had her eyes closed and hardly heard him as his hands were deliciously caressing her. But when he stopped she realized he asked her a question.\n\n\"Hmm? Oh I haven't had much of an appetite.\" \n\nJason grunted in response, he did not like that one bit. But his hands continued towards her ass cheeks and rubbed it gently. \n\nSuddenly, he smacked ass cheek hard and Sienna squirmed from the sting. \n\n\"You were a bad girl... a very bad girl. Did you take care of this pussy for me?\"\n\nSienna was going crazy from his touch. She mumbled incoherently and managed to whimper in response.\n\nJason alternated between spanking her and speaking.\n\n\"Did, smack, you smack hear smack what smack I smack said smack?\"\n\n\"Yes! I took care of this pussy for you!!!\" Sienna yelled in delicious pain.\n\n\"That's what I thought.\" Jason whispered huskily in hear. \n\nHe continued to spank each ass cheek as if she was a misbehaved child. As he punished her and marveled at how Sienna's honey continually dripped on the sheets while she whimpered and moaned.\n\nHe finally pumped his fingers in her juicy pussy. He loved that pussy, his pussy. Sienna rubbed and pinched her nipples. He stroked his dick and rubbed it against her pink folds and between her ass cheeks. When his dick was soaking wet he slipped it her pussy and it welcomed him again. She was so tight. He inched his swollen dick deep inside her. \n\nSienna felt she was about to black out from the pleasure. She was so turned on by Jason how he gently rubbed her ass cheeks as he entered her. The sting from being spanked electrified her.\n\nPretty soon she was moaning asking for it harder and faster. Jason delivered by driving his dick into her faster... harder... deeper. You could hear the sound of his balls smacking her ass. He stared at that delicious ass and grabbed those meaty globes and spread them as he fucked her relentlessly.\n\nSienna exploded and screamed Jason's name. \n\nJason kept going. \n\nHe ran his hands down her smooth back and grabbed hold of her hair. He roughly pulled it and kissed her neck gently. \n\nHe whispered in her ear, \"I love you baby. Are you going to be a good girl or a bad girl?\" \n\nThat combination of being brutally rough and oh so sweet and gentle drove Sienna crazy with desire. \n\n\"Good girl.\" She said through clenched teeth. \n\nShe was swiftly on her way to her next orgasm. When he rubbed her clit in small circles and she came again with a loud scream. Jason followed behind and came deep within her.\n\n\"Fuck!\" He roared.\n\n\"God damn baby, was that angry sex?\" Sienna said panting.\n\n\"I don't know. I guess I had a lot of pent up energy.\" He said as he chuckled.\n\nJason kissed her and thanked God he got her back. \n\nHe thoroughly cleaned her up with a wet warm cloth as Sienna was dozing off.\n\nWhen he finished cleaning her although her pink pussy was swollen he began eating his favorite meal between her legs. He licked and sucked quietly like a kitten lapping its favorite warm milk. \n\nNow that he had her back she needed to be prepared for his insatiable appetite for her. This time he ate her out gently while she was on her back and watched every expression she made. It's like he wanted to memorize her every moan, every lick of her lips, and every tremor. \n\nHe watched in fascination as her skin produced goose bumps and her nipples hardened. Sienna locked eyes on him and all she saw was her open mocha legs and Jason's silver eyes fixated on her and his mouth suctioned to her pussy.\n\nShe was so well-fucked that her pussy only understood Jason's commands. Her body spasmed and without warning she squirted into his awaiting mouth. Jason swallowed every delicious drop. Jason was so satisfied with his work. He nearly came from the sight of it happening.",
        "Nearly...\n\nJason crawled on top of her licking and nibbling as he went. His hands didn't stop touching every part of her, while his tongue paid homage to each perfect mahogany breast. His special treats were her hard chocolate nipples that his tongue delighted to play with. He rolled his wet appendage around her nipples as his mouth sucked her breast hard. He quickly flicked his tongue on the peaks which made Sienna squeal under him. \n\nHe slid inside of her and groaned as her hot wet pussy welcomed him in again. He slowly moved inside of her taking extra care of her swollen folds. It was as if he was cooling down from a strenuous workout routine. \n\nIn and out.\n\nHis breath and hers matched perfectly. Their breaths created a solitary symphony which coupled with their synced heartbeats; it was the most beautiful song in the world.\n\nIn and out he moved inside of her.\n\nHer tight pink pussy continually suctioned him in bringing his release closer to the surface. She made the most beautiful sounds, a mix between cooing and humming. When she was on the verge of cumming he slowed his pace to one of a snail. He lifted her leg and kissed the inside her ankle. With his newfound access, he fucked her slow and deep. As he moved, he grabbed her hips to meet his, making sure to be as deep as he possibly could.\n\nSienna felt him caressing her g-spot and was in total bliss and in total hell as he denied her orgasm.\n\nFinally Sienna felt her body on edge, she was trembling and there was a thin layer of sweat that made her body glow under the soft light. Jason let her leg go and bent down and kissed her passionately while rocking himself between her legs. When Jason felt her close, he drove her home by fucking her fast, hard and deep as he could. \n\nSienna screamed while her legs wrapped around Jason's ass as if his dick would somehow leave her. Jason growled against her skin and didn't stop pummeling her pussy until her long orgasm subsided. It was only then that his heavy balls released his seed deep within her. Not having control over her body, she quickly fell fast asleep... happy and well-fucked.\n\nHe positioned himself so he spooned her with his dick still deeply embedded in her pussy. He sighed as he felt a sense of calm and happiness once again. Jason kissed her shoulder and fleshy part behind her ear and drifted to sleep with Sienna in his arms."
    ],
    "authorname": "partial2passion",
    "tags": [
        "romance drama",
        "black female",
        "new york city",
        "white male"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/good-grief-ch-10"
}