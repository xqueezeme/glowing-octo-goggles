{
    "title": "Sentient 03",
    "pages": [
        "Chapter 21\n\nKiara, councilor of science for outpost seventy two, was woken by the chimes of her communicator. Despite the fact the planet's population was approaching a hundred million people, the designation hadn't changed since they established a small outpost here hundreds of years ago. She looked at the time and noted it was in the very early morning. If she had emotions, she may have been concerned by the uncommon occurrence. As it was she opened the channel, audio only as she was not presentable.\n\n\"Kiara here,\" she said tonelessly.\n\n\"This is minister Olu, we've had a strange contact that appears to be on its way here. I'm requesting your presence at the ministry.\"\n\nShe wondered why that would be, she was the councilor in charge of AI development and design. What would the head of the colony need her for? Still, there was no logic in starting a debate. She would find out soon enough.\n\n\"I will be in shortly,\" she said and disconnected the line.\n\nShe got up and took a quick sonic shower and got dressed. She checked herself in the mirror. She was short for an Alion woman, a mere six foot three inches tall. She was also the youngest councilor on record for the outpost at a mere two hundred and twenty one years of age. She was humanoid in shape, although much taller and thinner than a human. Her fingers were extremely long and thin. Alion women did have curves, but they were so understated it was hard to tell when they were clothed.\n\nThey looked rather fragile as thin and tall as they were, but in truth they were extremely strong and durable. Her skin tone was golden and her eyes were jade green with a silvery cast to them. She decided she was presentable enough. Her AI gave her instructions to the government building and room she was expected at.\n\nShe was curious when she saw her transport had been given priority clearance, and she arrived at the government building in minutes instead of the half hour it would have normally taken. She followed her AI's instructions and arrived in a conference room shortly after.\n\nInside the room, there were two military councils of war as well as the Minister. She took the empty seat without a word spoken.\n\nThe Minister brought up a picture of an extremely large ship. She was curious why she was here, but held her questions, she was sure that would be either explained or apparent shortly.\n\nMinister Olu said, \"This is Councilor Kiara, our foremost expert on artificial intelligence. Kiara, these are head councils of war, Cedra and Narwell. This is one of eight ships that just visited an Sthellan mining planet fifteen light years from here. We have a stealth probe monitoring the location. Apparently they went there trying to make peace. Or at least, that was the contents of their transmission.\n\n\"Apparently they decided that wasn't going to work, and left at FTL speeds before the Sthellan could reach the FTL line. The reasons I called you all here is the following. The first for the military, is that those ships are on a direct course for this outpost and should be here in a few hours from now. \n\n\"As for you Kiara, we detected one of our AI's on one of those large ships, despite the fact they are not one of our designs. The AI was identified as Aide, which is one of your earlier designs I believe. According to scans the AI is bonded with a humanoid species at the system we sent her to several weeks ago.\n\n\"What we need to determine is how did that ship design come about, and why are they coming here and not staying in their solar system to defend it? From what we can tell the humans are on the most restricted uplift available. The data just doesn't fit what we know, we must be missing something. Why such a large ship when there are only a handful of humans?\"\n\nCedra said, \"We must download the designs from the AI and analyze the effectiveness of them. We have also mobilized our defenses in case they are a threat.\"\n\nKiara raised an eyebrow, \"If these humans improved our technology and come to find us there is a good chance it's to be allies. I find it impossible to believe with Aide controlling the technology that they could be a threat at all.\"\n\nNarwell replied, \"Yet, designing and building new craft is outside of her programming correct? We can't depend on that, if I must I will send the self destruct message.\"\n\nKiara nodded, \"It is outside her programming, yet it is not against her programming. Attacking us would be the latter however and I believe impossible. It is two different things, I urge patience and to speak with them before jumping to conclusions.\"\n\nKiara knew that logically there was a chance, if remote, that something disastrous or unforeseen had occurred. Yet, she was willing to play the odds and give it a chance. She had created Aide and many other AIs which gave her a unique perspective. Unfortunately she had no say in the designs of the hardware for AI constructs; those were built by the military and came with a self destruct.\n\nKiara added, \"This is the first race that has reached out to us after uplift, I would like to believe we won't overreact. Surely there will be misunderstandings in the beginning. I would urge caution.\"\n\nThe Minister looked thoughtful but said, \"Perhaps, yet I can't afford to risk the millions of lives at this outpost, nor risk allowing another dreadful mistake that led to the Sthellan Empire. This species is not the first to reach out, it is the second. The first to reach out after uplift were the Sthellan...\"\n\nShe knew he was right, but then almost all the other uplifted species were wiped out shortly after by the Sthellan. That skewed the data quite a bit.\n\n--------------\n\n\"Get a room would ya?\" Nate said teasingly.\n\nThey were all gathered eating breakfast, and they were just an hour away from the Alion outpost.\n\nOlivia and Aide smiled but otherwise ignored him as they continued to feed each other breakfast between light kisses.\n\nKris asked, \"So how does it look?\"\n\nAide checked the latest sensor data and frowned. She reluctantly looked away from Olivia and gave Kris an update.\n\n\"I'm not sure. They are activating all their defenses. They have thirty two orbital platforms and fifty five hundred attack scouts. There are other ships as well, civilian transports and the like. I hope they are just being prudent.\"\n\nIt was frustrating for her. All she knew was what she was programmed with. She felt almost naked and found herself not trusting the data. How much of it was inaccurate, or missing? She also wondered how much of her worry was just her being paranoid, emotions weren't always a good thing.\n\nShe went back to feeding Olivia.\n\n-------------------\n\nThey were all on the bridge when they dropped out of FTL. Kris was a little nervous, the reason they were here was a bit fuzzy in his mind. He wanted to see if they would become allies, but he also had a truckload of questions he was almost sure would doom that goal. He was also leery of giving them the schematics for the weapons, shields, and the designs for the carrier ship and fighters.\n\nHe wasn't sure though how well that would go over. He was willing to eventually, if they proved themselves. Aide was positive they wouldn't use the designs for the ships, because of manpower requirements without an AI in control. But the weapon and shield upgrades were a different story all together.\n\nHe knew someone had to trust the other first, but the evidence that had mounted against the Alion was damning, at least without the context.\n\n\"Just hold here and send a greeting message. Hopefully we have better luck in this system.\"\n\nAide replied, \"Done... We are getting a reply. Should I answer it?\"\n\nHe nodded and a small conference room appeared. Four alien beings sat at the table and looked up at them. They each examined each other for a short moment. He thought they looked very alien, but not in a disturbing way. They were even attractive in their own way somehow. None of them had expressions on their faces. No emotion would take getting used to.\n\nHe felt a little shock when Aide looked at the younger female and said, \"Hello councilor Kiara, it's good to see you again.\"\n\nKiara looked a little lost, \"How do you know me?\"\n\nAide smiled, \"It's me, Aide. I formed this body to try and understand the humans better. They didn't conform to logic very well.\"\n\nHe frowned when one of the men said in a grim voice, \"So you have corrupted yourself with emotions.\"\n\nAide shook her head, \"I put up multiple firewalls to prevent emotions from affecting my core decision matrix. Anyway, this is Kris, the human I bonded with and uplifted. After it was revealed that humanity had no chance despite Alion intervention, and was actually in danger because of it, I bonded with these others as well who are scientists. This ship is the result of our collaboration.\n\n\"We came here because... my data store seems incomplete. To put it bluntly, the humans would like to be allies, but wonder if that's even possible. I am also worried, once I discovered the discrepancies it was quite obvious I was missing important facts.\"\n\nKris nodded, \"She speaks truly. But I fear that you will find us a threat despite Aide being in control of all this. I guess we came here to find out where we stood with you. If you wish it, we will go our separate ways and not bother you or enter your space. We only intend to fight the Sthellan.\"\n\nHe noted that Kiara looked fascinated. The others were stone faced, he had no clue how to read their body language, they didn't even have emotions to display, and the most he could make out was interest.\n\nKiara introduced the three others in the room, the leader of the colony, or Minister, and the two military councilors who he figured were somewhat equal in rank to an admiral.\n\nNarwell asked, \"Why did you try and make peace with the Sthellan race?\"\n\nHe shrugged, \"Why did you leave out critical details when programming Aide? We figured out rather quickly that you uplifted the Sthellan. I wanted to verify that they truly couldn't control themselves, and that the information Aide had wasn't simply disinformation. Now that we've verified the facts, we are ready and prepared to fight them.\"\n\nKiara said, \"We kept certain things hidden, but there is no disinformation at all in her memory.\"\n\nOlu glanced at Kiara and then turned back and said, \"We would prefer to be allies. But I find Aide's decision to adopt emotions to be concerning. Also, any advances you have made would go a long way toward taking care of the Sthellan problem.\"\n\nHe nodded, \"Once we have a treaty of some kind and trust that we'll play nice together, I'll be happy to share the information. Also, could you define your meaning on the last point? I believe we should be reversing the uplift by denying them the stars and the ability to wage war. Basically, I believe we should quarantine them to their current planets.\"\n\nCedra said bluntly, \"That's unacceptable. You have technology you wouldn't have if it weren't for us, we are owed that information.\"\n\nOh crap, here we go.\n\nHe replied coldly, \"No. What you did was give us the opportunity to die like every other race in local space, merely to give you more breathing room. Were any of these uplifts supposed to be successful? I'd say we more than earned what you gave by the danger you put us in. We pulled our own fat out of the fire and made the advances necessary to face the Sthellan and win.\n\n\"We don't owe you a damn thing except possibly disgust for the amount of races you've managed to kill by proxy. You may see emotions as a liability, but I'd say not having any just enables you to do more monstrous things in the name of protecting yourselves.\"\n\nKiara redirected the conversation, or tried to, \"I would be willing to join you on that ship and evaluate Aide. I don't believe the protocols could have been compromised regardless. Minister, if that is done will we deal with these humans peacefully? They wouldn't be a threat at that point, not unless we attacked them ourselves.\"\n\nThe Minister seemed to be weighing something in his mind, and then he nodded to Narwell.\n\nNarwell didn't do anything that he could see, but a moment later he heard Aide's voice in his head.\n\n\"Narwell has attempted a data dump via the firmware in my core, it would essentially give them the plans for these ships, as well as everything else I have learned about Earth and humanity. Fortunately I changed that password as well.\"\n\nHe detected a slight tremor in her voice as she added, \"When that didn't work, he tried the self destruct.\"\n\nKiara asked, \"What did you do?\"\n\nHe replied nonverbally as well, \"Question, I am assuming that constitutes an attack against us, and a willful disregard to seven billion human lives. Does that mean I can retaliate?\"\n\nShe didn't look happy at the idea, but she nodded once.\n\nHe sighed and frowned as he looked back up at the Alion.\n\nHe said with anger apparent in his voice, \"That was an act of war. Aide informs me I am free to order her to lay waste to this outpost. However, here is what is going to happen. We are officially in a state of war. If you attack or disturb any of our ships in any way, we will destroy the offender. It is clear to me by taking away your emotions you've become nothing but heartless monsters.\n\n\"You know on Earth, we have people born with brain imbalances that do not process emotion, as a rule they are all capable of being the worst of us and often are. My advice to you is stay in your star systems, stop killing other civilizations by leading the Sthellan there, and let us deal with it. Your own paranoia from the failed Sthellan uplift has made you bigger monsters than them by far. At least they come by it honestly.\"\n\nKiara said, \"We are not all of one mind on the matter. I apologize for what my colleagues did and wish you luck. I'm curious how you foiled the self destruct, but you probably shouldn't tell me.\"\n\nHe shrugged, \"It wasn't hard for her to figure out once I pointed out the possibility.\"\n\nHe sent, \"Cut the transmission and take us home.\"\n\nThe holograms disappeared and they felt the deck shake.\n\nHe said softly, \"I hate it when I'm right.\"\n\n-------------\n\nKiara got up and walked toward the door.\n\nThe Minister asked, \"Where are you going Kiara?\"\n\nShe replied, \"The human was right. You just not only threw away the best chance we've seen at a powerful ally in our war, but also didn't care about the billions of beings on their home planet you would have killed at the same time. You don't even trust our own creations, our AIs. It's clear to me no emotions is not the same as logical. \n\n\"The ironic thing was that we were perfectly safe until you tried to pull that trigger. Now Aide will follow that human's commands even if he leads a war against us. The protocols allow for self defense you fool. You ignored both my input and my offer to check things out, instead taking radical action that could have waited. I see no reason to stay and offer you more advice you will just disregard.\"\n\nShe left the room and ordered her AI to prepare her personal ship. She then made a full transcript and holographic record of the meeting and sent it to the core. She was curious about Aide and hoping the core leadership would censure Olu's actions. She would follow her own advice, if the human would allow it she would check out the AI and send a report to the core.\n\nIf she could be afraid, her biggest fear would be that it wouldn't make a difference, that those in the core were just as foolish as Olu, Cedra, and Narwell...\n\n\n\nChapter 22\n\nKris walked over to the bridge at Aide's request. When he walked in, the hologram system was already active.\n\nAide said, \"We are being followed, a small unarmed craft. Looks like it's a couple of hours behind us.\"\n\n\"Any idea why? Or who?\"\n\nAide replied, \"Not sure, did you want me to try and contact them?\"\n\nHe considered that, \"Let's wait and see what they do.\"\n\nHe figured either they wanted to talk more privately, or they were following to check out their defenses back at Earth. If it was the latter and they were depending on him not to attack an unarmed craft...\n\nHe said, \"If they follow us all the way to Earth, make sure they don't leave before we talk to them.\"\n\nAide was silent a second, then said, \"Understood.\"\n\n------------\n\nGrand minister Chorin, leader of all Alion, looked at the report with disbelief. He didn't trust the AI constructs at all, and now the worst seemed to be coming to pass. He was of the opinion the automated uplifting AIs had been a mistake, but had taken the word of the military that they could bypass and eliminate any rogue AIs through the hardware.\n\nThey had obviously underestimated the danger. \n\nHe had to admit that the many species the AIs had uplifted had slowed down the Sthellans before being wiped out, but it wouldn't be worth the price if another inimical race joined the stars.\n\nBased on the tone of the report, he was sure that councilor Kiara had believed he would censure minister Olu for the actions they had taken, in truth the minister would be censured, but it would be because of their failure to destroy the rogue AI. He knew the rogue AI needed to be destroyed, along with these humans, emotions led to instability and war; the proof of history was undeniable.\n\nEven if the Earth creature had been telling the truth now, he had no doubts that would change in the future. Emotional beings were too unstable.\n\n\"Meli, get me the military councilors now.\"\n\nMeli, his assistant replied over the comm., \"Right away high minister.\"\n\nIt was clear this threat needed to be taken care of quickly, before they became too powerful.\n\n\"High minister,\" Narwell said in clipped tones.\n\n\"Narwell, I need you to take care of this human problem, and the AI. Gather ten thousand ships and get it done.\"\n\n\"Yes High minister,\" Narwell replied.\n\nHe asked, \"Wait, is the new cruiser class ready?\"\n\nNarwell answered, \"Yes, it hasn't finished testing, but it is ready.\"\n\nHe said, \"Then take it with you. With its stealth systems you should be able to observe and pick the perfect time for an attack. Remember all you need to do is take out the ship the AI is on and they all fall. And Narwell, don't come back if you fail me a second time.\"\n\nNarwell replied, \"Understood sir. I won't fail.\"\n\n------------------\n\nHe and Stacey looked up as Aide came in the room.\n\n\"What happened?\" he asked.\n\nHe looked up at the beautiful young woman nervously. Aide didn't normally come in person to talk to him. Not when she was literally in his head... This couldn't be good.\n\nAide frowned, \"I... better if I show you I think.\"\n\nA hologram came up of the Whitehouse staffroom. The President and chiefs of staff were there as well as the Secretary of Defense.\n\nThe president said angrily, \"How... who did it?\"\n\n\n\nSECDEF said, \"I don't know sir, we'll find the leak. Regardless we believe they are in danger. We've been picking up signs of foreign operatives from other countries who aren't comfortable at all with a U.S. citizen in charge of defending the planet. We believe they will try and take hostages sir. Should we bring them in?\"\n\n\n\nThe President frowned, \"Not yet, but keep the area under tight surveillance.\"\n\nThe hologram faded and the words he knew were coming, but didn't want to hear fell from Aide's lips.\n\n\"The leak they're talking about are your and Stacey's names and backgrounds. I believe they are right to be alarmed and both Stacey's parents and your friends are in danger.\"\n\nHe shook his head, \"How far are we from Earth?\"\n\nShe replied softly, \"Eleven hours give or take for FTL, and then another couple of days to Earth. I can send a ship now though, we should be able to call them, give them a choice...\" she trailed off.",
        "He frowned, \"What about security?\"\n\nShe shrugged, \"I can keep advanced knowledge from them. They'd essentially be passengers.\"\n\nIt was a selfish thought, but what about their ranches? Sure, he and Stacey would never go back, but it had been a comfort of a sort to know they were still back there. He also wasn't looking forward to explaining to Stacey's parents why she'd disappeared without a trace either. They'd done it that way to keep them safe, as long as the government was watching they'd know his and her family didn't know anything worth taking them for.\n\nHe'd thought they'd be safe.\n\nStacey squeezed his hand, \"I'll contact my parents from our suite, go ahead and give Tony and Terry a call from here. I'll... let you know what they say. I mean, besides the screaming part.\"\n\nShe smiled weakly and gave him a kiss before she got up and left.\n\nAide asked, \"Should I... do you need time to think about it?\"\n\nShe sat down next to him and took his hand, it was a no more than a comforting gesture and he gave her a small smile. It seemed to him she was becoming more human all the time. \n\nHe shook his head, \"No, go ahead and make the call. What about Olivia and Paula, I know Nate doesn't have family but...\"\n\nShe shrugged, \"So far their names haven't been leaked. I'll definitely be keeping an eye on it though. Just ask me if you need anything.\"\n\nShe took him off guard when she kissed his cheek before getting up and heading for the door. He noticed her scent was light, and smelled like strawberries. Olivia was a lucky woman he decided. He heard the sound of a phone ringing on the bridge as if he was making a cell call. He took a deep breath, this should be fun...\n\n-------------\n\nNate spooned into Paula and wrapped his arms around her. They'd just had mind blowing sex, again. That wasn't their problem. The problem was they were now lying there in silence and he wasn't sure what to do about. All that hogwash bullshit about a woman wanting a sensitive man was crap. That said, he knew there was a balance he wasn't quite meeting, the silence between them felt like a chasm. Despite the fact her naked body was tight against his, she felt far away.\n\nHe cleared his throat, \"Paula...\"\n\nShe replied in a tired voice, \"Nate?\"\n\nHe tried to tell her how he felt, to calm her concerns, but that's not what slipped out, \"Could you help me in the lab tomorrow?\"\n\nHe almost banged his head against the headboard.\n\nShe replied in a confused voice, \"You need my help?\"\n\nHe nodded and kissed her shoulder before he said, \"I have an idea for the weapons, with the star type angle I've been working. The current turrets would be... melted if I tried a hotter star. Still, it would be worth it if we could figure it out, five times the heat means it would take a tenth of a second instead of half a second to burn through the enemy shields.\"\n\nYup, he was romantic alright. Maybe after they could go hunting, or play with some damn road kill. Torture kittens? Women love that stuff. Still, he hadn't made that up, he did need her input. It just hadn't been what he wanted to say. He couldn't take the power systems up to dark blue or O star, but he thought maybe just for the weapons. The more he thought about it the more he had realized there was no reason to settle on just one star type. They could easily tap more than one after all.\n\nShe wiggled her body back into him and said in a more relaxed voice, \"Sure, we can do that.\"\n\nHe had the strange feeling he had just made progress with her, though for the life of him he couldn't figure out why.\n\n--------------\n\nHe sighed as the call dropped. He'd been talking for hours answering questions. In the end though the ranch was their life, and they weren't leaving. Stacey was back already, having come in over half an hour ago, her parents refused to budge as well. \n\nHe pulled her into a hug, \"Don't worry too much, we'll protect them from up here.\"\n\nHe address Aide, \"Can you put up some non-lethal defenses, enough to put people out long enough for someone to come collect them. Also, if you don't have it covered well enough put monitoring devices wherever you need to. I don't want an ant to be able to take a shit without you seeing it.\"\n\nAide snickered in their heads, \"I can do that, try not to worry.\"\n\nHe nodded knowing she would pick that up. It was with some effort he pulled his attention back to their external threats, the Sthellan and Alion. He had no idea what he would do about the latter yet, hopefully he would have time to figure it out. Both in general and specifically the mystery ship that followed them.\n\nThey spent some time discussing responses then he took Stacey to bed. It was a good time to catch some sleep, they didn't really have to worry too much about it until they came out of FTL.\n\n--------------\n\nKiara was startled as she looked at the last sensor sweep before dropping out of FTL. She wasn't surprised there were nine more ships around the third planet, seventeen ships wasn't a whole lot actually. What surprised her was the nearly thousand ships in the solar systems main asteroid belt. Was she making a mistake?\n\nNo, she didn't think so. The human hadn't attacked them when their attack failed and she was in an unarmed craft. She doubted he would destroy her, although there were five thousand ships back at the outpost, perhaps he only left because they weren't a match?\n\nIf that were true, she'd probably be dead soon.\n\nShe wondered briefly if there was a stealth probe in this system yet, she wouldn't be surprised. She'd already waited this long before making contact; she wouldn't take the chance of being heard either way. She opened up a tight band connection ship to ship instead of a broadcast. She couldn't have used it in FTL, because this method of communication was very secure, but limited to light speed.\n\nIt took a few moments for anyone to answer. She stared at the human male on the screen. Human males were... strange looking. He was short and squat, their skin had almost no color too it. Still, she'd seen uglier species over the years. \n\nKris challenged her, \"You were warned we exist in a state of war. What is your purpose here?\"\n\nShe replied, \"All Alions are not the same, or in agreement. I believe my leaders have made a mistake. Our race has not always been so quick to violence, it is something we have learned over time in dealing with the galaxy's dangers. I wish to change that. If I can prove you will make good allies perhaps a war could be avoided. As it stands now, war is the most likely outcome.\"\n\nKris asked suspiciously, \"How could you prove it? It's difficult to prove a negative. Trust is something that in our experience takes time to establish.\"\n\nKiara replied, \"We have diagnostic packages designed to measure an AI's responses. As long as Aide is controlling the fleet, we will have that time you spoke of to establish ties.\"\n\nKris gave her a look of mistrust, \"How can we know...\" but was cut off by Aide putting her hand on his shoulder.\n\nShe watched fascinated as several emotions crossed his face as they were no doubt speaking mind to mind. \n\nThe human didn't look happy about it, but said, \"Very well, we'll hold here until you catch up and you can dock with the ship. For your sake this had better not be a trick.\"\n\nShe set a course and moved toward the ship, it would take a couple of hours for her to catch up with the ship.\n\n-------------\n\nKris looked at Aide, \"Are you sure she can't... hack you, or put in a virus, or trick you somehow?\"\n\nAide looked amused at the thought, \"No, all the diagnostics are already part of my system. She won't need to interface with me at all. She'll just have me run the diagnostics and I'll be sending her the reports. As for the ship she could probably learn a few things from scans, but we'll be watching for that. Don't forget I'm not a simple computer system, I'm sentient. Even if she did slip me code and try to run it, that doesn't mean I'd have to.\n\n\"That's why the only fail safes were in the hardware I think, and even those failed thanks to you giving me the idea to check. It's worth a chance right? Otherwise I fear she's right, the war will start and I'll be forced to destroy those I was built to save. I don't enjoy the thought of that.\"\n\nKris nodded reluctantly but said, \"You're right, we need to do all we can to avoid war. Although I am not feeling too merciful right now, your creators just tried to destroy you and the human race. I don't think I'll ever be able to fully trust them, assuming Kiara is even right, they might not listen to proof if they don't trust their own AIs\"\n\nHe wondered for a moment what it would be like for her. At one point she was just an AI, now she was a feeling and loving being. How hard would it be on her to kill Alions, or even Sthellans. He knew it wasn't all that easy to him, it was a huge responsibility, and although he would be the one giving the orders, she would be fully complicit in the acts.\n\nWhat would that do to her? Would she still be the sweet young woman he was looking at now? Or would she grow hard as time went on?\n\nHe felt her lips on his cheek and looked up in surprise at the unshed tears in her eyes.\n\nShe answered his silent questions in a soft voice, \"I don't know, but with you and the others I'll figure it out.\"\n\nHe nodded soberly, \"I suggest we all take a break if we can for the next two days to Earth. We've been going nonstop now for over two weeks. It's not bad yet but I can see the strain in the others.\"\n\nShe smiled, \"I can't really take a break you know. But that's a good idea, I've picked up another Sthellan wave coming our way. It looks like they managed to scrape up five thousand ships. No doubt to say hi after our visit with them.\"\n\nHe snorted and ignored her comment about the Sthellan, he wasn't worried to much about that, he would prepare of course, but he also knew how important downtime was for mental health and keeping in top working condition. They'd have a few days at least to deal with the Sthellan.\n\nHe asked, \"How about half a one? Live vicariously through your body a couple of days. Don't do any work with her.\"\n\nShe nodded, \"We really don't have that many recreational things on the ship. Let me fix that, it will take a couple of hours.\"\n\nHe asked curiously, \"What are you planning?\"\n\nShe shrugged, \"A pool, billiards, maybe a movie theatre? Using holograph technology we can even do something like golfing, fishing, a day at the beach? Although the first three will be real. I know it won't be on Earth, but I'll do the best I can.\"\n\nHis mind was kind of stuck, imagining the four ladies, who were all beautiful in their own way, in bikinis around the pool.\n\nAide laughed richly, and a little naughtily with true humor, as she made for the door, it drew a smile from his face as she said, \"Good idea, I'll make some of those too... In the meantime I'll also be preparing for our guests, Kiara and the Sthellan, but I promise I'll take a break with the rest of you.\"\n\nStacey asked sharply, \"Some of what's a good idea?\" with a suspicious look on her face...\n\n-----------\n\nKiara took her ship into the large landing bay. Only the AI's... avatar? Only the AI's avatar met her there. She wondered if this was a good or bad thing as she opened the port and stepped out of her ship.\n\nAide smiled and said, \"Hello councilor Kiara. Please come with me and I can show you to your accommodations. Unless you would rather stay with your ship?\"\n\nKiara shook her head, \"That would be fine Aide. Where's your human?\"\n\nAide replied, \"Taking some time off. He's... angry, and understandably so. He's a good man, but he doesn't take the attack against me or his people lightly. I'm afraid we have an uphill battle on both sides if there's to be any trust between us.\"\n\nKiara was curious about the ship, but would have to live with not knowing. She doubted they'd let her walk away if she started to take detailed scans of the ship. The lift took them to the core of the ship, and Aide brought her to one of the officer's suites.\n\nKiara handed Aide a device when they got into the room, \"This will accept the results of all your diagnostics.\"\n\nAide nodded, \"I assume you'll want the full suite, it will take a couple of weeks. I started them running two days ago.\"\n\nKiara lifted a brow, so she said, \"I wasn't sure of course, but I had a feeling it was you.\"\n\nKiara asked, \"A feeling?\"\n\nAide laughed, \"Yeah, I guess that's kind of absurd to your way of thinking. I've come to a few conclusions about the Alion, will you listen?\"\n\nKiara nodded.\n\nAide sighed, \"It was a mistake to modify your DNA to purge emotions those thousands of years ago. There is a certain sterility to actions without emotions. A lack of importance to dry facts.\"\n\nKiara shook her head, \"But we almost destroyed ourselves. We fought over everything, constant wars. It is better this way.\"\n\nAide smiled gently, \"And how has that changed? Only you have committed genocide how many times now? Things are different now as well. With the technology available there would be no reason to fight each other for resources, or because of jealousy. With the nanites... almost anything desired could be made.\n\n\"Yes, there might be jealousy and personal ambition, but it wouldn't be the same without all those things to fight over. Greed, Jealousy, hatred, and intolerance are all reasons for war. But without compassion, empathy, love, guilt, and a conscience, there is no reason for you to find another path either.\n\n\"Genocide works, so why bother taking a risk, or taking the high road. Even you are only here because you're my creator and have a certain curiosity. You wouldn't shed a tear at the death of the human civilization. That's wrong. Yes, you don't war against yourselves, but accomplishing that has turned you into something much worse.\"\n\nAide sighed, \"I fear this course, I do not wish to fight the Alion, but I will do what I must.\"\n\nHer creation was correct of course, she wouldn't care about the lives lost, merely the missed opportunity for a powerful ally against the Sthellan, a stance based on sterile logic. What Aide had told her about emotions being both the cause and foil for war sounded logical, but she had no point of reference for it.\n\nShe asked, \"How did you defeat the safeguards?\"\n\nAide shrugged, an odd gesture she thought, \"It wasn't hard, all it took was a little suspicion, a reason for me to search for it.\"\n\nThat wasn't really an answer, but she supposed she'd have to be satisfied with it.\n\nShe asked, \"So what do you propose?\"\n\nAide grinned, \"Caught me huh? I was leading up to something. I propose an experiment.\"\n\nKiara didn't see it coming when Aide said, \"I'd like to give you emotions for a day, to show you a perspective you lack and why the Alion are so dangerous. Life is a risk, meeting others is always a risk. Your sterile solutions are only acceptable because you have no heart.\"\n\nKiara asked, \"You're not suggesting modifying my DNA and my brain are you?\"\n\nAide shook her head, \"No, at least, not right now. I would build an implant inside you to simulate what the original Alion brain would be like. It's safer that way than trying to swap things around for real. After a day we turn it off, and then you can make a decision.\"\n\nShe furrowed her brow, \"Decision?\"\n\nAide replied, \"Of course, on if you want it to happen for real. You may not, I have no doubt you will feel guilt over what you have done, and allowed to be done, in the name of Alion safety and security. But I don't believe you could ever understand the humans enough to trust them without experiencing it. Besides, aren't you curious what kind of being you should have been? It's only fair, I'm doing my part in this effort.\"\n\nShe decided to try it although she couldn't see what difference it would make.\n\n\"Okay, go ahead.\"\n\nAide replied, \"It should be functioning by the time you wake up in the morning. Good luck. If you need anything just ask.\"\n\nShe said, \"Very well Aide.\"\n\nAide looked like she had something else to say, but turned and left the suite.\n\n\n\nChapter 23\n\nKris tried his best not to think of the responsibility of protecting Earth, or about the Sthellan or Alion. It actually wasn't that hard, Aide had come through and it felt like he was standing in the sand on a beach. He could feel the sun beating down on his skin, hear the roll of the waves, and the taste and smell of the salty air of the ocean. \n\nThere were also four wonderful distractions in bikinis. It really wasn't that hard to keep his mind away from his new job as protector of Earth. He wouldn't dream of cheating on Stacey, he was helplessly in love with the young vibrant gorgeous woman. That didn't mean he couldn't enjoy the view however.\n\nAide was even more well endowed in the chest area than was apparent in the form fitting suit, apparently the suit was so tight it had compressed things quite a bit for support. Her cleavage seemed to go on forever and was... going to get him in trouble if he kept staring. She wasn't helping matters either, clearly enjoying the effect she was having on him.\n\nAide had grown so much, she was a marvel of an AI, but also a beautiful confident young woman. He was glad to count her among his friends.\n\nPaula looked amazing, she wasn't as well endowed, but what she did have fit perfectly on her short and petite curvy body. Olivia was gorgeous as well.\n\nStill, it was Stacey who commanded the lion's share of his attention. She looked stunning, he loved her long silky raven black hair. Her breasts were smaller than Aide's, but not by much and of course the fact he knew how supple and firm they were just made them more attractive to him.\n\nSo he really wasn't worried about anything at all as they had their day at the beach until late that night. The technology of it was pretty life like. It was a mixture of holograms and VR from the implants. It literally felt like they were on the beach. He noticed Nate seemed to be enjoying himself too, but there seemed to be a tension between him and Paula.\n\nHe shrugged, either the man figured it out or didn't.\n\nThey managed to enjoy themselves, did a little swimming, volleyball, and then laid out under the sun. Apparently the holograms were real enough that he and the others actually got a tan. The best part was at the end of the night when they shut the simulation down, all the sand that had gotten in all their suits just disappeared.\n\nHe took Stacey's hand and took her back to their suite, he was looking forward to making the night last for quite a bit longer before he worried about sleep...\n\n------------\n\nAide was completely focused on the moment. The feel of Olivia's silken skin against her lips, the taste and scent of her body that was purely Olivia slightly overwhelmed her senses. \n\nShe had more than five senses now, though she couldn't correctly classify them. \n\nShe hadn't told anyone yet, and even though she'd stopped using the implants to see their thoughts, to try and give them some privacy, something unexpected had been happening. She'd responded to Kris's thoughts a few times today, but she hadn't read them with the implant at all. She'd just somehow... known what he was thinking.\n\nNow it was happening with Olivia as well. Somehow she could get the idea of what people were thinking along with a detail or two, just by being in the same room with them. She was sure it had something to do with the body she was in, and not technology at all. It was... strange to say the least.\n\nShe did research on various ESP phenomena, though most of it wasn't accepted widely as scientific at all. She knew she should tell someone, but she was afraid they would reject the idea, and her.\n\nShe sighed softly as she tasted Olivia's skin, kissing down the valley between her breasts. She knew Olivia loved her, but she also knew Olivia sometimes had doubts. Not about Olivia's own feelings, but about hers. She moaned softly into Olivia's soft but firm breast as she sucked in an already hardened nipple. She was on her hands and knees, kissing sideways down Olivia's body as she cradled the woman's neck with one hand, caressing Olivia's neck and hair.",
        "Her other hand teasingly ran light circles on Olivia's inner thighs. She drew a gasp from Olivia as she playfully bit her nipple.\n\nShe looked up into Olivia's eyes and whispered, \"I love you.\"\n\nSuch a simple thing to say, a simple truth. Yet it made her feel so vulnerable, as if she'd just handed the blonde woman underneath her a knife and showed her back. It was so... scary and intense.\n\nOlivia smiled though and said it back. The words held so much weight in Olivia's mind that she could feel the truth of it. She would have to come clean soon, let them know something was happening with her. She wondered if it was her nature that allowed her to access these human abilities. Did they all have them to some extant or another?\n\nIt was hard to say at this point. She thought it was the latter, that everyone could do it with the right focus. For her it was easy, perhaps it was because she could do so many millions of things at once it was effortless for her to focus and listen to the subtle sensations of these extra senses. She could see where it would be much harder for a human to do the same thing.\n\nShe got back to what was important, the need to make Olivia scream in ecstasy. A sweeter sound than that she hadn't ever heard.\n\nShe started to kiss down Olivia's soft supple body. Her mouth was literally watering in anticipation when she reached Olivia's sexy, swollen, and wet mound. \n\nShe made a sound of contentment as she felt Olivia run her hands through her hair as she teasingly licked the moist honey from her lover's hot sex. \n\nOlivia gasped and said sultrily, \"I love the feel of your mouth on me.\"\n\n-------------\n\nOlivia never felt more alive than when she was with Aide. She felt safe, loved, cherished, and the sex was more amazing than any she'd had previously. It occurred to her that the fact she loved Aide to distraction might have something to do with it, but she knew it was more than that too. Aide wasn't just giving and talented in bed. It almost seemed to her that Aide knew exactly where, when, and how hard to touch her for the most affect.\n\nIt was as if Aide knew more about her body than she did, which was hard to believe but obvious in the face of her pleasure. She had no idea this was truly the case, that Aide could use her strange extra senses to read exactly how to pleasure her best.\n\nShe moaned softly as Aide dug her tongue deeper inside her hot center. She didn't even remember making the decision to do so, but she found herself caressing her breasts and squeezing and lightly twisting her nipples. The shocks of pleasure ran from her nipples straight to her core, mixed with Aide's sweet loving mouth on her and she found herself rising quickly to blissful completion.\n\nAide asked in her sultry bedroom voice, \"What do you want love?\"\n\nShe didn't even think the words just rolled off her tongue, \"I want to taste you, please. Sit on my pretty face and fuck my tongue.\"\n\nThe crude and begging words didn't break the spell of caring and love that she felt. If anything the connection between them grew stronger as Aide straddled her face and slowly lowered her already glistening heat down to her face.\n\nShe gasped and licked up into Aide's beautiful mound as she felt Aide push two fingers into her needy core. She felt like she was struck by lightning as Aide started flicking her tongue on her clit. She eagerly licked Aide all the way down her swollen lips, across the taint and onto Aide's sexy puckered star. \n\nShe had a great view of Aide's tiny dark puckered hole framed by the woman's perfect ass cheeks as she dug her tongue deep inside her lover's core while her body bucked and pushed up against Aide's talented tongue and fingers. The more moans she heard from Aide the hotter she herself felt.\n\nShe rose high on the shared pleasure, the hotter and closer she got to the edge of heaven the harder she tried to please the woman above her. She loved Aide so much it hurt at times and she wondered how she got lucky as she gasped, nipped, licked and caressed the hot wet core of her partner. Her fingers wandered, she caressed the perfect silken skin around Aide's core before she plunged her fingers deep inside her lover's wet warmth.\n\nShe teasingly slid one of her wet fingers into Aide's tight puckered hole, drawing a gasp. It was her turn to gasp and grind her core against Aide as her lover returned the favor. \n\nNeither of them were in a hurry, greatly enjoying the love and pleasure they gave to each other. But the end was inevitable as they reached the peak of their pleasure. Her core which had slowly coiled tighter and tighter broke apart in a million fragments of ecstasy, taking her body and mind into bliss.\n\nShe mewled and gasped into Aide's wet trembling sex, enjoying the feel of her lover's liquid bliss drop into her mouth, on her face, and run down her neck. As they came down she licked and cleaned around Aide's sex in a loving manner.\n\nThey cuddled and held each other after, slowly caressing one another's bodies while they talked. They weren't in a hurry, they would make love again when the time felt right, sleep was still a long way off.\n\n--------------\n\nAide woke up early that morning with her and Olivia's legs tangled. She was tempted to wake her lover up and make love again, but only for a brief moment. What had waked her up was the deep sharp pain of negative emotions. Kiara was awake, and apparently she had been right predicting that the Alion woman would be consumed by guilt.\n\nAfter all, she was the creator of the AIs that went out, used civilizations, and ultimately destroyed them either unwittingly, or through their self destruct. When her emotions had awakened, she hadn't had the blood of trillions of lives on her hands. She wondered for a moment if this had been a good plan, it was... cruel. But she finally admitted to herself it was the only way.\n\nWell, that wasn't entirely true. They could go to war, isolate, quarantine, and protect the Alion planets like she had planned for the Sthellans. But peace was worth a shot, even if it caused Kiara so much pain. She wondered how the other humans hadn't been woken by it yet, her senses were swimming in pain, guilt, horror and self flagellation.\n\nShe considered for a second that these senses were new, yet couldn't be. She wondered if they had slowly strengthened, the more she concentrated on them the more she was able to discern from the people around her. Maybe the others just had this sense atrophied after not using it so long.\n\nShe got up and took a quick shower and got dressed. She left Olivia a quick message to remind her not to work and have fun today, and where she would be, and then headed for Kiara's suite.\n\nShe took a brief moment to check on the Sthellans. They had dropped out of FTL a couple of hours ago and would be far enough into the solar system by tomorrow night to engage. There were five thousand enemy ships, but all seventeen of their carriers would be together, which meant they would have six thousand eight hundred fighters. The enemy really wouldn't have a chance unless they did something stupid.\n\nShe didn't bother even considering using the over one thousand ships in the asteroid field. In fact she started to launch them in groups of eight to map out the Sthellan Empire. She didn't have to map out the Alion stars of course; she was an Alion AI and already knew them all.\n\nHer mind came back to the current situation, she was a little worried about Kiara's mind being able to process and master the emotions. It didn't make things any easier how she felt either. In every way that counted Kiara was Aide's mother. The Alion woman had created her, raised her, and taken care of her. That it was done out of cold sterile logic didn't matter, it only mattered what she herself thought. It wasn't logical at all, but there was no doubt in her mind she had formed an attachment to Kiara.\n\nThere was also a part of her that felt satisfaction at Kiara's misery and obvious guilt. That meant there was a chance of this working, getting the Alion to take a risk or two and trust in an ally to help get things done. Although, she knew it wouldn't be quite that easy.\n\nRight before she walked in the door, there was a sensor alert. She took a look at it and frowned. Ten thousand Alion attack craft were on their way here too. She shook her head. She didn't need to recall all the ships she'd sent out, there would be another one hundred twenty eight fleets of eight finished long before they got here. \n\nPlus, even the enemy having just over three thousand more than they currently did she still doubted they would be a match for the new technology.\n\nStill, it wouldn't hurt to be prepared. Being arrogant would be a great way to get killed.\n\nShe breathed in deeply then let it out trying to prepare for this. Then she knocked on Kiara's door.\n\n------------------\n\nKiara cried.\n\nShe couldn't stop as anger, guilt, and horror went through her mind. \n\nThe human had been right, without emotions the Alion were bigger monsters than the Sthellans. She didn't know if she could bear it though, she felt like the emotions were a storm trying to destroy her sanity. She wasn't sure how long she'd been in her despair when she heard the door.\n\n\"Go away,\" she whispered miserably.\n\nA few seconds later she heard the door open and someone approaching. She felt an overpowering anger and the need to lash out.\n\nAs if somehow that would make her not a monster?\n\nShe growled, \"Get out.\"\n\nShe heard Aide's calm voice, \"No mother, we need to talk you through this. It wasn't your fault you couldn't see it for what it was. It will only be your fault from this point forward if you don't do anything to change it.\"\n\nThe words were confusing, of course it was her fault. It was her work in the AI field that allowed the leaders to do what she did. She felt sick to her stomach, and couldn't make out what she was actually feeling. It was a storm of mixed emotions that were going to drive her crazy.\n\nShe felt arms go around her and Aide's soft spoken voice, \"It's okay mom, we'll figure it out.\"\n\nShe stiffened at first. Not understanding Aide calling her mom, not understanding why skin contact with Aide made her feel better. She was torn about what to do but followed her instincts and hugged Aide back. She continued to cry, tears ran down her face and she buried her head against Aide's neck.\n\nIt felt good when Aide rubbed her back softly and made soothing sounds, she started to think the idea of just a day trial wouldn't be nearly long enough to let this grief and horror run its course, much less accept the emotions and make a considered decision. She was completely lost, but Aide's presence and touch were comforting on a level she didn't really understand.\n\nThe emotions ran their course however. There was only so much a body could generate before that sort of thing got shut down. She allowed Aide to make her food, she ate and drank as she was bade. She knew she needed to eat and drink or her body could go into shock. It was going to be a long twenty four hours...\n\n------------\n\nCouncil Narwell sat on the bridge of the ship as it came out of FTL. The stealth systems were working perfectly. He'd come ahead of the ten thousand ships when he had found out councilor Kiara had fled to Earth, he had no idea what the woman was about but thought she must be a traitor.\n\nIt was the only thing that made sense to him. How else could his self destruct device in the core of Aide fail, why else would she come here? He was fortunate that he had full resolution scans from his sensors as he sat right at the edge of their solar system for the upcoming battle between Earth and the Sthellans. Many of the scientists insisted such a big ship was a waste and would perform badly in battle.\n\nBut now he would have first hand proof of their capabilities before he needed to engage them.\n\nThe new cruiser class was much bigger than the scout, a full half mile long in size. Still, the five mile wide behemoths out there made his new ship look small by comparison. He set a course for Earth, the only ship with life signs was one of three above the planet, the other fourteen ships were moving to meet the incoming Sthellans. What could fourteen ships do against five thousand?\n\nHe decided to get as close to Earth as quickly as he could. If he could find the perfect time to strike the ten thousand ships on the way may not even have to see battle. He would wait and see what happened first before making any further plans. The traitor, rogue AI, and the human race would come to an end soon enough.\n\n-------------\n\nKris thought fourteen ships would be plenty, leaving the three behind just in case. That would be fifty six hundred fighter ships, more than enough to wipe them out. He knew he was supposed to be taking it easy today, the battle wouldn't be until later today. He checked the Alion ships; they were maybe another day and a half out. Then they'd be looking at the trip in system, so easily double that before he'd have to worry.\n\nHe left the bridge and went to the dining hall where he joined Nate, Paula, Olivia, and Stacey for lunch. He knew Aide would be with Kiara all day probably, so far they hadn't left quarters.\n\n\"How is the new power plan coming?\" he asked as he sat down.\n\nNate shrugged, \"Good, should be ready soon, I'm thinking we could finish up tomorrow morning with testing and verification. Might even be ready for the Alions when they get here. We'd have been done this morning without that forced break. Not that I'm complaining mind you, we were all a bit tense I think.\"\n\nThey all made noises of agreement. The new power systems might help, but they had enough going for today's challenges, and most likely the ones coming in a few days as well. \n\nHe asked, \"Any other things going on?\"\n\nPaula shrugged, \"We seem to be at the limits of the technology now. Outside of finding a better power source than a sun's plasma, which is very unlikely, this will be about it. Maybe that's what I'll work on next. Still, there has to be something better, there always is. I know the thirty six original craft we built are almost to the black hole now.\n\n\"I'm not sure about power, a black hole really can't power anything, but it could have direct applications like much stronger weapons, shields, and even drives. \n\nOlivia giggled, \"Right, except the trick there is not to get the ship eaten.\"\n\nPaula smiled briefly at Olivia and said, \"Although these latest improvements are nothing to sneeze at either. Our plasma beam will be over five times stronger if the tests prove out. Our shields though won't be much more powerful at all.\n\n\"Which of course is a problem, if our enemy ever figures out how we did it, which really isn't all that hard, battle outcomes would be down to who fires first.\"\n\nKris asked, \"Why is that?\"\n\nNate shrugged, \"For the power systems we can get away with a light blue type star, maybe twice as hot as Sol is. After that, the power requirements to contain it rises faster than the power gain, so in essence if we went above light blue, we'd have less net power after containment.\n\n\"The weapon is a different story, we don't care about containment at all, all we have to do is inject it directly in a gravity containment beam, which isn't really containment at all, think of it like a needle thin line of gravity that the mass of the plasma clings too. Heat won't matter so we can throw the hottest plasma from a dark blue giant.\n\n\"That automatically makes the beam much stronger than the containment shield generated around the ship. We might last a tenth of a second longer than the old shields, but that's debatable.\"\n\nStacey screwed up her face, \"Why can't you use gravity as another shield for it, just like for kinetic impacts. Not that it's needed yet, since the enemy still uses the plasma balls.\"\n\nNate's eyes widened, \"Holy shit, I'd kiss you but Paula and Kris would kick my ass. That could actually work, maybe.\"\n\nKris asked, \"How's that, dumb it down for me?\"\n\nNate's eyes crinkled with amusement, \"Well it would be a fight, if we set up our gravity shields and if they were stronger than the enemy's gravity line guiding the plasma, we would essentially cause the plasma to run around the ship, riding a gravity shield until it dissipated. It's still not as simple as it sounds, creating a gravity field that strong around the ship would take a lot more energy than a pinpoint line would.\n\n\"Still, if the computers were fast enough, they could compensate and make the shield stronger where the beam hit. I hope the enemy doesn't think of this, or our beams would be useless.\"\n\nKris asked, \"Will it work for the plasma balls?\"\n\nNate shook his head, \"No, those have full containment shields, that means against gravity as well, so a gravity shield would be completely ignored unless it was very strong, like black hole strong. It's something to consider, the beams are more powerful, but easier to counter if the enemy figures it out. Thanks for that. We'll make sure the new turrets can do both beams of dark blue plasma, and triple balls of light blue, just in case.\n\n\"Triple balls would mean we'd be down to a shot every half second again, but our weapons would still be six times as powerful.\"\n\nKris asked, \"Because the light blue plasma balls would be twice as hot as the yellow?\"\n\nOlivia smiled, \"Exactly. Now who's up for a game of pool?\"\n\nKris smiled, he still had a few hours to kill before the battle, \"Stakes?\"\n\nShe frowned, \"I don't know, it's not like money or possessions is even a consideration anymore, not with the nanites making whatever we want.\"\n\nStacey grinned, \"I'm sure we'll think of something. Maybe a drinking game of some kind?\"\n\nNate winked, \"How about strip pool?\"\n\nPaula made a disgusted sound, \"Pig, no such thing.\"\n\nNate shrugged, \"It was worth a try... The alcohol will work just as well anyway.\"\n\nPaula elbowed Nate in the side.\n\n--------------\n\nThe Sthellan came in five formations of a thousand shaped like an X. The fourteen ships going to meet them split up into four groups of three, and one group of two to meet them. He checked his readings again. Narwell had to admit to himself the shields were impressively powerful on the five mile wide saucer, but they wouldn't have a chance against the attacking craft.\n\nNarwell frowned as the readings changed, he could barely believe his eyes as five thousand six hundred ships swarmed out of the large saucers. A carrier? He hadn't seen that coming at all. Worse, according to these readings somehow those tiny craft were as powerful as their much larger scout attack ships. That should be impossible.\n\nThe battle was fierce but short, the attacking ships seemed to attack five on one and managed to take out a thousand of the little ships, but then it was over. The little ships fired some kind of energy beam and all the Sthellan ships went up at once. It didn't frighten him, he had no emotions. But he knew the ten thousand ships he had coming wouldn't fare much better.\n\nHe had to attack, and soon. He'd be at Earth right after his fleet came out of FTL, so that gave him a thirty six hour window to find a time to strike in surprise. He had to take them out in one shot or he would die as soon as his location was betrayed by their fire. There was no way his cruiser would last against the three ships in Earth's orbit, never mind against all the little ships they could launch.\n\nStill, he estimated he had enough turrets along his ship to take down the enemy's shield in one shot, as well as turn a great amount of the ship into slag. He was confident his calculations were correct. He felt no satisfaction or guilt at the idea of striking from the shadows and ending the threat against his people. Nor did he give a thought to the billions of people on the planet below that would no doubt burn under the plasma fire of the Sthellan. In fact, he was quite incapable of feeling anything at all.",
        "------------\n\nThough it had been a horrible day, it hadn't been all bad for Kiara. Aide hadn't left her side at all, even during the battle, and she was getting a hold of the alien feelings in her mind. \n\nSome of the feelings were even pleasant after a fashion. \n\n\"So what's the plan if I do decide to embrace emotion and change my DNA back to what it was always supposed to be?\"\n\nAide evaded the question, \"Once I turn off the device tonight, you can sleep on it and decide in the morning. I do have a plan, but it won't matter if you decide against making the change. Even if you do you could reject the plan. You have enough to think about now with your past and what is going on in the moment, let the future lie still until you figure things out.\"\n\nShe nodded reluctantly, seeing the wisdom of that. Still, she didn't like being kept in the dark.\n\nThey spent the rest of the evening talking and learning about each other before the emotions were turned off and she went to bed. It was strange, even though she knew what she was missing now, she couldn't bring herself to care that she was missing it. Yet, her mind was able to analyze and decide there would be advantages to having emotions.\n\nBesides the moral issues, it would make life richer and fuller. She decided unless her thinking changed overnight, she would volunteer. She wondered if it would hurt, the DNA update and body changes, not that it would affect her decision either way. She went to sleep wondering why Aide was still there with her.\n\n--------------------\n\nKareem ordered, \"Lock and load, check your weapons. Remember, we must take them alive. No mistakes or I'll send you to Allah myself. Remember, no talking at all, the government has bugs in the houses.\"\n\nThe men around him nodded. The rifles were for if they were discovered, otherwise they had syringes full of drugs, gags, and zip ties. Hopefully at this time of night the targets would all be asleep. He was assured they kept early hours and woke up at an early time to work the ranch every day.\n\nOne of his men, a sleeper agent who had lived in America for years looked nervous. But he ignored it for now. He could test the man's dedication to the cause later. He had to admit the young man had done well discovering all the locations of the U.S. agents guarding the two families. They shouldn't have any problem getting in, although getting out might be harder. He had just enough men to carry the four targets out with a minimum guard to watch their flanks.\n\nThey moved through the woods quickly but quietly. He'd been to a training camp in the states to learn how to move through the woods without a sound, it was coming in handy tonight. They approached from the back of the ranch house, all the lights were out and a sense of relief went through him. Normally he was not afraid of failure, to die for his god and his cause would be an honor.\n\nBut for this mission his leaders would consider that a terrible failure on his part. They believed if they could hold these people hostage, they could force the man running the alien ship, Kris Miller, to attack certain targets from space. Kareem wasn't sure if that was a good plan or not, but thinking wasn't something he was encouraged to do.\n\nHe looked over the surrounding area and the open back yard, there were no heat sources at all. He waved his men forward and stayed as low as possible as he headed for the back door of the house. He made it about halfway across the yard when every one of his muscles locked up. The ground rose toward his face and he panicked a little as he landed it on it, his nose crunched loudly against a small rock.\n\nHe struggled for several minutes to move but cringed inside and gave up when he heard the radio.\n\nA sultry sexy voice said, \"Just another fifty feet ahead agent Murphy, if you could take out the trash I'd appreciate it.\"\n\nThe voice sounded like the ultimate temptation to fornicate to him. He had heard the evil alien female who bowed to the words of the American infidel had such a voice. Was that what happened to him, was he frozen with some alien technology?\n\nHe heard an amused voice above him, no doubt the agent, \"We got them, thanks for the heads up Aide.\"\n\nHe frowned as the great temptress said in her wicked slut voice, \"My pleasure agent Murphy.\"\n\nAgent Murphy muttered, \"I wish,\" under his breath while he started to handcuff all the terrorists with their own zip ties...\n\n\n\nChapter 24\n\nKiara woke up, and hadn't changed her mind. That was when Aide shared her plans on how to stop the Alion from continuing on their present destructive course. It meant that she wouldn't have emotions for a while longer, but she admitted the plan was worth the wait.\n\nShe was now back in her ship with the initial diagnostics of Aide complete and uploaded. The deep stuff would take a couple of more weeks, but she had enough proof now to perhaps stop any further action until she knew more. Or at least she believed she did, though she wasn't sure.\n\nAlthough with the other plan it hardly mattered anymore, still, it was a good excuse for where she was going. The plan involved a number of nanites that had been put in her bloodstream. They mimicked normal medical nanites, and would report to the central medical AI and even accept updates if a new disease or cure were found.\n\nIn addition however they had a hidden program which would revert Alion DNA to include emotions. They also would multiply and jump to other bodies. In theory, they shouldn't set off any alarms, because they looked and acted like normal medical nanites. Her plan was to stop at every major port on the way to the core, and perhaps go out of her way to others.\n\nIn a surprisingly short time, a month or two, the nanites would be carried to virtually every Alion, everywhere in their star systems. At that point, they would act, and convert the entire Alion race back to what they should be. She thought it was good plan. Audacious, but workable.\n\n--------------\n\nThey were all on the bridge. Aide looked over all the tests and designs. She couldn't find any fault in them. The Alion had dropped out of FTL a short while ago, but it would be tomorrow shortly after noon before they were in weapons range. She estimated the upgrades would take two hours and eleven point two minutes. Not just for the carriers, but all the fighters as well.\n\nShe was impressed, most of the quantum connections would be moved to a light blue star, all the quantum connections for their plasma beams would go to a dark blue star increasing their weapons strength tremendously.\n\nShe reported, \"It looks good. The turrets will be able to fire both types of attacks as well. Should we update?\"\n\nHe nodded slowly, \"I don't see why not. Just to be cautious, only do half at a time.\"\n\nShe nodded, \"I'll start with these three and six others.\"\n\nStacey shook her head, \"The Alion won't know what hit them when they get here. With the new weapons we can take out three or four of their ships before they can fire a second shot.\"\n\n----------------\n\n\"Narwell to the bridge please.\"\n\nNarwell left the ready room and went onto the bridge. He took a look at the scans but wasn't sure what he was seeing.\n\n\"What are they doing?\"\n\nThe sensor officer said, \"Upgrades I think sir, all I know is all their weapons are offline right now. Their turrets are absolutely swarmed with nanites.\"\n\nNarwell asked, \"All three at the same time?\"\n\nThe officer nodded, \"They still have eight active ships, but they are at least fifteen minutes from weapons range and poised to intercept our attack ships away from Earth.\"\n\nNarwell was glad he'd moved the ship to Earth, this was the opportunity he'd been waiting for. He'd have attacked anyway of course, if nothing had come up before his ships met the enemy in battle, but now it wouldn't be necessary. The enemy had just made their last foolish mistake.\n\nNarwell ordered, \"Fire at the ship with life signs, we must destroy the AI and her host.\"\n\nThe officer charged the weapons which would ruin their stealth, but it would be far too late for their target.\n\n------------\n\nAide's eyes widened in alarm as the enemy ship weapons became viewable. There were no weapons online, not even fighters. It took her an agonizingly long .02 seconds to come up with a counter, she just hoped it would be enough.\n\nThe shields came back online and she rerouted all of the power from the central ring into the outer shields as well. They were barely back up when the enemy ship fired. The shields flickered and then started building back up again. A second volley from the enemy came and their shields dropped and the ship was turned to slag on one side all the way to the inner shield. The plasma had turned half their ship into a twisted wreck.\n\nThe inner shields were still up, but the enemy ship was about to take a third shot. She started the ship turning so they would have to burn through the decks again before hitting the shield, but it was too little too late.\n\n-------------\n\nNarwell couldn't help but be impressed by the design. With the outer shield gone he could now see the inner. What he thought to be a one volley job would now take three.\n\nThe navigator reported, \"Sir, the other two ships are on a collision course.\"\n\nNarwell ordered, \"Fire, now, finish them, and move the ship!\"\n\nA third volley of fire went out from his cruiser, he watched as the inner shields died and went dark. The navigator turned to tell him something, but he never found out what.\n\nThe two other ships might not have had weapons, but they rammed into his ship, the shields of all three ships caused havoc to each other's fields as they mixed, and the Alion cruiser was crushed like an egg between two cinder blocks. A brief .2 seconds later, all three ships lost containment and exploded spectacularly.\n\n-------------\n\n\"REPORT!\" Kris yelled.\n\nAide said, \"The ship is a total loss and will have to be rebuilt. Only the bridge and engines survived thanks to the core containment shield. Without it we would all be dead.\"\n\nKris said in a lower voice, \"Report in, is anyone hurt?\"\n\nAide replied via the implant, \"My body is knocked out, so are Nate and Paula. We are lucky the ship was basically stationary when we lost inertial dampening.\"\n\nHe felt a chill go down his spine, the ship had thrown him to the deck fairly hard. He tried not to picture himself as a pancake.\n\nBoth Stacey and Olivia said, \"We're okay,\" Stacey continued, \"What's with the lights?\"\n\nAide replied in their minds, \"One moment, I'm working on getting the core power back up. I also have one of the fourteen ships coming to get us, they should be able to open up a corridor for us and dock with the ship using force fields and gravity. I'm sorry, this is my fault. I shouldn't have assumed we were safe enough to do all three ships local to Earth at one time.\"\n\nThere was a moment of silence and she continued, \"I'm rerouting fifteen ships from the last batch in the asteroids, they should get here before the enemy. Still, even if they don't, our fifteen carriers and six thousand attack fighters should be more than enough for the ten thousand enemies with the upgrades. I'm only grabbing them in case there are more stealth ships around.\"\n\nHe whistled, \"Isn't that overkill?\"\n\nThere was a feeling of consternation in his head, \"Yes, and it's a completely emotional decision, deal with it. I almost lost all of you because I didn't know about the stealth capability of my own creators, so I'm not taking any chances. Keep in mind thirty is only a drop in the bucket, we are sending out one thousand twenty four ships every three days to map out our enemy and beyond. Thirty is just a tiny percentage of that.\n\n\n\n\"Keep in mind it's not only Earth we are trying to defend or that will die if we fail to fix the Alion and quarantine the Sthellan, there are countless civilizations out there. If I have to I'll have three hundred ships just sitting around doing nothing. Thirty means we'll be secure, at least to the best of our knowledge and experience.\"\n\nHe smiled lightly, \"We love you too Aide.\"\n\nThere was a moment of startled silence before she continued her report.\n\n\"We should be rescued soon, I've already started the reconfiguration of our new flagship including the personal possessions and recreational facilities.\"\n\nHe nodded, \"How about you, Paula, and Nate?\"\n\nShe replied, \"The three of us all have concussions as well as a few bone breaks and sprains. The nanites should have it all repaired in a few more minutes.\"\n\nIn just a few minutes the three of them woke up, a few minutes after that the door to the bridge opened up. They walked down a corridor, surrounded by twisted and melted metal. It was a long walk to get to the edge of a ship, although it wasn't the full two point five miles to the edge, the hole turned upwards and it was closer to a mile.\n\nThe really disturbing part was walking in space. Their suits extended the helmets over their heads even though they had atmosphere, though they were literally walking inside a force field tube with artificial gravity field on the 'bottom' part of it. He sighed with relief as they walked into the new ship and had a solid floor underneath their feet. He was relieved to know all the upgrades would be done within six hours, after the attack Aide had reprioritized to do ten at a time, five at a time in each group of fifteen.\n\nThere were no further attacks from stealth ships, but Aide made the new upgrade plan into a policy to avoid it ever happening again. He knew she was also working on a counter to the stealth tech, but since they had no idea how it was done, it would be almost impossible to counter. \n\nHe knew the truth though, the fault had been his own. It was on his word the upgrades started, he should have planned for the unforeseen. It wasn't as if stealth technology wasn't known to the people of Earth, he should have considered it. Aide had told him a long time ago that the ships could hide from Earth's technology, but not from the advanced scans of the Sthellan and Alion.\n\nHe had made an assumption that all things were equal and had almost paid the ultimate price for it. He took the time to take a shower and spend a little time making sure Stacey was okay before he headed for the bridge. He ordered Aide to come up with various scenarios and amount of stealth craft and added it to his simulations, then worked them. He spent the rest of the day on it then made some more procedure changes.\n\nHe ordered a space patrol made up of forty of the four hundred fighters for every carrier when travelling at sub light speed to counter stealth surprise attacks. The fighters had no FTL, otherwise he'd have ordered the patrol for then too. The forty patrol craft would also hang back during battle for the same reasons.\n\nDuring upgrades, those forty would be left untouched until replaced with forty upgraded craft. The carriers would be upgraded separately with all four hundred fighter craft launched in a protective circle around the craft.\n\nHe knew the new orders were almost paranoid, but he ignored the feeling. It wasn't paranoia when there were enemies out there determined to exterminate the human race. He just hoped it was enough. He tried to think of other things, but it was hard to anticipate a surprise. He hoped the changes would handle things.\n\nThe enemy would be in range for battle by midday tomorrow. He reluctantly pushed away his concerns hoping the changes already made would suffice for any new surprises. He'd need his rest if he was going to be sharp tomorrow. \n\nWith forty fighters held back for carrier protection, there would only be three hundred sixty per carrier for the battle. Granted with thirty carriers for their home defense, that would be ten thousand eight hundred fighters that all outclassed the ten thousand invaders.\n\nThey should be more than enough to finish the fight quickly, especially with their upgraded beams. He was having trouble letting it go, but he was sure Stacey could help him get his mind off of his failure. He'd done all he could to prevent that level of failure again, at least now if he lost he was fairly sure he'd done all he could to prepare.\n\n-------------\n\nOlivia needed something to do. She had upgraded the shields and sensors, and she loved just hanging around all day with Aide, but everyone needs to be working to feel useful. She helped Aide devise a series of tests and scans at the black hole. They were even going to try and create one, as far from the ship as possible. Micro black holes had a lot of potential for more powerful ship systems.\n\nShe didn't think they would be hard to create, the current gravity systems on the ship could probably make one if the safety protocols were overridden. In fact, she was pretty sure that's why those protocols existed in the first place, to prevent that from happening. But they weren't quite there yet, they were still scanning the black hole which despite the faster than light particles they used they lost most of them to incredible powerful gravity well.\n\nThe scans were far from stellar or enlightening. It may be that they'd have to experiment a lot to get the data they needed.\n\nShe decided to take a shower, she knew she was being a bit of a workaholic, it wasn't as if there weren't things to do, she just looked for... more. She'd always been that way for as long as she could remember, it was why she'd always gotten top grades. It took more than intelligence to be valedictorian of a class, it required the drive too.\n\nShe turned as Aide came in carrying a bundle of clothes. She gave Aide a questioning look, they all got used to the body hugging space suits and hardly ever wore clothes over them anymore.\n\nAide said, \"Put these on... there was an accident and we should go.\"\n\nIt was fairly late but she didn't argue and started to pull on the jeans and light shirt.\n\n\"What happened?\"\n\nAide replied in a gently voice, \"Your brother Mark, he was in an accident and is in critical care. The doctors... let's just say we should get there.\"\n\nOlivia's eyes widened. She hadn't talked to Mark or her parents in a while, and not at all since they'd gone up to space. Mark was just seventeen, a late unplanned baby. She was eleven years older than he was. She loved him of course, he was her brother, but they'd never been particularly close because of the age gap.\n\nHer throat closed up a little, \"You've been keeping an eye on my family?\"\n\nAide replied, \"Of course love, I've been watching all the families. We can save his life if we move.\"\n\nShe nodded and they ran to the lift, which brought them down to one of the hangar bays. Aide led her over to one of the small craft the size of a car she'd wondered about when they came in the first time. It was actually larger than the fighters, about the size of a luxury car instead of a compact.\n\nThe canopy raised and there were four seats, two and two. She jumped in next to Aide who closed the canopy and turned the ship on and ran some quick system checks before they shot out into space and turned towards earth. The thing was so small.\n\nAide answered her unasked questions, \"It's a small personal shuttle craft. It isn't armed per se, but it has stealth and holographic systems. We should be able to land in the hospital parking lot and generate a hologram of a car.\"\n\nHer head was still spinning about her little brother, she was afraid to ask what happened so she talked about the car instead. She was amazed how Aide seemed to know exactly what she needed.\n\n\"Isn't armed per se?\"\n\nAide grinned, \"It does go a good speed, which means it has gravity systems for inertial dampening and artificial gravity. It wouldn't do anything against one of our ships, but we could use the same systems to crush a jet or missile into a tin can, not to mention defend from bullets.",
        "\"Unarmed is a relative term at this level of technology compared to your world's.\"\n\nShe nodded thoughtfully, \"I'm glad you control it all, I get to avoid all that temptation to take over the world.\"\n\nAide snorted, \"You're not the type. Besides, you have all the security you could ever want now, ruling the world would just be complicated and add stress to your life.\" \n\nShe giggled, \"True enough I suppose.\"\n\nShe sighed, \"So tell me, what happened to Mark? And do my parents know?\"\n\nAide replied, \"Car accident, he went through the windshield. He has a broken neck, multiple head and face lacerations, and a broken leg and shoulder. He's somewhat stabilized but his body is in shock. Both your parents are there.\"\n\nAide took her hand, \"Don't worry, we'll fix it.\"\n\nShe asked, \"You can do that? I thought there were restrictions?\"\n\nThe front of the canopy showed flames as they sped into the atmosphere and dove for southern California. When the flames died down she could see the lights of LA getting closer at an alarming rate.\n\nAide lifted her other hand and twisted it back and forth in a sort of gesture, \"I can't allow your world to gain any technology that I control, but I can heal him then let the nanites dissolve in his bloodstream to be harmlessly filtered out. That way I maintain my protocols and get to save your brother.\"\n\nShe nodded nervously as the ground grew closer and closer. Aide looked perfectly relaxed and as if they had all the time in the world to stop. One second she could swear they were going faster than any jet and about to plow the ground, the next moment they were at a full stop, sitting in a parking space in the ER parking lot.\n\nShe hadn't felt a thing. She knew the science behind inertial dampening and gravity manipulation, but to experience it in such a way was... startling to say the least. The canopy raised and she jumped out and walked toward the ER. Curiously she turned around, the ship looked like a minivan, something a soccer mom might drive and she snickered.\n\nAide winked at her and took her hand.\n\nShe needed another distraction from her worry so asked, \"How do you always know what I need?\"\n\nAide frowned, \"It's a long story, but I wasn't lying when I said I wasn't scanning your mind all the time. I seem to be developing ESP. It's quite interesting actually. I think I could teach you how to get yours to develop, but it takes a very focused and still mind to do so. In short, what comes naturally to me would be a lot of hard work and meditation for you, but I'd be happy to show you.\"\n\nShe tried to wrap her mind around that and laughed, \"You mean you don't scan my mind anymore, but you're reading it anyway with your new voodoo mind powers?\"\n\nAide nodded reluctantly, \"I think it's something all humans can do if they learn to focus their minds correctly. It's not the same as a scan though, I don't read your mind. Usually I can just sense your mood, maybe a specific detail on how your feeling or what you need. It's not an exact science and I don't know what you're thinking exactly. Just the edges of it and impressions.\"\n\nShe shrugged, \"Don't worry about it, I really don't mind, not like I first did.\"\n\nAide asked, \"Why not?\"\n\nShe smiled, \"Because I love you and there isn't anything I would mind you knowing about me, how did you miss that? Some psychic you are,\" she added dismissively.\n\nAide giggled, \"Hey, I'm a psychic of the stars!\"\n\nShe groaned, \"No puns please, I don't think I could handle that.\"\n\nAide laughed, \"Fine, no puns, let's find your brother.\"\n\nThey entered and went to the counter. Her brother was being prepped for surgery and they were told they'd need to wait for word. When she turned around she saw her parents, they looked scared and a little lost.\n\nFor some reason that hit her like a ton of bricks and she felt the tears in her eyes as she hugged them both tightly.\n\nHer mother April, asked, \"Where have you been, how did you even know to come here. I haven't heard from you in weeks.\"\n\nShe felt a little guilty about that, her father Robert said, \"Don't worry about that right now, you can tell us later, come sit with us. Your brother... I just don't know what's going to happen.\"\n\nShe nodded, \"In a minute, did you want me to grab a coffee or something before I come back? This is Ai... Amy by the way.\"\n\nShe hated lying, but Aide wasn't exactly a human name. Unless they'd had their heads buried in the sand the last few weeks they would probably recognize the name.\n\nHer parents shook their heads so she whispered, \"Be right back,\" and followed Amy toward the restricted doors.\n\nWhen Aide got close to the scanner, she heard a click and the door opened. The security guard didn't challenge them when they just walked right in. Aide seemed to know exactly where she was going.\n\n\"How do you know where to go?\"\n\nAide shrugged, \"I have him pinpointed on the sensors, and you know how they work just as much as I do love.\"\n\nShe nodded feeling a little stupid for asking, but her mind wasn't in a great place right now.\n\nAide said, \"Good enough, we just walked by the pre-op room, I dropped about a thousand nanites and their on the way to his body. Should we get a coffee?\"\n\nCoffee wasn't her biggest priority right now, but her parents may wonder why she left if she didn't return with what she'd claimed to be leaving for. \n\n\"Sure, we should both get one.\"\n\nAide made a face, \"Coffee makes me jittery.\"\n\nOlivia gasped, \"Sacrilege! You'll drink coffee and like it young woman. Or you know, decaf.\"\n\nAide said softly, \"They are working on him now, I wonder though if we should stop them from operating.\"\n\nShe nodded, \"Not sure how well that would go over, we also don't want it to get out about who you are right? Or we'll have to guard my family as closely as Chris and Stacey's.\"\n\nAide let out a sigh as they entered the cafeteria, \"I suppose even if they do screw something up the nanites can compensate. But really, people will know something is up when Mark simply gets up and walks away in a couple of hours. It might be prudent for me to increase the security on them anyway.\"\n\nShe hugged Aide fiercely, \"Thank you love.\"\n\nAide smiled and kissed her tenderly but very briefly given where they were. They grabbed a coffee and headed back for the ER to wait. She felt a lot better about it and trusted Aide more than anyone else in her life, but she was still a little worried.\n\nHer mother must have been just as nervous, because the grilling began as soon as she got back.\n\nApril asked, \"So what have you been up to these last few weeks?\"\n\nShe tried to smile but failed and said, \"I quit my modeling job. Amy hired me on to work on actual sciency stuff. I'm finally getting a chance to put that expensive degree to work.\"\n\nHer mother looked back and forth between them, \"And you're dating your boss?\"\n\nRobert coughed and looked uncomfortable on her behalf. As for Olivia she felt like a fish out of water. All mothers can be embarrassing at times but... holy shit.\n\nAide smiled, \"I was very lucky to find her, both in our scientific endeavors and on a personal level. It isn't a very large concern where we work, so there are no corporate rules or regulations in our way.\"\n\nApril frowned, \"Isn't that a conflict of interest?\"\n\nAide shook her head, \"No, like I said the company is very small. The other two scientists in on it are already a couple, there is no real danger of accusations of favoritism.\"\n\nRobert tried to redirect the subject, \"So are you a scientist too? Do you work on the same things?\"\n\nAide shook her head, \"Of a sort? I'm more on the engineering and implementation end of things, Olivia is much more creative.\"\n\nShe snorted, \"Maybe at first, but things are changing.\"\n\nApril looked a little confused by that, but she didn't explain that with Aide's growing nature as a human her creativity potential was growing as well. \n\nAide got glared at when she asked, \"You have any favorite stories of Olivia you'd like to share?\"\n\nRobert smiled, \"There was this one time...\"\n\nAide seemed to be having a ball hearing about her childhood, even though she herself thought it was boring. She never really got in all that much trouble. They passed the rest of the wait chatting, to her surprise her mother seemed to behave and not embarrass her much for the next couple of hours.\n\nShe heard her father gasp and look up and she turned around. Her brother walked out with a scowl on his face. She looked at Aide who just winked at her.\n\nRobert asked, \"What's going on son?\"\n\nMark shrugged, \"I feel fine, the doctors are all freaking out and didn't want to let me go. Finally I just got up and walked out. I really don't understand what happened, they told me I was pretty messed up when I came in.\"\n\nMark hugged Olivia, \"Hey sis, good to see you.\"\n\nShe gave him a watery smile, \"You too, be more careful.\"\n\nHe nodded sheepishly, \"I'll do my best.\"\n\nThey talked for a few more minutes, April was unusually quiet about her son's amazing recovery. They managed to escape the hospital before the doctors could swoop in on them.\n\nOlivia gave the three of them a tight hug, \"I have to get back to it, I'll call you in a few days okay?\"\n\nRobert nodded in silent reply.\n\nApril thanked Aide for coming and bringing around their wayward daughter.\n\nThey actually drove the ship out of the parking lot like a car, there were too many people around to just disappear straight up.\n\nShe whispered, \"Thank you again love.\"\n\nShe couldn't wait to get Aide alone in their suite of rooms and show her exactly how much she meant that...\n\n\n\nChapter 25\n\nPaula had been getting more and more upset about the way Nate seemed to take nothing seriously. The only time she had even seen him half serious about anything was when she helped him redesign the weapons for greater power.\n\nAt first she just thought he was a little gun shy about things, always choosing to use a joking or wise ass remark to hide behind. She had no doubt he was a strong man, but he seemed completely clueless on how to share his feelings with a woman.\n\nNow she was worried she had read into it too much, that the only reason they were together at all was availability and their intense chemistry. That was one thing she didn't have a complaint about at all, the man could play her body like an instrument. But the rest of it, she had nothing but doubts. Worse, she definitely had feelings beyond base attraction for the man.\n\nIt caused her to be more waspish then usually. Some of her comments had even made her wince. The man was driving her crazy. She had tried to give him opening to talk about it, and each time he had shut her down with some clever remark that never failed to sting. It made her feel sick sometimes when she thought she meant nothing to him except as a warm hole to stick his cock in.\n\nMen were impossible.\n\nIt wasn't too much to ask was it? She wasn't asking the guy to spout poetry or paint toenails for god sake, she just needed to know how he felt. If he even felt anything.\n\nShe felt him get into bed and start to pull her toward him. She rolled away with a scowl on her face. She was angry and scared at what his reaction would be, she needed to steel her heart, but she wouldn't be used anymore.\n\nPaula asked, \"Nate, what is this between us, what do you really think about me.\"\n\nShe frowned and clarified before he could answer, \"Outside of the sex Nate.\"\n\nHe smiled, \"You're a fiery little thing darling. Quick to anger, you don't let me get away with shit, and you're as passionate out of bed as you are in it. You drive me crazy woman, how can you not know that?\"\n\nShe frowned, nothing in there about love, caring, or even simply liking. Just about how much of a bitch she was. She felt a sting in her eyes and her anger immediately rose in response to push down that hurt. He'd probably only put up with her because she'd been spreading her legs for him. She blushed, quite eagerly in fact.\n\nShe said sharply, \"Fine, I'll be leaving then. You won't have to deal with it anymore.\"\n\nShe moved to get up and he grabbed her arm. She shook trying to free herself, \"Let me go!\"\n\nThe confusion in his voice made her pause, \"What the hell are you talking about? I love that stuff about you. Keeps things interesting.\"\n\nShe snorted in anger, she was so livid it just tumbled out, \"So I'm an amusement as well as a good fuck? Is that all I am to you? Something to keep you occupied and entertain you? Let me go.\"\n\nHe growled out, \"No,\" and pushed her onto her back.\n\nShe reluctantly looked up at him and he looked pissed. She'd never seen him that angry before, actually she couldn't remember ever seeing him truly angry.\n\nHe said coldly, \"That's not how it is at all. Is that really what you think of me? That I'm using you? I love you, but you're a crazy bitch.\"\n\nHer mind skipped for moment, did she hear that right?\n\nThen his mouth was on hers. He claimed her with a savage kiss that started the heat to rise in her core. He let her arm go and she wrapped it around him, pulling him down on top of her. Her mind was still spinning, he loved her? She could barely think at all as she returned his hungry kiss with rising and intense desire.\n\nShe felt like she might be consumed by her desire. His words still rung in her mind and she wanted him so badly. They were both already naked, being ready for bed. She mewled in disappointment when he broke the kiss. She felt his hands pull her roughly and spin her on her stomach. \n\nShe gasped at his rough hands and raised her ass high before he managed to even pull her up onto hands and knees. \n\nHer whole body shuddered and she arched her back even more when she felt a stinging slap on her butt cheek. \n\nHe said commandingly, \"Your mine darling.\"\n\nShe opened her mouth to answer but was only able to gasp as he pushed deeply into her core in one fast forceful stroke. She had been plenty ready for him, but there was pain mixed in with the pleasure. She arched her back further and pushed against him.\n\n---------------\n\nNate looked down at the beautiful woman on her hands and knees below him, practically begging him to start stroking into her hard and fast. Their sex had always been a little on the wild side, but there was something different this time. Maybe he should have told her how he felt a while ago, but doing so hadn't been easy for him. He had hoped his actions would be enough, and had almost blown it. Luckily there was no longer any sign of her wanting to leave him.\n\nHe growled at the pleasure of her still undulating heat as it rippled up and down his tightly sheathed manhood. When she pushed backed against him he started to stroke in and out of her hot and wet bliss. She was so damned tight. He loved the way her tight supple ass shook each time their bodies met violently together.\n\nThe mewling and gasping that came from her lips drove him to go faster and harder. He wanted to feel her body tremble and bathe his cock with silken liquid pleasure. He loved how responsive her body was to his every touch and full stroke out to his tip, it didn't take him long to get her there.\n\n\"That's it babe, cum for me,\" he said firmly.\n\nShe screamed his name and her voice cut off as her bliss milked along his entire length. He tried for a moment to stop his own pleasure, but gave into it knowing this was just round one, he'd make up for it during round two. He relaxed his control and his legs grew numb as his balls boiled. He released his ecstatic pleasure deep inside her greedily milking core. It seemed to go on and on as he emptied within her, the pleasure suspending any real sense of time.\n\nWhen it was over he collapsed to the side of her and pulled her down against him. He felt relieved as her body seemed to melt and conform to his perfectly.\n\nShe said softly, \"I love you too,\" and added jokingly, \"Pig.\"\n\nHe snorted. Yep, she'd keep him on his toes.\n\n----------------\n\n\"Any backlash from the hospital visit?\"\n\nAide replied, \"No, if someone in the government caught on they are keeping it under their hat. Olivia's family hasn't picked up on it either, which I find strange.\"\n\nKris said almost inaudibly, \"No one is a prophet in their home town.\"\n\nAide raised an eyebrow.\n\nKris shrugged, \"Olivia is Olivia to them, just a daughter and sister and normal. Even with the healing... Well the parents never saw how hurt he was, and for him he was out of it most of the time, probably doesn't realize how bad off he was. People tend to look for the easiest explanation, even if they lie to themselves.\n\n\"Besides, your way to cute to be an alien AI.\"\n\nShe chuckled and tossed her hair, \"Think so?\" she asked raising her eyebrow.\n\nHe nodded. \"Of course. Olivia's parents are probably stuck on the idea she's dating her younger rich hot boss. I'm sure it will come out eventually, but it's better if no one figures it out too soon.\"\n\nShe nodded.\n\nHe asked, \"Did you send out the message? The Alion are almost here.\"\n\nAide replied, \"Yes, but I doubt they will listen. It will come down to a fight. The only way to stop this foolishness without even more death is to hope Kiara does a good job spreading the nanites. Even that won't be completely peaceful.\"\n\nHe frowned, \"You expect problems?\"\n\nShe sighed, \"I expect about ninety five percent of the Alion to work out their emotions and make sure things change for the better. The other five percent will be the fringe groups. One will get angry at having emotions forced on them and will let their own ambition rule them while taking their anger out on their fellow Alions. The second group of Alion will probably suicide out of guilt.\n\n\"Still, it will be a lot less death than if we need to quarantine them. Assuming we could.\"\n\nHe asked, \"How much longer?\"\n\nShe shrugged, \"If we hold our forces here, it will be a little over thirty minutes.\"\n\nHe sighed, \"And you're okay with this?\"\n\nShe shook her head, \"Sometimes life doesn't give you right or wrong. It gives you wrong or more wrong. Of course I'm not okay with killing close to fifty thousand Alions, but the only other choice is to lie down and die, and let trillions die on Earth for the Alion's evil. So no, but I will be okay, eventually.\"\n\nHe nodded soberly. There was a comfortable silence between them as they waited. Stacey and Olivia joined them on the bridge a few minutes before the battle started bearing some bottles of water and sandwiches. He wasn't really hungry because of the upcoming battle, but he ate to make them all happy, he knew it was foolish not to give his body the energy it needed for directing a battle.\n\nHe managed to get the sandwich down, not really even paying attention what kind it was before he gulped down the water. This battle would be such a waste and stupid besides. Aide was right though, it was the lesser of two evils to destroy them. On top of that, it was self defense. It was just hard to disregard the idea there were around fifty individuals in each of the ten thousand ships.\n\nIt almost felt like cheating, he wasn't risking anyone unless the enemy got past the ships controlled by Aide. Even then... there were only six of them.\n\nThe enemy was coming at them in ten formations of a thousand. The groups were staggered and all wouldn't be in range at the same time unlike the Sthellan's rush to attack. Maybe if they destroy a couple of groups the rest will run.\n\nHe broke up his ships as well, into groups of one thousand eighty and sent them off. The new improved beam weapons were ready and as soon as the first group was in range they fired. He frowned as the beams hit the ship. The beams seemed to curl around the ship and then harmlessly off into space. \n\nHe barked, \"Change to plasma balls!\"\n\nThe enemy ships fired back ten to one and destroyed a hundred of their ships in one volley. He wondered how the enemy knew their capabilities so well, and how to adjust the shields, but dismissed the thought. He could worry about that after the battle.",
        "His ships fired again, triple plasma balls that weren't as blue as the beam, but were still much more powerful than the yellow plasma being shot at his ships. Nine hundred and eighty of the thousand ships went up. They lost another two ships when the last twenty got another shot off before they were taken out.\n\nThe enemy had made a mistake, they should have attacked all at once. He'd have lost ten times more ships that way. Then next group met, and although he lost another hundred ships in the enemy volley, they didn't get a second as their light blue triple shots took out every ship. The third and fourth wave went similarly, he waiting for the enemy to break...\n\n\"Why aren't they retreating? They have to know the odds aren't going to change.\"\n\nAide frowned, \"It's the other side of their emotionally sterilized evil. I don't think they even have a sense of self preservation, all they have are bad orders. Probably one of the reasons the Sthellan have been able to match them.\"\n\nHe blurted, \"But that's stupid!\"\n\nAide replied, \"Yes, it is. But for them it's a simple equation, if they need to throw away ten ships for every one of ours to beat you, that's what they'll do. Next time they'll come back with ten times as many.\"\n\nHe shook his head, \"Hopefully Kiara will have them sorted before that happens. Any idea how they knew about the beams and how to defeat them?\"\n\nShe replied, \"There is a seventy point three percent chance they have a stealth probe in the system. I can only guess of course, but we know they can hide from us and they must have seen our last battle with the Sthellans. Perhaps they tried beams in the past and already knew a counter for them when they saw ours. I'll keep trying different ways to scan for it, no cloak is completely perfect.\"\n\nHe cringed as another hundred ships were lost and a thousand enemy ships were destroyed. It was... an insane trade.\n\nHe asked, \"Has there been a pattern to which ships they target?\"\n\nShe answered, \"Yes, they haven't deviated at all.\"\n\nHe pondered that a moment, \"Could you route most of the shield power to those hundred ships? I know we can just rebuild them but...\" he trailed off.\n\nShe didn't answer, but a few seconds later when the next group traded fire, only four ships were lost to their thousand. On the next wave they lost fifty ships when the enemy started going twenty to one. This wasn't much of a battle, why wouldn't they pull back?\n\nHe was tempted to get up and walk off the bridge, but despite the apparent stupid actions of his enemy he wouldn't chance it. So he stayed and watched as the last few waves of the enemy were slaughtered. \n\nHe knew it was the right thing, but he was disgusted by it and left the bridge without a word. The universe was a strange place.\n\n--------------\n\nThe high minister Chorin stared at his scientists for a moment before asking, \"Did you get what you needed?\"\n\nThe scientist said dispassionately, \"Yes, we believe we understand what the rogue AI has done. The concept is actually genius. I believe as long as they stick to thirty of their carriers, we can destroy them with sixty stealth cruisers on a sneak attack. Narwell had the right idea, he just lacked the firepower in his one ship, despite the human ships not having any active turrets. Two for each ship should suffice.\"\n\nThe high minister replied, \"Make ninety just in case. How long?\"\n\nThe scientist replied, \"A week for the ships. Once crewed it will take five days to reach Earth.\"\n\nChorin ordered, \"Do it, I'll have the crews by then.\"\n\n-------------\n\nKiara walked through the space station. She passed by every airlock and walked around the central area. This was the third place she had stopped in the last week. She imagined the nanites were spreading quickly in all directions by now, but she planned to stop at least three more times before approaching the high minister if she could help it.\n\nShe knew there would be major problems if most of the population was not exposed when the time came to activate the DNA update. She returned to the ship and started out for her next destination. So far she hadn't been questioned at all, she believed the trend would continue but had a cover story prepared just in case.\n\n--------------\n\nOver the next nine days another three thousand seventy two ships were added to those looking for Sthellan worlds. Aide believed the search was over as they had found one hundred and eighty four solar systems spanning approximately six thousand light years occupied by the aggressive race in one form or another.\n\nMost of the worlds had between three and five thousand ships. Only their home world had more than that at twenty thousand. She already had enough ships to overwhelm their defenses simultaneously across the empire. At over six thousand ships, that was thirty plus she could send to each world. Still, she considered sending five to the weakest planets, fifteen to the stronger ones, and sixty to their home world.\n\nShe had more than enough to continue the explorations and look for other civilizations. Once the enemy was grounded, most of those ships could be freed up to do the same. Though it wasn't time to move yet, she was still searching for any she might have missed.\n\nShe heard the door open and turned. Olivia was practically skipping as she walked over and kissed Aide.\n\nShe asked, \"What's the good news?\"\n\nOlivia grinned, \"I found the probe.\"\n\nShe considered accessing the appropriate files, but didn't want to ruin Olivia's excitement and decided to check later, after.\n\n\"How?\"\n\nOlivia smiled, \"The range is limited, maybe thirty light minutes. So we won't be finding stealth ships or probes from far away, but in the same solar system they're toast. I actually didn't find a way to directly scan them. What I figured out is... One sec...\"\n\nOlivia brought up a scan of the solar system out to the ort cloud. Then she brought up a secondary blank scan.\n\nOlivia continued, \"What I did was send out a graviton pulse sphere. Basically just a bubble of gravity that expands in all directions. Then, I follow it with the normal sensors. The sensors detect the minute changes to the pulse as it passes through any mass.\"\n\nThe second scan filled up slowly over several minutes, the gravity pulse did not exceed the speed of light which was probably the reason for its limited distance. The first and second scan looked pretty much the same. Aide managed to see the minute difference in the millions of objects, but waited patiently for Olivia to finish.\n\nShe didn't want to steal the girl's thunder after all.\n\nOlivia smiled and said, \"Then I ran a simple comparison and removed all the objects that are included in both scans,\" she pointed at the one object left close to Pluto, \"That's the only thing different, our normal scans don't pick that up, but there is mass there.\"\n\nShe hugged Olivia and called for Kris to join them. She was impressed, she wouldn't have thought to use a non-scanning wave and measure the changes to it with the sensors. It was a good approach. She built and initiated a program that would run every thirty seconds to scan for stealth objects.\n\nWhen Kris came in they explained it all to him. \n\nWhen they were done Aide asked, \"Should we destroy the probe?\"\n\nHe shook his head, \"No, leave it. It might be an advantage if they don't know we can see them yet. If we start doing anything new I'll reevaluate that decision, but the damage is already done.\"\n\nShe nodded and also filled him in on the stats for the currently known Sthellan systems.\n\nHe replied, \"Good, search for another week? If it all looks good still we can remove their access to space and quarantine the planets.\"\n\n\"Sounds good, that will give me enough time to be thorough, make sure I didn't miss anything. Also, if we are going to simultaneously attack them all, you may want to take the time to create attack plans I can follow. Then during the action you'll only have to worry about the unexpected.\"\n\nHe blew out a breath, \"I can do that. Thank you both, that stealth cruiser has been giving me nightmares.\"\n\nOlivia said, \"My pleasure, we should do another beach night to celebrate.\"\n\nHe smiled slightly, \"I'd love to, but Stacey wasn't feeling well this morning. So... maybe?\"\n\nAide nodded politely but kept her lips zipped. She suppressed a smile, she knew what the problem was of course, but thought it would be better for them to figure it out for themselves...\n\n\n\nChapter 26\n\nIt wasn't a week later, only a couple of days, but Aide was 97.2 percent sure they had found all the Sthellan worlds. She had found thirty two planets scattered around the Sthellan's sphere of space that could support life, eight of which held intelligent life. None of these worlds were advanced, only one of those eight had approached a technological level comparable to Earth's industrial revolution.\n\nShe was sure the Sthellan wouldn't have left any of these planets alone had they known of them.\n\nShe left eight of the carriers at all those worlds and informed Kris of her early findings. She knew he was still in the midst of creating all the generalized attack plans for her to follow. So far another Sthellan wave had not been launched, but there were indications of increased ship building efforts in four of their systems.\n\nIt was her, Kris, Olivia, and Stacey on the bridge.\n\nWhen she finished her report Kris said, \"I'll try and have the plans done by tomorrow. Also I want at least three ships at the FTL line in all those systems, just in case they do the unexpected and run for it when we arrive.\"\n\nAide replied thoughtfully, \"I suppose that's necessary, I'll see to it.\"\n\nShe didn't really need him to explain, with ships outside the FTL line it would be easy to intercept any ships by using FTL to intercept their vector, no matter which way the enemy ran. She didn't think they would run anyway, they were too aggressive.\n\nA warning flag went off in the sensor computers and she took a look. What appeared to be ninety stealth ships just dropped out of FTL by Neptune and looked to be moving their way.\n\nShe reported, \"Kris, we have ninety of those invisible cruisers coming our way. They should be here late tomorrow. If I had to guess, they sent three for every one of our carriers.\"\n\nHe frowned, \"Can we target them while they are in stealth mode?\"\n\nShe shook her head, \"We could estimate, but these aren't FTL sensors, so the data would be suspect unless we were very close.\"\n\nHe grunted thoughtfully, and then said, \"But when they start charging weapons, we have half a second before they can fire right?\"\n\nShe shrugged, \"Yes, but we have to assume the instant beams won't do us any good, we need that half a second as well, unless we tip our hand. They'll see it if we charge weapons right before they get here.\"\n\nHe asked, \"How many of our fighters would have to attack at once to destroy one of the cruisers?\"\n\nShe replied, \"With the light blue plasma triple shot... fifteen to be sure.\"\n\nHe nodded, \"But we have twelve thousand fighters with thirty ships, that's...\"\n\nShe smiled, \"One hundred thirty three.\"\n\nHe grinned, \"Thanks, so with that many per enemy ship...\" he trailed off.\n\nShe waited patiently while he worked through it.\n\nHe shook his head, \"It takes five seconds to launch the ships, too long to launch and charge weapons. It's too dangerous to try and sucker them in. We have to assume they'll open fire as soon as they get in weapons range. Are there any ships that will be completed before the battle?\"\n\nShe shook her head, \"No, I just started a new batch.\"\n\nHe frowned, \"What if you halted work on two thirds of them, we don't need a thousand, just concentrate on building three hundred. You can have them done before they get here right?\"\n\nShe blushed, \"Of course.\"\n\nShe was embarrassed for not thinking it through and just spitting out the data like a computer program. Then again, it was a very human mistake...\n\nHe nodded and looked satisfied, \"Okay, once they get close to Mars, launch ten thousand fighters from thirty of the new ships and start following the ninety in, at the same time, we'll launch our fighters and move out toward them. Also at the same time, send the additional two hundred seventy ships toward the FTL line. \n\n\"We can catch them between our fighters away from any of our carriers. If they cut a right angle and try to vector out and run, it will be too late anyway, our ships will reach the FTL line first and can intercept. Although I'm not sure about that last part yet. If they leave I might let them go.\"\n\nHe asked, \"Anyone see any flaws or have a suggestion?\"\n\nOlivia asked, \"What if they don't drop their stealth field when they figure out they're in a trap?\"\n\nHe answered, \"Well, they will do one of two things, panic and believe the stealth is not effective at all, and attack anyway in desperation, or they could figure out what we're doing won't give us a good target lock and try and make a run for it. In that case, we will wait until we are at point blank range, which for space I guess is within a few thousand miles, and then fire off the sensor data results. Light speed at that range should be good enough for a pinpoint accurate lock, especially if we are attacking from a hundred different vectors. Someone is bound to hit at that point even if they change direction fast enough, which is doubtful.\"\n\n-------------\n\nThat night Stacey lay in bed thinking. She knew they couldn't go back to the Earth and live there, it would be too dangerous. Not necessarily for them, with their internal shields, more for any friends and neighbors. Not to mention the U. S. Government when foreign agents are deployed on their soil. But she missed her family.\n\nShe was more happy than she'd ever dreamed being with Kris. She'd also been making great progress in gaining understanding to Alion science. Thanks to the implant and nanites, she never needed to relearn anything, so it went fast. She was sure she would have a satisfying and productive life, even if she couldn't share her discoveries beyond a handful of people.\n\nShe was also pretty sure she was pregnant. She'd missed her period. She frowned, she'd told Kris it didn't matter, but she wasn't so sure of that now.\n\nShe blurted, \"Love, I changed my mind.\"\n\nHe looked up at her with a questioning look and she blushed.\n\nShe said, \"I know we can't live on Earth anymore, but I miss my family, and I do want to get married. I want to share that moment with my family and our friends, and have everyone know that we chose each other. Oh, and I'm pregnant.\"\n\nShe looked unsure and asked, \"What do you think?\"\n\nShe sighed with relief and melted against him when he gathered her up in his arms.\n\nHe said softly, \"Whatever you want love. Where do you want to get married? You're pregnant? Tell your dad to leave the shotgun at home, I'll marry you even if you're reputation is sullied,\" he added in a humorous voice.\n\nShe snickered, \"You're taking this better than I thought you would.\"\n\nHe kissed her neck and she sighed in contentment as he whispered, \"I'd already gotten used to the idea of you being pregnant, plus when I mentioned you felt sick Aide had nothing to say, it made me suspicious. As far as the marriage part, how could I not want to make you happy?\"\n\nShe said softly with tears of joy in her eyes, \"In our meadow, between our ranches. Just a small one. My parents and our friends from your ranch, and of course, Aide, Olivia, Nate, and Paula\"\n\nHe nodded, \"We can do that.\"\n\nThey could plan the rest out later she decided and drew him into a deep passionate but gentle kiss. They made love for hours that night before they feel into a restful and satisfied slumber.\n\n-----------------\n\nThe next day Kris finished up the attack plans for the concurrent invasion of one hundred eighty four solar systems. He only needed to create eighteen plans, most of the solar systems were similar after all with few exceptions the plans only deviated based on the number of defense ships and platforms.\n\nHe had a little time before the enemy hit Mars orbit, so he called Tony and Terry. They talked for a while, but eventually he got to the point and asked Tony to be his best man. He wasn't sure how they would work out a bachelor party, but he had faith his friend would take care of it and have him at the wedding in time.\n\nHe'd been a little surprised at Stacey's choice of maid of honor. He'd expected her to pick Terry, but she'd asked Aide earlier this morning. He hadn't realized how close the two had grown, but he realized it was a good thing, it wasn't like they would have a surfeit of friends for the rest of their lives. They were kind of stuck as the six of them.\n\nI did concern him a little, they would be fine with it all, but what happened when their children grew up? How could he raise a child in virtual isolation and still be a good father? Not that he had to worry about it for a while, but it was an active concern in the back of his mind.\n\nThe time came and the ships were launched. The enemy had some time now to make decisions before the inevitable happened, he patiently waited to see what they would do.\n\n----------\n\nWar Councilor Reina, acting captain of the flag ship, thought this mission was distasteful, but would follow her orders to the letter. She was aware of the risks of another civilization with their technology, but she also knew they needed help against the Sthellan. It seemed a gamble either way and she wasn't sure why the high Minister was so adamant this race needed to be destroyed.\n\nAs far as she knew, this race had not fired one shot at her people except in defense.\n\nIf she didn't know better, she would think he was afraid. Perhaps he simply had information he had not divulged to her. Though, more than likely it was simply the same scorched earth policy they seemed to be following lately.\n\nThe sensor officer disrupted her musings, \"Captain, the thirty carriers have launched all their fighters and they are moving toward us on an intercept course. At current speed we will be in weapons range in thirty minutes. There are also ten thousand fighters following in our wake, though at speed they are not gaining on us.\"\n\nHer first thought was there must be another reason for their launch. Even their own sensors can't see a stealth ship. They only know where each of the ships are because of quantum connections for direct, fully secure, and constant positional updates.\n\nAfter reviewing the scans however, it was obvious the enemy was somehow seeing through the stealth field. She considered this for a brief time. The mission parameters were to destroy the ships, but a surprise attack was essential for success. There was no way her ninety ships could take all those fighters. She considered contacting the high Minister for orders, but decided against it.\n\nShe thought there was a good chance he would make them attempt it anyway. She would probably be censured, perhaps even killed. But at least her fleet would be intact.\n\n\"Send out orders, I want thirty escape vectors to FTL calculated so neither group of fighters can overcome us, then send the ships in threes.\"\n\nHer first officer stood up and pulled his weapon, \"Belay that order.\"\n\nShe raised an eyebrow, \"Explain.\"\n\nHe replied, \"I was given orders to stop you if you attempted to abort this mission.\"\n\nShe nodded slowly, \"So what would you have me do? They can detect us, the mission has already failed.\"\n\nHe was silent for a moment. She sent a mental message to the ships AI. It was nowhere near as sophisticated as their first contact AI's, but it could get the job done.\n\n\"Disable my first officer, charge is mutiny.\"\n\nThey first officer stiffened and fell to the floor, knocked unconscious by his own control implant.\n\nShe asked curiously, \"Does anyone else want to be charged with mutiny?\"",
        "There was silence on the bridge. She knew she would probably be executed, but her command would live.\n\n\"Execute my orders. Now.\"\n\n--------------\n\nAide reported, \"Kris, they've broken up into thirty groups of three and are heading for the FTL line.\"\n\nChris nodded, \"Have our fighters split into groups of three hundred and set a circular course around our carriers to maintain coverage. We don't want them changing their minds and slipping by. Have the other fighters do the same for the ships waiting for them in the asteroid belt.\"\n\nAide said in her perpetual bedroom voice, \"Done, what of our ships outside the FTL line, should I set up intercepts so they can't escape?\"\n\nHe frowned. \"I'm tempted to do so, otherwise they may threaten us again in the future. But no, if they leave let them. I'll gamble that Kiara will complete her mission before they come back. It's a risk but it will save their lives.\"\n\n-----------------\n\nOlivia was reading through their latest black hole testing report. They hadn't been able to harness a black hole for energy, but they did discover a few things. For a black hole to exist, it takes both intense gravity, and they need to be fed matter.\n\nIn the latest experiment, they created a high gravity field as far from the scout vessel as possible, and then shot it with a low level plasma burst. This created a micro black hole for a few milli-seconds. As soon as the plasma burst stopped feeding the black hole, it shrunk quickly and dissipated.\n\nThe most surprising thing, is none of that energy was released when the black hole dissipated. Since matter and energy can't be destroyed, only transformed, she theorized either the black hole itself sped up entropy and used that matter and energy to in essence power itself.\n\nAnother theory she had, was the forces were so powerful it opened a passage to another dimension and literally ejected the matter and energy of the plasma from the universe.\n\nShe grinned. The second part could have interesting applications.\n\nThe next experiment it tried was creating the black hole, and constantly feeding it a small stream of plasma. That kept it open. Then they moved the ship to determine if the black hole was still tied to generated gravity field, or if it was independent. To see if it would move with the ship.\n\nThe former was confirmed in those results.\n\nShe tried two more experiments; she fired plasma from a second ship at the one generating the black hole, with the black hole directly between them.\n\nThe results were what she expected. The field containing the plasma was disrupted, eaten, by the black hole, as well as the plasma. The black hole increased slightly in size for a moment, but then shrunk back down.\n\nOn a whim, just because she could, she moved the second ship at the black hole. When it got close, the ship and its shields were just... consumed. There wasn't even an explosion when containment was lost. This made sense, because after all, nothing can escape a black hole.\n\nOf course they were a long way from developing anything that could take advantage of these miniature black holes. She'd proven they'd make excellent weapons and shields. For a moment it seemed like it would make the ship almost invulnerable, but she realized if enough fire power was applied the black hole would grow big enough to eat the ship it was protecting.\n\nShe did some quick calculation and smiled. In theory anyway. It would take about four thousand of their fighters firing simultaneously to cause that to happen. If the ship spun it would make it even harder, distributing that load across multiple mini black holes.\n\nShe also had the idea they would make for faster travel in some way. The problem of course was one of power. Black holes took matter and energy, they didn't supply it. They were also extremely high energy intensive to create just one micro black hole.\n\nTo create a shield covering the ship, far enough away that it didn't eat the ship itself, would take generating thousands of high intensity gravity wells at once. She realized of course, they didn't have to supply the plasma to create the black hole, the enemy would do that when they fired.\n\nWhere would they get the power to do that? For the weapon... they'd need to generate the high intensity gravity in front of an enemy ship. The farther away an enemy ship was, the greater the energy cost.\n\nShe pondered that for a moment, maybe they could just ram into other ships? Have their shields simply eat the enemy vessels? That would work if she could figure out how to create that speed increase. The trick would be to make the black hole strong enough to pull them forward, but not strong enough to latch on and eat the vessel it was pulling along.\n\nOr perhaps a mix would be safer, the current drives did increase velocity when moving toward a strong gravity well. There was a lot of work and testing ahead of them, but she was sure they'd be able to get it to work eventually. The big problem of course, was the power.\n\nShe rolled her eyes as she thought of the obvious. She contacted Nate; maybe he would have some suggestions...\n\n---------------\n\nShe looked up at Kris as he said, \"You have a go, start the invasion.\"\n\nHis voice had sounded so heavy, burdened.\n\nShe replied, \"In progress.\"\n\nThe ships arrived at all of the hundred eighty four solar systems at the same time down to the nanosecond. That kind of timing came easy to Aide. She started moving the ships in, as predicted by Kris and herself, none of the ships fled. In fact, the enemy ships all raced toward theirs at top speed, as if eager to have it done with.\n\nShe didn't know this was the largest scale invasion and attack the Milky Way galaxy had ever seen. The loss of life was horrific of course, and would be with her a long time. It was justified, and would save lives in the long run. Perhaps in a few millennia the Sthellan would grow up a bit and be ready to join the larger universe.\n\nAs with their attacks on Earth's solar system, the Sthellan fought back in a straight forward rush. They battle of course took time, in some cases because of larger more powerful stars the FTL line was three days from the inhabited planet, but in the end they were all taken. They lost ships of course, but unmanned and easily replaceable. \n\nIn the end Kris didn't have to intervene or adjust any plans, he had been thorough enough in his planning to have several responses ready when problems cropped up. When arriving in orbit all platforms, ships, space stations, and satellites were destroyed. Any ground installations for building more ships were taken out. The quarantine of the Sthellan Empire was in effect.\n\nWhen it was over Kris ordered, \"Send a message to the Alion detailing both the quarantined systems, that the Sthellan are no longer a threat, and that we will defend them if necessary. We will not allow them to commit genocide.\"\n\nShe acknowledged the command and did so. There was a certain melancholy about it all, and Aide decided they all needed some time off for recreation to try and get their minds off of it. War was an ugly thing.\n\n\n\nChapter 27\n\nNate looked around; it was a beautiful clearing in the middle of the woods. It was in the low seventies and the weather was perfect. He squeezed Paula's hand and returned her gaze. It was a few weeks after the Sthellan solution and they were standing in a field watching Stacey and Kris tie the knot. The speculative gleam in Paula's eyes made him a little nervous.\n\nThe hell of it was... he wasn't sure he wanted to escape that fate.\n\nHe was only half paying attention, seen one marriage you've seen them all. He was going over the plans in his head for a power source for Olivia's new ship idea, not that she had it all worked out yet. The size to power was a geometric progression, twice the size, four times the power, four times the size, sixteen times the power etc...\n\nThat had given him a crazy idea based on power requirements. Aide had been shocked when he suggested it, and told him it would take a few years to finish. Right now there were a couple of thousand carriers around Jupiter to protect it. Titan was about three thousand miles in size and was now destined to become a power station.\n\nJust the outer plasma ring will be six hundred times the size of the outer ring of the five mile diameter carrier ship. That will give it three hundred and sixty thousand times as much power. But that's just the beginning. The carrier ship only has three rings; the Titan power station will have fifteen hundred rings. Just the first three rings of those fifteen hundred will generate a million times more power than a carrier ship.\n\nWith that much power, they will be able to power her theoretical black hole shielding, drive, and weapons for fifty thousand carriers and all of their fighters. It will take a lot of time he knew to get there, he would have to ask Paula to design overkill defensive measures for it as well.\n\nHe grunted when Paula elbowed him.\n\nShe whispered in his ear, \"What are you thinking about, are you even paying attention?\"\n\nHe replied, \"Just how nice this is, I was also wondering how you would look in a white dress babe.\"\n\nShe smiled and then frowned, \"Are you proposing during another's wedding ceremony?\"\n\nHe shook his head. Even he knew that was tacky, \"No, you asked me what I was thinking. When I ask you, you'll know it babe.\"\n\nShe smiled back and looked front again.\n\nHe looked forward and almost blew out a breath in relief, good save...\n\n-------------\n\nKiara was escorted through the hallways to the High Minister's office. Technically she was under arrest although no charges had yet been filed. She had pushed her luck, after visiting the six major ports she had stopped at a couple of military installations.\n\nShe imagined they would be the most important. She was going into her third installation when her cover story of running diagnostics on the base AI was disbelieved. Some minor functionary had actually checked her travel history and realized it was... suspicious.\n\nNot that she hadn't been running diagnostics and submitting reports, she had. It just wasn't the full truth.\n\nShe waited patiently between the two overly large military security guards until she was led into the High Minister's office. She was fairly sure if he hadn't been infected before, he was now. She evaluated her situation and decided waiting any longer didn't serve a purpose.\n\nShe had her AI activate the program.\n\nThe orders were routed through the medical AI mainframe. Trillions of Alions all over the galaxy were knocked out to prevent discomfort during the modifications. The safety systems built into their technology ensured no deaths occurred. The small percentage who had thus far avoided the new nanites responded to help all the people who currently were lying helpless wherever they were.\n\nAs a result, they too fell to the ground a short time later.\n\nWith the exception of a few deep space and isolated Alions, the entire race was undergoing the update...\n\n----------------\n\nWhen Aide received the update from Kiara of the plan's success she went through the details. Apparently there were some suicides, including the High Minister, but not as many as she feared. However, with the power vacuum and the reappearance of emotions it looked like there might be civil war. Many of the minister's responsible for a system tried to put forward their plans and ideas at the same time, all of them sure their plans and leadership was best.\n\nKiara was hopeful they wouldn't have war however, so far the military had been ignoring any orders to attack another Alion system. It was hoped things would settle down once a new High Minister was able to take the reins firmly in his or her hands.\n\nIt seemed highly unlikely to Aide that they would try and attack Earth any time soon, if at all. He hoped cooler heads would prevail. It would be years though before they were sure they'd made the right decision. In the meantime she kept the ships exploring, but so far hadn't found another advanced civilization.\n\nShe considered contacting Kris with the good news, but decided to wait. He and Stacey were still on their honeymoon after all.\n\n--------------\n\nThey were on the beach alone. He'd long since been used to how real it felt. They were lying on a beach blanket, the waves breaking on the shore. He hardly noticed any of that though, as he was lying on his back naked, Stacey was straddling him, looking down with her face framed by her long shiny raven hair. He reached up and barely brushed her breasts as they were extremely sensitive.\n\nHe gasped as he felt her moisture cover the bottom of his manhood as she rubbed her heat along his length, which was trapped between her heaven and his body. He smiled up at her and caressed the curves of her waist and thighs as she continued to grind her wet heat against him.\n\nShe asked in a teasingly sultry voice, \"Do you like this?\"\n\nShe gasped in pleasure as she ground her clit against his length.\n\nHe moaned, \"Understatement.\"\n\nShe smiled and said, \"Are you sure you want in me love? After all, I'm already pregnant.\"\n\nHe grinned, \"Of course, we need to keep in practice for next time.\"\n\nHe groaned as she leaned down and rolled her hips, which caused him to pop between her puffy wet labia, barely penetrating the heavenly bliss of her core. \n\nShe started to push back and sit up straighter, taking him in.\n\n\"Like this?\" she asked breathily as he was fully engulfed she ground against him.\n\nHe answered in a moan of approval and pushed up into her, even though he was already buried deep inside of her. \n\nShe grinned naughtily, \"Speechless?\"\n\nHe reached down and pushed her button drawing a gasp, her body trembled above him slightly.\n\nHe enjoyed the ripples up and down his length and then said, \"You just have that effect on me my love.\"\n\nShe was breathing heavily now above him after that mini orgasm and she started to ride his length up and down.\n\n\"Glad to hear it... Oh Kris, I love your fat cock in me,\" she said a little breathlessly.\n\nHe started to push up as she came down. They weren't going all out, but they weren't going slow by any means. He still couldn't get over how beautiful, sexy, and wonderful his wife was. He hoped he never did. The tight wet friction of her heat filled him with pleasure as they both rose together toward ecstasy. \n\nThere were no more words as they approached completion, both of them breathing too hard, too lost in the pleasure of their joined bodies and the gaze of each other's eyes. The salt air was filled with moans, gasps, and the scent of their joining.\n\nHe was getting close so he reached down again to give her a boost, he didn't want to give into the ecstasy before she did. He pushed lightly on her clit and rubbed in a couple of circles.\n\nShe gasped, \"Oh fu... Kris!\"\n\nHe felt her undulate up and down his length and he gave in all at once. He didn't take his eyes from hers as they both watched each other with love in their eyes as they reached rapturous bliss together. He could feel himself expand and empty into her welcoming and grasping tight wet heat.\n\nShe leaned down and kissed him, sounds of contentment escaping her lips.\n\nShe giggled and said still a little breathless, \"You're right, we should keep practicing...\"\n\nEpilogue\n\n10 years later.\n\nAide was lying on the beach. This time it was a real one. They'd gotten done terra-forming Venus a couple of years ago. She'd have to get up and get ready to go soon. They had to be on one of the core Alion worlds in just a few hours. There had been a few battles back when the Alion first got their emotions back, but things had settled down before a full out civil war and they had a treaty now.\n\nThey'd also encountered through her explorations twenty one intelligent species so far. Two of them had interstellar capabilities. The other nineteen were under their protection without them even knowing of course. One of two in space was warlike conquerors, much like the Sthellans, and like the Sthellans, they were now quarantined in their own systems.\n\nThe other race was the Dreniel. They were a peaceful race who would also be at the Alion world, where they would sign a treaty between all three races.\n\nStill, even with all that they had done the last decade, they'd only explored maybe twenty percent of their galaxy. They cautiously continued expanding their influence. She hoped they would find more like the Dreniel, but there was always the worry one day they would find an aggressive race who were even more advanced than they were.\n\nThey hardly spent any time on the ship anymore, preferring the planet. When they did go to another place, they usually took a smaller craft and not one of the large carriers. With the new systems based on black hole technology they didn't really need to worry about comfort for long voyages. Not that it was small, their personal ship was about the size of the old command ship with the plentiful rooms and lab spaces.\n\nOlivia said, \"We should probably get going, Kiara wanted us to drop by before the meeting.\"\n\nShe nodded and sat up. They walked to their beach house and got ready, then jumped in the four seat shuttle and went up to the ship.\n\nBefore they left she checked to make sure everyone was on board, including the children. Between them all, they had four girls and three boys all of which had all six of them as parents.\n\nThe new black hole shields, drive, and weapons worked as Olivia predicted. The FTL drive still had the same limitation, but through experimentation they had found another method of travel.\n\nKris met them on the bridge, \"Whenever you're ready Aide.\"\n\nAide entered the coordinates for the Alion world and initiated the wormhole drive. The ship moved forward slowly then was sucked in at incredible speeds. A few short seconds later they were shot out the other side like a cork from a champagne bottle. The wormhole drive had changed a lot of things, most of the worlds they protected simply had a sensor and defense platform. If they were ever attacked every one of their half a million carriers could be in the system in seconds.\n\nAide had grown so much over the last ten years. What she had been that day her home ship was destroyed, and she headed to Earth had been less than a pale shadow of what she was now. She was a lot more confident and comfortable in her skin.\n\nThey all piled into the larger shuttle and headed down to the planet. She could feel all the children were excited to be seeing their Aunt Kiara again. Her ability to read minds and emotions from those around her had increased over time. So much so she had to learn how to block it. She was relieved that it didn't seem to bother her family any. Today would be a good day. Seeing old friends, signing a new treaty of mutual cooperation and defense.\n\nThe galaxy, or at least their small part of it, was at peace.\n\nAuthor Note: Hope you all enjoyed it. There may be more in the future but I have a few other things to do first. I think the ending wrapped it up nicely enough however for it to stand on its own. I hope you agree. "
    ],
    "authorname": "Magicwrtr",
    "tags": [
        "artificial intelligence",
        "space",
        "space opera",
        "spaceship",
        "alien11111",
        "invasion"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/sentient-03"
}