{
    "title": "The Horny Geek Club Pt. 04",
    "pages": [
        "(Author's Note. This is the final part of a four-part story. So, if you are new to the tale and are expecting page after page of graphic nookie, this is probably not for you. I won't say that there isn't any sexual content, but by the same measure I won't say that there is. I'm not going to write my own spoilers!)\n\n---------------\n\nI cried, and I cried. I felt like the tears could never stop. \n\nI had never wept so bitterly before. Truth is, I've never been one for tears. I'd not been one for any explicit signs of feeling, come to think of it. I suspect as a small child I forced tears out with the same intensity, but in my adult life this was all new. \n\nIt was like all like all the emotions I'd ignored decided that this was their day. No, that's, wrong. It wasn't LIKE they decided. That is precisely what happened. \n\nIn that moment in the kitchen, I hit the wall. I didn't even fucking know that the wall was there. I guess I'd been running so hard for so long, it didn't remotely occur to me there was a wall. Hey, but there it was, and I hit it as hard as any girl has hit any wall. \n\nI stared at the cracked screen of my phone and the tears tumbled out. Everything vanished in my fabricated life. My house of cards collapsed like, well, a house of cards. I was emptied. So, I cried, and I could not stop the tears.\n\nIf there was one human being on the planet that I was going to have that level of meltdown in front of, Alli was my girl. She held me so tightly as I cried, it just made me want to cry more. She stepped to me as I wept, and I felt her anger disappear. I wept because this was the best person I'd ever known, and I had tried so hard to lie to her about all the all the big things. I wept because of Angela. I wept because I'd messed everything up.\n\nWe stood in the kitchen for a while. I was emptying my eyes out in Alli's shoulder and she was rubbing my back. I have no idea how long that lasted for. I was so utterly lost in my own self-pity, and despair. Eventually I was just sobbing, and Alli steered me to the living room and popped me on the sofa.\n\nI sat there as she kept her arms around me, my face entirely wet with tears and snot. Not a great look. Eventually I calmed and she stood. She took both my hands and looked in my red, wrinkled, wet face.\n\n\"One minute, hun.\"\n\nShe disappeared. I curled up on the sofa and held my face in my hands. \n\nI hear the front door open and close as Alli moved Colin out of the flat. It sounded like a brutal exfiltration, poor boy, and then I heard her in the kitchen.\n\nShe came back and sat down beside me with two cups of tea. I raised myself and she grabbed my hands. \n\n\"You are going to talk to me, and we are going to fix whatever the fuck is going on, girl.\" I nodded and let go to pick up my tea. I held it in both hands and looked at her.\n\n\"Thanks.\" I said.\n\n\"It's only tea.\"\n\n\"You know what I mean.\"\n\nI could still feel the tears welling in me. God, I felt pathetic. Why was she so fucking nice to me? All I'd done was lie to her. I was a lying, cheating, whore, bitch friend. She had her hand on my cheek, rubbing with her thumb.\n\n\"Time to talk, Sally.\"\n\nI told her the whole story. I told her every bit, from Martin in the bar, to the email from Angela, to the lies I'd told the night before, and about the sex and the intense connection. I told her about the Horny Geek Club. I told her how I didn't want the most perfect man in Manchester. I told her I thought I'd fallen in love. I told her how the person I'd fallen in love with just thought I was pay-for-sex. I told her I was sorry. I cried at almost every point in my story, but I cried the most when I told her that I had lied to her so often and I hated myself for that. \n\nIn telling the truth, I felt a strange liberation. Even though I was now in fear of her reaction, I was glad that it was out there. She listened without one interruption or question and drank her tea. \n\n\"So, you are the cock hungry slut, then?\" She said when I finished.\n\n\"Wha...What?\" \n\n\"I believe that was your very own description of you!\"\n\nI remembered. The conversation we had had about the mythical hot blow job girl, and that was how I had described myself. I giggled through the tears. More snot. Ugh.\n\n\"Something like that...\" If I were going to fall in love with a girl, why couldn't it be Alli?\n\nAfter listening to everything. After hearing how I was a part time sex worker and serial liar, Alli started with what was hurting me the most.\n\n\"So, you've fallen in love with this Angela?\" It was more of a statement than a question. I sat back and nodded, supping the tea, the cup as my shield. I could no longer hide anything from her; honesty was like a drug.\n\n\"Hey, I said we could be lesbians. Called it.\" She said and smirked at me. I smiled back. \n\n\"You aren't my type.\" She feigned offence and pushed me on the shoulder. She sat back and looked right at me. Right into me. I knew I was now going to get what she thought of me, the mess I'd created and what I should do. I braced myself.\n\n\"The lies hurt, Sal. They really do. What hurts the most is that you have been dancing this lie and this life and you couldn't talk to me about it.\" There was no defence to that.\n\n\"I worried how you would judge me. I guess in not being honest with you I was lying to myself that it was all okay.\"\n\n\"For someone so fucking smart, you really are so fucking stupid. I love the arse off you, Sally. I am not going to judge you for shit like this.\" She paused. \"For sure, talk you out of it, yeah I think you have made awful choices, but I understand why you did what you did.\"\n\nAlli was in full flow.\n\n\"I hate your choices, for you, Sally, not for how I see you, but for you.\" She pointed at me as she spoke. \"What hurts though is that you wouldn't or couldn't tell me. That's hard. That's hard for me to take. It makes me feel like our friendship meant more to me than it did to you. You were hurting and I knew it, but you closed me out. I cannot pretend I'm ok with that. I thought it was because you were lonely, I thought it was because you wouldn't let yourself feel. I only ever tried to help.\"\n\nI started crying again. She stroked my face again but gestured that it was my turn to speak, tears or not.\n\n\"Alli, you are the nicest person I know. Probably the nicest person I will ever know. So that made it scary to think...\" I tailed off.\n\n\"Go on...\"\n\n\"To think that you would think of me as cheap. That's why I couldn't say. I couldn't say because you mean so much to me.\" Even as I said it, and it was the absolute truth, it sounded like a line from a movie. I was being a clich\u00e9 again. \"I love the total fucking arse off you too, Alli. That's a shit reason for lying, I know, but it's true.\" I paused, and then added.\n\n\"By the way, when I say love you, I don't mean in the lesbian way that I appear to have recently found.\" I smiled at my effort to joke it out. She ignored that.\n\n\"Oh, Sally, oh Sally, oh Sally. I thought you knew me and what I think of you. You are the smartest, hardest working, funniest, sweetest person I know. The only things I don't like about you is that you go around hurting yourself and that are so pretty, which is unfair when you already have everything else. I mean, you are not exactly pretty right now. You are a red eyed, snotty, torn faced hag, at the minute.\" Harsh, but true. She made her point.\n\n\"The one thing you are not and never could be, is cheap.\"\n\nI started to cry, again. She started to cry. What was with all these fucking tears? What emotional car crash had I become? Fucking get shit together girl - this is ridiculous. I couldn't. Control was a thing of the past.\n\nWe hugged it out. I knew it was okay then.\n\nMore tea. Much more tea. Tea fixes everything. We talked more and we laughed at some of the mess, and I cried at some things. It was all out. I felt a sliver of relief build on top of my sadness and general shittiness.\n\nWe sat in silence at opposite ends of the sofa. I'd finally stopped snivelling. Thank fuck for that.\n\n\"What's up bitches?\" Sarah bounced into the room. She'd been out grocery shopping for the flat. She sat on the armchair and opened a magazine. She looked up and stopped flicking.\n\n\"Woah, Sal, fuck sake, are you Ok?\" \n\nAlli looked at me and I nodded. Sarah had to know too. I trusted her and I wanted no more lies in the flat, my home, my sanctuary.\n\n\"Sal is in a bit of a pickle.\" Sarah sat forward at that, her face half concern and half curiosity.\n\n\"Yeah?\"\n\n\"She has been performing oral sex acts for cash to keep afloat and she has gone and fallen in love with a new customer, a girl as it happens, who appears to think she is just gay for pay.\" I shrugged and nodded my approval of the summary. Sarah would get to the whole Neil complication herself.\n\n\"Fuck off...No way! Get you, girl!!\" Sarah seemed bizarrely impressed by it all. She sat up and stuck her hand in her pocket. She pulled out some change and made a big show of counting it.\n\n\"What would I get for \u00a35.73?\"\n\n\"Sarah!!\" I yelled and threw a cushion at her. She was deeply impressed at her joke and I laughed too. That was a perfect response. I knew that it was all good in the flat. She came over to me and gave me a hug.\n\n\"It'll be ok, you rock it bitch.\"\n\nThe first problem had been solved. My secret from the best girls was no longer a secret. For good or bad, they saw me. I felt so incredibly stupid because I should always have known they would be amazing. I looked at them both as they started chattering away about how much money they had to pay my way in the flat and what I should do about Angela, Neil and all my horny geeks. They wanted to just fix all my problems right there. I felt like crying again. OH, FOR FUCK SAKE. ENOUGH OF THE TEARS.\n\nTo them it was simple. I had to end the sex work. It was not a good choice for lots of reasons, not least of which was the fact that Angela may not be that keen on me if it continued. Oh, and they felt it was dangerous and massively shit. They'd mostly be able to cover me in the flat. I could go from two to three or four shifts at the bar. I would just phone Angela (although we didn't know if my phone was still working at that stage), she would love me (obvs) and we would all live happily ever fucking after. \n\n\"Stop, stop...\" I said. \"You are not paying my way. I'm not going back to the bar six nights a week, and I've done all the sums and \u00a360 for 30 minutes of unpleasant work is still much better that \u00a38.50 an hour in the bar. I'm stuck. Ergo, no one will want to be with me, and ergo It's much better to get back behind my wall, suck it up and...\"\n\n\"Fuck off.\" They spoke in unison.\n\n\"And fuck off with this 'ergo' shit.\" Said Sarah, following up. \n\nWe argued. They didn't see the world my way. I was right. They needed to see it that way. The club wasn't that bad. I would still need the money. Angela was a lost cause anyway... Alli interrupted my defence.\n\n\"You are such a stubborn mare, Sal. It simply does not have to be this way. Open your eyes, there are other options.\" \n\n\"It does. You think I haven't thought about it?\"\n\n\"Yes. I precisely think that. In fact, I know you haven't. You've got your head down.\" Sarah snorted with laughter at that. Alli looked at her, \"unhelpful, Sarah.\"\n\n\"Soz.\"\n\n\"You've got your head down, a total focus on being brilliant and somewhere on your trip to crazy town you have forgotten how to be happy.\"\n\nSometimes someone has to state the absolute fucking obvious to you about your life. Alli stopped talking and looked at me. Sarah looked at me. I had to rebut that nonsense. I couldn't. It was true. \n\n\"Wow.\" I said it barely above a whisper. \"Okay. You got me.\"\n\n\"Right. We are getting places. So, first things first, go get your girl.\" Alli picked my phone up off the table and handed it to me. \"We shall make more tea. Sarah, kitchen please.\"\n\nI looked at the phone. It's screen now cracked, like every other phone in England owned by someone in their twenties. First up, I opened PayPal. I declined her payment. It was horrible to see it there. \u00a360 was not what last night was. Surely, she knew that?\n\nI went to contacts and got Angela's number up on the screen.\n\nI took a deep breath, wiped my face of the tear tracks, and fixed my hair. No point in looking that bad, even for a phone call. I pressed dial and put the phone to my ear. It rang.\n\n\"Hello.\" The Scottish voice on the other end was cold.\n\n\"Hi, It's Sally.\n\n\"I know.\"\n\n\"Can we talk?\"\n\n\"We are.\"\n\nWhoa. This was not going to plan. I felt like hanging up, throwing my phone into the corner, and running into my room. I felt a creeping desperation. What was this about? What has happened? What did I do? The connection was so intense, was that just me? \n\n\"I mean, really talk. There are things I want to say, you know, about last night and...\"\n\n\"You got the payment?\"\n\n\"I'm not taking that. Please? Talk? Not on the phone, but a coffee?\" I knew that any further chat at that point was going to be bad. I needed her to see me and see what I was feeling. That would make it better. This time, I would say the things I should have said when we were together. At least if she told me to fuck off, I'd have tried. \n\n\"Yes, ok. I can't today, Monday?\" \n\nMonday was shit. That left me two nights wondering what was going to happen. What the actual fuck was this? Who the fuck was this on the other end of the phone? What was more important than talking to me? \n\n\"Sure. Monday. That Costa near you? Say, 11?\"\n\n\"Okay. See you then.\" She hung up.\n\nThe others came back in. I was shaking. I told them how badly the call had gone, but that she'd agreed to talk. I'd missed something. I had no idea what. I was stunned and hurt. My head was spinning, but Alli was not just going to let things slide.\n\n\"Okay, that's shit, but there is hope.\" She smiled in a very obviously meant to be supportive way and shook my arm gently.\n\n\"Now,\" handing me my phone from the table again, \"time to get control and tell these sleezy boys to get the fuck out of your life. You are better than that. Get cancelling. Get this done before you speak to Angela. Do. It.\"\n\n\"Yeah.\" I knew I had to do it. I had always felt okay about what I was doing, but that was because I thought I was in control. That's kept my self-respect intact. The look on Alli's face as we had talked changed all that for me. She wasn't judging, but I saw pity, and I hated that more than anything. Truth is, the man with the money is always in control and the girl on her knees is not. Even if, as I suspected, Angela would want nothing to do with me, I was going to find another way. It was over.\n\nI started texting cancellations.\n\n\"There is one I will do in person.\" I said. Alli and Sarah were adamant that was a bad idea, but when I explained they understood. They still thought it was a terrible idea, but at least I was taking care of things.\n\nI cancelled every appointment. Sent messages to all the geeks (except that one) and said I was done. I was nice. I thanked them and wished them well. I was good at customer service. Once done, it was like a weight off my shoulders, and the weight of how I would do shit, like eat and stay warm at night, from that point hadn't arrived yet. Alli and Sarah watched me do each one. \n\n\"Sooo, what was his cock like?\" said Sarah as I sent the first cancellation.\n\n\"Massively fucking inappropriate.\" Said Alli.\n\n\"Who lasted the longest?\"\n\n\"Fuck sake, Sarah.\"\n\n\"Did it all taste the same?\"\n\n\"SARAH!!\"\n\nI laughed for the second time that morning. Sarah was helping through being unhelpful. She and Alli bickered about Sarah's interventions as I went through one by one, messaged and deleted the contact. It was cathartic. I slumped back when I was done.\n\n\"Up top\" Said Alli and high fived me. She missed my hand, and I suspected that was the first time Alli had ever high fived anyone. \n\n\"Right,\" I could tell Sarah had been waiting for this. \"What's Angela like in bed, then?\"\n\nI arranged to meet the one geek I would see in person that evening. That was Martin, the founder member. He was surprised to hear from me, and suggested I get to his at about six.\n\nThe reason I wanted to speak to Martin was because with him it was different. I don't know, after everything I just felt a text would be bad form. Weird huh? My weekly rendezvous with him had become strange, but a sort of good strange. I guess in the overall lunacy I had created, good strange was something I almost couldn't see. I hadn't blown Martin in months. The first time he asked me not to (as he was opening a bottle of Barolo) he muttered that he'd beat off earlier and we'd just hang for a bit. He still paid. Cool.\n\nAfter that there were a myriad of excuses as it just stopped. He always paid. In fact, he had set up a regular payment and he paid for the weeks I couldn't make, he even paid when I was on holiday. I actually got the automatic payment from him on Christmas day. When I raised the subject of paying him back, he laughed and said, \"Sally, you really have no idea how much money I have.\" I was good with it. In my logic he deserved face to face closure for that.\n\nI would go to his and we would just watch Netflix and chill. I mean, literally. That is not a euphemism. We watched TV and just, well, chilled. We were working our way through Ozark. We just hung out for a couple of hours, and I got paid. I think he was paying for a girlfriend, but the sad reality was for me that his flat was somewhere I didn't have to lie to anyone. I wasn't worried about my phone going off or having to look good for a half hour out of the flat. Just TV and wine. \n\nHe had also changed. He had left Uni and was working for a big London law firm in their office in Manchester. He was always destined to be a highflyer and he was doing very well, by his account. I think the job was stressful and an evening with me was like his version of weekly yoga. He'd lost a lot of weight and looked surprisingly good. I mean, don't get me wrong - he was still a 'never'. I was way out of his league, and there was, well, the way we knew each other. Not a boyfriend, not a client, not a friend. Some relationships just don't fit in a box. (Mental picture of Angela drawing a box).\n\nI arrived at Martin's flat right on time. I was always on time. He answered the door in an apron, and I followed him to the outlandishly large kitchen. \n\n\"I've just made a mushroom risotto,\" he said, \"and I think I've just made too much. Want a bowl? There's a bottle of Sancerre in the fridge if you could grab a couple of glasses.\" \n\nMartin just happened to make too much food a lot when I went round. I think that was part of his girlfriend fa\u00e7ade. I played along, because he was handy in the kitchen, and I was a beans on toast sort of chef. I stood in his kitchen, poured the wine, and handed him a glass. He set it down and was stirring butter into the risotto.\n\n\"I'm stopping, Martin.\" I said. \n\nHe didn't look up.\n\n\"Yeah, I thought that's why you wanted to speak. Thanks for not just texting me though.\"\n\n\"I wanted to talk. You've been kind.\" He snorted at that.\n\n\"Really Sally? No, I don't think so. I've really been a bit of an arsehole and got you into something that is, I don't know, a bit shit.\"\n\n\"There is that, of course. Yeah, you're right. You are a complete arsehole and I'm just here for the wine.\" Martin already knew Sancerre was my favourite. I suspected he'd got a bottle knowing this was the end of Netflix and chill. \"Aside from that you are less of a total dickhead now than when I knew you in the bar. Slightly.\"\n\n\"Oh yes, that's a much better description Sally. Now, let's eat.\"\n\nThe risotto was delicious, but I pushed it around the plate and picked at it. He looked at me and sighed.\n\n\"I knew it would happen someday.\"\n\n\"What?\"\n\n\"There's a guy, yes? You've met someone?\"",
        "\"Yeah, something like that.\"\n\nHe grimaced, just a little, but I could see it.\n\n\"Was inevitable at some stage. Guess you can't compartmentalise your life if you are in love.\" Compartmentalise? Like put people in boxes, you mean.\n\nWe sat in silence for a bit. \n\n\"Do you love him?\" He asked. I was a bit taken aback. Did not see that coming. Could we just each risotto, drink this delicious wine and watch Ozark?\n\n\"Think so.\"\n\n\"Have you told him?\"\n\n\"You soft in the head, Martin? What is with you? Anyway, no point - it's the end of term. Sh...He is going away soon.\"\n\n\"Oh...That sucks.\"\n\n\"Yup.\"\n\n\"Listen. There is something I need to say. Please, just let me, okay?\"\n\n\"Sure, weirdo...\"\n\n\"You know I love you, Sally.\" He was looking right at me. I didn't. If I'd thought about it, I might have got there, but he was a client, or a Netflix buddy or whatever he was. I certainly wasn't wandering about thinking how he felt.\n\n\"Martin, no, wow, you're freaking me a bit.\"\n\n\"Sorry about that, but I probably won't see you again and I cannot let myself live without telling the first girl that I ever fell in love with, I mean properly in love with how I feel.\"\n\nI was a bit stunned. I just stared at him. \n\n\"I have felt fucking horrible that I paid you for...you know...\"\n\n\"Sucking your cock each week?\" I helpfully reminded him.\n\n\"Yeah. Sorry. So sorry...\" he was losing his thread a little.\n\n\"But you see, I think you are amazing absolutely amazing. You are so clever and intelligent...\"\n\n\"Clever and intelligent? Nice.\" He went on undeterred.\n\n\"...and strong and funny and irritating and fucking hot. I admire you. I love how you talk and how you laugh and how you smell and how you take no shit. I love the way you try and guess what's going to happen in Ozark and always get it wrong. You amaze me, Sally, and I fell in love with you. There I've said it.\"\n\n\"Wow.\" Again. Not remotely the person I wanted a declaration of love from. \n\n\"Maybe you aren't that clever or intelligent, though, if you couldn't see it.\" He smiled.\n\nI punched him arm.\n\n\"So, I had to tell you because, if you don't tell someone and they go, you will never know if they would say it back. You'll never know. And you are now going.\"\n\n\"I don't by the way. Let's just get that loose end cleared up.\"\n\n\"I fucking know that Sal and it breaks my heart that you never could. But... I'm trying to help. Don't be stupid and tell this guy that you love him before it's too late. Especially if he's buggering off for the summer. I don't like saying it, but that is what you need to do.\" \n\n\"You are telling me this, why?\"\n\n\"'If you love somebody, set them free' as that utter tosspot Sting would say.\"\n\nI put my hand on his. \n\n\"Thank you, Martin. I mean that. Now can we stop fucking talking about this uncomfortable shit and go watch some Ozark? I think the crazy lawyer bitch is going to cause some trouble.\"\n\nHe looked at me.\n\n\"That's what crazy lawyer bitches do.\"\n\nI walked back from Martin's with a nice Sancerre buzz and Angela on my mind (duh, obvs). Blue skies over Manchester for once and it was a handsome place in that late spring evening sunshine. The streets were full, and the city buzzed, people going out or just enjoying the weather.\n\nI never thought that Martin had insight on relationships, but he was right. I felt confident for the first time that day. I would meet Angela on Monday (a million years away) and I would tell her that I loved her. She would tell me that she loved me too, that the payment was a mistake and then we would go back to her flat and have slow hot sex all afternoon. What happened after that would happen, but future Sally would not fuck this up. I trusted her. \n\nI got back to the flat and my mum (sorry, Alli) was waiting for me with her concerned face on. She wanted to know how I was doing, and why I'd taken so long. \n\nI told her about what Martin said.\n\n\"You know, for a pimping wanker, he is right.\"\n\nSaturday was done. It was a long day, a very hard day. A lot had changed. I ran through the anticipated Costa meet in my head. I played every scenario I could think of over and over. I couldn't understand why she was so cold on the phone; I couldn't get what had happened. What if she doesn't even come. That felt like a real possibility.\n\nI had never told anyone that I was in love with them. Ever. I had a boyfriend at the end of school I liked a lot. I got nervous when I met him, and even found the annoying things he did cute. He told me he loved me one day in Nando's and I froze. I've always felt that when you say it, it is out there, and it hangs in the air. You have left yourself open for an answer of \"That's nice.\" Which is incidentally what I said to him. That complete shock may even be why I broke up with him. I don't even think I've had piri piri chicken since.\n\nThe conversation with Martin had freaked me. I was still unsure why I went round, and that whole declaration was just off the scale nuts. Everyone says I need to tell Angela how I feel. What if she doesn't feel the same way? I'll just look like a proper chump. It's not looking great. Easier to let it slide.\n\nI lay awake for hours. I discovered that 2 am is not the time to try and reconcile your love life. By then I reckoned she hated me and thought I was trash. At 2.30 we were a perfect match and by three she wasn't even turning up. \n\nSunday was another long day. \n\nIt was the day for the resolution of the Neil part of my problems. In one way that was straightforward. It's not like I hadn't dumped a guy before. In another way it was hard, because he was super nice and had done nothing at all wrong, other than not be Angela. I suggested we meet for lunch and I think he knew that I was calling time. We only ever met to fuck and that wasn't going to happen in Piccolino on Clarence Street. I lied to him. I didn't say there was anyone else. I certainly didn't say I had a sex biz thing going on, which I'd now given up. I put it down to the course, going back to Surrey and despite an immense physical attraction and unbelievable sex (gotta give the guy something, and frankly that bit wasn't a lie at all); I just didn't see a future. I hoped I could just end the lies there, with one that was done for the right reasons to a good person.\n\nHe took it well. He would, wouldn't he? Didn't see a future in being friends, which I understood. He was nice, but a bit sad. The classy rejected lover. Did he really have to be just so fucking perfect? It was like stabbing a puppy. \n\nAlli wasn't letting me out of her sight in the afternoon and drowned me in positivity. We watched a stream of romantic comedy movies, which all seemed to have pretty much the same plot. All Alli's choice. I think she considered them as training videos for me. In each one there is the pivotal scene where one of the star-crossed lovers, the bloke, does a dramatic movie dash across town and makes an impassioned speech. Julia Roberts or Meg Ryan or whoever then crumples, and all is good. It passed the time sweetly enough, and frankly that was all I wanted to do. It made Alli happy.\n\nI was just waiting for the chance to see Angela. It wasn't just about a chance to fix things, I just wanted to be around her, be close to her and talk. Hold her hand and watch her face. My mind was all over the place all day, and I wanted peace in her arms. \n\nMonday. \n\nOkay team Sally. Game time. \n\nWhat to wear for this casual coffee was my opening challenge. If Angela had been a boy, I would have made sure that I was looking totally smoking hot and that would have been job done, but I had no idea what she would appreciate. Well, that is apart from me stripping slowly in front of her, and that was hardly appropriate for 11am in Costa Coffee. It was bittersweet to remember that first time. How turned on did I get as she watched me? Focus Sal. \n\nI settled for casual comfort. \n\nI was early. Of course. I played with my latte and watched the door. No, don't watch the door. Look casually at your phone. No, don't be texting, get a paper from the rack. Someone is coming in, is it...no. Still early. \n\nOf course, when she did arrive (phew) I was watching the door. She quickly scanned the room, saw me, and bought a coffee. Her wait in the queue to get her coffee seemed to take an age. I rehearsed my speech again. We had an amazing connection, it felt real, we should try, I've given up the club. All good. \n\nShe sat. \n\n\"Hi.\"\n\n\"Hi Angela. Nice to see you.\"\n\nSilence. Straightaway I was on the backfoot. Should we do small talk?\n\n\"All finished up?\"\n\n\"Yes. I'm going to finish my dissertation back in Perth. My dad is collecting me tomorrow afternoon. I've been saying my goodbyes all weekend.\"\n\n\"okay.\"\n\n\"Listen, I'm really sorry Sally, but you wanted to talk? I've got to pack and sort out some uni admin stuff this afternoon. I mean, I can't stay long.\"\n\nI took a deep breath, hoping that she couldn't see that I had taken a deep breath. I realised I was shit at this.\n\n\"I want to talk about you and me...\" Stupid opening. I needed to get to my speech.\n\n\"There is no you and me...\"\n\n\"Oh...but...\" She stopped me.\n\n\"Sally, it was a transaction.\" She was speaking quietly, leaning forward. I leant in too. I could smell her; I could nearly just reach and kiss her. That was not going to happen from her end. I started shaking. I wanted to cry again, which just irritated the fuck out of me.\n\n\"A lovely transaction,\" first smile from her, and possibly a chink in her fortifications, \"but that's all. It was fun. I scratched an itch. I'm not a lesbian. I told you.\" I just looked at her, she wasn't looking at me. My speech was in a mental wastepaper bin. I'd come to do the talking, but I was unable to say a single word. She leaned back again and continued driving the knife into my soul. She was looking at the counter. \n\n\"I mean, I like my boxes, and I liked the box for you. It was wonderful. But you know, I'm moving on, away and...\" She had started with cold confidence but now her voice was weaker. She still didn't (couldn't?) look right at me. I was staring at her, transfixed that my movie had become horror.\n\n\"no...no... that's not right.\" I said, but there was nothing else, and that was shit. She looked at me now. Was she weakening? What is this?\n\n\"So, I have to, you know, focus on the future and that is away from here. Away from you.\" She had looked at me briefly, but then away again. She wasn't trying to convince me; she was trying to convince herself. \n\n\"It's not you, it's me.\" ARE YOU FUCKING JOKING? Did she just say that? She realised how that sounded and the mask dropped for a second as she smiled. Smile over. She was looking away from me again and I just wanted her to look at me. See me. See that I am the same girl who fell asleep in her arms.\n\nI wanted to start the conversation again. This had gone badly south. Hit reset. I know it was all fucked up how we met, but we met, and couldn't we just even try? The connection was real. It was so real. The attraction was irresistible. Mutual. Intense. That's why she can't look at me - it will weaken her, and she will cave. You are amazing Angela and I want to make you happy, and I think you want to make me happy too. I FELT IT IN YOUR ARMS. LOOK AT ME, PLEASE.\n\nI didn't say anything.\n\n\"I'd better go. Sorry.\" \n\nIf you love somebody, set them free. \n\nShe stood up and so did I. We hugged. It was awkward and, in that hug, I could smell her hair and feel her body. Was she shaking? Surely, she could smell me? Surely, she can feel my heart pounding? She held the hug a little longer than she needed to and then broke it too quickly. Was that a tear? \n\nShe turned quickly and left. If you love somebody set them free. Tosspot.\n\nI wasn't going to cry in Costa. I was going to do that at home. I hated this and I was never going to fall in love again. This was fucking awful. Why make movies about something so needlessly unpleasant? \n\nAlli and Sarah could see from my face when I got back that things had gone about as badly as they could have. \n\nI gave them the headlines but was in no mood for any more analysis, talking things over or help. I wanted my bed. I was empty. I went to my room, was in bed by early evening and slept until 8am. Even then I didn't want to get up.\n\nMy phone rang. I grabbed it. Still I held on to the stupid hope that it would be her. Martin. What the fuck?\n\n\"Hello? Martin?\"\n\n\"Hi Sally, sorry to call. I know you didn't expect to hear from me again, but I think I have something that might be a good thing for you.\"\n\nTurns out it was good. Any other day I would have been delighted. His firm took on interns in the summer. There office in London was an easy commute from my mum, and better still this would mean part time work with them in Manchester the next academic year. Applications were closed, but they loved Martin and agreed to see me if I chucked in my CV. I would. Martin said his recommendation made it a done deal. I was grateful, but it didn't matter to me. If that problem had been solved a month before... \n\nJust as he was going, he changed the subject. \n\n\"Hey, how did it go with you guy?\"\n\n\"I followed your advice.\"\n\n\"Nice one. What did he say back?\"\n\n\"He is a she, Martin.\" Silence. Breathing. \n\n\"Great!\" Pause. I hoped he wasn't thinking too hard about that. \"Are you good?\" He sounded keen to know. Guilt, I guess.\n\n\"The other advice - the sting advice.\"\n\n\"But he's an utter tosspot. That's shit advice. What the fuck, Sal?\" \n\n\"Gotta go. I'll get my CV over.\"\n\nYeah, so I spent the morning feeling sorry for myself. Angela was leaving forever later that day. I couldn't bear it. I only had myself to blame. I sat in the living room with Alli and Sarah. I opened up a bit more. I pretty much recounted the whole horrible conversation. It was fresh, and painful. I'd analysed every word for meaning. \n\n\"It was surreal, you know, it was like she was saying the words, but that's all they were. Just words. I don't know how she really feels, and I now never will.\"\n\n\"Does she know how you feel?\" Asked Alli.\n\n\"No, I had to preserve some dignity.\"\n\n\"How's that working out for you there?\" said Sarah.\n\n\"Not so great.\" I smiled thinly over at her.\n\n\"You know what. This is stupid. You are being stupid, and you are actually quite clever.\" I scowled. Could people stop saying that to me, please? \"Let's see if I've got this. You went to tell her how you felt?\"\n\n\"I couldn't...\" \n\n\"Not finished. You went to tell her how you felt?\" I nodded as churlishly as I could muster. \"Ok. From your point of view the most important things was that she needed to know, so that you could get past the whole new lesbian pay for sex thing. Right? Then you could see how she felt about that. Right?\"\n\n\"S'pose so.\" I wasn't wild about Sarah's terminology and I could feel Alli scowling at her.\n\n\"But...\" she paused for effect. \"You didn't? You had your speech all prepared I bet.\"\n\n\"Uh...huh...\" Sarah was in full flow, sitting forward and now wagging her finger.\n\n\"So did she. Sounds like hers was utter bollocks by the way. 'It's not you, it's me'. Come on...? Who says that? You never said what course she did - I bet its maths or physics or massive science nerd shit.\"\n\n\"Engineering.\"\n\n\"Figures. Can I just say that you being a lesbo, and all is dead cool, but sleeping with engineers? Not cool, Sal. Not cool. Anyway. She had her little prepared speech. Think about that. She'd thought about it and she totally prepared to say what she wanted and get out of there. She got hers out and you didn't. It's all bullshit. 'It's not you it's me' For fuck sake.\" She picked up her magazine and flicked noisily.\n\nI looked at Alli.\n\n\"Sarah's an insensitive idiot, but she's right.\" She said.\n\n\"There is nothing I can do about it now, is there?\"\n\nThe magazine was hurled to the floor. Sarah was right on the edge of her seat, a strangely manic look in her eye.\n\n\"Have your movie moment, bitch! Get over and tell her before she goes. Make a total fool of yourself, bin your dignity! Or what few tattered shreds you have left.\" She sat back and smiled. She then spoke in a fake American movie voice over man type accent.\n\n\"A mad dash across New York into the arms of the girl she loves...When Angela met Sally\" She made an arc with her hand to signify these words written on a poster or in the sky or whatever was in her head. Mental.\n\n\"Manchester\" Said Alli. Sarah had her magazine up again.\n\n\"It's my film and in my head it's in New York.\"\n\nI looked at my clearly insane friend and then at Alli. Alli nodded.\n\n\"Thanks guys, but I'm done.\" Alli stroked my arm. Sarah harrumphed and I went to my room. \n\nI lay on my bed running the conversation through with her again. It didn't make sense. There was no connection between the girl in the red room with the candles and the girl in Costa Coffee. Different person. Or the same person, playing at being a different person. It was so far from reality; it couldn't be what she was thinking. Sarah was right, it was total and utter absolute bullshit. That could not possibly be my final memory of her. I had a massively stupid idea. I ran back into the living room.\n\n\"I'm going over. I'll have my movie moment. I have nothing to lose.\"\n\nThey both clapped. It was all surreal. At that point I had figured that everything was just so batshit crazy that one more piece of batshit crazy wouldn't hurt. Of course, I was destined to fail, but this time, this time I would fucking tell her that I was crazy and that I was crazy about her. \n\nI looked at my phone. It was getting late. Her dad could arrive at any minute and I didn't remember anyone's dad being in the room when the big moment came in the movies. Time to go. \n\nI didn't change, I didn't make myself look amazing, I didn't even fix my makeup. I just ran out the door and onto the street in jeans and t-shirt. I also didn't grab a jacket. That was a mistake. When I got to the street, I realised that a coat might just have been a decent idea. It was pouring. Didn't matter. Taxi time.\n\nThe thing about the rain is that everyone wants a taxi and I was bang out of luck. I started walking fast, then a bit of an awkward half run walk and then fast walking. All the way I was looking for a taxi. I finally got one about halfway to her flat. I was dripping. It was uncomfortable, but I did think my dishevelled look was perfect for Sarah's movie that I was now starring in. I think my adrenaline levels convinced me that was funny\n\nWe pulled up and I almost threw my money at the driver as I darted out. I ran to the door. I held my finger over the door entry buzzer.\n\nYou cannot do this. This is stupid. Not even clever stupid. Just go home. I stepped back.\n\nThere was a message on my phone. It was from Alli.\n\n\"Don't think about coming back here ever if you bottle it. Love Alii xx\"\n\nI pushed the button and gasped at myself as I did. Fuck. This is real\n\n\"Hello?\" Male voice.\n\n\"Hi Robert, it's Sally here, you know, Angela's friend.\" I was sure that's all the context he still had.\n\n\"Yeah, come up. She's here - packing in her room.\" \n\nI ran up the stairs two at a time. I slowed near the door. Half to catch my breath, and half because I was going to have to speak soon and bent double gasping is not a good look. Robert was at the door. He smiled a welcome. I was drenched. I was very aware that there was a sharpness in my boobs as my nipples were hard and cold, poking through my t-shirt. He noticed, of course.\n\n\"Hi Sally... oh, is it raining?\"\n\nI stopped my self at the point of sarcasm that his question so richly deserved.\n\n\"Yeah, it is.\"\n\n\"Manchester, huh?\" He raised his eyes to acknowledge the common weather cross we all carried. \"You know which one is her room?\" \n\nI nodded. I did indeed know her bedroom. The room where I had felt things I'd never know before. The room where I had felt delirious joy. The room where I had entwined my body and heart and soul with someone else. The room where I had been most exposed. The red walls and the candles. Yes, I knew her room.",
        "I went in slowly. She hadn't heard the buzzer and was stuffing clothes into a bag. She looked round and froze, mouth slightly open.\n\n\"What...? Sally...?\" I closed the door. I may have been doing my movie moment, but the initial screening was going to be a private event.\n\nThe room was different. There were larges boxes of her belongings all over the floor. Clothes, lamps, ornaments, life stuff, lots of books, candles... Angela and candles. Angela and boxes. The light this time wasn't from candles, it was thin grey rain light that shone through the window. It seemed so different from how this had played out in my head. \n\n\"What are you doing here Sally? I've said all I needed to.\" She stood up, close enough that I could see the confusion in her eyes, but just out of reach. No red bath robe today. Jeans and a vest top. She looked lovelier than ever. \n\nI didn't have speech prepared. I didn't know what I was going to say. \n\n\"I haven't.\" I said it firmly. \"I haven't said what I need to, and I will never forgive myself if I don't. So, can you listen to me, please?\" She started to say something to reject that idea but stopped herself and nodded. I could see she was breathing a little faster.\n\n\"I don't believe you.\" \n\n\"What...?\"\n\n\"I don't believe what you said to me yesterday. I don't believe that you just scratched an itch. I don't believe that you don't want to be a lesbian. I don't think you give a flying fuck about that. I don't believe that you have me in a box. I don't believe that you don't want me as much as I want you. Yes, I want you. Most of all, I don't believe for one second that you think what we had was a transaction and that's all it was.\"\n\nI had never spoken like this. I couldn't believe what was coming out of my mouth, but I felt it and I felt it was right. Angela looked stunned. I went on.\n\n\"The box thing? That whole box thing? It's bollocks. It's a thing you say when you don't want to get hurt. I know you didn't mean it. I know you were lying. Trust me, I know about lying better than anyone.\" I stepped towards her and took her hand. She was looking right at me. She was seeing me. She let me hold her hand. She was shaking. I was throwing the words out as they came to me. \n\n\"I know what I'm talking about. I do boxes. How do you think I managed to blow all those eager permanently erect creeps and not go mad? I put them in a box. If things are in boxes, you can be in control. You can't get hurt. But it's a lie Angela. I lied to me more than anyone else. It's bullshit. I am hurting. So are you. I can see it and I hate it and I want to make it better.\" I was speaking slower now, calmer. \n\n\"I know how to build up barriers. I know how to shut people out. But...but...I was there Angela.\" I taken her other hand. \"I was there. I was in the bed with you and I saw you. I felt it. I felt you. I felt amazing. I felt a connection. A real connection.\" I wasn't finished, but I paused. I was looking right in her eyes. I could see something that I liked in the way she looked at me. I was getting through.\n\n\"I feel in love with you Angela. For the first time in my whole life I fell in love with someone. I don't care if you are a girl. I don't care that you are leaving today. I don't care about your fucking boxes. I just have to let you know that is how I feel. A crazy, sexy, cute, love ...It's real.\" I tailed off and just looked at her. I was done. I'd said it. She could tell me 'that's nice' now.\n\nThis was not the confident-go-get-what-you-want Angela I first fell for. Or the flirty, fun, sexy Angela that I fell for next. This was a vulnerable, scared Angela and I knew that I would fall for this version too. She held my gaze. She spoke quietly.\n\n\"You left.\" I furrowed my brow. What? \n\n\"That night. You left. I woke up and you were gone. I lay in bed the next morning and I felt so stupid. I didn't know what to do or to feel. You hadn't sent a message. You just left. I thought...\"\n\nI squeezed her hands.\n\n\"I know. I was doing my whole lying thing, I panicked. I was stupid. I saw you lying there and that's when I knew. I was overwhelmed.\" I could see moisture in her eyes. I could feel moisture in mine. Oh no, that cannot be the thing that keeps us apart. I didn't want to leave. I wanted to hold her forever.\n\n\"I felt alone. I felt that there I was paying for sex, and I'd stupidly fallen...\" she paused. She hadn't remotely planned on saying what she was saying. The boxes were shattered, and I knew that her head was somewhere she hadn't intended. She wasn't in control either. A single tear fell.\n\n\"...I'd stupidly fallen in love. Yes. I was there too, Sally. I felt it too and I was scared. Scared and stupid, and I thought it was just a transaction for you. I thought that you could fake it all. I thought faking it was what you did best. Because you left.\"\n\nI moved right to her and held her face. She closed her eyes and put her hands on mine.\n\n\"I couldn't fake that. I couldn't fake that. Angela, that was the most real I have ever felt.\"\n\n\"But... I'm leaving anyway...\" Her eyes were open and on mine. I felt hope.\n\n\"I know. It doesn't matter. You won't just get rid of me by going to Scotland!\"\n\n\"What about the creeps?\" \n\n\"Over.\" \n\n\"It's all over. I want to be with you. I only want to be with you, but even if I'm not with you I'm not pretending for them its ok anymore.\"\n\n\"Am I not one of the creeps?\" She smiled softly.\n\nI shook my head and I kissed her softly. She didn't move away. She responded immediately. I felt her arms go round me. I held her tight.\n\n\"We will have to come up with a story about how we met.\" She said.\n\nI pulled her closer. She pulled me closer still. It was going to be okay. \n\n\"You are soaking.\" She said, as she held me.\n\n\"I know. This was my movie moment. I dashed across town to see you. The wet clothes are deliberate to add to the drama. Sarah wrote the scene.\"\n\nEven though I was soaking and cold, she held on tighter than ever. I squeezed her, almost scared to let go. After a while she pulled away. Her vest was now soaking too, and I had a brief rush as I saw her firm nipples poking through the fabric.\n\n\"If this is a movie, I guess I would now say something like 'lets get out of these wet things'?\" She smiled the little Angela cute sexy seduction smile. \n\n\"But your dad? He'll be here soon?\"\n\n\"He's coming tomorrow. I lied when I said today, so that you wouldn't do anything this stupid. I underestimated you. I'm glad you are stupid. I'm glad you are here.\" \n\n\"I have been very stupid...but not for coming here today.\" I kissed her more firmly this time. \n\nShe ran her hand down my chest and over a nipple which was still almost painfully erect from the rain. I was giddy with the moment and with her touch. I hadn't considered for one second, the day would end with this but at that moment it wasn't just what I wanted, it was what we needed. I had to hold her, skin on skin.\n\nThere was a lot of talking still to be done. In the movies the credits roll, and you assume everything worked out. We had to get things straight, but we knew the talking would have to wait. \n\nWhat was urgent was that we reconnected. Our moments of intimacy had been fantastic, but always followed by a sense of pain or regret for one of us. The intensity of emotion was betrayed by the need for transaction. We both seemed to know that at that moment we needed to make that right, before anything else. I was bursting with emotion and I needed physical confirmation. Her mouth on my mouth and her hands on my body. My hands on her. \n\nShe undressed me slowly. Stripping off my wet t-shirt. We both giggled at the struggle to get my wet jeans off. She kissed me as she went. My skin was goose bumped and cold. Her warm hands around my waist and caressing my breast as we kissed was beyond erotic. The intensity of the afternoon and the surge of all emotions had me totally aroused. Like before, and like every time since I could feel it in Angela, the passion and lust was in her eyes, her fingers, her lips, and her tongue.\n\nShe undressed and we climbed into bed and slid under the covers. We were both shivering, and we rubbed each other and clenched hard - in part to get warm, but mostly to just feel it was real again.\n\nWe lay nose to nose, with the covers over our heads. The curtains were still open, and the grey light was softened by the fabric over our heads. We stroked each other's face and kissed gently.\n\nWe made love. I'd never made love before. Plenty of sex, not a lot of love making. 'I'm into sex, I aint into making love,\" as 50 Cent put it. However, that afternoon we most definitely made love. \n\nWe barely stopped looking into each other's eyes. Our mouths hardly parted and we kissed hard and kissed soft. We held each other tightly and took our time to move our hands over the other's body, arms, breasts, nipples, down the stomach and over the curve at the base of the spine. Her hands slid over my bum, and round to my slit, were Angela circled and teased my clit, kissing me, just as I had done for her. I climaxed harder and quicker than I had ever done before. She tried to contain her screams as I brought her to a peak as well, my mouth never leaving hers, my fingers rubbing hard. It was perfect. We giggled at the thought of her flatmates, who must have heard.\n\nWe stayed in bed all afternoon. After we made love, we lay in each other's arms silently, still caressing and touching. The making love bit done and the connection delightfully and beautifully re-established, we then just got down to having amazing, hot sex for the rest of the day. Hey, I wasn't going to completely change and get all soppy now, was I? We sizzled that afternoon. \n\nI knew it was all going to be okay. No, that's not quite right, I knew it was going to be much, much fucking better than okay.\n\nThat was five years ago. I was a crazy bitch for those few heady weeks in June. Yeah, I know, maddeningly frustrating too. Soz. Couldn't help it. \"Just tell her you love her!!\" Easy for you to say.\n\nIf you were watching this story in a movie and not merely reading it, the credits would be rolling now. You'd leave the theatre wrapped in the glow of the romantic conclusion and talk about what you think happened next in the car on the way home. Because this isn't a movie, you can have the luxury of finding out. I'm a lawyer, I don't like loose ends.\n\nSo, I got the job with Martins firm for the summer and they did indeed give me a part time job during term time. I work for them in London now, and live in a little flat not far from Notting Hill. Of course, Notting Hill itself would be a brilliant ending for the whole romcom theme, but have you seen the cost of rent there now? Outrageous. I blame Hollywood for that shit. \n\nMartin left the firm to join another in London. I think he did that for me, but it was probably best for both of us for him to be somewhere else. It's worked out for him. He is the youngest partner. We don't keep in touch. We won't. \n\nNeil packed in his course to become a professional rugby player. Apparently, he is exceptionally good, and started playing for England last year. I once heard two girls at work talking about how 'lush' he was. I felt like filling in the gaps for them about his between the sheets goodies too, but held back. Then out of the blue, he stopped playing, set up a charity in Africa for orphans, discovered a cure for cancer and started fostering stray kittens in the evenings. Nah, that's not true. He's just a rugby player, but probably the nicest one. \n\nAlli is still my best friend, now working for a bank in Manchester. She lives with Colin. They tell the story about how they met all the time. Alli loves the twist that it turns out that I was actually a real lesbian. She thinks that's great. Am I? I have no idea and I don't really care much for labels, or boxes. Sarah is still in Manchester too. She's a teacher now. God help those kids. We all talk loads and I get back up when I can.\n\nThe Horny Geek Club is going stronger than ever. It's changed a bit, though. The service is now entirely free and there is only one member, but business has never been busier. She is in the next room as I write this. Angela got a job in London when she graduated, and we did the long-distance thing until I could join her. It wasn't easy, but she is perfect for me and I'm quite sure I'm perfect for her, so we got through. If you like your movies with a happy ending you lucked out here. We are stupid happy together. \n\nThat's the final credits up now. You know who starred, who directed, who the grips were and the runners, the locations, the entire production team, and the products endorsed. The movie has ended\n\nAs it happens, I've also got to go now. A girl in a red bathrobe is waiting for me, and the candles are lit in the bedroom...\n\n---------------\n\n(Authors note - A final note from me and it's quite long so absolutely no need to read on if you can't be arsed. The story is over, and they ended up together. \n\nSo - thank you so much for reading this little tale. If you have enjoyed reading it half as much as I have enjoyed writing it, then it has been excellent value for money. (ahem, you know what I mean). I have had so much fun and I think I'll miss Sally and Angela. I think they are quite adorable. \n\nIt's lovely to get ratings and favourites, but it is the comments that I love most. Thank you so much if you commented on any part of this with any of your thoughts at all. Such immediate feedback is not normal in real writing world and it is quite wonderful to see people become invested in characters as they develop. The way I write is to allow the characters to find their way. I don't really know what's going to happen, and I like that we all find out together. That's pretty cool.\n\nIn my mind originally this was a much longer piece. I started it because the novel I am writing has ground to a shuddering halt and this seemed like a fun thing to do to keep the juices flowing. Erotica is not my day job. In fact, writing isn't my day job (yet) either and real world needs paid for, so I had to keep this shorter than the story arc I once envisaged so I could work 'n' shit like that. Who knows, though, I may come back to the whole thing later. \n\nOne thing however that may be quicker is an idea in the comments. Some contributors wanted to see the world from the Angela point of view. I think that would be awesome fun and when I have a little time, I may well try to do that. It really should fit in before this chapter, so doing it now sort of strips the tension from the tale. I shall put some thought into how to make it fun despite that. I'll no doubt idly think about it even if I don't intend to. It's such a delicious, and hot idea.\n\nThanks again!\n\nP.S. if you are American, you should know that Manchester is an awesome city, although it does really rain there an awful lot!)"
    ],
    "authorname": "Thenaughtypen",
    "tags": [
        "lesbian",
        "lesbian love",
        "lesbian sex",
        "manchester",
        "movies",
        "rain",
        "romance",
        "romantic"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/the-horny-geek-club-pt-04"
}