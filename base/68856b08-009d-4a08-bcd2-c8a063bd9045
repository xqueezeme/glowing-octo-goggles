{
    "title": "Impersonating Brianne Ch. 03",
    "pages": [
        "This is the third part of the \"Impersonating Brianne\" series. If you haven't read the other two chapters, I suggest you do so. I'd love to hear from you, so feel free to leave a comment or send me an email. Enjoy! \n\n*************************** \n\nAfter making love in the desert, Alan and Marissa returned to the hotel. They held each other all night, overcome by their passion.\n\nWith the sun's first rays shining in through the windows, Marissa found herself once again in Alan's arms. Unlike the day before, now she only wanted to stay in his embrace, but their time was almost up. They made love as the sun rose and then packed up their things for the mid-morning flight.\n\nAlan settled up the bill and was surprised to find that many of his expenses had been comped to him by the Luxor. Marissa flashed him a knowing smile and he squeezed her hand appreciatively.\n\nThey took the rental car back to McCarron International Airport and waited for their flight. Alan fell asleep on the plane, but Marissa's heart raced. She fidgeted nervously as her lover slept. For the first time in what seemed like forever, her future was clouded by uncertainty.\n\nThey landed in Columbus and waited for their connecting flight. Alan went off looking for a restroom and something to eat while she watched their carry-on bags. As soon as he was out of sight, she checked her voice mail and found two messages.\n\nBoth were from Laurie.\n\nWhen she heard the other girl's voice, the bottom fell out of Marissa's stomach. After her conversations with Alan, after feelings within her had been awakened, she dreaded returning these calls. But she knew she had to.\n\nDialing the number, she hoped that it would roll over and trigger a game of phone tag.\n\nNo such luck.\n\n\"Hey there, sweetie,\" Laurie said.\n\n\"Hi there, yourself,\" Marissa replied, looking around to make sure Alan wasn't nearby.\n\n\"How was your trip?\" the other girl asked conversationally.\n\n\"It was fine. We're still in Columbus waiting for our flight home.\" Just a week ago, Marissa never would have used the term \"we\". Things can sure change quickly. \"Vegas was nice. Not too hot.\"\n\n\"Listen,\" Laurie said, cutting quickly to the chase. \"Do you remember Scott Milton? The stock broker? He's wanting you Wednesday and Thursday night. I told him you were out of town, but that I'd see if you would work this one on a quick turnaround.\"\n\n\"Um,\" Marissa stammered, trying to conjure an image in her mind. Scott Milton: tall, balding, likes to be spanked, good tipper. \"I don't know. I might take a couple of days off.\"\n\n\"A vacation from your vacation, huh? Let me know either way.\" She could hear Laurie flipping through some papers. All business. \"We're coming up on the travel season and I've got a couple of requests for you for next weekend. Give me a call when you get back in town.\"\n\n\"Sure thing,\" Marissa said. She closed the phone, sat back in the seat and let out a deep sigh. What am I going to do?\n\nAlan returned a few minutes later. He had a pretzel and a Sprite for himself, a double-helping of chocolate fudge brownie ice cream from Ben &amp; Jerry's in a waffle cone for her.\n\nThey sat together at the gate while waiting for their plane. Soon she found herself absently resting her head on Alan's shoulder as he thumbed through the gazillion photos on his laptop that he taken with his new camera. She smiled unconsciously every time she saw them together.\n\nAbout thirty minutes later, their flight was called. They held hands while waiting with their boarding passes.\n\nThe flight on the puddlejumper was quick and when they landed, there was a pall over both of them. Neither wanted to talk. Marissa put her arm in Alan's, trying to savour the memory of his touch.\n\nThe war within her continued as her emotions struggled for control. Over the past day or two, her heart had been winning. She allowed herself to feel for another person again. She liked that Alan made her smile.\n\nBut old habits die hard.\n\nThe part of her that had ruled her life for the past five years was trying to re-assert itself.\n\nAlan will break your heart.\n\nWhat will you do? Get a job? You won't find one that pays as well.\n\nWill you be Alan's private whore?\n\nYou've been in a bubble for the past week. Alan's going to realise that you're not his wife, and he'll put you out. \n\nHe's on the rebound.\n\nWhen he wakes up with a hooker in his bed, he'll come to his senses.\n\nShe was quiet as they retrieved their luggage. Alan led her to his car and then drove back to his house. So wrapped up in her thoughts, she didn't notice when he pulled into a grocery store on the way home.\n\nMarissa looked at her watch. It was almost six. \n\n\"What would you like for dinner?\" Alan asked as he got out of the car. Marissa got out, too.\n\n\"Um, I'm not really hungry,\" she said. Her body was still on Pacific Time.\n\n\"Well, I can't have you wasting away on me, how about some fish?\" Alan held out his hand and she took it.\n\n\"Alan, I really can't stay. I've&mdash;\"\n\n\"What? Got a hot date or something?\" he interrupted her with a nervous smile. \"Our arrangement was for eight days. By my math, that's tomorrow at 9 am.\"\n\nHe's just trying to put off the inevitable, a voice within her said. \n\n\"You're absolutely right,\" Marissa replied. She didn't know if she was rationalising or not, but technically, he was correct. Any excuse to spend more time with him. We'll talk tonight.\n\nThey went inside and Alan picked up a couple of items, some for dinner and some to fill out his pantry. After all, they had been out of town for a week.\n\nHe drove them back to his house and they unloaded their stuff. Alan sent her into the kitchen with the groceries while he unloaded their bags out of the trunk. In addition to their suitcases, Alan had his laptop case and the new camera bag. They had also boxed up the goodie basket he had bought for her and some of the flowers were set and pressed by the Luxor guest relations staff. Alan had Brianne's dress and his tuxedo shipped back via airmail, so they wouldn't arrive for a couple more days.\n\nAfter setting the bag down inside the door, Marissa watched Alan moving around his kitchen and thought that he looked a little more animated than the day they had met. He was even humming.\n\nAlan was finished putting all the groceries up, so he led her through the house back to his bedroom, each of them rolling their luggage. The house was large, with the master bedroom downstairs and three bedrooms upstairs. Although he and Brianne didn't need all the space, one day they had hoped to fill it with a family.\n\nWhen she walked into the bedroom, the first thing she noticed was that the bed didn't match any of the other furniture. The dresser, armoire and nightstands were all colonial-style pieces, but in the middle of the room was a Japanese-style four-post bed that stuck out like a sore thumb.\n\nAlan took her suitcase, set it in a corner and then went back out to the kitchen before she could ask him about it.\n\nShe followed him and sat down at the table while he prepared their meal. She poured them each a glass of red wine and watched him indulgently. He was so handsome.\n\nFirst he hard-boiled two eggs and then set them aside to cool. Then, he took the salmon filets and wrapped them in aluminum foil. He placed small cubes of butter in with each, a couple of slices of lemon and some fresh dill. Once everything was in, he sealed the foil up.\n\nIn a zip-top bag, Alan doused some fresh asparagus with half a bottle of Italian dressing and then let it sit for a few minutes. He ducked outside long enough to light the grill and a couple of citronella torches.\n\nAll the while, he rambled aimlessly. Like Marissa, it looked like he was trying to avoid the hard discussion they needed to have.\n\nComing back inside, Alan opened a bag of spinach leaves. He sliced up some fresh mushrooms and put everything in a big bowl with a handful of bacon bits and some shredded cheddar cheese.\n\nHe led her out to the back deck just as the sun was setting. The yard was fairly large and had a high privacy fence. There was a wonderful view of a lake that was down over the hill. On one side of the deck was a good-sized hot tub and on the other a nice set of deck furniture with a big wooden table and matching padded chairs. There were neighbours on each side, but the houses were far enough apart that they weren't too cozy.\n\nAlan put the asparagus and a handful of uncut mushrooms in a veggie basket on one side of the grill. After the veggies cooked for a few minutes, he set the salmon on the other side and let them sit for ten minutes on each side (at medium-high).\n\nThe evening was cool and a little humid, but it wasn't too bad. They decided to eat out on the deck.\n\nHe diced the eggs and put them in the salad, then served it with a delightful sweet and sour dressing. The salmon was cooked just right; the foil kept in most of the moisture and the center was just on the good side of rare. The asparagus was crispy and the marinade added a touch of flavour.\n\nMarissa hadn't eaten such a nice home-cooked meal in some time and was amazed at how quick and efficient Alan was. It definitely qualified him as keeper material.\n\nTheir conversation still wasn't about anything important, although they were much more comfortable around each other than they were a week ago.\n\n\"Don't you have papers to grade or something?\" Marissa asked.\n\n\"Not this past week,\" he replied with a grin. \"Spring break. It's not just for the kids.\"\n\nMarissa laughed and got up to refill their wine glasses. She wanted to have \"the conversation\" with Alan and needed some courage.\n\nWhile she was up, Alan was futzing with something by the hot tub.\n\nShe went back out on the deck and found soft music playing. The sun had disappeared over the horizon and the only light on the back deck was from the flickering torches and what shone through from the kitchen.\n\nAlan took a sip from his wine glass and then placed both glasses on the railing. He reached out and Marissa couldn't stop herself from stepping into his arms.\n\nThey started to dance slowly. Her heart raced.\n\n\"I had a wonderful time with you this week,\" Alan said in her ear.\n\n\"I did, too.\" Marissa was trying to figure out how to say what she needed to. The palms of her hands started to sweat. \"Listen . . . Alan . . . We need to&mdash;\"\n\n\"Shhhhh . . .\" he stopped her. His voice was gentle and the look in his eyes hypnotic. \"Not now. I know we need to talk . . . but . . .\"\n\nMarissa wanted to cry out or slap him or something. She was falling for him.\n\nA part of her wanted to know if he was worth it. If his unspoken promises would be delivered. If he felt the same way. She needed to hear the words.\n\nYet, the other part of her knew that he would catch her. He had treated her too well and his actions spoke louder than any words that could come out of his mouth.\n\nMarissa's life was about certainty. She desired clarity. Order. Alan brought confusion to her life. Disorder.\n\nFeelings and emotions bubbled up from the depths of her soul. It was exciting and scary at the same time.\n\nFor the first time, Marissa was allowing herself to be vulnerable.\n\nAnd that was the worst part.\n\nStanding there with him&mdash;under the stars, held in his protective embrace&mdash;Marissa wanted for nothing else.\n\nWhen he kissed her, passion consumed her and overrode everything else. She pushed all of her other concerns out of her mind. They didn't go quietly, but they went. Because when she was with Alan, she knew that he would never hurt her.\n\nIt can wait until tomorrow, Marissa rationalised some more to herself. We'll talk about it then.\n\nShe dropped all pretense of dancing with Alan. Instead, she wrapped her arms around his neck and pressed her body against him.\n\nHis hands went to the small of her back and he held her close.\n\nTheir kiss seemed to last forever. They lost themselves in the moment. She focused on his lips. They were soft and when they weren't on her own, they were nibbling on her ear or down the side of her neck.\n\nWhen he bit her just behind the ear, she let out a startled gasp. She pushed her chest forward, pressing her breasts flat against him.\n\nHe responded by reaching down and cupping her backside in one hand and pulling her as close as they could be while still wearing clothes.\n\nMarissa felt like she was held aloft in Alan's arms. It was a glorious feeling, yet scary at the same time.\n\nShe pushed all the negative thoughts out of her mind as one of Alan's hands reached up and cupped a breast. She cried out when he squeezed her like a ripe melon.\n\nThere was a bulge in his pants and it was pressed against her. Marissa wondered if Alan was going to take his time with her all night or if he was going to bend her over the table in the kitchen and fuck her. Just the thought of him doing either turned her on to no end.\n\nAs her hands went to his belt buckle, he pulled back.\n\nMarissa let out a frustrated sigh.\n\n\"Not before dessert,\" he said, the hint of a taunt in his voice.\n\n\"I thought you were dessert,\" Marissa purred seductively.\n\n\"Hold that thought,\" Alan winked.\n\nHe gave her one more kiss then began gathering up their plates. She made sure the grill was off and blew out the torches when it became apparent that they weren't coming back outside.\n\nThere was a pile of dishes in the sink, but Alan was already into something else. He had a taco salad shell on a plate and was in the fridge getting some other things out. Marissa watched him assemble the ingredients on the counter: cinnamon ice cream, honey, chocolate syrup, mini-chocolate chips, shaved almonds and whipped cream in a can.\n\nHe scooped several generous helpings of ice cream into the shell, then drizzled the honey over the ice cream. After that, he covered it all with whipped cream, and then sprinkled the chocolate syrup and almond shavings over their dessert.\n\n\"What's this called?\" Marissa asked. In her mind, she was thinking of different ways to use some of the ingredients.\n\n\"It's an ice cream taco,\" Alan replied. \"We used to go to a little Tex-Mex restaurant that served them. After a while, we figured, 'Why pay someone else to make them when we can do it ourselves at home'.\"\n\n\"It looks fabulous,\" Marissa said. She reached down and patted Alan on the backside. \"I hope you didn't use all of the whipped cream.\"\n\nAlan blushed and they dug into their dessert.\n\nA short time later, the dishes were still in the sink and Alan and Marissa were cuddled up on the couch watching TV. Both were full from dinner.\n\nHer head was rested against his shoulder, his arms pulling her to him. Marissa ran her fingers absently down his forearm.\n\n\"Can I ask you something?\" Alan said. \"About last night.\"\n\n\"Sure,\" Marissa's heart almost stopped.\n\n\"When you said the guy . . . from the insurance company . . . gave you a hate fuck,\" Alan started nervously. \"What did you mean? Do you feel like that with me?\"\n\n\"Oh, dear god, no,\" she breathed. \"No, Alan . . . I don't feel like that with you. He . . . He just wanted to get off with someone and I was there.\"\n\nMarissa turned so she was facing Alan.\n\n\"When I'm with you . . . I . . .\" her voice trailed off as she searched for the words. \"When you fuck me . . . it's not because you're angry or having a power-trip. It's because you're dick is controlling your actions. Like on Thursday, after the last of your meetings . . .\"\n\nShe started to get wet at the memory. \"You came through the door of the room. There was this look in your eyes . . . it was feral. You bent me over the arm on the couch and took me.\"\n\n\"You didn't mind?\" Alan asked.\n\n\"No, honey,\" she replied. \"I loved it. I was so turned on by how much you wanted me. You couldn't wait to get inside me. It was like you weren't in control and you needed to have me.\"\n\nMarissa could tell that Alan was getting excited.\n\n\"The best part, though,\" she said softly, \"Was that when you were done pumping and fucking and cumming . . . you didn't just walk away. You didn't simply bang me. You lifted me up and kissed me. Then you sat us down on the couch and just held me. Even when you wanted nothing more than to fuck my brains out, it was still like we were making love. Only harder and faster.\"\n\nThey both took a deep breath. \n\n\"I love being with you, Alan,\" Marissa said softly. \"And it's not just about the sex. When you fuck me, it's because you need me. When you make love to me, it's because you . . . you want me. I feel so comfortable with you. So safe. I haven't felt that way in a long time. And, no, I don't say that to all the guys. When I'm with you, I don't feel like you're trying to impress the people around you or that you're wanting to exert your power over someone else. It's like you . . .\"\n\nLove me, were the words that were on her lips, but Marissa couldn't bring herself to say them.\n\n\"What if I told you that I wanted to strip you naked right here and fuck you senseless?\" Alan said. That look was back in his eyes.\n\n\"Mmmm, that sounds like a good idea,\" Marissa purred. \"But I've got a better one . . . Wait here for a minute. I'll call you when I'm ready.\"\n\nShe gave Alan a lingering kiss, raking her teeth across his lips. He was hungry for more, but was willing to play her game. The look she gave him promised great rewards for a little bit of patience.\n\nMarissa went into the bedroom and dug around in her suitcase. She found some things she had picked up while she was out running errands earlier in the week. Then she went into the bathroom to brush her teeth and pull her hair back.\n\nAfter that, Marissa shed her clothes and rifled through Alan's closet. She found a handful of candles and lit them. The room was bathed in the soft glow from the votives and the moonlight coming through the open windows. \n\nShe flipped the lights out and took a deep breath.\n\nOnly a few minutes had passed and she was sure that her lover was dying to get into her.\n\n\"Oh, Alan,\" she called. \"Come and get it.\"\n\nHe must have been right outside the door because the handle turned almost immediately. \n\nAlan only got two steps into the room and stopped suddenly.\n\nMarissa stood in the middle of the room. She was wearing one of Alan's dress shirts. It was buttoned down, covering all of her private parts, but the top was open, showing just enough cleavage to be enticing. The sleeves were rolled up to the elbows.\n\nAround each wrist, Marissa had tied a long silk scarf in a slipknot. She had a seductive look in her eyes.\n\n\"I told you something that wasn't true last night,\" she said softly. \"When I told you I didn't have any fantasies, I was lying. I have one. And I want you to fulfill it.\"\n\n\"What can I do for you?\" Alan managed to breathe.\n\n\"I want you to tie me down and make love to me, Alan.\" The words weren't easy for her to say because trust was something she didn't pass around freely. \"I want to be helpless for you. I want to be at your mercy. I want you to make me scream.\"\n\nAlan could only stand there and gape at her.\n\n\"I'll beg, Alan . . . if that's what you want.\"\n\nTime seemed to freeze. Alan and Marissa stared at each other. Their eyes seethed with lust. They radiated desire. And something else. \n\nSomething not tangible. Something neither of them was ready to acknowledge.\n\nIn three steps, Alan crossed the room and took Marissa in his arms. He lifted her up, his hands under her ass. They kissed and she felt the butterflies in her stomach shift into overdrive.\n\nMarissa wrapped her arms and legs around Alan as he carried her to his bed.\n\nAs he started to set her down, Marissa reached beneath her and pushed the sheets away. Alan maneuvered her to the middle of the bed. His body pressed against hers.",
        "He was still fully clothed but Marissa sought to change that.\n\nHer lips went to his neck and she started to pull his shirt out of his khakis. She almost had it over his head when she felt Alan's hands on her wrists.\n\nFirmly, but gently, Alan lifted Marissa's arms so they were over her head. He had her pinned down.\n\nOne hand cupped her supple breasts through the shirt. \n\nTwo fingers pinched one of her nipples and she cried out.\n\n\"Are you sure this is what you want?\" he asked.\n\nAlan seemed to understand how hard this was for her. It went against everything she knew.\n\nMarissa was surrendering to Alan. Whether she wanted to admit it or not, she was his for the taking. \n\nHis earnestness. His honesty. The way he treated her. \n\nIt was better anyone than she had ever known. It was better than she thought she deserved.\n\nShe felt unworthy of Alan.\n\nThe way he touched her wasn't simply about desire. It wasn't about lust. It was love. She had never known that feeling before. The guys she dated in college were in lust with her. She only wanted their attention.\n\nThe men she serviced were only after her because they had power and ego to spare and needed to get off with someone. She only craved their money.\n\nAlan had started off as one of them. A client. But he triggered something in Marissa that turned her world upside down. He wasn't after a quick suck and fuck. She never felt used.\n\nEven when he saw his dead wife in his mind's eye, Alan was making love to Marissa. \n\nThen, as their time together went on, Marissa realised that he didn't see her as his call girl. His whore. He thought of her as his friend. And his lover.\n\nSoon, she realised that she felt the same way. She had stopped thinking of Alan as her client. As her john. Sometimes, when she lay in his arms, she found herself thinking of them. Of their future.\n\nMore than anything else, Marissa was giving up control. Not necessarily to Alan. To her emotions. The single-minded sublimation of her desires and her feelings was ending. If only she could say the words.\n\n\"Yes, Alan,\" she whispered. \"It's what I want.\"\n\nSome people think bondage is about domination. It's not.\n\nTrue, it's about control. But Marissa didn't want Alan to force his will onto her. She wanted to give herself to him. She wanted to put herself in a position where she was not in control.\n\nWhen someone allows another person to bind them, they are saying that they trust that person implicitly. That they are willing to give up control and place their safety and pleasure in the hands of their partner. Marissa had never felt that way with anyone. Until she met Alan.\n\nHis kindness disarmed her. \n\nHis tenderness weakened her. \n\nHis touch excited her.\n\nThe feelings he stirred within her made Marissa desire him in a way that was foreign to her. Yet, when he held her, he seemed so familiar. \n\nAs he held her through the nights, she couldn't help but think that she had lived nothing but a lie for the past five years. That she denied herself basic human emotional comforts. All for money.\n\nMarissa didn't just want to give herself to Alan. She needed to.\n\nAlan gave her a tender kiss then pulled away. He took one of the scarves and tied it to a bed post. Marissa pulled against it, but it held.\n\n\"Would you like a pillow?\" he asked, moving to the other side.\n\n\"Just one,\" Marissa replied and he propped her head up. He gave her another gentle kiss and then tied the other scarf to the opposite post.\n\nShe pulled against that one, too and it held.\n\nMarissa lay in the middle of the big bed. Alan was next to her, lying on his side.\n\nHe put his hand under her chin and turned her towards him. His lips met hers. They were soft and warm.\n\nMarissa looked into Alan's eyes. In the soft glow of the candles, she saw her lover staring back at her. The flickering light showed his desire. And something more. \n\nAlan leaned in and kissed her again. One of his hands found its way into the opening of the shirt Marissa was wearing.\n\nHe gently squeezed her breast and she let out a moan. \n\nTheir tongues continued to duel.\n\nHis mouth pushed her head to one side and he kissed his way over to her ear. A shiver ran down her spine when he bit her neck. His teeth followed the nerve that ran down to her shoulder.\n\nThe hand on her breast withdrew long enough to un-do one more button. He pushed the shirt to the sides so both breasts were out, their nipples sticking straight up.\n\nShe stifled a scream when she felt the warmth of his mouth on her chest. Then he squeezed the other breast and she cried out.\n\nMarissa arched her back and tried to push the entire tit into Alan's mouth.\n\nThen he kissed his way over to the other one. She tried to reach for Alan, but her bonds wouldn't give.\n\nHe alternated his mouth on her tits, paying careful attention to both. When he wasn't suckling on one of her breasts, he was kneading it firmly, but tenderly.\n\nWhat Marissa enjoyed more than the sensation of Alan playing with her chest was his loving touch. He wasn't in a hurry. \n\nWhen his fingertips brushed her skin, it made her pussy tingle.\n\nMarissa turned her head and tried to nibble on Alan's ear, but he pulled away. He was denying her the things she wanted. At the same time, she relished not being in control. It fueled her desire for Alan.\n\nHis body was pressed against hers. She could feel his erection through his pants. Marissa knew he wanted to be closer to her. But she also knew he would make her wait.\n\nAfter he had kissed and sucked on every square inch of her breasts, Alan pulled back. He lay on top of her and his tongue was back in her eager mouth.\n\nThen he rolled off the bed and stood at her feet. She lay there, her arms spread. Her body was covered only by his shirt. Her legs were together and she turned her hips so he couldn't see her pussy, not out of modesty, but to tease him just a little.\n\nThey broke eye contact only when he pulled his shirt over his head. Then he unbuckled his belt. His pants and boxers fell to the floor.\n\nSoon Alan was naked. His cock was erect. He took it in his hands and stroked it a couple of times, contemplating what he was going to do next.\n\nA wicked grin formed on his face.\n\nAlan climbed on to the bed and crawled slowly up her body, like a predator stalking his prey.\n\nMarissa shivered with anticipation.\n\nHis hands went once again to her breasts and he kissed her hard. His tongue forced its way into her mouth.\n\nHe squeezed her breasts with both hands.\n\nFor a moment, she forgot she was tied down. She went to put her arms around Alan, but the ties held. She let out an exasperated sigh when he pulled back.\n\nAlan was straddling her hips. His balls rested over the mound of her pussy, separated only by the flimsy dress shirt. His cock lay across her belly.\n\nHis mouth went to her clavicle and she cried out. He kissed his way down into the valley between her breasts. Then his mouth was once again on her nipples. After paying attention to both, he blew on them. The cold air on the wet skin made them even harder and Marissa gasped with pleasure.\n\nAlan's hands went to the next button and has he opened the shirt further, he kissed his way down her belly. Each touch by his lips sent chills through her body.\n\nHis fingertips grazed her skin. As he pushed the shirt aside, Marissa felt like he was moving torturously slow. Of course, that only heightened her excitement. \n\nThe way he worked his way down her body was like he was opening a present, which was rather apropos. Marissa was giving herself to Alan, and he was savouring every lingering touch.\n\nFinally, Alan's mouth was at her belly button. He was sitting back on his heels, his bare ass just above her ankles. There was one button left. He opened it and pushed the shirt to the side.\n\nMarissa was totally exposed for him. \n\nAlthough her legs were together, she was splayed out on the bed for her lover.\n\nShe unconsciously pulled against the bonds, but they didn't give. \n\nForcing herself to look up at Alan, she saw him devouring her with his eyes. That one look told her everything.\n\nHow much he desired her. How much he loved her.\n\nEver so slowly, Alan's mouth went back to her belly, kissing her belly button and then down toward the mound of her pussy. \n\nHer legs parted at his touch.\n\nHis teeth raked the insides of her thighs and she stifled a gasp. Marissa could only arch her back.\n\nShe could feel his breath on her pussy. She knew she was soaked.\n\nAlan's tongue was warm and he licked the sensitive spot just on the inside of her leg. Then he lapped around her outer labia.\n\nA shiver ran the length of her body.\n\nMarissa's body shuddered when he blew on her, the cold blast of air causing her body to break out in goosebumps. \n\n\"Oh, god, Alan,\" she managed to gasp through her clenched teeth.\n\nHe was driving her crazy.\n\nShe felt his hands under her ass and she lifted her hips in anticipation.\n\nWhen Alan pressed his tongue against her clit, she tried to reach down and pull his head into her, but the ties around her wrist still would not give.\n\nMarissa moaned with a combination of pleasure and frustration. Pleasure at what Alan was doing with his mouth. Frustration because she wanted him to stop teasing her!\n\nLike the touch of his hands, Alan's mouth wasn't hurried. He flicked her clit a couple of times with the tip of his tongue and then pressed it flat against it.\n\nHe was building up slowly. His hands squeezed the cheeks of her ass.\n\nHis tongue entered her pussy and then withdrew and went back to playing with her clit, which was swollen for him.\n\nMarissa's breathing became short when his teeth raked her pussy. He sucked on her clit and all the blood seemed to drain out of her head.\n\nAlan's tongue moved faster. \n\nOnce again, Marissa tried to sit up, but couldn't.\n\nShe pushed her hips forward, as if she could force her pussy into Alan's hungry mouth.\n\nHis hands held her steady, though. His fingers dug into her ass.\n\nMarissa began to groan uncontrollably.\n\nFaster.\n\nWrapping her legs around the back of his head, Marissa began to thrash to and fro on the bed. At least as much as she could while her arms were still bound.\n\nShe wanted to use her arms, her legs, anything to pull Alan's mouth down on her pussy. To give her the relief she craved.\n\nBut Alan had other ideas.\n\nHis mouth left her pussy and she groaned with disappointment.\n\nThen he entered her with a finger. Then two.\n\nAlan's tongue flicked across her clit. \n\nHarder and faster. \n\nTongue and fingers.\n\nAlternating between the inside and the outside of her, Alan licked and sucked and rubbed Marissa until she was raw.\n\nHer body broke out into a sweat.\n\nMarissa's fingers wanted to grasp something and she had to settle for the silk ties.\n\nHer knuckles were white.\n\nFinally, Alan's mouth covered her pussy and he worked towards a crescendo.\n\nThrowing her head back into the pillow, Marissa's hair fell across her face. She didn't care.\n\nHer breathing was ragged. She looked down and saw Alan's eyes looking back up at her.\n\nThe same intensity was there.\n\nHis mouth was over the mound of her pussy. She could feel his tongue all over her and his fingers inside her.\n\nOnce again, she pulled against the scarves, but to no avail.\n\nWith a piercing scream, Marissa's vision blurred. Every nerve ending in her body began to tingle.\n\nWhen the orgasm hit her, she tried to sit up, but the ties held. She fell back into the bed.\n\nMarissa arched her back as her lover assaulted her pussy with his mouth.\n\nAlan lapped up her juices.\n\nEven as the room started to spin, all Marissa could do was hang on as her orgasm overpowered her.\n\n\"Oh!\" she cried out. \"I'm cumming . . . oh, fuck . . . oh, Alan!\"\n\nTears rolled down her cheeks. \n\nThey weren't just because of the intensity of her orgasm.\n\nThey were tears of joy. And of desire. \n\nAgain and again, waves of pleasure ran from her fingertips to her toes.\n\nMarissa gasped for breath.\n\nHer heartbeat pounded in her chest. She started to feel faint.\n\nWith her heels locked behind Alan's back, Marissa's entire body tensed one final time and she let loose with an ear-splitting scream.\n\nThen the room went black.\n\nIn her mind, she was falling. Falling fast. Into darkness. She didn't know which way was up. Marissa was confused.\n\nShe felt something soft against her skin. It was warm and comforting. It enveloped her. It slowed her fall until she was steady.\n\nSlowly, her vision returned. Alan was above her, his face lit only by the flickering candles.\n\nHe had a worried smile on his face. His body was pressed against hers.\n\nOne hand was on her face, brushing the hair out of the way.\n\nAlan's kiss was gentle. She was still bound. \n\nMarissa could feel her breasts against Alan's chest. His cock was poking into her belly.\n\nThe concerned look on Alan's face passed away once she regained consciousness and he kissed her again. His lips lingered on her.\n\nThey tasted of nectar. Her nectar.\n\nShe wanted to embrace him, but she couldn't.\n\nAlan sat back on his heels. His erect cock was pointing right at her.\n\nHer eyes never left his body.\n\nWith his cock in his hand, Alan began to rub the head against her still-sensitive clit.\n\nHer orgasm had subsided, not passed. She began to moan.\n\n\"Do you like that?\" Alan asked.\n\n\"Yesssss,\" Marissa slurred. \"That feels so good.\"\n\n\"How good?\"\n\n\"So fucking good.\"\n\nAlan pushed his hips forward and the head entered her.\n\n\"Give it to me,\" she said.\n\n\"Give what to you?\"\n\n\"Give me your cock!\"\n\n\"How do you ask?\" Alan's mouth went to one of her breasts. Marissa arched her back.\n\nStill, only the bulbous head of his cock was inside her pussy.\n\nHer orgasm left her extra tight.\n\n\"Pleeeeeease . . .\"\n\n\"Please what?\"\n\n\"Please give me your cock, Alan,\" Marissa whimpered. \"Give it all to me.\"\n\n\"What do you want me to do?\"\n\nHe began to move his hips faster, but wouldn't give her any more than just the tip.\n\n\"I want you to fuck me.\"\n\n\"You want what?\"\n\n\"Fuck me!\" Marissa couldn't take it any more. \"Fuck my pussy . . . Please!\"\n\nShe looked up at Alan and saw a satisfied grin on his face. He had her begging.\n\nIt was everything she wanted.\n\nAlan was holding her close. He was taunting her with short thrusts. Not out of meanness. Not out of spite. Out of love.\n\nMarissa was subject to his mercies. She was not in control. She had given it to Alan and he was proving to her that he would never abuse that control. \n\nSure, he might tease her. Sure, he might make her wait or make her beg. But he had always been worthy of her trust. Marissa just needed to be persuaded to open herself up to him.\n\nAlan kissed her again and then pulled back. He cupped a breast in one of his hands.\n\nThere was a thoughtful look on his face.\n\n\"What are you thinking?\" Marissa asked. She thrust her hips up, trying to take more of his cock inside her.\n\nAlan paused, then his mouth split into a wide smile. \"I'm trying to decide if I want to make love to you nice and slow . . . or if I want to fuck you hard and fast.\"\n\nMarissa tried to put her arms around him but, of course, she couldn't. \"We've got all night, Alan. Why don't you do both?\"\n\nHe smiled back at her. \"That's the best idea I've heard in a long time.\"\n\nSlowly, he began working his hips back and forth. With every stroke, he gave her a little more. Partly to torture her. Partly to let her pussy loosen up to accommodate him.\n\n\"Yesssss,\" Marissa moaned. Her entire body tingled.\n\nThe fire Alan had ignited in her earlier began to build back up steadily.\n\nThey kissed once again. He wasn't going fast, but instead built a steady rhythm.\n\nFinally, he hit bottom.\n\nThey both let out contented sighs.\n\nAlan held it all the way inside her for several long seconds. Marissa felt so full. Neither wanted to move.\n\nThen he pulled back until he was almost out of her. And he thrust it back in, not fast, but hard.\n\nThey both gasped.\n\nAlan altered his rhythm, giving her several steady, shallow strokes, followed by two hard and deep. Then four short strokes. Then one more all the way in.\n\nMarissa's hips began to meet his thrusts.\n\nHer clit ground against the top of his cock.\n\nHe was just the right length and shape for her pussy. He brushed all the right spots in just the right ways.\n\nAlan's thrusts came harder. Faster.\n\nHis mouth went to her neck. Marissa tried to kiss him, but he had other ideas.\n\nUsing his teeth, Alan nibbled up to the underside of her jaw. A shiver ran straight down her spine to her pussy.\n\nHer legs were spread wide and Marissa arched her back, trying to take as much of Alan's cock inside her as she could. \n\nThe couple moved in unison, each bucking against the other in a familiar dance.\n\nOnce again, Marissa grasped on to the scarves until her knuckles turned white.\n\nShe shivers ran from her head to her toes. The tingling in her pussy intensified.\n\nAlan's rhythm became steady as he pumped in and out of her. \n\nHer pussy was slick with juices and made a satisfying sucking sound with each thrust.\n\n\"Oh, Alan,\" she whispered, unable to contain her second orgasm. His hips were pounding against hers.\n\nThere was an explosion of pleasure that enveloped them both. She vaguely felt a burning in her wrists as she pulled in vain against her bonds, but it was nothing compared to the ecstasy of having Alan inside her.\n\nHe let out a feral grunt and his cock began to flare and pulse within her.\n\nShe felt so attuned to their coupling that she imagined she could feel his cum squirting into her life-giving womb.\n\nWith one final thrust, Alan held his cock inside of her. He still gasped for breath as his cock gave a couple more dry shots from his empty balls.\n\nThe hand on her breast hadn't moved.\n\nAlan's body was limp for just a second and then he jerked and lifted himself up. Marissa took a deep breath and wrapped her legs around Alan's ass so his cock wouldn't leave her.\n\nWith his free hand, Alan released the slipknots around Marissa's wrists. Her arms and shoulders were numb, but she still threw them around Alan, pulling him close to her.\n\nThey held each other for a long time.\n\nMarissa never wanted to let Alan go.\n\nHe kissed her gently and then pulled away.\n\nShe let out a disappointed sigh when his cock slipped out of her, but he quickly rolled her over on her side and spooned up behind her.\n\nHis cock wasn't erect, but it wasn't flaccid, either, and he slipped it back into her easily. \n\nMarissa took Alan's strong arms and pulled them close around her. She wiggled her ass against him.\n\nHis mouth gently bit her shoulder through the shirt and he nuzzled up against the back of her neck.\n\nThey seemed to fit together perfectly.\n\nNeither said a word.\n\n\"Thank you,\" Alan whispered in her ear.\n\n\"For what?\" Marissa asked, a dreamy smile on her lips.\n\n\"For trusting me enough to tie you down,\" he replied. \"I know you don't . . . you probably don't let all the guys do that to you.\"\n\nMarissa turned her head and kissed Alan on the cheek. \"You're the first person who has ever tied me down.\"\n\n\"Well, thank you. I'm glad I bought this bed then,\" Alan said with a slight laugh. \"My old bed doesn't have posts.\"\n\n\"What old bed?\"\n\n\"Brianne and my old bed,\" she could tell Alan winced at the mention of his wife. \"It's in the guest bedroom upstairs. She liked waterbeds so that's what we had when we were married. I hated the damn thing. I always felt like I was floating away. . . . So a couple of weeks after she died, I went out and bought a new bed with a firmer mattress.\"\n\nMarissa clutched Alan's arms. \n\nThis wasn't their bed, raced through her mind. \"So you've never had anyone in this bed?\"\n\n\"No, you're the first,\" he said thoughtfully.\n\n\"Well thank you for letting me be the one to break it in with you.\" Her lips were eager to find his. She reached around behind him and patted him not-so-playfully on the backside.",
        "\"I can think of a few more ways to finish breaking it in,\" Alan said. If she could have seen his face, Marissa was sure he had a wicked glint in his eyes.\n\nMarissa rolled over on to her stomach. She felt Alan twitch inside her and knew he was getting his second wind.\n\nIt turned out Alan had a third wind in him, too.\n\n*************************** \n\nRolling over lazily, Marissa hunted around for Alan. He wasn't there. She sat up. The scarves were still tied to the bedposts. Alan's shirt, which she had been wearing the night before, was on the floor, having been thrown across the room some time in the middle of the night.\n\nThe bedsheets were rumpled. The comforter was on the floor. The sun was up but she still felt like it should have just been daybreak. Her body hadn't caught up from the jetlag.\n\nMarissa was sore, especially her shoulders, but it was a good sore.\n\nShe stretched out and called Alan's name. No response.\n\nTrying not to move her arms too much, she stumbled out of bed and went into the bathroom. Her hair was a glorious mess. She was even sporting a couple of fresh hickeys on her neck and collarbones.\n\nThe memory of the previous night's sex made her smile and blush at the same time. \n\nI guess I won't be working for the rest of the week, she thought with a chuckle. Or at least until these marks go away.\n\nMarissa brushed her teeth and then went back into the bedroom. She picked up Alan's shirt off the floor and put it on to ward away the morning chill.\n\nHer bare feet on the hardwood floor, she padded out to the kitchen. Alan was no where to be found.\n\nThe pesky voice returned from her subconscious. Her heart rate doubled. She started to feel panicky.\n\nShe checked the garage and Alan's car was gone.\n\nHe can't have just left me, she thought. This is his house. It's not like he's going to stiff me completely.\n\nMarissa went back to the bedroom and began to dress. \n\nI told you so, the one voice said. He got up and left. You made yourself vulnerable to him and now he's just going to treat you like the whore you are.\n\nNo, he's not! the other voice said, the voice she had spent the last five years ignoring. He'll be back. There's a good explanation.\n\nThen why didn't he leave a note? Why isn't he cooking you breakfast? Why didn't he wake up with you? He used you and fucked you.\n\nIt was all she could do not to burst into tears. Marissa put Alan's shirt in the hamper in his bathroom and found a pair of shorts and a blouse in her suitcase. She looked around to make sure she wasn't forgetting anything and then wheeled her things out to the kitchen.\n\nHunting through the fridge and his pantry, Marissa made herself a small breakfast and sat at the table to await Alan's return.\n\nAll the while, all her insecurities re-surfaced. Old habits die hard.\n\nShe couldn't believe that Alan would just leave her like that. Didn't he want her? He said he did. Was he lying? Or was he just now coming to his senses? After all, they had a romantic week away, and now that they were back in their regular worlds, maybe things weren't so Pollyannaish after all.\n\nMost of her breakfast remained uneaten when Marissa heard the garage door open and Alan's car pulled in. She looked over at the stove. It was close to ten o'clock. Contractually, their relationship would end once he paid her.\n\nWhat am I going to do?\n\nThe door opened quietly and Alan entered the kitchen. He saw Marissa's suitcase by the door and then his eyes fixed on her, sitting at the table where they had their first conversation.\n\nHe had two envelopes in his hands.\n\nThe expression on her face must not have been very good because he immediately started looking worried himself.\n\n\"Hi,\" he said meekly. \"I'm sorry for leaving so early . . . I, uh, didn't think they would take so long at the bank.\"\n\n\"That's okay,\" Marissa replied, more curtly than she should have.\n\nAlan sat down at the table. He placed the thick envelopes on the table. Both of them knew what those envelopes represented.\n\nNeither wanted to be the first one to talk.\n\nFinally, Alan cleared his throat. \"I . . . um . . . had a great time this week, Marissa.\"\n\n\"I did, too,\" she said with a sigh. She needed a sign from him. Something to tell her that she hadn't been played.\n\n\"I&mdash;\" he started. There was a long pause. \"I don't suppose we could see each other again? Go out to dinner or for drinks?\"\n\n\"I don't date clients,\" Marissa replied reflexively, and almost immediately she wished she had kept her mouth shut.\n\nAlan fell silent. He looked away and out the window.\n\nShe searched his face for hints. There was pain there, not the same as he felt for his wife. But something new. It probably matched her own.\n\nHer emotions struggled for control. Her once-contained feelings told her to say one thing. The business-like whore told her to say something different.\n\nAlan appeared to be at a similar loss for words.\n\nWhat are you thinking? she wanted to ask him, but couldn't.\n\nAs the two parts of her warred over what she should say, they quickly came to a consensus. Shit or get off the pot. Make a decision, Marissa. Head or heart. You can't follow us both.\n\n\"Did we have something last week, Alan?\" she said finally. Her voice was so low, she wasn't sure she said it out loud. \"Something real?\"\n\n\"Yes,\" he whispered. His response was so immediate, she knew it could only be the truth.\n\nWhat am I going to do?\n\nOrder or disorder. Money or love. \n\nWhat am I going to do?\n\nMarissa stood up, her chair sliding back across the floor. Alan looked up at her in alarm.\n\n\"I don't want your money, Alan,\" she said. Her decision was made. Her stomach churned. \n\nHead or heart. Those were her choices. She could walk away from Alan. He was, after all, a paying client. She had buried her feelings before, she could do so again.\n\nBut at what cost? Happiness? A family? Love?\n\nAnd for what? A few dollars and another decade in a profession she loathed? Was it worth it?\n\nNot any more.\n\nAlan had a disbelieving look on his face. His jaw dropped. \n\n\"I need to know that there was something between us,\" Marissa said, fighting to keep her voice steady. \"We spent a whole week away. People aren't themselves on trips and vacations.\"\n\nShe took a deep breath. Her eyes began to water up. \"I had a wonderful time with you. You truly treated me like a princess. And I appreciate that. But life isn't all passion and romance. We have lives here. You have the university. I have a job. We can't just pretend like everything is normal. At least I can't. My life isn't normal.\"\n\nMarissa paused long enough to take a deep breath and wipe the tears out of her eyes. \"You made me feel . . . you made me feel things I thought I had forgotten. You are the kindest man I have ever met. You never treated me like a whore, but that's what I am.\"\n\nHer voice had risen almost to the point where it was about to break. \"Look at me, Alan! Men pay me to have sex with them. I fuck a hundred different guys a year. How can you want that?\"\n\nShe choked back sobs. Alan was trying not to cry himself.\n\n\"I don't care how many men you've had before me.\" Alan said, his voice gravelly. \"I don't care how we met. I thought I wanted one thing from you, but I didn't. I was wrong. I don't want someone to be Brianne. I don't want a mistress and I don't want a whore. I want you.\"\n\nShe stood there for a long moment, trying her best to hold it together.\n\n\"Are you sure, Alan?\" she whispered. \"You don't know how much baggage I come with.\"\n\n\"Yes, I'm sure,\" he replied softly.\n\nMarissa took a deep breath, then reached into her purse. She pulled out an envelope and thumbed through a stack of hundred dollar bills, her winnings from the casino.\n\nShe placed a large pile of money on the table. \"There's nine thousand dollars there. That's the five you gave me at the beginning of the week, the thousand you gave me on the first day and three thousand for the Lasik. We're even.\"\n\nA couple of deep breaths later, Marissa put the remaining cash back in her purse. Alan could only stare at her, dumbfounded.\n\n\"If I take your money, I'll always be your whore,\" she said, her voice barely more than a whisper. \"I want you, too, Alan. I want us. I want it more than anything in the world. I'm going home now. You've got my number. Call me. We're going to make a date and we're going to go out and we're going to do this right.\"\n\nMake me feel like I'm worth it, she wanted to say.\n\n\"What about Laurie?\" Alan managed to say once he found his voice. \"At least take enough to pay her cut.\"\n\nMarissa shook her head, \"No, Alan. I have enough saved up to cover that.\"\n\nShe turned and walked towards the door that opened into the garage. Her gait was quick and deliberate. She couldn't face Alan like this. She just wanted to make it into her car and down the street before she fell apart. Somewhere that Alan couldn't see her. One hand was on the handle of her suitcase, the other reaching for the door.\n\n\"Marissa,\" Alan called.\n\nHer heart skipped a beat. Her stomach flipped.\n\nThis is what I want, she thought, Isn't it?\n\nShe didn't turn around, but she paused, waiting for him. Hoping for the words she needed to hear.\n\n\"What if we just skip ahead to the part where I say, 'I love you'?\"\n\nMarissa couldn't see him, but she heard Alan's footsteps as he crossed the kitchen.\n\nHe stopped right behind her.\n\n\"I've had two years to myself. Wallowing in self-pity and anger,\" he said softly. \"Brianne was everything I could ever want in a partner and a spouse. We were so happy together. We had dreams and hopes and love. And now she's gone. I lost one soulmate. I don't want to lose another one.\"\n\nThe hand closest to the door knob pulled back. The tears came again. This time, Marissa could not stop them.\n\n\"Don't walk out that door, Marissa.\" Alan's voice was almost pleading. \"Not like this. I guess it would be patronising for me to say that I'll support you but . . . but . . . That call you took at the airport. . . . It was about another job, wasn't it?\"\n\nMarissa's heart nearly jumped out of her chest.\n\n\"I can't stand the thought of you being with anyone else&mdash;\"\n\nI can't either.\n\n\"&mdash;And I can't stand the thought of you not being the first thing I see when I wake up in the morning.\"\n\nI can't either.\n\nWhen Alan's hand touched her shoulder, she spun around and tried to look her lover in the eyes. She couldn't see anything her vision was so blurry. Marissa fell into his arms. They kissed hungrily. The tears flowed freely from both of them.\n\n\"Tell me you love me, too,\" he whispered, and for the first time since she met Alan, the voices within her were not struggling for control.\n\nMarissa felt as if a weight were being lifted from her shoulders, and that her soul was suddenly freed from the cage she had built for herself over the past five years. She wanted to laugh and cry at the same time. Marissa had finally found herself. All of her barriers were down.\n\nWaves of suppressed emotion washed over her and she found she liked the feeling. She knew that the man holding her would never hurt her. He would never use her. He would love her as she deserved. As she needed. And she would love him back, without reservation.\n\n\"I love you, Alan,\" she said as her voice broke. The words came so easily now. \"I love you. . . IloveyouIloveyouIloveyou . . .\"\n\nWhere would they go from here? How could she walk away from Laurie? What was she going to do with the rest of her life? Sure, Marissa had some money saved up, but how long would it last? What skills did she have? She needed something other than just being Alan's mistress.\n\nMarissa pushed those nagging questions out of her mind. Alan's embrace promised safety.\n\nAnd in this moment, that was all that mattered. \n\n*************************** \n\n\"Hamada-san,\" Marissa called. \"What can we do for you?\"\n\nSurveying the kitchen with an aura of imperturbable command, the short Japanese man was the proverbial eye at the center of the storm. He never used more words than he had to, was an excellent chef and had a wry sense of humour about him. Amidst all the mayhem, he was right in his element. \n\nHe gave her a slight smile that only barely showed his teeth. He was obviously enjoying himself. He had a slight accent, but spoke very clearly. \"Everything is under control.\"\n\nA little over two years had passed since Alan and Marissa returned from Las Vegas.\n\nSomehow, they made it work.\n\nWhen they compared notes, they were surprised to find out how much they were worth together. Alan still had some of his inheritance left from his parents's death and had made some smart investments with his book sales and university salary. Marissa had a good chunk of change saved up for the day when she would no longer be a call girl. Most of her money was in several investment accounts that were to have been her retirement. Plus, Alan had a fair amount of equity in his house, and Marissa's was paid off.\n\nThat didn't count the thirty-two thousand dollars Marissa had refused to accept from Alan for their first week together (twenty thousand he was paying her for the week, a twenty percent tip, the one thousand he had given her when they first met, the three thousand for the Lasik, and four thousand for the money Marissa saved him on the TGR kitchen equipment deal) and the sixty-five thousand dollars worth of kitchen equipment that was sitting in a warehouse waiting to be delivered.\n\nAlan continued to teach at the university and lacking any other direction, Marissa threw herself into the restaurant. She had a good head for business, but knew nothing about cooking. What she did know was the art of making a deal. She quickly learned how to negotiate with contractors, navigate the health department's bureaucracy, talk to the IRS and all about managing employees in a small business.\n\nFirst of all, Alan and Marissa incorporated themselves as BAM Food Services, Inc. (Brianne, Alan and Marissa) and then liquidated some of their investment accounts, pouring them into the restaurant. They calculated their start-up costs and took out a couple of low-interest small business loans. Yes, they could have paid cash, but they wanted to have some savings left in case there was an emergency.\n\nThey couldn't find a building they liked, so they built a new one, and made it look exactly how they&mdash;and Brianne&mdash;wanted.\n\nThen they went looking for an executive chef. That's how they landed Hamada Takateru. He was the best Italian chef they could find in the area. Sure it was strange having a Japanese man running the kitchen at an Italian restaurant, but not quite as strange as one of the co-owners being an ex-hooker who looked just like the other co-owner's first wife. They placed their entire kitchen in Hamada-san's capable hands and then built their business around the cuisine.\n\nIt took almost two and a half years to get everything finished, from a cold start to opening night.\n\nAnd then, of course, there was the wedding Alan and Marissa somehow found time to fit in.\n\nThere were licenses to apply for, construction to oversee, permits to obtain. Some days were good. Some days were complete cluster-fucks. Yet, somehow, the good days outnumbered the bad and the restaurant opened on a crisp autumn day, using the name Brianne had picked out, \"A Taste of Italy.\"\n\nMarissa didn't want anything to do with the restaurant side of the operation. She was the (self-trained) accountant and handled all the numbers. Alan told her what he wanted or needed. She told him how much he could spend.\n\nThey hired the kitchen and service staff a couple of months ago, and the week before they had a dry run for friends and family. It was a disaster. Orders were mixed up. Food was cold. They ran out of meatballs. The soda fountains wouldn't mix the Diet Pepsi syrup with the water and CO<sub>2</sub>. One of the gas ovens wouldn't light. Mr. Murphy paid one hell of a visit.\n\nThrough it all, Alan and Marissa remained calm and everything got fixed (they hoped).\n\nThis was the night of their grand opening. They received a fair amount of buzz in the local press and there was a good crowd in addition to the people who had received special invitations.\n\nAlan was running around nervously, checking on all the little things. Of course, Hamada-san had the kitchen working at 110% capacity, the service manager Anastasia had things under control out front and John-Marc had the bar staff working under his careful supervision.\n\nMarissa made sure to say hi to some of their high-profile clients, like the city councilmen at table 53 and the food critic from the local paper who was just getting seated. She roamed the restaurant, taking pictures of the staff and some of the patrons, especially Alan's friends from the university. Even Laurie came by to see how her former working girl was doing.\n\nAfter checking in with some of the staff, Marissa retreated back into the office. The opening was out of her hands now. She and Alan had poured their hearts and souls&mdash;not to mention a whole lot of money&mdash;into this venture over the past two and a half years. They had hired good people. They bought the best equipment. They marketed their business the right way. They had a good menu, fresh ingredients, a healthy wine list and reasonable prices.\n\nNow they just needed people to come.\n\nShe took off her jacket and hung it over the back of the chair. She picked up her phone and sent Alan a text message. Then she moved a couple of things around the desk, walked around to the other side and waited.\n\nA few minutes later, he burst through the door. There was a crease in his brow that came only when he was under intense stress. She had an amused smile on her face.\n\n\"You worry too much,\" she chided him gently. \"Lock the door.\"\n\n\"What are you doing?\" Alan asked abruptly. Since they had met, Alan had only grown more handsome. Their relationship blossomed, strengthened by their mutual commitment and all the time they spent together. \"Have you seen&mdash;\"\n\nMarissa turned, bent over the desk and spread her legs. Her ass stuck out for Alan. She flipped up her skirt to show him that she wasn't wearing any panties.\n\n\"Shut up and fuck me.\"\n\n\"We don't have time&mdash;\"\n\n\"We do if you hurry.\" Marissa looked over her shoulder with an alluring smile.\n\nAlan was torn. He wanted to get back to the restaurant. At the same time, he couldn't pass up his wife. He had never passed up his wife. And he didn't intend on starting now.\n\nWith two steps he was behind her. She heard him fumbling with his belt buckle and soon his pants fell to the floor.\n\nOne hand was on her ass. She felt the head of Alan's cock rubbing against the slit of her pussy, which was already wet for him. \n\n\"What are you waiting for, Alan?\" Marissa said with a huff. \"Fuck me. Fuck my pussy. We haven't christened the restaurant yet.\"\n\nThat was all he needed.\n\nWith one hard and fast push, his cock was buried deep inside her. \n\nMarissa braced herself against the sturdy solid-oak desk. This was one of the reasons she had bought it. And with the pounding Alan gave her, it was worth every penny.\n\nHe didn't last long, but she didn't want him to. This was what they called a \"fuck and run\". They may have been married for close to two years, but the passion never faded.\n\nShe still loved it when Alan took her. Sometimes she did it to him, too, but more often than not, it was Alan who would spontaneously strip her down, mount her and get off. Sometimes she would orgasm. Most of the time, she didn't, and that was okay. She loved walking around with Alan's cum inside her. It made her feel as if he was always with her.",
        "Alan's fingers dug into her ass.\n\n\"Fuck my pussy, fuck me hard,\" she chanted, fairly sure that no one outside the door would hear them over the commotion of the restaurant's opening night. She really wanted to scream for Alan, but there is a time and a place for everything and that would come later.\n\nHe gave her one final thrust and then held it. Her womb filled with warmth and she knew Alan was cumming inside her. \n\nWith a sigh, Alan pulled back and his cock popped out of her. She turned and was on her knees instantly. Taking his deflating member in her mouth, she licked it clean.\n\nThen she pulled his pants up and helped him tuck in his shirt.\n\nShe smoothed out the creases in her blouse and skirt, then stepped into Alan's waiting arms.\n\n\"You're a hell of a business manager,\" Alan said with a playful grin. \"Don't tell my wife I'm sleeping with you.\"\n\n\"You're a hell of a business partner,\" Marissa smiled back at him. \"Don't tell my husband that I'm addicted to your cock.\"\n\nAlan pulled her close and they held each other for a long moment. They had been busy for the past couple of week leading up to the opening and hadn't had as much time together as they would have liked.\n\n\"I love you, Mrs. Gibson,\" he whispered in her ear.\n\n\"I love you, too, Mr. Gibson,\" she replied, trying to steal one more kiss. Then she patted him on the backside and sent him back out into the restaurant.\n\nAll too soon (or for the guy who had to hand-make more ravioli halfway through the shift, not soon enough), the night was over. It was almost midnight. The last patrons had been served, the bills paid. There had been a few tense moments, but for the most part, it had gone well. Better that Mr. Murphy had wreaked havoc upon them on friends and family night than at the grand opening.\n\nMarissa walked around the restaurant as the last of the staff cleaned up their stations.\n\nA hostess was vacuuming the lobby. Hamada-san and two cooks were making sure the kitchen was spotless for the morning prep shift. Anastasia and John-Marc were strategising ways to streamline the service while a handful of servers were setting up tables for the next day.\n\nAlan was sitting in a chair, sipping on a glass of wine. He had the \"thousand-yard stare\". He had never worked in a restaurant before. Where he saw chaos, the professional staff saw a carefully choreographed dance. It may have been just a step above absolute bedlam, but there was a method to the madness. \n\nHis intentions were good, but Marissa finally told him to not worry about doing everyone else's job. Alan acquiesced, gave up trying to manage everything and simply hung on for the ride. The busboys and hostesses especially were very appreciative to have Alan out of their hair, and they thanked Marissa profusely.\n\nMarissa put her arms around him from behind. He turned and kissed her on the cheek.\n\n\"How'd we do?\" he asked.\n\n\"Two hundred eighty-seven customers on a hundred and five tickets in the main dining room,\" she whispered in his ear. Of course, this was all computerised and controlled from the office. All she had to do was run a nightly report. \"The average check was about seventy bucks. Add in our business from the bar, and we grossed about eighty-five hundred dollars tonight.\"\n\nAlan smiled. \"That's about ten percent better than we thought we'd do.\"<br>\n\n\"Mm-hmm. Oh, and Dr. Emerson from the graduate college wants to have their winter faculty and staff banquet here in December,\" Marissa replied. She sucked on Alan's ear lobe gently. \"Everyone is cleaning up. What doesn't get done tonight can be finished in the morning. Send these folks home and then meet me in the garden.\"\n\nThen she stood and went back into the office to change.\n\nWhen they were planning the restaurant, they wanted a bar area, a main dining room with private, romantic seating and a large banquet room. In the original plans Brianne had drawn up, she envisioned an outdoor seating area off the main dining area. But that was anticipating moving into an existing structure.\n\nSince they were building their own facility, Alan and Marissa could do anything they wanted. They had several different designs for an outdoor dining area, but they didn't like any of the initial drawings.\n\nAfter some out of the box thinking, they designed a square building with the middle cut out and an open-air patio in the center of the restaurant. They retained the bar, split the main dining room into two smaller and more intimate rooms on one side, and had another smaller dining room on the other side along with a large banquet and reception area. The kitchen ran along the entire backside of the restaurant and could service all of the dining areas at once.\n\nThat patio was their pride and joy, though. There were tables for dining and a full-service bar near a small garden and some benches. Sliding glass doors opened up into the banquet room and it was accessible from all the other customer areas. In the summer time, it would be comfortable at night and in the spring and fall, they had outdoor heaters set up to keep their patrons warm. If they wanted, they could set up a stage and have some outdoor music under the stars.\n\nThe only time it would be unusable was during rain, snow or the dead of winter.\n\nSome of the plants were live, some were fake. There was a fountain in the middle and frescos on the walls. The theme for the restaurant was an Italian villa and the patio was the ultimate expression of that theme.\n\nAbove the bar and at each entrance to the patio was a simple sign that read, \"Bree's Garden\".\n\nMarissa stood at the bar with a bottle of chilled champagne in a bucket next to her.\n\nAlan came out one of the side doors. When he saw her, he drew in a sharp breath.\n\nAfter they returned from Las Vegas, Marissa never spent another night in her house. She moved into Alan's house because it was bigger and in a better neighbourhood. Alan encouraged her to make his house into their home, even though it meant that she would be replacing some of Brianne's things with her own.\n\nHe told her that Brianne was the past; she was the future. While he didn't want to forget his first wife, Alan saw no point in hanging on to everything about her. Marissa and Alan moved some of Brianne's things around. She never threw any of Brianne's things away; if she ran across something and couldn't find a place for it, she boxed it up, but only Alan threw anything out. Alan retained a private study in one of the upstairs bedrooms and that's were most of Brianne's things went, although a fair number of Marissa's ended up there, too.\n\nAlan kept lots of pictures around the house. Some of Brianne. Some of Marissa. Some of him.\n\nMarissa never felt jealous or threatened by Alan's attachment to his late wife because he never acted like he was pining away for her. She recognised that Alan cherished memories. Brianne had been a part of Alan's life for so long, it would have been crazy to expect him to suddenly leave her behind. And Marissa liked that she was making new memories with him, and those were just as dear to him as any from his first marriage.\n\nThere was one picture Alan kept in his study that Marissa knew he especially loved. It was next to his desk. Brianne was sitting on a park bench wearing a long blue denim skirt, a white blouse and a woven hat. She was surrounded by flowers and beauty. She was staring lovingly at Alan and whenever Marissa looked at the picture, she knew exactly how the other woman felt.\n\nIn the weeks before the restaurant opened, Marissa went into the boxes of Brianne's clothes, found that same outfit and had it fitted to her. She hoped Alan wouldn't mind.\n\nAlan saw her standing there and smiled gently.\n\nHe walked over to Marissa and gave her a tender kiss.\n\nShe handed a glass of champagne to her husband. They raised their glasses.\n\n\"To Brianne,\" Marissa said softly. \n\n\"To us,\" he replied somberly.\n\n\"She would have been very proud of you tonight, Alan.\"\n\n\"You are the one who made this happen,\" Alan replied, \"Not me.\"\n\n\"You'd have gotten this done without me, honey,\" she said, tilting the brim of the hat up and kissing her husband.\n\n\"But not nearly as well,\" he pointed out. \"I appreciate all the work you've put into this. You didn't have to, you know. It wasn't your dream.\"\n\n\"Not at first.\" Marissa sipped her champagne and then topped them both off. \"But her dream became your dream. Then your dream became mine. I guess it's ours now.\"\n\n\"I guess so,\" he said with a resigned sigh. \"I wish she could have seen this.\"\n\n\"She can, Alan.\" Her hand touched him gently on the arm and she pointed up, out of the garden and to the stars that shone across the sky. \"That's why she is so proud of you. Because you made it happen.\" \n\nMarissa could only imagine how hard it was for him to be there, in the restaurant his first wife had built in her mind from the ground up, but never saw through to fruition.\n\nHe looked distracted, and she couldn't blame him.\n\nNext to the champagne was a remote control. Marissa picked it up and flipped a switch. The stereo behind the bar turned on. \n\nA familiar song began to play.\n\nAlan closed his eyes. As he slipped into his reverie, he smiled gently and took Marissa in his arms. The music surrounded them, coming over outdoor speakers hidden throughout the patio.\n\nThey danced, cheek to cheek, each lost in their own private thoughts.\n\nMarissa thought back to the first night they had spent together. She reflected back on the past two and a half years and was so grateful to the fates for bringing this man&mdash;her best friend, her lover, her partner, her soulmate&mdash;into her life.\n\nWhen the song ended, there were tears in both their eyes.\n\n\"Thank you,\" Alan whispered. \"For everything.\"\n\nMarissa looked into his eyes and although she couldn't see it, she was sure she had the same simple smile that she and Brianne shared. The one that told Alan how much they loved him.\n\nShe pressed her lips to Alan's. \n\nThen she pushed him towards one of the tables. When he had almost backed into one of the armless chairs, she stopped and began unbuckling his belt.\n\n\"You don't&mdash;\" he started, but she silenced him with a kiss.\n\nAlan's dress pants fell to the ground and he sat back in the chair.\n\nMarissa lifted the skirt up over her hips, tilted Alan's head back and pressed her lips against her husband's.\n\nHis cock was hard and she sat down on it. She was still slick from their earlier encounter and he filled her up easily.\n\nThey both let out a satisfied moan.\n\n\"Alan,\" she whispered, pressing her body against him. His arms pulled her close. \"I love you. I have loved you since the first day we met. I just didn't know it then. You have no idea how much you changed my life. You loved me, even when I didn't think I deserved it. . . . You saved me.\"\n\nShe paused long enough to kiss him. \"I can't possibly repay you for everything you've given me. I know there's one other dream Brianne had. I have the same one. And I know you do, too. I want a baby. Or two. Or three. Or however many we can love together.\"\n\nHer hand went to her left arm, just above the elbow. There was a fresh bandage there that had been covered all night by the jacket she wore over her blouse. \"I had the Norplant taken out today. I probably won't get pregnant tonight, but that doesn't mean we can't start trying now.\"\n\nAlan buried his face in his wife's chest. They held onto each other desperately.\n\nUnder the night sky, with the stars looking down from the heavens, Alan and Marissa made love in Bree's Garden.\n\nA slight breeze blew around them, and the wind seemed to whisper the words.\n\n\"I love you.\"\n\nEpilogue\n\nMarissa cried out. She was covered in sweat. She clutched Alan close to her. There were stars shooting out of the corners of her eyes.\n\n\"Give me one more push!\" Dr. Callaway said. \"We're almost there! One more, Marissa!\"\n\nShe let loose with a primal grunt. \n\nThere was a searing pain. Marissa threw her head back and screamed.\n\nAn instant later, she went numb and only vaguely remembered the next several minutes. \n\nSoon enough, though, Alan was holding her in his arms. His soft touch had been a constant. She rested her head on his shoulder.\n\nIn her arms was a crying, wrinkled mass of flesh. The little girl was a healthy 8 pounds, 2 ounces, 20&frac12; inches long.\n\nShe didn't get pregnant that first night at the restaurant. It took a couple of weeks for her body to adjust to no longer having Norplant to regulate her ovulation. But it wasn't much longer before she had some instinctive maternal revelation that she was pregnant.\n\nAlan was understandably super-protective of his wife and baby. After having lost a spouse and a son in childbirth, he made sure Marissa and the baby had the best care available. At a couple of points, Marissa wanted to strangle him because he was hovering too much, but that may have been the hormones and not just his neurotic paranoia.\n\nBusiness was booming. After the opening, they got lots of good reviews and word of mouth quickly spread. \"A Taste of Italy\" became a favourite for people looking to have a romantic evening, and their Valentine's Day reservation list was filled a month in advance. Same thing for the high school prom nights. The banquet room was in use almost every weekend and some people were inquiring about a catering service. \n\nAs the one who was handling most of the restaurant's business side, Marissa was wary of growing too big, too fast, but they were making money, paying down their debts and ensuring that their best employees were retained. So when it came time for Marissa to take some time off to have her baby, the business was in good shape, and there were enough competent and loyal staff around so that she and Alan could work from home and come in less often.\n\nAlmost a year to the day after the restaurant opened, Alan and Marissa were greeting a party of six when something clicked in Marissa's body.\n\n\"Sorry to leave you folks so quickly,\" she told the customers and handed them off to another hostess. \"Alan, your baby's coming and we have got to go!\"\n\nSo off they rushed, amidst a chorus of well-wishes from the staff and patrons at the restaurant. On the way, they called her parents who got on the next flight into town.\n\n\"What are you going to name her?\" the nurse asked once the baby had been bathed and Marissa was back in her room.\n\nAlan and Marissa exchanged a knowing glance.\n\nWhen they found out they were having a girl, there was no doubt whom the baby would be named after, but Alan especially wanted their daughter to have her own name.\n\n\"Breana,\" Alan said, cradling his wife and his child in his arms.\n\nThe new life was the most beautiful thing either of them had ever seen. \n\nMarissa nodded wearily, \"Breana Marie Gibson.\"\n\nShe kissed Alan and then the top of the baby's head. For someone who had given up on love not that long ago, she held the two most important people in her life close, never wanting to let them go. "
    ],
    "authorname": "HLD",
    "tags": [
        "four post bed",
        "bondage",
        "submission",
        "make love"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/impersonating-brianne-ch-03"
}