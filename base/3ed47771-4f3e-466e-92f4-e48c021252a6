{
    "title": "The Silver Guardian Bk. 02 Ch. 07",
    "pages": [
        "Another huge thank you to my amazing editor Tex who did a fantastic job with this once again and is a tremendous help! \n\n***** \n\nDante and Lily had been living in Hohenzollern Castle for two weeks, settling in and finding their places as Alpha King and Alpha Queen of their Pack. It had been a busy time as they settled into their roles and began getting to know their Pack and the day-to-day operations of running it. Now that they were doing such things on their own, they gained a far better appreciation of how much work their Alphas Odin and Victoria, their Mother and Father, always had to do for the O'Connor Pack. \n\nHelpfully for them both, the Pack had been running on its own, that is without any Alphas, for a Millennium so there was room to allow them a learning curve as they stepped in and began overseeing things, so long as they didn't get too bossy or try to micromanage, neither of which tendencies were in their natures. Early on, they began meeting with the Senior Pack members who'd kept things running in their absence. \n\nThey first met with Wilhelm Thoreau, their Head of Finance, to start getting a handle on the Pack wealth, which for all practical purposes was an addition to their own personal wealth, although their own money hadn't been covering the expenses of a Castle and a Pack of 600 wolves. They they were far from being in trouble, since Dante and Lily had significant funds in their own fortune totaling about $100 Million, most of it from Lily and her inheritance, but also from the money Dante had saved over the years from living frugally (minimal compared to everything else), from his security service Triple S, and from the generous stipends they'd received when they'd been the Alpha Heirs of their original O'Connor Pack. \n\nTriple S was still running and even doing a good business, but due to his Royal duties and preparing for the upcoming War, Dante had had to leave it controlled by some of his prior Pack members who were running it now, and who periodically checked in with Dante and forwarded him a portion of their profits. \n\nThere was no longer any point in keeping their own financial resources separate from their Pack's since they had ultimate control over both pools anyway, so Wilhelm had accommodatingly merged them before reporting back. But when he did report back with a Balance Sheet for the combined total, Lily and Dante nearly collapsed in shock. \n\n\"As you know, your Majesties...\" he began. \n\n\"If you please Wilhelm,\" Lily interrupted him, \"in private we prefer to be informal. Just call us just Dante and Lily, if you'd be so kind.\" \n\n\"Thank you, your... Lily. I shall do so.\" he replied. \"So to proceed. As you know, your Pack, the Order of Fenrir, has been rebuilding its wealth ever since the tragedy when the Royal Bloodline was betrayed and killed off. Financially we have done modestly well, and a thousand years is a long time. So as of today, in addition to the hundred million we're now counting as belonging to your Pack, you two have direct control over funds that in U.S. Dollars is right around three billion dollars. That's billion with a 'B'.\" \n\nThe fledgling Royals both gasped in amazement. \n\n\"So much!\" Dante said. \"Although as you say, a thousand years is a long time. Although between interest, investments and growth I can see how such a vast fortune could have been amassed, but it's still mind boggling.\" \n\n\"That's so wonderful!\" Lily added. \"So what you're saying really, is that going forward money will never be a problem for us; that our children and descendants will always be well taken care of.\" \n\nDante pointed out, \"While it's a staggering amount Lily, it's not unlimited. Don't forget we have a Castle to run and a Pack to support. And of course there's the War, and wars are expensive.\" \n\n\"Lily and Dante, you misunderstand me,\" interjected Wilhelm. \"The three billion one hundred million we've mentioned so far is your discretionary fund; it's set aside for your personal use, not for Pack expenses or the War unless you so choose, of course. The entire liquid assets: stocks, bonds and cash, of the Royal Pack are worth a tad over thirty billion American Dollars, not counting your discretionary fund, the worth of the businesses we own on every continent save Antarctica, and real property such as the Castle we're sitting in and various properties in the region our Pack uses for domiciles. \n\n\"This too may in theory be spent in manners of your choosing since as our Royalty you report to nobody but yourselves and to our Goddess Luna, but its purpose is to benefit the Pack. And as you point out Dante, there's the War. But our winning the War will most certainly benefit the Pack. But the bottom line is still that with only reasonably adequate management of these funds, the Pack should always be self-sufficient and never have to struggle financially. \n\n\"But, as they say, the devil is in the details. I've been managing our investments for the past forty-three years since my predecessor retired, and I like to think I'm pretty good at it. But I welcome your oversight; I would hate for you ever to suspect I might be fiddling the books for my own benefit.\" \n\nDante laughed. \"Thanks to one of Luna's gifts to me, that will never be an issue, Wilhelm; if you ever did anything dishonest related to the Pack, I'd be able to tell the next time I saw you. So I already know you're as straight an arrow as they come, and Lily and I can trust you with our lives. Perhaps not in battle, that isn't your forte, but with our finances you have our absolute trust. But with that said, we'd still like to know some of the ins and outs. I'm reasonably competent at managing money, and Lily is a genius at it; so we may be able to make the odd helpful suggestion from time to time.\" \n\n\"That sounds excellent; then let's give you two an initial look, shall we? As they say, the devil is in the details.\" \n\nWith that, Wilhelm began pulling out balance sheets, income and expense statements and cash flow statements, explaining, \"although we manage the Pack's fortune as if it were a non-profit since there are no shareholders wanting some of the profits, we don't bother with statements of functional expenses; those would only be helpful if we were courting donors, which we aren't.\" \n\nDante's eyes were starting to glaze over. \"Do you what he's talking about, sweetheart?\" \n\nLily gave him an indulgent smile. \"Yes, my love, it's bean counter jargon. Don't worry, it's all good.\" \n\nAs Wilhelm continued his briefing he touched on a number of major points. It took an incredible amount of money each month just to support the Pack. The upkeep and operations of the Castle alone took a large amount of money, as did all the stipends for the 600 Pack members. (Business expenses were huge, but they didn't appear on the financial statements of the Pack, since the businesses were all corporations in their own right, owned by the Pack. And these were for-profit corporations, since the Pack took a good portion of the profits.) Other expenses included the upkeep of their large fleet of vehicles: jets, propeller planes, helicopters, cars, trucks, motorcycles and smaller numbers of many more. There were also food and clothing expenses, education expenses, medical expenses... even what were categorized as miscellaneous expenses went through a small fortune. \n\nSo their fortune needed to be vast, but only as a precaution against hard times. The Pack had the good fortune to be able to operate on the profits of all their collective businesses and the returns from their investments alone. A profit and loss statement Wilhelm was happy to point out showed a Net Gain of three hundred million dollars in March of this year alone. \n\nPart of Dante and Lily's responsibility, primarily Lily's, would be to evaluate the financial reports provided by Wilhelm on a weekly basis and to sign off on everything. Given Wilhelm's long history of successfully shepherding the financial health of the Pack she didn't feel the need to check details nearly to the degree that she knew Victoria did for the O'Connor Pack, but she wanted to keep a weather eye on things so that whenever she spotted something that could perhaps be improved going forward, she could discuss it with Wilhelm. As time progressed, Lily found it mildly surprising that Wilhelm was so open about discussing possible changes, considering that he and his accounting staff had been running things financial unsupervised for so long. He really was a gem. \n\nPart of Lily's daily responsibilities was to discuss the operations of the Castle with their Head of House Edna Volksdotter who supervised the staff maintaining the upkeep, cleaning and operations of the Castle and grounds. Edna worked closely with their Head Chef and Head of Kitchen Tobias Farnhelm, who with his staff provided food for the entire population living and working in the Castle and was also Dante and Lily's personal chef. He was an absolute culinary genius and not only kept the Pack well fed with tasty, nourishing food, but also kept Lily and Dante spoiled with an ever-increasing repertoire of their favorite delicacies, and always with an eye to their health and wellbeing. \n\nIt was no surprise to anyone that Dante took responsibility for the Pack's military training in all its facets: the Betas and the elite Royal Guard, the Hellhounds. These three groups of warriors were rather like the various branches of a nation's armed forces in that they were proficient in different specialties and the types of missions they were best at performing. But although he was unstoppable like no other on a battlefield, he had the wisdom to accept that he was leading a Pack of remarkably proficient and knowledgeable warriors and he gave credit where it was due. He regularly received counsel from Lily in military matters and from their Chief Bodyguard and General of their forces, Astrid. Both Astrid and Lily also received counsel in making decisions, speaking with the Pack Elders on a weekly basis. \n\nIn judicial matters, everyone in the pack had such esprit des corps that criminal matters were never an issue; however there were disagreements that required adjudicating fairly often. Major disputes within the Pack were handled by Lily and Dante together, while Astrid and her Lieutenants Hilde, Bryn and Freydis settled the smaller ones. With so much on their plates, Lily and Dante were kept very busy each day as they came up to speed in their leadership of the Order of Fenrir. \n\nDue to all their recent changes and because of their last-minute decision to relocate to Germany for the remainder of Lily's pregnancy, the monthly Guardians Council meeting had been postponed for a little while. The next meeting was scheduled for tomorrow, and it had been a challenge for William and his new team to get all the Alphas the secure equipment necessary for the virtual meeting. Their numbers had grown tremendously because of each of the original eight Packs' recruitment efforts added to Dante and Lily's own efforts. They were now up to forty Packs, which had finally eclipsed Viktor's forces, since a majority of the two hundred Packs were still uncommitted, placing them in a position of dominant power in North America. With the return of the Silver Guardian and the lost bloodline the majority of Packs that had been quietly approached were eager to align themselves under Dante and Lily's rule, as it was obvious they were the ones carrying out Luna's will. \n\nThat afternoon Dante and Lily were in their office going through some Pack paperwork and making some mundane decisions as was now routine for them. Lily leaned back and sighed. \n\n\"This is so very different from when it was just the seven of us traveling around in our jet, recruiting and executing operations against Viktor, isn't it baby?\" \n\nDante smiled at his mate. \n\n\"Yes it is, baby, although we were busy then and we still are now, just in completely different ways. In a way, the War has been put on hold temporarily, though I'm sure Viktor hasn't slowed down in the least. We still have the Council meeting tomorrow, and progress is still being made, but for now there's a pause on the active operations we're directly involved with. But this is what it means to be Alphas, and it's really the meat and potatoes of what we need to be doing. \n\n\"When the time comes for us to get serious again about the War, which it will soon, we'll be able to delegate much of this to our Pack Heads and Senior wolves and Elders temporarily, after all they did it successfully without Alphas for a thousand years, but in time this will become the new norm, at least for a while. Eventually, and I'm guessing shortly after we wrap up the North American War, we'll become busy with fighting the world wide War to unite our race. Based on that one tiny slip of the tongue from Viktor that Roman Stutkoph informed us of in Quebec City, it looks like our greater enemy is in Russia. Though we don't know anything beyond just that tidbit yet.\" [No dear reader, you haven't forgotten anything; this is the first time we've mentioned this slip; more later, although not in this Chapter.] \n\nLily winced as she stretched her belly and placed her hands on it. \n\n\"The little beasties are moving again. They're getting so active lately. It could be as little as a week until they're here; I'm so excited to meet them. I'm also looking forward to not being so uncomfortable with how big I am. I feel like a beached whale.\" \n\nDante frowned. \n\n\"Lily you listen to me, you're heavily pregnant and about to give birth, you're not a beached whale and I don't want you putting yourself down like that. You're more beautiful now than you've ever been before, and it's because you're an expectant mother and the most beautiful woman in the world to me. I don't want to hear you saying things like that ever again.\" \n\nLily smiled at her mate, Dante could always make her feel better and she loved just how special he treated her. \n\n\"I'm sorry baby, you're right; I know you find me beautiful and I don't want to take away from that. But really I wasn't; I'm just so uncomfortable right now, and so ready for them to be here and I feel so big. But I promise I won't say things like that again.\" \n\nDante motioned for Lily to come around the desk and sit on his lap, which she did. \n\n\"I love you so much baby, and I too am so very excited to meet our children. They will be here soon: you've already begun experiencing pre-labor contractions. It's only a short time now, and we'll welcome them together.\" \n\nLily was getting hungry again as she always seemed to be during these past several weeks, and through the Pack bond she called for her assistant. While Astrid still acted as a part-time assistant to the Alphas in some regards, she had her own responsibilities as General of their forces and it had quickly become apparent that Dante and Lily needed their own dedicated assistants. Following some suggestions from Astrid, two junior Omega wolves were selected for the task. Dante's assistant was a younger adult Omega named Marcus Hoffstedder, and Lily's was Marcus' mate, who was a kind and lovely young wolf named Stephanie Hoffstedder. They both showed strong aptitudes for organization and time management, as well as each of them being very sharp and having lots of energy. They also didn't have any cubs themselves yet, so they could focus on assisting Dante and Lily. Marcus and Stephanie were thrilled to be given such a prestigious role in the Pack; it was an honor that neither felt they deserved, but they worked hard to be worthy of. The only restriction was that even though as Pack members they had access to the Royals' first-floor office, they couldn't go any further upstairs without an escort. And when Lily asked Astrid to expand their clearance, she insisted that for security reasons their residential quarters needed to be Hellhounds only. It wasn't personal, she too thought highly of the couple, but she was adamant on the point. She did, however, bend to the extent that on specific occasions when Dante or Lily wished to meet with one of them over a meal in their living room/library, a Hellhound would be allowed to escort them up there upon specific request. And no, it would very definitely not be appropriate for one of the Royals to escort them upstairs. They may be Commanders in Chief, but some breaches of security were unthinkable. Lily and Dante agreed to comply, but in private they had to chuckle at their closest friend being so hidebound. \n\nStephanie walked upstairs and into the office (unescorted) and smiled at the loving couple; she was always so happy to see how in love her King and Queen were and how amazing they were not only with her and her husband, but with the entire Pack. Even with their astounding powers and earth-changing destiny, they never treated her and Marcus as underlings, but as dear friends doing them much-appreciated favors. She and her mate abided by the traditional forms of address of course, even though they'd been invited not to. \n\n\"Yes my Queen, what may I assist you with?\" \n\nLily smiled at the young wolf. \n\n\"Thanks for coming, Stephanie. I'm getting hungry again, as I always seem to be lately, and the little Prince and Princess are restless. Could you have some food delivered to the office, please? Once again, I can't wait until dinner tonight to eat.\" \n\nStephanie smiled kindly at her, understanding her plight. \n\n\"Of course, my Queen, I'll head down to the kitchen immediately and bring up some food shortly. My King, do you need anything while I'm there?\" \n\nDante shook his head no. \n\n\"Thank you Stephanie, but I'm fine for now; I'll save myself for dinner; Tobias is sure to make something wonderful for us all, and I can wait.\" \n\nStephanie bowed slightly and left the office. Lily turned to Dante and spoke to him. \n\n\"I wish Stephanie and Marcus would call us by our names and not be so formal, but they both have flat out refused as a show of their respect.\" \n\nDante smiled. \n\n\"Yes, they have, the dear things. It's one of the aspects of being Alpha King and Alpha Queen we both find so difficult. We aren't used to it, and I'm not sure we ever will be. But it makes them and the rest of our Pack happy, so I guess we'll just have to adjust as best we can.\" \n\nLily got up and returned to her chair as they each resumed their work. They'd spent some time decorating their office and suite with some of the pictures they'd taken together. Just as in their office in Montana, Lily had a picture of a shirtless and sweaty Dante hanging above his desk that she liked to glance up at and admire frequently, and Dante had a sexy picture of Lily leaning against his Chevelle above hers that he did the same with. They'd taken some time to personalize their areas and make them feel more like home for them. They were building their nest and getting ready for their new family. \n\nSeveral hours later Astrid arrived to escort them to dinner in the Great Hall. Tonight Chef Tobias had prepared several bacon-wrapped Filet Mignon steaks for each of them, served with garlic whipped potatoes, half a French baguette each, and pan-fried asparagus in a wine and balsamic vinegar reduction sauce. It was heavenly and melted in their mouths, as they hungrily wolfed down the food piled high on their plates. Throughout the delicious meal they spoke with Astrid and William and the Elders and other Hellhounds who were seated at their table. They liked to touch base and catch up with the running of and social life of the Pack every chance they could get. \n\nSoon after cleaning her plate Lily began getting tired again, and Dante had Astrid escort them back to their suite so they could retire for the night. \n\n*** \n\nDante surged up through the earth, clawing his way to the surface. As he emerged and stood, he found himself on a familiar-looking silver plain with great silver forests and mountains all around him, under a starlit sky with the full Moon closer than he'd ever seen it from earth.  ",
        "\"I've been here before; why am I here again?\"  \n\nDante looked around himself and saw Packs of wolves in the distance, running and playing along the edges of the forests and out onto the plains. It was so idyllic and serene, but he didn't know why he was here: he knew he hadn't died again; last he remembered he'd fallen asleep with his mate in his arms safe in their Castle.  \n\nHe looked down and found himself standing on a silver moonlit path leading into the distance. With nothing else to guide him, he began following it as it wound its way up a hill and across the plains. As he walked, he could hear the howls and yips of the wolves in the distance. It was quiet otherwise, not even a breeze stirring, and he walked for quite some time before he saw a great tree looming up ahead of him on top of a hill.  \n\n\"Unless I'm mistaken, that's the same tree I saw the last time I was here when I spoke with the First Champion.\" \n\nDante picked up his pace a bit as he made his way towards the base of the great tree. Just as he crested the hill where the tree was standing, he stopped in his tracks. Waiting for him like a Mother waiting for her child to return home, floating a few inches above the ground, was the Goddess Luna Herself. She beckoned and Dante reverently made his way to Her and arriving, he bent to one knee and bowed his head. For only the second time in his life he heard the ephemeral and lyrical voice of his Goddess, laced with such ineffable power and warmth.  \n\n\"Welcome home My son, My Champion. Rise and greet me properly; it is good to see you whole and well once more.\" She stretched out her arms. \n\nDante rose to his feet before tenderly wrapping his massive arms around his eternal Goddess and gently weeping tears of joy into Her breast. Luna gently ran Her hands through his hair as She enjoyed the mortal warmth of one of her most beloved children returned home to his eternal plane.  \n\n\"My Goddess, You honor me so, but I am not worthy. Thank You for your love and comfort, and for restoring the life of my beloved mate and children. You saved me and them in the same moment, and I will forever be grateful.\" \n\nDante released his Goddess and stepped back, gazing reverently into the infinite depth of her eyes as she floated serenely before him.  \n\n\"My son, save for your Great Love there is no other as worthy as you, chosen by Me to right the wrongs that were brutally carved into the very souls of my children a millennium ago. I am the Arbiter of who is and is not worthy, and I have deemed you and my daughter Lily as worthier than any others. If the Hoffstedder couple, your Pack, and others wish to revere you and your mate, you shall suffer them to do so with good grace. General Astrid Bonchance is wise to insist upon protocols that maintain a suitable distance between you and your Great Love on the first hand and all others on the second; this reverence they offer is not for your benefit but theirs. I will not hear you complain of such things again.\" \n\nDante bowed his head apologetically.  \n\n\"Yes my Goddess; I will strive to be the Lycan you wish me to be, and the King our kind needs.\" \n\nLuna smiled at Dante tenderly before maternally stroking his face in comfort.  \n\n\"Blessed are the days that come upon us. You, My chosen Champion, are about to become a Father, with your Mate alongside you. Your children will be the first ones in a thousand years to be born continuing the bloodline that has slept in a secret place since being lost to Lycan ken so long ago. On the next full moon, eight days hence, your children will be born under My loving gaze in fulfillment of this destiny. But you my Son, your own birth was a blessed yet tragic event in itself. It is now time for Me to tell you that you were loved dearly by your Mother and protected heroically by your Father when you were born under My gaze during a time of lost hope. The beginning of your life was a tragedy I could not shield you from, but which made you strong and forged you into the wolf you are today. \n\nTherefore before you become a parent yourself, it is time for you to meet your own parents. Come with me my Son, they are awaiting us.\" \n\nDante's eyes went wide when he understood the gravity of what his Goddess was telling him. He was about to finally meet the Mother and Father he never knew; he would soon learn who he was and where he'd come from! He reverently took his Goddess' outstretched hand and the world around them dissolved as another scene coalesced into his awareness.  \n\nThey were standing atop a mountain summit, its range stretching into the endless sky under the same full moon as before. Luna gently guided him around and once he'd turned he saw a man and a woman holding each other's hands and smiling at him. The man was around 6'5\" with dark black hair that was cut short against his handsome face with ice blue eyes and powerfully built. The woman was beautiful and lithe, but also tall, standing next to the man at 5'10\" with wavy long black hair and the same ice blue eyes as the man. The man spoke to Dante.  \n\n\"Hello son, we are so very proud of you and we have missed you terribly.\" \n\nDante fell to his knees as the truth of what he'd heard slammed into him and he began weeping tears of pure silver.  \n\n\"Dad? Mom?\" \n\nThe beautiful woman smiled down at him.  \n\n\"Yes Dante, we have awaited this day ever since the last moment we saw you as a babe when we were required to leave you on the steps of St. Peter's Orphanage that tragic night so long ago. We are so sorry we had to leave you alone. It broke our hearts and we both died soon afterwards.\" \n\nAt that point Luna reached down and gently lifted Dante to his feet before speaking.  \n\n\"Your Mother Amanda and your Father Damian are two of my most faithful servants and beloved children. At My command they did something they would have otherwise found inconceivable: they abandoned their only child. But nevertheless, you are more loved and cherished than you will ever know, for they did what they must to keep you alive.\" \n\nDante approached his parents and wrapped his massive arms around them both. All three broke into tears, and they wept in each other's embraces for several minutes. \n\nWhen they finally collected themselves, they released each other and Dante stepped back so they could speak. Questions began tumbling out of his mouth.  \n\n\"Mom, Dad, what happened? Why was I left at the orphanage? Why was I not left with your Pack or my own kind? I don't understand any of this, please help me.\" \n\nSorrow crossed his parents' faces at the painful memory. His Father Damian responded first.  \n\n\"The Silvrash line is ancient and can trace its way back to the First Champion and our Goddess' first Lycan, although the name was not originally in that juxtaposition. A thousand years ago the last of the Royal Bloodline, a Royal Alpha named Sigemunt Shavrils, had been warned by Luna in a dream of the tragedy to come, and thus secretly adopted his firstborn son to a trusted nursemaid prophetically named Lily Silvrash, who was instructed that when the cub became old enough to understand, she was to tell him who he was and to continue raising him with her own surname. They moved to a distant country, the Royal Bloodline continued in secret but forgotten to time. As it happened, that is to say by Luna's design, the name Silvrash is an anagram of the original surname of the Royal Bloodline: Shavrils, which means in a lost Lycan tongue, 'Silver Champion'. Silvrash in that same tongue means 'Silver Guardian' as a prophesy which has now been fulfilled in you. Our heritage was kept as a secret known to almost none, certainly none still living in your world save for those born under the bloodline such as myself and eventually my mate Amanda.  \n\n\"After the great tragedy befell our kind and the entire known Royal Bloodline was slaughtered, the final remaining Shavrils/Silvrash heir and his descendants remained in hiding, biding their time until our Goddess' will was made manifest again in Her next Champion, you, my Son. We were never part of a Pack since that time, living in secret as rogues, the firstborn of each generation always a male and hoping by chance to find his mate and to continue the line until some unknowable time.\" \n\nDante's Mother Amanda picked up the narrative.  \n\n\"I was part of a small Pack in the outskirts of France when I met your Father as a wandering rogue. I fell in love with him instantly and left my Pack to be with him. I'm sure they never learned what became of me, but I was happy. In time I discovered who Damian was, and that our shared duty first and foremost was to continue the line. We traveled, constantly in secret, always doing our best to remain safe. But we were hunted. There is a dark and ancient power that hunts our line; it is the power behind your current foe, Viktor. Our true foe... yours, ours, all children of Luna and Luna Herself... is a dark god soaked in malice, greed and hatred that lusts for power and the destruction of Luna's children and all who follow Her ways. He sees Lycans as no more than warriors to be twisted into furthering his desire for power and the conquest of your world. It was his influence that led to the massacre of the original Royal Bloodline some thousand years ago, and he still exists today, biding his time and working in the shadows towards his goal. He and his kind have hunted the Silvrash line ever since the beginning when the first Lily Silvrash grasped Luna's Torch, knowing that within our line would reside Luna's hope for a Son and Champion to be reborn and to push back against the darkness and defeat the evil attempting to corrupt us.  \n\n\"When I became pregnant, your Father and I were overjoyed, eager to hear your first cry and to raise you, continuing the family tradition. We continued to move around and wound up in New England shortly before I was to give birth. It was then that our Mistress came to me in a vision, warning me of the coming threat of ruin. She told me you'd be born under the next full moon and under Her full gaze, and that you were to become the Silver Guardian of legend and the one to return our kind to our rightful place within Luna's grace.  \n\n\"I was elated, so proud to be the mother of the Champion who would unite us once again. But with that joyous news came despair as well: she told me Damian and I would not remain alive long enough to witness these things coming to pass. The hunters were closing in on us in great numbers and there was no hope of our escaping them. We knew we couldn't leave you with another Pack, they would simply be slaughtered, and you killed with them. No matter what we did, nobody remaining alive would remember our line or know of the importance your life had to Luna Herself and to our race. Luna ordered us... and this time had to convince us it was the only way, a mere command wouldn't suffice, not even from Her... to do the unthinkable, leaving you alone to be raised in the human world while we drew your aspiring murderers away from you in our final act of protecting our beloved baby.  \n\n\"We left you on the steps of that orphanage in Boston only a single week after you'd been born under Luna's gaze and your Father's and my love before we had to leave you behind and save your life. They tracked us down just a few days later in a Canadian forest, where your Father was slain defending me before I was captured. They tortured me... no, I beg you not to ask for details... but I told them nothing and eventually succumbed to my wounds. But we never allowed them to find you and have been watching over you ever since then from here in our Mistress' domain. You'll never know with how much love we've always held you in our hearts, but our Goddess does!\" \n\nIt had taken quite a while for Damian and Amanda to tell Dante everything, and his heart was broken at the tragedy of his parents' lives, of their heroic sacrifices, and how they'd been lost to him. Still floating aboveground, Luna glided to his side and laid a hand on his shoulder.  \n\n\"It is almost time for you to awaken, Dante; I brought you here tonight so you could gain some closure on who you are and how your beginnings had come to pass before the birth of your own children. But time is running short; you must say your fare-thee-wells for now, until you and Lily join them here sometime in the distant future when your task has been completed and you two have ruled for a century or two.\" \n\nDante nodded sadly but gratefully, understanding the immense blessing he'd just been given. \n\nHe turned to his Father first and embraced him.  \n\n\"I love you, Dad. Thank you and Mom for all you did for me and the ultimate sacrifice you each made to keep me safe. I love you so much, and I promise to make you proud, I swear it.\" \n\nDamien smiled through his tears as he embraced his son.  \n\n\"I love you too Son, and already have you made your Mother and me so very proud! You've found yourself an amazing mate, and I know you will be the nurturing Father to your children that I could never be for you. You need to know, your full name is Dante Damian Silvrash. In our line the first-born son always takes his Father's first name as his middle name. As your Father, I ask you to continue the tradition with your own son.\" \n\nDante's silver tears were falling freely, but he tried to contain his sobs as he embraced his Father. He stepped away and turned to hold his Mother in his massive arms as her small frame draped against him perfectly.  \n\n\"I love you so much, Mom! You and Dad gave everything for me, even your lives, and I never even knew! Thank you for telling me everything and thank you for the ultimate sacrifice you each made. You'd love Lily Mom, she's the most amazing woman I've ever known, and she loves me without end, just like you did Dad. I'm not alone anymore, and I've never blamed you or Dad for leaving me. I never knew why, but I always had hope. Luna has again blessed me in our meeting here tonight. I love you both so much. Until we meet again.\" \n\nWith that Dante stepped back and turned to face his Goddess, but Amanda had one more thing to say. \"My son, we can see everything from up here, and your Father and I love your Great Love with all our hearts. Please tell her that.\" \n\n\"Thanks, Mom; she'll be thrilled to hear that.\" He then turned back to his Goddess. \n\n\"Thank you Mistress, for the gifts of knowledge and love and closure. I swear to make you proud and to see your will be done through Lily's and my hands. I'm ready.\" \n\nWith that, Luna smiled maternally at him and bent down and placed the softest of kisses against his temple where his hair had turned the color of the silver moon when she had visited him in his own plane. Dante's world briefly flashed white and then went to darkness.  \n\n*** \n\n\"Dante! DANTE!\" \n\nDante woke up with Lily hovering above him, fearfully peering into his face. \n\n\"Dante, what's wrong, baby? What's going on!?\" \n\nDante realized he'd been sobbing in his sleep and had awakened Lily; his face was wet with his tears. \n\n\"Lily? Where are we?\" He looked around; according to the dark windows, it was still the middle of the night. \n\nLily could tell Dante was confused, but at least he was coming awake. \n\n\"Baby, you were sobbing uncontrollably in your sleep and you wouldn't wake up! I tried everything to awaken you, but you wouldn't respond to me and all I could do was hold you and try to keep reviving you. What happened, baby??\" \n\nDante pulled Lily down to his chest, soothing her and bringing her comfort as he emerged from his vision. \n\n\"I'm so sorry, my love, I didn't mean to frighten you. But it's all good. Luna pulled me into her plane, and I went on another Spirit Walk.\" \n\nLily leaned back and looked Dante in the eye, shocked at what she'd just heard. \n\n\"Our Mistress called upon you? Why? What did she have to say?\" \n\nDante took a deep breath, recalling his latest journey. \n\n\"She told me things about our pregnancy, to start with. On the next full moon, in eight days' time, She said you will give birth, and She will be watching over our children as they come into this world. With them comes the reemergence of an ancient bloodline that was kept secret ever since the great tragedy of a millennium ago.\" \n\nLily's hands went to her stomach as she cradled it, and tears, good ones, filled her eyes as she smiled in wonder. \n\n\"Our children will be born in eight days, on the full moon?\" \n\nDante rubbed his hand on her stomach as he wrapped his other one around her shoulders and hugged his mate to him. \n\n\"Yes baby, in eight days they'll be born under the full moon and Luna's loving gaze. But there was so much more, baby. She took me to meet my Parents. I met my Mom and Dad and spoke with them! I finally learned who I was, and my family history, and how I came to be left on the steps of that orphanage in Boston! There is so much more I have to tell you, and so much we need to prepare for, and to tell Astrid and the Hellhounds and the Elders about, too. This vision changes everything that we thought we knew about me, and it answers so many questions for us. The Silvrash line is descended from the First Champion himself, and it was kept in secret and held in trust throughout the ages to protect the line from our eternal foe.\" \n\nLily had gasped loudly, and her eyes were huge as she took in everything Dante said. \n\n\"Slow down baby, and start from the beginning, tell me everything.\" \n\nIt took Dante quite a while to tell his loving mate about his entire Walk and everything he'd learned, but by the end they were both holding each other and gently weeping together as liquid silver fell from Dante's eyes and onto his mate's bosom. Lily spoke to him. \n\n\"Your Parents loved you so much Dante, and they sacrificed everything for you! It explains so much and answers questions we've always had. And now we know why the first great tragedy happened, and the forces behind it, and who our ultimate enemy is today. We have to talk to Astrid and her Lieutenants about this immediately. It can't wait, baby.\" \n\nDante agreed and reached out to Astrid through the bond. \n\nAstrid, we need you to get your mate and Hilde and Bryn and Freydis and come to our suite immediately. I was pulled into Luna's domain tonight. I just got back, and we need to talk right now.  \n\nAstrid responded immediately and with reverence and haste. \n\nYes, my King. It will be done, and we'll all be there in five minutes. Are you and Lily unharmed? \n\nDante reassured his and Lily's closest friend. \n\nYes Astrid, we're safe and sound, but we must talk.  \n\n*** \n\nThe sun's rays were just peeking through the stained glass in the living room of their suite as Dante finished telling his closest friends, protectors and advisors about his Spirit Walk leaving everyone awestruck and shocked to their core. \n\nAstrid, as General of their forces and head of the bodyguards, spoke first. \n\n\"I can confirm that the surname of the Royal Bloodline was Shavrils. It's an historic detail that for centuries has been known only to the highest-ranking Hellhounds of the Royal Pack. In idle moments I've often puzzled about its similarity to your own name Dante, but I could never put my finger on it. But now everything is falling into place and makes so much more sense. We have to prepare and take extra caution against the dark god who is our ultimate enemy. Viktor is just a pawn, one we must kill for certain, but he's just a pawn for this far more dangerous dark being. We need to pass this along to our allies, as well. My King, during today's video conference you must let our allies know what you have learned. You don't have to tell them what your parents told you, that's private, but the other information they need to know, including the nonsense about you and Lily being 'just folks', your most august Royal Majesty; I trust we can put that to rest?.\" ",
        "Lily patted Dante's hand as she leaned into him and responded to Astrid. \n\n\"Yes Astrid, you're absolutely right, and in future we promise to put on all the airs you require of us. Dante is still processing a lot right now and is still quite worked up, but we'll be ready for the conference and will bring everyone up to speed, including the history of the Shavrils/Silvrash line and our Mistress Luna's decrees. Give us some time to digest all this and we'll be ready.\" \n\nHilde spoke next. \n\n\"My Queen, with your upcoming birth we must tighten your security even further. We mustn't allow anything untoward to happen and we'll take all conceivable steps to allow nothing to interfere with your bringing our Prince and Princess into this world on the next Full Moon. The entire Pack will be gathered within the Castle walls except for a dozen Beta sentries hiding under cover in the surrounding forest, ready to alert us through the Pack bond at the slightest hint of anything suspicious. We'll all be on high alert to protect you and our King during your labor. When the cubs are born, we'll all celebrate this most blessed event. We four Hellhounds will be guarding the outsides of all four walls of the delivery room, with the other twelve Hellhounds in a perimeter surrounding us. Together we'll let nothing happen, I swear this to you.\" \n\nAt that Bryn, Freydis and Astrid all nodded solemnly. \n\nDante and Lily were highly impressed by such detailed logistics flowing instantly from their General's mind. \n\n*** \n\nDante and Lily were sitting behind their desk with several large monitors in front of them and two cameras focused on their seated forms. Astrid was also present, but sitting off to the side to listen in. The virtual meeting was about to begin; it was late afternoon, which meant in the U.S. it would be varying times in the morning, and everyone would be getting ready to join them online. \n\nThe lights on their cameras went green, and within moments there were faces filling all the screens. Some of them Dante and Lily knew, but many others were new to them; it was clear that their allies' recruiting efforts had gone well. Dante opened the meeting. \n\n\"Good morning, my friends and fellow Alphas, it's good to see you all again, and it's good to see those of who you we haven't yet been introduced to. For those of you that do not know my mate Lily or me well, I will go through introductions on our side. I am Dante Damian Silvrash, The Silver Guardian and Alpha King of our kind.\" \n\nLily jumped in to introduce herself. \n\n\"I am Lily Victoria Silvrash, mate to my King the Silver Guardian, and his Great Love. I am Alpha Queen of our kind. It is a pleasure to meet everyone. Let's get started.\" \n\nHer Mother blurted out of turn: \"Your name is what, Lily?\" \n\n\"As of today Dante's middle name is Damian to honor his Father, and I wish to honor you, Mother. I'll explain later, but we need to get on with the meeting.\" \n\nDante spoke. \n\n\"If it's any comfort Mother Victoria, this is the first I've heard of my mate's new name as well, although I highly approve. But family matters aside, she's right: we need to get on with it. \n\n\"So. Everyone. Before we begin, I would like our newest Alphas to introduce themselves and the Packs they represent. The Guardians Council has grown tremendously since our last meeting, so I would like for everyone to know who our allies are and who we will be fighting beside in this War.\" \n\nIt took a good bit of time for everyone to introduce themselves and their Packs. The majority were Alpha Pairs, but there were a few solo Alpha men and women as well, such as Alpha Mary Winslow leading the Thunder Basin Pack. Most of the Midwest was now represented on the Council, as was a good portion of the West Coast. There were also a few Packs located East of the Mississippi and along the Eastern Seaboard, so all in all they had a good spread of Packs across the U.S. now, and even a few allies in Canada and Mexico. Once everyone had introduced themselves and their Packs, Dante picked things back up. \n\n\"Welcome to all of you, and I thank you for your allegiance to our endeavors. As Lily and I lead all of you now, we have the Goddess Luna's assurance that in time we shall lead our entire race. Let's get started. \n\n\"I need to open this meeting by passing on some critical information, or as the newscasters say, some Breaking News. This past night our Goddess called me once again to Her plane, summoning me to my second Spirit Walk. I met and spoke with our Goddess, who revealed many things to me that you all need to hear. \n\n\"First is the history of the Silvrash line. I learned that I am a direct descendant of the First Champion, obscured and hidden in time to protect this ancient and original bloodline. The last hitherto known member of the Royal Bloodline, King Sigemunt Shavrils, upon being warned by Luna of his future assassination, selflessly abided by Her instructions and secretly entrusted his first-born to the care of his nursemaid, who raised him in a distant country with her own surname: Silvrash. In myself and my mate Lily, I was told that this line has re-emerged from the shadows and come back to claim what is rightfully ours. This line has been hunted and sometimes murdered throughout the past thousand years by an ancient evil that we must fight against in time. Our children at their birth will embody the reemergence of that bloodline in their rightful place as members of the Royal Pack, the Order of Fenrir very soon. In me was the fulfillment of the Silver Guardian Prophesy that many of you may be aware of. \n\n\"My Spirit Walk also brought to light a few details about our ultimate enemy, and the power behind Viktor, the one he is taking orders from, and the answer to the mystery of who was behind the great tragedy, the murder of the Royal House a thousand years ago. Three queries with a single answer. There is a dark and ancient power, a god opposed to our Mistress that wishes to twist all Lycans to his will and to see us changed into what we were never meant to be. Power, greed, malice, hate and pain are what he thrives upon, and he aspires to the conquest of our world and the subjugation to him of our entire species to serve him as warriors. He is the reason Viktor Petrov has become the monster that he is, and this entity is the reason Viktor he has done the monstrous things he has done. His influence explains many longstanding mysteries perfectly, and he is the one we ultimately must defeat, a daunting task which will fall to Lily and me. \n\n\"He is also the guiding hand behind the murder of the Royal Line and the splintering of our kind into warring factions. All we know now are generalities about this dark power and that he has vast numbers of Lycan soldiers amassed in Russia, and that Viktor is taking orders from him. That is all I can share of my Walk at this time except that I now know who my long-lost parents are. Their names were Damian and Amanda Silvrash, and they died as heroes for my sake.\" \n\nWhen Dante finished speaking, there was a hush from everyone in the meeting before almost everyone began talking at once. This news was groundbreaking and must be discussed, but many wolves were in a panic to say something until Dante let out a harsh bark that silenced everyone. Lily spoke when it had quieted down. \n\n\"My friends, we must discuss these matters calmly and in turns, otherwise nothing will be accomplished. Now, one at a time let's discuss this. Who would like to speak first? Place an open palm near your camera and I'll call on you.\" \n\nIn a far more orderly fashion now, the Alphas began to discuss the revelations and their thoughts about it. It took quite some time, but eventually everyone was able to say their piece. It came down to a consensus that Viktor and his forces must be handled before anything else, that the greater War beyond this immediate one would be centered around Russia and that too needed to happen sooner rather than later. A side issue was a call for greater security around Dante, Lily and their unborn children, but Dante and Lily nixed that. \n\n\"We are in a location where these dark powers currently have no foothold,\" Lily asserted. \n\n\"We are surrounded by our Pack of 600 of the strongest and most loyal wolves imaginable, and while we are here in our ancestral seat of power, we are very well protected. That said, when we travel back Stateside after our children are born, we definitely shall agree to greater security, since we will once more be vulnerable. To that end, we will be bringing many of our own soldiers and personal guard with us as security. Dante and I think those precautions will be sufficient, but at the slightest hint of our being wrong, we won't hesitate to call upon you good people for aid.\" \n\nDante stepped in when Lily was finished. \n\n\"We will have to wait until Lily gives birth, which won't be long now, and then take a short time for her to recover, and then we will be coming back to the States, headquartering at first with the O'Connor Pack to fight this War and bring it to conclusion. During our recent trip to Mexico City, in large part thanks to the Aztec Pack, we have cut the head off the snake of Viktor's drug operation and removed a large source of his income. Once we return, it will be time for us to perform extermination operations on the three remaining hubs in the U.S. With the Mont Royal Pack's help, we shut down his arms trafficking in Canada and seized not only a large amount of money, but also a large weapons stockpile to help us fight this War. \n\n\"The trust fund we have in place to support the Guardians Council and all of you, our allies, has grown tremendously. Thanks almost entirely to our seizures from Viktor's operations, we currently have a war chest of $1.5 Billion to fund our operations. The Order of Fenrir is contributing three Billion more. Again, these funds will be a powerful asset we can bring to bear against Viktor as we clean up North America. We know that between Viktor and his allies, they have roughly thirty Packs of wolves to bring against us, but the Council has now grown larger than his numbers, and we must grow it larger still. \n\n\"For next month's meeting, Lily and I and some of our Pack will be Stateside, and we can begin planning the next phase of our operations to launch immediately, so we can take the fight to Viktor himself, rather than limiting ourselves to his satellite operations.\" \n\nThe rest of the meeting took another hour while information collected by other Alphas was discussed. As Dante had said, the planning of the next phase would begin at the next meeting when all the data then current would be available, and some form of attack would then be launched almost immediately. When the meeting came to a close, Lily wrapped everything up. \n\n\"My friends and allies, thank you all for attending today, and for your tireless work against our enemies. We will meet in one month's time, and then truly begin the War for North America. Until then, may Luna guide and protect all of you.\" \n\nWith that, the monitors went blank and the meeting was over. Dante and Lily wanted to speak with their Mother and Father privately, so on a separate encrypted channel they called Odin and Victoria back. Soon both of their faces appeared on the screen and Odin spoke first. \n\n\"That was a long but fruitful meeting, well done you two; your Mother and I are very proud of you. What else do you wish to discuss?\" \n\nDante and Lily just smiled at them enigmatically for a few seconds before Lily responded. \n\n\"We want to give you the full details of Dante's Spirit Walk.\" \n\nIt took some time again to cover everything, but by the end both Odin and Victoria were quietly weeping. It was Victoria who spoke. \n\n\"What a tragic story Dante, I'm so sorry you had to go through that, but I'm so thankful to our Goddess that She let you meet your Parents. I can't imagine how hard that was, but I'm so glad you learned about your past and could get some closure. And now you know for certain that in addition to our Goddess, you have people looking down on you with love.\" \n\nDante nodded solemnly and smiled at them through his pain as Lily leaned against him, offering comfort and strength. Dante spoke to Odin and Victoria. \n\n\"I was very grateful to our Mistress for doing that for me. Yes, it was painful, but I'm so glad I got to talk to them and hold them in my arms. \n\n\"That brings us to our next point. In eight days under the full moon, Lily will give birth. We'd love it if you two, and Michael now that's he's back from college, could come out and visit us in a few days so you can be here for the birth of our children. We have space for you here.\" \n\nOdin and Victoria beamed at the invitation, and it was Victoria who excitedly responded. \n\n\"We'd love to be there as would your brother! We have some things to take care of here for a few days, and we'll have to leave Ben and Sara in charge while we're gone, but we can be there in five days, so we'll have a couple days to spend with you both before Lily goes into labor. We can't wait to see you again!\" \n\nDante and Lily were pleased they'd accepted the invitation, although there'd never really been any doubt that they would. Dante wrapped up the call. \n\n\"We're looking forward to seeing all of you too, and I look forward to finally meeting my brother Michael. We love you all, and we'll see you soon.\" \n\nThe call ended and Dante and Lily stood up and stretched. \n\nLily said, \"That was a long meeting with a lot of talking and sitting. It's almost time for dinner, so let's head on down.\" \n\nDante agreed and Astrid came over and escorted them down to dinner before they all retired for the night. \n\n*** \n\nThe next few days passed quickly as Dante and Lily spent much of their time running the Pack's day-to-day operations and getting ready for Lily's delivery and their parents' and brother's visit. Astrid and ofttimes her mate William and several of the other Hellhounds were frequent companions as they worked through matters each day. They were busy, and the closer it got to the Prince and Princess' date of birth, the less energy Lily had and the longer each day she had to rest. Dante was always by her side taking care of her, and Lily felt so loved. They were both so excited for the birth of their children, and Dante was endlessly pampering her. \n\nSoon enough Odin, Victoria and Michael's visit was upon them. The O'Connor Pack had refused to let their leadership travel alone, so several of the Level 4 Betas had come with them. They'd been picked up from Stuttgart by Hilde And Freydis and several of their Senior Betas and were being driven to the Castle. Once their two-van caravan had passed through Eagle Gate, the drawbridge was raised and the gate was barred. \n\nIt may have just been Dante and Lily's family coming to visit, but Astrid insisted adamantly that this was nevertheless a delegation from a visiting Pack and therefore a formal event, so protocol must be maintained. Astrid and their Hellhounds had gotten them all dressed up in their Royal Armor (that felt like it weighed a ton) and had directed them to wait on the raised platform at the back of the Great Hall with their Hellhounds arrayed behind them and the majority of their Pack in attendance. \"And no backtalk, Dante. You promised Luna Herself you'd submit to all required pomp without complaint.\" As has been said, she loved her King and Queen with all her heart and wanted only the best for them, but on the other hand she also relished the times she could boss them around. \n\nHilde and Freydis led Odin and Victoria and their delegation through the Hall and near to the platform before indicating where they should stand, then climbing the stairs and assuming their own places with the rest of the Hellhounds. The O'Connor delegation bent their knees and exposed their throats in submission while Alpha Odin spoke. \n\n\"Our King and Queen, we thank you for your kind invitation, and we are so glad to be here. Congratulations once again on the impending birth of your children the Royal Heirs, it is a joyous time for us all.\" \n\nDante and Lily smiled at them and Lily spoke. \n\n\"We accept your submission and respect; please rise, our friends. It is so good to see you all again, and we are so happy to have you here with us.\" \n\nWith that, the formalities had been adhered to and Lily and Dante climbed heavily down the short flight of stairs before embracing their Mother and Father warmly. Michael approached Dante and offered his hand. \n\n\"My King, it's so good to finally meet my sister's mate. I'm Michael; I wish I could have met you sooner.\" \n\nDante shook Michael's hand before pulling him into a brotherly hug, showing him he was very much at home here. Michael was basically a younger copy of his Father Odin. He had the same blue eyes and brown hair, and his face was nearly identical to Odin's as well. While Odin stood at 6'4\" and 250lbs, Michael was just a slight bit taller and broader at 6'5\" and around 275lbs. He was very handsome, and Dante hoped he would find his mate soon. \n\nDante stepped back and clasped Michael's shoulder and smiled at him. \n\n\"It's good to finally meet you too, brother. Lily and your parents have had nothing but good things to say about you. Please be at home here; you and everyone else are very much welcome, and we want you to feel like this is your second home.\" \n\nLily walked up and hugged her brother tightly. \n\n\"Michael, it's so good to see you, it's been so long, and so many things have changed! But you look great, and I'm so proud of you; congratulations on your graduation and also as stepping up as Alpha Heir!\" \n\nMichael smiled and laughed at his sister's loving words. \n\n\"Yeah sis, it's certainly been a while, and you're right that so much has changed! You not only found your mate and finally came out of your shell (and I'm pretty sure they happened in that order), but you're the prophesied Great Love of the Silver Guardian himself and one of Luna's Champions. Not to mention Alpha Queen of our entire race. I'd say a lot has changed, but all for the better and I'm so happy for you! I even get to brag I'm the kid brother to a legend! And you have the best man you could hope for in Dante; it's clear from just one glance how much he loves you. I can't wait to meet my little niece and nephew in a few days; if we ever get to share the same continent, I'm going to spoil the crap out of them as they grow up!\" \n\nLily laughed with delight as she hugged her brother again. She hadn't seen him for so long! She then stepped back and took Dante's hand. \n\n\"Yes, you're right; there have been a lot of changes, and very dramatic ones. And you're also right that I found the best possible man in the world in my Dante. I love him with every fiber of my being, and he loves me just as well. We're very blessed.\" \n\nAfter they'd had a brief chance to catch up, Dante and Lily escorted them up to stand beside them on the raised platform for Dante to address the Pack. \n\n\"My Pack, these are Alpha Odin O'Connor, Madame Alpha Victoria O'Connor, and Alpha Heir Michael O'Connor, the leaders of the O'Connor Pack in Montana in the U.S. They are our closest and most trusted allies, and they're also Lily's and my parents and brother. They were our first Pack before we became aware of our birthrights and Luna's will, and will always be our greatest supporters, as Lily and I will always be theirs. I want you all to make them feel at home here during their visit. Please greet our guests.\" \n\nAt that, the hall resounded with a joyous keening that lasted for well over a minute. Lily stepped up to address her Pack and wrap things up. \n\n\"Thank you my Pack for being here today to welcome our guests. We will see you all at dinner, and you are now dismissed.\" \n\nThe hall was filled with conversational voices and footsteps as the Pack broke up and Astrid and three other Hellhounds (Bodil, Destin and Fell) escorted the O'Connor family to Dante and Lily's suite as a few of the Senior Betas escorted the O'Connor Betas to their lodging in the Castle. ",
        "After the four Hellhounds escorted Dante and Lily upstairs to their bedroom to 'uninstall' what Lily liked to call their 'Dress Tanks' so they could get into some casual wear, the Royals and O'Connors wound up in Lily and Dante's living room and personal library with Astrid and William, who had joined them, acting as their aides as well as family friends. They munched on some snacks Astrid and William had brought along and spent some time catching up. Much of the talk centered around the children about to come into this world and Lily's pregnancy. It was a relaxing and wonderful time as they just spent time as a reunited family that circumstances had forced apart for a while. Lily and Dante told them all about showing up at the Castle for the first time and getting settled into it, then picking up on running the Pack. Odin and Lily laughed as they heard how busy they were, trying not to say, \"told you so\" and failing, since they could relate with their own Pack's duties. \n\nEventually dinnertime was upon them and they all went down to the Great Hall to have dinner as a family while the O'Connors met some of the Elders and more of the Pack, and talked and laughed together endlessly before everyone retired for the night. \n\n*** \n\nThe next three days flew by as the excitement about the imminent births kept everyone keyed up. The O'Connors spent time being shown around the Castle and exploring the grounds, and were given a tour through Bisingen as well, which was less than ten minutes away, for shopping, dining and other activities. Lily and Dante joined them as much as their duties allowed, and before they knew it, it was the night of the full moon and the time was upon them. \n\nThe Hall of the Moon was packed in the early evening with Dante and Lily wearing their Royal Armor for the august event, and the Pack members were in their military or civilian best, as they waited for their King and Queen to speak. The O'Connors were sitting in the front row in a place of honor, with the Hellhounds standing in their traditional protective semi-circle behind Dante and Lily, this time with their General and three Lieutenants flanking them instead of flanking the two Royals. \n\nAs the full moon rose outside and cast its silver light through the stained glass, Dante spoke. \n\n\"Good evening, Order of Fenrir Pack and dear guests from the O'Connor Pack! Tonight is a special night. Not only do we celebrate our Mistress again on this Night of the Moon, but we shall also welcome our Royal Heirs into this world. It's a night to be celebrated. Let us welcome our Mistress Luna and show her our love and adoration.\" \n\nA beautiful and low keening began in the Hall, quite unlike the rather boisterous one they'd given the O'Connors a few days ago in welcome, as Lily and Dante led them in worship of their Goddess Luna. With the beautiful sound, their loves and thoughts, hopes and dreams were carried skyward to their Goddess so She could share in their joy. After several minutes of contemplative celebration, the Chapel went quiet. Lily now addressed her Pack. \n\n\"Tonight my dears, as much as I would wish it, we cannot go on our monthly Pack run and hunt, since I shall be giving birth. But we have prepared for you a grand feast to celebrate our joy. There will be food, drink and music in the Great Hall, and we wish everyone to have a grand celebration tonight! After my delivery, on another night soon, your King and Queen will lead you on a great run and hunt, but for now we must be patient. We love you all deeply, and...\" \n\nLily's words were suddenly cut off as she doubled over in pain and Dante quickly bent down to hold her up. Lily smiled through the pain and spoke to her mate. \n\n\"It's time Dante, our darlings are coming!\" \n\nDante picked up Lily in his arms as he began running down the aisle in his cumbersome best, as he called out to his Pack, \"Wish us well!\" with his twenty Hellhounds all careening after him, and Odin, Victoria and Michael sprinting along behind. Dante called out again to his Pack as he left the Hall. \n\n\"It's time, my Pack! Celebrate with us and let Luna know how happy we are! Go and feast!\" \n\n*** \n\nDante was at Lily's side, wearing a hospital gown over his underwear (they hadn't thought to bring him a change of clothing, although Astrid had sent Hellhound Hammond to the Royal Suite to fetch one and he'd soon return with it). He was using one hand to hold his mate's, and was running his other one across her brow with a cool cloth to wipe away her perspiration. Lily was grunting and screaming through her contractions several hours into her labor. Dr. Sven and his mate Sylvi and a couple other nursing assistants were in the room doing their best to keep her comfortable. She was more or less wearing a hospital gown as she thrashed around, barely managing not to dislodge the IV hooked up to her. \n\nLily screamed once again as another intense contraction hit, and she gripped Dante's hand like a vice. He was doing his best to coach her breathing and could feel her pain, determination and hope through the bond. \n\n\"That's it baby, ride it out and breathe. In and out, in and out, relax and breathe before the next contraction comes.\" \n\nThe full moon was nearly at its zenith, and Lily was getting totally frustrated as Dr. Sven continued telling her it wasn't yet time to push. He was between her legs checking her, and he gave them an update. \n\n\"You're at nearly full dilation my Queen, just a few more minutes and it will finally be time to push and bring your children into the world.\" \n\nJust as the full moon reached its peak (which Dante and Lily were intensely aware of even though it wasn't showing through any windows), Lily began to glow emerald green as Dante began to glow blue-white from his seal and the rest of his body; they both said simultaneously, \"It's time, Doctor.\" \n\nDr. Sven nodded to Dante (Lily was staring aimlessly at the ceiling), agreeing that it was time to deliver them. \n\nDante gave Astrid a glance, and she led the Hellhounds out of the delivery room to give Lily some privacy. Then he urged his mate, \"Push, baby, it's time; bring our children into this world under Luna's love and blessing; push, baby!\" \n\nWith a great scream of pain and determination, Lily began pushing as both their glows intensified. And in half a minute to Dr. Sven's astonishment, a crystal clear, precious wail pierced the room! \n\nDr. Sven called out with awe... after a mother begins pushing, some babies take only a few minutes to emerge and others as long as several hours, but it was unheard of for it to be less than a minute, and never with the mother and father glowing with unearthly light... as he took delivery of the first Royal Heir. \n\n\"The Prince is with us!\" \n\nThe precious wailing was a welcome relief to Dante and Lily, and the doctor handed the Prince to Sylvi so she could clean him up, and measure, weigh, and cursorily examine him (did he have the normal number of fingers and toes, etc.) right next to Lily and Dante. Dr. Sven urged Lily to: \n\n\"Take a quick breather my Queen, and then it will be the Princess' turn. The umbilical cord is clamped off my King, do you wish to do the honors?\" \n\nDante, weeping in joy at the birth of his son, came over and drew his tanto, sterilized it with a quick zap of his body's on-call electricity, and cut the cord. Sylvi then brought the Prince to lie on Lily's chest, and the thrilled parents got their first clear look at their precious son. He calmed down immediately once he felt Lily's warmth; his eyes remained closed as he snuggled into her, and Lily held him lovingly to her uncovered breast with her free hand. He had a full head of pure silver hair, obviously a blessing from their Goddess Luna, and was perfectly formed and obviously healthy! Lily and Dante were both crying in happiness as their green and blue glows, which had never diminished, continued to fill the room, bathing their son in their light as Dante with his massive hand stroked his son's face in love. Dr. Sven then broke in. \n\n\"Ok my Queen, it's now time to push and bring our Princess into this world.\" \n\nLily grunted in preparation, then screamed as she pushed once again, determined to see her daughter born, as she squeezed Dante's hand for strength. Again in less than a minute, a second precious loud wail filled the room, announcing that the Princess was born! Dr. Sven excitedly announced it to the room. \n\n\"You did it, my Queen, the Prince and Princess are born and are happy and healthy! Or healthy, at any rate; the first few minutes are always upsetting for the child. Congratulations, my King and Queen!\" \n\nDr. Sven handed off the little girl to his mate Sylvi as once again she cleaned up the child, weighed and measured her and performed a quick external examination. Dante also cut this cord and welcomed his little girl into this world. She was placed skin to skin against Lily's naked breast so she could comfort their children and keep them warm and content. The little ones both began to nurse as Lily held them in her arms and wept tears of pure joy while Dante ran his hands along his children in love and comfort. \n\nJust like her brother, this little angel had a full head of moonlit silver hair and was also perfectly formed and healthy. (Or so they appeared from the outside, and through the family bond which had already formed, their parents knew they were healthy through and through.) They had calmed down at once on Lily's bosom and were suckling contentedly as they snuggled against each other and their mother. Sylvi approached with their birth certificates. \n\n\"My King and Queen, it's time to name them and officially welcome them to this world. Sven has already cleaned up the afterbirth and Lily can rest now.\" \n\nDante and Lily gazed at each other with love and pride as the glow from each of them faded at last. Dante looked into Lily's eyes, laid his hand on his son's head and spoke. \n\n\"Our Son is Fenrir Dante Silvrash, named for the Pack he will one day lead, and for the father who loves him like no other.\" \n\nLily nodded her head tiredly in happiness. Dante then laid his hand on his daughter's head and spoke to Lily and the room. \n\n\"Our precious daughter is to be named for our Goddess Who blesses her and for the Mother who cherishes her. She is Alunra Lily Silvrash.\" \n\nDante leaned down and kissed both of his children's heads as the entire room wept joyously. \n\n*** \n\nLily had been cleaned up, given a fresh gown and made comfortable in a suite in the medical center, speaking quietly with her mate and with Fenrir and Alunra sleeping in her arms. Now in groups of four, the Hellhounds were beginning to take three-hour shifts to guard their suite during this special time. Dante summoned Astrid into the room through the bond. She entered and rushed to her King and Queen's side. Upon catching her first sight of the babies, a brilliant smile lit up her face as she wept tears of joy. \n\n\"Congratulations, my beloved King and Queen, they're so precious, I'm so happy for you. Luna has blessed them and you, and I'm so happy to have them with us.\" \n\nDante and Lily smiled at her, and Dante hugged her before replying. \n\n\"Thank you Astrid, we're overjoyed too, but Lily is exhausted, and the little ones are sleeping. Please nip out and bring our family in, and you can bring William, too.\" \n\nAstrid nodded and left the room to return a moment later with Odin, Victoria and Michael, with William following. Michael came to stand by his brother's side, wrapped his arm around Dante's shoulder and congratulated him, while Odin and Victoria came to Lily's side. It was her mother who spoke first. \n\n\"Oh baby, they're so beautiful, your father and I are so proud of you! What are their names?\" \n\nOdin and Victoria had tears of joy in their eyes as they beamed at their very first grandchildren. Lily spoke to them tiredly but happily. She directed her gaze at her son. \n\n\"This handsome little cub is Fenrir Dante Silvrash, born June 3<sup>rd</sup> at 11:50pm, weighing 8lbs 2oz and is 21\" long.\" \n\nShe then gazed at her daughter. \n\n\"And this tiny heartbreaker is Alunra Lily Silvrash, born June 3<sup>rd</sup> at 11:59pm, weighing 8lbs 1oz and is also 21\" long.\" \n\nDante stepped close and spoke to their Mother and Father. \n\n\"Fenrir is named for the Pack he will one day lead and for his father. I learned in my Spirit Walk that in the Silvrash line, the first-born son's middle name is his father's first name which is why I changed mine, and we've continued that tradition for our son. As for Alunra, she's named after our Goddess who has blessed her, and for her Mother who loves her so dearly, and who fought to bring her into this world.\" \n\nOdin and Victoria hugged Dante fiercely, with huge smiles plastered across their faces. \n\nDante reached down to Lily and took his sleeping son in his arms to hold him for the first time, as joyous tears of silver ran down his face. He cooed to him softly as Fenrir moved around a bit in his sleep, wrapped in Dante's strong arms. The new Father couldn't be prouder, and he loved his son and daughter to the very depths of his soul. \n\nAfter Dante had held Fenrir for a while and everyone had been quietly talking, Dante handed him to Victoria and the boy cub, still sleeping, and with many long interludes for cuddling, made his way around the room. Dante next reached down and Lily handed Alunra to him as he now held his daughter in his arms for the very first time. A huge protective wave washed over him that Lily felt through the bond, and that caused her to look at him in concern. Dante smiled reassuringly at his mate and quietly explained, \n\n\"Just being protective love, I'll make sure nothing ever happens to our son and daughter and I'll keep them safe until my last breath, just as I do for you.\" \n\nLily smiled while Dante leaned down and kissed her deeply. After he'd held his daughter for a while, he passed her along to Victoria, who held her for a while before the girl-cub followed the arms-to-arms path her brother had recently taken. Fenrir soon made it back to Lily's arms again, where he awakened for another feeding. Soon Alunra was back and awake for another feeding as well. \n\nA little while later it was clear that both Dante and Lily were exhausted, so Astrid and William gently ushered everyone out of the room. A second bed had been brought in for Dante, and he and Lily and their children fell asleep for their first night as a family. As they drifted off, Dante and Lily each said a little prayer to Luna, thanking Her for their son and daughter and for their children's health. \n\n*** \n\nThe next day Lily was discharged, and they retired to their suite surrounded by their family as Fenrir and Alunra went home. It was a celebratory occasion when Alunra and Fenrir both opened their eyes for the first time and everyone received two shocks about the children. Fenrir's eyes were just like his father's pools of liquid silver except that they glowed constantly if only faintly, and Alunra's eyes were just like her Mother's: brilliant emerald green but that also glowed constantly but faintly. Upon closer inspection when Dante and Lily were changing them, they found a small birthmark on each child in the shape of a crescent moon on the right side of their neck. It couldn't be clearer to anyone that Luna Herself loved, blessed and protected these two children above all others. They were in fact the Children of Her beloved Champions in Lily and Dante, and the first born unhidden and known to their own Pack under that bloodline at long last revealed since the great tragedy that had left a scar not only upon their race, but also upon their Goddess' heart. \n\nBetween Dante and Lily and now the Royal Prince and Princess Fenrir and Alunra, they were the Royalty of all of Lycan kind and the most beloved wolves of the Mistress of the Moon, the Goddess Luna. They would be protected above all others, and their Royal Parents, the entirety of their Pack and their Allies in the Council would fight to their dying breaths for their safety as was their duty and right. All those that loved them would never let tragedy repeat itself and would do whatever it took to avoid the Fate that had plagued the First Champion's line and to cleanse the darkness not only from their species, but from the world at large. \n\nOne thing Dante and Lily noticed was how inseparable the infants were. They were constantly snuggling against each other and often holding hands; whenever they got too far apart from each other, they'd each cry until they were close to their twin again. Dante had Astrid find a dual bassinette and place it in their suite so the two babes could sleep touching each other and actually rest. But while awake they were both always in their Mother's or Father's arms being loved and spoiled. They were swaddled tightly in silver cashmere blankets, since as Royalty they only got the best. Astrid and all the other Hellhounds were already fiercely protective of them, and since their births had served double duty as not only highly motivated guards, but also as aides to Dante and Lily, helping to care for Fenrir and Alunra whenever their parents needed an extra pair of hands. \n\nAll the Hellhounds were extremely protective, but none more so than Astrid, Freydis, Hilde and Bryn, not only as the top commanders of their forces, but also as their closest friends, who'd guarded the Parents and kept them safe ever since the day they met. \n\n*** \n\nIt was late afternoon on the day after Lily had given birth, and Dante and Lily were surrounded by their family in their living room. Astrid spoke with Dante and Lily. \n\n\"My King and Queen. Tomorrow morning is the ceremony when the Prince and Princess are to be introduced to the Pack, and your Pack bond is to be formed with them. We also have four Hellhounds training with several of the mothers and Elders in the Pack so they'll be able to both guard and care for the Prince and Princess when you aren't available. Bryn is arranging that, and she will be the head bodyguard for the little Royals while Freydis, Hilde and I will continue as your own primaries along with the rest of the Hellhounds, except for the four new specialists. We shall allow no others to guard them or care for them, for their safety and your peace of mind.\" \n\nLily smiled at her friend and confidant. \n\n\"Thank you Astrid, that sets us at ease. Soon Dante and I will need to return to our duties for the Pack, and as much as we want to spend every waking moment with our little ones, we simply can't. We have a Pack to run and a War to fight. \n\n\"In a week I should be recovered enough that we can lead everyone on a Pack run and hunt, and shortly after that, we'll need to leave for the U.S. to fight the War. But we'll take this first week as bonding time as a family, so Dante and I can spend lots of time with them during their first days outside the womb. Mom, Dad and Michael will leave tomorrow after the ceremony, and then things will begin to get back to business as usual. Thanks to my incredible healing gifts, I'm already significantly recovered.\" \n\nThe rest of the afternoon was spent as an extended family with everyone pouring out their love, taking turns holding and cooing to Little Fenrir and Alunra. They took dinner in their suite and everyone ate heartily, especially Lily as she rebuilt her strength. \n\nAfter dinner Dante, Odin and Michael (and four Hellhounds as escorts) made their way across to the Margrave's Tower and Dante's study for celebratory drinks and cigars. Dante had secured a box of Fuente Fuente Opus X 20th Anniversary 'Power of the Dream' cigars. Going forward, he planned to savor one of these every year on the twins' birthday to celebrate, but tonight he shared them with his Father and Brother. Dante opened up a new bottle of a private casking just for him of his favorite bourbon of Four Roses Single Barrel Barrel Strength that he poured for everyone (the four Hellhounds declining since they were on duty). Dante lit his cigar with his favorite lighter that he'd gotten as a gift from Alpha Camille of the Mont Royal pack and blew out a thick rich cloud of smoke as Michael and Odin did the same. For a while they just smoked and drank in companionable silence. It was Dante who eventually broke the silence. ",
        "\"You're leaving tomorrow morning after the ceremony, but we'll see you again soon when we travel back Stateside in two weeks. This respite from the War has been heavenly, but it's time for Lily and me to stop relaxing and begin finalizing Viktor's reign.\" \n\nOdin blew a couple smoke rings before responding. \n\n\"Yes, it is that time. Will you be staying with us while you're in the States? And how many of your Pack do you plan on bringing?\" \n\nDante mulled that over for a moment before responding. \n\n\"Yes, we'll be staying with you and splitting our time between our suite and the Cabin, since both are so well secured. As for the Pack, we'll be traveling with Fenrir and Alunra, so we'll need to ensure they're as well protected as Lily and me. So we'll bring along all twenty of the Hellhounds plus thirty of our top Betas. That will leave a significant force here at the Castle to protect the Pack while also giving us the forces we need. I'm worried about housing that many wolves though; do you and Michael have any thoughts?\" \n\nMichael answered with a self-satisfied chuckle. \n\n\"Don't worry about that my brother, we have you covered. When Mom and Dad got your call saying you were going home to Germany to await Lily's delivery, we figured there would soon come a time when you'd travel back home to us with your Pack in tow for the War. So we built a large new building in the compound as a sort of hotel where your Pack can be comfortable and secure. With all that's going on with our partnership with the Council and the other Packs, it seemed prudent to expand our facilities to provide a place a large number of wolves could stay in our Compound. We'll always keep your suite and your Cabin ready for your visits, since we're sure they'll be frequent.\" \n\nDante smiled at that. \n\n\"That's good to hear; we appreciate it. We'll most certainly be visiting as often as we can, so thank you for keeping our accommodations available. We want Fenrir and Alunra to know their family and to be close to you as possible. We don't know how long we'll be staying this time, but we can't be away from our Pack too long, as they still very much need us. Luckily they're pretty self-sufficient but still, we can't be away too long.\" \n\nThey ended up talking for several more hours as they drank and smoked before calling it a night. The four Hellhounds escorted Dante back to his suite where he took a shower and climbed into bed with Lily after giving his son and daughter a gentle kiss goodnight; they were already sleeping in their bassinette next to the bed. When Dante got into bed, Lily snuggled into her favorite spot and they fell asleep. \n\n*** \n\nThe next morning found Dante and Lily in their Royal Armor holding their son and daughter dressed in velvet green and silver onesies and swaddled in silver cashmere blankets standing before the Pack in the Hall of the Moon, ready for the ceremony to begin. Astrid and Bryn stood at Dante's right, while Hilde and Freydis stood at Lily's left, with the rest of the Hellhounds standing at attention behind them. It was Lily who began the ceremony. \n\n\"Welcome our Pack, this is an historic day for us all. For the first time in a thousand years we have a known continuation of the Royal Bloodline with these babies, the first children born under the re-emergence of the original First Champion's line. We are here to introduce you to our son and daughter, the First Prince and First Princess of the Order of Fenrir.\" \n\nDante held up Fenrir with his pure silver hair and glowing silver eyes as the Pack took their first look at the darling child, and Fenrir for the first time saw his Pack. Fenrir giggled a bit as the Hall was filled with cheers, howls and yips of joy. Dante's voice boomed our into the Great Hall. \n\n\"Our Pack, please welcome Prince Fenrir Dante Silvrash, our Son!\" \n\nAgain the Hall was filled with a thunderous cheer full of howls and yips that took several minutes to calm down as Dante presented Fenrir in his arms. When the Chapel finally went quiet, it was filled with Lily's warm, melodic voice. She held Alunra above her head as this babe too giggled at her Pack. \n\n\"Our Pack, please welcome the First Princess, Alunra Lily Silvrash, our Daughter!\" \n\nAgain a thunderous cheer full of howls and yips filled the Hall of the Moon as everyone clapped and cheered for the Royalty that had recently multiplied. Dante called out to the Pack again. \n\n\"Fenrir Dante Silvrash is named for the Pack he will one day lead, and for his Father who loves him so very much. It is traditional in the Silvrash line for the first-born son to take his Father's first name as his middle name. We charge you all to protect and love him as he grows into his own.\" \n\nLily then continued. \n\n\"Alunra Lily Silvrash is named for the Goddess that blessed her and Who loves her so, and for her Mother who also loves her dearly. We charge you all to protect and love her, for she and Fenrir are our future!\" \n\nAt that, Dante and Lily stood immediately next to each other and each removed their right gauntlet, that they handed to Astrid and Hilde as Dante drew his tanto. He drew the blade across his palm and then handed it to Lily to do the same. They made fists above Fenrir's mouth and a drop of blood from each fell into his mouth and he gave a small whine. \n\nThe Pack could always feel their Alphas in their mind, together they stood like double trunks of a mighty oak, strong and immovable and protecting them all. But as the new bond formed for the Alphas and the Pack, they felt Fenrir in all of their minds differently, like a bright beacon of moonlight, warm and comforting and innocent. \n\nDante and Lily then held their fists above Alunra's mouth as a single drop of blood fell from each into her mouth and she too let out a little whine. \n\nJust like with her brother, Dante and Lily and their Pack felt her enter their bond like a spotlight of Lunar radiance, glowing with warm, comforting innocence. The entire Pack let out a low keening of joy and respect at feeling Fenrir and Alunra joining their mutual consciousness; they would be treasured and protected above all others, and woe to the enemy who would ever attempt to harm them, for the entire Order of Fenrir Pack would extract the ultimate price for such a transgression. \n\nWhen the ceremony was concluded, the O'Connor family surrounded Dante and Lily, who were still holding their little ones, and said their goodbyes before they were driven back to Stuttgart Airport to fly home. Lily and Dante were escorted back to their office, where Bryn and Astrid remained to keep watch and help care for Fenrir and Alunra as their Alphas began catching up on their Pack duties. Their assistants Marcus and Stephanie were there helping them, but also stealing glances at the two precious infants. It was a busy day for them, and they tried to catch up as quickly as they could. They'd scheduled the Pack run for that Saturday, which was only a few days away, and Lily was recovering nicely from the changes her body had endured during her pregnancy; she would be fully healed in time. She was nearly back to her trim figure, her incredible metabolism even among Lycans helped immensely, and she was already just about back to her old self. They had a working lunch and a productive afternoon before it was time to head down for dinner. Astrid, Bryn and four other Hellhounds escorted them down as a family. Both Fenrir and Alunra had been fed by Lily before they made their way down, and both parents were amazed at their voracious appetites. Fortunately Lily was producing lots of milk, so was able to keep them well fed without difficulty. At dinner, Dante and Lily each held a child in one arm as they ate with the other, Dante holding his daughter Alunra, and Lily holding her son Fenrir. The babies were both wide-eyed and laughing and making adorable noises, taking in all the sights and sounds of the festive Pack atmosphere, having a ball with it all. Many Pack members approached the head table to congratulate their Alphas and to take a closer look at the children, and Dante and Lily always responded with warmth to anyone in their Pack. \n\nAfter a while Dante and Lily were finished eating, and their babies were getting antsy and beginning to fuss, so Astrid, Bryn and the four other Hellhounds escorted them back to their tower suite. Lily fed the little beasties one last time and Dante changed each of them when they were done guzzling, and burped them before they swaddled them tightly and placed them tenderly in the bassinette together, where they promptly fell asleep, warm and fed. Dante and Lily got into bed and just cuddled and touched each other for a while, talking softly about their family and their hopes and dreams before falling asleep with Dante on his back and Lily nestling in her favorite spot on his chest and shoulder, knowing they'd need to wake up a few times during the night to feed and change their little ones. \n\n*** \n\nIt was Saturday night, and the Pack was gathered in the Great Hall, ready to start the postponed Pack run and Hunt. Dante and Lily were at the raised platform, dressed in comfortable sporty clothing, waiting for a few stragglers to join them. Dante was in his traditional black muscle shirt with tan cargo pants and boots, while Lily was in tight black yoga pants and a red sports bra and red tank top. Several of the mothers in the Pack, and a few fathers as well as some of the older wolves were remaining at the Castle. There was also a guard of Betas who would stay and protect it as well, while the Pack was off on their adventure. Fenrir and Alunra were being guarded and cared for by Bryn and Hilde plus the Royal Contingent of Hellhounds that had been trained in infant care; they were all ensconced in the living room and library in their tower suite. Lily let out a piercing whistle, calling everyone to attention for Dante to address the Pack. \n\n\"My Pack, tonight for the first time all of us together, we go on a Pack run and hunt. Due to our Prince and Princess being born under the full moon it's a bit late, but Queen Lily and I are honored to be with you tonight. We will all shift on my command, then your Queen and I will lead you out the Eagle Gate and into the forests and plains surrounding us. When we finish with our run and have our kills of Red Deer, we'll bring them back to the Castle grounds where we'll celebrate, and several bonfires will be lit for us to cook our kills and to feast. Let us sing our love and joy to our Goddess and ask for a fruitful hunt!\" \n\nAt that, Dante commanded the Pack to shift, and everyone stripped and began their transformations. When the Pack had shifted, they all looked to their King and Queen and were absolutely shocked! They'd never seen Dante or Lily's wolves before, and they were completely floored. Lily was beautiful and lithe and clearly very fast and powerful, all white save for the blessing she'd received from Luna in Mexico that had not only given her a silver streak in her red hair in her human form, but had also changed her lupine ears to pure silver. She was the most beautiful she-wolf any of them had ever seen. \n\nBut the larger shock was their Alpha King. After Dante's hybrid transformation in Mexico City he hadn't shifted since then, so neither he nor Lily, let alone his Pack, had seen his newly enhanced wolf. He was even larger than before, standing 4'5\" at the shoulder and weighed easily over 400lbs! He was still all black save for the silver at the tips of his ears and tail, but he now had a broad silver streak running down his chest as a mark of blessing from his Goddess Herself, and as had always been unique to him, his eyes were glowing pools of liquid sterling silver. \n\nLily spoke to him through the bond as she swept her lithe form up and down his sides, mixing their scents and displaying her affection for him. \n\nYou're more magnificent than ever before, my love. Our Pack is in awe of you, and you're the greatest Lycan of us all.  \n\nDante chuffed before licking Lily's muzzle in affection. \n\nThey're in awe of us both, my love. No one has ever seen a more majestic she-wolf than you. You're every bit the Alpha Queen that even our Goddess herself acknowledged as her Champion beside me. I love you so much Lily, and I'm so proud of you! \n\nAt that Dante, with Lily at his side, made his way down the aisle of the Great Hall as their Pack melted aside for their Alpha Queen and Alpha King before they led them outdoors, through the courtyard and out through Eagle Gate as they both broke into a run, leading their Pack into the forest. \n\nThey had with them nearly 500 wolves on this hunt, which under normal circumstances would soon decimate the local population of Red Deer to extinction, but the Pack had called this region home for centuries, and long ago had instituted a breeding and growth program for the local deer population and other wildlife so they wouldn't hunt them to annihilation. Because of this careful husbandry, there were vast herds in the forests and on the plains around them that they could hunt once a month without worry. Dante and Lily bounded through the forest, luxuriating in their wolf forms once again, able to run and play together and with their Pack. Astrid and the Hellhounds struggled to keep up with them as the rest of the Pack protected by the Betas, trailed behind. \n\nDante and Lily caught the fresh scent of a large herd of Red Deer and using the bond, communicated with the Pack to have the wolves start flushing them out of the forest and into the grassland surrounding it. Pretty soon a large herd of deer was in the open, and Dante gave the order for the Pack to cut through their ranks and kill. Dante and Lily sprinted into the deer's ranks and tore into them. Lily bypassed two large bucks before seizing a large fat doe in her jaws. Dante was like a machine as he tore past four large bucks on his way to the oldest stag in the herd, that he took down with ease in his massive jaws. The rest of the Pack was also successful and took down over two dozen infirm deer. \n\nWhen it was over and they'd let large numbers of healthy deer bound away, they dragged all their kills together and circled around Dante and Lily. They began to howl in satisfaction, asking their King and Queen to join in. Lily let out a powerful and beautiful howl that filled the valley before Dante leaned back and let out a thunderous roar of triumph that must have carried all the way to Luna Herself. \n\nAfter a while the Pack dragged its kills back to the Castle, and once everyone was inside under the cover of darkness, the gate was sealed, and the drawbridge was raised. Bonfires were already blazing away, and many wolves shifted, found their clothing and started to gut and prepare the kills for cooking. \n\nDante and Lily were happy to remain as their wolves, and they snuck off to a secluded corner of the Castle grounds before Lily enticed Dante into some play. Dante mounted Lily gently before they both started rutting together, thrilled to be able to do this as wolves, since the opportunity didn't present itself regularly. Lily, thanks to her astonishing healing capability had completely recovered from her pregnancy and was randy for her mate. The run and the hunt and seeing him even larger and more powerful than ever had gotten to her, and she submitted fully to Dante as he claimed her over and over before locking them together with his knot. A while later a powerful howl split the night that could only be their Alpha Queen coming to fruition, and a tremendous and earth-shaking roar from Dante followed. \n\nThey bedded down together and enjoyed remaining joined as they waited for Dante's knot to shrink while Dante cleaned them both up and pampered Lily with his tongue. A while later they returned to their Pack amid howls and yips and cheers to which Lily strutted and Dante chuffed. \n\nThe Pack celebrated late into the night, feasting on the flame-roasted mouth-watering venison and everyone ate their fill. The Alphas retired late to their suite where they picked up their sleeping children and put them to bed, then took a shower together before laying down and falling asleep. \n\n*** \n\nIt was a week later, and Dante and Lily were preparing to head back to the States to resume the War. They'd spoken long about whether to bring their children along or to leave them with the Pack, but at the end of the day Lily was still breastfeeding and they couldn't bear the thought of not being able to take care of them and to ensure personally they were safe, so Fenrir and Alunra would come with them. They'd either be kept far from danger in the heart of the O'Connor Compound, or barricaded inside their Cabin fortress, with several Hellhounds always on patrol. Bryn and at least two of the four nursemaid Hellhounds (they hated being called that, but Astrid enjoyed making them squirm) would be the twins' personal guard and caretakers, and they would allow nothing to happen to them. While they were at the Cabin, they would always have either Astrid or Bryn or both on guard with two nannies (another term Astrid enjoyed teasing the caregiving Hellhounds with), with six or seven others, so that no fewer than ten Hellhounds would always be guarding them, with their parents to provide an insurmountable last line of defense. \n\nAt first Dante was concerned about flying fifty of his Pack plus his family in their small jet, but Astrid quickly (and quite cheekily) informed him that the Pack owned several Boeing 747's which could seat over 400 passengers comfortably (and not any of those suicidal Boeing 737 Maxes), so flying fifty-four wolves and two cubs in arms wouldn't be an issue. Dante couldn't help but growl at her when she shared that tidbit after he'd been stressing over the transportation. Lily just laughed at the two of them. \"Play nicely, children.\" \n\nThat night after dinner with the Pack, Dante and Lily packed their bags along with all their weapons. (No, they were glad to learn, they needn't take along their aptly-named Dress Tanks.) Astrid was overseeing the main armament for the Pack, but they wanted to pack their personal weapons themselves. They also packed several suitcases of clothes for themselves, as well as for Fenrir and Alunra, not to mention a massive diaper bag with plenty of everything. (The nursemaid Hellhounds also packed plenty of supplies for the twins, so it was good that the 747 was a large plane.) They knew they'd be spending several weeks if not longer in Montana, since they'd try to get as close as they could to wrapping up the War and taking out Viktor, but they didn't know if that could happen or not. \n\nThey'd be flying out early tomorrow morning and thanks to their plane chasing the sun, they'd arrive in the late morning of the same day at Glacier Airport, which was just barely large enough to accommodate their large airliner. There would be a fleet of eleven vehicles from the O'Connor Pack, which was necessary to transport all the wolves plus their baggage and weaponry, so there was no chance of hiding their arrival. Everyone involved knew that Viktor no doubt had people watching the area so they'd basically be announcing their arrival to him, but there was no other way, and there was no way the Pack was letting their Royal Family enter the heart of a country at War with any less protection than they were bringing along. One comfort was that they'd be arriving unannounced, so it was unlikely Viktor would be able to rally any significant forces against them before they arrived safely at the O'Connor Compound. \n\nDante and Lily finished packing before they turned in for the night to rest up for their early flight out. \n\n*** \n\nDante and Lily walked down the ramp from the jet after Astrid and Bryn and several other Hellhounds went down first to secure the area. They were each holding one of their babies and were trailed by the remainder of the Hellhounds, with the Betas following that group. Loaded down with all their luggage and weaponry for efficiency... they didn't wish to waste any time getting on the road... they entered a private terminal barely able to accommodate them all. Inside were Michael, Ben and Sara and several others of the Pack O'Connor Betas to welcome the Pack. Michael, trailed by Ben and Sara, approached the Royals. ",
        "\"Welcome, my Alpha King and Alpha Queen, we missed you, and it's good to see you again.\" \n\nDante and Lily waved off the formality and hugged Michael before giving Ben and Sara affectionate hugs too. Lily spoke. \n\n\"It's good to see all of you too, it's nice to be back. Is everything ready for us to load up? We want to get to the Compound before Viktor has a chance to throw any surprises at us.\" \n\nMichael nodded his head affirmatively, so Dante sent a command to the Pack through the bond to load the luggage into the vans that were waiting just outside. In almost no time at all everything and everyone was loaded into the motorcade and with Ben and Sara leading, they departed for the Compound. \n\nMichael was riding with Dante and Lily along with Astrid as Dante and Lily's chief bodyguard, and Bryn serving as Fenrir and Alunra's chief bodyguard. Michael was cooing at his niece and nephew all along the drive in. It hadn't been long, but Fenrir and Alunra were already growing and Michael loved seeing them. It took less than two hours to get to the Compound, and as soon they arrived, the Royal Pack piled out of the caravan. Several Omegas and a few Betas from the O'Connor Pack began guiding everyone to the new sprawling building where they'd be staying. \n\nOdin and Victoria were on hand to greet everyone and gave their son and daughter big hugs before taking their grandchildren in their arms to snuggle them and make them giggle at their antics. Dante and Lily laughed at the silly-acting grandparents before Dante spoke. \n\n\"It's good to see you, Mom and Dad, I see you're already all over our little Prince and Princess and giving them tons of love.\" \n\nVictoria smiled at them. \n\n\"Well of course, how could we not spoil our Grandbabies and cuddle them as much as possible!\" \n\nAstrid and Bryn and a few other Hellhounds gathered up the luggage that Dante and Lily weren't carrying themselves, as Odin and Victoria escorted them inside and up to their suite, where everything was just set down in a corner for now. Dante and Lily thanked them for their help before dismissing them to get settled in. As they were unpacking, Odin and Victoria were watching Fenrir and Alunra and 'helping out' by playing with them. Odin spoke to them as they carried their belongings to drawers and closets. \n\n\"Dinner will be served shortly. What's your plan after that?\" \n\nDante responded. \n\n\"We'll stay the night here, and tomorrow morning we'll organize another Guardians Council meeting for the next day so we can all plan the next phase of the War. We need everyone on the same page, knowing where we go from here and what each Pack should focus on next, or maybe a few overall goals for everyone, we'll see. After we set that up, Lily and I will take the rest of the day at the Cabin to relax, then return the next morning for the Council meeting.\" \n\nOdin and Victoria nodded, agreeing with the plan. Soon they all went down to a dinner of Abigail's wonderful food. Massive Porterhouse steaks perfectly cooked medium rare, garlic whipped potatoes and roasted asparagus. After everyone was well fed, they all retired for the night and fell asleep, Dante and Lily back in their old bed with Lily in her comfortable spot, and the little beasties in a large bassinette that had been brought to their room. \n\n*** \n\nThe next morning Dante and Lily spent time organizing a new Council meeting for the next day, then packed up a few things and headed to the Cabin in Lily's truck. Astrid and Bryn went with them as the primary bodyguards for the Royal Family and eight other Hellhounds for a total of ten. Two were from the Prince and Princess' contingent, and the rest were from Dante and Lily's. The rotation with the other ten Hellhounds would switch that night, but for now they'd be guarding the Cabin, just in case. \n\nDante spent some time checking the security and camera feeds, but so far nothing had emerged to cause a concern. They spent some time relaxing in the Cabin and caring for their children. \n\nIt was late afternoon, and Dante and Lily were about to begin fixing dinner when Dante heard a security ping from his system. He made his way into the bedroom and launched the security feeds on the large TV screen, before rage began coursing through him. On the outermost edge of the perimeter of his surveillance network, nearly a mile from the Cabin, were 75 heavily armed Lycans converging on the Cabin! \n\nDante sprinted out of the room, yelling for Lily. \n\n\"LILY! We've got incoming, get suited up now, we'll be under attack soon!\" \n\nShock and fear showed on Lily's face at the thought of little Fenrir and Alunra being caught up in a battle, before rage overcame her just like her mate. \n\nDante reached out to Astrid and Bryn through the bond. \n\nAstrid, Bryn... get back here immediately, we're about to be attacked by 75 hostiles! Bryn, I want you and the two Hellhounds of your unit inside the Saferoom with Fenrir and Alunra and fully locked down! Get the fuck in here NOW! \n\nLily and Dante sprinted into the bedroom (which along with the en suite bathroom served as the Saferoom), opening the weapons cache, with Lily pulling on her body armor and arming herself as Dante strapped on his weapons harness and Twin Moons. \n\nAs Dante and Lily rushed out of their room and collected Fenrir and Alunra, who'd been on the rug in front of the fireplace, Bryn and Astrid and two other Hellhounds burst through the door before securing it. Bryn and the two other Hellhounds quickly took the Royal children and rushed into the Saferoom before Dante locked it down and enabled all the systems. This meant that although it would be perfectly comfortable and well-lit inside the Saferoom, they'd be confined in a hexahedron (a cubical shape but with rectangular faces) effectively constructed of steel-reinforced concrete and ceramic plate that provided impact, fire and blast protection so it couldn't be breached. Lily and Dante with Astrid in tow made it outside the building before they activated the lockdown on the entire Cabin, enabling all the security features. They had done everything they could, which was considerable given that they'd long since retrofitted Lily's original rustic Cabin into a fortress. But they weren't about to huddle inside themselves: they would take this fight to the enemy! The other Hellhounds outside had regrouped, and they now formed ranks around their Alpha King and Alpha Queen. \n\nLily brought her powers to the fore as she began to glow an otherworldly emerald green. Dante spoke to her and the Hellhounds in a low dark voice, overflowing with anger. \n\n\"I'm about to do something I've only done once before and go into my hybrid form. The rest of our Pack is racing to our position, but they're still fifteen minutes out at the earliest, and our enemies are almost upon us. We don't have a choice because we don't have time. Lily, you'll have to pull me back when this is over, but I want you and Astrid behind me using me as a shield as we begin our counterassault. Everyone stand back for now.\" \n\nDante stepped out into the forest and began digging deep within his soul, pulling gigawatts of power into himself. As his body thrummed with rage, the ambient light began to fade and seemed to be sucked into him as angry black storm clouds gathered overhead. Dante raised his fist towards the heavens then pulled it back down to himself, summoning a massive bolt of lightning that enveloped him, lighting up the twilight with a booming crack echoing throughout the valley. The Hellhounds stared in wonder and more than a little anxiety as their Alpha King transformed before their eyes into something they'd never conceived of before. He grew several feet in height as void-black fur covered his chest, arms, legs and back with a deep mane sprouting around his neck and head. His face was transformed into that of a hybrid man-wolf. Lightning was racing around his body and his eyes blazed with silver fire dancing within them and surging out of their sockets. Massive razor-sharp talons extended from his hands and feet and an otherworldly silver-blue mist poured from his mouth. Once again the Devil himself had come to Walk this land, and the amount of angry power cascading down from him in waves nearly sent everyone to their knees. Only Lily was unaffected, and she confidently came to stand by her mate's side. Dante looked down at his Great Love and through a smile distorted by his lupine muzzle he whispered to her. \n\n\"It's time for these wolves to pay with their blood and pain. For attempting to take the lives of my Great Love and beloved children, I shall reave their souls and consume them. Let's go.\" \n\nDante took off like a phantom and even with his titanic size he was fleet as a ghost as he stalked through the woods, with Lily behind him easily keeping up, with Astrid following, controlling her Hellhounds with hand gestures as they flanked their Destroyer King as closely as they were able to keep up. Dante could sense that their enemy's main force was heading straight for them, but with two sides intending to come around and flank them in a pincer attack. Dante dispassionately passed this intel on through the bond and rallied his warriors to counter each side of the pincer attack, three on one side, four on the other, while he, Lily and Astrid dealt with their opponents' main force. \n\nLily and Dante with their enhanced ears and noses were tracking the oncoming force and were about to encounter the also quickly advancing main unit. Dante burst into a large clearing the Lycan hostiles were advancing through, and the enemy wolves froze in horror at the unimaginable midnight-black demonic being that had found them. Dante let out a roar so thunderous and terrifying that the earth itself seemed to tremble in the face of his power. Dante sprinted directly into their ranks with Lily following him, as the enemy Lycans finally responded by pouring hundreds of rounds towards Dante's form, but the bullets just ricocheted off or melted when they reached the lightning racing around his body, sometimes even vaporizing. \n\nWhen Dante was close enough, he thrust his right-hand talons through the chests of two wolves killing them instantly, then he swiped his left arm across the faces of two other wolves on his left, ripping their heads from their bodies and they went sailing away before dropping to the earth like rotten pumpkins. Lily, protected from the gunfire by her mate, slipped through their front rank and came at them from behind as becoming a blur she moved so fast, she began spinning and slashing her twin daggers infused with her power through their backs and necks, slaughtering them by the dozen as they perished in fountains of blood from her twin blades. Dante stretched out his hands summoning Twin Moons to fly into his grip before he tore into the enemy ranks, cleaving bodies in half and flicking off limbs like they were matchsticks. \n\nAstrid was engaged by this time and was demonstrating her own well-honed ferocity in defending her King and Queen, cutting through any wolves she encountered in her own vicious dance of death. The enemy Lycans were in chaos, but a few were beginning to form ranks and were attempting to pin down Astrid with gunfire. They had nearly succeeded when a group of ten of them suddenly exploded in front of the Hellhound. Astrid glanced at her Destroyer King to see Twin Moons surrounded by dissipating black smoke; a supercharged bolt of black lightning had been unleashed upon the enemy, vaporizing their numbers. \n\nIn the distance they could heard automatic gunfire from both their Hellhounds and the enemy Lycans, as screams and clangs of steel also echoed through the valley. \n\nDante spied an enemy turning on Lily, raising his rifle to fire into her back, but he leapt towards him with his incredible strength and tore him in half before he'd fully raised his rifle. Lily spun around Dante and drove her twin daggers into the chest of a wolf who had raised a battle axe to strike at Dante, but instead he spit up blood as Lily's glowing green blades ripped through his chest. Dante shot another void-black charge of lightning from the tips of Twin Moons that zig-zagged through the trees, taking out the remainder of the forces as they all exploded from the energy blasting into them. \n\nAstrid sprinted over to her King and Queen as Dante spoke coldly. \n\n\"Our Pack is almost here. Go support the left flank and finish them off as Lily and I clean up the right. Leave nobody alive.\" \n\nAstrid nodded before sprinting off to take command of the Hellhounds still fighting on their left, as Dante sprinted with lightning speed with Lily easily keeping up behind him to their right flank. They came upon the remainder of the fighting to see that their tiny band of Hellhounds had well-deserved renown as one of the most elite fighting forces their race had ever seen, as they were tearing into the enemy forces against odds that must have begun at five to one, and were nevertheless slaughtering them mercilessly. Assault rifles, swords, morningstars, and axes were all in use as the enemy Lycans struggled to ward off the relentless attack. \n\nDante rushed to the nearest enemy with Lily flowing behind like his shadow, and skewered the wolf upon his claws, raised him up and threw the body at another enemy, crumpling him with the impact. Lily had darted around her mate and slashed her daggers through the air, causing an emerald green force wave to cut into a group of enemies, slicing through them to provoke sickening screams before they each fell apart in several pieces. Dante and Lily moved as a team through the ranks, cutting them down in moments before the fighting ceased and the sounds of battle went still. All the enemies had been slaughtered, and the forest was eerily quiet save for the thrumming of power radiating from both Dante and Lily. \n\nA short time later the remainder of the Hellhounds and their Betas that had arrived from the Compound came upon the scene of destruction. They found Dante still trembling in his bloodlust, shedding lightning from himself that was setting fire to the trees around him. Lily approached her transformed mate without fear and molded herself to him, soothing the raging beast inside him, running her hands lovingly through his thick black fur. Dante knelt down as Lily held him close and kissed him deeply before he began transforming back and their Goddess-given powers receded from them both. Dante's body, shirtless and only covered by his ruined pants, was steaming in the cool evening air as he stood up and pulled Lily close to him and turned to address his Pack. \n\nThe entire Pack was wide-eyed and couldn't help baring their throats in submission. None of them had ever witnessed such a display or brutality before, let alone this impossible transformation, and they were speechless. Dante waved a hand at them in kind of an exhausted salute before he spoke tiredly. \n\n\"At ease, Order of Fenrir. It's over and we won. Praise Luna we had no fatalities, and the minor injuries some of our wolves suffered should be healed by the morning. We must talk about what you have seen tonight very soon, but for now I need to say that nobody is to speak a word of this outside of our own Pack. Collect all the bodies and body parts plus plenty of kindling and meet back as quickly as possible in front of the Cabin; we have cleanup to do. Search the bodies for any identification or markings; we already basically know who's behind this attack, but any additional information might be helpful. Let's go.\" \n\nAstrid, Hilde and Freydis, the latter two having responded with the Pack, formed ranks around Dante and Lily and escorted them back into the Cabin. Dante and Lily had spoken with Bryn through the bond and informed her it was over. She happily reported that Fenrir and Alunra were alert and fussing since they'd felt their parents' agitation through the bond (as had Bryn), but they were safe and calming down. Dante told them they could come out of the Saferoom, but he wanted them to remain inside the house and on lockdown for now. He and Lily and the Pack had to deal with the cleanup and he didn't want Fenrir or Alunra to see any of it, or to see him and Lily in their bloodstained and frightening state. \n\nA little while later the Pack had reassembled in front of the Cabin and shovels were handed out. A fair distance from the Cabin a large pit was quickly dug and a huge pile of kindling and logs was placed inside it along with what remained of their enemies, ready for disposal. The fire was lit (with a match, nothing fancy), and they spent the next hour watching everything organic return to dust before the hole was filled in and the mass grave was camouflaged with nobody the wiser. It was fortunate the region around the Cabin was so remote that there wasn't any human involvement at all. The entirety of the currently American branch of their Pack would remain on high alert tonight patrolling the woods, while Dante and Lily returned to their cabin and slept in preparation for chairing a Council meeting, for which they'd be escorted to the Compound the next day. The entire Pack was dangerously furious that anyone would try to harm their Royal Family, and this exercise would give them something to do with that anger. During the meeting tomorrow, retribution would be planned to be swift and devasting. \n\nWhen the initial alert had been spread among the Order of Fenrir Pack about the imminent attack on at the Cabin, they had immediately responded and Freydis had warned Odin and Victoria. She'd gratefully refused their armed assistance but encouraged them to lock their own Pack down and put their reaction teams on high alert. This attack had been focused on the Royal Family at the Cabin, but they couldn't be too careful. The O'Connor Alphas of course heeded this advice. \n\nDante and Lily entered the Cabin and quickly made their way to their suite and bathroom; they didn't want their children to see them covered in blood and other unpleasant things. Bryn and one of the other Hellhounds were feeding Fenrir and Alunra from bottles that Lily had pumped full and their cubs were content for now. Lily was concerned about Dante, as he was still furious, and she knew she had to calm him down to find his peace again so they could sleep tonight, and so their children wouldn't become upset. They both stripped before throwing away their clothing as Dante turned on the shower to a nice hot setting and activated all the water features in the shower. Lily kissed him deeply, moaning into his mouth as she pulled him into the shower and began washing away the blood and whatever else they were covered in. She soothed him and cleansed him as Dante did the same for her, giving him a focus as he pampered his mate. \n\nWhen they were all cleaned up, at least their bodies, Lily pressed herself tightly to his front and spoke to him. \n\n\"Dante my love, it's ok now. Our family is safe, and so are we. I need you to finish returning to us my love; I need my mate and our children need their father. Allow me to be your sheath, allow me to be the one who soothes you. Take me Dante, turn your anger to passion and claim me as I submit to you. Force me to submit and dominate me baby, we need that and I want it.\" \n\nA fire was lit in Dante's blood at Lily's urging, and he pressed her back against the warm tile of the shower as his mouth descended on hers and began consuming her. Lily was overwhelmed by his dominance just like she wanted to be, and she moaned lustily into her mate's mouth as her hips began to pump against his and her hands ran over his body, grabbing his ass and stroking his thick member. Dante grabbed her legs and picked her up, raising her above his head to feast on her sex. Lily's head was thrown back against the shower wall as her legs quivered in Dante's grip as he brought her to orgasm, screaming at the top of her lungs under his assault. Her orgasmic fluids mixed with the water as she sprayed them onto her mate, who refused to relent on his assault. Lily's hands were pounding against the tile as orgasm after orgasm was ripped from her body in powerful waves. Dante set her down and turned her around before sliding his thick shaft deep into her hot, welcoming depths, as he began to pump himself into her over and over. Lily could barely think, and she was uttering the sluttiest sounds imaginable as her mate dominated her, claimed her, and took his pleasure from her. Lily could only surrender to his desires and hang on for the ride. ",
        "\"Yessssss Dante, Yes my love, that's it! Take me and fuck me to oblivion. Show me your power and dominance and breed me, baby! Ahhhhhhhhhh!\" \n\nDante continued to pump himself inside Lily as he bit into her mating bite, sending electric bolts of combined pain and pleasure through her before its magic enabled the fresh bite to heal instantly. She was on the edge of a mind-blowing climax, and she desperately wanted Dante to join her. \n\n\"Cum inside me baby, I'm almost there! Throw me over the edge and cum in me my love, ohhhhhh GODDESS!!\" \n\nWith one final deep thrust, he lifted Lily off the tiled floor still speared upon his cock, as her entire body vibrated before exploding, and she wailed at the top of her lungs in fulfillment as she jetted her juices onto Dante before he roared and filled her to the brim with his essence. \n\nDante gently set Lily back down on her feet as he held her to his chest and they panted together, coming down from their pleasure. Dante spoke softly into her ear. \n\n\"Goddess, I love you Lily. You always know how to sheathe me and flush away the violence and anger. You give me your love and your body and everything else I need without question. I love you so much, baby.\" \n\nLily giggled happily at her mate. \n\n\"Trust me, it's no imposition, my love, I crave what you do to me, and it's absolutely my pleasure to soothe and calm you anytime you need it. The things you do to me are nearly criminal, mate of mine. I love you too, so very much, and I'll always be here to love and comfort you. Let's get rinsed and dried off and then go get our children and settle in for the night.\" \n\nDante and Lily finished rinsing off before they got out and Dante tenderly toweled off his mate. They got dressed for sleeping and came out of the bath suite and over to Fenrir and Alunra, who were snuggled contentedly in Astrid's and Bryn's arms. Dante picked up Alunra as Lily picked up Fenrir, each of them smiling at their parents and reaching out and touching their faces and making adorable little noises at them. Dante and Lily snuggled them close, tenderly holding them, grateful they were ok. They spent a bit of time talking with Astrid and Bryn and the other two Hellhounds in the house before locking down the cabin for the night and going to bed as the Royal Family fell asleep. \n\n*** \n\nDante and Lily were in their truck with Fenrir and Alunra in their car seats in the rear of the cab, as they were escorted to the compound by the handful of vehicles that had been at the cabin, and the rest of their Pack as wolves running along beside them in the forest as a defensive perimeter. They were taking it slowly so their shifted wolves could easily keep up as they made the trek back to the O'Connor Compound. They made their way up the lane and through the gate as the Pack entered with the Compound, which was still on high alert. Their lupine contingent shifted and everyone made their way to their rooms to sleep for a few hours, having been up all night. Dante and Lily, escorted by Astrid, Bryn and the other three members of their innermost Hellhound contingent, entered the Manor House where they were greeted by their Parents, who hugged them tightly, relieved they were ok. Odin spoke for his mate and himself. \n\n\"We're so glad you're all okay; that attack came out of nowhere, and we were very worried about you two and the kids. I'm glad you were able to neutralize them and seize the victory. Let's go into the office, the conference will start soon, and we need to get ready.\" \n\nDante and Lily and their Hellhound guard made their way up the grand staircase and into Odin's office. Additional chairs, monitors and cameras had been set up at Odin's large desk so the four of them could sit, see all the monitors, and be on camera. Astrid and Bryn took charge of the sleeping forms of Alunra and Fenrir and sat on the couches in front of the flaming fireplace to watch over them during the Council meeting. \n\nFaces began appearing on their large collection of monitors, and within a few minutes everyone had joined. Lily opened the meeting. \n\n\"Welcome friends and allies. There's a lot to cover and some urgency here, so we're going to jump right in. First of all, we're back Stateside being hosted by the O'Connor Pack, and it's time for the next stage of our operations to begin. Yesterday evening a force of hostile Lycans were sent to murder my mate and me and our children, who were recently born. 75 wolves approached our Cabin hoping to catch us unaware, although due to our careful preparations, we were alerted of the assault while they were still a mile away and we were able to respond. In a fierce battle, Dante and I and members of our Pack were able to slaughter the enemy to a wolf with only minor injuries and no casualties on our side. After locating some identification on some of the bodies, we were unsurprised to learn that the wolves were primarily part of Viktor's forces, augmented by some warriors from other Packs allied with him.\" \n\nDante picked up where Lily left off. \n\n\"Viktor is becoming bolder, and we think it's because he's becoming desperate. In the past few months we've been slowly but surely whittling down his capabilities, influence and revenue. He must see us as a sleeping giant quickly gaining power and be desperate to stop it before it gets beyond his ability to contain. \n\n\"With that. it's time for us to ramp up and begin to finish this. We have three primary missions to accomplish before we take on a fourth, as things come to a head. We need to take out the last three distribution centers for his drug arm first, and then we can take the fight to him directly in New York, going after his Pack and shutting down his Lycan and human trafficking operations in the heart of his territory.\" \n\nLily and Dante's opening statements began a lot of discussion about how to accomplish those initial three goals. Since the Guardians Council had grown to over 50 Packs since the last meeting, it was decided that several Packs from each region would join forces to assault all three facilities and take them all out simultaneously . With the Miami location being closest to Viktor's territory and the largest of the three, Dante and Lily decided they and their Pack members would travel to Miami to be hosted by the Little Havana Pack headed by Alpha Mar\u00eda Garces and her mate Se\u00f1or Alpha Emanu\u00e9l Garces as a joint operation; this Pack was a very new addition to the Council but was spoken of very highly by several long-standing members. (Long-standing meaning several months; the Coalition hadn't been in existence for even half a year.) \n\nEach operation was set to launch in five days, and by tomorrow afternoon Dante and Lily and their Pack would be in Miami, staying with the Little Havana Pack. Alpha Mar\u00eda would immediately begin her information gathering and scouting, so they could immediately build an assault plan tomorrow night and prepare to finish off one of Viktor's three remaining drug arms. It was a tight timetable but it was doable, and necessary to move onto the next phase, giving Viktor minimal time to prepare. \n\nAfter another hour of planning, it was decided that in another two weeks there would be a follow-up meeting when the Royals were back with the O'Connor Pack to plan the final assault on Viktor and his Pack directly, and wipe out their slave trafficking operation. It could even be the final nail in Viktor's coffin, since multiple other assaults would be made on his allied Packs at the same time. A few billion dollars in funds from the trust and from the Order of Fenrir's coffers were to be distributed for the Packs to arm themselves for the War, which was now ramping up to full steam. \n\nThe conference finally ended as the four Alphas shut down their monitors and stood up. There would be a joint-Pack meeting with the O'Connor Pack and the Order of Fenrir Pack after lunch, when everyone would be brought up to speed. \n\n*** \n\nAfter lunch, both Packs had gathered in front of the Manor House for the announcements. Dante and Lily with Fenrir and Alunra in their arms, and Odin and Victoria standing next to them flanked by the Hellhounds, addressed the two Packs. Dante stepped forward to lead off the announcements. \n\n\"Order of Fenrir and O'Connor Packs, the time to take the fight to Viktor's door is nearly upon us. After last night's attack it's clear he's getting desperate, and the blows we've been leveling at his operations are effective. We have one final operation before we march on his Pack in New York. The Order of Fenrir Pack, led by Alpha Queen Lily and I are heading to Miami tomorrow to strike a decisive blow against Viktor's drug operation there. We'll be coordinating with the Little Havana Pack, led by Alpha Mar\u00eda and her mate. Rest up tonight and get ready, we leave first thing tomorrow morning. \n\n\"Another thing: some of my Pack witnessed a drastic change in the form I took during our battle last night; it's a hellish new transformation that has only before been witnessed by Lily's and my inner circle of five, a few members of the Aztec Pack, plus 125 enemy forces, all now deceased. I urge all of you not to discuss this with anyone, not even with each other in case you might be overheard. A useful tactic in war is to get the enemy to underestimate your capabilities, and when we take the fight to Viktor himself in a few weeks, we don't want to give him any warning of what he'll be up against.\" \n\nBoth Packs cheered and howled at the news and at the notion of blind-siding Viktor. They were ready and eager to fight for their Alpha King and Alpha Queen. \n\nDane stepped back and Odin and Victoria stepped forward to address their Pack. Victoria spoke to them all. \n\n\"My O'Connor Pack, as Alpha King Dante and Alpha Queen Lily and their Pack assault Viktor's Miami stronghold, we shall begin training and preparing for the assault on New York in just two weeks' time. This will be a massive undertaking, and we cannot let our Royalty or our Allies down. This War is by Luna's own commandment, and we shall make Her proud! To arms!!\" \n\nA mighty cheer filled with howls and yips broke out from the O'Connor Pack and filled the Compound, excited to fulfill Luna's will and be led into battle. It was nearly time, and everyone was excited to be part of it. \n\nThe gathering of the Packs broke up, and Lily and Dante with Alunra and Fenrir retired to their suite and just focused on their children, since they knew beginning tomorrow they'd be very busy. They hated that they'd be tugged away from little Fenrir and Alunra, so they wanted to pack in as much time as they could with them. They snuggled on the couch in their living room as a family while the electric fireplace gave out a comfortable glow, and they watched Bugs Bunny and some Looney Tunes on TV as Fenrir and Alunra giggled and snuggled with their parents. This was precious time to them, and they intended to soak it up. \n\n***"
    ],
    "authorname": "DaddyIrishman",
    "tags": [
        "battle",
        "dante",
        "fighting",
        "lily",
        "lycan",
        "soldier",
        "war",
        "werewolf",
        "wolf"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/the-silver-guardian-bk-02-ch-07"
}