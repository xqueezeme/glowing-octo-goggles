{
    "title": "A Dragon's Tale Ch. 26",
    "pages": [
        "***I self-edit and admit editing isn't my greatest skill. I apologize in advance for anything I missed. ***\n\nCHAPTER 26: A Royal Pain in the Neck\n\n* * *\n\nSelene considered her options and frowned.\n\nShe was standing at a four-way intersection of dirt roads in the forest. She looked at the ground, trying to determine which direction the men who'd kidnapped her had come from, but it was hopeless. There were horse tracks going in every direction and it was impossible to tell which ones belonged to her now-deceased kidnappers.\n\nShe looked at the sky and grimaced. It was late afternoon and the sun had dipped low enough that it was just visible through the tree canopy. It was still quite light out, but wouldn't be for long and she had no idea what kind of predators were in these woods.\n\nFrom a tree branch that overhung the intersection, someone had hung a wooden sign with a slightly crude picture of a food-covered plate with heat waves coming from it, and a bed next to it. An arrow at the bottom of the sign pointed in one direction, and she thought she could make out some smoke in the far distance. A hot meal and a bed sounded really good, but she didn't have a lot of money to pay for them\n\nShe checked the coin purse and found two silver coins and a half dozen copper ones. She didn't want to spend the little money that she had, but it would be better than starving or sleeping out in the elements. That went double because there could be woodland predators nearby. The last thing she wanted to meet was this world's versio of a bobcat or bear.\n\nShe also couldn't see much difference between the roads, so she figured why shouldn't she try the one with an inn?\n\n* * *\n\nEthan followed Delabor up the impressive wooden steps toward the wood elven palace, absolutely amazed at the level of craftsmanship. Like the room that his wives were probably still marveling at, the stairs had subtle carvings all over them. He assumed they were made from enchanted boards because otherwise the intricate carvings would've worn off ages ago.\n\nIf the steps were impressive, the carvings once inside the palace were even more so.\n\nIt seemed like every inch of the walls inside were covered with the most ornate carvings that he could've imagined. Some were so lifelike and intricate that he would've thought they were real if they weren't the color of wood. Some were even made from different types of wood with different colors, giving them even more depth and texture. It was impressive that a craftsman could fit them together so well and he found himself staring at them as he walked.\n\nHe wasn't the only one staring either.\n\nHe was used to blending in because the disguise gem concealed his draconic body. However, he had it turned off now and there was definitely a difference. Curiously, none seemed to be afraid of him. It seemed more like awe than anything else. There was a small army of guards in the palace, lining every wall. They looked at him with the same awe and curiosity he saw from everyone else, though being guards there was wariness in their gaze too.\n\n\"Is everyone staring because I'm a dragon, or some other reason?\" He asked the Herald.\n\n\"Word of your fame has spread throughout the land.\" Delabor replied. \"They most assuredly feel honored to be in the presence of a prophet of Illuminar -- blessed be He.\"\n\n\"I'm not a prophet of Illuminar.\" Ethan said with a resigned sigh. He somehow got the feeling that no matter how many times he said it, it wouldn't sink in.\n\n*Problems?* Alana though to him.\n\n*Yes master, you seem... annoyed?\"\n\n*They won't stop calling me a prophet.* He replied shaking his head. He could feel their amusement over his bonds with them as he continued. *I feel like I'm going to stick my foot in my mouth in less than ten seconds; I wish I could've brought you all.*\n\n*Yes, that is odd.* Beth thought back. *Its customary to receive a man with his wife, and I think it's tradition among the wood elves too.*\n\n*Wait, they broke with tradition?* He frowned. *Isn't that a sin for them or something?*\n\n*I'll ask Rachel about it, she might have some insight.* Alana replied.\n\nEthan was struck by a vague sense of annoyance that Rachel wasn't part of their mental group chat. He didn't have time to consider that though because Delabor had just stopped in front of two massive doors. The carvings on it were so lifelike that he would've sworn he was looking at two people with wood-colored skin.\n\n\"The entrance to the throne room.\" Delabor announced proudly. \"Now, I must make sure you know the proper protocols to honor the king of the wood elves. Have you been so instructed?\"\n\n\"Uh, no.\"\n\n\"First and most importantly, you must never do anything that could possibly be construed as disrespectful. You must also bow reverently, as befits one of his high status.\"\n\n\"Okay, bowing I can do.\"\n\n\"Second, you must never contradict the king, nor even disagree with him.\"\n\nEthan raised his eyebrow. \"What?\"\n\n\"He is the king.\" The herald said as if that explained everything. \"To disagree with him in his own palace would be a terrible slight.\"\n\n\"What if I think he's wrong about something?\"\n\nDelabor looked at him like a nobleman might look at a rube from the sticks. \"He is the king, anointed by Illuminar Himself -- blessed be He -- how could he be wrong?\"\n\nEthan blinked.\n\n\"Third, you must never turn your back on him; to do so would be an insult, and no one may insult the king.\"\n\n\"Okay.\" He nodded, trying to figure out how to prevent this from being a total disaster.\n\n*This is not going to go well.* He thought to his wives.\n\n*Rachel and I were talking.* Alana replied. *We both agree that it would probably be safer if you didn't make any statements, but phrased everything as a question instead.*\n\n*I'll try.* He shook his head, a sinking feeling in his stomach.\n\nDelabor bowed to the two guards in ornate uniforms who were standing by the two handles to the double doors. The guards each grabbed a door handle and pulled, opening the door to the throne room so he could meet this mysterious king.\n\n* * *\n\nSelene had probably walked a couple miles down the road when it opened onto what looked like a trade station or outpost, which was set at another four-way intersection of two roads. The outpost had a blacksmith's shop, an inn, a tavern, a store of some kind, and about a dozen other buildings; all of wattle and daub construction, and some of which looked abandoned.\n\nThe place had a slightly run-down look to it; like a city past its prime. It didn't look seedy or dirty, but it did look like it had seen better days. There was another road going through the outpost which was perpendicular to the one that she was on. It was wider, and seemed like it had seen a lot of traffic at one time. However, there were a few small weeds sprouting on the path, so she guessed traffic had dwindled in recent years.\n\nBy now, the sun was getting a bit low so she headed towards the inn, which had a sign identical to the one back at the crossroads.\n\nOpening the door, she walked inside.\n\nThe inn looked much like the rest of the outpost. It wasn't dirty, unkempt, or seedy, but it certainly had seen better days. The fire in the hearth was a bit small for the room, the rugs were a bit threadbare, and everything looked like it was being kept in service slightly past its prime. There were some men in the inn sitting at various tables, mostly eating and talking amongst themselves.\n\n\"Welcome stranger.\" A pleasant female voice said from her right.\n\nSelene turned to see a girl in her teens pause sweeping the floor to welcome her. Her clothes and shoes matched the rest of the inn and town at large: nice, but well-worn and past their prime. Her hair was brown and long, but it wasn't the usual healthy, vibrant hair you might expect on a girl her age.\n\n\"Hi.\" Selene replied. \"What's a bed and a meal cost?\"\n\n\"One silver.\" She replied cheerfully. \"And that includes breakfast for your husband as well.\"\n\n\"I don't have a husband.\"\n\n\"You travel these roads all by yourself?\" The girl's eyes got huge and she glanced at Selene's sword. \"You must be invincible with a blade.\" She seemed excited at the prospect.\n\nSelene shrugged. \"How much for just me?\"\n\n\"Ten coppers.\" The girl replied, clearly impressed.\n\nThe ex-FBI agent considered for a minute.\n\nShe had two silver coins and six copper ones. Simple math said that ten coppers was half a silver, so she had enough for four nights. She definitely didn't want to spend all her money on food and a place to sleep, but she was very hungry, tired, and it would be dark soon. She sighed, fished a silver coin out of her bag, and extended it towards the girl.\n\nThe girl took a step back and waved her hands. \"No, father doesn't let me handle the money.\" Something in her eyes looked slightly hurt as she said that.\n\n\"Where can I find your father then?\"\n\nThe girl pointed to a slightly overweight man sitting in a rocking chair by the fire. \"That's him.\"\n\n\"Thank you.\" Selene said to the girl, and then walked over to the man. \"I'd like a bed and meal.\"\n\nThe man looked at her like he was undressing her with his eyes, and only took his eyes off her body when he saw the silver coin in her hand. She resisted the urge to roll her eyes.\n\n\"That'll be one silver for you and your husband.\" He replied.\n\n\"Just me.\" Selene corrected him.\n\n\"Then it'll be ten coppers... unless you want to pay another way.\" His eyes raked over her body again.\n\n\"Ten coppers it is.\" She said firmly.\n\nHe looked disappointed, but shrugged, produced a small coin pouch and fished out ten coppers, which he traded for her silver coin.\n\n\"Sarah, get this wench a meal.\" The man called to his daughter over his shoulder.\n\nSelene suppressed a grimace; this was certainly the first time she'd been called a 'wench' before and certainly didn't enjoy it.\n\n\"Yes father.\" The girl who'd greeted her replied instantly, and then scampered off towards what Selene assumed was the kitchen.\n\nHer father looked bored and world-weary as he looked back at Selene. \"Make yourself at home; she'll be out in a bit.\"\n\nSelene walked to the only unoccupied table in the room. Thankfully, she could put her back to the wall while sitting in it, which she preferred ever since her training at the academy. Barely a minute later, the girl came out carrying a crude bowl made of pottery and a flagon of something, both of which she set down in front of the Brazilian woman.\n\n\"I do hope you enjoy it.\" Sarah said. \"I tried a slightly different mix of herbs from my garden this time.\"\n\nThe stew wasn't bad. Not incredible, though that wasn't because of the seasoning. The meat was overcooked to a leathery texture and the vegetables were mush, but Selene suspected that was because of the girl's father and not the girl herself. The seasoning was excellent, even if the solid bits left something to be desired.\n\n\"It's good.\" Selene said honestly.\n\n\"So what's the news?\" Sarah asked after making sure her father wasn't paying attention. Selene remembered from Smithbond's briefing that visitors to inns and taverns were often asked to share the news from where they were from. It was how news often spread among the common folk before modern communications.\n\n\"Same old, same old.\" Selene sighed. \"Governments are corrupt, common folk work hard, and life is full of surprises.\"\n\nThe girl nodded, but looked excited about something that she was nervous to ask about.\n\n\"What's on your mind?\" Selene asked.\n\n\"Is there any news of the dragon?\" She whispered excitedly.\n\n\"What dragon?\"\n\nSarah looked at her in disbelief. \"The dragon; the prophet of Illuminar -- blessed be He -- the one who raised the dead and summoned lightning.\"\n\nSelene had heard most of what Hailey had explained about this world, but none of this sounded familiar. The willowy woman had steadfastly refused to say anything about Ethan to their captors, so she knew nothing of his exploits here. She did know that Ethan had somehow used electricity to shock her, but the girl couldn't be talking about Ethan, could she? I mean, he hadn't exactly used lightning, though it had definitely been something electrical.\n\nIn the end, Selene decided to dodge the question. \"I've been out in the wilderness for a while and missed the news.\"\n\nSarah looked excited all of a sudden. \"Everyone's talking about it! This dragon fought against a hundred men in the arena and beat them all. He struck down the final enemy with a lightning bolt from heaven, and then raised her from the dead!\"\n\n\"Wow, that's... that sounds impressive.\" Selene admitted.\n\n\"But that's not all. He helped some gold miners by defeating a dragon twice his size, then he killed a necromancer and his army. No one's sure how big the necromancer's army was, but I'll bet it was huge!\" She then lowered her voice. \"I've even heard rumors lately that he killed a Drago to defend those same miners.\"\n\nThat caught Selene's attention.\n\nHailey had explained about both dragons and Dragos and how powerful the latter were. The way she described them, it sounded like they were basically this word's version of Superman; ultra-fast, super-strong, and damn near invincible.\n\n\"He seems... impressive.\" She finally said.\n\n\"He is!\" The girl gushed. \"The whole countryside is talking about him. He's done such wonderful things and there hasn't been a prophet of Illuminar since... well, since long before I was born. And for Him to choose a dragon? That's just... just wow.\"\n\n\"Does this dragon have a name?\"\n\n\"Ethan.\" Sarah nodded in awe. \"His name is Ethan Ejder.\"\n\nSelene felt her jaw drop.\n\nIt was Ethan?\n\nThe man -- err, dragon -- who'd beaten her like she was a child? He was a prophet? A slayer of Dragos and powerful enough to slay one hundred men? She suspected that some parts of the tale might've grown in the retelling, but even so it was still impressive.\n\nAs she remembered her last encounter with him, her body began to remember too. Something about the way he had looked at her had lit a fire in her loins that she hadn't been able to forget. Being as beautiful as she was, she'd never had someone look at her with such... such... disdain; like she was beneath him and he was trying to decide if she was worth his time. She hated it, and hated how it made her feel, but for some reason it also made her horny whenever she thought of it.\n\nSarah eyed her curiously. \"You've met him, haven't you?\"\n\n\"Once.\" Selene nodded before she thought to stop herself.\n\nThe girl looked like Christmas had come early as her eyes grew wide. \"What's he like?\"\n\n\"He's... he's hard to describe.\"\n\n\"Please try?\"\n\nShe considered for a moment, trying to decide what to say. He had been supremely confident in the clearing by the portal, but caring too. The stories that Sarah told made him sound like a hero. Then she remembered that the portals were powered by death magic and frowned.\n\nShe really wasn't sure what to make of him.\n\n* * *\n\nEthan wasn't really sure what to make of the throne room. It was very large; probably fifty feet wide and half that again long. There was an isle down the center which was lined with what he initially though were columns, but then realize were actually trees or vertical tree branches; he wasn't sure which. They came up from beneath the wooden floor, which was as intricately carved as anything he'd seen, maybe more so.\n\nThe walls were similarly adorned with carvings, plus many magnificent stained glass windows that depicted both great battles and Illuminar in equal measure. The ceiling curved inward and was clearly made from living trees that had been made to grow together.\n\nThere were a lot of wood elves in the room, all with very fine clothing and superior looks on their faces. Standing out from the rest was an elf in robes of the purest white and adorned with a golden sun made from gold thread and gold adornments. He was standing near the throne and looked like a priest of some kind, but had a calculating look that Ethan found odd given his obviously religious affiliation.\n\nAt the far end of the room was the king, sitting on a wooden throne of such incredible artwork, he thought Alana might cry at its beauty if she ever saw it.\n\n\"Oh great king, live forever.\" Delabor said with a deep bow when they had approached the throne. \"I bring you Ethan Ejder, called Illuminar's Prophet.\"\n\nEthan suppressed a grimace at being called a prophet again, but resisted the urge to correct the elf and then imitated the Herald's bow as best he could.\n\n\"Approach, Ethan Illuminar's prophet.\" The king said as he stood.\n\nThe king was very tall for a wood elf, which meant he was about as tall as Rachel, who was an inch shorter than he himself was. He looked very regal, wearing robes of deep brown that resembled a tree trunk. On his upper torso they became green and resembled the canopy of a tree. He had a short, well-groomed beard and a short hair; both of which were a light brown color. His face reminded Ethan of Pierce Brosnan in his early days of playing James Bond, though with a short beard.\n\n\"Welcome honored dragon.\" The king said in a deep, confident voice. \"You do us great honor by gracing our palace with the presence of a prophet of Illuminar -- blessed be He.\"\n\nEthan opened his mouth to reply, but then remember he wasn't supposed to disagree with the king.\n\n*How the hell do I tell the king I'm not a prophet of Illuminar without telling he was wrong by calling me one?* He asked his wives.\n\n*Try asking why he thinks you're a prophet?* Alana suggested.\n\n\"Um, your majesty, why do you think I'm a prophet?\"\n\nThe king looked almost confused. \"Can anyone but a prophet of Illuminar -- blessed be He -- raise the dead or call forth lightning? Is lightning not the pure weapon of the God of Light, which was forged so no evil one could ever wield it?\"\n\nEthan frowned.\n\nHe knew exactly what he wanted to say, but their culture seemed to think it was wrong to tell the king he was wrong. How the hell did you get around that?\n\n\"Look, I know you think I'm a prophet, but is it possible you've been misinformed?\" He finally said, trying to phrase it as a question.\n\nAlmost instantly, the entire hall erupted in gasps. The men began to whisper to each other in an almost agitated manner.\n\nShit.\n\n\"You dare to correct the king?\" The priestly elf said, sounding incensed.\n\n\"I didn't correct him, I just asked if it was possible that he'd been misinformed.\"\n\nMore gasps and more whispering.\n\n\"Peace.\" The king said, and instantly the whispering died down. Once it had, the king turned to Ethan. \"Dragon, you say that you are not a prophet of Illuminar -- blessed be He.\"\n\n\"No, I'm not.\"\n\nYou could hear a pin drop.\n\nNot a single person in the hall made a sound.\n\n\"Hmm.\" The king mused. \"Much depends on our terms then. Define a prophet.\"\n\n\"I don't know? Someone who God talks to directly, who is then supposed to tell other people about the message?\" He shrugged.\n\nThe wood elf king sat back down on this throne and steepled his fingertips together. Ethan got the impression that he was a clever, shrewd man. Not 'shrewd' in a bad sense, but that he was sharp and perceptive.\n\nThe king spoke after several seconds. \"You claim that Illuminar -- blessed be He -- has never spoken directly to you, yet you have wielded His lightning. This is a wondrous puzzle indeed.\"\n\n\"Pardon me my king, but does he not blaspheme Illuminar -- blessed be He?\" The elf in priestly robes asked while giving Ethan a scorching look.\n\n\"Perhaps.\" The king mused dismissively, but didn't look convinced. While his eyes never left Ethan, his next sentence wasn't addressed to him. \"Plesius, in the Book of Light there is a hero to whom Illuminar -- blessed be He -- gave miraculous powers yet never spoke to him.\"\n\n\"You are wise my king.\" Plesius the priest replied. \"There is Eluzai, to whom Illuminar -- blessed be He -- granted miraculous strength, although The God of Light never communicated directly with him, as you yourself already know my king.\"",
        "\"Honored dragon, this might be the case the case with you.\" The king stated, all but ignoring the priest.\n\nPlesius did not look happy. He wasn't sure why, but guessed it was because the king -- whose name he still didn't know -- had directly contradicted him.\n\nYes, the high priest looked very unhappy indeed.\n\n\"But my king.\" Plesius said with a sinister smile while looking directly at Ethan. \"Would the all-righteous God of Light chose someone as His prophet who travels with -- and has wed -- such disgraceful women?\"\n\nEthan wasn't even aware of letting his claws out, nor crouching in a clearly predatory stance as he growled. \"What?\"\n\nPlesius took a step back so he was slightly behind the guards surrounding the throne before he spoke again. \"You wed a Fey and travel with a disowned lord's daughter, bringing dishonor on yourself. Why do you think only you were invited to the palace?\"\n\nEthan flexed his hands, trying to keep the urge to disembowel the man at bay. He looked towards the king. \"Is this true?\"\n\nThe king looked almost sad, but nodded somberly and added almost apologetically: \"I had no wish to offend you, so I extended the invitation only to you when I learned that some of your wives could not be allowed to cross the threshold of the palace.\"\n\n\"They would dishonor our ancestors by their mere presence.\" Plesius added with a smirk as he half-hid behind the guards.\n\nEthan could feel a dragon's rage bubbling up in his soul, and so applied a not insignificant amount of willpower to restrain himself from attacking them. No one spoke about his wives that way; no one. He growled low in his throat, baring his teeth and showing his displeasure.\n\nEveryone in the room -- even the guards -- took a collective step backwards at the fuming dragon.\n\nEthan fought an internal war with himself for a moment before realizing that the longer he stayed here, the more likely it was that he would be to do something he would probably live to regret... if he lived, given that the guards were armed and he wasn't. The king hadn't provoke his ire near as much, but that priest...\n\nHe looked at Plesius and snarled. \"Fuck you.\"\n\nThen he locked eyes with the king, pointedly planted his foot in front of him, and then after giving the king a look of disdain, pointedly turned his back on him and marched out of the throne room, no one daring to stop him.\n\n* * *\n\n\"So he let you live?\"\n\nSelene sighed, realizing that Sarah wasn't wrong. \"I suppose he did.\"\n\n\"Wow.\" The girl breathed.\n\nSelene had spent the last few minutes recounting an edited version of her previous dealings with Ethan. The girl seemed entranced by anything that happened outside of her little outpost, especially if it concerned the dragon.\n\n\"I wish something exciting would happen to me.\" The girl sighed wistfully.\n\n\"You have plenty of time.\" Selene said observing that the girl wasn't very old yet; probably late teens or maybe early twenties. \"How old are you?\"\n\nHer face saddened a bit as she replied. \"Of the age to be married.\"\n\n\"Is that a bad thing?\"\n\n\"Um, no... but--\"\n\n\"Sarah, stop lollygagging and refill out guests' ale.\" Her father called from his chair.\n\nThe girl instantly leapt up and ran to see to the men that her father had indicated.\n\nWhen Selene looked up at them, they all hastily busied themselves with their food or drink instead of looking at her. She didn't get a creepy vibe, but they were certainly checking her out. Not for the first time in her life, she wished she wasn't nearly as good looking as she was. She had intentionally dressed down for this mission, putting her hair in a simple ponytail and wearing no makeup whatsoever. However, it didn't seem to make a difference. Men still stared where ever she went, often undressing her with their eyes in a most unwelcome way.\n\nThe only time she had ever welcomed it was when Ethan had done it.\n\nBut even that was...\n\nShe shook her head, putting it out of her mind and resolving to finish her food. The flagon of ale wasn't bad, but wasn't exactly amazing either. Fortunately the alcohol content seemed quite low and she could hold her liquor even if had been higher. The whole time she was planning her next move.\n\nShe really only had two options: First, she could ask around to see if anyone knew about the portal through which she'd come. Second, she could try to find Ethan and hope he was willing to open a portal back to earth for her.\n\nNeither seemed like a good option.\n\nThe portal through which she'd come was far back from the road; over one hundred yards and it looked like no one had been there for a long time. Given the thick forest and abundance of pine trees, the odds of a traveler seeing it were tiny. She had no idea which direction it was in, or even how far away it was. She could probably spend months trying to find it on the ground and still be no closer to home.\n\nIt seemed even less likely that she could find Ethan, or that he would help her even if she could. He could probably open a portal -- he'd done it before -- but where was he? Would he even want to help her? Given their adversarial interactions on Earth, she doubted it very much.\n\nThat left her in a real conundrum: what was she going to do?\n\n* * *\n\n\"My lord the king?\"\n\n\"Enter Delabor.\" The king said. He was sitting in a small room just off the throne room where he had retired after the dragon had left. It was such a short meeting, and the dragon had behaved in a scandalously uncouth manner, bringing dishonor on his ancestors and arguably to the hallowed halls of the palace itself.\n\nAnd yet...\n\nAnd yet he felt a smile creep onto his face.\n\nThere was something about that dragon that he liked. It was hard to place, and he wasn't sure exactly what it was. Something about his manner perhaps. Something about the way he spoke, utterly honestly and without guile. It had been a long time since he'd heard words uttered in the throne room and not wondered about their truthfulness.\n\n\"Speak Delabor.\" The king said, which of course was code for the herald to present his news. The king was growing tired of constantly phrasing his questions as statements, and everyone else phrasing their statements to him as questions.\n\n\"What would you have done about the dragon?\"\n\nThe king closed his eyes and thought for a moment. He wanted the dragon to stay. He wanted a chance to meet with him without the court around; without anyone else around, especially Plesius. However, he wanted the dragon to want to stay. That was the problem. He wasn't sure he had anything that the dragon wanted. However, he might have something that one of his wives wanted...\n\nHe considered.\n\nThe dragon certainly did seem to care about his wives, despite their dishonor. The King found that intriguing too, and wondered if perhaps making one of the dragon's wives happy would be enough to get the dragon himself to stay; or at least feel indebted enough to take a meeting with him. Perhaps the best way to go about this was sideways?\n\nHe cocked his head to one side and addressed Delabor. \"Bring the oldest son of Lord Nalfigar to me as soon as possible; he was present in the throne room when I left and should still be nearby. Also, prep our fastest intra-city airship.\"\n\n\"Of course my king.\" His faithful herald bowed, and then backed out of the room and rushed to fulfill the command.\n\nThe king hoped his plan would be enough to convince the dragon to stay.\n\n* * *\n\nAlana had felt the surge in Ethan's temper, but had also felt that he was in control of it and so decided not to say anything to snap him out of it. The moment his anger had spiked, she, Beth, and Taloni had all looked at each other.\n\n\"Ethan's temper?\" Rachel asked.\n\nThey all nodded.\n\n\"I wonder what happened with master.\" Taloni said looking sad.\n\n\"I don't know, but I'm glad he isn't losing it.\" Beth said with a half-smile.\n\nAlana looked around the room. They had made their way into the living area, which was also richly carved. Its many chairs, tables, and decorations probably cost about as much as the average commoner made in a year. It was all made of wood, which made the wood elf feel incredibly at home.\n\nSeveral servants had offered them refreshments and food, which they'd gratefully accepted. She did notice that none had directly addressed Rachel or Taloni directly, nor met their yes. When Taloni thanked them, they had said \"we are honored to serve.\" which wasn't exactly a personal response. She was sure the redhead had noticed, but the Fey was clearly oblivious. For that she was glad; she didn't want to see her sad.\n\nA few minutes later, the front door to the foyer banged opened and Ethan stalked in fuming. They could all tell that he wasn't made at them, but he certainly was mad. It was quite intimidating.\n\n\"We're leaving.\" He announced without preamble.\n\nAll his wives jumped up immediately, though Rachel hesitated. \"What happened?\"\n\n\"I'll tell you when I won't be growling the whole conversation.\" He growled, then turned on his heel and stalked out, his girls following him.\n\nAlana followed closely behind him as they made their way back through the city towards the Argo. She'd learned that Ethan usually needed a little time to cool down after his dragon side had been triggered. Once she felt him start to calm down a bit, she put a hand on his back.\n\n*Are you okay?* She asked, directing her thoughts so Beth and Taloni could hear too, because she knew they'd want to know.\n\n*I will be.\" He said with a slightly growling exhale. *Do you know why I was the only one invited into the palace, and not you girls?*\n\n*Oh.* She let her hand fall as she realized the probable reason.\n\n*Yeah.* He nodded. *Apparently, most of my wives aren't welcome because they don't fit their inane sense of honor.*\n\n*Most?* Taloni asked.\n\n*I think they would be fine with Beth.* The wood elf said, giving the blonde a half-hearted smile. *But the rest of us...*\n\nBeth smiled back, but it was a mournful smile. *I'm sorry they won't accept you both too. You are the most delightful women I've ever met and they don't know what they're missing.*\n\n*Hear, hear.* Ethan agreed, and he seemed to be feeling less down.\n\n\"Um.\" Rachel interjected. \"Can I make a request?\"\n\n\"For you, anything.\" Ethan replied.\n\nShe blushed slightly.\n\nAlana managed not to grin ear-to-ear at Ethan's statement and her best friend's embarrassment. They had both fallen so hard for each other and she couldn't wait until the redhead came to her sense and joined Ethan's wives properly.\n\nThe mage made an apologetic smile. \"I gather you're talking telepathically, but could you let me know what was said when we get back to the Argo?\"\n\n\"You know, you could join our 'group chat' thing.\" Taloni said with an edge of mischief in her voice.\n\n\"It does come with some fantastic perks.\" Beth agreed, giving Ethan a sly smile in full view of Rachel.\n\n\"I'm good, thanks.\" The redhead replied, though her tone was slightly forced.\n\n\"So is Ethan...\" Alana added before she could stop herself.\n\nBeth and Taloni giggled.\n\nEven Ethan smiled. \"You might be able to even without the extra 'perks'.\" He said thoughtfully. \"There's still a half-bond there; maybe that would be enough that you could plug-in and take part.\"\n\nRachel appeared to get slightly choked up as she beamed. \"I'd like that.\"\n\nBy the time they had reached the Argo, most everyone was in a better mood. Ethan's exhales were no longer coming out as growls, though Alana's own mood hadn't improved much. She felt her shoulders start to slump as they approached the Argo, which would take them out of the city.\n\n*Hey, what's wrong?* Ethan asked her, sounding like his usual caring self.\n\n*I know it's silly, but I was hoping to see my parents while we were here.* She replied, not looking at him. *I mean, I knew it wasn't likely but...*\n\n*I'm sorry.* He reached down and took her hand in his, giving it a comforting squeeze.\n\n*It's just, I always guessed that they gave me up because of the honor system, but I'd always hoped...* She swallowed, feeling herself tear up a bit.\n\n*You hoped...?*\n\n*I just always hoped that they, well that they...*\n\n*...that they wanted you.* He finished.\n\nShe nodded.\n\n*I'm not sure why they gave you up, but I do know this: it's their loss. You are a wonderful woman Alana, and you've made my life so much better that I couldn't even begin to describe it. I can't replace your parents, but you need to know how much you mean to me; to all of us.*\n\nShe wiped a tear that had been collecting at the corner of her eye as she smiled mournfully. *Thank you.*\n\n*Anything for my favorite first wife.* He winked.\n\nShe managed to chuckle slightly.\n\nThey reached the Argo a few minutes later, and some of Ethan's dark mood seemed to have returned after their conversation. She guessed it was partially on her behalf though. He walked up the gangplank with rather more force than he usually did.\n\n\"Weigh anchor.\" He said to Anthiel. \"We're blowing this popsicle stand.\"\n\nAnthiel gave him an amused expression from the quarterdeck, like she knew something that he didn't. \"Ethan, you and Alana will want to inspect the hold before we leave.\"\n\n\"The hold? Why?\"\n\nThe high elf had an almost mischievous look. \"Trust me, you and Alana -- and probably only you and Alana -- will want to look in the hold before we leave.\"\n\nThey looked at each other, and he looked as confused as she felt.\n\n\"Okay...\" He gave her a quizzical expression, but she just smiled.\n\nHe shrugged and then led the way to the door to the lower decks, which was located under the stairs up to the quarterdeck on both sides of the ship. Alana followed him down, her wood elven eyes adjusting almost instantly to the dimmer light which came through small portholes.\n\nA couple yards beyond the bottom of the stairs, there was a wood elf who was pacing nervously. He was wearing a very expensive looking suit that probably cost more than what she used to make in a year. He had short, chocolate-brown hair and when he turned to look at them, she saw his rich hazel eyes.\n\n\"And you are...?\" Ethan asked, though he trailed off as he took the man in. He cocked his head to one side as he looked at the wood elf. \"Do I know you?\"\n\n\"No, but considering...\" The wood elf trailed off as he looked past the dragon and caught sight of Alana herself. \"...I would definitely like to know you both.\"\n\nHe was silent for a moment, and then he seemed to come to himself. \"I am sorry, where are my manners? I am Navaro Nalfigar; called house-heir.\" He said with a formal bow.\n\nAlana felt her breath catch as a whole swarm of butterflies started swirling in her stomach.\n\n\"Father?\"\n\n* * *\n\nSelene considered her situation and didn't like it much. She was the only female traveler at the inn, and the only female period except for the innkeeper's daughter. The other men had been stealing glances in her direction, and while they weren't exactly leering nor even being creepy about it, she didn't like attracting so much male attention. That went double because of what was apparently the usual sleeping arrangements in a medieval-style inn.\n\n\"They're quite comfortable too.\" Sarah said, gesturing to the beds in the communal sleeping area; every bed was all in the same room. Further, each bed looked large enough to accommodate two or three people.\n\n\"So, do strangers usually sleep in the same bed?\" The ex-FBI agent asked raising her eyebrow.\n\n\"Of course.\" The girl replied. \"Have you never stayed at an inn before?\"\n\n\"I have, but I never had to share a bed.\"\n\nSarah's eyes grew wide. \"Wow, you must be rich.\"\n\nShe grimaced, only now vaguely remembering a documentary that a dorm mate in college had watched on medieval inns. She hadn't been paying much attention, but now remembered at least one thing; the documentary had mentioned how strangers sharing a bed at an inn was normal back then.\n\nShe wished she'd remembered that before she'd paid for a bed.\n\n\"I guess I was rich.\" Selene said, realizing it was true by the standards of this world. She wouldn't have thought twice about dropping the money for a hotel room on Earth. Here... here it seemed like getting her own bed and her own room would be far more than any normal person could afford.\n\n\"I'm sorry for your misfortune.\" Sarah said as her face fell, genuine sadness on her face at Selene's hardship even though they'd just met.\n\nIt was quite endearing.\n\n\"I don't suppose I can keep my sword on while I sleep; that'll be a deterrent.\" She said wryly.\n\n\"You could.\" The girl smiled. \"Besides, we haven't had anything happen in a while, so you should be fine.\"\n\n\"For a while?\"\n\nSarah nodded.\n\nSelene was absolutely sure she wanted to get off this world as soon as possible, so she turned to the girl. \"Have you heard of a ruined temple in the woods around here somewhere?\"\n\n\"No, I'm sorry.\" She replied. \"The woods around here are quite thick though, so you would probably have better luck finding it from an airship.\"\n\n\"Thanks, I suppose it was a long shot.\" Selene shrugged. \"I guess I should turn in.\"\n\nShe didn't think she'd sleep very well though, not with a strange man in the bed next to her. She was virtually certain he would try to cop a feel, and was trying to decide how much she could reasonably hurt a man with her considerable martial arts skills if -- or rather when -- he tried. Still, she supposed it was better than sleeping in the woods where there might be predators.\n\n\"Sarah!\" The inn's owner called. \"The fire's need tending for overnight.\"\n\n\"Coming father.\" She disappeared in a flash.\n\nSelene looked back to see the man hadn't moved from his rocking chair since she'd arrived. It certainly seemed like the girl kept the whole place running while he sat on his ass. He had a large enough belly to provide compelling evidence that this was the case too. He also seemed incredibly world-weary; like he'd been dealt a hard hand in life and hadn't played it well. She might've felt sorry for him if he had been a bit nicer to his daughter.\n\nA minute later, Sarah came back in with a log that was much too big for her small frame. Selene was surprised she could lift it. The girl dropped it in front of the fire, sighed tiredly and then turned to go back through the door, presumably to get more wood.\n\n\"Here, I'll help.\" Selene offered, and the girl brightened considerably.\n\n\"Thank you.\" She beamed.\n\n\"Don't even think about it.\" Her father barked. \"You'll not be askin' paying customers to help with your work.\"\n\n\"She didn't ask, I offered.\" Selene corrected frostily.\n\nHe shrugged. \"Whatever, long as the fire gets fed.\"\n\nShe suppressed a grimace and then followed the girl outside to the wood pile. There were two neatly stacked woodpiles not far from the door. One was mostly large logs while the other varied in size up to several inches in diameter.\n\n\"Two more logs should keep the hearth fire going until dawn.\" The girl said.\n\nSelene and Sarah each grabbed one and brought them back in. They worked together to get the two large logs into the fireplace, and then lob the third on top of the previous two. The three logs now formed a small triangle with the coals at the bottom center.\n\n\"There.\" Sarah said panting slightly. \"That'll hold until morning.\"\n\n\"Good enough.\" Her father harrumphed and then he got up from is chair. \"I'm going to bed; make sure you lock up.\"\n\n\"Yes father.\" Sarah replied respectfully.\n\nOnce he had left the room, Sarah turned to her. \"Miss Selene, I know you're nervous about...\" She glanced at the men and then the communal sleeping area. \"...so if you don't tell father, and if you can get up before he does so he doesn't know, you can room with me tonight.\"\n\n\"Really?\"\n\nThe girl nodded. \"My room isn't as nice and my bed isn't as large, but you were so nice to help me that I'd like to return the favor if I can.\"",
        "\"That would be lovely.\" Selene said with a sigh of relief.\n\n\"Just let me bar the doors.\" Sarah nearly skipped off to the main door and then the side door, dropping a large plank of wood into the slots on either of each door side to bar them both shut.\n\n\"Come, I'll show you my room.\" Sarah said smiling, and Selene could tell that the girl was excited to show her room off.\n\nShe followed her through the door from which she'd brought the food earlier. The kitchen wasn't large, but it was decent sized and looked exactly like Selene had imagined a medieval kitchen would look like. Parts of it seemed to be in disarray, but other parts looked fairly tidy. She guessed that was the difference between father and daughter. Sarah led Selene to a small door on the other side of the kitchen.\n\n\"This is my room.\" The girl said proudly as she opened the door.\n\nIt was tiny.\n\nNice, but tiny.\n\nIt was about six feet square, with almost half the room taken up by the bed, which was a mattress laying on the floor. There was a small window above the bed that was about one foot square. It had been decorated with tiny threadbare drapes, probably made from old clothes. Some fresh flowers had been set on the windowsill in a vase, which was a nice touch. It was also quite clean and neat, in contrast to certain parts of the kitchen around it. Selene guessed that it was her father who was the slob, not the girl.\n\n\"What do you think?\" Sarah asked hopefully.\n\n\"It's really nice.\" Selene said honestly, smiling because this girl who had almost nothing was offering Selene a place in what looked like her private sanctuary.\n\nIt was really sweet of her.\n\n\"Thank you very much.\" Selene said.\n\n\"Oh don't thank me, I'm being entirely selfish.\" The girl said brightly with her eyes twinkling. \"I'm going to pester you with question until you fall asleep. How else would I get the news about the outside world... and the dragon?\"\n\nSelene chuckled. \"Deal.\"\n\n* * *\n\n\"Father?\" Ethan raised his eyebrow. The elf had the exact same hair and eyes as his first wife, and he knew her father was from House Nalfigar. But what was he doing here?\n\n\"I have that honor, yes.\" Navaro replied.\n\nHe was looking at Alana like she was the most precious thing in the entire world. Had any man but her father looked at his wife that way, he would've been growling at him with claws out and teeth bared by now. But with him being her father, that look endeared the elf to him somewhat.\n\n\"Honor?\" Alana said, lips trembling. She clutched his arm for support, and he could feel her emotions were a maelstrom.\n\n\"Yes my dear girl.\" He nodded. \"I'm so glad you came to Nalatia; I would never have been able to meet you otherwise.\" He smiled. \"Let me look at you.\" He raised his hand and twirled his finger, asking her to turn.\n\nShe glanced at Ethan who nodded, and then she did.\n\n\"I can lay claim to the hair and eyes, but in every other way you look so much like your mother.\"\n\n\"I do?\" Alana asked almost hopefully.\n\n\"Yes, and I consider your mother to be the most beautiful elf in the Ten Kingdoms.\"\n\n\"Oh?\" She started to tear up. \"You... you think I'm...\"\n\n\"One of the two most beautiful elves in the Ten Kingdoms, yes.\" He said, his voice wavering as he spoke. \"I'm so sorry that I couldn't meet you before, will you ever forgive me dear girl?\"\n\n\"I...\" She glanced at Ethan, who was feeling like the rug had been pulled out from underneath him at this strange turn of events. He wasn't the world's greatest judge of character, but everything that the other elf said had the air of absolute truth.\n\n\"Why didn't you?\" Ethan finally asked. \"Meet Alana before that is?\"\n\n\"Tradition.\" Navaro sighed. \"Her mother had been shamed, and if I was consorting with the child of a shamed woman then I could greatly damage my house.\"\n\n\"And that kept you from your daughter?\" Ethan asked, trying not to get too angry.\n\n\"Alana.\" Navaro looked at her like a doting father would upon his favorite daughter. \"Both Kalon and Nalfigar have enemies; powerful enemies. It takes power and influence to keep loved ones safe. Had I visited you, you would've been exposed and I would've lost the power and influence that kept you safe.\"\n\n\"So, you wanted to protect me?\" Alana asked like she thought it was too good to be true.\n\nHe smiled. \"My dear, your adoptive parents ran a business less than a mile from a dragon's lair. A dragon that 'coincidentally' moved into that cavern at the same time your parents moved to the forest. Yet in over two decades that dragon didn't take the gold they earned, despite him being able to sense it every day.\u00b4\n\nAlana's eyes widened. \"Drousin? You sent a dragon watch over me\"\n\n\"He was meant as a deterrent, not a bodyguard.\" The elf corrected. \"Though I might've spread a rumor that he was very territorial and wouldn't tolerate interlopers.\"\n\nShe looked at Ethan, who couldn't deny the man's logic, yet it strained belief. \"He was about to eat her when I arrived.\"\n\n\"He has a morbid sense of humor, but he would never hurt you.\" Navaro replied. \"Do you think a dragon would sacrifice a monthly gold shipment for a snack?\"\n\nEthan didn't even need to think about that. Of course he wouldn't; no dragon would.\n\n\"I noticed that his hoard slowly grew, but I always thought...\" Alana stared at her father slack-jawed.\n\n\"I know that I haven't been around, and I deeply regret that.\" Navaro continued. \"But I have been far from disinterested. I know how much that doll meant to you when you were three, how you cried when you lost it in the river at four, and how overjoyed you were when it reappeared days later.\"\n\n\"Upstream...\" Alana covered her mouth. \"You had a naiad...?\"\n\nHe nodded. \"You never ran out of paint when you tried painting, never lacked for tutors when you wanted to learn, and never wanted for teachers when you took up enchanting.\"\n\n\"That was you?\" Alana whispered. \"My parents always said that they called in favors but...\" She stared at him.\n\nHe took a step closer. \"I'm so sorry I haven't been able to meet you before now. If I could've met you without placing you in further danger, I would have.\" His eyes looked watery as he smiled at her, happiness and sadness all wrapped in the same expression. \"Will you forgive me Alana?\"\n\nShe nodded. \"I can, I do.\"\n\nEthan looked at his wife and could see the happiness shining on her face as she slowly nodded. Her emotions were still a swirling maelstrom, but in the center her heart was swelling with joy. Her face was flecked with happy tears at the same time she was shining with joy.\n\nNavaro managed to tear his eyes off of his daughter long enough to look at Ethan. \"May I embrace my daughter, honored dragon?\"\n\n\"Absolutely.\" He replied\n\nThe moment he started to give his consent, Alana rushed forward and wrapped her arms around her father's torso. He wrapped his arms around her too, and held onto her like he never wanted to let her go.\n\nHe kissed the top of her head and whispered. \"I'm so proud of you dear girl, of the woman you've become.\"\n\nHappy tears were streaming down Alana's face as she held her father tightly for the first time in her life. If the emotions coming over their bond were any indication, she'd never been happier in her entire life.\n\n* * *\n\nKendra was starting to think that she was insane for running full sail to go see Ethan. She didn't want to. She didn't want to see him ever again. She wanted to go find some deep, dark corner of the Ten Kingdoms and hide, never to come out again. That's what she wanted.\n\nHowever...\n\nShe grimaced as she adjusted the sails yet again. The wind had picked up enormously a few days ago and was propelling her towards the wood elven kingdom at fantastic speeds. She'd braided her long hair to stop it from tangling into a hornet's nest. Frankly, she'd rarely seen such strong winds this consistently outside of a storm, but -- aside from the ferocious wind -- the sky was calm.\n\nAt this rate, she would reach the wood elven kingdom in about a day, probably around sunset. She'd been sailing in powerful winds for a couple days now, and couldn't believe how consistently strong they were. She occasionally found herself wondering if Gabriella or the angel's Lord were behind the favorable sailing weather. Ordinarily she'd have another couple of days left to travel, not merely one.\n\nFor the hundredth time, she started trying to plan out what she was going to say. A simple \"I'm sorry\" certainly didn't seem like enough. Not after what she'd done. That was even assuming he'd forgive her at all, which she somehow doubted.\n\nShe'd saved Taloni though, so perhaps he might?\n\nHe certainly had enough enemies; that was for sure. Plus, Lord Delmar had spies everywhere so...\n\nSo...\n\nShe felt a sinking feeling in the pit of her stomach as she realized that the dragon's airship docking at the wood-elven capital of Nalatia would certainly raise some flags. Lord Delmar had spies everywhere and he would be notified immediately via portal stones. Within a day or two of the Argo landing, he would've gathered enough men to go after Ethan and his crew...\n\n...including Taloni.\n\nShe stood and adjusted the sails another fraction of an inch, making sure to get the best possible speed out of them.\n\nTime was suddenly of the essence.\n\n* * *\n\n\"What about her mother?\" Ethan asked when Alana and her father had finally let go of each other.\n\nNavaro smiled with the air of someone recalling a fond memory before looking at his daughter. \"I heard that they had to sedate her in order to pry you out of her arms.\"\n\n\"Really?\" Alana asked, starting to tear up again.\n\nHe nodded. \"You are dearly loved my child, even if you haven't known it.\"\n\n\"Could I...\" His elven bride began, before faltering.\n\n\"Could you see her?\" Navaro finished. \"Possibly? I have no influence over that because I belong to House Nalfigar, not House Kalon. You would need something besides your heritage to get them to agree though. A request from the king might be enough, and speaking of.\" He turned to Ethan. \"It was the king that made this meeting possible.\"\n\n\"Oh?\" He cocked his head to one side. That was... odd.\n\nNavaro nodded. \"The king wishes to meet with you again, away from the prying eyes of the court.\"\n\n\"He does?\"\n\nAlana's father nodded. \"The king is... intrigued by you. And though he could never say this aloud, I believe he regrets not being able to meet your wives also.\"\n\n\"Really? Hmm.\" As he thought back, the king had seemed less derogatory and insulting about his wives. He even seemed apologetic.\n\n\"Yes, I believe that is the king's heart on this matter.\"\n\n\"You keep calling him 'the king'. What's his name?\" Ethan asked.\n\n\"He is the king.\"\n\n\"Yes, but what's his name?\"\n\n\"He is the king.\" The other elf repeated as if that explained it.\n\n\"The king of the wood elves doesn't have a name.\" Alana explained. \"He's called 'the King' from the time he takes the throne.\"\n\n\"But what about before that?\" Ethan asked.\n\n\"Then he's the crown prince.\" Navaro replied.\n\nEthan opened his mouth to say how silly it was for anyone -- especially the king -- not to have a name, but thought better of it.\n\n\"Can you stay for dinner?\" Alana asked her father. \"It's not much, mostly ship food, but it would be wonderful to have you here.\"\n\n\"Sadly, I cannot.\" Navaro's face fell. \"I would spend the next month with you if I could, but can't risk it. In fact, I've already stayed too long.\"\n\nAlana swallowed hard. \"When will I see you again?\"\n\n\"Hopefully soon.\" He said with a sad smile, before turning to Ethan. \"Take care of my girl honored dragon. Should any harm befall her, I will hold you personally responsible.\"\n\nNot long ago, Ethan might've taken offense at him insinuating that he might let something harm Alana. But thinking about his tiny daughter growing inside of his first wife, he understood perfectly. He replied how he would want any man who was interested in his own daughter to reply. \"I will keep her safe, even if it costs me my life.\"\n\n\"I pray to Illuminar -- blessed be He -- that will not be necessary. But it's good to know you feel that way.\" Navaro nodded. \"Now, the King wishes to meet you tomorrow morning at the Hanging Gardens. He will send his herald to guide you there in the morning, if you are agreeable.\"\n\n\"I am.\" Ethan replied, thinking that he owed the nameless king at least that much for reuniting Alana with her father. It occurred to him that was probably the King's intention, but wasn't too bothered. Anyone who could made one of his wives that happy was certainly worth talking to.\n\nNaravo looked at Alana mournfully. \"I must bid you farewell my sweet girl.\"\n\nShe looked crestfallen, but nodded. \"Thank you for coming here, I...\"\n\nHer voice broke as seemed to be struggling to keep herself under control. Her father stepped forward and planted a tender kiss on her forehead.\n\nShe sighed.\n\n\"I will see you again my dear girl. It might be a while, but I will.\" He promised, then looked at Ethan. \"Take care of her.\"\n\n\"I will.\" He promised, then extended his hand.\n\nNavaro took it and they shook hands.\n\n\"You don't seem like most of other wood elves here.\" Ethan observed. \"A little less concerned with tradition and a little more about your family.\"\n\n\"Imagine being kept apart from the woman you love and the daughter you've never met for over twenty years.\" He replied. \"Wouldn't you also grow disenchanted with the system keeping you apart?\"\n\n\"Fair point.\"\n\nNavaro then asked Ethan to open the trapdoor on the Argo's underside, under which where there was a tiny airship waiting to spirit him away. He gave his daughter one last hug, then dropped down and was gone.\n\n* * *\n\nRachel listened with interest as Ethan and Alana relayed all that had happened with Alana's father. She was surprised, but happy for her best friend. Yet again, they were in the captain's cabin and it was all of Ethan's wives plus her. It was wonderful to be included, yet at the same time she still felt like an outsider.\n\n\"Rachel?\" Ethan said when everyone had finished discussing the event. \"Earlier, I suggested trying to get you linked up so we could all communicate telepathically. Did you still want to try?\"\n\nShe nodded. \"Yeah, that would be lovely.\"\n\nAlana gave her a sly, knowing smile when no one else was looking. The redhead felt her cheeks grow slightly warm, but otherwise didn't react.\n\n\"So, how would we do it?\" She asked. \"I know the concept, but I've never done it before.\"\n\n\"Close your eyes and focus only on me.\" Ethan replied. \"Try to find me, or at least my mental fortress and I'll do the same.\"\n\n\"Okay.\"\n\nWith her eyes closed, she reached out trying to sense the wonderful dragon. After a minute of seeking and not finding anything, she opened her eyes. Ethan still had his eyes closed, and his head was cocked to one side. His wives were all watching, looking alternately at her and him.\n\n\"I can almost feel you, but not quite.\" He said after a couple minutes. \"It's like when there's a word on the tip of your tongue or a dream you can almost remember, but can't quite get there.\" He looked at her apologetically. \"Sorry.\"\n\n\"Thank you for trying, but it's okay.\" She lied. It wasn't okay; not even a little. She wanted to be truly a part of Ethan's group, she just didn't want to be his wife because then he would be her lord.\n\nShe didn't want a lord.\n\nEthan looked at her, made a thoughtful sound, then looked at Alana. Alana nodded slightly and then he looked back at her. \"Let me try something that might help. Come over here.\" He patted the bed next to him.\n\nAlmost without thinking, Rachel rose from her usual chair near the desk. Ethan and the rest of his girls were on the bed, which is where she wanted to be if she was honest with herself. She sat down on the edge of the bed where he'd indicated; close enough to be friendly, but far enough not to be intimate.\n\nHe extended his hand, palm up. \"Let me hold your hand while I try again; the contact might help.\"\n\nA lump formed in her throat as she reached out and rested her hand in his. He touched the top of her hand with his thumb as he closed his eyes to concentrate again.\n\nHis touch felt good.\n\nThere was nothing erotic or sensual about it, but it was comforting; reassuring. The tiny scales of his hand were so smooth that they almost felt soft despite the hardness. His grip was firm, but not tight. It was gentle and tender, but not weak or limp.\n\nIt felt really good.\n\nHer heart seemed to flutter slightly as Ethan gently readjusted his thumb, gently brushing it over the sensitive skin of her hand. She started to get goose bumps.\n\n\"I couldn't find you, sorry.\" He finally said, letting go of her hand.\n\n\"Okay.\" She said quietly, trying to hide her disappointment. \"Let me try.\" She said raising her hand again.\n\n\"Go for it.\" He nodded, raising his hand and taking hers in his.\n\nShe closed her eyes and tried in vain to find him mentally. Unfortunately, she simply couldn't. She could almost feel him -- probably because of their half bond -- but she couldn'tactually feel him.\n\nShe felt her heart sink.\n\n\"I can't find you either.\" She finally said a minute later. If she was honest with herself, she might've looked a bit longer than necessary because he was holding her hand and it felt wonderful.\n\n\"Rachel, you could always...\" Taloni started to say, but turned slightly red and faltered as her wings fluttered nervously.\n\n\"I think what my fellow wife is trying to say is that you could always fully bond to Ethan.\" Beth finished, a smile playing around her lips.\n\nRachel was about to reply when Taloni found her voice. \"We talked about it, and none of us would mind.\" She said without meeting the redhead's gaze.\n\n\"Wait, you talked about it?\" Rachel asked as her mouth fell open. \"And you wouldn't?\"\n\n\"We did, and we wouldn't.\" Alana replied. \"But we'd never pressure you.\"\n\nRachel nodded mutely, not knowing what else to say. An awkward silence fell for several seconds before Ethan broke it.\n\n\"I think I smell dinner.\" He said sniffing the air. \"Anyone else fancy a bite to eat?\"\n\nThey all filed out, Rachel coming last.\n\nThe sky was dark and the weather deck lit by the now dwindling cooking fire, which gave off a cozy glow. They ate dinner and there was a cheerful tone it the air, with Anthiel wanting to know what had happened with Alana's father. Serif made a pointed comment to Raklan about secrets before explanations started, and then Rachel heard the story for a second time, though an abbreviated version with fewer details. Her best friend's face lit up as she talked about her father, and Rachel couldn't help but be a little jealous.\n\nHer own father had never been that way with her. He'd been more affectionate when she was little, but had slowly grown distant over the previous ten or so years.\n\n\"I'm going to bed early.\" Rachel said while standing up.\n\nEveryone wished her good night and she wandered below deck to her hammock, not sure what to make of the day. Her status as a disinherited daughter had been on display with the welcoming committee. That combined with Alana's paternal reunion had Rachel longing for that kind of connection with her own father... the man who was hunting them down and trying to kill them.\n\nPlus, she hadn't been able to join Ethan's mental 'group chat' as he called it. It had been a long day, and a disappointing one. She closed her eyes and rolled over in her hammock, wishing that things could be different as she drifted off to sleep.\n\n* * *\n\nRachel had never felt better in her entire life.\n\nA dreamy pair of strong, scale-clad arms were wrapped around her, pressing her back up against his front. She could feel him breathing and the care he took when holding her tightly, but not too tightly. There was something so wonderfully perfect about it.\n\nIt was made better than perfection by the naked back that was pressed up to her front. From the mage's breasts down to her knees, nearly every inch of skin was in contact with the beautiful wood elf in front of her. Chocolate brown hair was splayed on the pillow in front of her and the cutest ears in the Ten Kingdoms poked out from the flowing tresses.",
        "All three were completely naked.\n\nEthan was behind her and holding her, while Alana was in front of her snuggled up against her; she wouldn't have traded this moment for...\n\nFor...\n\nShe sat up as the feeling faded and she was left alone in the room, her bed companions seemingly vanishing into thin air. She swallowed hard, feeling suddenly bereft at the abrupt change. They had vanished like a dream, but the room remained. It was the same room from her dream over a week ago, when she'd dreamed she was married to Ethan, seen her daughter, and felt the happiest that she'd ever had.\n\nShe noticed two things that she hadn't last time though. First, the bed was enormous. Easily large enough for Ethan and his wives, and more than just the wives he currently had. Second, there were seven bassinets along one wall, each one with a gemstone set into it.\n\n\"Hello Rachel.\" A musical voice said from behind her.\n\nThe redhead turned to see Gabriella sitting on the bed looking sympathetic. As before, she seemed to radiate warmth and also glow slightly with an inner light.\n\nRachel sniffled. \"That's not fair.\"\n\n\"What isn't?\"\n\n\"You bringing me here; letting me feel this before asking me to choose. That's why you're here right?\"\n\n\"Perceptive as ever.\" Gabriella smiled. \"But I didn't choose the location nor anything else; that was my Lord.\"\n\n\"It's not fair.\" Rachel swallowed hard. \"He shouldn't tease me like that when He knows I'll never be able to choose this, no matter how much I want to. I know myself well enough to know I'll falter when the moment comes, no matter how resolved I am beforehand.\" She felt her eyes get watery and tried to blink the tears away.\n\nIt didn't work.\n\n\"Then, is this what you choose? The first dream, and to be wed to Ethan?\" Gabriella asked.\n\nShe tried to wipe the tears from her face. \"I want to, but I won't be able to bring myself to. You know that; Illuminar knows that. It's cruel to tease me like this.\" She tried wiping the tears from her face again, but they kept coming.\n\n\"So then, do you choose the second dream?\"\n\n\"No!\" She cried out in alarm, near sobbing. \"No, I don't want to choose that at all... but I will. I know myself well enough to know I'll choose it even though I don't want to.\"\n\n\"What do you want?\"\n\n\"I want to have a choice, but I don't want to have a choice.\" The teen replied, doing everything she could to keep herself calm. \"I know which one I want to choose, but I know I won't be able to choose it unless I'm forced, and I don't want to be forced. I want to have a choice, but I don't want to have a choice.\"\n\n\"Hmm.\" Gabriella mused. \"You want to have a choice, but you don't want to have a choice.\"\n\nRachel nodded.\n\nThe luminous woman smiled. \"Then you have made your choice.\"\n\n\"I have?\"\n\nThe angel didn't answer her question, merely smiled. \"Rest now Rachel. After tomorrow, nothing will ever be the same for you.\"\n\n\"What? What do you... you mean by... by...\" The redhead tried to reply, but was interrupted by herself yawning and suddenly becoming very tired.\n\nShe laid back down, only realizing at that moment that she'd been completely naked for the entire conversation and it hadn't bothered her. What did the angel mean by saying that after tomorrow, nothing would ever be the same? Was she referring to her relationship with Ethan?\n\nThat was her last thought as she drifted back to sleep.\n\n* * *\n\nKendra woke with the sun as usual and immediately checked her course and heading. Running full sail overnight was a gamble because winds could change, but it seemed to have paid off this time. She was still mostly on course for the wood elven capitol. She made a slight course correction to fix the small amount of drift during the night, took a deep breath, and let it out slowly.\n\nShe looked up, seeing the passage flag that had been granted to her as an Aldmiri. It seemed she had sailed right past the scouts without them intercepting her because of the flag, as usual.\n\nShe frowned.\n\nThat actually might've actually been a mistake, as they could get a message to Ethan faster than she herself could. Sadly, there was nothing to be done about it now except to sail on. With a little luck and continued good wind, she'd reach the capital late afternoon or early evening and would be able to warn him before nightfall.\n\nShe had a feeling in the pit of her stomach that it was going to be close though. Lord Delmar wasn't one to let the grass grow under his feet. She highly doubted that he'd wait longer than this evening or possibly tomorrow at daybreak to attack Ethan. He'd do it as soon as he could muster the men.\n\nShe only hoped she could get there in time to warn him.\n\n* * *\n\nSelene woke up realizing that she had a very big problem. Her brain had worked on it since the night before and she'd come to one inescapable conclusion: She was truly stranded in the Ten Kingdoms.\n\nEven if she wasn't, she surely didn't want to return to the waiting clutches of Smithbond. That meant that unless she could somehow locate Ethan and convince him to reopen the portal for her, she was stranded. However, the odds of ending up at the same place and time as Ethan were almost nonexistent without Earth-level communications technology.\n\nShe looked around the tiny room considering her options.\n\nShe had almost no money, so staying at the inn another night wasn't really an option. The roads were obviously dangerous given Sarah's reaction to her traveling alone. Therefore, she didn't think it was a good idea to go wandering around on them to find Smithbond's portal, even if she wanted to. Her only real option for locating it would be hiring one of those airships that Hailey had mentioned. However, she assumed that would also be expensive and she was quite poor right now.\n\nAs she stared at the ceiling, she once again noticed that Sarah had done a quite wonderful job decorating the tiny room. She hadn't noticed it the previous night, but there was a flower drawn on the ceiling. The curtains were cute, though clearly repurposed from threadbare clothes.\n\nNext to her, Sarah was tossing and turning a bit, probably from a dream. Oddly, she seemed to alternate between a scared victim and a violent aggressor. At one point, she started moaning and groaning, but the Brazilian woman couldn't tell if she was scared or raging mad. Either way, she seemed like she was having a nightmare so Selene gave her a gentle shake to wake her.\n\n\"Sarah.\" She whispered softly.\n\nThe girl sat bolt upright, a wild look in her eyes.\n\nMoments later, she seemed to come to herself, looked at Selene, and then started talking very fast. \"Good morning. Did you sleep well? I know the bed isn't super comfortable, and I'm sorry about that, but I hoped you liked it anyway. You're so nice, it was the least I could do.\"\n\n\"I slept quite well actually.\" Selene replied to slow the deluge of words. \"Thank you for offering to let me sleep here.\"\n\n\"It's no problem at all.\" Sarah beamed and then yawned. As she did so, the girl's face fell onto the window and the lightening sky beyond. Suddenly she looked mortified.\n\n\"I overslept.\" She breathed.\n\nInstantly, she rather nimbly climbed over Selene and slipped her dress on over her thin under-tunic, which she had slept in. She paused halfway out the door to look back at Selene. \"Please don't let my father know you slept here.\"\n\n\"Your secret is safe with me.\" Selene nodded and then the girl was gone.\n\nThe ex-FBI agent sat up yawning. She buckled the sword back onto her side, double checked to make sure the Glock was still in the leather pouch, and then then stood up. She took a moment to make the bed, figuring it was the least she could do, then walked out into the kitchen.\n\nSarah was feverishly working to rebuild the kitchen's cooking fire, looking slightly panicked.\n\n\"Can I help?\" Selene asked.\n\nA look of relief washed over the girl. \"Yes please; could you get a few pieces of wood from the pile?\"\n\n\"Sure.\" Selene exited the kitchen through the small rear door and walked to the woodpile with the smaller pieces. It was a dreary morning with heavy cloud cover, but no rain. She was pretty sure the sun had already risen, but there wasn't a ray of sunshine to be seen.\n\nA raven was flying overhead in circles, which seemed odd; she didn't think they did that. She watched for a moment before the raven suddenly turned and swooped down to land on a roof nearby. It just sat there, staring at her intently. She stared back, and there was something odd about this bird that she couldn't place.\n\nStrange.\n\nShaking her head, she grabbed a few bits of fire wood and brought them back inside to Sarah, who put them on the bed of coals that she'd uncovered. Not long after, there was a nice fire going and the girl looked relieved, but still stressed.\n\n\"Sarah! Where's the breakfast girl?\" Her father shouted from the other room.\n\n\"Coming.\" She replied, wincing slightly.\n\n\"How can I help?\" Selene asked.\n\n* * *\n\nEthan was getting used to waking up with two naked wives clustered around him and a third in his arms. This morning it was Beth, who looked like a perfect angel as she slept. Her blonde hair was soft and smooth, and it framed her face perfectly. She was smiling as she slept and so had the cutest little dimples in her cheeks. She was a vision of loveliness and he felt incredibly grateful to have her there, sleeping peacefully.\n\n\"Boo!\" Beth said, suddenly opening her eyes.\n\nHe jumped slightly and his three wives laughed. Once the shock had worn off he joined them.\n\n\"You naughty little minx.\" He said playfully.\n\nBeth's face went into a mock recalcitrant expression. \"I'm sorry Dominus, I will submit to your discipline.\"\n\nThe ravishing blonde rolled onto her front and pushed her butt up into the air. A moment after she had, her face turned bright red and she buried it in the pillow.\n\n\"Mmmhmfmmffm.\" She said into the pillow.\n\n\"I didn't catch that, what?\" He chuckled.\n\n\"I have no idea why I said that.\" She said, lifting her head long enough to talk and then burying it in the pillow again.\n\nHer butt was still in the air.\n\n\"Well, you were a bad girl.\" He replied, touching his fingertips to her bare back and slowly running them down, tracing a zig-zag pattern on her spine as she shuddered and let out a soft moan.\n\n\"There's so many of you girls that I need to keep you all in line.\" He said, barely suppressing a smile with a mock-serious expression.\n\n\"Thank you Dominus.\" Beth replied lifting her head again; her butt was still in the air.\n\nHe ran his hand down, cupping first one butt cheek and then the other. She had an amazing bubble butt; it was small, round and firm enough to bounce a coin off of it. He gently rubbed it, feeling his cock grow as he did so.\n\n\"Sir, I think she needs to be... 'disciplined' severely... and repeatedly.\" The smoldering look in her eyes stood in stark contrast to the barely restrained laughter in her expression.\n\n\"I agree master.\" His other wife said in much the same tone.\n\nBeth made a sound halfway between a moan and a groan.\n\nBoth of his other wives were wearing lustful expressions, and he could see their nipples starting to harden as they watched. Seemingly subconsciously, Beth pushed her butt a little higher into the air. He grinned and pulled his hand back to give her a good smack, but held his hand a moment. Beth seemed to tighten and flinch, but there was no denying she wanted it.\n\nSmack!\n\nBeth almost yelped in shock, pain, and pleasure as his hand impacted her left butt cheek. Moments later, she groaned and he could smell the scent of her arousal in the air much more strongly.\n\nSmack!\n\nHe hit the other cheek and got the same reaction. After a moment she looked at him and whispered quietly. \"Thank you Dominus, may I please have another?\"\n\nEthan felt his dragon side begin to wake, urging him to do something that was a bit beyond his comfort zone. He settled instead for two more swats in quick succession.\n\nSmack! Smack!\n\nBeth looked back at him. \"Use me Dominus, please.\" She pleaded. \"Use me, use my body however you want.\"\n\nHe could hear a yearning in her voice; a hungry longing that aligned exactly with what his dragon side wanted to do...\n\n...but he hesitated.\n\nHis wives must've sensed his hesitation because the mood in the room changed slightly. It was still sensual, but less electrifyingly erotic. Beth's expression changed from one of mock-servile begging to an almost compassionate one.\n\nShe cocked her head to one side. \"Are you afraid to let the dragon out?\"\n\n\"I loosen the reins occasionally, but yeah.\" He nodded. \"The last few times I let it out, it didn't work out so well. You died, then I really scared Taloni, then--\"\n\nThe blonde teen put a hand on his arm. \"It's okay, you don't have to explain.\"\n\n\"Really, we get it.\" Alana added. \"You're worried you'll hurt us.\"\n\nHe sighed. \"Yeah.\"\n\n\"Master, I have no doubt you'll get the dragon fully under control. But until you do, we're here for you.\" She leaned forward and rested her head affectionately on his shoulder.\n\n\"Dominus, perhaps something else this morning then.\" Beth suggested, looking much less feverish but no less aroused. \"May I please...\" She went redder. \"May I please... um, ride you?\"\n\n\"I don't think I'll ever say no to that.\" He said.\n\nShe swung her leg over so she was straddling him, then scooched back. She seemed to have trouble lining herself up so Taloni sprang into action, moving down and aligning his very erect cock with his youngest wife's slit. She moved backwards, her mouth opening in a silent moan until she bottomed out and let out a gasp.\n\n\"Oh dear Illuminar that feels amazing.\" She sighed and closed her eyes savoring the sensation for several seconds, then looked at him. \"Thank you Dominus.\"\n\n\"I should be thanking you.\"\n\nShe smiled and slowly shook her head. \"I'm not sure I agree.\" She slid forward and then back again, her inner walls sliding over his cock like the most perfect massage in existence. She groaned softly, then looked at him again. \"No, I definitely should be thanking you Dominus.\"\n\n\"Agreed: thank you sir.\"\n\n\"Thank you master.\"\n\nHis two other wives snuggled up on either side of him as Beth continued her long, slow, almost tortuous movements. He reached up and stroked her firm stomach, sensual sides, and the slope of her breasts as she slowly rode him. She kept closing her eyes and parting her lips as she did so, seemingly savoring the feeling. She occasionally let out a soft sigh or subtle moan. He could feel her emotions over their bond; she was simmering in arousal, but not pushing it further.\n\n\"You're teasing.\" He stated.\n\nShe nodded slightly. \"I'm remembering our wedding night.\"\n\nAll three sighed at once, probably remembering their own too.\n\n\"Ethan, I love you.\" Beth said as she moved slowly. \"I love all of you, every part, even your dragon side.\"\n\nHe stiffened slightly.\n\n\"I know he can be disruptive, aggravating, and downright destructive, but he's a part of you. I could never hate a part of you; any part of you. Your dragon is...\" She sighed as she slowly impaled herself on him yet again. \"...he can be downright terrifying, but I don't think he'd ever hurt me; hurt any of us.\"\n\n\"I agree sir.\" His first wife said as she ran a finger up Beth's side, making her shiver.\n\n\"I know he wouldn't master; you went full dragon on our honeymoon and I loved it.\"\n\n\"I did?\"\n\nShe nodded. \"I don't really remember much -- it's a bit of a haze -- but I'm fine and I remember loving it.\"\n\n\"I loved it too.\" Beth sighed.\n\nEvery one of Ethan's dragon instincts were shouting for him to grab her hips and drive into her at full force and give the blonde what she hasd asked for, but still he hesitated.\n\n\"It's okay.\" Beth said, placing her hand on his chest. \"Please don't feel pressured. I'd like that, but only when you're ready. For now, let me help you relax.\"\n\nEthan felt his eyes get slightly watery.\n\nInstantly, all of his wives looked at him in alarm.\n\n\"I'm fine.\" He said quickly. \"I'm just... you girls are all so wonderful and I'm not sure what I did to deserve you.\" He reached around and pulled all three in for a group hug, with his cock still firmly encased in the beautiful blonde teen.\n\n\"You can't deserve someone else.\" Beth said confidently as she fell into his arms. \"Gabriella told me that. But she also said that Illuminar Himself guided us to you.\"\n\n\"Amen.\" Taloni agreed, doing her best to snuggle herself closer.\n\n\"Blessed be He.\" Alana giggled happily as she lay against him.\n\nBeth wiggled her butt, the motion teasing a very pleasurable sensation into his cock as she spoke. \"Now, please let all of us show you how much we truly appreciate you.\"\n\n\"You mean that, don't you?\" He said.\n\nThe blonde nodded as she started rocking her hips back and forth so he felt every inch of her around his cock. \"I do Dominus, I really...\" She sighed. \"...really do.\"\n\nHis youngest wife rocked her hips around experimentally for several seconds before looking at him. \"You have been the most wonderful man a girl could ask for. You rescued me from bandits, gave up the woman you loved to save me--\" Beth glanced at the wood elf. \"--well, temporarily anyway. You were kind, caring, and gentle when I was being a brat about Alana. You never gave up on me even after I died, and you came looking for me.\"\n\nThe blonde stopped holding herself back and began to ride him in earnest. \"You crossed worlds to bring me back, you fought a necromancer to save me, and you always, constantly think of us before yourself.\"\n\nShe started panting, clearly riding on the edge of orgasm. \"And besides all that, you treat me like an angel in public while treating me like a real woman -- your woman -- in bed.\"\n\nShe was rocking her hips almost feverishly and Ethan could feel his balls starting to clench. She had her hands on his chest as she did so, and Taloni put one of her small, delicate fingers on the blonde's.\n\nBeth moaned. \"And you've given me such incredible friends. Alana is everything I want to be and Tee is the most incredible girl I've ever--\"\n\nHis youngest wife was cut off by the Fey teen abruptly sitting up and kissing the blonde. They locked lips tenderly as Beth struggled to keep her rhythm up while her whole body started to tremble.\n\nEthan came.\n\nHe didn't even try to hold himself back as he unloaded at the entrance to the blonde's young, fertile womb. He so wanted to fill her with his child -- and the dragon was screaming that he should -- but he resisted. He let out a groan of satisfaction as he looked at his Fey wife holding up the blonde as she got floppy from cuming.\n\n\"Your turn, but I'm keeping this.\" Alana said to the Fey girl as she placed one of Ethan's hands between her legs. He didn't need any prompting to begin gently stroking her clit, which elicited the most wonderful symphony of pleasurable sounds from her.\n\nBeth took a moment to regain her balance, and then flopped to his left side opposite Alana. Taloni took her place, but didn't slide over his cock yet. Instead, she just brushed the underside with her nether lips, smiling as she did so. It was a cute, innocent smile that seemed completely at odds with the sensual way she was rubbing herself against him. For some reason, that made his cock twitch.\n\n\"Thank you so much master.\" She said sweetly, her wings coming up and fluttering. With the large bay window behind her and early morning sun shining through her multi-colored pearlescent wings, she was a vision of loveliness. Her wings looked like a cross between a dragonfly's wings and butterfly's, with the latter's coloring, and were being illuminated by the early morning sun. The sight was incredible.\n\nHe gave a low, appreciative whistle. \"Damn, you look amazing honey.\"\n\n\"Thank you master.\" She smiled sheepishly, then glanced down. \"May I?\"",
        "\"Always.\" He grinned.\n\nShe reached down, but Beth beat her to it. The blonde aimed his cock so the Fey teen only had to lower herself, which she did; agonizingly slowly. She seemed to be savoring the sensation like a wine connoisseur would her favorite vintage, only she was emitting the most wondrous collection noises as she did so. She bottomed out and smiled the cutest smile ever, which again was oddly at odds with the way she was starting to ride him. The combination was the most intriguing combination of innocence and sexuality that he'd ever seen.\n\n\"You're so good to me master.\" She said softly as she moved slowly up and down. \"You were willing to fight for me when we met, you fought a dragon for me, and you saved me from that mine; from my life as a slave. You are the most wonderful man I've ever met and I'm so lucky to have you as my master.\"\n\nHe reached up and traced his finger up her hip, then her bare side, then to the bottom curve of her small breasts. She was so sweet that he couldn't believe it. She was among the most incredible women he'd ever met, and the longer he knew her the more he loved her.\n\n\"I think I got the better end of the deal.\" He said with a smile.\n\nTaloni shook her head. \"I'm afraid I can't...\" She sighed as she rocked her hips around him. \"...I can't agree master.\"\n\nHe chuckled as he flexed his cock inside of her. \"Disagreement has never been so enjoyable.\"\n\n\"Yes...\" She fell forward, catching herself on her outstretched hands which were not on his chest. \"...yes master.\"\n\n\"Excuse me, but I think Beth could use some help....\" Alana said, apparently feeling bereft from the loss of his hand. She none-too-subtly climbed over his head, making sure to display her entire body before his eyes for his viewing pressure.\n\nHe purred appreciatively.\n\nThe wood elf shot him a mischievous look. \"I thought you needed some incentive to please that wonderful girl so I could get my turn.\"\n\n\"Please, let me please you master.\" Taloni moaned.\n\n\"Oh, you are.\" He grinned toothily.\n\nShe leaned down, resting her elbows on his chest and her head on her gently closed fists, and then sighed as she continued to work her hips slowly up and down. Her expression was both adoring and trusting, yet also smoldering and innocent.\n\nThe dichotomy made his cock even harder.\n\nHe reached up and began to slowly explore her young body and acres of soft, smooth flesh. Her eyelids kept fluttering as he did so, alternating presenting him with her beautiful lilac eyes and long, slender lashes. Likewise, her wings fluttered beautifully behind her.\n\n\"Oh master.\" She sighed. \"You let me fly an airship, which has always been my dream. And you always take care of me, and you push me to grown, even when I'm scared to.\"\n\nHe leaned up and kissed her tenderly, then harder. She wrapped her arms around him, opening her mouth to admit his tongue and moving her hips even faster. Their kiss broke and she gazed deeply into his eyes. He looked back, astounded by the love shining in them as she worked her hips.\n\n\"I love you master...\" She whispered, then leaned closer and whispered too quietly he doubted the other heard. \"...Ethan.\"\n\nShe had used his name.\n\nShe so rarely did that it felt like music to his ears. For some reason, her using his name so rarely made the fact that she just had even more intimate.\n\n\"I love you too, my Taloni.\" He said, and thrusting gently but strongly up into her.\n\nShe gave a long moan and then he felt her body tense up a she started to tremble slightly. Knowing she'd be incredibly embarrassed if she was her usual vocal self mid-orgasm when there was a dock full of people around, he kissed her forcefully, crushing her mouth to his and mostly muffling her cries of ecstasy. Then he took control a bit, thrusting upwards with long deep strokes and finishing inside of her as she was starting to come down.\n\n\"Thank... thank you master.\" She panted as she caught her breath.\n\n\"Any time; I mean that.\" He grinned back.\n\nShe smiled sheepishly.\n\n\"Ahem.\" Alana none-too-subtly cleared her throat. \"My dear Taloni, I'm going to go mad if I don't feel him inside of me soon.\n\nThe Fey started to move, but Ethan grinned devilishly and stopped her from sliding herself off of him. He looked at the wood elf with a twinkle. \"How mad, and how soon?\"\n\n\"Please don't sir.\" She looked crestfallen. \"I'll wait as long as you tell me to, but please don't make me wait.\"\n\nHe cocked his head to one side. \"You really would wait as long as I told you to, wouldn't you.\"\n\nShe bit her lip and nodded. \"Yes, years if you told me too. But please sir, please may I take my turn now.\"\n\n\"Absolutely.\" He nodded, not able to say no to such a request.\n\n\"I got him all ready for you.\" The Fey teen said as she slipped off.\n\n\"And I got her ready as well.\" Beth said smiling from beside him.\n\nIt was true.\n\nHis first wife was almost dripping wet and he was almost sorry that he'd missed whatever it was that Beth did while he was busy with Taloni.\n\nAlana wasted no time throwing her leg over him to straddle him. Both of his blonde wives reached over and together lined his cock at her entrance. She sank down it in one long, smooth, fluid movement. Ethan groaned in pleasure. She was the smallest of his wives physically and also the tightest. She sank down until he was fully buried inside of her up to the hilt. Her nether lips were stretched incredibly wide to take him and he purred in satisfaction at the sight.\n\nLooking higher, her slender wasp-waist, hourglass figure, small breasts and long, flowing chocolate hair completed the vision of absolute beauty.\n\n\"Hi.\" He said contentedly.\n\n\"Hi.\" She smiled back, still not moving. She put her hand over her womb, and gave him a radiant smile. She readjusted her hips slightly and slid just a bit further down on him, though he wasn't sure how that was possible. She looked at him for a moment, then smiled like something had occurred to her.\n\n\"Ladies, could you snuggled up to our husband?\"\n\nBeth and Tee complied, with the blond taking his left side and the honey-blond taking the right. Both did as the wood elf requested, molding themselves to his side as he put his arms around them. Each put a leg over one of his, so their legs were touching Alana too.\n\nThe wood elf leaned down and he could see her rich hazel eyes shining in love. \"Thank you for... for everything sir.\" Her smile was subtle, but incredibly joyful. \"Thank you for challenging Drousin, for protecting me from Lord Delmar's men, for giving me your deep mana, for taking me with you when you left Gralden, for defending me whenever we were attacked, for marrying me, for letting me carry your baby, for... for all those things and so many more I couldn't name them all.\"\n\n\"It was my pleasure.\" He smiled back at her.\n\nShe nodded, smiling and leaning down just a hair more. He could still feel her wrapped around his cock, holding him there like she never wanted him to leave. She kissed him tenderly, the motion making him shift inside of her in the most pleasurable way.\n\n\"I didn't believe it was possible to be this blessed.\" She said softly.\n\n\"Me either.\" He closed his eyes for a second and savored the moment. From his shoulders clear down to his knees, almost no part of him wasn't touching a woman who loved him. They were all so incredible and he couldn't believe they were his.\n\nAlana locked eyes with him and smiled. \"Please sir, please take control of me.\"\n\nHe cocked his head to one side. \"Why?\"\n\n\"Please?\" She asked again, not explaining.\n\nHe nodded, letting his will flow through his eyes to capture her. She didn't fight him at all. Not a single bit. He knew from experience that she could; that she could resist his draconic ability to compel her, but she wasn't resisting at all.\n\nQuite the opposite.\n\nShe welcome his control. He didn't know how he knew, but he knew. She was putting up literally no resistance to his gaze or will and she stood ready to do anything he asked. She trusted him completely and made no effort of any kind to prevent his will from washing over hers. Instead, she welcomed it. She was still her; still there and still as strong as ever, but she was choosing to completely give him all control.\n\n\"I'm yours sir.\" She said softly. \"Completely yours.\"\n\nHe didn't know what to say.\n\nShe was completely open and vulnerable, opening herself wide to let him in and believing that he wouldn't abuse her trust nor take advantage of her. It was incredible. Then her eyes twinkled. She started sending him warm feelings of love, tenderness, and devotion to him. He had almost forgotten that he was firmly encased in her most intimate place until she gently squeezed his cock with her internal muscles.\n\nThe emotions coming from her were doing something very strange. He was getting more and more aroused but she wasn't moving at all. He was buried inside of her as deeply as possible but she wasn't moving. Yet despite the lack of physical stimulation, he could feel his cock getting even harder as she sent everything she felt for him over their bond.\n\n\"I'm not going to last long if you keep...\" He trailed off as the emotions coming from her surged and he lost his concentration, releasing her from his gaze.\n\n\"Don't hold back.\" She whispered into his ear. \"Enjoy my body; it's yours sir... I'm yours.\"\n\nHe came.\n\nShe hadn't moved a muscle and he growled as he came inside her.\n\nAs soon as he did, she started to cum as well. She trembled and shook slightly, but never closed her eyes. She stared right into his eyes while they both climaxed, making it not only the most powerful climax he'd ever experienced, but also one of the most intimate. He found himself almost lost in her rich hazel eyes as the feeling washed over him.\n\nIt was incredible.\n\n\"Wow.\" He said a minute later when the aftershocks had subsided from the both of them.\n\n\"Yeah.\" She looked right at him as she said it, and he knew she wasn't just talking about the orgasm.\n\n\"How did you do that?\" Beth breathed at the wood elf while staring at them spellbound. \"You didn't even move and yet he... how?\"\n\n\"She's special.\" Taloni said dreamily. \"She's master's soulmate.\"\n\n\"Ladies you both--\" Ethan started to say, but Beth put a hand on his chest to stop him.\n\n\"Dominus, we know you love us too. But you must admit you have something special with Alana; something even more special than what you have with us. I don't mind, and in fact I feel privileged that you let me be a part of it.\"\n\n\"I feel the same master.\" Taloni said with a sigh as she laid her head on his chest. \"This is just the best thing ever.\"\n\n\"Mmm, it is.\" Alana agreed and laid her head down next to the Fey's. They were joined moments later by Beth, who laid her own head in a mirror image of the honey-blonde. Looking down, he saw honey-blonde hair on his right, chocolate hair in the middle, and blonde hair on his left.\n\n\"Ladies, you must be the three most wonderful women in the universe.\" He sighed.\n\n\"We feel the same about you.\" Alana mumbled.\n\nHe chuckled. \"You think I'm the three most wonderful women in the universe?\"\n\nAll three girls laughed as the wood elf shook her head.\n\n* * *\n\n\"Thank you so much for helping.\"\n\n\"You're welcome.\" Selene replied as she started dicing some vegetables to put into the morning's breakfast, which was a stew of some kind.\n\n\"I don't usually sleep in like that.\" Sarah said while tipping some spices into the pot. \"I try really hard to be helpful.\" She looked sad at the thought, and clearly thought that she wasn't.\n\n\"You seem really helpful to me.\"\n\n\"Really?\" She beamed, then looked downcast. \"I suppose you just haven't known me long enough then. But you're really nice to help. I wish I could be more like that.\" She finished wistfully.\n\nThe kitchen door banged open and her father's belly proceeded him into the room. He wore a tired scowl on his face and moved like he'd just woken up, despite his daughter having been up for at least half an hour. He looked even more world-wear than he had the previous night.\n\nHe took one look at Selene chopping vegetables and rounded on Sarah. \"How could you let a guest work in the kitchens?\"\n\nSarah flinched slightly and her eyes suddenly looked like a little lost puppy.\n\n\"She didn't ask, I offered.\" Selene said icily. \"I happen to like chopping.\"\n\nThe innkeeper harrumphed, apparently ignoring her comment. \"I'm so sorry, she knows better than this. I'll make sure she's properly disciplined for this.\"\n\n\"You'll do nothing of the sort.\" Selene replied turning towards him. \"I insisted on helping even though she hadn't asked and tried to prevent me. Wouldn't it be poor manners to refuse a guest's request?\"\n\nThe innkeeper looked confused, but then shrugged. \"Okay.\" He turned without another word and shuffled out of the room in a defeated way. For some reason, she didn't get the impression that her comment had anything to do with why he looked defeated. He looked like a fellow who'd given up caring about life and was all the grumpier for it.\n\n\"Thank you.\" Sarah said meekly after he left.\n\n\"You're welcome, but you shouldn't have to take that from him.\"\n\n\"He's my father and he's really good to me, especially considering it's my fault that the inn isn't...\" She trailed off, averting her eyes and looking distinctly downcast.\n\n\"Your fault that the inn isn't... what?\" Selene prompted.\n\nThe girl opened her mouth, but apparently couldn't bring herself to say it and Selene decided not to push. The most obvious and natural end of that sentence was \"...isn't doing well.\" However, that didn't make much sense. The girl was a hard worker who was pleasant and cooked well. Selene couldn't imagine how the girl could possibly be responsible for the inn falling on hard times.\n\nHmm.\n\nShe went back to slicing vegetables and tipped them into the pot when she was done. She couldn't help but notice that Sarah stirred the pot rather more sullenly than she had been before. She did this for several seconds before getting a crestfallen look on her face.\n\n\"Oh, I forgot my morning prayers.\" She said, then knelt down right there in the kitchen and looked up. \"Dear Illuminar -- blessed be You -- please make me good, and please help my new friend on her journey.\"\n\nThen she stood and went about her business.\n\nHmm.\n\nCurious.\n\nSelene watched with fascination at two things. First, the girl had called her a friend, and second that her being 'made good' was her request for herself. It seemed like a rather odd request coming from a girl who was rather sweet. She was about to asked about it when she noticed that there was a raven perched just outside the kitchen window. The bird was staring at her intently through the window, seemingly oblivious to everything else.\n\nHmm.\n\nOdd.\n\n\"I do hope you have a pleasant rest of your journey.\" Sarah said, having returned to stirring the stew with a more natural amount of cheer. \"It was really nice having you stay here and I wish more of our guests were like you.\" She then suddenly looked mortified and corrected herself hastily. \"Not that our guests are unpleasant or anything. I mean, we have a lot of nice guests who are nice. And I'm not saying you're only as nice as they are, you're much nicer -- and I like that -- but they're nice too. Most of the time.\"\n\nSelene smiled at both the girl and verbal deluge. \"You were wonderful, and I can't thank you enough. Now I just need to decide where I'm going.\"\n\nThe brown-haired girl cocked her head to one side. \"You're traveling, but don't know where you're going?\"\n\nShe nodded. \"I'm kind of lost. I was waylaid by some bandits and lost my way. I don't have the coin to stay here longer.\"\n\n\"Oh, I'm sorry.\" The girl's look of sympathy was near heartbreaking in its earnest sincerity. She seemed to hesitate, then glanced around the room to make sure they were alone before whispering. \"If you're low on coin there's...\" She looked around anxiously again and then lowered her voice even more. \"There's a monastery only two miles down the road that will gladly allow you to stay a few nights and provide food without charge.\"\n\n\"Really?\"\n\nSarah nodded. \"Illuminar -- blessed be He -- commands us to take care of the stranger, the foreigner, and the traveler. The monks take His commands seriously.\"\n\nThe Brazilian woman breathed a sigh of relief. \"Thank you for telling me that. I assume your father wouldn't be happy if he knew you did?\"\n\nShe shook her head vigorously.\n\n\"Well, then thank you all the more.\" She smiled, glad she wouldn't need to spend all her coin right away. However, she was rather confused about how a sweet girl like Sarah could be responsible for the inn's recent hard times.\n\nIt didn't make sense.\n\n* * *\n\n\"Really?\" Ethan raised his eyebrow at the King's herald, who was standing on the Argo's weather deck after having just arrived to guide him to his meeting with the king.\n\n\"Yes honored dragon.\" Delabor said with a bow.\n\n\"May I please?\" Beth asked, her face lighting up with joy.\n\n\"Um...\" Ethan hesitated, having been caught slightly flat-footed. He still wasn't used to his wives asking for his permission to do things.\n\n\"Honored dragon, the hanging gardens are among the most exclusive and beautiful sights in the entire wood elven kingdom.\" Delabor said. \"I am sure a lady of such refined and exquisite taste as your wife would greatly enjoy their beauty.\"\n\n\"Okay.\" He nodded while regarding the herald. \"And it was the king's suggestion to bring Beth?\"\n\n\"His Royale Majesty specified the honorable daughter of the noble Lord Borden.\"\n\n*Rachel and I think it's an olive branch.* Alana thought to him. *She's the only one of your wives who could come, so maybe he's trying to make up for what happened in the throne room?*\n\n*Possibly*. He nodded, then turned to Beth. \"Ready to go?\"\n\n\"Yes!\" Beth exclaimed with an elegant curtsey, but he suspected that she'd be jumping for joy if she wasn't trying to make a good impression... and she was making a good impression. It was a perfect curtsey and the royal blue dress was simply gorgeous on her.\n\n*Damn Alana, you out-did yourself on Beth's dress; she looks hot!* He thought to all his wives, knowing Beth would blush at the compliment.\n\nShe did.\n\nThey followed Delabor through the streets of Nalatia, holding hands as they walked. He felt like they were a tourist couple on holiday being led by a guide. They kept pointing out different sights to each other, and there were plenty to see. The city truly was a true marvel of organic engineering which would almost certainly be impossible without magic guiding the trees' growth.\n\n\"How do you get the trees to grow like that?\" Beth asked their guide as they passed one particularly incredible example.\n\n\"Everyone has their place lady dragon, yet that is not mine.\" The herald replied. \"Furthermore, I do believe those secrets are rather closely guarded.\"\n\nShe shrugged as she looked at Ethan. \"Worth a try.\"\n\nHe grinned at her. \"Have I ever told you that you're adorable when you're curious?\"\n\n\"Thank you, but I'm always curious.\"\n\nHe winked. \"I know.\"\n\nShe smiled, looking slightly embarrassed but very happy all the same.\n\nAfter a thirty minute walk, they arrived at the largest 'building' he'd yet seen in the city. Like most large 'buildings' here, it was composed of a cluster of smaller trees that had grown together. Unlike most others, this one didn't seem to have a roof and there were guards stationed at the entrance.\n\nThe guards let them pass with a respectful nod to Delabor, and a barely-disguised look of awe for Ethan himself. He still found it rather uncomfortable to be walking around as a dragon without the disguise gem on. He certainly wasn't used to the looks and didn't really enjoy being gawked at.\n\nThere was a small wall of intricately carved boards set parallel to the wall just inside the entryway to prevent people from seeing in. Delabor stepped around it and Ethan felt his jaw drop when he saw what was inside.",
        "\"Wow.\" Beth breathed.\n\nIt really was a hanging garden.\n\nHe was hit with an exquisite explosion of vibrant color and verdant beauty. Everywhere he looked there was a different flower or carefully grown vine. There were an enormous number of raise beds suspended at varying heights, and many of the flowers were literally hanging down from them, being interwoven with some kind of vine. It was like a lot of small waterfalls made of flowers interwoven with vines. Some of the trees were similarly draped in the same colorful flower-clad vine 'waterfalls'. In the distance, there was one particularly impressive flower-vine 'waterfall' which towered over thirty feet in the air.\n\nIt was breathtaking.\n\nWalking paths of soft grass were carefully cultivated and wound their way through what might've been a field of wildflower. The variety and colors were incredible, and also looked wild and beautifully chaotic. Yet there was some undiscernible order to it too; some pattern he couldn't make out.\n\n\"Honored dragon, welcome.\" The wood elven king said. He was standing perhaps a dozen feet from the entrance and wearing similar clothing to the previous day.\n\n\"Uh, thank you for having me.\" Ethan replied.\n\n\"This is my queen.\" He said, indicating the Elvin woman next to him.\n\nStanding next to the king was a breathtakingly beautiful elf. The queen's hair was golden, much like Beth's. However, her face looked rather familiar. It took him a moment to realize that she was Alana's aunt, and he could see the family resemblance. While he firmly believed that his own wives were the most beautiful women in the world, he wasn't blind. From an objective standpoint, the queen was easily the most beautiful woman he'd ever seen in person, and it wasn't close. The only possible exception was that FBI agent, Selene.\n\n\"I'm honored.\" Ethan replied, hoping that was the proper response. Beside him, Beth curtsied.\n\nThe queen swept forward to stand next to his wife and beamed at her. \"Now my dear, would you like to see the best parts of the garden while our husbands discuss their business?\" He noticed a few passing similarities between the queen and Alana in their mannerisms, tone, and body language.\n\n\"May I?\" Beth asked him.\n\n\"Of course.\" He replied immediately.\n\nHe got the distinct impression that the queen -- whatever her name was -- was similar in temperament to Alana, which could only be a good thing. The queen whisked the slightly intimidated looking Beth off deeper into the gardens while Ethan turned to regard the king.\n\n\"I meant no offense yesterday when I declined to invite your wives into the palace.\" The king said. It didn't sound like an apology, merely a statement of fact.\n\n\"Why did you 'decline to invite' them?\"\n\n\"The palace is the seat of power, and power must be righteously wielded or it becomes sin. To admit the unrighteous -- including those who have dishonored themselves -- would be to admit unrighteousness into the seat of power, which would be sin.\"\n\nEthan blinked.\n\nThen he frowned.\n\nThere was a twisted sort of logic to it, but 'twisted' was the operative word.\n\n\"Long have I desired to speak with you honored dragon, for true prophets of Illuminar are rare in these days, and the land wilts for lack of His word.\"\n\n\"I already told you...\" He trailed off as he remembered that he wasn't supposed to contradict the king.\n\nAh screw it; what's the worst that could happen?\n\n\"I am not a prophet of Illuminar.\" Ethan said firmly. \"I'm not. I realize you think the lightning and bringing people back from the dead is proof, but it's not. The lightning is just ordinary magic, and the technique I used to bring Kendra back from the dead in The Arena is common where I come from.\"\n\nThe king looked perplexed for a moment, then almost smiled. \"It has been nearly four decades since someone told me I was wrong. Not since I was crowned has any man, elf, dwarf, nor other creature dared to correct me. Yet you do. Explain yourself.\"\n\nCuriously, the king's final comment came off as less of a command and more of a question.\n\nInteresting.\n\n\"I merely spoke my mind.\" Ethan replied after a moment.\n\nThe King smiled, seemingly pleased with that response. \"You said that the technique you use to bring men back from the dead is common where you come from. It is a blessing to live where death is rare.\"\n\n\"Death isn't rare.\" Ethan countered. \"People die all the time and the technique only works on a few kinds of death.\"\n\n\"Interesting.\" The king gave him a piercing look for several moments. \"Walk with me honored dragon.\"\n\n\"Sure, but you can call me Ethan.\" He walked forward as the king turned and he found himself walking shoulder-to-shoulder with a king. The elf was an inch shorter than he was and his pace was slow but deliberate; a comfortable pace for a discussion.\n\n\"Ethan.\" The elf mused. \"Such a strange name.\"\n\n\"From my perspective, it's not nearly as strange as having no name.\"\n\nThe king touched his index finger to his heart and said \"Yalba.\"\n\n\"Huh?\"\n\n\"It means 'touch' in the elven tongue; it is what a sparring partner says when his opponent scores a point.\"\n\nEthan smiled. \"We have a similar convention where I come from.\"\n\nThey walked in silence for several moments before Ethan thought of one thing that he needed to say. \"Thank you for reuniting Alana with her father. I can't even describe how much it meant to her.\"\n\n\"It was my pleasure.\" The elf smiled broadly, and it looked like he truly was happy about that. \"Navaro is a good elf, and I'm pleased he was able to meet his daughter.\"\n\n\"What happened?\" Ethan asked. \"I know some of the broad strokes, but not the specifics.\"\n\n\"Navaro and your wife's mother were star crossed lovers from the start.\" The king explained. \"I remember the first time they met in my court; they couldn't keep their eyes off of each other despite still being children. Their attraction only grew as they aged. The day after your wife's mother became of age, Navaro asked her father for her hand in marriage.\"\n\n\"I take it he said no?\"\n\n\"He did not.\" The king replied. \"However, they spent a very long time -- nearly a year -- in negotiations for her hand.\"\n\n\"Negotiations for her hand? What kind of negotiations?\"\n\n\"The bride-price of course. Having married a Lord's daughter yourself, you know how expensive it is to purchase a good wife from her father.\"\n\n\"Purchase a wife from her father?\" Ethan felt a little bit of a growl slip into his voice and tried to restrain it. \"Why not just let the pick for themselves?\"\n\n\"We aren't pitiless barbarians.\" The king looked perplexed. \"We wouldn't do something so cruel as to let an immature girl choose her own husband; she would surely choose badly and make herself miserable.\"\n\n\"You might be surprised.\" He replied through gritted teeth, but let it go. From the king's tone, that particular tradition was deeply embedded in their culture and he doubted that anything he could say would change it. \"What happened to them then?\"\n\n\"The negotiations stretched out, though not because of Navaro. I'm sure he would have happily traded away half of House Kalon for your wife's mother. His father was understandably insistent that the match didn't bankrupt their House though. Eventually, the impatience of youth spoiled the match. They...\" The king paused, as if steeling himself to say something repugnant. \"They fornicated together.\"\n\n\"And...?\" Ethan said, not understanding what the big deal was.\n\n\"You are not elven, nor are we speaking the elven tongue; else you would understand the gravity of the crime.\" He explained. \"They shared a bed without bonding to one another.\"\n\n\"And...?\"\n\n\"There is no word in the tongues of elves, men, or dwarves for this abomination. To share your body without sharing a bond -- without sharing your soul -- it is unthinkable.\"\n\nEthan took a deep breath and let it out slowly, realizing he would need to bear with a lot when dealing with these wood elven traditions.\n\n\"You don't understand.\" The king observed.\n\n\"Not one bit.\" Ethan replied. \"It might've been unwise, but they were consenting adults; they can do what they want.\"\n\nThe king shrugged. \"You are young; your opinion will change once you have daughters of your own.\"\n\nEthan highly doubted that, but let the comment pass. \"So why is Alana's mother shamed, but not her father? Wasn't he just as responsible?\"\n\n\"Perhaps more so.\" The King replied. \"But she would not give up his name. Further, he would not admit to it, almost certainly at her urging. Neither has ever had eyes for another living soul, nor did she claim to be forced. Illuminar -- blessed be He -- demands a confession in open court or the testimony of two or three witnesses for a conviction; Navaro cannot be convicted contrary to the law of Illuminar -- blessed be He. Thus, I cannot treat him as convicted, which is why I speak his name and entertain him at court.\"\n\nOddly there didn't appear to be any disdain or even distaste behind the King's words; they were merely a statement of fact. He stopped besides a small waterfall that was about their height. In the distance he could see their wives laughing and enjoying the beautiful scenery. Beth was certainly enjoying herself judging from their bond.\n\n\"Would it be possible for Alana to meet her mother?\" Ethan asked. \"Navaro said that it might be possible with a request from you.\"\n\nThe king looked out at his wife. \"Were the queen not her sister, it would be impossible. But since she is, I could perhaps arrange for my wife to escort your wife to see her mother.\"\n\n\"Wait, the queen can see Alana's mother, but not you? How does that make sense?\"\n\n\"My wife is her family; to turn your back on family -- even in their shame -- would bring dishonor to your family; for who can turn their back on their own blood?\"\n\n\"Okay.\" Ethan sighed.\n\nIt was starting to sound like they could use their strange concept of honor to deny or permit just about anything they wanted. He wasn't against the concept of honor or tradition, but their twisted version of it was a bit unsettling. It seemed to leave little room for redemption and forgiveness, while at the same time making it easy to fall from grace.\n\nThe combination wasn't healthy.\n\n\"Come.\" The king said starting to walk again.\n\nEthan obliged, falling into step beside him. \"Why did you ask me here?\"\n\n\"As the king, I must strive to do everything according to the will of Illuminar -- blessed be He. When I heard a prophet of His had arisen, it was my duty to investigate.\" He paused. \"Yet you say that He has never spoken to you; curious.\"\n\n\"I don't think I said 'never'.\" Ethan corrected.\n\nThe king made a thoughtful sound. \"Go on.\"\n\n\"I think I met an angel once.\" Ethan then described how Gabriella had told him he would fight a deadly foe, beat her, and then commanded him not to let her die.\n\nThe king had an amused smile as they passed a particularly beautiful 'waterfall' of flowers which resembled daffodils. \"Illuminar -- blessed be He -- sent an angel to you with a message about the future, and yet you claim not to be a prophet.\"\n\n\"I'm really not.\" He confirmed.\n\nThe king chuckled. \"You appear to be in denial.\"\n\n\"No I'm not.\" He replied with a wink.\n\nThe king laughed. It was a hearty laugh that was both genuine and made Ethan want to laugh with him.\n\n\"I would have you be a prophet of Illuminar -- blessed be He -- for then I could ask you a question.\"\n\n\"You can't ask one now?\"\n\nThe elf shook his head. \"No, for someone to know something that the crown does not would dishonor the crown.\"\n\nEthan resisted the urge to roll his eyes. \"So, you can't ask anyone any questions ever?\"\n\n\"Of course not, except of Illuminar Himself -- blessed be He -- or one of His prophets.\" For a moment, the king got a wistful look in his eye. \"I would like to remember what it's like to have a normal conversation, if only for a short time.\"\n\nEthan couldn't help but feel a bit sorry for him.\n\n* * *\n\nAfter eating breakfast and promising to come back and say goodbye to Sarah before she left the area for good, Selene had struck out on the road towards the monastery. She figured that it was a good place to find someone who would know where a ruined temple was. There were no guarantee of course, but it seemed likely.\n\nCAW! CAW!\n\nShe turned to see a single raven flying overhead.\n\nIt looked like the same one that had looked in on her that morning, which was rather odd. She thought she'd glimpsed it a few more times, but couldn't be sure. Regardless, it made her feel like she was being watched. She had half considered shooting it a few times, but didn't want to waste her precious few bullets. Besides, hitting a bird at that range was a difficult prospect at the best of times.\n\nUnable to do much about it, she continued onwards.\n\n* * *\n\n\"I'm sorry, could you repeat that?\" Ethan asked, sure he'd misunderstood King.\n\n\"I would have you meet Illuminar Himself -- blessed be He.\"\n\n\"How would I do that?\" It didn't sound like a threat in the vein 'meet your maker', which made the statement very confusing.\n\n\"There isn't a single wood elf who hasn't heard of Mount Ianis.\" The King replied. \"It is where the first king of the wood elves met Illuminar after his coronation. Illuminar promised him that when any future king of the wood elves truly needed guidance from Him, He would meet him at the mountain.\"\n\n\"So, you could talk to God whenever you want?\"\n\nThe king shook his head. \"No. Illuminar -- blessed be He -- said that it was only to be used when a king truly needed guidance. No prophet of Illuminar has been seen for many, many decades. Now you arise and no one is quite sure what to make of you.\"\n\n\"So, you want me to go to this mountain and just have a friendly chat with God?\"\n\n\"Yes.\"\n\nEthan opened his mouth to respond, but no words came out. This was truly the strangest place he had ever been, and possibly the strangest conversation he'd ever had. Just 'have a talk' with God? He wasn't even sure God existed. Granted, Gabriella seemed to be an angel which directly implied God's existence. However, it was far from proof.\n\nDid he even want to talk to God?\n\nGiven all the crap that happened on Earth -- and all the pain, misery, and suffering that mankind endured -- he wasn't sure he wanted to meet the fellow. And what if he said the wrong thing? Would God fry him with a lightning bolt? That's if God even existed and the whole Mount Ianis thing wasn't a scam.\n\n\"Give me a minute.\" Ethan said to the King, then turned his thoughts toward his wives. *Ladies, you won't believe what The King just asked me to do...*\n\n* * *\n\nSelene reached the monastery without difficulty or incident. It was right where Sarah had said it was, though it was much larger that she'd expected. The stone building was large; easily several thousand square feet and quite tall. It was surrounded by a medium-gray stone wall about a dozen feet high, with a wrought Iron gate that was taller still.\n\nThe gate was currently open, though a very large man with a quarterstaff was sitting on a stool just outside of it. He was over six feet tall and built like a tank. He had a full, dark beard and slightly wild-looking face, but kind eyes. He wore robes that were clearly supposed to be white, though it was more of a natural linen color than the brilliant whites on Earth. The robes had a sun made from yellow fabric that she figured was supposed to be gold. He broke into a smile as she came closer, and she definitely got a 'gentle-giant' vibe from him.\n\n\"Hail traveler.\" He had a deep voice. \"What brings you to these parts without your husband?\"\n\n\"I'm not married.\" She said with a sigh. Why did everyone on this world assume she was? Was it some unwritten rule or something?\n\n\"Oh, my apologies.\" He said with a bow. \"What bring you to our humble monastery?\"\n\n\"I was hoping to get shelter for a night or two, and information on a local landmark.\"\n\n\"It would be our honor to provide lodging for you. Illuminar -- blessed be He -- instructs all men to be hospitable. And between you and me, it's been a while since a stranger has come by. We'll look forward to hearing the news at dinner tonight.\"\n\n\"Thank you, though I don't have any real news to share.\"\n\n\"That's a pity.\" His face fell slightly, but brightened moments later. \"I'm brother Kalen, welcome.\"\n\n\"Selene Dawson, pleased to meet you.\"\n\n\"Come, I'll show you around.\" He stood and motioned her through the gates.\n\n* * *\n\n*Oh wow master.* Taloni thought to everyone as she covered her hand with her mouth. *What an honor.*\n\nShe could feel her wings fluttering in subconscious excitement as she thought of her dear master meeting with the wonderful God of Light who had brought him to her. She could scarcely believe it was true.\n\n*Wow, I wonder what that would be like?* Beth chimed in, her boundless curiosity always shining through. The Fey girl loved that about the human teen.\n\n*That's... that's just amazing Ethan.* Alana said with a reverent tone. *To speak to Illuminar Himself... that's just... just wow.*\n\n\"What's going on?\" Rachel asked, looking between her and Beth. The redhead had been pacing the weather deck all morning, clearly with something on her mind. She had declined to answer when either Alana or herself had asked what was wrong. Now the teen mage had clearly noticed that something was up.\n\n\"The wood elven king asked Ethan if he would meet with Illuminar on Mount Ianis.\" Beth said.\n\nRachel took a sharp intake of breath. \"I hope he said yes immediately.\"\n\nTaloni shook her head. \"No, he wasn't sure--\"\n\n\"Tell him to accept now.\" Rachel said, cutting her off with an urgent tone. \"That's one of the highest honors the wood elven king can give, and it's only offered rarely; not even once a century. For Ethan to refuse -- or even hesitate -- could be a grave slight to the king.\"\n\nTaloni relayed the message to Ethan, doing her best to convey Rachel's urgent tone.\n\nThere was a several second pause, then Ethan replied. *Done; accepted. Please thank Rachel for me.*\n\nAlana and Taloni both did so.\n\n*I won't lie ladies, I'm a bit nervous about this.* He said after several seconds.\n\n*Don't worry master. You're such a wonderful person; I'm sure Illuminar will be very happy with you.*\n\nHe didn't answer for several seconds. *I hope so; the King just called for Delabor to make a small airship ready to take me to Mount Ianis. Apparently, I'm going today.*\n\nTaloni bit her lip.\n\nShe desperately wanted to ask Ethan if he could ask Illuminar if she was a good wife, but wasn't sure she should. I mean, her husband's meeting with God Himself was incredibly important and her question just didn't seem as important next to that. Still though, she wanted to know if Illuminar thought that she was a good wife because she really wanted to be one.\n\n*Hey honey* Ethan said privately to her. *Are you okay?*\n\n*Yes master, just excited for you, though I'm a bit nervous.* She replied before she'd thought... then she nearly kicked herself. Why hadn't she just asked Ethan to ask Illuminar?\n\n* * *\n\nBrother Kalen had led Selene on a short tour of the monastery, which was rather impressive. There were three main buildings; the monks' dormitory, the chapel area, and the lodging place for guests. There were multiple smaller buildings that looked like sheds plus a few green houses. She also learned that the monastery owned the land around it and the farmers paid their rent in food for the monks and any travelers who sought lodging within its halls.\n\n\"Here shall be your lodging.\" Brother Kalen said, indicating the large room with over a dozen beds. It looked like no one else was there at the moment, so she would have a bed all to herself. It was strange; she'd always taken that for granted on Earth.\n\n\"Thank you, I appreciate it.\" She said with a smile.\n\nThe monk smiled back. \"Aye, 'tis our pleasure.\"",
        "\"Question, do you know of a ruined temple in the area?\" Selene asked.\n\nBrother Kalen narrowed his eyes a bit. \"Why?\"\n\n\"I'm supposed to meet someone there, but I got... waylaid by some men, knocked out, and woke up somewhere else. I'm afraid I don't know the area and thus can't find it.\"\n\n\"I am sorry to hear of your troubles.\" The monk replied, and he looked sincere. \"However, that's not what I meant. I mean why do you want to find this 'ruined temple'?\"\n\n\"I'm supposed to meet someone there.\" She replied. It wasn't quite the truth, but it wasn't truly a lie either.\n\nBrother Kalen gave her a piercing look. \"You do realize you're in a monastery dedicated to Illuminar -- blessed be He -- and are asking about temples to other gods?\"\n\n\"It's a ruined temple and no one's been there for... well it looked like decades at least. I wasn't going there to worship; just to meet someone.\" She replied.\n\nHe regarded her thoughtfully for a moment and then shrugged. \"I don't know of any in the area. If you need to find it badly, I do believe an airship would be your best chance.\"\n\n\"Yeah, Sarah suggested that too.\" Selene nodded.\n\nBrother Kalen's face darkened slightly at the name. \"Sarah the innkeeper's daughter?\"\n\n\"Yes, why?\"\n\nHe looked both somber and sad as he replied. \"Neither I, nor any monk here would willingly spend time in her presence; we value our souls too much. She is beyond help.\"\n\n\"Beyond help? What's wrong with her?\"\n\nHe opened his mouth to reply, then closed it. \"Let's just say that there's a reason that the inn only receives traffic from the unwary and ill-informed.\"\n\n\"Because of her?\" Selene cocked her head to one side. How could anyone not like Sarah? She was a bit odd, but incredibly sweet.\n\n\"I've said too much already.\" Brother Kalen replied. \"But no one who values his life or immortal soul would spend any time in her company.\"\n\nWith that, he bowed and hastily left the room.\n\nSelene walked to the far end of the room and sat down on an empty bed, trying to understand what the monk could've possibly meant. She seemed so sweet and nice. Though, the girl's comment about her being the reason that the inn had fallen on hard times suddenly made more sense. However, the reason behind it still didn't make any sense.\n\nMaybe this was just superstition? They had some strange customs here and possibly this was something akin to the Salem Witch Trials where women were accused and punished without evidence? That was the only thing she could think of; nothing else really made sense.\n\nWhat kind of danger could such an innocent girl pose to anyone's soul?\n\n* * *\n\n\"We shall arrive momentarily honored dragon.\"\n\nEthan nodded at Delabor in response as they approached Mount Ianis. He was trying to understand how he went from storming out of the elven king's throne room yesterday to riding an airship to meet Illuminar -- supposedly God Himself -- today at that same king's request.\n\nThe airship he was in was only slightly larger than Kendra's airship. It was clearly built for speed, being very sleek, narrow, and aerodynamic with massive sails relative to its small size. It certainly was faster than the Argo. They had been sailing over the forest for nearly two hours, after the king had promised to send his best men to escort Beth safely back to the Argo. He'd been reluctant, but something told him that he could trust the king. Beth had made it back safely and in an exuberant mood after her time in the Hanging Gardens with the queen.\n\n\"You know the proper way to greet Illuminar when you meet Him, do you not?\" Plesius the high priest asked from the seat next to him. Apparently, it was tradition for the high priest of Illuminar to accompany visitors to Mount Ianis.\n\nEthan didn't trust him.\n\nNot even considering how the elf had talked about his wives, there was something about the elf's manner that just rubbed Ethan the wrong way. He had a calculating look that just seemed out of place on a high priest. He was thin and wiry, and his bright robes with a golden sun contrasted with his sour demeanor. It wasn't just his look either; something about the man made his dragon side uneasy too. Some primal instinct told him to be careful, though he wasn't sure why.\n\n\"Use 'thee's' and 'thou's?\" Ethan replied sarcastically in response to the high priests question.\n\n\"You would mock me, the great high priest of Illuminar -- blessed be He -- with such jests?\"\n\n\"After that crap you pulled in the throne room, yes.\" Ethan replied, looking down his snout at the man.\n\nHe made no attempt to be civil or disguise his contempt. Anyone who treated his wives so poorly deserved neither respect nor civility. Plesius resumed his silence, much as he had for the entire trip. He had tried to make conversation many times, but Ethan hadn't been interested.\n\nHe still wasn't.\n\n\"We arrive, honored dragon.\" The herald said.\n\nThe small airship canted its sails so it slowed as they approached a small wooden dock sticking out of the side of the mountain. Okay, 'mountain' was being generous. It stuck several hundred feet out of the forest, but wasn't quite deserving of the title 'mountain'.\n\nOddly, Mount Ianis appeared to be almost cylindrical for the first hundred or so feet that poked out from above the treetops. It was a sheer cliff-face all around for those hundred feet, above which it looked much like any other mountain or large stony hill Ethan had seen. There were some sparse trees, shrubs and other foliage. The whole place had a rough, feral look to it. It was untamed and wild; not the place he would've expected to meet with God.\n\nThe tiny airship pulled up to the dock and Delabor threw a rope to a grizzled-looking man who was waiting on the dock. The grizzled man looped the rope around the docking posts and then pulled the small airship tight to the dock, much as Kendra had done.\n\n\"Godspeed dragon.\" Delabor said, not stepping off the airship.\n\n\"You're not coming?\" He asked.\n\nPlesius scoffed. \"Only the caretakers and those with the king's permission can set foot on Mount Ianis.\"\n\nEthan shrugged then stepped off the airship onto the wooden dock.\n\n\"We shall remain here until you return... if you return.\" Plesius said with a wicked grin.\n\nEthan resisted the urge to wave good bye... using only one finger.\n\n\"Come; I shall take you up the path.\" The grizzled fellow said.\n\nHe was taller than Ethan by several inches and had the rough look of a man who lived in the wilderness. His clothes looked to be made of some course thread and he had a leather belt wrapped around his waist. He was extremely wiry, but unlike Plesius that just made him look tough as nails. His eyes were fierce, but kind. Ethan got the impression that this fellow would wade through a river of piranhas to help his friends, but would be a truly fearsome foe.\n\nIt was slightly intimidating.\n\nEthan fell into step behind him as the man began to walk up a path that led away from the dock. There was a small weather-beaten shack about a dozen yards from the dock, but after that the path became less well defined.\n\n\"I've been looking forward to meeting you in person.\" The grizzled man said once they were out of earshot of the airship.\n\n\"Oh?\" Ethan said as they rounded a turn, after which it started turning upwards at a significant incline.\n\nThe man nodded, but said nothing else.\n\n\"So you're the caretaker here?\" Ethan asked after a minute.\n\n\"Of sorts.\" He replied, but didn't elaborate.\n\n\"Why were you looking forward to meeting me?\" Ethan asked.\n\n\"Aren't you a prophet of Illuminar?\"\n\n\"No, though everyone thinks I am.\"\n\nThe man made a thoughtful sound as he made another turn and led Ethan onto a small inclined path about two feet wide along a cliff face. It was sheer rock for dozens of feet above him and hundreds of feet below him. He would've been worried about the gusting wind dislodging him if he didn't have wings to catch himself.\n\n\"Has Illuminar never sent a message to you then?\" The grizzled man asked after half a minute, and Ethan noticed he didn't add 'blessed be He' as most people usually did.\n\nCurious.\n\n\"Well, He did once; through an angel in a dream. Or at least, I think it was an angel.\" He replied as the path along the cliff face narrowed to about a foot wide. He turned and scooted sideways.\n\nThe grizzled man gave him an amused smile. \"Imagine that, a prophet who heard from God in a dream.\"\n\n\"I'm not a prophet.\" Ethan said with a groan. \"Frankly, I'm not even sure that God exists.\"\n\n\"And yet here you are, traveling a treacherous path to meet Him.\"\n\n\"Yeah, falls don't bother me because of the wings.\"\n\n\"Of course.\" The man nodded, though he had a knowing smile. \"So why don't you believe in God?\"\n\n\"Because He seems like a colossal asshole if He does exist.\" Ethan said, surprised at his own honesty. \"I mean, think of all the terrible things in the world that He allows. Heck, just the terrible things that have happened to me since I arrived.\"\n\n\"Hmm.\" The grizzled man mused as the path thankfully widened back out a more comfortable three feet. \"So you'd prefer the bad things didn't happen then?\"\n\n\"Absolutely.\"\n\n\"Like Lord Delmar hunting you for instance?\" The grizzled man asked.\n\n\"Again, absolutely.\"\n\n\"Are you happy with your life?\" The guide asked.\n\n\"Mostly. I love my wives -- they're absolutely amazing -- but I wish I wasn't on the run.\"\n\n\"Hmm. And would you have met your wives if Lord Delmar wasn't hunting you?\"\n\nEthan stopped short.\n\nHmm.\n\nThe obvious answer was no. He would've met Alana of course, but somehow he doubted they would've ever bonded or even become close if Lord Delmar hadn't attacked them. If he hadn't been chasing them, Ethan would never have met Beth because Rachel would've never kidnapped her. He would never have married the blonde nor freed Rachel. He would never have made it all the way to Arcanum to meet Taloni either. He also wouldn't have freed Hailey and helped her get back home so he could bring Beth back to life.\n\n\"Okay, maybe it worked out for me.\" He admitted. \"But it doesn't for everyone; thousands of people die every day.\"\n\nThe grizzled man glanced back. \"The Book of Light says: 'there is a man who ruins his own life, and then rages against Illuminar for it'.\"\n\n\"So you just blame the victim?\"\n\n\"Only when it's his fault.\" The guide replied. \"Too often, the sins of other men will affect someone, bringing hardship and misery that's not of his own making.\"\n\n\"Yeah, like I said; God could stop all that and doesn't.\"\n\n\"Interesting.\" The man said, but didn't elaborate.\n\nThe path turned inland away from the cliff face. A short while later it also turned sharply upwards at a near forty-five degree incline. Ethan was using his hands as much as his feet to continue forward, and not infrequently making use of his claws for a better grip. That's when he noticed the grizzled man was barefoot and his soles were almost leathery.\n\n\"How much further?\" He asked after ten minutes of climbing like this.\n\n\"Not much.\"\n\nThe path levelled out after another minute or two, though again they were walking up an incline along a cliff face. He could tell they were getting closer to the top because the path was winding much more tightly.\n\n\"So, you don't like the fact that God doesn't stop evil things from happening.\" The grizzled man said as they walked up the incline on the cliff face.\n\n\"He could, it just doesn't seem right that so many good people get hurt and so many bad people get away with things.\" Ethan nodded.\n\n\"Getting away with something is a different issue that it happening in the first place.\" The man pointed out. \"However, doesn't the Book of Light say that Illuminar will repay each man according to his deeds? Isn't God Himself capable of not only rewarding the righteous but also punishing the wicked?\"\n\n\"I'm sure He's capable, but He doesn't seem to. Frankly, He seems to let everyone get away with an awful lot.\" Ethan replied as they turned a corner. There was a short climb up an eight-foot pile of rocks after the bend. At the top of the climb was a small plateau about thirty feet in diameter and he could see only sky in every direction.\n\nIt appeared they were at the top of Mount Ianis.\n\nThere was a blonde woman clad in white with her back to him tending a small fire near the far edge of the circle. He could hear the sound of water boiling and there was a scent he couldn't identify. Some kind of tea maybe?\n\n\"We have arrived.\" The grizzled man announced.\n\nEthan looked around, seeing no one besides himself, the blonde woman in white, and the grizzled man. Besides them, there was no one else.\n\n\"Is that Him? Or her?\" He mouthed, pointing at the blonde woman.\n\n\"No Ethan, I am not Illuminar -- blessed be He.\" A familiar voice said. It took him a moment to place it.\n\n\"Gabriella?\"\n\nThe blonde stood and turned, bowing first to the grizzled man and then to Ethan himself. It was indeed Gabriella. Her heart shaped face and perfectly feminine features were as stunning as ever. She wasn't as luminous in the real word as on the Astral Plane, but she still did seem to glow and radiate happiness.\n\n\"It is good to see you again Ethan.\" The angel said in her soft, comforting, and musical voice. Then she turned around, poured something into a teacup, and turned to face the grizzled man. She approached him with the utmost reverence and held out the cup of tea to him, bowing her head respectfully as she did so.\n\n\"Your tea my Lord.\" She said reverently.\n\n\"My Lord?\" Ethan looked at the grizzled man. According to what everyone on the Argo had said and his own experience, Gabriella the angel only called one person her Lord.\n\nThe grizzled man turned to Ethan as he took a sip of the tea. \"Yes, I am her Lord.\"\n\n\"But that would mean...\" If this grizzled man was Gabriella's Lord, and she only called Illuminar her Lord, then logically... His mouth fell open and his stomach began to clench as he mentally reviewed the conversation they'd had on the hike up here. Could it be possible?\n\n\"Are you...?\" He breathed, not quite able to finish the sentence.\n\n\"I Am.\"\n\n\"You... you're Illuminar?\"\n\nThe grizzled man smiled as he nodded once, then added with a chuckle. \"Blessed be Me.\"\n\nTO BE CONTINUED...\n\n***Hello all. In my (little) spare time I've been working on another, far shorter story (maybe 4-6 chapters) in the Ten Kingdoms universe. It has a few characters that will become side characters in ADT a ways down the road. We'd meet them in ADT after the shorter story ends, so ADT would essentially spoil the shorter story's ending. This shorter story would be under the non-consent/reluctance category, but it's a much \"softer\" sort of non-con than you usually find there. I'm curious if ya'll are interested in such a story, and if I should shift a bit of time from ADT to this shorter one to avoid spoiling the ending. Let me know what you think.***\n\nSTORY TAGS: dragon, magic, medieval, elf, teen, romance, harem, virgin, cuckquean"
    ],
    "authorname": "Antiproton",
    "tags": [
        "dragon",
        "magic",
        "medieval",
        "elf",
        "teen",
        "romance",
        "harem",
        "virgin"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/a-dragons-tale-ch-26"
}