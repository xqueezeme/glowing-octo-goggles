{
    "title": "How To Make Characters Talk in Your Stories",
    "pages": [
        "LESSON 1\nWhy Use Dialogue in the First Place?\n\nHi, I'm Whispersecret. I am going to attempt to explain how you can include dialogue in your stories. Hopefully, by the time I'm done, you will be able to confidently use quotation marks, commas, ending marks (.?!), and tags (he said/she exclaimed) correctly. There is even a \"final exam\" at the end you can take to see if you understand.\n\nFirst, I wanted to talk about why using dialogue is critical for stories. Literotica has thousands of erotic stories. If your story is riddled with grammar/punctuation errors and lacks good dialogue, it's a good bet that people will pass and move on to a story that is easier to read.\n\nSome contributors to Literotica refrain from having their characters actually talk, and their stories get read. They may even get good response. But I think those stories are lacking for many reasons.\n\nREASON 1: Stories that have long, uninterrupted blocks of text are difficult to read. The human eye needs that white space. It helps the reader track the lines easier and prevents migraines! Haven't you read those stories yourself, where you lose your place in the paragraph? It's probably because you're looking at a solid wall of text that has nothing that your eye can use as a sort of marker or guidepost. Real dialogue can provide that necessary white space, making your story easier to read. (Proper paragraphing helps too.)\n\nREASON 2: You are writing erotica to entertain readers with a sexy tale. Pure narrative with no conversation at all can be boring, and for an erotic story, that's counterproductive. \n\nTake this example: \n\nI asked her to get on her knees and suck my dick. She told me she wanted that more than anything! Then she took me in her hot mouth and I told her how incredible it felt.\n\nThat is what passes for dialogue in some stories. It is not dialogue; it is poor writing. Those three sentences aren't enough to be considered truly boring and monotonous, but if you have a whole story like that, believe me, it can get tedious.\n\nHow much more interesting is it to read this instead: \n\n\"Get on your knees, baby, please. I want to watch you suck my cock.\" \n\n\"I want that so much, Matt. God, I want to feel your hot prick in my mouth!\" \n\n\"Fuck...oh, FUCK! That's incredible. Don't stop. Suck it harder, baby...\"\n\nCan't you just hear the desperation in their voices? The naked lust? And I didn't even add tags to describe their voices, the expressions on their faces, etc. That's coming up next.\n\nREASON 3: Dialogue provides a punch to a story that can't be given any other way. Look again at the example I gave you above. Let me add a little to it and see how much more effective it is. See if you come away with a little bit more than the last time.\n\n\"Get on your knees, baby, please,\" I begged Yvonne in a hoarse voice. \"I want to watch you suck my cock.\" \n\n\"I want that so much, Matt,\" she said breathlessly. \"God, I want to feel your hot prick in my mouth!\" \n\nI panted as she took me between her lips. I could barely speak. \"Fuck...oh, FUCK! That's incredible. Don't stop. Suck it harder, baby...\"\n\nI hope you saw a difference. I hope you felt a difference! This time you know that Matt is so aroused that his voice is hoarse. Yvonne is breathless; she really wants him. \n\nREASON 4: You can communicate much more about your characters by choosing the exact words they utter. For the next example I'm going to have three people say basically the same thing\u2014that someone was wearing something that wasn't the current fashion. See if you get a different impression of each person based on the actual words that come out of their mouths:\n\n\"I was totally blown away. Her outfit was like so yesterday. I mean, this is the new millennium, you know.\"\n\n\"I'm telling you, everyone who is anyone was talking about it. How could she possibly have worn that outdated ensemble? It was positively passe.\"\n\n\"Huh, sugar, I can't tell you how silly she looked. Like she raided her grandma's attic!\"\n\nDid you get a feel for those three people? Did you even create a picture of them in your head? I hope so. You can say about your characters by putting specific, well-chosen words in their mouths. \n\nI'm sure I've missed some other reasons why dialogue is important to stories, but hopefully you get the idea. Quotation marks need to be there. Make friends with them.\n\nLESSON 2 \nQuotation Marks and A Little Bit about Commas\n\nNow, I'm actually going to teach you some rules. \n\nStop rolling your eyes! \n\nPeriodically I'll insert little \"tests\" so you can try it yourself. I recommend you actually use a pen and paper to write the sentence the way you think it should be. This will help cement the skill in your head. I'll have several returns to separate the \"quiz\" from the answer so you aren't so tempted to peek.\n\nWhen I teach school children about quotation marks, the first thing I tell them is that whatever is inside the quotation marks is exactly what comes out of the character's mouth. If you remember that one thing, you'll do fine! Anything outside of the quotation marks is part of the narrative.\n\nHere's a sentence without quotation marks:\n\nI don't swallow cum she said.\n\nWhere do the quotation marks go? The marks should \"hug\" the exact words that come out of her mouth.\n\n\"I don't swallow cum\" she said.\n\nNow, something is still missing. The comma. Usually you have to set off the quotation from the tag (he said, she replied, etc.) with a comma. (I'll get into exceptions to this later.) The comma goes inside the quotation marks.\n\n\"I don't swallow cum,\" she said.\n\nTry it yourself. Here is a sentence without punctuation:\n\nYour cock can't possibly be ten inches long the doctor said.\n\nWhich of the following is correct?\n\nA. \"Your cock can't possibly be nine inches long,\" the doctor said.\nB. \"Your cock can't possibly be nine inches long\" the doctor said.\nC. \"Your cock can't possibly be nine inches long, the doctor said.\"\n\n\n\n\n\nThe answer was A. Did you get it right? Good for you! \n \nREVIEW: \nRule 1. Quotation marks bracket the exact words the character is saying.\nRule 2. If your quotation comes before the tag, the comma goes inside the quotation marks.\n\nLESSON 3 \nMore about Commas and Capital Letters\n\nSometimes the tag comes before the quote. If it does, you still need a comma. This time, the comma goes directly after the tag, outside of the quotation marks:\n\nShe said, \"They had an orgy.\"\n\nDid you happen to notice that the above sentence has two capitals? I'm sure you remember your first grade teacher telling you that every sentence must start with a capital letter. That is why \"she\" is capitalized in that sentence. However, when you're quoting someone in a story, you also have to capitalize the first word they utter. That is why \"they\" is capitalized in that sentence.\n\nYou try it:\n\nLarry said her tits were like cannonballs\n\nWhich is right?\nA. Larry said \"her tits were like cannonballs.\"\nB. Larry said, \"Her tits were like cannonballs.\"\nC. Larry said, \"her tits were like cannonballs.\"\n\n\n\n\n\nThe answer is B. Give yourself a pat on the back if you got it right. That was complicated.\n\nEvery sentence needs an ending mark (a period, an exclamation point, or a question mark.) The ending mark acts like a stop sign to tell the reader that the sentence is done and a new sentence is next. In dialogue, the ending mark goes inside the quotation marks:\n\nLarry said, \"Her tits were like cannonballs!\"\nLarry said, \"Her tits were like cannonballs?\"\n\nYou try:\n\nA. Dolores cried, \"Don't touch me there\"!\nB. Dolores cried \"Don't touch me there!\"\nC. Dolores cried, \"Don't touch me there!\"\n\n\n\n\n\nThe answer was C. \n\nREVIEW:\nRule 3. If your tag comes first, the comma is outside of the quotation marks. \nRule 4. If your tag comes first, capitalize the first word that is uttered by the character.\nRule 5. If your tag comes first, the ending mark for the sentence goes inside the quotation marks.\n\nLESSON 4\nMore About Ending Marks\n\nTake a look at this sentence:\n\nIs that a banana in your pocket she asked\n\nShoot! This is complicated, isn't it! Where does the question mark go? \n\nWell, let's put the quotation marks in first. Remember they hug the exact words being spoken.\n\n\"Is that a banana in your pocket\" she asked\n\nGood. Now, remember when I told you that usually the quotation is set off from the tag by a comma, but that there would be exceptions? Here is an exception. She is asking a question, so you need a question mark instead of a comma. The question mark goes inside the quotation marks. It's supposed to punctuate the actual question being asked:\n\n\"Is that a banana in your pocket?\" she asked\n\nThis sentence is still missing one thing. The entire sentence needs its own ending mark, a period.\n\n\"Is that a banana in your pocket?\" she asked.\n\nThere. It's exactly the same with an exclamation point:\n\n\"It IS a banana!\" she exclaimed in disappointment.\n\nYou try it. Which is correct?\nA. \"How many shaved pussies have you licked\" he asked?\nB. \"How many shaved pussies have you licked,\" he asked?\nC. \"How many shaved pussies have you licked?\" he asked.\nD. \"How many shaved pussies have you licked he asked?\"\n\n\n\n\n\nThe answer is C. \n\nSuppose the tag is first. It's even simpler. There's only one ending mark, and it still goes inside the quotation marks:\n\nShe asked him candidly, \"Will you fuck me?\"\n\nREVIEW:\nRule 6. If your character is asking a question or exclaiming something, the ending mark goes inside the quotation marks. If the tag follows the quote, you need to add a period.\n\nLESSON 5\nThe Tag in the Middle\n\nWe've gone through tags in the beginning. (I said, \"I love you.\") We've covered tags following the quote. (\"I love you,\" I said.) Now I'm going to teach you about tags that sit smack-dab in the middle of the quote.\n\nHere's a sentence with no punctuation:\n\nNo Kyle said with a laugh she's never been with another woman\n\nFirst, let's put the quotation marks in. Remember, they go around whatever words come out of Kyle's mouth. It's tricky, though, because he says something, then you have the tag identifying Kyle as the laughing speaker, and then he says something else.\n\n\"No\" Kyle said with a laugh \"she's never been with another woman\"\n\nNow, remember how quotes have to be set off from the tag with a comma? In this case, you need two.\n\n\"No,\" Kyle said with a laugh, \"she's never been with another woman.\"\n\nYou try it:\n\nI would like to make love to you the man said right here, right now\n\nChoose the right one: \nA.\n\"I would like to make love to you,\" the man said, \"right here, right now.\"\nB.\n\"I would like to make love to you\" the man said right here, right now.\"\nC.\n\"I would like to make love to you, the man said right here, right now.\"\n\n\n\n\n\nThe answer is A. \n\nNow suppose Kyle says something longer:\n\nNo, she's never been with another woman Kyle said with a laugh as far as I know she's not bi-curious at all\n\nIn the above example Kyle says one complete sentence, then there's the tag, and then he says something else that's another complete sentence. Here are where the quotation marks go:\n\n\"No, she's never been with another woman\" Kyle said with a laugh \"as far as I know she's not bi-curious at all\"\n\nNow, look at the above example and see how many sentences you see. \n\nThere are two. Where you divide them is up to you. You can connect the tag to either the first quote or the second. \n\nIf you attach the tag to the first quote, you need a period after \"laugh\". That makes the next quote a complete sentence on its own, so it needs its own capital and ending mark:\n\n\"No, she's never been with another woman,\" Kyle said with a laugh. \"As far as I know she's not bi-curious at all.\"\n\nIf you attach the tag to the second quote, it should be this way:\n\n\"No, she's never been with another woman.\" Kyle said with a laugh, \"As far as I know she's not bi-curious at all.\"\n\nThat reads a little awkwardly, though. Still, the choice is up to you.\n\nHere's your chance to see if you understand:\n\nI can't believe it he said with a grin I actually saw her panties\n\nThere are two correct answers. Here are your choices: \nA.\n\"I can't believe it he said with a grin I actually saw her panties.\"\nB.\n\"I can't believe it\" he said with a grin, \"I actually saw her panties.\"\nC.\n\"I can't believe it,\" he said with a grin. \"I actually saw her panties.\"\nD.\n\"I can't believe it,\" he said with a grin. \"I actually saw her panties!\"\n\n\n\n\n\nAnswer: C and D \n\nREVIEW:\nRule 7. If you put the tag in the middle of a quote, you can attach it to the first quote or the second. Follow the other rules for adding punctuation. Make sure each sentence has its own ending mark.\n\nLESSON 6\nParagraphing Dialogue\n\nGenerally, every time someone new speaks, you start a new paragraph. On the Web, that means a double return, not indenting. Here's an example from my story, \"Hostile Takeover\":\n\n\"Tired?\" Rockwell's deep voice startled her out of her reverie. He stood not two feet away. Her father was busy lining up his next shot.\n\n\"What?\" She sat upright on the barstool. She must have sunk down during her daydream.\n\n\"You looked like you were falling asleep. Don't stay up on my account.\"\n\nRemarkably, her father agreed. \"Absolutely. If you're tired, baby, go to bed.\"\n\n\"All right.\" She edged away from Rockwell, smiling nervously. \"Good night, Mr. Rockwell.\"\n\n\"Good night, Fiona.\" He paused and smiled at her, his hand wrapped around his pool cue. \"Sleep well.\"\n\nNow suppose one person is saying a lot. Then it gets more tricky. You have to apply a different rule for paragraphing by looking at the content of what they're saying. In general, paragraphs are made up of several sentences that talk about one idea. In stories, the sentences may revolve around an action, rather than an idea. \n\nHere's another example from my story, where a character is saying quite a lot. The first paragraph deals with her thoughts about another character. The second paragraph is a different set of ideas relating to something she did. \n\n\"My God, when we went riding that day, I was trying to figure out how to seduce you! Is that your game? Is that how you really get your kicks? I'll bet that's it. You find a virgin to be your sexual Pygmalion. Then the minute she seems to act like the sleazy slut you were training her to be, you shun her and watch her make a fool of herself. Groveling at your feet for one lousy kiss.\n\n\"Well, fuck you! I don't want to be a whore! I did those two guys because I had to! I didn't want to. I didn't like it. I hated it!\"\n\nLook at the end of the first paragraph. Notice that there are no closing quotation marks! Ooooh! \n\n\"But, Whispersecret,\" you say, \"that kind of goes against the rule stating that quotation marks hug what's being said, doesn't it?\" \n\nYep. But that's the way it is. Look, I'm not the one who made up the rules! You omit the closing quotes on the first paragraph to indicate that the same person is still speaking.\n\nREVIEW:\nRule 8. Each time someone new speaks you start a new paragraph (double indent).\nRule 9. If one character has a long speech that stretches over more than one paragraph, you only need the closing quotation marks at the end of the last paragraph.\n\nTHE FINAL EXAM\nThat's it. That is all I can think of to tell you about the rules of dialogue and punctuation. Now, let's see if you've really got it. Punctuate the following sentences. Then check your answers carefully at the end. Aim for one-hundred percent; all true writers do.\n\n1.\nI always swallow she said smugly \n\n2.\nhe shouted at the top of his lungs I understand, mistress (Be careful with this one. Notice how he's shouting.) \n\n3.\nshe loves you so much Sara said I can't believe you're dumping her \n\n4.\nTabitha said in a sultry voice that feels so damn good. Don't stop \n\n5.\nI'll never submit to you she screamed, straining against her bonds you disgust me\n\n6.\nLifting his face from between her thighs, he asked what did you say\n\n7.\nTara chewed her gum noisily as she said the problem with guys is they always go right for the clit. I mean, don't be in such a hurry. Take it slow, tease me a little first. I want some time to enjoy it. You know what I mean? And how come so many of them like shaved pussies? I mean, why would they want to look at a mound that looks like a little girl's? I think it's sort of perverted myself. (Add punctuation and divide this into two paragraphs.) \n\n8.\nYou suck him, Ally, I said. No, you first, Ally replied. I frowned. How come I always have to go first? Because I'm the oldest and I said so. (Hint: Two people are speaking. They each say two things. Don't forget to divide this into paragraphs.) \n\nGood luck! Happy writing!\n\n\n\n\nANSWERS\n\n1.\n\"I always swallow,\" she said smugly. \n\n2.\nHe shouted at the top of his lungs, \"I understand, mistress!\" \n\n3.\n\"She loves you so much,\" Sara said. \"I can't believe you're dumping her.\" (You COULD have a comma after \"said\" if you choose, but I think it's better with a period.)\n\n4.\nTabitha said in a sultry voice, \"That feels so damn good. Don't stop.\"\n\n5.\n\"I'll never submit to you!\" she screamed, straining against her bonds. \"You disgust me!\"\n\n6.\nLifting his face from between her thighs, he asked, \"What did you say?\"\n\n7.\nTara chewed her gum noisily as she said, \"The problem with guys is they always go right for the clit. I mean, don't be in such a hurry. Take it slow, tease me a little first. I want some time to enjoy it. You know what I mean? \n\n\"And how come so many of them like shaved pussies? I mean, why would they want to look at a mound that looks like a little girl's? I think it's sort of perverted myself.\"\n\n8.\n\"You suck him, Ally,\" I said. \n\n\"No, you first,\" Ally replied. \n\nI frowned. \"How come I always have to go first?\" \n\n\"Because I'm the oldest and I said so.\""
    ],
    "authorname": "Whispersecret",
    "tags": [
        "dialogue punctuation",
        "punctuating dialogue",
        "how to use quote marks",
        "quote marks",
        "dialogue",
        "writing dialogue",
        "punctuation",
        "punctuation help",
        "writing help",
        "how to punctuate dialogue"
    ],
    "category": "How To",
    "url": "https://www.literotica.com/s/how-to-make-characters-talk"
}