{
    "title": "St. Vicente Ch. 03",
    "pages": [
        "There you go! For your pleasure.\n\nJust a note: please do not leave a comment if it's going to be about the number of weeks it'll take for a typhoid shot to actually work. I did my research. I know.\n\nOther than that, knock yourselves out! (:\n\nMuch love xx\n\n*\n\nShe started when the door to the cabin opened, though she shouldn't have been surprised. She'd been expecting his visit for hours now. She didn't think she could get away with what she'd done to him, accident or not.\n\nAdrian stepped in and shut the door. The lock turned with an ominous click.\n\nIt reminded her of the other night. The night when he'd barged into her room, slid a hand to her throat and tried to choke her to death. The night when he'd raped her and taped himself doing it.\n\nShe'd been so scared then. She'd backed away as he walked toward her. But not this time. No, she was tired of being afraid of him. She'd seen the worst he could do, and honestly, it wasn't as bad as she'd imagined.\n\n\"What?\" she asked, scooting to the edge of the bed and standing up. She wanted to be on her feet when she faced him. It would give her the leverage she needed if she had to defend herself.\n\nHe didn't move from his position in front of the door. He simply stared at her, his eyes moving appreciatively over her body, taking in her shorts and tank. She frowned. She knew for a fact that he wasn't attracted to her. So why did he stare at her that way? Was it just to make her uncomfortable?\n\nShe crossed her arms over her chest. Well, if that was his goal, he wasn't going to succeed.\n\n\"Did you come in here just to stare at me?\"\n\nThe anger in her voice made his eyes rise to meet hers. As she stood there glaring at him, he realized something belatedly.\n\n\"You're not afraid of me.\"\n\nHer spine straightened. \"You're damn right I'm not.\"\n\nThe change was impressive. Just a day ago, she'd sat trembling in a chair, not wanting to meet his eyes. And now she was trying to stare him down with those exotic brown orbs. She was challenging him. It heated his blood.\n\n\"Why?\" he asked, mirroring her stance and leaning against the door.\n\nShe flicked her hair out of her eyes. \"'Cause I realized that fear was the only power you had over me. I was afraid of what you could do to me if I didn't listen to you.\" She smiled, but it was sad. \"But I think I've already been through the worst.\"\n\nAdrian felt his throat dry up, though he didn't show any outward sign that her words had affected him. \"You're still alive.\"\n\n\"There are some things worse than death. But I doubt you'd understand that. Nothing you do now could be worse than the other night.\"\n\nHe stared at her for a long while and she stared back unflinchingly. She wanted to show him that she wouldn't be taking any shit from him. Not anymore.\n\nBut when he began pulling his shirt off, she took an involuntary step back.\n\n\"What are you doing?\" she asked, her voice wavering slightly. He flung his shirt away and unbuttoned his jeans.\n\n\"What the hell-.\"\n\nClad in black boxer-briefs, he motioned with both hands for her to come over.\n\n\"Give me your best shot.\"\n\nShe stood where she was, trying her very best not to let her eyes run down the length of his body. She'd always been an admirer of the male physique and it was tough for her not to indulge herself. She closed her eyes and took a deep breath, praying for control. Remember who he is and what he's done, she told herself.\n\n\"What do you mean?\" she asked a moment later, trying for a reasonable tone.\n\n\"What I mean is that you've been giving me way too much shit about that night. It was my job to do it, do you understand that? It was a fixed plan. We all vowed to follow it through to a T.\"\n\nShe was outraged. \"What kind of miserable bas-.\"\n\nHe held up a hand.\n\n\"And I'm sick of hearing about how I manipulated you, how I used you, how I forced you. I can't deny that I did those things, but I did not enjoy it.\" He took a deep breath, as though he was bracing himself. \"So now I'm gonna give you a chance to let it all go.\"\n\nShe took another involuntary step backward, hitting the bedside table and knocking over a lamp. \"You're going to kill me?\"\n\nHe swore under his breath, raising a hand to his hair agitatedly. \"No, god damnit. I want you to take it out on me. Vent your frustration. Let the anger loose because I'm fucking sick of hearing the same shit from you over and over again.\"\n\n\"You actually think that I'll forgive you if you let me hit you?\" she scoffed.\n\n\"No,\" he admitted. \"But it'll be a start.\"\n\nShe rolled her eyes. \"I'm not going to hit you. Violence solves nothing.\"\n\nHe raised an eyebrow. \"Come on, do it.\"\n\n\"No.\"\n\n\"Do it.\"\n\n\"No!\"\n\n\"Do it!\"\n\n\"I said no! God!\"\n\nHe smiled at her wolfishly. \"Come on, princess. I know you want to.\"\n\nShe threw the lamp at him. And the remote control. And the several books that were on the nightstand. They hit his head, his chest, his arms. But he stood there, simply taking it.\n\nGod, it felt good.\n\nShe slid onto the bed and grabbed the pillows, flinging them at him. But it wasn't enough. It didn't feel like enough. She wanted to hurt him. Really hurt him.\n\nShe jumped off the bed, thinking in the back of her mind that she probably looked like a crazed person. But she didn't care.\n\nShe grabbed him by his neck, pushing him against the door. He was so much bigger than her that she had to use both hands. All the better to squeeze with, my dear, she thought.\n\nShe wanted to choke the life out of him. She wanted to see his eyes flicker in defeat like hers had. She wanted to see him struggle to get air into his lungs. She wanted him to suffer.\n\nBut no matter how hard she choked him, he seemed to be taking it well. The color left his face, but he managed to remain upright, his breath wheezing from mouth. Damn it, she just didn't have the strength to choke the man properly!\n\nFar from giving up, she punched him in the stomach with all the strength she could muster. He double over and she pushed him to the floor, straddling him.\n\nNow her violence had some audio accompaniment.\n\n\"Son of a bitch! You think you can get away with raping me? I don't think so!\"\n\nShe grabbed him by his hair again and shoved his head onto the parquet flooring. A loud, satisfying thud echoed through the room. She repeated the move several times until she was out of breath.\n\nBut she didn't give up. She raked her nails down his torso, watching as red lines formed on his skin. She wished she had claws so she could pierce through his skin and do much more damage.\n\nWhen she was through making him look like a candycane, she pounded on his chest. Each punch made a loud hollow noise, increasing her satisfaction.\n\nWhen she was truly out of breath, she sat back, admiring her handiwork.\n\nHe opened his eyes. \"You done?\"\n\nShe flicked her fringe off her sweat-soaked forehead. \"For now.\"\n\nShe was still sitting on him with her legs spread on either side of him. His entire body ached from the assault but he couldn't get his mind off the fact that she was perched on him cowgirl style. Her forehead was covered in a thin layer of sweat and her eyes were bright with satisfaction. He could feel the silky skin of her inner thighs pressed against his waist, teasing him. And that smile -- she was smiling down at him triumphantly -- made his breath catch.\n\nJesus, what the hell was wrong with him? He'd had sex two days ago, even if it hadn't been the best. It should've taken the edge off. Cleared his mind. Quenched the thirst. So why couldn't he stop thinking about this girl in a sexual way?\n\nAll he wanted to do was pull those damn shorts off her, roll her under his body and thrust into her hard, over and over again, until she screamed in his ear and clung to him for more.\n\nBut he wouldn't do it. He couldn't. If it happened, he'd call it desire while she'd call it rape. One black mark on his soul was enough. He didn't think he could handle the guilt of another mistake.\n\nShe looked down at him, wiping the layer of sweat from her forehead. He looks like a wreck, she thought. Yet, despite that, he smiled at her. \"You dish it well.\"\n\nHe sat up slowly, bringing them almost nose-to-nose.\n\nHe was suddenly too close. Tressa wasn't comfortable with his nearness. Or with his smile. His voice had been soft, intimate and the timber of it seemed to reverberate through her. She wanted to pull back, to run. But she promised herself she wouldn't run, and she wasn't going to.\n\n\"Well, you deserve it,\" she murmured, feeling spurts of adrenaline belatedly pumping through her as she struggled to sit still.\n\nHer breath was still coming out in short bursts, brushing against his lips. His eyes dropped to admire the fullness of hers, glistening as she ran her tongue over them. God, they looked so succulent, so sweet, so damned tempting.\n\nHe would've taken advantage of the situation had he known that similar thoughts flew through her mind. She was just a woman; she couldn't help but admire the strong set of his jaw, the sultry fringe of his lashes bordering navy blue eyes, especially since he was so close to her. He had no flaws, as far as she could see. But he was far from perfect.\n\nShe'd never been this close to a man before. All her suitors had been too scared of her father to make an advance. They usually preferred a quick kiss on the hand or a peck on the cheek. No one had taken as much advantage of her as this man had. Part of her hated that he'd taken too much advantage and caused her so much pain. But the other part of her knew that she couldn't have found anyone more handsome to do so.\n\nAdrian's eyes rose back to hers. There was something different in that look. Something new. Foreign. He blinked when he recognized it as desire. He'd be damned if there wasn't. It might be an aftereffect of the violence, but the bottom line was that she desired him. After everything he'd done, she still desired him. The thought of it enflamed him and he hardened instantly.\n\nShe gasped as her seat suddenly became a little more uncomfortable. She could feel the hardness through his boxer briefs, making her react in the worst way.\n\nHe leaned in close, so close that she could taste his breath on her tongue. He hovered there for an eternity, his eyes never leaving hers, giving her ample opportunity to pull away.\n\nThen slowly, hesitantly, he pressed his lips to hers.\n\nIt was slow. It was wet. It was sweet. His lips slid over hers repeatedly, capturing her sulky bottom lip and suckling it between them. His tongue slid out, tracing the shapely curve before tentatively touching hers. She trembled on his lap, reaching up to put her hand on his...\n\n\"Adrian?\" Luc's voice was like a bucket of ice water over her head. She pulled away quickly, standing up. Her body was still trembling but she refused to acknowledge it. Dear god, what had she done?\n\n\"Adrian! Are you in there? Grandfather needs to speak to you.\"\n\nAdrian looked up at the princess. She looked distraught, as though she'd committed a vile sin. Sinful though it might have felt, it certainly hadn't been vile. In fact, the taste of her in his mouth was like honey.\n\nBut it looked like he wouldn't be getting any other kind of honey tonight.\n\n\"I'll be right there,\" he called to his brother and reached for his clothes.\n\nShe turned away as he dressed. She couldn't bear to look at him and face what she'd almost done. How had she lost control like that? How had he made her feel that way?\n\nWhen the door clicked shut, she moved over to the bed and sat on it heavily.\n\nShe needed to pull herself together. Just one kiss and she was falling apart in his arms? What the hell was that?\n\nHe was the man who'd raped her. She had to remember that fact. The man who'd taken her virginity from her and taped it all. Nothing he did could make her forgive him.\n\nHe was a hateful, perverted bastard. She should hate him with all her being. She did hate him... didn't she?\n\nShe groaned. It was all muddled now. Everything had been so clear to her before he'd kissed her so tenderly. Now all she could think about was the taste of him on her tongue. The feel of his lips. The image of his body, almost naked and pinned under her.\n\nGod, she was in a lot of trouble.\n\n*\n\nMarcie stood in the shower, her forehead laid against the cool tile. She couldn't wrap her head around the events of the day. It had happened too quickly. One moment, she was being picked out of bed entirely nude by Bull, and the next, the house had been blown up.\n\nIt had all been too much like a dream. She needed to find her center again.\n\nShe gasped when hands encircled her from behind, but stopped struggling when she recognized the feel of his body. A smile overtook her lips instead, and she relaxed against him.\n\n\"What were you thinking about?\" he asked her, clasping his hands around her waist.\n\n\"Everything,\" she murmured, turning a little so she could look into his eyes. \"It all happened so fast.\"\n\nHe rested his chin on her forehead. \"Yes, it did.\"\n\nThey stood in the shower for several minutes, simply letting the water cascade down their bodies.\n\nThen she turned, cupping his cheek and looking deep into his eyes. She wanted to be able to read his emotions when she asked the next question. \"Why did you save me today?\"\n\nHe looked taken aback. \"Why not?\"\n\nShe bit her lip. \"I'm not important. Just your housemaid. I'm only someone you pay for sex, Lucio.\" Her eyes searched his with hopeful intensity.\n\nHe swallowed. What did she mean? Was she asking if she meant more to him than just that? Did she want to mean more to him?\n\n\"Marcie, I...\" He paused, not knowing what to say.\n\n\"You what?\" she asked, her brows wrinkling.\n\n\"I...\"\n\nHe didn't know what else to say. He didn't have the words. Marcie continued to look at him expectantly. She felt like her life hung on his next words.\n\nHe tilted her head to his, cupping her cheeks in his hands. The intensity of his eyes made her breath hitch. Her fingers came up to grasp his as his lips caressed hers. Smooth and light. Clinging. Willing her to respond. Marcie didn't know what to think. What did this mean?\n\nSoon, everything stopped mattering. Nothing but his kiss, his hands, his scent, his feel, seemed to matter. When she was in his arms, it seemed as though no words were necessary between them.\n\nIf only that were true when they were apart.\n\n*\n\nGrandfather did not look good. His complexion had a grey cast to it and his breathing was none too steady. He looked weak when he motioned Adrian over to his bedside.\n\n\"My boy, what is your plan?\" he asked, his voice raspy. It was nearly 12, way past his usual bedtime.\n\nAdrian knelt beside the bed, clasping his hands together.\n\n\"We're going to St. Vicente.\"\n\nAt Sergei's soft gasp, Adrian reached out to hold the old man's hand. \"It's the safest place for us now. Augustine is maximizing his security to look out for his daughter. By now, he should know that she escaped the bomb and must be dispatching more men to search the surrounding grounds. The best thing we could do now is hide under his nose. He'll never find us there.\"\n\nGrandfather's eyes closed, and for a moment, Adrian thought he had fallen asleep. After a few seconds, they flickered open again. \"Yes,\" he replied. \"It's a good plan. I have some contacts you could call, Adrian.\"\n\nAdrian already knew about his grandfather's contacts; it was part of his research. In fact, he'd managed to trace the coast guard, Alex, from his grandfather's extensive stories of his loyal supporters. Despite already having the info, he let his grandfather talk, knowing the old man liked to do so if the topic was about St. Vicente and his loyal men.\n\nSoon, Sergei fell asleep and Adrian tucked the loose covers around him, knowing that the temperature would drop at the dead of the night. Grandfather suffered from arthritis and it would not help the situation if the cold air got to his bones.\n\nAdrian closed the door to the bedroom with a soft click. He turned in the direction of the deck, thinking of getting some air, when he saw a shadow moving in the kitchen. He raised an eyebrow, walking towards it to investigate.\n\nTressa stood bent over the kitchen counter, bopping up and down on her heels. The position put her ass in the air, and he paused to admire the view. She was faced away from him but her voice sounded irritated when she whispered, \"God damnit.\"\n\n\"Why?\"\n\nShe stiffened at his voice but turned towards him slowly.\n\n\"Nothing,\" she said, breathless, wary.\n\nHe crossed his arms. \"Why are you in here?\"\n\n\"I, um,\" she rocked back on her heels, \"I'm just waiting for the bathroom.\"\n\nHe gave her an odd look. \"In here?\" The bathroom was opposite the kitchen, not in it.\n\nShe nodded.\n\n\"You do know that the bathroom's there, right?\" He pointed to the small door nearby.\n\n\"Yes, but it's occupied.\"\n\n\"By who?\" He made to knock on the bathroom door, but she called out and stopped him.\n\nHe waited for an explanation.\n\n\"Marcie and Lucio are in there,\" she said in a stage whisper.\n\n\"So?\"\n\n\"They're... you know.\" She raised her eyebrows for dramatic effect.\n\n\"Fucking?\" he asked, loving the way she averted her eyes shyly. If she were any fairer, her cheeks would be blossoming with color. \"For how long?\"\n\n\"About half an hour,\" she said, hopping lightly on the balls on her feet.\n\n\"Then they're probably done already.\" He raised his hand to knock again, but she stopped him, hissing, \"You're not supposed to do that!\"\n\n\"Not supposed to do what?\" he asked, baffled.\n\n\"Disturb a couple making love. It's not good, like waking a sleeping baby.\"\n\nHe rolled his eyes at her absurd logic and knocked anyway.\n\nWhen Luc answered, he asked his brother to vacate the bathroom ASAP. Luc grumbled, but complied once Adrian explained why.\n\nTressa entered the bathroom so quickly that the door almost caught Marcie's foot as she shut it.\n\nOn the other side of the door, Adrian heard her relief-filled sigh of 'oh my god' and grinned, shaking his head.\n\n*\n\nShe finally fell asleep on the settee in the corridor around dawn. She'd been restless all night, pacing. Her life was quite literally, in shambles. She had nothing left. Everything she had before was linked to her father. She wanted nothing of it now. What he'd done was unforgivable. She wouldn't be able to look at him without watching the house blow up at the back of her mind.\n\nShe needed a new plan, but she didn't know where to start. She had no money of her own, nobody she could trust. She had no credentials except for her degree. As a 23-year-old, she knew it wasn't much. God, where could she go? What could she do?\n\nShe fell asleep troubled by those thoughts.\n\nWhen she awoke, the boat was still. She sat up slowly, wondering where everybody was. She couldn't hear anybody moving around, despite the silence.\n\nQuietly, she made her way up to the deck.\n\nThey were docked at a small port. Little shops lined the street opposite her, selling various fishing equipment. There was little crowd. Only two other boats were parked near them. Where were they?<br>\n\nShe moved nearer to the stern, leaning over the railing to get a better look at the place.\n\n\"I wouldn't go much further,\" a voice warned from behind her.\n\nShe whirled around instantly, her heart beating wildly in her chest. Bull. Jesus, she hadn't even heard him walking around.\n\n\"You scared me,\" she told him, raising a hand to her chest.\n\n\"I know,\" he returned with a ghost of a smile.\n\n\"So where are we?\" she asked, trying to get her heartbeat under control.\n\n\"We're just picking up supplies.\"\n\nShe raised an eyebrow at his evasion. \"Yes, but where exactly?\"\n\nHe shrugged. \"It's not important. Would you like some breakfast?\"\n\nShe put her hands on her hips. \"What do you have against telling me? It's not like I can inform anyone else of our location. Do you see a wire on me? A camera? A goddamn phone?\"",
        "His voice was as professional as ever. \"It's just safety procedure, princess.\"\n\nShe scoffed. \"Right. Even if you told me where we were, do you actually think I could run away? I have no money. I have nothing. I can't even run back to my father!\"\n\nHe said nothing, simply staring down at her. That only seemed to rile her more.\n\n\"This is all your fault!\" she accused, stabbing him with her finger. It hurt, but she didn't care. \"If you and your stupid friends hadn't kidnapped me, I would've been happy! Safe! Not running around on some boat in the middle of nowhere!\"\n\nHe looked down at the finger she was trying to grind into his chest. \"You would be happy living with a father who would kill you to save his throne?\"\n\nShe looked taken aback by his words. Then she attacked again. \"Ignorance is bliss.\"\n\n\"If you say so,\" he demurred, then changed the subject. \"Would you like something to eat?\"\n\n\"No, I won't!\" she snarled. \"Stop asking me that!\"\n\n\"You haven't eaten for an entire day, princess.\"\n\n\"Ok, look,\" she said, trying to calm herself, \"I don't think it's appropriate for you to call me princess anymore. Just call me Tressa.\"\n\nHe shrugged.\n\n\"And as for your offer to feed me, I think it's unnecessary. We both know that you'd kill me in a second if you were given the chance, so why bother to act like you care whether or not I starve?\"\n\nThis time, Bull frowned. She was more surprised than she would care to admit to see an actual emotion on his perpetual poker face.\n\n\"I have orders not to hurt you.\"\n\nShe rolled her eyes. \"That's very funny, considering what's already gone down.\" She pushed past him and made for the stairs.\n\nBull watched her go, still frowning. He'd never wanted to hurt her, but he didn't think she would understand that. He was still the enemy in her eyes.\n\nTressa descended the stairs, thinking to use the bathroom to wash up. But as she entered the corridor, an irresistible smell wafted to her. She took tentative steps to the kitchen and peeked in.\n\nOn the dining table was a tall plate of strawberry pancakes and a sweating jar of maple syrup. Her mouth watered at the sight. Strawberry pancakes. Her favorite. How had he known? Is that why he kept asking her if she'd like anything to eat?\n\nShe didn't know why, but her eyes quickly began filling with tears. Ah, god. Why was she becoming emotional for every little thing? Something was definitely wrong with her.\n\nShe turned to hide in the bathroom to wipe her tears away, but she hit something solid and bounced off it. Through her tear-filled eyes, she looked up at Bull, who looked very concerned.\n\n\"Why are you crying?\" he asked, obviously confused.\n\n\"I...you...the...\" But she couldn't finish her sentence. She chose to duck into the bathroom instead.\n\n*\n\nIt was mid-afternoon when Adrian returned with his brother and Marcie. They hauled supplies onto the yacht, taking care not to bruise the delicate merchandise.\n\nThey'd been contacted by Julian Merino, grandfather's ex-financial advisor, about an outbreak of typhoid fever in the fishermen's colony. Apparently, it had taken root a few weeks back and was killing at least one person everyday. The cause, of course was the unclean drinking water that the colony tapped on because they had no other option.\n\nThus, Adrian had contacted a friend from University and asked him to ship a large amount of Typhoid vaccines to the port they were making a stop at. It was imperative that they got help to the people as soon as possible.\n\nAs he lugged cases of drinking water onto the yacht, he made sure he shut down his palmtop and mobile device. He didn't want Augustine's men tracking him down like they'd done the last time. He'd changed his number since then, but he wasn't taking any chances.\n\n\"Is that the last of it?\" Bull asked, poking his head out from below.\n\nAdrian nodded, handing him the last box. Marcie exited grandfather's room as Bull walked away to store the box.\n\n\"How's he doing?\" Adrian asked her.\n\n\"He's still sleeping, but his color looks better,\" she replied, fidgeting with the hem of her oversized t-shirt. She'd been wearing Luc's spare shirt and pants the entire day yesterday and though they tried, they couldn't seem to find anything for her to wear at the port. She had to settle for a men's white fishing shirt that said, \"Go Fish!\"\n\n\"That's good. Is he well enough to walk?\"\n\nMarcie shook her head sadly. \"He tried to get up to stretch his legs just now, but he just didn't seem to have the strength.\"\n\nAdrian closed his eyes, taking a deep breath. He was losing his grandfather. It was happening in front of his eyes.\n\n\"What's with all the boxes?\" The princess's voice echoed in the small interior of the yacht.\n\nHe looked up to find her examining the labels on the boxes. Her back was turned to him. She was probably addressing either Bull or Luc who were standing in her line of sight. But he chose to answer her anyway.\n\n\"It's antibiotics.\"\n\nShe froze. He could see her shoulders tensing perceptibly before she turned to face him.\n\n\"W-what for?\" she asked, trying to meet his eyes but failing.\n\n\"Typhoid fever. There's been an outbreak at the colony we're visiting.\"\n\n\"Oh,\" she said, her brow wrinkling, \"but I thought typhoid wasn't a big problem in St. Vicente?\"\n\n\"Where you lived, probably,\" Luc said from behind her. \"But where we're going, it's taking lives as we speak.\"\n\n\"Oh.\" She looked down at her hands. \"Well.\" Everyone waited to see if she would say anything else.\n\nMarcie broke the silence. \"Maybe I should make everyone something to eat. Pasta would be nice, yes?\"\n\nAdrian tore his eyes away from the princess and turned back to Marcie. \"Yes, thank you.\"\n\nAs Marcie walked in the direction of the kitchen, Tressa finally noticed how awkward the girl looked in the sloppy clothes. She wouldn't be caught dead wearing anything like that in public.\n\n\"Marcie?\" she called hesitantly, all too accustomed to being ignored by her. But Marcie stopped and looked over her shoulder expectantly.\n\n\"Would you like something of mine to wear? I, um, I did pack a few things...\"\n\nMarcie looked over Tressa's head. Tressa didn't have to turn to see that she was asking the leader for permission. But Adrian must have acceded because Marcie smiled at her and said thank you.\n\n*\n\nIt was dusk again and they were at sea. Tressa sat near the bow of the boat, resting her chin on her upraised knees. The movement of the boat rocked her back and forth, and she felt comforted by that simple motion. She'd probably been sitting there for hours now, but she didn't feel compelled to move. Her mind was peacefully blank after hours of riotous thoughts and she preferred it that way.\n\nShe was sitting in the dark when Adrian's voice reached her.\n\n\"Come down. It's time to give you the shot.\"\n\nShe looked up, squinting at his image in the darkness. Somehow, she found him much less intimidating when she couldn't see his features.\n\n\"What shot?\"\n\n\"Typhoid. We need to do it quickly. Come on.\"\n\nShe forced herself to uncurl from her little ball of serenity. It hurt like a bitch, especially since her legs and butt had gone numb hours ago and she'd barely noticed. Slowly, she ambled down to the kitchen and seated herself at the table while Adrian prepared the shot.\n\nShe reached for the small vial of liquid on the table, checking to make sure he really was injecting her with a typhoid shot and nothing else. She didn't put it past him to drug her.\n\n\"It really is a typhoid shot. The seal is unbroken. You can check.\"\n\nShe checked. It seemed fine to her.\n\nAs he seated himself next to her and produced the needle, she asked, \"Are you using a new one?\"\n\nHe pointed to the tray with the used needles.\n\n\"Good,\" she said, then shut her eyes.\n\nA few seconds later, she shrieked. Ohmigod! How big was that goddamn needle? The unbearable pain!\n\n\"Jesus Christ, woman! I haven't touched you.\"\n\nShe opened her eyes, noting that he'd just pulled the vaccine into the tube. He was looking at her as though she was out of her mind. Which she probably was. She really wasn't afraid of needles, though. The anticipation of pain, however, was an entirely different thing.\n\n\"Sorry,\" she murmured, feeling only slightly embarrassed. A part of her still was still wound up in anticipation.\n\n\"Ok,\" he said, finally done preparing the injection and cleaning a patch of skin on her arm. \"Now take a deep breath.\"\n\nShe followed orders and the needle went through her skin. The anticipation was much worse than the actual pain. She let out the breath she held as the needle exited her body and was covered by an alcohol swab.\n\n\"Ok?\" he asked, pasting a little beige Band-Aid over the puncture.\n\n\"Fine,\" she murmured, holding the Band-Aid down with her index finger.\n\nShe watched as he moved around the room, disposing the used needles and vials. He moved with an easy grace though his movements were most definitely masculine.\n\nHe had really broad shoulders. How had she not noticed them before? They looked really huge to her now that she was looking at him from the back in an enclosed space. His waist was narrow compared to the bulk he carried on his shoulders. A lean wrestler's body. That's what he had. And every inch of it was covered in tanned, olive skin...\n\n\"Have you eaten?\" he asked, still facing away from her. She started guiltily, even though he couldn't possibly have known she was looking at him.\n\n\"No.\"\n\nHe washed his hands in the sink and turned to the stove. \"There's still some pasta left over. I had to keep Luc away with a stick but it's still here.\"\n\nTressa raised an eyebrow. Had he just made a joke?\n\n\"I, um, I'm kinda sick of pasta,\" she admitted.\n\nThe expression on his face was the closest to horrified that she'd ever see on him.\n\n\"What?\" she asked, defensive. \"You served me pasta everyday back at the house!\"\n\n\"That's our food. Who could get sick of that?\"\n\n\"There are different kinds of carbohydrates, you know,\" she commented pointedly.\n\nHe sighed, putting the lid back on the pan. \"So what would you like to eat?\"\n\nShe shook her head. \"I'm not really hungry.\"\n\nHe crossed his arms over his chest, leaning back against the counter. \"We're docking in a few hours. If you don't eat here, trust me, you won't get anything you like on the island.\"\n\n\"What do you mean?\"\n\nHe ran a hand through his short hair. \"We're staying with a good friend of my grandfather's. His family's poor and they can't afford much. It'll probably be pasta or more likely porridge for the next few -.\"\n\n\"I'll take a sandwich,\" she said quickly.\n\n\"Good,\" he said with a curt nod. \"What kind?\"\n\n\"Tuna?\"\n\nHe opened a cupboard and rummaged through it. \"I think we have some...\" He reached to the back and pulled out a can of tuna and mayonnaise.\n\nShe watched as he made her a nice tuna sandwich, spreading tuna quite generously on the bread slices. When he set the plate before her, she stared up at him. He was such a contradiction. How could someone have such different personalities? It confused her. Who was he, really? Was he the guy whose violent nature scared the crap out of her? Or was he the sensitive, sweet guy who tended to her wounds, made her sandwiches and kissed her like he wanted to be a part of her soul?\n\n\"What?\" he asked, wondering about that weird look in her exotic brown eyes. She looked thoughtful yet wary.\n\n\"Why did you kiss me yesterday?\" she blurted, her voice soft.\n\nHe watched as her eyelids flickered downward and she averted her eyes.\n\n\"I wanted to,\" he said truthfully.\n\nShe shook her head. \"You already told me that you don't find me attractive, so please don't lie to me. Do you want something from me?\"\n\nSo na\u00efve, he thought. True, he hadn't been attracted to her the first time he'd seen her. She'd been a real brat with a disposition that made him want to gag her.\n\nBut after that night, something had changed. Within him. Between them. It was elemental, primal, something that he couldn't spell out. A bond had formed, a connection. It was nothing like he'd felt before. She'd felt it too... hadn't she?\n\n\"Look at me,\" he said. She lifted her head, but just barely. \"Look at me,\" he repeated, more forcefully. \"I never said I didn't find you attractive.\"\n\nHer eyes widened into round orbs. \"But you told me you didn't want me. You used me.\"\n\n\"I was...\" He couldn't rebut that. He had used her. But it had been for a greater cause. \"I had no choice.\"\n\n\"So, what do you want now?\" she asked, getting to her feet and crossing her arms.\n\n\"Nothing.\"\n\n\"I'm not stupid enough to be used twice. Just be honest with me and I'll try to cooperate.\"\n\nHe reminded himself that his goal was to be nice to her. \"I'm not trying to use you. We don't need anything from you now. We've led your father on a wild goose chase and that's what we wanted.\"\n\nShe was stumped by that. \"What do you mean?\"\n\n\"He knows he hasn't killed us and has sent more men out looking for all of us. His attention is probably focused on finding you now rather than his day-to-day.\"\n\nShe refused to let herself feel pain at the thought of her father. She simply refused. \"So what are you going to do?\"\n\nHe shrugged. \"We don't have a plan of action yet. We need to check out the situation in the colony first.\" He pointed to her sandwich. \"Eat your food now.\"\n\nShe shook her head. \"I'm not buying that. You know exactly what you're going to do, don't you? You're just not telling me.\"\n\nHe sighed, feeling a headache coming on. \"Yes, I do. Now, does that make you feel better?\"\n\nShe nodded, surprising him. \"You're keeping me captive. That puts me under your care. If you have a plan, it's less likely that I'll die.\"\n\nHe sighed dramatically and gestured to her plate. \"Eat.\"\n\nAgain, she didn't glance at her plate. \"You still haven't answered my question.\"\n\n\"What question?\" His voice was almost a growl.\n\n\"Why did you kiss me?\" Her chin was tilted upward defensively and he knew for a fact that she wouldn't leave him alone unless she got her answers.\n\nHe decided to give her the crude but absolute truth. Perhaps it would scare her enough to shut her up. \"Why wouldn't I kiss you?\"\n\nShe frowned. \"What the hell does that mean?\"\n\nHis took a step closer to her, making her fight the urge to take several steps back. His voice dipped dangerously. \"It means, princess, you were sitting on my dick, cushioning it with your soft little ass, panting pretty as you please with a sheen of sweat covering your body. Why wouldn't I kiss you?\"\n\nShe blinked several times, trying to absorb what he'd just said. It was a hard task, considering the fact that she'd never had anyone talk so crudely to her in her entire life.\n\n\"Huh,\" was the only thing that came out of her mouth.\n\nHis fingers reached up to push her fringe out of her eyes. She wanted to step back, away from him, but her legs couldn't seem to move. The flash of heat in his eyes mesmerized her, making her throat dry.\n\nThe pad of his thumb followed the sharp arch of her eyebrow, skimming down her cheekbone to land on her lips. He traced their plumpness and her breath caught.\n\n\"Anymore questions?\" he asked, his fingers now resting on her chin.\n\nShe shook her head mutely.\n\n\"Good.\"\n\nHe was very smooth, she had to give him that. When he focused his gaze on her, she could forget that everything else existed. When he laid his lips against hers, it made her feel like a new part of her had come alive. It was like a kind of drug to her, something new and exciting. Despite what had happened between them before, she found herself responding, her body slowly moving towards his.\n\nHis tongue did magical things to her, clouding her brain and her better judgment. He was relentless, licking, suckling, nibbling. Claiming. And he was so gentle, his fingers barely touching her as his lips fused with hers. It made her feel cherished, desired, necessary to someone. She wanted, no, needed, to feel necessary again.\n\nHer hands had been clenched at her sides. Now they relaxed, moving upward to rest gently on his waist. He broke their kiss, leaning away slightly to murmur, \"Touch me.\"\n\nHe didn't give her the time or opportunity to object. As his tongue dueled with hers, his hand captured hers and moved it under his sweater. He jerked when the coolness of her hand touched his skin.\n\nTressa was starting to feel a little light-headed. There was too much pleasure. His kiss, his body. She was starting to feel like she had no control over her own body's reactions. She wanted to touch him. Everywhere. Wrap herself around him and drown in the pleasure she knew he was capable of giving. She just wanted to feel wanted again.\n\nHis lips moved to her neck, kissing it, his tongue lapping against the ticklish spot she had. She trembled, clutching his shoulders. He began pushing her back, lifting her and she felt something hard beneath her butt. A counter?\n\nShe couldn't care less.\n\nHis movements were slightly hurried now as his fingers delved beneath her tank top. The shock of his fingers made her tummy contract. She moaned, biting her bottom lip. His fingers were making her lose her sanity.\n\nThe girl was driving him insane, he thought. She was so utterly sexual in his arms, purring like a kitten and clinging to him for more. She was already trembling so violently and all he was doing was caressing her skin lightly with his fingers.\n\n\"So fucking responsive, princess,\" he growled, biting down on the fold of flesh at her shoulders.\n\nAt his address, she stiffened instantly. Her fingers, which had moved up to hold the back of his head, fell away. He raised his head and saw that shock had overcome her features.\n\nShe pushed his hands away roughly and slipped off the counter, her legs dipping dangerously as she struggled to snap out of the bubble of pleasure. He reached out to steady her, but she pushed his hands away.\n\n\"What?\" he asked, confused by the change in her.\n\nShe leaned against the wall, trying to gain some semblance of control. \"I can't. I just can't.\"\n\nHe adjusted his sweater, waiting for her to explain.\n\nShe covered her eyes with her hands. \"What am I thinking? I can't possibly let myself... just a few days ago you... God!\"\n\n\"Don't do this to-.\" He made to step forward but she signaled for him to back off.\n\n\"Don't come near me! I can't think when you're near me.\" She slid along the wall, moving closer to the doorway. \"I have to get out of here.\"\n\n\"It's a yacht, princess. There's only so far you can go.\"\n\n\"I don't care. I just need to go.\"\n\nHe watched as she ran out of the kitchen, shaking his head. He didn't know what to do with her and it would take too much energy to work the kinks out of their barely-there relationship. She had issues. So did he. The only difference was that he was the cause of her issues. And nothing he did seemed to make it better.\n\n*\n\n\"Oh my god. I think I'm going to throw up.\"\n\nThe crew looked over at Tressa, who was leaning against a palm tree, doubled over. They had docked at a low-key harbor that was hardly ever used, a little ahead of schedule. No sooner had they gotten off the yacht that the princess began complaining.\n\n\"What's wrong with her?\" Luc asked, hefting the weight of antibiotic injections.\n\nAdrian steadied Sergei by propping an arm around the old man's shoulder, then looked over at the princess. \"I'm not too sure. But if I were to take a guess, I'd say it's the smell of fish.\"\n\n\"It's not that bad,\" Marcie commented.\n\n\"She's just not used to it,\" Bull chimed in.\n\nAdrian signaled for everyone to be quiet. \"Julian will be here in a few minutes. He'll lead us to the house we'll be using as HQ.\"\n\nHe motioned for the princess to come closer. She was holding her nose and breathing to her mouth. \"What?\" she asked, her voice high and nasal.\n\n\"I won't be introducing you to Julian as the princess of St. Vicente.\" Before he could explain, she cut in.",
        "\"I'm not the princess anymore, so you shouldn't be introducing me that way anyway.\"\n\nHe looked upward, praying for patience. \"I'm not introducing you as the princess because it might endanger you. The people here are very angry with your father's government. There's no telling what they might do if they find out who you really are.\"\n\nShe let out a long sigh. \"So whom are you introducing me as?\"\n\n\"Bull's sister.\"\n\nShe turned to the stoic man next to her. He acknowledged Adrian's statement with a curt nod. \"What's my name, then?\"\n\n\"Rose. You can make up your backstory yourself.\"\n\nAdrian turned and looked up the hill. \"Hush. I think they're coming.\"\n\n*\n\nThe village was quiet as they walked in. Considering the fact that it was 3 AM in the morning, that wasn't very surprising.\n\nJulian, the haggard old man who was leading their small entourage, looked back at them with a small smile.\n\n\"It's not much but it's home now.\"\n\nTressa could still barely stand the putrid smell of fish but she managed a smile and a nod.\n\nThe small straw huts around her were most definitely 'not much'. It was hard for her to believe that this was indeed St. Vicente. Her house had been set on a hill, with smaller townhouses surrounding the valley beneath. She'd always thought her country was one of the wealthiest in the world. Apparently not.\n\nThey stopped in front of a straw hut similar to all the others.\n\n\"Here you are,\" Julian whispered, revealing blackened teeth. Tressa had to fight not to recoil. \"I hope you find it comfortable.\"\n\nAdrian let his grandfather lean on Luc. \"May I speak with you for a few minutes, Julian?\" he asked the old man.\n\n\"Of course, my boy. Come with me to my home and we can speak at length.\" He motioned for his sons, Leonardo and Vincent, to follow him back to the hut.\n\nAdrian turned to her but she found that she could not meet his eyes. Not after what had happened.\n\n\"Stay out of trouble,\" he said. \"And get some sleep.\"\n\nHe didn't wait for her to acknowledge his order. He simply walked away, leaving her standing in front of the sad, tiny hut. When she stepped in and realized that the floor was simply made of sand, she wanted to bawl her eyes out.\n\n*\n\nTressa found that she could not sleep. She was on the floor, protected only by a thin blanket. What if a crab crawled out from the sand and bit her nose while she was sleeping? What if she accidentally rolled over onto an ant colony? She looked around her. Everyone else seemed to be sleeping quite soundly. Sergei, who was sleeping on the only bed in the room, was snoring gently. Luc had left to speak to Julian as well, leaving Marcie and Bull as her only source of company. However, both of them seemed to be quite comfortable on the sand and appeared to be deep asleep.\n\nShe sighed and closed her eyes again, willing sleep to take over. She sang lullabies to herself, thinking that they might relax her enough to make her fall asleep. Fail. She just wasn't comfortable enough to fall asleep. She didn't feel safe enough to fall asleep.\n\nShe opened her eyes, staring into the darkness. Maybe she could just lay there until the sun rose and then... She frowned. What exactly were they going to do when the sun rose?\n\n\"Why aren't you asleep?\"\n\nThe voice at her side startled her so badly that she nearly screamed. Adrian was crouched beside her, silently uncoiling his blankets. She could make out Luc's shadow in the far corner, sliding under the blankets with Marcie. She'd been turned away from the door and hadn't seen them come in...but how on earth could she not have heard them in the silence of the night?\n\n\"I can't sleep,\" she replied, trying to get her heart rate under control. \"It's weird, sleeping on the sand.\"\n\n\"Well,\" he said, sliding into his blankets as well, \"I suggest you try to get some sleep before dawn. We have a lot on the agenda tomorrow.\"\n\nShe frowned in the darkness. \"What do you mean? What's on the agenda?\"\n\nHe folded his arms and stacked them behind his head. \"You'll find out tomorrow. Sleep now.\"\n\nShe was reluctant to break the silence that followed. There was absolutely no movement, no sound except for the distant crashing of waves on the shore, and almost no light.\n\nShe closed her eyes, willing sleep to come.\n\nAnd surprisingly, it did.\n\n*\n\nShe overslept. Upon hindsight, it wasn't her fault, really. It was their fault for not waking her up. As she sat up, bright sunlight flooded the little hut through cracks in the straw. She ran her fingers over the corner of her eyes, taking a deep breath filled with the smell of seawater and fish.\n\nEveryone else had rolled their blankets and stacked them in the corner. She did the same, grimacing as she worked the kinks out of her body.\n\nShe could feel people staring at her as she stepped out of the hut. She smiled at them, trying to put them at ease. They smiled back -- some hesitantly, others with a feeling of welcome. But none of them approached her to speak to her.\n\nShe wandered around the area, wondering where in hell the others were. In the back of her mind, she was pretty sure she wasn't allowed to wander off on her own. But hell, they hadn't told her she couldn't do it, had they?\n\nIn the distance, she could see little boats setting off into the sea. The fishermen were going out to make the day's catch. She smiled a little as she watched the coordination they employed to get the tasks done. It was a synchronization borne from years of practice and repetition.\n\n\"What're you doing out here?\" Luc's voice interrupted her thoughts. She turned to face him, noticing immediately that he was dressed differently. Gone were the implicitly sophisticated sweater and jeans. Now he donned a ratty t-shirt and cut-offs.\n\nShe shrugged. \"Just taking a walk.\" She gestured to his clothing. \"Are you trying to blend in?\"\n\nHe smiled. \"Yeah.\"\n\nThere was a cheekiness in his smile that made her return it.\n\n\"Well, then, lean down. Your hair's too perfect for a fisherman.\"\n\nHe bent over and she ran her fingers through his hair, doing her worst. When she was done, he looked like an overgrown street kid.\n\n\"Better?\" he asked, wondering what in hell she'd done.\n\nShe tucked her tongue in her cheek. \"Definitely.\"\n\nHe led her back towards the hut they were stationed at. \"There are no guards out today so it's safe to walk around. But they might be coming in tonight, so just ask one of us if you decide to go for a walk.\"\n\nShe frowned. \"These guards, what do they do?\"\n\n\"They're meant to keep the villagers out of trouble. But sometimes, they might be the cause of trouble, if you know what I mean.\"\n\n\"Actually, I don't. Not really.\"\n\nHe sighed. \"There have been many cases of misdemeanor by the guards.\"\n\n\"Misdemeanor?\"\n\nHe looked troubled. \"Just don't go out alone at night, all right?\"\n\nBefore she could question him further, they stepped into a spacious hut filled with the medical supplies they'd brought. There were a group of sickly children gathered in a corner, waiting for their turn at the 'stations' that had been set up. Adrian and Marcie manned the stations while Bull helped with preparing the necessary equipment. Sergei sat on a bench in a corner, watching.\n\n\"Why don't you have a seat?\" Luc pointed to the bench. \"We'll be breaking in an hour or so for lunch.\"\n\nShe looked at the number of children gathered there. There was bound to be much more than just that number who needed medical attention. She looked at the only two stations in the room. She was not a mathematician, but the ratio was drastically uneven.\n\n\"Can I help?\" she asked instead.\n\nThey all looked up at that. \"You want to help?\" Adrian asked, surprise evident in his voice.\n\nShe shrugged. \"Sure. Why not? Looks like you could use a hand.\"\n\n\"Do you have any idea what to do?\"\n\n\"Well, sorta. I saw what you did last night. It isn't that hard.\"\n\nAdrian motioned for her to come over. He spent the next half an hour instructing her on the proper procedure for injections, going over each step until she had it down pat. He even made her practice in front of him, making sure she knew it inside and out. It was a tedious process, with the children fussing and crying out. She prided herself, however, that she was able to calm the kids better than Adrian could.\n\nSoon, there were three stations set up and more vaccines were being administered, speeding up the process. When Marcie left a couple of hours later for a lunch break, Adrian and Tressa stayed on.\n\nIn the late afternoon, the adults started coming in for their injections. A lot of small talk was made, and by the end of the day, Tressa was sure she knew the story of half the families in the village.\n\nAs she injected the last man with the vaccine, Luc rushed into the room looking harassed. Or perhaps it was his hair that gave him the harassed look.\n\n\"Night guards coming in. They should be in the village in less than ten minutes.\"\n\nAdrian was already packing up the equipment.\n\n\"We're almost done here,\" Tressa said in Italian, smiling calmly at her 'patient'. \"Just a few more minutes.\"\n\nHer 'patient', a middle-aged man with dark skin, waved away her concern. \"The guards don't scare me. Take your time, dear.\"\n\nDespite his bravado, the man was out of the hut in a flash after she put the Band-Aid on him.\n\n\"We should go as well,\" Luc said, signaling for them to hurry.\n\nShe quickly packed up the equipment with Luc's help and the three of them bolted for the safety of the hut.\n\nMarcie had grilled a sea bass for them and laid it out with a loaf of bread. Tressa, who'd denied the offer of lunch earlier, found herself eating more than she would on normal occasions, despite the fact that fish wasn't on her list of top ten foods.\n\nAfter dinner, they sat around the hut with nothing much to do. Adrian was tapping away on his laptop while Bull and Luc were listening to a story Sergei was telling about 'those days'. Marcie had already drifted off.\n\nHonest to god, she was exhausted. It wasn't so much the physical activity of the day that exhausted her. It was more of the emotional part. Having to soothe so many children in just one afternoon could exhaust anyone.\n\nShe found herself unrolling her bedroll despite the fact that it was only nine. If tomorrow was going to be as tough as today was, she needed as much sleep as possible.\n\n*\n\nShe awakened hours later with an undeniable urge. Clasping her thighs together, she tried to hold it back, but she couldn't. Her movements only made it worse.\n\nShe really needed to pee.\n\nAs she looked around, she saw that everyone was asleep. Listening closely, she found that there was no sound of movement outside the hut. Well, certain things couldn't be denied, could they? And she sure as hell wasn't waking someone up just to follow her to the outhouse. She wasn't three anymore.\n\nShe crept out from under the blanket and peeked out through a crack in the door. There was no one along the narrow lane between the huts. Quietly, she slipped out the door and made a dash for the outhouse that was situated about twenty feet downhill behind the row of huts.\n\nShe didn't have cause to regret her actions until she was on the way back to the hut. She'd just climbed the twenty feet incline to the huts when she realized that someone was waiting for her, casually leaning against a palm tree that separated two huts.\n\nShe froze immediately, not recognizing the figure. Luc's words came back to her belatedly. Just don't go out at night.\n\nFuck, fuck, fuck. She really had to learn how to listen to instructions.\n\n\"Look what we have here,\" the figure said, moving forward. A guard. The uniform was a staple of her father's guards. A flash of moonlight illuminated him and she could see that a full beard covered the lower half of his face. \"And here I thought that I'd be having a boring night out.\"\n\nShe cleared her throat. \"I-I have to go.\"\n\nHe took a few steps in her direction. \"I don't think so. You know what happens to girls who get caught wandering outside at night.\"\n\nOk, she was in trouble. Officially.\n\n\"I have to get back,\" she repeated. Every instinct told her to make a run for it.\n\nShe heard laughter as he stepped even closer. \"You obviously don't understand who's in charge here.\"\n\n\"I have to-.\"\n\nBefore she could finish her sentence, he rushed forward and grabbed her. She twisted, trying to get away. His arm was like a brand of steel and she pulled ineffectively, only hurting herself in the process.\n\nPanicked, she struggled, employing techniques she'd learned very recently. But he had too good a grip on her for her to do anything useful.\n\nHer upper body was caught, but not her lower body. She tried to take a step back to get some leverage, but her foot hit the edge of the decline to the outhouse and she slipped, knocking her off balance and bringing him with her to the ground. They rolled for a bit and she landed a few feet away from him.\n\nShe didn't waste time in getting up and scrambling up the small hill. Leaves had probably gotten into her hair and clothes, but nothing mattered right then. She knew what would happen if she was too slow. Only days ago she'd experienced...\n\nWham!\n\nHer forehead hit a low-lying branch and she fell to the floor again, trying to get up even though everything was a blur. She could barely breathe to get enough energy for a scream. But she needed to... call for help...\n\nA hand covered her mouth and nose from the back, effectively cutting off her supply of oxygen. She thrashed against him, beginning to feel giddy and nauseous. Stifled moans of desperation escaped her lips as she fought him.\n\nNot again, was all she could think. She couldn't handle it again.\n\nHe shoved her back against the bark of the tree, a hand on her throat pinning her there while he reached to unfasten his pants.\n\nOh god, it was happening again. Oh god oh god oh god. And there was really nothing she could do.\n\nAs her vision fritzed, she opened her mouth to try and call for help.\n\nOne second, he was in front of her and the next, he was on the floor, lying very still. She tried to steady herself against the tree, but her legs were too weak with relief. Hands tried to get her to stand up, but she pushed them away, wanting just to get her bearing again.\n\nI'm safe, was all she could think. Safe, safe, safe. It didn't matter who'd helped her. She was safe.\n\n\"Tressa?\" It was Adrian. Of course it was. \"Tressa, can you hear me?\" He was tapping her cheek lightly, trying to get her to focus. She opened her eyes, zoning in on him.\n\n\"Are you ok?\"\n\nShe shook her head. Belatedly, tears escaped from the corner of her eyes.\n\n\"We warned you not to go out at night.\"\n\nShe nodded.\n\n\"Here, stand up.\"\n\nHe reached for her shoulders, but she shrank away. \"Please, just don't touch me.\"\n\nHis voice hardened in the darkness. \"Get up.\"\n\nShe struggled to get to her feet, relying heavily on the thick bark of the tree. Her gaze was locked on the guard on the floor. \"Did you kill him?\" she asked.\n\nHe didn't reply.\n\nSuddenly, she laughed. Her voice was eerie in the silence of the night. \"You're a goddamn hypocrite, you know that? Just a few days ago, you tried to do the same thing to me. Don't you think you deserve to die too?\"\n\nShe made to move towards the hut, but he grabbed her and pulled her back. \"What did you say?\"\n\n\"You heard me. You did what he was trying to do. The only difference between you two is the fact that you actually succeeded. Why? Does the truth hurt?\"\n\n\"I told you to stop bringing that up. I explained why-.\"\n\n\"You can't bury things like that, Adrian. I can't just forget it.\"\n\nHe was silent. She turned to leave again, but his fingers clasped hers, pulling her flush against his body.\n\nShe could feel his heart beating quickly. Too quickly. She looked up into his eyes. They had hardened because of her words, but as he looked down at her, she saw them change. She saw regret and apology interlaced there, tugging at her heartstrings. There was something between them. A connection, a bond. Something she could not begin to define. Something she'd denied to herself. He was right; she could not liken the guard to him. At least, not upon hindsight.\n\n\"There is a difference between us, Tressa,\" he murmured, cupping her cheek in his hand. \"The difference is this.\"\n\nHe laid his lips against hers.\n\nIt was wrong. Plain logic told her it was very wrong. But as she felt his swift intake of breath, the smoothing of his lips against hers, and the familiar taste of him overtaking her senses, she struggled to remember what it was that logic told her.\n\nIt had been only a few days. How had anger become want, and want become need? She could not understand it.\n\nHe confused her. Her body confused her. Her life confused her.\n\nBut she was sure only of one thing: he made her go crazy. In the most pleasurable way possible.\n\n*\n\n\"What is the meaning of this?\" Augustine demanded, slapping the report on the desk. His nephew and head of security, Vittorio Poverelli, struggled to keep from bowing his head.\n\n\"The guard was found unconscious, Your Majesty.\"\n\n\"Was this a deliberate act of rebellion by the villagers?\" Augustine sat back in his chair, attempting to relieve the tension that sat at the base of his neck.\n\n\"We believe it to be.\"\n\n\"Then you know what to do.\"\n\n\"Yes, Majesty.\"\n\nThere was steel in Augustine's eyes when he stared his nephew down. \"Make sure it does not happen again. I will not tolerate this nonsense.\"\n\n*\n\nAdrian had no idea what he was doing with her. Was it guilt? Was it desire? Was it perhaps a mixture of both?\n\nHe looked down at her, her features relaxed in sleep. Beautiful. She slept with her upper body draped across his chest, her small hand curled over his heart. He hadn't been able to move her through the night. Every time he'd tried moving even just a little, she'd protested and clung to him, muttering gibberish in her sleep. So he'd stayed, busying himself by plucking out the stray leaves in her hair and knowing he was going to have a helluva muscle ache in the morning.\n\nAfter that kiss last night, they'd stood in the moonlight, with her crying against his shirt. He'd tried to pacify her but soon gave up, realizing that she just needed to let the tears out. She said nothing, merely twisted the front of his shirt in both her hands and sobbed against his chest. Then she'd pummeled him a little before wrapping her arms around his waist and holding on to him so tightly he could barely breathe.\n\nIn the end, he'd carried her to the hut. He'd tried to lay her down on her bedroll, but she'd refused, curling up against him instead. Well, he wasn't going to protest to that.\n\nRays of early morning sunlight filtered into the straw hut and caressed her features. How could she appear so beautiful to him now? She was his enemy's daughter, the family he'd grown to hate. How could he be developing a soft spot for her?\n\nHe ran his fingers through the smooth silk of her fringe. The answer was easy. She wasn't at all what he'd prepared for, nothing like what he'd expected. Sure, she appeared spoiled at times, but she had a good heart. The bratty princess of St. Vicente wouldn't have gotten so close to those sick children. She wouldn't have volunteered to help them. She wouldn't have pacified them even though her eyes showed just how tired she was. The princess he'd thought she would be would have just sat in a corner and watched.\n\nBut she'd wanted to help. It surprised and impressed him more than he'd admit to himself. It truly made him understand how kind and sweet she was.\n\nAt the moment, she stirred. He watched as she made the transition from sleep to semi-consciousness to wakefulness. When she realized she was sleeping on someone, she sat up and blinked sleepily at him, her eyes questioning. He smiled at her, running his hands through her hair.",
        "\"Good morning,\" he said, his voice rough from disuse.\n\nShe stared at him for a bit before returning, \"Good morning.\"\n\nThen she smiled. It was a small, wobbly, hesitant smile.\n\nBut it was a start.\n\n*"
    ],
    "authorname": "KillerRomance",
    "tags": [
        "romance novella",
        "interracial romance",
        "interracial drama",
        "drama"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/st-vicente-ch-03"
}