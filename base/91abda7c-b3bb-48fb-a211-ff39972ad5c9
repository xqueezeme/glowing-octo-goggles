{
    "title": "Yogabot Pt. 07",
    "pages": [
        "The sun had risen and lit up my bedroom when I opened my eyes. After taking a moment to collect myself, I looked over at my phone to find the battery had died. My earbuds were dead too.\n\nThe memory of what I had done to myself came back to me. On one level, I did not intend for it to go this way. I was worried that, after a night of repeated trance suggestions, I had totally warped my brain. If what I had read on the erotic hypnosis sites was true, the instructions would be pushed deep into me by now, and I would have started to be conditioned by them.\n\nWhile I was worried, the idea also thrilled me. I smiled unceasingly as I thought about it. Something about the risk of having my very being melted and replaced with something barely more than a toy brought an intense grin to my face. I was already unable to resist Mark. Now, I thought that any small cracks in my complete surrender would be gone. Somehow, that made everything better.\n\nI spent the majority of the morning and afternoon doing mundane tasks. After our date, I thought perhaps we would come back to my place, so I wanted to clean and restock the fridge. Then, I spent copious amounts of time in the shower on a seek-and-destroy mission to remove every stray body hair I could find.\n\nAfter I had spent time sufficiently primping, I put in my newly charged ear buds and queued up the file on repeat again. This time, though, I set a one-hour timer on my phone so that it would interrupt the mp3 file. I held my breath when I pushed play, since I was not completely sure that the interruption would snap me out of my trance. But I was no longer capable of being risk averse.\n\nWhen I looked at the clock, it turned out to be about an hour and 15 minutes later, which meant that the alarm had been buzzing in my ear buds for 15 minutes before I was able to get past the hypo-fog and become aware of my surroundings.\n\nSo, naturally, I did it again.\n\nTime passed and soon I was as primped as I could be and ready for my date. I had no real idea what to expect. Would he *zap* me the moment he saw me? Or would he tease me all night with it, holding it just out of reach? Would it matter? After my latest training, would I just drop to my knees uncontrollably, whether he expected me to or not?\n\nI had texted him to ask what to wear, unsure of whether I wanted him to pick my clothing (or lack of clothing) for him. He indicated that he was unfamiliar with my wardrobe -- true of course -- but that I should be \"business casual\" or a slightly more relaxed version of it.\n\nSo I picked out my best matching bra and pantry set -- well, frankly, I only had one, really. It was pink cotton. I had never been inspired to dress like a stripper.\n\nI had almost forgotten the outfit I wore for Carl's birthday - -black, silky bra, thigh highs with a black garter and tear-away, black lacy panties. But, unfortunately, the tear-away panties had torn away badly, and were unwearable. And the outfit seemed presumptuous. I needed to learn what he liked before I took this much initiative. Worse, it held memories of Carl.\n\nSo, I settled on the pink set with a loose summer dress and some casual flats, and the jacket I had left at the bar that started my whole adventure.\n\nI spent an infinite amount of time worrying that it was too sexy. Or not sexy enough. Or too casual. Or not submissive. Or not flattering. I was changing my mind for the hundredth time when the doorbell rang and I realized he had come to get me.\n\nI had butterflies in my stomach.\n\nThat may seem like a small thing, but it was the first time since high school that I had felt this. And this was far more intense. I was torn between wanting to fix my hair one more time and rushing to the door like a puppy greeting her owner, which, in a way, I was.\n\nI tried to look calm when I opened the door, but he looked...well... so very good. His open collared tan oxford hugged his tight chest and bought out the deep brown in his sexy eyes.\n\nI don't even remember what I mumbled when I looked at him. I am sure it was something lame. And I certainly was blushing for no apparent reason.\n\nAs it turned out, he was good to his word. He had said he wanted to treat me like a princess and he did. Everything from opening his car door for me to complementing my outfit -- he remembered the jacket of course -- to suggesting what to order at the restaurant made me feel special. As it happened, he explained that he even chose the restaurant for me, remembering my preference for certain foods and matching them up with one of the specialties he had tried on a prior visit.\n\nAnother thing happened that I did not expect. As aroused as I was -- and I was!! -- the date was anything but awkward. Almost instantly, we fell into an easy conversation that lasted all evening, and, again true to his word, was not about hypnosis or sex or erotic submission. I had been nervous, since the last time he saw me, I was topless and kneeling. But my nerves were unfounded. His easy humor and graceful confidence put me at ease.\n\nWe talked like old friends, which we were. But we looked at each other like lovers.\n\nAfter dinner, he held the door open for me at the restaurant on the way out, which was such a Mark-thing that he would do for anyone, but somehow made me feel proud to be seen with him. I caught the glaces of the waitresses and thought I detected a bit of envy in their eyes. Perhaps it was just my imagination. But it made me beam.\n\nRather than going back to his car, we went for a long walk, where he held my hand.\n\nIt was only when he started to slow and lead me into an apartment complex that I realized he was planning to take me to his place. It occurred to me that I had previously had no idea where he lived.\n\nHe was ever the gentleman. When we go close to his building, he indicated that he had prepared a special dessert and some wine and asked if I wanted to come up to his place.\n\n\"By dessert, do you mean DESSERT, or just dessert?\" I asked teasingly.\n\n\"Chocolate mouse.\"\n\n\"Ohhhhhh that is the 2nd best dessert I can imagine! Almost as good as what I had in mind.\"\n\nWe laughed.\n\nHis place was clean and pleasant, but it looked, as he had said, like a temporary rental -- antiseptic, plain and with no special nuances that make a place special.\n\nBut the mousse was spectacular. And the wine -- well, as i had mentioned, I am a girl who likes her wine.\n\nWe shared a spoon as we sat close together on the sofa to eat. And it was so cute the way he would feed me sometimes.\n\nI was still aroused. And yet, I don't think I had ever felt so completely comfortable anywhere.\n\nSo, naturally, I had to ruin it.\n\n\"So,\" I said, looking nervous, \"I think I should tell you what I did last night.\"\n\nAnd so I did. He listened as I told him about the editing, and the file, and the loops. And I hesitantly suggested that I was not sure there was any of the old me left after that.\n\nHe laughed. \"K, the old you showed up tonight. I've never had a dinner date be as pleasing or as natural as this was.\"\n\n\"Well you made it easy, Mark. You have no idea how proud I was to be seen with you.\"\n\nHe pulled the wine glass out of my hands, set it on the table and leaned into kiss me gently. It was so gentle, and his lips so soft, that for a moment I was not sure our lips were touching. But then I could feel the heat and the movement. And it melted me.\n\nI slid my arms around him and pulled myself into him.\n\nAll thoughts of hypnosis and submission and kinkiness dissipated, like a mist that is just out of sight. The arousal was still there. But the only thing that mattered was feeling him next to me, around me, his lips brushing mine, pulling away, then back, He kissed me harder. Then softer. Then brushed his lips to mine, just almost out of reach. Only to lean in and kiss me hard again.\n\nIt drove me forward with a passion more intense than anything I had ever felt. Perhaps it was the hypnosis, or the submission or how I had humiliated myself for him. Or perhaps it was just him. But whatever it was, it became the only thing in the world.\n\nI pulled back a little so I could gently lick his lips. When we kissed again, I slid my tongue into his willing mouth. His tongue rose to meet it, so strong. His breath was so hot.\n\nIt seemed to be the case that whenever I was with him I lost all track of time. And so it was. Our kisses became more and more passionate as my tongue drove deep down his throat, then withdrew to suck his into me as far as I could.\n\nOur breathing became heavy.\n\nHe stopped kissing my lips to move to the nape of my neck. I felt his breath there first, then his tongue, hot and wet. Then his lips caressed my sensitive skin. I trembled. I pulled him close and threw back my head, letting out a quiet, unintentional moan.\n\n\"Ohhhhhh yesssss...\"\n\nHe kept working on my neck, then my shoulders. By the time he changed direction and nibbled my earlobe I was a puddle of lust and passion.\n\n\"ohhhhhh yeeesssssss... ooohhh I.... \" I tickled his ear with my breathless whisper, \"I want you.... please... please take me. Take me tonight. Keep me if you want, but please, please.... \" I could barely breathe as I felt his tongue lick the underside of my earlobe. All I could think of was what it would feel like on my nipples.\n\n\"Ohhh MmmmmArrkk.... please... take me.... do whatever you want to me... make me yours.... \"\n\nHe pulled away slowly and looked me in the eyes. His deep, amazing, hypnotic eyes held mine as he said with a boyish smirk.\n\n\"So, K, do you really want to be mine? to be my girlfriend? To be my partner? To be my submissive pet?\"\n\n\"OHHHHH YESSSS!!\" I replied instantly in a lust-filled whisper.\n\n\"And so, I have your consent?\" He said smirking like it was an inside joke between us.\n\n\"FUCK YES!!\"\n\nHe did not respond. Rather he put his arm around my back, slid his other beneath my knees, and in an impressive display of strength, stood, lifting me into his arms, like a bride being carried over the threshold.\n\nI held his neck as he carried me across the room and through the door to his bedroom. I had visions of him throwing me on the bed and holding me down as he would fuck me. But instead, he set me gently on the edge of the bed and leaned down for another long, passionate kiss.\n\nHe knelt before me, and ran his hands over my body before reaching around and unbuttoning my dress. He slid a hand into the back of my dress and I felt his strong, soft hand caress my back between my shoulder blades before he casually, with a flip, unclasped my bra.\n\nHe did it with such ease, it made me wonder how many times he had done that. I was not sure if I was turned on more by that thought or just by the fact that his hand was now caressing my back. But, either way, I had an out-of-body moment where I thought \"Damn, dude, you are good!\"\n\nWhat ended my out-of-body thoughts was the realization that he had slid my summer dress and bra straps off my shoulders and was back to kissing the nape of my neck, working his way down my shoulders. I threw back my head and moaned gently.\n\nAs he slid the dress down farther, uncovering my breasts, the thought that he had seen them before did nothing to lessen the intensity. His mouth followed the dress line as he pulled it down, sending shivers down my spine, right to my pussy.\n\nHe placed gentle kisses on the sensitive skin between my breasts. Then he followed that with harsher kissing and licking, only to return to gentle, almost teasing caresses. I grabbed the back of his head and arched my back to try to force him deeper.\n\nHe pulled back and moved to caress the bottom of my breasts. Then dove in and licked the areola right below my left nipple. I could barely breathe. I wanted him to lick it, bite it, make it hurt, then soothe it with his tongue. But he kept teasing me with his mouth and his hands. His control and slow methodical teasing kept driving the heat up higher. The men I had been with before had never taken this kind of time to give this kind of erotic attention to my body. Rather than diving in and finishing quickly, he was slowly savoring every moment.\n\nAnd it drove me wild with lust.\n\nOn some level, it deepened my affection for him. He was so strong. He was leading every moment as if it were a dance. But he was so gentle, yet firm. His attention to me was just an extension of treating me like a princess. At the same time, he was clearly taking what he wanted and making me his.\n\nWhen his tongue grazed my nipple, I thought I was going to cum. Somehow, I didn't. And I was glad for it, since he followed by fulfilling my desire and taking my nipple into his mouth, nibbling, biting, sucking, licking. His hand had found my other nipple and had taken it between his thumb and forefinger, twisting, stroking, caressing.\n\nIt was sensory overload. I was a mass of nipples and desire.\n\nAgain, I lost track of time. At some point he switched sides, and licked my right nipple while caressing my left.\n\nI was both heartbroken and thrilled when he pulled away. I never wanted it to stop. But the constant sensory stimulation was overwhelming me. And, of course, I knew that he was pulling away for something better.\n\nHe stood. He held out his hand for me. I took it with a naughty, burning stare.\n\nHe huided me to stand, then helped me step out of my dress. For the first time, I casually noticed that my shoes were gone, likely somewhere in the living room, lost when he had carried me here.\n\nI stepped out of my dress and had intended to slide out of my panties when I noticed that he was unbuttoning his shirt. I pushed his hands away and took over.\n\nWith each button, I kissed his hard, muscular chest, working my way down from top to bottom. When I had released his last button and smiled wickedly at the noticeable bulge in his khakis, I licked him back up his chest, ending by sharing a deep, French kiss while I slid his shirt off his shoulders.\n\nWhile he pulled his arms out of his sleeves, I slid, snake-like, down his body, rubbing my tits against his skin as much as I could. I knelt before him, much the same way I had imagined when I was alone with my dildo. But this was so, so much better.\n\nHis trousers were tenting right in front of me. I reached up to unbuckle his belt, making eye contact the whole time. His eyes still amazed me. And I tried to give him the wickedest, wildest, most smoldering look I could. I wanted to be his slut, with no reservations or inhibitions holding me back.\n\nI slid his trousers and underwear down in one movement, never breaking eye contact, but noticing his cock, spring free out of the corner of my eye.\n\nI looked down at it.\n\nMy eyes widened.\n\nCan a dick be beautiful? If so, his was the most beautiful one I had ever seen. I was no expert on cocks, but his was amazing. It was easily 2 inches longer than my dildo and much thicker. It was not quite the biggest I'd ever seen -- especially not on porn sites -- but it was much larger than Carl's and a little shorter, but thicker as my one-nigher in Daytona.\n\nMy mouth watered. I knew he will fill me completely, which was exactly what I had been craving. I wanted -- no, needed -- it in me. I did not care how or where. I wanted it in my hands, my mouth, my pussy, even my ass. I wanted it anywhere and everywhere.\n\nI looked up at him, my surprise still evident on my face. \"Duuuude. If I had known you were packing this, we would have done this a long, long time ago!\"\n\nHe laughed.\n\n\"It just occurred to me.\" I said, looking concerned and serious, \"You asked me for consent, like the gentleman you are. But I never asked you.... so, \" I said, feigning innocence, in the sweetest voice I could manage given that I was dripping wet, on my knees and topless, \"so, do you really want me to be yours? To be my boyfriend? And my Owner? Do I have your consent to... touch it?\"\n\nHe smiled his best, most adorable, amazing, little-boy smile, and quietly, gently said, \"Fuck yes.\"\n\nI saw the humor in it, but was too busy wrapping my mouth around his manhood to laugh. I inhaled the head of his penis as if it were my favorite lollipop, which, in a way, it was. I ran my tongue along the bottom and felt the ridge that runs there. I only vaguely noticed that he was circumcised, and, while I have nothing against uncircumcised dicks, I have always preferred them without foreskin. I think it is because I wax for the summer. And when I started, I noticed how, without the pubic hair to mute the sensations, my clit had become noticeably more sensitive. So I assumed it would be the same for guys without foreskin. Perhaps not, but it always made me feel sexier thinking about it that way.\n\nHis cock was impressive, but not so big to be overwhelming. While it was longer than my dildo, I thought I could deep throat it and was damn sure I was going to find out!\n\nI pulled his head almost out of my mouth, only to slide it in a little deeper. Then again. Then again, working my way down his shaft.\n\nDid I mention that his cock was amazing? It was. As I inched my lips down his shaft, I kept my tongue pressed against the bottom. I could feel everything -- every vein, every ridge, every hard, sexy, incredible part of this Kendra-pleasing creation. When I pulled back to almost remove him from my mouth, I would push my tongue harder against him and move it so it rubbed his under-ridge. When I did that, I could feel him spasm through his member.\n\nAnd he was so damn hard! I thought he could pound nails with that thing. I was torn wanting to swallow it, but also listening as my pussy demand his hardness for her own use.\n\nI moved deeper each time, feeling his head press against the back of my throat. At some of the nights out with my girl friends, we discuss blow job technique, and I tried to apply every single thing I had learned. Highest on the list was how to open the back of my throat so I could take him down without gagging.\n\nI finally got him in as far as I could, my nose pressed against his pelvic area. And, I had to fight my gag reflex hard. I pulled back quickly to avoid it, but tried to make it up to him by sucking as hard as I could, as if I was trying to suck his dick off his body, while my hands held the outer skin of his shaft in place.\n\n\"I need more practice,\" I told myself, and vowed to do start a regular routine of blow job training, as if I were training for a track and field meet.\n\nI felt torn. I wanted him to cum in my mouth. I never liked swallowing but all I could think of is how amazing it would feel for his hot sperm to be forced down my throat until it dribbled out my mouth, like a cum whore.\n\nAt the same time, I wanted him in my pussy. He was so impossibly hard. He was so wonderfully thick. He was throbbing slightly. He would have stretched me and filled me in the best way. I could imagine him thrusting so deeply, he would bump my cervix. And make me respond as he spasmed in me.\n\nIn the end, I just wanted him to cum. I wanted to hear him. I wanted to feel him. I wanted to know it was because of me.\n\nI decided that if he orgasmed while I was on my knees, servicing him, it would feel appropriate and re-enforce his role as my Owner.\n\nI wrapped my lips around his penis and gently sucked to create some friction. I started slowly taking him deeper with each stroke, using my tongue to stimulate the bottom of his cock. Each time, I increased my speed a little, moving faster and faster.\n\nHe responded. He started rocking his hips into me. His hands found the back of my head to guide my movements. It had never felt so right.\n\nI heard him moan and felt him start to swell when he surprised me by pulling my hair to pull me completely off his cock. At first, I was confused, then thought perhaps he would cum all over my face and tits. It would degrading, treating me like a target and an object. It was something I had always avoided in the past. Now, I wanted it. I wanted to walk down the street topless with his sperm dripping off me so everyone could see what a cock slut I had become for him.",
        "He did not do that. Instead, he lifted me by my hair. It was forceful, but not rough, as he moved slowly enough to guide me, rather than mandhandling me.\n\nI complied until I was standing. I gave him my best smoldering gaze, expecting him to kiss me. Instead, he pushed me gently backwards until the top of his bed hit the back of my knees. I felt my knees buckle and allowed myself to fall backwards onto his soft mattress.\n\nAgain, he surprised me.\n\nI expected him to crawl on top of me, push my panties aside and enter me. Instead, he knelt down and gently parted my legs. He started kissing my inner thighs, driving my heat to new heights.\n\nFeeling his lips and tongue on my smooth, soft erogenous zones was pure heaven and hell at the same time; I was thrilled, but wanted so much more.\n\nWithout stopping, only shifting, he reached up and pulled my panties off, sliding them down my legs while kissing around them.\n\nI prepared for him to kiss his way up my body while he lined up to enter me. It would be the same slow torture as when I had slowly caressed myself for him before removing my bra, earlier this week. Only, it would be so much more intense.\n\nHe started to work his way up as expected. Then he shocked me. He stopped at my wet, needy pussy.\n\nIn my past, a couple guys had given my clit an quick kiss and lick before pounding me. But Mark... oh, my sweet Mark.. played it like an instrument. He teased the bottom of my vagina with his tongue, then nibbled his way up one side, before going back down the other. When he made it to the top again, he formed small circles around my throbbing clit, but did not touch it at first. When he did, I felt like he hooked me up to an electric wire; the shock through my nub went straight up my spine.\n\nThen he started working my pussy in earnest, reaching one hand up to tease and occasionally pinch my painfully hard nipples.\n\nNever had anyone done this for me. I had seen it in pron videos. And had the occasional girl-girl talk about their experiences. But most of my friends had the same history as I did -- the occasional lick, then shove the dick in to get someone's rocks off.\n\nWith Mark, it was a symphony.\n\nEach movement brought me closer to the edge and after a few moments of his licking and kissing and occasional gentle biting, I was ready to explode. My pussy trembled. My hips were grinding on autopilot.\n\nI could feel the orgasm building. It was at the point where it was inevitable. And I felt both elated and disappointed that I was cumming before he did. I felt like I should give him warning, so he could keep the pattern he had started. Or, as much as I dreaded it, stop, if he wanted.\n\n\"Ohhhhhhh, \" I whispered in a voice that must have sounded like a porn movie,\n\n\"oohhh M..M.a..arrk...I... am... go...ing to... to.. cummmmmm... Ohhhhhh\".\n\nHe changed nothing. He kept licking, biting, kissing, fondling.\n\nAnd the amazing orgasm.... didn't happen.\n\nI didn't understand it. It was there. It already started. But then, it was just gone.\n\nI clenched my whole body. The vanished climax did nothing to decrease my arousal or my need. I just needed to cum! And I couldn't understand why I couldn't. I started to grind my hips into him. I reached down and put one hand on his head to drive him into me. I twisted a nipple with the other hand. And... nothing. Each thing made my body spasm, my muscles clench, my breath escape me. But no climax followed.\n\nThen my lust fogged brain remembered: in the files I had repeated, he commanded me not to cum without his permission. He had said \"just for one night\" but I had edited that out.\n\nI was confused. How could a random instruction, no matter how often it was repeated, cause my body to resist such intense stimulation? Or, rather, to accept such intense stimulation, keep getting stimulated, but not climax?\n\nOf course, at this point, I didn't care. I just needed it. So, I started to beg.\n\n\"Please... Pllleeaaasssse.. I.... pleasee let me cum... I can't... unless you... order me.... pleasssss... ohhhh fuck.. I need it so badly right now... I.. anything... I'll do anything, just... pleaaase.\"\n\nTo my surprise, begging made me even more aroused, but in a different way; it was more cerebral, but no less intense.\n\nI tried to keep it up, but my breath refused to stay in my lunges while he was eating my pussy. So I fell into a kind of quiet mantra whimper, just repeating \"please.. pllleeaaassse... pllleaasssse,\" over and over again.\n\nHe slid a finger deep inside me. I gasped. He found my g-spot. I was sure it was over now. There was no way any mind game would hold back this mother of all orgasms.\n\nI was wrong. It just made me more desperate, and drove my arousal past anything I had felt before. My whole body was tight. It was as if I had become a giant pussy. I thought I would explode if I didn't cum soon -- or at least break a few blood vessels -- but I could never seem to find the right angle or the right moment to push myself over.\n\nMy begging change to a deleterious, breathy chant: \"please, please please please\" interrupted my stuttering breaths and low moans. My whole body was vibrating with spasms, but could not find the trigger to explode into orgasm.\n\nHe had wrapped his lips around my clit and was sucking it in and licking the bottom with short, firm, quick strokes. My eyes rolled back in my head. My tongue flopped uselessly out of my mouth.\n\nHe pulled his mouth away and said \"cum NOW!\" in a firm but quiet voice before finding my clit again.\n\nMy body responded instantly. Every muscle tightened. The orgasm was so deep, I thought my soul was cumming. My abs, used to being worked out, tightened so much they hurt. My pelvis vibrated like a jackhammer. My head rolled from side to side. My toes curled. My legs felt like they were convulsing. My hips were not even bucking, but holding tight in their own version of a reverse plank.\n\nAnd my sex? It was beyond words. It was as if everything I had ever felt passed through my pussy and left me. My walls squeezed so hard, I was worried I would crush his finger. My cunt, so long denied, tried to milk the life out of his finger.\n\nI started sobbing. It was not sadness, nor joy. It was just release, as I gulped for air.\n\nIt happened again that I completely lost track of time. Wave after wave of orgasm passed through me, taking me completely with them. It felt like I had always been this way, since the beginning of time.\n\nI only vaguely felt him mount me and hold me close. I sobbed into his shoulder as he spoke quiet whispers to my heart.\n\n\"Shhh..it's ok. I'm here.\"\n\nI clung to him as if he were a life raft, and held as tight as I could until the sobbing quieted. My spasms slowed, but did not stop completely.\n\nWhen I found what was left of my voice I whispered: \"I... it... was... that... incredible. I.. it... was like... cathartic... emotional... and... fuck... like my soul orgasmed.\"\n\n\"Shhhhh... you don't need to talk...\"\n\n\"I just.... thank you.\"\n\nHe kissed my cheek and held me close. When he did that, I felt his penis press against my trembling, demanding cunt.\n\n\"I still want you.\" I said. \"Please... please.. I need you inside me.\"\n\nHe paused a moment. \"I will get a condom.\"\n\n\"NO!\" I pulled him so close it hurt. \"I'm on the pill. I'm clean. And I need to feel you, Mark. I want you so badly. Completely.\"\n\nHe did not reply but started to grind his hips into mine. My body responded without my thinking. My thighs surrounded his hips. My caves pulled his tight ass into me, guiding him.\n\nI felt his head first enter my labia. It was so big. After my intense orgasm barrage, my pussy had tightened, but was dripping wet. He slid in easily, but stretched me as he went. It felt amazing. I felt violated, loved, used, and satisfied all at the same time. And, most of all, I felt filled.\n\nHe pushed in deeper and woke my clit to attention as he did. My hips gyrated to pull him in. I wanted all of him, every inch.\n\nDeeper and deeper he plunged, stretching me, filling me, until he was hilt deep and pressing against my cervix. I relaxed my arms to let him move to a better position and he started to thrust. With the rhythm of a drummer, he pounded me, harder and harder. Each thrust put him deeper, when I thought he could go no deeper. Each thrust in and out rubbed my clit with him.\n\nAlmost on entry, I was ready to cum again. By his third thrust, I had thrown my head back and was biting my lip -- trying to time my next orgasm with his.\n\nI was playing close attention to the feeling of his cock in me, and it was wonderful. I had thought to count his thrusts, but dismissed that thought as I kept getting distracted with the nuances of his dick penetrating me. The angle would change and send new sensations through me. The speed would change and my clit would reply. I felt him spasm, and would spasm in response.\n\nI was lost in a world of sex. I even lost track of his body, really, and was just focused on the warmth between my legs and the amazing fullness. I felt almost complete with him inside me.\n\nHe started to swell. I knew he was close. I opened my eyes and met his.\n\n\"Fuck me.\" I said. \"Cum for me. Breed me. ohhhh... fuck... fill.. m.meee\"\n\nI felt his cock swell then twitch. He looked right at me and said \"Cum for me, K,\" and I did.\n\nI let go of whatever had been holding me back. As he closed his eyes and jammed his body into mine so hard I thought it would break me, my orgasm collided with his. My legs instinctively wrapped around him, as if trying to pull his whole body in my fuck hole.\n\nHe collapsed on top of me while still having spasms of sperm shooting in me. I held him, while clenching his dick with my own climax. Once again, my whole body tensed and I fought for air.\n\nBut it was different this time. The orgasm was deep and long and slow and amazing. But more warm and loving than wild and intense. It was like the difference between a long, slow bubble bath and a quick cold shower. Both sets of orgasms were equally amazing, but different. Before, it was like my very being was drained. This time, it was like it was refilled with something warm and wonderful.\n\nHe laid on top of me for a while as his penis shrunk. I whimpered when he pulled it out of me. I felt so empty again.\n\nBut he was right next to me, and I held him close. I started to cry again. I rarely cry. I had cried more in the last week than I had in years. But none of the tears were sad. They were like an expression of passion for him.\n\nI smiled at him and shook my head. \"I... I never knew it could be like that. That was... all I can think of is 'amazing'. That was.. well... maybe it sounds weird, but it's like everything else I'd ever done was just fucking. That was making love.\"\n\n\"Only with you.\"\n\n\"I love you.\" I said, in one of those cases where my mouth moved before my brain caught up. Or, maybe it was my heart speaking.\n\nHe smiled. \"In some way, I've always loved you, K. But don't you think it's a little soon for that sort of talk? One moment and you go right to the L-word?\"\n\nI laughed. \"That wasn't just a moment, dude. That was life changing. Besides, like when have you every known me to be the least bit cautious?\"\n\nHe laughed. \"Truth. And think about it, we have only just started, K. Just think what happens next.\"\n\n\"What do you mean?\"\n\n\"Well, this is the best time for it. When you are filled with post-orgasm bliss and your body is so spent.\"\n\n\"Best time for what?\"\n\nHe held up his hand. \"Drop for me Kendra.\" *Snap*"
    ],
    "authorname": "justCal",
    "tags": [
        "consensual",
        "mc",
        "ds",
        "bdsm",
        "romance",
        "romantic"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/yogabot-pt-07"
}