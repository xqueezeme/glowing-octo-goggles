{
    "title": "Timber Pack Chronicles Ch. 09",
    "pages": [
        "As Parker pushed his way through the crowded hallway on his way to class, his phone started to vibrate in his pocket. Reaching into his pocket, he pulled it out and looked at the display. Expecting it to be Colton, the name and picture on the screen surprised Parker. He hadn't really spoken with Shell in a couple of weeks, not since the split. And then it was just a mumbled \"hi\" as they passed in the hallway.\n\nParker moved out of the way and ducked behind the door of his second period class.\n\n\"Hello?\"\n\n\"Parker. I need to talk to you,\" Shell answered. Her voice was clipped and strained. And the fact that she called him by name instead of \"girl\" or \"hooker\" let Parker know that she was pissed.\n\n\"Okay...\"\n\n\"Now. Not on the phone.\"\n\n\"I'm about to go into class. Don't you have\u2014\"\n\n\"Skip it,\" she interrupted. \"Meet me outside, by the gym side doors.\"\n\n\"Okay. I'm on my way.\"\n\nParker found Shell pacing outside the gym doors. When she saw him, she grabbed his arm and yanked him hard, pulling him back behind the garbage dumpsters.\n\nThe smell of the dumpsters assaulted Parker's sensitive nose. He wasn't prepared when Shell shoved his chest hard with her hands, knocking him backwards against the brick wall.\n\n\"I oughta beat your ass!\"\n\nParker stared at her in shock, too surprised to speak.\n\nShe gave him another hard shove. \"You were supposed to be my friend!\"\n\nShell slowly backed away, slumped against the wall and dropped down to her butt. She pulled her legs up to her chest. \"Why didn't you tell me?\" she whispered as tears started to stream down her face.\n\nParker sat down next to her. He sniffled and wiped his own eyes. \"I'm sorry,\" was all he could come up with to say.\n\nShe stared straight ahead, a haunted look in her eyes. \"I knew there was something weird about Curtis. I followed him. I watched him take his clothes off...\" She closed her eyes and shuddered.\n\n\"Then you saw... You saw him?\"\n\n\"Yes. It's like fucking 'Twilight' and I'm playing the part of that stupid white bitch. I don't wanna be the stupid bitch.\" She scrubbed the tears from her eyes and let out a rough sigh. \"After I beat his ass, he told me what he was. And he finally told me what happened with Colton being exiled, and what he did to you.\"\n\n\"I'm Colton's mate. He didn't 'do' anything to me. It's hard to explain...\"\n\nShell unbuttoned the top two buttons of her blouse. She pulled her collar aside. At the curve of her neck was a fresh bite mark.\n\n\"Oh, shit.\"\n\n\"I broke up with the bastard.\"\n\nParker gasped. \"You did? How?\"\n\n\"What do you mean 'how'? I told him to leave me the fuck alone.\"\n\n\"Don't you feel... I don't know... a pull?\"\n\n\"Whatever,\" she said with a dismissive hand wave, but the wince on her face let Parker know that she did feel it. \"I'm not gonna let him run my life. I am my own woman.\"\n\nParker shook his head. \"Mm-hmm. You say 'whatever' now. But trust me, you won't be able to keep away from him. You know I'll be there for you when you change, but you're gonna want Curtis. It's kind of special. You'll want to be with your mate and you'll regret it later if he's not there. You can still be your own woman.\"\n\nShell's cell phone rang. She looked at the screen and sighed. She turned the screen to show Curtis's picture, a seductive head shot with intense eyes. \"Curtis. Again.\"\n\nShell looped her arms around Parker's and leaned her head on his shoulder.\n\n\"Everything will be okay,\" he whispered.\n\n* * *\n\nParker sat on the little porch of their cabin watching the snow fall. It was the first day of winter break and it was the first snow of the season. He liked the snow and always liked to watch it fall. It always calmed and relaxed him. The smell of wood burning permeated the air as smoke rose from the chimney. Parker couldn't wait to live here with his Colton.\n\nColton had moved into the cabin not even a month into their exile. Being an alpha and living under the rival pack beta's roof apparently wasn't a good idea. He and his father nearly came to blows on more than one occasion. It wasn't that his father was necessarily a bad guy, but there was definitely a power thing going on.\n\nJed followed a couple of days later, moving into his own cabin down the row. Not because he didn't get along with his parents but out of loyalty to Colton. His mom stocked him up with all kinds of goodies. All of his brothers helped move his things. Jed's parents were so full of love and pride for Jed it made Parker want to cry. He was so happy for Jed but just a little bit jealous too.\n\nThey had replaced the beat-up furniture in several of the cabins with some stuff they picked up cheap from a few online sellers and garage sales. Parker spent a lot of time on the interior of their cabin, trying to make it a home for him and Colton.\n\nJed, Trey and Colton worked on the cabin exteriors. With the repairs and fresh coats of trim paint, the rustic little log cabins looked like homes. The camp had truly been transformed from what it was when Parker first saw it.\n\nParker was happy.\n\nHe heard the SUV's engine before he saw it. He stood up when he saw the official sheriff's department vehicle come around the bend and through the trees on the two-track.\n\nParker watched Deputy Carlton Butler park the truck in the parking area and walk up to the cabin.\n\nParker couldn't help but notice how much Colton looked like his father. Though the Forest View Pack's beta wolf was looking tired these days and he seemed to have a little more gray in his beard and hair than he did a couple of months ago.\n\nCarlton pulled his leather glove off and held out his hand. \"Parker.\"\n\nParker shook his hand, but Carlton didn't let go, gripping Parker's hand in an overly tight grip. He stared Parker down. Only when Parker dipped his head and turned his head slightly to bare his neck to the bigger man did he let go.\n\nThe display of power made Parker nervous and unsettled, if only because it would have sent Colton through the roof if he had witnessed it.\n\nParker put on a careful smile. \"It's good to see you, Mr. Butler. Colton's not here. He and the guys went into the city to get some more building supplies. We're working on the common building and the mess hall kitchen this week.\"\n\n\"Ah.\"\n\n\"Would you like to come in? I have a fresh pot of coffee brewed and a fire in the fireplace.\"\n\n\"Sure.\"\n\nParker went inside and shrugged his winter coat off and hung it on the coat rack behind the door.\n\nCarlton followed Parker into the cabin. He unzipped his coat, pulled his uniform hat off and set it under his arm. He looked around the cabin, taking in the surroundings. He walked over to the fireplace and stoked the fire with the poker.\n\n\"You two have made this a nice home. It's cozy.\" The genuineness in Carlton's voice made Parker smile.\n\n\"Thank you,\" Parker replied as he handed Carlton a mug of coffee. He took the deputy's hat from the older shifter and hung it on the hook on the back of the front door.\n\n\"Not what you are used to, though, hmm?\"\n\n\"I suppose, but I love it here.\"\n\nThe burly deputy sipped his hot coffee. He stood silent for a moment, clearly uneasy but trying not to be. \"Have you been living here with Colton then?\"\n\n\"No. I'm still living at home. But I stay here with Colton sometimes.\"\n\nParker's eyes darted uneasily towards the bed. He now wished that he had made it when they got up this morning. Of course, it reeked of sex and there was no hiding that. Damn. He should have changed the sheets. The last thing he needed was for Colton's dad of all people to be reminded of their private business. It was bad enough that the older man had seen him when Colton had turned him, all naked and just-been-fucked, laid out on the floor of Colton's bathroom.\n\n\"That's one of the things I wanted to talk to Colton about. Your father is not happy. He came to me to break you two up. Colton needs to deal with this now. You may want to suggest it to him. He won't listen to anyone else.\"\n\nCarlton's eyes drifted down Parker's neck to the mating scar before he looked back at Parker.\n\nParker understood what the man was trying to tell him.\n\nParker noticed Carlton cocking his head slightly towards the window. Parker stretched his senses, trying to detect what the other man had heard or smelled. He could hear Jed's big truck coming up the drive.\n\n\"That's them now.\"\n\nCarlton nodded at Parker's obvious statement.\n\nA couple of minutes later, the door opened and Colton came through. Jed walked in behind him, and leaned against the doorway, assessing the situation.\n\n\"Hey, pup,\" Colton said as he walked through the door. He walked past his father and planted a kiss on Parker's mouth.\n\nHe turned around, standing between Parker and his father. He unbuttoned his coat as he gave his father a watchful eye. \"Dad. Something I can help you with?\"\n\nColton looked over at Jed. Jed nodded and walked out of the cabin, closing the door behind him.\n\n\"Why don't we take a seat?\" Colton said, waving towards the living area.\n\nParker grabbed his backpack, laptop and math book off the armchair so that Carlton could have a place to sit.\n\n\"I'm here about the rogue wolf,\" Carlton said as he sat down in the armchair.\n\nParker and Colton sat down on the couch together. Colton stretched his feet out and crossed them at the ankle, then slung his arms along the back of the couch, his fingertips resting on Parker's shoulder.\n\nEverything about him said that he was king of the castle. Well, it was more of a shack than a castle, but here Colton was king and Carlton was merely a visitor in his territory.\n\nHe didn't speak but waited for his father to continue.\n\nCarlton frowned. \"He was spotted by a pack member. Sonia. She works at the high school, in the facilities department. He was apparently underneath the stadium's bleachers. When he saw her and a human co-worker approaching, he ran off. It took some convincing on Sonia's part to calm the human down.\"\n\n\"The stadium?\" Parker asked. \"What would he be doing at the school?\"\n\nCarlton ignored the question from Parker, and focused his attention on Colton. \"He also attacked a group of kids in the woods by the old water tower. TJ Carlisle was hurt pretty bad.\" Carlton glanced at Parker, before looking back at Colton. \"Curtis Lakewood tried to fight him off... The damage was very extensive. He nearly didn't make it.\"\n\nParker covered his mouth as he gasped in horror. \"What? No!\"\n\nParker thought of Shell and his heart broke for her. What if it had been Colton? He didn't want to appear like a wimp in front of Colton's dad, but he couldn't help it. Tears welled in his eyes and he burrowed closer to Colton's side.\n\nColton put his arms around him and held him tight. He kissed Parker's head and whispered soothingly, \"Shh... It's okay, pup. Breathe...\"\n\nCarlton cleared his throat. \"Has there been any activity here?\"\n\n\"You know about the second attack on Parker. He also attacked the pup who's mated to the bear in the village, but Buck managed to scare him off.\" Colton paused for a moment, then added, \"And Jed and Trey chased him away from the camp last weekend.\"\n\nParker's head lifted and his jaw dropped. \"What? Why didn't you tell me?\"\n\n\"I didn't want to worry you.\"\n\n\"You didn't\u2014 But what if something happened to you or Jed or Trey\u2014\"\n\nParker was about to have a full-blown meltdown.\n\nColton's growl was barely audible, but it was enough to stop Parker. Colton's eyes glanced towards his father for a split second. Parker backed down. He didn't want to show Colton disrespect in front of a rival pack member, even if he was family.\n\nCarlton stood up. \"I'd better be going.\"\n\nColton rose from the couch and shook his hand.\n\nHis father picked up his hat from the hook on the door and put it on and buttoned up his coat. \"I was telling Parker that you've made a nice home here.\"\n\n\"Thanks, Dad.\" After an awkward pause, he added, \"I'll be in touch.\"\n\n\"Good.\"\n\n\"Goodbye, Mr. Butler,\" Parker said.\n\n\"Bye, Parker. Colton.\" With a dip of his chin, Colton's father left the cabin.\n\n* * *\n\nParker paced back and forth in his parents' backyard. A sound coming from the house next door broke his daze. He hurried over to the fence and, hidden behind a row of pine trees, watched Shell close the back door behind her and look around.\n\n\"Psst.\"\n\nShell turned towards the noise and rolled her eyes at Parker. \"For real with the 'psst'? You would make the worst spy, double-O-gay. Meet me in back by the big tree.\"\n\nParker made his way to the back gate. As he swung the iron gate open, he smelled the distinct odor of Colton's piss. It smelled recent. He rolled his eyes, shut the gate behind him, and hurried into the woods.\n\n\"Hey,\" Parker whispered. \"How is he?\"\n\nShell sat down on the grass cross-legged. Parker mimicked her, sitting facing her.\n\n\"He's doing a lot better,\" she said with relief. \"He's sore and exhausted, but he's finally getting up and moving around.\"\n\n\"I'm so glad,\" Parker said with a relieved sigh. He grabbed Shell's hand and squeezed it. \"I was so worried for you when Colton's dad told us what happened.\"\n\n\"I just don't get why they were attacked.\"\n\n\"I don't know either. Colton thinks it's a territory thing.\"\n\nShell narrowed her eyes. The growl building in her chest surprised Parker. \"I could kill Seth Forrest. You know what he did? When the wolf attacked, he stepped back while Curtis and TJ fought for him.\"\n\n\"Seth is an asshole and a coward. But he'll probably be the next leader of the Forest View Pack...\"\n\n\"Oh god. Don't get me started on that pack stuff.\"\n\n\"I know right. Curtis sounds loyal.\"\n\n\"He is,\" Shell said as she beamed with pride.\n\n\"You should be proud of him. It's a shame that someone like Seth just abuses it.\"\n\n\"Yeah...\"\n\nParker smiled inwardly. He couldn't say anything to Shell about leaving her pack, but that didn't mean he couldn't manipulate the situation a little bit with some hints. \"So you two are back together then?\"\n\n\"Well... we're still working things out,\" she said as she subconsciously rubbed the bite mark over her neck.\n\n\"Are you nervous about meeting the Alpha?\"\n\n\"I met him at the clinic. Did you know there's a medical clinic for werewolves? Yeah, that wild animal clinic by the forest ranger's station. What the fuck, right? Anyway. Despite being related to Seth, he seems kinda nice.\"\n\nParker blinked. \"'Kinda nice'?\"\n\n\"Yeah. He hugged me and everything, and said 'Welcome to the Pack.'\"\n\n\"You're kidding me. He didn't grab your head and sniff you?\"\n\nShell looked at Parker like he had lost his mind. \"Sure, he sniffed me, but he didn't grab me.\"\n\n\"He didn't say anything about you being human?\"\n\n\"No. Why would he?\"\n\nParker scoffed and rolled his eyes. \"Of course. Since you're a girl. And you can make pups,\" he said bitterly.\n\nShell gave him a sympathetic smile. \"Sorry.\"\n\nParker shrugged. It wasn't like there was anything he could do about it and it didn't make a difference. He was part of a new pack where bullshit like that didn't matter. Parker's stomach growled loudly and he grabbed at it and gave Shell an embarrassed smile. \"Sorry. I'm hungry.\"\n\n\"Me too. I haven't had anything to eat all day.\"\n\n\"There's this diner in Timber. We could go there. No one would see us together. And they have fantastic cake.\"\n\n\"Sounds good.\"\n\nParker got up and followed Shell to her car and the two of them sped off, taking the two-lane highway towards Timber.\n\n\"I feel all sneaky,\" Parker chuckled.\n\nShell scoffed. \"I can do whatever I want with whoever I want.\"\n\nWhen they turned onto the village's main street, Shell parallel parked in front of the diner. Stepping onto the sidewalk, Parker looked down the street at the Timber General Store.\n\n\"Hey, let me introduce you to Buck and Stan first,\" Parker offered. He motioned down the sidewalk towards the Timber General Store. \"They just joined our pack. They're mates, too. Buck's a bear.\"\n\n\"Is he really a bear?\" Shell whispered. \"Like a were-bear?\"\n\n\"Yes. But don't worry. He won't eat you. Were-bear\", he added with a snicker. \"It rhymes. Were-bear.\"\n\n\"Oh my god, you are such a dork.\"\n\nThey walked into the store. Buck was standing at the register behind the counter looking up something on his computer. The burly man looked up from the counter.\n\nParker waved and smiled at the big bear. \"Hey, Buck.\"\n\n\"Parker,\" Buck nodded. He tilted his head slightly and scratched at his thick beard as he looked Shell over.\n\n\"Hi, Parker,\" Stan said with a smile as he came from the back room. The small, dark-haired wolf wiped his hands on his apron and gave Parker a quick hug.\n\n\"This is my friend, Shell,\" Parker said. \"That's Buck, and this is Stan.\"\n\n\"You looking for anything in particular?\" Stan asked.\n\n\"No. We didn't come in to shop. We were going to the diner to grab a bite to eat and I wanted to introduce her to you guys.\" Parker glanced at Buck. He wanted to ask Stan to come along, since he wanted to get to know the guy better.\n\nBuck put his hand on Stan's shoulder. \"Why don't you take a break and go grab a bite?\"\n\n\"Are you sure?\"\n\n\"Yeah. I'll be fine.\" Buck leaned down and gave Stan a quick kiss on the lips and then smacked him on the ass. \"Go on, cub.\"\n\nStan's cheeks went pink as he looked at Parker and Shell with an embarrassed smile on his face, which made both Shell and Parker laugh.\n\nThe trio walked down the street to the diner. Parker and Stan waved to Dottie then took the booth furthest from the rest of the diners. Shell slid in next to Parker, and Stan sat across from them.\n\n\"Hello again,\" Dottie greeted them happily and took their drink orders.\n\nAfter a moment of awkward silence, Shell looked at Stan and asked, \"So your mate is a bear, huh?\"\n\n\"Yeah. He's a big Kodiak bear, actually.\" Stan smiled. It was obvious that he adored his bear.\n\n\"Damn. I'm just getting used to the fact that there are werewolves.\" At Stan's frown of the word 'werewolf,' Shell quickly amended, \"I mean lycans. Wolf shifters. Whatever.\"\n\nStan nodded. \"From what I understand, they're not very common, the bears. So, I take it you haven't been mated long, since you haven't had your first shift. You're part of the Forest View Pack?\"\n\nShell rolled her eyes. \"Mm. I don't have a mate and I don't need a pack either.\"\n\nParker exchanged a glance with Stan. \"She's going through a rebellious stage.\"\n\nShell opened her mouth to retort, but Dottie arrived with their drinks and then took their orders.\n\nOnce Dottie left, Stan played with his straw in his glass, swirling it around his ice cubes. \"You won't be able to resist him,\" he said quietly.\n\nShell let out a sigh. \"I'll take the big idiot back, but he's gonna have to do a hell of a lot of groveling. But how did you know about that?\"\n\nStan shrugged and gave her a small smile. \"I can smell another wolf on you.\"\n\nShell actually looked like she was blushing. \"Ew, gross.\"\n\nAll three laughed.\n\n\"You'll get used to it,\" Stan said. \"Most shifters tend to have no sense of modesty when it comes to stuff like that.\"\n\n\"I am not very good at smells yet,\" Parker interjected. \"Except for Colton. I can pick him out anywhere. He's got the best smell.\"\n\nShell rolled her eyes and pretended to gag, making Stan laugh.\n\nStan added, \"And I can just tell that you haven't shifted yet.\"\n\n\"Were you born a wolf?\" Parker asked Stan.\n\n\"Yup. I was born in the De Soto Pack in Mississippi.\"\n\n\"Really?\" Parker asked. \"I guess that explains the accent. So what are you doing way up here?\"\n\n\"Well... My pack isn't very accepting of people who are different. And being smaller than most of the pack, they pushed me around... They decided they didn't want me around and I decided I couldn't stay...\"\n\n\"Hmph,\" Parker grumped. \"That seems to be a common theme.\"\n\nShell rolled her eyes. \"See, that's bullshit. That's why I don't want a pack. Are they all homophobic like that?\" she asked.",
        "\"Not Timber Pack,\" Parker proudly answered.\n\nStan smiled. \"Timber Pack is great. When I left, I was heading north to Canada. I heard about a pack there that took in gays and strays. I ended up on the road outside Timber, and then I met Buck.\" He thought for a moment then quietly spoke, \"You won't be able to survive on your own.\" He looked out the window and stared off into the distance. \"Wolves need packs. So many nights I spent alone, I just wished I was dead. Until I found Buck.\" He looked back at Shell and Parker and tried to smile, but he still had a haunted look in his eyes.\n\nParker and Shell reached out and each of them took one of Stan's hands.\n\n\"You're not alone anymore,\" Parker said.\n\nDottie brought their lunch and the three ate, making small talk about happier topics.\n\n\"This weekend is Colton's birthday,\" Parker said between bites. \"He'll be nineteen.\"\n\n\"Wow. He seems so much older,\" Stan said. \"I'm twenty-one and I feel like a dorky kid when I'm around him.\"\n\n\"Yeah. He looks like a man. But I suppose that's what he is now.\" Parker turned to Shell. \"Do you think you could come? I'd ask you to bring Curtis, but there's no way he would come. Not to the birthday party of a rival pack's alpha.\"\n\n\"I'll try to be there. But, yeah, I don't know about Curtis. We'll see.\"\n\n\"So, here's what I have planned....\"\n\n* * *\n\n\"He's gonna be here any minute,\" Parker mumbled to himself as he raced around the room trying to fix last minute touches. He fluffed the pillows on the couch for the tenth time.\n\nStan and Buck were helping decorate the mess hall in the common building for Colton's birthday. Well, Parker and Stan were decorating. Buck was sitting at the long table drinking a beer and scratching his belly.\n\n\"Calm down,\" Stan said, pulling Parker away from the couch. \"It's fine. Those pillows are going to fall apart if you fluff them anymore.\"\n\nThe pack all pitched in for Colton's birthday present. They had turned the unused half of the common room into a recreation area. Buck bought a big widescreen TV and got it hooked it up with a satellite dish. Some over-sized furniture made it nice and comfy for lounging around and watching TV or movies. Jed also hooked up his Xbox system. The rec area would give the pack another place to hang out together.\n\nParker handed Buck a \"happy birthday\" banner. \"Can you hang that over there?\"\n\nBuck looked at the banner with a cocked head. \"Uh, sure.\"\n\n\"Come on,\" Stan said with a snicker as he tugged Buck's hand. \"We need you. You're so big and tall.\"\n\nJed walked in carrying the birthday cake. \"Cake's here! Trey just texted me. He and Colton will be here any minute.\"\n\nJed set the cake down on the table and Parker looked it over. The round three-layer cake looked fantastic and professionally done, complete with the Timber pack's tattoo design in frosting on top.\n\n\"My mom helped me make it,\" Jed said. \"Okay, mom made it. But I decorated it.\"\n\n\"Good job,\" Parker said.\n\nParker was disappointed that Shell didn't show up. He thought that they had really made strides in mending their friendship. The hints he planted about joining their pack hadn't exactly been subtle, but apparently it wasn't going to happen. Not that Parker was going to give up. If he needed to hint a little harder, then that's what he'd do.\n\nHe went into the kitchen and checked on the food. Their cabin had a little kitchenette in it, but Parker really liked the big professional kitchen in here. He found cooking for Colton and the guys to be relaxing. The way they ate like they were starving made Parker feel like he had done something important for his brothers.\n\nHe pulled a pan of macaroni and cheese from the oven and set it on a rack to cool.\n\nStan poked his head through the window that opened into the kitchen. \"They're here!\"\n\nAs soon as Colton and Trey stepped into the mess hall, everyone yelled, \"Surprise!\"\n\n\"What? A surprise? For me?\" Colton said with feigned shock.\n\nParker rolled his eyes and frowned. \"You knew.\"\n\n\"Of course I knew. I'm the alpha.\" Colton grabbed Parker around the neck and pulled him close. \"Thank you, pup.\"\n\n* * *\n\nOf course Colton knew about the party. He could read Parker like a book. That didn't mean he didn't appreciate what his pup did for him. The whole pack was together, celebrating Colton's birthday.\n\nIt meant a lot to him that they were all here. And with the new rec area, there would be a new place for them to gather.\n\nColton had offered Buck and Stan one of the cabins, but they decided to stay in Buck's house in town. They often came out to the pack grounds to run or hunt in the forest or just to socialize.\n\nOne thing that Forrest did right was a weekly pack meeting and encouraging get-togethers. Colton continued that tradition, but they got together during the week as well. It wasn't uncommon for nearly everyone to gather in the mess hall nearly every night, unless Trey or Jed had dates.\n\n\"How was your date last night?\" Colton asked Trey.\n\n\"Man. She was hot. I'll just say that we showed each other a good time.\"\n\nColton, Jed and Trey chuckled.\n\nJed stood up straighter and puffed out his chest. \"I got Steven on the swim team's mouth cherry last night.\"\n\nJed held out his fist and Trey tapped it.\n\nParker frowned. \"That's not cool. I hope you guys don't talk about me like that.\"\n\n\"Yeah, right,\" Jed snorted. \"If anyone so much as spoke your name, we'd get our balls handed to us by this guy.\" He hooked his thumb towards Colton.\n\n\"Don't you forget it,\" Colton growled playfully, swatting at Jed's head.\n\nThe door opened and everyone went silent when Shell walked in, followed by Curtis. Everyone's eyes then turned to Colton.\n\nColton held out his hand. \"Welcome. Come on in.\"\n\nParker stepped around Colton and grabbed Shell's hand. \"I'm so glad you could come.\"\n\nCurtis shook Colton's hand. \"Curtis. Get some food and get to know everyone. We'll talk later.\"\n\nColton mingled with his pack-mates and their guests. It was the best birthday he ever had. He was very proud of Parker. He put on a great party and the food was terrific.\n\nColton walked up to Curtis and Shell. He put his hand on Curtis's shoulder. \"Walk with me.\"\n\n\"Be nice,\" Shell warned.\n\nColton shot her a wink then tipped his head for Curtis to follow. The muscular jock nodded and followed Colton out of the mess hall. They strolled along the trail that connected the cabins.\n\n\"It's amazing what you've done here,\" Curtis said after clearing his throat.\n\n\"This game you're playing is a very dangerous one.\"\n\n\"I don't know what you mean.\" Curtis ran his hand over his head, rubbing it across the dark stubble that served as his hair.\n\n\"You know exactly what I mean. If they find out you were here, things will not go well for you. Or your mate.\"\n\n\"Shell insisted that we come,\" Curtis sighed. \"She doesn't understand pack dynamics yet.\" He snorted and shook his head. \"Or she doesn't care. But I can't say 'no' to her. Don't tell her, but she's got me wrapped around her finger.\"\n\nColton laughed. \"Believe me, I understand.\"\n\nCurtis stopped and turned to face Colton. He dipped his head slightly out of respect then took a deep breath. \"Alpha, we wish to petition for membership in Timber Pack.\"\n\nColton eyed him for a moment. \"You switch loyalties easily.\"\n\nCurtis lifted his eyes to Colton's. Fire burned in his deep brown eyes, then he dropped his gaze again. \"Not at all. But I can't be loyal to someone who doesn't have my back.\"\n\nColton smiled. \"Why don't you run with us tonight? And then we'll talk.\"\n\n\"My mate hasn't had her first change yet, but I would be honored to run with you.\"\n\n* * *\n\nWhen Parker found his and Colton's pile of clothing, he stopped and fell down onto his side. The pack had just spent hours running and hunting and Parker was tired. He rolled around on top of the clothes and began his shift back to his human shape.\n\nThe giant, black wolf stalked up to him and straddled his body, bathing Parker with warmth.\n\nParker reached up and stroked his hands over Colton's furry head. Colton's ears twitched and he rubbed his muzzle over Parker's neck, letting his cold, wet nose trace a trail along his jugular.\n\nParker began to feel the effects of Colton being near and his body began to respond. \"Shift, Colton,\" he whispered.\n\nColton's muscles rippled as his body began to reconfigure. Once he finished, he lowered himself on top of Parker.\n\n\"Happy birthday, Colton.\" Parker reached up and stroked his hands over Colton's hair. \"I love you.\"\n\n\"I love you, pup.\" His tongue slid across Parker's lips, pushing its way in between, seeking out Parker's own tongue. He flicked his tongue against the shell of Parker's ear. \"I want to try something with you.\"\n\n\"I'll do anything you want, you know that.\" Parker slid his hands down Colton's body. He grabbed Colton's muscled ass and pressed as he pushed his hips up. \"Anything...\"\n\n\"I want you to trust me. Will you trust me?\"\n\n\"I do. You know I do.\"\n\nColton pulled Parker to his feet. He scooped up their clothes and ran to their cabin.\n\n\"Hey! Gimme my clothes,\" Parker cried.\n\nHe covered his privates and chased after Colton, both of them laughing the entire way. Once inside the back door, Colton tossed the clothes onto the floor. He picked Parker up and tossed him onto the bed.\n\nParker bounced on the mattress, and then he rolled onto his back so that he could see his mate. He loved how big and strong Colton was. He had muscles in all the right places. His eyes traveled down his hairy chest to his sculpted abs to those sexy V-shaped muscles that pointed to his furry crotch. His monster cock was already hard, pointing up towards the ceiling, the hood mostly retracted and exposing the dripping wet head.\n\nThe sight made Parker's dick jerk and dribble pre-come onto his stomach. He subconsciously spread his legs and licked his lips.\n\nColton grabbed the sheet and using his claws, tore off a strip of cotton. He tied one of the ends around Parker's wrist, and looped it around the headboard. He pulled until Parker's arm was over his head and then tied the other wrist.\n\nParker drew in a breath and held it. Another strip of fabric covered Parker's eyes.\n\nParker's heart started to race. He couldn't see a thing other than light filtering through the sheet. Having his arms pulled over his head made him feel vulnerable.\n\nColton's voice was a whisper near his ear. \"Let go and feel, pup. I want you to rely on your other senses.\"\n\nParker closed his eyes behind the makeshift blindfold and relaxed. He felt the rough pads of Colton's fingers sliding across his body, barely touching. A ghost of Colton's warm breath slid across his neck and down his chest. A warm, wet tongue circled a nipple. The hard nub tightened even further as Colton sucked and licked.\n\nParker let out a moan and his body trembled.\n\nAfter moving back and forth between the nipples, Colton's warm lips kissed their way down Parker's chest and stomach. The tip of his tongue flicked across the head of his dick. With a loud groan, Parker pushed his hips upward, needing more contact.\n\n\"Please, Colton.\"\n\nA hand pressed against Parker's belly, pushing him back down onto the mattress. A wet tongue flicked back and forth down the length of Parker's shaft. Parker's body trembled, his breath hitched. He writhed his hips on the bed, wanting to feel Colton's mouth around his dick.\n\nHot breath drifted across his sack. One at a time, his balls were taken into the warm heaven of Colton's mouth.\n\nParker felt a scraping around the base of his dick, which moved onto his legs. It was Colton's fingernails raking down Parker's thighs. Those hands then turned and slid under his knees. With a push, Parker found his knees pushed up towards his chest and his hips curved upwards.\n\nParker braced himself, fisting the sheet restraints around his wrists with an iron grip as Colton's breath warmed his asshole. At the first contact of Colton's tongue, Parker cried out in ecstasy. Parker babbled incoherently as Colton rimmed him. Colton swirled his tongue around, flicked it back and forth, up and down. Then he pointed it and pushed it inside. He slid it in and out, relaxing and loosening the muscled ring in preparation to take that thick monster he had between his legs.\n\nParker's body bucked and writhed on the bed while Colton's skilled tongue ate him out. He was desperate to grab onto Colton's head, to shove it between his legs and force him to keep going until Parker came all over himself. With his hands tied, he was helpless, completely at Colton's whim.\n\nColton suddenly moved away.\n\n\"Colton? Please don't stop.\"\n\nParker felt the bed shift as the bigger man moved over him and straddled his chest. Something hot and spongy brushed across his lips, leaving behind a trail of sweet and slippery liquid. Parker moaned and licked his lips and swiped away that delicious pre-come. He opened his mouth, taking Colton's thick cock head inside.\n\nColton thrust forward and began to fuck Parker's mouth. Parker sucked in earnest, wanting to pull a hot load from Colton's balls.\n\nOnce again Colton moved away. Parker let out a frustrated whimper and tugged at the sheet restraints and squirmed on the bed, trying to find Colton.\n\n\"Please,\" he begged.\n\nThe weight of Colton's bigger body settled on top of him, pushing his legs apart with those thick thighs. The hot head of his huge cock prodded underneath his balls, searching for the tight little entrance into Parker's body.\n\nParker spread his legs wide and pushed his hips up in an open invitation as he locked his legs around Colton's waist.\n\nThe tip found its target and began pushing in. Parker felt the crown breech the ringed muscle. He felt every single inch of that slippery cock slide into him. When he felt the furry hardness of Colton's groin against his ass, he knew that his mate was buried all the way inside.\n\nParker could feel Colton throbbing inside him. He could feel the beat of his heart through their physical connection. Colton's nose hovered over Parker's neck. A deep inhale of breath as it travelled over the mating bite made Parker shudder.\n\nColton pulled back. Parker was about to protest as the crown popped free, but just as the tip was about to pull out, Colton surged forward. The head pushed into the sensitive gland hidden behind the velvety walls then rubbed across it.\n\nParker moaned wantonly and arched his back up. His legs locked tighter around Colton and he pressed his heels into Colton's ass.\n\nParker tugged at his bonds. \"Yes.\"\n\nColton lowered his body on top of Parker. The feel of that thick hair on his chest and stomach as he moved set Parker's skin on fire.\n\nColton's arms slid under Parker's body. He held his boy in a tight death grip as his hips rocked back and forth, faster and faster, harder and harder.\n\nParker smelled Colton. The strong odor of his sweaty armpits assaulted Parker's nose, making him lightheaded. He pushed back into Colton's thrusts, rubbing his sensitive dick against the hard planes of Colton's furry abs.\n\nHe could hear and feel Colton's breathing against his neck. Colton's fat cock felt so damn good inside him.\n\nAll of his senses were in overload.\n\nParker was so close. Colton was going to fuck the come right out of him.\n\nColton's voice was in his ear, deep and rumbling. \"Come for me.\"\n\nParker's mouth opened, but no sound came out. His body went taut. Colton didn't stop thrusting. One more stab against his prostate and the pressure burst and Parker erupted. With a sob, he released, spurting streams of jizz into the tight space between their bodies.\n\nColton growled as he ground his teeth against Parker's neck, hard enough to mark but not break the skin. \"Gonna fucking come.\"\n\nSomehow his thrusts became even faster. He slammed into Parker's body hard enough to bruise.\n\nHis rhythm faltered and he gasped and cried out, \"Parker!\"\n\nParker felt Colton expand inside him as that big cock began jerking with each contraction of his groin muscles, firing jets of semen deep into Parker's body. Parker felt the liquid heat spreading inside his body and seeping out of him.\n\nParker's body relaxed into the mattress and went completely slack. Colton collapsed with him, crushing him into the bed with his weight. The sounds in the room were drowned out by Colton's harsh breathing, and Parker could feel his chest rising and falling.\n\nTheir breathing slowly evened out and Parker began to succumb to sleep.\n\nThe weight was lifted off his body. The blindfold was removed and the makeshift restraints followed. Parker's arms fell limp to the mattress.\n\nA ghost of hot air brushed past Parker's lips, whispering the words, \"I love you, pup.\"\n\nAfter a nice long nap, Parker woke. He rolled over onto his stomach and looked over at his sleepy mate, who was sprawled out on top of the blankets.\n\nParker scooted close and pressed his lips to Colton's chest. \"Colton. It's late. I really do have to go home.\"\n\nColton grunted. \"You are home.\"\n\n\"You know what I mean,\" Parker replied as he stroked Colton's chest hair.\n\nColton took Parker's wrist in his hand and rubbed his thumb across the red mark left there by the sheet. \"I want you to move in me.\"\n\n\"Soon, Colton. Just a few more months until graduation.\"\n\n\"I don't want to wait.\"\n\n\"I know you don't.\"\n\nParker leaned in and laid his weight against Colton's side. He moved his head closer and the pair shared a slow, lazy kiss.\n\n* * *\n\nParker stepped out of the shower and grabbed a towel from the towel rack. As he dried off, he thought about Colton, wondering what he was doing. He really wanted to be with him, back at their cabin. He already thought of it as \"their\" cabin. It was only a matter of time before he was living there with Colton.\n\nAlready treading on thin ice with his parents, he didn't want to risk their wrath by staying out and spending the night with Colton. Not that they would have noticed. When he got home, he found that his mother was working late at the office and his dad was parked in front of his laptop and was working as well.\n\nHe dried between his legs, rubbing the soft terry cloth over his dick. He still wasn't used to his foreskin. He pulled it back as he toweled off, and then pulled it forward, covering the head completely.\n\nParker smiled at the fading bruises on his hips, where Colton had gripped him tight while he pounded his ass like a beast. They would fade quickly, just like the hickeys and teeth marks all over his neck, collarbones and shoulders. Damn, his man was good at sex. It may have been Colton's birthday, but Parker sure did benefit.\n\nThere were other changes in his body that were new as well since he began shifting.\n\nLooking at himself in the mirror, he could see the differences. He had a blond treasure trail from his belly button down to the curls surrounding the base of his dick. His increased metabolism had burned off what little body fat he had. That combined with the effects of shifting also gave him more muscle definition, which was noticeable in his arm and chest muscles if you knew to look.\n\nIt was subtle, but he looked less like a boy and more like a grown man. The tribal wolf tattoo on his right arm accentuated that. Not to mention, he was also shaving his face every day now. He had just shaved in the shower and he was smooth as a baby's bottom, just like Colton liked it.\n\nParker tilted his head to the right and looked at the scar on his neck. The soft curve of his neck was marred by the bite scar, though to Parker it wasn't ugly. It was beautiful, a sign of his bond with Colton.\n\nHe wrapped the towel around his waist and opened the bathroom door. When he stepped into his bedroom, he was startled to see his father standing at his desk looking at Parker's cell phone.\n\nBarney quickly tossed Parker's phone onto the desk. He looked Parker up and down, his eyes registering surprise at Parker's body. Then he frowned. \"I see you've got a tattoo. You know how your mother and I feel about those.\"",
        "\"Yes.\" Parker turned his back to his dad, and grabbed a shirt from the closet and quickly pulled it on to cover up. He pulled a pair of shorts on underneath the towel then tossed the towel aside.\n\nParker turned to his dad. As usual, Barney had an aloof calmness about him, but as Parker watched him and really paid attention, he noticed something else. His father wasn't calm. He could actually hear his dad's heart racing and could even see micro-beads of sweat at his hairline. Was his father afraid of him?\n\n\"What happened to your neck?\"\n\nParker actually heard his father gulp after he had spoken. Parker tried to keep his face neutral and carefully replied, \"It's nothing.\"\n\nBarney opened his mouth to say something, but his BlackBerry buzzed. He pulled it from his belt holster. After looking at the screen, he quickly left the room.\n\nParker picked up his phone and sat down on his bed. He couldn't figure out what his dad was looking at. It wasn't like he had anything secret. Then he cringed. He had pictures of Colton. Naked pictures. He let out a breath of relief. He was pretty sure that his dad hadn't looked at his pictures.\n\nHe tapped his email app. The last email he had received was open. It was from Jed, the subject was \"Pack Pix.\" It contained pictures from their last run.\n\nThe first picture was of a black wolf crawling on top of Parker's human body.\n\nBile rose in Parker's throat. Crap.\n\nParker opened his bedroom door. His nose twitched as he scented the air and listened carefully. Stepping on the balls of his feet, he quietly made his way down the hall. His parents' bedroom door was barely cracked open.\n\nHe closed his eyes and listened. The sound of his father pacing back and forth on the carpet could be heard underneath his phone conversation.\n\n\"It's just like you said,\" Barney said. His voice was hushed, but he was clearly agitated. \"Yes. I saw it... No, I told you. I tried... What do I do now?\"\n\nParker hurried down the stairs, out the patio glass doors and into the back yard. He pulled his phone from his pocket, tapped Colton's name and began pacing as he waited for Colton to answer.\n\n\"Hello?\"\n\n\"Colton.\"\n\n\"Hey, pup. I was just thinking about you\u2014\"\n\n\"Colton. He knows.\"\n\n\"Who knows what?\"\n\n\"My dad. He knows.\"\n\n\"Fuck. I'm on my way. Stay in your room. Pack your stuff.\"\n\nParker ran back up the stairs and locked his bedroom door. He grabbed his suitcases and stuffed them full of his clothes. After he filled his backpack with his books, he found a box and filled it with his laptop and charger, his iPad, plus the personal items he wanted to bring with him.\n\nWhen his cell phone rang, he answered the call.\n\n\"I'm pulling in,\" Colton said before Parker could speak.\n\nParker picked up the two suitcases and hurried down the stairs. He let Colton in and the two of them loaded up Colton's car in two trips.\n\n\"What the hell's going on here?\" Barney asked as he came down the stairs.\n\nColton stepped in front of Parker, blocking Barney's view.\n\nParker moved around Colton. \"I'm moving out.\"\n\n\"You're what?\"\n\n\"Who have you been talking to about us?\"\n\nBarney gulped. For a split second, his face betrayed him. \"I don't know what you're talking about.\"\n\n\"He's lying,\" Colton said.\n\nBarney turned his head towards Colton. \"You get out of my house.\" He grabbed a silver letter opener from the table and held it out, brandishing it as a weapon.\n\nParker snarled and smacked Barney's arm, sending the opener flying. He shoved his father backwards, knocking him onto the floor. He straddled his chest and grabbed the front of his shirt in his fist. Letting his teeth show, he snarled, \"You threaten him again and you'll be eating through a straw.\"\n\nColton moved around to Barney's head and looked straight down at him. \"Who were you talking to?\" Colton demanded, using his deep alpha voice.\n\nBarney's eyes widened at the sound of Colton's voice. His body trembled in fear. Parker tightened his grip and Barney sang like a canary. \"I-I-I don't know! I have access to Forrest's financials; they asked me to watch the accounts. I found out by accident what Forrest was. Then they asked me to watch Colton. They said he was dangerous. They wanted me to keep you away from Colton, but it was too late.\"\n\nColton huffed. \"You were asked to spy on us, but you don't even know who you're working for?\"\n\n\"T-t-they... they offered me a lot of money.\"\n\nParker scoffed and stood up. \"Of course.\" He turned back to Colton. \"Let's go.\"\n\nBarney sat up. \"But what am I supposed to tell your mother?\"\n\n\"Make something up. You're apparently damn good at lying.\"\n\nParker followed Colton out the front door. He slammed it behind him and didn't look back.\n\n* * *\n\nColton and Trey walked into the Timber General Store. Colton had decided to include Buck in their discussion of the rogue wolf problem since he had fought off an attack on Stan. He also thought it would help to enforce the idea that Buck was part of the pack, despite the fact that he was a self-confessed loner.\n\n\"Hey, Buck,\" Colton said to the big bear standing behind the counter.\n\n\"Hey, guys.\"\n\nStan came from the back. The small man grinned at Colton, eager to please. \"Hello, Alpha. Can I get you anything? A drink?\"\n\n\"First, don't call me 'Alpha,' Stan. And I will take some water.\"\n\n\"Of course.\" Stan grinned as he hurried off. He returned with three bottles of water, handing them to Buck, Colton and Trey, before going to greet a customer who looked like she needed help.\n\n\"How's the work on the camp going?\" Buck asked.\n\n\"We still have a lot to do, but it's coming along.\"\n\n\"I'm available to help with whatever you need. And Stan is as well.\"\n\n\"I'll remember that.\" Colton glanced around. \"Can we talk in back?\"\n\n\"Sure.\" Buck called out to Stan, \"Cub, we'll be in back.\"\n\nStan looked up from the cans he was stocking. \"Okay.\"\n\nColton and Trey followed Buck into the stock room. The three sat down at a small wooden table.\n\nBuck grabbed the Ziploc bag that was laying on the table and opened it and pulled out a piece of jerky. Colton recognized it as the venison jerky that Jed's family was famous for. Buck offered Colton and Trey the bag. Colton took out a piece and bit into it.\n\n\"So what are we gonna do about this fucker?\" Buck asked as he gnawed on a piece of dried meat.\n\n\"I'm gonna kill him,\" Colton said matter-of-factly.\n\n\"Do you think Parker's dad has anything to do with it?\" Trey asked.\n\n\"No.\" Colton filled in Buck on the details of the confrontation with Parker's dad. \"I don't know who they are, but I don't think they have anything to do with the attacks.\"\n\n\"It sounds like the kind of bullshit the Lycan Council does behind each others' backs,\" Buck noted. \"Us bears don't have councils or anything like that. We kind of do our own thing. Live and let live.\"\n\n\"We can worry about that some other time.\" Trey pulled out a small notepad of paper and a pen from his jacket's breast pocket. \"Let's figure this out. He's attacked Parker twice. There was Stan, Curtis and TJ, and the maintenance people at the school.\"\n\n\"What do those people have in common?\" Buck asked while looking at Trey's writing.\n\n\"Nothing,\" Colton grumbled. \"They're all wolves. Well, Parker wasn't a wolf yet the first time he was attacked.\"\n\n\"Neither was the maintenance crew guy,\" said Trey. He tilted his head to the side in thought. \"Hmm. Okay. Where did these attacks take place?\"\n\n\"Parker was attacked in the woods behind his parents' house then here at the cabin.\"\n\nBuck added, \"And Stan and I were in the woods not far from here, by the river.\"\n\nColton nodded. \"Curtis and TJ were at the old water tower, and then he was seen under the bleachers at school.\"\n\nBuck frowned. \"I don't get it. What do they have in common?\"\n\n\"Colton,\" Trey said. \"They all belong to Colton. He's marked all of them as his.\" Trey looked Colton directly in the eye. \"Including Parker.\"\n\n* * *\n\nParker closed his laptop and set it on the coffee table. He stretched and stood up. He had finished up his homework and now he was bored.\n\nColton had gone in town with Trey to stop by the store to talk to Buck and to pick up some groceries.\n\nParker pulled on his coat and stepped out onto the porch. The ground had a couple of inches of snow, which blanketed everything in a beautiful coat of white. His feet crunched on the snow as he walked down to Jed's cabin.\n\nHe knocked on the door and waited but didn't get an answer. After knocking once more, he gave up. Jed wasn't home. His truck was in the parking lot, but apparently he was busy, or maybe he was out patrolling the area.\n\nParker headed back to his cabin. He stomped his feet on the porch and reached for the front door. He stopped when he saw that it was cracked open.\n\nHe sniffed the air but couldn't detect anything out of the ordinary. He was still getting used to his wolf senses and sometimes had trouble differentiating between mingled scents. The one scent he knew and could pick out anywhere was Colton's. Colton's scent was present, but it wasn't recent.\n\nHe looked at the ground and noticed wolf paw prints in the snow around the cabin.\n\nWhere they there before?\n\nThey looked too small to be Jed's tracks. Right?\n\nHe carefully opened the door and peeked his head into the cabin. When he saw no one inside, he let out a breath.\n\n\"Quit being so paranoid,\" he muttered to himself. \"You big scaredy cat.\"\n\nAs Parker shut the door behind him, he noticed the back door was ajar. He raced to the back door and pushed it shut and locked it. Okay, he was no longer just paranoid. He had crossed over into freaked-the-fuck-out territory.\n\nHeart pounding, he pulled his cell phone from his pocket.\n\nWhen he turned around, he found himself face-to-face with an unfamiliar man with the silvery-grey eyes of a crazy person. He had never seen the big man before, but those eyes were very familiar to him.\n\nParker screamed as the rogue's fist connected with the side of his head.\n\n* * *\n\nColton fidgeted in his seat. He tapped his foot nervously as he stared forward at the faded lines that marked the country road.\n\nTrey glanced at him from behind the wheel. \"You okay?\"\n\n\"I don't know. I'm... It's this weird feeling. We need to hurry home.\"\n\nColton pulled out his cell phone and tried to call Parker. No answer. He tried Jed. Again no answer.\n\n\"Hurry,\" he growled. He rubbed his palms up and down his jeans. His fingernails shifted into claws.\n\nTrey pressed his foot on the gas, gunning the engine.\n\nBy the time they pulled into the camp's parking lot, they were both feeling it. It was just too quiet.\n\nColton raced to the cabin and threw open the door.\n\n\"Parker!\"\n\nThe back door was wide open. Snow had accumulated on the door's threshold and the floor. Only embers remained of the fire in the fireplace.\n\n\"I'm going to kill that bastard,\" Colton snarled.\n\n\"I can't reach Jed,\" Trey said. He tossed his phone onto the counter.\n\nColton began pulling off his clothes and Trey quickly joined him.\n\nThe black wolf and the brown wolf bolted through the cabin's back door, following their pack-mate's scent trail.\n\nThey didn't have to go very far. The trail led to the last cabin, number 12. The empty cabin was one that was currently uninhabitable because it needed too many repairs.\n\nColton could smell both Jed and his mate inside.\n\nColton slammed his body into the back door. It caught on something. He looked to Trey and jerked his head. Both wolves pushed their bodies into the door with a hard shove.\n\nThe sight of reddish-brown fur lying in a lump in front of the door sent him into a rage. He gave another shove and then leapt over Jed's prone body.\n\nJed sounded as though he was having trouble breathing, but he was alive. A big silver knife or dagger was embedded into his back.\n\nColton couldn't attend to him right now because his concern was at the middle of the empty room, where Parker lay unconscious. The grey wolf stood on top of him, his front paws pressing into Parker's back. His pup's shirt was torn and his pants were ripped, exposing his ass.\n\nColton growled in rage. He directed a look of pure hatred at the rogue wolf, letting him know that he would be dead before this was over.\n\nColton and Trey moved apart, ready to attack their enemy. Colton looked at Trey and with a snarl and a head jerk let him know that the fight was Colton's. Trey backed off, moving towards Jed.\n\nColton shifted back to his human shape. He stepped closer to the wolf standing on his mate. \"Shift,\" he barked. \"Let me see you, you fucking coward.\"\n\nThe grey wolf pushed back and began to shift.\n\nColton's eyes widened in recognition.\n\n* * *\n\nParker began to stir awake.\n\nHis last memories were being dragged kicking and screaming from his home. When Jed tried to stop the rogue, they fought. They crashed into one of the cabins and the man stabbed Jed in the back with some kind of dagger.\n\nJed was hurt.\n\nHe had to help him.\n\nParker opened his eyes with a groan. Colton was there, standing naked. Fury poured off of him, his body tight, ready to fight.\n\nJed lay near the door, panting. His eyes were half-open, but they were glazed over. Trey's wolf stood over Jed then shifted back to his human form to attend to his fallen friend.\n\n\"Ah fuck!\" Trey shouted with a hiss as he pulled a silver dagger from Jed's back. The smell of burning flesh permeated the air as the dagger burned into Trey's palm. Trey tossed the offensive metal blade out the window into the backyard. With the dagger taken care of, Jed could start to heal. Trey shifted back into his wolf form to stand guard over his injured pack-mate.\n\n\"Colton,\" Parker croaked out.\n\n\"Stay down, pup,\" Colton replied without looking at him. His attention was on the rogue. \"What are you doing here, Ethan?\"\n\nParker turned his head and looked up at the naked man standing over him. The crazy man had a name.\n\nEthan.\n\nWho the hell was Ethan?\n\n* * *\n\nColton stared at the man he hadn't seen in two years. Ethan Braxton. The son of the Santa Fe Pack's former Alpha.\n\nThere was something seriously fucked up with him. His skin had a bluish-grey tint to it and the irises of his eyes had a greyish-silver color to them. He didn't smell right.\n\nEthan was only two years older than Colton, but he looked like he had aged twenty years since he last saw him.\n\n\"Why are you doing this?\" Colton asked. \"You know there's no way I will let you walk away.\"\n\n\"You don't deserve to be an alpha!\" Ethan barked. \"I was supposed to be Alpha, but you took that away from me! When they found out what you did to me\u2014\"\n\nColton scoffed. \"What I did? You were more than willing, Ethan. In fact, you were begging for it. You spread your legs like a bitch for any wolf who came sniffing. I wasn't the only one who fucked you.\"\n\n\"No.\" An evil smile spread across Ethan's face. \"But you're the only one left. They tossed me aside, exiled me. But I made them pay, all of them.\" He snickered, then he swiped the back of his hand across his mouth. \"And now it's your turn.\"\n\nA wolf could go feral or insane without a pack, but there was something more than that going on here. \"What have you done to yourself?\"\n\n\"Wolfsbane and silver-sulfadiazine injections. It masks your scent.\"\n\nColton's eyes widened in shock. \"You're fucking crazy. That shit is poison! It's killing you.\"\n\n\"I'm not crazy!\" he shouted, spittle flying from his mouth and dripping down his chin. \"You took from me and now I'm gonna take from you.\" He looked down at Parker. His eyes moved back up to Colton and he sneered. \"I think I'm gonna make you watch while I fuck your little bitch.\"\n\nColton's chest heaved. He let out a snort and he ground his teeth together in an attempt to remain calm. \"I already warned you. I told you if you touched him that I would kill you. I plan on keeping my word.\"\n\nEthan tried to goad Colton further. \"He's got a nice mouth on him. I've seen the two of you. He's real good at taking cock; drops to his knees or bends over like a good little whore whenever you want it. I wonder if he'll scream for me when\u2014\"\n\n\"Shut your fucking mouth.\"\n\n\"Not before you watch me kill him. And then I'm gonna kill you. And all of this will be mine.\"\n\nColton heard a low growl and he let his eyes drop down to Parker. Still lying on the floor, Parker was looking up at Ethan. And he was pissed. He snarled, showing off his canines. His eyes flashed amber and his body jerked as he started to shift.\n\nEthan kicked at the white wolf, who was still tangled up in his clothes. Parker still managed to latch onto Ethan's ankle with his sharp teeth. Ethan howled and kicked his leg in an attempt to loosen Parker as his own body began its transformation.\n\nThe distraction was enough for Colton to shift into his half-wolf shape.\n\nColton let loose a roar that echoed off the cabin's walls and rattled the windows.\n\nBefore Ethan could completely shift and attack Parker, Trey's wolf grabbed Parker by the scruff of his neck and dragged him over to Jed. Jed lumbered up onto all fours and blocked Parker with his massive body. He bared his teeth, daring the rogue to come at his charge.\n\nTrey stalked back and forth in front of his two pack-mates, making sure the fight would be only between Colton and Ethan.\n\nThis would be a fight to the death.\n\nEthan snarled in anger and lunged at Colton. Colton's clawed hand batted him away, slamming the grey wolf into the cabin wall. The entire wall shuddered, sending dust into the air.\n\nColton advanced on Ethan, picking him up and throwing him against the fireplace. He landed with a sickening crack, but it still didn't stop him. Ethan rolled over and lunged at Colton. He managed to get his teeth into Colton's leg, but Colton's fists knocked him free.\n\nWith a roar, Colton punched the grey wolf, then he used the claws on his left hand to slice across his belly. Colton attacked again. He latched onto the grey wolf's throat with his powerful jaws and tore.\n\nEthan let out a breathy whine and slumped to the floor.\n\nColton reached down and gripped Ethan's head. With a sharp twist of Colton's clawed hands, his neck snapped with a sickening crunch. A final breath escaped the grey wolf and it went still.\n\nColton threw his head back and howled triumphantly, the sound echoing throughout the forest.\n\n* * *\n\nParker shifted back into his human shape and jumped over Jed's wolf. He ran straight to Colton and jumped into the arms of the furry Alpha beast. Colton shifted back and ravaged Parker with kisses. He nibbled and sucked the base of Parker's neck, leaving a fresh hickey and teeth marks on his mating scar.\n\n\"Are you okay?\" Colton asked as he ran his hands all over Parker, looking for any cuts or bruises.\n\n\"I'm fine. He hit me on the head,\" Parker said as he rubbed his temple. \"But you got here before he could really hurt me. Is your leg okay?\"\n\n\"It'll be fine. Did he... touch you?\"\n\nParker shook his head, knowing what Colton was really asking him. \"No.\"\n\nColton leaned down and kissed Parker. \"I was so worried about you. Don't ever put me through that again.\"\n\n\"I'm fine too, by the way,\" Jed's gruff voice interrupted.\n\nParker and Colton turned to see Trey holding up Jed, who was struggling to stand. Parker ran over and grabbed Jed's other side and helped to stabilize him.\n\nColton frowned at seeing his naked mate touching his naked enforcer.\n\n\"Stop growling, Colton,\" Parker said. \"Jed's hurt. He's not trying to hump me.\"\n\n\"Trey, send for the doctor. He can give Jed something to counteract the silver poisoning from the knife.\" Colton reached out and squeezed Jed's shoulder. \"Thank you for protecting my mate.\"\n\nJed nodded once at Colton.\n\nColton looked at Parker and frowned. \"And for fuck's sake, everyone put some clothes on.\"\n\nHe pulled Parker away from Jed. The smell of another on his mate smacked him in the face. \"You smell like that dead fucker.\" A growl built in his chest. \"I need to claim you again.\"",
        "\"You mean...?\" Parker took a quick peek at Colton's crotch, then glanced at the others. \"Now?\" he whispered.\n\n\"Yes.\"\n\nColton grabbed Parker and threw him over his shoulder. Before he stormed out of the cabin with his mate, he glanced back at Trey over his shoulder. \"Call the Sheriff and have him get rid of that mess.\"\n\n\"Yes, Alpha,\" was Trey's reply.\n\n* * *\n\n\"I'm going to fuck you.\"\n\n\"Yes. Fuck me,\" Parker begged. He tugged at his wrists, which were pinned to the bed, firmly captured by Colton's hands. He arched his back up, wanting more contact with his wolf.\n\nColton thrust his hips forward, sinking his slick cock deep into Parker's body.\n\n\"Yes,\" Parker moaned as he writhed underneath his mate.\n\nColton jackhammered into Parker's body. Their bodies loudly slapped together, the sound echoing through the room. The bed shook and thumped against the wall.\n\nColton was wild. His beast was just below the surface, wanting to push through. The musky scent of Colton's body hit Parker's senses.\n\n\"Oh god,\" Parker cried. His canine teeth pushed through his gums. He felt his eyes shift and his vision sharpened. Parker's body trembled as Colton's thick cock pushed him closer and closer to coming.\n\nColton looked down at Parker, noticing the signs of Parker's arousal and the loss of control of his eyes and teeth. A growl built into his chest. His own fangs burst through his gums. He snarled and a string of drool dripped from the sharp teeth and splattered on Parker's chin.\n\nParker was so close. He stared up into Colton's glowing eyes and recognized what Colton needed. \"Shift, Colton. Take me like only an Alpha can. Claim me. Make me yours. Make me come.\"\n\nA growl built in Colton's chest. His body jerked and his muscles began to stretch. Hair erupted from his skin to cover his entire body. He grew bigger and taller, taking on the half-man/half-beast shape that was unique to his Alpha status. His cock grew in girth and length and continued to relentlessly slam against Parker's sensitive prostate gland as he took Parker like the beast that he was.\n\nThe alpha's voice was deep and guttural. \"You are mine.\"\n\n\"Yes, yours.\" Parker tilted his head to the side in submission.\n\nThen Colton struck. His teeth latched onto the sensitive bite scar, piercing the skin. He began to suck, drawing the sweet precious blood into his mouth.\n\nIt was too much. Parker screamed as his orgasm hit him like a freight train. His dick jerked, spewing ribbons of hot juices all over their bodies. His ass clamped around Colton's girth and began to milk it.\n\nWith a howl, Colton thrust forward and arched his body back, releasing his load like a geyser, pumping an inhuman amount of come into Parker's body.\n\nColton slumped on top of Parker and practically passed out. His exhausted body slowly shifted back into his human form as he drifted to sleep, still buried inside Parker.\n\nParker tenderly caressed and soothed his mate, whispering tender words of love until he too fell asleep.\n\n* * *\n\nColton ended the call on his phone. He swung his legs out of the bed and picked up his clothes to get dressed.\n\n\"They're here?\" Parker's sleepy voice asked from underneath a mound of blankets.\n\n\"Yeah.\" Colton reached out and brushed the hair from Parker's forehead. \"You can stay in bed if you want.\"\n\n\"No. I wanna come. I'll be okay.\"\n\nWith a moan Parker crawled from under the blankets and grabbed his clothes. His neck was freshly bruised and he had a trail of dried spunk between his legs. Colton smiled smugly. Everyone would know that Parker had been re-claimed.\n\nParker Montgomery belonged to him.\n\n\"Don't cover your neck,\" Colton said.\n\nParker shot Colton a look. \"Really? Don't be such a caveman. They all know I'm yours.\"\n\nColton pulled on his boots and stepped out of the cabin with Parker right behind, bundled in his winter coat.\n\nScar covered.\n\nStupid coat.\n\nSheriff Forrest stood near his department issued SUV, looking around at the campground. Carlton Butler and John Stone \u2014 his father and Jed's father \u2014 stood with their Alpha, flanking him in a familiar protective stance. The lycan doctor, along with two deputies, all members of the Forest View Pack, followed behind.\n\n\"Forrest,\" Colton greeted the other pack alpha. \"Good to see you.\" He turned to the others and nodded his head. \"Dad, John, Doc. This way.\"\n\nThe Forest View Pack followed Colton and Parker to the last cabin where Jed and Trey were waiting on the porch.\n\n\"Hi, Dad,\" Jed said and gave his father a weak smile.\n\n\"You okay, son?\" John asked quietly as he looked over his boy's bruised face. He stroked a thumb underneath one of his bloodshot eyes.\n\n\"I'm fine, Dad.\"\n\nJed's breathing had settled, but he looked exhausted.\n\n\"He protected my mate,\" Colton said to John.\n\nJohn patted Jed's cheek and smiled proudly. \"You did good.\" He stayed with Jed, watching over him, while the doc proceeded to check him out.\n\nForrest and the others followed Colton into the cabin.\n\n\"That's him,\" Colton said with disgust, nodding his head towards the body on the floor.\n\nEthan lay nude on the floor in his human shape, his muscular body tinged an eerie blue color, with his neck twisted at an impossible degree.\n\n\"Did you have to kill him?\" Forrest asked. \"He should have been brought before the Council.\"\n\n\"He threatened my mate and my pack. You weren't in any rush to do anything about it, so I took care of it.\"\n\nForrest glared at Colton. Colton didn't care. He wasn't going to pussy-foot around and coddle the older man's feelings.\n\nCarlton pushed the body with his boot, turning it so that he could see the face. \"Ethan Braxton,\" he said with surprise. \"He's the rogue? What the hell was he doing up here?\" he asked in an attempt to cut the tension that was forming between the two alphas.\n\nColton reluctantly turned his gaze from Forrest to his father. \"He killed everyone he blamed for his father's death, for losing his pack. I was apparently last on his list. He wanted what was mine.\"\n\n\"I kinda feel sorry for him,\" Parker said quietly. \"He was clearly sick. He didn't have a pack.\"\n\nColton reached out and rubbed the back of Parker's neck. Parker let out a quiet sigh and moved closer to Colton. The wolf had tried to kill Parker again and again and still his pup felt sympathy for him.\n\nDamn, he loved the hell out of his pup.\n\nAfter the deputies took care of the body and scrubbed and cataloged the \"crime scene\" for the Council investigators, Colton walked with Forrest back towards the Sheriff's SUV. Their pack representatives followed behind them at a distance.\n\n\"You should know that two of your pack members have petitioned. I plan to accept them into Timber Pack.\"\n\nForrest ground his teeth and growled in his chest. \"I'll let you have those two, but any more defections and you and I are going to have a problem.\"\n\n\"I didn't come to them. If people are looking to leave your pack, then that's your problem, not mine.\" Colton slapped his hand twice on the hood of the Sheriff's SUV. \"Thanks for coming out,\" he said with a smile that was just a tad condescending, but it was time for the Forest View Pack to leave his land.\n\nForrest's lip turned up in a snarl and he spun on his boot heels and got into his vehicle.\n\nColton stood with his arms folded across his chest and Parker at his side. Jed and Trey took their positions and the Timber Pack stood ground proudly on their territory, patiently waiting until their guests left.\n\n* * *\n\nA week later, the pack gathered around the camp's main firepit. The moon, full and bright, began its rise into the sky, signaling the start of the ceremony.\n\nParker, Trey, Jed, Buck and Stan stood behind Colton.\n\nCurtis and Shell stood before Colton. To Parker's eyes, Shell seemed perfectly calm. During his first change, he was a mess. In fact, he was already feeling the moon's effect on his body. He didn't know how she did it.\n\n\"Tonight we welcome a new brother and a new sister into our pack. Do you pledge your loyalty to Timber Pack?\"\n\n\"Yes, Alpha,\" Curtis and Shell replied together.\n\nColton looked back to the Timber Pack. \"Do you accept their pledge?\"\n\n\"Yes, Alpha,\" the group replied.\n\nColton grasped the back of Curtis's neck, urging Curtis to tip his head to the side. Colton scraped the sharp claw of his thumb down the side of his neck, drawing a drop of blood. Colton leaned forward and sniffed, then he repeated the same with Shell.\n\n\"Welcome to Timber Pack, my brother, my sister,\" Colton said.\n\nAfter handshakes and hugs all around, the entire group turned to Shell.\n\n\"How do you feel, babe?\" Curtis asked.\n\n\"I'm a little queasy and a little nervous, but I'm fine. I feel great, actually.\"\n\nParker looked up into the sky and his body shuddered. \"I feel it. I have to shift.\" He turned to Shell. His voice trembled as he fought for control. \"Don't you feel it?\" he asked as he rubbed his arms and stared at the moon.\n\n\"I guess.\"\n\n\"You guess? How can you\u2014 Oh god.\" Parker began to tear off his clothes. \"I can't stop it.\"\n\nKnowing that Parker didn't have control yet during full moons, Colton encouraged his mate to shift so that he wouldn't hurt himself. \"Go ahead, pup. Don't fight it.\"\n\nShell turned to Curtis, her eyes widened in panic. \"Is there something wrong with me? Why aren't I shifting too?\"\n\nCurtis took Shell into his arms. \"There's nothing wrong with you, babe.\" He stroked her back as she leaned her head on his shoulder.\n\nParker dropped to a crouch as the moon's pull took the last of his control. His body transformed, the white wolf pushing free. Once he finished shifting, he walked over to Colton. He nosed Colton's hand, wanting the contact of his mate. Colton pushed his fingers into Parker's white fur, rubbing and scratching him.\n\nA knowing smile spread across Colton's face as he looked at Shell. \"When was your last period?\"\n\nShell put a hand on her hip. \"Excuse me, no you didn't!\"\n\n\"Your body won't shift if you're pregnant.\"\n\nThe entire pack gasped. Parker let out a surprised woof.\n\n\"Oh shit,\" mumbled Curtis as he dropped to the ground and then passed out.\n\n* * *\n\nFIVE MONTHS LATER\n\nParker looked up as Colton stepped into the room. His heart actually skipped a beat. He had never seen Colton look more handsome than he did right now.\n\nLike Parker, he wore a black tuxedo with a dark forest green cummerbund and bowtie. His thick, black hair was styled perfectly. He had shaved and trimmed his goatee and mustache with precision.\n\nColton stood motionless, staring back at Parker. \"Christ. You look fucking fantastic, pup.\"\n\n\"I was just going to say the same about you.\" Parker walked up to Colton. He brushed a piece of lint off Colton's shoulder. He looked up at his mate. \"You're so handsome. I love you.\"\n\n\"I love you, too. Are you ready then?\"\n\nParker nodded. \"Yeah... You sure you wanna do this?\"\n\n\"Of course. Don't you?\"\n\n\"Yes.\"\n\nParker took the offered hand and followed Colton out of the cabin. They walked together to the common building.\n\nJed sat alone at the dining room table eating a plate of leftovers. He looked up when the pair entered the room.\n\n\"Wow. Look at the two of you.\"\n\nParker walked over to Jed and put a hand on his shoulder. \"You sure you don't want to come?\" he asked.\n\n\"I am not going to the prom by myself.\"\n\nParker felt bad for Jed. He had tried to get a couple of the guys he had been hooking up with to go, but none of them were brave enough to be seen with another guy.\n\nJed waved his hand at Parker. \"Wipe that sad look off your face. Buck and Stan are coming over. We're gonna hang out. Maybe go for a run and do some hunting.\"\n\n\"Parker!\" Shell called out, her voice loud and shrill.\n\nParker turned to see Shell shove the door open and walk into the mess hall with Curtis hot on her tail, holding up the hem of her dress.\n\nParker gasped. Shell was beautiful in a cobalt blue floor-length dress. Her hair was swept up in an up-do with a blue ribbon wound through it. Her make-up was stunning.\n\nCurtis looked handsome as well in his black tux with a cummerbund and bow tie that matched Shell's dress. The two of them standing together made the perfect couple.\n\n\"Why aren't you answering your phone?\" she demanded, hands on her hips, which accentuated her baby bump. Not that Parker would tell her that. He wanted to keep his balls where they were.\n\nParker felt his pockets. He pulled it out of his jacket pocket and looked at the screen. \"Oh. I didn't feel it vibrate. Sorry.\"\n\n\"Okay, girl. I need you to keep it real. I look like I'm smuggling a Thanksgiving turkey all up and through, don't I?\" she asked as she waved her hand over her stomach.\n\nCurtis put his arm around her. \"Babe, I told you, you look beautiful.\"\n\nShe shoved his arm away and pointed her index finger in his face. \"This is all your fault.\" Her voice took on a mocking tone as she mimicked Curtis's voice. \"'We don't need a condom. Just the tip, just this one time, babe.'\"\n\nParker pressed his lips together and tried not to laugh. Jed wasn't as successful and Shell shot him a glare that could kill.\n\nParker actually managed to not laugh and to speak with a straight face. \"Shell, you look gorgeous, bump or not.\"\n\n\"Yeah?\"\n\nParker nodded. \"Yeah.\"\n\nCurtis put his arm around Shell's shoulder. \"See, babe, I told you.\"\n\nShell turned and glared at Curtis, but the adoring look in his eyes melted her anger. He tipped his head down and kissed her tenderly.\n\nParker turned away to give them a little privacy.\n\nTrey walked in. He hitched his thumb over his shoulder. \"I'm heading out to pick up my date. I'll see you all there.\"\n\n\"Wait,\" Jed called out. \"Let me get some pictures.\"\n\nJed pulled out his phone and snapped a bunch of pictures of the couples as well as a few group shots.\n\nParker used his phone and took one of Jed, Trey and Colton, the original trio.\n\nAs they all left the mess hall, Parker looked back and saw Jed sitting at the table picking at his food while staring off into space. He couldn't recall ever seeing Jed look lonely before and the sight almost broke his heart.\n\n\"He'll be fine,\" Colton whispered in his ear as he rubbed the nape of Parker's neck with his thumb.\n\nWhen they walked into the gym together, Parker was so nervous he couldn't even really take in the decorations. The gym was decorated in an \"enchanted forest\" theme that bordered on tacky.\n\nColton grabbed Parker's hand and pulled him close. \"You're not ashamed to be seen with me, are you?\" he joked.\n\n\"Of course not.\" Parker hadn't even realized that he had been avoiding touching Colton.\n\nWhen he felt Colton growling, he looked around and saw the source of his annoyance. Seth and Kim were glaring at both of them with distaste.\n\nParker decided then that if he was going to have a good time, he was going to have to ignore all of the haters and the rival pack members. He gave Colton's hand a squeeze and led him towards the refreshments table.\n\nAnd they did have a good time. Their pack stayed together most of the night, Colton and Parker, Shell and Curtis, Trey and his date.\n\nSomehow Seth managed to win prom king and Kim was his queen, but Parker didn't really care. Of course he felt that Colton should have been the king.\n\nColton wanted one last slow dance with Parker before they left. Slowly they moved together to the ballad's rhythm, Parker in Colton's arms and Colton's head resting on top of Parker's.\n\n\"Do you think things will change after graduation?\" Parker asked.\n\n\"Probably.\"\n\n\"Do you think everyone will stay together?\"\n\nColton took a moment and then spoke. \"I think everyone will be busy doing their own thing, but the pack will always stay together. Trey will leave for school, but he will be back.\"\n\nParker took a deep breath. \"You guys are like my family.\"\n\nColton's arms tightened around Parker. \"We'll always be there for you and for each other. Don't ever forget that.\"\n\nAs they moved, one of Colton's hands slid down Parker's back and rested on the top of Parker's ass. Parker felt something move against his stomach. Colton's cock grew bigger and harder and Colton began to grind it into Parker, moving in rhythm with the music.\n\n\"You wanna get out of here?\" Parker asked.\n\nThe pair said a quick goodbye to their friends and hurried out of the gym to Colton's car.\n\nWhen Colton passed their turn, Parker turned his head and looked out the window, trying to figure out where they were going.\n\nColton turned onto the two-track gravel road that led up to the old water tower. He parked his car and grabbed Parker and pulled him close. He grabbed Parker by the back of the neck and held him tight as he kissed him hard.\n\n\"Let's get in the back.\"\n\nParker crawled over the seat into the back seat. He shrugged off his tux jacket and laid back against the seat and let Colton settle on top of him.\n\nColton stared down at him as he stroked his fingers through Parker's hair. The level of emotion in Colton's coal-black eyes took Parker's breath away.\n\n\"This is kinda like our first time,\" whispered Parker.\n\nColton smiled. \"Show me your belly, pup.\"\n\nColton aggressively kissed Parker while Parker ditched the cummerbund and untucked his shirt. Colton pushed his hands away and undid his pants. His hand slipped inside and wrapped around Parker's shaft. He stroked his hand up and down the silky smooth skin.\n\nParker moaned against Colton's mouth. Colton broke the kiss and kissed his way down Parker's neck. He flicked his tongue against Parker's ear. \"You want me to suck you?\"\n\n\"Oh god, please, Colt.\"\n\nParker's hands slid into Colton's hair. He gave his mate's head a little push and Colton slid down. Parker moaned unabashedly as his dick was surrounded by the wet heat of Colton's mouth.\n\nUp and down Colton slid while sucking gently, just the way Parker liked it. Parker writhed on the seat as Colton expertly worked him. When a finger slid between Parker's crack and pushed inside, Parker lost it.\n\nParker's hand gripped Colton's hair in a fist. \"I'm gonna come.\"\n\nHe grunted and bucked on the leather seat as he came in Colton's mouth. His hand loosened and fell from Colton's head as he slumped boneless against the seat.\n\nColton moved on top of him and kissed him. Parker tasted his load on Colton's tongue. He reached between their bodies and freed Colton's cock. He tugged at the hot shaft.\n\nColton grabbed Parker's wrist and stilled it. \"Save it. I wanna take you home and make love to you.\"\n\n\"Oh. So you're saying you don't have the stamina to go more than one round?\"\n\nColton's eyes flashed amber. He pushed Parker back and they shifted positions so that Colton could straddle Parker's face. He pushed his cock between Parker's lips, forcing it open. He thrust his hips hard and fast. The head of his cock pushed against Parker's throat while his heavy balls slapped Parker's chin.\n\nParker was able to suppress his gag reflex as he took Colton deeper than he ever had before.\n\n\"Gonna fucking come,\" Colton grunted between gritted teeth. He grunted rhythmically as his cock spurted over and over into Parker's hot sucking mouth.\n\nColton slumped back against the opposite door and tried to catch his breath.\n\nParker smiled. \"Now, you were saying something about making love to me when we got home?\"\n\nHe laughed as Colton scrambled over the seat and started the car.\n\n* * *\n\nONE MONTH LATER\n\nParker woke and looked over at the clock on his nightstand. It was just after midnight. Even though he hated leaving the warmth of their bed, he needed to pee. He slid from underneath Colton's arm and got up and used the bathroom.\n\nAfter he washed his hands, he decided that he was hungry. He went to the kitchen and opened the small fridge. Nothing caught his eye. Knowing that the kitchen in the common building was stocked, he decided to run over there.\n\n\"Colton,\" he whispered. \"I'm gonna go to the mess hall and make us some sandwiches.\"",
        "Colton grunted. \"'Kay.\"\n\nParker gave Colton a peck on the lips and gave the fur in the middle of his chest a quick rub. He pulled on a t-shirt and shorts, slid into a pair of flip-flops and quietly left the cabin.\n\nAs he stood at the big stove making grilled cheese sandwiches on the griddle plate, he thought back on the past few months and smiled.\n\nThey had graduated from high school two weeks ago. Everyone was now living in the cabins, except for Buck and Stan. They still lived in town.\n\nThe graduation ceremony was the first time Parker had seen his father since moving out. After the ceremony, Parker gave both of his parents a hug and his mother slipped him a card in an envelope, no doubt filled with cash. Parker had told her that he was happy and she seemed to be happy for him. His father had trouble looking him in the eye.\n\nIt was Saturday night and everyone was off doing their own thing. That seemed to be happening a lot lately. It was inevitable, Parker supposed. They were adults now, on their own, making their own way.\n\n\"Hey,\" Colton muttered as he shuffled into the kitchen. He was wearing only a pair of low-slung sweatpants, which accentuated his nice package. His hairy chest was on display, showing off the hard muscles of his pecs and abs. The thick head of hair was poking up all over the place and he needed a shave something fierce.\n\nHe was perfection.\n\nColton leaned down and gave Parker a kiss, then looked down at the griddle. \"Smells good. My favorite.\"\n\nThe outside door opened and Parker and Colton leaned through the window that peeked out into the dining hall.\n\n\"Boy, quit fussing over me,\" Shell groused as Curtis helped her sit down at the table.\n\nShe was undeniably pregnant now. Parker now knew what they meant by a pregnant glow. Even though her hair was kind of a mess right now, Shell was beautiful.\n\nCurtis was wearing only a pair of shorts, openly displaying a smooth, mocha-colored body. The hunky stud bent over and kissed the top of Shell's head before he walked into the kitchen.\n\n\"Ice cream craving,\" he said with a smile as he opened the freezer.\n\n\"You want some sandwiches?\" Parker asked, pointing towards the grilled cheese with his spatula.\n\n\"Yeah, I'd love some.\"\n\nCurtis scooped a hefty helping of cookies and cream into a bowl and brought it out to Shell. He sat down next to her and the two of them snuggled close while Shell ate.\n\n\"It's going to be weird having a baby around here in just a couple of months,\" Parker said to Colton.\n\n\"Pups are good for the pack. They strengthen the bonds between the pack-mates.\"\n\nParker buttered bread slices and set them on the grill. He placed the cheese and then topped them with another slice of bread. \"Do you want pups some day?\"\n\n\"I would love to raise kids with you some day. We could adopt an orphaned shifter or use a surrogate. In the meantime we'll just keep trying naturally.\" Colton slipped his hand down the back of Parker's shorts, his finger seeking Parker's ass.\n\nParker squirmed away and swatted at Colton with the spatula. \"Go sit down.\"\n\nParker handed Colton a stack of plates and a platter of sandwiches. Colton went into the dining room and sat down with Shell and Curtis.\n\nA loud bark of laughter signaled the arrival of Jed.\n\nJed walked into the kitchen. \"Hey, little dude,\" he said to Parker as he grabbed a soda from the fridge.\n\n\"I'm making sandwiches if you want one.\"\n\n\"God, I'd love one. Or two.\"\n\n\"Or four.\"\n\nJed snickered and patted his hard belly. \"You know me too well.\"\n\nJed pulled open the fridge and grabbed a jar of pickles and a bowl of potato salad. He juggled those with some plates and returned to the dining room.\n\nParker grabbed a couple of bags of chips and carried a big platter of sandwiches into the dining room and sat down with his pack-mates.\n\nThe outer door opened and everyone turned to see Buck and Stan stumble through the door.\n\nStan's face went red and he quickly buttoned up his shirt. He yanked up the shirt collar in a futile effort to hide the multitude of hickeys and teeth impressions on his neck and collar. His hair was messed up and sticking up all over, and there was a leaf and a twig poking out of it. Everything about Stan screamed that he had just been fucked to within an inch of his life.\n\nWith a smug grin on his face, Buck chuckled as he pulled a t-shirt on over his bulky, hirsute frame.\n\n\"We, uh, went for a, uh, run,\" Stan said, his gaze nervously bouncing around the room. \"Uh, we didn't think anyone would be up.\"\n\n\"A run, huh?\" Colton asked.\n\n\"Yes, Alpha,\" Stan mumbled. He ran his hand across his hair and snagged the leaf. He dropped it on the floor and the blush traveled up his ears and down his neck.\n\n\"C'mon, cub,\" Buck prodded. \"Let's grab some grub.\"\n\n\"There's plenty here,\" Parker said. \"Come sit.\"\n\nThe two of them sat down at the table and dug in.\n\n\"Hey, you're all here,\" Trey said as he walked in. He sat down at the table and grabbed a sandwich.\n\n\"You're back early from your date,\" Jed said with his mouth full of chips.\n\n\"Yeah, it was kind of a bust.\"\n\nJed frowned. \"Hm. I wouldn't know. I don't really do busts.\"\n\n\"That was really lame, man.\"\n\n\"Sorry. I'm operating on low fuel.\"\n\nEveryone chuckled at Jed and Trey's conversation.\n\nParker looked around the table.\n\nCurtis was snuggled against Shell, one hand resting on the swell of her abdomen, while the other fed her ice cream.\n\nJed and Trey continued their back and forth of bad puns, pushing each other with their shoulders.\n\nStan doted over Buck, getting his big mate another sandwich and cutting it on a diagonal, then brushing the crumbs off the front of the bear's shirt.\n\nParker finally looked at Colton, who had been watching him.\n\nColton took Parker's hand and gave the back of it a kiss, then leaned down and kissed Parker on the lips.\n\n\"I love you, pup.\"\n\nParker realized that he would never be alone again. He had his mate and his pack-mates and their bond was stronger than any family could ever hope to be. This was the life that he wanted. One where he mattered, where he made a difference.\n\nThis was just the beginning of a life-long journey with Colton, who started out as a crush and ended up his soul-mate and the love of his life.\n\nLong live the Timber Pack.\n\n* * *\n\nEnd of Book I "
    ],
    "authorname": "robcub32",
    "tags": [
        "gay drama",
        "gay romance",
        "gay novella",
        "paranormal",
        "werewolves",
        "18-year-old"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/timber-pack-chronicles-ch-09"
}