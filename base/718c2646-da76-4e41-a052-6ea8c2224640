{
    "title": "Shifting Gears",
    "pages": [
        "Author's Notes:\n\nHere is another quick little 'simple tale' that has become a multi-story arc.\n\n'Shifting Gears' is the second story in the tale of Kyle MacDenny. Minimal effort is made here to explain the backstory so I highly recommended you read the stories in the following order:\n\n<ul type=\"disc\"><li>Shifting Priorities</li><li>Shifting Gears</li><li>...the conclusion (to be named at a later date)</li></ul> \n\nI hope you enjoy them.\n\nAll characters engaging in sexual relationships or activities are 18 years old or older. \n\n********\n\nShifting Gears\n\n********\n\nChapter 1\n\nThe old motorcycle throbbed with unleashed power as Kyle MacDenny cruised down the Pacific Coast highway towards Santa Barbara. He was four days into his journey from Vancouver, BC.\n\nHe'd cut ties with the city of his birth when he'd packed his favorite clothes into his duffle, and donated the remaining items to charity including all furnishings of his apartment that were exclusively his. He'd handed his keys to the landlord and shook the man's hand. It would be up to Mike to contact his ex-fianc\u00e9 Gwen Carrington to let her collect the rest of the items in the apartment before it went back on the market.\n\nGwen was under court order to stay away from Kyle after she assaulted him, a flight attendant, and an Air Marshal on their recent flight back from France. The last time he'd seen her was in the courtroom and she'd avoided looking at him which was a small mercy. The judge ordered her to seek counseling on her obsessive behavior or face jail time. He hoped she took it to heart.\n\nKyle had informed his employer that he was giving his two week notice and in that time he'd be using the two weeks of vacation time they still owed him. His boss had been gracious as he really liked Kyle. He probably held out hope that Kyle might return to the fold once he'd recovered from whatever was driving him to make this bold change in his life.\n\nThough he'd originally intended on flying to California, his plans had rapidly evolved. His minimizing effort meant leaving nothing he needed behind as it would be a permanent change. He gave notice on his storage unit.\n\nIt took a week to get his motorcycle roadworthy. It was a Harley Davidson Heritage Softail Classic he'd inherited from his father. It was the only thing he'd received when the emotionally distant man passed away. The few good memories he had of his father revolved around helping him maintain the machine. It was his father who inspired him to get his own license to ride.\n\nHe'd put it in storage well before meeting Gwen and when he'd discovered her surprisingly intense distaste for motorcycles, he'd... failed to mention he owned one. When he thought back on that, he realized it was probably the only act of defiance he'd ever made while she was changing him to be her ideal mate. While his relationship with his father had been anything but emotionally close, the motorcycle was... intensely important to him. He'd given it tender care over the years and kept it in running condition... when Gwen allowed him the free time.\n\nToday, the big bike purred its deep rumble, expressing its satisfaction at finally being allowed to do what it did best. The late afternoon sunlight flashed across the expanse of chrome, making the highly buffed black paint look deeper and darker than it was. The black paint combined with the chrome detailing and big, shiny V twin engine was a beautiful combination. Especially when paired up with fat white-walled tires and kitted out with the studded leather trunk bag and twin saddlebags.\n\nThe three bags currently contained all of Kyle's earthly belongings. He'd taken the minimizing ethic to heart and only retained the essentials. The feeling of freedom that gave him was incredible.\n\nWhen he'd first received his inheritance, he'd been too intimidated to ride the powerful bike and only tinkered with it. One of the side benefits of Gwen's pushing him to get so fit was that he was now strong enough to control the Harley. Still, riding it demanded his complete attention and respect.\n\nHe was wearing his leathers and a full face helmet which drew some stares, glares, and sneers from the riders who opted for T-shirts, jeans and those barely there skull toppers that left most of your head and face exposed. He shrugged it off as to each, their own.\n\nHe'd called Fiona last night to let her know he'd be arriving in Santa Barbara around the dinner hour. He grinned as he recalled her happy and excited squeal. She'd asked him to meet her at the new five star hotel her parents had recently built high on a hillside overlooking Santa Barbara and the ocean. They'd opened it the previous spring and the posh hotel was already in high demand. She was very proud of it and she wanted to show it off... and him as well.\n\nHe saw his exit and pulled off the highway, glad to be on a road with more interesting scenery. He followed the traffic through a shopping district which became a series of neighborhoods, all the while gradually making his way closer to the hills. Then he was winding his way upwards while the houses got larger and farther apart with more dense vegetation for privacy. Definitely the proper neighborhood for a grand hotel.\n\nHe spotted the hotel's sign to the left and pulled off onto a smaller side road and finally into a large circular courtyard. A large Mercedes sedan was slowly easing its way backwards out of a parking spot close to the entrance so Kyle waited until he pulled away from the spot. As he maneuvered the big motorcycle into the spot he saw the sedan driver giving him the evil eye. Kyle grinned to himself as he pushed the kickstand out and shut off the motor. It felt good to stand and stretch.\n\nHe pulled off the helmet, stuffing his gloves inside, and ran his fingers through his hair as he looked in a rear view mirror. Meh, it would do. He took out his kerchief and dried his face and neck. He really needed a shower but first things first. He had a lady to see.\n\nTwo men in hotel uniforms stood on either side of the walkway leading into the front entrance of the hotel. They weren't sure what to make of him in his black leathers. The entire five story building was built on a slope so the lobby was actually in the middle of the building, the third floor with two upper floors of guest suites and two lower floors with more guest suites. The main restaurant, lounge, and bar were also on the level with the lobby. It was a very wide building.\n\nAs Kyle walked in the sliding glass doors he heard a yelp and saw white blond hair rush out of the office door to the left of the wide reception counter. Fiona was grinning from ear to ear as she dashed across the lobby to jump into his arms.\n\nThe woman had large, top notch breast implants and watching her run towards him was almost as rewarding as feeling them pressed against his chest as he wrapped his arms around her. He worried what was showing as she was wearing a dress that only came down as far as mid-thigh.\n\nHer mouth was on his and her tongue was in his mouth as she clung to him. He kissed her passionately in return and felt her trembling in his arms. When he finally pulled back from her full lips she was swooning a little.\n\n\"Oh my god, I missed that!\" she sighed.\n\n\"Hello Fiona,\" he said with a smile as he gently lowered her to her feet.\n\nShe was drinking in how rough and rugged he looked in his leathers then her expression turned to surprise. \"Wait! You're wearing leather! I heard a deep rumble of a motorcycle! That was you?!?\" she gasped.\n\nHe grinned at her and nodded.\n\n\"Show me!\" she exclaimed with glee and dragged him by the hand out the doors. He led her to the motorcycle and she gasped.\n\n\"It's gorgeous! Oh my god! You have to take me for a ride!\" She paused as she heard what she'd said. She turned to look at him with a hungry smile. \"You really have to take me for a ride,\" she purred and he caught the innuendo.\n\n\"Are you ready to have this much power between your legs?\" he asked with one raised brow.\n\nShe giggled at his corny line then pressed her tits against his chest once more and tilted her face up to his. He tipped his face down and stroked her lips with his, nibbling them until she grabbed his jacket with a sudden intake of breath and pressed her mouth to his more firmly.\n\n\"Fuck, you're going to make me cum in my panties!\" she whispered to him after the kiss.\n\n\"We can't have that! You'd better take them off.\"\n\nShe pushed back from his chest, her eyes wide as she smiled. \"Phew! Let's take a breath. I made dinner plans for us tonight. Then we'll have that fun!\"\n\nHe smiled and nodded.\n\n\"When did you get this?\" she asked as she looked back at the Harley.\n\nHe smiled fondly at it. \"It was my father's. I inherited it years ago and I've had it in storage. I've been keeping it in running condition but I never got to ride it very often.\"\n\n\"Gwen let you have a motorcycle?\" Fiona asked skeptically.\n\nHe shrugged. \"I didn't tell her I had it.\"\n\nFiona grinned at him in shock. \"Really?\"\n\n\"The entire time we were together,\" he said with a nod.\n\nShe gave him an appreciative look as she knew how controlling Gwen had been. \"How?\"\n\nHis smile softened as his eyes went back to the motorcycle. \"I didn't have the best relationship with my father but this... it's the only connection I have to the best moments I had with him. I couldn't lose it,\" he said quietly.\n\nHer eyes softened as she saw how important it was to him. \"Did you want to take a shower and change? I'm taking us to a fabulous beachfront restaurant.\"\n\nHe sighed happily. \"I would love to take a shower and put some cooler clothes on.\" He unlocked the saddlebags and carried them as she led him back into the hotel.\n\n\"I have a shower in the bathroom of my office so you can clean up in there,\" she said as she pointed to the door to the left when she closed the office door.\n\nKyle went into the washroom and got his kit out with a change of clothes. He quickly showered, shaved, and dressed in his khaki pants and a stylish shirt from a Barcelona designer. He rolled the sleeves back to help him cool off. He slipped on his shoes and packed the rest in his saddlebags.\n\nWhen he left the bathroom Fiona looked up from her desk and smiled happily at him. \"You can leave the bags in my office. We'll come back after dinner to collect them and your motorcycle. I have a spot in my garage for it.\"\n\nFiona hooked her arm through Kyle's and led him outside once more to the parking lot. One of the uniformed men handed her the key to the sporty red coupe he'd brought up for her.\n\n\"Thank you, Michael!\" she said with a smile as she moved to the driver's side.\n\nKyle sat in the passenger seat and looked to the lovely woman smiling back at him.\n\n\"You like seafood, don't you?\" she asked.\n\n\"Love it!\"\n\n\"Excellent!\" she grinned. She pulled out of the driveway a little more rapidly than Kyle would have preferred but he was her guest. He just ensured his seatbelt was secure and put his faith in the expensive vehicle's safety equipment.\n\nThey made their way back down out of the hills towards the ocean side. Fiona was an aggressive driver but she was attentive to the road so Kyle did his best to relax.\n\nThey finally pulled up to a restaurant overlooking the ocean and Fiona stopped by the valet parking. She handed the key to the young man as he held the door for her. Kyle waited on the sidewalk for her and they went inside arm in arm.\n\nThe moment they entered the bar a cheer went up from a group of ladies at a table by the far wall. Fiona's smile just got wider and happier as she rushed forward to press cheeks with the five women waiting with drinks in their hands. She turned back to smile at Kyle.\n\n\"Girls, let me introduce you to my new good friend, Kyle MacDenny!\" she gushed.\n\nKyle smiled at the group and got the distinct impression of being under a microscope. It seemed to be a friendly one at least. They were all smiling and he caught one licking her lips hungrily much to his surprise.\n\nNone of the women was under thirty and, by his estimation, were likely in the same age range as Fiona, so early thirties with just one in her mid-forties.\n\nFiona put her arm around the closest woman. \"This beauty is Monique. We go back to our high school days!\" Kyle smiled at the lovely, mocha skinned woman. Just two inches taller than Fiona's 5' 6\", she was wearing her long straight black hair pulled back in a pony tail. He shook her hand as she flashed a brilliant smile at him. There was a definite twinkle in her dark eyes.\n\nFiona moved to the next lady to continue the introductions.\n\nCharlize was the shortest of the group at maybe 5' 2\", but she also looked to be the strongest as well. She had full sleeve tattoos on her muscular arms and her short sleeve top showed them off quite well. She wore her jet black hair cropped close on the sides and just slightly long from her bangs, over the tip of her head to her shoulders. The tips of the longer hair was dyed violet. Fiona said she was a friend from their university years.\n\nGloria was a full figured woman who was the oldest in the group, with a wild mane of strawberry blonde hair, a vivacious and bubbly personality, and a crooked smile. She'd been the lip licker and, it turned out, was Fiona's next door neighbor.\n\nNext was Phoebe who was a tall, lean, and serene yoga master with straight, yellow blonde hair that just reached her ass. She wore large glasses perched on her prominent nose. Fiona met her teaching a Yoga class years ago and they bonded.\n\nFiona put her arm around Kyle as she introduced Marion, a stunning redhead whose luxurious locks reached mid-back. Tall and curvy, she had bedroom eyes, high cheekbones, and a sensual mouth with a slight upturn at the corners like she was enjoying a joke, possibly at your expense.\n\nHe immediately picked up a subtle tension in Fiona and realized, of all of Fiona's circle, this woman was the one she saw as a threat. He moved his left arm around Fiona's back as he shook Marion's hand. He felt Fiona relax a little as she explained that Marion was also in the hospitality industry but dealt with executive travel. She booked rooms in a number of Fiona's hotels for her clients.\n\nNow that he'd met them all Kyle glanced around. \"I'm not the only male in our party tonight, am I?\"\n\nFiona grinned at him and the group chuckled at his surprised look.\n\n\"My husband Dale is the assistant coach for the LA Lakers. He's on the road.\"\n\n\"Basketball, right?\" Kyle asked with a wince and guilty smile.\n\nSome of the ladies made mock cries of outrage that he didn't know, but Gloria had a huge smile of delight on her face. \"You're not a nut for pro sports?!?\" she exclaimed.\n\nHe shrugged and shook his head.\n\n\"Fiona! He's a keeper! All this and no aggravating sports obsession!\" Gloria continued, gesturing at Kyle's body.\n\n\"Gloria! You're embarrassing the man!\" Fiona chastised her neighbor but did it with a grin on her face.\n\n\"Sorry, Kyle! It's just a treat to meet a man like you. My Roger is at home, glued to the boob tube watching whatever game is on. Basketball, baseball, football, or god help me, hockey!\" She made a gagging sound. She looked at the other women. \"Doesn't 'hockey' sound like something a cat does to get rid of a hairball?\"\n\n\"I like hockey! Well... hockey players,\" Charlize clarified with a cheeky grin.\n\n\"What? Are they the flavor of the month?\" Gloria jabbed good naturedly.\n\n\"Hey, athletes are the only ones with enough stamina to keep up,\" the brunette shot back with a smirk of her own.\n\n\"Oooo!\" the ladies exclaimed then laughed.\n\nFiona gave Kyle a little hug. \"Charlize is... between boyfriends?\" She glanced over at the woman to confirm and received a nod. \"Phoebe's husband Linus is a spiritual guru and travels a fair amount. He's in India now, doing a pilgrimage or something to do with expanding his Chakra.\"\n\nThe slim blonde nodded enthusiastically and grinned at Kyle.\n\n\"Let's hope that's the only thing he lets the young ladies expand!\" Monique joked as she performed a few traditional Indian dance moves with a smooth, sensual and suggestive grace.\n\nMore hoots erupted from the group as Phoebe shook her head vehemently but was smiling none-the-less.\n\n\"What are you drinking?\" Marion asked Kyle as she drifted closer and lifted her own wine glass.\n\n\"Oh, uh...\" he began.\n\n\"Scotch neat, right?\" Fiona answered quickly and Kyle nodded to her. Fiona caught Monique's eye to watch Marion, then headed to the bar.\n\n\"Fiona didn't mention someone in your life,\" Kyle said looking towards Marion and received a sly smile in return.\n\n\"Confirmed bachelorette. Marriage and monogamy are definitely not for me.\" She eyed Kyle like a delicious bonbon just waiting to be unwrapped. \"Too many delights to restrict myself to just one,\" she purred. \"Where did you and Fiona meet?\" Marion asked boldly to distract Kyle.\n\nKyle saw he had everyone's attention. \"Didn't Fiona mention that?\" he asked in surprise.\n\n\"Oh she's been hinting at a mystery man who was coming to visit her but she's been keeping the truth about you all to herself!\" the redhead beauty pouted.\n\n\"You know she went on a cycling holiday in France, yes?\" he began.\n\n\"That's when her husband showed his true colors and she dumped his sorry ass!\" Gloria trumpeted.\n\nKyle chuckled and nodded. \"Yes, he certainly did and she did.\"\n\n\"So that's where you met her? On the tour? Were you one of the guides?\" Monique gushed.\n\n\"I was on the tour myself,\" Kyle answered.\n\nMonique blinked. \"But I thought it was for couples!\"\n\nHe knew this would only lead to more questions but he gave them a straight answer. \"Yeah, well... originally I was going to be with my fianc\u00e9 but the night before it began she dumped me in a letter she left at the hotel.\" The ladies gasped and made sympathetic noises.\n\nHe held up his hands. \"It was for the best. Like Fiona's dumping Alfred.\"\n\n\"What exactly did he do?\" Marion asked, interest lighting up her shockingly blue eyes.\n\nKyle smiled regretfully. \"You'll have to get that story from Fiona.\"\n\n\"You're a cyclist?\" Charlize asked and he nodded with a smile. \"Alfred was always challenging me to race against him. Such an arrogant jerk! Did you race him? Did you win?\" she asked excitedly.\n\nKyle grinned. \"Yeah, I raced him.\" He paused for effect. \"I cleaned his clock.\" Excited cheers erupted from the group. He looked towards the bar and saw Fiona returning with the drinks. She caught his look and moved a little faster.\n\nKyle accepted the tumbler of whiskey from Fiona's hand with a smile. His first sip told him she'd splurged on the 'good stuff' and he nodded his appreciation with a raised brow as he caught her eye. Her smile in return spoke volumes. She'd told him she intended to pamper him during his visit and this was obviously just the first example.\n\n\"A whiskey connoisseur. At such a young age, too!\" Monique teased.\n\n\"I'm not that young,\" he replied quietly.\n\n\"Just young enough,\" Fiona purred with a wicked grin.\n\nKyle's face heated up as interested eyes turned in his direction. \"They were asking how we met,\" he said to change the subject.\n\n\"Were they?\" Fiona said though her eyes went to Marion.\n\nThe woman accepted the challenge. \"Yes! Your mystery man is here so isn't it time you dish on some details about him and how you met? You've been dropping hints for weeks!\" Marion insisted with that sexy pout which did things to make Kyle's pants tight. Worse, she seemed to know it!\n\nFiona moved up against his side and grinned at her friends. \"We should probably be seated before we talk about that.\"\n\n\"When are we going to get our table? If they don't hurry we may have to start on Kyle. He looks pretty yummy!\" Gloria said with a bold look.",
        "\"Hands off woman!\" Fiona said with a fake scowl.\n\n\"Who said anything about using our hands?\" Gloria returned as she licked her lips again, shocking laughter and whoops from the group.\n\nKyle smiled but glanced nervously at Fiona who picked up the message loud and clear. He wasn't up for being eaten alive, even if it was by this bevy of beauties. She put her arm around him protectively.\n\n\"Sorry girls, he's not on the menu, tonight,\" she teased. Eyes flashed in delight that she hadn't forbidden a potential encounter with her lover at a future date.\n\nKyle heard that message as well and glanced once more at Fiona who was busy trading knowing smiles with her friends. So, she was willing to share her boy toy with her friends. Before he'd ridden down to see her he'd known that she wasn't after a serious relationship. Hell, she'd made that clear in France when she'd happily shared him with the other ladies on the tour. She'd just divorced a bastard and was now looking for a little fun! It just felt a little... off putting to be so blatantly treated like... like... his mind returned to the uncomfortable but seemingly appropriate term, 'man whore'. Wasn't she paying his tab while he was down here? The term fit and his thoughts darkened.\n\n\"Table for seven for Albright?\"\n\nMonique raised her hand as they turned to see the hostess smiling at them. Gloria cheered.\n\nAs they followed the woman to their table on the patio with drinks in their hands, Kyle took some deep breaths of the fresh air and tried to shake off the funk creeping into his mood. Seize the day and all that. He was here to see where life took him and enjoy the company of a lovely woman. He didn't have to be defined by this.\n\nWhen they reached the table Kyle found himself being positioned at the head of the table with three women on each side.\n\n\"Ok, this doesn't feel weird,\" he said as they all took their seats and looked up the table towards him. \"Why am I at the top?\"\n\n\"You prefer to be a bottom?\" Marion asked innocently from his immediate left.\n\n\"Definitely a top!\" Fiona immediately returned with a wicked smile from his right.\n\nGiggles went down the table and Kyle just smiled at the teasing but he wondered if he was going to be enduring it all night. He was beginning to wish one of their husbands had toughed it out to join them.\n\nAs if reading his unease, Marion leaned forward to catch Fiona's attention... and expose her deep cleavage to Kyle who pulled his eyes away once he realized he was staring.\n\n\"Time to dish on your vacation!\" the redhead begged.\n\nFiona smiled and nodded, getting cheers from the others. She began with explaining how Kyle's fianc\u00e9 had eloped at the last second and described her initial disagreement with Kyle. That drew sympathetic sounds from the women.\n\nThen she told them how she spotted him leaving the Livingston's hotel room that first night. Giggles erupted and she continued with the story of the others spotting him making out with one of the guides. This led to more giggles. She next mentioned how Alfred offered Kyle a night with her as the prize for winning a race.\n\nGasps of outrage burst from the ladies as Kyle's face burned with embarrassment. She was painting a pretty shallow picture of him.\n\n\"In Kyle's defence, none of these things were his doing. It was Skye Livingston and her mother who convinced him to spend a little time with them,\" she explained simply.\n\n\"Both of them? At the same time?!?\" Gloria exclaimed in shock and delight.\n\nKyle just nodded slightly with a weak smile. He needed to deflect their erroneous impression of him. \"But Dita, the tour guide, was just giving me a kiss to thank me for massaging a cramp out of her calf when Alfred hit her with his bike. She was just being nice.\"\n\n\"That night I found Kyle and I asked him to crush Alfred in the race the following day and he did. By eight minutes!\" Fiona cheered.\n\nKyle breathed a sigh of relief that she hadn't mentioned her other activity that night.\n\nCharlize was especially excited about hearing how he'd won. \"An eight minute lead! Shit! You must have been flying!\"\n\nThe waiter arrived and they had to ask for more time to look at the menus. She took their drink orders and Fiona ordered him another drink.\n\nKyle saw Charlize was still waiting for a response so he smiled to her. \"Yeah, he was a strong rider but he was in a rage that day and burned up most of his energy early on. He dominated the climb but I left him in the dust on the descent and sprint for the finish. He had nothing left.\" He was grinning as he recalled the thrill of that ride.\n\n\"Alfred was so spent he toppled over at the end and broke his collarbone,\" Fiona said with a grin and they cheered once more. \"And I made him sign the divorce papers at the hospital!\" Cheers erupted again. They were drawing stares from nearby tables.\n\nFiona's eyes flew wide. \"I almost forgot! Your winnings from Alfred's wager!\" She dug in her small purse and handed him an envelope. Inside, he saw a check for close to three thousand dollars. He nodded and pocketed the envelope. \"Alfred had to pay for all of Kyle's upgrades on the trip,\" she explained to her friends.\n\n\"Was that the extent of Kyle's reward?\" Marion asked with a coy smile once the table was quiet again.\n\nFiona looked at Kyle with heat in her eyes. \"Oh no, it was a very rewarding night in so many ways,\" she purred as his face felt like it might ignite.\n\n\"I suppose that answers the question about your stamina,\" Charlize said with a wink.\n\nKyle just smiled at her and looked down to straighten his napkin on his lap.\n\n\"Yes, the women certainly enjoyed the remaining days of the trip,\" Fiona nodded to her friends.\n\nKyle was getting a little desperate to clear up the misconception. \"Again, in my defense, I was just trying to enjoy the cycling in France. I wasn't there looking for a... booty call!\"\n\nFiona nodded in agreement. \"It's true and that's what made it all the more delicious. Kyle isn't a player and I'm sorry if I'm giving everyone that impression. He was always so sweet, discreet, and conscientious! Being fabulous in bed is a wonderful bonus.\"\n\nKyle looked at her in surprise. So much for being discreet!\n\nHe was prevented from responding when the waitress returned only to be once more sent away for more time. Finally, they picked up their menus to choose.\n\nThen he felt it. A bare foot slipped under his right pant leg to stroke the skin of his shin. Fiona.\n\nHe froze when he felt a second bare foot duck under his left pant leg to run up the back of his calf. Marion. Both women were enjoying a feel. Likely oblivious to the other's flirting. His legs were trapped between theirs and he was feeling tingles running up and down his spine.\n\nThe third time was the charm for the waitress as she arrived to take their orders. Kyle chose a filet of sole over a bed of rice. He wasn't that hungry for some reason. The leg massage continued. He glanced at the two women and saw their subtle smiles.\n\nSuddenly the foot rubbing his calf pulled away as Fiona's foot paused. The blond cast a suspicious look across the table to the redhead who was looking down and across the table towards Charlize.\n\nFiona pulled her foot back and reached out to touch his hand. He took hers in his and rubbed his thumb over the back of it soothingly. She relaxed and smiled at him.\n\nKyle leaned back and just listened to Fiona interacting with her friends and smiled. These were the people she felt most at ease with, aside from Marion, but there was always one in the group with a conflicting agenda.\n\nHis attention was pulled back to the present as he heard a question directed to him from Phoebe who had been quiet up to this point. He'd noticed she was drinking sparkling water. Keeping her body pure.\n\n\"What happened to your fianc\u00e9?\"\n\n\"Gwen? She, uh, she showed up near the end of the tour and tried to reconcile, but for me it was too late. She was too controlling and I needed to live my own life.\" He looked at Fiona who was smiling and nodding to him. \"I should bring you up to speed on this too. Gwen was on my flight home and assaulted me while I was sleeping. I stopped her and told her it was over between us. Then she went after a flight attendant and assaulted an Air Marshal. I saw her once more in court. She finally understood that no meant no. She's finally out of my life.\"\n\nFiona gasped. \"She assaulted you on the plane?\" She reached up to turn his chin so she could look for injuries.\n\nHe gently took her hand from his chin and glanced down the table. \"Uh yes. Sexually.\"\n\nEyes widened then laughter burst out.\n\n\"I've never heard of a man claiming sexual assault,\" Gloria guffawed.\n\nKyle frowned at her. \"So a man can't say no but a woman can?\"\n\nGloria's laughter petered out. \"Ah, I didn't say that. It's just so rare it sounds ridiculous!\"\n\n\"Being rare doesn't make it less repugnant. I woke up with... an intimate part of me in the mouth of a woman I was trying to escape from. Don't you think I'd find that upsetting?\" He was beginning to get cross.\n\n\"Yes, I can see you're still upset. I'm sorry. I didn't mean anything,\" Gloria said backpedalling.\n\nKyle took a breath to settle his nerves. It was true. He was still a little sensitive about Gwen's interference in his life. He sighed and gave himself a little shake. \"I'm sorry if I overreacted. She had a rather severe impact on my life and I'm still trying to get a handle on it.\"\n\n\"No, it's fine. You were put through something unwanted. I get it,\" Gloria acknowledged. Then her crooked smile returned. \"Of course, for me, waking up to find a mouth on my intimate part would be heaven on earth! Roger's never done that for me and none of the boyfriends I had before him even thought to ask!\"\n\nHer friends made sympathetic noises then burst into giggles.\n\n\"Yeah yeah, fuck you too,\" Gloria said with a grin.\n\nOnce the chuckles died down Marion touched Kyle's arm to get his attention. \"What do you do for work, Kyle?\"\n\nHe noticed her hand was still on his arm but he pulled his mind back from that distraction. \"I was an Investment Manager but I just quit as it wasn't personally fulfilling.\"\n\n\"Were you good at it?\" she asked, subtly scratching the back of his wrist with long nails the same shade of deep red as her hair. More sparks shot through his body.\n\n\"Yes, I uh, I made good money at it. But being good at something and enjoying it can be two distinct things. The job didn't make me happy. I'm looking for what makes me happy now,\" he explained, moving his arm to break their link and reset his napkin over his lap as it was beginning to tent.\n\nMarion shared a smile with Fiona. \"Your quest for happiness begins in Santa Barbara?\"\n\n\"It seemed like a good place to start,\" he said glancing at Fiona with a smile as well.\n\n\"He found a little happiness in the journey itself. He rode the motorcycle he inherited from his father down the Pacific Coast Highway. The motorcycle is gorgeous!\" she gushed.\n\nKyle endured more appreciative stares.\n\n\"Oh, now we all want Kyle to give us a ride!\" Gloria purred then heard her own words. \"Oh!\" She burst into loud laughter.\n\nMonique snorted into her drink and began coughing. Once she recovered she joined the laughter over Gloria's double entendre.\n\n\"When's the food going to get here?\" Kyle asked which just increased the giggling.\n\n\"Seriously, what do you ride?\" Charlize asked.\n\nHe saw she was interested so he answered. \"It's a 1988 Harley Davidson Heritage Softail Classic.\"\n\nShe nodded. \"A cruiser. Nice. I just got myself a Yamaha YZF\u2011R1 Supersport.\"\n\n\"Get any tickets yet?\" Kyle asked and she grinned but shook her head. \"Not exactly a comfortable ride for passengers on your bike,\" he suggested.\n\n\"Wait, you can take a second rider on that rocket of yours?\" Monique said, turning to her friend in surprise.\n\nCharlize shook her head. \"While there is a seat up on the rear fender and foot pegs, as Kyle mentioned, it's not a comfortable position to be in. I won't ride with a passenger as I'm barely large enough to manage the heavy bike without having to deal with the extra weight one of you ladies would add.\" She was looking at Gloria when she finished.\n\n\"Hey!\" the larger woman barked.\n\n\"No offense,\" Charlize said with a grin and Gloria snorted at her.\n\nMonique looked to Fiona. \"Aside from the obvious, what activities do you have planned for Kyle on his visit.\" She looked to Kyle quickly. \"How long are you going to stay?\"\n\n\"I don't have a fixed calendar, aside from leaving the States in six months' time,\" he said.\n\n\"But what are you doing for money?\" Marion blurted in surprise.\n\nGloria snorted in amusement.\n\n\"Hush you! Dirty mind!\" Marion scolded then looked curiously back at Kyle.\n\n\"I did mention I'm an Investment Manager. I have my own investments which generate enough income to live on if I stick to a modest budget. Granted, from what I've seen so far, Santa Barbara isn't exactly a place one easily lives modestly.\"\n\n\"Don't you worry about Santa Barbara! I told you, you're my guest.\" Fiona said with a smile and patted his hand. He opened his mouth to protest and she placed her expensively manicured fingertips across his lips. He closed his mouth and kissed the pad of her finger while holding her eyes and she squirmed with tingles.\n\n\"Yes! Mmmm... Now... what was I saying?\" She licked her lips absent mindedly as she watched his mouth.\n\nGiggles erupted as they watched the flush on Fiona's cheeks.\n\n\"You were going to tell us what you had planned for Kyle... aside from the obvious,\" Phoebe offered then held two fingers against her face and wiggled her tongue between them.\n\nThe table erupted with shocked laughter again and even Kyle joined in this time as he hadn't expected it from the quiet one.\n\n\"GAWD! Don't do that, Phoebe! I'm getting all wet and tingly just imagining it!\" Gloria begged pitifully. The slim blonde laughed and patted her shoulder.\n\nFiona held up her hands and they gradually settled down.\n\nKyle saw they were getting annoyed stares from the surrounding tables.\n\n\"I'm going to take him to see a concert at the Santa Barbara Bowl. I thought we'd spend a day at Butterfly Beach too. A trip to Los Angeles and from there over to Las Vegas. I have lots of things planned for Kyle.\"\n\n\"Oh my god! Vegas! I haven't been there in years! Can we come too?!?\" Gloria begged.\n\n\"I don't know... could Vegas survive this group?\" Fiona said as she looked at the others in fake worry.\n\nGiggles erupted but were interrupted by the arrival of their meals.\n\nAs they ate Fiona went over the itinerary and the others checked their calendars to see if they could free up some time to join them in Las Vegas. They all settled on a date, a weekend, and a cheer went up.\n\nKyle was watching the friends laughing and talking as they made their plans and he felt good that Fiona had such a great group. Yes, there was still a little tension evident between Fiona and Marion but it didn't seem to be a deal breaker. They almost seemed to enjoy the competition. As long as there was mutual respect in the mix they could probably make it work.\n\nOnce they finished up and indulged in a little light dessert, they settled the bill and headed out.\n\n\"Are you up for some dancing tonight?\" Charlize asked. Eyes lit up.\n\n\"Sorry ladies, tonight I'm keeping him all to myself. He's had a long ride to get here and there's more riding to be done.\"\n\nHer friends cheered with hoots and whoops as Kyle's face warmed up and he shook his head with a wry grin. He raised a brow at Fiona and she mouthed she was sorry but grinned.\n\nHe gave them kisses on the cheek and friendly hugs and they took the opportunity to press their tits against him, run their hands over his back, grind pelvises, and in Gloria's case, squeeze his ass. He took it with a good natured smile and was soon back in Fiona's car zipping back through the streets of Santa Barbara towards the hotel.\n\n\"I hope they didn't paw you too much,\" Fiona said apologetically.\n\n\"No. Not more than a boy toy should expect,\" he replied with a slightly exasperated look on his face.\n\nShe winced. \"Was I pushing it too much?\"\n\n\"Just a little.\" He sighed as she pouted. \"Listen, I don't mind your enthusiasm and I enjoy how excited you get. Trust me, you make me damn excited too. I just think it might be better if you didn't... oversell the sexual side of our... relationship.\"\n\n\"Are we in a relationship?\" she asked and Kyle heard a slight edge to her voice.\n\n\"We've both been burned too recently for it to be a good idea to begin a real relationship. Can we agree we're friends with benefits?\" She smiled and nodded vigorously. \"That seems like a safe place to start. I understand you want to enjoy yourself. So do I but that doesn't mean I'm ready to hire myself out as a stud service.\"\n\nShe snorted and grinned at him. \"Ok, I'm sorry for dangling you under their noses so much. It's just... they're so important to me and I'm so excited to have someone to show off that they even like! They couldn't stand Alfred!\"\n\nHe nodded and rested back in his seat, trying to ignore the ache in his hands as he gripped the door handle and seat so tightly.\n\nThankfully they quickly arrived at their destination, in one piece, and Fiona parked. They went inside and she quickly gave him a tour of the hotel. He was greatly impressed with the place and let her know. She glowed under his praise. She introduced him to the staff and then they grabbed his stuff from her office and headed outside.\n\nHe remounted the bags, pulled on his leather jacket and gloves, and slipped his helmet on. When he started the bike Fiona jumped a little and grinned excitedly. He pushed up his visor.\n\n\"I'm going to have to pick up a second helmet before I can take you for a ride on it,\" he remarked.\n\n\"Ooo! I want to pick one out!\" she said, clapping her hands excitedly.\n\n\"Please drive slower on your way to your place. I don't want to race along unfamiliar windy roads,\" he said and she nodded as she went back to her car.\n\nShe played nice and didn't race along the roads hugging the hillside and soon she pulled up as steep slope towards a development of Mediterranean style townhomes. A garage door automatically opened and she parked on the right side letting him pull into the left side spot. The garage door closed behind them.\n\nHe locked up the motorcycle and grabbed his bags. Fiona walked up beside him and he turned to her.\n\n\"I have to admit, back in France when you mentioned Alfred had to get his stuff out of the condo I was picturing a tall building with apartments, not a townhome.\"\n\nShe shook her head at him. \"Too many earthquakes to make tall buildings a popular option.\"\n\n\"Ah!\" he said as he realised the sense in that.\n\nShe led him to the inner door and they went inside. The townhome was enormous inside and beautifully decorated. The kitchen was the first room they entered from the garage and he grinned at the state of the art appliances and amenities.\n\n\"Do you cook?\" he asked, taking it in.\n\n\"No, not one of my skills. Alfred did though. You?\" she asked.\n\nHe shrugged. \"A little. Nothing spectacular. Comfort food like chili and meatloaf. I'm good at stuff like that. Nothing complex.\"\n\nHe got the tour and admired the large party patio with its big barbeque and the table and chairs for ten. There was a view of Santa Barbara in the distance and pretty lights hung above the table and lit the area with a warm glow. Very intimate!\n\n\"Last but certainly not least, the master bedroom,\" she purred as she guided him down a hall and through large double doors. The king sized bed dominated the room which was a task as the room was very large. It also looked very inviting.\n\nKyle smiled at Fiona and walked to stand before her. She smiled up at him. \"I've been waiting all night to do this,\" he said.",
        "He took her face in his hands and caressed her lips with his. They were so soft and tender. He sucked on her plump lower lip and she moaned and clung to him. His kiss became demanding and her tongue chased his in her mouth. He guided her back to the bed and laid her back on the mattress with her legs dangling over the end. He surprised her by immediately moving down and flipping her dress up to expose her naughty lace panties. When he pressed his lips to them Fiona reminded him exactly how much she loved sex.\n\n\"OH FUCK YES! LICK IT! LICK MY PUSSY, KYLE!\"\n\nHe glanced up to her face as his ears rung from her cries. He put that aside and tugged her panties down her legs and off and got to work as requested.\n\n\"OH FUCK! FUCK! OH! GEEZUS! LICK IT! AHHHHHHH! SUCK MY WET PUSSY! YES! YES!! YES!!!!\"\n\nKyle did his best to ignore the volume of Fiona's excited dialog and concentrated on bringing her close to her release. His cock was stiff and throbbing and wanted to come out to play.\n\nWhen he felt she was ready he pulled back from her pussy and quickly pulled off his clothes. Fiona lifted her dazed head and her eyes widened appreciatively when she saw Kyle's hard cock. She dropped her head back against the mattress when Kyle pushed two fingers into her wet pussy.\n\nHe pumped them in and out a few times to get them slick with her juices. He then rubbed this slippery fluids over his cock.\n\nFiona's head came back up just as he lifted her legs up to rest against his bare chest. This presented her glistening pussy for easy access. He pressed the thick head of his cock against her pussy lips and felt them part and accept his heat inside.\n\n\"OH MY GOD! YOU HAVE SUCH A FAT COCK! FUCK ME KYLE! FUCK ME!\" she screamed.\n\nSo, he did.\n\nHe slammed himself all the way in and began to spank her ass with his pelvis as he set up brutal pace of fucking her gushing pussy. The wet sounds just got louder the longer he fucked her.\n\n\"FUCK ME! UH! UH! MY GOD! FUCK! YOU'RE GONNA- MAKE ME CUM!\" she howled.\n\nKyle grinned as he had one more trick up his sleeve. He pushed Fiona's legs up to her chest, lifting her ass higher. The angle made it too difficult to fuck her pussy so he pulled free and slapped the head of his cock against her twitching ass. Her eyes went wide then he slowly pushed his slick cock into her ass as she wailed incoherently.\n\n\"OOHHHHH MY ASS! FUCK IT! FUCK MY ASS- UHHH! WITH YOUR BIG COCK!\"\n\nHe strummed Fiona's clit and forced two fingers deep into her hot, wet pussy.\n\n\"AAAAAAAAHHHHHHH!!! FFFFAAAAAHHHHHHH!!! NNNNNYAAAA!!!\" Fiona grunted as her mind had already begun ripping free of its moorings. She continued to make incoherent noises as she tipped over the edge into the ecstasy of her orgasm.\n\nThe squeezing of his cock in her tight ass was too much for Kyle so he drove it home one more time and sprayed her depths with his cum.\n\n\"YES! CUM! CUM FOR ME! FILL ME!\" Fiona pleaded and gasped.\n\nWhen his body had stopped surging he gently pulled free of Fiona's ass and looked down at the panting blonde beauty. He helped her pull her dress off and moved her further up the bed then crawled in beside her. They were both too exhausted to do anything but cuddle and Fiona was asleep in moments.\n\nBefore he went completely under Kyle wondered at how quick it had been for them both but realized the entire evening had been foreplay. With a smile, he allowed himself to drift off.\n\nChapter 2\n\nKyle made his way back up the driveway after going for an early morning jog around the neighborhood. He's slept well and managed to slip out of bed without waking Fiona. He went through his normal morning exercises and decided he felt like a short run so he left her a note in case she woke while he was out. He didn't intend on going far as jogging really wasn't his thing but he didn't have a bicycle so it was all he had.\n\nOn his way back he spotted a convenience store and stopped to pick up a newspaper as he wanted to keep an eye on his investments.\n\nClimbing the stairs he heard the rumble of an old Cadillac pulling out of the garage next to Fiona's. He watched it glide down the driveway towards the road but he couldn't see who was inside. He turned back and headed towards Fiona's front door.\n\n\"Good morning Kyle!\"\n\nHe turned and saw Gloria standing in her doorway which faced Fiona's across a short landing. His eyes were trapped by a rather daring display of cleavage and a sexy smile to go with it. He flashed back to their conversation the previous night. She was a cheeky one!\n\n\"Good morning Gloria. Well, don't you look... delicious this morning!\" he said allowing his eyes to roam boldly over her body as he smiled. The sheer white gown over her silk nightie displayed her curves and deep cleavage quite well. He could also tell she had a bit of a glow about her and appreciated his attention.\n\n\"Such a charmer! Would you like some coffee? I made muffins,\" she said with a twinkle in her eye.\n\n\"Roger-\"\n\n\"Just missed him. Heads out every day at the same time. He never tells me where he goes but he comes home in the evening smelling like a stable.\"\n\n\"The track.\"\n\nShe grinned and nodded. \"On the nose. He plays the ponies but he never loses too much. I think he's meeting his old army buddies there. Drinking buddies now.\"\n\nKyle glanced back towards Fiona's door. \"I should-\"\n\n\"From the sounds she was making last night I think you have a good hour or two before she wakes,\" Gloria said with a wicked grin.\n\nHis eyes widened in surprise. \"You heard that?\"\n\n\"Her bedroom window was open and so was mine, in the hopes hers was,\" Gloria smiled devilishly.\n\nKyle's face warmed up. \"Still...\"\n\n\"You have time for coffee and a muffin,\" she chided him gently.\n\nHe smiled at her persistence then nodded and stepped into her home. He slipped his runners off, dropped his newspaper on top of them, and followed her to her kitchen. The home was an identical, if reversed, layout to Fiona's but Gloria's furnishings, reflecting the tastes of her generation, was heavier with deeper cushions and elaborate styling on the legs of tables and chairs. She poured him a cup of coffee and offered him a plate of muffins. He took one and a napkin and followed her again to a seating area with a nice window facing out over the valley below.\n\n\"I love having my breakfast here every day. It's so peaceful,\" Gloria sighed happily.\n\n\"Your view is amazing,\" he agreed. He looked back at her as she nibbled on the muffin. \"Last night was fun. I mean, at the restaurant!\"\n\nShe chuckled. \"Yes it was. You were a really good sport considering how we were practically undressing you with our eyes all night.\"\n\n\"Yeah, it felt like that,\" he admitted, taking a bite of the baked goods. It was warm, soft, and he tasted a hint of cinnamon. He smiled in appreciation.\n\nGloria set her coffee down and leaned forward slightly, exposing just a little more of her large tits. \"Considering the grief she went through with that dipshit Alfred, you are such a breath of fresh air! We were just a little giddy with relief. She'd mentioned you were coming to visit but she was so tight lipped with the details. We were worried you would turn out to be another arrogant prick!\"\n\n\"And I didn't, right?\" he asked with the hint of a smile.\n\nShe burst into a laugh which did nice things to her cleavage. \"No... no, not at all! Like I told her last night. You're a keeper! Just what she needed! I'm so happy for her!\"\n\nHe smiled then shrugged. \"Well, Fiona isn't really looking for a keeper at the moment and truthfully, neither am I. We're being completely honest with each other. We're both looking for something safe and friendly as we're on the rebound. Her from Alfred and me from Gwen.\"\n\nGloria tilted her head to look at him appraisingly. \"This girly really hurt you?\"\n\nHe sighed and nodded. \"She had near total control and I willingly let her do it... in the name of love. Only she wasn't really in love with me. Just what I could be once she finished changing me.\" He frowned and shook his head to clear those thoughts away as he took a deep cleansing breath. \"I'm free of her so that's good. I'm learning what it means to live my life for me. So far so good!\" he finished with a grin.\n\n\"Good for you!\" she said with a crooked grin.\n\nThey drank the coffee and ate their muffins in comfortable silence as they admired the view.\n\nHe caught her glancing at him and she seemed to be fidgeting a little, like she wanted to say something but hadn't worked up the nerve. Finally, he caught her eye and raised an eyebrow in question.\n\n\"Did you like eating my muffin? Would- would you like another?\" she asked with a nervous smile.\n\nHe froze as he heard her words. She wasn't offering him baked goods this time. He almost laughed at the corny line but he saw she was really anxious about his answer. The bold words matched his expectations of her but the timid delivery made him smile as it revealed she wasn't quite as tough as the image she presented.\n\nHe heard the voice of his conscience insisting she was a married woman and he should be refusing her, outraged that she would even suggest such behavior from him. As the emotions swelled, he felt himself... step aside and let them pass, untouched by their message. He pushed off the nagging voice. He wasn't going to have sex with her, per se. Just a little foreplay... with a happy ending for her. He wasn't even competing with her husband as the man wouldn't do this for her. He smiled and nodded.\n\nHer smile brightened when she saw he wasn't offended or rejecting her.\n\n\"I believe I would like to eat your muffin,\" he said quietly and she couldn't contain a small burst of giggles. It was a surprisingly girly sound from the older woman.\n\nA thrill rushed through her body. She'd taken care to prepare herself this morning in case Kyle was amenable to her request. After hearing Fiona's screams of ecstasy the previous night she knew he was living up to her claims of being good in bed. She'd been so hot she'd managed to get Roger to fuck her. That had been wonderful! But having a man go down on her? She wanted this experience too! Especially after all the talk about it at dinner last night and hearing Fiona enjoy it.\n\n\"H-How? Where?\" she stumbled over her words in her excitement.\n\nKyle looked around and saw a comfortable looking couch in the next room. \"Shall we retire to the couch?\"\n\nHe stood and took her hand to help her to her feet and walked with her to the living room. He stood in front of her and smiled at her nervous expression. \"We'll only do what your husband won't, ok?\"\n\nShe nodded with wide eyes as he knelt before her. He slipped his hands inside her wispy gown and up under her nightie to find her panties on her hips. She gasped at the feel of his hands and twitched. He stopped.\n\n\"At any time, if you want to stop just say so and I'll stop. Understood?\" She nodded and swallowed then smiled at him.\n\nHe slid his hands downwards and her panties followed. She sighed and trembled a little.\n\nGloria's mind was racing and her heart was pounding. He said he'd do what her husband won't. Kyle didn't know just how many experiences that covered! For now though, she was going to experience oral sex! With this hunk before her! She'd been so jealous of her girlfriend's stories. Especially Marion who seemed to be able to get any man she wanted and got them to do all kinds of nasty, dirty things with her.\n\nShe loved Roger but he was so... unadventurous. Missionary only and only kissing to get her motor running. He wouldn't even touch her down there! She trembled again to feel Kyle's hands on her legs, lifting them to help her step free of her wet panties.\n\n\"Sit on the edge of the couch and lie back,\" he said.\n\nHe helped her ease her way down until she was seated before him. He tossed a few pillows behind her and she rested back on them. Now she had a perfect view of him which excited her even more! He began by kissing her knees and running his hands over the outside of her thighs. He didn't make fun of her extra weight or make her feel bad about it. Roger liked to slap her legs to see them shake. Instead Kyle smiled up at her and gently separated her knees making her bite her lip. He kissed the inside of her knees and she gasped once more. God, it felt like she was ready to gush already!\n\nHis kisses gradually made their way up the insides of her thighs as her legs opened wider and wider. His hands roamed, enticing and exciting but never once touching her pussy. She could feel the tingles concentrating there and she needed him to start paying attention to- AHHHHH!!!!\n\nKyle stroked his tongue across her wet pussy and was pleased she'd just shaved and bathed the area. She was still a little pink from the razor and washcloth. He returned the favor with his tongue and soon she was writhing and clutching at his head.\n\nConsidering her loud and rowdy laughter from the night before he'd expected her to be equally loud and coarse now when he was between her thighs. Instead her voice went up in pitch and got quieter as her sexual tension increased. She was beginning to sound like an excited school girl and that was... distracting.\n\n\"ohmygod kyle ohmygod so good ohmygod fuck ohmygod oh geez ohmygod shit ohmygod ooo ohmygod\" she chanted in a squeaky voice.\n\nWhen he slipped two fingers into her wet pussy and began to pump them in and out as he danced his tongue over her more sensitive flesh she began to twitch and jerk as her voice rose higher than could be heard. Her shaking was becoming uncontrolled and he had to move his hands to grab behind her knees to keep her on the couch. He pushed them back towards her tits and thrashed her clit with his tongue. She finally found her voice again.\n\nIn a big way.\n\n\"FFFFFFFUUUUUUUCCCCCKKKKKK!!!!!!!!\" she screamed as her orgasm struck. Kyle fastened his mouth on her gushing pussy, keeping her pleasure peaking until she pushed his head away. He leaned back and gently lowered her legs to rest on his shoulders to keep her from being pulled from the sofa.\n\nGloria was floating in the waves of bliss originating from the buzzing nerves between her legs. That had been so heavenly but she was suddenly exhausted and wanted nothing more than to close her eyes and drift off.\n\nKyle moved her legs to the floor and pulled her up from the cushions. Pleasure shot outwards through her body from her pussy and she gasped.\n\n\"Before you fall asleep you have to lock the door behind me. I need to go back to Fiona's,\" he said gently.\n\nShe nodded sleepily and he helped her stand. She held his arm as they went back to the door. He picked up his shoes and newspaper and gave her a quick kiss on the cheek. She smiled then he was out the door. She locked up then made it as far as the couch and dropped onto its surface. Tingles rushed up and down her body.\n\nShe grinned to herself. Now she was experienced and she liked it!\n\nKyle used the key he'd found on a hook inside on his way out to unlock the door and let himself back in. He listened but heard nothing. He dropped his newspaper on the kitchen table and went back to the master bedroom. Fiona was still asleep. He gathered his kit and some clothes and quietly went into the bathroom. He closed the door, brushed his teeth then took a shower in her massive shower space. He didn't know what else to call it. It was just too big to call a shower stall. A horse stall for a Clydesdale maybe. He cleaned himself and was soaking under the hot water when he felt Fiona press her big tits against his back.\n\n\"Good morning!\" he said.\n\n\"Mmmm,\" she grunted.\n\n\"If you're still sleepy, why don't you go back to bed!\" he said gently.\n\n\"No, I've had enough sleep. I'd like coffee and breakfast,\" she murmured.\n\nHe grinned over his shoulder at her. \"And am I supposed to make this for you?\"\n\nShe squeezed him tighter. \"It's comfort food, isn't it? You said you could make that, didn't you?\"\n\n\"So I did,\" he sighed. \"I'll get started on that while you finish your shower.\"\n\nShe released him so he turned and gave her a sweet kiss. She purred happily as he pulled back and stepped out. He dried and got dressed before heading to the kitchen to see what she had.\n\nWhen Fiona made her way into the kitchen she smiled at the scent of bacon, eggs, toast, and coffee. She saw Kyle was only eating a few strips of bacon.\n\n\"You're not eating?\" she asked in surprise.\n\nHe smiled at her. \"Actually, after my jog this morning I bumped into Gloria. She offered me coffee and a... muffin.\"\n\nFiona caught his eyes and saw his amusement. \"A muffin, you say?\"\n\n\"Yes, she was really hoping I'd... eat it.\" He held her eyes and watched the realization dawn in them. Her mouth dropped open.\n\n\"That slut!\" Fiona gasped looking in the direction of Gloria's place as Kyle's smile dimmed.\n\n\"Should I have said no?\" he asked.\n\nFiona turned back to face his concerned expression and realized she was acting possessively. They'd both been clear they didn't want a formal and exclusive relationship so she had no reason to be acting like this. She took a deep breath. \"No, it's fine. It's just how quickly she acted that surprised me!\"\n\nKyle grinned. \"Apparently you left the window open last night and she listened in. You weren't exactly quiet.\"\n\nFiona sat back in her chair. \"Ah... right.\" Her smile began to return to the corners of her lips.\n\n\"Eat your breakfast before it gets cold.\"\n\n\"Yes sir!\" she quipped.\n\nHe gave her a false stern look then opened the business section of the paper to catch up. He circled a few stories then went through the financial section to review stock prices and trends. There was a company he was watching. He saw potential. He'd keep an eye on it so he added an event to his calendar on his phone.\n\n\"What's so interesting?\" Fiona asked.\n\n\"Hmmm?\" he said looking over at her.\n\n\"You were concentrating so hard. I asked what's so interesting,\" she said with a smile.\n\nHe smiled self consciously. \"Sorry, I was just making a note to follow up in a couple of days to see how a company is positioning its public offering.\" He scanned his eyes over the article he'd circled in the paper. \"It looks... promising,\" he replied, distracted once more as he ran scenarios through his mind.\n\nShe sat up a little and peered at the newspaper. \"Is it something I should be interested in too?\"\n\n\"Hmmm? Oh! Uh, I don't know yet. It might be. It's showing signs of being... interesting. I may invest. A little.\"\n\n\"What's a 'little'?\"\n\n\"Twenty-five...\" he said softly as he made another note.\n\n\"Hundred?\" she asked, her interest beginning to grow.\n\nHis attention returned to the woman before him \"Hun- no, twenty-five thousand. I'd sell some stock I own that's reached it's peak and use the money to purchase shares in this company.\"\n\nShe grinned as she was seeing him as he was at work. \"This was what you did in your job?\"\n\nHe shrugged with a modest smile. \"I'm doing better personally than I did for the client portfolios I managed at work because I'm not constrained by our corporate mandates and policies. It's my money so I can be more creative and aggressive.\"\n\n\"You're a risk taker?\" she asked, curious.\n\n\"No. I'm actually fairly careful but when I see potential for growth, I'm willing to follow my gut,\" he said with conviction.\n\n\"Well let me know if you decide the time is right. I'll buy some too,\" she said with an excited grin.\n\nHe looked at her in surprise. \"Don't you want to learn something about the investment before you put your money into it?\"\n\nShe held his eye. \"Did you research it?\" He nodded. \"Are you going to put your own money into it?\" Another nod. \"That's good enough for me. I'm not putting all my eggs into this basket. I'll just invest the same amount you put in.\"\n\n\"I'd be happy to explain-\"\n\nShe held up her hands to block him. \"No! I've said my piece. I'm going to get dressed as we have to shop for a helmet.\"",
        "He smiled and nodded to her as she left then went through the rest of the paper. When she returned Kyle caught Fiona watching him pensively. He turned to her and she glanced away.\n\n\"No. If you have something to say I don't want you feeling that you can't. Be honest.\"\n\nShe looked back with a slightly pained expression. \"I have no right to ask this.\"\n\nHe smiled. \"You don't want me to have sex with Marion.\"\n\nShe relaxed a little then the pained look came back twofold. \"Am I that transparent?\"\n\nHe shook his head. \"No, I get it. She's a competitive person who also happens to be a man eater. She wants what you have. I don't have to have sex with anyone. Like I said, I'm not hiring myself out as a stud service. I'm not going to be mean to her but I'm ok with saying she can't have me until you say it's ok. That might make her a little upset, especially if Gloria proves to be indiscreet.\"\n\nFiona smiled to herself as she thought of how Marion would take being told she had to get permission. Her smile grew into a grin. \"Actually, that would be perfect.\"\n\n\"Ok, it's settled. Let's go get you that helmet.\"\n\nThey looked up the address for a local motorcycle shop then Kyle had to endure another white knuckle trip back down into the valley. Soon enough they were parking outside a large, single story building with the company banner bolted to the wall above the door. Kyle shrugged and they went inside. He took them directly over to the racks of helmets.\n\nFiona saw which ones he was looking at and saw some smaller helmets on a nearby rack. \"Couldn't I get one that didn't completely swallow my head?\"\n\n\"Do you know what a flying beetle feels like when it hits your face at 60 miles per hour? Not to mention what happens to your skin when it's blasted with that high speed wind for hour after hour.\"\n\nShe raised her hands in defeat. \"Say no more.\" She looked back at the rack and saw a white helmet with a silver tribal tattoo design on it. \"I like this one,\" she purred.\n\n\"It's a good one too. Excellent ventilation and protection. It looks like it might fit. Try it on,\" he suggested. He showed her how to put it on and saw a salesman approaching with a practiced smile. Kyle shook his head at the man as the helmet went over Fiona's eyes. He got a nod from the man who changed direction.\n\nKyle turned his attention back to Fiona and checked the fit.\n\n\"It feels snug!\" she said, her voice muted from inside.\n\n\"Any discomfort? Anything poking or squeezing your head in a bad or uncomfortable way? Any gaps?\" he asked.\n\n\"No.\"\n\nHe pressed on the chin of the helmet as she looked at him in surprise. \"Is your face or nose pressing against the inside of the helmet?\"\n\n\"Oh! No.\"\n\n\"It seems like a good fit. Do you like it?\"\n\nShe blinked at him as she realized they were done. She nodded her head. She lifted the helmet up and off and looked at him with a pout. \"Our shopping is done?\"\n\n\"Oh no, if you want to ride with me all the way to Las Vegas, we still have to get you into some leather,\" he said with a smile.\n\nHer pout turned into a wicked grin. \"I like the sound of that!\"\n\nThey checked out the offerings in the shop but quickly discovered with Fiona's overly generous chest finding a jacket that fit was going to be a challenge. Seeing this, Kyle did some research on his cell and discovered their best bet was a shop in LA.\n\n\"We can do that! Make a day trip of it!\" Fiona grinned.\n\nThe drive was pleasant enough as they didn't encounter any outrageous delays and soon they were pulling up to the shop Kyle had sourced. They were still on the northern edge of Los Angeles but Kyle was already amazed by the size of the city.\n\n\"LA's a big place then,\" he remarked to Fiona who grinned.\n\n\"Uh, yeah. It's big,\" she said, giving him a playful roll of her eyes.\n\nThen she fastened her eyes on the storefront and looked back at Kyle with a questioning look. \"A fetish shop?\"\n\n\"They're a custom leather apparel shop. According to the customer comments they cater to ladies with... generous bosoms,\" he responded a little defensively. \"We need something that will fit but also has room inside for layers as it can get cold riding a motorcycle.\"\n\nThey made their way to the large iron clad doors. Kyle opened and held the door for Fiona and followed her inside. The lighting inside was far more subdued than the bright summer sunlight outside so it took a moment for their eyes to adjust. Once they did they looked around in wonder at the sheer variety of clothing made of leather. Ranging from the soft suede woman's business jacket to bondage restraints.\n\n\"Oh my! This is a little daunting,\" Fiona said nervously.\n\nKyle gave her a reassuring smile and gestured towards a rack of leather jackets.\n\nAn older man with close cropped greying hair and a trim tailored suit approached them with a professional smile. \"May I offer assistance?\"\n\nBefore Fiona could refuse Kyle nodded and spoke for them. \"Yes, thank you. We're looking for a leather jacket for her that would be suitable for wearing on a motorcycle. It needs to fit her proportions well and have room for layers underneath in case of cooler weather.\"\n\nThe man gave Fiona an appraising look then nodded. \"Certainly. Follow me please.\"\n\nThey walked further into the shop and noticed the further back they went the more fetish oriented the products hanging in the racks became. The man seemed to notice Fiona's unease.\n\n\"We keep the sports outerwear back here as well,\" he said with a gentle smile.\n\nThey stopped before a display of jackets and the salesman ran his fingers along until he plucked one from the selection.\n\nIt was black with numerous buckles and straps around the sides and back. Kyle immediately saw the purpose of the straps and smiled at the salesman.\n\n\"The lady's upper proportions are generous so a jacket to fit both top and waist will be a challenge. This jacket is adjustable and still offers excellent protection. In typical use I would recommend a smaller size but this one will allow for under layers yet still look fashionable.\"\n\nHe took the jacket from the hanger and handed it to Kyle who moved behind Fiona to help her put it on.\n\nWith a nervous smile she let him slip it on her arms.\n\nHe moved around to the front with a slight smile on his lips and pulled the zipper up, watching how the jacket lifted and squeezed her tits together gently. The leather was good quality and would protect her tender skin should there be an accident but it was supple enough to form around her curves without uncomfortable pinching.\n\nWith only the zipper closed, the jacket was still fairly loose around her stomach so he moved his hands around her to the clever buckle system arranged on the back. He tightened them two at a time, left and right side together, working his hands upwards from the bottom buckles to mid-back. Each brief tug caused Fiona to gasp quietly as she kept her eyes on his. She wasn't reacting in discomfort but in anticipation of the next tug. The jacket was forming to her body without restricting her movement or breathing, like a leather caress. The snug lower half acted as a base for the upper half to support the weight of her tits, relieving some of the load from her shoulders and back. It also had the delightful effect of putting her eye-catching cleavage on display, when the zipper wasn't all the way to the top.\n\nFiona was biting her lip as her pussy tingled madly. Kyle was looking at her so hungrily she was almost oblivious to the presence of the salesman.\n\n\"This jacket fits very well. I think you look stunning in it! Take a look in the mirror,\" Kyle suggested, stepping back.\n\nShe almost moaned aloud when he took his hands from her hips but she caught herself. Cheeks glowing a hot pink, she turned as directed and faced the large mirror. She gasped in surprise as she looked so fucking sexy in the jacket. She wanted it. She turned halfway to admire the... wicked buckles on the back. Fuck, she felt so naughty! She knew it wasn't bondage wear as it didn't have any rings for restraints bolted on it nor did it restrict her movement. But it suggested... possibilities.\n\n\"Are there matching pants?\" she whispered.\n\n\"She'll need riding chaps and gloves as well,\" Kyle directed to the salesman who was smiling gently as he turned to retrieve the other items.\n\n\"Chaps?\" she asked, nervously.\n\n\"If you get leather pants you'd have to keep wearing them when you reach your destination. Chaps go over your pants to protect you but you can take them off and be comfortable after the ride. Not that I don't think you'd look sexy as hell in leather pants but they don't breathe well and can be a little uncomfortable in this heat,\" he explained.\n\nShe smiled self-consciously and he caught her embarrassed expression.\n\n\"What?\" he asked.\n\n\"I thought you wanted me to wear the chaps with nothing underneath,\" she whispered to him.\n\nInside he was grinning like a fool but he kept that from his face. Instead, he considered her words thoughtfully. \"Not while we're riding. In the bedroom, yes.\"\n\nWhen her eyes widened in shock, he couldn't keep the grin from slipping out and she saw it.\n\n\"You little devil! Making me all nervous!\" she blustered but she couldn't keep her own smile hidden. He pulled her into a hug and she only pretended to resist.\n\nThe salesman returned with a selection of chaps and Fiona immediately pointed to the ones with buckles that matched her jacket. He also had an assortment of gloves and she took a little longer to find a pair that she liked.\n\nFiona paid for their items, thanked the salesman and headed outside to the car. \"While I recommend it for the protection it gives, you don't need to wear the leather if we're just riding around in town. The helmet is a must,\" he stated firmly and she nodded to him.\n\nOnce they were seated he turned to smile at her. \"Where to now?\"\n\n\"Lunch!\" she exclaimed with a smile that made him suspect it was going to be more than a street dog from a cart.\n\n-=-\n\nAn hour later Kyle had come to the conclusion that there was no such thing as a casual lunch in Fiona's world.\n\nThey were seated at a lovely table outside watching the rich and famous carrying their shopping bags from the shops of Rodeo Drive in Beverly Hills. The restaurant's host was extra attentive to Fiona and she'd even had a visit from the manager. Then there were the other patrons of the restaurant who dropped by to say hello. Much double cheek, air kissing was happening and Fiona was drinking it up.\n\nKyle learned her parent's hotel in Beverly Hills was very well respected and gave her serious clout with this crowd. Everyone was especially pleased to hear she was once again single, some even went so far as to hint they might call on her, only after Kyle was introduced as her new 'friend', of course.\n\nHe began to find himself the target of their scrutiny as he was seen as potential competition for their ambitions. If he read their expressions correctly most found him lacking. He was sure these suiters would be far more aggressive in pursuing her than him but none came across as genuinely interested in her.\n\nWhen they were finally alone he leaned forward and caught her eye across the table. \"You have some potential dates on the horizon.\"\n\nShe made a brief sour face as she shook her head. \"No one worthy in that bunch,\" she sighed then looked at him more closely. \"But you knew that didn't you.\"\n\nHe gave her a gentle smile and shrugged. \"Not for me to say. You're able to make your own decisions. I have my opinions but you never asked me for them so I'll keep them to myself.\"\n\nShe nodded as she struggled to contain her pleased smile. \"If I asked for your opinion of them?\"\n\n\"I'd offer it.\"\n\nShe let the happiness show. \"Tell me.\"\n\n\"This is just my personal read but not one of them appeared to genuinely care about you. There was an almost predatory ambition in each of them.\" He paused to see if she was offended but it looked like she wasn't hearing anything she didn't already know. He relaxed. \"You can do better.\"\n\nShe raised her glass and he touched his to it. \"Agreed,\" was all she said.\n\nThey enjoyed the rest of the lunch and Kyle spotted a few more celebrities passing by.\n\n\"You don't seem that impressed. I thought you would get more excitement out of this lunch,\" Fiona said with a little pout.\n\nHe looked at her in surprise. \"Oh! I'm sorry! Should I be more effusive with my delight at seeing my favorite actors?\"\n\nShe giggled at his serious expression. \"You really aren't star struck at all, are you!\"\n\n\"Hey, I'm enjoying this! I do appreciate seeing them. It's a little surreal actually,\" he said with a grin then shook his head. \"Here... they're just here to shop like everyone else. Why would I interrupt that just to tell them I enjoyed their performance in the last movie I saw them in? I'm sure they get that from so many others. Maybe they'd just like to do their shopping in peace. If I saw them on the red carpet I might wave to them and ask for a picture. I think they kind of expect it at those venues.\"\n\nShe watched him with a smile on her face then just shrugged as she had to accept he was who he was.\n\nThey finished their meal then wandered arm in arm down Rodeo Drive amongst the people Kyle admired in silence.\n\nOnce they'd had their fill of window shopping they made their way back to her car and cruised along Sunset Strip and saw the sights before heading back to Santa Barbara.\n\nAs Kyle enjoyed the view he relaxed back in the seat. He was surprised to see he was actually getting used to her driving. His stomach grumbled a little as the art piece they'd called lunch had barely been enough to keep one of those teacup chihuahua's alive.\n\n\"Was that you?\" Fiona asked with a raised brow.\n\nHe glanced at her and caught her smirk. \"Yes,\" he admitted as he shifted in his chair.\n\n\"Maybe you'd like something a little more substantial for the last meal of the day?\" she asked.\n\n\"I wouldn't argue against the suggestion,\" he said.\n\nShe snorted then nodded.\n\nOnce back in Santa Barbara she took him to a steak house and he feasted on a huge ribeye with a baked potato and steamed vegetables. He gave her a look of bliss as he took his first bite and only pushed back when the slab of meat was consumed.\n\n\"Ugh, I'm completely full and need to hibernate for a month or two,\" he moaned but he couldn't hide his deeply satisfied smile.\n\n\"Let's get you home then,\" Fiona said and pretended to help him across the restaurant to the exit. He shook his head but enjoyed the feel of her soft breast pressing against him.\n\nThe drive home didn't take long and soon they were pulling into the garage.\n\nAs Kyle stepped from the car big hands grabbed his upper arms and dragged him backwards out onto the driveway and spun him around. He barely had time to lean away as the big fist drove in to slam into his left cheekbone. His head snapped back and he heard screaming in stereo with an answering snarl. Then he was being tossed to the driveway. He just recuperated from that when the toe of a big boot caught him in the stomach. That was too much and Kyle lost the dinner he'd enjoyed so much.\n\nHe heard an angry growl moving back from him and more high-pitched screaming bit he was too busy retching to really understand who was making all the noise. Finally, the pain began to ease and he began to make sense of the arguing.\n\n\"God dammit, Roger! Leave him alone!\"\n\n\"You shut the fuck up, you cheating whore!\" Deep voice. Kyle winced and cracked an eye open to see a really big man in sweat pants and work boots glaring at Gloria who was standing by the railing on the landing above them.\n\n\"Back off! I've called the police!\" That was Fiona.\n\n\"I don't give a rat's ass who you stuff in your dirty hole but keep his cock out of my wife,\" Roger yelled.\n\n\"Hey!\" Kyle tried to yell but it came out as a croak.\n\nAngry eyes turned back to him and he tried to kick Kyle in the face this time.\n\nKyle had had enough of being kicked so he leaned to the left, caught and lifted Roger's leg up as it passed by and sloppily drove his left fist into the man's balls. It wasn't a very powerful punch but sweat pants have a minus ten armor rating.\n\nRoger stumbled as he grabbed his injured dangly bits and stepped into Kyle's pool of sick. The traction of his boot met its match and his feet slipped out from under him. He went down hard and cracked his elbow on the solid asphalt. The big man squealed in agony.\n\nKyle pushed himself to his feet and wobbled as Fiona rushed up to brace him.\n\n\"I- I didn't have sex with Gloria,\" Kyle gasped as he caught his breath.\n\n\"BULLSHIT! She told me!\" Roger bellowed from the ground.\n\nKyle looked up at Gloria who was moving her lips but wasn't making any sounds. He looked back at Roger.\n\nHe was confused but he wanted to clear the misconception. \"She told me you wouldn't... use your mouth on her. She said she always wondered what that felt like and asked me if I would... do that for her.\"\n\n\"WHO GAVE YOU THE RIGHT TO TOUCH MY WIFE! SHE'S MARRIED TO ME!\" Roger screamed at him as he tried to get to his feet but red and blue light started to paint the area as a cruiser pulled into the driveway.\n\nKyle rocked back as the man's words made him recall the anguished look on Carl Burkette's face as he confronted Kyle with his fears about losing his wife to the younger man. His own words about 'not being an asshole' suddenly resurfaced and kicked him in the balls His nausea surged. Fuck. He was an asshole. As the policeman approached, Kyle locked eyes with Roger.\n\n\"You're right. It was wrong and I'm really sorry. It was a dick move. I'm an asshole,\" he said sincerely.\n\nRoger's face showed confusion then some of the rage slipped away. He was still pissed but he saw the target of his fury agreed with him. He snorted in frustration then winced as his elbow really hurt.\n\n\"What's the trouble?\" the policeman asked.\n\nNobody spoke but everyone shared looks.\n\n\"Who called it in?\" the officer sighed.\n\nFiona stepped forward. \"I did.\"\n\n\"And?\" the policemen pushed.\n\nKyle shook his head then looked away. Roger blinked at him in surprise.\n\nFiona picked up on Kyle's mood pretty quickly and faced the officer. \"It's over. Just a misunderstanding. It's settled now. Thank you for your assistance.\"\n\nWhile he didn't seem convinced he nodded and eyed the two men to see if there was any fight in them. They seemed tame enough. \"Try to contain any further misunderstandings. Understood?\"\n\nKyle nodded immediately and Roger slowly joined in.\n\nThe police officer looked down in distaste. \"Somebody clean that up too.\" Kyle nodded and moved to the garage where he saw the hose.\n\nWith a final glare, the officer made his way back to his cruiser and backed out of the driveway.\n\nKyle returned and turned the hose on the mess.\n\nRoger walked up to him and stared into his eyes. Kyle shut off the hose and waited.\n\nSomething passed between the two men and Roger leaned a little closer. \"Stay the fuck away from my wife.\"\n\n\"Yes sir,\" Kyle said quietly.\n\n\"It's not his fault!\" Gloria called down from above.\n\n\"Woman! This is between him and me,\" Roger growled and Gloria just pouted.\n\nRoger tipped the soles of his boots one at a time for Kyle to hose them clean. Then with a final nod to Kyle he moved away to climb into his caddy. The man drove carefully away as Kyle went back to hosing down the driveway.\n\nThe women silently watched him put the hose away when he was done. Fiona decided to leave her purchases in the trunk for now so she just closed the garage door and followed him upstairs.\n\nGloria was wringing her hands as she took in the black eye Kyle was sporting.\n\n\"I'm so sorry!\" she cried.\n\nKyle paused as he passed. \"Why did you tell him we had sex?\"\n\nShe looked miserable. \"He was ignoring me again.\"\n",
        "Kyle nodded tiredly and moved by to wait by the door for it to be opened. Fiona shared a look with Gloria then let Kyle inside and locked up.\n\n\"Are you ok?\" she asked. \"He shouldn't have hit you so hard!\"\n\nKyle shook his head. \"He was right. Gloria is married and I shouldn't have done what I did with her.\"\n\nFiona started to get angry. \"Is this some kind of machismo alpha male bullshit? Roger is married to Gloria. He doesn't own her!\"\n\nKyle looked at her and shook his head. \"No, it's not that at all and I agree with you completely about his not owning her.\" The steam went out of him and his nausea returned. \"Could- could we maybe talk about this in the morning. I need a shower then many hours of sleep.\"\n\nShe nodded with a worried look. They made their way upstairs where he undressed. She saw the bruise on his tight stomach muscles and winced in sympathy. They took a chaste shower together then tucked in under the sheets to get some rest.\n\nFiona hadn't seen Kyle this quiet before and it disturbed her to see him so down. She could see he wasn't up to talking about it now. She'd have to wait for the morning.\n\n<br >Chapter 3\n\nIt took longer than Fiona expected for Kyle to finally open up. He seemed to be working through something.\n\nHe appeared to enjoy himself at the concert Fiona took him to in the Santa Barbara Bowl and the following day at the beach was so relaxing. Fiona loved riding on the back of Kyle's motorcycle and looked forward to their trip to Las Vegas.\n\nThey were reclining on their towels on the sand, soaking in the sunlight when Kyle finally managed to resolve what was tumbling around in his head and felt comfortable enough to open up to her.\n\nFiona had been remarkably patient but she was relieved that the wait was over.\n\nKyle rested back against the sand and felt the breeze cooling his hot skin. The sensation was soothing and he felt himself relaxing. This allowed the memories to rise up on their own.\n\n\"I never really understood it at the time. I was too young. It took years for me to mature enough to grasp what happened, even though I lived through it.\" He took a deep breath as Fiona listened.\n\n\"My father wasn't an easy man to be with. He... was nice enough but he just didn't share well. His thoughts, his emotions, his time, none of these things were readily available or willingly given. He... didn't connect well with others. For a time, when he was younger, he'd surfaced from inside his head long enough to find my mother and get married. They had me almost immediately. Sometime in those early years he slipped back inside his head and not even Mom could reach him.\" He sucked in a deep breath and let it out slowly.\n\n\"He was an airline mechanic. He was really good at it, kind of specialized in troubleshooting, so there was a high demand for his skills. He traveled a lot. It was just Mom and me for most of my childhood and she was incredible. She seemed to have a natural empathy for others. She was also incredibly selfless, loving, and strong!\" He smiled and wiped a tear that escaped as he remembered her.\n\n\"When he'd come home it would be for a month, maybe three then he'd get a call and he'd leave again. When I got to my teens I needed him to be around and somehow Mom got that message through to him. He held off on taking any contracts away from home. That's when he bought the motorcycle. He worked on it and eventually allowed me to help. Handing him tools and learning how the machine worked. It was just training for him but for me it was everything I'd been missing.\"\n\nKyle shifted to get more comfortable and Fiona found herself holding her breath, afraid he'd stop. She quietly released it as he began again.\n\n\"He couldn't stay home forever though and shortly after I turned sixteen I heard my parents arguing. He'd taken a twelve-month contract with a company in Japan. I'd never heard my mother so angry before but she wasn't mad for herself. She accused him of abandoning me when I needed him. He stopped talking and just left the house with his duffle bag. We didn't see him again for eighteen months, the longest he'd ever been away.\" Kyle paused again as the next part was painful. \"He said... he'd only come back to say goodbye and settle his affairs,\" Kyle forced out. He glanced over to see Fiona's concerned expression and looked away, his emotions riding too close to the surface.\n\n\"He told us he was dying and was going to spend his last months in the countryside of Japan. There was someone waiting for him there. He was going back to be with her.\" Kyle paused as he thought about this other woman he'd never met. He wanted to hate her but he just... couldn't.\n\n\"Aiko. Aiko Okamoto,\" he said quietly.\n\n\"Your father had an affair?\" Fiona finally said as the silence stretched on.\n\n\"Yes, it seems so. Mom was hurt. Really hurt. She asked why he'd come back at all, if it was just to be cruel.\" Kyle frowned as he recalled their final heated argument. He gave himself a little shake and looked over at Fiona. \"He just said, he always paid his debts.\" Fiona just looked sad so he looked away.\n\n\"He'd updated his will. He was leaving me the motorcycle. Mom was the only beneficiary and was on his pension. This wasn't going to make her rich but it would help. She wasn't impressed. She said some... pretty bitter things but then, he'd just admitted to being unfaithful. Instead of saying anything he just left the house as he'd done before and that was the last we ever saw him. The next little while was pretty hard for Mom. On both of us to be truthful. It came to a head the night I found her in the garage beating on the Harley with a hammer.\"\n\nFiona gasped.\n\n\"I took it from her hand and held her while she cried. She apologized for him being such a poor excuse for a father, for breaking his vows of marriage, for being an asshole. She begged me not to grow up like him.\"\n\n\"You're not!\" Fiona blurted but he held up his hand to stop her.\n\nHe struggled with what he was going to say next. It was deeply personal and disturbed him. He shuddered and pushed on. \"I think- I think I might have let Gwen change me because I was trying to live up to the promise I made to my mother, to not be my father. But... since I broke away from her I've experienced moments when I felt a... kind of moral ambivalence. A distancing of who I thought I was... to someone who just didn't feel connected to such concerns.\"\n\n\"You aren't your father! You said he was emotionally distant! He couldn't share! You are nothing like that!\" Fiona insisted vehemently.\n\nHe nodded with a gentle smile. \"That's my mom's influence. She was pretty awesome.\" His smile slipped. \"I'm not saying I'm the same as my father. I'm saying I can be like him in moments of weakness. I think... I think he surfaced when Gloria asked me to do what her husband wouldn't. I knew it was wrong. I knew it was breaking the spirit of Gloria's marriage vow of faithfulness. It would have broken my mother's heart if she'd known what I did. Hell, it disturbed me... after the fact,\" he said with a frown. \"I have to be more vigilant. I have to be a better man. I owe it to the memory of my mother and I owe it to myself.\"\n\nFiona moved over Kyle and kissed him tenderly. When she pulled back she smiled gently down at him. \"You are a good man. Someday you'll come to realize that. I hope it's soon.\"\n\nHe gave her a smile and pulled her face down to kiss her once more, lingering on the touch of her soft lips and against his, enjoying the feeling of her tits pressing against his chest. Finally, the kiss ended.\n\n\"You are a delight to the senses and a balm for the mind,\" he sighed.\n\nShe smiled happily and laid back on her towel glowing from his praise.\n\nThey enjoyed the rest of the day on the beach, relaxing, enjoying the waves, and once they'd had their fill, they dried off and rode back to Fiona's condo on Kyles bike, her big tits pressing enticingly against his back the entire way.\n\nHe chased her into the living room from the garage as she giggled excitedly the entire way.\n\nBRRRRRING! BRRRRRING!\n\nThey shared a look of surprise then Fiona pouted. She found her cell she'd left on the kitchen counter and glanced at it. \"Oh poo! I have to take this. It's my parents.\"\n\nKyle raised his eyebrows and hands in surrender. She turned to answer and he made his way upstairs to take his shower.\n\nHe was surprised to have completed his shower without Fiona returning so he got dressed and made his way downstairs. She was sitting at the breakfast bar with a notepad before her scribbling something into it as she listened to the person on the phone.\n\n\"Ok mother, I got it. Yes. I'll be there. I'll leave shortly. You too. Bye.\"\n\nKyle stood by the counter as she hung up the phone and turned her sad face towards him. \"I take it you have to go someplace for work, immediately.\"\n\nShe nodded and moaned. \"I wasn't supposed to deal with this for three weeks but the designer for the new hotel we're opening in Paris had an opening in his schedule starting tomorrow! I have to fly to Paris tonight. Mother made me a reservation for a flight from the Santa Barbara airport to LAX to transfer for a flight to France. I have to go!\"\n\n\"Is our visit over?\" he asked.\n\n\"No! I'll be back on Sunday night. That's only four days. You can stay here until I get back,\" she said hopefully.\n\n\"Oh! Sure, if you're ok with it.\"\n\n\"Of course I am, silly! Now, I have to get ready fast. Excuse me!\" She gave him a quick kiss on the lips and rushed off to her bedroom.\n\nHe followed at a more sedate pace. When he got to the room he could hear her in the shower. \"Do you need a lift to the airport?\" he called out.\n\n\"That would be great! You'll have to drive me in my car as I don't think my suitcase will fit on your motorcycle,\" she replied.\n\n\"Again, if you're ok with it.\"\n\nShe came out of the bathroom completely naked and he felt himself immediately stiffen in his pants. She smiled happily at his hungry look but quickly got dressed. When his attention didn't lessen she gave his arm a playful slap on the way past. \"Stop it! I'll be late if you keep looking at me like that!\"\n\n\"Sorry, you just look really... good,\" he sighed.\n\nShe felt that tingle all the way through her body but she had to take her own advice. She would be late if she didn't concentrate. She packed her suitcase and rushed downstairs with Kyle carrying the bag behind her. She felt his eyes on her the entire time. She had to distract him or she'd climb on him and ride him until they were both exhausted.\n\n\"What will you do to keep yourself occupied until Sunday?\" she asked.\n\nKyle thought about that and nodded to himself. \"I think I'll just do a little riding. There are some great scenic routes in the area.\"\n\n\"Day trips?\" she asked curiously as she packed the last few remaining items.\n\n\"Yeah, or maybe a ride with an overnight camping stay. I enjoy those. I'll pickup a tent in town,\" he said as the idea came to him.\n\n\"That sounds like fun!\" she said with a wicked grin.\n\nThey got into the car, this time with Kyle behind the wheel. He got them on their way and kept their speed almost to the level Fiona drove but he felt safer. She provided directions to the airport as she tapped out a text message to someone with a mysterious smile on her face. Finally, she settled back and faced him.\n\n\"As you haven't had dinner, I've taken the liberty of arranging for Charlize to meet you at a gourmet burger place in town. It's called Eureka! The address is in the car's GPS. I meet her there from time to time. It's her favorite spot. You two can discuss the best routes for rides in the area.\"\n\nHe glanced over at her in surprise. \"You know I don't need someone to keep and eye on me while you are away.\"\n\n\"It's nothing like that! I just feel bad that I have to disappear on you during your visit. Even for a short time,\" she said to block his protest.\n\nKyle saw she really was upset about leaving so after he pulled up to the curb in the departures area he leaned over and kissed her deeply as she clung to his shirt and moaned when he finally pulled back.\n\n\"Fuck! You got me all tingly and I'm going to be stuck on a plane for hours!\" she whimpered.\n\n\"Just something to think about for when you get back!\" he said with a sly smile.\n\n\"You wicked man!\" she purred with a grin. They got out and he took her suitcase from the trunk then pulled her tight for a hug, pressing his growing erection against her sensitive parts.\n\n\"Oh god, I want that!\" she moaned.\n\n\"Sunday night, you'll have it until you can't take any more,\" he growled.\n\nWith a lustful smile, she grabbed her suitcase and rushed away, smiling over her shoulder.\n\nWith a sigh, Kyle got back into the car and pulled up the address on the GPS. It wouldn't take long to get there, even if he took it at a more sedate pace.\n\nWhen he arrived he parked and made his way inside. Charlize was already seated and waved at him to join her. He saw she was wearing a very tight muscle tank top which displayed her tattooed arms to their fullest. He noted she had on an array of leather and ornamented bracelets on each wrist as well as a series of gold earrings running up each ear. She smiled brilliantly at him after he gave her cheek a kiss and settled into his seat across from her.\n\n\"Hi! Did she make her flight?\" she asked.\n\n\"Hi. She just had me drop her off at the curb. I think she had time,\" he responded, noticing for the first time she was obviously not wearing a bra under the tight shirt and had pierced nipples.\n\nShe quickly tapped out a brief message then grinned widely as the reply came through seconds later. \"Yeah, she's on the plane but she said she's so horny!\"\n\nKyle's face felt hot as Charlize was not keeping her voice down and heads turned in their direction. He just nodded at the information.\n\n\"Did she get called away by her parents as you two were about to...\" Charlize asked with a wicked smile.\n\n\"A gentleman never tells,\" he said quietly.\n\n\"Fair enough. How long is she going to be away?\" Charlize conceded.\n\n\"Until Sunday night. I'll pick her up from the airport.\"\n\n\"She texted me something about you going camping?\" the petite woman said curiously.\n\nKyle smiled. \"Not really camping. I'm just going to pick up a tent and a sleeping bag, ride some of the scenic roads and camp overnight. Just an overnight stay or two. I was looking online for routes and campgrounds. Saw a few interesting places.\"\n\nShe was nodding as he saw the idea appealed to her. \"I've only ever done out and back loops with an overnight stay in a motel. I've never slept in a tent.\"\n\n\"Well, if you've got a sensitive back, sleeping on the ground is less than ideal. Otherwise, it can be an extremely liberating experience.\"\n\nThe waitress took that moment to arrive. \"Can I get you a drink?\" she asked Kyle.\n\n\"Just water with lemon please.\"\n\n\"Have you had a chance to look at the menu?\" she asked.\n\nKyle glanced at it and nodded. Then he looked to Charlize. \"Ladies first.\"\n\nWith a smile, she looked to the waitress. \"My usual.\"\n\nThe young woman smiled and turned her attention back to him. \"Oh! Ok. I'll have the Eureka American with no onions please.\"\n\n\"Ok, that's a Jalape\u00f1o Egg Burger and a Eureka American Burger. One water with lemon and would you like another beer?\" she asked Charlize.\n\n\"No, I'd like a water with lemon as well, please.\"\n\n\"Coming right up,\" the waitress said cheerfully and walked away.\n\n\"Have you picked out a route yet? I know some really truly breathtaking roads!\" she gushed.\n\nHe smiled as he shook his head. \"No, I haven't set anything in stone yet.\"\n\n\"Are you set on going alone or would you be open to someone joining you?\" she asked with a hopeful expression.\n\n\"With you riding the Supersport?\" he asked with a raised eyebrow. She nodded. \"I'd never keep up,\" he said with a grin.\n\n\"I promise to rein in my need for speed and just enjoy the scenery this time!\" she pleaded.\n\nHe gave her a serious look. \"I don't want to diminish your enjoyment of the ride. If you need to go fast feel free but just understand you may end up waiting for me from time to time.\"\n\n\"Does that mean yes?\" she said with a delighted grin.\n\n\"Sure, having company would be great! Are you sure you can take the time?\" he asked.\n\n\"I'm a partner in a sports injury clinic. Grace Medical Sports Clinic. I work as a physiotherapist there and have loads of vacation days I haven't used yet. My partners can cover for me.\"\n\nKyle recalled something from their previous conversation. \"Hockey players.\"\n\nCharlize grinned and nodded. \"Yeah, I arrange most of my dates at work. Something about a woman putting her hands on your body makes these guys agreeable to going out for a drink and a tumble in the sheets.\"\n\nHe decided to move the conversation to a different track. Her smile showed she noticed.\n\n\"Partners in a clinic! Doing well?\"\n\n\"Yes! We started about fifteen years ago and now we have clients from all over the country coming to see us. We've gradually specialized in professional athletes. Very lucrative!\"\n\n\"It could only be successful if you had the skills to get the job done. These are professionals. I doubt they'd be willing to put their livelihood on the lines. They're looking to protect their investment. Good on you!\" he said, giving her an impressed smile. She nodded her thanks as she glowed under his praise.\n\nThe food arrived and while being a little drippy, the burger was really good!\n\nAs she finished up hers, Charlize went back to discussing the trip. She seemed very enthusiastic.\n\n\"I know the perfect route! There are some really nice campsites along the way as well. Depending on how long you want to ride each day.\" She stopped to think about the logistics of camping as she'd never done it. \"What about meals and showers?\"\n\n\"Dinner we eat in a restaurant earlier in the evening before finding the campsite. Breakfast we find after we break camp. Pack a brush, toothbrush and toothpaste, deodorant, a few shirts, underwear, and socks. I bathe using wipes. This kind of camping isn't about amenities but minimalism,\" he explained.\n\nShe nodded thoughtfully.\n\nKyle raised a hand to cover a yawn.\n\n\"What made you so sleepy today?\" she asked with a coy smile.\n\n\"Nothing. We were relaxing on the beach for most of the day. Did a little swimming, that's it! I can't get over how beat I am!\" he said in surprise.\n\n\"Yeah, being outside all day at the beach can do that to you,\" she replied with a smile. She raised her hand to catch the waitress' attention and gestured for the bill. \"Dinner was my treat.\" She held up her hand to prevent him from arguing. \"You're letting me join you on this little adventure so dinner is the least I could do.\"\n\nHe snorted but nodded his thanks.\n\nShe settled up the bill and they walked out to the parking lot. He stopped by her motorcycle and admired the Yamaha. It was sleek and black.\n\n\"Damn! It looks fast even sitting still!\" he said quietly.\n\nHer smile said it all. She loved her ride! She pulled him into a hug which he returned. She was so much shorter than him but she certainly didn't feel like a child.\n\n\"Where should I meet you tomorrow and when?\" she asked when she pulled back.\n\n\"How about 10AM at REI? Unless you already own one we have tents to buy. Sleeping bags too. I guess I'll carry them on my bike as yours doesn't appear to have room to carry a loaf of bread!\" he teased.\n\nShe punched his arm gently. \"I'll have a small bag strapped to the seat... but yeah, your bike would be better for carrying the bulky items. I'll see you there!\"\n\nHe leaned in to give her a kiss on the cheek and she turned and got one on the lips instead. With a cheeky smile, she pulled her helmet on and started up the motorcycle. It throbbed with power and she nodded to him as she pulled away and out of the lot.\n\nShaking his head with a smile, he made his way over to the car and headed back to the house. He really was pooped and he had a long day ahead of him tomorrow.",
        "Chapter 4\n\nKyle cruised into the parking lot of REI a few minutes before 10AM. He'd unloaded his saddle bags and detached the trunk bag earlier this morning and just visited a drug store to pick up some packs of wipes in case shower facilities were not available at the campsites. He had his kit and clothes packed into one of the saddle bags with plenty of room to spare. His bungie cables were ready for the tents and sleeping bags on the rear rack.\n\nHe parked his bike and locked his helmet to it as he heard the telltale sound of Charlize's Yamaha YZF\u2011R1 approaching. There was an odd echo effect, perhaps the sound bouncing off the nearby buildings. Then she came into view and he was surprised to see an identical bike, only this one was blue, riding just slightly behind Charlize's black Yamaha.\n\nThe petite woman was wearing her black leathers and a black full-face helmet to complete the look but her shadow was in racing gear to match her bike, blue and white leather with Yamaha emblazoned all over her body.\n\nThe two bikes pulled into the lot and Kyle saw both had a small duffle bungied to their 'passenger seat'. So... they had an addition to their group?\n\nCharlize pulled her helmet off and shook out her hair as she smiled over at Kyle a little nervously. Her friend removed her helmet as well and the first thing to catch his attention was the widest smile he'd ever seen, though it also looked nervous. The woman was maybe 5' 6\" and skinny except for the extra weight she seemed to be carrying on her chest and ass, like an enhanced hourglass figure. Implants? He couldn't really tell if she was an example of it but he thought it was crazy how much body augmentation he'd witnessed in California.\n\nHer riding leathers were squeezing her breasts up and together so some delightful cleavage was on display. He wondered what she had on under the racing jacket as that was a lot of skin. Not that he was complaining.\n\nHer sandy blonde hair was straight and just reached the top of her shoulders. He thought it was a very flattering cut.\n\nHer mouth though, that was something to behold. It was very wide and full of bright white teeth, currently on display. She had a slight overbite which braces could probably fix but he thought it was a sexy feature. Her fair skin was generously sprinkled with freckles, over her chest and across the bridge of her button nose, and her large blue eyes looked to him then over to Charlize timidly.\n\n\"Good morning Kyle! This is Chloe Ryan. She's one of my partners. When I called her last night to let her know I'd be taking some days off she begged me to come along.\"\n\n\"I didn't beg! I didn't!\" Chloe gasped, her eyes wide with embarrassment. Kyle couldn't help but smile as he heard the thick Aussie accent in her protests. \"I just said I had some days too and Charlize promised me she'd take me riding with her. She's been putting me off since I got my new bike! Isn't she a beaut!\" The woman was babbling, likely due to her being so nervous.\n\n\"Yes, it's a gorgeous machine,\" he agreed and saw her perk up a little. She smiled at him then unconsciously covered her mouth with her hand.\n\nImpulsively, he reached out and gently moved her hand.\n\n\"Never hide such a beautiful smile,\" he said as he held her eyes with his and her smile lit up her face as her cheeks reddened.\n\nCharlize was beaming at the two of them. \"So, it's ok for Chloe to join us?\" she asked.\n\n\"Sure, but two things. First, is Chloe aware we aren't going to race? The pace will be for sightseeing.\" Chloe smiled and nodded happily. \"Secondly, my bike only has so much room for carrying our camping gear,\" he said with mild concern.\n\nThe doors were opening so Charlize gestured for them to go inside. \"Let's see what's available.\"\n\nKyle nodded and gestured for them to lead the way. Chloe went first and Kyle's eyes widened slightly as he watched her bubble butt move in the tight leather. It wasn't huge or flabby but she definitely had two perfectly round orbs trapped inside her pants. He caught Charlize's wicked grin at his noticing and looked away.\n\nThey made their way into the camping section and looked at the variety of tents. When he looked at the size of the packed tents, he realized three of them would be an unwieldy load when combined with three sleeping bags. He said as much to Charlize and Chloe.\n\n\"What about just getting one four-man tent,\" Charlize suggested as she pulled out the rolled-up tent. \"It packs smaller than three one-person tents and it's cheaper too if we pool our money. I think we'll get a better rate at the camp sites with one tent too.\"\n\nKyle looked at her in surprise. \"One tent?\" He glanced at Chloe and saw she was back to smiling nervously at him.\n\nThe petite brunette continued. \"It's my first time in a tent and I have to admit I'm a little nervous about it. I think sharing a tent would be less stressful for me.\" She looked at Chloe. \"Have you ever camped?\"\n\n\"Not since I was a rug rat! And then it was in my Mum's backyard,\" she said and flashed a quick smile at Kyle.\n\n\"So, you'd prefer to share a tent too?\" he asked.\n\nThat brilliant smile returned and she nodded quickly.\n\nKyle accepted the four-man tent bag from Charlize and agreed it made sense in terms of its reduced weight and bulk. He smiled at the ladies. \"Sleeping bags next.\" He walked down the aisle and missed them giving each other an excited smile.\n\nThey picked out three bags and made their way to the checkout. Charlize picked up the cost as she had a membership and said they could pay their share later.\n\nOutside, Kyle strapped the tent and sleeping bags to the back rack. It worked well. He glanced over at the duffle bags each woman had and suggested he put them inside his saddle bags. The weight was minimal and he had room. They were happy to take him up on his offer and he quickly balanced the load.\n\n\"Ok, ready to go. As you know the route Charlize, you lead the way but just remember, I won't be riding as fast as you normally do. That said, if there is a section without any forks in the road I could get lost on and you want to go fast, feel free to race ahead.\"\n\n\"Got it! Let's go!\" she replied happily.\n\nTrue to her word Charlize maintained a reasonable speed, most of the time, and Kyle managed to not lose them. There were a few times when the two Yamahas shot forward to race over a hill and when Kyle eventually caught up, he'd enjoyed the twisty road so much he understood their need to fully experience the ride as their machines were designed to do.\n\nThey stopped a few times to poke around in craft shops in the small towns they discovered on the route. They didn't buy anything but they did enjoy the exploring.\n\nCharlize was a flirt. For all her petite size, she made up for it in enthusiasm. She regaled Kyle with stories from her office. The sexy sport celebrities and their hookups with the staff, mostly her, though it sounded like she had some competition in a coworker named Olivia. Each story brought a blush to Chloe's face and Charlize seemed to be enjoying that as much as Kyle's stiffer reaction.\n\nFinally, he thought his dick might break off in his pants so he tried to change the topic. He fixed his gaze on Charlize. \"You two seem to ride really well together! You're both obviously skilled riders. Why the initial resistance to riding with Chloe?\" That would put Charlize on the spot! Maybe settle her down a little, he thought.\n\nInstead, the little spitfire went on the offensive. They were sitting in the shade of an old tree on a bench finishing their soft-serve ice cream cones. With a mischievous grin, Charlize jumped to her feet, tossed the last of her cone into the trash and tugged the protesting Chloe up beside her. The blonde looked both intimidated and thrilled to be manhandled by the smaller woman.\n\n\"Have you seen how she dresses to ride? Look at all these brand patches plastered all over her wanton body! She's like a little corporate whore!\" Charlize teased as she cupped and lifted Chloe's full tits from behind to jiggle the large 'Yamaha' embroidered patch across the front of her jacket almost forcing them to jostle free of their confines.\n\nIce cream cone slipping from her numb fingers, Chloe squeaked and gasped at the rough handling of her breasts and being called a whore. Her face took on an amazingly bright pink tone.\n\nNot yet done with the blonde, Charlize spun her around to present Kyle with that amazingly round bottom once more. \"And look at this incredibly yummy ass? Shouldn't there be a big patch across it as well?\" Charlize squeezed the orbs hard in her strong hands and Chloe actually moaned in reaction causing the pink complexion to flash to red. \"She's always making these slutty sounds too! It's almost enough to make a raging lesbo out of me but I love the D too much to give it up.\" Charlize looked down at Chloe's ass once more and gave it a fond but hard slap drawing another shocked squeak from the woman.\n\nChloe was biting her lush bottom lip as she pressed her thighs together. She kept glancing at Kyle then back to Charlize who was back to smiling mischievously.\n\n\"How- how much further to the campsite?\" Kyle said then realized how that might be interpreted. \"I mean, how much more riding until we have to find a restaurant for dinner and then a campsite?\" he rushed out.\n\nCharlize paused as if thinking about that then shook her head. \"Not too much longer. Another thirty miles, maybe? There's a great biker's bar we usually stop at. They have great burgers and cold beer. There's a campground maybe ten miles past that. I've never been but I understand it's also popular with the motorcycling crowd.\"\n\nKyle used a spare napkin to scoop up the dropped cone and put it in the trash with the remnants of his own. He went to hand Chloe another napkin to wipe her mouth. He caught her flustered expression and the heaving of her bosom as she took deep breathes to calm herself. His own thoughts quickly derailed and he found himself gently pressing the napkin to her mouth, running it across her lips to wipe away the creamy mess. He throbbed in his pants as her big blue eyes locked on his.\n\n\"Sorry, you had... a little ice cream... there,\" he muttered, shocked at his own audacity.\n\nShe smiled timidly. \"It's ok. Thank you,\" she replied softly.\n\nHe could only nod as his cock throbbed again. \"Shall we? Get going?\" he blurted as he looked away from her lips and Charlize nodded happily.\n\nKyle walked back towards the bikes, trying to ease the pressure in his pants without being obvious about it. He finally had to stop and manually move his erection as the pinching was getting too painful. He looked over his shoulder at the sound of giggling but the ladies quickly looked elsewhere.\n\nThey rode on, enjoying the technical riding on the curvy valley roads as they snaked through the countryside.\n\nRoughly an hour later, they came around the last tight bend exiting a valley and saw a large roadhouse up ahead. There were many motorcycles parked around it and a number of cars as well. As they parked they cast their eyes over the variety of bikes. Racers like their Yamahas, cruisers like Kyles, and everything in between. Lots of choppers too. They locked up their bikes and helmets.\n\nCharlize stepped closer to Kyle and pulled Chloe in next to her so she could speak to them both quietly. \"This is a pretty rowdy place. Not dangerous exactly but it would be much easier for the two of us if you pretended that we were your women. This'll keep the more aggressive Romeo's from bugging us.\"\n\nKyles eyebrows rose and he glanced towards the front doors. He could see they were already drawing attention. Mostly from men. One of the men was licking his lips as he checked out the ladies in their leathers.\n\nHe sighed. He hated jerks like that. Right. \"I get it. How do you want to play this?\" he asked.\n\nCharlize grinned widely and Chloe picked up on that too. \"As aggressive as you can comfortably be. The competition inside can be pretty intense.\"\n\nHe nodded, glancing quickly to confirm the men were still watching, and stepped closer to the ladies to pull them against his body. His right hand immediately went to Chloe's ass and he gave it a squeeze. He did this as he slid his left into Charlize's hair, gripping and pulling it back to tilt her face to his to kiss her deeply. The ladies moaned in unison and he felt Chloe tremble against is thigh. When he pulled back from Charlize's lips her eyes fluttered open as he turned to kiss Chloe. Her mouth was on his instantly and she whimpered into his mouth as they tangled tongues.\n\nFinally, he pulled back from her mouth as she leaned forward to keep his tongue in her mouth. He gave her ass another hard squeeze and she shuddered as she ground herself against his leg.\n\nAnother glance to the front door showed that the lip licker and his buddies were stepping inside. Hopefully, they got the message. He turned his eyes back to Charlize and Chloe. They both looked a little dazed.\n\n\"Was that ok?\" he asked.\n\n\"Yes! Yes, that was... really good. Keep that up and we won't have any trouble with the jerks inside,\" Charlize sighed.\n\n\"Sorry, there were some rough looking characters standing by the entrance,\" he explained. Chloe jumped a little and glanced towards the door as she clung tighter to him.\n\nHe got them moving and they made their way up the stairs onto the veranda then into the large building. The noise inside was mostly voices though he did pick up on some country music playing in the background. The ladies stayed close to his sides as he approached the hostess for the restaurant.\n\n\"Hi there, table for three?\" the older woman asked.\n\n\"Yes, please.\"\n\n\"My, ain't you polite,\" she said with a big grin.\n\n\"Costs nothing to have good manners and yields many benefits,\" he said hugging Charlize and Chloe to his sides. The ladies smiled at the hostess too.\n\nThe woman cackled gleefully then looked over her shoulder. \"Ok, give me your name and I'll come get ya when your table is ready. I can see one opening up but we'll need time to clean it and set it. You can wait in the bar.\"\n\n\"MacDenny.\"\n\n\"Got it. Go on ahead,\" the woman said turning her attention to the next people entering the front door.\n\nKyle walked into the bar followed by the ladies. The tables were mostly full here as well but the bar was almost empty. He walked to the end closest to the entrance as he spotted the lip licker with his two buddies at the far end of the bar. Unfortunately, they were seen as well. He caught the frowns sent in his direction. He didn't want to get into a fight and saw the bar had a bouncer to ensure civil behavior or consequences.\n\nThe bartender approached and he caught the ink covering almost every inch of her skin from her neck down. \"Hi honey, what'll it be?\" she asked with a slightly raspy voice.\n\n\"Whatever beer you have on tap that's cold and thirst quenching,\" he replied with a smile. He looked to the two ladies who nodded. \"Make it three.\"\n\n\"Coming right up!\"\n\nKyle took a seat at the bar while Charlize and Chloe took the last two stools to his left so he was between them and the men eyeing them. The noise and the crowding wasn't as bad in the bar but it was still early.\n\n\"Here you go, hun'. Should I start a tab or are you here for dinner?\" The bartender asked as she placed the beer before them.\n\n\"We're just waiting on our table,\" Kyle explained.\n\n\"Right, we'll just add it to your bill then,\" the woman said with a smile and Kyle nodded to her thankfully.\n\nWhile not a big fan of beer, it was cold and had no bitter aftertaste. He grimaced just a little as he swallowed.\n\n\"Thought so. Punk's a fake.\"\n\nKyle turned his head to look at the speaker and wasn't surprised to see the lip licker. He really needed a better name for this guy.\n\n\"Don, let's go,\" one of his friends smartly said as he kept an eye on the brute by the door.\n\nAh, there's the name, Kyle thought. He felt no urgency in using it as the man hadn't actually engaged him in conversation. He studied him to see what his next move might be.\n\nThe guy was about his height, maybe five years older, and solidly built. He was sporting three-day growth of beard and smelled three days ripe in his leathers. There was something in his eyes though that raised the hairs on the back of Kyle's neck. The man was aching for a fight.\n\n\"It's not happening,\" Kyle said wearily.\n\n\"What isn't?\" Don growled.\n\n\"I'm not going to get into a fight with you. I don't want it. Your friends don't seem to want it. The bouncer doesn't either but you know he'll be the one finishing it. You won't get the girl, either of them. There's no 'win' in this for you or for anyone. I'm sorry. That's just how it is.\"\n\n\"He's right, Donnie. Let's just enjoy our beers, for fuck sake,\" Don's second friend piped in with an agitated tone. That seemed to break through the man's directionless anger. With a snort, he turned away and walked back to the other end of the bar. Kyle nodded to his friends and went back to his own beer. Unfortunately, he had Don's stink in his nostrils and that soured his taste buds.\n\n\"What's the matter? Don't like the beer?\" the bartender asked as she stepped closer.\n\n\"No, it's good! I just have this... scent in my nose. Where's the restroom?\" he asked.\n\nShe pointed him to the back corner.\n\n\"I'll be right back,\" he said to the ladies and they both smiled and nodded to him, impressed with how he'd defused the fight so calmly.\n\nKyle made his way into the men's room and quickly washed his face and snorted the cold water a little to dull the scent. He was drying his face and hands when Don pushed his way into the men's room with a murderous glint in his eye. Kyle stepped back and watched Don's fists come up as the man smiled menacingly.\n\n\"Geezus, what's broken in your head?\" Kyle asked in frustration. This could get really ugly.\n\nDon's first punch was well telegraphed so Kyle leaned back. As it swished by, he launched himself forward and hammered his own fist against Don's solar plexus. There was a deep thump as he transferred his weight through his arm into the man's diaphragm.\n\nKyle skipped aside and watched as Don dropped to his knees and struggled to suck in a breath as his muscles locked up. Kyle moved to the sink as he looked back at the gasping man.\n\n\"Seriously Don, I don't want to fight you but if you don't promise to fuck off and be good I will finish this.\" Kyle said as he washed his hands again.\n\n\"Ffff... sshh... fuuuk... you.\"\n\nKyle kicked out his foot and caught Don on his ear launching him face first into a nearby sink. Cartilage snapped and blood gushed from the man's broken nose as he crashed bonelessly to the bathroom floor.\n\nHe made sure Don was still breathing then left the washroom, keeping an eye out for the man's friends. He made it all the way back to the bar but there was no sign of them. He looked to Charlize.\n\n\"What happened to the two guys Don was with?\" he asked.\n\n\"They had an argument with him, got pissed off and left. Why?\"\n\nHe waved down the bartender as Charlize and Chloe watched him curiously.\n\n\"What can I getcha?\"\n\n\"Can you call for an ambulance? It seems that angry fellow fell and hit his face on the sink in the washroom.\" Chloe gasped in surprise.\n\nThe woman rolled her eyes and bellowed for the bouncer. \"Pete! Cleanup in the bathroom.\"\n\nThe bartender walked away and Kyle took another sip of his beer. He frowned as it was warm.\n\n\"Table for MacDenny!\"\n\nKyle turned and raised his hand. The ladies fell into step behind him as he followed the hostess to their booth.\n\nWhen they were finally alone Charlize leaned forward. \"What did you do to that guy?\"\n\nKyle looked uncomfortable. \"I took care of it.\" When they just stared back at him in frustration he sighed.\n\n\"I tried to talk him out of getting physical but he wouldn't listen. I was really lucky that he wasn't very good. I'm not a fighter but I knew how to disable him. He still wanted to fight so I... kicked him face first against the sink. Busted his nose... knocked him out.\" He looked a little ill."
    ],
    "authorname": "BurntRedstone",
    "tags": [
        "mature",
        "romance",
        "oral",
        "threesome",
        "lesbian",
        "harem",
        "tits"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/shifting-gears-1"
}