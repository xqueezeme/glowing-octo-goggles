{
    "title": "The Cornhole Championship",
    "pages": [
        "This story is placed within the anal section as it concerns anal sex. If you don't enjoy stories involving anal sex then you really shouldn't read this story. You will be wasting your time. But, if you do like such stories, then I hope you like this one!. \n\n- - - - - - - - - - - - - - - -\n\n\"It was a pretty strange dream.\"\n\n\"Dreams are the royal road to the unconscious, John. It can be very helpful to explore them. Please, go ahead.\"\n\nThis was just the second session with Dr. Lowenstein and she was still conducting her assessment of John's problem. Dr. Lowenstein was a certified sex therapist working with students at Templeton College (e.g., see \"There must be something wrong with me\" and \"Cosplay\"). John came to her because he was having erectile dysfunction problems. He would at times have difficulty getting an erection and at other times have difficulty sustaining his erection.\n\nIt didn't happen all the time. In fact, it didn't happen most of the time. Much of the time he was fine. But, it did happen frequently enough to trouble him.\n\nFortunately, or unfortunately, he did not currently have a girlfriend. That was fortunate in that his problem was not disrupting or harming a relationship. It was unfortunate because he didn't have a partner with whom to work out the problem. And, well, of course, it is always unfortunate not to be within a relationship. And John had no intention of dating until he got over the problem.\n\nThe problem became evident simply through his evenings at masturbation. John did like doing that. In fact, he masturbated most every night. He would at times refrain for a few days, as he felt that he would then build up quite a head of steam, so to speak, for a really nice, special evening.\n\nBut, he began to have some difficulty. Sometimes he would have difficulty getting an erection started. He knew that as you got older you would begin to have some difficulty getting erections, but at nineteen? He felt considerably older than when he was in high school, but he was still just nineteen, a sophomore in college. No, it couldn't be aging.\n\nHe then wondered if he was jerking off too often. Once a day is perhaps doing it too often. When he was in junior high he might do it twice in an evening (and perhaps even once during the same day). Those were good times. Perhaps he was indeed getting old, having cut back to just once a day. But he also noticed that the difficulty did not seem to be correlated with the amount of time off.\n\nHe then wondered if perhaps he might be gay. He got aroused thinking about girls. He masturbated to fantasies about girls: girls he knew or actresses he thought were hot, or just girls of his fantasy world. He imagined them doing all sorts of things: slowly taking off their clothes, teasing him, fondling him, blowing him, letting him cum on their faces. All of that got him really, really aroused, except sometimes it didn't. And, well into a masturbation episode he might just suddenly lose his desire and no matter how much he thought about the respective girl's boobs, her cunt, her lips, he just couldn't get his erection back.\n\nSo, he tried fantasizing about guys. But, that didn't work. Much as he tried to think and fantasize about having sex with a guy, it just didn't work. He would then switch to a pretty girl he knew and he very quickly became erect. It didn't seem to be that he was actually gay.\n\nHe just couldn't figure it out. He even started to have very restless nights, filled with all sorts of strange and disturbing dreams. He realized that he really needed to see a therapist so he made an appointment to see Dr. Lowenstein. The first session was devoted to gathering information concerning life history, his sexual history, his relationship history, and the history of his sexual problem.\n\nIt had been a difficult session for John, talking about all that personal stuff, particularly with a woman, and a woman as attractive as Dr. Lowenstein. She had absolutely gorgeous big grey eyes, dark lashes, long wavy auburn hair, sweet red lips, a delicate, thin nose, and a lovely, incandescent smile. He reminded John of Julia Roberts, with spectacles, and that was pretty darned nice. In fact, after the first session he had gone home to the dorm to masturbate thinking about her, about feeling her breasts, her sucking him off, and even having sex with her on her analyst's couch.\n\nIt was a good session. It began with her explaining to him, \"You know, John, doctors can have sex problems too.\" She got up out of her chair and stood before him, unbuttoning her blouse. \"I haven't had sex in so, so long, John. It can be so difficult for a professional woman to find a man. I just need a little release, a little relief. You'll help me, won't you, John?\"\n\nAs he stroked himself he thought about Dr. Lowenstein slowly taking off her clothes, standing in front of him dressed in just a lacy brassiere and panties, lifting up her big boobs for him, bending over to have him snuggle his face in those lusciously soft female pillows. He was getting harder and harder. In his fantasy she stood before him and slowly pulled down her panties, her eyes remaining fixed on his, smiling all the time as she watched him get more and more excited as she bent over, the cleavage of her brassiere opening up wider and wider, his eyes uncertain where to look, into her eyes, down into her cleavage, or at her hands drawing her panties down her thighs. She let them fall to the floor and stood back up straight, albeit using her hands to keep her modesty, hiding her cunt from view.\n\n\"John,\" she asked, \"Would you be willing to please your doctor, with your mouth? No man has ever done that for me before, and it would make me so very, very happy. I've always wondered what it would be like to have a man use his lips, his tongue, there on my, my....\"\n\n\"Your cunt,\" he said, in his fantasy.\n\nThe doctor covered her face with her hands in embarrassment, yet in doing so revealing to his eyes the sight of her womanly cunt. He was rather surprised, but pleased, to see that the doctor shaved herself. \"You have no hair?\" he inquired.\n\n\"Oh, goodness,\" she said, her hands retreating back down to her cunt. \"You're not upset, are you?\"\n\nHe was actually quite pleased, particularly if he was going to eat her out. He much preferred a shaved than a hairy cunt when doing something like that, although he had not in fact done it very much. \"No, no,\" he said, reassuringly. He took her hands and gently moved them aside so that he could see her again.\n\n\"Oh please don't look,\" the doctor said, again covering her face in embarrassment.\n\n\"It's beautiful, doctor,\" he said, in his mind, his fantasy, as he continued to stroke his dick.\n\nIt was indeed. He imagined the doctor would have a cunt as pretty as her eyes: smooth, white, and pure, a nicely intimate, petite pouch cut by just a small enticing slit. He leaned forward to place his lips against hers and, as he grasped hold of her womanly full butt his cock lurched and swelled in his hand. He stopped for a moment as it felt like he was about to cum, and he had not yet even gotten as far in his fantasy where he was actually fucking her.\n\nHe then started licking, sucking, and chewing on the doctor's cunt and clit, all the while squeezing and pawing her soft, pliant buttocks.\n\n\"Oh my, oh my, oh my goodness,\" gasped the doctor. She rested her hands on his shoulders, finding it difficult to maintain her balance, to keep her legs steady, as she apparently had never felt anything like this before. \"This is so wonderful,\" she sighed. \"You're so good at that, John. You make me feel so alive, so excited. Oh my goodness,\" she exclaimed, with some embarrassment, \"I'm getting so wet!\"\n\nShe pushed him away, apparently realizing that she was herself getting close to cumming. \"Please, I must have you. I must feel your, your....\"\n\n\"Cock?\" he answered for her, the inhibited, frustrated doctor apparently quite insecure about speaking so bluntly, so wantonly.\n\nHer face turned red at his imprudent, bold language.\n\n\"Yes, yes, your, your penis. I must feel it inside me. You must have such a big, hard, stiff penis. Please, please let me see it.\"\n\nIn his fantasy he undid his slacks and pulled out his cock, displaying it with some pride to the doctor.\n\n\"Oh yes, yes. Oh my goodness, it's so impressive.\" She blushed again at the sight. \"I don't know if I can take one that big in me.\" John did not hold back on his fantasies. Why should he? It was his fantasy. It might as well be as good as he wants it to be.\n\nShe got down onto the floor, spread open her legs, and pulled her knees back against her chest, to offer herself in as open, inviting, and obscene manner as possible. \"Fuck me, John, fuck the doctor with that big, hard, oh my, that, that, COCK of yours!\"\n\nBut, then, John could suddenly feel the arousal, the excitement, suddenly dissipating, slipping away from him like air from a punctured balloon. His dick went limp, and he lay there confused, disappointed, and distraught.\n\nHe was now back for his second session with Dr. Lowenstein, lying down on her analyst couch, the doctor sitting in her chair behind him and to his right, where she was out of his sight, but he was fully within hers. Dr. Lowenstein was having him describe one of his recent nightmares for her.\n\n\"Well, um, I was trying to burrow through this tight, dark, cave, or tunnel. I'm not really sure now which it was. I guess it must have been a tunnel. It was really very frightening, so narrow, so tight, but the walls were so soft and squishy, not like any tunnel or cave I've ever seen. It was like I woke up buried alive and I didn't know where I was and I was trying to squeeze and burrow my way through this cramped crawl space, trying to escape, trying to get out, yet it seemed like I was in fact going in deeper and deeper, but...\"\n\nHe paused.\n\n\"But?\"\n\n\"What?\"\n\n\"You said, 'but.'\"\n\n\"But?\"\n\n\"Yes, you said 'but.' But what?\"\n\nHe wasn't too sure he wanted to tell her all of the parts of the dream.\n\n\"You need to tell me all of the dream, John. It's really quite important.\"\n\nHe took a deep breath and told her the rest. \"Yea, well, the weirdest part was that I developed this big erection. I mean, like, a really, really big one.\"\n\n\"Yes, yes, very interesting,\" Dr. Lowenstein replied, crossing her legs.\n\n\"It was so weird to be so frightened yet to have this really, big, hard....\" He couldn't say it.\n\nShe finished for him, \"Cock?\"\n\n\"Yes,\" he shamefully admitted. \"I mean, well, it was so big that it was making it difficult for me to squeeze through. It just kept getting caught. The tunnel was so darned tight, and dark, and I was getting more and more scared, yet more and more excited, getting harder and harder, swelling up really, really big making it even harder to get through the tunnel and then...I woke up.\"\n\n\"Yes, yes,\" Dr. Lowenstein replied, \"very interesting, John, very interesting, indeed.\"\n\n\"You think it means something?\"\n\n\"Oh, I don't know. I don't know.\" She knew full well what it meant but it was always best for the patient to reach his or her own insight. \"What do you think, John?\"\n\n\"It doesn't mean anything to me, other than being just so weird.\"\n\n\"Yes, well, did you have any other dreams this past week?\"\n\n\"Yea, quite a few of them, all of them nightmares.\"\n\n\"Tell me about another one.\"\n\n\"Well, there was this other one in which I was sitting on this big soft white pillow. It was actually more like a giant round cushion, one as big as a room. But, it was outdoors. I was in this field, lying on this giant round, soft, white cushion, looking up at the moon. There was a full moon that night. I do like staring at the moon, don't you, doctor?\"\n\n\"The moon is a very wonderful symbol, John.\"\n\n\"Yea, I was just lying there, admiring the big round white moon, and then, like, suddenly, I got this big hard-on. I don't know why. All I was doing was looking at the moon and I got really sexually excited.\"\n\n\"When you're awake does that ever happen?\"\n\nJohn turned his head away to face the wall, away from the doctor, as he admitted, very, very shamefully, \"Yea, actually that has happened, a couple of times.\" He knew that must sound really crazy. \"Does that mean something?\"\n\n\"What else happened in your dream, John? So far it sounds like a very pleasant dream.\"\n\n\"Yea, it was weird, 'cause then suddenly, well, not suddenly, slowly this hole opened up beneath me, just gradually, slowly, getting bigger and bigger, and I found myself being drawn down into this hole in the cushion, being slowly pulled in, or more like squeezed in. I tried to get out. I tried to hold onto the cushions, but they were so slippery, smooth, and soft. I couldn't get a good grip, and I kept sinking down into this tight little hole, like I was being sucked into a cushion's quicksand, and all the time my, my...\" He again couldn't say it.\n\n\"Your cock?\"\n\n\"Yea, my, you know, my penis. My penis was getting harder and harder, and stiffer and stiffer, and it was so difficult squeezing it in, until eventually only my head was outside of the hole, just my head was poking out, and as it popped in I took a deep breath and felt like I was going to ejaculate, but I woke up.\"\n\n\"Yes, most interesting, John, most interesting indeed.\"\n\n\"You really think these dreams mean something, Dr. Lowenstein?\"\n\n\"Well, sometimes they do, John, sometimes they do.\"\n\n\"Yea, well, you're the doctor. There's this third one I remember. Do you want me to tell you that one too?\"\n\n\"If you wish, John, if you wish.\"\n\n\"Yea, well, in this one I was with this girl I know, Nina Hartley. I don't really know her at all. She's just this girl I know. Well, actually, I kind of like her, you know. Actually, I can't really say I really like her, 'cause I don't really know her. I would like to know her but, well, you know, I really don't feel right about asking any girl out right now.\"\n\n\"And what happened in this dream, John?\" He was clearly demonstrating some resistance in talking about this girl.\n\n\"Yea, the dream, well, it started off fine. I was in fact, well we were in fact, making out, you know, kissing, and I had this....um.\"\n\n\"Erection?\"\n\n\"Yea, but, well.\"\n\n'Tell me everything that you can remember about the dream, John. Each detail can be quite important.\"\n\n\"Yea, well, it was, well, kind of weird, 'cause I like had this...erection, but it was, like, so much bigger than I had ever had before.\" He turned his face back toward the doctor, although he couldn't actually see her. \"I mean it was gargantuan big, crazy big and, well I mean, like, it was so big I was thinking that there was no way she would be able to take this thing. Is that really possible, doctor?\"\n\n\"Excuse me?\"\n\n\"I mean, is it really possible to be so big a girl can't take it?\"\n\n\"Well, technically,\" Dr. Lowenstein hesitantly replied, uncrossing and then re-crossing her legs, a warmth developing in her thighs as she imagined taking a really, really \"gargantuan\" one, \"I suppose that it is conceivably possible that a boy, a man, could be too big, but the average woman can in fact take quite a big one, if she wanted.\"\n\nJohn felt like asking the doctor what was the biggest one she had ever taken, but he figured that might be too personal. \"Yea, well, it was weird, I mean, like...\" His voice quieted. \"I'm not really that big,\" he confessed, \"and it was so strange to think that I would be too big, that it wouldn't fit, and,\" his speech accelerated, \"and I really wanted this girl and she clearly wanted me. We were really going at it, but suddenly my erection just slipped away, and I had this big panic. What was I going to do now? What would she think? One moment I'm dying to have her touch me, down there, you know, and then the next moment I'm scared shitless that she will, 'cause then she'd discover that I didn't even have an erection, and probably wasn't going to get one. I thought of telling her that I didn't want to go too far too fast, like as an excuse, you know, and then suddenly we're in this field of rose bushes, like we're surrounded by roses. That's my favorite flower, a rose. Seems weird for a guy to have a favorite flower, I know, but for some reason I really like red roses. Pink ones are good too. Do they have brown roses? They really should.\"\n\n\"A brown rose?\" That did seem to be an odd association, an odd preference.\n\n\"Sure? Why not? Well, in any case, with the roses my erection returned like gangbusters and she had her hand down in my pants, feeling it, and I had my hand down in her panties and we were like feeling each other up but she had the weirdest, strangest, um....\"\n\n\"Pussy?\"\n\n\"Yea, like her vagina just felt so weird. Not right at all, not like one is supposed to feel. I mean like the mound was really abnormally large and round, like all puffed out cheeks, and, well.\" He knew this was going to sound weird, but dreams can indeed be very weird, \"you know, the crack, the slit, it actually wasn't like that. There was instead a really large crack, spilling the cheeks of her vagina, and down inside there was just this rounded puckered tight curly hole, like all squiggly, and wrinkled, and dry, real dry, like she wasn't excited at all.\"\n\nThe doctor clarified, \"A tightly puckered, wrinkled dry hole?\"\n\n\"Yea, but I wanted to get in there so, so bad. My, well, my penis was so rock solid hard, and clearly way too big for that little thing, and the hole was just so tightly shut I was even having difficulty getting my finger in there. And then she took her hand away from my, you know...\"\n\n\"Your cock?\"\n\n\"Yea, she took it away, which was pretty disappointing, but she did that to reach down, with both hands, down into her panties, to grab hold of those big cheeks of her vagina to spread them open for me and, she said, 'Fuck me, John, I want you to fuck me up my' and then I woke up.\"\n\nThey were quiet for a second.\n\nThe doctor asked, \"Up her what, John?\"\n\n\"Up her, you know, doctor, up her, you said it before...her vagina.\"\n\n\"Are you sure, John?\"\n\n\"What?\"\n\n\"Are you sure that's what she wanted?\"\n\n\"Goodness, I think so. I mean she was spreading it open, and everything.\"\n\nHe wasn't getting the point of her question.\n\nJohn pondered her question further. \"Well, you know, in real life I don't think Nina would, you know, want me.\"\n\nThe root of the problem was obvious to Dr. Lowenstein. \n\n\"John, have you ever tried anal sex?\"\n\n\"Dr. Lowenstein!\" John was quite shocked at such a question. \"I am not gay, Dr. Lowenstein. I already told you that.\"\n\n\"Nobody is suggesting that, John, not that there is anything wrong with it. I was just wondering if you had ever tried anal sex, with a girl, for instance.\"\n\n\"Goodness, no, Dr. Lowenstein, that would be, like, perverted.\"\n\nShe didn't answer him immediately.\n\n\"Wouldn't it?\" he asked again.\n\n\"John, what I think is happening is that your repression of your unconscious desires is blocking your conscious desires from being expressed. It's really like something stuck in a narrow pipe. It's hard at times for your conscious desires to push their way through when your unconscious ones are so constipated, blocking the way. You need to flush them all out. You need to discover your unconscious desires and expel them, purge them from your system. You need to ream out that unconscious.\"\n\nWell, that was a lot for John to absorb.\n\n\"Here,\" the doctor offered, \"let's try a little psychodrama.\"\n\n\"Psychodrama?\"\n\n\"Yes, psychodrama. It's a very standard psychotherapeutic technique in which you act out your sexual relationship difficulties. It's a marvelous way to release and expose subconscious thoughts, fantasies, and fears.\" Dr. Lowenstein was really quite skilled at psychodrama (e.g., \"There must be something wrong with me\").\n\nJohn had never taken any psychology classes so he really didn't know what she was talking about, but that would hardly matter. She was the doctor and you should always trust your doctor. \"Yea, sure, okay.\"",
        "\"John,\" she instructed, \"sit up on the couch, facing me.\"\n\n\"Alright,\" he said, following her instruction but with some apprehension.\n\n\"John,\" she asked, \"Do you find me at all attractive?\"\n\n\"Excuse me?\"\n\n\"Don't be shy, John. Just answer the question as honestly as you can. It's all part of the psychodrama.\"\n\nAn honest answer would be to say that she was incredibly pretty; in fact, beautiful: the big gorgeous grey eyes beneath the large round spectacles, dark lashes, long wavy auburn hair, sweet red lips, delicate, thin nose and lovely, shining smile. \"Well, yea, sure. You're a pretty darned attractive woman, Dr. Lowenstein.\"\n\n\"Well, thank you, John. That's very sweet of you to say so.\" It might not be professional, but she did always like hearing that a patient found her attractive. Counter-transference feelings aren't all bad, are they? \"Have you ever thought about having sex with me?\"\n\nJohn could feel the blood flowing into his face. Why do psychotherapists have to be so insightful. He wondered if she even knew that he had already tried masturbating while thinking about her. She probably did. You really can't keep anything hidden from a clinical psychologist. Well, he would at least try. \"I, uh, um, no, no, of course not.\"\n\nIt was a pretty pathetic lie. You didn't have to have a Ph.D. to notice that lie. Dr. Lowenstein though smiled patiently. \"John,\" she softly explained, \"transferential feelings toward your therapist are really very common in psychotherapy.\"\n\nHe knew going into this that therapy would be difficult, but he hadn't imagined anything like this, and certainly not so soon. He answered quietly, averting his eyes, \"Yea, yea, I have, he confessed.\"\n\n\"Well, that's wonderful, John. That will be very helpful. Now, tell me what you have thought about, with me.\"\n\nKeeping his eyes averted he told her about the fantasy he had after their first session, although it felt more like a confession than simply a recounting. He didn't though tell her all the details. He left out the part where he ate her out. He was a little embarrassed to tell her about that.\n\n\"You ate me out, didn't you, John.\"\n\n\"What?!\" His face turned beet red. \"How did you know?\"\n\n\"A good therapist is intuitive about these sorts of things, John. And, besides, it's a fairly common fantasy for a male patient.\"\n\n\"It is?\"\n\n\"Oh yes, yes, of course. It's really only natural. Now, tell me, did you have an ejaculation?\"\n\n\"No,\" he said quietly, shaking his head in shame and embarrassment. His face grew even redder as he explained to her that he had lost his erection just when he was about to mount her on the floor.\n\n\"That's wonderful, John!\"\n\n\"What? Why?\"\n\n\"You experienced your problem with me. It's very common for patients to experience within therapy the problems they are having in their real lives. It's all part of transference. But it can take weeks for the transference to become as strong as it is for you now. And, well, the fact that it has happened so quickly in your case means that we can now further assess, and even begin treating your problem within the context of the therapeutic relationship.\"\n\n\"What?\"\n\n\"Take out your penis, John.\"\n\n\"What?!\"\n\n\"Relax, John. This is a very common variation on a well validated phallometric assessment technique. There was in fact an article precisely on this technique published in the latest issue of the Journal of Anal Psychology.\" It was really the Journal of Analytic Psychology, but the doctor preferred its abbreviated title. \"Please, John, take out your penis, just so it's outside of your pants, so I can observe its behavior.\"\n\nJohn could feel his heart racing, his hands trembling, his palms getting wet as he did as she instructed. It seemed like an awfully, awfully strange thing to do in therapy. She was a doctor though, and a sex therapist. She probably asks pretty much all of her patients to do this, at least at some point. Thank goodness he didn't have an erection. Wouldn't that be embarrassing. Imagine a doctor telling you to drop your trousers while you have an erection! He would frankly just leave the room rather than have something like that happen.\n\nJohn unzipped his pants, reached inside, and struggled to get out his penis. He was wearing particularly tight briefs. Frankly, he didn't even use the flap when he had to pee, it was so awkward to get to it. He wondered if clothing designers actually tested their products, discovering how hard it was for guys to get their dicks out through these little flaps.\n\nDr. Lowenstein waited patiently. She didn't understand why he was having so much difficulty. It was likely another demonstration of unconscious resistance. She considered providing John with some encouragement but she felt that he would be able to do this on his own. He might be resisting but he would eventually have to show her his penis.\n\nWhen John did finally get it out he was actually a bit disappointed that it wasn't erect. It looked awfully small just flopped out of his pants, lying there limply. A good cock should be thrusting out, sticking out. It was like his just sort of fell out. It was anything but impressive. He was reminded of why he so much preferred male doctors over female doctors.\n\n\"Very good, John,\" Dr. Lowenstein observed. It was actually better for the psychodrama for the young man to be limp. As she got up from her chair John appreciated the doctor's long, shapely legs, stretching out from her short summer skirt. She was wearing a white blouse and a very pretty yellow skirt that was sprinkled throughout by all sorts of gaily colored flowers. She stood before the young man, so strikingly attractive, and leaned down in front of him, the cleavage of her blouse opening up for his eyes, her lovely perfume wafting across his nostrils. John could see down within the doctor's cleavage to notice that she was wearing a yellow brassiere.\n\n\"Dr. Lowenstein,\" John gasped, in panic and arousal, with the panic predominating over his arousal.\n\n\"Now, John, place your hands on my breasts.\"\n\n\"Excuse me?\"\n\n\"Just cup, or hold, whichever you prefer, each one of them in your hands, like you were going to pick out some nice fresh juicy melons.\"\n\nThe doctor's big grey sparkling eyes were now just inches from his, her nose almost kissing his, which was itself being intoxicated by the wondrous scent of her perfume. He reached up and grasped hold of each breast.\n\n\"Mmmmmmm,\" Dr. Lowenstein sighed with pleasure at the touch of the young man's hands on her breasts. An experienced older male would provide a more sensual touch, but there is also something inherently pleasing about the grasp of a very appreciative, inexperienced young man, and especially so when he is one of your patients, for whom you are providing such generously therapeutic help. Susan Lowenstein had always wanted to become a therapist, ever since she was herself an undergraduate in college, and it was at times like this that her commitment to her career, her devotion to her studies, were proven to be so worthwhile. She just loved being a therapist.\n\nAnd, right now, John loved being her patient. Dr. Lowenstein had quite magnificent breasts. They were not humongous or anything like that, but they were clearly full, soft, squishy, and well rounded, and simply the fact that a beautiful woman such as her was bent over before him simply so that he could grab hold of them, squeeze and fondle them, was so darned wonderful. His dick instantly swelled without him even touching it, and for a moment he did not feel the least bit self-conscious about it.\n\nThe moment though was only brief. He did not have a particularly large cock. Plus he wasn't really even fully erect. He was just clearly on the way to getting there. He had no expectations that the doctor would say any of the things he had imagined her saying the other night, in his fantasy. Plus, he was frankly unsure that he was even supposed to get an erection. What if she was offended?\n\nBut, she actually didn't seem to take any notice of it. He wasn't too sure if that was good news or bad news. It's not particularly flattering to have a pretty woman be indifferent to your developing erection.\n\n\"Now, John, for this exercise I want you to tell me how aroused and excited you feel, on a scale from 1 to 10.\"\n\n\"That's easy,\" he quickly answered, \"a ten.\"\n\n\"No, no,\" she replied, smiling at his youthful enthusiasm, \"leave yourself some wiggle room or, I should say,\" waving her breasts back and forth in his hands, \"swelling room.\" She suggested, \"Let's make that on a scale of 1 to 100, but for this first one you can't give me a score greater than 60. Now, close your eyes and concentrate on how your cock feels right now, as you're holding my bosoms.\"\n\nHe did as she instructed, letting himself bask in how sexy, how arousing, how exciting it was to be grasping hold of the doctor's soft breasts. He could feel his dick swelling further. \"Well, okay, this is a 60, \" he finally said, \"but it's really a lot greater than that.\"\n\n\"Well, we'll just see. Now, that's enough of that.\" She edged his knees apart, stood up straight and stepped up in between his legs. She reached out for his right hand and brought it right to her crotch, pressing it firmly against her mound.\n\nIf she wasn't holding onto his hand so tightly John would have quickly removed it. It just seemed so wrong, so inappropriate, to be grasping a woman's cunt through her skirt. And, this wasn't just any woman, this was a really very attractive one, and the university's psychologist no less. But, that's precisely also what made it so appealing, so exciting, so thrilling.\n\n\"Alright then, John, what is the level of your arousal meter now?\" Dr. Lowenstein asked, thrusting her cunt hard into the grasp of his hand, encouraging him to get a real firm, intimate grip on her cunt. \"Close your eyes and think and feel how your hand is grasping my, um, my...\" She hesitated herself in saying it. She had by now worked with many patients, but there was always a bit of self-consciousness in crossing this line with a young undergraduate student. \"My cunt.\"\n\nJohn could not get as good of a feel of Dr. Lowenstein's cunt as he would like, having to grope it through two layers of clothing. At least though her summer skirt was quite loose. This made it a lot easier than if she had been wearing a tight business skirt. The gaily colored skirt was in fact quite pretty but its prettiness was not what was on his mind now. His mind was on how her soft womanly mound felt through her skirt and panties. He felt he could even feel a bit of her lips and certainly warmth emanating, radiating, from inside her skirt, and feeling his dick as well swell and stiffen even more, perhaps now just about at full strength. \"Eighty,\" he suggested, feeling though that he could have really gone even higher.\n\n\"Alright then, you can take your hand away now, John.\"\n\nHe quickly withdrew his hand. \"Oh yeah, sorry,\" he said, embarrassed over the fact that perhaps he should have known that himself, not wanting her to think that he was letting his hand linger there out of any prurient interest of his own. This was all just a doctor's laboratory exam, after all. Still, it was pretty nice gripping the doctor's cunt through her dress.\n\nThe doctor smiled at the young man. It was understandable for the patient to take a little extra feel during this procedure. One needed a bit of flexibility in the usual therapeutic rules and mores when conducting sexual psychodrama. And, besides, she did like feeling the young man's hand there herself. There was something that was so enjoyable, so pleasing and fulfilling, in experiencing a youth's enthusiastic interest in your body.\n\nShe took hold of both of his hands, stepped even closer to him, the front of her dress, her cunt, just inches now from his face, and brought his hands around her body to place them firmly on the soft, round, cheeks of her butt.\n\n\"Oh my goodness!\" John instantly exclaimed. It was like an electrical switch had been turned on, a sudden surge of power, arousal, coursing through his body, energizing his very being with a lustful sexual ecstacy. He squeezed and pawed the doctor's wonderfully firm yet pliant derriere, his dick swelling quickly to its fullest capacity, twitching in the air like a divining rod that had discovered buried treasure.\n\n\"What's the score now, John?\" The doctor inquired, but she knew the answer just by the expression on his face, and the groping of his hands on her butt.\n\nJohn gasped, \"Ninety easily, a hundred really, maybe 110.\"\n\nIt wasn't perhaps the most objective form of phallometric measurement but it was quite revealing. The doctor let the young man's hands linger on her bottom, feeling him explore her curves, squeezing and caressing her cheeks. She felt like pulling his face into her crotch, to rub and caress her there as well, but she knew it was important to maintain a professional demeanor and poise. Crushing the boy's face into her cunt would be going a bit far, at least at this point. She would certainly enjoy it, of course, but as a professional therapist Dr. Lowenstein would always maintain appropriate professional boundaries with a patient. This was especially important in sex therapy.\n\nShe did though eventually reach back with her hands to remove the boy's hands. But, she did it so she could step back and observe John's reaction for herself. \"John, what a very lovely cock you have. Yes, you will make a girl very happy with this someday, and I suspect probably soon.\"\n\nIt wasn't what he had fantasied her saying the other night, but it was still a plenty darned good compliment, particularly from a doctor. A good prognosis from a doctor is always well appreciated. \"Thank you, doctor,\" he smiled in return.\n\nShe then turned around and bent over, presenting her bottom to John, to his hands, and to his face. \"There you go, John. You can get a much better appreciation this way.\"\n\nJohn felt like he was a boy at Christmas. No girl before had ever presented her butt this way to him. He hadn't even done it from behind. He never thought a girl would like doing it that way. It just seemed so animalistic, so demeaning, for her to get on her hands and knees and stick her butt up like that for him, presenting herself to him like a doe, a dog, in heat. He now realized how so terribly sexy that position would be. The doctor's bottom looked so round and full, like a big pumpkin ready to be carved.\n\nThe doctor said, softly, \"Lift up my skirt, John, and have a peek.\"\n\nHis eyes widened in shock, and lust. \"Really?\"\n\n\"Oh yes, John. It's very useful in psychodrama to act out, bodily, in treatment, one's anxieties and impulses. You can often work through conflicts and issues through the psychodramatization exercises.\"\n\nJohn could feel his heart pounding. He was even feeling a bit lightheaded, a bit faint. He reached for the hem of the doctor's skirt, and slowly pulled it up.\n\nDr. Lowenstein was wearing white nylons, which accented well her shapely legs and thighs. John soon discovered that they were being held up by a matching white lace garter belt and straps attached to the comparably lacy nylon tops. He then undraped the buried treasure: Dr. Lowenstein's lusciously full round bum, wrapped tightly in her yellow bikini panties that failed to fully cover the rounded, cupped, bottom halves of her cheeks, leaving them to poke out from her panties like scoops of upside down ice cream. Her panties were themselves really quite lovely: yellow with little gaily colored tiny flowers scattered about, matching well her skirt, which John draped over her back, opening entirely up to view the pantied bottom of Dr. Lowenstein.\n\nDr. Lowenstein bent over even further, wrapping her arms around her partly bent knees to give her bottom an even rounder, tighter, and fuller presentation. A bottom presented in this manner was so provocative, so fetching, so inviting. It looked so big, so curved, so orbed. The shape was even a bit like a heart, much fuller and wider in the curves at the top, and coming to a V right at the pouch of her cunnie, which was itself poking out so invitingly. John's eyes though were fixed on the doctor's round fanny cheeks.\n\n\"Pull my panties down, won't you please, John?\" She gave him a little wiggle of her bottom for encouragement.\n\nJohn's mouth went dry as he reached out again, this time for the waistband of the doctor's panties. She was wearing her panties on top of her garter straps and so John could pull them down off her bottom without undoing her garters. It felt to John that his cock was going to stretch right out of its skin as the butt naked skin of the doctor came slowly into view.\n\nIt was indeed a heavenly moon, and John recalled his fascination, his enjoyment, with gazing at the moon, even to the point of obtaining an erection. Perhaps the doctor was right, perhaps there was some sort of meaning to his dreams, and perhaps he was staring at it right now.\n\nHe let the panties fall to the floor once they reached the doctor's thighs. He could not pull his eyes away from the crack of the doctor's ass. It seemed to have him hypnotized, mesmerized. It was so enticing, so inviting, so suggestive.\n\nThe doctor, sensing a potential breakthrough, unclasped her hands and reached back to spread open her cheeks, opening up to the boy's lustful gaping, gawking eyes, her puckered rosebud.\n\n\"Roses,\" John said.\n\n\"Excuse me?\" Dr. Lowenstein inquired, looking back at the young man as she continued to spread open her butt cheeks.\n\n\"Roses are my favorite flower.\"\n\n\"Yes they are, John. I wonder why.\"\n\n\"I think I know,\" John replied, staring at the doctor's rosebud, his cock feeling like it might ejaculate without him even touching it.\n\nSometimes it can take days, weeks, or even months for a psychotherapist to guide a patient to an insightful revelation. One typically needs to carefully hint and suggest, but never confront too early, as the patient may only retreat deeper into a safer repressive cocoon. But, few clinicians are as skilled or as innovative as Dr. Lowenstein, who simply had to spread open her butt cheeks and display her asshole to the patient to help him discover his epiphany.\n\n\"And, what would the reason be?\" She wanted her patient to fully express his insight.\n\nJohn said quietly, softly, his realizations slowly sinking in, \"I think it's that I really like girl's anuses, or at least, I mean, well...I want anal sex.\"\n\n\"Yes, John, I think you're right,\" the doctor replied with considerable understatement. She could have told him that she knew it all the time, but it was best to have the patient feel that the insight was his own, as he will then own it and more likely keep it. She added, softly, almost whispering as she looked back at him, \"Touch it, John, with your finger.\"\n\n\"You're kidding!\"\n\nDr. Lowenstein smiled, \"Psychotherapists don't kid, John. Go ahead, touch the doctor's rosebud.\" She even squeezed her sphincter a few times. \"See, it's winking at you, flirting with you, calling for you in her own special way.\"\n\nJohn took hold of his cock with his left hand, squeezing it as he cautiously, breathlessly reached out with his right to gently lay the tip of his finger directly onto the doctor's butt hole.\n\n\"Mmmmmm,\" the doctor sighed with pleasure at the feel of the boy's prudent touch, and her anus twitched with the tingly ticklish sensation of his finger.\n\nJohn recalled his third dream, of the girl, of Nina, as he touched what he thought in his conscious mind was her cunt, which he now realized was her anus: all dry, wrinkled, and puckered. He had never felt anything so mysterious, so alluring, so disturbingly heady. It was comparable to the first time that he had touched a girl's naked breasts, and, surprisingly so, even better than his first touch of a girl's naked cunt. John boldly asked as he gently felt the curves, wrinkles, and ridges of the doctor's pretty anus, \"Can I stick my finger in it?\"",
        "Dr. Lowenstein smiled. It always felt so good when significant progress was being made with a patient. Her feelings might be biased somewhat by his pleasing caress of her butt hole, but it was apparent that John was breaking through his repressed desires, and was in fact even beginning to express and assert them. But, she also knew that there was still more work to be done and this was not the right time to simply give in to his impulsive desire. \"Well, doesn't a girl deserve a kiss before you stick a finger up her butt?\"\n\n\"Oh yeah,\" John replied, \"sure, I'm sorry,\" feeling like he was waking up from a hazy dream, and realizing how ill mannered he had just been. He certainly didn't want to sound like he was disrespectful of girls, particularly to his therapist, herself a woman, although it did seem awfully weird to kiss your therapist, and to do so in order to stick a finger up her butt.\n\nBut, he soon discovered it was even weirder. John waited for Dr. Lowenstein to turn around so that he could kiss her, but she just stayed in the same position, presenting to his eyes her puckered winking asshole.\n\n\"I'm waiting, John,\" she intoned.\n\nHe then realized. She meant for him to kiss her on her butt hole. Whoa! This was one curious form of psychotherapy but, surprisingly, he was not repulsed by the thought. Not at all. In fact, on the contrary, he stroked his dick as he contemplated it, and he squeezed his dick as he leaned forward to plant his lips on hers, equally puckered as his own.\n\n\"That's a good boy,\" Dr. Lowenstein complimented her patient as she felt his lips planted on her butt hole, and then brought her cheeks together, squishing his face within the cheeks of her butt.\n\nShe couldn't wrap his face, his head, nearly as fully as she could with her breasts, but it was still plenty cool for him, his face crushed within the soft pliant cheeks of his pretty therapist's butt as he repeatedly kissed her arse hole. He was now reminded of his second dream, when he was being drawn down into the soft cushion, sucked down inside, and he slipped his tongue out through his lips to tenderly lick the doctor's anus.\n\n\"Very, very nice, John,\" Dr. Lowenstein softly sighed. She so much enjoyed having her asshole licked, and not many guys will do that. Actually, she still wasn't dating anyone, and her sex life was largely limited to her clinical practice. She had established a fairly substantial clientele, but licking her anus was not currently a prescription for any one of them, so this for her was a really special treatment session.\n\nShe allowed herself to enjoy the licking and lapping for sometime. It felt like a puppy thirstily lapping at an ice cream cone on a very hot and dry day. She could not help but to wiggle and squirm her butt as John tongued and rimmed her pinkish brown hole.\n\nJohn was so surprised at how much he enjoyed it. Prior to treatment he would have been repulsed by even the thought of what he was doing and, yet now, within just his second session of psychotherapy, he was feasting on the asshole of a woman, stroking his cock with delight, which he quickly stopped though as he felt himself getting close to cumming. His balls were beginning to ache with the desire, the need, to ejaculate, but he knew he should wait for that until this evening, although he may in fact go right back to his dorm room after this session to take care of himself, thinking about tonguing the doctor's asshole as he jerked himself off. This was actually much, much better than the fantasy he had himself constructed after the first session.\n\nBut, he withdrew his lips from the doctor's butt to ask, \"Doctor, am I some kind of pervert or something. I mean, will I always have trouble with normal sex?\"\n\nDr. Lowenstein had to first catch her breath before she provided her patient with the helpful guidance and instruction he was seeking. \"No, no, not at all,\" she responded, looking back at him and speaking in a professional, confident voice, still holding wide open the cheeks of her ass, \"the release, the expression, of your normal desires were being plugged and clogged by your repression. With its expulsion, its release, the path is open for your usual, your more common impulses and desires, to come forth. You will be fine after a few cathartic expunges of your pent-up, repressed anal needs.\"\n\nIt was a bit clinical, or perhaps it just felt odd to be so didactic while holding open her asshole to the boy. But, any competent therapist must be flexible in her technique.\n\nJohn felt relieved. In fact, he was ecstatic. Not only would he no longer have erectile dysfunction problems but he had discovered a new source of sexual pleasure. He would now have his butt cake and eat it too. \"Am I now alright then?\"\n\nDr. Lowenstein let go of her butt cheeks, closing the curtain on her tight pink cave, much to the disappointment of John. She had said something about further catalytic expunges, or something like that, hadn't she? He didn't really want to end treatment now. Amazing to think that a patient would actually want psychotherapy to continue.\n\nDr. Lowenstein stood back up straight, her skirt falling back over her bottom. She stretched her back a bit as she had been bent over for quite some time. She wasn't as young as she used to be. She did not answer the young man, not immediately. She stepped out of her panties and strode over to her desk, feeling the boy's eyes following the swaying of her bottom beneath the thin loose cotton skirt.\n\nWhen she got to the back of her desk she bent over it, to reach all the way over to the front drawer, and pull it open. It would have been easier to have just walked around the desk, but she wouldn't then have been able to let John admire how her skirt fell so nicely across the curves of her bottom. She even took her time rummaging around the drawer for what she was looking for, her bottom wiggling and squirming before his eyes as she struggled to find it.\n\nJohn grasped his cock but he didn't stroke it. He didn't dare take the chance. Imagine cumming all over the doctor's nicely carpeted office floor. That wouldn't be too good.\n\nDr. Lowenstein stood back up and turned around to face the boy, an understanding smile on her face, as well as a pleased one. He looked so cute, so endearing, clutching his erect cock like it might escape if he let go. She could see that he desperately wanted to jerk off, but knew that he couldn't, or at least shouldn't. It wouldn't be therapeutic. No, his treatment was not yet over.\n\nShe stepped away from her desk, again turned her back on the boy, and got down on her knees. She looked back at him over her shoulder, smiled flirtatiously, and lifted up her skirt, past her white nylons to the rounded curves of her naked rump. \"Time for your first expunging, John,\" she said coquettishly, and got down on her elbows, lifting her naked bottom up in the air, arching her back, and spreading out her legs. She again looked back at him and said softly, \"Come and fuck a pretty woman's butt, John.\" It was perhaps less than modest to put it that way, but it's narcissism only if it's not true and, besides, it sounded so nice to John.\n\nHe got up onto his feet, feeling a little wobbly and shaky, and strode over to the upraised, naked ass of Dr. Lowenstein. Why did he deserve such a prize, such a treasure? He certainly hadn't done anything to deserve it. But, actually, it wasn't really a reward. It was a prescription, a necessary medicine to swallow, and one that would taste very, very good going in, going down.\n\nHe wondered if he should take his pants off. It would be easier to fuck her that way, but she hadn't told him to disrobe. He didn't want to presume anything, or to do anything that might be disruptive to his treatment. And, besides, perhaps it was best to keep as much clothes on as possible, in case somebody suddenly arrived at her office, like her next patient maybe, coming early. As he got in between the doctor's legs he glanced at the door. He hadn't locked it when he came in.\n\n\"Don't worry, John,\" she said, looking up at him, past her upraised bottom. \"My next patient isn't due to arrive for at least ten minutes. You have time to finish your session.\"\n\nTen minutes? She clearly wasn't expecting him to last very long but, then again, he would not have been terribly surprised if he came just walking over to her. Still, it would seem like they didn't have much time to waste. He got down onto his knees behind her, his heart pounding with anticipation, and excitement. He couldn't believe what he was about to do. He was actually going to fuck a woman up her ass and, as she said, a pretty woman at that, with a very lovely round white butt.\n\nDr. Lowenstein reached back to hand to him what she had retrieved from her desk: lubricant. \"You should always use something when you put it up a girl's butt, John. Sometimes they can take it without much, if any, but it's really best to use it.\"\n\nHe just nodded. He felt a little silly not thinking of that himself, although he had gotten her pretty wet with his tongue. Nevertheless, he accepted the lubricant, squeezed out a dollop and, as she again opened up the crack of her ass, applied it to her anus. However, he did hesitate. He wanted to first admire the sight of her puckered asshole, at least for a moment.\n\nThe doctor wiggled her butt at him. \"John,\" she said, \"hurry up now, we don't have a lot of time.\"\n\nApparently they went from plenty of time to little time, although he suspected that it was just the expectant position she was in, her bottom poking up, her cheeks spread, her rosebud shining in the light of her office lamps. She must feel a little embarrassed, a little exposed. He applied the wad of lubricant to the pretty doctor's anus.\n\nDr. Lowenstein sighed with pleasure at the feel of his warm, and now slick and slippery, finger, caressing her anus, working the lubricant into her skin. \"Poke it up inside, John, make sure you get it good and slippery.\"\n\nJohn squeezed out another blob of lubricant onto his finger, and used this wad to work his finger down into her ass. He was surprised at how tight she was. Of course she would be. An asshole needs to be very tightly sealed. He marveled at the thought that his dick could actually fit through there. It was difficult to imagine. He worked his finger in and out of her asshole, feeling around inside her rectum, deep inside where no finger should be, certainly no finger of a boy. He wondered if he could, if he should, tell his friends about this. Of course in doing so he would be revealing that he was in therapy, and he would then have to explain why. But, still, what young man wouldn't want to tell his friends that he had been sticking his finger in and out of the pretty Dr. Lowenstein's butt. Well, actually, nobody would really believe him. How could they? Nothing like this ever happens in real life.\n\n\"Your finger feels so nice, John,\" Dr. Lowenstein purred. It did indeed. It was like a wiggly little snake was playing around within her anus and rectum, teasing her, tickling her, exploring her. It felt so naughty, so dirty, but that's why it also felt so sexy.\n\nJohn realized that time was slipping by and he slipped his finger out, making a little popping sound as he did so, causing the doctor to giggle. He put a final dollop of lubricant on the head of his cock, the thick round purple bulb that was to somehow jam its way past her tight anal sphincter. He got up higher on his knees to position the swollen plum at the entrance to her rectum. He leaned forward into her butt.\n\nDr. Lowenstein's eyes widened at the pressure. The head of John's cock was clearly much larger than his finger. She grunted with the forced compression onto her clenched sphincter. But, she was a professional, a skilled therapist. A layperson would have resisted the blunt intrusion into her rectum, particularly under the pressure of time as well as cock. But, Dr. Lowenstein calmly relaxed her sphincter to let him in.\n\nIt wasn't easy though for John to get it in. His dick did not slide in like his finger. But, he could not take his time, as the seconds, the minutes, were ticking away. He used his weight to help force his way in, and suddenly he felt the doctor's sphincter give way. Her butthole opened up and the head of his cock plunged all the way in, disappearing from sight down into her dark, tight rectum.\n\n\"Unnng,\" Dr. Lowenstein groaned. She felt so distended, packed, clogged, and stuffed. \"Wait, wait a second, John.\" She had to have a moment to get used to it, to adapt to the fact that her rectum was so thoroughly engorged.\n\nThat was fine with John. It was nice just to pause and treasure the moment; as his mother always said, to stop and smell the rosebuds, or at least something like that. All he could see was the stem of his dick; the round bulb of the head being tucked inside. And, it felt so cool. It was such a tight fit, like there was a thick rubber band clenching his shaft, with the head itself cushioned by receptive soft tissue. And, perhaps the best part was psychological: the fact that his cock was actually inside a woman's butt. It seemed so wrong, so filthy, so nasty to do something like this. Not too many men, and perhaps even fewer women, would do such a thing. But, the fact that it was so lecherously raunchy made his cock swell even thicker, plugging her hole even more tightly.\n\nDr. Lowenstein grunted. \"John, your cock feels so fucking big up my ass.\"\n\nIt was music to John's ears. He slowly began to push in farther, but not very far, and he then pulled back. He repeated this tentative movement again and again, each time going in a bit farther. It wasn't easy. She was so awfully tight. But, he enjoyed so much the feel of her rectum rubbing and massaging the head of his dick as it worked its way in and out of her ass. He also enjoyed the sight of it entering and leaving her so fully distended asshole, down deep between the pale womanly cheeks of her soft round derriere.\n\nJohn began to more rhythmically slide his cock in and out of her ass, never pulling out too far or moving in too deep. He certainly didn't want to let it get all the way out, although there really wasn't much chance of that, because when he got close to fully pulling it out he again felt the resistance of her sphincter, this time acting against his departure, his escape, as if she was trying to hold his cock captive inside her ass.\n\nDr. Lowenstein was giving him nice squeezes with her sphincter, not to resist him but to instead hug him affectionately. After all, he was making such good progress in treatment. This was a very big step for him. And, it did feel as well pretty darned good to the doctor. A good butt fuck was a nice change of pace. A man's cock, even a young man's cock, felt so abnormally big when it was up her ass, like she was again getting fucked for the very first time. She reached back beneath her body to get to her clit, to rub and massage it as the boy worked his cock in and out of her rectum.\n\nShe roughly diddled her clit as he began to stroke short rapid thrusts with his hips. He was now giving her asshole a good quick fucking, not too deep but still rather bestial, like a dog mounted on its lover, plunging rapidly to get a quick release.\n\nJohn knew he wasn't going to last any longer and he wanted to fuck her as hard as he could before he came.\n\nDr. Lowenstein at first tried to meet his frenetic thrusting with her own bottom bounces, but she could not keep up. She then just held her butt still, and let him fuck her derriere like a passive doe, giving her butt to him for his to fuck as he saw fit, but all the while squeezing tightly on his cock with her sphincter to maximize the sensation.\n\nJohn's plunges quickened in pace, lost in the wonder of her rectum wrapped tightly around the head of his cock as his shaft was grasped by her sphincter. He wanted to cum now, wanted to release his stuff deep into her bowels. And, then, he felt his legs tremble with the inevitability sweeping through his loins. He pushed down in deep, as deep as his cock would go, his abdomen pressed against the soft cushions of the doctor's ass, his cock stuffed deep down inside and he let it cum, the first wave of cum jettisoning down through his shaft with substantial force, bursting out from his cock deep into her rectum. It was like his cock was a plugged hose that finally had forced out an unconscious impediment and was bursting and gushing forth its insights.\n\nDr. Lowenstein felt the twitching and pulsations of the young man's cock through her sphincter muscles, and she closed her eyes, and rested her head on her arms, to enjoy the sensation of him spurting his cum deep down into her ass. She could feel the young man's shaft twitch and jump with each ejaculation. She thought she could even feel the liquid mounting in her rectum, like she was getting a rather obscene enema. But, it was such a satisfying one. It was such a concrete, vivid demonstration of therapeutic success. She squeezed and milked his cock with her sphincter, drawing out more and more of his gism.\n\nJohn, gasping for air, leaned forward over the back of his doctor, gripping and bracing himself with his hands on her hips, basking in his exhaustion, his exertion, his bliss. He breathed a sigh of deep relief. It had felt so good, and he now felt so wonderful. He felt cured, self-actualized, self-realized. He smiled with profound satisfaction, and slowly pulled his cock out, the head giving a pop as it was released through her clenched sphincter. Her anus stayed open a bit after he removed it, gaping at him, showing him the globs of cum down inside her rectum, then slowly shut once again.\n\nThe doctor squeezed her anus tightly shut, holding his cum inside. They now had very little time. She pulled some sanitary handy wipes from her desk. She always had an ample supply. She helped John clean himself off and then get his slackening penis back into his pants. Only then did she retrieve her own panties and pull them back on.\n\nAs she did so she reiterated to John the importance of his insights. John was surprised at his prior inability to see, to know, what must have seemed so obvious to anyone else. But, the doctor explained that what might be obvious to others can often be obtuse to the individual. It's a psychological blind spot, and being blind to its presence he was also blind to its effects. It was how the unconscious worked.\n\nAs she opened the door to her office, to shake his hand as he left, standing there was her next patient.\n\n\"Dr. Lowenstein, hello, it's me, Adam. I hope I'm not early,\" he said, seeing what must be her prior patient now just leaving. He sure hoped he hadn't disturbed her.\n\n\"No, no, please, we ran a little late. Please, do come in.\" She said goodbye to John, reminding him of the time of their next session, and then turned her attention to Adam, which wasn't that easy, her rectum being filled with John's cum.\n\nAdam was having sleep troubles, his nights repeatedly disrupted by quite disturbing dreams, involving the eating, or more like gorging, on clams, as well as getting his face smacked and splattered with sloppy fish pies, and the weirdest of all was munching on a thick furry carpet. Dr. Lowenstein knew that she would have to use a very different approach with Adam. Well, not entirely different.\n\nThe session turned out to be a bit awkward though, as she was tightly squeezing her sphincter throughout to avoid having an accident in her panties. She had to retain John's slippery gism up her rectum throughout the session, and it was a bit uncomfortable, a little awkward, a little risky, but that's what also made it rather enjoyable. It turned out to be a very nice session indeed.\n\nAs John left the building he felt so wonderful, so good, so optimistic but, then, it hit him. What girl would share with him such pleasure in anal sex?",
        "- - - - - - - - - - - - - - - - \n\nNina Hartley was a pretty girl. She knew that. Well, she might not have actually fully appreciated how really pretty she was, but she did recognize that she was an attractive girl. She had long wavy fluttering lashes and large round pretty green eyes, which typically sparkled and gleamed so gaily beneath her even larger round spectacles. She had rosy dimpled cheeks, little pursed lips, a perky thin nose, and wavy blonde hair that fell just to her shoulders.\n\nHer breasts were not large, but they were very nicely rounded and so firm that she didn't really need to wear a brassiere. But, she did so anyway because the extent to which they wiggled when she walked made her feel too self-conscious. She would also become quite embarrassed when her nipples would stiffen and be clearly evident through a blouse or at times even a sweater. The smallness of her breasts though was perhaps quite proportional to her size, as she was a rather petite girl, certainly no taller than five feet.\n\nIn sum, she was really quite attractive. Any man would certainly agree, but only a few men had yet really seen her, at least in that personal way. Nina was not inexperienced. She had been with a couple of guys, and had slept with them, and had sex with them. She had enjoyed it, but she had never had the thrill, the explosion, the fulfillment that she felt lovemaking should provide. Even her orgasms seemed anticlimactic. Something was missing and she didn't know what it was.\n\nBut, one day she did have a clue. She was trying on different outfits, standing in front of her wall mirror. She was wearing a very short summer dress that clung well to her figure. She felt she did look quite fetching in it. She liked how it clung to her breasts. It didn't just drape over them, it seemed to wrap her breasts like a present, obviously for some boy, the right boy, who would be given permission to open his present if he was a good boy, a deserving boy.\n\nShe turned her back to her mirror to see how the dress looked from behind. It was a bit short. Her mother wouldn't like that, but she was eighteen now. She could wear what she wanted. She might agree with her mother thought that her thighs seemed to be rather wantonly exposed. She bent forward, just to see whether it rose up too high in the back.\n\nAnd, it did. Even when she was just half-way bent over the bottom of her bottom could be seen just beneath the hem. She thought it looked kind of sexy. She was wearing full cotton pink panties, and it looked kind of like two pink cotton candy balls were peeking out from beneath her skirt.\n\nShe pulled the skirt all the way up and over her back.\n\nHer smiled broadened. She did have a very nice bottom, if she said so herself. It was so petite, so perky, so round. And, it looked particularly sexy when it was poking out like that, like she was trying to entice some guy with it, like she was holding out some big apple for him to eat. She giggled as she wiggled it back and forth, as if she was some sort of stripper or something, not that she had ever seen such a girl perform her act. But, she could imagine it went something like that.\n\nHer face blushed imagining her mother stepping into her room right now while she was bent over, waving her pink pantied bottom at herself in the mirror. Nina still lived at home. She was a college freshman at Templeton, and lots of the Templeton students still lived at home with their parents, at least those close enough to commute. It was very helpful in saving the considerable cost of lodging. Plus, it was a good way to keep a close eye on the kids even though they were now eighteen. But, mom and dad can't control what she does in the privacy of her own bedroom.\n\nHer dancing bottom was giving her an idea. Keeping it poking back at the mirror she reached back for the waistband of her panties. She imagined that she was doing this for some guy. She had stripped for a guy before. She wasn't a prude by any means. But, she had done it facing him, figuring that's what he would like most. After all, her tittles and cunnie were on the front. There was only her butt on the other side. And, besides, it was natural to be facing the guy you were stripping for, so that you could see his eyes, his reactions to the slow exposure of your body, and smile lovingly and appreciatively at each other.\n\nThis time though she was showing him her bottom. Well, not really a him, but in her minds eye it was a him. She pulled her panties slowly down, slowly revealing the pale white skin of her bottom. She liked how the crack first appeared, the first exposure of something that was clearly quite private, quite personal, something not usually seen by anyone other than herself, something quite sexual and intimate: the beguiling beginning crack of her bottom.\n\nIt did certainly feel quite sexual to Nina. She could feel the warmth developing between her thighs as more and more of her crack appeared, along with the soft white round pale cheeks of her derriere. She left the panties tucked in just beneath her cheeks, providing them with a soft pink cotton cushion upon which to rest.\n\nShe gazed back at her bottom for awhile, admiring its shape. It looked so much rounder and tighter when she was bent over like this. She wondered why she hadn't better appreciated her bottom before. A naked girl's bottom looks so innocent, so pure, yet it was really very sensual, very sexual. She couldn't understand why her past dates had never seemed that interested in it.\n\nShe reached back and patted her fanny affectionately, giving it little warmhearted pats and mild spanks, gigging as she watched it wiggle and jiggle like a big mound of fresh ripe jello. She really did like jello quite a bit, but apparently not too many boys do. She even slid the tips of her fingers up and down her crack, enjoying the intimacy of the gesture, the naughtiness of its implication. And, it felt as good to her bottom as it did to her fingers, sort of ticklish and enticing.\n\nShe then impulsively reached back with both hands and spread open her cheeks. Her face instantly flushed red at the sight of her red puckered anus. It looked so naughty and felt so obscene, so lewd, so shameless, to be doing this. But, she actually couldn't take her eyes away from it. She suddenly realized that she may in fact have never actually seen it before. How really very strange. She was eighteen years old. More than eighteen years of her life had gone by and yet there was a part of her body that she had never in fact seen! She had seen virtually every other part of her body, but not that. But, why? Was she really so ashamed of it? Was it really that obscene, that filthy, that repugnant that she couldn't even bring herself to look at it? And, yet, now, at this moment, it didn't look particularly loathsome or odious at all. In fact, on the contrary, dare she say it, it looked kind of cute. She squeezed her sphincter a few times, watching it blink and wink at her in the reflection of the mirror.\n\nShe let go of one of her cheeks, pulled more tightly on the other to keep the crack open as much as possible and gingerly, guardedly, reached down into her crack with her freed hand to gently lay the tip of a finger right on the wrinkled hole.\n\nAs soon as contact was made she felt a rush of excitement coursing through her body, and she quickly pulled her finger away. She wasn't sure if her heart was racing, her face was flushing, because she was aroused, or ashamed. It was certainly very shameful to touch yourself down there, back there. She couldn't imagine any of her girlfriends doing something like that, and she certainly couldn't imagine telling her girlfriends she did something like that. She stood back up straight, pulled up her panties and pulled her skirt back down, rubbing and pulling on it to straighten it, to remove any sign of what she had just done. Her mother had often said that if you couldn't tell anyone something you did then you clearly shouldn't be doing it. And, besides, she was feeling rather guilty about it herself. Something playful had turned into something shameful. She certainly wasn't proud of it.\n\nNina didn't peek at, let alone touch, her anus for a couple of weeks after that. Yet, it was clearly at the back of her mind, and would sometimes push its way forward to the front. She would think about it again when she was drying off after a shower, especially when she dried herself back there, finding herself lingering with the soft terry cloth in the crack of her ass, making sure she was extra careful dry back there, glancing at the baby powder on the bathroom counter, wondering why her mother still had that there, wondering if it might be kind of fun to sprinkle some on her bottom.\n\nShe thought about it as well in gym class, when the other girls were bending over to wash or dry their feet. They were at times giving her quick peeks at their little pink rosebuds, and she wondered if they had ever touched themselves there, whether a boyfriend had ever touched them there.\n\nShe did finally give into the urge one special evening, when she was all alone, minding the house by herself.\n\nShe was watching the History channel, the Modern Marvels series. She didn't normally watch this show, but somehow she was drawn to this episode. It was on the greatest tunnels of the world. Apparently, tunnels were first attempted in Babylonian times. Brunel and Greathead developed some sort of shield that allowed them to burrow under the Thames. She particularly liked the part about the \"sandhogs:\" swarthy, sweaty, dirty guys who labored mightily digging within damp darkness to eventually forge an 8,463 foot long tunnel below the Hudson.\n\nOnce it was over she retired to the bedroom. She had such an urge. She flung off her clothes. She didn't think that she had ever felt so aroused before. She must have been, but at the moment you couldn't convince her otherwise. She wasn't just damp; she was soaking wet, her fluids dripping down her thighs as she tore off her panties. She threw herself on the bed, fondling, squeezing, and mauling her breasts, all the while frantically and frenetically diddling her cunnie, writhing, squirming, and humping like a porno slut. She felt so, so, so hot.\n\nBut, it wasn't enough. Something was missing. She lay still on the bed, her knees pulled up against her chest, staring at the ceiling, lightly caressing her sloppy wet slit, her little breasts rising and falling. Something was indeed missing.\n\nShe let her fingers slide down lower, past her slit.\n\n\"Ohhhhhhh,\" she squealed nervously as she felt herself going where she really knew she shouldn't. But, the train had left the station, it was on the prairie headed to the dark tunnel.\n\nWhen it, her fingers, arrived, they hesitated, in part because they were uncertain, but as well as to enjoy the sensation: the ticklish tingling sensation of a tip of a finger lightly caressing her anus. \"Mmmmmmmm\", she sighed with deep delight, as she brought her other hand away from her breast and down to her clit. For awhile, a wonderful while, she softly caressed her clit and anus, her knees drawn all the way back to her chest, her cunnie and anus fully exposed. Perhaps it was wrong, perhaps it was profane, but it was oh so marvelous, fabulous, sensational. It was just oh so right!\n\nHer fingers had gotten awfully wet from diddling her cunt, and quite a bit of fluid had naturally flowed down. It wasn't long before it wasn't hard to slip a finger up into her ass.\n\nShe was surprised though at how much resistance she met. It was, after all, her anus. If she wanted to stick something up in there then it was certainly her own business and under her own control. But, nevertheless, there was quite a bit of apparently natural opposition to this intention. She did wonder if perhaps it was due in part to her remaining ambivalence, her remaining doubts, her sphincter expressing that part of her that felt, if not knew, that this was a wrong thing to do, a very dirty and nasty thing to do, and that she would regret it afterwards.\n\nBut the train was now in the tunnel, and it was clearly very happy to be there. It felt so weird having a finger stuck up her butt, perhaps even weirder that it was her own finger, but she really wouldn't know that until someone else stuck his finger up there. She blushed thinking about that. Imagine asking a guy to stick a finger up your butt!\n\nShe was impressed at how tightly her sphincter clung to her finger, like it had a choke hold and would not let go. And, she especially marveled at how weirdly wonderful it felt to wiggle her finger around inside. That was definitely very, very naughty. Her other finger wiggled her clit with equal intensity.\n\nShe most definitely never had a better masturbatory session. She knew that she had found a place in the world, or more accurately the place, where she was most pleasured: her butt hole. And, she was no longer going to deny it.\n\nShe wiggled, wormed, twitched, jiggled, and squirmed her finger, as well her pelvis, working herself up into such a frenzied state. \"Fuck me!\" She squealed out loud and loudly. \"Fuck me! Fuck my little girlish butt, fuck me up the ass with your big hard thick nasty cock!\" she screamed to nobody in particular, or at least to the man of her dreams. And she then exploded in her orgasm; her body twitching, lurching, shuddering, and seizing on the bed while her fingers continued to pinch, tug, flutter, and wriggle her clit and rectum. She had never worked so hard at her orgasm, nor ever enjoyed it more.\n\nShe lay there quivering and shivering for some time, feeling swept away to a place so very grand and glorious, so very special. She jammed her finger in as far as it would go.\n\nWhen her euphoric climax had passed, when she was done, she wondered if she would ever match it again. It can be difficult to equal the first one. Of course, this wasn't the first one. She had many orgasms prior to this one, but never as good as this one, as this was her first anal orgasm.\n\nThereafter she expanded on her techniques and tools. She really got into putting different sorts of things up her butt. She didn't ever get any professional dildos, or anything like that. Where would she hide them? She certainly didn't want to risk her mother discovering something like that. So, she had to improvise.\n\nShe liked candles. They were so naturally smooth. She would clip off the wicks and then melt some of the wax to seal over the end into a nicely smooth round tip. Magic markers were also pretty good, but she had to shop carefully for the right size, shape, and smoothness. She especially liked this glue company's squeeze and brush applicators (she couldn't provide the name, not at least without permission and perhaps compensation). They were really quite natural butt plugs: very smooth, small at the tip and then widening to the handle. They even had a nice curve to them that allowed her to explore around inside.\n\nWhen she had the house to herself she would stick things up there and then go about some sort of routine business, like vacuuming the rug with a candle sticking out of her butt. She even tried painting a picture with a brush stuck up there. That was really quite difficult, and perhaps a little dangerous, as she had to maintain her balance with her butt poised over the canvass. If she fell, it could be pretty, pretty bad. But, it was so playfully fun, and really not that easy, holding a brush with your sphincter, trying to paint by looking over one's shoulder. She wasn't a natural artist in the first place, and she doubted that the great artists, like Michelangelo, ever tried doing it this way.\n\nShe would even sometimes stick something up there and leave it in all day while she want to classes at college. She really liked doing that. It was at times uncomfortable when sitting in a chair, but that's also what it made so fun, trying to avoid squirming, yet enjoying each squirm so terribly, terribly much.\n\nOf course, she was a bit troubled by her passion, perhaps even now an obsession. Was it wrong? Was she some sort of a pervert? She didn't think so, but it was certainly true that she kept it as a deep dark secret. So many times when she was out with her friends she considered bringing it up, particularly when they were talking about boys, which was pretty much most of the time, and especially when she had something stuck up her butt, which was pretty much most of the time.\n\nBut, she just could get herself to do it. She sorely doubted that they would be supportive, and she ran a terrible risk of them being critical, if not horrified, disgusted, and repulsed.\n\nAnd, how was she going to bring this up with a guy? What guy would want to date a girl who was into, if not preferred, was perhaps even obsessed with, anal sex? It felt like she had some sort of STD that she would have to warn him about. How soon do you warn him? She certainly couldn't bring it up on the first date, but at some point she would have to reveal the heinous fact, and then what would happen? What would he think?\n\nShe really needed to talk to somebody about this. She considered going to the college's counseling center. There was a clinician there, Dr. Lowenstein, who specialized in sexual dysfunctions and paraphilias. But, Nina really didn't want to do that. Wouldn't that be admitting that it is a perversion? She was certainly plenty confused and distraught over this, but deep down in her heart she did not think that it was a perversion and she certainly did not consider herself to be crazy or anything like that. Imagine if Dr. Lowenstein put her on some sort of medication or something, something that would take away the urge, the desire, the passion! No, there was simply no way she was going to squelch that which made her feel most satisfied, most happy, most alive. \n\nShe decided to talk to Professor Gould. Professor Gould taught the major biology courses at Templeton. A biology professor would know about things like this. And, most importantly, he was a very understanding and considerate man. She was Nina's favorite professor, and everybody said that he was probably the most considerate and compassionate professor on campus. Well, that might be overstating it. Nina heard that Miss Bixley was a pretty darned good professor too. She had taken one of her classes last semester. But Miss Bixley seemed something of a prude. Plus, Nina was currently in one of Professor Gould's classes. It would be much better to talk to a professor with whom she currently had a relationship. In fact, as his student, he would have to keep the discussion confidential, wouldn't he? Nina didn't know if there was some sort of legal binding confidentiality agreement between students and professors, but perhaps there was. There was certainly no way she wanted her parents to hear about this.\n\nShe stopped by Professor Gould's office late Wednesday afternoon. The door was open. That was itself a positive sign. Some professors kept their office doors closed. Professor Gould always kept his open. It was a vivid, concrete message that any guest, any visitor, any student, was always welcome.\n\nBut, Nina nevertheless still stood hesitantly, timidly, at the entrance to his office. \"Professor Gould?\" she said quietly, almost whispering.\n\nThe professor was behind his desk, working on a manuscript, concerning gerbil tunnels. But, he did always have time for a student. His vocation was science but his passion was education. \"Nina, wonderful, please, come in, come in.\" He waved her into the room. \"Have a seat, please.\" \n\n\"Professor Gould, could I talk with you for a second?\"\n\n\"Certainly, Nina, please, please, come in. I'm not busy. Is it about the test?\" Nina hadn't done that well on the last test, or at least not as well as Dr. Gould felt she could have.\n\n\"No, no sir, no, that's not it.\"",
        "\"Well, please, have a seat.\" He gestured to the chair by his desk.\n\nNina stepped into his office, shut the door behind her, and made her way timidly to the chair.\n\nMost students didn't shut his door. \"Well, well,\" Professor Gould commented, \"this sounds serious.\" He was actually joking, as he seriously doubted that the sweet little Nina could have a serious problem.\n\nNina took her seat, her hands clasped demurely in her lap. She just sat there, looking at the professor, wringing her hands.\n\nDr. Gould did not pressure her. He could now see that something was indeed troubling her. He could also see that she was terribly cute. The Templeton uniform helped. Templeton students are required to wear a uniform. For the girls it consisted of a white blouse, plaid skirt, black tie, white socks, and black Mary Janes. And, for a petite girl like Nina, with large green eyes beneath even larger spectacles, it was really quite endearing. Her feet didn't even touch the floor. She was swinging them as she considered whether or not to say anything, or at least what to say. Dr. Gould finally asked, \"Yes, well, Nina, how can I help you?\"\n\nNina looked away and replied, \"I just wanted to ask you something, Dr. Gould.\"\n\n\"Well, certainly, Nina, certainly.\"\n\nShe again hesitated. \"It's kind of personal, Dr. Gould.\"\n\n\"Oh, well, my goodness, dear, please, what is it?\"\n\nShe looked back at the door to double check that she had indeed shut it. Once she was reassured of that she did feel a little better. It was like she was now safely tucked inside the safety of the professor's office. \"Sir,\" she said, \"you know quite a bit about stuff, don't you?\"\n\n\"Well,\" he chucked, \"'stuff' covers a lot of territory, Nina. Perhaps you could be a bit more specific?\"\n\n\"I mean, like, about what's natural and normal behavior, you know, and what's not.\"\n\nDr. Gould furrowed his brow. \"Well, I suppose that's true, in a way.\"\n\nNina did not appear to notice his hesitancy. \"Good, good. You see, I was just wondering, whether, well...\"\n\nShe was still have difficulty. Dr. Gould slid his chair closer to Nina, leaned forward, and put a reassuring hand on her knee. \"It's alright, Nina. We're alone here.\"\n\nHer leg stopped kicking. Nina could feel her face getting warm, as she finally asked, looking down at the floor, \"Professor Gould, is it abnormal for a person to have anal sex?\" She reflexively squeezed her sphincter. There wasn't anything in there right now. She considered wearing something in there while she talked to the professor. That would be rather provocative. But, if he wound up telling her that she was really sick or something, it wouldn't feel so good.\n\n'Well,' Dr. Gould thought, 'this is a new one.' He withdrew his hand, smiled reassuringly but attempted to deflect her query. \"Nina, don't you think you should talk to your parents about this?\"\n\nNina rolled her eyes. \"Oh yeah, sure, yeah, right,\" she responded sarcastically. She turned to look him in the eyes. \"Would you talk to your parents about something like that?\"\n\nWell, that was a pretty good point. \"Yes, alright, but maybe you should speak to a psychologist.\"\n\n\"Oh, no, I'm not going to talk to some shrink. I know what she'll say.\"\n\n'She? Why did she presume it would be a woman,' the professor wondered. Well, he could at least offer his own opinion. \"Yes, well, Nina, frankly, I would say, well....No, no, I do not consider it to be abnormal. Whatever two adults wish to do in the privacy of their own home is frankly their own business. In this state it is entirely legal.\"\n\nNina hadn't been thinking that it might in fact be illegal. What state would make it illegal? Well, in any case, she felt very reassured. \"Oh, professor,\" she said, feeling a very heavy weight being lifted from her little shoulders, \"that's a relief. I was really worried there, let me tell you.\" Now she had wished that she had worn something in her bottom. She instinctively squeezed her sphincter.\n\nProfessor Gould actually would prefer that she didn't, tell him, that is. \"Yes, excellent, well, I'm glad I could be of some help.\" It was clear, at least to him, that he would prefer this conversation to end. Templeton College was very conservative. Anal sex was legal, but he seriously doubted that the administration, or her parents, would approve of it, nor would they approve of him speaking to a young female coed about it and probably would be quite appalled at his endorsement of anal sex. But, as a professor, a scientist, he had to be true to his principles.\n\nNina though had more questions, now that the back door was open. \"Have you ever done it?\"\n\n\"Excuse me?\"\n\n\"Have you sir? Have you ever done it?\"\n\nIt was Dr. Gould's turn for his face to turn red. He said quietly, \"Nina, I don't think we should be speaking about this.\"\n\n\"But, Dr. Gould, you always said that there are no wrong questions, only wrong answers.\"\n\n\"Well, yes, yes, I did say that but I didn't mean....\"\n\n\"I'm sorry, sir,\" Nina quickly interjected. She realized that she had crossed a line, and a rather embarrassing one at that. Her face became as red as the professor's. \"You're really very busy, and I'm sorry to have taken up already so much of your time.\" She got up from her chair. \"I'll be on my way.\" She really wanted now to just get out of there.\n\nDr. Gould could see how embarrassed and troubled the girl was. \"Nina, please, wait.\"\n\nNina stood before him, looking ever so apprehensive and timid, her hands clasped before her, biting her lower lip. \"Yes, sir?\"\n\nDr. Gould really didn't want this girl to leave his office feeling so lost and confused. She needed someone's help, and he was the one who was there. He could just hand her off to someone else. Make her be their problem, not his. But, that would be irresponsible, neglectful, and cowardly. No self-respecting professor would or should do that. It was his duty to help her, to provide her with the guidance and support she needed, even if it was awkward and uncomfortable. He took a deep breath and said, softly, \"Yes, Nina, I have done it.\"\n\nNina's eyes brightened. \"You have!? Really?\"\n\nHe nodded and repeated, \"Yes, yes, I have.\"\n\n\"Wow.\" Nina felt so much better. If a professor has done it then it can't be bad! They're like the elite of society, so wise, so learned. \"Did you like it?\"\n\n\"Well, yes, yes, Nina. I would say that I did.\" It would certainly be weird at this point to say that he didn't, but he was in fact being honest about it, although he hadn't really done it that much.\n\n\"Have you done it a lot? When was the last time you've done it?\"\n\nThe professor shifted in his chair, feeling a little uncomfortable. Sometimes it can be quite difficult to be a professor, but a good educator, a good scientist, must be willing to address and confront difficult subject matter. \"I have not actually done it a lot, Nina, I must admit, and, well, frankly, it has been quite some time since the last time.\" There was in fact only one prior partner who was willing, and even with her he didn't do it very often. It had to be the right moment, and those moments did not arise very often.\n\n\"Would you like to do it again?\"\n\nThe professor hesitated before answering that question. This was really getting quite personal. \"Well, yes, someday, certainly, I suppose if the opportunity arose.\" He was not currently dating anyone, and didn't really expect the opportunity to arise again anytime soon, but if it did he would not be at all adverse. That was certainly true.\n\nNina hesitated a bit, contemplating her next question. She could feel her heart racing. She knew she probably shouldn't but she also knew that if she didn't at least ask she would regret it later. \"Sir, um, well...would you like to do it with me?\"\n\nDr. Gould's eyes widened with surprise and shock. Perhaps he should have anticipated this question, but he really hadn't been imagining the conversation heading in that direction, even after her prior question. What professor really would? How often does an undergraduate ask you to have anal sex with her? Frankly, not very often at all. Professor Gould had been at Templeton College for 15 years and it had never come up before.\n\nOf course, perhaps he should not be too surprised. Faculty life at Templeton College was really beginning to take a rather unusual turn for Professor Gould. First there was Emily Kay (see \"There must be something wrong with me\"), and now here was Nina Hartley. \"Well, Nina, really, I'm not sure that's quite appropriate. I am, after all, one of your instructors, and really much older than you.\"\n\n\"It's not like it's real sex or anything, professor, and you would be doing me a big favor. And the fact that you are so much older is really why I'm asking you. I mean, well, I don't mean like you're really nasty old or anything like that.\" She was feeling quite self-conscious again, perhaps only digging a deeper, dark hole for herself as she tried to climb out. \"I could learn a lot from you and I've never done it before and I so much want to see what it's like.\"\n\nThese were all very good arguments, or at least Professor Gould felt they were. But, after the experience with Emily he had vowed not to do anything like that again. He had taken a big chance with her. Frankly, he wasn't really out of the woods with her as she might still someday tell her story to someone and if it ever got out he would be in quite a bit of trouble. \"I honestly don't know, Nina.\"\n\n\"Oh please, Professor Gould, please, please, please, please, please!\" Her hands were clasped before her chest, her face pleading, her large green spectacled eyes beseeching him to say yes.\n\nThis girl was anything if not persistent. But, the professor knew that this was a most dangerous line to cross.\n\n\"We really can't do such a thing, Nina, and certainly not here and now.\" He wasn't too sure he wanted her though to even come to his house. What if one of his neighbors saw her? And he certainly couldn't go to her dorm room or, worse yet, her house, if she was still living with her parents. Boy, imagine being introduced to her parents, and claiming that you were going to provide some tutoring, in her bedroom. No, that wouldn't be terribly believable, and there would be little doubt that her parents would look in on them.\n\n\"It's okay, Dr. Gould,\" Nina said, reaching down for her purse. She extracted a tube of lubricant. Ever since she started wearing things up her bottom during classes she realized it would be helpful to always have some lubrication handy. \"We can do it right here, right now. I've got some stuff.\"\n\nThat wasn't what he had been concerned about, but it was impressive that the girl was prepared.\n\nNina got up from her chair, turned her back to the professor, and then got back onto the chair, facing away from him, her bottom toward him. She held onto the back of the chair with her left hand, looked back at him over her right shoulder, stuck her bottom out, smiled coquettishly, and lifted up her skirt to reveal to his eyes her perky little round bottom, all nicely wrapped in her white cotton panties.\n\nProfessor Gould's dick swelled quickly in his pants. Well, she was at least wearing the school uniform, the professor observed. That was something, he supposed, and it never looked better on a young lady. Nina was perhaps presenting her most compelling argument, and Professor Gould's resistance was weakening.\n\nNina pulled her skirt all the way up onto her back so her entire bottom was exposed and then stuck it way out at the professor. She cocked one hip, and then the other, and then brought her bottom back toward the chair and then stuck it back out at him, letting him enjoy how fuller and rounder it became when she stuck it way out, and then started swinging and swaying it left and right, and bopping it up and down like she was on a spinner. She did all sorts of cute little gyrations and flirtations with her white pantied bottom. She had gotten lots of practice in front of her bedroom mirror over the last few weeks, learning well how to pose and prance her bottom for a guy. Now she was finally getting the opportunity to try them all out and, as she grinned at him over her shoulder, she could see that she was having the desired effect.\n\nShe was indeed. Professor Gould was getting rock hard within his slacks, and briefs. Nina's prancing, dancing pantied bottom was simply mesmerizing and hypnotic. It had been quite a long time since he had enjoyed a girl's firm round bottom and her tight little rectum. Maybe it wouldn't be so bad to indulge a student's whim every once in awhile. It was, after all, in the spirit of helping her overcome her problems, to help her learn and grow as a young lady.\n\nHe got up from his chair, his dick straining within his briefs in a most uncomfortable manner. His cock had the scent of this girl's bottom and it wanted more.\n\nNina thrust her bottom back to him and then held it still. She did though arch her back a bit more, just to give it more definition, a more alluring roundness.\n\nThe professor at first just laid his hands on the cheeks of the girl's apple shaped bum. Each hand could essentially capture an entire cheek. He squeezed them, enjoying their firmness yet also their soft pliancy. He then slid and glided his hands around and around all over her fanny, enjoying the smoothness, the soft curves. She had such a round perky butt. With his crotch hidden by her bottom he did though momentarily release his left hand off her butt to adjust his stiff dick.\n\nHe then grasped hold of the waistband of Nina's panties.\n\nNina could feel her heart racing, her pussy getting warm and wet, anticipating the professor pulling her panties down. She was feeling a little naughty right now, as she was certainly being. She giggled to herself that it was like the professor was going to pull her panties down to give her a spanking, like her father had done many years ago. But, of course, he was only pulling them down so that they could be naughty together.\n\nBut, the professor instead pulled her panties up, in a manner as if giving the girl a wedgie, her panties becoming wedged fully into the crack of her ass, exposing her entire white fanny cheeks, turning her full cotton panties into a thong.\n\n\"Professor Gould!\" Nina complained at the indignity of the wedgie, but she was also smiling, and giggling.\n\nLifting her panties up this way also delightfully tightened them around her pussy pouch, which was now fully camel toed. But, it wasn't her pussy that interested Dr. Gould.\n\nNina squirmed and wiggled her bottom hanging from her panties. She was getting so terribly excited.\n\nDr. Gould could even see some moisture soaking through Nina's panties, providing now a wet camel toe. He wondered if they ever have that type of contest at a spring break party. It would clearly top the wet t-shirt contests, which were already quite entertaining. Probably not, but the way kids are these days, one can't be too sure.\n\nHe let go of Nina's panties, but only temporarily in order to shift his hands to pull them down. He did not though pull them all the way down. He did clear her entire bottom, but he stopped just below the cheeks, where he tucked them in. He thought that looked incredibly cute. The presence of her panties bunched up just below her naked bum further accentuated that they were indeed pulled down, that the girl's bottom was fully exposed to his view, his pleasure.\n\nAnd exposed it was. He shook his head in disbelieving wonder. Nina had such an incredibly round and perky derriere. He might not be a butt man, but perhaps he should be, or certainly might become one. Youth is truly wasted on the young.\n\n\"Are you going to let me see yours?\"\n\n\"What?\" He had barely heard what she said, as his eyes and his mind were transfixed by the sight of Nina's bare naked bottom. \n\n\"Can I see what you're going to stick in my bottom, Professor Gould?\"\n\nIt was a reasonable request. Any gentleman would oblige the girl wishing to see the size of the weapon that was going to be stuck up her butt. It is certainly not polite to surprise her on that point. Dr. Gould unzipped his pants, reached into his briefs, and pulled out his stiffened cock.\n\n\"Oh my goodness,\" Nina exclaimed, looking back at the swollen stiff dick of Dr. Gould. It jutted out of his slacks like a battering ram, the plum crown all swollen and shiny, appearing even angry and ready to do damage to the closed gate it was about to barge through.\n\nDr. Gould smiled. This was the second undergraduate to be impressed by the size of his cock. For a moment he considered the possibility that he was in fact larger than average, but as a scientist he knew that he wasn't. He knew the figures, the facts. It could just be that Nina and Emily were too inexperienced to realize the facts. Or, it might be that the role, the profession, of being a professor provided him with some element of mystique. Well, whatever the reason he really didn't care. It was just nice to hear.\n\nNina was not just flattering Dr. Gould. He wasn't that big but when it's your butt that is going to be penetrated even a small cock could appear rather big, and certainly to a bottom as inexperienced as Nina's. \n\nNina handed the lubrication back to Dr. Gould and scrunched down deep into the chair, tucking her face into the seat cushion, raising her bottom up as high as it would go. When he took the lubrication from her hand she reached back up with both hands to spread open her cheeks.\n\nIt was a rather unusual, but a highly erotic sight: Nina's bottom was sitting high up in the chair, her head and knees down at the cushion. It was like her ass had become her head, as if she was raising her bottom up in the air in order to receive some sort of planting, spiking, or reward. Perhaps all of these options were in fact the case.\n\nDr. Gould squeezed a glob of the lubricant onto his index finger and reached out to apply it, to apply it to Nina's puckered rosebud. He hesitated a moment before he did so. This is a moment you want to treasure: a pretty girl presenting her anus to you in as graphic manner as possible. This was not likely to happen too often again in his career. Plus, her little brown star was so cute, so charming, so adorable.\n\nHe applied the ointment to Nina's butt hole, her bottom lurching and her sphincter tightening as soon as he made contact, but he also could hear her giggling.\n\nNina was so happy. She was finally going to be fucked up the ass, and it was even going to be by a professor! 'Could a girl be any luckier,' she thought. It wasn't going to be just some guy with whom she was on a date, some guy that probably would have no idea what he was doing, some guy who might dump her as a result, or perhaps she might dump as a result. Instead, it was going to be an esteemed member of the Templeton faculty, a person of considerable respect, even reverence. She was getting so, so wet. She wanted to reach up between her thighs to feel how wet she was, to diddle her clit, but she did worry that Professor Gould might consider that to be inappropriate. Masturbating in front of a professor was a rather obscene thing to do.\n\nProfessor Gould enjoyed the feel of the girl's little anus. It was so curly, squiggly, and puckered. It just felt so darling, so dainty, so delectable. After a period of time of just caressing her, calming her, getting her used to the feel of his finger, to its presence on her anus, the safety of its presence, he slowly and cautiously pushed his way in.\n\nHer instinctive reaction was to tighten her sphincter, to resist.\n\n\"It's okay, Nina. Just relax. Just let it happen.\"\n\n\"Yes sir,\" she replied, but she did know that. She closed her eyes and thought happy thoughts. Happy thoughts would not help her fly but they would help accept a finger up her ass. In fact, her happy thought was finally having a guy's finger up her butt. She felt the professor's finger slip in and even slide deep down inside.",
        "Dr. Gould slowly slipped and slid his finger in and out of Nina's bottom, gingerly and carefully finger fucking her rectum.\n\n\"Mmmmmmmm,\" Nina sighed with pleasure, relaxing her sphincter even further, making it easier for the professor to slide it in and out, in and out, in and out of her perky little fanny.\n\nThe professor also began to maneuver it around and around within her rectum, screwing her asshole with his finger, feeling around inside, and pressing and pushing all around her sphincter as if he was trying to expand her hole, to open it wider and wider and wider.\n\nNina began to turn, wiggle, and rotate her bottom, playing with his finger in her butt as much as he was playing with her butt with his finger. This was indeed much better than a candle, or even the glue dispenser. This was a real person's finger, a finger that was alive, that was exploring her butthole, that was screwing her asshole, her rectum. \"That feels so nice, Professor Gould,\" she softly whispered.\n\nIt felt awfully nice to him too, and he continued this ministration for sometime, not only for her sake, to get her fully relaxed, pliant, and receptive, but also simply because it was just so darned enjoyable. Still holding the lubricant in his left hand, he also grasped hold of his cock as best he could. He couldn't have it just poking out in the air. Air just doesn't feel nearly as good on your cock than a hand, even one already holding a tube of lubricant.\n\n\"Please,\" Nina finally pleaded. \"Put it in,\" she whispered, \"put it in my butt.\"\n\nDr. Gould slipped his finger from Nina's ass, which remained open for awhile, gaping up at him, inviting him into that deep, dark cave. The sphincter soon slipped shut, but it was evident that she was well prepared.\n\nA minor adjustment to her position though was first necessary. Her butt at the highest point was a good position for lubricating her, for fingering her, but not for actually penetrating her with his cock. He gently pushed on her ass to shift it down into an easier, more receptive position.\n\nNina complied, lowering her ass like an airline loading gate, getting it into the optimal position to receive heavy cargo.\n\nDr. Gould squeezed a couple more globs of lubrication onto the head of his cock, right on the end. He closed and set down the tube of lubrication, and then took his hard dick in his right hand to carefully position it, to lodge it, at the entrance to Nina's ass.\n\nNina felt a moment of insecurity, of anxiety, of doubt. Her sphincter tightened.\n\nThe professor said, in his most calming professorial tone, \"Don't worry, Nina.\" Students could at times become so distressed over failing a test, not having enough time to finish a term paper, losing fellowship support. Dr. Gould's reassuring voice, and a gentle hand on a shoulder, went far to calm students down. \"I will be gentle.\"\n\nNina regained her composure, sighed deeply, and waited to receive the professor's truncheon up her ass.\n\nDr. Gould pressed forward, but made little progress, his dick just slipping up her crack. Perhaps there was a bit too much lubrication? He repositioned himself, and this time thrust forward with a more direct, exact, and concerted aim, helping to keep its position with a firm grip of his right hand.\n\n\"Oh!\" Nina suddenly exclaimed as the thick, slippery, smooth crown suddenly poked through her sphincter and lodged inside.\n\nDr. Gould was surprised at how quickly it popped in, accompanied by a kind of \"thlump\" noise as the heavily lubricated crown poked past the rapidly widening sphincter that immediately closed again around the relatively smaller shaft. He was in, and he stopped to admire the sight. Only the rod of his cock could be seen now. It was much smaller than the lip of the crown but it was still fairly thick and he could see how fully stretched was Nina's anus.\n\n\"Wait a second,\" gasped Nina. She wanted to take a bit of time to get used to it. She confessed, \"I've never had anything that big up there before.\" She had been quite cautious. One really doesn't want to injure one's butt in such a manner. Not a good thing to have to explain to one's parents. The professor's cock really felt quite intrusive and in a sense disconcerting. It was uncomfortable to have something that large stuck up one's butt, but it was also a very sensual and pleasurable uncomfortableness, like the feeling one has as one swallows down yet another wonderful big slab of a really magnificent tasty hunk of meat despite being so full. There's really no room for it but it still feels so good going down.\n\nWell, maybe that isn't the best analogy. Nina also knew that she would feel a tremendous sense of relief once his thick cock was pulled out. The comparable analogy for that sensation is rather obvious. But, its departure would also be met with a feeling of loss, of emptiness, as the feeling of being engorged, stuffed, and bloated up the butt was really quite sensational, at least to Nina.\n\n\"Take your time, Nina,\" the professor reassured her, softly caressing a cheek of her fanny as he admired the sight and feel of his cock up inside. He could feel the girl reflexively squeezing his dick with her sphincter and rectum, trying to get used to its presence.\n\nShe whispered, \"Your penis feels so big inside me there, sir.\"\n\n\"Yes, yes, honey, that's one reason it's so nice this way.\"\n\nHe was right about that. But, Nina had additional concerns. She looked back at him through her spectacles to ask, \"Does it look okay, sir?\" A girl is always interested in her appearance, her appeal, her prettiness. But, she really had no idea how this looked. She wondered if it looked kind of nasty: her anus all distended and everything.\n\n\"Nina, you have the most beguiling and charming derriere I have seen in years and, frankly, right now, I don't think I've seen a prettier sight.\" He was perhaps laying it on a bit thick, but he felt rather sincere.\n\n\"Mr. Gould!\" Nina exclaimed, blushing profusely at the glowing praise. She had begun to feel a bit nasty, a bit dirty, but he even called it pretty. She couldn't feel better.\n\nNina smiled with deep satisfaction. It's been done. It's finally happened. She has a cock stuck up her ass. She cautiously pushed her rump back against Dr. Gould, sliding his cock in further, cuing the professor to begin to fuck her, to fuck her up the ass.\n\n\"Is that okay, sir?\" she inquired.\n\n\"Mmmmm,\" Dr. Gould moaned in response, and gladly complied. As soon as he started to slide his cock in and out of the girl's backside he was reminded of how much he had enjoyed this so many years ago. A girl's tail is so tight, especially the sphincter clenching the shaft. Plus, this was such animalistic sex, such patently and concretely dirty sex. This was far from any sort of missionary position. This was bestial sex, and he so much enjoyed that.\n\n\"Mmph...mmph...mmph,\" Nina grunted with each forward thrust of the professor. She did now reach up between her thighs to diddle her clit as her butt was repeatedly plumbed by the professor's bludgeon. It was a very wonderful combination of sensations: the tingly arousal of her clitoris coupled with the engorged stuffing of her rear end. She took to her clit with considerable force and energy, rubbing her clit around and around, flickering it mightily as she felt the professor's cock bulldoze her rectum.\n\n\"Very good, Nina,\" the professor groaned, \"You're doing a very good job.\"\n\n\"Thank you, sir,\" Nina gratefully replied. She had worried if perhaps his prior girlfriends' butts were better than hers. Certainly they would have been more experienced. She wondered if she should be doing something more special. She tried wriggling and squirming her bottom around, trying to make sure that he was having as much fun as her.\n\nThe professor was considerably older than the young men of Nina's age, and perhaps he should then have the staying power expected of his generation, but even men his age would have difficulty lasting long in this situation: a girl gyrating her ass on his cock. It had been a very, very long while since he last had sex (not counting Emily). Plus, this was just so intensely erotic, seeing her preciously adorable white round fanny presented before his eyes, the shaft of his dick distending her anus, his cock sliding in and out her ass, her derriere squirming around like it had ants rather than a cock up inside, all of which was of course coupled with the physical sensation of the bulb of his cock being so tightly embraced, enfolded, snuggled, and squeezed by the girl's rectum, his shaft choked by her sphincter. And, if that wasn't enough, there was just the simple fact that he was fucking a pretty petite coed up her butt. Sometimes being a professor can be so satisfying, so enriching, so rewarding.\n\n\"Fuck me...fuck me harder, Dr. Gould,\" Nina pleaded, wiggling, squirming, and wriggling her impaled ass, as if trying to escape the intruding thrusts but on the contrary trying to maximize the experience, the sensations. \"This is so... wonderful, sir. You're making me...so happy,\" she gasped in between his reaming thrusts.\n\nDr. Gould bent over further, down over the girl's back, reaching around to grasp hold of her titties. It was perhaps a bold move on his part. She had offered to him only her bottom. He would not presume to now fuck her in the cunt, and perhaps should not then presume that he could grasp hold of her boobs, but she apparently did not mind.\n\n\"Oh, Mr. Gould,\" Nina gasped as she felt the professor's large manly hands firmly clutching, fondling, and squeezing her breasts.\n\nShe had such nicely soft and round breasts. It was unclear to the professor, a scientist no less, why feeling a woman's breasts is so arousing, so exciting. But, it was a fact of nature that he was now validating empirically, humping this girl like a dog in heat: bent over her body, obscenely thrusting his dick in and out of her butt, groping and mauling her boobs like he was back in high school.\n\n\"Your cock, Dr. Gould,\" Nina groaned, \"it's just so, so big!\"\n\nThe professor did not respond, at least not verbally. He only smiled down at the sight of himself fucking the girl up the ass, losing himself in the intense pleasure of his butt fuck, forcing his thick cock deep down inside that tight little dark canal, then pulling it back out, like a drill working in and out of thick, muddy clay.\n\nDr. Gould suddenly realized that the door to his office was unlocked, or at least he had no recollection of Nina locking it. It would not be too good if a colleague suddenly opened the door and saw him reaming out a coed's naked ass. No, that would not be good at all. But, there was no way he was going to stop now, this close.\n\n\"Dr. Gould...Dr. Gould...Dr. Gould,\" Nina gasped with each thrust of the professor's cock. It just felt so wonderful, so right, so perfect to be taking a man's cock this way. She now knew for certain that this was who she was, was what she had always wanted, what had been her dream. She could feel herself rising closer and closer to her orgasm. She worked even harder on her clit.\n\n\"Nina,\" Dr. Gould gasped, \"I'm gonna, I'm gonna.\" He couldn't help himself. He just had to cum. He would have wanted this to last longer. Certainly her first time should have been longer. But, a man's got to do what a man's got to do, and right now it was blowing his load.\n\n\"Inside!\" Nina squealed, turning her head as best she could with it jammed down into the cushions of the chair. \"Do it inside me, please,\" she pleaded. They hadn't really talked about this in advance and she didn't know his preferences. The boys she had known had typically wanted to pull out, not only to help avoid pregnancy (even though Nina was on the pill), but also to enjoy seeing themselves cum on her. There was no risk of pregnancy in the butt, but she could understand if he wanted to shoot his load on her bottom.\n\n\"Yes, yes, certainly,\" the professor groaned. He would have liked to have watched himself cum on her cute perky pale derriere. It would seem like such a just reward for helping her out like this, but he could hardly begrudge the girl's request. He thrust in as hard and deep as he could go, his abdomen slapping against her bottom, and then felt his cock twitch deep in her rectum, spitting out a thick wad of sloppy sperm.\n\n\"Mmmmm,\" Nina moaned as she felt the jerk of the professor's cock, and then herself swept off by her own orgasm. She clutched her clit tightly with her fingers, squeezing it hard as the waves of primal bliss swept through her body and the professor's cum flooded her rectum.\n\nDr. Gould's legs felt unsteady and weak, his head faint, his mind confused and foggy as his body lurched like a cannon retort from the firing of his dick, blasting his gism deep into Nina's bottom. He released her breasts from his hands to grasp and squeeze her soft, pliant, ass as he gushed his stuff inside.\n\nNina could feel her rectum filling up with the professor's gloppy gism. She squeezed her sphincter to hold the globs inside, but right now she had actually very little control of her voluntary muscles as her body was shuddering, shivering, and quivering with her climax.\n\nDr. Gould felt Nina's sphincter spasmodically clenching and squeezing his shaft, as if she was literally trying to milk more spew from his balls. He obliged her with additional gushes, drowning his cock inside her dark tunnel with his own thick fluid.\n\nWhen he was done he slowly pulled his cock out, trying to be careful not to draw out his cum. He could not, though, avoid some spillage, as the lip of his crown acted like an oil spill containment rake, drawing some of the spunk with him as he pulled out. \n\n\"Oh my!\" Nina exclaimed, a little embarrassed by the spillage. \"I'm sorry, sir,\" she apologized, quickly squeezing tight on her sphincter to avoid any further accidents. A student really doesn't want to spill cum onto a professor's furniture.\n\nProfessor Gould, however, felt equally responsible and quickly helped to clean Nina's thigh and leg with his handkerchief. \"Please, no problem, sweetie,\" he reassured her as he cleaned up the minor splurge, feeling though rather exhausted and dazed by the experience.\n\nOnce she was cleaned he cleaned up himself and tucked his cock away, feeling now a little self-conscious about his nakedness in the presence of a pretty undergraduate, feeling perhaps a little uncertain over whether he should have fucked her up the ass.\n\nNina reached into her purse. She pulled out one of her butt plugs and, much to the delighted surprise of the professor, she popped it in. \n\nShe explained, \"This way I can keep it inside the rest of the day. Won't that be neat?\" she asked, a big smile on her face, already knowing the answer.\n\n- - - - - - - - - - - - - - - - - -\n\nNina had finally found the reassurance and validation that she had been seeking, but she had not yet found her soul mate, her butt mate, and she had little optimism of that ever happening. How or where would you find a man who shared your interest, your passion, for butt fucking? But, it turned out he was right behind her.\n\nNina was, perhaps not coincidentally, a member of the Templeton Cornhole Team. It's not really clear where cornholing first originated. Templeton folklore was that it had begun right on their own campus, but there was little real evidence for that. Most felt that it began in northern Kentucky or western Cincinnati. The American Cornhole Association is itself based in Cincinnati, Ohio. Wherever it started, it was rapidly becoming a very popular pastime prior to football games, quite appropriately part of the tailgating experience. It had become so common that informal tournaments had developed between rival schools.\n\nTempleton was playing an away game against Livingston, and the Templeton Cornhole Team was traveling to the Livingston campus to take on their hated rival. Well, they didn't really hate them, but it was a heated rival.\n\nJohn Stagliono and Nina Hartley were both members of the Templeton College Cornhole Team. They were both in fact quite skilled cornholers. Nina was a particularly skilled blocker, placing an ace in such a position that it effectively blocked sliders. John, on the other hand was, in a complementary manner, very effective at going through the back door, which is a cornhole that goes over a blocker and into the hole.\n\nThe team was riding together to Livingston, ostensibly sharing a Templeton College van. However, when they arrived at the Student Center parking lot, some of them walking over from the dorm, others being dropped off by their parents, they discovered at the last minute that Templeton had pulled their funding for the trip. Cornholing was not a varsity sport and the college was cutting back everywhere due to considerable downfall in state funding and endowment revenue. The administration simply could not justify the provision of financial support for college student cornholing in these difficult economic times.\n\nIt was not a fatal blow though to the game. One of them, the team captain, Joey Silvera, had arrived in his own car and they could all in fact squeeze inside. Five in the back seat, four in the front, with three of them sitting on laps. It was a bit risky as a number of them would not be wearing seat belts, but they figured that if they got stopped by a state trooper he would be sympathetic as to their cause. Perhaps in his day he had cornholed himself. Plus, Joey would drive extra safely and cautiously.\n\nIt was only natural that the smaller teammates would be sitting on the laps of the bigger ones which meant that three of the female members of the team would sit on the laps of a couple of boys. Actually, one of the girls did sit on a lap of another girl, finding it rather awkward to sit on the lap of a boy. Tricia Devereaux did that with Tristan Taormino in the front seat by the window. But, Kristi Lynn and Nina did sit on boys' laps, in the back seat, and Nina more specifically sat on John's lap, as suggested by the team captain, Silvera. It was not a fortuitous choice.\n\nIt would be a long drive but it was not uncomfortable for John. It was not just because Nina was such a petite girl. Nina was the girl that John had spoken to Dr. Lowenstein about, the one in his dream.\n\nNina was even today wearing quite enticing perfume. Templeton girls were not allowed to wear perfume, but the college had no control over them when they were off campus. They were though representing Templeton College as the Cornholing Team, dressed in their Templeton cornholing uniforms. Well, it wasn't actually a true athletic uniform. It was just the school dress code uniform with a special patch containing a modified Templeton seal. The Templeton seal consisted of a few textbooks, with a black tie on the left and black Mary Janes on the right, above which was the motto, \"Dream, Challenge, Succeed.\" The cornhole version replaced the textbooks with a cob of corn, and added \"Cornholing\" at the bottom. In any case, if cornholing was not an official sport sponsored by the college, they could hardly expect the team members to adhere to campus policy (yet the college did require that all official cornholers be at least eighteen). In fact, Nina was wearing her perfume in part to protest the administration's failure to formally recognize and support the team. Well, actually, it was more because she just felt prettier when she wore perfume. She said it was a protest just to sound rebellious.\n\nNina also didn't mind sitting on John's lap. It wasn't really at all uncomfortable and it allowed her to sort of pretend that she was sitting on a boyfriend's lap. John was, after all, a rather good looking guy. She had always recognized that. Plus, she really did respect how he could so often backdoor his way past her block. She snuggled her bottom into his lap, squirming it around like she was fitting comfortably into a nice soft cushion.",
        "John then quickly experienced another reason why it wasn't so bad to have a girl sit on his lap. Her soft little bottom did feel awfully nice squirming and snuggling into his crotch, and it wasn't too long before he started to feel himself get excited. A wave of panic quickly enveloped him. Imagine the embarrassment at developing a big stiff erection during the trip, the girl becoming shocked and appalled, perhaps even demanding that she move to someone else's lap because her partner had developed a boner. Not only would that be embarrassing but it could also be a major distraction for the team's competition. Captain Silvera might even dismiss him from the team.\n\nHe quickly distracted his mind to something else, concentrating on his plans for the cornholing. He so hoped that he would have a gusher (completing four cornholes in one inning). He had never done that before and there would never be a better time for a gusher than against Livingston.\n\nBut, it wasn't working that well. For John it was like the girl was sitting on his cock with her cunt. Imagine if bodies were constructed differently, that the cunt was where the butt hole was, and vice versa. Sitting on laps would then be so suggestive, so awkward (toilets would be kind of weird too). Well, it was pretty much that way for John now.\n\nNina wrapped her left arm around John's shoulder so that she could lean more comfortably against him. \"Don't you really like cornholing, John?\" she innocently asked through her large green spectacled eyes.\n\nJohn wondered what he should do with his right arm. Currently it was bent and jammed between her and the car door. He pulled it free and wrapped it around Nina's waist, helping to hold her on his lap. It was a rather bumpy ride to the Livingston campus. \"Yea, yea, I sure do,\" he replied, looking into those lovely green eyes behind the even larger round spectacles. He noticed how small was her waist as he held her body against his.\n\n\"And,\" she added, \"you really are very good at cornholing,\" nodding her head emphatically.\n\n\"Well, I don't know about that,\" he modestly replied.\n\n\"Oh, no, no. I really mean it. I think you're the best player on the team. Nobody can cornhole better than you.\"\n\nHe wasn't sure if it was the compliments or the fact that her bottom was bouncing up and down on his dick, but his erection was again returning. \"Oh no, no, I think Joey is better than me.\"\n\n\"Yea, well, I'm kind of hoping we'll be teammates.\" Nina quickly added, not wanting to sound too forward, \"If that's okay with you, I mean.\"\n\n\"Oh no, no. I mean, yeah, sure, I would love to be your teammate.\"\n\n\"Ooooh, really!?\" Nina exclaimed, not hiding her enthusiasm. Nina was really pleased to hear that. It wasn't their decision, but it was great to hear that John would want to cornhole with her. She had always admired John, and had felt particularly attracted to him after an intense and heated cornholing. Their games could get pretty darned exciting and impassioned. She leaned in closer and tighter against John, pressing her little soft breast against his chest, giving him a hug. \"Won't this be so much fun,\" she said.\n\nThe memory and meaning of his dream about Nina was now flooding John's mind as she pressed her breast against him, and bounced her bottom on his hardening dick, thinking back how he had imagined, dreamed, about fingering this girl, but through the insight of his analysis he had come to realize that he had been fingering her butt hole, the hole of the very butt that was now bouncing in his lap.\n\nThe car at least hit a smooth section of road, and the bouncing, for the moment, ceased. But, a lot of damage was done, as he was half erect and it was quite possible that Nina could in fact feel his stiffness. He cursed the Templeton school uniform that required guys wear loose trousers. Jeans would be much better at hiding himself. He was though glad that he was at least wearing briefs rather than boxers. He always wore tight briefs when he cornholed. It was a bit silly, as the likelihood of a corn bag banging into your crotch was pretty low, and there was no actual running around. But, the briefs did make him feel more athletic.\n\nNina, though, hadn't yet noticed. Well, she had noticed something lumpy, but a lumpy thing poking her bottom was hardly an annoyance to Nina. If anything it would have piqued her interest, her excitement. She was just simply enjoying the moment. \"Would you? Um, I mean, you, maybe, well, we could get together sometime and practice our cornholing?\"\n\n\"Well, sure, sure. I would in fact really like that,\" John replied. He would really like it indeed.\n\n\"You could maybe show me some of your secrets, you know, your cornholing technique, and everything.\"\n\nJohn decided to take the plunge. \"Yea, sure,\" he said, \"like maybe we could go out for a movie, or something, you know, and then do some cornholing afterward.\" It was a pretty risky move, if he had thought about it, because if Nina said no, if she declined his request for an actual date, she would still be sitting on his lap for the rest of the trip, and how awkward would that be. But, somehow he was actually feeling rather good about his chances and, well, his swelling cock was providing quite a bit motivation to commit the daring act.\n\n\"Like on a date?\" Nina whispered. This conversation was now getting rather personal and Allan, sitting right next to them, would easily hear if she didn't whisper, although his attention seemed to be pretty much on Kristi, who was sitting to his left, on the lap of Frank, who was talking rather excitedly to Tricia in the front seat. Everyone in the car was very excited about the big game.\n\n\"Well, um, yeah, I suppose.\" He would have preferred that she not make him acknowledge it explicitly. His first dates were always unclear as to whether they were in fact dates. It made it a lot easier to ask for the \"date\" and a lot easier if it didn't go well; after all, it hadn't been a real date anyway. But, he also didn't feel good about saying, 'I suppose.' He didn't want to sound like he was denigrating such an idea, that he wouldn't like it if it was a real date.\n\nNina was not so reserved. She squirmed in his lap and replied, \"I think that would be wonderful.\"\n\nJohn was surprised, and very pleased, at Nina's enthusiastic response. His dick swelled further.\n\nAnd Nina was becoming now more clearly aware of it. There are very few things that actually get larger within a guy's pocket or pants. She didn't say anything though. She didn't want to embarrass him. She certainly didn't mind it. On the contrary, it was rather pleasing to have such a concrete expression of his pleasure at hearing that she would go out on a date with him, particularly as it was pressing against her bottom. She let herself imagine actually doing it with John, that way, and she squirmed a bit more, but this time for a different reason.\n\nKristi, Tricia, Allan and Joey were talking about getting more specialized cornholing uniforms, rather than just wearing the specialized patch. They really would like a real uniform, but the conversation wasn't entirely serious. Joey suggested that the girls should wear the short shorts like the waitresses wear at that buffalo wings restaurant, with a big cornhole right on the bottom.\n\nKristi and Tricia understood the joke and didn't think it was that funny. Kristi suggested that the boys should then wear their penises in a special jockstrap cup, shaped like a cob of corn.\n\nNina giggled at that thought. It would be kind of interesting if guys had to wear their penises in brassiere-like cups, extending out from the fly of their pants, just like girls had to wear brassieres that made their breasts look more prominent. Girls could then judge how big the guys are, just as guys get to judge how big girls' breasts are. Plus, one could readily see if a guy was getting excited, just as guys can see girls' nipples getting stiff. Well, maybe the comparison isn't entirely fair, but the thought of such things did make Nina giggle.\n\n\"What's so funny,\" John asked, wanting to be in on the joke.\n\n\"Oh, it's nothing, nothing at all,\" Nina answered, now fully grinning over the thought of seeing John becoming embarrassed as he stiffens within his penis brassiere.\n\nJohn smiled back. \"Obviously it is, given that big beaming grin on your face. C'mon, tell me.\"\n\nNina looked deep into his eyes. Maybe she should tell him her little fantasy. Why not? It was kind of funny. So, she did, giggling and blushing as she did so, as it was a bit naughty to be talking to John this way, talking about penis brassieres.\n\nJohn did smile broadly at the idea, although his face reddened a bit as well.\n\nAllan, however, overheard and laughed loudly. \"Penis brassieres?! What are you two talking about there!?\"\n\nNina's face became beet red as she explained her idea.\n\nTricia, however, also found it rather funny. \"Yea, hey ,\" she suggested to Harry sitting next to her in the front seat, \"Why don't we make that part of our uniform.\"\n\n\"Very funny,\" Harry replied.\n\nNina though whispered to John, \"I bet you would look real cute in one.\"\n\nJohn's face became redder as more blood flowed into his face, as well as his cock. He didn't think his cock could get any harder, but he was very glad that apparently she wasn't noticing it.\n\n\"But,\" Nina added, whispering even more quietly, \"It might be a little difficult for you right now, don't you think?\"\n\n\"What?\" A wave of panic swept over John's body, his heart raced.\n\nShe whispered very quietly, \"Is that a corn bag in your pocket or are you just glad to see me?\"\n\n\"Oh geez, Nina,\" he quickly responded, albeit even more quietly, \"I'm sorry. I'm really sorry.\"\n\n\"Shhhh,\" Nina replied. She smiled sweetly and said, \"It's okay. I think it's kind of flattering,\" and to make sure that he knew she wasn't at all upset, she lifted up her bottom and reached underneath with her right hand, ostensibly to adjust or move something behind her to make herself more comfortable, but in reality just to give John's swollen cock an affectionate squeeze. She quickly though sat back down, not wanting anyone else to notice it.\n\nJohn's panic turned to unbridled excitement. Well, this was nice. This was very, very nice, as was certainly the brief feel of her girlish fingers on his cock. He did not, though, say anything. He really didn't want to put a foot in his mouth at this point, and so he just let his cock speak for him.\n\nNina whispered, \"Do you always get stiffies when a girl sits on your lap?\"\n\nHe shook his head no. However, with his predilection for anal sex perhaps it would be a natural response for him. The fact was that he just didn't have a lot of experience of girls sitting on his lap.\n\n\"It's just my bottom that gets you all excited, is it?\" Nina smiled flirtatiously and gave him a little squirm.\n\nJohn wrapped his right arm more tightly around Nina's waist and gave her a squeeze. He really did need to respond to that remark. \"Yes, I guess it is.\" He grinned back.\n\nShe whispered to him, \"Do you like it when a girl wiggles her bottom in your lap?\" And, to help him provide the most accurate answer she gave him a little wiggle.\n\nJohn sighed, closed his eyes, and responded, \"Yes, yes I do.\"\n\n\"Oh my,\" Nina whispered, \"I guess he does very much,\" feeling his cock twitch against her bottom. \"My goodness,\" she whispered, \"It feels like it's a pretty darned big one.\"\n\n\"Nina!\" John whispered, enjoying very much the subject matter, along with her squirming bottom, but also quite worried about getting caught in their little flirtatious dalliance.\n\nIf they were noticed, however, nobody would have minded, or would have even been surprised. It was in fact no accident that Joey, the captain of the team, assigned Nina to sit on John's lap. Pretty much everybody on the team could see that they were interested in each other, stealing glances, smiling, but obviously neither appeared to have the nerve to make the first move. Joey had been planning all along to have them be teammates for the Livingston match, although not entirely sure about that decision. It might be good for getting them together, but the tension, nervousness, and self-consciousness that it might generate could also be pretty bad for the competition. Having Nina sit on his lap was a no-brainer though. Perhaps then they would get over whatever tension might arise over being teammates.\n\nAnd, that had in fact been an excellent coaching decision on the part of the captain, as John and Nina were now well passed any nervousness, at least with respect to acknowledging their interest in one another.\n\nNina, ignoring John's plea to be more discrete said, quite boldly but still quietly and a bit opaquely, \"I like it too when a guy's big, stiff penis is poking at my bottom.\" It would have been more accurate to say \"in\" rather than \"at,\" but that was probably saying too much, too soon.\n\nJohn did hear quite clearly the specific reference to \"at\" rather than \"in,\" but wondered, much to his increasing interest, whether the latter would follow the former. He whispered back to her, \"Well, you have pretty darned cute bottom to poke.\"\n\n\"Johnny,\" Nina whispered gaily, giving him a little hug and wiggle of appreciation for the compliment. \"Don't be so fresh,\" she teasingly admonished.\n\nThis was very good fun for Nina. She felt like a mother hen, sitting on her egg, keeping it hidden from the foxes around her. Of course, when this egg hatched it would leave a bit of a mess in John's pants. She squirmed in his lap, continuing to play with and tease him.\n\nJohn so much wanted to join in, to return the favor by thrusting and twisting his pelvis against her bottom, but he knew that to do so would be risking getting discovered. But, it was so difficult to just sit there passively while Nina frotteurised his cock with her soft, round bottom.\n\n\"Hold on folks,\" warned Joey, driving the car. \"We've got another bumpy stretch up ahead.\"\n\nThey were taking a back highway to the Livingston campus, which was located well into the rural area of the state. The road was paved but the state rarely got to the potholes and cracks in this rural area.\n\n\"Oh my goodness!\" squealed Nina as she bounced up and then fell back down on John's stiffness. Kristi, at the other window seat in the back, was bouncing up and down on her partner's seat as well, and rather obviously intentionally so, much to Frank's discomfort and complaints. John, though, wasn't complaining at all.\n\nNina again reached underneath herself, this time ostensibly to maintain her balance but again in reality to grasp hold of John's stiff dick. This time she didn't let go, and commenced to clench, squeeze and even fondle and stroke it.\n\nJohn used his left hand to grasp Nina around the waist, ostensibly to help her from bouncing around, but in reality to pull her more tightly against him. His right hand in fact left her waist to slip under her bottom to cup and fondle a cheek. He was unable to thrust and squirm his pelvis against her rump, but he could help her wiggle and squirm it against his cock.\n\nNina brought her lips to his ear and whispered, \"Now I can tell you really do have a big one, Johnny.\"\n\nThese were words of affection that all boys like to hear, and John's dick swelled further at Nina's compliment. \"Too big for poking your bottom?\" he teasingly replied.\n\nNina looked him in the eyes, hers widening. She stared with wonder deeply into his, wondering if she had heard or understood him correctly. He had, like her, failed to say \"in,\" but what reason would there be for poking a girl's bottom? And, certainly, what difference would the size make unless you meant poking her in the bottom? Of course, that was what he was sort of doing right now, although it was more like her slapping against him rather than him poking her. She tentatively felt him out, as she felt him up. \"Do you like poking girls in the bottom?\"\n\nNow she had most definitely said \"in,\" but somehow it still could be innocent, or at least ambiguous to the central point.\n\nJohn could feel his heart racing at the question, his cock swelling and twitching at the thought, and the feel, of her hand. She was smiling at him, perhaps to let him know that it was fine with her if he did. With considerable trepidation he cautiously nodded, his eyes frozen on hers, desperately fearing the worst.\n\nNina smiled more broadly, whispering, \"And, I like getting poked there.\"\n\n\"All clear,\" Joey announced, having finally gotten off the bumpy stretch of road. Everyone sighed with relief, particularly Frank, upon whom Kristi had been bouncing.\n\nNina brought her hand from beneath her bottom, although giving John one last squeeze before she did so and then explained, \"You better relax, you need to save all your energy for the big game and,\" she added pregnantly, \"for the ride home.\"\n\nThere wasn't that much more play or flirtation for the rest of the trip. Well, that's not really true. Nina could not resist occasionally getting him rock hard again, at least for a little bit. But, they did have to prepare themselves for the match, get their minds on their game, rather than on Nina's bottom. She certainly didn't want him to get blue balls prior to the match, and cumming within his slacks was out of the question. So, she behaved herself for much of the rest of the trip, only occasionally stirring him back up again when she wanted his attention, which was a number of times.\n\nThe match was an outstanding success. Nina and John were indeed partners and they were on fire. Nina had numerous air mails, lots of cow pies, and very few hangers. John repeatedly went through the back door, and scored his first gusher in tournament play. Neither of them had any corn patties. They were the pride of the team, all of whom were thrilled and ecstatic with their first big victory over Livingston. The football team lost, but that was to be expected and it certainly didn't dampen their excitement over their own magnificent success.\n\nNina had to stop off at a restroom before they got into the car. Actually, a lot of them did as it would be a long ride back and everyone had drank a lot of Gatorade.\n\nEveryone in the car on the ride back to Templeton was electrified with energy and excitement. They were all recounting various parts of the tournament, every amazing hanger, disappointing jumper, and of course John's gusher. But, it had indeed been a team effort and everyone shared in the revelry and glory.\n\nNina though had not stopped off at the restroom simply to relieve herself. Well, she relieved herself of more than just one thing. She relieved herself of her panties, tucking them into her purse. And, she thoroughly lubricated her own back door. Perhaps she was a bit carried away from the glorious victory. Many persons do quite stupid and dangerous things after a big sports championship, and Nina was no exception.\n\nWhen she got back onto John's lap she lifted up the back of her skirt so that she could seat bare bottom on his lap. She gave him a big hug as soon as she did so. It didn't really matter if anyone saw it. Everyone was hugging, saluting, lauding and high-fiving each other. It was a time for congratulating, embracing, and sharing the moment.\n\nJohn was very glad to have Nina return to his lap. He did not at first notice that she was lacking panties, although he certainly did appreciate the intimate touch of her bottom. And, this time he had carefully placed his limp cock in such a position that it could very comfortably grow. He had seriously contemplated taking off his briefs in the restroom, out of sight of his teammates within one of the stalls. He now cursed their tightness. But, taking them off might be going a bit far. Plus, if he did in fact have an accident on the ride back, he would want the extra layer of fabric to absorb the moisture. He wasn't as worried about this on the ride home, because it would be dark by the time they got back. He could just dash out of the car once he was dropped off at the dorm. It might appear a bit rude not to talk to Nina for awhile outside of the car, but she would understand, or at least he hoped she would.",
        "Nina's plans, however, went farther than that. After she finished hugging him, which was for quite some time, she snuggled her bare bottom deep into his lap, resuming the squirming and wiggling that was so warmly and stiffly received on the ride to Livingston. And, if that was not enough, she reached around, behind and beneath her, to encourage him along with her hand.\n\nIt did not take John long for his stiffness to return. It was a wonderful rebirth of his bone, and there was no longer the tension and concerns of the upcoming match before them. There was only the joy and glory of their cornholing victory, which they could now share and celebrate together. He did though again curse his briefs, and wondered if perhaps he should have taken them off after all.\n\nNina was so very pleased with his quick reaction. It was very clear to the two of them during the match, and everyone else, that they were becoming a couple, if not already being one, but it was nice to have such an evident, concrete reaffirmation of his feelings for her, and for her bottom. She removed her hand from beneath her bottom, leaned into him and whispered, \"Put your hand under my skirt. I have a surprise for you.\"\n\nWell, those are words of delight for any healthy young man. He let go of her waist with his right hand to slip it beneath her skirt, and quickly discovered that Nina was no longer wearing any panties! It was a wonderful shock of pure delight and excitement as his fingers touched the smooth bare skin of Nina's bottom. Nina was parked just over the edge of one of John's thighs so that he could feel, caress, and fondle a good part of her naked bottom cheeks without having her lift off his lap, which he gladly did. \n\nJohn knew that he would have to write Dr. Lowenstein a special thank-you letter. He could now, with full self-awareness and no ambivalence, bask in the pleasure of the feel of this girl's softly curved, firm yet pliant behind. He could not feel all of Nina's butt, but the limited domain open to him was a real pearl. It felt just so perky, soft, smooth, and round, and he particularly liked exploring within the crack.\n\nNina grinned at him, enjoying the considerable amount of time John tenderly, affectionately caressed and explored her bottom.\n\nJohn though eventually felt a little selfish fondling Nina's bottom. It suddenly dawned on him that, of course, she hadn't taken off her panties for no reason at all. She wanted him to use his fingers on her, to give pleasure with his fingers as she had done with her fingers on the ride up. He shifted his right hand toward her cunnie lips.\n\nNina was about to lift her bottom up and off John's lap so that he could get further down into her crack when she felt him slipping his hand around to the front of her, and down between her thighs to her wet, swollen cunnie. It wasn't what she had been expecting, or frankly even hoping, but she couldn't begrudge a boy's interest in her cunnie. And, besides, she did also enjoy a guy playing with her there as well. She settled more deeply into his lap as his fingers began to explore, fondle, and caress her wet, slick cunnie lips.\n\nIt wasn't a really terribly risky thing to do as John's hand was entirely hidden by her skirt. A careful and observant eye could probably detect the presence of something under Nina's skirt, particularly something moving, but as soon as John began Nina leaned forward and rested an arm across her legs, effectively hiding much of John's hand from view. She then let herself simply enjoy his sensual and licentious ministrations.\n\nJohn enjoyed it as well. There are many things that a guy likes when it comes to sex. Actually, maybe there aren't any things that guys don't like when it comes to sex. But, John certainly enjoyed fingering a girl, particularly when the more she squirmed in response to his fingering, the more she squirmed her bottom against his cock. He began by simply just exploring and caressing Nina's lips, which were barely covered by only the very sparsest growth, which wasn't really an accident as Nina kept hers very closely trimmed and shaved.\n\nJohn could feel how wet she already was, along with how warm. It was like her cunt had it's own furnace, generating waves of moist heat. Nor did it take him long to get to her hole, easily slipping within her lips as they were already so slick and swollen.\n\n\"Mmmmm,\" Nina moaned as she felt John's index finger worm its way up inside. She squirmed and screwed her pelvis, helping him to slither his finger inward. This would have been terribly risky on the ride up, but not so much on the ride home, as everyone was so involved in their own excited chatter, their memories, their hysteria, that Nina's moan went unnoticed. She did though realize that she would have to be more careful, and would certainly need to control the expressions on her face.\n\nAs soon as John's finger was well up within her hole he maneuvered his other hand under her skirt on the other side to bring these fingers to her clit; rubbing, massaging, and diddling her clitoris in slow, circular motions as his index finger slid in and out of Nina's quivering cunt.\n\n\"Oh my goodness,\" Nina exclaimed, as she felt John's other fingers on her clit. She quickly recovered by adding, \"Wasn't that an amazing air mail by Kristi!\"\n\n\"Oh yes,\" Allan agreed, turning his head to Nina to say, \"That was like at such a crucial moment.\"\n\nNina leaned forward even more, squeezing John's finger with the muscles of her cunt as she tried to restrain, constrain, the muscles of her face, muscles that wanted to squeeze and clench as well, expressing her growing arousal, her increasing lustful excitement. \"Oh yes, yes,\" exclaimed Nina, \"a really crucial moment!\"\n\nJohn so much wanted to take his cock out of his slacks. He thought that perhaps he could. What's really the difference? It would still be hidden by Nina's skirt, although, of course, if it popped up they might have some difficulty explaining why it looked like Nina had an erection. He knew that he had to settle with it just rubbing against Nina's subtly wriggling and writhing bottom, which was still settling for quite a bit. And, besides, he did enjoy the idea of bringing off Nina before she did it for him. That was certainly the gentlemanly thing to do. He worked hard at both her clit and her hole, frenetically diddling with one finger while the other squirmed and wriggled within her hole, like a crazed and maddening snake.\n\nNina could not help but more openly squirm and wriggle her bottom, doing her best though to try to make it seem like she was just so terribly excited over their victory that she couldn't sit still, which, of course, was pretty much the truth. \"It's just so exciting and everything!\" she squealed, perhaps a bit too enthusiastically, but nobody seemed to mind. Everybody was just so thrilled and full of stories, congratulations, and joyful exclamations.\n\nNina knew that it probably wouldn't take long for John to take her to a climax. It wasn't that he had any sort of special fingering technique, but she had already been so aroused by the playful fun on the trip up, the feel of his erection against her bottom, along with the excitement, the thrills, of their game. She replaced her right arm with her left arm, doing her best try to hide John's hands, and reached back with her right hand to take hold of the hand that was fingering her.\n\nJohn wasn't at all sure why she was doing that. She was perhaps feeling that he was going too far, or that she was getting too close, but wasn't that the whole point? In any case, neither explanation was consistent with the fact that she left his left hand alone, which was more of a risk being seen than his right. In fact, he started to pull those fingers away as well, but she firmly clamped her arm against his, pressing his arm and hand against her so that they couldn't escape.\n\nAnd, he quickly discovered her intention as she shifted his right hand down under her bottom, which she raised up just enough for him to slip his hand beneath. She then let go of the hand, hoping that he would get the message.\n\nAt first he wasn't entirely sure what she wanted. Perhaps she just wanted him to get to her cunt from beneath, that way it wouldn't be so easily discovered.\n\nBut, as his fingers made their way back to her cunnie Nina grasped her right butt cheek, pulled it open, and squatted back down on John's hand, capturing his right hand precisely where she wanted it, in between her cheeks, and at her anus.\n\nJohn could even feel the lubrication on her butt hole and knew instantly what she wanted. His other fingers froze on her clit.\n\nNina's heart was pounding. She froze as well. Just as John had taken a very big and risky step by asking her out, she was now doing the same by presenting her asshole to the fingers of John's hand. It was time to discover if she had indeed misunderstood him. She really felt she hadn't, what with their comments on the way up and all the playful pats on her bottom during the match, even at times caresses, along with her occasional but not so subtle pressing of her bottom against him as they waited their turn during the game.\n\nShe did not have to wait long though for his answer. He quickly took to exploring and caressing Nina's butt hole. For John, it was like presenting a chocolate to someone who had been denied anything sweet throughout his childhood and adolescence. He did not suppress his ecstatic delight, grinning as broadly as he could. Nobody though would think the wiser, as pretty much everyone in the car looked like a Cheshire cat. John, though, for more reasons than one.\n\nHe really couldn't believe his good fortune: his first gusher in tournament play, beating Livingston, and now he was actually being presented with a pretty girl's anus to inspect, examine, and perhaps even probe. It was the perfect trophy for his team's victory. The only potential disappointment, and there was no actual such feelings, was that he couldn't see what Nina's butt hole looked like. Well, that would obviously come later, and he sighed with anticipatory pleasure. He was at least getting a real good sense for how it felt. And, it was plenty fun tickling her there, as well as watching her squirm and giggle.\n\nNina occasionally playfully wacked John with her right hand, as the tickling at times became too intense. However, just as often she squeezed or clutched his shoulder, letting him know how nice his caresses felt, both to her clit and her anus.\n\nJohn didn't take too long before he pierced Nina's sphincter. One couldn't expect him to just keep knocking at the door. He squirreled his finger through and past her sphincter into her butt hole, and instantly began exploring around inside, feeling with the tip of his finger the petite girl's darling rectum.\n\n\"Johnny!\" Nina exclaimed, instinctively lurching forward. The initial protrusion feeling so shocking, so intrusive. She quickly recovered though, sitting back down into his lap, forcing his finger up even deeper. She turned to him though to say, \"You had so many swishes!\"\n\n\"Yea, but a couple of dingleberries, too,\" Allan pointed out. He wasn't being seriously critical though.\n\nJohn just laughed.\n\n\"Well, I think he's a very good cornholer,\" Nina said, defending her man. Well, maybe it was a little premature to refer to him as her man, but he did have his finger up her butt. That must count for something. And, she was indeed enjoying his wiggling, squirming, and twisting finger up her rectum. She felt such an urge to give him a kiss, but she knew that would draw considerable reaction, and unwanted attention. \"He should get some sort of prize, shouldn't he?\"\n\nJohn modestly replied, \"I think I've got everything I could possibly want,\" smiling at Nina as he worked his finger in and out of her butt.\n\nHe really, really deserved a kiss, Nina felt. But, she knew she couldn't do that. She could at least though give him something else. She twisted around on his finger, leaned forward, and reached down to her purse to extract her cell phone, along with her lubricant. With her body still bent over she slipped the lubricant under her skirt where it quickly found John's left hand. She then lifted her butt from John's lap, ostensibly to show her friends some of the pictures she took with her cell phone.\n\nJohn at first followed her butt with his finger, but he realized that was too risky. And, it appeared that perhaps she wanted something else. She wasn't handing him the lubrication for no reason at all. Perhaps she simply wanted additional lubrication. That would be understandable. Or, perhaps she wanted him to try to get two fingers up inside? He would be willing to give it a shot.\n\nBut, to make sure he understood precisely what she wanted, as Nina was drawing most everyone's attention to a picture on her cell phone, she reached back behind her, beneath her skirt, and felt around blindly in John's lap until she found his zipper, and then pulled on it.\n\nIt was a rather poor position in which to pull down a zipper, but John got the message, and his heart skipped a beat. She really wasn't serious, was she? Wouldn't this be far too risky?\n\nBut, right now Nina was the boss and, besides, his cock was dying to get into the action. His cock was certainly far more interested in her derriere than his finger. He quickly took over for Nina and brought his zipper down, albeit a bit more carefully and slowly than she would have done, as the sound of a zipper can be pretty telling.\n\nNina though did her part by spreading out her skirt, providing him with ample cover for his task.\n\nJohn was again reminded of his mistake in wearing briefs. But, fortunately, Nina's skirt was large enough that he was able to work his cock out through the flap and fly without too much of a struggle, and once out his dick sprung into the air, slapping Nina right on her right fanny cheek.\n\nShe giggled at the rather intimate contact, but maintained her concentration on showing her friends the many pictures she had taken.\n\nJohn then used both hands to undo the cap on the lubricant, squeeze out a good dollop on the fingers of his right hand, which was kind of hard to estimate though, given that he had to operate only by feel. He closed the cap, slipped it into a pocket with his left hand while applying the lubricant all around the crown with his right.\n\nJust doing that felt really, really nice. He had never masturbated with lubrication on his fingers before, and as soon as he began to apply the smooth, slick, slippery stuff he realized what he had been missing for many, many years. Well, he would correct that later, but he probably wouldn't need to with Nina now in his life.\n\nWhen he felt he was ready he positioned his cock with his right hand, and gently pulled on Nina's thigh with his left, signaling that her throne was now prepared.\n\nNina's heart was racing as she slowly sat back down, down to receive the thick, swollen head of John's truncheon up her butt.\n\nIt was not an easy maneuver, particularly as it had to be done by feel, with a partner with whom she had no prior experience, and without stirring the suspicion, let alone the awareness, of everyone else in the car. However, Nina's butt hole was actually easier to penetrate in this position than her cunt. It was in a rather nice location to receive his cock.\n\nJohn adjusted his dick a bit as Nina sat back down and, for a moment, she just sat on the tip of his cock, perching her anus on his crown, enjoying the feel of his mushroom tip kissing her asshole, waiting very impatiently to be allowed inside. She even wiggled around a bit, teasing it for awhile, making him think that perhaps he wasn't even going to get inside, that she wasn't ready for anything like that.\n\nBut, she wasn't that patient herself. She so much wanted to receive John where she wanted a boy, and him, the most. Plus, the car suddenly hit a big bump and with the crown firmly positioned, Nina just sat down hard on it and jammed it up inside, being now truly impaled on a stake.\n\n\"Ohhhh!\" Nina loudly groaned at the feel of the thick slab of cock being driven up into her ass.\n\n\"Nina, what's wrong?\" Kristi was concerned. She didn't look or sound so good right now. She wondered if perhaps all of the excitement of the match was overwhelming her.\n\n\"Oh, nothing, nothing, Kristi, I'm fine,\" she gasped. \"I guess I just got kind of overexcited and everything.\" She brought her fingers to her lips and caught her breath, trying to get used to, comfortable with, John's thick cock stuck up her butt. The professor's cock was perhaps bigger, but he had been so much more cautious and careful. Nina had never plunged something so rapidly up her derriere before.\n\nJohn was quite surprised himself, but he wasn't complaining. Nina's ass felt so much tighter than Dr. Lowenstein's. He wondered if Dr. Lowenstein, as a doctor, had to take a lot of cocks up her ass, at least through the course of her work. And, of course, Nina was much younger than the doctor, as well as considerably more petite. His cock felt like it was being crushed within the thick, fleshy, constricted cave of his dream, which was precisely correct. And, that felt awfully, awfully good.\n\nWith some trepidation but with even more excited anticipation Nina leaned forward and brought her bottom up and off John's lap, partly off his cock. She then suddenly sat back down, driving it again hard up into her butt. She repeated this movement again and again, all the while turning her body to the left and then the right, showing the persons to her left, and the persons looking from the front seat into the back, various pictures in her camera. To the other persons in the car she was simply getting up and down off John's lap to show them pictures, although the discerning eye might see her instead as openly fucking John's cock with her ass, as that was again precisely what she was doing.\n\nAllan, to their immediate left, did wonder how John was tolerating Nina's bouncing bottom, as she could very well be banging her butt against his balls.\n\nJohn of course didn't consider it to be the least bit of a problem. His only difficulty was restraining himself from matching the bounces with his own pelvic thrusts. But, he knew that would be way too telling. So, he remained largely passive, albeit enjoying immensely the intense stimulation on his dick, like he was essentially being jerked off with Nina's ass. He did though help by making sure Nina's skirt continued to provide good cover, as well as using his hands to occasionally caress or squeeze a cheek, and even her clit when the opportunity briefly arose.\n\nNina continued this for sometime. How could she not? It was a little risky, perhaps, but who would really reach the conclusion that John's cock was stuck up her ass, sliding in and out. Well, more like jamming in and out, even with the lubrication. And, John's cock felt so good in there. It even felt better than the professor's, her first real dick up her ass. That was perhaps because it was John's cock, the dick of a boy she really liked, and liked even more now that he was actually fucking her up the ass. She realized that he might indeed be the boy she would someday marry, and she gave him a little squeeze of affection with her sphincter as she slid back down into his lap, his cock riding up into her ass.\n\nNina momentarily stopped her bouncing, shifting to just holding his dick deep up inside her. That did give him a greater opportunity to pinch and rub her clit, which Nina enjoyed almost as much as the cock up her ass. \"This is so cool,\" she gasped.\n\n\"You're telling me!\" Tricia replied from the front seat, assuming she meant the victory.\n\n\"Watch out!\" Joey warned, \"bumpy road ahead!\"\n\nThe timing could be better and John took the opportunity to do a bit of mild, subtle thrusting of his own, along with the diddling of Nina's clit. He could feel the moisture from her cunt sliding down onto his thighs and balls.",
        "Nina met John's thrusts with some squeezing of her sphincter and a bit of twisting and squirming of her bottom, as well as a bit of bouncing with the bumpy road. It was again risky but they weren't cornholing champions for no reason at all.\n\nNina could feel herself getting real close to an orgasm, her breathing accelerating, her heart racing. \"I'm just so excited,\" she yelped.\n\nJohn increased the rapidity of his clit diddling and started thrusting harder against her, like he was trying to bounce her bottom in his lap.\n\nAllan exclaimed, \"John, what are you doing?\"\n\n\"I'm just returning the favor,\" he responded, rather truthfully, and then felt his cock suddenly twitch and jerk in her rectum. He jammed his cock hard up her butt as it blasted a load deep inside, now experiencing his second gusher of the day, and this one even more intense and satisfying.\n\n\"I just love cornholing!\" Nina loudly announced to the world, or at least to everyone in the car, her body and mind being swept away by her own orgasm. She grasped and squeezed the top of the seat in front of her with her right hand and John's thigh with her left, trying to steady herself, trying to not let her body twitch and shiver with the waves of her spasmodically shuddering climax sweeping and coursing through her body.\n\nEveryone laughed at Nina's loud exclamation. It did sound a bit of an incongruous thing to say, and to say so boisterously in public. But, everyone did feel the same way, sort of.\n\nAnd certainly did John. He was the only one not to laugh. He instead buried his face into Nina's back, hiding the scrunching of his eyes, lips, and cheeks with his gushing climax, losing himself in the pleasure of his dick twitching and spitting up into Nina's bottom, filling her rectum with his seed, his cum, his slop. It just didn't seem to end, to even diminish, for quite some time. He had apparently built up quite a bit from all that lap dancing flirtation and cornholing.\n\nNina could feel her man's gun repeatedly shooting off her into her ass, and she smiled through the bliss that engulfed her body as the deluge of John's balls inundated her rectum. There was really nothing better than to orgasm with a hard, twitching, jerking, spitting cock up her butt. She really did indeed love cornholing.\n\n- - - - - - - - - - - - - - - - - - - -\n\nIf you enjoyed this story you might want to try \"It's not like it's real sex,\" \"My little brownie cupcake,\" and/or \"The virgin bride.\" And, please do take the time to vote (particularly if you enjoyed it!), as doing so is really very encouraging and helpful."
    ],
    "authorname": "Charles Petersunn",
    "tags": [
        "mature",
        "first time"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/the-cornhole-championship"
}