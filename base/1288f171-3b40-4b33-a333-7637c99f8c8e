{
    "title": "Senior Year Memories Ch. 35",
    "pages": [
        "(Usual Disclaimer Time: Even though this story almost entirely takes place in a high school setting, all the characters in this story are 18 years old or older, and since we're living in the wide wonderful world of porno-land here, where clich\u00e9s roam free and things might get a little unrealistic from time to time, please remember it's all in good fun. This story is highly serialized, and though it's not 100% necessary to have read the whole story up until this point to enjoy the content of the chapter, it's definitely advisable to understand the ongoing plots.)\n\n(Author's Note: As always, I want to give special thanks to fellow Literotica author Lil_kitty for her excellent work as my editor and acting as a second set of eyes on this chapter, and for letting me know what did and didn't work; if you get a chance, please check out her work and drop some stars if you enjoyed, she writes some very hot and fun stories. And of course, I also want to thank my wonderful patrons; your support and input really help make this possible, as did your votes ensuring Kaitlyn's appearance and the setting of the main sex scene in this chapter.)\n\nPreviously, on Senior Year Memories: It's been a long time coming, but 18-year-old Ryan Collins finally took pretty, soft-spoken art student Jennifer Cage under his wing as his \"apprentice.\" Though hesitant at first, she soon quickly turns into a natural, embracing her sexuality with Ryan's help. After a few good rounds of sex, Ryan invites his girlfriends, Josie Wong and Brooke King, and next-door neighbor, Alice Talbot, over to help Jennifer explore her budding bisexuality, something all the girls are more than happy to embrace. After fielding texts from Kaitlyn and Leah, he continued to embrace the spirit of the lust spell he performed earlier in the month and contacted his friend Sarah Kent, who had last month suggested Ryan hook up with her single mother, Viola Kent.\n\n***\n\nIt all started a little over a month ago with four simple words:\n\n\"I need your help.\"\n\nSarah Kent, a cute, blonde and very shy band geek who I'd watched ascend to confident, fun-loving cheerleader over the course of this year, said these words to me in the midst of an orgy, and given the circumstances and how close we were, I thought there would be no way I could turn her down.\n\nUntil I found out that she wanted me to fuck her mother.\n\nI know, I know how it sounds, but it's not as weird as it sounds. Having been raised by a single mother, Sarah and her mom had become best friends, and being the holiday season at the time, she was looking to do something nice for her mother. It was one of those ideas that always seemed just a little crazy to me, but never *too* crazy. It had been in the back of my mind for a while, especially the more I heard about Viola Kent from the other members of her \"book club\" (actually just an excuse for the moms of town to get drunk and fool around with each other when their husbands couldn't get the job done). Not long ago, I'd also seen Viola for the first time and found her unusually stunning and, well...\n\nI wouldn't have done this if I thought it would threaten my friendship with Sarah, and she had told me she wouldn't have brought it up if she thought it would hurt things between us. This, mathematically, should've been fine.\n\nNonetheless, that didn't mean it wasn't at least a little weird when Sarah came over one early February morning before school with coffee, donuts, and a need to make a plan.\n\n\"So, I'm going to be out for the evening,\" Sarah said, sitting down at the kitchen table as she munched on a frosting and sprinkle-encrusted donut. \"Hanging out and pulling a slumber party with Josie, Mia, Fatima and Hope since it's been for-fucking-ever since the five of us have really spent time together. Should give you plenty of time to work your magic with my mom.\"\n\nNow, Sarah Kent was someone who I found to be very, very cute, and even with her customary hoodie, jeans and horn-rimmed glasses this morning, I still found her very, very cute. I knew Sarah to be exquisitely flexible and up for pretty much anything when it came to sex, and had enough pictures in my phone's album to prove just how freaky a little slut she could be.\n\nAwkward as it was, though, it was because I was planning this plan to seduce her mother that I found it as difficult to look at Sarah as it was, right now. I mean, I'd fucked a friend's mom before (and fucked said friend, too), and that had led to a pretty brutal period of my life, so it was likely I was just being exceedingly cautious.\n\n\"I just need to know... you're sure this is something that you want? I mean, completely and utterly, unreservedly, that if I go through with this, nothing's gonna be fucked up between us, right?\" I asked.\n\nSarah smiled, reaching across the table and touching my hand tenderly. \"I'm seriously fine with this, Ryan. I mean it. I love my mom, and she works so hard and doesn't have nearly enough time to have fun and... yeah, I really think you could be something good for her.\"\n\nThough it didn't make everything better, hearing this did take some of the wind out of my uncertainty. Looking into her bright green eyes, I couldn't help but feel her sincerity and kindness... and, yeah, it was hard not to say yes to pretty much anything she wanted.\n\n\"Alright... I just wanted to be sure,\" I said.\n\n\"Thanks,\" Sarah replied. \"And I'm fine with this, really; it was my idea, after all.\"\n\n\"Yeah, but we all have bad ideas we wind up reconsidering, so, I didn't want this to be one of them for you,\" I said.\n\n\"It won't be,\" Sarah said.\n\nFeeling more confident, especially as the coffee kicked in, I munched on a donut and asked, \"So, any intel you can offer me on your mom?\"\n\nSarah grinned, then nodded. \"Well, the mom I know and the mom she's been hiding from me are two pretty different people. You've met her, you know she's got the whole *cool mom* vibe going on, and that's not just for you, that's just how she is. She's pretty damn laid-back for someone who works as many jobs and side-hustles as she does, but I know that it's got her pretty damn tired a lot of the time, too. That's the side she shows me.\"\n\n\"And what about the other side?\" I asked.\n\nSarah bit her lip, nervous. \"Well... you already know about the sex toy parties she hosts at her book club... and the stripperobics class she teaches. I think... and I don't know this for sure... that my mom used to be a stripper when she was in college.\"\n\n\"Really?\" I asked, surprised. It shouldn't have been that surprising, because she was stunning and had the body of a dancer, but it still somehow hit me.\n\n\"I'm pretty sure. She's too good at what she does in that pole dancing class without taking any classes to learn how to do it, and it would probably explain why Dad left her for a stripper if he's got a type, so, yeah, I think she's got that in her past. I know she had a lot of fun in her youth, the way she talks about her past, whenever she's willing to talk about her past, but ever since Dad left it's like a switch has flipped. She's always trying to be ultra-responsible in front of me, and I haven't really seen her around guys, though I know she's still interested by the way she looks and... well, I think she could really use some firm, fun, dick,\" Sarah said.\n\nI grinned, taking another sip of my coffee. \"Well, if there's anything I can offer in ample amounts, it is firm, fun, dick.\"\n\nSarah shivered in her seat, then focused on her donut when she said, \"That's an understatement.\"\n\nYeah, if there was ever a time for a cocky smirk, this was it. On any other day, I would have likely done terrible things to Sarah Kent here and now, but given my after-school plans, that didn't feel right.\n\n\"So, got any plans for Valentine's Day?\" I asked.\n\n\"Got a date with Alex from the soccer team,\" she said. \"He's not the smartest, and he's weirdly into talking about his plans to be a crypto investor after high school, but I have it on good authority he's good with his tongue. Not as good as you, but still good, so, should be fun for the day at least.\"\n\n\"Happy to hear it. Valentine's is a good day to get laid, I would think,\" I said.\n\n\"And you?\" she asked.\n\nI took a breath. This was a plan I was still hammering out all the details to, and one I had only voiced to Josie and Brooke so far, but it was one I was excited to pull off.\n\n\"I've got a lot of invitations from a lot of girls without dates... I'm going to hit up a good number of them on the day of, give my mouth and fingers a serious workout,\" I said.\n\n\"Busy day; lucky it's on a weekend this year,\" she said, nodding in agreement. \"Why only your mouth and fingers?\"\n\n\"Because I plan on having dinner and some more vigorous fun with another lucky lady, before retiring for the evening with Josie and Brooke,\" I explained.\n\n\"Busy day,\" Sarah repeated. \"But it sounds like you'll have fun. And you're lucky to get to end things with Josie and Brooke. They've both been really excited for their surprise they've got for you.\"\n\nI raised an eyebrow, questioning. I'd heard some mentions of Josie and Brooke having been working together on a surprise for me, but aside from them getting a motel room nearby for the occasion, I didn't know any serious details about it.\n\n\"Do you know anything about this surprise?\" I asked.\n\n\"Maybe...\" Sarah said, playful. \"But if I shared, it wouldn't be much of a surprise, would it?\"\n\nI grumbled, also a little playful, enough to make her laugh a small, cute laugh.\n\n\"You're lucky I've got other plans today...\" I said, my voice low and promising.\n\n\"And if we want to keep to them, and for you to show my mom a good time, we should probably change the subject, right?\" she said, her voice suddenly less playful.\n\nSarah was right, of course. I straightened myself up and finished my donut, looking in the box she'd brought over for another contender for breakfast.\n\n\"True enough,\" I said.\n\n\"Like, we could talk about Jennifer! How have things been going with Jennifer?\" Sarah proposed.\n\nI smiled, thinking about the progress I had been making with Jennifer Cage these past days. I didn't know how much was okay for me to share or not, but since I knew Sarah and Jennifer were somewhat familiar with one another, it didn't seem like a bad idea to give some slight details.\n\nI said, \"Well, things with Jennifer have been moving along... quite well, I'd say...\"\n\n***\n\nWalking through the halls of Regan Hills High at lunchtime with Jennifer Cage by my side brought back a lot of good memories. While before, the curvy art student who favored paint-splattered overalls and a tightly packed ponytail looked like one of the meekest people you'd ever meet, the girl who walked beside me now had a spring in her step and eyes that looked upon the world with a new, horny wonder.\n\nIt was a look I knew well, because it had been on my face for much of the last few months. Having a lot of sex in a short period of time after losing your virginity sort of had that effect on you.\n\n\"Everyone here... they look different... I'm not crazy, right? There's something different now, isn't there?\" Jennifer said as she looked around the boys and girls of our senior class.\n\n\"It's pretty cool, right?\" I said. \"It's one thing to know that everyone else is having sex, but once you become one of them, it's kind of like it unlocks a world where they don't seem so different from you after all. When that realization first hit me, it was like I finally saw what everything was supposed to look like.\"\n\n\"I like it,\" Jennifer said.\n\n\"I'm happy to hear it,\" I said as we ambled down the hall toward a cluster of drama kids who had gathered around a nearby poster. \"I guess the question now comes down to, what do you want to do with it next? Me and Josie and Brooke and Alice are one thing-\"\n\n\"Oh, you four are a *lot* of things,\" Jennifer said with a shiver and a grin.\n\n\"Fair,\" I replied. \"But, if I've learned anything, while a lot of these situations can fall into your lap with the right connection, you're going to have to *want* them to happen and put yourself in the positions needed to make it happen. Luck can only take you so far; drive, on the other hand, can take you much, much farther.\"\n\nShe licked her lips, nervous. \"Brooke offered to introduce me to some of her friends, but I don't know if I'm ready for that yet.\"\n\n\"What kind of friends?\" I asked.\n\n\"Cheerleaders. Some guys on the football team. I mean, a lot of those guys are hot, and you've done most of the girls on the squad, so you know how hot *they* are, but I don't know if I've got the confidence to go that far yet,\" Jennifer admitted.\n\nI nodded, understanding. \"Alright, one step at a time. Let's try to find someone more your speed...\"\n\nI scanned the hallway, looking back toward the group of girls collected by the poster next to the drama room. It advertised that spring musical auditions would be happening quite soon, without saying what exactly that play might be. From my association with Mrs. Harker, the drama teacher, I knew that there was some controversy with the PTA behind the scenes over what musical might be considered \"appropriate\" for our school, and that the play the students wanted was unlikely to come about.\n\nThat, however, was another problem for another time.\n\n\"...how about a drama kid?\" I asked.\n\n\"Aren't they too much drama?\" Jennifer asked, jokingly.\n\n\"Actually... I haven't had a lot of experience with them,\" I admitted. \"They might be.\"\n\n\"I know some of them, they're not all bad... and there are definitely some cute girls...\" Jennifer admitted.\n\n\"Like?\" I proposed, wanting to get her to talk about her interests.\n\nNervously, she said, \"Well... Chloe Marcus is sweet, in her own way. And really smart, too, when she's not so nervous. I think she might be really cute.\"\n\nPetite, blonde, Chloe Marcus definitely seemed Jennifer's style. An overachiever and constant worrier with glasses that nearly matched Jennifer's own, I could have easily seen the two of them together. I wouldn't have guessed that Chloe might be one of the drama kids given her intense focus on academics, but, this school offered all sorts of surprises like that.\n\n\"Chloe is a start. Who else do you think you could have fun with?\" I asked.\n\nScanning the group, Jennifer returned. \"Doreen.\"\n\n\"Doreen Bell...\" I said, letting the name roll over my tongue. \"An interesting choice.\"\n\n\"Well, *she's* interesting,\" Jennifer replied.\n\nThis was true enough. A shorter, curvier girl and reigning class clown of Regan Hills High, she was more outgoing than someone I would have expected Jennifer to look after. Though there was a similar look between them, they couldn't have been any more different personality-wise, and that was enough of a surprise for me. Nonetheless, Doreen could manage a broad, bright smile that lit up her pretty face, and I saw the potential there.\n\n\"Alright, alright, not a bad choice then... let's go one more... who out of everyone there do you think might be the most fun to just get down and dirty with?\" I asked, smiling and enjoying the chance to prod her into speaking while getting my first real chance to eye the Drama Club girls myself. There were some definite stunners among them, like tall and leggy Cecilia Dunwich, a black girl with blonde hair that went to her mid-back and a tight ass to kill for, or Faith Serrano, a Latina who was easily one of the bitchiest and flat-out most gorgeous girls in school, and some other less obvious choices like the blonde, athletic and wannabe stuntwoman Amy Temple.\n\nAny of them would have made sense by my eye.\n\nJennifer, however, had a different eye.\n\n\"Olivia,\" she said, pointing to the pale, dark-haired girl wearing a leather jacket over her hoodie and gray scarf. The student head of our school's stage crew, I knew her to be both a consummate overachiever and a sarcastic asshole who wandered around with an impressive chip on her shoulder. She was smart, and made an impression whenever she was called upon in class, but I never would have looked that hard at her before. I mean, she did have nice eyes, and some very full lips and... okay, I could see where Jennifer was going at a bit of a glance, not that I didn't need confirmation.\n\n\"Olivia?\" I asked, trying not to sound mean but definitely unable to hide surprise. \"Olivia Raine-Goldblum?\"\n\nJennifer nodded. \"She's smart. She's funny. She doesn't take shit from anyone, and I've seen her in the showers after gym and, well... she's more physically blessed than you'd expect.\"\n\n\"Huh,\" I said, giving the disgruntled-looking Olivia another glance. \"Good to know.\"\n\nJennifer smirked. \"I thought you might appreciate the information.\"\n\n\"What I appreciate more is hearing you talk like this,\" I said, proud. \"Good to know you've got some options out there that you can have fun with.\"\n\n\"Looking is one thing. Doing something is something else entirely,\" Jennifer said.\n\n\"One step at a time...\" I repeated.\n\n\"If you're thinking about trying out for the play, I would highly recommend *against* it.\"\n\nThe soft, lightly sensual voice came from behind us, startling Jennifer. By now, I was getting increasingly used to surprise visitors announcing themselves behind me, so I was reasonably less shocked when we were confronted by 18-year-old senior class president, Sabrina Singh. With a face as stunningly beautiful as hers, with the softest-looking brown skin, pouty lips and big, soulful dark eyes, you would have expected her to be delicate. This would have been a mistake, however. At 5'9\", this Indian-American beauty was an utter pitbull, accumulating extracurriculars and inserting herself around school in any way that might improve her chances of getting into a good school. With long black hair tied in a braid that rested over her shoulder and an athletic frame that carried well her large breasts and round ass, she was enticingly imposing, even if she looked tired more often than not. Today she looked particularly haggard, but in her loose, dark skirt and tight red t-shirt that showed off her abs (and belly button piercing), she looked stunning as ever.\n\n\"Far be it from me to advise against extracurriculars, naturally,\" Sabrina explained, pointing to the rolled-up posters under her arm. \"But, realistically speaking, if you are not well situated with Mrs. Harker's cult of drama kids, it would be difficult to infiltrate at this point. If you were on the lookout, however, for some clubs that would look good on your college applications, I can recommend a number of organizations around our school that are still looking for members.\"\n\nShe sighed, a look of great exhaustion on her face.\n\n\"I'm kind of busy now, but I am interested in joining some clubs... can I give you my number to text you for information?\" Jennifer asked, only a trace of her typical meekness in her voice.\n\nI shot her a glance, trying to see I she might have been hitting on Sabrina as our class president took Jennifer's number down, but it looked like she was actually legitimately interested in joining clubs and putting herself out there.\n\nI nodded approvingly, before turning my attention to Sabrina. I knew her well enough to exchange pleasantries in class or the hallway, but hadn't really ever talked to her. Though her beauty was certainly intimidating to a point, I was pretty sure I could hold my own by now.\n\n\"I don't really have a lot of free time these days, with the paper and tutoring and all, but thanks for the offer,\" I said.\n\n\"Those are good, but you can always do better if you want to get into a good university. Don't dismiss that out of hand... but the warning about the drama kids certainly still stands,\" Sabrina stated.\n\nI rubbed a hand through my hair, looking from Sabrina to the students milling around the poster and back. I knew from experience that Mrs. Harker was on the intense side, but running a cult of the drama students?",
        "\"Is Mrs. Harker really that bad? She seems decent enough to me,\" I said.\n\nSabrina eyed me briefly, smirking slightly at a silent secret that she rather enjoyed. \"Yes... I gather that would be your assessment.\"\n\nI freaked out for a moment, wondering if she was going to spread any information on what Mrs. Harker and I had done, but it only stayed at the silent smirk.\n\nSighing, she nodded, then began to walk away from us, \"Nevertheless, it's never too late to start planning for your future! My offer still remains!\"\n\nI watched her walk away appreciatively for one moment, before I felt a playful elbow in my side. Jennifer said, \"Certainly seems like she could use some relaxation in her life.\"\n\n\"She might...\" I said, considering, \"But not today. I've got plans for this afternoon.\"\n\n\"Yes, but you never know where life might take you, right? Couldn't she just use a little...\" Jennifer joked, thrusting her hips forward and making a joking grunting sound.\n\nI rolled my eyes, laughing as I continued down the hall. Jennifer kept up with me.\n\n\"What? I was just having fun,\" she chided.\n\n\"I think I created a monster,\" I said.\n\n\"A good kind of monster?\" Jennifer asked.\n\nTaking my chance to elbow her back, I said, \"The best.\"\n\n\"Hell yeah,\" Jennifer replied, pulling me in so she could kiss me on the cheek. \"Still, doesn't help me fill up my afternoon.\"\n\nI thought about this. \"Alright, apprentice, let's try a homework assignment, then.\"\n\n\"Really?\" she asked, intrigued. \"What do you have in mind?\"\n\nLooking up and down the hall, I said, \"I want you to find someone... someone you find really hot... and try to make a connection. You don't have to seal the deal or anything, but put yourself out there, give it a try...\"\n\nJennifer looked a bit nervous at the suggestion, but she took a deep gulp and said, \"Okay... okay. Okay.\"\n\nShe didn't sound very okay about this, and while getting laid was one thing, it didn't exactly help someone with all the social elements that came with a sex life at this school. I was working on a speech where I could detail this for her, but before I could, we were interrupted.\n\n\"Hey, Ryan!\" a man called to me.\n\nFrom down the hall in front of us came a couple I'd become pretty familiar with over the past couple months: Peter Nixon and Sasha Pearl. Peter was a football player and ladies' man, big and black and charming as all hell, while Sasha was a nerdy and glasses-wearing, but damn cute, redheaded cheerleader. I'd been tutoring Peter recently, while Sasha and I had had some... well, creative fun over New Year's at Dakota Lewis' house. Thankfully, Peter was not one to hold grudges on such things, as the two of us had become fast friends over the past weeks.\n\n\"Hey, guys,\" I said, waving for them as they approached. Jennifer couldn't take her eyes off of Peter, and she might have even licked her lips.\n\nInteresting.\n\n\"Hi!\" Sasha exclaimed, looking from me to Sasha. \"You're Jennifer, right?\"\n\n\"Yeah,\" Jennifer said, a little shyly at the taller cheerleader.\n\n\"You and Ryan are friends?\" Sasha asked, curiously.\n\nWhen it seemed like Jennifer wasn't ready to answer, I spoke up, \"Yeah. I've been... tutoring, Jennifer lately.\"\n\nPeter knew well that I had my hands full tutoring him, Kaitlyn and Jess, so he only gave Jennifer one good, long look before flashing me his charming smile. \"That's awesome. Ryan's a helluva 'tutor', isn't he?\"\n\nJennifer blushed slightly. \"Oh, he's been great.\"\n\nSasha looked around the group, amused. \"So, we're talking in code now? Can I talk in code too? Or would that make you uncomfortable?\"\n\nShe addressed this question quite genuinely at Jennifer, who answered only by blushing a whole lot more.\n\n\"Oh no!\" Sasha said, patting Jennifer on the arm comfortingly, \"I didn't mean to do that! It was a joke, I swear, a goodhearted and thoroughly unloaded one! I'm so sorry!\"\n\n\"I'm still working on my joke threshold,\" Jennifer said back, looking from Sasha to Peter. \"And no need to feel sorry, I'm still learning.\"\n\n\"Give it time, you'll catch up quick around here,\" Peter said smoothly.\n\n\"Yeah?\" Jennifer asked. At that, Peter grinned, and this time a smile joined her blush.\n\nI could sense an opportunity here, one that I wanted to tee up to see if Jennifer would take it. \"Say, Peter, Sasha... you two doing anything after school today?\"\n\n\"We were gonna grab a bite to eat, then hang out for a while,\" Sasha asked. \"Why?\"\n\nI looked at Jennifer, who had a faintly panicked look in her eyes, but one I wanted to help her past. \"Well, I've been keeping Jennifer company the past few days with our tutoring sessions, but something came up for me today and I won't be around to help her out like I usually would. Any chance the two of you would be up for hanging out with her?\"\n\nThis wasn't meant to be a specifically sexual invitation, more just a chance to get Jennifer comfortable around other people I knew she was attracted to. I could already see the sparkles in her eyes for Peter, and knew that Sasha could be a lot of fun for her too, and she needed an opportunity to see how she could develop this when I wasn't around.\n\nNow it was just a matter of seeing if they'd want to help.\n\n\"I'm down if Sasha is,\" Peter said with his most charming smile. \"Any friend of Ryan's is a friend of ours.\"\n\nSasha smiled brightly. \"Sure! The more the merrier!\"\n\nJennifer looked at them and me nervously, biting her lip again and looking like she wanted to hide. If she chose this moment to run off, I wouldn't have blamed her. This might have been a bit much for her to process right away, but I thought there was a good chance she could handle it...\n\nBalling her hands into fists and then releasing them, Jennifer said, \"I'd love to hang out with you guys. Thank you.\"\n\n\"Cool,\" Peter said.\n\n\"We'll meet you in the parking lot after school lets out,\" Sasha said, looking at me and raising an eyebrow with an idea of her own. \"Or, do you want to join us for lunch so we can hash out details then?\"\n\nJennifer looked at me. \"You want to join them for lunch?\"\n\n\"Go ahead,\" I said. \"I have to drop something off at a locker, and I should probably be checking in at the Puma Press offices soon, been a bit overdue for that and I don't want Nadia to kill me. You have fun.\"\n\nSmiling, Jennifer nodded and walked off with Peter and Sasha. \"I think I will... thanks!\"\n\nI grinned at her, proud to see her so readily stepping out on her own. I didn't know if she'd get into any mischief with Peter and Sasha, but I hoped she would. Peter and Sasha were good people, and I knew they would be good for fun if Jennifer was looking for it.\n\nI nodded to myself, walking down the twisting hallways of Regan Hills High with a spring in my step as I searched purposefully for a specific locker. Thanks to information I had gotten from Brooke, it didn't take long to find Brianna Roth's locker, and to slip inside the Valentine that I had secreted away in my backpack. Sure, I could have texted her to get my point across, but since she had taken the time out of her day recently to drop a Valentine by me, I was more than happy to return the thought.\n\nIt wasn't every day you invited a girl to dinner on Valentine's Day, after all.\n\nI know what you're thinking, and I'm going to answer it now: why was I not doing dinner with my girlfriends, Brooke and Josie, for Valentine's Day?\n\nSimply put, Josie and Brooke were the people I was going to end Valentine's Day with. I had told them about my plans for the month, and some of my ideas for the day itself, and they encouraged me to spread the love (or at least, lust) around, so long as I ended things with them. They had gotten a room at a nearby motel for their \"big surprise\" they'd both set up, and I knew I was supposed to show up there by 8 pm so we could enjoy whatever debauchery they had arranged. Until then, I could get up to whatever trouble I wanted.\n\nBrianna Roth had been a girl I'd been meaning to do something with for a very long time. One of Kaitlyn's friends, Brianna was one of the first to know of my \"gift\" outside of Kaitlyn. She'd hit on me during those early days of September, dropping a pen and asking me to it up, giving me a sweet view up her skirt as she sat at her desk. Luck and timing had prevented us from ever fully hooking up, and while I had gone down on her in a disused art classroom, I wanted to do more.\n\nAnd so, knowing that she was currently single, I wanted to take her out on Valentine's for dinner and... hopefully, quite a bit more.\n\nSmiling, satisfied with my plan, I made sure that I'd slipped the card thoroughly into her locker before walking away.\n\n\"That isn't your locker...\"\n\nI grinned at the sound of her voice. \"No, it isn't. That a problem?\"\n\nI turned to face Kaitlyn Pruitt, smiling as if I hadn't seen her in ages. She looked good. Really good. Her skin was still as soft and lightly tanned as ever, her silky, mid-back length black hair shining even under the shitty light of our school hallways. Today she wore a light, open jacket that exposed the tight, midriff-baring green t-shirt that barely concealed her massive tits, while her jeans were as tight as ever, accentuating her round ass and cheerleader's legs. Her pouty lips were curled in a playful grin, though still had a hint of her usual resting bitch face, while her eyes... big and brown, they looked at me with the best kind of \"up to trouble\" look I'd come to love from her.\n\n\"I guess it depends on what you're doing. Was that a Valentine?\" Kaitlyn asked.\n\n\"It is,\" I said.\n\nShe continued, smirking cockily, \"And does that mean that you and Brianna are finally gonna fuck? Because she's been wanting some of that cock since I first told her about you, and you've-\"\n\n\"Been busy,\" I shot back. \"And I don't know what is going to happen, but if sex is on the table... well, I won't say no.\"\n\nKaitlyn nodded. \"Good.\"\n\n\"Good,\" I replied, walking down the hallway. I didn't want to leave Kaitlyn, but I did want to show her that I was willing to control the course of our interaction. She was surprised for a moment, but quickly caught up with me.\n\n\"So, Brooke tells me that you'll be spending Valentine's Day going to the dateless and bringing some 'joy' into their lives?\" Kaitlyn asked.\n\nI nodded. \"And?\"\n\n\"And...\" Kaitlyn said, trailing off, before bringing the conversation around to what she clearly wanted. \"...and I don't have a date, and could use a little of that joy, too.\"\n\nShe said this with her usual arrogance that she put on in public, but then leaned in and dropped to a softer, more genuine tone, \"If you've got the time, that is.\"\n\nI smiled. This was more the Kaitlyn I'd come to know over this year, the one who could get past her bitchy mean girl shit and be the friend she was capable of being before all the shit started.\n\n\"Walk with me?\" I suggested.\n\n\"Of course,\" Kaitlyn said as I led her to a much less active hallway.\n\n\"So, how is it you, Miss Hot Shit Gorgeous Fucking Cheerleader, doesn't have a date for Valentine's Day? Pretty much every guy in our class would give up his left arm to be with you,\" I said.\n\nShe rolled her eyes at me. \"I know it's that easy, but I don't want it to be that easy. Guys... in general, they're not interested in me, they're just interested in... this.\"\n\nKaitlyn waved down at her body, and I couldn't say that I didn't understand the issue.\n\n\"I'm looking for something different, even if it means I need to... cut back on certain exciting, sweaty, activities,\" she continued.\n\n\"I can see where that would be a problem,\" I said, peering around a corner and motioning for her to follow me once I saw the coast was clear.\n\n\"But that doesn't mean I don't still get horny as fuck, and there's only so many things the other girls can do for me. Sometimes a girl just needs a whole lot of dick, and that's where I'd like you to come in,\" she said, bluntly.\n\n\"I'm glad you think so much of me,\" I said, sarcastic and rolling my eyes.\n\nKaitlyn grabbed me, stopping me and pulling me in close to kiss me passionately. Never in a million years would she have done this in an open school hallway before, and even though the one we were now in was almost completely deserted, it still felt like a big deal from her.\n\n\"Ryan... you don't know everything you've done for me... you've helped me understand more about myself than I thought possible, and made me look at who I want to be in a different way. I think the fucking world of you, and I...\"\n\nShe couldn't finish the last thought, instead biting her lip and looking up and down the hall. \"You mean a lot to me, alright?\"\n\nI nodded. \"I'm sorry. It was a bad joke.\"\n\n\"Yes, it was,\" Kaitlyn said. \"But Lord knows I've made worse.\"\n\nKaitlyn pressed herself against me, leaning into my ear as her breasts crushed against my chest. She whispered so softly, so sweetly, that between that and her touch I couldn't help but be rock hard instantly.\n\n\"I want you, Ryan...\" she whispered, her voice low and husky. \"I fucking need you. I need your cock... I need your cum... I need how you make me feel...\"\n\nRealistically speaking, I knew how hard Kaitlyn fucked, and I should have passed. I still had a busy afternoon ahead of me once I got over to the Kent's house, and I probably should've saved my cock so I could stay in fighting shape.\n\nOn the other hand... Kaitlyn Pruitt really, *really* wanted to fuck me.\n\nI cocked my head to the door on the opposite side of the hall of us, the closet next to Mrs. Lynn's classroom.\n\n\"Lucky for you, I know a place,\" I said.\n\nKaitlyn grinned, grabbing me by the hand and pulling me toward the closet.\n\nThe door to Mrs. Lynn's class opened, and out stepped Mrs. Lynn, carrying a couple of folders in one hand. She looked at us, both confused and intrigued.\n\n\"Hello, Mrs. Lynn,\" I said.\n\n\"Hi, Mrs. Lynn!\" Kaitlyn said, looking like she was desperately trying to appear casual.\n\nIt didn't take more than one look at us for Mrs. Lynn to roll her eyes and say, \"Just keep it down in there so you don't have Officer Brandy coming down on your asses, okay?\"\n\nGiggling, Kaitlyn and I looked at one another playfully, and she pulled me toward the closet.\n\n***\n\nIt might go without saying that Kaitlyn and I, well, we couldn't exactly keep it down.\n\n\"GOD, YES! FUCK ME WITH YOUR BIG COCK! FUCK MY SLUTTY CUNT WITH YOUR COCK, HARDER! FUCKING HELL!\" Kaitlyn roared as I did, well, precisely as she requested. Both of our pants and underwear were around our ankles, while Kaitlyn was bent over, hands against the wall as I fucked her from behind. With her shirt pulled up to her neck, her tits bounced wildly as I forced all ten inches of my thick cock roughly into her tight, clutching cunt. To this day, I can't say what exercises those cheerleaders did to keep their pussies so tight with how I fucked them, but Kaitlyn was remarkably adept at squeezing me with seemingly impossible force. Her pussy gripped me with every stroke, seemingly not wanting to let me go while I savagely pounded her.\n\nWith my hands on her hips, I got a great view of her jiggling ass, and even better control over this fuck... but that couldn't stop me from reaching up every so often to grab her magnificent DDs, pinching her nipples and squeezing her soft, bouncing flesh as I fucked her.\n\n\"Yeah, you like that?\" I grunted.\n\n\"I fucking love it!\" Kaitlyn squealed, looking back at me cockily.\n\nGrinning, I reached down and smacked one of her magnificent ass cheeks, pulling an even louder squeal from her.\n\n\"God, you can be such an asshole when you're this cocky,\" she groaned, fucking back against me for all she was worth.\n\n\"And you like it that way, don't you?\" I asked.\n\nTo this, Kaitlyn said nothing, but I took her moan as a good answer.\n\nI thought another spank or two might motivate her to answer, and so I gave her a good slap to each of her magnificent, jiggling ass cheeks to encourage her to speak up.\n\n\"Don't you?\" I repeated.\n\nKaitlyn looked back at me, practically snarling, \"Fuck... you...\"\n\nI grinned, grabbing her hips and fucking her harder. \"Actually, I'm fucking you.\"\n\nShe smirked back at me shortly before her eyes rolled back and her mouth dropped open in a deep moan. I knew Kaitlyn liked it hard, and rough, and I gave her the exact treatment she would cherish. She was skilled at using her body for giving and taking pleasure in the roughest, messiest ways, and I meant to be a good partner in that regard.\n\nAs her eyes fell back into place and she looked back at me with a silent understanding, I could feel that undeniable connection the to of us had. I had had sex with a lot of women this year, forged deep bonds of love and friendship, but what Kaitlyn and I had was its own unique thing. I could not tell you then where this would take us, whether we would be the best of friends or maybe even something more in time, but as I fucked her pussy deep and hard, and the two of us stared practically into each other's souls... I could feel the pleasure growing within me. Physical pleasure, to be sure, but something deeper, something that touched my very being as we reached the end of this carnal bonding between the two of us.\n\n\"Fuck me, fuck me, fuck me, fuck me...\" Kaitlyn groaned, looking deeply into my eyes, her body shuddering with impending orgasm.\n\nI leaned over, reaching around to squeeze her tits with both hands while I whispered in her ear.\n\n\"Cum for me... cum for me... *slut*,\" I hissed, putting extra emphasis on that last word in a way I knew would set her off.\n\nIt worked. Kaitlyn bucked against me, moaning loudly as the orgasm tore through her. I held her closely, still fucking into her as she cried out and her juices gushed down my cock, but soon I couldn't hold back either. Grunting loudly, I buried my cock deep within her pussy, unleashing a seemingly unending torrent of cum into her clutching, milking cunt.\n\nI held her closely, leaning over and kissing her as we rode out our orgasms. As was often the case with Kaitlyn, the savagery of what we could do together when fucking was tempered by a softer, slower aftermath, the two of us making out gently while I softly massaged her tits. It felt good to be pressed against her, my sensitive cock still buried in her pussy as we held close to each other. It wasn't quite the same as it was with either of my girlfriends, but it was close enough that I didn't want it to end soon.\n\nThat lunch was ending soon, however, meant we didn't have much of a choice.\n\nKaitlyn pushed off of me, then fell to her wobbly knees, twisting around and giggling as she took my softening cock into her mouth. She suckled gently, briefly throating me before focusing back on the tip, making sure she got every last drop.\n\n\"That was... wow... I needed that,\" Kaitlyn said, giggling and standing back up on wobbly legs. She tried pulling her thong over her cum-soaked pussy, but if she meant to contain any of our juices, she was failing miserably. If that bothered her, though, she didn't let on.\n\n\"Thank you,\" I agreed. \"That was pretty awesome.\"\n\nLooking down at herself, Kaitlyn laughed, \"You really shot me full of a lot of cum, you know? We keep going like that, one of these days you're gonna get me pregnant.\"\n\nI laughed. \"Yeah... that would be pretty crazy, wouldn't it?\"\n\nPulling her clothes on gingerly, still shaky from our hard fuck, she shrugged and softly smiled. \"I don't know... if I ever wanted to get knocked up... you know, a girl could do worse than you.\"\n\nThis took me for a moment of pause, and, I'll admit, perhaps a brief flaring of fear. It wasn't true terror, but a flash of the unknown and unexpected.\n\nKaitlyn saw this and placed a placating hand on my shoulder. \"Relax, I'm not ready for that, not yet, I was just thinking. It's something I think about sometimes, the future, ya know? It's coming for all of us soon, and I guess I find myself seeing all the ways it could be.\"",
        "\"You're thinking farther ahead than me,\" I admitted. \"I should probably work on that.\"\n\n\"You really should,\" she said. \"Senior year's not gonna last forever. We've all got a future to think about.\"\n\n\"I know,\" I replied, shrugging sheepishly. \"I guess I still hadn't thought a lot about getting anyone pregnant yet.\"\n\nKaitlyn smiled playfully. \"Well, you should keep that in mind; life doesn't run on porno logic forever, and I know more than a few girls who'd be more than happy to get some buns in the oven courtesy of you.\"\n\n\"More than a few?\" I asked, equally intrigued and intimidated.\n\n\"More than you'd think, probably,\" she said, stroking my chin playfully as she finished getting dressed. \"Face it, Ryan; you're hot, and girls are hot for you. Have fun with it.\"\n\nI smiled, pulling up my pants as I tried to straighten myself into some semblance of a human being ready to get on with the rest of the school day. I don't think I was fully successful, but I could manage given the circumstances.\n\n\"Thanks,\" I replied. \"It's still difficult for me to understand that at times.\"\n\n\"Well, if you ever need a reminder, you know I'm around,\" Kaitlyn said.\n\n\"I know,\" I said, taken by a thought I had to express. \"And, Kaitlyn?\"\n\n\"Yeah?\" she replied.\n\nI grinned. \"A guy could do one helluva lot worse, too.\"\n\nSmiling, and without saying a word, Kaitlyn approached me, threw her arms around me, and kissed me deeply.\n\n***\n\nThere are things in life you can completely prepare for, and there are things you can only do your best to get ready for. I think trying to seduce one of your best friend's hot moms is usually going to fall into that latter category, because there's only so much you can predict. Everything beyond that is a minefield of potential fun and potential downfall that you can only hope doesn't explode in your face and leave a whole lot of people miserable.\n\nAnd so, I prepared for my journey to the Kent house to the best of my abilities. I went home after school and showered both the school day and Kaitlyn off of me. I brushed my teeth, got dressed in a decent shirt and clean pair of jeans, and hopped on my bicycle to take a leisurely (and hopefully sweat-free) ride over to the Kents'.\n\nWhile I may not have been in exactly the fighting shape I could have been, I was still plenty ready for some fun by the time I reached the house.\n\nIt was an unassuming suburban home, like nearly any other in Regan Hills. The only trait that differentiated it from any other house in town was the simple sign bolted to the gate leading to the backyard that read:\n\nLOVELY LADIES DANCE STUDIO\n\nDANCE LESSONS BY APPOINTMENT ONLY! -- BALLROOM, BALLET, POLE & MORE!\n\nIt could easily be mistaken for an ordinary home in an ordinary town, which made the knowledge that the homeowner threw some of the most debauched parties in town under the guise of a humble book club... well, all the more delicious, really.\n\nParking my bike on the front porch, I rang the doorbell and waited for an answer.\n\nI didn't have to wait long, as the door soon opened on a truly gorgeous woman.\n\n\"Why, I didn't order a handsome young man today...\" Viola Kent said, playful. \"Hello, Ryan.\"\n\nI'll admit, I may have stood there agog for a moment or two in her presence, but when you're around someone as transcendentally gorgeous as Viola motherfucking Kent, you don't have much of a choice. A woman in her early 40s who looked considerably younger, she had the toned, muscular-but-not-bulky body of a dancer. About 5'7\" with a lot of that height being mouthwatering leg, she was a sight to behold in her matching black yoga pants and sports bra that eagerly hugged her firm ass and modest B-cup breasts. Her skin was lightly tanned, a look that worked well for her from her exposed abs to her shoulders and neck that just begged to be kissed... but her face... my god she was stunning. Her eyes were brown and soft, yet alive with playful, knowing energy. Her nose was dainty and pointed upwards, while her lips were stuck in a casual grin that matched her eyes' playfulness. From our one previous encounter, I knew her hair was silky and black and cascaded down to her mid-back, but she had it now held up in a tight bun.\n\nLooking at her like this, I couldn't help but chuckle slightly at how familiar this was, standing on the front porch of one of my friend's sexy moms and getting a look at her in her workout clothes. I was hoping this one would end better, however.\n\n\"What's that laugh for? Cat got your tongue?\" Viola said, her voice sultry and making it very difficult for me to accomplish anything constructive.\n\n\"I'm, uh, sorry, Ms. Kent,\" I said. \"I just-\"\n\nRaising an eyebrow, she cut me off. \"Am I going to have to remind you to call me Viola?\"\n\n\"No, uh, Viola... sorry,\" I said.\n\nTouching my arm, she laughed. \"Come in, please, come in!\"\n\nI followed her inside, closing the door behind me and taking my shoes off at her direction.\n\n\"I'm afraid that Sarah is out for the evening with friends, and that she won't be back for quite a while, I think,\" Viola said, leading the way further into her house. Watching her walk, I couldn't help but notice the sway of her amazing ass, and felt myself getting quite hard at the thought of what that tight body would feel like.\n\nShe continued, \"Of course, you're more than welcome to stay as long as you want; our house is your house and all that. There's soda and snacks in the fridge.\"\n\n\"Thanks,\" I said, wanting to slowly make my way toward discussing why I was here. \"But, actually, I'm kinda here for you.\"\n\n\"Kind of here... for me?\" Viola asked, amused.\n\nI licked my lips nervously. \"Well, yeah. Sarah told me that she'd be out this evening, and she's been worried that she hasn't been around much and that you haven't had a lot of company lately, and was wondering if I might keep you company for a bit while she was out.\"\n\nAs a mix of the truth and a cover story went, I didn't think this one was bad.\n\nViola looked back at me, considering. \"Well, my daughter is a thoughtful young lady, isn't she?\"\n\n\"She's the best,\" I answered, meaning every word of it.\n\n\"Yes... she is. I'm very proud of her,\" she replied.\n\n\"You should be,\" I said. \"Sarah's awesome.\"\n\nViola laughed. \"That she is... but you're not here to talk to me about Sarah, are you?\"\n\n\"I'm not?\" I asked.\n\n\"No... you're here to keep me company, right?\" she purred, playful and enjoying every bit of discomfort she might have caused me.\n\n\"Oh, yeah, right... that's what I'm here for!\" I exclaimed.\n\n\"Good, because I was working some in the studio, and wouldn't mind some company. That is if you wouldn't mind me enslaving you for a little while,\" Viola said.\n\n\"Uh, come again?\" I replied, thoroughly confused.\n\nLaughing playfully, she touched my arm. \"I'm putting together some mailers and packages for local businesses, to see if they'd run my ads.\"\n\n\"Oh!\" I exclaimed, my voice probably hitching up much higher than usual. \"Yes, of course, sure, I'll help!\"\n\n\"Wonderful,\" Viola said, continuing to saunter toward the back yard.\n\nIf I'd meant to be the aggressor when coming here, I was doing a piss poor job of it so far. Then again, I knew there was a fair chance I'd be way out of my league when it came to Viola Kent. The woman was confident, radiated raw sex appeal, and had a cool, laid-back energy to her that could easily fill any room. If I wanted to guide things, I was going to have to step up my game.\n\nWe walked across the back yard into an old, if large, separated garage that she had converted into a dance studio. Without looking like much on the outside, on the inside it had modern enough walls, decent hardwood flooring, and one wall that was taken up entirely by a floor to ceiling mirror (with barre at about waist height), and of course in place of pride against the far wall, a pole dancing pole. When taking into account the lighting and sound rigs she had, it looked like a pretty decent studio, so long as you ignored all of the boxes and rolled up mats and other odds and ends pieces of furniture she had pushed up against one side of the room.\n\n\"So, about that whole 'enslaving' you thing I was talking about...\" Viola said, her voice provocative and her intent vague as she motioned toward a nearby cardboard box. A handful of stuffed manila envelopes leaned against it, clearly a task partially finished.\n\n\"I'm putting together some promotional packages for local and not so local businesses to advertise the studio. Flyers to put up on bulletin boards, pamphlets for motels, business cards, things like that. You'll find one of each of those documents in the box there, and manila envelopes to stuff them into. Would you mind stuffing them for me?\" she asked, looking up at me and smiling sweetly.\n\nYeah, that was a smile that could get just about anyone to do terrible things.\n\n\"Sure,\" I said, sitting cross-legged on the floor and getting started on the task.\n\n\"Good... because I am in desperate need of a stretch, and I need to get this done, but have had far too long a day to get properly excited for stuffing envelopes,\" Viola said, stretching her arms above her head and closing her eyes, giving me a rather wonderful view of her tight body. She looked quite pleased at the simple stretch, and if I'm being honest... yeah, I was rather pleased with the view too.\n\n\"It's my pleasure, Viola, honestly,\" I said, then deciding to toy with my limits. \"Though it sounds like what you really need is a massage.\"\n\nViola arched an eyebrow. \"And you're offering?\"\n\nTrying to sound mysterious, I replied, \"Maybe.\"\n\nPursing her lips, impressed, Viola nodded. \"I can see why my daughter likes you.\"\n\n\"Thanks,\" I said, starting work on putting one of her promotional packages together.\n\n\"I mean it,\" she said, walking up to the barre running along the mirror and easily kicking her right leg up onto it. Viola leaned forward onto the barre, stretching her fingers to the toes of her balanced leg. It hurt me to look at, until I focused on how great it made her ass look.\n\nEasily, she continued to talk to me while stretching, \"Confidence and respect can be rare traits to find together in equal measure in a guy. So often it's just the confidence, and that part can inflate to some... unfortunate places. My ex-husband for instance...\"\n\n\"Sarah hasn't told me a lot about him,\" I admitted. \"But I take it he wasn't a good guy.\"\n\n\"You could say that,\" Viola said, pulling out of the stretch and dropping her right leg from the barre, only to replace it with her left leg and begin stretching again. I'll admit that the view was very, very nice, even if I wasn't getting my envelopes stuffed very quickly. \"The warning signs were there, but I didn't want to see them because he was a smooth talker, and he was so hot. He knew the right things to say and when to say them, and to a girl who'd dated a bunch of losers, he finally felt like a winner. When I got pregnant, he proposed, even though I could see the reluctance. I should've... he told me he'd cheated in previous relationships. I should have known better, and now I do. At least I got Sarah out of it.\"\n\nShe stayed in this position for a moment, before popping out of it and turning to me with a smile. \"What I'm saying is that, from my experience, confidence without decency can lead to some pretty terrible outcomes, and I am pleased to know that you have that decency if you're going to be hanging around this house.\"\n\n\"I'm happy to oblige,\" I said. \"It's not like it's a cultivated thing, it's just there.\"\n\n\"And that makes it even better,\" Viola said, then dropping to sit on the floor while facing the mirror. She spread her legs wide and leaned forward, stretching in a rather delicious pose.\n\nSomething wasn't adding up, though, and I felt compelled to ask, \"You keep saying you know I'm decent... I gotta ask, though, how do you know that? We haven't really talked in any significant way before.\"\n\n\"No, but I trust my daughter's understanding of character; she wouldn't casually invite just *anyone* into her bed,\" Viola said, grunting slightly as she leaned further forward in this stretch. Her ass looked amazing through her tight yoga pants, and I had to remind myself to breathe. \"Ever since the two of you have become friends, I've seen her blossom in ways I've only ever hoped for her, but never dared push her towards. Her shyness has always required patience and understanding, and that would require decency. That's... one of the reasons I know you to be good.\"\n\n\"What's the other reason?\" I asked, looking at her in the mirror, down the hint of cleavage in her sports bra.\n\nShe grinned at me. \"You have your friends, I have mine. They speak well of your character.\"\n\n\"My... character?\" I asked with a teasing smile, knowing well what friends she meant.\n\n\"Oh, very much so. Lauren, Janelle, Wanda, Brenda... they all speak very highly of your character... among many other things, of course,\" Viola said, her tone mischievous but curious.\n\nI grinned back at her, liking where I could take this. \"I imagine they would. Tell me, what do they have to say about me?\"\n\nShe smirked at me in the mirror, enjoying dancing around this subject clearly every bit as much as I did. \"Well, let's see... Brenda and Janelle tell me that you're an excellent student, incisive and intelligent, occasionally rather funny even. Everyone says that you're very kind and considerate, a good listener...\"\n\nLicking her lips, Viola dropped her voice in a beautifully sultry way, \"...and that you're hiding a fucking tree trunk in your pants, and have a tongue and fingers that can make a woman cum very, very hard, as many times as you'd like, and that you like it to be many, many times.\"\n\nI tried to look thoughtful, before confirming, \"That sounds like stuff they'd say about me. Always good to hear, though.\"\n\n\"And would you say any of it's true?\" Viola asked.\n\n\"They're your friends, what do you think?\" I shot back.\n\nShe answered, \"They're my friends, but I know that when a woman's horny, she's willing to say anything. I enjoy girl talk as much as anyone else, but sometimes I like to get it from the source.\"\n\nI grinned again. \"Yeah. I like to think it's all true.\"\n\n\"Interesting,\" Viola said, considering. \"Of course, that doesn't necessarily mean anything either. Back when I used to dance at the club, guys would tell me things all the time thinking they could impress me. I would smile and nod, because they had already paid and that was the job, but I quickly grew a strong bullshit detector. Most other guys who could boast of what you're talking about, they'd set off all sorts of alarm bells... but not you. Like I said, interesting.\"\n\nShe closed her legs, lying back on the floor. Planting her feet on the ground, she bent her knees and arched her hips off the ground in a bridge. It lifted her sports-bra clad breasts into better view from where I was sitting, something I was rather certain she was completely aware of.\n\nViola said, \"Tell me, Sarah didn't send you here to keep me company today, did she?\"\n\nI laughed. \"Actually, she did.\"\n\n\"Did she, now?\" she laughed in response.\n\n\"She said you hadn't had any real male company in a while,\" I explained, \"and thought some might be good for you. So, here I am, to keep you company.\"\n\n\"*Company*,\" Viola said, her tongue rolling over the word in as sexy a way anyone might have ever said the word before. \"Really?\"\n\nI set the envelope I was working on back with the others, finally getting ready to move past this pretense.\n\n\"I'd be lying if I said that I was thinking that I was thinking this afternoon would end with me leaving this place only having stuffed envelopes,\" I said.\n\nViola pulled herself out of the bridge, then sat up and turned around to look at me. \"And what, pray tell, Ryan, do you hope to stuff this afternoon?\"\n\nI licked my lips nervously, wondering if I had it in me to push this to exactly where I wanted it to go. I had started this month embracing some degree of confidence, wanting to push myself out there and be the man I always knew I could be, but in the presence of someone as stunning and powerful as Viola Kent, I found that harder than expected. Could I really say what I wanted to say to a woman like her when the opportunity was teed up so perfectly?\n\nYes. Yes I could.\n\n\"You,\" I said, easily.\n\nShe raised an eyebrow. \"Really?\"\n\n\"Well, first, I hoped I might see what you were capable of with that pole over there,\" I said, finding my voice surprisingly confident. \"Then I hoped we might take it inside where I could show you what *I* am capable of.\"\n\nViola Kent eyed me for a while without moving, her face betraying little past her curiosity and amusement.\n\n\"It's not often anymore that I get hit on by an eighteen-year-old,\" she admitted. \"Not uncommon, but not often. I've never said yes, because if I'm being honest, eighteen-year-olds on average don't know what they're doing.\"\n\n\"You've surrounded yourself by the wrong eighteen-year-olds, then,\" I said back, letting a little cockiness slip into my voice.\n\nViola grinned. \"Maybe I have.\"\n\nShe looked from me, over to the pole, considering. \"You know this is messed up, right? You being my daughter's... *friend*, and everything.\"\n\n\"Is that a problem?\" I asked.\n\n\"It should be. I love Sarah, and while we share pretty much everything, this would certainly be a first,\" Viola said, clearly on the cusp on talking herself either into or out of this.\n\n\"Do I have to remind you that she sent me here?\" I asked.\n\n\"Once or twice might help,\" she replied.\n\n\"Well, she did,\" I said.\n\nViola looked from the pole, back to me again. \"Fine. You want to see what I'm capable of? I'll show you what I'm fucking capable of; you just better be able to back up your claims with more than just words.\"\n\nI watched as she stood up and walked over toward a corner of the room that held a folding privacy screen. \"What, you don't trust Brenda, Lauren, Janelle and Wanda?\"\n\nI kept my tone teasing while she pulled a few items of clothing and a pair of heels from one of the nearby boxes. She said, \"They're my friends, of course I trust them, but that doesn't mean I don't want you to bring your A-game.\"\n\n\"I will,\" I said.\n\n\"Good,\" Viola replied, satisfied with the items she'd picked from the box, then stepping behind the privacy screen. \"Now pull up a chair and get nice and close to the pole. Not too close, I need some room to spin, but if you want a show... you're going to get a show.\"\n\nI was more than happy to see such a show, grabbing a chair nearby and putting it in front of the pole at her instruction.\n\nLooking to make some uncomfortable conversation as I tried to see more of her outline through the privacy screen, I said, \"So, I get the impression that this is nothing new for you.\"\n\nViola laughed as she changed. \"I grew up dancing, and wound up stripping through college. Until I got married and had Sarah, anyway. I dropped out of school, stopped dancing, for obvious reasons, and it wasn't like my ex would approve of me doing it anyway (not that it stopped him from going to clubs). But once he was in the rearview mirror, I started getting my life back in order. Got my business degree. Opened up my studio. I've been a good mother to Sarah, and hopefully a good example for her, but now that she's an adult... I have taken to the stage some in recent times.\"\n\n\"Oh?\" I asked, finding it even more tantalizing that this wasn't just something she did at home.\n\n\"It's not that big a deal,\" she explained. \"One of my old friends from my dancing days now has a club of her own, and I pick up a night or two here and there when a little extra cash would be good for us. And... because I love the power, honestly. A lot of the men who come are pigs who are used to power think they can dictate how things go, and I get to tell them how wrong they are. On that stage, all those eyes on me... I can control their arousal, and they pay me for it. It's rather wonderful, if I'm being honest.\"",
        "\"I bet,\" I said. \"I think you'd put on one hell of a show.\"\n\n\"Oh, you have no idea,\" Viola purred, teasingly peering out at me from behind the privacy screen. \"If you like what you see here, Ryan, you should come by the club sometime. I could ensure that you'd have *quite* a lot of fun.\"\n\n\"Sounds... interesting,\" I said, trying to play it cool.\n\nShe smirked at this reaction, before disappearing back behind the screen. \"Interesting, he says. I think you'll have more to say than 'interesting' soon.\"\n\n\"Like?\" I asked.\n\n\"It depends,\" Viola replied. \"If this were the club, I'd say it all depends on how much money you've brought with you, but since we're in my home, on my time... it all depends on how far you're willing to go.\"\n\n\"Far,\" I said. \"Very far.\"\n\n\"I was hoping you'd say that,\" she said, still adjusting her clothes behind the screen. \"Then I'd like you to remove your jeans. Lap dances against rough denim are... not fun.\"\n\n\"Understood,\" I said, readily pulling off my pants and setting them aside, leaving me sitting in a pair of loose-fitting boxers that hid nothing of my already impressive erection.\n\n\"And, last question,\" she said.\n\n\"Yeah?\" I asked.\n\n\"Warrant or AC/DC?\" Viola asked.\n\nIt took me a second to realize she was talking about 80s bands first, and realizing that they were likely some strip club standards that she was asking me to choose between.\n\n\"AC/DC,\" I answered, easily.\n\n\"Good,\" Viola answered, her voice smiling even if I couldn't see her.\n\nAt once, the lights in the room dropped it into almost total darkness. The darkness didn't last long, though, as soon overhead, multi-colored lights turned on, aimed toward the pole and lighting it up as a makeshift stage. They faded from red to purple to blue to green, some of them pivoting and to light up the room like spotlights, while none of them lost focus on the true reason we were here. I was excited as the first few notes of \"You Shook Me All Night Long\" began to pour over the studio's sound system.\n\nThe moment she stepped out, however, I soon understood that I had underestimated my capacity for excitement.\n\nViola Kent walked out from behind her privacy screen as if she owned the world, and if I had the capacity, I would have given it to her. Gone were her workout clothes, replaced by black high heels and matching thigh-high stockings. A white, button-up men's shirt covered much of her upper half, but sneaking out below it I could see a lacy black thong just barely covering her sex. Her hair now down, she looked at me with smoky eyes that she'd added the slightest amount of dark makeup to, her lips now curled into a smile and painted in a dark crimson shade of lipstick. She walked out toward me, rocking her hips and running her hands up her body slowly, teasing the buttons at the top without breaking eye contact with me through the song's early, slower notes.\n\nBefore she could open her shirt, however, the song kicked into gear and she stormed back toward the pole, hooking her leg around it, grabbing it with both hands and swinging around it impressively. Having never seen real pole dancing before, I was entranced at her athleticism as Viola Kent showed me her stuff, actively climbing and spinning and showing just what a real dancer's muscles were capable of. She didn't even break a sweat as she performed moves that would destroy most people's bodies, and turned on as I was, I couldn't help but be impressed.\n\nStill, when she did things like spinning around the pole while in the midst of a full set of splits, my arousal could never go away, either. I was tempted to touch myself, but couldn't go that far... not yet, anyway. I wanted to see where this was going.\n\nSoon, Viola dropped off the pole, walking toward me and staring down at me. She still rocked her body in time with the music, running her hands over her body and squeezing her tits through her shirt. Looking down at me, she bit her lip seductively, then reached up and began to unbutton the shirt. I was eager to see what lay underneath, so naturally, once she got to just past her tits, she turned around, gyrating her ass in my face. It was a magnificent ass, tight and firm but still round in a way I knew to be quite familiar to dancers, bisected only by the thinnest piece of fabric from her thong. It was an amazing sight, but not the one I wanted to see as I saw her continue to unbutton her shirt from behind.\n\n\"Tease,\" I said, smiling.\n\nViola tossed her hair and then looked over her shoulder at me, grinning. \"That's the idea...\"\n\nWith that, she dropped her shirt just enough to reveal her bare shoulders. I was becoming quite certain that every square inch of this woman's skin was kissable, and as she dropped it to reveal more of her bare back, I found myself easily hypnotized by her.\n\nShe let the shirt fall to the floor, kicking it toward me before spinning around and revealing that she wore a lacy black bra that matched her thong quite well: barely there, but performing its job admirably. Her modest B-cups looked positively amazing in such a tight garment, and as she went back to the pole, freer and more exposed, I could only watch on with awe as she performed the rest of her routine. She was a goddess, plain and simple, as sexy as she was playful, as gorgeous as she was flexible and strong. Watching this show put on for me and me alone... yeah, you could say I felt like one of the luckiest men on earth.\n\nAnd then the song changed, softer and slower, but still with a good beat to it.\n\nNot even close to out of breath, Viola Kent sauntered over to me, her heels clicking on the wooden floor as she approached me. Almost completely on display, I wanted to reach out and touch her... and honestly, do a whole lot of things with her. I stretched out a hand to pull her in, but that wasn't to be.\n\n\"We're going to play this with club rules while I give you a lap dance... but don't worry, it won't be forever. Hands at your sides, I get to touch you how I want, you can't touch me until I say so,\" she explained.\n\nI growled, disgruntled, and Viola playfully smirked. Toying with the clasp at the front of her bra, she said, \"Oh, poor dear... but trust me when I say, you're going to enjoy every minute of this...\"\n\nLooking down at my erection tenting my boxers, she playfully lifted one of her high heel-clad feet and placed it on the chair between my legs, agonizingly close to my groin.\n\n\"...and I will soon enjoy every minute of that *cock*,\" Viola purred, unclasping her bra, and shrugging it off her shoulders, exposing her bare breasts to me.\n\nIf my jaw hadn't already dropped by this point, it would have happened pretty violently here. While on the smaller side of a B-cup, they were firm and round, with perfectly pointed, dark brown nipples that just begged to be sucked on. I wanted to touch them, needed to touch them, but I had to follow her rules.\n\nFor now, anyway.\n\nViola put her foot back on the ground and stood over me, dancing, running her hands over her body while now giving extra attention to her exposed tits.\n\n\"Do you like my tits?\" she asked, running her fingers over her nipples and flicking them.\n\n\"Like isn't nearly a strong enough word,\" I replied, doing my best to keep my hands in place.\n\nViola chuckled. \"Good answer. A lot of girls I've worked with thought you needed big tits if you want the big bucks. For some girls, it worked... but I found it's not the size that matters most, it's what you do with them. How you carry yourself, how you use them to taunt, to tempt...\"\n\nShe bent down in front of me while looking up at me, her hair hanging down while I still got an amazing view of her almost completely exposed body.\n\n\"Am I tempting you, Ryan?\" Viola asked.\n\n\"I think you know the answer to that,\" I said, looking down at my cock.\n\nShe stood back up, turning around to give me the best view of her thong-clad ass, rocking it from side to side as she backed up, then bent over temptingly close to me.\n\n\"I know the answer, I just want to hear you say it out loud, Ryan. Like I said, it's not often I get hit on by an eighteen-year-old anymore, Ryan, and I want you to show me that you can finish what you started. My daughter seems to have faith in you, I want you to show me how justified she was,\" Viola taunted, standing back up and looking over her shoulder at me as she reached back and squeezed her ass.\n\nIt was difficult to put words together in such a state as this, but I did my best. \"I've wanted to fuck you since I first saw you, alright? I wanted to see you like this, wearing less than this, and I wanted to make you feel good. Real good. You've heard about what I can do, how good I am at giving women pleasure? Well, I am. Damn good. Pretty fucking amazing, if I'm being honest. And I've heard you're no slouch yourself. So, yeah, I'll be happy to prove myself to you, if you're willing to prove yourself to *me*.\"\n\nViola's smile faltered, briefly, and I wondered if I'd gone too far. I just wanted to challenge her back, to show her that I could play the same game as her on her level, even if I could never play on her level. And here I was, worrying if I'd shot my shot and utterly fucked up.\n\nAnd then she smiled, broader and prouder than before.\n\n\"My, my, my, Ryan, if that's how you want to play it, why didn't you just say so in the first place,\" Viola said, spreading her legs to straddle my hips, and then sitting down on me for one amazing lap dance. She smelled faintly of shampoo and perfume, a fruity, floral mix that was utterly intoxicating with her intense, feminine aroma, and as she pressed her body against mine and began to grind against my cock, I knew I was in for a helluva ride.\n\n\"It's better up close, isn't it?\" Viola asked, looking into my eyes and smiling.\n\n\"Much,\" I said, requiring the strength of ten men not to do anything now with how good she felt grinding against my cock. Only a few pieces of very thin fabric separated us, and in this kind of proximity to her, I was in danger of popping off quite early. That it felt like my cock would spring free from my underwear through her grinding alone wasn't helping.\n\n\"Have you ever had a lap dance before?\" she asked, wrapping her hands around my neck for additional leverage as she ground against me.\n\n\"Yes...\" I whimpered, but wanting to add something that would make this special, \"...but never from a real stripper.\"\n\n\"You've never been to a club before? I would've thought all young men like you would be eager to see some T&A in person...\" Viola said, grinding more insistently against me. Yes, it honestly felt like she was trying to free my cock at this point.\n\n\"I never had the courage before,\" I said.\n\n\"Now?\" she asked, arching her back so her tits were agonizingly close to my face, and then pulling back.\n\n\"I could be convinced,\" I replied.\n\n\"Good,\" Viola replied, pulling my face forward and rubbing it between her tits. Though I wanted to stick my tongue out and worship every inch of her, I held back, following her rules. She could touch me, I couldn't touch her. It was agony, but a very pleasurable one.\n\n\"So, you like my tits?\" she asked again, leaning back and using her upper arms to squeeze them together, making them look so damn sexy just inches from my face.\n\n\"Yes,\" I groaned, weak before her amazing grinding on my cock.\n\n\"I love them myself, but I don't think they're my best feature,\" Viola admitted, standing up and denying me the pressure I so desperately needed from her, before turning around and jutting her ass out at me.\n\n\"I've always loved my ass, personally,\" she said, twerking in front of me, inching backwards until I couldn't help but be staring at her gyrating ass. It was a hypnotic sight, watching her cheeks flex, knowing that if it weren't for the lighting and the thinnest strip of almost non-existent fabric, I'd be seeing her asshole right now.\n\nShe pressed back against me, her ass squeezing my cock as she leaned into me, resting her head on my shoulder while looking into my eyes.\n\n\"With legs as long as mine, and all the dancing I've done, I can't help but have an amazing ass, can I?\" Viola teased, squeezing my length with her cheeks and making me groan.\n\n\"Yes... it's so fucking amazing...\" I moaned as she rocked back and forth on my cock, grinding against me so deliciously.\n\n\"I'm glad you approve,\" she whispered into my ear, running her hands down her body, from her tits, to her toned belly, to right between her legs. I watched over her shoulder as she rubbed against her pussy, groaning and moaning against me.\n\n\"Sarah was right when she told you I haven't had male company in a while. Mostly, that's been by choice. I get by fine on my own... and I like it that way... I'm my own woman, living my own life the way I want to... and I have my friends, and my toys, and they are all oh so much fun... but sometimes a girl just needs some thick, quality cock...\" Viola continued whispering, still massaging my cock with her ass cheeks as she ground against me.\n\n\"Well, I'm not lacking for that here,\" I said, desperately wanting to touch her. \"Give it a try and I'll more than fill you.\"\n\n\"Soon enough,\" she purred, continuing her slow, purposeful grind, now reaching between her legs to touch herself with one hand while the other massaged one of her pert tits. \"I've wanted to fuck you for a while, you know...\"\n\n\"You have?\" I asked, probably getting even harder.\n\n\"Mmmmhmmm...\" Viola groaned, squeezing her ass around my cock. I could almost swear I was feeling her skin against my cock at this point, but it was hard to tell with how stimulated I was. \"In our October book club meeting, I had Brenda in my bedroom on all fours, taking my strap-on up her ass and moaning like a fucking whore... she told me all about you, and it made me so fucking horny.\"\n\n\"D...d...did it, now?\" I asked, eyes rolling back into my head as she began to grind more vigorously.\n\n\"Mmmhmmm,\" she confirmed. \"I thought it a one-off, but then one after the other, I have Lauren, Janelle and Wanda telling me about you... Valerie and Ana lusting after you... even stick up her ass Karen Bowman sounding interested in that prissy bitch's way... I knew I wanted you, but the opportunity never came.\"\n\n\"It came today,\" I said.\n\n\"Hopefully several times, soon,\" Viola replied, looking into my eyes and smiling. \"And what a surprise, I think we have a visitor...\"\n\nNervously, I looked toward the door, but when I felt her ass squeeze my cock again and felt nothing between us, I knew what she meant.\n\nViola climbed off of me, turned around and knelt between my legs so she could get a better look at my now exposed ten inches of thick cock. On hands and knees, she crawled toward me until her face was inches away from my cock.\n\n\"Holy shit,\" she said, softly, smiling up at me hungrily as she took in my cock as it stood proudly over the waistband of my underwear. \"This is fucking awesome.\"\n\n\"Thank you,\" I said, shivering at the feeling of her breath on my cock.\n\nViola noticed my response and leaned in closer, her lips open temptingly as she got within half an inch of my cock. Opening her mouth, she let out another soft breath. I groaned, my skin breaking out in gooseflesh as I saw a large drop of precum bead on the head of my cock.\n\n\"Mmm, well, this is everything I was told and more... very, *very* promising,\" she said, keeping at that agonizingly close distance to my cock without doing anything, before standing up before me. I groaned with need, but Viola simply smiled down at me.\n\n\"You wouldn't normally be able to do this at any respectable club, but I want you comfortable, so, take off your underwear,\" she said.\n\nSilently, I nodded, arching my back enough so I could pull my underwear off and toss it over with my pants. Viola then pressed my legs together, giving her better access to straddle me, as she sat down once more in my lap. Her thong was the only thing separating her pussy from my cock, and its thin fabric felt negligible as Viola slid up and pressed herself against my cock.\n\nViola looked down on my cock, grinding gently against me and driving me wild.\n\n\"You know, it's been my experience that, you're generally better off not jumping into bed with guys who have huge cocks,\" she explained, rising and falling in my lap, spreading precum along the underside of my shaft with her lacy thong and making me whimper. \"Don't get me wrong, the actual anatomy can be fun, but in the end, when you're with a guy with a big cock, you also have to deal with the *guy* attached to the cock, and they're usually too obsessed with how big they are to actually learn any technique. It's all fucking away, and that's it, isn't it? But what I've heard about you, well... I think you might prove an exception.\n\n\"Please...\" I groaned, wanting her to touch me, to give me some release instead of this slow torture as she sped up her pace, grinding up against me so deliciously.\n\n\"Please, what, Ryan?\" Viola teased, her body writhing seductively in time with the music as she continued to grind on me.\n\n\"This is... fuck... you're so fucking hot...\" I moaned.\n\nWrapping her hands behind my neck again, Viola smiled. Fuck, she was gorgeous. That beautiful face, those tits bouncing as she rode me without riding me, that nearly naked body... I was having a hard time holding back.\n\n\"Well, thank you, Ryan; it's always nice to be appreciated...\" she purred, leaning in to whisper in my ear. \"But you meant more than just a compliment, didn't you?\"\n\nViola leaned back, looking into my eyes so deeply she might well have been reading my soul. As I thought about it, realizing that she was quite used to men being in this vulnerable a position around her, I felt quite certain she might be able to read me better than anyone I'd ever known. While that was intimidating in its way, it also felt kind of freeing.\n\nI admitted, \"If you keep doing that, I'll cum...\"\n\nSmiling sweetly, Viola asked, \"So? You're not a one-and-done kind of guy, are you?\"\n\n\"No,\" I whimpered.\n\nStill looking at me with that sweet, pretty look she had, Viola smiled and said, \"Then you can cum if you want to, Ryan. I don't mind, and I know we'll have a lot more fun, very soon.\"\n\nWith that, she pressed more insistently against my cock, grinding against me as she stared into my eyes. I was torn about what I should do, but she made herself clear. Resisting her body was hard enough as it was... and why should I?\n\nMy balls boiled and my cock twitched as she hurried her pace. I heard the softest moan escape her lips, a sound that pierced my very core, and that was it. I moaned, leaning back in my seat as I came hard. It fountained out of my cock, splattering down on me, first, then as Viola inched away, spurting onto her stomach and thighs.\n\n\"That's it, Ryan, that's it, cum for me, like that, just like that...\" Viola said, her voice encouraging, soothing and sexy. At this moment, I couldn't help but break the rules she'd set out, wrapping my arms around her and holding her close as my orgasm subsided, but if she minded, she didn't say anything. Instead, she held me close, stroking my hair and whispering sweet encouragement in my ear as my balls drained onto both of us.\n\nWhen she could finally feel that I was drained, Viola sat up and looked at me with such loving eyes. I was still trying to sort out this singularly unique sexual encounter, but looking up at her, I understood that I didn't really need to sort much of anything out. This was one of those situations that was best to roll with, and take charge when it seemed appropriate.\n\n\"So, was that fun for you, too?\" Viola asked, teasing.\n\nRather than answer her, I pulled her close and kissed her on the mouth, firmly but quickly.\n\n\"Fucking amazing,\" I said, breaking the kiss. \"But how about we go someplace comfortable so I can really show you what I can do?\"",
        "Viola smirked at me, clearly pleased with my response. She leaned in for another quick kiss and said, \"I was hoping you'd say that.\"\n\nStanding above me, a cum-covered, mostly naked goddess, Viola Kent reached out her hand to help me to my feet. Grateful, I took it.\n\n***\n\nI cleaned myself up in the hall bathroom, while Viola went to her bedroom to do the same, and once I was free of cum and found a little more strength, I approached Viola's room eagerly.\n\nStepping inside, I found it a dark room, tastefully furnished, but with prominently displayed sex toys that she clearly felt no need to hide. Some of them were pretty standard, while others... well, they were impressive, I'll say that. Low music played in the background, slow but with a good beat, much like her lap dance music of choice, while the room lights slowly cycled between soft shades of red, blue, green and purple. Closing the door behind me, I set down the clothes I'd taken off in the dance studio by the door, and then stripped naked. I wouldn't be needing any more clothes with what was coming next.\n\nI let my eyes drift around the room briefly, taking in her large, sturdy bed, the several large mirrors she had placed prominently around the room, and of course, back to the large number of toys she had lining her bedside dresser. White light and the sound of running water poured out of the doorway next to her bed, no doubt her bathroom.\n\n\"My friends told me that you cum like a firehose, but I just thought they were being colorful... you made a fucking mess on me!\" Viola called out from the bathroom.\n\nI strolled toward the open door, grinning. \"That a problem?\"\n\n\"No,\" she said back to me. I looked at her through the bathroom doorway, slightly bent over the sink as she dabbed at herself with wet tissues to get the last of the mess. With her thong-clad ass stuck out from her position, she looked beautifully indecent, especially when looking at her in the mirror. Her tits squeezed together slightly, her beautiful face screwed up in concentration, Viola Kent may never have looked more beautiful to me.\n\nIt certainly didn't hurt my reforming erection to see her like this.\n\nI spent a moment there just looking at her ass and her stocking and heel-clad legs, eying her and wondering what I wanted to do to her.\n\nLooking up in the mirror, Viola caught sight of me and smiled. \"I'll be out in a second... I'm happy to see you're ready for more.\"\n\nGrinning, I said nothing.\n\nConfidently, I walked into the bathroom and wrapped my arms around her from behind, happy to finally be able to touch her properly. I ran my hands over her abs, and her tits, burying my face in her neck as I kissed her soft, supple skin over and over while grinding my cock against her ass. Viola moaned at the unexpected attention, but soon was reaching back to touch me.\n\nNo, this was my turn to have fun with *her*.\n\nI reached down, pulling her thong down with both hands until it fell around her ankles. I looked at her in the mirror, beautifully naked with a shaved, soaking wet cunt. Viola gasped at this attention, but smiled at me, turning her head to so we could kiss while I groped her from behind.\n\nWithout breaking our kiss, I reached down with my right hand and explored her pussy with my fore and middle fingers, gently massaging her clit with my thumb.\n\n\"Oh, fuck yes, that's what I've needed, right fucking there,\" Viola groaned, pressing back into me. \"Fuck me with your fingers like that... make me cum, you know you want to...\"\n\nOh, I very much wanted to make her cum, but if she wanted to put on a show for me earlier, this was my show for her. I held her close like this, helping her balance while I gently explored her soaked, hot pussy with my fingers, before soon pressing them into her, curling them inside. Viola moaned, squeezing me with her surprisingly tight pussy muscles, riding my fingers as I fucked them into her and massaged her g-spot.\n\n\"Jesus... fuck... that's good... how's a boy like you get to be so fucking good at this?\" she groaned, leaning back to kiss me.\n\nI smiled, pressing my thumb into her clit and running it in tight circles while fucking her more intensely with my fingers. I said, \"You know that old saying? How do you get to Carnegie Hall?\"\n\nViola laughed, a sound that soon turned into a devastatingly loud moan. \"Then you've had a *lot* of practice.\"\n\nI kept smiling, leaning in and kissing her before hissing, \"You have no idea.\"\n\nShe pressed back into me, urging me to finger her harder as she shuddered and moaned. Her eyes rolling back briefly, she opened them briefly, enough to stare into my soul and challenge me, \"Prove it.\"\n\nWithout a word, I set out to do just that. With one hand massaging her tits and the other giving her the fingering of a lifetime, I pleasured Viola Kent. She moaned, loudly and freely, whenever she wasn't cursing up a storm, motivating me to give it to her harder. Looking at the two of us in the mirror, deliciously naked as I aggressively explored her hot, wet cunt with my hand, it made me as hard as I ever had been in my life. Here I was, two fingers buried in possibly the most beautiful woman I'd ever seen, her moaning and writhing with need against me... yeah, I might well have been in heaven.\n\nI wanted more from this, though, and while I would have stretched it out if I could, I wanted her first cum to be nice, hard, and fast. So, yeah, I might have gone a little extra hard at her g-spot and her clit simultaneously, and when her eyes flew open with shock and her mouth dropped wide, I may have continued on with even less mercy.\n\nIf she had any complaints, though, she didn't let me know over the sound of her orgasm.\n\n\"FUUUUUUUUUUUUUUUCK!\" Viola cried out, holding onto the sink for leverage as her orgasm, messy and so, very wet, powered through her. I held her up as best I could with my free hand, while still pushing her through her orgasm, easing up slightly but still looking to keep things nice and prolonged. She moaned, she whimpered, and she shook against me, nearly losing her feet beneath her but staying standing through sheer willpower.\n\nWell, sheer willpower and a little assist from yours truly.\n\nAfter it passed, Viola stood there, legs shaky and breathing heavily as she looked at me in the mirror. If she was hot before, she was positively lewd now, an image of nearly naked, sweaty and completely horny perfection.\n\n\"Bed. Now,\" she said, hungry and biting her lip.\n\nViola didn't have to repeat that command, as I eagerly made my way to the bed. Looking back, I watched as she stepped out of her thong and followed after me, complete, naked perfection.\n\nI sat on the edge of the bed, ready to push back so I could lie down, but she didn't give me the opportunity. Viola got down to her knees in front of me, holding me in place as she wrapped one of her delicate hands around my massive cock.\n\n\"I fucking need this cock so bad; you have no fucking idea...\" she said, eagerly licking my cock up and down, swirling her tongue around the head before going back down and sucking on my balls. She did this worshipfully, moaning and dropping a hand between her legs as she continued licking and stroking my cock.\n\nThis attention had me moaning, but when she next reached the top and took the head in her lips, I became even louder. Simply put, Viola Kent was a fucking expert when it came to sucking cock, applying the right pressure, the right amount of tongue, and once she became accustomed to my girth, she easily sucked me in until my entire cock was buried down her throat. There was no hesitation, all eagerness as she enthusiastically sucked my entire length in a sloppy blowjob. Looking up at me as she energetically sucked my cock, I knew that Viola would be smiling if she could. The sight of her like this, however, was no less amazing an image.\n\nViola Kent sucked my cock with only a little gagging, her eye makeup running only slightly as she brought me immeasurable pleasure. Like everything with this goddess of an older woman, I could have simply lost myself here and died a happy man, but that wasn't what I was brought here to do.\n\nGrabbing a handful of her hair, I pulled her off my cock. Though she coughed slightly with this new freedom, I could hear a hint of a whine to Viola's voice. She really did need this cock...\n\n\"Soon,\" I promised, pulling her up onto the bed and laying her down on her back, her head dropping back onto the pillows.\n\n\"You make promises like that, Ryan, you better hold to them,\" Viola purred, cupping her tits and flicking at her nipples. Whether this was for my benefit or hers, I didn't care, it was a hot sight regardless.\n\n\"I always do,\" I said.\n\n\"Prove it,\" she challenged.\n\n\"In a moment,\" I promised, pushing her legs apart and leaning down to get an up close and personal view of her tight, wet, and so very hot cunt. Her lips were full and inviting, pulsing slightly with her need. I inhaled, getting an amazing whiff of her intoxicating aroma. God, it was enough to make me completely lose my mind if I wasn't careful.\n\nViola looked down at me, smiling with understanding. \"If you're as good as they say you are-\"\n\n\"I am,\" I said, leaning down and licking her pussy. Her taste, at once savory and sweet, filled my mouth and drove me wild with lust, her loud groan only pushing me to eat her harder. I licked her up and down, exploring her every fold, every hidden depth, wanting to know what pleased her and what would truly drive her over the edge. I'd already delved in with my fingers, but now I needed to truly know her. I continued licking her up and down, gently forcing some of my tongue into her and thrusting in and out, suckling at her delicious lips, but this was all a prelude.\n\nLicking my way up, I soon found her clit, and staring into her eyes, I closed my lips around it.\n\n\"Oh, fuck, Ryan! Holy shit!\" Viola moaned, her eyes going wide as she grabbed a handful of my hair in hand. While suckling at her, I ran my tongue in swift, firm circles over her clit, using her moans for guidance to figure out my pace and learn what I needed to do to please her.\n\nThankfully, Viola made it pretty easy, guiding me vocally while I ate her pussy like a starving man.\n\n\"Yes, yes, like that, like that, fuck, you know what you're doing, I love it... fuckfuckfuck, yes, like that, god, the other girls talked but I had no idea, fuck, this is amazing, keep it up, like that, you know what to do, yesyesyes, a little higher, a little harder, yeah, right there, fuck, keep going, Ryan, yes... fuck, you keep doing that and you're gonna make me cum again! I love it, keep going at it, keep going you filthy little motherfucker and don't stop, don't you ever stop, we're going to have so much fun... holy fuck, holy motherfucking shit... keep going, like that, right there, you're gonna make me cum, gonna make me cum, make me cum, do it, do it, Ryan, fuckfuckfuckfuckHOLYSHITFUCKINGHELL, YES! I'M CUMMING! I'M CUMMING! I'M...\"\n\nI knew what she was doing, but she didn't have a chance to express it as I forced another orgasm from her dripping cunt. Crying out with glorious release, her legs tightened around my head and her body shook with another powerful orgasm. Her juices gushed on my face, and though I was able to lick some of them up, no doubt I was a fucking mess by the time she was finished.\n\nWith my tongue and lips, I kept the orgasm rolling as long as I could, only ceasing when she pushed my head away.\n\nLooking up at the ceiling, Viola breathed heavily, her breasts rising and falling in the afterglow of a good, hard cum.\n\n\"FUCK THAT WAS AWESOME!\" she yelled out, unexpectedly. It startled me, but she soon laughed, easing my fears a little.\n\n\"Sorry,\" Viola said, though her smile said she was anything but sorry. \"Got a little exuberant there.\"\n\n\"It's alright,\" I said, climbing up beside Viola as she bade me join her. \"Just a little surprised.\n\n\"I'm sorry. Would sucking on my tits help make you feel better?\" she asked, still basking joyfully in the afterglow of a good orgasm.\n\nLooking at her bare tits, I answered, \"It certainly couldn't hurt.\"\n\n\"Good,\" Viola said, pulling my face to her chest as I began to suckle and nibble at her nipples. She responded rather well to my attention, cooing and moaning, and I wasn't inclined to stop anytime soon.\n\n\"Sarah's been asking me for a slightly newer car before she goes to college. After this... I think I'm going to have to figure out a way of making that happen, as a thank you...\" she said, amused.\n\nI stopped sucking her tits, then climbed up until we were face to face, wrapping my arms around her and holding her close. Her body still shuddered softly with pleasure against mine.\n\nStroking her side, I laughed softly. \"You should talk to my dad. One of his old college buddies sells unusual cars at some good prices. Mostly stuff like old circus cars, ice cream trucks, hearses, movie cars and vans with a whole lot of stenciling on the side, but if anyone can find you something good at an unexpectedly good price...\"\n\nViola looked at me, skeptical. \"And you're sure this is legit?\"\n\n\"Oh, yeah, thoroughly. My dad pulled some strings with people he knew in the Vegas DA's office and bailed his buddy out of jail after he got in a fight at a Cirque du Soleil show a few years back; we're due some car-related favors,\" I said proudly, thinking about how Dad promised this might get me something for a graduation present out of this.\n\nViola thought about this. \"When we're done here, I'll have to get his number from you.\"\n\n\"You'll have it,\" I said.\n\nShe leaned in to kiss me, smiling broadly. \"But for now, I don't want to think about my daughter, or your father...\"\n\nViola pushed me back on the bed, then climbed on top of me, swinging her long, sexy leg over me until she was straddling my hips. Her hot, wet pussy was inches above my cock, and though I longed for contact, she was clearly savoring the moment.\n\n\"It's been a long time since I've properly fucked a man,\" she said, reaching down between her legs and grabbing my cock. \"And I want to enjoy this.\"\n\nThe way she jacked my cock, spreading the precum as her pussy hovered tauntingly a couple inches away, that was enough to confirm for me that I was going to enjoy this as well. Then, biting her lip seductively, Viola lined my cock up with her entrance. I looked up at this beauty above me with the greatest sense of awe sweeping over me, again wondering how I had gotten so fucking lucky this year as to be in the mere presence of a woman this beautiful, let alone have sex with her.\n\nViola lowered herself slightly, and I had a moment of purely savoring the feel of her hot folds against me, her juices already running down the head of my cock in anticipation.\n\nThen, she settled down onto me, and the head of my cock was finally inside of Viola Kent's tight pussy.\n\n\"Oh... fuck...\" I moaned.\n\n\"Goddamn it, that's a big fucking dick,\" Viola moaned, pushing herself down further, taking several more inches of cock. \"Oh, fucking hell, this feels so much better than a dildo...\"\n\nI grabbed her hips, helping guide her down as I enjoyed every moment of this slow penetration. \"The real thing always feels better.\"\n\n\"Oh, you don't need to tell me twice, FUCK!\" she said through gritted teeth, forcing more of my cock into her. She had gotten almost all of it, but then finally let gravity take charge and forced the last couple inches inside of her.\n\n\"Wow...\" I said, looking down to where my cock met her pussy. \"I mean... just, wow.\"\n\n\"You're telling me,\" Viola said, looking down at her splayed open pussy lips. \"Holy shit, that's a lot of fucking cock I've got in me.\"\n\n\"You feel so fucking good yourself...\" I said, shivering and gently running my hands up her sides.\n\nShe looked down at me proudly, almost cocky, reaching down and running some fingers lightly over my chest. \"So, would it be a good ego boost if I told you that your cock is way bigger than my ex's, and that you're even better at eating pussy than he could hope to be?\"\n\n\"Yes,\" I said, unhesitating. I twitched my cock inside of her, making her giggle.\n\n\"Oh, you think you've got some tricks down there?\" Viola asked, massaging my cock with her tight pussy muscles, milking me without even moving.\n\n\"Holy shit...\" I groaned.\n\n\"That's right,\" she said proudly. \"Never doubt the almighty powers of a dancer's body.\"\n\n\"I never do,\" I said, playfully swatting her on the ass.\n\nViola's eyes flashed, playful and lusty, and she leaned down to kiss me. Rubbing her body against mine, she leaned in and whispered in my ear, \"I should warn you... you might think my friends can fuck hard, but trust me... none of those bitches can hold a candle to me.\"\n\nTaking her favorite challenge, I threw it back at her. \"Prove it.\"\n\n\"Be careful what you wish for,\" Viola taunted, sitting up on me. She looked down at me with beautiful, naked pride, running her fingers teasingly over my abs. With surprising gentleness for how swiftly she did it, she rose up on her knees, sliding more than half of my cock out of her before she dropped back down onto me.\n\nI moaned. She moaned.\n\nAnd then, she gave me the fucking of a lifetime.\n\nFor someone who hadn't been with a man in as long as she claimed, you wouldn't have been able to tell it from how expertly and savagely Viola Kent fucked me. She bounced on my cock wildly, massaging my cock with her tight pussy muscles, her tits and ass jiggling impressively with each bounce. At first I was so taken aback with how fiercely she rode me that I barely knew what to do with myself, but finding her hips easy to grab, I put my hands there and held on for dear life.\n\n\"Goddamn... fuck... you almost forget how good fucking cock is!\" Viola cried out, riding me for all she was worth. \"I need to get this more often, get seriously fucked by huge fucking cock! Fuck! Fuck my tight cunt, Ryan, fuck my slutty pussy, like that, like that, goddamn it! Fuck!\"\n\nThe filth that poured from her mouth made me even harder, and I fucked up into her as best as I could while she rode me. She was every bit as good as promised, maybe fucking me harder than any other woman had, more than most women could, certainly. Her hips were a blur as her immaculate ass jiggled and slammed down onto me. I looked down, watching as her cunt repeatedly took my cock with the greatest sense of awe.\n\nViola looked down on me with a playful, smug sense of superiority. \"I know you make the rounds at school, but admit it, MILF pussy is in a whole different class.\"\n\nLooking down to where I penetrated her, I said, \"*You're* in a whole different fucking class.\"\n\n\"And don't you forget about it...\" she groaned, eyes rolling back into her head as she continued to bounce on me like a champion rodeo rider. \"...you know how hard it's going to be not stealing you away from Sarah whenever you're over? How I'll just want to drag you out of her room and fuck you dry every chance I get?\"\n\n\"You'll make do,\" I taunted back, reaching up with one hand and pinching one of her nipples, hard. I got the impression she might like this, and I wasn't wrong.\n\nViola leaned down to kiss me, still roughly rocking her hips as she fucked as much of my cock as she could.\n\n\"I haven't been making do so far...\" she moaned, fucking me.\n\n\"Yeah... but Sarah's an adult now... you can get out more, approach dating on your terms, however you want to... get some cock, or pussy, however you like, whatever makes you happy,\" I said, wrapping my arms around and holding her close.\n\nUsing this new advantageous position, I rolled on top of her without leaving her, now taking advantage to be the one fucking her hard.\n\n\"Oh shit...\" she moaned. \"You're right, I should... I'm just so out of practice...\"\n\nViola locked her legs behind me, guiding this fuck as I pounded down into her.\n\n\"I can help you with practice,\" I said.",
        "\"Good,\" she moaned, kissing me fiercely.\n\nWe made out as I gave her every inch of my cock, fucking into her with a fury I didn't know I was capable of. Her beauty, raw sexuality and confidence that seeped from every pore, it was enough to override all sense and take me to heights of sex I never knew possible. Looking at the gorgeous older woman beneath me, taking my cock like no one had before, it was hard not feeling a new intensity. This was something else. *I* was becoming something else, fucking Viola Kent like she deserved to, no, *needed* to be fucked. It was a glorious feeling, being embraced by her in every possible way, her eyes staring into me with such playful need. It was a look that could get a man to do nearly anything, and here I was, fucking her mercilessly, not a care in the world.\n\n\"Feels so good... fuck, you're perfect...\" I grunted.\n\n\"Give it to me, give it all to me, harder, faster, give it to me... fucking give it to me...\" Viola moaned.\n\nI did give it to her. I gave her everything I had, and I would give her anything more she asked if it meant I got to keep fucking her like this. \"Take it... take it... take it all, take my fucking cock...\"\n\n\"You're gonna make me cum again, soon, Ryan...\" she moaned, looking up at me hungrily.\n\n\"Me too,\" I said.\n\n\"Give it to me... cum inside of me... cum inside your friend's fucking mom!\" Viola said, clearly relishing the deliciously dirtiness of what she said.\n\nI'll admit, it worked. Feeling my balls boiling, I cried out, \"FUCK!\"\n\nI couldn't hold back. I wouldn't hold back. I buried my cock deep inside of her and let loose, firing a wild torrent of cum deep inside her clutching cunt. My orgasm must have set her off, because there she was beneath me, holding me tighter as she cried out and came against me. She held me so close, so tightly that I almost couldn't get my last few pumps in, but my need was desperate, and her pussy was very accommodating. As I weakened, I pumped my last few shots into her, my cum filling her nice and deep.\n\n\"Fuck...\" Viola muttered, looking down at herself. \"Holy shit... that was an amazing fuck. Ryan, you're amazing... that cock, I mean... my god!\"\n\nI smiled down at her, kissing Viola softly, sweetly. \"It's a gift, what can I say.\"\n\n\"Well, thank you for sharing it with me, then,\" she said, still catching her breath. \"Because that was... wow, I knew there had to be some truth to all I heard about you, but I didn't know it could be this good!\"\n\nI grinned. I tried not to get too big an ego, but moments like this made it easy to let it inflate maybe just a little bit.\n\nViola made no move to let me go, and I wasn't inclined to move either. So, we came down like this, the two of us catching our breaths as we held each other close. We exchanged slow, soft kisses, making out in a far gentler, more intimate manner than anything we had done so far. I had to admit, it felt good. Really good. Viola Kent was truly special, and if this visit helped her... well, I was doing right by the lust spell Leah and I had set, wasn't I?\n\n\"How are you still hard?\" she asked, looking down at my cock as it remained buried in her cunt.\n\n\"It happens sometimes...\" I said, still impressed by what I was capable of today. \"Would it be an ego boost if I told you it's because I think you're unbearably hot?\"\n\nShe laughed at the returned line. \"I'm willing to do something about it if you're good for it.\"\n\n\"Oh, hell yeah,\" I said.\n\n\"Good,\" Viola said with a kiss. \"Because I've got an idea for something that should be fun...\"\n\nI raised an eyebrow. This I had to hear.\n\n***\n\nPro tip: if you ever get an opportunity to fuck your friend's hot mom doggy style while she goes into great detail about which of the sex toys she's got on display she's fucked which of your hot, busty teachers with, I highly recommend saying yes. There's nothing quite like it, really.\n\nOn my knees behind Viola Kent, I fucked her nice and hard as I gripped her hips tightly, watching her ass jiggle with every thrust. Quite skilled with this position, she pointed to various sex toys and showed me even freakier sides to women I knew to be accomplished in bed.\n\n\"You ever get Lauren near some nipple clamps, you'll be a lucky man... she goes quite wild... fuck...\" Viola moaned, fucking back against me. \"Janelle needs a couple of glasses of wine sometimes, but get her in the right mood and she's such an anal slut... taking on my biggest plugs and dildos... the most fun I've had was putting a remote-controlled vibe in Wanda, all of us just watching her lose it, passing the remote around while she came over and over... and the biggest slut of all-\"\n\n\"Brenda?\" I guessed, playfully slapping Viola's ass and enjoying how it made her cry out in a mix of pleasure and pain.\n\nLooking over her shoulder, she gazed at me with wild eyes and a playful smile before shaking her head.\n\n\"Valerie,\" she corrected.\n\n\"Mrs. Chan?\" I asked, a little surprised. Viola nodded.\n\nThis was a bit of a surprise. I knew my fun-loving and somewhat irreverent science teacher to be a bona fide hottie, but the biggest slut out of all the women at the book club? That was an interesting development.\n\n\"She can take all of my biggest toys in pretty much every way. She's a showoff, but, it's an amazing show,\" Viola confirmed.\n\n\"I should hit her up soon, then,\" I said, pounding into Viola even harder.\n\n\"Oh, fuck, goddamn that's fucking good...\" she moaned. \"You should. She's like all the sluts in our book club; doesn't get enough dick at home. You can fix that.\"\n\n\"One thing at a time...\" I grunted, looking over her impressive array of toys and imagining all sorts of naughty uses for them. Getting a look at all of her plugs, I asked, \"So, how many of these have you had up your ass?\"\n\nViola smiled back at me again. \"A fair few.\"\n\n\"And what's your opinion on getting fucked in the ass?\" I asked, grunting and looking down at her magnificent ass and the tight, winking hole that peered from between her jiggling cheeks.\n\n\"I like it when it's done right,\" she said, biting her lip.\n\n\"If you've talked to your friends, you know I can do it right,\" I said, reaching down and running my thumb over her asshole. Viola groaned deeply, looking back at me lustfully.\n\n\"I want to fuck your ass, Viola,\" I said, making myself clear.\n\n\"Good,\" she replied. \"Because I really, really want that monster up my ass, too.\"\n\n\"Now?\" I asked.\n\n\"Preferably,\" Viola replied, reaching for the cabinet nearby and snatching a bottle of lube from between the various toys.\n\n\"Convenient,\" I said, slowing my pace so she could pass it back to me.\n\n\"Hey, you hold sex toy parties, you're going to need a lot of lube. It makes all sorts of things fun,\" she said.\n\nI laughed. \"Oh, don't I know it.\"\n\nThough it pained me to do so, I pulled out of Viola's pussy and began to rub lube onto my cock. As much as I missed being inside her magnificent cunt, I knew that what would come next would more than make up for this brief inconvenience.\n\n\"Come on... hurry up... lube up that cock and shove it up my ass...\" Viola taunted, licking her lips. \"I always cum hardest when my ass is full.\"\n\n\"Oh, it's gonna be full,\" I said, finished lubing my cock.\n\n\"I know it will, but let's pretend I don't when I tell you to prove it,\" Viola replied, her eyes dancing with need. I grinned and nodded, licking my lips with anticipation.\n\n\"Well, you know what they say...\" I said, grabbing my cock and sliding it between her ass cheeks. I spread some of the lube around this way, then ran my overstimulated cockhead against her puckered asshole. I teased her at first, toying with her hole and making her moan as she pressed back against me, wanting. Viola looked back at me with that needy, lustful look I quite enjoyed.\n\nWith some force, I pressed my cockhead against her asshole and whispered, \"...be careful what you wish for.\"\n\nI'd fucked a fair few asses this past year, and from experience knew that dancers had some of the tightest I was bound to find. Even with all the play she had with her various toys, Viola proved this knowledge to be true, as her ass felt almost impossibly tight. Still, with enough lube and motivation on my part, even an ass as so very, very tight as hers, was only a challenge for so long.\n\nWith a low, yowling moan from her and an exquisite pressure for me, I felt Viola's ass begin to slowly open up for me. It was incredibly tight, feeling like it might be impossibly so for a cock as big as mine, but experience had taught me that with enough persistence, as long as she was willing, I would make it. The way she looked back at me, those smoky eyes practically demanding that I give her everything I had... I knew she was more than willing.\n\nFeeling her asshole stretch to accept me, I pushed forward.\n\n\"Come on, come on, do it, fucking do it...\" Viola grunted, I don't know if she was trying to convince me or her ass, but I held up my end of the equation. I pushed, feeling her hole stretch incrementally to accept me, feeling her warmth urging me forward.\n\nAnd then, feeling my cockhead break through and lodge in her ass.\n\n\"Ah, fuck...\" she groaned, smacking the bed. \"Fuck that's a big fucking cock... fuck!\"\n\n\"It's not just a big fucking cock,\" I said, pushing forward and sinking a couple extra inches inside of her. \"It's a big fucking cock that's about to destroy your ass... holy fuck, you're tight.\"\n\n\"Goddamn...\" Viola groaned, pushing back against me and forcing several more inches inside. \"Fuck, it feels so good having all this real, thick cock up my ass... we old sluts need our asses filled like this all the fucking time...\"\n\n\"You're not that old,\" I said, grunting and shoving the last inches inside of her. \"But you are right about needing your ass stuffed.\"\n\n\"Fuck yeah, I am,\" she replied, reaching up with one hand to squeeze one of her nipples and moaning. \"Now do it... fuck my ass...\"\n\n\"That was my plan,\" I said, grabbing her hips and doing just that.\n\nI didn't take time to savor just staying in her ass for a moment or two like I usually would, not when I was this horny, and certainly not when my cock was this overstimulated with pleasure while she urged me on. No, she wanted to be fucked, and I wanted to fuck, and holding her tight, I went to town on her tight, sweet ass. I fucked in and out of her with the savagery she seemed to love so much, matching her loud cries and moans with my own grunts as our bodies slapped against one another. The room filled with sounds of us fucking like beasts, mixed with the occasional swear word, or two, or ten, as I violated Viola's ass.\n\n\"Fuck my ass, fuck my ass, fuck my ass, dammit!\" she roared at me, looking over at me with those seductive eyes as I pounded away at her. I didn't answer her with words, for surely I had to save my breath for such a marathon fuck. Instead, I answered her by just reaching down and smacking her ass, hard.\n\nOnce.\n\nTwice.\n\nThree times.\n\nViola squealed with each impact, until one final slap made her eyes roll back.\n\n\"Holy fuck... I'm cumming, you're making me cum from fucking my ass, holy shit, holy shit... FUCK!\" she cried out, her body slamming against mine one conclusive time as she came. Her screams practically rattled the windows, and as she shook and released with another messy orgasm, I felt worried that she might pass out.\n\nMy worries were for naught, however, as Viola Kent was an exceptional woman. Despite one moment of near weakness, she soon regained her strength, looking back at me with a ferocious hunger.\n\n\"I need that cum...\" Viola groaned, pulling my cock from her ass as she crawled forward, and kneeling on the floor by the edge of the bed. \"Get your sweet ass over here.\"\n\nI whined, missing her ass already, but I did as she said.\n\nAny resistance I might have had soon disappeared as she quickly began sucking my cock, and with her expertise, it wasn't long before I too was cumming hard. Though I warned her as it came, she took the first couple shots in her mouth, then pulled my cock out and fired off long streets of semen all over her face, neck and chest. I was drained, completely and utterly it felt, my body flooded by pleasure as this goddess looked up at me, smiling with satisfaction through a face utterly painted with cum.\n\n\"So... that was definitely fun,\" Viola said.\n\n\"Y...yeah...\" I said weakly, still catching my breath as I watched her holding my drained cock. She kissed the head, suckling out one last drop, before smiling up at me sweetly again.\n\n\"You want a picture?\" she asked, blinking up at me as if her face weren't utterly covered. \"For your collection?\"\n\n\"Right, thanks,\" I said, finding my phone and getting a couple good shots of her looking up at me cutely.\n\nThat taken care of, Viola stood up on wobbly legs and made her way toward the bathroom.\n\n\"Fuck, you just... wow, how do you have so much cum?\" she asked.\n\n\"It's a curse, what can I say?\" I proposed, falling back on the bed and feeling like I might well pass out from exertion and overwhelming pleasure.\n\nViola laughed. \"I bet it's such a curse getting to fuck so many hotties... I doubt I'll find another guy as cursed as you, but, I think I should get out and try dating again. If just for some dick.\"\n\n\"Well then, mission accomplished for me, then,\" I laughed.\n\n\"I'd say so,\" Viola said, stepping out of the bathroom. Though she'd cleaned my cum off of her, she still had that delicious, just-been-fucked look that nearly brought some life back to my cock again.\n\n\"But that's for later, for now...\" she said, licking her lips as she looked me up and down. \"...you didn't think we were finished, did you?\"\n\nI was quite content to take a nap right here for a bit after a fuck that hard, but looking at her like this, seeing this walking embodiment of sex itself wanting more out of me... that got me to sit up.\n\n\"Oh, I'm always ready for more,\" I said with a grin.\n\nViola smirked, tackling me to the bed and kissing me. \"Prove it.\"\n\n***\n\nI had no idea what time it was by the time Viola drove me back home, because, well, time has very little meaning around a woman like her. I was run ragged, and wrapped in what felt like a permanent blanket of afterglow from all the sex we had had. I could have kept up for Viola if she wanted to go longer, but when she wanted to cut things off for the night, I had no complaints.\n\nMy legs barely worked as I wheeled my bike back into the garage of my house, and by the time I made it through the front door, I found the siren call of my bed particularly loud.\n\nDad wasn't home, which was fine; the fewer obstacles the better.\n\nWith light coming from my bedroom, however, I knew I wasn't fully alone.\n\nAchingly, I stepped into my bedroom, prepared to be jumped immediately by Brooke King, but finding myself surprisingly satisfied when she didn't. The petite, pigtailed blonde wore a comfy pair of pink pajama bottoms and a matching pink t-shirt, laying down on my bed and reading.\n\n\"Hey, Ryan!\" she said, perkily turning toward me, before her smile turned to a look of concern. \"Jeez, you look like you, like, got hit by a truck. You alright?\"\n\n\"Not a truck. A particularly intense MILF,\" I said, taking off my pants, strolling toward the bed and collapsing face down on it.\n\n\"Same deal,\" Brooke said, stroking my hair. \"You want some distance, or some cuddles? This totally looks like a cuddles kind of day for you...\"\n\nBrooke, as horny a slut as they came, might well have made my month with the offer for cuddles.\n\n\"I can totally cuddle,\" I said, pushing myself onto my back with some effort and crawling beneath the blanket.\n\nTossing her book aside, Brooke joined me, cuddling up under the blanket and kissing my cheek.\n\n\"Then it's good for you I'm, like, totally the world's best cuddler,\" Brooke said, kissing my cheek and running a hand through my hair again. \"You did something good today?\"\n\n\"I did something good today,\" I replied, grinning at my girlfriend and kissing her lips, softly. I hoped I didn't still taste like Viola Kent, but given everything we did, I didn't think even the long shower I took would fully remove Viola's scent from me. Not that I wanted to forget them, I mean...\n\n\"Goodie!\" Brooke exclaimed, kissing my cheek again. \"Josie's out with her friends, I bet they're just having all sorts of fun playing with each other.\"\n\n\"I wouldn't be surprised,\" I said. \"You didn't want to go out with your friends?\"\n\n\"I was with Kaitlyn at the mall earlier, but I wanted to be here when you got back,\" she said, stroking my hair.\n\n\"Well, thanks,\" I said, kissing her again.\n\n\"Oh, it's totally my pleasure,\" Brooke said. \"And speaking of the mall, Kaitlyn and I, we saw Jennifer there with Peter and Sasha. They were just hanging out, having a good time. That one of the good things you did today?\"\n\nI smiled at the update. Having not heard from Jennifer since sending her away with Peter and Sasha, it was good for some kind of update. I didn't know what they were doing, or what I wished they were doing, but I was glad it sounded like she was having fun.\n\n\"That one's mostly Jennifer, but I helped,\" I said.\n\n\"Helping's good too. Everyone, like, needs help sometimes,\" Brooke said. \"Just don't work yourself too hard. We need to have you ready for our Valentine's surprise... Josie and me, we put a ton of work in on it.\"\n\nValentine's Day. Right. That was just around the corner, and if my plans all came to fruition, it would not exactly be a relaxed day for me. It would be fun, and I would get to do good things for a lot of girls, but I would be working myself pretty decently.\n\nBut for Josie and Brooke and the first year I'd ever have a girlfriend for Valentine's Day...\n\n\"I'll make it all good for you two, I promise,\" I said.\n\nBrooke smiled, kissing me and cuddling up against me. \"Goodie.\"\n\nI sighed, holding her close and feeling consciousness drift away, as images of pink and red hearts danced before my eyes, and thoughts of naked bodies and cummy moans brought an erection into even my exhausted cock.\n\nValentine's Day was coming, and I was ready for it.\n\n***\n\n(Author's Note 2: Writing this story is something I do in my spare time for fun, so if you're enjoying this, please, please, please drop some stars, reviews, shoot me some feedback or consider becoming a patron, as these really keep me going (and please vote on any earlier chapters you enjoyed if you haven't already!). Though I may not always respond, I do love hearing from all of you and seeing that you're enjoying the series. It motivates me to continue writing more. You've all been wonderful and I can't thank you enough for all of your kind words and encouragement and yes, even the constructive criticisms!\n\nAnd after some recent crises and battles, I want to add one last note on a more practical concern. When it comes to mental health, I hope everyone out there is taking the time to take care of themselves. Mental health may seem like a never-ending battle, but it's a never-ending battle that is always worth fighting, and one that there are plenty of resources to be found to help with should you ever be struggling. Be good to yourselves, and to everyone else.)"
    ],
    "authorname": "aimingtomisbehave33",
    "tags": [
        "18-year-old",
        "high school",
        "slut",
        "milf",
        "stripper",
        "cheerleader",
        "anal",
        "big tits",
        "creampie",
        "friends mom"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/senior-year-memories-ch-35"
}