{
    "title": "My Only Talent Ch. 18",
    "pages": [
        "My Only Talent Ch. 18\n\nThanks for Thanksgiving\n\nMy old high school nemesis, Alley Shitty, drove the big Suburban steadily north on the interstate, and I watched her progress as Jay and Nora slumbered. By the time we got as far north as Round Rock, all of Nora's defenses were completely down, and I had located her Suzie 'flight data recorder' and began to scan her sexual history. It was one with a few high spots but mostly disappointment. She had already told me that thanks to her parents instilling in her an abject fear of 'talent' males, and fear of sex in general, she got the same kind of indoctrination that I did about remaining celibate, and took it to heart just like I did. She had skipped so many grades that she did sixth form at Charterhouse being much younger than any other student there, but still she excelled. Probably due to her mega IQ, she found most of her so called elite classmates boring. There were a few incidents of sexually charged hazing, but she found none of them exciting in the least; they were merely something to endure and survive. \n\nShe did seem to have a tendency to attract the attention of what she had once told Suzanne she called the 'high born lout': a male from a storied family who seemed destined to not only disappoint academically but to be an embarrassment socially for many years to come. They seemed to believe they might somehow do her a favor by forcing themselves on her. She took classes in Krav Maga and actually had to use it on one pushy toff who had a very tenuous and probably false claim to royal lineage as a descendant of Eggbert of Wessex. She was happy to leave her so-called social circle behind in choosing to go 'across the pond' to ESU, where she encountered a few students with intellects that were comparable to hers, and some others that were on the complete opposite end of the bell curve. She did develop crushes on one male and one female peer, and as a seventeen year old rising junior, she had her first two sexual experiences. I located the entries in her 'flight log' and began to drill down for the details and the effects the experiences had on her.\n\nNora almost woke up when an Ill considered lane change by a big truck caused Alley to lean on her horn for a while, but then she settled back down into my shoulder and continued her unprotected slumber. I resumed my Suzie snooping.\n\nA female classmate named Hannah flirted with Nora, and in one passionate encounter, confirmed Nora's potential for attraction to and satisfaction with another woman, but the classmate's next day denial that it even happened had ultimately made Nora even more fearful and suspicious and too scared of taking the risk of another such relationship. In her history, Suzanne was linked to this other girl, because as near as I could tell, she was the only other woman that Nora trusted and was also attracted to. She just didn't want to risk having a sexual adventure that ruined their friendship, especially since Suzanne, as her supervising TA, was officially her 'boss' from the ESU point of view. \n\nBefore meeting Suzanne, she also developed a major crush on an ESU incoming freshman football player, who was just about as much an opposite from her former British plonker pursuers as one could possibly imagine. Jalen was big, black, and smart, almost as smart as she was, and he must have had good taste, because he fell pretty hard for Nora, pursued her avidly, and he caught her. The sex was great for them both. But his judgment was suspect; perhaps he was spoiled because of the Texas football culture that a good player can do no wrong. Nora was deeply offended by him wasting his potential by taking easy classes for a dead end sports marketing degree, since he was sure he would make it in the NFL. He also desperately wanted to be another kind of 'player' to be seen in clubs and be photographed with rap stars, hardly Nora's goal for him. But the straw that broke the camel's back was his announcement that he could no longer have an exclusive relationship with Nora as his only girlfriend, because she was now just one of his 'string'. Her distrust of the male of the species was now just as strongly reinforced as it was for the female. \n\nSince those two ultimately unsatisfying relationships, Nora had been throwing herself into her studies, sublimating her desires. She had certainly excelled academically, and was about to finish two degrees in three years, but she was horny as hell, just like Suzanne had been. She wanted Suzanne, and she wanted me, and the prospect of having both of us at once was galvanically exciting for her, and in fact it was the central image in all her masturbatory activities since the current semester began. But her fear and distrust, plus her parent's early indoctrination, was enough to keep her from actually taking advantage of the opportunity. There was some other connection to all this that I could not tease out, another signal akin to the others but different. It was linked to all the sexual images I was deciphering, but I couldn't pin down what it was. \n\nI did find that my newly developed and improved Suzie signal receiving capabilities allowed me to delve into her recorded fantasies in detail, and I was just about to tap into and enjoy playing them back in chronological order when Alley Shitty's voice broke my concentration, and what's worse, startled Nora fully awake.\n\n\"Salado, Texas, everyone! Shopping stop in progress! This is a great place to get an early start on Christmas shopping, with stores full of unique stuff nobody else will find to give to any of your friends and family.\" \n\nSuddenly Nora and Alley were best buds, sharing Christmas gift lists and suggestions. Alley parked on the south end of a strip of stores east of the interstate, and they announced they were going to work their way north for an hour or so. Jay and I realized we should probably look for few gifts too, and we sheepishly tagged along. Nora took charge of making me choose appropriate gifts for my mother, grandmother, older sister, and Lara and Suzanne, tapping out my gift budget and all the money I had made on Kevin's bets at the fraternity and sorority mixers. Alley did the same for Jay in searching for gifts for the females of the Kincaid clan. Two hours later we were back on the road, but Nora was now energized and never got even close to going back to sleep.\n\n.....\n\nSarah Stevens Susskind was on a mission. She told her parents she was going to visit a new friend in Dallas first, then drive on to Texarkana to meet them at her grandmother's for Thanksgiving dinner. She actually planned to spend every minute until early Thanksgiving morning following Robbie. She was devastated that he had not wanted to spend Thanksgiving with her, and she was never going to let that happen again. She was going to find out what he was doing, who he doing it was with, and see where his family lived. Robbie had never seen her car, and it was well suited to her surveillance mission: an average looking grey Jetta TDI that got great mileage and could go over 600 miles on a tank of diesel. \n\nShe had no trouble following the big Suburban on the interstate, and she stayed close to their car while Robbie and the others went shopping at Salado. She took advantage of the break to go to the bathroom and fill up her fuel tank. But not long after they left Salado and went north again, she was foiled when they went through a private gate where she could not follow. She found a place to park that was shielded from view by some trees, and waited, watching that gate, and accessing Google Earth on her smart phone to try to see where that gate might lead. \n\n.....\n\nAfter the shopping excursion broke the ice, we had a lively conversation on the road, talking about the gifts and which family members would be home for Thanksgiving, which naturally led to some family stories. Alley actually seemed nice and almost charming, and I was getting used to her voice; it didn't grate on me quite as much. After we passed through Hillsborough, Jay gave Alley some directions and we headed east toward Ennis, though some winding county roads, and then through a gate that Jay had the code for and then onto a very well maintained private road that traveled for several miles. We arrived at a big ranch entrance, the kind that you usually only see in Texas and parts west. A huge metal frame was festooned with hundreds of antlers: not just whitetail, but also elk, ibex, and several species I could not easily identify, plus a few longhorn skulls thrown in for good measure. These ranch entrances had symbolism like totem poles, and this one said big ranch, big money. There was a big stylish \"W\" atop the arch, not a \"K\" for Kincaid, massive concrete barricades around it, and two substantial motorized metal gates, spaced far apart, like the entrances to some military bases I had seen. There was also high game fence on either side, running as far as I could see, plus some amazingly thorny and strong looking bushes just outside the game fence. \n\nBut both sets of gates were wide open when we got to them, presumably in anticipation of Jay's arrival. As we passed through, I noticed that numerous video cameras were secreted inside the antlers, facing in almost every direction, plus some other stuff that didn't look like cameras to me. The gates closed immediately after we went through them. We drove about a mile on a paved road, then topped a little hill, behind which was a big stone house that would have fit in well in any tony subdivision in North Dallas. Jay directed Alley to pull up near the six car garage. \n\nThe first thing I saw approaching us was a pack of black and white dogs. They were moving so fast that I could not be sure, but it was either four very fast Border Collies, or five merely quick ones. Jay got out of the Suburban, and the dogs raced around him like a dust devil on a hot prairie day. Jay reached down and managed to playfully cuff each dog on the head a few times, and the contact seemed to settle them down a bit. A passel of children followed close behind: two boys under five years old, running for all they were worth, a pair of blonde twin girls about ten, and two teenagers; a blonde boy that looked like a younger version of Jay, and raven haired girl. The smaller of the two boys reached him first, and Jay put him up on his shoulders, and then he was surrounded by the rest of them, hugging and tousling hair. Jay retained the shopping bag from Salado, but the twins carried his backpack, and a big duffel bag that I suspected was full of dirty laundry. Mine was.\n\nA troop of adults met us and Jay insisted we come into the house for a minute. From the family resemblance, I tentatively identified Jay's mom, and grandmother, but my real surprise was Jay's grandfather, because I recognized him, and that explained the \"W\" on the gate. John Jacobin Warner, also known as \"Cactus Jake\", was one of the wealthiest and most influential oil men in the state. I knew the Phi Iota Gamma's were supposed to be the frat of choice for big money families, but this guy could probably write a check for the entire net worth of every other family with a son in the frat, and not just the ESU chapter, either. I had been assigned a 'compare and contrast' paper on him and \"Cactus Jack\" Garner in high school. Warner had a lot more money, and hated publicity, so had no catchy quotes. I had found one of the very few recent pictures of him for my report. The last six of eight Texas Governors had been his choices for backing, and it was said that he could handicap politicians the way some folks could pick horse races. If he made a donation to a candidate's campaign, literally thousands of other donations would immediately follow, and nobody was ever appointed to the board of regents of ESU or any other state funded school without his blessing. \n\nAfter introductions all around, Jake's grandmother took Nora and Alley further into the house for a chance to 'freshen up' and the kids dragged Jay to the stables to see a new foal. \n\n\"Cactus Jake\" made an attempt at conversation with me. \"So are you in the frat with Jay?\"\n\n\"No sir, but I did meet him there. We were introduced by Theo Cadwallader. I know Alley from high school, and I think Jay met her at a KKG mixer.\"\n\n\"You don't sound like you are from the East, like Theo.\"\n\n\"No, sir, I was born in Highland Park, but my folks live in Prosperous now.\"\n\nHe made an abrupt change of subject. \"You sure cut yourself a fine filly out of the herd with that Nora. She is classy as hell and hot as a depot stove! I wish Jay would bring somebody like her home instead of the bubbleheads and bimbos he has taken up with so far!\"\n\nI wasn't sure what to say to that, but he continued so quickly that I didn't have to.\n\n\"In the old days, the purpose of the fraternities and sororities was to make sure if a girl did get knocked up at college the families would be compatible when the lucky couple got married. Now everybody apparently knows how to fuck their brains out without getting pregnant, but I was hoping he would at least meet some nice long term prospects, in addition to the tattooed banging bimbos. How long have you been with Nora?\"\n\nNow I did have to say something. \"Well, Nora and I are just friends. She lives in the same dorm that I do, and is also good friends with the girl that I am dating. She is from England, and my girlfriend is traveling elsewhere over the holidays, so I asked Nora to come to Thanksgiving with my family. \" I didn't think it necessary to tell him that Suzanne and I were actively plotting to try to get Nora into bed with both of us. \n\n\"Robbie, if I may, I have learned to read people pretty well over the years, and just by observing her for one minute I can tell you three things about Nora: she is smart as hell, she is hot for you, and she is the marrying kind, not the sleep around kind. Those are all real good things in my book, and I think you are very lucky.\"\n\nBy this time the females were 'freshed and back, and we said our goodbyes and got back into the Suburban. Nora sat in the front so Alley wouldn't suffer from 'chauffeur syndrome' and I felt like a lonely little puppy in the back seat. We headed back to the main road, and the gates opened as we went through and closed them immediately behind us. Alley cranked in the cruise control, checked that her phone was getting 4G, and then put on Pandora radio through the stereo system, and the big land yacht cruised toward North Dallas, fully supplied with some tunes. \n\n.....\n\nSarah had pulled up the photos she had taken in Salado, and was trying to match them to Facebook pages of ESU first year Greeks as a starting point. She had located Alley right away and a name search pulled up lots of KKG party photos of her, but none with Robbie. A further search revealed that they had both graduated from the same high school, in Prosperous, Texas. Was she an old girlfriend only, or still in the running? Jay Kincaid was pretty easy too, a PIG pledge supposedly from Waxahachie, which was not far from this still mysterious and impassable gate, and for some reason when she tried to trace the road, Google Maps said \"we don't have imagery at this zoom level for this region\". The other platinum haired girl did not turn up on any of the Pan Hellenic pages, nor in any search using Alley or Robbie's name, and a brute force search of all the possible images take too long. Maybe she wasn't a freshman, so her picture might be in last year's Cactus yearbook, but that was a lot of faces to search through, too. Her concentration was interrupted when the unmarked gates opened and the big Suburban passed through it and back onto the highway, again heading north. Sarah pulled in behind and then let two other cars interpose themselves, like the articles she had found with Google said she should do when tailing someone. \n\n.....\n\nPandora was never predictable, but Alley switched things around until she found a TMZ update, which mentioned Austin, so she left it on, and the first item was about the 'addicted to' party. The report played through without anyone interrupting, mentioning Julie Angel and the two reporters dancing naked, plus the entire pledge class from an ESU sorority, and the paparazzo's desperate search to find the party, getting a few pictures just as it broke up. \n\n\"It defiantly wasn't the KKG pledge class dancing naked\", Alley snorted condescendingly. \"But I would have liked to have been there to see the party!\"\n\n\"It was the 'Bi Phi's' according to my sources at the dorm,\" offered Nora. I hadn't said a word about the party to anyone, and didn't plan to, but Nora knew about my 'Master' get up and Lara going to Professor Lillehammer's office with me in her costume, and Suzanne might have told her about the party. \n\nAlley said, \"That makes sense. I heard the TMZ reporter was a Bi Phi when she went to ESU. It must have been quite a thrill to know you were naked on an international video story like that!\" I heard a sudden and sizzling Suzie signal from her, not focused on any particular prospective partner, but just generically horny. Did she have an unresolved exhibitionist streak? I seemed to remember some high school gossip about her losing her top on the diving board at her country club pool once, and how some girls thought she did it on purpose. \n\nThe TMZ report then teased some 'pending updates' with more details on the party, who was there and who wasn't, and the 'sexy stage show'. Robbie hoped that referred to the chorus line number, not the sexual fortune teller bit. He really didn't want to attract more attention right now. Reporters apparently now made a science of tracking private jet tail numbers, and used them to watch which celebs, politicians, sports stars, and billionaires went and when. My father said this was making business better for NetJets and other jet sharing firms, and that many of the 'swells' as he called them had private jets in their name that could be easily tracked, but often used NetJets for their trips, so that the reporters could not be sure who was in a jet that was shared by many clients. Rodney Driver told me that Julie Angel and her husband often sent their jet on decoy runs just to frustrate the paparazzi, while they took a NetJet aircraft to their real destination, and that they also said there were some tricky airports that you really wanted a highly experienced NetJet pilot to fly you into, not your personal pilot who only flew that approach once every two or three years. He said one sure sign of a B list celeb trying to get more publicity was buying a cheap but individual private plane that could be easily tracked, hoping to get some ink. My dad used to track tail numbers to have 'accidental' meetings with sales prospects, but now he had to resort to other methods.\n\nMy phone beeped, signaling an incoming text from Suzanne. The only advantage of being alone in the back seat was that I could text in private, without Nora looking over my shoulder. \n\nSUZANNE: sad and boring in SA :(\n\nROBBIE: ({}) \n\nSUZANNE: have you seduced Nora yet?\n\nROBBIE: not yet, but she did fall asleep on my shoulder in the car :D \n\nSUZANNE: bag that babe and bring her to bed with us ;;) \n\nROBBIE: may take until after xmas\n\nSUZANNE: worth the wait :P \n\nBy this time Alley had made her way up the interstate, moving slowly through the afternoon rush hour traffic, and finally jogged right onto the Tollway, which while still crowded was moving faster than the other alternatives. We quickly crossed the LBJ and then the SRT and we were getting close to home base. My father took perverse pride in their new place having an address on a numbered Farm to Market road. Alley's family bought a big place nearby at a bargain price on a road with a real and prestigious name, as my mother used to say to tweak my father, thanks to an over-drafted Dallas Cowboy football player that bought high and had to sell low after his initial contract was not renewed. My dad had picked our new house right after I graduated because he found a nice big place far enough out of town to not have any next door neighbors and room for Grandma's garden, but from which taking the Tollway and then the SRT got him to the airport pretty quickly even during rush hour. Alley's dad picked his house as a fancy showplace, for purely business reasons. ",
        "Alley's parents were interesting. They met in law school at SMU, and Alley's mom was a conventional and very successful real estate attorney, specializing in contracts for large and complicated multi-property deals. Jerrold, Alley's dad, was trained as a personal bankruptcy lawyer, but he didn't practice law. His parents had run a pawn shop in a seedy part of Dallas, but made their home in Highland Park, perhaps in the least expensive house in the zip code, so that their kids would go to the good schools there. Jerrold had grown up working in the pawn shop, and had a considerable education in scams, fraud, credit problems, and general personal financial mismanagement before he had ever entered law school. He had taken over his running parent's shop just as the Texas legislature was authorizing more pawn shops, and he had used all his SMU connections to get more than his share of the new licenses, and now owned the biggest collection of pawn shops that was not part of a national chain, with stores all over Texas. He was very objective in his approach to the business, doing what worked because it worked. He discovered that his customers, the 25% percent or so of the population who did not want or could not get a bank account or credit card, responded well to ostentatious displays of wealth. The bigger the Rolex or Patek Philippe and diamond ring that the store manager wore, the more the customers respected them and felt secure in dealing with them, and the more money Jerrold made. The store managers and their customers also respected Jerrold for displaying even more wealth than they did, so he drove around to his stores in a red Ferrari or pearl white Bentley, with big and showy reserved parking spaces for them in front of every store, and displayed all the other trappings of wealth he could find.\n\nThe latest downturn in the economy was very good for Jerrold's business, even though Texas was far better off than most states, and he was making more money than ever the last few years, in fact, he was hard pressed to spend or invest it all. He also dearly loved to get a bargain when someone else had financially overextended themselves. So when that Cowboy's player had to sell one of the most overbuilt, pretentious, and showy houses in North Dallas at a fire sale price, Jerrold was all over it. Since he bought it, he had monthly parties for his store managers and employees there, giving out lavish sales prizes and making presentations of profit sharing checks with ceremonies that rivaled the academy awards. All his employees loved working for him, and strove mightily to outdo each other and get good results, promotions, and more bonuses and awards. \n\n.....\n\nSarah was not expecting toll roads, and she did not have a toll tag on her car. But she had to follow, or else lose them. She had already looked up Robbie's home address, but they could be going lots of other places first. It would mean her dad would get a bill from the toll road authority in the mail, probably with a picture of her driving maniacally, but she had told them she was going to Dallas, so it should be okay. She moved up a little closer so she would be sure to see what exit they took.\n\n.....\n\nAlley took the Preston Road exit and turned east on the Farm to Market road, turning away from her house, and negotiated the last few blocks towards my driveway. \"I'm letting y'all out first,\" she said, \"but my Mom demands that you two come by to visit. We are having our open house tomorrow night, and I think your folks are coming, Robbie, so y'all come too.\" Nora immediately accepted on our behalf. I supposed it was unavoidable. We pulled up into our long driveway, and I quickly unloaded our stuff just as my Mom appeared through the garage door. She actually hugged Alley first, as she was old friends with her mom, and then hugged Nora next, but then I got an embarrassing kiss. I was wondering how my parents would react to Nora, before and after we talked about her 'talent' or ability to resist my talent, or whatever the proper term was for it. After a few minutes of talk, and some impromptu planning for getting together tomorrow, Alley headed for her place. \n\nGrandma and Granddad met us in the mudroom, along with the dogs. Our oldest and wisest female, Eldee, who didn't really like anybody much except occasionally Grandma, went crazy over Nora. When Nora sat next to Grandma on the family room couch, Eldee immediately put her chin right on Nora's feet and went to sleep. That was absolutely unprecedented. Normally she stays 'bewaken': on watchful alert when there is anybody new to her within a quarter of a mile. The talk soon turned to cooking, and I took the opportunity to carry my stuff up to my room and Nora's to my older sister's room, which was functioning as Nora's room for this trip. The other three dogs followed me up the stairs, but Eldee stayed glued to Nora. I looked out at Grandma's big new garden and the big pond that was east of our new house. There was a dirt road that ran just past the pond, and I saw a car on it, which was unusual. The dogs noticed it too, and gave a quick bark, and then streamed down the stairs and out their jumbo sized doggie door. \n\n.....\n\nWhen Sarah looked up Robbie's address before the trip, there were two, the newer one had sounded like a standard subdivision, and that was what she had expected. But it turned out to be a road with only one house on it, and it must have been built on ten acres or more, plus a lake next to it. She quickly turned around in the road, which was really Robbie's driveway, before she got too close to the house, and made a wide circle around the place. She found a dirt road east of the lake, and tried to go all the way around the compass, looking for a good observation point. The house had a privacy fence and gardens and dense plantings all around that made seeing into it almost impossible, even with the nice binoculars she brought with her. As she reached the south edge of the road, and turned back toward the west, three big black dogs loped out of the back of the house and started towards her. They couldn't have spotted her! But they stayed parallel to her path around the house, just inside the fence, not barking, but she felt their eyes on her. This was going to be harder than she thought, but Robbie was worth any price!\n\n.....\n\nBy the time I got back down the family room, there was already a girl's only grocery and produce shopping trip planned for early tomorrow morning and my dad had arrived. He greeted me warmly, and took the same kind of liking to Nora that Eldee had, also virtually unprecedented, and then took me aside to ask if I had seen the strange car circling the house. Grandma and I took Nora out to the garden, to give her a tour and to gather what was available for supper tonight. It was the very end of the line for the fall outdoor crops, but the greenhouse cheated the seasons pretty well. There were bush beans and squash enough for tonight, plus lettuce, tomatoes, onions and peppers from the greenhouse. My Dad fired up the grill, having already defrosted some venison steaks in anticipation of our arrival, and soon we were sitting down to simple but very nice meal. Afterwards, Grandma and my mom took Nora back into the family room for the inevitable photo album game of 'look at Robbie when he was little' while my Dad and I cleaned up and put the dishes in the dishwasher. This was an old family custom that allowed both groups to talk privately. \n\n\"So, Robbie, I saw your midterm grade report, and it looks like you are on plan for the class work part of things. How is the dating game going?\" I was surprised he hadn't just gone for the Nora issue right away. I told him about my early Suzie signal experiences with Janet, the frat mixers, Suzanne, and Lara, and then my bad experience with Melanie. He seemed surprised about me being able to detect Melanie's melt down, saying it took him until he was in his mid twenties to learn to detect that, or that maybe he just didn't encounter anybody as unbalanced as Melanie until then. I told him about Suzanne being the first 'dream girl' that also sent Suzie for me, and my tennis game with Lara, and understanding what Lara had really wanted and needed, and being able to give it to her, and how the relationship with Lara and Suzanne had evolved. \n\nHe whistled. \"That can be very touchy stuff, son. I played with that kind of fire a few times when I was younger, and I almost always got my fingers burned, among other things! So tell me about Nora.\" \n\nI went through my meeting Nora in the dorm, and seeing how classy she was, but detecting no Suzie from her and being disappointed, then hearing the 'little bubbles', and how easy she was to talk to, and how smart, ...\n\n\"Good grief, son. Do you realize how bad you have it for her?\"\n\nI told him about Suzanne, and our discussion of wanting Nora to be with both of us, and he looked alarmed. But when I told him about Nora telling me she knew I was a 'talent' and how she could suppress her signals, his face turned a strange shade of grey. \"Holy Shit, Robbie, what are the odds? Did you say she was from England?\"\n\nHe went on to explain that we had distant relatives from England, and some of the males had 'the talent' but only a little bit, but others supposedly had a lot. Most of the 'American' branch of the family had just the low level ability, until My Granddad and then my Dad came along, both with a much stronger 'gift' than anyone before. Then he really shocked me, by telling me that my cousins from Boston, who were supposed to arrive Friday, had all three made it to age eighteen now and showed no hint of any ability at all, even though their father, my uncle, had a little bit of it. My uncle had never told his wife, and he had decided not to tell the boys anything about an ability they were never going to have, and my Dad warned me not to talk to them about it either during their visit. I told him about meeting Cactus Jake, and what he had said about Nora. \n\nHe made a snort. \"I have been involved in planning two campaigns that Warner was bankrolling. He does have amazing insight into politicians, but I didn't know that his talents extended to handicapping women.\"\n\nI told him about my increasing sensitivity in the last few weeks, and about being able to send 'pings' and 'blasts' and reading images on carriers and accessing a woman's 'flight data recorder' and what it revealed to me. He asked me a lot of questions about where the signals were in relation to the ones he knew, and how the images appeared to me. He said he had never heard of anyone being able to do these things, but had heard stories from my great grandmother about some different abilities that some of the distant male relatives from England supposedly had. His first major concern was how closely Nora and I might be related.\n\nBy then the three women were calling to us to join them in the family room, where apparently the photo album ritual had just about played out. When we came back in to join them, my mom took one look at my dad's face and knew immediately that something was up. Eldee was still lying at Nora's feet, happy as a clam, in fact the last time I had seen her be this calm and contented was when she was nursing her final litter and she had a pup at every teat. The other dogs, however, were very nervous, and kept going in and out of the doggy door, as if at least one of the three was always on duty outside. \n\nMy Mom rose, taking my Dad by the hand. \"Help me make doubly sure that the guest room is ready, dear! Y'all just relax with Grandma for a little while and we'll be right back.\" \n\nWith that they trooped up the stairs, and I knew my mother would quickly get everything that I had told him out of my Dad. She was nothing if not persistent. Nora and Grandma discussed the division of labor for cooking Thanksgiving dinner, and Nora slowly drew her out about the things she wasn't planning to do this year because of her physical limitations brought on by age. Nora was remarkably patient and insightful, and eventually had my grandmother promising to let Nora do them all, under the guise of teaching her the recipes. Nora had never made cornbread dressing, for example, and she sure didn't know how to make any of the various kinds of tamales that we traditionally had for supper on the night before Thanksgiving and on Christmas Eve. All of this resulted in expanding the shopping list for tomorrow morning's excursion, and adding a few stops for the additional items. \n\nMy parents returned from upstairs, and I was afraid my Mom would organize a card came or something. My stomach was already growling, since I had burned a lot of energy reading Nora's Suzie history in the car, and there had been no dessert after dinner tonight. I began plotting some way to get out for some ice cream, but Nora solved my problem for me.\n\n\"Robbie, would you take me to a film tonight? I am too wired to get any sleep yet, and because of my course load in school, I haven't been to one since early September.\" She already had one picked out on her phone, and my Dad volunteered the keys to his nondescript 'airport car', that spent most of its time in long term parking, and we were on our way. Nora immediately texted Alley and invited her along! WTF?\n\nNora put her phone away and said \"I want to have a talk before we pick up Alley!\"\n\n\"Is this the part where you ask me whether I wanted Alley to come along or not, or did we skip that part?\"\n\n.....\n\nSarah had found a spot to park where she thought she could watch the comings and goings at Robbie's house, but she couldn't stay here all night, because some passing cop would get very suspicious of any car parked out here instead of at a house. \n\n.....\n\n\n\n\"It only takes about three minutes to get to Alley's house, Nora, so talk fast!\" I was pissed off, but not exactly sure why.\n\n\"Is this our first fight, Robbie?\" Nora said in her best upper class British biting tone.\n\n\"No. Our first fight would have been when you dressed me down for 'taking advantage of' Suzanne and you were off base then, too!\"\n\n\"Aren't we stroppy tonight? Why do you treat Alley so poorly? \n\n\"She chased me incessantly all through high school, but I could tell she really didn't like me, if you know what I mean.\"\n\n\"Not like Suzie liked you, you mean?\"\n\n\"Yes. Plus she was always so pushy and had to have her way and have the last word every time! If her Mom and mine weren't friends, I would have told her off long ago.\"\n\n\"So you suffer in silence and then vent your spleen on me, is that it? And she hasn't been pushy so far. She has been very nice to me!\"\n\n\"She does seem to have gotten a little nicer, I'll admit that. You two seem like best buddies already.\"\n\n\"I like her, and I'm guessing she has lots of acquaintances but few friends. Can we agree to treat her based on how she acts now, not how she acted in your prep school?\" \n\nBy this time we were at Alley's house, and she got in the back seat. \"Thank goodness! My mom was about to drive me insane already! I'll go to any movie just to get out of the house!\"\n\n.....\n\nSarah was using her smart phone to try to find a motel room nearby when a pair of moving headlights caught her attention, and dark sedan pulled out of the driveway and headed west toward Preston Road. She followed. They turned north on Preston, and soon pulled up to a house at least twice as big and three times as ostentatious as Robbie's, but on a much smaller lot. That same Alley girl that had driven them up from Austin came out of the house and got into their car. As it pulled back out onto Preston, she caught a glimpse of Robbie driving. Her heart leapt into her throat. Why was her Robbie with those other women instead of her?\n\nShe followed them west and south to a giant and brand new looking mall that seemed as big as the entire ESU campus. There was a sixteen screen cinema complex on one end, and that's where Robbie drove. She stayed with them as they parked and went into the theatre entrance, but she took so long parking and did not see which individual screen they went into. She also did not notice that Robbie led the two girls, over protests that they might be late for the start of the film, to an ice cream place inside the mall where he bought a large dish and began to wolf it down. Scanning the show times, she saw three likely movies, and checked all three, not spotting them, and then her cover was almost blown as she just about walked right into Robbie when he put his ice cream dish in a trash can as both of the other girls urged him to hurry up. Luckily, Sarah had on her blonde wig and big white plastic glasses, also suggested by the article she had read. They went into SkyFall, and Sarah took a seat many rows behind them. Robbie sat in the middle with the two interloper girls on either side of him. \n\n.....\n\nRobbie thought he sensed a strange Suzie signal just before he went into the movie, and it made his hair stand on end. It was not as disturbing as Melanie's meltdown, but it was in that direction and yet it somehow seemed familiar. Maybe it was just being around Alley and Nora plus an insulin reaction to the big dish of ice cream he had just polished off? His hunger pangs were happily almost gone. The girls tugged him into the movie, and suddenly they were all lost in the world of James Bond. Robbie knew he would like to get lost in the arms of Nora Upman.\n\n.....\n\nRonnie Roberts chuckled to himself as he thought about his son's return home. Robbie had never done anything by half measures, and his college education was apparently no exception. Ronnie used to be worried that the boy would be born retarded and talentless, but he spoke early, leaned to read early, and when he did start school, immediately got moved up several grades. He seemed to physically mature a little more slowly that most, like most Roberts males did, but when his voice finally began to crack at age 14 he almost immediately began to ask why Suzie Packard made him feel funny, like she was staring at him behind his back. When he went off to ESU, Ronnie was hoping that his boy would just manage to connect with a few woman and get laid his first semester, but it sounded like he already had enjoyed a lot more and better action than Ronnie himself got in four years of learning to use his talent at the University. \n\nHe sure brought home a rattler with that Nora, too. Classy, gorgeous, smart, well spoken, and also some sort of anti-talent? How could Robbie just be friends with someone like that? He was right about her signals, though; they were strangely attenuated, almost like they were being strangled. And he had never, ever seen that suspicious old war hound Eldee take to someone like that, but the tough old bitch was now defending Nora like she had her last litter of puppies, and seemed just as content about it too. The other dogs were acting strange also, and Ronnie had learned to pay attention when any of them did that, much less all four of them. As soon as Robbie and Nora left, the other three dogs stopped running in and out of the doggie door and checking the yard every two minutes, and came in, drank some water, and settled down and went to sleep. Eldee, on the other hand, began going out of the door in their stead. Ronnie watched her, and she went out the driveway and sniffed the air toward the road, perhaps wondering how long until Nora got back? It made him nervous.\n\n.....\n\nSarah figured her targets would be in the movie for a while, so she found a spot in the food court from which she could watch the movie exits and had some supper. She didn't want to overdo it: she had to keep her figure nice for the wedding. She used Orbitz to find a hotel room in nearby Frisco, Texas, and made a reservation: she was getting a little tired. She used the restroom and then went back to her car, from which she could watch Robbie's car. She just had to make sure not to fall asleep.",
        ".....\n\nBoth girls gave me hell, but my stomach was growling again and I went back after the movie and got two scoops in a cone, telling them if they didn't want to wait they could walk. The both razzed me about my sweet tooth on the way home. When we got back to Alley's driveway, she said \"Robbie, I need to tell you something, and Nora, I want you to hear it too.\"\n\nI had heard that tone before from multiple females. To me it meant 'turn off the engine we are going to be here for a while' so I did just that. Nora and I both turned toward the back seat expectantly, but I could not even guess what Alley had on her mind.\n\n\"I wanted to apologize, Robbie, for the way I acted toward you in high school. I was chasing you, but for all the wrong reasons, and I now realize you had no interest in me at all, sexually, so I just made you feel uncomfortable.\" \n\nI got some sort of simultaneous Suzie blip from both of them, sort of the baby version of the way it was when Lara and Suzanne got all fired up and their signals resonated and beat together. Was this mild signal empathy and shared feelings and the other strong one shared passion and ecstasy? I then spoke without thinking, my usual modus operandi. \n\n\"Actually, Alley, I always thought you were nice looking and smart, I was just put off by how aggressive you were, plus I didn't really think I was the man of your dreams either.\"\n\nShe laughed, a sad little burst. \"I'll be honest. I was just horny as I could be all the time in high school. I wanted to jump everything in pants. I had it so bad that I actually asked my mother, God forbid, for advice about it. She told me to wait as long as I could until I found 'someone special' but that if I just couldn't wait, I should try to seduce you. I had told her you were one of few guys who hadn't screwed Suzie, and she said you would not gossip and tell everyone if I did go all the way with you. That's why I was so aggressive. You were the only real option!\"\n\nThat explained a lot. But wait a minute. \"It wasn't that I didn't find you attractive Alley, absent all the aggressiveness, but I never 'went all the way' with anybody in high school!\n\nShe looked shocked. \"Debbie Grossman said she was going to do you after the junior prom, and afterward she said it was fantastic! What about Cecille Dunlavy?\"\n\n\"Nope. We had some nice make out sessions, but that was it. I promised my parents and grandparents that I would remain celibate until my 18th birthday, and I did.\"\n\n\"But your birthday was after graduation! So even if you found me attractive, you would not have... you mean I never had a chance to get you?\"\n\n\"Not back then.\"\n\nShe was silent for a minute, and then her face contorted. \"My fucking mother! She's besties with your Mom. She must have known about your promise. That's why she sicced me on you! She knew you were safe target that I couldn't hit! That manipulative bitch!\"\n\nI suddenly thought of something. \"While we're playing truth or dare here, Alley, what about that time at the country club that you lost the top of your suit? Did you do that on purpose?\"\n\nShe turned so red that it was obvious even with just the light from her porch lantern coming into the car. \"That was an accident! But it got me hot as can be, and it freaked my Mom right out, too. In fact, that gives me an idea....\"\n\nShe opened the car door and I got out so I could walk her to her front door. I paused and she hugged me. \"Robbie, if I ask you a big favor will you please help me out with something?\"\n\n\"Maybe, but I need to know what it is.\"\n\n\"I need to think about it a little more, but Sunday night, right after Thanksgiving, I may want you to take me out somewhere!\"\n\nI got back in the car, and Nora tickled me and said \"My my, another fit bird that wants to nest with you! I tickled her back and soon found my hands cupping her breasts. We had one quick wonderful kiss, and then she shut herself and me down completely.\n\n\"No, I mustn't! Let's please go back to your house.\"\n\nWhen we got back my Dad and Eldee were waiting up for us. Nora bid everyone good night and Eldee started up the stairs with her. Nora turned to my dad and asked \"Is she allowed to sleep upstairs in a bedroom?\"\n\nHe laughed. \"Eldee and all of our dogs pretty much have the run of the place. She seems to have decided to herd you and guard you, Nora, and I'm not sure we could stop her if we wanted to.\"\n\nNora ruffled Eldee's ears. \"I would love to have you with me old girl! Let's go.\" They disappeared up the stairs. I suppose I would have to tell Nora how Eldee and all our dogs were trained, and what they were capable of. Nora may have been the safest young lady in Texas that night. \n\nI spent a few minutes talking to my Dad about Alley, and her mother. He laughed. \"That sounds just like something Alley's mother would do. She sometimes prefers manipulation over honesty. That may backfire on her.\"\n\nWe talked a little more about my experiences at ESU, and I told him about my growing appetite and growling stomach. He said he had the same problem when his talent was 'growing' and his college basketball coach made him drink chocolate milkshakes with raw eggs in them to keep him from losing weight. Damn that sounded good right about now! But I went up the stairs and was asleep in my old bed in less than a minute.\n\nI was determined to sleep in, but I woke at my normal time, with my normal hunger. I smelled bacon downstairs and something else new and enticing. I put on my cold weather running gear, brushed my teeth, and made my way to the kitchen. Nora, Grandma, and my Mom all three had their heads together over a cookbook, in deep discussion. Eldee was happily liggen on the floor between them; wagging her stub of a cropped tail (which she seldom did) and watching me approach. The other dogs were once again circling the fence line warily. \n\nGrandma was in control of the kitchen this morning. \"Get yourself some bacon and eggs, Robbie, and we'll have something new coming out of the oven in just a minute to finish your hunger off. Nora is teaching us how to make proper scones, and we're using the last of the garden blackberries up in the process.\"\n\nThey didn't have to tell me twice, and that explained the wonderful new smell. In a few minutes, Nora served me two hot scones, full of blackberries and pecans, with a little butter. I'd never tasted the like. My dad was not far behind me and was just as impressed as I was with the fare. He was off to meet with a client for the morning, and the kitchen crew left on their shopping trip, leaving me to clean up the kitchen. Eldee seemed offended at not being chosen to go shopping so she hung out with me, not doubt her distant second choice. She sat in the driveway and sniffed the air while I used the running path around the pond, putting in five miles, and then doing a mile sprint, and another mile of jogging to cool down. It felt great, but toward the end I got a hint of that same unhappy Suzie that I heard last night, only weaker. The three younger dogs were stationed at the perimeter fence, watching a grey Volkswagen sedan parked on the road near the neighbor's place. Maybe they had company visiting for Thanksgiving too.\n\nI went back into the kitchen, already hungry, and found a big Tupperware container of incredibly dense fudge and brownies labeled \"Robbie\" in my grandmother's hand. They were the perfect emergency stash for my sugar cravings. I went back upstairs and took a shower, putting on some regular clothes just in time to help unload the stuff when the cooking party returned from the shopping excursion, which was substantial, and then was informed that lunch would be out, not in, and that I was coming along, or going hungry.\n\nMy mom announced her intentions. \"First stop is to buy you some new pants Robbie. Your old ones are all too loose at the waist and too tight in the butt and thighs.\"\n\n\"Well I have been running a lot more since I got to ESU, Mom!\"\n\n\"That would explain your waist and thighs perhaps, but not your burgeoning bubble butt! What have you actually been doing?\"\n\nNora sniggered from the back seat, and then said in her cutting English schoolgirl accent \"Perhaps lots of 'traveling lunges', Master Robbie?\"\n\nLuckily we had arrived at the mall, forestalling further such conversation. A few horrible childhood memories were resurrected while I tried on enough pants of various varieties to convince my mother than no standard sizes, which my existing pants all were, could hope to fit me properly anymore. When the salespeople threw up their hands, my mother was undeterred. \"Nordie's\" she declared, and we walked all the way to the other end of the mall to the store. The guy in the men's department took one look and immediately understood the problem, although his eyes seemed to linger on my ass a little longer than I liked. He asked us to wait and called out a guy in his sixties who was a real live tailor, not a clerk. He took some measurements, and asked me to come back in two hours for a fitting. That sounded like our cue for lunch, and I was already starving.\n\nMy mother would never be caught dead in a food court, so we left the mall and headed further south on Preston to Whole Foods, were we raided the salad bar. It was a step up from the dorm serving lines, albeit more expensive, and weighing your plate was different touch. Back to Nordstrom's, and a second fitting, and this had the tailor muttering about another two hour wait. Nora and my Grandma headed for Williams-Sonoma, and my mom made a beeline for the women's department, leaving me to my own devices for two hours. I had actually never been to this mall before, so a quick look around was in order. I began using the old 'follow the right hand wall' plan to try to cover everything, and realized that even after my morning run I still craved more exercise. I also found another ice cream place and took the edge off my nascent after lunch hunger. As I began to see how many attractive women were walking around this place, I realized that I craved something else, too. I wanted to keep my no masturbation policy in effect, but in the present situation I had no real date prospects lined up, and I really wanted someone besides myself to comment positively on the size of my first ejaculation in a while. \n\nI got to the end of long hallway and sat on the only bench that was available, deciding to lurk and listen for Suzie signals. The logistics were not favorable, as I had to be back to meet my Mom in about an hour and forty minutes. I was outside a dress shop that catered to upscale professional women, usually in their thirties or forties. I knew that girls my age generally considered it a store for their mothers and not for them, but given my recent MILF and even GILF sensitivities that was not necessarily a bad thing. The first woman to emerge reminded me of Mrs. Douglass, my thirty-something and widowed first sex teacher, and that reminder caused a very predictable circulatory reaction. I would have to stay seated for a while. The woman clicked by proudly on her medium heels, but sadly sent no Suzie for me. \n\nI remembered my Mom's rejoinder about not having any one night stands, but what about one hour zipless fucks? What if the woman wanted exactly the same thing that I did? Was my Suzie receiver good enough to gauge the risk of such an encounter? I knew I could probably screen out the next Melanie, but could I tell enough to assess the STD risk of a merely promiscuous woman? All else being equal, I seriously questioned if an older woman who would pick up an eighteen year old guy at the mall two days before Thanksgiving really qualified as a low risk kind of sex partner. \n\n.....\n\nSarah was very unhappy. Robbie was finally alone in the mall, but he was way down at the end of a long corridor, and she didn't want to approach such that he might recognize her, even in this wig and glasses, and she couldn't be sure that she had not worn this same outfit to Rhetoric & Composition once, and that it might trigger his recall. He was just sitting on that bench. Was he waiting for someone? Another lover?\n\n.....\n\nA nice looking woman in her forties emerged from the dress shop, smiled, and even sent some Suzie for me, but as she strutted by I noticed a big engagement ring and wedding band on her finger. I didn't need any special talent to figure her out. \n\nOne of the salesgirls came out, sat on the other end of the bench a moment, and said \"Doing a little MILF watching perhaps?\"\n\nShe sent no Suzie, and stank of tobacco, so I assumed she was on her way to a smoke break. Somehow she got under my skin a little bit. I looked her up and down, and replied \"You don't seem the type for that, but each to his own.\"\n\n\"I didn't mean me, you idiot, I meant you ogling the customers!\"\n\n\"Well, the last two were pretty nice looking, and THEY smelled good.\"\n\nHer face turned hard as stone, and she stood up and walked toward the nearest exit. On her way she stopped and talked briefly to a security guard, who gave me a dirty look as she continued on her way out to smoke. Perhaps they were cigarette buddies, but he did not join her outside. Instead, he started toward me. Oh boy. Well, at least it would keep me from thinking about sex for a while, and I could try out some of the stuff Kevin had passed on from his father. I turned on the audio recording app in my phone, with the little special feature from my hacker friend Cisco that saved the recording to the phone company voicemail server every few seconds, and spotted at least two security cameras that should be covering me.\n\nThe guard had a body like \"Paul Blair: Mall Cop\" and a face like Barney Fife. \"Time for you to move on out of the mall, boy!\" he said loudly.\n\nI hoped Kevin's dad knew his stuff. \"Sir, are you a sworn peace officer operating under color of your authority?\" I knew he wasn't, because a real cop would have handled the situation a lot better, even if I was actually loitering. \n\nI could tell he had never been asked that question. I was not even sure he knew what I meant, which was a formal way to say 'you are just a rent a cop'. I deliberately skipped the next logical part about him potentially being an authorized agent of the mall's owners, and went right on, loudly enough for the recording, \"I'll take your silence as a \"NO\". Are you making a citizen's arrest, and prepared to take on all legal liability that entails?\"\n\nThis time he did open his mouth, but nothing came out.\n\n\"I'll take that as a \"NO\" also. Are you attempting to kidnap me, Sir?\"\n\nHe found his voice. \"I am the guy that's going to beat your ass is you don't move on, shit head!\"\n\n\"I don't think such profanity it appropriate, and I am sure your employer would not approve. On what basis are you asking me to leave?\"\n\n\"I'm not asking, shithead, I'm telling. You are loitering and I am throwing your ass out of here!\"\n\nI looked at his name tag, \"Well, Jerry, are you prepared to tell the REAL police how you know I'm loitering? Because I have two very recent merchant receipts in my pocket, and I am sure several cameras recorded me trying on clothes and making those other purchases. And there are at least three witnesses and two cameras watching us right now. So I am afraid you would end up apologizing to me, and maybe losing your job. Is that what you want?\"\n\nHe smiled. \"Those cameras don't have audio, dumbass. As far as they can tell, I am just asking you to leave on the basis of a complaint from a woman who works in a store here. When you made a verbal threat towards me, I was forced to defend myself, all in policy, plus I get to enjoy messing up your face!\"\n\nHe suddenly drew a little collapsible baton, and took a stance like he was going to hit me with it. I didn't have time to think, but it triggered the reflexes I developed when playing doubles tennis, to make sure my partner's racket didn't hit me in the face. I ducked, sidestepped, and took two steps back, watching him warily. Unfortunately, I didn't have a tennis racquet to block his next swing with. He lunged toward me, but tripped on the bench and went down in a heap. \n\nFor the benefit of the witnesses, and my recorder, I loudly said \"Would someone please call the cops? I am afraid this nut is going to cause me serious bodily injury!\" I took several more steps back. The cameras would clearly show that he was pursuing me, not responding to a threat, and the audio recording should seal the deal. \n\n\"What's the problem here, Jerry?\"\n\nThis guy looked like the supervisor, or sergeant, or whatever you call him. I couldn't tell how much he had seen, but I did sense that he wasn't Jerry's biggest fan. \n\n\"No problem, Sir. I just tripped over the bench.\"\n\nThe supervisor looked at me, then back to Jerry. I shrugged, and said. \"I'm sure you will check the security tapes as a matter of course. That should tell you all you need to know.\" Jerry looked very nervous at this. By this time the stinky smoking salesgirl had returned, perhaps to gloat. I showed her that the recording app was running on my phone. \"This young lady may be able to shed some light, too.\" I did not tell her when I had started the recording. \n\nShe spoke to the supervisor, and he asked her a couple of questions, and then turned toward me. \"Sorry for the misunderstanding, Sir.\"\n\nI got back to meet my Mom at Nordstrom's with about two minutes to spare. Grandma was waiting for me.\n\n\"Your mom and Nora went off looking for something upstairs. They'll be back in few minutes. Meanwhile, I wanted to ask you about your 'birder' girlfriend, and Nora. Do they know each other?\"\n\n\"I don' think so. My birder girl got a job offer in England, so she is heading out right after graduation in May to take a job as some sort of entry level museum curator, apparently quite a rare starting position in her field. Suzanne, Nora's friend that I have been dating since September, knows about the other girl.\"\n\nShe looked at me sideways. \"How did strip birding go?\"\n\n\"I learned a lot, grandma. Be sure to pass along my special thanks again to the Hocheim's. Their place is fantastic. I don't think I will even forget my first Whooping Crane, nor my first Black Legged Kittiwake. Very memorable, but I'm not planning to change majors to Ornithology.\"\n\n\"Does she know you really liked her?\"\n\n\"Grandma, I can honestly say she will always remember that I worshipped her when we were together.\" Grandma smiled.\n\nNora returned with my Mom, who took me back to the tailor again. She had ordered four pairs of pants altered for me: grey, navy, and two in khaki. I could sense some Christmas presents coming, too. I thought my long ordeal was over, but then she insisted that I select two suits, since my current ones were several years old and wouldn't fit either. The tailor said he now had my measurements on file, and he could alter them and have them ready for pick up tomorrow after 4. They were a considerable upgrade from my current suits, which were both 2 for 1 JC Penney specials that weren't exactly top of the line to begin with. I had to admire his salesmanship as he reminded my mother that now that since my measurements were on file, she could order any clothing from their store for me and they could alter it and ship it to me with almost no effort on her part. \n\nThe rest of the afternoon was taken up with cooking and planning for cooking. Mom, Grandma, and Nora scheduled themselves like surgeons, with Eldee guarding Nora at all times, and my Dad and I were like operating room technicians, responding to their demands to fetch, peel, chop, boil, and anything else they demanded. All of the ovens were in play, and most of the stove burners. Nora was fascinated by the tamale making process, and I was getting hungry anticipating dinner tomorrow night. But there was light at the end of the cooking tunnel, as my Dad and I were detailed to go pick up my cousins at the airport. Before we left, I spent a few minutes alone with Nora, telling her about the dogs, and warning her about not discussing anyone's 'talents' around my cousins when they arrived, and I told her why. She looked sober and said that she understood. I kissed her, and she kissed me back. She also told me that we had a date with Alley for the Sunday night after Thanksgiving: Alley was going on a little 'adventure' and we were going to be her wingmen.",
        "My Dad and I headed out to get my cousins, counter-commuting on the way in toward the airport, but we knew we would be in the thick of rush hour traffic on the way back to the house. He had a flight tracker pulled up on his phone, and he was a grandmaster at timing flight arrivals at DFW. Their flight was delayed, as usually happened with those DFW segments originating at BOS or LGA, but not too long. We met Uncle Ted and Aunt Martha, and all three sons: Teddie, Mikee, and Jeffie (you just can't make this stuff up) and then went down to the baggage carousels to collect their luggage. When we finally got it all loaded, we made for home, and crawled through the rush hour traffic, congested even on the toll ways.\n\nBy the time we got back, it was almost completely dark outside, and the three younger dogs were out riding the fence again. My Mom began greeting everyone warmly, but when Jeffie walked in the door, Eldee went on red alert, barking at him like she had found the bad guy while on revieren. My dad put her on a zit, and then took Jeffie by the arm and moved him closer to her. She quivered, but did not bark. She nosed him, right on his shirt pocket. \n\nDad said \"What have you got in there?\"\n\n\"Nothing. None of your business.\"\n\n\"Did you bring dope here on the airplane?\" Uncle Ted asked gruffly.\n\n\"It's just pot. It's practically legal. And you freak out if I drink with my buddies!\" \n\nUncle Ted shook his head, \"You stupid fucking piece of shit!\" \n\nAh the never ending joy of family visits during the holidays! A few moments later I heard the toilet flushing. This might explain all three cousins' lack of developing their 'talent'. I recalled my Dad saying that regular use of drugs or alcohol, especially before the age of 17, or using 'E' anytime, can reduce or even extinguish our abilities. I hope they had really enjoyed whatever they used, considering what they may have given up. And two of these brilliant young gentlemen would be staying in the bedroom right between mine and the one Nora was in. Perfect. Not a dull minute! At least I knew that Eldee was a very light sleeper, and wouldn't tolerate any intrusion into Nora's space. \n\nMom and Grandma had set up a giant and very well stocked sandwich buffet in the kitchen, complete with several cold salads, pickles, olives, and veggies and chips with dips. The family trooped through in various moods. My first thought was to sit outside on one of the patio tables facing the garden. Even though it was dark and cold, it felt better to me than sitting inside in the bosom of our extended family right now. Nora soon joined me, with a couple of dainty half sandwiches, but also a big helping of Grandma's unique German mustard potato salad. I had never seen her eat so heartily.\n\n\"This stuff is incredible! Better than any I had in Germany. How does she do it?\"\n\n\"Well, that's her secret, but I can tell you she grows three different kinds of potatoes for it, and makes up the sauce about three days in advance so it can 'brew' as she terms it. She also uses three different kinds of mustard, and some kind of special vinegar, too. I have never tasted anything even vaguely like it, either. I have to warn you, though, it gives you strange dreams!\"\n\n\"What kind of dreams?\"\n\n\"It might affect you differently, but for me they are always exotic and erotic.\"\n\n\"Did they ever include seeing Alley topless or naked?\" She smiled like she had a secret.\n\n\"No!\" Where in the world did that come from? \"What's up?\"\n\nShe smiled again. \"That's what we are going to help Alley out with Sunday night. She did get a big sexual thrill out of losing her top at the swimming pool, and it drove her mother absolutely crazy. I am not sure which is the prime motivator, but she is planning to enter the 'amateur night' contest at some strip club. She wants me to be her wingman, you to be our escort, and I think she really hopes that her mother actually will find out!\"\n\nWheels were turning in my head. Austin may be the live music capitol of the world, but Dallas is probably the title holder for 'gentlemen's clubs'. In between downtown and DFW there is a cluster of a dozen fancy ones, and a perimeter of more downscale competitors around them. Each and every club claims to have the best looking dancers, the best food, and the best drinks, and they all compete for the image of being the most 'upscale', named for diamonds, gold, silver, platinum and maybe next even unobtainium. They offer free limo service to the club (but not always back), shoe shine stands, 'business centers', VIP rooms, cigar bars, and tasting rooms for single malt scotch, not to mention the overpriced bottles of cheap champagne that the customers buy the girls. And they all hold 'amateur nights' with cash prizes. The contestants are usually new dancers hoping to get hired, wives looking to spice things up a bit with hubby (or anyone else who may be interested), and the occasional 'true amateur' who is just trying to make her rent this month. The clientele ranges from rich bankers to mid level drug dealers to low income fools who just got paid and will blow their whole check in an hour or two. \n\n\"Which club?\"\n\nNora thought a minute. \"I think she said it's the one where all the pro football players hang out?\"\n\nThat would cover at least two of them, also where the concentration of super macho and drunk drug dealers and gang bangers was highest. \"That place has more guns and knives per square foot than most gun stores! It is not a good choice. But if she really insists, there is a place that is much safer, and also where word might be more likely to get back to her mother!\"\n\nNora looked intrigued. I picked up my phone, scrolled through my contacts, and dialed. \"Hey Bigun, its Robbie, are you still working at 'Babe's Club'?\"\n\nMichael \"Bigun\" Jackson looked nothing like his unfortunate namesake. He was white-blonde, 6' 6' tall, and well over 330 lbs. He was about 3 years older than me and had played 'nose tackle' on our high school football team, and excelled at being an immovable object in the middle of the line. He would soak up at least three blockers while the linebackers behind him made all the tackles. He spent at leasts three hours a day in the gym from the time he as 13, and was rumored to have once 'bench pressed a Volkswagen\". I wouldn't bet against it. He had dated my older sister for a while, until she gave him that kiss of death phrase 'I like you but as a friend'. He also refused to call on Suzie, and he and I would sometimes commiserate when he picked my sister up or dropped her off. He was a genuine good guy, but with some hard luck. \n\nHe got a football scholarship to WTTU, but flunked out spectacularly, majoring in beer and babes, finally getting lots of 'fat little girl friends', as his former coach Spike Bleach used to call them, but just he didn't make it to enough of his classes to pass any of them. When he came back to town and started taking junior college where my mother taught accounting, he got an evening job as a bouncer in one of the second tier strip clubs. I helped him get through most of his classes, and he used to regale me with tales of the stupid stuff the strip club customers did. He was one of the best bouncers they ever had, because nobody ever thought seriously about taking him on, and when he needed to throw someone out he just gently picked them up and carried them outside, with little wear and tear on the customer or the furniture, and there was no shame to having the 'Bigun' toss you out. It was sort of a badge of honor. He finished junior college and started school at UTA, studying business, and soon became the assistant manager of the club.\n\n\"Yeah, I'm home for Thanksgiving, and wanted to touch base with you, and ask you a question. I have a friend who is determined to dance at amateur night somewhere, and I wondered if I bring her over to Babe's if you would watch out for her?\"\n\n\"Well, you might know her. I used to call her \"Alley Shitty'. Yeah, that's the one. Yeah, I think she wouldn't mind that: something about teaching her mother a lesson. No kidding!\"\n\n\"Okay, Sunday night, about ten? OK, buddy, I'll see you then, and drinks are one me. Really? I don't either. Ok!\"\n\nI polished off my sandwiches, and then went back to the impressive display of cookies and candy Grandma had put out. She made stuff you could not get anywhere else: anise seed cookies, homemade licorice, little one bite rhubarb tarts, and some strange herbal candies she called her 'special horehound' drops. They were dusted with sugar like lemon drops, except they were brown and square, and they tasted like nothing else I had ever had. I always liked them, but she didn't make them very often. \n\nI loaded up my plate, and Nora got a few of them and some of the other more unusual choices, and then Grandma stopped us at the end of the line. \n\n\"Robbie, take it easy on the horehound drops. You liked them even when you were little and most kids don't, and now that you are past eighteen they may have some new and different affects on you, if you take my meaning. And, Nora, dear, I have no idea what they may do to you!\"\n\nGrandma must have gotten the full briefing from Mom, after Mom had gotten dad to spill all the beans. Nora smiled and said, \"Well, I have Eldee to watch over me tonight!\" and took about half as many of the drops as I had. Mom was talking to Aunt Martha, presumably assuring her that all of them were invited to the open house at Alley's. The cookies and candy tasted better than ever, and Nora and I both polished ours off quickly. Nora gave me a funny look as we washed off our plates and put them in the dishwasher. \n\nOf our visiting family, only Aunt Martha wanted to go to the open house with us, and I think Uncle Ted planned to stay home to watch over his three boys, who were planning on watching TV, and it might have been wise. The rest of us loaded up in the car and headed for Alley's house. Her parents had been doing an open house like this for years, even in their old house, and the guests were a mix of the families of some of my high school friends, some of Alley's dad's employees, her mother's real estate clients, and a few other neighbors. It seemed like a lot longer than 6 months since I had seen some of these people at school, and I was interested to find out what my newly developed Suzie abilities would tell me that I had never noticed before. \n\nOne the way over, I got another text:\n\nSUZANNE: still sad and bored. I finished grading papers and that was most fun so far!\n\nROBBIE: ({}) \n\nSUZANNE: not looking forward to Thanksgiving dinner in the hospital cafeteria\n\nROBBIE: wish you were here instead\n\nSUZANNE: they exercise him manually and talk to him all day hoping for a response. I am helping. It hurts.\n\nSUZANNE:he has lost 40 lbs of muscle and it kills me to see him but maybe we can still get through to him.\n\nROBBIE: ({}) \n\n.....\n\nSarah saw the headlights of a car leaving Robbie's house, and followed it over to that Alley chick's big fancy house. There were so many cars parked along the street that she couldn't get close enough to see if Robbie was actually in the car, and she didn't want all those people going in and out of the house to see her. Her frustration knew no bounds, and she knew she had to leave for Texarkana soon. She drove back to Robbie's house and drove into the driveway. She was going to walk right up and ring the doorbell and see if he was there, and if he was, demand some answers. She pulled in from the road, and drove boldly up to the front of the house. She parked her car, but before she could open the door, she realized that she was now surrounded by four big black dogs: left, right, rear, and front. They looked almost identical, but the one in front was a little smaller and had some grey markings on its head. Sarah reached for her door handle, but the dog in the front moved over toward the driver's side door and growled. The message could not have been clearer. \n\nSarah sat still, and so did the dogs, watching her closely. She realized they were not going to let her get out of the car. She made a decision. No need to get a hotel room for tonight and watch in the morning. She would go on to Texarkana now to have turkey dinner at her grandmother's house with her family. Staying here too long would raise too many questions from her mom. But she would spend all of her free time planning, and when she got back to ESU, she would put her plans in effect. By Christmas, she knew would have the best gift of all, Robbie!\n\n.....\n\nThe open house was pretty much what I expected, but the Suzie signals were not. I heard subtleties and overtones I had never detected before, and saw instant detailed images without consciously finding the carriers and having to concentrate on them. I felt an undercurrent of connection with Nora, like there were hot little signals bouncing back and forth between us. Mrs. Demetrius, our old neighbor who had lived next door to Mrs. Douglass, was sending some serious Suzie for her husband, all very conventional, but some of the images I was receiving of her plans for him were anything but. The Wilkerson's, who lived next door to Alley, had invited another couple over to relax in the hot tub after the open house, and Mrs. Wilkerson was planning on suggesting that they all forego suits in the tub, just to see what might happen, and she certainly knew what she wanted to happen. \n\nNora seemed to get along well with everyone, and several people made the same kind of comments to me that Cactus Jake Warner had about how lucky I was to have found her. When I made eye contact with her across the room, I got this incredible feeling of warmth and acceptance, as if she already felt for me what Lara or Suzanne did after one of our marathon multi-orgasmic sex sessions. I gently tried to access her flight data recorder, and found it wide open and effortless to read, even though she was wide awake and actively engaged in a conversation. Man, whatever was in Grandma's horehound drops must be amazing stuff. \n\nWhen we got back home, all three cousins plus Uncle Ted were playing spades at the card table, with MTV on the LCD in the family room and Aunt Martha was reading a book at the kitchen table. All four dogs were inside for the first time since I had been home, and the three young ones had stationed themselves right outside the family room, essentially between the cousins and the rest of the house. Eldee was in the kitchen, but she instantly came over to Nora, and sat for a greeting, again something I had only seen her do occasionally, even for Grandma, who was already upstairs asleep. Nora sat on the couch in the sun room that adjoined the kitchen and Mom and Dad and Aunt Martha bid us all goodnight and headed to their bedroom. Eldee circled around and herded me toward Nora, and kept shoulder blocking my leg until I sat next to Nora. As soon as I did, Eldee curled up, touching Nora's feet, and contently went to sleep. \n\nNora smiled at me, and said \"I want to tell you some things!\"\n\nI took her hand and said, \"Me too, but ladies first.\"\n\nShe looked a little uncomfortable as she began. \"Do you remember when you said that if I would show you my feelings for you, that you would show me yours?\"\n\nI nodded, thinking back to the wonderful things I had seen in Alley's car, and just felt at the open house.\n\n\"Well, when I went to sleep in the car I assumed you would be able to sense my signals for you. Did you?\n\nI decided it would never be right to hold back anything from Nora. \"Yes, and I liked what I found. I also now know all about Hannah and Jalen, and your feelings for Suzanne, too. \"\n\nShe stared at me slack jawed, amazed. Obviously she didn't anticipate that kind of extensive disclosure. \"Oh my God! How do you react to ...what you learned about, me and ...them?\"\n\nI held her hand even more firmly. \"My first thought is still valid: they had the good taste to be attracted to you, and bad judgment in the way they treated and ultimately lost you. I think I need to show you my feelings now.\" I bundled up all of my visions of her, and the amazing response I had when she sent hers. It wasn't a Suzie blast; it was more a gentle flow, increasing as I found her accepting it. I showed her my joy in being with Suzanne, and Lara, and Millie, and showed how I already felt that for her even though we had never spent a night together. Her eyes grew very wide. Maybe I should have held back, but I showed her my revulsion at the ugliness I found in Melanie's meltdown, and she almost lost consciousness. \n\nThen she looked at me with shock. \"Those images came from you that night at the dorm! That was the worst nightmare I have ever had. I felt horrible for days. Maybe my parents were right to warn me away from men like you.\" That was definitely not what I wanted to hear, and she looked really shaken. \"But now I know how you feel, and I appreciate your honesty. I need some time to think, and I still need to talk to my parents before I make any decision.\" Eldee looked at both of us funny, tilting her head from side to side, made a little whining noise, and then followed Nora up the stairs.\n\nThanksgiving dinner turned out to be incredible. Thanks to Nora's help, my Grandma made all of the wonderful old dishes that I remembered as a little kid, and Nora made some kind of sweet potato casserole that even I liked, and some gingerbread bar 'brownies' that blew me away. Even the cousins went crazy for all the food and Nora and my grandma seemed to have really bonded. She praised Nora as a quick learner and for how well the old family recipes were executed, and I was so full that I was almost somnambulant as the ESU football game began. I should have gone directly to sleep, because the football team already had. It was a disaster, 'nuff said. There was a great selection of wonderful leftovers to help sooth my football disappointment, but Nora remained a little stand offish toward me, even though Eldee continued to herd us toward each other at every opportunity. Sunday afternoon we took the Boston crew to the airport, and I think everyone felt better after that, including them.\n\nNora announced to my parents that we were going out with Alley tonight, maybe to meet up with some of her sorority friends or drop into a party or 'go someplace to dance', so we would be out very late. Very smoothly worded, I thought: should we call her a barrister or a solicitor? But she was golden with my folks, but Grandma did suggest taking Eldee along for security, which we laughed off, but also said she felt good that I would be designated driver for the evening. Both girls wanted to leave at lot earlier than I did, but I explained to them that according to Bigun, amateur night usually went very late into the night, and the final winner would likely not be announced until 2 AM or so, and if we got there by 10 PM we would be fine. On the way over, they giggled and told me about studying stripper moves from Google yesterday to prepare Alley's dance routine, and learning how to make up Alley's 'stripper name' from her middle name and the name of the street her family lived on when she was born. Tonight Alley would enter the contest as 'Constance Normandy', and I could already hear a pretty strong Susie signal as 'Constance' visualized her exhibitionist fantasies. She would get lots of applause, too. She wouldn't have the biggest chest, but I'll bet she would have the prettiest face and hair, and if the audience caught her vibe of a first time stripper that loved living out her fantasy, they would really appreciate her act. She might even win.\n\nWe got to Babe's at 10, and sure enough we had to wait. Bigun came out and showed us to a table right up front: I introduced him to Nora, and he spoke up and said hello to Alley and said that he remembered her from Prosperous High. She turned pasty white, and then red, but then got this sly look, perhaps as she imagined her mother hearing about all this. But then I detected a moderate Suzie signal from Alley that chirped and then sounded steadily, for none other than Michael 'Bigun' Jackson.",
        "A few minutes later a really hot looking girl in her late twenties named Donna came out, and said Bigun had asked her to come by and give Alley a few tips. She told Alley she had a great face and a great ass, and Alley giggled. She said Alley should play up those features during her routine. She told her to take off her skirt early in her first dance, and show the audience her ass a lot, and then to wait to take her top off right at the end of the number, so the audience would anticipate and enjoy the 'breast reveal' but not have time to compare her 34C's to some the other dancers. They went over Alley's music choices and agreed on the points in the first song at which she would take off her skirt and then her top.\n\nBut then things got much more interesting, when Alley said \"And I guess I'll just do the same thing for the second song, then.\"\n\nDonna smiled patiently. \"Well, in a word, no, dear. The second song will be very different, and usually decides the winner. You will start out topless, and then by the end of the song take off your panties.\"\n\nAlley froze. Clearly she had not done her homework. \"But I thought you couldn't have fully nude dancers in a club where you serve alcohol!\" Nora sputtered, but said nothing. \n\nDonna smiled. \"That's why the contest runs so late, honey! We make a last call for drinks about 1 AM, and then stop serving alcohol right before the final round of the contest begins. It works out great!\"\n\nAlley was clearly not ready for this. Topless she had prepared herself for, but fully nude was not what she was expecting. Then I saw her face change, and heard her Suzie wax incredibly. It was a veritable beacon in the night! She could not only do this final dance, she was ready and willing, and she wanted Bigun to watch. In fact, I'm not sure anyone could have stopped her. \n\nNora said \"Are you sure you want to go through with this?\" Alley gulped and said yes, and then Nora winked at her. Donna gave her some tips on the final song, urging her to finish up by standing with her back to the audience, looking over her shoulder coquettishly, before dropping her panties, again emphasizing her ass, and then, after she stripped off the panties, putting her legs wide apart, bending over to look at the audience upside down through her spread legs, highlighting both her ass and face. \n\nAlley's Suzie signal went crazy, apparently as she visualized what she would do. She liked it, and she hoped 'Bigun' did too! Nora whispered in Donna's ear then Donna whispered back in hers, and rose to leave the table. \"I'll see you back in the dressing room. I'll try to put you on late in the group for the first dance. So think hot and sexy, girl!\"\n\nThe DJ at the club was just as big an asshole as every one of them that I had ever heard of, but his act seemed to be what the audience was expecting, and they were drinking and cheering at a rapid pace for the regular dancers, and obviously anticipating some fresh meat coming up on stage soon. The DJ announced the start of the contest and the first 'little lady' who was described as a housewife from Irving. There were loud cheers as she took the stage: this was obviously not her first time there, and she was pretty good, at least, I enjoyed her work immensely. The second dancer was even better, and soon Alley was moving around to the music in her seat. The third dancer was even better still, her 'topless reveal' displaying some spectacularly erect nipples, and frankly, it was getting hot in here. I ordered another diet coke. \n\nDonna appeared at the dressing room door and motioned to Alley. She gulped, and then rose and went through the door. It really was getting hot in here. The next dancer was named Charlotte, and she claimed to be from Charlotte, North Carolina, and she was spectacular. I drained my Diet Coke and waved for another. \n\nNora put her hand on my thigh under the table and said \"My, my, Mr. Roberts! I am surprised to find that you seem to be the kind of bounder that responds to such shameless displays. Should I be jealous?\"\n\nBigun appeared at the table and whispered to Nora. \"Alley wants you to come back to the dressing room.\" He smiled at me as if to say \"I'll take care of them' and then went back to guard the dressing room door. \n\nI was really looking forward to catching Alley's act; especially since I had a verbal preview of it would be like and had been trying to visualize it, just to help out, of course. The stage lights went down, and then came back on and a song called 'Closer' by Nine Inch Nails began to play. I had only heard it a few times, but it did seem to lend itself to stripping. Alley stepped out into the spotlight, and I stopped breathing. She stood out like a model shooting a Niemen-Marcus ad at the state fair. She was so much better looking than the other dancers it was stunning, plus it was just different because I knew her. She seemed to be looking right at me, but I'm sure it just looked that way because I was at a table right up front. She did take her skirt off right away, and her legs looked better than all the other contestants I had seen, especially when she kept her back to audience and kept bending over slightly. She was smiling widely and moving very nicely in time with the music, but I was not familiar enough with the song to realize that it was about to end. She moved right over to the front of the stage, shook her ass and legs to the hoots and catcalls from the audience, and then whipped off her top, throwing it right onto our table as she raised her arms up toward the ceiling, as the song ended and the lights went down. The audience hooted and stomped their feet. I almost passed out, as I had forgotten to breathe for most of the song. \n\nA few deep breaths later, Alley sat down next to me wearing a terrycloth robe, and a wicked grin. She gave me a hug, and I told her, quite honestly 'You were spectacular! You were by far the hottest dancer up there!\" I had trouble reconciling her with the girl I had tried to avoid in high school. Her general Suzie signal was reaching new levels of intensity, probably in anticipation of her next dance, but her 'specific Suzie' for Bigun was even stronger. I struggled to ask her 'Where's Nora?\"\n\nShe smiled in a funny way. \"I think she is using the bathroom.\"\n\nI couldn't help looking at Alley in that robe. She seemed to be enjoying my discomfort. I made myself talk again. \"How long will it be until the second round of the contest begins?\"\n\nShe looked at her nails casually, and smiled primly. \"Oh, not too long, but I think there is one more contestant for the first round.\" She turned to watch the stage. Her Suzie signal for him spiked hotly when Bigun came over and sat down next to her.\n\n\"You were fantastic, Alley. You are easily the most beautiful girl that has ever danced here!\" She stared at him adoringly, and he smiled at her in the same way. \n\nThe DJ then announced the final first round contestant, as a Nelly song called \"Hot in Here\" began to play. \"Ladies and Gentlemen, our final dancer, from England, is Miss Elizabeth Eaton Square!\"\n\nI looked up onto the stage and saw a goddess, with a perfect figure, perfect skin, haunting grey eyes, and a white feather sticking straight up in her platinum hair, and two white fans made of similar feathers held up demurely in front of her chest. I tried to stand up, but the Bigun put a hand on my shoulder to keep me in my seat. I tried to breathe, but found I could not. Nora began moving and twisting to the song, which was a long hip hop number with a grinding beat and multiple references to stripping. She had on a super small bikini bottom and nothing else, and was showing just about everything to the audience but her breasts which she masterfully kept just under those fans. I realized I was just about to go into shock. She showed the underside of her breasts, or the top, or the side, but you never saw the whole thing, and you wanted to, very badly. She had a look on her face like she really wanted to show you, but she just couldn't decide whether to or not, and the audience was absolutely screaming for her to do so. She made eye contact with me and it took all the air out of my lungs, and I got light headed. \n\nI barely noticed that Alley had put her hand on my thigh, and therefore I didn't wonder why. Nora had me riveted with her gaze, and the song was clearly just about end with a bumping finish. Just as the last beat sounded, Nora held my eyes to hers and held her hands above her head like a football referee signaling a touchdown. Her breasts were the most wonderful things I had ever seen. I could look at them forever. But on the count of three, the lights went down, and my heart broke, because I could not see them anymore. Then Alley reached down and casually groped my crotch! \n\n\"Why Robbie Roberts! I am surprised that you still have any blood anywhere else in your body.\" The audience was stomping and screaming for an encore. I was of two minds about that, both quite insane. \n\nThe DJ came back on mic and made the last call for drinks before the final round of the contest began. I wondered if they served oxygen, because I desperately needed more than I had. The audience slowly quieted down, and began to concentrate on tossing down a few more drinks before the dancers began again. I was still using all my powers of concentration to breathe. Nora strutted over wearing the same kind of terrycloth robe that Alley had on. There were catcalls and growls from virtually every male nearby as she sat at the table. Alley made a signal to her had held up with her thumb and forefinger touching together to make a circle and I didn't know if she was saying 'your dance was perfect' or 'this is how big his cock got'. Nora smiled wickedly.\n\nI sputtered at her.\"What, ...what were you thinking? Why did you go up there?\"\n\nShe smiled again. \"Well, Robbie, I do have your telephone call on hold, so to speak, but I haven't hung up on you yet! So I want to make sure that I hold your interest for a while, don't I?\"\n\nI could only gawk at her. \n\n\"And instead of just experiencing vicariously the thrill Alley was obviously getting, I decided to get a little skin in the game, so to speak, and feel the real thing myself! I seem to recall a discussion with Suzanne about how she was afraid she had 'missed her wild college days' until you helped to wake her up. Perhaps you are doing the same for me.\" \n\nDonna came back over to talk to both girls, and there were some very pointed comments from the tables around us as to why three hot girls were sitting with me instead of with other paying customers and voting audience members. Nora and Alley both smiled and waved, but stayed put, and so did Bigun, which discouraged any further action. Donna began circulating through the crowd and pumping them up further for the final round, if that was possible. \n\nThe first contestants started the second round, and the 'fully nude' reveals were spectacular. My new talent at receiving male signals proved disconcerting: there were so many of them in here I just wanted to run and hide. I tried to concentrate on the signals from the dancers only, and they were quite varied. I decided to try to focus on Alley and Nora's signals and try to shut out everything else. After a few more of the other dancers finished, Alley and Nora went backstage with Bigun as an escort, and I sat alone at the table in anticipation, along with everyone else in the audience. I got a few snide comments about not being to handle girls like that, and almost wished I had brought Eldee along with us, but as soon as Alley took the stage for her final dance, no one there was even thinking about me anymore, including me.\n\nAn old Prince song called \"Cream' began to play, and it sounded like 70's disco merged with the themes from old porn films, but it was definitely a hot and charged up beat. Seeing Alley start out being topless and knowing how she was going to end up was even more shocking than I thought. I focused in on her Suzie signals and tried to understand what this dance meant to her. Maybe it was the after effects of Grandma's candy, or being more connected to her over the last few days, but I really felt plugged in to her. Alley was enjoying herself, yet she was still scared and excited by being afraid. My next few impressions might more correctly be described as hunches or interpretations rather that specifically deciphered signals, but I was convinced that Alley would never do this again. Her exhibitionist drive did not outweigh her 'normal' modesty. There was also another signal I recognized but could not decode its meaning: I had heard it before from Nora, and I knew I had heard it from other woman, but I couldn't tease out the common factor and what it may mean. Alley then surprised us all. Very early in the song, when the lyrics said something like 'you are filthy cute and you know it', she took off her panties and did the full bend over routine that we thought would not happen until the very end. Donna was certainly right about Alley's ass being a wonderful feature, but I was devastated by her amazing asshole. It was pretty, and pink, and puckered, and I wanted it. I wanted to touch it, play with it, learn about it, tease it, kiss it, and do all the wonderful things to it that I had learned from Mrs. Douglas and had practiced so happily on Lara, Suzanne, Millie, and Peggy. I am not sure if the rest of the audience had the same exact reaction that I did, but they certainly liked her act, and suddenly hundreds of hands were clapping to the beat of the song. When she reached the end and repeated that same very revealing and virtually gynecological pose, she got an instant standing ovation from everyone in the room, and they all stood up and applauded, too. \n\nThe DJ had to wait quite a while until the audience calmed down a bit, but my heart was still pounding by the time the next song started. Nora appeared, standing still on the stage with the spot light on, and her wonderful breasts were already heaving as her breath rose and fell in her chest. Those white feathered fans were now held in her hands down over her pubic area like a fig leaf on an old statue, and everyone knew that she had already removed her panties. The anticipation was palpable. She began to move slowly, almost like a Tai Chi routine, turning her body and moving the fans in front of it, giving the audience momentary glimpses of what they desperately wanted to see. Alley sat down next to me, with Bigun right next to her. She leaned over to me and said \"She found this dance on the internet, from the 1920's. She said it was a classic. And she wants you to know that the most important person in the audience is you.\"\n\nI heard that same signal from Nora that Ally had sent, and I was suddenly sure Nora that was not going to do this again either. Thank God. I was also sure she was as sexually excited as she had ever been. So was I. The music began, an old Madonna song called 'Justify My Love', a very telling title, another video I had seen on those MTV hottest video specials, and it certainly qualified. Loud and literal, the jungle drums set the tone, and Nora's motions became swifter and stronger. The lyrics became a sing song back and forth interplay of the words 'wanting' and 'waiting', which perfectly described the audience's mood. Nora stayed coyly covered by the fans, but then, in time to the beat, she would toss one fan up and reveal a major part of her, then catch it and put it back down, then toss the other fan. In that moment, my little monkey brain and the rest of audience realized that she had a perfect platinum colored bush between her legs, neatly trimmed, a perfect match to her hair, and it was the most wonderful thing I had ever seen. I heard a crazed voice say \"Mother of God!\" and realized it was mine.\n\nSomehow I forced my gaze up and looked her in the eyes. She smiled at me, right at me, and I got that Suzie signal again. Was it like the one that I heard from the married woman at the mall? Was Cactus Jake Warner right about Nora being a one man marrying kind of girl? Or was it simply one man at a time? She locked her eyes onto mine and I felt she had dared me to maintain eye contact while she finished her routine. Could I do it? She began to do alternating left and right kicks, countering the kick out with a covering motion of the fans. It was maddening, because you thought that when the leg went out she was really going to be completely revealed, but the fans moved in tantalizingly to block your view. Again I had trouble breathing. I was not sure if I could stay conscious all the way through to the end of the song. \n\nNora kept up the kicks, and then began to toss one fan at a time up and over her head and catching it, completely exposing half of her figure while that fan was in the air. The effect was mesmerizing, for a moment, and then the audience went crazy. She smiled, still holding my gaze, and then walked right to the edge of the stage, ten feet away from me. There must be only 30 seconds or so left in the song. She stopped kicking and stopped tossing the fans, just holding them in front of her again. The audience fell almost silent, as if suddenly disappointed. Not for long. She moved her feet out to just wider than the width of her shoulders, and leaned back, showcasing her amazing legs and breasts, but holding the fans back in their fig leaf position. She stared at me and I thought she was saying 'this is a test' and I knew I had to keep eye contact with her, whatever came next. Then it happened, she began to juggle the two fans, leaving them both up in the air at all times, offering the audience an unobstructed view of her incredible platinum tinged pussy while her arms moved and her shoulders tensed, perfectly highlighting her amazing breasts. I so wanted to stare, but I knew I mustn't. And then the audience realized that the motion of the juggling fans was distracting their eyes from the real prize. Just then Nora caught the fans, held them out in her arms far away from her body, an even more brazen display of everything she had. \n\nI watched her chest heave with my peripheral vision, and noticed goose bumps all over her body, but still kept my eyes glued to hers. And then I heard a driving, lighting strike pulsing kind of Suzie that went right through my head and into my brainstem. I was caught like a fish, and she could reel me in to her boat any time she wanted. Apparently she had that same effect on most of the audience, even absent a Suzie receiver, and complete and stunned silence reigned. Then she bowed fully at the waist, fans still out at her sides, but her stance effectively hiding most of her charms. And then the lights went down. There was a moment of silence, and then a thunderous ovation.\n\nIt was all anticlimactic after that. Nora won by acclimation, and Alley was second. All the clapping for an encore was in vain, and the DJ announced that the club had to close due to local regulations. Bigun escorted the girls back stage to change back into their street clothes, and I just sat and bathed in the warmth of their performance. I thought I was used to a lot of attention when I showed up at frat parties with Lara and Suzanne, but this was a different kettle of fish entirely. Donna sat down next to me.\n\n\"Those girls could both be headliners anywhere, but I think this was a onetime thing for them.\"\n\n\"I hope so, but it was pretty damn hot, wasn't it?\"\n\nShe smiled a sort wan smile. \"Bigun says to wait for him here, because he wants to walk y'all out.\"\n\nShe went into the back room just as the girls emerged through the dressing room door with Bigun. They spent a second hugging Donna, and he spoke to me. \n\n\"Good idea, Robbie! We are still doing the totals, but I am sure that was our best amateur night tab ever, and the word of mouth will increase our audience for months. How did you ever hook up with two chicks that hot, buddy?\"",
        "Again there was that disappointing emphasis on the word 'you', but I didn't mind much. \"Actually, I am dating one of Nora's friends, not her, and I never realized Alley could be so fetching!\"\n\n\"No shit Sherlock! She's the hottest thing I have ever seen.\"\n\nI considered her signals for him. \"Buddy, you need to ask her out, tonight.\"\n\n\"Aren't y'all going back to Austin tomorrow?\"\n\n\"Yep. But she comes home to visit her parents all the time, and if you are smart, you will come see her in Austin, too.\"\n\n\"I don't know if I really have a chance with a class chick like that.\"\n\n\"Trust me buddy. If you chase her, you can catch her.\" He looked very thoughtful.\n\nThe girls joined us and we went out the door. There was a big crowd of guys waiting for the girls, and if Bigun hadn't been there, it might have been a problem. His protective nature kicked in, and with an arm around Alley, he easily stared down and dispersed the crowd. Alley seemed to lean on his shoulder pretty hard, and when he put her in the back seat, he kneeled down and they had a whispered conversation while I put Nora in the front seat. I clapped him on the shoulder and invited him to come down to Austin to visit me, if not Alley. He said he would be in touch.\n\nWe drove away, and both girls sighed. Me too.\n\n\"Well, I hardly knew I was going out with the two hottest strippers in Texas tonight, but I liked it!\"\n\nAlley spoke first. \"Nora, Bigun asked me out, he is coming to Austin before Christmas and then we are going to spend some time here after I get back from school.\" A big Suzie signal for him filled the car.\n\nThey gave each other high fives. Alley looked at me. \"Robbie?\"\n\nI smiled. I'm just waiting for Nora's answer?\" Alley screamed, but Nora just smiled.\n\nWe dropped Alley off at her house, and got back to mine about 3:30 AM, and everyone was asleep upstairs except the dogs. Eldee met us in the driveway, scolded Nora briefly with a look and a snort, and then fell into step with her. The other three waited until we were all inside, then took up positions by the back door and settled down for the night. Nora paused and gave me a brief and way too chaste kiss, and then ascended the stairs with Eldee right at her heels. I sat down at the table for a while with my Grandma's box of fudge, to try to stave off my hunger pangs and survive until dawn, and then went to bed, too. \n\nAlley showed up for the drive back to Austin about noon, and Grandma insisted that we make some turkey sandwiches to take with us, plus a big bag of cookies. Nora seemed genuinely upset to say goodbye to Eldee, and Eldee actually whimpered, something she never even did when she was having her puppies. Mom and Dad, and Grandma and Granddad all fussed over Nora: Grandma even gave Nora her potato salad recipe, and then we finally got into Alley's car. In a few miles we were all almost somnambulant, but Alley's driving seemed fine. We got to Jay's in about an hour and a half, and loaded him up too. Nora wrapped back up in the afghan my Grandma had given her, and curled up next to me, apparently planning to sleep all the rest of the way back. I put my arm around her and leaned back in the seat, ready to relax and enjoy. Nora shifted around until the blanket covered us both. Alley laughed, and then, under the blanket, Nora touched my junk!"
    ],
    "authorname": "conanthe",
    "tags": [
        "bdsm",
        "exhibitionism",
        "oral",
        "anal",
        "stripper",
        "football",
        "fraternity",
        "sorority"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/my-only-talent-ch-18"
}