{
    "title": "The Happiest I've Ever Been",
    "pages": [
        "Author's Note:\n\nWhen Connor, a down-on-his-luck twenty-something year old man, needs to earn some extra cash, he signs up for a clinical trial taking a male birth control pill. Little does he know that the pill comes with some rather unusual (but arguably pleasant) side effects.\n\nThis is a work of fiction. The pill I've written about does not (to my knowledge) exist and I have taken some artistic license to certain scientific processes and standards for the sake of the story. It is meant to be light-hearted and humorous, and as such, do not take anything written here as medical advice. If you have an erection that lasts longer than four hours, I take full credit but accept no liability.\n\n**\n\nThe guys nearly laughed me out of the bar when they found out I was taking No-Nutter.\n\nThe pill wasn't actually called No-Nutter. It had one of those proper science-y names, but hell if I could pronounce it. But just like everything these days, when word got out about a male birth control pill that was going into clinical trials, the details got twisted all to hell. They called it No-Nutter because some of those redneck evangelist types got it in their heads that the pill stopped you from jizzing, which isn't how it worked at all. Not at all.\n\nTrust me.\n\nIt just stopped your jizz from having swimmers in it, kinda like if you got snipped, but without the... you know, snipping. I don't know all the details of how it works. They explained it to me when I signed up for the trial because of the informed consent and all that stuff, but I got a little lost on all the technical details. It wasn't that your body stopped making sperm or anything. The best way I could describe it is that the pill changed the sperm so it couldn't... you know, turn into a baby or something.\n\nWhatever. It doesn't matter, not in this case, anyway.\n\nThe point is, No-Nutter didn't stop anyone from coming, but the name stuck after the misinformation got spread around by guys who were so insecure with their own masculinity that taking any sort of responsibility for their own baby gravy was deemed unmanly. And even I had to admit it was a lot catchier than \"male birth control pill.\"\n\nAll that being said, that alone wasn't why my so-called friends were laughing at me for taking it.\n\n\"What good is No-Nutter even doing for you, Connor?\" snorted Patrick. \"You haven't fucked anything besides your fist for ages!\"\n\nThat earned another round of obnoxious laughter and palms slapping the sticky surface of the bar table. I tried to be a good sport and chuckle with them, even though Patrick was wrong. I'd fucked things other than my fist. But I wasn't about to admit that at the table, since telling the guys that when it's been long enough, you start getting a little desperate and doing things like humping pillows and buying replicas of your favourite porn star's pussy as a Fleshlight probably wasn't going to help the situation.\n\nAnd I obviously knew what Patrick meant, which was that I hadn't fucked an actual woman in ages, and that much was definitely true.\n\nIt's not like I had a lot going for me. I'd moved across the country to be with the love of my life, Stella, who I'd met on an online forum for carnivorous plant owners. She was everything I thought I wanted in a person; namely, a woman who was sort of interested in me and who also happened to really like the same kind of plants that I did. So I moved to this shitty little suburb to be with her and for six months, life was great, until I found out Stella's Venus fly trap was more of a penis fly trap.\n\nWhich was a horribly inaccurate way of saying she'd met someone else on another carnivorous plant forum, declared that she was in love with him instead, and left me in her shitty little suburb so she could move across the country to live in his shitty little suburb.\n\nIt's just the circle of life, I guess.\n\nAnyway, I'd spent all my money moving so I didn't have much of a choice but to continue working. But since Stella had left, I had to pay way more rent so it took a lot longer to save anything up. And then by the time I'd managed to scrape some savings together, I'd kind of settled in and sort of made some friends, and it's not like there was much waiting for me back where I'd come from, so I kind of just... stayed. Things weren't great and I still couldn't look at a pitcher plant without my heart aching after what Stella did to me, but I was... you know. Surviving.\n\nIt was while I was initially trying to save some money that I'd discovered the clinical research organization between here and the city. They paid pretty decently for trials if you got accepted to them, so I'd signed up on the off-chance I qualified for anything. I mean, it's not like I was doing anything else important with my life. Might as well use my skills of \"being able to swallow pills and answer questionnaires\" to help other people. There weren't a lot of clinical trials looking for slightly overweight guys in their mid-twenties, but I'd done a couple of surveys and it wasn't a bad way to make a little extra cash.\n\nThat is, until the No-Nutter trial started.\n\nI qualified for that one because I said I probably wasn't gonna fuck anyone for a while. Embarrassing, right? But they wanted to make sure that if the pill wasn't effective or something weird happened to my jizz, I wasn't going to get some girl pregnant with a flipper baby or something.\n\n\"It's highly unlikely,\" explained the doctor running the trial as she talked me through the paperwork. \"But since we're still early in the trials, better safe than sorry. Even still, on the off-chance you manage to find a sexual partner, just remember to inform them that you're taking the pill. We suggest using a second form of birth control, but as the test isn't on the efficacy of the medication, it shouldn't affect the results of the trial.\"\n\n\"Any other side effects I should watch for?\" I had asked, trying not to be insulted by her accurate-but-unnecessary statement regarding the likelihood of me finding a sexual partner.\n\n\"A few,\" she said nonchalantly. \"In the first few weeks of use, you may experience dry mouth, hallucinations, dizziness, constipation, diarrhea, insomnia, drowsiness, fatigue, or excess energy. Some rare longer-term side effects have included hair loss, anosmia, chronic heart palpitations, reduced sex drive, sleepwalking, intense sexual urges, and weight loss. There are currently studies underway about the possibility of excreting strong pheromones, specifically sociosexual, but there is no concrete evidence on that yet. We've also had some participants report changes to the texture, scent, and the, ah... flavour of the seminal fluid over the course of a few weeks.\"\n\n\"Oh,\" I said.\n\n\"It's highly unlikely,\" she continued. \"But should you note any differences, please record them and let your coordinator know.\"\n\n\"I will,\" I said, knowing damn well I wasn't going to be able to tell them if my jizz tasted any fucking different than it usually did.\n\nThe first few days on No-Nutter weren't bad. I hated to admit it, but some of those anti-birth-control rants had made me a little nervous with their claims. Not that I thought it was some big conspiracy to sterilize men or start feminizing us or something, but you can't help but worry a little when people are claiming the pill could cause cancer or personality changes or the unlikely-but-terrifying-to-think-about chance of your dick falling off.\n\nThe doctor assured me that no one in the entire history of the drug had experienced their dick falling off and that included all the mice and other animals that had been through the trials, and it wasn't even like this was the first round of human trials. But there were hundreds of men online claiming that the Big Pharma company behind No-Nutter was hiding piles of withered dicks somewhere, and logically I knew that probably wasn't true, but it was still scary to think about.\n\nLuckily, my dick didn't fall off. In fact, I was pretty lucky with the first few days of side effects. I was as horny as I usually was, which was basically constantly because I hadn't had sex in fucking ages, but at least it meant that my sex drive wasn't affected. Better than that, though, was that I was sleeping insanely well. And I don't mean like I was sleeping all the time; I was going to bed later and waking up earlier and had way more energy, to the point that I had actually started using the complimentary gym membership my boss had for all his staff and working out before work.\n\nBefore work. In the morning! Like a fuckin' gym bro or something.\n\nI mean, I still didn't really know what to do with all the weights and shit, and I could only last about ten minutes on the treadmill before my heart felt like it was going to burst out of my chest, but I was trying, and there weren't usually many people around so it wasn't too embarrassing.\n\nTruthfully, the side effects were... good. For the first time since Stella had left, I felt like I was doing more than just surviving. Things were going so well that first week that I almost considered going out to a nearby greenhouse to see if they had any bug-eaters in stock to replace the collection Stella had taken with her when she left me for that other douchebag.\n\nThen the guys found out I was taking No-Nutter because I sort of told them I was taking No-Nutter.\n\n\"You would never catch me taking that shit,\" Bobby said as we sat around the bar, drinking away another Friday night as we watched hockey. It was between periods and the commentators were talking about one of the players who'd signed on to endorse it since everyone knew hockey players had shit-tons of money and a lineup of chicks waiting to fuck them.\n\n\"Me neither,\" Patrick said. \"Fucking unnatural.\"\n\n\"How's it any different than a woman taking it?\" asked Dave.\n\n\"If a woman doesn't want a baby, she can take her own fuckin' pill,\" Bobby said.\n\n\"So you'd rather risk a kid on some one-night stand's claim she's really on the pill?\" Dave asked.\n\n\"Or just wear condoms the rest of your life?\" I added.\n\n\"I'm not wearing a goddamn condom just because some woman doesn't want to take responsibility for her own body.\"\n\n\"Wow, the women must just love you,\" I replied.\n\nBobby raised his eyebrows at me. \"Look at you, all snarky tonight. The fuck's gotten into you, Connor?\"\n\nI felt my face turning red. \"Nothing. Just don't see why you wouldn't try to protect yourself from having a kid you don't want.\"\n\n\"Not my problem.\" He took a swig of beer and glugged it back.\n\n\"Till she gets knocked up and you got child support payments and shit,\" Dave said. \"Nah man, I got lucky the one time with that girl Kenzie 'cause the condom broke and she wasn't sure if she wanted to keep it or whatnot, and let me tell you I was just sweatin' until she decided she didn't want the thing, so all it cost me was gas money to the city and whatever the procedure cost. 'Least if I'm taking the pill, I know it's less likely and shit, you know?\"\n\n\"Yeah, till your dick falls off,\" scoffed Patrick.\n\n\"It doesn't make your dick fall off,\" I said.\n\n\"How would you know?\" he shot back.\n\n\"None of your business,\" I muttered.\n\n\"Nah, you think you know so much about it, tell us how you know,\" Bobby added.\n\n\"I just know.\"\n\n\"How, Connor? You some kind of researcher now? Thought you worked at the carwash.\"\n\nMy face was turning red. \"I just know, okay?\"\n\n\"I would think you, of all people, wouldn't want your dick to fall off before you get a chance to use it again,\" Patrick said loudly. \"Don't tell me you're takin' No-Nutter.\"\n\n\"Yeah, I am, and my dick is right where I left it,\" I snapped.\n\nI shouldn't've said it, 'cause that's when they started laughing so loud, half the bar was turning towards us to see what the commotion was, including the table of hot girls sitting two down from us. I recognized a couple of them vaguely from around town: the tall brunette with killer legs who worked at the bank and drove a yellow Sunfire she only washed every couple of months, the one with light-brown hair and a girl-next-door smile and gigantic fuckin' tits who was a barista at the coffee shop, and Angel.\n\nFuckin' Angel.\n\nI'd been in love with Stella when I moved here, but if I hadn't, I would've fallen head over heels for Angel, which is what happened after Stella broke my heart. Angel was my cup of tea in every way possible. She had golden hair--not blonde, blonde wasn't a beautiful enough word for the colour of Angel's hair--and huge blue eyes like something out of an anime. Every girl sitting at that table was hot and had a body to die for, but Angel had the kind of body I'd've spent hours upon hours worshipping if she was the kind of person who would sleep with someone like me, which she absolutely wasn't.\n\nStill, that had never stopped me from daydreaming--and wet dreaming--about her sexy little body with its perfect curves and smooth, glowing skin. That had never stopped me from picturing her full, pouty lips in excruciating detail, imagining how soft they would be and how sweet they would taste and how fucking sexy they'd look wrapped around my cock.\n\nI'd never imagined them pressed together as she met my eye, trying not to laugh as Patrick blurted out that not only was I on No-Nutter, but that my sex life consisted of me and my good friend Palmela Handerson.\n\nThat was what they did that night, though, and I felt like every cell in my body was withering and shrinking and cringing as she and her friends stifled their giggles.\n\n\"You gotta be fuckin' with us,\" Bobby said after his roars of laughter had faded.\n\n\"I just told you he isn't fuckin' anything,\" Patrick replied, nearly crying he was laughing so hard.\n\n\"You can all go fuck yourselves,\" I muttered, pulling my wallet out and throwing some cash on the table. \"I'm going home.\"\n\n\"So you can go fuck yourself?\" Bobby asked, and they were still howling as I left the bar, determinedly not looking at Angel and her friends.\n\nIf I'd been the kind of guy who had other friends or a decent personality or even just some self-respect, I probably would've stopped being friends with them. I mean, they knew how humiliating that was. Patrick and Bobby weren't especially good people. I knew that. Dave knew that, too, but he was kinda like me in that he didn't really have any other friends.\n\nI spent the weekend trying to pretend like I was pissed at them and that our friendship was over. I went to that greenhouse to see if there were any carnivorous plants, but the owner said they were vegan so they didn't carry any. Then I thought maybe I'd go to the gym and walk on the treadmill for a while, but the barista with the big tits was on the elliptical, so I went home and resolved to sit around, watching TV and playing video games.\n\nWhen Monday rolled around, I got out of bed and went to the gym. It had only been a couple of weeks, but it was already starting to get easier each time I went. I hadn't really noticed any changes or anything, so maybe it was all in my head, but I didn't mind all that much.\n\nWork went. The carwash wasn't exactly the easiest place to chat with people; it was too loud and customers tended to be a bit more focused on cleaning their cars than they were chatting with the dude who went around hosing the excess suds off the concrete. But for some reason, people were a lot friendlier that week. Most of the people who came in said hello and asked how I was doing. On Tuesday, a couple of guys waved me over to show off their Mustang and ask what I thought of the new paint job on it, like I was someone who knew anything about cars and paint. On Wednesday, the brunette from the bank came in to wash her Sunfire and I wasn't fast enough to dart away without her seeing me. I thought she might just laugh at me again, but she bit her lip and threw her hand up to get my attention.\n\n\"Can you help me?\" she asked.\n\n\"Uh... sure,\" I mumbled, reluctantly heading over to her bay.\n\n\"Thank you,\" she said, sounding relieved. \"I know this is going to sound so stupid, but I can never remember how to turn the thingie from rinse to suds.\"\n\n\"You, uh, just... just turn this dial,\" I said, trying not to make her feel stupid even though it was incredibly stupid. \"From where it says 'rinse' to where it says 'suds.'\"\n\n\"Oh, right,\" she said, letting out a high-pitched giggle as she shook her head. \"Thank you. I'm so sorry to bother you.\"\n\n\"It's okay,\" I said, trying not to sound too suspicious.\n\nThe brunette smiled prettily at me. \"I see you around all the time. You're Connor, right?\"\n\n\"That's what my name tag says.\"\n\n\"I'm Brittany.\" She extended her hand and, not knowing what else to do, I shook it. \"Nice to officially meet you.\"\n\n\"You too.\" I cleared my throat and let go of her hand. \"I should, uh, get back to work.\"\n\n\"See you around, Connor!\" she said, and when I glanced back at her a few minutes later, she was turning the dial from 'suds' to 'carnauba wax.'\n\nI thought maybe people were being friendlier that week because word had gotten around about what happened at the bar on Friday and they felt bad for me or something. I couldn't figure out why suddenly everyone was interested in talking to me or telling me their names or whatever. In all the time I'd lived here, I'd only met a few people: namely, Bobby, Patrick, and Dave. It was kind of suspicious, so I withdrew even more than I usually did, and after work I would just go home, eat dinner, watch more TV, and go to bed far later than I used to.\n\nAt least I was still sleeping well, anyway.\n\nEven with all the niceness, that week just served as a reminder of how lonely this fucking place was. So when the following weekend rolled around and Patrick called, acting like nothing had happened and asking if I wanted to join them to watch the game on Friday, I agreed to it, since at least they hadn't changed how they were acting around me.\n\nAt all.\n\n\"Hey, Connor!\" Bobby said loudly as I walked up to the table. \"How's the No-Nutter treating you? Your dick fall off yet?\"\n\nAnd just like he expected, given the shit-eating grin on his face, half the bar turned and looked at me to see if I'd stand up for myself or show just how little self-respect I had and tuck myself into the empty seat at the table. Of course, that just made it even harder to decide what to do. Did I let everyone stare as I slunk out of the bar while losing the only people who were even close to being my friends?\n\nOr did I sit down, knowing that behind me, people were shaking their heads and wondering if No-Nutter turned people into giant pussies or if it was just me?\n\nOr did I take the third option that I could have never even imagined, which was presented by way of a woman making an offended scoffing sound from a few tables over?\n\n\"Wow, you are a real prick, aren't you?\"\n\nBoth Bobby and I turned, which meant we saw her sitting at the table with her friends at the same time. She was looking at Bobby, her pouty lips turned down and slight wrinkles marring her gorgeous skin as she frowned at him.\n\n\"Aw, I was just kidding, Angel,\" Bobby said, chuckling. \"He knows that.\"\n\n\"Does he?\" She looked over at me, folding her arms across her chest. \"Is he joking, Connor?\"\n\nBetween the shock of hearing Angel say my name, the way she was looking at me, and the fact that when she folded her arms, her cleavage nearly popped out of her low-cut shirt, I forgot what words were.\n\n\"Uh,\" I said. \"Well, uh...\"\n\nHer face softened and she uncrossed her arms.\n\n\"Why don't you come sit with us instead?\" she asked, motioning at the empty spot between her and the barista. \"I promise we're a lot nicer than your so-called friends.\"\n\n\"And hotter, too,\" the barista added.\n\nWell, that was true. I glanced back at Bobby, who looked stunned, and Patrick, who was openly gaping at the unfolding scene. Dave was smirking, his eyebrows raised, and as I caught his eye, he tilted his head subtly.",
        "What the fuck are you thinking? said that little head tilt. Go sit with them before they change their mind, you goddamn moron!\n\nHe made a good point, so I shrugged and walked over to Angel's table. She clapped her hands gleefully as I sat down.\n\n\"Finally!\" she said, turning to me. \"Hi, I'm Angel.\"\n\n\"I... I know,\" I said dumbly. \"I'm Connor.\"\n\nShe laughed, those beautiful lips spreading into a room-brightening smile, and gestured to the barista. \"This is Kate. And you know Brittany already. She told us you were so nice to her at the car wash this week.\"\n\n\"Oh,\" I said. \"Uh... just doing my job. But thanks.\"\n\n\"No, thank you,\" Brittany said, leaning forward like she didn't know her shirt was super low cut and showing off the lacy black bra beneath it. \"The other people there always laugh at me when I ask for a reminder and it makes me feel so dumb.\"\n\n\"You're not dumb,\" the barista--Kate--said, eyebrows furrowed as she reached across the table to touch her friend's hand before turning to me. \"She didn't learn to read English until a few years ago so sometimes she forgets what the words look like.\"\n\n\"Really?\" I asked.\n\nBrittany nodded. \"It's not my first language.\"\n\n\"Wow,\" I said. \"I would, uh... wouldn't have guessed that. You don't even have an accent or anything.\"\n\nShe beamed. \"Thank you!\"\n\n\"Well, you really made her day,\" Angel said. She started saying something else, but the waitress picked that moment to walk up to the table.\n\nEach of the girls ordered a drink and I asked for a beer. I figured I'd buy them a round at least, since that seemed like the right thing to do, and pulled out my wallet. As I did, though, Kate shook her head and Angel grabbed her purse, digging into it and withdrawing a few bills that she gave to the waitress. Immediately after the waitress walked away, Brittany and Kate launched into a loud discussion about the drinks they had ordered, and it was only when it was clear that Angel wasn't involved that I turned to her.\n\n\"You didn't have to do that,\" I said. \"But thank you.\"\n\nHer eyes crinkled as she smiled and I almost melted. \"I know. But after overhearing what your friends said last weekend...\"\n\nUgh.\n\nAs if her bringing it up wasn't enough, Kate and Brittany stopped talking and looked at me. That feeling of my cells shrinking and curdling in embarrassment started again. I tried to laugh, glancing down at the table as my face started turning red.\n\n\"That was really mean of them,\" Kate said sincerely. She let go of Brittany's hand and, surprisingly, placed her hand on my forearm. \"You seem too nice to be friends with them. I went to school with Patrick and I know he can be such an asshole. Though that's partly my fault.\"\n\n\"It is?\" I asked.\n\nShe nodded, her eyes almost sparkling as she hid a smirk. \"Yeah. He was rude to me at work one day so ever since then I've been giving him decaf instead of espresso each morning.\"\n\nI tried to hold in a laugh but failed. Kate grinned and rubbed my arm in a way that was incredibly inappropriate for someone I'd literally just met and yet so, so good.\n\n\"It was mean,\" Angel said decisively. \"Especially because everyone I know thinks that guys who are willing to take birth control are about ten times sexier than the ones who think it's stupid.\"\n\nI chuckled awkwardly. Ten times zero was still zero, but the sentiment was sweet. \"That's, uh... kind of a nice side effect, I guess.\"\n\n\"Definitely.\" Out of nowhere, Angel put her hand on my other forearm. \"I heard it's got some other great side effects, too.\"\n\nBefore she could elaborate, the waitress returned with our drinks, and I hurriedly changed the subject. It was strange enough to be talking to three hot girls who didn't think it was hilarious that I was taking a birth control pill. It didn't help that my mind was making connections between No-Nutter's actual purpose and the fact that I was surrounded by three hot girls, two of whom were wearing incredibly low cut shirts and one who had breasts that were putting a lot of strain on the fabric of her t-shirt.\n\n\"So Angel, where do you work?\" I asked after the waitress walked away.\n\nI'd gone to the bar to watch hockey, but honestly, I couldn't have even told you who was playing once I started talking with the girls. They were way more fun than my friends were, and not just because they were hot. Brittany was incredibly funny, Kate was almost wholesomely sweet, and Angel was a natural leader with a big heart.\n\nI learned all sorts of things about them. Brittany spoke six languages and she'd learned nearly all of them by ear, which was why she had such a hard time reading and writing most of them. Kate loved working as a barista and wanted to open her own coffee shop. Angel was working on her Masters degree in some kind of biology. The three of them had been friends since high school, when Brittany had moved here as part of an exchange program and liked it so much she decided to stay. They loved drinking wine and watching game shows together. Brittany liked painting and drawing in her spare time, Kate was big into football, and Angel loved plants--I wasn't sure about carnivorous ones specifically, but she had a big plant collection, which I definitely got more and more jealous of the more she talked about it. And, most relevant to the events that happened next, they all lived together in a two-bedroom apartment three blocks away from the bar.\n\n\"...and a variegated string of hearts,\" Angel was saying as she told me about her plant collection. \"But my favourite is this kinda rare one my grandpa found for me.\"\n\n\"What kind is it?\" I asked.\n\n\"It's called a pitcher plant,\" she said. \"They--\"\n\n\"--love to eat bugs,\" I finished.\n\nAngel grinned. \"You know your stuff. Well, this is an Australian one called an Eden Black and--\"\n\n\"No shit?!\" I exclaimed.\n\n\"Yeah!\" she said excitedly. \"You like them?\"\n\n\"So much,\" I said, almost wistfully. \"I've always wanted to see one of those. You'll have to show it to me sometime.\"\n\nAnd here's the thing.\n\nI didn't say it flirtily. I didn't say it like I was insinuating anything. I didn't say it in any way whatsoever that anyone could have construed it as me hitting on Angel. I sounded friendly, sure, and maybe even a bit whiny because I was so fucking jealous of her for having a plant like that, but I wasn't trying to get an invitation back to her place or anything. I mean, I was attracted to Angel, that much was true, and I was really starting to like her because she was an awesome person, but even if I had been aiming to get in her pants, I wouldn't have suggested going back to her place with more roommates than they had bedrooms.\n\nBut none of that mattered.\n\n\"You should come see it,\" all three girls said at once.\n\nAnd what was I gonna do? Say no?\n\nLet me tell you, I might've been insanely shocked, but nowhere near as shocked as Patrick, Bobby, and Dave looked when I rose with the three girls and started towards the exit. They were so obviously thrown off that Angel noticed. Out of the corner of my eye, I saw her nudge Brittany and gesture at Kate, and before I even knew what was happening, I had three hot women literally hanging off me. Angel slipped her arm around my waist and Brittany put her arm around Angel's shoulder so she could put a hand on me, and Kate... whew. Kate was on the other side of me and she could have easily just held my hand like a normal person. Instead, she entwined her arm with mine, pulling it against her torso so her gigantic breasts pressed against my bicep.\n\n\"What the fuck?!\" I heard Bobby say just before we reached the exit, and honestly, I thought about the same.\n\n\"Think that taught them a lesson?\" Angel whispered as we walked out of the bar.\n\nI chuckled, my face turning red as I nodded. \"Uh, yep. Yep, I think it did.\"\n\nShe grinned and leaned her head against me.\n\nI thought the three of them would let go of me when we reached the sidewalk, but boy, was I wrong. By the time we reached the apartment building a few blocks away, my mouth was dry and I was fighting to keep my cock where it was. Angel was pressed against my left side. Brittany was casually rubbing her thumb against my skin. Kate's tits were bouncing against my arm with every single step. I was starting to wonder if I'd been hit by a truck or something and was in some kind of weird coma that was part good, part bad.\n\nGood in that oh my God there were three hot women touching me and laughing at my lame-ass jokes.\n\nBad in that oh my God there were three hot women who apparently had no idea what kind of effect they had on people.\n\nFortunately and not, they let go of me so Angel could dig out her keys and open the door. I followed her up the stairs with Brittany and Kate both behind me until we reached the end of the hallway on the second floor. Angel unlocked the door and looked back to smile at me.\n\n\"Come inside,\" she invited, and I mean... I wasn't going to say no.\n\nTheir apartment was nice, if a little small, and appeared smaller still because of the huge plant shelves sitting in front of the balcony door.\n\n\"Wow,\" I said as I slipped my shoes off, my eyes on the veritable jungle in front of me.\n\n\"Kate and Brittany are the sweetest for letting me take up so much space,\" Angel said.\n\n\"This is amazing.\" I was so enthralled by her collection that I didn't even wait for her to invite me to look at it before walking across her living room to examine the shelves. \"And they all look so healthy.\"\n\n\"She takes very good care of them,\" Kate said as the door closed behind her. \"And I swear the air in here is fresher than it is outside.\"\n\nI laughed as I examined a delicate-looking calathea. \"I believe it.\"\n\nFrom behind me, Angel cleared her throat. \"Connor, come see my pitcher plant. I keep the ones that need special care in my room.\"\n\nAnd see, I should've figured it out there, right? But I wrote off the way Kate and Brittany were giggling softly as them thinking I was a total plant nerd--which was true--and the little gleam in Angel's eye as her being excited to show me her plant collection. I could barely bring myself to look at Angel as I followed her to her bedroom and examined her really cool plants, asking questions about how she took care of them and where she got them and what insects did she usually give to her pitcher plant?\n\n\"I let it catch whatever it can,\" she said. \"But I also get fruit flies for it sometimes. Kate and Brittany can't stand it when I give it bugs, though.\"\n\n\"Is that why you get your own room?\"\n\n\"No, that's because Kate and Brittany are together.\"\n\nThat was a surprise. I nodded slowly.\n\n\"That's cool,\" I said, fidgeting nervously as I stared at the plant. \"It's crazy how they can lure bugs in, you know? Some of them just have, like, a sugary nectar sort of thing to attract bugs, like any other plant would, but others put out a scent sort of. Like a--\"\n\n\"Like a pheromone?\" Angel said.\n\n\"Uh... yeah.\"\n\n\"Interesting how those work, eh?\"\n\nI frowned. \"How... pheromones work?\"\n\n\"Mm-hmm.\" Out of the corner of my eyes, I saw her step closer. \"Did you know that's one of the side effects of the male birth control pill?\"\n\n\"I... uh...\" I stopped and thought for a moment. \"Yeah, actually, I do remember them mentioning that. How did--\"\n\n\"I'm studying human biology,\" she said. \"So it's kind of fascinating to me to find out that not only do humans have pheromones, but that this pill can make you exude them so strongly. And that they work really, really well.\"\n\nI swallowed hard. \"They d-do?\"\n\n\"Oh, yes.\" She was right beside me now. \"Brittany and Kate can feel it, too. It's like... you're irresistible.\"\n\nNo one in the history of ever had told me I was irresistible. It was usually quite the opposite. And don't get me wrong, I was... I mean, who doesn't want to be told they're irresistible? Who doesn't want an insanely hot girl to sidle up beside him and admit she and her two hot friends are into you? It was a wet dream come true.\n\nThe problem was, unlike a dream, Angel wasn't a figment of my imagination, which I confirmed when she touched my arm and I felt compelled to look up and meet her gaze. Her beautiful big eyes were dark and needy as she bit her lip, and oh God if I didn't want to lean forward and use my teeth to tug that lip out of her mouth.\n\nBut if the only reason she wanted to be near me was because of the side effect of a pill...\n\n\"Maybe I should, uh, go,\" I forced myself to say.\n\nHer eyes widened. \"Wha... what?\"\n\n\"Home,\" I said, my voice cracking. \"I should, uh...\"\n\n\"Did...\" Her face started turning red. \"Oh my God, you don't want to hook up, do you? You actually just came over to look at the plants and--\"\n\n\"N-no!\" I protested, shaking my head violently. \"I... Angel, trust me, I... you are so hot. But I don't want to... you know. If you're just reacting t-to pheromones, it's not right for m-me to... to hook up with you.\"\n\n\"I thought your friends said you haven't got laid in ages.\"\n\nMy face burned. \"That's, uh... I mean, yeah. No, I mean. I... fuck.\"\n\nShe pressed her lips together, amusement flashing in her eyes. \"And even still, you'd turn me down because you're worried I'm... what? Overwhelmed by your sexy manly pheromones?\"\n\nI grimaced as I tore my eyes away from her, shaking my head. \"If it weren't for the No-Nutter, you wouldn't even look at me twice. I don't want to take advantage of that.\"\n\nShe didn't say anything for a moment. Then, very carefully, she took my hand.\n\n\"You're right,\" she said softly. \"I wouldn't have noticed you if it wasn't for a biological reaction to an odorant your body is producing because of the No-Nutter. The same way I might not have noticed you if I hadn't overheard your friends making fun of you for taking the No-Nutter and being a responsible, generous person who doesn't just automatically think that birth control should be solely up to the woman. Because that's just it, Connor. A pitcher plant might put out a pheromone to capture an insect's attention, but it's the shape and colour and scent of the nectar that lures them in.\"\n\nShe reached up, guiding my chin back to face her.\n\n\"I might have noticed you because of the pill, but I started liking you because of how you act. The moment you even thought that I might be influenced by something else, you said you'd leave so you wouldn't take advantage of me. Do you know how rare that is? You're a good guy. You treated my friend nicely. You came over here thinking I was just going to show you some plants and send you on your way.\"\n\n\"Well... yeah,\" I said. \"I mean, I'm... you're so far out of my league that--\"\n\n\"Don't even,\" she said sternly, and the hand on my chin moved to the side of my face. \"I want to hook up with you. Don't insult my good taste, okay?\"\n\n\"I... okay,\" I said dumbly. \"But w-what about, um, your... roommates?\"\n\nLaughter flickered in her eyes and the next thing I knew, she was pulling my face down to hers, and her eyes were closing and so were mine, and her breath was brushing against my lips, and holy shit I was kissing Angel.\n\n\"They're waiting for us,\" she said against my mouth. \"Those pheromones caught all our attention.\"\n\nOh, fuck.\n\n\"But you said they were--\"\n\n\"They both like some dick now and then,\" Angel said. \"I believe Kate says she prefers sucking it and Brittany likes it in the ass.\"\n\nOh, fuck.\n\n\"And you?\" I choked.\n\nShe grinned. \"All three.\"\n\nOh, holy fucking fuck.\n\nAngel kissed me again, intentionally or unintentionally giving me a moment to process the whole thing. Once I repeated it over in my head a few times--three hot girls want to fuck me is this real life what the fuck how did I get in this situation am I dreaming nope I'm pretty sure I'm not dreaming holy shit Angel just stuck her tongue in my mouth oh my God Brittany and Kate probably want to stick their tongues in my mouth holy shit how did this happen am I really going to do this who am I kidding of course I'm going to fucking do this holy shit three hot girls want to fuck me is this...--and gotten used to the feel of Angel's mouth against mine, I was ready.\n\nI was going to do it.\n\nI was going to fuck all three of them.\n\nMy dick caught up with my mind and realized that Angel's perfect little body was pressed against me. I could feel her breasts pressed against my chest and her hips were nudging mine, so when my cock started hardening, there was no way she didn't feel it. I felt her smile as she kissed me and slowly, achingly slowly, she swayed from side to side, a tantalizing motion that made my cock react more and more.\n\n\"Come on,\" she murmured. \"How about we give this No-Nutter a test drive?\"\n\n\"Okay.\"\n\nShe giggled and took my hand, leading me out of her bedroom and back into the small living room. I don't know what I was expecting, but despite knowing they were together, it wasn't to see Brittany and Kate pawing at each other on the couch. Brittany's hand was beneath the flirty little skirt Kate wore, and Kate had a fist full of Brittany's chestnut hair tangled in her hand. They parted and looked at me and Angel as we entered the room.\n\n\"Please tell me he agreed to it,\" Kate said in a heady, desperate voice.\n\n\"He said maybe,\" Angel replied before I could enthusiastically confirm that I definitely agreed to it.\n\nI felt as confused as Brittany looked.\n\n\"Maybe?\" she repeated, her eyebrows furrowed.\n\n\"Mm-hmm.\" She squeezed my hand and tugged me forward into the room. \"He said he might need to play with Kate's tits for a bit to really make up his mind, you know?\"\n\nI must have looked wildly alarmed because Kate glanced at me and then burst out laughing.\n\n\"Be nice to our poor, sweet Connor,\" she scolded Angel, untangling herself from Brittany and standing up. \"Do you want to play with them, Connor?\"\n\n\"Uh... I mean... yeah,\" I said, and she grinned.\n\nKate took my hand and led me to the couch, seating me beside Brittany before standing in front of me and taking off her shirt. I was completely entranced; I mean, who wouldn't be? Her breasts had to be at least a D, maybe more; truthfully, I had no idea how bra sizes worked, but they were pretty damn big. She was wearing a pink bra, and then approximately five seconds later, she was no longer wearing a pink bra and I was staring directly at the puffy, rosy pink nipples capping her beautiful breasts.\n\n\"What do you think?\" Brittany asked from beside me.\n\n\"Wow,\" I managed to say, my eyes glued to Kate's tits.\n\nAll three women laughed and I jumped slightly as Brittany slipped her hand into my lap.\n\n\"She likes having her nipples sucked,\" she whispered as she ran her palm along the bulge in my jeans. \"And you should try just shoving your face right in her cleavage. It feels amazing.\"\n\nBefore I could respond, Brittany took her hand back and Kate crawled onto my lap, straddling my thighs and pushing me against the back of the couch. I reached up and cupped my hand around one breast, then mirrored the action with my other hand. She watched as I fondled her, purposely avoiding her nipples as I traced my fingers all along the magnificent globes in my palms, indulging in the softness of her skin and mesmerizing weight of her tits until I couldn't take it any longer and brushed my thumbs across her nipples.\n\nShe moaned. And oh God was it an amazing sound. Throaty and breathy and yearning, and it absolutely compelled me to flick my thumbs across the hard little nubs again, and a third time before I couldn't take it anymore and had to push my face between them like Brittany had suggested.\n\nIt was a great suggestion.\n\nKate squirmed in my lap as I licked her breasts, kissing along the sensitive flesh until I found one of her nipples and twirled my tongue around it before taking it into my mouth. She made another one of those insanely desirable sounds and shoved her tits against me harder.",
        "\"His tongue,\" she gasped, though the sound was slightly dulled due to the naked mounds pressed against my head.\n\n\"Is it good?\" I heard Brittany ask.\n\n\"So good,\" Kate moaned. \"Oh, he's good.\"\n\nMy cock throbbed and I couldn't help myself from pushing up just a bit, grinding against Kate's body. She felt it, obviously, and ran a hand through my hair.\n\n\"Brit, you should--\"\n\nBut the rest of the words were muffled. I wasn't sure why, but as it turned out, it didn't matter, because I was pretty sure I found out what she said moments later.\n\nThe warmth of Brittany's body beside me disappeared as she moved away. A few moments after that, I felt someone kneel in front of me, and a set of hands pushed between Kate's legs and up to the button of my jeans. Kate lifted herself so those hands could undo the button and carefully unzip my fly, then used her body to guide me forward so I could continue feasting on her breasts without her resting fully against my lap. That was so the person who had just unzipped my pants could slide them off before nestling between my legs and taking my swollen cock into their mouth.\n\nI groaned as I felt the hot wetness enveloping my tip. Kate giggled and shoved her tits against me harder, just as the mouth around my cock slid down further. A dizzy sort of lightness took over my mind, a mix of the overwhelming sensations and the surreal situation and probably a little bit because it was hard to breathe given the breasts in my face.\n\nNot that I was complaining. I mean frankly, if I was suffocated by Kate's tits while Brittany was sucking my cock, at least I'd die being the happiest I'd ever been.\n\nAt least, I thought I would, until I felt the couch shift and another body sidle up beside me--Angel, obviously. She said something to Kate, who shifted on my lap so Angel could grab my arm and gently pull it towards her. I still couldn't see her, so it took me a few moments to realize she was completely naked, which I figured out when she guided my hand between her legs and I felt the hot, slick wetness of her folds against my fingers. My breath hitched and as I boldly began to explore her pussy, she let go of my hand, and I slipped a finger inside her.\n\nAngel moaned loudly and steadied herself by gripping my bicep tightly, and now that was the happiest I'd ever been.\n\nI didn't finger her fast or hard; instead, I took it slow, indulging in her pussy, memorizing every ridge on her slick walls. She was tight, even with just my finger in there. If her pussy was that tight, I could hardly imagine how snug her ass must be, and the thought of it made my cock twitch in Brittany's mouth. A moment later, I felt the vibration of a surprised noise in her throat, and her fingers wrapped around my cock as she pulled her mouth off of me.\n\n\"Guys!\" Brittany gasped. \"His precum tastes like... like... I don't know. Sweet.\"\n\n\"Sweet?\" I heard Angel repeat. \"Like how sweet?\"\n\n\"Like... I don't know the English word,\" she said. \"It's, ah... s\u00fbkerspin. Barbe \u00e0 papa.\"\n\n\"Let me try.\"\n\nAnd with that, Kate slipped off my lap. I gasped for breath and turned my head, then immediately lost my breath again as I came face to face with Angel's naked body.\n\nIt was as perfect as I imagined, all curves and smooth skin, faint tan lines outlining all her best parts.\n\n\"You like?\" she asked, almost shyly.\n\n\"Wow,\" I breathed. \"Holy fuck, you are... wow.\"\n\nShe giggled and sidled in closer, taking care to make sure my finger stayed in her pussy, and kissed me again. It was so distracting, I almost didn't notice Kate on the other side of me, twisting around so her ass was nestled beside me and her mouth could meet Brittany's on my cock.\n\nAlmost.\n\nI tasted Angel's breath as I inhaled sharply, two sets of lips meeting around the head of my cock. With a reluctant eagerness, I pulled away from Angel so I could look down and witness a sight I hadn't ever even dared to imagine, let alone hope to see.\n\n\"Oh my God,\" Kate said, flicking her tongue out to catch a drop of precum that had just leaked from my cock. \"You're right, it's sweet. Like... like...\"\n\nBrittany snapped her fingers. \"Cotton candy! That's the English.\"\n\n\"Really?\" Angel said interestedly. \"I wonder if his cum will taste like it, too.\"\n\n\"Mmf,\" Kate replied, her mouth already full of my cock. She started sucking eagerly, bobbing her head like she was trying to pump more precum out of me.\n\nI tilted my head back, groaning as pleasure built, and built, and built. Angel giggled, resting a hand on my shoulder and pulling herself in closer as she rocked against my fingers. Her lips pressed against my neck, then my jaw, then my ear.\n\n\"You're going to have to come for us a lot tonight,\" she whispered. \"You know. For science. And for three horny girls who all want at least one taste of your cum. But three won't be enough, because I don't know about them, but I'd like a load in my pussy and maybe in my ass, too. And I know Kate's going to want one on her tits, and--\"\n\n\"Oh my God, Angel,\" I moaned. \"I'm already so fucking close, I--\"\n\n\"I call dibs!\" Brittany hollered, and she practically wrestled a stunned Kate off my dick before shoving her face into my crotch and just, like... just immediately swallowing my entire cock down her throat.\n\nAnd I mean, who would be able to hold back from that? I ask you, who would see two women fighting over his cock, only to have the winner deepthroat him so fast and so hard that he could feel the muscles of her throat milking the tip of his cock, and not immediately feel the pressure in his body skyrocket and his dick start to spasm?\n\nThe answer: definitely not me.\n\nI warned Brittany I was coming after shooting the first spurt down her throat. She pulled back so that the next couple of waves filled her mouth, big eyes sparkling up at me as I spilled my cum uncontrollably against her tongue. Once I finished, panting for air as I stared at her, she sat back, swallowed, and smiled.\n\n\"Yep,\" she said. \"Cotton candy.\"\n\n\"You bitch,\" Kate pouted. \"You didn't even share.\"\n\n\"Like you would have shared,\" scoffed Brittany.\n\n\"I would have,\" Kate replied righteously. \"I would have let Connor come all over my tits and then you could lick it off like I know you want to.\"\n\n\"You would deprive poor Connor of being able to come in someone's mouth?\" Angel teased.\n\n\"I... oh. I guess not.\"\n\nBrittany giggled and reached for Kate. \"I am not selfish, love. Come here.\" She opened her mouth and showed it to her. \"I saved you a taste.\"\n\n\"Hey!\" Angel protested. \"I haven't gotten a taste at all yet!\"\n\n\"Oh, that's true.\"\n\nBrittany turned her head and stretched up as Angel reached down. Before I knew what was happening, they were kissing, Angel's tongue eagerly pushing into Brittany's mouth.\n\n\"Bitches,\" Kate mumbled, then looked up at me. \"I get a whole load to myself later, okay?\"\n\n\"Yeah,\" I said. \"Whatever you want.\"\n\nShe glanced down at my cock. \"How soon?\"\n\nI followed her gaze, looking at what should have been a spent cock glistening with saliva. It was glistening, all right, but as for spent?\n\n\"I don't know,\" I admitted, staring at my still-hard erection. \"It's never done that before.\"\n\nKate licked her lips, then while the other two were still making out, crawled into my lap. She lifted her skirt, nudged her little thong panties to the side, and sank down on my cock.\n\n\"Oh,\" she sighed sexily.\n\n\"Oh,\" I grunted unsexily.\n\n\"Hey!\" Angel protested, pulling away from Brittany. \"I wanted to fuck him first!\"\n\n\"I'll come inside you first,\" I promised as Kate began rolling her hips. \"It's gonna--ah.\" I tilted my head back, consumed by the feel of Kate's dripping pussy surrounding my bare cock. \"It's gonna be a while, I think. Pretty sure I've gotta make you each come at least once before it's my turn again.\"\n\n\"You better,\" Angel whispered, and I felt her pussy clench around the fingers I still had inside of her.\n\nI made good on it. Kate was the first one to come on my cock, but Angel was the first to come; her hips bucked wildly as I fingered her into an orgasm. Brittany moved up beside me on the couch, kneeling so I could suck on her tits as I slipped a hand behind her and cupped her ass.\n\nThen traced my fingers along her ass crack.\n\nThen dipped them into her cleft and pressed a fingertip against her tight little pucker.\n\nThen waited as she bolted from the room to grab a bottle of lube, returned, and poured it all over her ass and my fingers so I could push one inside of her, which was apparently good enough to make Brittany come just a few seconds later.\n\nBut I'd been right about it taking a while; even after making the three of them come, I was no closer to finishing again, which was fine by me. My cock was still rock hard and it still felt really damn good when Angel urged Brittany onto her hands and knees and directed me behind her so I could fuck her in the ass. I'd never fucked a girl in the ass before, but I'd watched enough porn to have a rough idea of what not to do, so I took it slow and gentle until Brittany began ramming back against me, her ass cheeks rippling as she fucked herself to another screaming orgasm on my cock.\n\nAnd let me tell you, that was hot as fuck, and it got me pretty damn close, but I'd made a promise to Angel. As soon as Brittany finished losing her mind, I told them to give me a moment and ran to the bathroom to wash my dick and give myself a second to recover. I dunno, it just felt like the considerate thing to do, but I guess it didn't really matter much when I returned to see Kate kneeling on the couch and happily munching away on Brittany's ass while Brittany licked Angel's pussy.\n\nThey all seemed pretty content, so I worked my way onto the couch beneath Kate and grabbed her hips. She made a delighted noise and lowered herself, sitting on my face and grinding her juicy pussy against my mouth and nose and tongue until she was gushing against me with another orgasm. Above me somewhere, I heard someone cry out as she came; I wasn't entirely sure if it was Brittany or Angel until I felt someone moving overtop of me and lining my cock up to her pussy. Kate carefully crawled off my face just in time for me to see Angel hovering above me, the light from the living room lamp silhouetting her. She met my eye and smiled as she sank down on me, the head of my cock splitting her pussy lips before her walls began stretching around me.\n\nIt might've been the feverish haze of a three-on-one orgy talking, but I was pretty sure I had just fallen in love with her.\n\nWhile Kate and Brittany cuddled and recovered on one side of the couch, Angel rode my cock on the other. It was neither fast nor slow, not rough or gentle, just perfectly paced with the right amount of kissing and touching and moaning. I rested my hands on her hips, feeling her smooth skin and admiring the crease where her soft tummy met her hips.\n\nFuck, was she ever beautiful. I wondered again if I was stuck in some kind of coma or something.\n\nIn the moment, it didn't matter. What mattered was that Angel's pussy was bearing down on my cock and her chest was heaving. Her forehead creased and she put a hand against my shoulder, her nails digging in as her thighs started to quiver. She braced herself, then threw her head back and pushed her tits out as her body shook on top of me. Her hips kept moving, grinding back and forth as she drew every second of that orgasm out until she was collapsing forward against my chest.\n\nI held her, thrusting up into her a few times before carefully sitting up and guiding her onto her back. Those big blue eyes stared up at me, deep and yearning and hazily satisfied as I started fucking her. Her legs wrapped around my waist, urging me on as much as her words did, and when I finally felt that telltale clenching of my muscles and started thrusting harder and deeper, she smiled again.\n\n\"Come inside,\" she whispered, and I fucking did.\n\nHer pussy milked my cock as I pumped those final amazing thrusts, relief washing through me and finding a home deep in Angel. When I stilled, gasping for breath, she kissed me again and let me rest against her with my cock still buried in her pussy.\n\nI needed a break after that one, so I got to watch as Kate demanded she finally get to taste my apparently amazing flavoured jizz. And by watch, I mean Angel leaned against my chest and spread her legs as Kate started licking my cum out of her pussy, joined a few moments later by Brittany. They made Angel writhe and squeal and squirm, and by the time she came again, I was ready for another round.\n\nThe rest of the night flashed by. It was the best foursome of my life, not just because it was the only one but because it was so fucking hot. I have no idea if it was the best anything of any of their lives, but I like to think I performed pretty well considering I had three women to satisfy after God knows how long without even touching a woman. They each came at least one more time, probably more, but it got hazier and hazier as the night wore on.\n\nI remembered Kate insisting on a load all to herself, which she gave up in favour of letting me come all over her tits after another deliciously sloppy blowjob that had started with me fucking Brittany's face. I ate Angel out, then Brittany, then Kate sat on my face for a while again before I found my face buried in Angel's ass. And I ended the night inside Angel, nearly crying as the sweet velvet of her pussy surrounded me again and again, my heart pounding and racing and throbbing as I told her how good she felt.\n\nAfter I came inside her again, I fell back on the couch, my pulse bounding as the girls surrounded me. Kate and Brittany were entwined with each other, but curled up against one of my thighs, and Angel nestled in beside me and rested against my chest.\n\n\"You okay?\" she asked, giggling.\n\n\"Think so.\" I groaned and held her a little closer. \"Is it going to ruin everything if I beg for this not to be a one night thing?\"\n\n\"Depends,\" she said, tracing a finger up my chest. \"Do you mean fucking all three of us, or would you take me out on a date or two?\"\n\n\"Uh--\"\n\n\"Either works for me.\" She kissed my neck. \"But I think I'd like you all to myself.\"\n\nMy heart thudded hard and for a moment, I was the happiest I'd ever been.\n\nThen I woke up.\n\nThe room was white and there were loud beeps surrounding me. My mouth was painfully dry, my tongue as smooth as a cactus, and my head ached.\n\nConfused, I looked to my left, then to my right. There were two empty chairs and a small wooden table with a teddy bear and some balloons on it. Beside that was a half-empty plastic to-go cup from the local coffee shop sitting next to a car manual with a picture of a Sunfire on the front. On the wall hung a crucifix and a big picture of an angel with golden hair.\n\n\"Oh!\" said a voice, and I turned to see a nurse standing in the room. \"Connor! You're awake.\"\n\n\"Uh-huh,\" I croaked.\n\n\"Oh, that'll be the dry mouth.\" She darted into the hallway and came back quickly with a cup full of ice chips, which she handed to me. My hand shook as I took it and she leaned forward, gently guiding the paper cup to my lips. A strange look crossed her face as she touched my hand, something soft and nurturing and...\n\nAnd I don't know. Something.\n\n\"Wha' 'appened?\" I asked through mouthful of ice.\n\n\"Oh, you poor thing,\" she said softly, carefully adjusting the IV stand so she could sit on the edge of the bed. \"You passed out. Heart palpitations. Probably exacerbated by the NONTR you were taking.\"\n\nHeart palpitations.\n\nI mean, that made sense, didn't it? I'd never had a foursome before, but I was pretty sure that they took a lot of effort. So if the NONTR was causing heart palpitations and I'd done all that work to make the three girls come--not to mention all the coming I did--then maybe I'd just...\n\nI chewed the ice as my eyes fell on the picture of the angel again.\n\nIf I'd passed out, where were the girls? Had they brought me here or had they called an ambulance? And how long had I...\n\nMy eyes moved from the picture of the angel to the car manual sitting on the small wooden table. Brittany drove a Sunfire just like that one. And the coffee cup... Kate... Kate worked there.\n\nDidn't she?\n\nDidn't...\n\nMy heart wasn't thudding painfully hard anymore. Instead, a hollow sort of sadness filled my chest.\n\nHadn't I wondered multiple times if I was in some kind of coma? I mean, the whole fucking thing was too good to be true. I didn't have a shot with even one of those girls, let alone all three of them.\n\nWas Kate even real? Or Brittany? Or had I just made them all up? I mean, I knew there was a hot barista with huge tits who worked at the coffee shop, but I didn't know her name. I didn't know the name of the girl who drove the Sunfire. And Angel...\n\nOn what planet could I have ever even imagined Angel would fuck me?\n\n\"So it was all a dream?\" I finally said, my voice still hoarse but at least manageable.\n\n\"What was all a dream, cutie?\" the nurse asked.\n\nI stared at the painting, then shook my head.\n\nShe patted my hand gently, her palm soft and warm against my clammy skin. \"Hallucinations are another common side effect, so you may want to let your researcher know.\"\n\n\"Right,\" I said softly. \"Okay.\"\n\nShe nodded, then stood up and began fiddling with one of the tubes on my arm.\n\n\"Anyway, you're very lucky,\" she said.\n\n\"Sure,\" I said, unconvinced.\n\n\"You are. You were extremely dehydrated. It's a good thing those girls knew what to do so you got here in time.\"\n\n\"What girls?\" I started to ask, but was cut off by the door to the room flying open.\n\n\"Connor!\" Angel cried as she burst into the room. \"You're awake!\"\n\n\"I... uh--oof,\" I said as she threw herself onto the bed and into my arms.\n\n\"Miss!\" the nurse said harshly. \"He just woke up!\"\n\n\"We were so worried,\" Kate said, ignoring the nurse as she rushed to the bed. \"We thought we'd broken you.\"\n\n\"You did almost break him,\" the nurse said, unimpressed. \"He was susceptible to palpitations already and with the, uh, overexertion you described--\"\n\n\"We almost fucked you to death, she means,\" giggled Brittany.\n\n\"Mmm,\" the nurse said, her mouth tight as she finished fiddling with the tube.\n\nMy head spun as the three of them talked and touched me and apologized profusely. By the time I'd realized I'd been mistaken and that holy fuck I had actually fucked all three of those women, Angel was stroking my cheek tenderly and staring up at me with her big blue eyes.\n\n\"We agreed on it and you'll just have to take me on my own for a while,\" she said.\n\n\"Uh, I believe we said we would each have to take him on our own,\" Brittany said.\n\n\"And in the meantime, Kate said she'd love to be your gym buddy if you want her to,\" Angel said, ignoring her. \"You know, so we won't overexert you again.\"\n\nI nodded, then smiled, then had to chuckle as she reached up and kissed me. Maybe No-Nutter was gonna make my dick fall off... but only 'cause I'd be using it so much.\n\n**\n\nThank you to the amazingly awesome people who beta read. Special thanks to chasten and OneAuthor for proofreading. Paul M, Kevin Matheny, centralsquareguy, KW, AG, PM, N, ED, KJ, MidNyt, RP, and Christian Sonberg - thank you all for your support.\n\nI hope you enjoyed the story!"
    ],
    "authorname": "MsCherylTerra",
    "tags": [
        "humor",
        "orgy",
        "foursome",
        "three women one man",
        "oral",
        "side effects",
        "cum eating",
        "anal",
        "consent",
        "cotton candy"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/the-happiest-ive-ever-been"
}