{
    "title": "Show Moms Ch. 08-09",
    "pages": [
        "DISCLOSURE: If you're looking for a sex-filled romp featuring a younger guy and an older woman, this probably isn't the story for you. Allow me to recommend \"The Accidental Gigolo,\" my attempt to write exactly that kind of story. Just click on my name above, and you'll find it on my member page under Stories/Poems. Despite the sex that introduces the following chapters and the \"Mature\" category this story falls in, this story is actually much more of a romance. \n\n*\n\nChapter 8\n\nThe woman who won the 15-18 division was a very attractive redhead who was clearly the class of the group. Robin and I were both clapping when they announced that she'd won. The 12-15 division was a tossup; I liked the woman who won, Robin liked the other woman. And then it was Connie's group. She did look good in her bikini, I'll give her that. And she had learned how to give a blow job. And she gave her handler an awesome ride during the compulsories.\n\n\"Fuck,\" Robin said, even before they'd announced the results.\n\n\"Oh, come on, what fun what it be if somebody else beat her?\" I teased her as we sat together watching the rest of the contestants.\n\n\"And what fun will it be if she \u2014 \" Robin began, stopping immediately when she caught my glare. \"I know \u2014 have fun, have faith.\"\n\nThat was what I'd been preaching ever since we arrived.\n\n\"Kind of odd learning about faith from you, though,\" she smiled at me.\n\nI smiled back. All I knew was something was going right.\n\n* * * * * *\n\nThe Friday after the state show, I was walking back from my last class of the afternoon, hoping against hope that I had time to get a couple of books out of my room before the blue rubber band went up. It was a late afternoon class, and I didn't always get back in time to get some books out for the evening. Then, during tomorrow's home football game, I'd put them back, because I wasn't going to be using them on Saturday night. Earlier in the week, I was very surprised to received a brief e-mail from Robin, scheduling a \"practice session\" for a fancy nearby hotel on Saturday evening. A small part of me wondered what her husband thought of that. A bigger part wondered what her daughter thought. \n\nThere was a group of guys gathered outside the door to the dorm, and as I approached, they all stepped backward. One grabbed the door handle and pulled it open for me.\n\n\"Enter, highness,\" he said with a bow.\n\nI had no earthly idea who he was, other than a guy from the next hall over, so I just thanked him and went in. Along the way, four other guys briefly bowed their heads and muttered things like \"your Majesty\" or \"your highness.\" Maybe they'd been at the show. You'd think college guys would be a little more, I don't know, adult about this. I mean, it's not like I had won a Nobel Prize. Hell, I hadn't even won the state MILF Show, for Pete's sake. The guys in high school had just high-fived me after I'd won the Nationals.\n\nFinally, I saw Alec coming toward me. He gave me a much more sweeping bow, along with a \"your Majesty.\"\n\n\"What the fuck's going on?\" I said, stopping in front of him.\n\n\"The goddess awaits,\" he answered with a grin. \"The men of Corcoran Dorm have decided that you must be the prince of legend, and we salute you accordingly.\"\n\nHe bowed again.\n\n\"What are you talking about?\" I insisted.\n\n\"The girl? In your room?\" he chuckled.\n\n\"There's a girl in my room every fucking Friday afternoon,\" I complained. \"I think it's starting to permanently affect my spine.\"\n\n\"Those are the Chipster's girls,\" he said knowingly.\n\n\"Yeah, no shit.\" \n\n\"Seriously, man,\" he said, \"I was in there talking to Chipper earlier this afternoon, trying to help him understand the offense \u2014 which is, like, well, never mind. Anyway, there's this knock on the door, and he opens it up, and there's this goddess there, with a bunch of guys trailing behind her like the dust behind that Road Runner dude. And Chipper just stands there, with his mouth opening and closing and no sound coming out.\n\n\"So I lean around him and ask if I can help her. And she says, 'Is this Kenny Winston's room?' And I said, yeah, and she asks if you're there, and I say no, you're not, but you should be back soon. So she says, 'May I wait for him, please?' And by now Chipper's found his voice and he croaks out, 'Gay-bo? You wanna wait for Gay-bo?' And she smiles \u2014 God, what a gorgeous smile \u2014 and says, 'If Gay-bo is Kenny, yes. May I wait for him, please?'\n\n\"And then, get this, Chipper says, 'I gotta get dressed, honey, but if you wanna sit there and watch me, I ain't gonna stop you.' And she says, 'That's okay, I brought a book.' And she sits down on your bed, opens her purse and pulls out a book, and just starts reading.\n\n\"So then \u2014 this killed me, dude \u2014 she's just sittin' there, readin' this book, and Chipper decides he needs to change his shorts. He's standin' there bare-assed, and finally he can't take it anymore. So he turns around and says, 'You sure you don't want any of this, honey?' You'd think he would have known better after that tape, huh? So she looks up from the book at him, looks down at his dick, and gets this little smirk on her face, looks back at him with one of those little raised eyebrow things, and then just goes back to readin'. So Chipper starts mutterin' to himself and pullin' on his clothes and we finally head for the door.\"\n\nAnother \"your Majesty\" went by, tugging on his forelock as he bowed his head.\n\n\"And just before we get there, she says, without looking up, 'Those rubber bands on the door knob, I assume one is for you and one is for Kenny?' Chipper is, like, speechless, so I tell her which is which and she lifts her head up and looks Chipper in the eye and says, 'Be a sweetie and put the red one on the door on your way out, please, honey.' I nearly bust a gut laughin', man. Chipper just stalks off down the hall, and I'm standin' outside your door holdin' my sides.\"\n\n\"So there's a girl in my room, right now?\" I asked.\n\nHe blinked his eyes, looking at me like I'd turned a different color.\n\n\"There's a fucking goddess in your room,\" he put a hand on my shoulder. \"The honor of the dorm is at stake. The honor of Handley College is at stake.\"\n\n\"Is she foreign?\" I asked. \"Is the honor of America at stake?\"\n\nHe clapped me on the arm.\n\n\"Man, all I can say is that if she was in my room, I wouldn't be out here talkin' to no wiseass asshole like you.\"\n\nI nodded.\n\n\"Good point. See you, Alec.\"\n\nI approached the room with some trepidation. True, there was the red rubber band on the door knob. And true, she was supposed to be gorgeous. But still, suppose she was some sort of stalker or something? Suppose she went around from one MILF show to the next, selecting her next victim?\n\nAw, who the fuck was I kidding? I put my key in the door and pushed it open.\n\nShe wasn't reading now. Hell, she wasn't dressed now. Terry Kennedy was sitting on my bed wearing nothing but a smile. I closed the door quickly behind me.\n\n\"Terry?\" I asked, even though it was quite obviously her.\n\n\"Kenny,\" she said softly.\n\n\"What are you doing here?\" \n\n\"Waiting for you,\" she told me.\n\n\"Because?\"\n\n\"Because you're going to make love to my mom this weekend, aren't you?\"\n\n\"Well, I don't know if 'making love' is right,\" I ran a hand through my hair. \"I guess I'm going to fuck her, though. We have to practice for the \u2014\"\n\n\"Kenny, I know you,\" she smiled indulgently. \"You can't fuck anyone without making love to her. But she can't have you until I do.\"\n\nI just kind of blinked at her.\n\n\"But you're a \u2014 I mean, this could really hurt you,\" I finally said. \"I'm kind of big for your first time.\"\n\n\"I've been practicing,\" she said. She had a purse by the side of the bed, amid her pile of clothes, and she reached down and pulled out the dildo that I'd had made for her mother. Without taking her eyes off of me, she opened her mouth and took the whole thing down her throat without batting an eyelash.\n\n\"Mmmm,\" she moaned, slowly pulling it out and planting a kiss on the tip before she reached down and just as slowly pushed it into the slit between her thighs.\n\n\"Mmmm,\" she moaned again. \"Oh God, Kenny.\" She was looking at me through half-lidded eyes.\n\nI thought my cock had been hard before. Now it was trying to tear a hole in my jeans. Still, the big head had one last argument.\n\n\"But I thought you were saving your \u2014 you know, saving it for marriage.\"\n\nHer laughter was like bells.\n\n\"That could be, like, months. I decided just to save it for the guy I want to marry.\"\n\nThat took a second or two to process.\n\n\"You want to marry me?\" \n\nHer face lit up. She pulled the dildo out and tossed it onto the floor.\n\n\"Why, yes, Kenny, what a sweet proposal. I'd love to marry you. Now come to bed and let's find out what I've gotten myself into.\"\n\nThe big head shut itself down. I tore off my shoes, my jeans, my socks, my shorts, and my shirt, and dove head first into her waiting arms. It would be just the first of many places I ended up diving into that night. Sometimes head first, sometimes not.\n\nI woke up first the next morning, just staring down at the beautiful goddess lying on my shoulder as sunlight flooded the room. Finally she woke up, too, and looked up at me with bright, smiling blue eyes.\n\n\"I owe you an apology,\" she said.\n\n\"No, no, no,\" I insisted. \"You were great. That was \u2014 it was amazing. I can't believe it was your first time.\"\n\n\"I owe you an apology for last weekend,\" she said.\n\nOh. I couldn't help it. I started laughing. And Terry, bless her heart, started laughing right along with me.\n\n\"Okay,\" I said after we finally stopped. \"Let me take you out to breakfast and you can tell me what happened.\"\n\nTerry borrowed a bathrobe and trooped upstairs to the women's hallway to take her shower. She came back to tell me how much she liked the women I was going to school with. And how impressed they were when she told them about my success at the show. And how cowed they were when she mentioned that if they made one move toward me while she was back at school, before her transfer came through, she'd come back and rip their hair out, one strand at a time.\n\nOn the way out, I saw Chip sleeping in the first floor lounge, his feet hanging uncomfortably off the end of the couch. I opened the door.\n\n\"Yo, dude,\" I yelled.\n\n\"Huh?\" he woke up slowly.\n\n\"Room's all yours, honey.\"\n\nTerry and I took our seats in the cafeteria with our trays of food.\n\n\"So?\" I asked.\n\n\"Well, obviously you were right about the money,\" she started. \"But you know that. I talked to Dad, and he couldn't believe that she had borrowed the money from you. I told him that I couldn't believe that he had used up all the money they'd saved for Wally's and my college. So then he said that he couldn't believe that Mom was here, at a disgusting exhibition like this.\"\n\nShe started to giggle.\n\n\"And then Mrs. Becker came by? Our minister's wife? And told us that she thought it was so great that we were there supporting Mom. She said she wished more husbands were this supportive. And then she just smiled at us and walked off.\n\n\"That was kind of like the final piece for me, after what you said, and what Dad said. But Dad was kind of, like, shell-shocked. He just sat there, like he couldn't decide what was happening. And I told him that he probably still hadn't noticed how good she looked, had he? And that if he did one thing \u2014 just one thing \u2014 to prevent Mom from doing this, from trying to educate her kids, from being able to eat something other than macaroni and cheese when she was by herself, which by the way she better not ever have to do again, I told him, I wouldn't speak to him again for the rest of his life. And that shut him up pretty much completely. He kind of wandered off and I never saw him again.\"\n\nTerry smiled at me and reached across for my hand.\n\n\"So I just sat there, crying. And then Mrs. Becker came back.\"\n\n\"The minister's wife,\" I nodded.\n\n\"And I told her I'd fallen in love, and that I'd just ruined it by making a total ass of myself in front of the only guy I'd ever love.\n\n\"She asked if I thought that you loved me, and I said that at one point you probably did, but that now you couldn't possibly.\n\n\"And she pointed out that I would never know for sure until I came right out and told you that I loved you. And you know what she said then?\"\n\nI mouthed the words as Terry spoke them.\n\n\"'Go get 'em, girlfriend.'\n\n\"So then I met Mom \u2014 well, you saw \u2014 and we talked, like forever, and, well, here I am. Engaged and, with any luck, pregnant. Just like Mom.\"\n\nShe looked at me for a couple of seconds and finally exploded into laughter.\n\n\"I've been on the pill for a month-and-a-half,\" she finally told me. \"But you should have seen your face just then. I really do love you, Kenny Winston.\"\n\n\"Sorry,\" I said, after my heart had returned to its normal rhythm. \"I'm usually very good at that whole responsible, taking care of the birth control thing. I'm just a little out of practice.\"\n\n\"Yeah,\" she smirked. \"Mom told me about your celibacy thing. Poor baby. No wonder the girls here didn't really know you. There's one really cute brunette on the floor above yours who has the tape. She couldn't believe you were hiding right below her all semester. Lucky for me, though, huh?\"\n\n\"And me,\" I grinned back.\n\n\"So, um, what about your sorority thing?\" I asked. \"That seemed to mean a lot to you.\"\n\nShe gave me a little half-smile.\n\n\"After I talked to Mrs. Becker, I went back to sit with the girls. But before I got there, I heard Cassie talking about how she'd stolen your phone number from my cell phone the night before, and that after I was, quote, back in my place, unquote, she'd give you a ring and get a real party going.\"\n\n\"So we won't be inviting her to the wedding, huh?\"\n\n\"No, but I will send her an announcement,\" Terry started laughing.\n\nI spent the rest of the morning showing her the campus, and we spent the afternoon at the football game. I pointed out Chip, standing next to the coach with the clipboard, and Alec, who was the team's kick returner. Right before the kickoff, she stood up and screamed, \"Come on Alec, you stud, run it back!\" Everyone, including Alec, turned to look. And then he scored a touchdown, his first of the year. When he came up to us after the game, I asked him about it.\n\n\"Hey, man,\" he said, \"a goddess tells you to bring it back, you gotta do it, right?\"\n\nNo argument from me. Terry just beamed at him.\n\n\"So what time are we supposed to meet Mom at the hotel?\" she asked as we walked out of the football game.\n\n\"We?\" I asked. \"How did 'we' get to be meeting your mother?\"\n\n\"You can't honestly think I'm not going to be there when my mother meets my fianc\u00e9e for the first time, can you?\"\n\nPut that way, no, it was a perfectly reasonable request.\n\n\"Well, then, I guess we're leaving in about half an hour,\" I said.\n\nFor the second day in a row I woke up next to Terry Kennedy. I lifted my head and looked across Terry's prone form; the light was struggling to get in underneath the hotel curtains. Terry had apparently been waiting for me to wake up. She sat upright in bed and turned the light on.\n\n\"Good, you're awake,\" she said. \"What's a MILF?\"\n\n\"How are you so chipper?\" I asked groggily. \"What time is it?\"\n\n\"Seven-thirty,\" she said. \"Seriously, what's a MILF? I never did figure out what that was, and it's been bothering me all night.\"\n\n\"A Mom I'd Love to Fuck,\" I told her. \"M-I-L-F. MILF.\"\n\n\"My mother is a mom you'd love to fuck?\" she asked me.\n\n\"You were at the Coliseum,\" I said. \"Your mother is a mom that every guy there would love to fuck.\"\n\n\"So what does that make me?\" she demanded.\n\nI was slowly waking up, clearly not fast enough.\n\n\"I guess you're a Daughter I'd Love To...\"\n\nI was straining for something different, something expressive, when I heard a noise from my other side. I looked over at the tousled hair of the woman lying there on her stomach, with her face turned to the far wall. I had thought she was still asleep.\n\n\"I'm sorry?\" I asked her.\n\n\"Do,\" came back her muffled voice.\n\n\"Do,\" I turned back to Terry in satisfaction. \"A Daughter I'd Love to Do. A D-I...\"\n\nI was in serious trouble.\n\n\"A DILDO?\" Terry squealed. She leaned across me, frowning at the woman whose body was now shaking with laughter. \"I'm his DILDO?\"\n\nShe stretched her arm out, located the woman's ass underneath the covers, and gave it a hard swat.\n\n\"You are such a bitch, mother!\" she sat back. \"See if I let you fuck my fianc\u00e9e more than five or six more times.\"\n\nRobin turned her head to look at us. She couldn't stop laughing.\n\n\"Yeah, very funny,\" I agreed. \"Thanks for your help.\"\n\nBut it was infectious. I joined in. Terry joined in. When it finally wore down, Robin gave her daughter a serious look.\n\n\"I don't think I could survive fucking your fianc\u00e9e more than five or six more times,\" she said. \"But since it's still early, and we have the room until eleven...\"\n\n\"Count me out this time,\" Terry said. \"It was weird enough last night. Let me take a shower and then I'm going to go get some breakfast.\"\n\nShe got up out of bed.\n\n\"Okay,\" Robin said. \"What time did you say it was?\"\n\n\"Seven-thirty three now,\" Terry said.\n\n\"I'm supposed to meet your father for breakfast in the lobby at eight,\" Robin said. \"Maybe you can tell him I'm going to be a little late.\"\n\n\"Daddy?\" Terry squeaked. \"Daddy's here? In the hotel?\"\n\n\"Mm-hmm,\" Robin acknowledged with a smile. \"We had a nice time last night. Or the night before last, I guess.\"\n\n\"Really?\" I asked. I was delighted.\n\n\"Really,\" Robin said. \"Do you know what cunnilingus is? I hadn't done that in - I don't know, probably before Wally.\"\n\n\"Yeah, we know what it is,\" I answered witha smile.\n\n\"No we don't,\" Terry answered.\n\n\"Yeah, you do,\" I said.\n\n\"No I don't,\" Terry told me.\n\n\"Maybe not by name,\" I said, \"but...\"\n\nI looked down her body and wiggled my tongue at her. I looked back up to see her blushing fiercely.\n\n\"Anyway,\" Robin continued, \"he was waiting up for me when Jane drove me home last weekend. I was ready for a big fight, but he told me that he'd seen the whole show, and that he remembered seeing that look on my face before, earlier in our marriage, and that he'd give anything to see it again.\n\n\"What look?\" Terry asked.\n\n\"The look on my face when your boyfriend pulled that little dildo trick,\" Robin smiled. \"And the look when I finally got to, um \u2014\"\n\n\"Do his head?\" Terry asked.\n\n\"Do his head,\" Robin acknowledged with a low laugh.\n\n\"You know, I can't believe I'm lying here listening to my mother talk about doing my boyfriend's head.\"\n\n\"I can't believe my daughter was dragging her boyfriend's cock up and down my slit last night before aiming it for him,\" Robin shot back.\n\nBut the two women were both smiling at each other.\n\n\"Speaking of your boyfriend's cock,\" I started. Terry pulled away the covers and looked at it.\n\n\"You're just insatiable, that's your problem,\" she said. \"Time for my shower.\"\n\n\"I think I'll go back to sleep 'til you're done showering,\" Robin said.\n\n\"If you do anything else, I'm lowering your quota even further,\" Terry said.\n\n\"What about me?\" I protested. \"What about this?\"\n\n\"Yeah, you better hope that doesn't go off on its own,\" she said, with a last look before she dropped the covers back in place. \"Mom used to get real upset when Wally or I made a mess. I wouldn't want you to have to clean it up by yourself.\"\n\nTerry took her shower, and Robin and I both watched Terry dress when she came back out \u2014 me with unalloyed lust, Robin with pride.\n\n\"So when should I tell him you'll be down?\" Terry asked with her hand on the doorknob.\n\n\"Depends,\" Robin said, with a quick look at me. \"How long do you think he'll last?\"\n\nTerry looked over at me, and back at her mother.\n\n\"I'll go ahead and order for you,\" she said with a grin. \"It should still be warm when you get there.\"",
        "She skipped out so fast that my pillow harmlessly hit the inside of the door. We could both hear her laughter as she went down the hall. That little minx! I'd gone for forty-five minutes straight with her the day before. After the foreplay. And before the afterplay. Still be warm, hah!\n\n\"So,\" Robin said. I looked down to see her turned on her side facing me. \"Time to fuck me, big guy.\"\n\nI sighed.\n\n\"I can't,\" I said.\n\n\"You didn't seem to have any problem last night,\" she protested, an edge in her voice.\n\n\"No, your daughter was right,\" I said. \"She told me yesterday that I wouldn't be able to just fuck you. She said I couldn't fuck anyone; I could only make love to them. But you know, I don't actually think that's true. I fucked Becca just fine. I think it's just Kennedy women I have a problem with.\"\n\nA tear formed in her eye and dropped off her face onto the pillow below.\n\n\"You know,\" she said, \"if I hadn't reunited with my long lost husband this weekend and you hadn't become engaged to my daughter, I could probably fall in love with you, too. But I did, and you did. So just fuck me, Kenny. Here. I'll make it easier.\"\n\nShe threw the covers off, and turned back onto her stomach. Bringing her knees up underneath her, she pushed her ass up into the air. Grinning, I got behind her and took my position. I reached out with my hand, petting her gorgeous backside as I slowly traced my fingers down toward her pussy.\n\n\"Kenny,\" she said with exasperation. \"What are you doing?\"\n\n\"Uh, foreplay?\" \n\n\"Is there foreplay at the MILF Show?\"\n\n\"Uh, no,\" I admitted. \"But I wanted to make sure you were, uh, wet.\"\n\n\"Honey, I've been wet since I woke up in bed this morning with my daughter and her boyfriend. Now shut up and get fucking.\"\n\nAlec was right. My new motto: when one of the Goddesses Kennedy gives you an order, don't keep asking stupid questions.\n\nChapter 9\n\nThe final group on Saturday afternoon was the 6-9 division, and Robin and I were both captivated by one of the contestants. Angela Pritchett was a little firecracker. All of the women in that group had great bodies, but most of them were using the unoriginal bikini. Angela, though, had on business attire, albeit very short business attire. And she sold the whole thing \u2014 the woman at her desk, surprised by the mail clerk, the striptease, the blowjob, and the cowgirl. What made the cowgirl particularly effective was that she kept her high heels on. Nothing in the rules against that, and a few other girls did it as well, but knowing that it was all part of Angela's businesswoman fantasy made it just that much better. As I watched her, with those spikes planted on either side of her handler's hips as she pumped herself up and down, I figured there was no way they couldn't give her the prize. It's nice to be right once in a while.\n\n\"So you want to get together later tonight?\" I asked Robin as we finished collecting our stuff.\n\n\"Why?\" she smiled. \"Is there something we haven't covered?\"\n\n\"Last minute strategy?\" I shrugged. \"Tactics?\"\n\n\"Thanks, general,\" she said, \"but I think we're as ready as we're going to be. I'll just see you tomorrow.\"\n\n\"Sure,\" I said. \"I understand.\"\n\n\"Good,\" she said. \"Have fun. Have faith.\"\n\nI didn't understand, though. Not really. Robin had been so gung-ho up until this point. We'd gotten together every weekend since the state show. The first one, of course, was my double-Kennedy combo weekend. But the second weekend was just me and Robin, with the \"Do Not Disturb\" sign hanging on the outside of the hotel room door from 7 o'clock on Friday evening until noon on Sunday. By the time we were done, we were comfortable with every sexual position and combination we could think of. The interstate competition was the following weekend, and there was no telling what we were going to be asked to do.\n\nAnd, in fact, we got asked to do stuff we hadn't thought of. I couldn't believe how crude and nasty that show was. It was like it was being run by a whole different group. These guys apparently enjoyed hearing women grunt when they had sex, enjoyed seeing their hair pulled, enjoyed watching them humiliate themselves by having their hands tied behind their back while they duck-walked across the stage blindfolded to try to find their handler's cock with their mouth.\n\nThe good news was: We didn't have to do any of it! I hadn't realized that there was some sort of MILF network. They apparently had little MILF chat rooms and everything. The network started humming right after Robin lost the Illinois show. Robin forwarded me an e-mail that alleged that Connie Templeton had been sleeping with the head judge. Another MILF chimed in to say she'd seen them together in Evanston two weeks before the show. Well, that was all the proof these girls \u2014 sorry, women \u2014 needed. By the time we got to the interstate show, the MILF collective had decided that an injustice needed to be avenged, and none of the other women eligible for Robin's division showed up to contest her right to a ticket to Las Vegas.\n\nIn horse racing, they have something called a walkover. The horse gets saddled, gets a rider, and walks over the finish line. The race is over. The MILF Show equivalent? Robin sedately took off her clothes (she would have hung them up if they'd provided hangers), took my cock in her mouth, and let me put my cock in her pussy. The 18-and-over division was done. The judges were furious, but there was nothing they could do. We were headed for Vegas.\n\nWe'd spent the remaining weekends before Thanksgiving working on our compulsory and freestyle routines. We got the cowgirl down pretty good, obviously, but our freestyle routine never really seemed to click. At least, not the way that Becca's had. All in all, though, I left Handley on the Wednesday before Thanksgiving thinking that if we reached the finals, we stood a fair chance \u2014 maybe not a great chance, but a fair chance \u2014 of making some sort of MILF Show history. Yeah, yeah, I know. What history? It's only been around for four years.\n\nBy that point, I was really starting to enjoy the college experience. I was doing well in all my classes now. My new English instructor turned out to really be a good teacher, as a matter of fact. And I'd reached a sort of truce with the Chipster. Of course, the fact that I was away every weekend probably helped. But I think that after the MILF tape, and Becca's appearance, and Terry's appearance, he developed a sort of grudging respect for me. For my part, I developed a sort of grudging tolerance.\n\n\"So, dude,\" he asked as I hoisted my bag onto my shoulder on Wednesday afternoon, \"headed home?\"\n\nHandley's last football game of the year was on the following Saturday, so Chip was stuck in the dorms.\n\n\"Yeah,\" I told him, \"at least for the first part. Then I'm off to Las Vegas.\"\n\n\"Vegas?\" he brightened up.\n\n\"Yeah,\" I shook my head, \"another one of those damn MILF shows.\"\n\n\"Again?\" he seemed not to feel real sorry for me. \"You got another bi \u2014 er, another MILF?\n\n\"Yeah.\" \n\n\"So what does, uh, the goddess think about it?\"\n\n\"Oh, she's fine with it. She's very supportive. Actually, that's kind of how we met. It's her mother.\"\n\n\"Fuck me,\" his eyes glazed over.\n\n\"I keep telling you, that's not gonna happen,\" I laughed as I closed the door behind me.\n\nRobin's life had gotten better, too, in the last few weeks. In addition to the eighty-five grand she'd brought home from the state show, some dividends had finally started to trickle in from her husband's underperforming investment. She'd assured me, though, in person and by e-mail, that the money wouldn't affect her performance. Now, she claimed, what she really wanted was Connie Templeton's ass.\n\nBut when I got to Vegas, Robin seemed a little distracted (Mom stayed home this time. Terry and Allen were both there, but I hadn't yet seen them). She got through the Saturday session easily enough, fueled in part by lust \u2014 hell, I was hot for her, too, in that outfit \u2014 and in part by the sheer joy of performing. But afterwards it was as if the expenditure of all that energy had just sapped her.\n\nI found myself glad that, unlike last year, the final session wouldn't be held on Saturday evening. The powers-that-be in Las Vegas had offered the show's organizers extra cash to get them to switch the finals to Sunday afternoon, in order to give the show's patrons a free evening to lose money at the casinos. That bumped the prize money up even more, and that led to a series of subsidiary prizes of significant amounts of money. As a result, none of the MILFs had objected when the format had been changed.\n\nAnd, I figured, the delay couldn't help but work to Robin's advantage. Becca had carried a lot of energy over to her evening performance. Robin, on the other hand, would have been sleepwalking through it. I remember hoping that she got a good night's sleep.\n\nI got to the arena the next morning around eleven-thirty. Robin was already there, greeting her \"fans.\" The five finalists were required to put in an hour signing autographs and the like, but that didn't start until noon. Here was Robin, a half hour early, gaily chatting with these complete strangers who'd watched her blow and fuck a nineteen-year-old the day before. She kept on signing and chatting as Connie, Angela, and the rest showed up to join her.\n\n\"That was fun,\" she told me during the half-hour break before the show was supposed to start.\n\nI chuckled.\n\n\"What?\" she asked.\n\n\"You,\" I said. \"Having fun. I was just remembering the woman who threw the show application back at me at the beginning of the summer.\"\n\n\"I remember her,\" Robin said. \"A little uptight, wasn't she?\"\n\n\"Maybe a little,\" I said.\n\n\"Well, thank God she's not around here, huh?\" Robin said as we both laughed. \"She had a lot of faith, but she never seemed to have a lot of fun.\"\n\nAt one o'clock, the five finalists paraded out into the arena. They'd drawn lots for the order: Connie was third; Angela was fourth; and Robin would go last. That was a mixed blessing. Robin would know what she had to beat, but if somebody turned in a really stunning performance, her confidence might wane pretty quickly.\n\nI wasn't really worried about the first two women, though. They hadn't been that impressive yesterday, and they weren't any better in today's striptease. Connie, in her bikini, did her usually effective bump and grind, certainly enough to get the audience hooting. Angela followed with her businesswoman's special, and they appreciated that as well.\n\nNeither performance bothered Robin in the least; whatever she'd used to recharge her batteries had worked perfectly. Her striptease had the same effect on the audience as it had the day before, and the change she made to the ending was brilliant. Unable to transition directly into cocksucking, she simply leaned backward on the pedestal, spread her feet about two feet apart, and stretched her hands out toward me with a look of pure want. It was all I could do not to run forward. The guys in the audience were probably having the same problem.\n\nThe striptease, though, was only a small part of the second day's score. It was really only there as a filler, to stretch the finals out long enough to justify making people pay another admission fee. The winner would be decided based on the freestyle. And watching Connie and Angela in the freestyle portion shook even my confidence. Connie had clearly studied everything that Becca had done the year before, and repeated it with just enough variation that she could call it her own. It had worked for Becca, and the audience ate it up this year as well.\n\nAngela's was even better, at least in my view. She was young, she was flexible, and it quickly became clear that nobody wanted to win this more than Angela did. That was the first time I'd ever seen anyone even try anal sex at a MILF Show, let alone pull it off in the middle of a routine. Watching a woman suck a guy's dick after he's had it in her ass didn't really appeal to me, but I was pretty clearly in a very small minority. And Angela was so cute, and apparently so clean, that the potential grossness of it never entered anyone's mind. When she was finished, she got the second standing ovation I'd ever seen. Whether the judges liked it better than Connie's, though, was an open question.\n\nThe applause was beginning to die down, and I was taking off my smock, when Robin whispered to me.\n\n\"I can't win this, can I?\"\n\nThe words \"have fun, have faith\" were on my tongue, competing for space with \"of course you can, Robin.\" But I looked over at her eyes \u2014 smiling all the while, of course; we were up next \u2014 and decided that both answers were a little too facile.\n\n\"Honestly?\" I said. \"No, probably not. But we can still give it our \u2014\"\n\n\"Kenny, shut up,\" she said. \"I might not even beat Connie, huh?\"\n\n\"Maybe not,\" I didn't really want to agree to that. I knew Connie's routine had been pretty damn good, though. \"Why are you \u2014\"\n\nThey began to announce our names for the final freestyle performance.\n\n\"Kenny, my husband wants me to be here,\" she whispered through her smile. \"My daughter, your fianc\u00e9e, wants you to be here. And we'll never be able to do this again.\"\n\n\"Yeah?\" I agreed. Your point, lady? They'd finished the introductions and the audience was starting to wonder when we were going to begin. I was kind of wondering that myself. Robin stepped in front of me and put her arms around my neck. Her eyes sparkled like they never had before. I'd never seen that particular smile before, either.\n\n\"Let's forget the faith and just have fun, \" she said. \"I want you to make love to me, Kenny Winston.\"\n\nMy knees almost buckled.\n\nI picked her up and laid her on the pedestal. I slowly pushed into her, everything else obliterated from my mind. I wanted to make love to Robin Kennedy. I wanted her to feel special, to be able to pay her back for everything that, I now realized, she'd given me over the summer and fall. Her utter faith in me. Her incredible commitment and dedication. Her willingness to find laughter in everything we did. Her daughter. I kissed her, on the lips, on the face, on the neck, on the shoulders, and I began the delicious process of bringing this wonderful woman to orgasm.\n\n\"Oh, yes, Kenny,\" she whispered in between tonguing and biting my ear. \"Oh, Kenny, please. Kenny!\"\n\nIt would have been really cheesy for her to dig her fingernails into my back. It would have felt wrong. But it didn't feel wrong to have her press the tips of her fingers into my shoulder blades, nor did it feel wrong to have her use them to tell me exactly how fast she wanted me to go, and exactly how hard she wanted me to penetrate her.\n\nI couldn't believe, afterward, that Robin had still been able to keep track of the time. But I watched the tape, with Terry actually. With forty seconds to go, well on her way to her own climax, Robin squeezed my cock with muscles she'd never let me know she had before.\n\n\"Oh, God, Robin,\" I grunted. \"Unnnnnhhhh.\"\n\n\"Yesssss,\" she whispered, clinging to me as her body shook. \"Kenny, yessss.\"\n\nI let go deep inside of her, and she let go at the same moment.\n\nThe buzzer went off, and I suddenly blinked open my eyes. I looked down to see Robin smiling back up at me. I could hear us both breathing in a completely silent arena.\n\n\"Thank you, Kenny,\" she said.\n\n\"Thank you, Robin,\" I answered.\n\nThe applause began slowly and then started to spread. I pulled out and looked around, watching one section of fans after another rise to their feet for the second time that afternoon. I was a little stunned. No changes of position, no degree of difficulty, no money shot. With a big grin, I pulled Robin up after me, and we basked in the ovation. Evidently these people were just as big a bunch of emotional saps as the two of us were.\n\nOf course, that was only the audience. The judges, I was sure, had much different standards. When the applause died down, they pulled the stand out with all the trophies. Becca came out with the judges, her face flushed, her eyes teary.\n\nRobin and I waited in line, holding hands, as the announcements began. They started at the back, giving out fifth place to the woman in the 12-15 division. Robin had been right; the other woman probably would have been better. Fourth place, and a prize for \"Best Blowjob,\" went to the redhead from the 15-18 division. Well, I thought, good for Robin. Nobody in her division had ever finished higher than fourth. I turned to whisper congratulations to her, and she put a finger to her mouth as she tried to suppress her smile.\n\n\"Third place,\" the announcer intoned, \"and the Las Vegas Showgirl Prize for the Best Body, worth an additional one hundred thousand dollars, is awarded to MILF Illinois, Connie Templeton.\"\n\nAs a clearly disgusted Connie got her check and her prize from a clearly delighted Becca, Robin reached out her other hand to Angela. I glanced over to see both women smiling, practically bouncing up and down on their toes.\n\n\"Second place,\" the announcement blared over the loudspeaker, \"comes with an additional two hundred and fifty thousand dollar prize for the Best of Vegas award, given to the finalist who best exemplifies the spirit of Las Vegas, in this case to a woman who visited the Cupid's Paradise Chapel last night to renew her wedding vows. Ladies and gentleman \u2014\"\n\nI was staring at Robin in shock. She was looking at Angela, who knew perfectly well that she hadn't visited the Cupid's Paradise Chapel last night, and who was slowly realizing that she was the new MILF America.\n\n\"\u2014Robin Kennedy.\"\n\nRobin and Angela both squealed and fell into each other's arms. They hugged all the way through the next announcement, declaring Angela the winner. Then Angela turned and leaped into the arms of her handler.\n\nRobin turned and ran right past me, out of the arena. Right to the same spot that Becca had, and where Robin now jumped into Allen's waiting arms. This time, though, I got an even exchange. My own blonde goddess had left Allen's side and was running toward me. I opened my arms and caught her, swinging her around as she began kissing my lips and face. Finally, I just hugged her close.\n\nI could see Becca out of the corner of my eye, fumbling with the trophies and checks as she tried to figure out whether Angela or Robin would be done celebrating first so that she could make the appropriate presentation. But I was looking at Robin, and she'd turned around so that she was looking back at me as she hugged her husband.\n\n\"I love you,\" she mouthed silently when she saw me look.\n\n\"I love you, too,\" I mouthed back.\n\nShe had Allen, I had Terry.\n\nBut I'd always have my MILF.\n\nAnd as Robin pointed out during our dance together at the wedding reception, while Terry was dancing with Allen, she'd always have her MILF.\n\n\"I'm sorry?\" I asked.\n\n\"Mother-In-Law Fucker,\" she said. \"I wonder if there's a show I can enter you in.\"\n\nI still love that woman. "
    ],
    "authorname": "MarshAlien",
    "tags": [
        "milf",
        "friend's mom",
        "girlfriend's mom",
        "humor"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/show-moms-ch-08-09"
}