{
    "title": "Country Roads",
    "pages": [
        "\"Mornin' Jean!\"\n\n\"Eric. Hey there. How are you?\"\n\n\"Good. I just wanted to see if you needed anything.\"\n\n\"No, I'm fine,\" she told him.\n\nHe took her at her word, but he knew it wasn't true. He'd worked for her the last two years and could tell something was wrong. She was a private person and too proud to ever complain, but he was sure she wasn't doing well.\n\n\"Okay. Then I'll get back to it.\"\n\nShe smiled the best she could and as her ranch hand turned around she said, \"Eric? Can I talk to you for a minute?\"\n\nHe stopped, turned back around, then said, \"Yes, ma'am. Of course.\"\n\n\"Have a seat and I'll get us some coffee.\"\n\nHe didn't tell her he'd had two cups already three hours ago around 4am as she made some more. He just sat down and waited until she was ready to talk. \n\nJean Thompson was 70 years old and had run the ranch, which was also a farm, by herself since her husband died five years ago. She struggled to keep up, but a lifetime of hard work and dedication kept her going until she just couldn't handle it all alone anymore. \n\nAt 67, she mentioned to a friend at church one Sunday morning that she was going to have to look for help or sell the farm. She wasn't ready to part with the land or the animals she'd known all of her adult life, so hiring someone was her only real choice. \n\nShe and her late husband, Ted, had only one child, a girl named Jordan, who'd left home when she was 18 to go to college. \n\nJordan was a quiet, sweet girl but never content with life on a farm. She attended West Virginia University in Morgantown which was about 80 miles away from Wheeling, the closest city to where she'd grown up in West Virginia. Jordan was a beautiful girl, and it was no surprise that she had quite a few male 'friends' while at WVU, but it came as quite a shock when she told her mom and dad she'd fallen in love during her junior year.\n\nIt wasn't the falling in love part that did the shocking. It was the 'with whom' part. And the 'with whom' was a 40-year old man named Joseph Conway who also happened to be financially well off and extremely so. Jordan's disapproving father was mostly silent on the matter, but her outspoken mother was livid and tore into her daughter for making the biggest mistake of her life.\n\nBut there was no talking to their strong-willed 'child'. Jordan's mind was made up, and later that summer, she married this Conway fellow, as Jean stilled called him, absent either of her parents at the lavish wedding held in Aspen, Colorado, where he owned three ski resorts, a golf course, and several other properties. \n\nThe relationship had been strained ever since, and Eric had never met her or even seen her. His only physical clue she even existed was an old photograph Jean kept in her study, and the one time he saw it he was taken aback by her beauty. But she'd been maybe 20 years old then, and he assumed that she was now, some 20 years later, a middle-aged woman on whom time had taken its toll. But as the only hand on the entire ranch, he didn't have time to stand around speculating about things that didn't concern him.\n\nHe'd busted his hump for Jean every day since she took him on not long after he left the Army. Eric had been an Army officer, a Ranger, and also a West Point graduate. He'd been an infantry officer and loved what he did. He'd also been married since the day he was commissioned a second lieutenant, and when he learned that his wife had been killed in a car accident while he was in Afghanistan, the Army, and everything else, stopped being fun.\n\nShe'd been his high school sweetheart and the love of his life. Eric came home for her funeral then returned to finish out his tour in the northwest corner of the god-forsaken hell-hole of a country then returned to the US. \n\nThe day his five-year commitment was up, he left active duty and returned home to Wheeling, West Virginia, where he was born and raised and where he lettered in three sports in high school. He lived with his parents, but he was no longer the same confident, chipper man he'd been and spent the first couple of months drowning his sorrows in a bottle. But after coming home dead drunk one too many times, his father told him in no uncertain terms that he'd had enough.\n\n\"Your mother and I love you, son, and we can't begin to imagine what it was like losing the woman you loved. But this can't go on, and we won't enable you. You've had time to grieve, and while it may take years to get over it, your behavior is unacceptable. So. You either knock it off or you get out.\"\n\nNot one to mince words, his father had nothing more to say and turned away, leaving his son with an ultimatum and another hangover. Once it wore off, Eric got up himself up, showered, got dressed, and started looking for work.\n\nMoney wasn't an issue, at least not then. He'd left active duty with a very nice nest egg and a relatively new truck and even had some furniture in storage. But he knew his dad was right. This was pathetic. It was...conduct unbecoming. And he'd had enough of wallowing around in self pity. He just needed a firm kick in the ass to serve as a wake up call.\n\nGetting hired by Jean was truly serendipitous as his mom came home from church the following week and told her son she knew of a job.\n\n\"It's hard work. It's farm work. But it pays well, and you'll be too busy to drink.\"\n\nIntrigued, Eric spoke with the woman who'd talked to his mom and that, in turn, led to a meeting with Mrs. Jean Thompson the next day. She only asked him three or four questions then hired him on the spot. \n\nHe hadn't had a drink since and had never once looked back. He was up at 4 o'clock seven days a week and worked until long after sundown as he cared for the dairy cows, the beef cattle, the goats, and the three horses that still remained. Jean still took care of her dog and a handful of chickens that laid a couple of dozen eggs each day.\n\nJean poured them both a cup of coffee then set Eric's down before taking a seat herself.\n\n\"I want to run something by you.\"\n\n\"Sure,\" he said before taking a sip.\n\n\"I could tell you know.\"\n\n\"Ma'am?\"\n\nShe looked at him and was even more sure he knew.\n\n\"You don't know exactly what's wrong, but you know something is, and I want to talk to you about it.\"\n\nEric took another sip as Jean took a first and waited for her to speak.\n\n\"I have lung cancer,\" she announced in her terse manner. \"And don't go telling me you're sorry or any of that nonsense.\"\n\nEric didn't. He just kept listening even though a part of him did indeed feel bad for her.\n\n\"I've got maybe a year if I'm lucky. And this farm's been my entire life.\"\n\nHe still didn't say a word. He just watched her and kept waiting.\n\n\"As you know, my daughter and I aren't close. Hell, we've only talked 3-4 time in the last ten years or so, and that's only because she...\"\n\nEric thought he saw his boss tearing up but wasn't sure as Jean finished her sentence.\n\n\"She has a daughter, and I've made it a point to call her as often as I can. With this FaceTime thing, I've at least been able to get to know her a little.\"\n\nEric nodded understandingly but stayed quiet.\n\nJean stared at him for a moment then said, \"Anyway, I want you to have the farm.\"\n\n\"Ma'am?\" he finally said, too shocked to be sure he heard her correctly.\n\n\"My daughter married a rich man, and she has more money than Job, and frankly, she has no interest in this place. And truth be told, you've been more like a son than she's been a daughter, and I can tell you love this place as much as I do.\"\n\nThat was true, but there was no reason to say it. Jean knew that's how he felt, and she was right.\n\n\"So I'm going to see my lawyer tomorrow, and I'm changing my will.\"\n\nShe paused for a brief moment then tried to smile.\n\n\"What I'm trying to say, Eric, is this place, and everything on it, plus whatever I have, is yours. If you want it.\"\n\nWhen he was sure she was through talking, Eric set his cup down, sat up straight then said, \"That's unbelievably generous of you, Jean. But I can't do that.\"\n\n\"What do you mean you can't?\" she nearly growled.\n\n\"I mean it's not right. It's not my land. And strained or not this land should stay in the family and go to your daughter.\"\n\n\"One of the things that's most impressed me about you, Eric, is your integrity. You're honest to a fault, hard working to a degree that even impresses the likes of me, and you say what you think.\"\n\nJean almost smiled as she said, \"Just like me.\"\n\nEric could tell she had more to say so, again, he waited.\n\n\"I wasn't really asking you. Okay, I sort of did, but that aside, this is what's going to happen. I AM changing my will, and I AM leaving the farm to you. What you do with it when I'm dead and gone will be your business, but the leaving it to you part isn't up for debate. I'm hoping you won't sell it, but I'll be taking the big dirt nap and won't know, so that'll be your call. Just promise me that if you do sell it, it'll go to someone who'll love the land like we do.\"\n\nHer only request seemed more than reasonable, and because he knew she'd made up her mind, he agreed and promised he'd do as she asked.\n\n\"Good. Then it's settled.\"\n\nJean was staring at him and could tell he had something to say and told him to say it.\n\n\"Is the kind of cancer you have something you can fight? Chemo? Surgery? Radiation?\"\n\n\"I'm not doing any of that,\" Jean said immediately with a shake of her head. \"I've seen too many people too sick to enjoy what time they had left. Not me. I'm gonna keep on keeping on until I can't, and when that happens, well, it'll happen.\"\n\nAs gruff as Jean could be, Eric loved the weather-worn woman like his own grandmother. And as he sat there looking at her, he realized that he was feeling something he hadn't felt since his wife was alive\u2014compassion. And caring. \n\nHe was 28 years old now and been alone for nearly four years. In all that time he'd never so much as gone on a date with another woman. But as these feelings welled up inside of him, he couldn't help but wonder if this was maybe nature's way of telling him it was time. \n\nBut he laughed to himself when he thought about trying to meet someone as he put in an average of 80-85 hours a week. Jean had indeed paid him well, and other than the minimum he needed to spend to live on, everything else had gone into the bank. He hadn't even looked at his accounts in the last six months, but he knew the money was piling up.\n\nThat made him laugh again as he thought about the old song that went, \"Another Saturday night and I ain't got nobody, I got some money 'cause I just got paid.\"\n\nHe had money. He just didn't have...nobody.\n\n\"You okay?\" he heard Jean asked as he realized he'd been drifting.\n\n\"Sorry. Yeah, I'm okay. And if there's ever anything I can do...\"\n\n\"I'll let you know,\" his grizzled boss said, another near-smile forming on her lips.\n\n\"I've got cattle to feed, so I need to get at it,\" Eric said as he looked to make sure Jean was done.\n\nShe nodded, so he stood up, and as he did, she softened a little and actually smiled.\n\n\"You're a good man, Eric Harmon. If only my daughter could have met someone more like you 20 years ago.\"\n\nEric smiled back, pulled on his ball cap, tipped it, then said, \"Thank you, ma'am,\" without mentioning he'd have been eight years old.\n\nShe'd told him to stop calling her 'ma'am' more times than she could remember, but Jean secretly loved it, and in spite of her age and lack of interest in men, Eric was so good looking it still caught her by surprise sometimes.\n\n\"You're welcome, Josh,\" she told him with a wink.\n\nEric laughed at the 'Josh' thing as she'd called him that quite a few times. Jean had once told him that he looked like 'that Josh Duhammer fella on TV' which made him laugh then, too, because the actor's name was Josh Duhamel, a ruggedly-handsome, much-younger man Jean confessed to having a crush on back when her husband was still alive.\n\n\"He's my cheat,\" she'd said with a laugh after mentioning seeing him on TV. \"You know. The one person your spouse would let you cheat on with if you could.\"\n\nShe'd laughed a second time then said, \"If, of course, Josh was blind. And desperate.\"\n\nShe told him who her husband's crush had been, too, and he'd promised never to reveal either of them to anyone. But it had also been a sad moment when she asked Eric who his was with a little laugh. \n\nThe question caught him so off guard that he'd teared up for the first time in nearly two years, and making matters worse, Jean felt terrible for asking and dredging up such a painful memory. It was the only time he'd ever showed any real emotion in front of her, and it still embarrassed him that he had.\n\nBut now it was all in good fun, and Eric laughed at the compliment then thanked her for the coffee and went back to work. He hit it hard until around 10pm that night when he retired to the little bunkhouse he lived in that was just a few feet away from Jean's house.\n\nSince he moved in 'next door' she'd had Wi-Fi installed and even let Eric show her how to set up and use a computer. She, in turn, had a WiFi 'booster' set up near the window nearest to the bunkhouse, and if he sat near the wall closest to the house, he could pick up the signal. But there were precious few times he even bothered, but every now and then he'd stream something on his iPad via Netflix or Amazon Prime which was more than enough for his needs.\n\nAnd this was one of those nights. He was dog tired like he always was, but these thoughts about maybe being ready to be with someone again had plagued him all day. He'd never had a 'cheat girl' but there was an actress he thought was sexy as hell. It had never mattered to him how many other people agreed with him, but then he'd never told anyone, not even his wife, how hot this woman was to him.\n\nSo as he sat down and brought up 'Prime' on his tablet, he found himself 'stirring' as he thought about her. The show was called The Good Wife and the actress was Julianna Margulies. She played a lawyer whose husband had been the Attorney General of the State of New York. She'd given up her practice to be a wife and mother but when he was arrested, charged, and sent to prison, she'd gone back to work to provide for their two kids.\n\nShe wasn't gorgeous in the classical sense but Eric found her...alluring. And appealing. And sexy. And as he sat there watching the stirring turned something soft and limp into something...very hard; something he'd rarely experienced since losing his wife. The um...growing issue...became so...big...that he decided to take the iPad to the little bedroom and continue the fantasy.\n\nBut as luck would have it, the WiFi signal wasn't available, and he was unable to keep watching. Eric laughed as he turned the tablet off then got ready to go to bed as the swelling slowly subsided on its own along with these new thoughts that had been planted in his brain.\n\nThe next month flew by the way every month did as days blurred into each other like a never-ending episode of Groundhog Day. But the more time Eric spent on the land, the more he loved it and the more grateful he felt to Jean for leaving it to him. \n\nHe still wasn't comfortable with the idea, but it was now a done deal and out of his hands. Yes, he could refuse to accept it, but that wasn't going to happen because it would go through probate and end up in the hands of someone who didn't love it, so he did his best to make peace with what seemed inevitable. Jean hadn't shown any signs of getting weaker or sicker, so for now, life went on as it had since the first day he showed up to learn the ropes.\n\n*****\n\nSix weeks later. Aspen, Colorado.\n\n\"Joseph? What's going on?\" she asked as he drove them to their favorite restaurant.\n\n\"Oh. Nothing, sweetheart. Everything's fine,\" her husband replied in a very unconvincing way.\n\n\"You know you can tell me anything, right?\" his much-younger wife said.\n\nBut her husband didn't seem to even hear her let alone respond to what she'd just said. Rather than press for more information, she sat there quietly hoping he might share whatever was bothering him so much with her. She wasn't sure how much time had elapsed, but it was at least several minutes before he finally spoke.\n\nHe turned onto the highway, got up to speed then said, without looking at her, \"Things are...a little...rough. Financially.\"\n\nRelieved that he was opening up, she told him as supportively as she could, \"Whatever it is, we'll get through it. Together. Like we always do.\"\n\nWhen he again didn't say anything, her worries came back just as he reached over to take her hand. The worries melted when she put her hand in his, and when he glanced over at her and smiled she started to tell him that she loved him. But that was the last thing she could remember.\n\n\"Mrs. Conway? Can you hear me?\"\n\nJordan Conway felt like she was in a tunnel where someone at the other end was trying to get her attention.\n\n\"Mrs. Conway? I'm Doctor Hadley. You've been in a serious accident, and we're going to take good care of you.\"\n\nShe tried to answer but couldn't. And she had no idea why she was being told there'd been an accident, but she also had no idea where she was. Her brain told her to thank the doctor, but her next memory was waking up in a bed in the ICU of a local hospital.\n\nA nurse was with her when she opened her eyes and immediately asked Jordan if she was in any pain.\n\n\"I...I don't know,\" the groggy, post-surgery patient replied, her voice raspy and dry.\n\nShe blinked several times then asked, \"Where am I?\"\n\n\"You're at Aspen Valley Hospital in intensive care. You were in a car accident and you're recovering.\"\n\nThe nurse then asked her again if she was in any pain.\n\n\"I...I don't know,\" Jordan said again. \"Is my husband...is Joseph...okay?\"\n\n\"The doctor will be right in to see you,\" the nurse told her as she squeezed Jordan's hand before leaving without answering her question.\n\nBut two minutes later she learned that she'd suffered several broken ribs and had her spleen removed along with having had some internal bleeding. But the only thing she remembered was the kind, young doctor saying, \"I'm very sorry. Your husband didn't survive.\"\n\nDazed and confused, Jordan went into shock and was out for most of the day before coming to again. When she did, her husband's attorney was there along with someone else from the law firm where he was a named partner.\n\n\"Jordan. You're awake,\" the older man said when she finally looked at him.\n\n\"Stan.\"\n\nThat was the only word she got out before recalling what she'd been told.\n\n\"Is...is it true? About...Joseph?\"\n\nStanley Wagner, their tax attorney and friend for as long as Jordan could remember quietly told her that it was.\n\n\"He didn't suffer. Joseph died instantly.\"\n\nA few moments later, Stan carefully asked her if she understood.\n\nJordan didn't say anything as tears fell from her eyes, but she did nod.\n\nHer friend waited for a few more moments then asked if she felt up to talking for a bit.\n\nStill too numb to think, Jordan absentmindedly said, \"Okay.\"\n\nAs before, she heard every word, but the meaning didn't sink in until much later as the death of her husband consumed nearly all of her brain's 'RAM' which it used to process information.\n\n\"I...Joseph asked me not to discuss this with you,\" the attorney began. \"Not when he was...alive.\"\n\nJordan was looking at him, and he assumed she was listening so he continued.\n\n\"During the last year, Joseph made some...investments.\"\n\n\"Investments?\" Jordan said, not aware that she had.\n\n\"Yes. Rather...risky investments.\"\n\n\"I see,\" Jordan replied but not understanding.\n\n\"In a word, the ski lodges...both of them, as well as the golf course...are...in foreclosure.\"\n\nHe hesitated then said, \"As is your home and your other holdings.\"\n\n\"Oh,\" the younger woman replied without emotion.",
        "\"In a word, I believe that filing for bankruptcy is the only remaining viable option.\"\n\nIt was three days later before Jordan was well enough to go home and sit down with Stan again and go over everything. And when she did it was obvious that the situation was perilous. She didn't keep track of the business or the money. Joseph had always done that and he'd always been extremely generous with his younger, beautiful wife.\n\nSo Jordan had no reason to think there was anything wrong let along that they were in such dire financial straights. But an estate that had been worth just over $5 million less than a year ago was now completely upside down and under water. By filing for bankruptcy Jordan could avoid jail time, a thought that scared her so badly she began shaking. But as co-owner of everything she and Joseph had shared, she was now liable for the massive debt that had accumulated in the wake of her late husband's financial recklessness.\n\n\"In a word, Joseph...bet the farm,\" Stan told her as he tried to sum up the situation.\n\n\"The farm. How ironic,\" Jordan mumbled as she thought about the place where she'd grown up, how she'd become estranged from her parents, and then, for the first time, wondered what she would do next.\n\n\"Mom? Are you crying?\" she heard her ten-year old daughter, Mia, ask, who'd been listening but not understanding anything that was said.\n\n\"No. I'm not crying, honey,\" Jordan told her as bravely as she could.\n\n\"Are you sad about Daddy? It's okay if you are because I'm sad, too.\"\n\nJordan held her daughter knowing that 'sad' was an understatement. Mia had been crying since being told...by her nanny...that her father was dead and that her mother was in the hospital. \n\nAnd now Jordan would have to tell her daughter that the nanny Mia loved and had known all her life would have to be let go at the end of the week. But how could she tell her that they were also losing their home and everything they had? And when she did, what would she say when Mia asked where they would live?\n\nAs those thoughts and her own grief consumed her, Jordan's eyes filled with tears, and as she continued holding her daughter, she cried for the first time since the accident. Worst of all, when she began crying, her daughter did, too, and all Jordan could do was hold her and tell her they'd be okay.\n\nBut she knew that for the foreseeable future, things wouldn't be okay, and she wondered if they ever would again.\n\nThe Conway family's attorney was able to hold off foreclosure on the house for 30 days base on humanitarian needs. This gave Jordan time to recover physically and to get a better handle on how bad things actually were. But with each new briefing from her lawyer, the news only got worse.\n\nJordan tried to pay attention, but her mind was incapable of focusing. Her husband's memorial service was over and done, and of all the people who attended, many promised they would be available to help in any way possible. But her attorney had tried to get some fo that help from the three people who'd been closest to the Conways, and somehow none of them were available to provide any.\n\nAdding insult to injury the attorney informer her that he would no longer be able to represent her or the estate as there was no money left to pay him. Out of the kindness of his heart and loyalty to her late husband, he agreed to handle the foreclosure and the bankruptcy, but once that was done, he would be done, too.\n\nWith just ten days left until she and her daughter would be removed from their home, Jordan found herself staring down the figurative barrel of a gun. And at the other end of this fictitious gun was her mother and the farm near Wheeling, West Virginia.\n\nThere was very little money left, and they were running low on food. They could legally stay there a few more days, but they would have no place to live in short order. The thought of having to call her mother and admit defeat was so untenable that Jordan had avoided even mentioning this until the thought of literally being on the street with her daughter became even more untenable.\n\nSo before her phone was turned off for lack of payment, Jordan finally picked it up and sat there staring at her mom's phone number. After what seemed like hours but was only a couple of minutes, she hit the 'call' button and waited.\n\n\"Jordan?\" she heard her mother say in that raspy voice. But it was somehow different although only subtly so.\n\n\"Hi, Mom.\"\n\n\"Is everything okay?\"\n\nJean knew it wasn't as she heard her daughter's voice hitch when she tried to talk.\n\n\"What's wrong, honey?\" \n\nJordan was too emotional to realize it had been nearly two decades since her mom had called her that as she tried to collect herself.\n\n\"It's...Joseph.\"\n\nThere was genuine concern in Jean's voice as she said, \"What about Joseph?\"\n\nJordan's voice cracked as she began explaining. Her mother let her go on for two or three minutes without interruption before her daughter stopped to catch her breath.\n\n\"You need to come home. Both of you.\"\n\n\"I...we can't,\" Jordan said, her voice racked with sobs.\n\n\"What do you mean you 'can't'?\"\n\n\"We can't even afford to get there,\" Jordan said, one word at a time as she continued heaving sobs.\n\n\"I'll buy plane tickets for you and Mia for whatever day you choose. Just let me know and you'll only need to get on the plane.\"\n\nHome. Jordan hadn't thought of West Virginia as 'home' since the day she left. In fact, just the thought of being there made her shiver as she remembered getting up at 4am to feed livestock, milk cows, gather eggs, and the endless maintenance and cleaning up the ubiquitous horse, cow, and goat...poo. Life was nothing but work from before sunup to well after sundown, and Jordan wanted nothing to do with that kind of life ever again.\n\nBut reality was now forcing her to come to grips with the fact that she had nowhere else to turn. Jordan Conway was now 41 years old, had a ten-year old daughter, no money, and no options. \n\nShe was still a very attractive woman, and if she had enough time, she felt very confident that she could find another husband, and perhaps one of means. But as much as she'd learned to love the finer things in life, the most pressing issue was survival, and in order for her and her daughter to survive, staying in Aspen, Colorado, wasn't an option.\n\nJordan asked her mom if they could arrive three days from then, and Jean told her she'd take care of the tickets then let her know the airline, flight number, and time of departure.\n\n\"Mom?\" Jordan said, now able to speak normally again.\n\nHer mother didn't say anything so Jordan said, \"Thank you.\"\n\n\"You and that beautiful daughter of yours just come back home. That'll be all the thanks I need.\"\n\n\"Okay,\" Jordan replied as tears, borne of frustration and gratitude, welled up in her eyes again.\n\nAs the call ended, Jordan again thought of the word 'home' and what her mom had just said. \"Come home.\" And for the first time in ages she thought of the song that was essentially synonymous with West Virginia\u2014Country Roads by John Denver.\n\nUnlike most West Virginians, Jordan had never liked the song, and over the years those feelings had only gotten stronger. But now, as she sat there, broken and alone, she searched her phone to find it.\n\nShe turned up the volume and listened as memories from long ago surfaced. Memories of her father and mother, friends from school, and life on the farm. By the time it reached the second stanza, Mia came in and asked what she was listening to.\n\nJordan motioned for her daughter to sit down next to her and said, \"Just listen, okay?\"\n\n\"Country roads, take me home, to the place, I belong, West Virginia. Mountain Momma, take me home, down country roads. I hear her voice in the mornin' out as she calls me, radio reminds me of my home far away.\"\n\nWhen it ended, Mia asked why she was listening to it and why her mom was crying.\n\n\"Because we're going home, sweetheart.\"\n\n\"But we are home, Mom.\"\n\nJordan pulled her daughter close, kissed the top of her head, then said, \"We're going to live with Nana.\"\n\n\"On the farm?\" her daughter asked, the excitement in her voice surprising her.\n\n\"Yes. Is that okay?\"\n\n\"We get to live with Nana?\"\n\n\"Well, yes. Until we can...\"\n\nMia threw her arms around her mother's neck and hugged and told her she loved her.\n\n\"I love you, too, honey,\" Jordan said, as the shock of her daughter's unexpected reaction hit her.\n\nAs Mia went back to her room, happier than her mother could remember, Jordan could only sit there and wonder why something so dreadful to her was a source of so much excitement for her little girl.\n\nIt didn't take long to figure it out, though. Mia's friends, much like hers, had all but abandoned her. Deep down, Jordan knew the friendships were superficial, just like her own friendships.\n\nAs she pondered those thoughts, she couldn't help but wonder how she'd ever let herself believe that money and status were more important than anything else. Yes, she'd loved her husband, but he, too, was a source of status; a status she could have never attained had she remained in Wheeling.\n\nFor the first time in her life, Jordan realized that status couldn't hold her or comfort her or solve her problems. And an even more painful observation hit her. She no longer even had status.\n\nWhen Jean hung up the phone, she sat there too shellshocked to speak. There was no-one else there to speak to even if she could, but she'd have been unable to do so had Eric been inside at the time.\n\nWhen he came in for dinner, she'd worked through the stunning revelations Jordan shared with her during the phone call, and for the first time since her diagnosis, Jean felt a glimmer of hope. \n\n\"I need you to do something for me in a couple of days,\" Jean began once Eric was washed up and ready to eat.\n\n\"Sure. What's going on?\"\n\n\"I'm not even sure where to begin, so I'll start with the phone call and go from there.\"\n\nAs he always did, Eric sat and listened, holding his questions until his boss was done talking then asked whatever questions were on his mind. But this time he didn't have any questions. He did, however, have an observation.\n\n\"You look happy.\"\n\nJean kind of snorted then said, \"Happy. Huh. I guess maybe I am.\"\n\n\"I don't know much about your daughter, but I do know you can't wait to see your granddaughter.\"\n\nJean laughed, and the laugh made her cough, a cough that was slowly getting worse.\n\n\"I was just thinking about how much I'm gonna spoil her, but she's had everything money can buy.\"\n\n\"Again, I don't know anything about the family, but perhaps the one thing she needs is your love.\"\n\nHe saw Jean's eyes get glassy again before she said, \"I'll give her all I've got for as long as I have left.\"\n\nA question finally arose in Eric's mind and he asked it immediately.\n\n\"Will your daughter and granddaughter be staying in the house with you?\"\n\nIt seemed obvious, but he knew the relationship between her and her daughter was strained, so it was at least possible she might be staying somewhere else. If she had the kind of money he'd been led to believe she had, she might even be buying a home somewhere nearby. He wondered because Jean hadn't told him that her daughter had lost everything.\n\n\"Yes. They'll be staying here,\" Jean said.\n\nEric could see the concern and asked if there was anything he should be concerned with.\n\nHis boss kind of smiled then said, \"No. That's my problem to deal with. You only need to pick her up and bring her home.\"\n\nEric raised on eyebrow as his instincts told him that wasn't everything.\n\n\"And you'll be her boss.\"\n\n\"Her boss?\"\n\n\"She's not gonna sit in the house all day watching soap operas. If she's gonna live her, she's gonna earn her keep. She'll do everything you do, and it'll be your job to show her how to do it.\"\n\n\"Didn't she grow up doing those things?\" Eric asked respectfully.\n\n\"Yes she did, but that's been over 20 years ago. I'm not sure she's worked a day in her life since she left, and it's up to you to make sure that changes the day after she gets here.\"\n\nJean saw the look on her ranch hand's face and laughed again, complete with the hacking cough.\n\n\"Don't worry. I'm not changing my will again.\"\n\nThe comment was so unexpected, Eric just kind of shook his head then said, \"What? I...that never even entered my mind. I meant it when I told you I don't want the...\"\n\n\"It's a done deal, Eric. The ranch is yours. All of it. And Jordan will be your...employee...and right hand...woman. Period.\"\n\nEric sighed as he thought about how this might unfold, but Jean was still the boss, and that included this decision, as well.\n\n\"And that sweet little girl of hers will take over my chores. She's plenty old enough to feed chickens and gather eggs and do some of the cleaning inside the house before and after school.\"\n\nShe hesitated then tried to smile before saying, \"I'm not gonna be around here forever, and I don't see you dusting or mopping floors or doin' dishes. You could hire a maid, but I don't see you doin' that, either.\"\n\nEric didn't remind her that he kept his little place spotless with everything in perfect order to include having his clothes hangers separated by the width of two fingers and everything else neatly folded. He just dug back in to his meal knowing he still had 4-5 more hours of work to do before calling it a day.\n\nAround six hours before he left to go pick up Jordan and Mia in Charleston, which was a three-hour drive, Eric asked Jean if she had a current photo of her daughter.\n\n\"No, sorry. I have one of my granddaughter that's a year old if that'll help.\"\n\n\"That's okay. I've already made up a sign with their name on it. I just thought it might be helpful if I could identify them.\"\n\nEric had always been close with both of his parents. The only time he saw them now was for an hour or two every other Sunday, and found it hard to imagine being estranged from them let alone not seeing them in 20 years. But that was evidently the case here, and that told him things had to have changed drastically in Jordan's life. He'd never bothered asking because he knew Jean would tell him if it ever became his business. So he thanked her for her time and let her know he'd be back as soon as he could.\n\n\"You taking the Land Rover?\" Jean asked.\n\nThat was her vehicle, and it never occurred to him to even ask.\n\n\"No, ma'am. I'm driving my truck.\"\n\n\"Nonsense. You're picking up my kid and her daughter. You drive my car.\"\n\nJean walked over to where her purse was, shook it, then handed the keys to Eric.\n\n\"Just be careful with my baby.\"\n\nAgain, Jean smiled then told him she meant the Land Rover. It was four years old and still had less than 10,000 miles on it as Jean rarely went anywhere except to church or the doctor's office.\n\nEric promised he would then went to the ranch house to shower and change leaving him about four hours until Jordan's flight was due in. He put on his best pair of jeans and a button-down shirt he hadn't worn in over a year then stepped into a pair of shoes he hadn't worn in nearly two. He practically lived in boots, and once he put them on he felt...different. \n\nHe didn't have a mirror to look into except the one he used for shaving, but the way he was dressed reminded him of the way he used to look when he was on active duty and not in uniform. It felt both odd and familiar to him at the same time, and just those feelings reminded him again of the woman he'd loved and lost.\n\n\"Should've just worn what I had on,\" he said to himself as he put his wallet his back pocket and grabbed the keys.\n\nThe Land Rover was a dream. It was smooth as silk, whisper quiet, and fully loaded. Eric hadn't sat in a leather seat so long it made him laugh when he got in. Something else he hadn't done in forever was listen to music just for the sake of enjoyment, so he turned on the radio and found a station he liked then put it in gear and headed toward the state capitol.\n\nThe drive was long but pleasant as Eric felt even more reconnected with his past; a mostly carefree time when life was good and everything he did interested him. It had been a long time since he felt that way, and by the time he pulled onto the offramp for the airport he cautioned himself not to get to used to it.\n\nEven though it was the largest airport in the state it was still rather small compared to any airport in any big city he'd ever been to. It only took him a minute or so to find a place to park and another minute to walk inside and check for information on her flight. It was on time and due to land in about 15 minutes leaving him time to stretch his legs.\n\nHe walked down to a small food court and ordered a cup of coffee where a cute, young waitress flirted with him from the moment he walked up until he excused himself when she handed him the cup. She made sure to show him the phone number she'd written on the side with a heart next to it, and Eric politely thanked her. \n\nEven as he walked away, she was still at as she called out, \"Call me! Anytime!\"\n\nShe was way too young, but he couldn't help but notice that just that short interaction with an attractive female had the same effect on him as the show he'd recently watched on his iPad. And as he sipped his coffee, he was suddenly aware that there were women all around him. Many of them were also very attractive, and while he was just looking, he was amazed that he was even doing that.\n\nSeveral of them caught his eye and two of them smiled. Maybe there was a chance that he really was ready to start looking again, but just the thought of doing so stirred up a ton of thoughts and memories. The first was that it would be pretty wonderful to have someone to love again while the second was the guilt he always felt on the rare occasion when he entertained such thoughts.\n\nBut before he could flog himself too hard he checked his watch and realized he needed to head toward the gate. He couldn't actually get in without a ticket so he waited as close to the pickup area as he could then panicked when he realized he'd forgotten the sign.\n\n\"Shit!\" he said quietly but out loud as he turned and headed for the exit. \n\nHe made up for his earlier lack of self-chastisement as he beat himself up plenty for getting caught up in the music and the nice day outside and forgetting the one and only thing he'd brought with him.\n\nHe grabbed it, relocked the SUV, then quickly headed back into the terminal just as passengers began streaming out of the security area.\n\n\"Shit!\" he said again as he held the sign up and began looking around. \n\nHe saw an older, heavy woman with a girl about Mia's age and called out to her.\n\n\"Ma'am? Are you...\"\n\nHe pointed to the sign, and the woman said, \"If I can go home with you I am!\"\n\n\"Sorry,\" Eric told her as he started scanning the area again.\n\n\"Me, too,\" the woman said as though that might have been a possibility.\n\nHe saw another woman with a girl, but his brain was telling him that was impossible. The woman was beautiful. But then, she wearing an expensive cashmere sweater, a nice skirt, and heels, so maybe this was her. \n\nWorking against that was how she looked to be closer to his age than what he was expecting, but he couldn't see any other woman alone with a younger female so her called out to her, too.\n\nThe woman looked his way as did the girl.\n\n\"Mom! Look! That's us!\" Mia said as she read the sign.\n\nThe little girl was also impeccably dressed as she and her mother walked toward the man holding the sign.\n\n\"Jordan?\" Eric asked, still not convinced this incredibly attractive woman could be her.\n\n\"You must be Eric,\" she said, a dazzling smile on her face.\n\n\"Yes, ma'am.\"\n\n\"And I'm Mia!\" the girl said, a happy smile on her face, too.\n\n\"Then I believe we should go get your luggage,\" he said as he folded the sign in half and dropped it in a trash can.",
        "\"Are you a cowboy?\" Mia asked almost immediately.\n\nEric laughed then told her he was more of a cow poke than a cow boy.\n\nHer mother laughed politely then explained the difference to her daughter who said, \"Oh, okay!\"\n\nJordan started to ask him something when Mia asked if they had horses.\n\n\"We do. Did you want to ride one?\"\n\n\"Can I, Mom?\"\n\n\"We'll see,\" her mother said in a way that told Eric she wasn't wild about the idea.\n\nAs they arrived at baggage claim, Jordan told Eric he wasn't what she was expecting.\n\n\"Oh. May I ask what you were expecting?\" he asked with a laugh.\n\n\"Someone...older. And less...refined looking?\"\n\nNot sure how to take that, Eric asked her to point out their bags as the carousel began moving. But Mia knew which ones to grab and was pointing them out before her mom had a chance to even locate them.\n\nEric offered to take all of them, but Jordan said, \"Thank you, but I should probably get used to taking care of things myself.\"\n\nAgain, her 'chauffeur' didn't say anything, he only let her choose which bags she wanted to carry. It turned out to be just one, and that bag had wheels, so she wasn't exactly carrying anything other than her designer purse with a name on it Eric didn't recognize.\n\nAs they walked to the parking lot, he tried to size this woman up. She looked nothing like he'd expected\u2014especially in terms of age and beauty\u2014and she was clearly used to finer things. Not one to judge a book by its cover he decided to table forming an opinion until he had enough information to form one that was based on evidence rather than feelings. \n\nBut the one thing his gut told him might be true was the only thing that concerned him. It was still within the realm of possibilities that this extremely attractive, older woman was a spoiled princess. Or maybe even a prima donna. But he was already sure that her daughter wasn't as the girl continued asking questions that told him she was friendly and down to earth.\n\nOnce they were in the vehicle, Eric couldn't help but notice the perfectly-manicured, polished nails or the scent of what seemed to be a very expensive perfume.\n\n\"All set?\" he asked.\n\n\"Is it a long way to Nana's?\" Mia asked.\n\n\"It's a healthy drive,\" Eric told her. \"Do you want to play something on my phone?\"\n\nHe looked at Jordan then apologized.\n\n\"I'm sorry, ma'am. I should've asked first.\"\n\n\"Oh. No. It's okay,\" the beautiful blonde, whose hair was worn up, said. \"We uh, I don't have one any...\"\n\nHer voice trailed off and she didn't finish her thought as Eric handed his phone to Mia.\n\n\"You can do anything you like with it as long as you ask your mom first, okay?\" he told her as he glanced at Jordan.\n\nShe didn't even turn his way, and it was obvious she was preoccupied. And knowing she hadn't seen her mother in over 20 years, Eric was pretty sure he knew the reason why.\n\nHis passenger didn't speak for the first half hour except to approve or veto whatever Mia asked to do. But she finally asked, without looking at Eric, how long he'd been working for her mother.\n\n\"About two years,\" he told her as he looked her way again, still in shock over how different she was from what he'd expected.\n\n\"Have you been around farms and ranches your whole life?\"\n\n\"Oh. No. This...this was all new to me when I started.\"\n\nJordan finally looked over at him, but Eric wasn't sure why.\n\n\"I'd just gotten out of the Army,\" he offered.\n\n\"Oh,\" she said before looking over at him again.\n\nShe stared for a moment then told him he looked older than she thought he should unless he'd been in the Army for quite some time.\n\n\"Not that you look...old,\" she told him, smiling for the first time.\n\n\"I was in for five years,\" Eric explained without really explaining anything.\n\n\"And before that?\"\n\n\"I uh, I was in college.\"\n\n\"Really?\" Jordan asked, very surprised to hear him say that. \"May I ask where?\"\n\n\"I went to West Point,\" he quietly replied.\n\nJordan sat back a little as she again stared at him.\n\n\"I'm confused,\" she said as she continued looking.\n\n\"How so?\"\n\n\"You're a college graduate from a distinguished institution and...working on a farm?\"\n\n\"I am,\" he replied as quietly as before as he also put two and two together. Jordan was having trouble reconciling his background and education with his current job, and he fully understood that.\n\n\"I wasn't ready to sit behind a desk wearing a shirt and tie, and your mom was willing to give me a chance. I'm sure I cost her more training me that I was worth early on, but I'm very grateful to her for giving me the job.\"\n\n\"I couldn't wait to get away from farm life,\" Jordan said matter of factly. \"The long hours, the backbreaking work, the heat, the cold, the...sweat.\"\n\nEric looked over for a second then said, \"That's exactly what I needed.\"\n\n\"Do you still enjoy it?\"\n\n\"I do. Very much so.\"\n\nJordan lowered her head then said, \"I...I'm dreading it. Terribly.\"\n\n\"I'll be happy to help you out until you get back in the routine.\"\n\n\"Ah, yes. The routine. Up at 4am and working until you're beyond exhausted.\"\n\nJordan sighed then said, \"I just want my life back. My life and...my husband.\"\n\nEric noticed the huge diamond ring on her hand but didn't comment.\n\n\"My daddy was killed in a car accident,\" Mia said, suddenly paying attention.\n\n\"Mia. I...I am SO sorry,\" Eric told her. \"For both of you.\"\n\n\"Thank you,\" Jordan said. \"I can't expect someone who hasn't been through it to understand how terrible it is, but trust me\u2014it's...awful.\"\n\n\"Yes. I can imagine it is,\" Eric replied, not wanting to tell her he understood or why.\n\nAs they drove along Jordan said, \"They call this 'God's country'.\"\n\n\"They do,\" Eric agreed.\n\n\"I call it...hell.\"\n\n\"Mom! That's a bad word!\" Mia said, again hearing the one thing that caught her attention.\n\n\"No, honey. I meant it like the place the Bible talks about. You know, heaven and hell?\"\n\n\"Oh. Okay,\" her daughter said, satisfied with the answer.\n\n\"She's very grown up,\" Eric quietly offered.\n\n\"Yes. Ten going on 25,\" Jordan replied with a little laugh. \n\nShe looked at him again then asked, \"You don't have children, do you?\"\n\n\"No. No kids. I'd like to...someday. But I don't have any.\"\n\nEric could tell she was still looking at her so he turned, smiled, and asked if everything was okay.\n\n\"Sorry. I just can't get over how different you are from what I was expecting.\"\n\nHe debated not saying it but said it anyway.\n\n\"Honestly? I had the same thoughts about you.\"\n\nHe smiled after saying it and Jordan asked what he he'd been thinking.\n\n\"Oh, boy. You sure you want to know?\"\n\nJordan laughed then told him she was sure.\n\n\"At least I think I am. Just be nice, okay?\"\n\nEric laughed then told her what he'd been thinking in general terms. He smiled at her then said, \"But you're the opposite. In every way.\"\n\nShe thanked him then said, \"You, too, Eric.\"\n\nThey went a few more miles before he said, \"It's really none of my business, but you're not exactly dressed for life on a farm.\"\n\nJordan sat there for a few seconds then said, \"I don't have anything to wear other than the clothes I brought with me, and most are like this.\"\n\n\"There are quite a few places we could stop on the way if you'd like to pick something up,\" Eric offered as politely as he could.\n\n\"I'm sure my mother explained the reason we're coming back to West Virginia,\" Jordan said without looking at him.\n\n\"No, ma'am. She hasn't told me much of anything.\"\n\nThe look of surprise on Jordan's face surprised Eric. \n\n\"She hasn't?\"\n\n\"No, ma'am. It's none of my business.\"\n\n\"Two things. Will you please stop calling me 'ma'am'?\"\n\nEric smiled then said, \"Yes...I will.\"\n\nJordan surprised him again when she smiled back then explained the second thing.\n\n\"This will all come out, and since we'll be working together, I may as well tell you myself.\"\n\nEric glance over, raised an eyebrow to indicate he was listening and waited.\n\nJordan started with the last thing she remembered before the accident.\n\n\"Joseph had something important he wanted to tell me. I could see that he was extremely worried, and that scared me because I'd never seen him like that before.\"\n\nEric nodded as she told him how she woke up in the hospital then learned of her husband's fate. As she tried to explain how she'd felt her words brought back a flood of his own darkest memories when the task force commander called him in early one morning to inform him of his wife's passing.\n\n\"I'm really sorry for you, ma'...Jordan.\"\n\nShe wiped away a tear then thanked him as she talked about how devastating it had been for Mia who was buried in some game on the phone or perhaps chose to block out the conversation. Either way, Eric hurt deeply for her and told Jordan that.\n\n\"She's such a sweet girl,\" her mom said before continuing.\n\n\"So the truth is I have a few dollars in cash with me, but I'm essentially...penniless.\"\n\n\"I...had no idea,\" Eric told her as he looked over and saw her wiping away another tear.\n\nThey needed gas, and Eric saw a sign for a WalMart at the next exit. He let her know about the gas, filled the tank, then told her they needed to stop at the store.\n\n\"Oh, okay,\" Jordan said, not telling him she hadn't been in a WalMart since 2001.\n\nMia had never been in one, and as they walked inside, she was amazed at all of the 'stuff'. Memories of Jordan's former life hit her hard as she saw the cheap clothing and the things she now considered shoddy. But she also remembered the good times with her father and mother and occasionally getting some new thing for herself.\n\n\"What are we looking for?\" Jordan asked as her heels clicked on the tile floor. She was extremely aware that she was by far the most overdressed person in the store as she also assumed that many of the patrons they passed thought she was some kind of snob.\n\n\"Flannel,\" Eric told her.\n\n\"Flannel?\"\n\n\"Uh-huh. And some boots. Maybe a pair of jeans, too. Something to work in.\"\n\nJordan stopped walking and waited for Eric to look at her.\n\n\"I told you I don't have any money,\" she said very quietly.\n\n\"I heard you,\" Eric said with a smile. \"But you still need clothes to work in.\"\n\n\"But I can't pay for them.\"\n\n\"No one's asking you to,\" he replied with another smile. \n\n\"I...I don't know when I'll be able to pay you back.\"\n\n\"Again, no one's asking you to,\" Eric said with a smile. \"And this young lady's gonna need something to wear to feed chickens with.\"\n\n\"I get to feed chickens?\" Mia said, suddenly happy and even excited.\n\n\"You do. And you get to collect their eggs everyday.\"\n\nShe was all smiles while her mother had a look of sad despair on her face.\n\n\"Okay,\" Jordan said as she realized Eric was right. Her mom had already made it clear she'd have to go back to work, and cashmere was exactly made for shoveling cow sh...poo.\n\nEric did his best not to laugh when Jordan tried on a flannel shirt for the first time since before she'd been in a WalMart. But when she added some jeans to the look he found himself thinking she was just as attractive in them as she'd been in the designer clothes. \n\nHe didn't know her age, but he did see the size 6 on the jeans she tried on and he also saw how well she filled them out. Some heavy socks, a pair of work boots and pair of rubber boots, gloves, and a jacket along with a few other items were enough to get her started.\n\nMia was fascinated by the things 'poor people' wore and seemed to take to them immediately as she modeled them for Eric and her mother. Her mom, however, wasn't as thrilled.\n\nBack in the Land Rover Jordan thanked Eric then said, \"I feel like I just arrived in prison and just got issued my orange jumpsuit.\"\n\nHe laughed then told her it really wasn't that bad.\n\n\"Easy for you to say,\" she replied as she did her best to smile.\n\n\"If it helps, you uh, you look...very nice...in denim and flannel.\"\n\nShe cut her eyes his way but the boyish grin on his face made her laugh.\n\n\"Yes, that helped,\" she told him. \"Well, a little.\"\n\nNot much was said the rest of the way home. Eric assumed his passenger was dealing with a flood of emotions, not the least of which was reconnecting with her mother after so many years. Add to that the tragedy of losing her husband and going from riches to rags in a matter of days, and he had a fairly good understanding of what was likely going through her mind.\n\nAs they left the main road Jordan looked around and said, \"I can't believe how little things have changed. There are a few new buildings here and there, but for the most part, it's exactly like it was the day I left.\"\n\n\"Things move at a slower pace out here,\" Eric said as though she might not know that then felt embarrassed for stating the obvious. \n\nHe tried to make it better by telling her that perhaps she'd notice the change in Wheeling.\n\n\"Ah, yes. Wheeling. The big city.\"\n\nThe sarcasm was heavy, so Eric left well enough alone as he turned onto the road leading to the farm.\n\n\"Country roads. Take me home,\" Jordan said as she saw the silo and then the barn from nearly a mile away. The house came into view and a chill ran through her; a chill that came from a feeling of humiliation. A feeling that her mom and dad had been right all along even though she'd loved the older man she married and Mia more than life itself.\n\nJust before they pulled in to the farm Jordan said, \"It's amazing what we'll do for our children.\"\n\nEric smiled and nodded but didn't reply as he pulled up to the house and turned off the engine.\n\nHe went around and opened the door for Jordan who started to thank him just as her mother walked outside. Eric stepped back as Mia got out, and from there he just watched.\n\n\"Jordan?\" her mother said before throwing her arms open to hug the daughter she hadn't seen in so long.\n\n\"Hi, Mom,\" her daughter said with some amount of uncertainty in her voice as she hugged her back with a lesser amount of enthusiasm.\n\nEric couldn't see whether or not Jordan was crying but he could see tears falling from Jean's eyes as she let go and bent down to call her granddaughter to come give her a hug.\n\n\"Don't be scared, honey! I'm just old!\" she said with a laugh and a cough as her granddaughter hugged her for the first time.\n\n\"I am SO glad to see you!\" Jean said as she squeezed the little girl.\n\n\"You, too, Nana,\" Mia told her as Jean stood up and used the sleeve of her shirt to dry her eyes.\n\n\"Come on in. We'll get your things put away and dinner'll be ready soon.\"\n\nJordan didn't tell her mom they usually ate closer to 8pm in Colorado. Nor did she mention the time difference. She only said 'oh, okay' and followed her mom inside.\n\nEric didn't care that he had to bring their luggage in. Whatever Jordan was, she was a woman, and in his mind, men did things like that for a woman, even a rich woman. Or...one who'd been rich and even pampered her entire adult lifetime.\n\n\"Just take those to the back bedrooms,\" Jean told him as he brought the first two suitcases inside.\n\nAs he went out for the rest of the luggage he heard Jean ask how the flight was and heard, \"Oh, it was okay,\" from Jordan with no even less enthusiasm than her hug.\n\n\"Well. Let's get you settled in and then we'll talk,\" Eric heard on the way back out.\n\n\"Eric?\" Jean called out.\n\n\"Ma'am?\"\n\n\"Thank you. For bringing my baby...my babies...home.\"\n\nHe smiled, nodded at both women, then went back out to move Jean's Land Rover and get back to work. He'd lost half a day and the cows were mooing loudly so they were his first priority.\n\nAs he hooked up teats to milking machines, Eric couldn't decide how he felt about Jordan. On the one hand she was undoubtedly shellshocked so he understood why she might not be very friendly. Or it could be that she was a spoiled bitch or something even worse?\n\nOn the other he couldn't stop seeing her in his mind's eye. She was obviously very attractive, but it was more than that. Or was it? And if there was something more going on\u2014what might that be?\n\nSoon he was too busy trying to catch up to think about such things, and by the time he finished at around midnight he was too exhausted to care. He was so tired he even set his alarm for five instead of four and hoped Jean wouldn't be too upset when he strolled in an hour late for breakfast.\n\nTwo surprises awaited him when he walked over for at 5:30am. There was a plate with a big lid on it in front of his place at the table and Mia was up.\n\n\"Wow. I didn't expect to see you up so early,\" Eric told her with a wink.\n\n\"I couldn't wait to feed the chickens!\" she said with excitement in spite of her being tired.\n\nJean put a hand to the side of her mouth then said, \"We'll see how long that lasts!\"\n\nEric laughed and Mia said, \"Huh?\"\n\n\"Sorry I was late,\" Eric said before removing the covering.\n\n\"I saw when you went to bed,\" she told him. Her voice was almost sympathetic which was another little surprise.\n\n\"You were still up?\"\n\n\"I was talking with Jordan.\"\n\n\"Oh?\"\n\n\"We...covered a lot of ground.\"\n\n\"Any of it any of my concern?\"\n\n\"Jordan knows she's working for you, but we didn't discuss the future of this place. There'll be plenty of time for that. And as I said, that's a done deal.\"\n\nJean coughed fairly hard then said, \"And I gave Jordan off until noon. It's just this one time, but she needed to get some sleep.\"\n\nShe and Mia had already eaten, so Jean told Eric to enjoy his meal then said, \"Okay, granddaughter of mine. You ready to feed some chickens?\"\n\n\"Uh-huh! And can we get the eggs, too, Nana? Please?\"\n\n\"I reckon we can check and see how many there are,\" her grandmother told her.\n\nEric noticed the smile on the old woman's face and it made him feel good to see it.\n\n\"Just don't drop any!\" Eric said too seriously causing Mia to giggle.\n\n\"I won't!\" she assured him as her nana gave her the basket she used to collect eggs in.\n\nEric finished catching up from the day before and was back on track by lunch which was always ready at twelve noon on the dot. \n\nWhen he walked into the kitchen, he saw a whole lot of flannel and denim and tried not to laugh.\n\n\"Mornin',\" he said to Jordan whose eyes were bloodshot from either a lack of sleep, crying, or both. \"Did you get any sleep?\"\n\n\"A little,\" she said before asking if he'd like some coffee.\n\n\"Yes ma...please.\"\n\nHe then saw Mia come into the kitchen from washing her hands and asked about the chickens.\n\n\"I love them! They all cluck and do their heads like this when they walk.\"\n\nMia tried to imitate a chicken and got a chuckle from her grandmother followed by another, longer cough.\n\n\"Mom? Are you okay?\" Jordan asked.\n\n\"Oh, sure. I'm fine, honey. Just a...cold.\"\n\nMia continued bubbling away as she talked about the eggs.\n\n\"I picked up a baker's dozen\u2014that's thirteen\u2014and I didn't break any of them!\"\n\n\"Nice work!\" Eric told her. \n\n\"Thank you!\" the young girl said as she asked what she could do next.\n\n\"She's such a blessing!\" Jean said as she put her hands on Mia's shoulders.\n\n\"And then there's me,\" Jordan mumbled.\n\nEric was pretty sure her mom would say something but she didn't. She just told everyone to have a seat and dig in. There wasn't a lot of conversation during the meal, and what little there was came from Mia. She had to start school on Monday and was worried about making friends.\n\n\"You won't have any trouble, punkin',\" her nana said. \"You're a pretty little thing and sweet as can be. Somethin' tells me you'll be a big hit with everyone.\"\n\n\"My friends stopped being my friends in Colorado after my daddy died,\" she said, sadness creeping into her voice.\n\n\"Well, I can promise you that won't happen here,\" Jean told her.\n\nEric looked at Jordan who looked back at him. It was obvious she was thinking that her mother couldn't guarantee that, but she didn't feel like mentioning it. For that matter, she didn't feel much like eating and pushed her plate away.",
        "\"I'll go brush my teeth and be ready to go to work whenever you are,\" she told Eric before taking another sip of coffee.\n\n\"Sounds good,\" he said before taking a large bite of the second toasted BLT he was halfway through.\n\nJordan was sitting on the back porch steps when Eric found her and told her it was time to get busy.\n\n\"Do you have you gloves?\" he asked when he didn't see them. He did see her perfectly manicured and painted nails and wondered how many hours those would last.\n\n\"Gloves. Right,\" she said as she stood up and went back inside.\n\nEric led her to the barn and told her the horses needed hay and that he'd be milking the goats. But when he saw her staring at the huge stack of baled hay he knew what was going on.\n\nHe pulled three bales down, cut the twine with the knife he carried at all times, then said, \"Just use the pitchfork to bust 'em up and toss an equal amount of hay in each stall.\"\n\nHe tried not smile when he said, \"And when they're done eating, you can come back and muck them out.\"\n\n\"Oh, goody,\" Jordan replied without looking at him.\n\n\"Oh. And in between come help me with the goats. Please.\"\n\nHe waited for her to look at him then smiled.\n\n\"You look good in flannel, by the way.\"\n\n\"Ha, ha!\" she said as she turned away to go grab the pitchfork.\n\n\"I was just being honest,\" he told her having meant it sincerely but now wondering if the 'bitch part' might be true.\n\nWhat should have taken her ten minutes took closer to a half hour, but Eric chose not to mention it when she finally showed up.\n\n\"Those three on the end still need to be milked,\" he told her as he squeezed away on another one.\n\n\"Lucky me,\" she muttered.\n\nEric saw her pull off the gloves and hold up her left hand. He noticed two broken nails, and nearly lost it when he saw her look then loudly say, \"UGH!,\" before pulling up a stool and doing something else she hadn't done since the late 1990s.\n\nJust two or three pulls later, the goat she was milking let out a loud bleat.\n\n\"Easy over there!\" Eric called out, trying to be friendly.\n\nA muttered reply of 'asshole' actually did make him laugh and decide the bitch thing was probably true.\n\nAs they finished up with the goats, they heard Mia calling for her mom.\n\n\"I'm over here, honey!\"\n\n\"Mom! Nana's gonna take me into town to buy school clothes!\" her daughter said the moment she spotted her mother.\n\nEric sauntered over just in time to hear Jordan say, \"Might be nice if she asked me rather than...\"\n\n\"Can she, Mom? Please?\"\n\nHer daughter had clothes. She just didn't have many of them. Jordan brought a suitcase full, but it wasn't enough to wear week after week to school. She was also very aware of who had the money, and if she wanted her daughter to have anything nice to wear beyond the third day, she had to agree.\n\n\"Sure. That's fine, sweetie.\"\n\nMia gave her mom a hug then ran back to the house hollering, \"Nana! It's okay! I can go!\"\n\nEric's outlook softened a bit as he said, \"I can imagine how hard all of this is on you.\"\n\nJordan looked at him then said, \"No. You can't imagine. You have no idea, and I wish you'd quit pretending you do!\" before handing him a small pail of milk and stomping off.\n\nThe problem was she was heading in the wrong direction.\n\n\"We've got a gate to fix!\" Eric called out. \"And it's in the opposite direction.\"\n\nHe watched Jordan stop, clench her fists then slowly turn around. The look on her face was one Eric couldn't ever remember seeing on a woman before, and as she walked by she glared at him.\n\nAs she strode by he said, \"You know I didn't make you come here, right?\"\n\nShe stopped again, clenched her hands into tight balls one more time then spun around.\n\nAgain Eric felt bad even though he'd done nothing wrong.\n\n\"I'm sorry. I didn't mean to...\" he tried saying when she whirled around and lit into him.\n\n\"Get off my ass! You have NO idea what I'm dealing with! My husband is dead, everything we had is gone! I'm back here living in pig shit, and you're riding me nonstop!\"\n\nShe went to finish the rant but couldn't. Eric saw her face screwing up in anguish as the anger and resentment and everything else came spilling out.\n\n\"I...I really am sorry,\" he said as he moved closer.\n\nThe crying turned to sobbing, and no matter how he felt about her, Eric couldn't not try to comfort her. \n\nHe reached out and put his hands on her shoulders, but the moment he did Jordan screamed, \"Don't touch me!\" \n\nThe yelling caused her to nearly gag as she tried to breathe, and while he knew he might get hit or even kneed in the groin, Eric didn't move away. He moved closer and slowly put his arms around her and pulled her close as she her body heaved up and down. \n\n\"It's gonna be okay,\" he told her as she nearly collapsed in his arms.\n\nHe wasn't sure how long he held her, but at some point she slowly put her arms around him, too. It wasn't as though she was hugging him. It was more that she need to hold on to avoid collapsing.\n\nAt some point he pulled back a bit and asked if she'd be okay once her sobs began to fade.\n\n\"I...I'm not sure I'll...ever be okay again,\" she said, one ragged word at a time.\n\n\"You will. I promise you that.\"\n\nJordan also pulled away a little then took a long, slow, deep breath before telling him again, \"You can't know that. You...you have no idea what I've been through.\"\n\n\"I really am sorry,\" Eric told her again as he lowered his arms.\n\nJordan did the same then seemed to soften a little, too.\n\n\"Thank you.\"\n\n\"You ready to help me with that gate?\"\n\n\"I don't suppose I have any choice, so...\"\n\n\"Come on,\" he said, smiling once she looked at him.\n\nJordan didn't return his smile, but the ferocious look that was there a few minutes earlier was gone.\n\nAs they walked to the barn to get the tools they needed, and the tractor to ride out to the gate, Jordan said something that shocked her younger boss.\n\n\"Eric? You were right. You...you haven't done anything wrong. In fact, all you've done is be nice to me...and my daughter.\"\n\nThey took a few more steps before she said, \"I...I'm really sorry.\"\n\nShe even looked over at him, and this time, he saw a face that was hopeful; hopeful that he would offer his forgiveness.\n\n\"I'd say 'I understand', but I don't want you to lay into me again,\" he told her, trying to be polite and making sure to smile.\n\n\"That was also mean of me to say. It might be true, but it certainly wasn't nice,\" Jordan said almost sheepishly.\n\nShe looked at him again then said, \"I wouldn't wish losing the one you love the most on anyone, and even though you really can't understand that, I'm sure you've lost someone you love in your life.\"\n\nHe didn't smile, but the look on his face was understanding as he told her he had without saying more.\n\n\"Okay. We're gonna need a few things,\" Eric told her as they got to the barn door, happy to change the subject and even happier that they'd established something of a working relationship between them.\n\n\"Good thing you're here, because I have no clue!\" Jordan said with a laugh that made Eric smile.\n\nBy dinner time, it was obvious that Jordan was exhausted. She hadn't done a day's work in over two decades, and there was the fact that she was a woman over 40. Eric didn't know that for sure, but he felt reasonably confident that had to be the case based on what little he did know. \n\nMia did nearly all of the talking during dinner as she went on and on about school clothes and making new friends and hoping the girls here really were different. Eric listened with genuine interest as he tried to imagine what it was like for a girl Mia's age dealing with catty girls who were best friends one day and talking behind your back the next. It hurt him to think anyone would be mean to her, but he understood human nature and that life wasn't always fair. He said next to nothing, but when he did comment he tried to be supportive and promised he'd be there for her no matter what.\n\nWhen they finished eating, Mia got up and gave Eric a hug that turned out to be the second most pleasant surprise of the day, behind only Jordan's humble apology.\n\n\"So what's next?\" Jordan bravely asked as she and her mom cleared the table.\n\n\"I think you've had enough for one day,\" Eric told her, a kind smile on his handsome face.\n\nJean gave him a look but didn't say anything as she handed some plates to Mia who put them in the dishwasher.\n\n\"I don't want to make you go back out by yourself,\" Jordan told him.\n\n\"I had a lot of help today, and that's more than I usually have, and you're gonna be unbelievably sore the next couple of days. So maybe go take a hot bath and relax?\"\n\nWhen he saw Jordan's eyes turn glassy, he realized he'd been overly harsh to think she was some kind of...bitch. She was just a woman doing her best to adjust to radically different circumstances, none of which were her fault.\n\nWhen she came over and gave him a hug, too, it did something or caused something he hadn't felt in so long he'd nearly forgotten the feeling. It was so pleasant that it stayed with him the rest of the day and eventually led to him doing something he hadn't done in 3-4 months when he finally went to bed around 11 o'clock.\n\nThe following morning, Eric was up at 4am and felt like a million bucks. He was whistling on his way to breakfast but stopped when he walked inside and saw Jordan in the kitchen. \n\n\"Someone's happy,\" she said with a little smile.\n\n\"Oh. Yeah. I guess maybe I am,\" he said before asking her how she felt.\n\n\"Well, considering that lifting my coffee cup hurts like...crazy...I suppose I'm okay.\"\n\n\"Yeah, that lactic acid buildup is painful. The only good news I have is that it'll go away in a couple of days.\"\n\nHe smiled at her then said, \"I can't say the same for your nails, though.\"\n\nJean was cooking but turned to give him another look, but again, she didn't say anything. Jordan did, though, and held up her hands to show him.\n\n\"I cut them all back last night. I only had two left, and the others were all jagged. Now they're at least smooth if very short.\"\n\n\"I think they look beautiful, Mom,\" Mia told her. \n\nShe gave her mom a hug and Eric winced when Jordan flinched.\n\n\"Easy, honey! Your mom's feeling every day of her 41 years!\"\n\nJean gave her daughter the look this time, but Jordan didn't see it, and Eric finally knew. \n\nIn jeans and flannel, Jordan still didn't look anywhere near that old, but she did look a little less young than she had in her 'street clothes'. \n\nAt 7:15 both Jordan and Eric went back to the house to wish Mia a happy first day of school. They each got hugs, and in turn, they told her how nice she looked in her new clothes. They weren't fancy, but they were more than adequate, and most important, they were what the average girl her age was wearing. So at least she shouldn't be getting any grief over the way she looked. \n\nBeyond that it was anybody's guess, but everyone felt hopeful as she got in the Land Rover.\n\n\"Thank you for being so nice to my daughter,\" Jordan told Eric as they walked back to finish 'blading the slab' a farm term for scraping the massive amount of cow poop into a large cesspool under the barn. Eric jokingly warned her about what a pleasure it was to pump it out every couple of months, and Jordan told him she couldn't wait as she rolled her eyes then laughed.\n\n\"You doing okay? With your body aches?\" Eric asked once they were finished.\n\n\"Thanks to the Ibuprofen I took, I'll live,\" she replied. It was obvious she was in pain, but it was also clear she intended to pull her weight. \"Besides, I couldn't stand myself if I sat inside knowing you're out here by yourself doing your work and mine.\"\n\nEric stood there, his hands on his hips, and just stared at her for a couple of seconds. He cocked his head a little then said, \"You don't give yourself enough credit.\"\n\n\"For?\"\n\n\"Everything.\"\n\nBefore she could ask a question like 'such as' Eric told her they needed to move over to the horses, and that made Jordan wince.\n\n\"I'll help you with the pitchfork,\" he told her with a little laugh as they headed that way.\n\n\"Ha! My hero!\" she playfully replied as she walked along beside him.\n\nJust as Eric had promised, the soreness passed over the next couple of days, and while he knew Jordan didn't want to be there, she did her level best to hide her feelings and that included griping or complaining. And there was another side benefit to having her around. Eric was in bed by 10 o'clock each night for the first time since he started working there.\n\nIt was roughly a month or so after that before Jordan was able to do enough to allow them to finish even earlier. One night around that time, one they called it quits for the day, Eric went to the bunkhouse and Jordan found herself talking with her mom. \n\n\"Eric tells me you're doing great around here,\" her mom kind of casually mentioned.\n\n\"He's a very nice young man,\" Jordan replied.\n\n\"I take it you two do your share of talking during the day?\"\n\n\"Not really. We do talk, but it's all work related. Why do you ask, Mom?\"\n\nJean started coughing, and this time it was really bad.\n\n\"Mom? That cold has lingered for weeks. When are you going to get it checked? It could be bronchitis.\"\n\n\"No, it's not bronchitis,\" her mom said without looking Jordan's way.\n\n\"How do you know? If you haven't seen a doctor.\"\n\nJean looked at her girl, sighed, then said, \"We need to talk.\"\n\n\"About?\"\n\nJean sighed again, and the sigh made her cough almost as bad as before.\n\n\"Sorry. We do need to talk, and before the coughing started again, I was going to ask you if Eric mentioned his wife to you, but now that this cough is forcing my hand, it seems like a good time to tell you...\"\n\n\"Stop. Mom. Did you just say...Eric's wife?\"\n\n\"Oh, my,\" her mom said, realizing she'd let the wrong cat out of the bag. \"He hasn't told you, has he? And now I'm deep kimchi.\"\n\nJordan remembered that saying from her father years ago and knew it meant trouble.\n\n\"Mom? What are you talking about?\"\n\nIn a way Jean was relieved not to have to mention the cancer yet, but she also felt like she was betraying the son she never had.\n\n\"She...Eric's wife. She...she was killed in a car accident, too. While he was away overseas. In Afghanistan,\" Jean said. \"I really can't believe this never came up.\"\n\nToo stunned to speak, Jordan sat there staring into space.\n\n\"Jordan? I thought you knew. Now I've betrayed a confidence, and I hope you won't say anything,\" her mom said, nearly pleading.\n\n\"So he does understand.\"\n\n\"What?\" her mom asked at the absentminded reply that seemed like a non-sequitur. \"I'm the one who isn't understanding.\"\n\n\"All this time and all the things I said. Mean, hurtful things.\"\n\n\"Jordan? What are you talking about?\"\n\nJordan stood up, went to a side window and looked at the ranch house. The lights were still on, and as she came back through the kitchen she told her mom she'd be next door.\n\n\"It's after 10pm! What's so important it can't wait?\"\n\n\"An apology,\" her daughter said as she walked out and let the screen door slam shut.\n\nWithin seconds she was at his door and knocked. Eric was watching another episode of The Good Wife and the unexpected knock startled him. He set the iPad down and went to the door.\n\n\"Jordan? What's goin on?\" he asked as he opened it. \"Is your mom okay?\"\n\n\"She...she's fine. I just...\"\n\n\"Are you okay? Is something wrong with Mia?\"\n\nHe closed the door then noticed that Jordan's eyes were teary.\n\n\"Hey. What it is it? What's going on?\"\n\nJordan was still in the same shirt she'd worn that day, her hair was kind of up but also hanging down, and yet Eric thought she was the most beautiful woman he'd seen since his wife was alive.\n\n\"You know,\" she said as she looked into his eyes. \"All this time and...you knew.\"\n\n\"You're upset. Why don't you come in and sit down?\"\n\n\"No. I...I won't be staying. I just came over to tell you how sorry and I am and to apologize.\"\n\nEric couldn't smell alcohol on her breath and that only confused him more.\n\n\"May I ask what it is you're apologizing for?\"\n\nHer arms were around his neck so fast he wasn't sure whether to pull them down or hug her back.\n\n\"Jordan? What's going on?\" he asked again.\n\n\"Your wife. I had no idea, and I'm so sorry.\"\n\nThe words hit him hard, but as soon as they did he understood.\n\n\"I see,\" he quietly said as he kind of raised his hands and put them in the small of her back.\n\n\"Why didn't you tell me? Why did you let me make...an ass out of myself?\"\n\nShe'd pulled her head back and was looking up at him, her eyes darting back and forth and imploring him to explain.\n\n\"I felt you needed time to vent and work through your own loss. I couldn't see any value in telling you I've been through that.\"\n\nTears fell as she asked, \"Can you...can you tell me what happened to her? Please?\" even though her mother had provided the cause of death.\n\nThe only time Eric had even come close to crying was at the funeral, and yet he was on the verge of tearing up himself as he saw the emotion on her face and felt it in her voice.\n\n\"Please sit down, okay?\" he said as he gently lowered her arms.\n\nJordan had forgotten how tiny the ranch house was, but that didn't matter as she sat down in the only padded chair while Eric pulled out one made of wood and sat across from her. He took a few seconds and gave her the shortest possible version of what happened then sat there waiting for her to speak.\n\n\"Another car accident. And she was so young,\" Jordan quietly said as she continued looking into his eyes.\n\n\"Yes. On both counts. But I suppose it was a blessing that I wasn't with her. Like...you. And your husband. I can't even imagine how awful that was.\"\n\n\"I feel so...ashamed,\" Jordan admitted as she looked down at his feet.\n\n\"Why? You have no reason to feel that way, but you do have every reason to feel bitter.\"\n\nJordan looked up at him again as though she were studying him.\n\n\"And that's exactly how I've felt since learning about the accident. And the investments. And...everything.\"\n\nShe looked down again before looking back and continuing.\n\n\"But being here...or maybe...being around you...has reminded me of how my...my moral compass gotten so out of whack over the years. I really did love my husband, but I...I lost track of the values my parents tried to instill in me. I looked down my nose at people content to live in rural areas. I thought they were small-minded and...shallow.\"\n\nShe raised an eyebrow then said, \"But I was the one who was shallow. I wanted money and a big home and lavish parties and...\"\n\n\"Remember me saying you don't give yourself enough credit?\" Eric said, interrupting her.\n\n\"Yes. Of course.\"\n\n\"This is one of those times. You've learned a lot about life and yourself, and since coming home, you've changed, Jordan. A lot. If you could only see yourself from my perspective you'd realize that and stop beating yourself up.\"\n\nJordan made a kind of 'yeah, right' sound then said, \"See myself. Because I'm so...great to look at.\"\n\nShe tried to laugh a little when she said it, but Eric wasn't going to let her keep putting herself down.\n\n\"I think you're the most beautiful woman I've ever known since my wife passed away,\" he told her so sincerely it sent chills up and down her arms.\n\n\"I...you...what do you mean by that?\" she asked as her heart pounded.\n\n\"You don't need to be wearing cashmere to be beautiful, Jordan. You have this...natural beauty I can't explain, and even in a flannel shirt you look amazing.\"\n\nShe could only look at him for a second before having to look away, but in that second she saw the same sincerity she'd just felt, and although she'd noticed how handsome he was many times, this was the first time that it really hit her.\n\n\"I'm tempted to say you've been alone too long, but after learning that you were married and what happened, that wouldn't be funny, so I'll just say...thank you.\"",
        "\"You're welcome,\" Eric said, making sure to smile as he waited for Jordan to look at him again. \"So are we good?\"\n\n\"As long as you forgive me then...yes.\"\n\n\"There's nothing to forgive, so you can go back to the house and get some rest.\"\n\nEric got up, moved closer, then held out a hand. Jordan looked at it then looked at him and put her hand in his. He helped her stand up them smiled again and told her he was glad they talked.\n\n\"Me, too,\" she said in a sweet way that was unlike anything he'd ever heard her say.\n\nHe pointed to the door that was maybe eight feet away then laughed.\n\n\"May I walk you out?\"\n\nJordan finally laughed herself then told him he could.\n\nOnce they got to the door, she turned toward him and thanked him again for being so kind to her and for being so understanding.\n\n\"We all need to work through things. I'm just glad I was there to listen when you needed me.\"\n\n\"You mean...be abused...right?\" she teased as she looked up at him.\n\n\"Nah. Not at all.\"\n\nOnce again, Jordan's arms were suddenly around his neck, but this time it felt different. He went to hold her, too, but just as his arms wrapped around her body she lowered hers and moved back.\n\n\"Well...goodnight,\" she told him.\n\n\"Night.\"\n\nHe opened the door, but just before she stepped out, Jordan asked him something.\n\n\"Eric? My mom's cough. Is there something I should know?\"\n\n\"Oh. Um...perhaps she's the one you should ask,\" Eric gently suggested.\n\n\"Sorry. I should have known you wouldn't talk about anyone when they aren't there.\"\n\nShe smiled then said, \"That's something else my father taught me and I lost track of.\"\n\n\"He was a smart man.\"\n\n\"Yes. Yes, he was,\" she replied before walking away.\n\nWhen Eric walked into the kitchen the following morning he could tell something was different. There wasn't a sound other than bacon sizzling and dishes being placed on the table.\n\n\"Morning,\" he said politely as he took off his ball cap.\n\n\"Hey there,\" Jean said before coughing.\n\n\"Mom! I just don't understand! How can you not do anything? You have a grandchild for heaven's sake!\"\n\nEric noticed Mia wasn't in the room and pieced together that Jordan had asked her mother about the cough.\n\n\"Jordan, I told you why last night. Please respect my decision.\"\n\n\"What decision?\" Mia asked as she walked in.\n\n\"It's nothing, sweetie pie,\" her nana said as she stared down her daughter.\n\n\"Eric? Can't you talk some sense into my mom?\" Jordan pleaded.\n\n\"Mom? Why are you so upset?\" Mia asked.\n\nUnable to stay silent, her mother said, \"Because your grandmother wants to die!\"\n\nWithin seconds Mia was crying, Jean was pleading for quiet, and Jordan was still tearing into her.\n\n\"Okay, ENOUGH!\" Eric called out, using his Army, outdoor voice for the first time since Afghanistan.\n\nOnly Mia's sobs were audible as the kitchen fell silent.\n\nHe then used his indoor voice and quietly said, \"What any other adult says or does is none of my business. But the three of you need to talk this out and make peace with whatever you decide.\"\n\nHe then grabbed a plate, loaded it with food, and filled a travel mug with coffee then put a lid on it.\n\n\"Now if someone will please open the door, I'll let you ladies hash this out.\"\n\nAs angry as she was at her mother, Jordan almost smiled when she put Eric's ball cap back on his head.\n\n\"You might need this,\" she told him before opening the door.\n\nHe thanked her then said, \"Mia? Everything will be okay. Just tell your mom and grandmother how you feel, okay?\"\n\nShe didn't know what was going on but nodded and said, \"Okay,\" as Eric went back 'home' to eat in peace.\n\nIt was an hour later before Jordan showed up to help with the cows.\n\n\"You're a pretty amazing man,\" she said the moment she saw him.\n\n\"Me?\"\n\n\"We talked until about two minutes ago, and my mom is going to check into chemo.\"\n\nShe moved a little closer then said, \"Eric? I can't thank you enough.\"\n\n\"I didn't do any of the talking. That was all you and your daughter.\"\n\n\"My mom knows how much Mia needs her. And the truth is, so do I. I couldn't have admitted that until I thought I'd lose her, too, but now the thought of her dying is unbearable.\"\n\n\"She still might,\" Eric offered as nicely as he could.\n\n\"Yes. I know that's true, but I don't want her giving up without a fight. For all of our sakes.\"\n\nHe smiled at her then tilted his head a bit.\n\n\"What? Why are you looking at me like that?\" she asked, genuinely puzzled.\n\n\"Because you're the amazing one and you don't even know it.\"\n\n\"Oh,\" she replied quietly as she broke eye contact. \"I...I feel like...the broken one.\"\n\nEric waited for her to look at him again then smiled.\n\n\"I'd say you're on the mend.\"\n\n\"I've got a ton of mending left to do, but coming...home...has changed my perspective.\"\n\nShe smiled then told him if she could sing, she'd sing Country Roads.\n\n\"But I can't so I'll spare you,\" she said with a laugh.\n\nBut when Eric started singing it, her smile disappeared, replaced by shock. He wasn't just signing, he sounded...fantastic. \n\nHe stopped after the first few bars, but it was so good Jordan told him to keep going.\n\n\"You sure?\"\n\n\"Yes. I'm sure,\" she said so quietly he barely heard her.\n\nShe stood there mesmerized and listening as he sang the entire song in an amazing baritone voice she couldn't have imagined.\n\n\"You are full of surprises, Eric Harmon.\"\n\n\"At your service, ma'am,\" he replied as he tipped his cap and winked.\n\nJordan laughed, and this time it was a real, genuine laugh from the heart, and although she didn't share her feelings, she was beginning to realize that she not only felt happy again, she felt...almost whole. She knew she hadn't been alone long enough to feel like this, but the truth was, that's exactly how she felt.\n\nThe mood change was so noticeable that Eric found himself looking forward to being around this older, beautiful woman from then on, and he even made excuses to see her whenever he possibly could during the day.\n\nLater that week he insisted that Jordan go with her mother to discuss treatment options, and while she was happy to do so, she promised she'd be back as soon as possible.\n\n\"No hurry. The farm isn't going anywhere,\" he told her with a laugh.\n\nShe smiled kind of coyly then said, \"Maybe it isn't the farm I'm anxious to get back to.\"\n\nWhen Eric took off his cap and started scratching his head Jordan started laughing as she turned while saying, \"I'll be back in a few hours!\"\n\nWhen she returned, Jordan was bubbling with enthusiasm.\n\n\"Mom's going to start chemo the day after tomorrow. And she said she'll do radiation, too, if the doctor thinks it's necessary down the road.\"\n\n\"I'm really happy to hear that, Jordan.\"\n\n\"Me, too,\" she said as she looked up into his eyes from a foot away.\n\nThere was a brief moment between them, but she looked away just when things got too close for comfort.\n\n\"So...where are we?\" she asked as she looked around as if there might be something new.\n\nEric gave her a serious look then said, \"Baaaaa!\" like a goat and Jordan laughed so hard she covered her mouth.\n\n\"Then let's...goooo!\" she replied, trying to make the same sound without much luck.\n\nShe'd forgotten about the moment they'd shared until Eric put an arm around her shoulder. It was strictly platonic from his point of view, but when he did, Jordan stopped, stepped in front of him and kissed him so fast he had no idea how it happened.\n\n\"What the...\" he said, not in anger but in surprise.\n\nJordan reeled back in horror, again covered her mouth but with both hands, and said, \"Oh, my...gosh! Eric, I...I am SO sorry. I...you must...I didn't mean to...\"\n\nWhen she realized he was just standing there staring at her she stopped talking for a moment then said, \"Aren't you going to say anything? Or at least yell at me?\"\n\n\"Yell at you? Why would I yell at you?\"\n\n\"For...losing my mind?\"\n\nHe kind of cocked his head to one side then side, \"If that's what you do when you lose your mind, you can go crazy anytime you like.\"\n\nNow it was Jordan staring at him.\n\n\"Are you...you're not...\"\n\n\"What? Flirting with you? Me?\" Eric said, pointing at himself with both hands.\n\n\"Right. I'd have to be out of my mind to think that's what you were doing.\"\n\n\"Okay. You keep telling yourself that,\" he said so playfully it made her body tingle from head to toe.\n\nAs they walked toward the goats, Jordan realized he had been flirting with her. It was just playful flirting, but it still felt wonderful. \n\nBut by the end of another very long day those feelings were gone, and she reminded herself that Eric was just an incredibly nice guy who'd had this uncanny ability to make her feel good. And while he was much too young to be serious, he was so good looking it made her feel even better to have such a 'hunky' guy doing the flirting.\n\nAs they said 'goodnight' around 10pm, Jordan thanked him for making an older woman feel good.\n\n\"Oh. Did your mom tell you something nice?\" he asked, a smile on his face that told her he knew she talking about herself.\n\n\"No. The other older woman,\" she said, loving the playfulness.\n\n\"There's another older woman? Huh. Maybe you can introduce me to her one of these days,\" Eric replied with a smile that made her very tired body shiver.\n\n\"Oh, sure. I'll do that.\"\n\nAs she walked inside, Jordan was still exhausted but she had that same feeling back and this time she wanted it to last. Her mom and daughter were both in bed asleep, but even as tired as she was, Jordan couldn't lay down. She took a long, hot shower then sat in her favorite chair with a cup of tea and replayed the events of the day in her mind and smiled several times as she did.\n\nBut by midnight, when she was finally tired enough to go to sleep, she concluded once again that Eric was just being friendly. That thought was both realistic and depressing, and the only good news was that she fell asleep with a minute of laying her head on the pillow.\n\nThe next two or three weeks were a blur for Jordan as she found herself taking her mother to various doctors starting with a new, complete baseline evaluation then for treatment as well as for medication to combat the nausea induced by chemotherapy. \n\nMia needed her help with schoolwork, and she also needed her mom to talk to about new friends she'd made, teachers she liked or didn't care for, and all the things daughters talk about with their moms. Jean did her best to fill in, but Mia needed her mom, and Eric had been so understanding that it made her...love him even more even though she only loved him as a friend.\n\nBut as she thought about him, Jordan knew how much work he did, and she also knew that every time she had to be gone to help her mom or her daughter, he had to pick up her share of the work. She'd gotten stronger and knew the routine inside and out, and between them, they were occasionally finishing by 8pm, but with her being out, Eric was back to working 12 hour days\u2014always without complaint.\n\nThe thing that she found so amazing was that he not only never made her feel guilty, he was supportive to the point of insisting she take time off even when the need to do so was questionable.\n\n\"You only have one mom, Jordan, and while I hope she beats the cancer, you don't know how long you have with her. So go,\" he would often say.\n\nWhat she'd perceived to be flirting continued, but it was more subtle, and the subtlety served to reinforce her belief that he was just a very nice man who maybe saw her as the older sister he'd never had. Not that Eric would flirt with his sister. It was just the best analogy she could come up with.\n\nThe weather starting cooling down in September and turned cold in early October, and cold was one of the reasons she'd left West Virginia. It seemed ironic that she loved Aspen, but she'd never had to work outside there, and the only time she was ever outside for any length of time in the cold was when she went skiing at one of their three resorts.\n\nBut in spite of her misery, Jordan did her best not to complain, and as November arrived, her mother got the first good news since the original diagnosis.\n\n\"Jean? Your tumor has shrunk nearly 50%. That means it's now small enough that we can operate.\"\n\nTo be safe, the oncologist would have to remove one of her lungs as removing only the tumor left too much chance the cancer would return. It could do that anyway as even a PET scan couldn't pick up every cancerous cell, and if even a few of them migrated to her liver or God forbid, her brain, it could very likely mean the end.\n\n\"How much more time will that buy me?\" she wanted to know.\n\n\"I'd say a minimum of six additional months, and there's a modest chance this could lead to remission.\"\n\n\"With remission meaning five years,\" Jean rightly observed.\n\n\"Yes. So...one to five years...or maybe more.\"\n\n\"Mom. You have to do this. For us,\" Jordan told her. \"For Mia.\"\n\nJean now loved her granddaughter more than anything, although things were nearly back to normal with her daughter, so the decision was easy.\n\n\"Okay. Let's schedule the surgery.\"\n\nThat night, Jean asked Jordan for a few minutes of her time, and her daughter asked what was up.\n\n\"I want to talk to you about something.\"\n\nJordan sat down first followed by her mom.\n\n\"I don't hold grudges, honey, but I want you to know that after you left...and the way you left...it...it hurt both me and your father. A lot.\"\n\nJordan already knew that and had come to terms with her actions, so she didn't say anything.\n\n\"And Eric has been nothing short of a godsend.\"\n\n\"He is. He's an amazing man, and he loves this place like you and Dad did.\"\n\n\"Yes. Yes, he does, and that's why...\"\n\nJean put her rough hand on her daughter's then said, \"That's why I changed my will and am leaving him the farm.\"\n\nShe watched her daughter's eyes for any hint of anger but didn't see any. In fact, Jordan's reply was so unexpected it made her mother tear up and have to look away.\n\n\"I would have done the same thing, Mom. Just being your daughter doesn't entitle me to anything, let alone this land. I abandoned you and Dad, and I'm just grateful beyond words that you took me back. And for what it's worth, I am so, so sorry I hurt you and Daddy like that.\"\n\nJordan saw her mom's body jerk and she realized she was crying. She got up and went around the table and put her arms around her mom. Jean raised hers and hugged her daughter back, then said something that made Jordan cry, too.\n\n\"I love you so much, Jordan.\"\n\nJordan swallowed hard and somehow said, \"I love you, too, Mom,\" then held her even tighter.\n\nA minute or so later, when they let go of one another, Jordan asked if there was anything else.\n\n\"No. I just needed you to know that. In case...well, if I...don't wake up.\"\n\n\"Mom. Don't say that! You'll be fine.\"\n\nBoth of them knew that was probably true but not a given. Even so, Jean told her daughter she was right, smiled, then said she did have one more thing.\n\n\"Okay. What might that be?\"\n\n\"Do you ever think about...Eric?\"\n\n\"What?\" Jordan asked, as she shook her head in disbelief.\n\n\"Eric. Do you ever wonder if maybe he and you could, you know, maybe be...more than just friends?\"\n\nJordan's look softened as she said, \"Mom. Look at me. I'm almost 43 years old. I wear flannel shirts and boots and I don't wear makeup. Eric is...\"\n\nHer mom smiled then said, \"He's 28.\"\n\n\"Twenty...eight. Oh...my...goodness.\"\n\n\"Jordan? I see the way he looks at you. And I see the way you look at him. And don't try and tell me you don't, because I'm old but not blind.\"\n\nJordan would have argued the point had her mom not told her she noticed.\n\n\"I...I've noticed him,\" she replied. \"But he's...28. And he's very handsome. But I'm...\"\n\n\"You're beautiful, honey. And Eric doesn't care what you wear. And I think it would be a shame if you two didn't find out if there's something there.\"\n\n\"Mom, I don't want to embarrass myself and end up getting hurt doing it. I also don't want to risk changing our relationship and ruining the friendship we have.\"\n\n\"That's your decision, honey, but I think...even in spite of the age difference...that you two could, you know, be more than just friends.\"\n\n\"Maybe,\" Jordan said with a weak little smile more to placate her mom than to agree with her even though she had had the same thought a hundred times.\n\nEric had occasionally hired someone to help him out, and there was an 18-year old boy who'd recently graduated from high school who worked hard, and Eric asked him to cover for him the day Jean had the operation. Mia stayed home from school, and the three of them waited anxiously for any news after wishing Jean the best before they wheeled her into the OR.\n\nAs they waited, Mia was reading a school assignment on her iPad, and Jordan decided to probe just a little while leaving herself room to claim she was only kidding or joking.\n\n\"Eric? I had a talk with my mom a few days ago. About the farm.\"\n\n\"Oh?\"\n\n\"I...I know she's leaving the farm to you, and I wanted you to know I agree with her.\"\n\n\"Wow. I've wanted her to say something to you about that since you came home, but it wasn't my place.\"\n\nThey were sitting next to her, so Eric smiled then asked, \"So you're not angry with me?\"\n\n\"What? No! Of course not. Why would I be? I gave up my right to this place when I left in a snit so many years ago. And you've been loyal and such a good friend to my mom.\"\n\nHer heartbeat quickened as she put her hand on his then said, \"And I can't thank you enough for that.\"\n\nWhen he looked down at her hand, she assumed he was about to ask her what she thought she was doing, so she started to pull it away.\n\nWhen she did, he raised his hand and took it and pulled it back down.\n\n\"Jordan? I can't tell you how happy I am you did. Come home.\"\n\nShe was only a foot or so away from him and his eyes told her he meant that.\n\n\"Me, too,\" she said. She squeezed his hand then added, \"For several different reasons.\"\n\nHer heart raced when he smiled and asked, \"Is there any chance that one of those reasons could be me?\"\n\n\"Hmmm. Maybe. I suppose it might even be at the top of the list,\" she told him as a flood of pleasure-inducing chemicals bathed her brain.\n\n\"So is there any chance you might want to maybe do something together one of these days?\"\n\nHe smiled then laughed as he said, \"You know, during all of our free time?\"\n\nJordan also laughed and felt like she was 16 again as she said, \"I would love to spend time with you.\"\n\nWhen Eric raised an eyebrow, she laughed again.\n\n\"Oh, right. We pretty much spend ALL of our time together now, don't we?\"\n\n\"We do,\" he said very quietly. \"But that's not what I had in mind.\"\n\n\"Oh. Okay,\" she whispered back as he began moving her way.\n\nHis lips were less than an inch from hers when Mia saw them and sucked in a loud breath of air and said, \"Mom! What are you doing?\"\n\nEric stopped, Jordan sat up straight, and both of them let go of the other's hands and looked at Mia.\n\n\"Nothing, honey!\" her mom said, hoping she hadn't done something terrible before also sayin, \"Sorry!\"\n\n\"Why?\" her daughter asked.\n\n\"What?\" her mom said, now very confused.\n\n\"I wasn't upset, Mom. I was just surprised.\"\n\n\"Meaning?\" her mom asked.\n\n\"It's...okay if you guys want to kiss,\" she shyly told them, her cheeks showing more than a little bit of red in them.\n\n\"You...want us to kiss?\" Jordan asked.\n\nMia's cheeks lit up like a stop light as she told her mom that was fine just as one of the doctor's from the OR walked up them.\n\n\"How is she?\" Jordan asked immediately.\n\n\"She did very well. She's in recovery, and we believe we got everything.\"\n\nJordan was so relieved she teared up and held out a hand to the doctor. He kind of patted it then let them know she could have visitors in another or so.\n\n\"But only for a few minutes.\"",
        "She, Eric, and Mia all thanked him, and as he walked away, tears of relief began falling from Jordan's eyes. As they did, Eric put his arm around her and pulled her close while Mia watched and smiled as he did. When she caught Eric's eye, he winked at her, and the flame grew brighter as she smiled at him.\n\nJordan held out her hand again and Eric took it immediately.\n\n\"That's good news, huh?\" he said as she rested her head on his shoulder.\n\n\"About my mom or that Mia said you could kiss me?\" she tried to smile while raising her head to look up at him.\n\nEric glanced Mia's way and saw her watching. She nodded and smiled indicating 'go ahead' so he again moved closer. This time, Jordan also moved his way and as their lips met for the first time, Mia giggled even as her mom softly moaned.\n\n\"May I tell you a secret?\" Eric asked, a smile on his face.\n\n\"Uh-oh,\" Jordan replied, mostly kidding.\n\n\"I've kind had a thing for you since the first time I saw you. At the airport.\"\n\n\"You...have?\"\n\n\"I have,\" he admitted with another little smile.\n\n\"Hmmm. Maybe I should wear cashmere more often,\" she teased.\n\n\"Flannel suits you.\"\n\n\"So do you want me to wear flannel when we...spend time together?\"\n\n\"Oh. Um...that'd be okay, I suppose.\"\n\n\"Don't worry. I won't do that to you,\" she told him before kissing him softly for maybe a second or so.\n\nThis time, Jordan saw her daughter looking, and the smile on her face told her it really was okay.\n\n\"Can I sit by you guys?\" Mia asked.\n\n\"By us? Here. Come sit between us,\" Eric said as he moved over on the bench seat.\n\nMia squeezed in between them, and when Eric and her mom put an arm around her, she was as happy as she'd been since losing her father.\n\n\"You sure this is okay?\" her mom asked as she ran her fingers through her daughter's hair.\n\n\"Mom? I miss Daddy, but I hate seeing you be sad, and you've been sad ever since he died.\"\n\nThe very grownup answer nearly made her mother cry again as she said, \"Yes I have.\"\n\n\"But now you're happy, and that makes me happy.\"\n\nJordan looked at Eric then said, \"I am happy, sweetie. I'm very happy.\"\n\nMia leaned over on her mom then said, \"Then so am I.\"\n\n******\n\nOne year later.\n\n\"Mom? Will you be okay?\"\n\n\"I'll be fine, honey. I'm just thrilled to be able to see my daughter get married. My beautiful, wonderful daughter.\"\n\nJordan somehow managed not to cry as she gave her mom a hug and thought how grateful she was to still have her after everything she'd been through. The surgery and subsequent chemo had bought her extra time no one expected her to have. But after the third chemo treatment, Jean let everyone know she'd had enough. She wanted to live the rest of her life free of doctors and feeling sick. \n\nFor the last eight months or so, she'd done just that, and until just recently, she'd almost been her former self. And she and Jordan had used that time wisely as they bonded again like they never had before with Eric being included in most of the time they spent together. After all, he'd asked her daughter to marry him on Valentine's Day, and now, just five months later, they were all together in the church Jean had attended her whole life.\n\nShe was in pain, even with the Vicodin, but nothing could take away the joy she was feeling as her daughter hugged her before getting ready to walk down the aisle. Mia was too big to be a flower girl, but she was old enough to be her mom's maid of honor, and she, too, looked beautiful in the new dress she was wearing. Had Jean felt better, she'd have taken the job, but she was thankful just to be able to sit and watch this amazing event. \n\nJordan thanked her mom for saying that then sat down beside her.\n\n\"Mom? I loved Joseph. I truly did. But had I known then what I know now, I never would have left home the way I did.\"\n\nJean knew her daughter was on the verge of tearing up and stopped her before she could ruin her makeup.\n\n\"Jordan? We can't undo the past, so talking about it is a waste of time. All that matters is that you came home. And ever since you've been the most wonderful daughter a mother could ever ask for. And you brought my granddaughter home, too.\"\n\nJean forced a smile in spite of the pain then said, \"And you found a man\u2014another man\u2014who loves you more than anyone or anything on earth.\"\n\n\"And who loves my daughter as his own.\"\n\n\"Yes. He certainly does that,\" her mother agreed. \"So let's never talk about those things again, okay?\"\n\nJordan smiled, hugged her mom again, then stood up.\n\n\"Eric may pass out when he sees you in your wedding dress, honey. You look absolutely gorgeous!\"\n\nJordan hadn't had her hair, nails, or makeup done by someone else since returning home, but she'd had all three taken care of, and anyone who didn't know her would never believe she was 42 years old.\n\n\"Mom? Don't even joke about such things, okay?\" her daughter replied with a little laugh.\n\n\"Sorry, honey. I just meant that you look beautiful.\"\n\nA moment later, a family friend stepped in and helped Jean to her seat in the front row leaving Jordan there with just the wedding planner her mother had hired. Jordan nodded to her, and she then looked out and nodded to the organist.\n\nMoments later Jordan took a deep breath then began walking down the aisle as Here Comes the Bride was played. Her only living uncle escorted her, and as they walked toward the front of the chapel, she saw Eric dressed in a tux for the first time and nearly fainted herself.\n\nShe had no idea her favorite ranch hand could look so good, even though he looked nice to her no matter what he wore. And she also couldn't believe that someone as handsome, well-educated, and as young as Eric Harmon could possibly have fallen in love with a woman her age\u2014and all her baggage\u2014but he had, and he let her know that every single day since the first time he told her he loved her.\n\nWhen he smiled at her her body began to tremble and her knees felt weak, because she loved him every bit as much as he loved her.\n\n\"Wow!\" he whispered as her uncle let her go and Jordan took her place beside her husband-to-be.\n\n\"Wow yourself, handsome,\" she whispered back, a huge smile on her pretty face.\n\nAs they exchanged non-traditional vows, both of them mentioned the circumstances that led to Jordan's return home, and while acknowledging the tragedy of her loss, both also expressed their profound gratitude for the way things worked out.\n\nJordans final words were the reason that every woman in attendance, and no small amount of men, were teary-eyed or crying as the new couple said, \"I do.\"\n\n\"It took losing everything to break my stubborn pride and force me to eat a lot of humble pie to travel down country roads to bring me back to the place I belong\u2014West Virginia. And by your side.\"\n\nEric kissed his beautiful bride before both of them turned to face the congregation which broke into applause and well wishes as the Harmons, with Mia, walking between them and holding both of her parents' hand, walked out of the chapel together as a family.\n\nTen months later, Jordan Harmon gave birth to another daughter. The happy occasion was less so because her grandmother, Jean, had gone on to be with her husband and the angels, but her daughter named the new baby girl Olivia Jean Harmon in honor of the mother she'd hurt so badly then made so happy near the end of her life.\n\nThe farm continued to prosper, and Eric hired the young man full-time who'd filled in for him occasionally in the past once Jordan was in her fourth month of pregnancy. \n\nFor the Harmons, life on the farm was always hard and involved 10-12 hour days seven days a week. But it also involved family time and was the perfect place to raise two girls, one who graduated near the top of her class a few years later and went of to West Virginia University and then into the US Air Force where she became a fighter pilot.\n\nAfter her graduation, and during her commissioning ceremony, her mom, dad, and little sister watched as Mia Conway-Harmon take the oath of office and became a second lieutenant in the US Air Force. As they did, Jordan saw a tear well up in the eyes of her still-handsome husband. They were already holding hands, but she squeezed his when she saw the unusual display of emotion.\n\n\"We did good, honey,\" he whispered to his beautiful wife as he leaned her way.\n\n\"Yes we did,\" she whispered back.\n\nEric looked at her then quietly said, \"You have no idea how happy I am you came home.\"\n\nNow Jordan teared up as she told him she did.\n\n\"Oh, I think I might have a pretty good idea,\" she said. \"All I know is I will be forever grateful for the country roads that brought me back here; back to the place where I belong.\"\n\nEric smiled then quietly sang, \"West Virginia, mountain momma, take me home.\"\n\nJordan leaned over and kissed her husband and told him how much she loved him.\n\nHe said it back as the Air Force officer who'd administered the oath asked them join him and pin the gold bars Jordan had in her purse on their daughter's shoulders.\n\n\"Shall we?\" Eric said as he helped his wife stand up.\n\n\"Nothing would make me happier,\" she said with that look in her eye that told Eric he was the luckiest man on earth thanks to her having taken the country roads that brought her back home and to him."
    ],
    "authorname": "komrad1156",
    "tags": [
        "may-december romance",
        "older woman",
        "younger man",
        "romance",
        "romantic",
        "mature"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/country-roads-5"
}