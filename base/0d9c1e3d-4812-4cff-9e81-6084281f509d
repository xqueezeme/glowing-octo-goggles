{
    "title": "Dreams of Kerry",
    "pages": [
        "It was just before midterms during fall semester of my senior year when I sat for lunch at a rare empty table in the crowded student union snack bar. I could have used my meal card, but I craved something other than the bland, tasteless, over-cooked fodder that passed for food in the cafeteria. So, I spent my last dollars on a cheeseburger, fries, and a cola. Fortunately, I'd get my meager pay check the next day and I'd have a few, too few, dollars in my pocket again. The cacophony of the snack bar faded away when I buried my nose in an engineering text while distractedly eating the fries before they got cold. \n\nTwo students sat down across from me. Their conversation quickly blended into the background noise. I had no reason to look up at them and I'm sure they expected me to pay them no heed. I read until a loud crash caused me to look up in the direction of the noise. Two students had collided, launching the contents of their trays in several directions. A coed sitting nearby let loose a stream of obscenities when she got a bath in soda. \n\nI returned to my fries and my reading until I heard a gasp followed by 'Sam? Is that you, Stammy?' \n\nMy head snapped up when I heard my old nickname. A nickname no one at school had ever heard. One which I only heard on those rare occasions when I saw kids I grew up with. I had a pronounced stutter whenever I talked to a girl. It was less pronounced when speaking with adults, non-existent when I was with male friends. Tommy Clement, in a rare moment of brilliance, had come up with Stammy, combining Sam and Stammer, to tease me after I faltered through a conversation with Paula Buttina, a pretty girl that made me exceptionally nervous. Stammy became what close friends called me. \n\nTwo women were looking at me. I didn't know the blonde. The other girl looked very familiar. But her familiarity didn't fit the setting. Everything about her presence was out of context. I couldn't make an immediate connection. She had wavy, shoulder length auburn hair that framed a pretty face. Her sapphire blue eyes were so bright it almost hurt to look at them. Her wide smile said she was clearly happy to see me. I remained clueless. \n\n'Sam!' she repeated. 'It's me, Kerry Lucas!' \n\nHearing her name caused a flood of memories to assail me. Both lunch and the engineering text were no longer of interest. I hadn't seen Kerry since her family had moved away just before we began sophomore year in high school. \n\nWe met the first day of seventh grade. I followed her with my eyes from the moment she entered homeroom right up to when she sat at the desk to my left. Her mass of red hair was unique in a roomful of blondes and brunettes. She had bright blue eyes. She was exceptionally tall, taller than me, and very thin. She had big feet that made her a bit clumsy, traits we shared. She smiled readily when she saw me looking at her. She introduced herself and asked my name. I muttered out an answer which she got me to repeat, loud enough for her to hear the second time. The homeroom teacher arrived just then, ending our initial introductions. \n\nI snapped back to the present when I realized Kerry was talking. \n\n'How are you? What are you doing here? When did you get here?' she asked in rapid succession. After a moments' hesitation, her expression darkened, 'Why didn't you answer any of my letters?' The hurt in her voice was palpable. \n\nI answered the last question first. 'I answered every letter you sent,' I responded defensively. 'Why did you stop writing?' \n\n'You did? I stopped writing after a few months because I never got a letter from you. Not one.' Her face clouded in anger for a moment. 'I'm sorry, Sam. My father must have intercepted your letters.' \n\nThat would explain it. Kerry's father, Master Sergeant Lucas didn't like me. No, that wasn't fair. Master Sergeant Lucas hated me. My having no interest in military service didn't help. Kerry and I became friends only because her mother, Dr. Lucas, liked me and ran interference. The big, hard-ass Marine was defenseless when his wife got after him. The fact that Kerry's father traveled extensively, keeping him away from home, didn't hurt. \n\nIt turned out Kerry and I had matriculated the same semester. But with over twelve thousand incoming freshmen, never running into each other was only a little surprising. She was premed. I was engineering. Core requirements often meant hundreds of students in large lecture halls. \n\nKerry took my unused napkin and wrote on it. It had a phone number and an off-campus address when she gave It back. 'I have to run to class. Call me, Sam. Call me tonight.' \n\n'Wait a second!' I called to her before she got away. I tore a piece of the napkin off and wrote down the number of the phone on my floor, my dorm and room number. She stuffed it in her shirt pocket, kissed me on the cheek and hurried off. She never introduced her friend, who just waited impatiently. I put the napkin fragment in my wallet. \n\nI returned to my lunch and textbook, then went to class. After class, I went to my room. I stretched out on my bunk to do some reading but drifted off to sleep. When I woke up the sun was low. If I didn't hustle, breakfast would be my next meal. There was a knock on the door just as I got out of my bunk. \n\n'Phone call, Sam,' the voice yelled through the door. I opened it and followed Rob down the hall to the phone next to his room. By the time I got to the phone, I had convinced myself seeing Kerry had been a dream. \n\n'Hello,' I said into the phone, expecting to hear my mother, who tried to call a couple times a week. \n\n'Weren't you supposed to call me tonight?' the feminine voice on the phone asked. \n\n'Kerry?' I asked, doubting my own ears. \n\n'Of course,' she said. \n\nI reached into my back pocket and took out my wallet. The napkin was right where I had put it. 'I was going to call after I had dinner,' I lied, though I'm sure I would have called eventually. 'I was just headed to the cafeteria'. \n\n'You actually eat that stuff?' she laughed. \n\n'Only when absolutely necessary, like when desperate to stave off starvation,' I joked. \n\n'Why don't you come over here for dinner. It won't be anything special. But it's gotta be better than the cafeteria. I think we've still got some beers in the fridge.' \n\nIt was a long walk to the address on the napkin. I could have covered the distance on my bike in about fifteen minutes. But it was gone, stolen the first week of the semester. I had no money for a cab or even the bus. \n\n'I'm not sure I can get there in time for dinner, Kerry. Someone stole my bike in September, so I'm on foot.' I said. 'Can I get a rain check for a time when I can leave earlier?' \n\n'Still riding a bicycle?' she asked rhetorically. 'I'll pick you up in your dorm parking lot. Twenty minutes?' she said. \n\n'Okay. See you then,' I said to a dial tone. \n\nI went back to my room, changed out of my rumpled clothes, brushed my teeth and hair. I was pacing the parking lot with ten minutes to spare. \n\nA faded red VW bug pulled up and beeped at me. A dented right rear fender hung loosely and flopped around when the car braked to a stop. Kerry was driving. The car was already moving when I closed the door. \n\n'Are you excited about something or just in a hurry?' I laughed. \n\nKerry looked at me like I was insane. 'Aren't you excited?' she asked. \n\nI just smiled and shook my head. \n\n'How are your folks?' I asked to start the conversation. \n\n'They're good. They live up the coast about four hours. Mom's on staff at the little hospital there. Dad is completing a tour at his last duty station, another four hours away farther north. He stays there during the week and goes home most weekends. He's retiring early next year. How's everybody in your family? \n\n'The usual. Mom's always sounds ready to tear her hair out, especially with me out here unable to get home for two years. Don't know about my father. He disappeared just before Christmas last year. My sisters and brothers are all okay. Mike quit school and got a job when he turned sixteen. He moved out as soon as he found a roommate. Dana quit school, too. She has a part time job but still lives at home. Mom says the younger kids are good but I'm sure they're almost unmanageable.' \n\n'I talked to my father this afternoon. He was not happy to hear your name. He eventually admitted he threw away your letters. I think he already knows he's in deep shit when I go home for Thanksgiving. I was pissed at you for a long time, Sam. I got into med school at Yale next year. I planned to find you as soon as I had a chance and pound you into dust for not writing to me,' she told me. \n\n'I wouldn't have blamed you. But I did write. I wrote six or seven letters after I stopped getting your letters.' \n\n'I talked to Mom, too. She said to say 'Hi' by the way. She's not happy with Dad. I'd bet anything he catches hell again when she talks to him tonight.' \n\nKerry pulled into the driveway of a small house. Her friend from the snack bar had books and a notebook spread out on the kitchen table. She looked up long enough to say hello, then gathered her books and left the kitchen. \n\n'That's Cassie. Melissa's out with her boyfriend.' \n\nI could smell baked beans as soon as I entered the kitchen. Kerry opened the fridge, took out a salad and put it on the table. I caught the beer she tossed to me. \n\n'I don't drink, Kerry,' I said, handing it back to her and getting a look of surprise. She took it and put it back in the fridge. \n\n'We've got root beer, orange juice and cranberry juice,' she told me. \n\n'I'm good for now. Anything will be okay with dinner.' \n\nCassie came back into the kitchen to set the table for dinner. The three of us made small talk while I sat at the table. Cassie was short, with straight blonde hair cut in a Dutch-boy style, gray eyes, a small waist, and a massive chest. She had a pleasant, laid-back demeanor that made her easy to talk with. \n\nThe longer I was there, the more the Kerry I knew reappeared. When she had moved away, she still had a girlish figure that had begun to mature. The end-result was alluring. Her auburn hair was shorter than I remembered, more stylish. Her blue eyes held your attention. She had continued to grow in height and was now just over six feet tall. Her breasts, though mostly hidden under an over-sized Celtics sweatshirt, were ample enough to warrant admiration and moved enticingly telling me she wore no bra. Her slim waist curved smoothly into her hips. Her legs were long, their perfect shape accentuated by the tight jeans she wore. \n\nAs we talked, it began to feel like we'd never lost touch. I wondered if we'd ever be as close as we had been. But being with her was easy. I also felt myself getting slightly aroused, though Kerry wasn't acting seductively. \n\nCassie excused herself and went to her room to study shortly after dinner. Kerry and I spent the evening just talking. When I caught a glimpse of the kitchen clock, I was amazed that it was after midnight. I had an early class in the morning that I would be mostly unprepared for. \n\nI didn't want the night to end but knew it had to. 'I have to get some sleep Kerry. I have an early class,' I finally admitted. \n\nKerry smiled, 'Of course. I'll drive you back.' \n\nThe drive back to my dorm passed in a blink on nearly empty streets. We sat and dragged out our visit in the deserted parking lot. Neither wanted our visit to end. When we finally resolved to part, Kerry leaned toward me. I leaned in her direction, expecting her usual kiss on the cheek. \n\nBut Kerry had something else in mind. Her hand reached behind my head and pulled me into a passionate kiss that held the kind of promise I'd dreamed of but never dared hope. I went from slightly aroused to fully erect instantly. She ran her other hand up the inside of my thigh and under leg of my shorts. My groin exploded in ecstasy before she broke the kiss. I tried to hide my response, but I was trembling too hard to hide my reaction. I felt myself flush in embarrassment. \n\nKerry didn't remove her hand but instead ran it up into my groin. I exhaled hard at her touch. There was going to be no hiding the massive wet spot. \n\nWhen I found the courage to look at her, she was smiling. 'I wanted to kiss you like that too many times to count,' she whispered. 'I hoped for a positive response but never expected you to get quite that excited,' she giggled. \n\n'I'm sorry. I didn't mean for that to happen,' I managed to mutter. \n\nKerry laughed light-heartedly and caressed my cheek softly. 'Sam, I waited a long time to kiss you. I wish I'd kissed you like that before we moved away.' \n\n'Why didn't you?' I asked. \n\n'I was fifteen. I wanted to. But my folks drilled into me that I was too young to be kissing anyone like that. I'm ready now. For that and more,' she said as she pulled me into another kiss. \n\n'You've never had sex?' I asked, trying not to sound incredulous. \n\n'Don't be silly,' she laughed. 'I've been involved with a guy or two since I've been here. But no one at the moment. That might change, though.' \n\nI breathed a sigh of relief. I wasn't involved with anyone then, either. \n\n'I'm really busy tomorrow and Friday,' she told me. 'I'll be too tired to go out Friday night. Can we get together Saturday morning? We can spend the weekend together.' \n\n'I'm up for that,' I assured her. 'But I do have studying to get done over the weekend.' \n\n'I have to make time to study, too,' she smiled before pulling me into another kiss before we parted. \n\nFortunately, it was late enough on a weeknight that I didn't run into anyone between the parking lot and my room. I stared at the ceiling above my bed, unable to sleep. \n\nKerry's family had moved into my home town when her father was assigned to oversee Marine Corps recruiting in the region. Her mother was an ER physician. Kerry also had a younger sister. \n\nI was a poor kid from the public housing projects. My mother was a stressed-out, no-nonsense, stay-at-home mom raising eight kids. My father was unreliable, with a habit of periodic drinking binges, a mean streak when he was drinking, and trouble holding a job. I was the oldest. My sisters were mostly noisy and annoying. I didn't get along with the older of my two younger brothers. The youngest brother was still in diapers. \n\nOver the next few months, Kerry and I became friends despite very different backgrounds. We had common interests. We liked doing anything outdoors, riding our bikes, fishing, swimming. We both liked and exceled in school. \n\nEventually. I drifted off to sleep. My morning class was a disaster. I'll just say I was asleep at a most inopportune moment. \n\nKerry and I talked on the phone a couple of times before the weekend. Saturday morning, we met for breakfast in the cafeteria. The breakfast offerings were usually good. While we ate, several of my friends joined us. Everyone seemed to take an immediate liking to Kerry. My friend Jon joined us late, and not fully aware of the dynamics at the table, was soon working on getting a date with Kerry. Bonnie leaned into him and whispered something in his ear. I don't know what she said, but he backed off before it got awkward. \n\nKerry and I left in her beat-up Bug and went back to her place. We hadn't made specific plans for the day other than spending time together. We opted to tackle our school work first and then figure out how to spend the rest of the day. We spread out in the living room and got to work. About ten minutes later, Cassie, fresh out of the shower, came into the living room wearing only the towel wrapped around her hair. \n\n'Oh, shit!' she cursed, hastily retreating the way she came. \n\nMy jaw dropped but Kerry didn't even blink. 'A show after breakfast!' she said matter-of-factly. \n\nI grinned at her and returned to my book. \n\nWhen Cassie came back out, she was dressed, expressing apologies and embarrassment. 'I didn't know you were home again, Kerry.' Kerry just waved a hand dismissively. \n\nCassie went into the kitchen, fixed some breakfast and then left, offering a quick goodbye and a wave. \n\nAfter she was gone, Kerry looked up from her text. 'She's done that before,' she said to me. \n\n'What?' I asked, not entirely sure what she meant. \n\n'Paraded into the room naked when she knew there was a guy here. She's a bit of an exhibitionist though she'd never admit it.' Kerry told me. 'One time, she gave her boyfriend a blowjob in her bedroom while we had a house full of company people for a party.' \n\n'What's so odd about that? Seems like something that might happen at a college party,' I asked with a smile. \n\n'She left the bedroom door open. You have to go past her room to get to the bathroom,' Kerry laughed. 'It didn't slow her down when a couple of guests stopped to watch and began a play-by-play of the action.' \n\nThat ended our conversation for a while. We both returned to our studies, though I found it difficult to focus. I wasn't too concerned, I'd stayed in Friday night to get ahead, just in case we slacked off. \n\nWhile I stared at my textbook, I daydreamed about a late September afternoon. School was unexpectedly canceled that day. The water main into the high school building broke. With the rest of my siblings at school, I got dragooned into helping my mother with household chores. She thanked me for the help after lunch and told me to go have some fun. \n\nI called Kerry and hastily arranged an afternoon of fishing. We rode our bikes and met at Mercale's Pond, a small lake that offered good fishing and a secluded area with a sandy bottom for swimming that few people knew about. It was a hot day. We were both overheated and sweaty when we met up. After chaining our bikes together on a tree, Kerry led the way, skipping over several good fishing spots, going directly to the swimming area of a long-abandoned summer camp, where we also fished sometimes. \n\nI was busy digging through my tackle box when I heard a splash behind me. I turned around, expecting to see ripples where a big fish had jumped. Kerry's clothes were in a pile, including her bra and panties, and Kerry in water up to her neck. I couldn't see any of her naked form but knowing there was a naked girl thirty feet away was enough to cause an immediate erection. \n\n'Are you coming in?' she asked. 'The water feels great!' \n\nI was hesitant to strip down while she watched. 'Don't look, Kerry.' \n\nShe laughed. 'Relax, you don't have anything I haven't already seen.' \n\n'What?' I asked in surprise. \n\n'You, goof. My mother's a doctor. She has books full of pictures in her library. You don't think I've looked at them?' \n\nI hesitated for a moment, then gave in. I stood with my back to her and stripped off my clothes. I could feel her watching me. To join her in the water, I had to turn toward her. There'd be no hiding my erection. I took a deep breath and ran into the water, not stopping until I was in chest deep water. She was right. The water felt great. \n\nWhen I started to swim toward Kerry, she objected. 'Not too close, Sam.' \n\nWe stayed in the water for about an hour, swimming around, staying cool but keeping at a distance from each other. The water cooled my erection. We knew we'd couldn't stay in the water forever. But it remained an unspoken topic. When the time came, Kerry strolled out of the water without hesitation. I figured if she could, I could, so I followed close behind, acting much more confident than I actually felt. \n\nWe sat at opposite ends of a fallen log while the sun dried us, trying not to be too obvious about our respective curiosity. Kerry sat covering herself as best she could. I was more successful, having less to hide. As the sun warmed me and I watched Kerry closely, blood flow to my penis increased. Before long, I was fully erect again and completely embarrassed. ",
        "I thought Kerry would be upset when she saw my erection but, her curiosity piqued further, she relaxed. When her hands dropped to her side, I got my first look at a naked girl. Not much more of significance happened that afternoon. We didn't discuss our nakedness but rather talked about the same stuff we usually did. But there's no denying that each of us was observant of the other. Once we were dry, we both dressed. \n\nAfter a short ride together, we had to go in opposite directions.\n\n'I guess the fish just weren't biting today,' Kerry said when we stopped where she turned off to go home.\n\n'Yeah. Guess we just wasted our time going fishing today,' I said shyly.\n\nKerry gave me one of her customary cheek kisses. 'I don't think it was a total waste of time,' she said over her shoulder as she rode off toward home. \n\nThat was as close to intimacy as we'd ever come. \n\nI returned to the present when Kerry suggested we break for lunch. I dropped the book I had been staring blindly into and agreed. We went into the kitchen. Kerry pointed out a cabinet where plates were stored and then at one where they kept glasses. Kerry opened the fridge, took out a bowl of macaroni salad, an assortment of lunchmeat, lettuce, and tomato. Mustard, mayo, and a bottle of root beer soon found their way to the counter. We assembled our sandwiches side by side, periodically bumping into each other as we worked and joked in the little galley kitchen. \n\nAfter lunch, Kerry said she'd done enough studying for a while and suggested a walk to a nearby park. We took along a six-pack cooler with some ice and sodas, and a knapsack with chips, a blanket, and a Frisbee. We spent an hour tossing the Frisbee then found a quiet spot under a shade tree. \n\nWe talked about plans after graduation. We both regretted not having crossed paths for over three years. Kerry demeanor reinforced what she had suggested that first night. She was interested not in just renewing our old friendship but taking it in a new direction. \n\nAs we lie side-by-side on the blanket, our faces gradually moved closer together until our lips met. I was never shy in public with previous girlfriends since arriving at university. But this felt different, too intimate to be done in public. Before long we packed up and went back to Kerry's. \n\nWhen we arrived, there was another car parked alongside Kerry's in the driveway. I was awed by the Porsche convertible and stopped for a minute to admire it. \n\n'Melissa's home. That's her boyfriend's car.' \n\nWhen we went inside, it initially seemed like no one was home. Sounds from down the hallway soon told us that Melissa and her boyfriend were spending quality time in her room. \n\n'I swear, that girl is insatiable,' Kerry laughed. Then she pulled me down the hallway toward the sounds. We passed the bath. 'That's Cassie's room,' Kerry said as we passed a bedroom. The next door was closed, apparently Melissa's room. The passionate moans, creaking springs, and banging headboard were louder now. \n\nKerry pushed me into her room. The room was dark, the blinds down and curtains drawn. Only a narrow slit of sun on the carpet provided light. She wrapped one arm around my neck and kissed me hard. The other pushed the door closed. When she broke the kiss, she pushed me back gently. \n\n'Sam. Look at me,' she said softly. 'I've never done this on a first date. Or a fifth date for that matter. But we've already known each other a long time, even if we haven't seen each other in years. You seem like the same guy that was my friend. A friend I hoped would eventually be more than a friend. If you don't feel the way I thought you felt about me, don't let me do this.' \n\nI had mixed feelings. For about a tenth of a second. 'Kerry, I think you'll be one of the most important people in my life forever. Even if I never see you again. I was very attracted to you then and still am now. I think I made that a bit too clear the other night. But we can't know the future. I do know I have no intention of not seeing you at every opportunity until you tell me to go away.' \n\nKerry looked thoughtful for a moment. When she kissed on the cheek and backed away, I was sure my honesty convinced her to go no further. She turned away from me, took a hair band off her dresser, and tied her hair back. Then she turned to face me again.  \n\nHer hands went to the button at the bottom of her shirt. She opened the first button. While I watched intently, she finished unbuttoning the shirt. It was open just enough that I could see a line of skin that included her navel, the point where the cups of her bra joined, and the barest hint of the swell of her breasts. She pushed the shirt off a shoulder and shrugged. The shirt slipped off the other shoulder, down her arms and fell to the floor. \n\nI took a step toward her, but, without a word, she took a step back. She wanted me to watch. \n\nThe bra she wore was diaphanous, barely obscuring her breasts. They were fuller now, well- proportioned to her form. The nipples pointed slightly upward. She drew her hand across her breasts lightly. I watched in awe as the dark circles contracted and hardened at her touch. The hand that had trailed across her breasts pulled a bra strap off her shoulder. Her other hand pulled the strap off the other shoulder. \n\nThe cups remained where they were. She turned her back to me and reached behand her, unfastening the hooks. The bra seemed to float slowly to the floor, as if gravity had somehow been lessened. Her hands moved to the waist of the slacks to unbutton and unzip them. They fit closely, so she moved her hands to waist above her hips and pushed them down as she wriggled her hips slightly. Once past her hips, they slowly slipped down her legs. \n\nAs Kerry stepped out of her slacks, her roommate Melissa chose that moment to wail loudly. The rhythmic thud against the wall also stopped suggesting her boyfriend had joined her. I was so focused on Kerry's disrobing that I had forgotten they were in the next room. Their denouement introduced some levity. Kerry and I both couldn't help but stifle a laugh. \n\nKerry turned to face me, still wearing the smile remaining from the laugh Melissa's orgasm had elicited. The front of her panties was made of the same gossamer material as her bra. There was line where the material was slightly darkened, damp from her arousal. She stepped toward me and took my waist in her hands, pulling herself against me. Kerry was just a little shorter than my six feet two inches. She rested her head on my shoulder and softly kissed my neck as she held herself against me. My arms wrapped around her shoulders and held her gently. \n\nI was still fully dressed. My cock was hard. Kerry couldn't help but feel it pressing against her. This was a completely different experience than my previous encounters with the girls I dated at school. There had only been a few. But the preludes to sex had always followed the same script - fevered petting and kissing while we each frantically removed the others' clothing. \n\nI trailed my fingertips down Kerry's spine. Her hot breath warmed my neck where her lips traced light kisses. I slipped my hand inside her panties and caressed the top of the cleft between her buttocks. When Kerry shivered slightly, I realized I was also shaking in anticipation. I turned my head and kissed the side of Kerry's face. She lifted her head from my shoulders and met my lips, her tongue eagerly seeking mine. \n\nThe skin on my chest and back felt hot in the cool air of the bedroom. Kerry had somehow managed to unbutton and remove my shirt. She had just finished unbuckling my belt when I picked her up and carried her to the bed only a few feet away. I gently laid her on the bed and knelt above her. Kerry kissed me again, more feverishly this time. I broke the kiss and trailed my lips down her chin and neck to her chest. \n\nI repeatedly kissed the flat between her collar bones and her breasts. My hand trailed along her side as I kissed her upper chest. She breathed out a sigh as my fingertips left a trail of gooseflesh as they slid down her rib cage. Kerry entwined her fingers in my hair and pushed my head down gently toward her breasts. I opened my lips and planted a soft kiss on a hardened, erect nipple. She exhaled hard at the first contact of my lips to the nipple. When I lightly flicked my tongue on the hard, little ball atop the nipple, she pulled my head to her breast to increase the contact. When I sucked on the nipple, she moaned loudly. \n\nDespite the heat of the moment, I heard a female voice in the hallway exclaim, 'Oh my god! Kerry's got a guy here.' A male voice shushed her and a few moments later I heard the throaty Porsche engine come to life and accelerate away. \n\nAs I gently teased Kerry's nipple, her hips writhed against my leg. I moved to the other nipple. I glanced at it briefly. It was erect, topped by a distended ball that was hard and darker than the surrounding areola. I lightly flicked my tongue against it, just enough to wet it slightly then blew softly on it. Kerry mewed softly as the areola shrunk and the nipple distended further. \n\nKerry's hands were still entangled in my hair. Her hips rocking her groin against my thigh. I trailed my tongue down Kerry's breasts, pausing briefly at her navel before continuing further south. I stopped at the top of the bikini briefs and caught the elastic band between my teeth. I pulled it up just a tiny bit before releasing it again. It snapped softly back into place. Kerry gasped softly. \n\nI continued further down the panties, dragging my chin across the soft, flimsy fabric. Kerry's hips trembled in frustration, no longer having anything to rub against. I spread her legs gently and slipped off the side of the bed, pulling her to the edge. I was on my knees, facing the now wet panties covering Kerry's sex. The auburn curls were slightly darker than the hair on her head, matted and moist with her arousal. \n\nI kissed the top of her cleft and trailed my lips along her slit, kissing softly as I went. I felt Kerry's upper body moving. When I looked up at her, she had propped her head up on pillows to watch. Her eyes caught mine and held my gaze. \n\nThere was a heat in her eyes I had never seen before. Close as we'd been, we'd been too immature to engage in activities that would cause these sensations. I briefly had mixed feelings about whether I should continue. The girl I'd known had been my closest friend. I had been heartbroken when she'd moved away. I briefly feared she'd leave again suddenly. What would I do then? \n\n'Is something wrong?' Kerry asked, breaking through my sudden reservations. \n\n'No, Kerry. I was just taking a moment to look at you. I'm so happy to see you again.' \n\n'Please don't stop. I've waited so long to be with you,' she whispered.\n\nMy qualms evaporated with those words. Whatever happened would happen. This time if we parted, the decision wouldn't be forced on us by others. \n\nI returned my attention to Kerry. I pursed my lips and blew softly on the spot where I knew her clitoris hid between her labia. I heard Kerry draw in a sharp breath and exhale slowly. I kissed the spot where I had just blown and stuck my tongue out to push the flimsy material into her slit. She shivered as I ran my fingers along the elastic on either side of her panties. Gooseflesh raised on the insides of her thighs. \n\nI slipped my fingers under the elastic and spread her labia slightly. I used my tongue to push the soft fabric into the gap onto her clitoris. Kerry rotated her hips, pushing herself against my face. I opened my mouth and caught her flesh between my teeth and nibbled gently. Kerry, gasping, grasped my hair and pulled my face into her. \n\nI pulled the panties aside, exposing her to direct contact with my lips and tongue. This time when I pushed my tongue forward, there was nothing between us. It was difficult to push my tongue into her. The opening moist with her arousal but resisted entrance. I moved my tongue away from the opening and flicked it against her clit. Kerry cried out at the contact of my tongue. Her thighs came together, capturing my head and squeezing. I sucked her clit between my lips and pressed my flattened tongue against it. \n\nKerry's reaction was more intense than I could have expected. Her hips writhed back and forth rapidly. Her legs squeezed my head tighter. Her upper body shook violently. Her hands tightened their grip on my hair. I briefly feared I'd have bald patches when she finally released her hold on my hair. \n\nAs long as Kerry held my head tightly, I ran my flattened tongue up and down her clit. And each time my tongue moved along her clit, she cried out. With each swipe, her cries grew more intense, more desperate, less inhibited. I moved my tongue from her clit and forced it into her opening. The penetration broke the dam. Kerry howled and released a small flood of fluids as her body spun out of control. Her legs released their grip on my head and she pushed my head away from her groin. \n\nKerry rolled onto her side and curled into the fetal position. Her hands covered her sex and pushed hard as her whole body convulsed through the last throes of her orgasm. Her breath came in gasps as she shook. Her eyes opened as she gradually regained control of her senses and her body. \n\nKerry looked at me with an expression I couldn't read. She smiled briefly and then began to giggle. 'You've still got your pants on!' she exclaimed. \n\nI smiled. 'I was preoccupied. I didn't even realize I was still dressed. Want me to take them off?' I asked. \n\n'No. I want to. It'll be like opening a present.' \n\nI got off the floor and sat on the bed next to Kerry. She reached over and pulled me to her. The air conditioning made the room feel cool. Kerry shivered as she clung to me. I pulled the blanket from the bottom of the bed to cover her while we held and fondled each other. \n\nKerry ran her hands over my chest as she warmed, playing with my nipples until they hardened. She kissed me softly and licked my lips, finally pushing her tongue into my mouth. She held my head between her hands while she kissed me. \n\nWhen she broke the kiss, she gazed into my eyes. 'No one ever did that before,' she whispered softly. \n\n'Never did what?' I asked curiously, not sure I had done anything special. \n\n'No one has ever licked me down there before,' she said softly. 'I liked it. I hope you don't mind if we do that again. Soon.' \n\n'I could be persuaded,' I smiled. \n\n'I think it's time you were more appropriately undressed,' she said as she tugged at my belt. \n\nKerry began kissing me again as she worked my pants off. My cock ached. It had been hard too long without attention. Once my belt and pants were undone, Kerry reached through the opening in my jockeys, grasped my cock and pulled it free. Her firm grasp felt good. \n\nOnce freed, Kerry slid her hand slowly up and down my length, her touch so soft it would have been barely noticeable anywhere else on my body. When she reached the glans, she enclosed the head in her hand and rubbed her thumb around the opening at the head. She cooed in delight as she lubricated the head with the first traces of precum. \n\nWhen she reached into my pants and pulled a leg of the jockeys aside to she could cup my testes, I had to get free of my remaining clothing. Kerry released the various parts she held as I pushed my pants and jockeys down. Once past my knees, I freed one leg. Kerry took hold of me as soon as my cock was freed of its confines. \n\nWhile Kerry softly stroked my cock, my hands sought her breasts. I held my palm over each mound, relishing the feel of the pebble-hard nipples against my palm. I massaged her breasts softly, enjoying the firmness and weight of them in my hands. Kerry hummed softly as I played with them. As I gently kneaded her breasts, she gradually increased the hold she had on my shaft. Her other hand continued to gently caress and tease my sac. \n\nKerry pushed me onto my back as she sat up. She spread my legs apart and sat between them, facing me. 'I want to watch while I play with your cock,' she whispered. 'I want to watch you cum. See your face when you do. Is that okay?' she asked. \n\nI nodded in mindless agreement, only half comprehending what she said. The soft touch of her hand moving up and down my shaft focused my attention on the indescribably pleasurable sensations building in my groin. \n\nI watched as Kerry focused her attention on my hard cock. Her hands moved up and down my cock softly, in a random, disjointed stroke instead of a rhythmic beat as she watched her hands intently. She took a moment to glance at me from time-to-time but primarily focused her attention on the fondling that was arousing me almost beyond tolerance. She would periodically stroke in a steady rhythm, but just when it seemed I might erupt. she returned to the random, unpredictable motions that built my arousal but denied release. \n\nAfter some time, she watched my face intently, knowing I was approaching the point where I would erupt uncontrollably. When I eventually began begging for release, Kerry stroked my cock rapidly. When I pushed my cock up, she backed off the pressure on my cock, delaying my release. When I calmed again, she resumed her stroking. \n\nJust when I thought I could stand no more, Kerry began stroking my shaft rapidly using a firm grip. Her fingertips lightly scratched the underside of my scrotum. Chills ran up my spine. The intensifying sensations in my groin heralded my imminent release. The combination sent my body into convulsions. I pushed my cock up involuntarily. My scrotum exploded in ecstasy as the ejaculate began its journey up my shaft. A geyser shot straight up and fell back down onto Kerry's hand. She pulled my cock toward her and directed the next jet toward her breasts. It struck between her breasts and streamed up her chest, neck and onto her chin. She leaned forward, bringing her face closer to my cock. The next ejaculate struck her lips, nose, and cheek. \n\nWhen the last ejaculate oozed from the end of my cock, she leaned down and took the head between her lips. She circled the head with her tongue teasing my cockhead while she sucked hard. I erupted once again, coating her tongue which increased the ecstatic sensations I was experiencing. When I was spent, Kerry sat up and continued to softly play with my cock. \n\nI was shaking. I looked up at Kerry in amazement. It had been the most intense orgasm I had ever experienced. She was spreading the cum on her chest and neck across her upper chest. Her lips and lower face were coated with my seed. I was too breathless to speak. \n\nKerry laid her head on my chest and entwined her leg with mine. She used a hand to play with my pubic hair and the cum caught in it and on my belly. We held each other like that for a while, enjoying the feel of our warm bodies against each other. \n\nKerry sat up and got off the bed. She pulled my hand, 'Come,' she said, 'I want to take a shower.' \n\nI followed her to the bathroom, admiring her shapely buttocks and long, lithe legs. Her naked body moved gracefully. I tried not to chuckle but Kerry heard me. \n\n'What?' she asked as she looked over her shoulder smiling. \n\n'Nothing,' I said.\n\n'Something was funny,' she said feigning annoyance. 'Is my backside amusing for some reason?'\n\n'Well, I was enjoying the view.' I replied. 'But it can't say it's laugh-worthy.'\n\n'So, what was funny?' she lightly struck the bottom of her fist on top of my head.\n\n'I was admiring you and remembering something from long ago,' I smiled. 'You're so graceful now. It's hard to believe you were such a clutz at times.'\n\n'You once said I didn't chew gum because I wouldn't be able to walk if I did.'\n\nI burst into laughter. I'd forgotten I told her that. Kerry now looked like she actually was annoyed.",
        "'I'm sorry. You were so tall and had such big feet. But it didn't mean I loved you any less,' I told her.\n\n'I don't remember anyone mentioning you and Baryshnikov in the same sentence back then,' she said with a grin.\n\nI put my hands up in surrender. 'Guilty. I had big feet, too. I eventually grew into them. I didn't get to see you do the same.'\n\nKerry turned on the water and adjusted the temperature. We both got in once the temperature was to her liking and she activated the shower.\n\n'I remember an unexplained crash when we were riding back from the town park. You were lucky you landed on that guy's lawn and didn't get hurt,' she said as she soaped my back. 'That wasn't one of your more graceful moments.'\n\nI laughed again. 'Oh, there was a reason I crashed. You just never figured it out.'\n\n'What was that?' she asked.\n\n'I was riding behind you, to your left. The strap of your bathing suit came off your shoulder and I got to see your boob. That's why I crashed. I was to your right and on the ground when you stopped. You had already fixed your top by then.'\n\n'It never occurred to me that you saw that,' she said, as she turned me around to wash my front. She was smirking now, rather than smiling.\n\nKerry finished soaping me down while the conversation lulled for a moment. When she soaped the inside of my thighs, I felt my cock begin to harden. Kerry stood up and handed the soap to me, turning her back to me. I soaped up her backside from her neck to her feet. I turned her around and soaped her front, paying particular attention to her breasts. It didn't take Kerry long to figure out my progress had stalled. She gave me a look that suggested I should move on. I squatted down and soaped her hips, legs, and feet. \n\nI stood again and soaped up my hands thoroughly, getting a good lather built up. I looked her in the eyes and reached between her legs and began to rub my palm against her. Kerry moaned softly as she gazed into my eyes. But after a moments' hesitation, she twisted and pushed my hand away. \n\n'Not right now, Sam,' she said with a sly smile. \n\nWe rinsed off and got out of the shower. After drying ourselves, we went back to Kerry's room to dress. We had just closed the door when the Porsche returned. A moment later we heard the front door shut. Kerry and I finished dressing and went out to the living room. \n\nA short guy with black hair had his back to me as he flipped through the channels on the television, settling on a baseball game. The woman sitting on the couch looked up when Kerry and I entered the room. \n\nMy jaw dropped. Melissa and I had dated for much of freshman year. She broke up with me, which wasn't entirely unexpected. Eventually I learned from one of her girlfriends that she had dumped me because she met a rich guy she liked. She had often complained that I never had any money. Restaurant dinners, spring break vacations, and numerous other activities just weren't in my budget. It wasn't like there wasn't anything to do together. The university provided numerous free activities, including theater, concerts, movies, and nearly free admission to sporting events. \n\nKerry started to make introductions, but Melissa greeted me before Kerry could introduce us. \n\n'Hi, Sam,' she said, simply. \n\nI responded in kind. 'Hello, Melissa.' \n\nKerry smiled, 'You know each other, already?' \n\n'Yeah. We met freshman year,' I answered, saying no more. The moment felt a little awkward. \n\nMelissa's boyfriend was a good-looking guy, with black hair and ice-blue eyes. He was short, but well-muscled. He was also very friendly. He offered his hand, 'I'm Caleb, but everybody calls me Colt.' \n\n'I shook his hand. 'Sam, as you already know. Nice to meet you.' \n\n'Mel suggested we come back and invite you guys back to my place. We're having a few folks over tonight. We're going to grill steaks and hang out around the pool. Mel's pretty excited that Kerry has a boyfriend, now,' he said with a smile. \n\nBefore I could answer, Kerry responded. 'Thanks, Colt. But we already have plans for the night. If it's okay, maybe we'll can stop in late?' \n\n'Sure. You know you're welcome any time, Kerry,' Colt smiled and winked at her. \n\nI didn't know we had plans but didn't say anything. My initial impression was that Colt seemed like a nice guy, but I was okay with not being around Melissa, who looked relieved that Kerry had declined. Kerry didn't miss the relief on Melissa's face. \n\nWe made small talk for a few minutes before Melissa pointed out that they still had to finish shopping before their guests arrived. \n\nOnce they were gone, Kerry looked at me curiously. 'Okay, what's the story, Sam?' Kerry asked. 'Melissa looked pretty uncomfortable when she saw you.' \n\n'Melissa and I dated freshman year. We broke up. One of her girlfriends told me Melissa dumped me for a rich guy she liked.' \n\n'Sounds like Melissa. I like her, but she's a gold-digger. Colt pays her rent and spends a fortune on her. You should see her closet. She has nicer clothes than anyone I know. My roommates aren't perfect but who is? They both clean up after themselves. They pay their rent and utilities on time. They're both friendly and low drama. So they have a few personality quirks. I've had worse roommates.' \n\n'Your roommates are an interesting pair,' I laughed. 'An exhibitionist and a gold-digger. Have you developed any quirks I need to know about?' I teased. \n\n'Yeah, one big quirk,' she grinned. 'I'm looking at it.' \n\nI smiled. 'So, what are our plans for the night?' I asked. \n\n'I thought we'd get dinner and catch the movie at the university theater. Maybe come back here afterward.' \n\n'Okay,' I said haltingly, thinking about what dinner out might do to my budget. Kerry picked up on my hesitation. \n\n'Sam, I think know your financial situation. I don't expect you to spend all your money on dinner. In fact, how about I treat tonight?' \n\nI hesitated again. 'Kerry, that's . . .' \n\n'Trust me, Sam. Mom keeps watch on my spending and makes sure I stick to my budget. As a result, I've learned to be pretty frugal. Besides, I feel like celebrating a little.' \n\nI gave in. \n\nWe went out for an early dinner. Kerry drove across town to an area I wasn't familiar with. She parked in a large, nearly full parking lot. I hadn't seen any restaurants in the immediate vicinity. \n\n'We've got a short walk. There's no place to park where we're eating,' she told me. \n\nShe led the way to a pedestrian-only area a short walk away. We walked through the crowded, brick-lined pedestrian mall lined with shops and exited the other end. Another short walk took us to a stainless-steel truck about the size of a UPS truck on a small lot. We ordered from a menu posted on the side of the truck. Nothing on the menu cost more than a couple dollars. \n\nPeople occupied most of the dozen or so tables with umbrellas. We staked claim to a table. The previous occupants had been a bit sloppy, so we took a moment to clean it before we sat. A voice called Kerry by name when our food was ready. \n\n'They know me here. Melissa and Cassie, too. We eat here all the time. It's actually cheaper than cooking at home.' \n\nThe taco platter I ordered was big enough to satisfy any college guy with a bad case of the munchies. And the food was really good. \n\nAfter eating we stuck with Kerry's plan. The movie was a cheesy comedy that offered a few laughs. When we left the theater, it was still much too early to call an end to a Saturday night. We made our way back to Kerry's. \n\n'We've got the house to ourselves,' Kerry told me when we settled on the couch. 'Melissa spends weekends with Colt, not that I blame her. He's got a really nice place. I was surprised they were here when we came back from the park. Cassie took a bus home for the weekend. She's from a little town about two hours away. She'll be back Monday afternoon.' \n\nWe sat together on the couch, not really paying attention to the TV, Kerry snuggled up against me, my arm around her. Being with her felt as natural as breathing. I was amazed at how quickly we had become comfortable with each other again. And how much further that comfort zone had already expanded. \n\nKerry began playing with the buttons on my shirt. Not undoing them, just playing with them. I used the hand I had wrapped around her to gently knead the trapezius muscle under my hand. Her soft hum told me she liked it. She didn't hesitate when I suggested she turn her back to me and remove her shirt. I used both hands to massage the muscles of her neck, shoulders, and upper back. When they felt loose, I massaged the muscles on either side of her spine. \n\nKerry leaned back to lie down. When her head came to rest on my lap, she reached up and pulled me down into a kiss, one hand on my upper chest. I was a bit surprised when she pushed me away, encouraging me to sit up. As she gazed up at me, she took my hands and placed them on her breasts. \n\n'Massage my chest,' she said softly. \n\nI squeezed her breasts gently, I could feel her nipples were hard, even through the bra she wore. I moved my hands from her breasts and worked on the muscles above her breasts. Kerry slid the straps off her shoulders and worked her arms out of the straps. She tugged the bra around until the clasp was between her breasts. She unhooked the clasp and pulled the offending garment free, dropping it on the floor. I resumed massaging once the bra was gone. \n\nShe closed her eyes while my hands rubbed, gently kneaded, and trailed softly across her chest, breasts, and abdomen. I took the time to study her body closely in the much better light of the living room. \n\nShe had hundreds of small, but distinct freckles on her upper chest. The freckles faded into a light arc across the top of each breast. Her areole were light brown ovals. They were topped by darker, reddish-brown buds hardened into miniature eggs standing on end. There was a light brown, trapezoid-shaped birthmark on the underside of her left breast. Her abdomen was taut, without a hint of flab or fat. Her navel was a round, dark hole that disappeared into her belly. \n\nKerry eyes remained closed while I massaged the front of her upper body. Her breaths were even, relaxed. Her face the picture of relaxed contentment. She lifted her arm until her hand found my face. Eyes still closed, she traced her fingers down my cheek and along my jaw line. When her fingertips reached my mouth, she traced the shape of my lips with them. \n\nI took each nipple and rolled them gently between my fingertips. Kerry hummed softly and arched her back slightly. I covered her breasts with my hands, relishing the feel of the hard buds against my palms while I squeezed gently. \n\nKerry rolled toward me, forcing my hands to move away from her breasts. She tugged at my shirt and undid enough buttons to expose my lower abdomen. She reached behind my back to pull herself toward me. A kiss on the hard muscles of my abdomen was followed by a chill up my spine as she lightly trailed her tongue along the waist of my pants. She nibbled at the skin then opened her lips and sucked softly. \n\nMy hard cock pressed against my pants. Kerry had to feel the lump pressed against her cheek. Kerry reached up and pulled my face toward her. When our lips met, hers' parted. Her tongue pushed between my lips seeking mine. I pushed my tongue against hers and followed when her tongue retreated. Once she had my tongue between her lips, she sucked on it. I held her close to me, not wanting to let go. Not wanting the kiss to end. But Kerry pushed me away and sat up. \n\nShe got to her feet and turned her back to me. She looked over her shoulder at me as she headed down the hallway toward her bedroom. That brief glance convinced me to follow. \n\nI got off the couch and hurried after her. When we reached her room, she turned toward and pulled me into another kiss. Once our mouths were engaged, her arms released me, and she began taking off my clothes. I was soon naked except for the pants and jockeys piled above my feet. I clumsily stepped out of them as I reached for the button on Kerry's jeans. Once I had the waist undone, I lowered the zipper. \n\nKerry took hold of my hand and guided it down her belly, under her panties. When she released my hand, she pushed the jeans and panties down. My fingers found their way through the pubic hair, moist with her arousal, into the cleft between her legs. My finger slid past her clit, between the slippery labia. I tried to gently slip a finger into her. \n\nKerry pushed me toward the bed until I was forced to sit. She stepped back only long enough to step out of her jeans and panties. She leaned into me and initiated another kiss. She pushed me back on the bed until I was on my back. She followed. She straddled me, pressing her body against mine with my erection pressing against her abdomen. \n\nWe moved up the bed until we were both on it. Kerry stood up on her knees above me. She grasped my cock and held it upright, rubbing the head against the split between her labia. She held my eyes with hers as she moved the head back and forth several times. I was gasping as the head of my cock moved back and forth across the slick folds. \n\n'Sam,' she began, 'I want to feel you inside me tonight. I've wanted this since we met up in the snack bar. I want you to relax. Let me do this my way. Please be patient. I know how aroused you must be. But I need to go slowly.' \n\nI was a little confused as I listened to her. What was she talking about? I wasn't going to just hurriedly push into her until I was satisfied. \n\n'Okay,' I said in a hoarse whisper. 'I want to go slow, too, Kerry.' \n\n'I don't want to go slow, I need to go slow.' she whispered. \n\nAs Kerry guided my cock into position, I still had no idea what she was telling me. Kerry held me in place as she lowered herself against my cock. The pressure on the head built but it still didn't enter her. I looked up at Kerry's face and saw it was contorted into a grimace. Suddenly, I felt the pressure against the head of my cock lessen as it finally pushed into her. But she went no further. \n\nA flash of insight caused me to reach up and place my hands under Kerry's buttocks, holding her in place, not allowing her to lower herself more. \n\n'You've never done this before, have you?' I asked, concerned about the obvious pain she was in.\n\nKerry took a deep breath but didn't speak. She shook her head to answer. \n\n'You said you'd had sex!' I said, exasperated. The head of my cock was still inside her. Her face didn't show as much discomfort. \n\n'I've gone as fr as I was wiling to go,' she said. 'But I never went this far before. It just didn't feel right with those guys.' \n\n'I'm not sure about this, Kerry,' I told her, dumbfounded that I was actually telling her that maybe she shouldn't have sex with me. \n\nKerry's weight on my hands increased. I felt myself slide in a bit further. Kerry's face belied the discomfort she must have felt. Suddenly, I couldn't hold her up anymore. Kerry slid down until my entire cock was buried in her. Her lips formed a circle and a look of relief showed on her face. Kerry didn't move, just stayed in place, trying to adjust to her vagina being filled. \n\nIt felt great to be inside her. But I still had reservations. 'Kerry, I'm not wearing any protection.' \n\n'It's okay,' she said softly. 'I've been on the pill since I got here. My mother isn't just a doctor. She's also a realist. She knows what goes on in college.' \n\nKerry lifted her body slightly, no more than an inch, then lowered herself again. Her eyes were closed. I couldn't tell what she was feeling from her expression. Kerry repeated her slight upward motion several more times. Gradually, she increased the distance she traveled up my shaft, moving slowly. \n\nSoon, Kerry was lifting herself up so that only the head of my cock remained inside her. The expression on her face changed. Her eyes barely open, she now seemed to be enjoying the stiff shaft sliding in and out of her. She maintained her slow upward lift, followed by a slow, slide down my shaft. Each time she came to rest against me, she uttered a soft 'Uh.' \n\nThe feel of Kerry moving slowly up and down my cock was rapidly pushing me past the point where I could avoid orgasm. I forced myself to ignore the building pressure in my groin. I tried everything from conjugating verbs in Spanish to multiplying large numbers in my head to distract myself, \n\nKerry began moving up and down faster. Just slightly at first, but gradually building speed until she was landing hard against me on each downward slide. I found I could no longer distract myself from the building pressure and the tight, hot, wet flesh sliding up and down my shaft. Kerry was breathing hard. Her face a mask of pain and pleasure combined as she landed on me with a thud each time she drove herself down my shaft. I saw that Kerry was breathing erratically. Each downward slide ended with a hard landing. I knew it was only a matter of seconds before I could no longer avoid the inevitable. \n\n'Kerry. I'm going to cum. I can't . . . Ooooohhhhhh!' \n\nI felt my scrotum contract as my orgasm began. I held Kerry's hips and drove up into her hard, unable to control myself. I pulled back and drove into her again just I felt as a stream of ejaculate rocket up and into Kerry's hot, tight inner sanctum. A chill ran up my spine as I drew back and drove into her again. This time, my cock slid into her easily, her vagina slick with my seed. \n\nKerry uttered a soft cry and began to shake. When I saw her reaction, I reached over and rubbed my thumb against her clit. The first touch of my thumb set her off like she'd been struck by lightning. Kerry grabbed my hips and pushed down against me hard. She used her grip on my hips to hold herself against me while her vagina spasmed and her body shook. \n\nKerry cried out so loudly my ears hurt. I was pretty sure the people in the next house, all of thirty feet away, must have heard her. Not that I cared. Kerry held herself against me, quivering as she rode her orgasm. As I watched, I saw her entire body was covered in gooseflesh. Her nipples were so hard, I wondered if they if they hurt. \n\nKerry fell against me. She kissed my neck and shoulders while still quivering. She held me tight as she rode the sensations down. I could feel my cock, still inside her, softening and shrinking as the blood that fueled my erection flowed back into my body. When I finally popped out of her, Kerry groaned softly in disappointment. Kerry's kissing slowed and came to a halt, but she still remained on top of me, holding me tightly. Neither of us wanted to let go. \n\nAfter holding each other for a while, Kerry rolled off me, straightened her legs, and stretched. I slid an arm under her neck, reached over her shoulder and gently cupped her breast. Kerry rolled on her side and rested her head on my shoulder. The hand I had cupped her breast with came to rest on her shoulder. \n\n'That was incredible,' she said softly. 'What hurt so much at first felt so good in the end.' \n\nI smiled and hugged her, pulling her tightly to me. When Kerry started to shiver, I realized the room was cool. I pulled the sheet and blanket over us. We stayed there, her body curled against mine. Gradually, we drifted to sleep. \n\nWhile I slept, I dreamed of the first hot summer day I had spent with Kerry just after school ended for the summer. It was also just a few weeks before either of us knew she was moving away. We'd ridden our bikes across town, meeting up in front of the all-male technical high school I attended. Kerry attended the public high school just a few miles away. We rode together from there to the town park for a day of hanging out and swimming. \n\nMy father was in the midst of one his rare responsible periods and had given me some money that morning. We were able to get an early start and planned to spend the entire day at the lake. We arrived at the town park just as the gate was opened. Kerry had a small backpack with some snacks and her bathing suit. We staked claim to a picnic table under a large maple that would provide shade for the entire day. ",
        "Kerry excused herself and took her backpack and headed off to change. I stayed behind and secured our bikes to the end of the table before sitting down with a book that been assigned for summer reading. Kerry was gone much longer than I expected. When she returned, she was wearing the coverup she usually wore when she wasn't in the water. \n\nKerry also had summer reading assigned so she took her book out of the backpack and we sat next to each other while we read. A bit unusually, she leaned against me while we read, with her left hand resting on my leg. I looked over at her when I felt her hand come to rest on my leg. She smiled back at me meekly, then returned to her book. \n\nAfter we had read for a while, it had started to get hot, so we decided to go for a swim. It was about fifty yards to the water. We grabbed our towels and Kerry took off like she was shot out of a cannon. I chased behind her, easily catching up before we got to the spot where we would drop our towels. \n\nWhen Kerry pulled her coverup off, I was stunned. She had always worn a one-piece bathing suit. Today, she wore a bikini for the first time that I'd ever seen. Kerry's body had matured significantly from the previous summer when we'd gone skinny dipping at Mercale's Pond. The bikini top had a slight swell because her breasts were more developed. From behind, her shape was no longer that of a young girl. It had taken on the beginnings of an hourglass shape. \n\n'Are we going in the water, or you just going to stand there?' Kerry asked. \n\nI had been staring at her without realizing it. She was blushing, feeling self-conscious about wearing a bikini for the first time and my obvious gawking. I snapped out of it and smiled abashedly before heading for the water. \n\nWe spent the day at the lake. I did my best to avoid embarrassing her again. She made it easier by wearing her coverup whenever we weren't in the water. But I knew what was under it and I couldn't get it out of my mind. \n\nOff and on, friends came by and spent time with us at our table as the day passed. None stayed long. Mostly they had come with their mothers and siblings. They had to leave when their mothers told them it was time to go. Kerry and I rode our bikes back to where we had met up that morning. We stopped briefly to say goodbye before going our separate ways. \n\nKerry leaned toward me for one of her patented cheek-kisses. But before she kissed me, she said, 'I'm glad you liked my new bathing suit. I hoped you would.' She rode off without another word and without looking back at me. I stood, straddling my bike until she disappeared around the next corner. \n\nWhen I woke, without opening my eyes I could feel the sun on my face. I didn't feel Kerry next to me. For a moment, I thought I was in my dorm. The sun woke me very morning. But I was facing the wrong way for the sun to be in my face. I felt Kerry stir and was relieved that I wasn't in my dorm. It hadn't all been a dream. \n\nI rolled over to face Kerry. She opened her eyes when she felt the bed move. Her smile told me she was happy I was still there with her. I kissed her lips softly. My cock was already hard. I reached down and guided it between her legs, enjoying the feel of her warmth, hoping she would be as interested in repeating the previous night as I was. \n\nWhen our lips parted, Kerry smiled at me. 'I wondered if you'd ever do that,' she whispered. \n\n'What do you mean?' I asked. \n\n'I talked to my mother, Friday night. I told her we were spending the weekend together.' Kerry told me. \"I also told her I was pretty sure we'd be sleeping together.' \n\n'What?' I responded in surprise. 'You didn't.' \n\n'I did. I also told her I was pretty sure I was going to have to initiate it if I wanted to have sex. You know what she said?' \n\nI wasn't sure what to think. Kerry told her mother she was going to have sex with me? For a moment, I imagined her father showing up at my door. 'No, what?' \n\n'She said it was fine if I initiated it the first time. But if you didn't take the initiative the next time, you weren't worth the trouble,' she told me with a giggle. \n\nWe only left the bed that day for bathroom runs and food. \n\nWe've been together thirty-two years now. There were a few rough patches. Mostly while Kerry was in med school and during her residency. Kerry's father still doesn't like me, but we manage to somehow tolerate each other. He loves his grandchildren and dotes on his great-grandchildren. But the main reason we've managed to come to a strained peace - he really doesn't like Kerry's sister's girlfriend."
    ],
    "authorname": "carrteun",
    "tags": [
        "college",
        "masturbation",
        "intercourse",
        "female-friendly",
        "oral",
        "oral sex",
        "first time"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/dreams-of-kerry"
}