{
    "title": "14 Hours Pt. 06",
    "pages": [
        "-Will-\n\nKori is taking the entire Lili is a psycho thing as well as she could considering. I'm looking over our timeline while Kori is reading 'I Am Legend' with Samantha, and they're making a lot more progress than I am. I have nothing to go off of. The only unexplained clues are the tube of chapstick and the hundred dollar bill. I don't have a thing on either of those. \n\n\"You got a pen?\" Samantha asks, shaking her pen that ran out of ink. I point to my desk drawer, her opening it and shuffling a few papers I had on the top. \"What's this?\" \n\nI look over at Samantha who's holding a sheet of paper I printed out, \"Adoption reunion?\" Samantha asks. \"You're adopted?\"\n\n\"Yeah,\" I say and take the paper and shove it back into the drawer. \n\n\"Really?\" Kori asks and walks over to me. \"Do your parents know you know?\" \n\n\"No,\" I say, Kori grabbing my hand. Her first instinct is to immediately comfort me if there is any chance this legitimately upsets me. She's too good, and all I imagine is Lili raining hell on her. I don't deserve her. \n\n\"Did you find your birth parents?\" Samantha asks and I shrug. She pulls the print off out again and sees that I did. \"This is close, like really close.\"\n\n\"Yeah, it's like a block away from your house,\" I say and I see a lightbulb turn on in Kori's eyes. \n\n\"What's that address?\" Kori asks and sits at my computer and opens Google maps. It pins the address with a large yellow thumbtack. \"What's yours?\" She asks Samantha and a moment later it pins down as well. I could walk from one to the other in minutes. \n\n\"What direction did I come from?\" I ask Samantha who thinks back and and points at my birth mothers house.\n\n--\n\n-Kori-\n\nI don't know how to help Will. It's one thing to be adopted, it's another thing to find your birth mother and forget you met her. It's hard enough starting that conversation the first time. \n\nWe pull in front of her home, which is a quaint two story house with a small plot of land and white picket fence with a gate. It's almost idyllic. Will takes in a deep breath before kissing me and exiting the car and walking passed her open gate and to the door. \n\n\"You two are entertaining,\" Samantha says from the back seat.\n\n\"It hasn't been boring since I met him that's for sure,\" I say, Samantha exiting the vehicle and lighting a cigarette while leaning against the car. \"Can I...\" I start to ask before she interrupts me.\n\n\"I get it, you beat cancer and it's time to live and try everything, but I'm not giving a cigarette,\" Samantha says and I smile. \n\n\"Did you and Will really have sex in the bathroom?\" I ask, and her expression is very indifferent. As if I was asking if water was wet. \n\n\"He was 'meh' overall, but considering he was a virgin, or so he remembered, he had potential. Plus he's hung like a horse.\"\n\n\"Yeah he is,\" I say and laugh that I did. \"Sorry I don't really talk like that.\"\n\n\"You really do make it hard for me not to maul you,\" Samantha says with a grin. \"You are guys are disgustingly cute though.\"\n\n\"Lili is actually really scaring me,\" I say and Samantha huffs.\n\n\"Fuck her.\"\n\n\"She said she would give him something he couldn't resist. I need to be better than whatever that is,\" I say to her, Samantha smiling and flicking her cigarette into the road. \n\n\"I've seen the pictures, titless wonder has nothing you on. But if you're looking to double down, I can be the double down.\" \n\n--\n\n-Will-\n\nI knock on my birth mother's door and wait. What if she's not even home? I hear a chain get moved and the door creak open. A blonde woman, a little shorter than me appearing about her mid thirties was behind it. We have the same long oval face and eyes. \n\n\"Will, what's wrong?\" she asks, opening the door wider to let me in. I guess we've met.\n\n\"Nothing,\" I say and try to force a smile. This is my birth mother, who has been down the road from me my entire life. \"Just nearby.\"\n\n\"Come in, I just made coffee,\" she says and I enter her home.\n\nStraight in front of me are the stairs, wooden with a thin carpet running through the center. I removed my shoes to not damage the living room carpet we walk over to go to the kitchen to our immediate right. There is a hallway just before the carpet leading to the dining room, completing a circle. To the left is a sitting room that connects to a bathroom. I pause in the living room, looking at the pictures on the mantle above her fireplace. She's married, and seemed to have had a good happy life. No other children pictures are on the walls, and I don't know if that makes me feel better or worse. \n\nI hear the clinking of cups in the kitchen. \"Cream sugar?\" \n\n\"Black's fine,\" I say and look around for a seat. A couch and two chairs, and yet all I want to do is stand. She comes back in a minute later and hands me a cup that has pictures of her and her husband on them. I wonder if her husband is my birth father.\n\n\"This is going to sound really weird Holly,\" I say, I watch her face, seeing if using her name and not Mom hurt her. I can tell it stung a little. \"I don't remember meeting you.\"\n\n\"What?\" Holly asks and sits on her chair. I sting her again.\n\n\"I took adderall to stay up all night and study, and it was actually ativan and I blacked out,\" I say and she looks at me, trying to figure out what I'm saying. \"I don't remember the entire night.\"\n\n\"Nice to know you wanted to find me twice,\" she says with a light smile. Holly finds something positive out of it. I don't get that from her obviously. Unfortunately optimism isn't genetic. \n\n\"I'm trying to remember that night, do you know where I was before I got here?\" I ask, and she thinks back.\n\n\"You showed up with lipstick all over your face. You were very popular at a party apparently,\" she says with a laugh. I wonder if the lipstick on my face and on the hundred dollar bill are related. \"Like I said that night, I always wanted to meet you.\"\n\n\"Why didn't you?\" I asked. \"I was down the road the entire time.\"\n\n\"We had a closed adoption. Carol still sent me cards and pictures over the years anyway. I still have all of them,\" she says and I take a sip of my coffee. \n\n\"This is supposed to be the part where I shout at you, and demand to know why you didn't want me. That's not fair, and I know that was one of if not the hardest decision you ever made,\" I say and she placed her coffee on the table next to her. \n\n\"You basically said that last time too. I was proud of how mature you were about it, and I know you didn't get that from me. They were good for you.\"\n\n\"Sometimes I feel like I'm more of a project to them,\" I say and placed the coffee down, \"The pressure about school is unreal. I get it, it's important, sometimes I just want to breath though. I'm not half as smart as them, and I think they forget it's literally not in my blood.\" \n\n\"I was fifteen when I had you. As much as I wanted you, I couldn't give you a life. Not a good one anyway. Your father fled the moment I told him, even I barely remember him. I married my husband five years ago,\" Holly says.\n\n\"Any other kids?\" I ask, not seeing any pictures to suggest I had blood siblings.\n\n\"No, though my husband wants them. He didn't even know I had a baby until a year ago. What right do I have to have a baby when I gave you up?\" Holly asks, looking down and away from me.\n\n\"You didn't give me up. You gave me a chance,\" I say with a smile, \"You did what was best for me. I'm not going to lie and say I'm not upset. You were down the road the entire time. Don't let me be the reason you don't.\"\n\nI finish talking with her and leave with the girls a half hour later. We agree to stay in contact. Samantha drives down the road and turns toward the freeway which passes by our town. It's the fastest way to mine and Kori's houses, though in the other direction from her own. A minute onto the freeway Kori suddenly sees something. \n\n\"Turn around. U-Turn!\" Kori shouts, and I jump from the steering wheel.\n\n\"What?\"\n\n\"Just do it,\" Kori says and I turn the car around, \"Pull in here.\"\n\nWe pull into a parking lot right off the freeway, me pulling into a spot and switching to park. \"Why are we here?\" \n\n\"Does that seem familiar?\" Kori asks and point at a sign at the building in front of us. The building is called 'Pucker Up', the sign above the structure having pin up girl posing with puckered lips and a wink. A banner below that but above the double doors says 'Thursday, Amateur night, 100$ prize.' On the banner is also a picture of a one hundred dollar bill, with a red pair of lips on it."
    ],
    "authorname": "CaffeineFetish",
    "tags": [
        "romance",
        "series",
        "humor",
        "reunion",
        "mystery"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/14-hours-pt-06"
}