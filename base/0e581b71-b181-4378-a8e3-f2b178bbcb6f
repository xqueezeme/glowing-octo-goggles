{
    "title": "Any Chance We Could Ch. 25",
    "pages": [
        "This is a work in progress and chapters will be submitted at regular intervals. This is a continuing series, no chapter is written to stand alone. Enjoy, your positive comments are welcome.\n\nFriday, October 19\n\nKatrina and Ashley were the first ones up, showered, dressed and were downstairs by 7:30. Cindy wandered into our bedroom in a pair of scrub pants, barefoot and topless. \"Good morning, sweetheart,\" greeted Veronica.\n\n\"Thanks for the rescue last night Veronica, can you run me back to my apartment sometime today to get some clean clothes? I don't work again until the four to midnight shift on Sunday.\"\n\n\"I'm just getting ready to shower. Would you like to join me?\" I grinned.\n\n\"Of course, that's kinda why I came in here.\" said Cindy.\n\nAfter a very pleasant shower full of touching, fingering and kissing with Cindy having a finger fuck induced orgasm, we dried off and got dressed.\n\nI came downstairs with Cindy still clad only in the scrub pants and topless. Katrina went upstairs and came back with a t-shirt and a pair of low heeled slides saying, \"I hope these fit.\"\n\nOver breakfast I reminded the girls that we were going to the club for dinner tonight and asked Cindy to join us. She said she would love to go. Katrina told her it was fun and they always wore dressy clothes. Cindy said she didn't have any dressy clothes. Veronica announced that she and Cindy would go shopping after the meeting with the contractor. When Cindy said she didn't have money to spend on clothes, Veronica smiled, saying that it would be her treat. \n\n\"Ashley take my car, Cindy can drive the one you're driving, if she needs one. We're probably going to lose the Lexus soon, so Mom'll rent a couple of cars today.\" I said.\n\n\"Wow, can I put the top down?\" asked Minx.\n\n\"As long as you put it up when you're parked in the lot, sure.\" I replied.\n\n\"Did you girls sleep well?\" asked Veronica. \n\n\"Very well, didn't even get to make love. Katrina and I were exhausted from the time with Carol and Erin. Cindy said she was wiped out too, so we cuddled and feel asleep until the alarm woke us.\"\n\n\"Katrina, why are you wearing hose to school today?\" I asked out of curiosity more than anything else.\n\n\"I have a presentation to make to a class with a particularly irascible male professor. I thought the hose, three inch pumps and this short skirt couldn't hurt.\"\n\nVeronica smiled, \"That's my girl. Sex on campus, can't beat it. Unless he's gay it'll certainly enhance your presentation.\"\n\n\"Girls I bought a supply of stockings yesterday at Sak's, so come and get what you need from my closet. If you take the last pair of any kind, let me know. Do either of you need anything for tonight?\"\n\nThey both said no, except Ashley asked if she had bought any seamed taupe garter stockings.\n\n\"Why, do you have a grumpy professor too,\" I asked.\n\n\"No, just want to get your cock up when I get home this afternoon. Good reason?\" she grinned.\n\n\"You could just flip your skirt up and accomplish that, or even give me one of your prolonged kisses, but I'll look forward to your hose clad legs this afternoon,\" I laughed.\n\nThe girls left and Cindy went into the den to watch the morning news. Dave arrived a few minutes before nine and we settled around the dining room table to review his documents and discuss the bid. \"Based on what we've already discussed, I can do what you ask for $785,000,\" he began. \"But I suspect it's higher than you expected.\"\n\n\"Actually it's not. I know quality materials and workmanship come at a price. I don't want corners cut. As I said in the email, I want the best quality and workmanship. How about adding fifty thousand to that for contingencies such as some basement finish, additional water heaters for the bathrooms, that sort of thing,\" I replied.\n\n\"Well, for budget purposes I could do that, but I'd rather do it via change orders that you approve. I don't believe in using change orders to charge more and to pad profit. I'll give you more than fair prices and rates on every change order, and I'll show you the invoices for materials. Going with written change orders'll protect both of us from any misunderstanding and I'll not add anything that hasn't been approved. Do you agree?\" he asked.\n\n\"Sure, you're in the business, and I trust your judgment. So do a lot of your former clients, I've found out. Your reputation is sterling. One guy said that you pulled out several items on a project that were unnecessarily put in by the designer and saved him over ten grand. He says he's using you to advise his firm on several historic buildings they're renovating. I'm glad you were the contractor to respond to my busted house. So I agree, let's do it that way.\" I replied.\n\nFor the next hour and a half we agonized over the details of the contract and the preliminary drawings. I noticed several times that Veronica was glancing at him with more than passing interest. Once when he stood to stretch his back, her eyes were drawn to his crotch. I silently laughed and thought now there's a topic for further discussion.\n\nAt some point Cindy walked through on the way to the kitchen and I introduced them. \"Goodness, you have the loveliest young ladies around here. You're mighty attractive young lady,\" he told her.\n\nCindy lowered her eyes momentarily then raised her head and looking him straight in the eye said, \"Thank you. You're a nice looking man yourself. I appreciate the compliment.\"\n\nAs she continued into the kitchen I watched Dave try to check out her slim ass and hips but the pants were too loose. He dropped his head back to the work at hand and we initialed all the changes and additions. \"I think these changes might add another $15,000, so can you set up an account at a title company for $800,000 that I can draw on as materials are brought on site and for weekly labor billings?\" he asked before adding, \"The last twelve percent'll be withheld until you return and sign-off on the work.\"\n\n\"That reminds me of a businessman who was having trouble calculating the net amount due on an invoice after deducting twelve and three quarters percent. He called is secretary in and said, 'You're a college graduate and I need some help. If I gave you $21,765 minus 12.75 percent, how much would you take off?' The secretary thought for a moment and replied 'everything but my earrings.'\" Veronica was looking Dave right in the eye as she told the story. We all laughed, two of us a bit more heartily than the other. \n\nWe agreed on which title company and I assured him I could fund it by the middle of next week. He agreed, and asked if Wednesday'd be a good time for him to bring a decorator over to begin going over finishes and for us to sign the title disbursement documents. Both of us assured him the sooner the better and because of the size of the escrow I'm sure that a title company rep'd be at our disposal to witness signatures.\n\n\"I'll have my architect start today, I'm going directly over there from here.\" he said as he stood and again I noticed a momentary glance at his crotch and chest from Veronica. As he walked over to put his coffee cup in the sink her eyes focused for as long as his back was turned on his ass. \n\n\"Tell you what Dave, I know you're going to be working on a tight schedule to finish by the time we get back from our honeymoon. Feel free to start any exterior work or demolition whenever you feel it's necessary. You've agreed to completion five weeks from tomorrow. Just be sure that until we leave a couple of days before our wedding on the 16th that we don't lose access, water, heat, or power until then, and that we're not disturbed by workmen before eight in the morning and after seven at night. I'll put a little sweetener on the table. If we can walk in to a completed interior and 98% complete exterior on November 24th, I'll deed the Oak Haven lot to you.\"\n\n\"Scott, that's a $400,000 lot. You're sure?\" he asked.\n\n\"I have every confidence in you sir, and I know you'll use only subs who have the same work ethic you have. I expect to meet you at the title company on the morning of November 26th and execute the deed to you. The value of the lot is not to be used to fund change orders, those'll be separately agree on. This is merely a completion incentive,\" I firmly said.\n\n\"I expect to be there as well and expect that we'll be on time and at or below budget. Thank you for your confidence,\" and he extended his hand to each of us. As he shook Veronica's hand I noticed he swept his eyes down over her breasts. She noticed it as well and I noticed a very tiny catch in her breath as she looked him in the eyes.\n\nAfter he left, I chided her, \"Think he's hot don't you?\"\n\n\"Scott, what a thing to say,\" she blushed.\n\n\"Oh, come on, you looked at his crotch more than once, it kind of took your breath away when he fondled your tits with his eyes, and you intimated you'd like him to see you in just your earrings,\" I said laughing.\n\n\"Yes, there's that. But enough for now, I've got to get that sexy waif in the other room some clothes. I'll get the eviction notice when we go over to her apartment. I'll also buy her a cell phone at the mall and put her on my plan. Anything in particular you'd like to see her in and take off of her? Huh, super stud,\" she asked laughing.\n\n\"Something subtly sexy for tonight, heels of course, V-string panties, I'm sure she could go braless, and a garter belt, you seem to have the stocking angle covered. Don't forget to get her items you'd like to see her in and taking off too. If she needs more casual clothes, buy a bunch of those as well. You have the debit card, don't you?\" I asked.\n\n\"You sexy, sexy man, I love you so much. You are so kind and generous,\" as she threw her arms around me and passionately kissed me.\n\n\"I'm going into the office for awhile. Do you mind if I take Grace to lunch.\" I asked.\n\n'Heavens no, but thanks for asking, are you going to a motel or hotel to eat?\" she laughed.\n\n\"Come on, lover. This'll be the first time in probably 20 years that I've bought her a meal, or at least a meal for just the two of us. She deserves to know what's going on with Citi deal and I intend to explain it to her,\" I replied.\n\n\"Well as long as all you do is fondle her tits and ass with your eyes, it'll be okay. She's an attractive woman, what is she 52, 53?\"\n\n\"I think so, yeah, that sounds about right. I'm going to call her and see if she's already made plans with Bea down in trading. Have a nice shop and I'll see you sometime this afternoon. I love you\" I said as I turned to walk upstairs to put on dress slacks and cotton shirt.\n\nVeronica walked into the den, sat with Cindy and discussed what she intended to do today.\n\nWhile I was upstairs I called Grace on my cell and invited her to a nice lunch at an Italian restaurant in walking distance of the office. She giggled and accepted but said she had to do something first and wouldn't be ready to go until 12:30. A later lunch was fine with me. \n\nI left after kissing both of the ladies and managed to grope Veronica's ass a bit. When I got to the office, Grace wasn't at her desk. Stan's secretary was in her place. Grace had asked her to mind the phones and that she'd be back by 12:30. Emerson had left earlier, 'goin' caving again' she said she thought she heard him say. I smiled and went into my office and shuffled a few papers around. I had my head down before I realized that Grace had returned. I smelled some wonderful perfume that made me raise my head to see that the source was Grace.\n\nFor almost as long as Grace has worked for both Emerson and me she had been the practical office dresser. Her common attire was a crisp blouse, usually fully buttoned with a broach or something at her neck along with nicely fitted pants and flats or low heeled shoes. But right now, she had on a silver satin blouse, rather snug fitting with a deep neckline and wide lapels that showed a generous amount of her chest. A dark A-line skirt that stopped just above her knees, hose and 3/12 or 4 inch high heeled strappy sandals. \n\n\"Hi, good lookin', goin' my way,\" she said as she leaned against the door frame holding a jacket the color of her skirt over her shoulder. \n\n\"Oh, my God,\" I said. \"Someone's taken Grace and left this beautiful woman in her place.\"\n\nShe walked around to my side of the desk with the kind of ass swing that comes from high heels, sat with one cheek on the edge of the desk and spread her legs enough that I saw her stocking tops. \"Ready?\" she asked.\n\nIt took everything I had not to reach up and caress her inner thighs. Just the sight of her firm, toned stocking clad thighs caused an immediate erection. \"Happy to see me? I'll bet those aren't batteries in your crotch are they.\" She said in a low voice that couldn't be heard outside the office door. I was surprised by what I was seeing and hearing from Grace.\n\n\"Grace,\" I gasped, \"No that sure as hell isn't a battery. You look beautiful and sexy. For me? Or are you trolling for a mate?\"\n\n\"It's all for you Scott. I'd include Emerson, but he went home to get laid. He told me how Veronica 'enlightened' Hazel. I'm so glad you called. I had to run home and get out of my 'office uniform' hoping you'd have this reaction. You want to put your hands under my skirt don't you? Yes, I have garter hose on. You'd like to caress these tits too, wouldn't you? Yes, the bra is sheer. Can't you see my nipples tenting the blouse?\" Grace stood, spreading her legs a bit wider as she slid off the desk, brushed down her skirt and handed me her jacket. I held it up as she put her arms into the sleeves which caused the fabric to tighten across her erect nipples. As she adjusted the lapels, she bent slightly and pushed her ass lightly against my crotch. Saying, \"Oops, and oh my!\" in that same low voice.\n\n\"Grace,\" I asked as we entered a vacant elevator car, \"I don't understand.\"\n\n\"Do you understand that as of the next week or so, I won't work for you anymore? That it means if you'll have me, I'd like to play with you and Veronica in your new giant bed.\"\n\n\"How'd you know about the bed?\" I asked.\n\n\"Think. Who does all your banking?\"\n\n\"Oh.\" Was all I could gasp. Her subtle perfume was intoxicating me. \n\n\"Besides, last week when I called you at home I had an interesting conversation with Veronica before she called you to the phone. Since then we've chatted and emailed each other. She's a most interesting woman,\" she smiled as we walked toward the building door. \n\nWe walked the block and a half to the restaurant with her arm through mine. I knew those swinging hips had to be attracting a lot of attention. \"I made a reservation, I hope you don't mind,\" she said as she bumped a breast against my arm.\n\nAs we walked in, the hostess greeted us, and Grace said, \"Grace Powers, I have a reservation.\"\n\nThe hostess checked her book and said, \"Oh yes, the small private dining room. Please follow me.\"\n\nWe followed her into a small room with a single table set for six. \"Just press this when you want service,\" she smiled as she laid a small pager on the table next to the menus and closed the door as she left.\n\n\"How hungry are you? Can we talk for a bit before we order?\" she asked.\n\n\"Sure,\" I replied still confused.\n\nGrace took off her jacket, undid a button on her blouse and hopped up on the table to sit facing me. \"Sit here in front of me, and drag those other two chairs to either side you.\" As I sat, she put a foot on the seat of each chair next to me spreading her legs in front of me. She bounced up a bit and hiked her skirt to the tops of her stockings. \"See, they're garter stockings, can you see my bush kind of escaping the V-string?\" she laughed.\n\nI was enjoying this new side of Grace. Though she was past fifty, she was aging very, very gracefully. As she smiled I noticed a just few winkles at her eyes. I found this new Grace to be erotic and sensuous. Her pussy hair was dark which answered one question, her hair was bleached blond.\n\n\"Don't worry, I'm not going to ask you to fuck me, not here and now at least, and for your information Veronica knows what's going on. I've talked to her several times since the Citi thing came up. I have an open invitation from her to play on Bryce Field once the deal closes. Working for both you studs for the last however many years you've had this company has been a delight and a challenge. I remember when it was just the three of us. You've always paid me well, supported me in decisions I've made, but made me go home almost every night and masturbate just thinking about the two of you,\" she smiled and undid another button.\n\n\"Grace, I apologize, I never knew.\"\n\n\"I know you didn't, so don't apologize. You both did the right thing and kept focused on the business. If I had successfully seduced either one or both of you it wouldn't have been good for you, Emerson, or the three hundred or so employees who now work for you. I suffered in silence, enjoyed seeing you both every day and took my fantasies home with me. Your advice has helped me make some very good investments and accumulate substantial wealth. I won't work for anyone else, and the day the deal closes I'll announce my retirement. I've talked to Veronica about an alternative and here's what we've come up with. I want to be your part-time personal assistant with benefits. I want to be able to make love to any of the four of you whenever you want me. I want to help both of you maintain a semblance of order when you're received the vast sums of money you richly deserve. I'd like an office where I can see any of the four of you on a regular basis. I don't want to be paid in money, I can live comfortably on my investments. For decades I've desired to be someone's fuck toy and you and Emerson have often been in my fantasies. Learning about Bryce Field and Veronica willing to share has emboldened me to tell you this. By fringe benefits, say at least a fuck every week, or maybe more often if any of you desire. Now take your eyes off my pussy and look at me,\" she concluded. \n\nI did look up, but also ran my fingers up the inside of her thighs all the way to her wet pussy.\n\n\"Careful, I promised Veronica that I wouldn't let you go beyond there without her. You can look, but not touch,\" she gasped.\n\nI pushed her thighs slightly further apart and moved my face closer to her steaming pussy and deeply inhaled her musk and perfume. \"You expect me maybe to say no?\" I was able to choke out. \n\n\"Move back, let me stand,\" as she slid forward and put her feet on the floor. \"Well,\" she asked with her lips about an inch from mine.\n\n\"Yes, of course, Grace,\" said as our open mouths met and a very long and passionate kiss ensued. We finally broke the kiss, and she said, \"I love you Scott, and I love Emerson. You've both spoiled me for any other men. I've told Veronica this and I know that you two don't have secrets from each other. I'll happily be your fuck toy who'll do whatever you desire. So be as upfront with your decision with Veronica as I hope Emerson will be with Hazel. Veronica says that it may be awhile before I can safely fuck Emerson, but Veronica has invited me over next week for dinner, hot tub, and a good fucking. Let me unbutton, go ahead caress them for a minute. Hmmm, that's so nice. They're as firm now as they were when I was thirty. Having no other men in my life in any significant way for over fifteen years has given me plenty of time to keep my body toned,\" she laughed. \"And I've collected and used an obscene number of sex toys,\" she smiled.\n\nWith her blouse open I grasped her firm breasts through her bra. Each breast was certainly a handful, and I enjoyed them for a few minutes. She then buttoned her blouse, handed me her jacket which as I helped her put on she again backed into my cock and I kissed the side of her neck right at the source of her fantastic perfume fragrance.\n\nAs I moved the chairs back into their original position, Grace repaired her lipstick, and pushed the pager button. When the waiter came into the room, she brightly asked, \"Have the other four gentlemen shown up?\"",
        "The waiter of course said \"No.\" She asked if we could then go ahead and order in here or should we move to a table in the main part. He left and quickly returned, saying that here was fine. Grace sat next to me, we ordered and my hand pretty much stayed on top of her skirt right at the garter clasp. During lunch we discussed where we could 'office' her. I decided I needed to give Dave a call to discuss possibilities. One thought I had was to extend or widen the garage and have an office there including a bathroom. With large windows the scenery would be beautiful.\n\nWe shared a light kiss, and walked back to the office. I left her at the elevator and walked down to the garage. Grace told Stan's secretary that since both Emerson and I were gone, she was leaving in the next hour.\n\nI called Dave and after a lengthy discussion we generated our first change order for the office attached to the garage. He suggested a separate building with three rooms that would start about twenty feet behind the garage, overlook the pool and be connected by a covered breezeway to the four-season pool and stairs leading to the studio above the garage. By the end of the day he emailed me with the construction costs for a paint ready interior of $45,000 and I agreed and returned it so he would have a copy of my approval for his records. \n\nWhen Veronica and Cindy stopped at her apartment Veronica got the eviction notice, called her office to get the contact number of the realtor instead of the lawyer on the notice. She called him and assured him that he could drop by her office on Monday and pick up a check for the past due amount and the next two months which would close out the current lease. She then called the office back and told Agnes the amount and payee for the check and that would be picked up Monday. \"Have him sign the usual receipt,\" were her instructions.\n\n\"Get some clothes to bring over for Saturday and Sunday. By the way, I think you left that sexy yellow bikini at my house. And tell your roommate that if she wants phone service she needs to pay the bill because I'm adding you to my cell contract. I hope that by the end of December we can find you another apartment. So you can tell her that the lease is paid through then, but you'll be leaving then,\" Veronica firmly said. As Cindy led her into her bedroom to get some clothes Veronica couldn't help but notice the paucity of items.\n\nCindy threw her arms around Veronica and kissing her said, \"I love you so much. I love you for caring about me. Thank you, thank you very much. I don't mean to be so much trouble, I really don't.\"\n\n\"It's just money, sweetheart. Scott and I are both interested in your well being and want to do as much as we can to make your life a bit easier so you aren't looking over your shoulder for another bill collector. You may drive one of our cars until other arrangements have been made. Do you owe any repair money on your busted car?\" Veronica asked.\n\n\"Yes, about $400, and they'll need half of that next week. I don't know where I'll get it all and was hoping that they'd accept $140. I need to focus on a credit card bill,\" sadly replied Cindy.\n\n\"Scott and I'll take care of it. Give the name of the shop,\" said Veronica. \"What else are you on the hook for?\"\n\n\"My roommate, the one who moved out last month, 'borrowed' my credit card and maxed it out at $3,000. She promised to pay it last month but didn't do it. One more charge went through and now I'm paying an over limit charge as well late fees. Most of the next pay is going get that below the limit. It's overdue now and I don't know for sure what's happened to her,\" continued a doleful Cindy.\n\n\"Give me the last bill and we'll take care of that as well. I'll talk to Scott about you taking her to small claims court. You can't allow her to get away with what she's done. What else?\" firmly asked Veronica.\n\n\"I borrowed some money from Mary Claire for the bikini. I still owe her that, plus about another three or four hundred. Shirley lent me two hundred for part of the repair bill, and Connie advanced me three hundred. I can't believe I got myself into this mess,\" continued Cindy close to tears.\n\n\"Got in a real pickle didn't you sweetheart. Make a list of everyone, I mean everyone to whom you owe money and I'll pay them all,\" said Veronica.\n\n\"Oh, thank you, thank you Veronica. I'll pay back everything even if it takes me ten years. Are you mad at me?\" said Cindy with a tear running down her cheek.\n\n\"Mad? Hardly. Disappointed, no. Just concerned about you. You've become a rather special friend to my family. I feel badly that these debts have been hanging around your neck, I know how debilitating that can become. Scott and I can fix it, so we will. Don't worry about paying us back. Focus on starting and building a savings account. Get together some work clothes for Sunday and let's go shopping,\" smiled Veronica tightly hugging and then deeply kissing Cindy.\n\nBefore they left the apartment Veronica had Cindy call the credit card company. As she dialed Veronica dug out her checkbook from her purse. After Cindy gave the customer service person permission to speak to Veronica about her account. Veronica stated that she was willing to pay the outstanding amount in full right then via direct debit to her checking account if they'd waive the telephone payment fee and the latest penalty fee. She explained what the roommate had done and that she was working with Cindy on a small claims case. The bank agreed and Veronica gave them her routing and account numbers for the funds to be withdrawn from the joint account we'd opened earlier in the week. Before they ended the call our address was given as Cindy's new address. \n\nVeronica then called the garage and used our credit card to pay what Cindy owed.\n\nAs they walked back to the car, Cindy said, \"Thank you again, I don't know what else to say except that you're beginning to feel like the family I've never had.\"\n\nWhen they pulled up outside Macy's, Cindy said, \"This is probably the first time I've ever shopped here, I'm usually at one of the discount stores. Are you sure about this?\"\n\nTaking Cindy by the hand they began power shopping for basic everyday needs. Skirts, tops, shorts, shoes, socks, bras, panties, pantyhose, fall and winter weight outer wear, long pants, and anything else that struck Veronica's fancy. Cindy was easy to fit, with her slim figure she could wear standard sizes. As the pile of clothing grew on the check counter, the sales clerk's eyes kept getting wider and wider. At the final ring, Veronica had spent almost $6,000. Cindy's eyes were as wide as the sales clerk's at the final total and was speechless. Veronica said to the clerk, \"I expect you and those two unoccupied clerks over there to help us carry this to my car.\"\n\n\"You bet,\" said the clerk, \"and thank you for shopping at Macy's.\" The three clerks, Cindy and Veronica got it all to the car with two trips by the clerks. Veronica thanked them and gave each a $20 bill.\n\nFrom Macy's they drove to Sak's, Cindy was stunned when they pulled into the garage and walked to the Sak's elevator. \"You need a nice dress for tonight. My family always looks nice, even when naked, so let's look.\"\n\nAgain leading Cindy by the hand they headed for the evening wear department and chose a silver knee length sheath dress, low neckline and deeply scooped back. Cindy tried it on, braless, and it fit her perfectly. With the gown bagged and over her arm they headed for the lingerie department and left there with two dozen pair of thong panties, two garter belts, two dozen pair of stockings and thigh highs, a dozen pair of pantyhose, two dozen lacy and sheer bras and a slip to wear under the dress. As those items were being handled at the register, Veronica added four negligees. \n\nWhile riding down the elevator to put the recent purchases in her trunk, Veronica remarked, \"You need shoes too don't you.\" \n\n\"Yes, I guess I do,\" sheepishly replied Cindy.\n\n\"Get in the driver's side of car for a minute. I need to do something,\" said Veronica as she got in the passenger side. After closing the door, Veronica hiked her skirt up a bit and to Cindy's surprise pulled her panties down and off and put them in her purse.\n\n\"Well, that's interesting,\" said Cindy.\n\n\"Go into the trunk and find one of your new short skirts and tops, get back in this side, take off the scrub pants and your panties, and put on the skirt and a matching top. We're going shoe shopping,\" smiled Veronica.\n\nThey rode the elevator back up to the main floor and Veronica led Cindy down to the shoe store where Sharon worked. As they approached the front door Veronica saw that Sharon was busy, looking down, and probably up her customer's skirt. They sat in a row facing the back of the store, with their legs crossed. Another clerk approached them, but Veronica said, \"We'll wait for Sharon, she knows me from earlier in the week, thanks,\" smiled Veronica.\n\nHearing Veronica's voice, Sharon looked up and a broad smile crossed her beautiful face. \"I'll be a few minutes, if that's alright,\" she said.\n\nAs they sat waiting and talking in low voices to each other, Veronica told Cindy with a wink to follow her lead when Sharon started to fit them. After about fifteen minutes, Sharon left the register counter and sat on a fitting stool in front of them. \"Hi, Veronica, so nice to see you again. Who's this and how may I help you?\" she asked with her brilliant smile.\n\n\"This is Cindy, a special friend of ours. She's almost shoeless after a small fire at her apartment. She needs flats, slides of three or four heel heights, and some 3 \u00bd inch silver and 4 inch black patent pumps.\" As she was saying this, Veronica uncrossed her legs and slightly spread her knees, noticing this Sharon unconsciously licked her lips. \n\n\"I can do that,\" Sharon replied, moving the fitting stool in front of Cindy. \"Since these are European sizes, I need to measure your foot,\" she continued putting both hands around Cindy's ankle and lifting her foot to the measuring device. As she did so, Cindy taking the hint from Veronica, spread her knees and with her much shorter skirt, made a nice fuzzy picture for Sharon. \n\nSharon was adjusting the width device on the measurer and started to say the size as she looked up, her eyes sweeping up Cindy's legs to her uncovered hairy pussy. \"Oh, my,\" she gasped in a low voice.\n\nRecovering slightly, she asked, \"Colors?\"\n\nBefore Cindy could reply, Veronica said in a very low voice, \"Dark brown and natural blonde, do you need to measure my foot as well, I'd also like a pair of red flats.\"\n\nSharon, with shaking hands and rapid breathing moved the stool over in front of Veronica and lifted her now bare foot to the device. Veronica spread her knees and lifted the front of her skirt, saying \"Nice memories?\"\n\n\"Oh, my, God. I did die yesterday and this is what heaven looks like.\" \n\n\"Cindy, do you have something in your purse for Sharon,\" innocently asked Veronica. Cindy looked quizzically at Veronica and then said, \"Oh, yes, I think I do,\" Reaching into her purse she balled up her thong and with the back of her hand up handed them to Sharon who quickly took them and put them in her pocket. \"Before you go back into the stockroom, let me ask you, would you like to meet my two daughters under friendly circumstances, like yesterday.\"\n\n\"Oh my God, I really did die yesterday. I'm at your beck and call, Veronica, whenever you want, of course I would.\"\n\nAs Sharon stood up and on unsteady legs walked into the stockroom, Cindy gave me another quizzical look. \"Yesterday afternoon Sharon and I spent almost three hours in bed, two of them with Scott, need I explain anymore? I'll answer all your questions in the car on the way home, sweetheart. Flash the poor girl as much as you can, she'll reward you later,\" grinned Veronica.\n\nThe shoe fitting and selection went at a slow pace, Veronica repeated her Monday performance with one foot on the chair and her legs well spread. Cindy emulated her for two pairs of flats and kept her legs apart for all the fittings. Sharon was a wreck when they finally settled on a dozen pair of shoes for Cindy and Veronica's flats. \"You have a houseful of sex maniacs if your daughters are as sexually open as both of you,\" she said in a low voice with her eyes on Cindy's crotch.\n\n\"Yes, isn't it grand that you've become the shoe purveyor to me and my women. Or is it shoe pervert?\" asked Veronica.\n\n\"It's both. I love my job,\" replied Sharon.\n\nAfter settling the $2,500 bill with the debit card Sharon offered to help carry the shoes to the car. After filling up most of the back seat, she embraced Veronica, lightly kissing her and said, \"Thanks again for the pussy show and the business, you too Cindy. I hope to see all of you again soon, perhaps some evening so we can fuck to exhaustion and I'll spend the night?\" she hopefully said.\n\n\"A very real possibility, I'll be back next week with Katrina and Ashley, they're going to need some new shoes for the wedding, so I don't want to wait too long in case you have to order them in,\" smiled Veronica.\n\n\"God, this really is heaven, thank you Veronica. Thank you Cindy,\" and she turned on her four inch heel and swung her magnificent ass as she walked back to the elevator.\n\n\"How long have you known her?\" asked Cindy as we departed the garage.\n\n\"Since Monday, I noticed her trying to look up my skirt. So I decided to have some fun with her. After fifteen or twenty minutes of flashing her with my panties on, I went to the restroom and took them off and gave them to her as you did today. I kept showing her more and more as I tried on shoes. She's bi, not currently in a relationship, an incredibly talented lover to both male and female partners, and I'm sure you'd enjoy the experience with her.\" I told her.\n\n\"As much as with you and Scott or the girls?\" asked Cindy.\n\n\"Yes,\" was Veronica's reply. After a pause she smiled, \"She's already a great lover but I think the more we tease her and stir her desires the better and more eager she'll become. I think we're drawing out a great deal of unexplored sexual energy and desires. I never thought about it until now but in many ways she reminds me of another friend of mine who's just starting to discover her sexuality.\" \n\n\"Do you realize that you spent almost $15,000 on me today?\" asked an awed Cindy.\n\n\"I wasn't counting. I don't put a price on happiness, neither does Scott.\" said Veronica.\n\n\"I guess not, I'm indebted to you though,\" said Cindy.\n\n\"Not in a money sense you aren't. Be happy, begin to live your life without worrying about those old debts.\"\n\nScott was sitting in the den when they arrived home and after the first trip in with bags and boxes which they set on the dining room table they both sat down on either side of him. In light of their long talk in the car on the way home, Cindy put her arms around him and passionately kissed him saying, \"Thank you, kind sir, thank you. I'll show what I got, er, what Veronica got me, after we get it all in here. Veronica where should I take it?\"\n\n\"For now the spare bedroom, we'll be up in a while for a fashion show,\" replied Veronica.\n\n\"She's a happy camper,\" I remarked. \"Now tell me about the Grace ambush.\"\n\n\"What 'Grace ambush'?\" she said with a wide-eyed look of innocence.\n\n\"The one where forever she's the model of decorum and primness and the next day she's perched on the edge of my desk in a skirt. I've never seen her in a skirt, ever. Then we go to a private room at the restaurant and she sits on the table with her absolutely perfect legs on either side of me, showing me her hairy pussy and says touch my tits. She tells me she loves us both and wants to become our personal assistant, with benefits, for Christ's sake. That ambush?\"\n\n\"How did her tits feel, firm I imagine. Did you see her bare breasts? How did her pussy feel, did you touch it?\" asked the still wide-eyed Veronica.\n\n\"I touched them through her bra, I didn't see them bare, I didn't touch her pussy, just the inside of her thighs above the stocking tops. Garter stockings at that! And a V-string. Jesus, what an attractive woman,\" I exclaimed.\n\n\"Would you like to fuck her? Perhaps on a regular basis? Would you like to continue to see her on a regular basis? Would Emerson? Would you like to take her with you on some of those trips that you'll have to make? I know I wouldn't mind spending time in bed with her,\" asked Veronica.\n\n\"You know the answers. Of course. She said that everything she did today was with your knowledge. How'd you know I'd call her today? God, I love you, Veronica, so damned much.\" I said.\n\n\"Good, we were right in how you'd you react. I didn't know you'd call her today, that's why she had to run home and change. The original idea, hers incidentally, was to catch you both at the same time, but Hazel got Emerson all fired up again this morning, so he left to get laid. She's coming to dinner and ... next Wednesday. So you did like what what she proposed?\" she asked.\n\n\"Of course I did. Especially since she said you knew about it. I've already called Dave and he's going to add an office behind the garage for her. It'll probably form part of the wall of the pool. It's our first change order. God what a day, let's make love.\"\n\n\"Here, now?\"\n\nI was unfastening my belt and pushing my pants and underwear down as she stood and then straddled me. \"No panties, been to Sharon's store again, eh.\" She lowered her wet vagina on my hardened cock and quickly impaled herself. As she was slowly bouncing up and down, Katrina and Ashley came home and saw us. \n\n\"The rabbits are at it again,\" said Ashley. \"Hi Mom, Hi Dad,\" they both said as they came in and kissed each of us while Veronica held still. As they backed away Veronica resumed her slow bouncing. Ashley leaned around to the front of Veronica and unbuttoned her blouse, spread the front open and pushed her bra down to free her breasts. \"A treat Dad,\" she said.\n\nI latched onto one of Veronica's nipples while caressing the other. The girls were quietly watching when Cindy came in, dropped her jaw, and watched as well. As Veronica neared an orgasm she began bouncing at a more rapid rate and I came just as she started to. I collapsed back against the couch and she leaned into me kissing me. As we cooled down she asked Katrina to hand her a few tissues from the box on the desk. She held them against her pussy after sliding off, me saying to the girls \"Want a taste, it's fresh.\" She then stood, turned and sat on the front edge of the cushion with her legs spread. Katrina was the first to react and knelt in front of her and began sucking her dripping vagina, then licked her clit. Cindy surprised me by immediately kneeling in front of me and began sucking and licking my still erect cock.\n\nShe was looking at me and as she took her mouth off me said, \"Practice makes perfect.\" \n\nAshley, not to be left in the cold sat next to her Mom and began sucking and licking Veronica's still hard nipples. As the noise of slurping, sucking, and licking abated somewhat I suggested showering and to begin getting ready for tonight. Katrina said, \"I'll go with Mom.\"\n\n\"Oh, darn,\" I said with a laugh, \"that means I get Ashley and Cindy.\" \n\nI gathered my pants, shoes and underwear and we all walked upstairs. As I walked into my bathroom and turned on the shower, I happened to see Cindy undressing and she only had on a skirt and one of her new tops that I assumed she put on earlier. Ashley of course had the usual complement of underwear. We all got in the shower. I was glad that the renovation was going to include a much larger walk in shower with a variety of spray heads. Cindy was just kind of standing there until Ashley handed her a soapy wash cloth and said, \"Get going, clean up Dad.\"\n\nAs Cindy was soaping me and spending a lot of time in the genital area, Ashley handed me the shampoo and bending over said \"Finger fuck my ass again, will you Dad.\"",
        "I thoroughly laved her ass cleft with shampoo and put a large dollop on my finger. I began to work my finger into her asshole and was quickly all the way in. Ashley was moaning the whole time exclaiming, \"Mmmm, I feel so full. That's nice. Move your finger in and out. Mmm. Now wiggle it inside me. Oh, oh, oh, God I'm cumming. Mmmm that was nice, don't leave yet,\" as she continued to push back against me. Sighing, \"Okay, pull it out now, slowly, mmmm, that feels nice.\"\n\nAfter I was all the way out she turned and embraced me, passionately kissing me and after breaking the kiss she turned and asked, \"Cindy, have you ever done that.\"\n\n\"No,\" she replied.\n\n\"Have Dad do it to you sometime, it's awesome.\"\n\n\"Will you, sometime, Scott? I need to think about it.\"\n\n\"Sure, just say when,\" I smiled.\n\nCindy's slim toned body was an interesting and erotic contrast to Ashley's full ass and tits. I enjoyed both as I became the official body washer. As we were toweling off, Cindy said \"I want to sleep with you and Veronica tonight. Will you have me?\"\n\n\"You don't need to ask. Do what Katrina and Ashley do, simply show up.\"\n\n\"I'll remember that,\" she said as we walked into the bedroom. She then giggled, \"You may want to be careful with an open invitation like that. I may end up staying here every night.\" \n\nVeronica came into the bedroom and asked, \"Staying where every night?\"\n\n\"Scott said I had an open invitation to sleep with you two anytime I want. I was saying he needed to be careful with such an open invitation because I'd be here every night,\" Cindy smiled.\n\nVeronica laughed, \"What'd you think you're doing, moving in on my man?\" \n\nI knew my love was kidding but I didn't think Cindy did as she turned red and stammered, \"I...I...it's not...\"\n\nVeronica hugged her to assure her all's well. \"I wouldn't complain if you joined us wherever you wanted.\" Then she said to get the focus back to the evening, \"Cindy, get your dress and get dressed in the girls room. They'll help you with the stockings.\" Cindy quickly exited with Ashley behind her.\n\n\"Now lover, we don't have time to make love, but give me one of your world-class kisses and grope my cute naked butt.\" She melted into me and we must have kissed and groped for five or ten minutes. \n\nAs we broke the kiss and I began to dress, I began chiding Veronica about her less than subtle infatuation with Dave. \"Are you interested in him sexually?\" I asked.\n\n\"No, because I can't be. He's married. I'm merely enjoying the view,\" she answered rather defensively.\n\n\"Now be honest, hypothetically what would you do if his wife had the same attitude as you do about sharing?\"\n\n\"I'd fuck him while she fucks you, and Ashley and Katrina'd be right behind me. Oops, I guess I said that out loud,\" she sheepishly said.\n\n\"Yes, you did. I hope his wife is as alluring to me as he is to you. If the opportunity presents itself I have no objection to indulging in a fuck with Dave and his wife. Or for that matter with Emerson and Hazel, although the likelihood of that is so remote that it isn't worth thinking about.\"\n\nAt that moment Cindy came in wearing silver heels, a thong, garter belt and light tan stockings. My breath caught and so did Veronica's at the sight. \"Quite sexy, Cindy, come here,\" said Veronica.\n\nVeronica tightly embraced her and caressed her ass while passionately kissing her.\n\n\"Wow, you clean up well,\" I laughed as I also kissed her.\n\n\"Thanks, I feel as desirable as you say I look. I haven't felt that way since Sunday when I slept with you. Thanks again for all the clothes, both of you,\" she smiled.\n\nAshley came into the room behind her in a red half-bra, red V-string, red garter belt, red stockings and four inch back patent pumps carrying a hairbrush. She began brushing Cindy's incredible waist length mane. After about five minutes Katrina appeared, her evening make-up fresh, her lips subtly colored, wearing a beige half-bra, beige V-string, beige garter belt, dark taupe seamed stockings with a Cuban heel, beige 3 \u00bd inch pumps, and a very wide smile. My cock was immediately hard again and escaped the fly of my boxers. Katrina said, \"I know we all look sexy to Mom, but I don't know about Dad. Can you tell, Ashley, Cindy?\"\n\nAt that comment Katrina stepped to me and grabbed my exposed cock. \"Hmm, I suppose we do, it's like a piece of steel. Not very subtle, Dad,\" grinned Katrina as she let go and backed away.\n\nVeronica had gotten as far as a black garter belt and a black V-string and was finishing her evening make up. She began brushing her hair and as she walked by me, I grabbed her and pulled her to me, embracing her saying, \"Hey, almost naked lady, want to spend the night with me, you know fucking and stuff.\"\n\n\"Ohh, you smooth talker, yes. Even though I'm not that kind of girl, you sweet-talked me into it.\" The interchange broke all three girls up.\n\nAshley quickly added with a laugh, \"Scott, Mom wasn't that kind of girl until she met you. Now she's really that type of girl and then some.\" The other two nodded their agreement as Veronica now turned a little red.\n\nShe turned out of my embrace, got a black half bra from her lingerie chest and a pair of barely black stockings. She sat on the edge of the bed, pulled the stockings on, fastened them then stood and put on her bra. She walked into the closet and reappeared in four inch black patent pumps and a black halter top dress. She took off the bra and stepped into the dress, zipping it up. Smoothing the skirt which stopped six inches above her knees, said, \"Like what you see smooth talker?\"\n\n\"Absolutely, I guess I'm going to get to see some stocking tops at the table tonight. You know what that means.\" I said.\n\n\"All night hard-on, yeaa,\" grinned Ashley.\n\nThe three young ladies adjourned to put on their dresses as I finished putting on my tux with Veronica helping me with my tie.\n\nCindy was the first to reappear in the silver sheath, which if she leaned forward or twisted the right way was going to reveal a lot of her small breasts and maybe even a nipple. The open back, mostly concealed under her long dark hair, was very erotic. She bent over, turned her head, and her mane fell down over the front of the dress. \"Either way, you're very classy looking, very sexy looking tonight. Your eyes are enchanting the way you've made them up,\" I sincerely said.\n\nKatrina came in a green dress with a straight skirt, and a deep scooped neckline showing the tops of her breasts. Her hemline was about the same length as Veronica's. Ashley was in a red knit top dress with a satin skirt. The top hugged her body and made the nipples resting above the shelf bra obvious. She was carrying a bolero top which when she put it on softened the nipple show.\n\nI couldn't imagine anyone more fortunate than me at that moment. Not only was I going out with these beautiful, sensuous women, I was coming home with them too. Life just couldn't get better, I thought.\n\nWe arrived at the club with me in my usual hard state. Ashley and Katrina had given Cindy explicit instructions in how to get in and out of a car. On top of that they had coached her in body moves that bared her breasts. Such is life.\n\nA few minutes after we entered the lobby, Emerson and Hazel arrived. Emerson looked dapper as only Emerson can in a tux. Hazel, ah, Hazel. My eyes enlarged as I looked at her dressed in four inch red peep toe heels, black stockings, a skirt that ended well above her knees, it was almost as short as Veronica's. I also couldn't miss her fitted top with wide set narrow straps hugging her tightly and pushing up a generous amount of her breasts. Her hair, which was getting longer, was nicely styled and complimented her tasteful, yet subtle evening make up. With a broad smile she just glowed while Emerson had a Cheshire cat grin. As I shook his hand, I said to his ear, \"Got laid this afternoon, didn't you.\"\n\n\"More than once, thanks.\" he replied. Just as dining room manager was walking up to us, I heard Katrina say 'Hi, Kim.\" I turned to look and they were embracing and lightly kissing. Ashley did the same and introduced Cindy whom Kim also hugged. I turned back to see that Hazel had stepped in front of us and noticed she was wearing seamed stockings. Good evening Mr. and Mrs. Jacobsen, Ms Bryce, Mr Appleton, Kim, Ashley, Katrina and who is the lovely addition. \"This is Cindy,\" said Veronica with her arm around her waist, \"she's an addition to our household.\" That comment turned the heads of everyone and there were broad smiles all around. The four ladies kind of congealed into a group and trailed the four of us to the usual corner banquette table. I got in first then Veronica and Hazel slid in from my right so that Emerson and I flanked them. Then Ashley, Cindy, Katrina and Kim entered from the other end of the banquette to my left.\n\nKim was in a halter top creation, red satin, generous cleavage showing, short skirt, eight inches at least above her knees, four inch red pumps and black fishnet stockings. We looked each other in the eye, but I couldn't detect any information. I noticed that all the girls were drinking wine, showing ample cleavage again. I hoped there weren't any cops in the room. There probably weren't, this was members only club with high annual fees. Hazel and Veronica were enjoying Veronica's favorite chardonnay and Emerson and I were quaffing one of Mr. Busch's local brews. \n\nEmerson was the most animated that I've ever seen him in the last fifteen or so years. He couldn't keep his hands off Hazel and made no effort to be subtle. Veronica caught my eye several times and winked at me when he seemed to have his hand under Hazel's skirt.\n\nI leaned over to Veronica's ear and said, \"Job well done you sexy woman.\" I kissed her ear and ran my hand up her leg to her bare thigh, pushing the hem up.\n\nAfter sharing anecdotes for awhile the waiters came and took our orders. After another half hour or so they served us our meals. The food as usual was excellent and Emerson asked to see the chef. She came out with a worried look on her face. As she approached the table, Emerson slid out and stood, extended his hand to hers, shook it and thanked her for the excellent meal. Her face brightened considerably and she thanked him for the praise and said she would convey it to the kitchen staff.\n\nAs the plates were removed, a coffee and cordial trolley appeared. The band began setting up and before we'd finished our first cup began playing a spirited piece. Emerson again slid out and walked over to the band leader, taking something out of his pocket and handing it to her and began speaking softly to her. She looked in her hand, nodded her head and said something back to him. She signaled the band to stop. She picked up the microphone, turned it on and announced to the dining room that tonight's selection, by special request was going to be all waltzes and 40's and 50's big band sounds. She had a few words with the musicians who all began shuffling through their folios at their feet and began putting selections on their music stands.\n\nAfter returning to his seat, he leaned across Hazel and said, \"I hope you like tonight's selections, I told you I was going to dance with my bride.\"\n\nHe then stood extended his hand to Hazel saying, \"Come, Precious, shall we.\" I noticed tears of joy were welling up in her eyes. \n\nThat invitation caused Veronica to turn her face to me, smile broadly and whisper, \"I think they're getting it back together.\"\n\n\"It's your coaching, my love. You've done well. You're a romantic at heart. That's another reason I love you so much,\" saying that I moved my hand to her bare thigh and gently squeezed.\n\nBeing the voyeur that I am I couldn't help but notice a stocking top and garter clasp as Hazel began moving sideways to slide out.\n\nVeronica slid right after Hazel and extended her hand to me while leaving her skirt up. I noticed Emerson looking at her bare thigh as I had looked at Hazel's before they had both smoothed their skirts down. The four of us were the first on the floor and were shortly joined by six or eight other couples. I felt good that one of the couples dancing was Ashley and Katrina. I held Veronica close and she rubbed her pussy against my erection as we slowly moved around the floor. She whispered in my ear, \"Watch Hazel, she's against Emerson like I'm against you.\"\n\nAfter two numbers Emerson and I traded partners and Hazel was right against me, saying \"Goddam you feel as good as my husband. I wonder if I could tell you apart in the dark.\" We both laughed at that but didn't separate. \n\nI noticed that Veronica wasn't shy with Emerson either and had her head near his shoulder whispering something in her ear. Maybe swapping with Emerson and Hazel wasn't too farfetched after all, I thought.\n\nAshley and Katrina had moved back to the table and were talking to Cindy and telling her what was one of the highlights of the evening. Dancing with me and my hard-on. Cindy smiled and said \"Ooo, I can't wait. Will he ask me or do I ask him.\"\n\nAshley replied, \"Either way, you'll get to dance with him, and from the look on Mom's face Emerson's got a woody as well. Look how her hips're against him. I'm going to try him out!\"\n\nAs the second of our two dances ended, \"Kim said to the threesome, \"Dibs\" and slid out. I watched her cross the floor towards us and as Hazel stepped back she extended her arms to me. Ashley was right behind her going to dance with Emerson.\n\nAs the next piece started, she moved against me, her mouth no more than two inches from mine and asked, \"Screw your daughter yet? Or Ashley. Or maybe even Cindy? No? Would you and Veronica like to fuck your best friend's daughter tonight? I'm wearing all black under this dress. Thigh highs, Katrina said you liked them. A very, very tiny V-string which is already soaked, and a sheer half cup bra. My nipples have been hard since I put on the dress just from rubbing against the satin. In fact I bought the bra, stockings and V-string this morning in hopes that you'd want me.\" \n\nI opened my mouth to reply, but she put her finger against my lips and continued. \"You're getting harder, if that's possible, I guess that's a yes. Shall I meet you at Veronica's? I drove myself. After all I couldn't very well ask my parents to drop me off, could I? Would that be alright with your girls? Veronica and I talked about it on Tuesday when we were both topless. Ooo, I felt a twitch. She's okay with it, although tonight may be a surprise. It's time to feel a cock, your cock in me and you were the first to ask. I'm on the pill. I really don't know why. I live with a woman and don't think I could get pregnant from a strap-on or a vibrator, but it does keep my periods regular.\"\n\nThe music stopped and she leaned back a bit but didn't make any effort to let go. The next piece started, and I said, \"My turn. What about Gwen?\"\n\nKim replied, \"We talked about it and she encouraged me. And if you're as good as both you and Veronica say you are, expect her to want a turn. I know she'd like to spend a night or two with your daughters and Veronica.\"\n\n\"I do want you ... tonight. I'll explain to the girls, and I know Veronica will love having you. Are you planning on staying all night? I'd love for you to. Do you think you'd be up for that?\" I asked with broad smile.\n\n\"Will you be? You're twenty some years older than me, I hope you can keep up,\" she returned my smile. The music ended and I walked her back to the table. Ashley was standing there and she said, \"Me next.\"\n\n\"As soon as I get back from the bathroom,\" I replied. \n\nI met Veronica returning from the ladies room. She looked at me, lightly kissed me, and said \"She's coming tonight, isn't she.\"\n\n\"Yes, it'll be fun.\"\n\n\"Oh, don't I know. Good luck pissing with that woody lover. I'll see you in a few minutes. Who's got you next?\"\n\n\"Ashley.\"\n\nAs Ashley and I embraced on the dance floor and began dancing with her pussy pressed against me, she said, \"Emerson's got a nice dick, I'll bet. It felt good, not as good as yours of course, but good. Kim's coming to your bed tonight isn't she?\"\n\n\"Yes, was it that obvious?\"\n\n\"No, not if you hadn't heard the conversation you had with her on Monday, or watched her and Mom Tuesday. She's a wonderful lover. I imagine that with a super stud like you she'll be dynamite. Can we watch from our room? Will you turn the cameras on?\"\n\n\"Of course, and maybe even later you can join. If you're watching, look for a sign. She's spending the night, so they'll be plenty of time. You know I love you, don't you?\" I said.\n\n\"Of course, it's not about whether you love me, Cindy, Katrina or your future wife. It's sex and pleasure, we're all good with that,\" said Ashley\n\nWhen we finished Cindy was rather hesitantly headed toward me as Katrina walked toward Emerson. I moved toward Cindy and put my arms out to her. She smiled and stepped into them and moved close. As we began to dance, I put my hand under her mane against her bare back and moved my finger tips against her skin. She made a few cooing sounds, and rested her head on my shoulder. \"I feel soo good with you, Scott, so alive, so wanted, so sexy. Things I've never felt before. You and Veronica are a wonderful couple. I'm falling in love with both of you. Thank you again for taking me in, treating me as one of yours, just ... thanks,\" she sighed into my neck.\n\n\"We care a lot for you too Cindy, I'm glad that you feel that. What Veronica did for you today is not to be repaid. We want you to be unburdened from past mistakes and misfortunes. We want to open you up to a more carefree life, a life that Veronica, me, and our daughters enjoy. Confidentially, Kim is coming to spend the night in our bed, you can watch with Katrina and Ashley in their bedroom and maybe join us later,\" I explained.\n\n\"What do you mean watch from their bedroom?\" she asked with a quizzical look.\n\n\"There are three cameras trained on Bryce Field and the images are recorded on a server in our closet. You can watch them on a PC in most every room in the house thanks to wireless. Ashley and Katrina's plasma television can be hooked into their computers.\"\n\n\"Cool, that'll be exciting, and arousing. When we next 'play' will you record it. I'd like to see it. I'm a bit disappointed that we aren't joining you as soon as we get home, but there's all weekend isn't there?\"\n\n\"Yes, my sweet Cindy, there is. Look next to the light switch next to our door, if you see a small green light it's on. Later on, we'll all watch the recordings and rate them,\" I laughed.\n\n\"Really,\" she asked wide eyed.\n\n\"No, no ratings but we sure can watch them,\" I laughed.\n\nThe music ended and I suggested that she trade with Katrina and dance with Emerson.\n\nAs they walked to new partners, I watched Cindy start a little stand-offish with Emerson as Katrina, the gorgeous Katrina moved directly against me and kissed me lightly. \"Emerson's got quite a boner. It felt good. He has a nice way about him. I wouldn't mind dancing with him again. I wonder if he 'messes' around. Ashley wonders the same thing.\"\n\nAs I was about to reply to Katrina I noticed that Cindy had moved against Emerson and was smiling as she talked to him. \"I don't think he does, Hazel is very conservative. Why? Do you think he's a 'hunk' like Dave Hawks?\"\n\n\"No just sexy in a different way. Maybe some time in the future. I'm very satisfied with what I have now. You know that Cindy's falling in love with you and Mom. I expect to see a lot more of her. Won't I?\" she asked leaning back a bit.\n\n\"Probably more of friends, maybe, I hope that's all it is. Cindy has some very captivating charms, I don't know except she did tell me while we were dancing that she was falling in love with Veronica and I so I don't really know where that goes. I don't think she's falling love as you're using it. It's more like a good friend's type of love. I hope that's all it is. She's a charming girl though.\"",
        "\"You're babbling, Dad. Admit it you feel it too. Know it's not a problem with either Ashley or me. Cindy's a wonderful person who's developed a solid character despite her shitty life. If you take her into our family, she'll bloom. I know it.\" She kissed me with a bit more passion, saying, \"You're both very special people, I'm so happy to be part of you, happier than you know.\" \n\nVeronica let me finish the next number with Katrina then joined me. \"I love you handsome. I love you more than anything in the world. You are the kindest, most generous person I've ever met or could ever hope to find. And you're incredibly sexy to boot,\" she said and after kissing me lightly then put her head on my shoulder and hugged me even tighter. \n\nAs we continued to dance with her head on my shoulder she quietly said, \"Hazel looks and acts quite sexy tonight, I've been watching her and talking to her. Their sex life has improved more than she ever expected. She still hasn't had a deep conversation with Emerson to learn about his fantasies has but she thinks she has unconsciously tapped into a few of them. I've not known him long but I think he's so much more 'chipper'.\"\n\n\"He is. He hasn't been like this since college when he first met Hazel and the night he first got into her pants. I'm happy for both of them. I think they owe a lot to you. Emerson asked if he could send Hazel over to live with us for a week of intense training, but it doesn't seem necessary after watching them tonight. His interaction with our girls is something I might've expected, but not holding them so close,\" I replied.\n\nWe looked over at Emerson and he was dancing with his daughter. Their lips were about four inches apart and their eyes were fixed on each other. \"Now that's healthy, how long do you think it'll be before he sleeps with her?\" Veronica wondered.\n\n\"Veronica. Just because I want to make love to my daughters, doesn't mean everyone does.\" I said.\n\n\"Don't be too sure,\" she replied, \"Erin fucks her father and brother as well as her mother. And her sister-in-law. I make love to Ashley, Katrina and Cindy and so do you. Karen, the electrician, fucks her father, Carol fucks her brother. Dave has four daughters, I wonder how many he's bedded, more than one I'll bet,\" she replied.\n\n\"Yes, we know some women who do, but I think you're really speculating too much on Dave,\" I said, and simply kissed her and held her a bit tighter. Clearly our contractor was dominating her imagination. As we continued to dance my already firm cock became harder when I thought of watching him fucking her hard and then her riding him with unabashed eagerness. She quietly cooed into my ear as she felt my hardness twitch but neither of us said anything further. \n\nThe evening was drawing to a close as the bandleader announced her last number. Veronica left me as Kim approached and Hazel melted into Emerson. Katrina and Ashley were dancing together for the fourth time tonight.\n\n\"My God,\" Kim said, \"Dad's got a stiff dick tonight. Maybe I should go home and take care of that cock along with Mom. Just kidding, are we still on ... and I hope we'll do it often ... for tonight?\"\n\n\"Both,\" I replied, \"and don't forget I've got plenty of backup.\" Over her shoulder I noticed that Veronica was dancing with Cindy and that her hand seemed to moving under the girl's long hair.\n\n\"Given how wet I am from you and Dad as well as the girls, I'm willing to take you all on,\" she whispered in my ear. After a few more seconds she breathed lustfully, \"Come on, the music's stopped, let's go fuck!\" \n\nAs I walked back over to the table. Kim moved swiftly for her purse, then kissed her Mother and Father goodbye and left.\n\n\"Sorry about Kim's quick departure,\" Hazel said apologetically. \n\n\"I think she had to meet Gwen somewhere and lost track of the time,\" speculated Emerson. \n\nAs we walked out of the lobby and stood waiting for the valets to deliver our cars, Veronica kissed Emerson, rather fervently, I thought. I was stunned when Hazel gave me a long open- mouth-tongue-in-my-face kiss. Maybe there is a sharing opportunity with the two of them, I thought again.\n\nThe cars arrived and Hazel slid to the middle of the front seat against Emerson, who waved in the mirror as we were getting in our car. As soon as Veronica was against me, she asked, \"Did you enjoy that kiss I encouraged Hazel to give you.\" After she saw my nod and the puzzled look face she added, \"Before the last dance I encouraged her to do it because I was going to kiss Emerson. I told her to imagine that it was you fucking her when Emerson drives his hard cock into her tonight.\"\n\n\"Y..Y..You what?\" I stammered. She merely smiled and nodded. \n\nAs we pulled onto the highway my love said, \"You don't need to hurry. I gave Kim my key so she can go in as soon as she gets there. Savor the ride and my very wet pussy. You'll have plenty of time with her. Kim said she's probably not leaving until tomorrow afternoon, if then, if your performance is as good as your reputation,\" she said laughing.\n\n\"Hmm, I can hope the same for her,\" I replied smirking and pressing the edge of my hand against her pussy. Veronica sighed and there were considerable moans from the three in the back seat as well. \"I finally asked, \"Everyone all right back there?\" \n\n\"We'd be better if we had your cock in our pussies rather than each others' fingers,\" replied Ashley, as expected.\n\n\"We gotta have a goal that's hard,\" Cindy quipped. Both Veronica and I laughed.\n\nThe leg, stocking top and pussy show occurred as my four sex goddesses got out of the car. Their show almost made be call for a second take with the handheld video camera from our bedroom. When we entered our home Kim was sitting sideways on the couch in the den leaning against the arm, her legs pulled up and her stocking tops and a trimmed pussy clearly visible. They were even more visible when the gorgeous brunette spread her legs as she moved off the couch to walk over to us. \n\n\"Awesome,\" Ashley said with a whistle, \"Just awesome.\"\n\n\"I'm really tired. Think I could spend the night?\" asked a wide-eyed innocent looking Kim.\n\n\"Let me check, I may have a vacancy ... why yes, yes we do, let me show you to your bed, er, room,\" I replied as I cocked my arm and she put hers though it. We walked up the stairs arm in arm with Ashley rolling her eyes and following us. \n\n\"Have a seat in the special VIP section,\" I laughed as I motioned to the bed.\n\nVeronica was right behind me and turned on the camera system. I walked into the girls' bedroom, kissed each one, but not without a fondling of ass. I noticed that as I turned to leave that Ashley already had the laptop open and was hooking it up to their television. \"If you see me beckoning you with my hand, or you hear me say, 'join us', please do. If I don't, we'll have tomorrow, this isn't the last night of the world. Keep the sound turned down or close your door.\"\n\n\"Don't just have sex with her. Love her well, Dad, love her well. She's a wonderful lady and your best friend's daughter. She deserves the best, and 'super stud' that's you. Although, Emerson's dick felt rather interesting tonight. Do you think she's slept with him?\" asked Katrina. \n\n\"I'll do my best, and no I don't think so. You think maybe both you and Ashley could consider filling that void, eh?\" I smiled.\n\n\"Sure, why not?\" replied Katrina, \"He's almost like family. I've known him all my life like you've known Kim. Get back in there and make love to her. We love you.\"\n\nKim was leaning against the footboard with her arms crossed as I walked in I drew her to me and passionately, with an open mouth, began kissing her. As she began to melt into me I dropped my hand to her full ass then began working her skirt up. When I had it up to her waist in the back I dropped my hands to her ass cheeks and began squeezing and caressing them. She pushed more strongly against me and wrapped her arms tightly around my neck. She broke the kiss and leaned her head back with her lips about an inch away from mine while saying, \"Incredible hands.\" \n\nVeronica moved behind her and kissed her along her neck. As she kissed Kim she began to unzip the back of her dress and unfasten the halter around her neck. As she was doing that Kim began kissing me and moaning a bit. She unwrapped her arms from my neck and dropped them to her side so the halter would fall down. \n\nI played with one of her firm breasts. Kim then moved her torso back a little further to allow Veronica pull her dress down to puddle around her feet. Having never broken the kiss she put her arms back around my neck and continued to kiss me. Veronica worked her hands between us and Kim moved back enough for her to unfasten my belt, pull my cumberbund off and let my pants puddle at my feet. While my fianc\u00e9e was working on my pants Kim pulled my tie loose and began unbuttoning my shirt, still never breaking the heated kiss. As she got it open she pulled it aside. Veronica helped her to finish by pulling it off my arms. Kim's half covered breasts felt good against my bare chest. \n\nI broke the kiss, stepped out of my pants puddle and help Kim out of her's. I stepped away from her still holding onto her shoulders and said \"Let me look you, you gorgeous woman.\" She smiled at my wandering eyes as she unfastened her front closure bra and shrugged it off behind her. Her breasts were about a B cup, probably the same size as Veronica's and her dark pink nipples were like hard pencil erasers. \"Like it so far?\" she asked with a glow.\n\nAs we began kissing again Veronica quietly slipped out of her dress and panties, and then came behind me and pulled my underwear down and off. As I lifted each foot she took off my shoes and socks. She then said, \"Get on the bed.\"\n\nAs we turned to go around the headboard Kim reached down to take off her shoes, I shook my head, \"Leave them on.\" Her ass was full, fuller than Ashley's, nicely rounded, and with the string going up her ass cleft, delightful. \n\nVeronica moved to the other side. As they crawled toward the middle, I followed. When they stopped, I quietly said, \"Put your arms down Kim.\"\n\nShe did and when her ass was in the air I pulled her string aside and began to lick her wet, sweet musky pussy and asshole. \"Oh, God, that's nice. Pull them down.\" she gasped.\n\nI worked them down to her knees, and she picked up one knee then the other to let me pull them off past her shoes. As she dropped back to her arms, Veronica moved closer, spread her legs and leaned against the headboard. Kim moved to face her pussy, put her hands under Veronica's butt and began to lick her. I began sliding my cock up and down her soaked pussy as she began to groan and push back. I had entered her not even to the base of my head, when she said, \"Now, fuck me now.\" I pushed into her with a series of small strokes. Her groaning increased with each stroke. When I was fully in her, I leaned forward and began to kiss Veronica who was caressing Kim's breasts and pinching her nipples. \n\nKim pushed back against me, broke contact with Veronica's pussy and groaned. Between pants and moans she cried, \"Why did I wait so fucking long. Unnnn, God, you fill me up, oh shit that feels so good. Move in and out, fuck me gently, ohhh, like that, just like that. Ohh, I'm going to cum, oh yes that's it. I'm going to cum. Put a finger in my ass.\" I wet my finger in my mouth and rubbed it around her asshole then wet it again and pushed in up to the first knuckle. \n\n\"Ohh yes, ohh yes, ohh yeees,\" she chanted as she pushed back against both my finger and my cock. \"Fuck me, fuck me, finger, deeper!!\" \n\nI pulled it out to a \"noo' and wet it with her very copious pussy juices then put it back in to the second knuckle and turned it a bit. \"Yess, yess, oh fuck, that's it, that's it, fuck me hard and fast, hard and fast.\" \n\nI began to rapidly stroke in and out and pushed my index finger all the way in. \"Ahhh, fuck, that's it, that's it,\" she groaned between deep breaths that were becoming more rapid. \n\nHer body began to shudder and her legs twitched. She stopped breathing for at least twenty or thirty seconds. As her breathing resumed, I began to pull out and she said, \"Noo, fuck me more.\" I began stroking again and again she shuddered and stopped breathing, she resumed breathing and groaning, \"Oh,my God, Oh my God, not again.\" \n\nI began stroking a bit faster and as deep as I could go, Veronica began rolling her nipples between her thumb and forefinger, and Kim let out a big \"Ahhhhh.\" and shuddered again. As her breath rate slowed she pleaded, \"No more, not now, please let me rest.\" \n\nI slowly pulled out my finger with a pop, and then slowly began to back my hard dick out of her. \"Did you cum,\" she groaned as she rolled onto her back. \n\n\"No,\" I replied. \n\n\"Fuck me again until you do, I want you to fucking fill me up with your seed.\" I moved between her widely spread thighs and began deeply stroking her as I gazed into her gorgeous face. I could feel her pussy walls trying to milk me as her eyes locked upon mine. It was not long before my balls drew up and I started to cum inside her. \n\n\"Ohh, so good, good, that feels so good. God you feel so good, so fucking good.\" After six or seven shots I knew I was temporarily empty so I started to pull back. When she put an arm back to grab my ass, and said \"not yet, not yet, please not yet.\"\n\nI leaned to the side so that Veronica and I could share an incredibly hot kiss. As we broke the kiss, Veronica smiled and whispered loudly, \"Super fucking stud, you.\"\n\nKim's hand moved behind my head and drew me to her for a long tender and loving kiss. When the kiss ended she moved her legs signaling I could move off her. I finally fell to the side towards Veronica pulling out my still erect but not as hard cock. She rolled slightly towards me with her legs slightly drawn up at the knee and spread apart. She turned her head to Veronica and said \"You're going to marry this guy and take him out of circulation?\" \n\nVeronica laughed, \"Yes I am and no, not likely. I'm going to use him for bait to catch more pussy. I'm very much bi. Whoever he fucks, I get to fuck, so don't worry you can have repeat visits.\"\n\n\"Scott, where have you been? Why weren't you there when I realized the difference between boys and girls. Why weren't you my first? Well, you're my second and the first guy didn't do much, so I guess this really counts for first. How do you keep up with this wonderful cock Veronica? Do you take vitamins?\"\n\n\"Something like that. When you make love three or four times a day every day you tend to be in shape,\" grinned Veronica.\n\n\"Can I watch you and rest,\" asked Kim.\n\n\"Roll over and lie down, handsome.\" She ordered.\n\n\"Let me wash my hand first,\" I replied.\n\nVeronica reached into the nightstand drawer and handed me a pump bottle of sanitizer. As I was laving my hands, I glanced in the drawer and saw several boxes of condoms and three or four tubes of K-Y. She saw me looking and grinned, \"The other drawer has the same, party preparations. We never know when we'll need them.\" \n\n\"Good to know,\" I said. \"Hate to turn down a fuck on Bryce Field because I couldn't find a rubber.\"\n\nAs I was moving back onto my back Veronica said to Kim, \"I'd like to eat Scott's creampie out of you, but it might be too much right now. I'll just suck on him to taste you.\"\n\nShe dropped her head to my stiffening cock and began moving her mouth over it. She then climbed on top and impaled herself saying, \"Ooh that's nice.\"\n\nKim moved back to beside me sitting up and began to kiss Veronica and caress her breasts. \"These are just lovely,\" she said, \"Just lovely.\"\n\n\"Kim, get on my face. I'll be gentle, promise.\"\n\n\"Yeah, I hope not,\" as she turned and straddled my mouth. I began to slurp her dripping juices and soon had my tongue buried in her slit. She and Veronica must have been kissing because I heard muted moaning. Veronica sped up her pace on my cock and began moving from side to side as well. \n\nI tongue fucked Kim's vagina and fingered her clit. At that point she sat up, saying, \"Oh no, not again, oh God yess, yess.\" \n\nI continued my ministrations to her pussy and clit and felt her begin to shudder as Veronica also began to moan. Veronica exclaimed, \"God yes,\" and became still on my cock. \n\nI felt my two lovers lean toward each other, kissing I assumed. Kim swung her leg over me and collapsed on the bed next to me. Veronica leaned forward and pushed her breasts against my chest and began seriously kissing me. As we broke the kiss I was still hard inside of her, and as she collapsed on the other side of me. \n\nI looked at Kim, and asked \"Want company?\"\n\n\"Sure, why not.\"\n\nI motioned with my hand and there magically appeared three topless young ladies wearing garter belts, stockings, heels, uncovered pussies, and big smiles at the edge of the bed. As they began climbing on Kim said, \"How did they know?\"\n\n\"They were watching,\" Veronica replied.\n\n\"At the door? I didn't see them,\" Kim said.\n\n\"On the video feed,\" Veronica said.\n\n\"What video feed,\" Kim exclaimed.\n\n\"The three cameras, there, there and there,\" Veronica pointed.\n\n\"Did you record us?\" Kim's voice rising.\n\n\"Yep,\" I said. \"Don't worry we wouldn't show it to anybody without your explicit permission. We'll burn a disc for you tomorrow to take home to Gwen. Then maybe she'll really want to join us.\"\n\n\"Okay, I trust you,\" Kim replied in a normal tone of voice.\n\nAshley lay down next to Kim, pulling her towards her. Kim shook her head, \"No more tonight, can we just snuggle?\"\n\n\"Mom, move over a bit, I want to blow Dad and sleep next to him,\" Kitten moaned. \n\nAs Veronica moved over she gathered Cindy into her arms, telling her, \"I love you sweet thing. Did you enjoy your day with us?\" Cindy didn't reply with words. Instead, she smothered Veronica's mouth with deep kisses. \n\nKatrina reached to either side turning out the nightstand lights before putting her wonderful warm mouth on my cock. I tapped her on the hips. She shifted her hips over my head. And I licked her sweet pussy. We both came with me giving her a small mouthful. Before she turned, she reached for the sheet and blanket and pulled it over all of us. As she snuggled those incredible breasts against me she whispered in my ear, \"I love you, super stud. I love you very, very much. You complete us all.\""
    ],
    "authorname": "Reindeer58",
    "tags": [],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/any-chance-we-could-ch-25"
}