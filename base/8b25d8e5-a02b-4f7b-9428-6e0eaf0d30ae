{
    "title": "The Professor's Dildo Ch. 02",
    "pages": [
        "CAUTION: This is a story of a woman using a dildo to perform anal sex on a man. It is entirely consensual, and both parties enjoy it, but if this sort of thing disturbs you, I would suggest you not read it.\n\n*\n\nJeremy smiled as he strode down the hall to Professor Dugan's office, anticipating the fun they were going to have. The final exam in her class was the next day and he was on his way to earning the highest grade possible, besides having another great time. Three months ago, Jeremy never would have thought it possible, but having her fuck his ass with her strapon had already given him some of the most fun he had ever had with a woman, and he was really looking forward to that day's session. \n\nThe sad part was that it would be the last one of the spring semester and, after that day, he would have to do without the incredible pleasure for over two months. He hoped to enroll in one of her classes in the fall, and enjoy another five months of having his ass getting regularly crammed by her, but it was still a long period of doing without.\n\nJeremy knocked on the door and entered when he was told to do so. The professor smiled at him and leaned back in her chair, thrusting her breasts against the thin material of her jersey. The garment might have been the same one as she had been wearing their first time together. \"Hello, Jeremy,\" she greeted him, and got up, bolted the door and walked over to stand in front of the sofa that stood against the wall. \n\n\"Hi, Dixie.\" Jeremy had called her by that nickname during their sessions ever since their second time together. She had been leaning over him, her hands squeezing his shoulders and her succulent breasts mashed against his bare back. Jeremy was ecstatic, from her hard nipples scraping back and forth against his skin and, best of all, her big plastic cock driving smoothly in and out of his well-greased ass. He had whispered to her how good it felt, and addressed her as \"Patsy\", which is her actual name, and the one she had suggested he call her when they were getting together in her office. \n\n\"Jeremy, why don't you call me Dixie, when we're in the office and I'm fucking you like we are now? That's what my special friends call me, and I like to think you and I are becoming really special friends.\" Jeremy didn't know exactly what a \"special friend\" was, but he assumed it had something to do with her using her dildo in his ass, and he wanted that to continue regularly. \n\nDuring their first session together, right after Jeremy had flunked the midterm exam, the professor asserted her authority and was demanding. She introduced him to the pleasure of her dildo in his ass and changed his grade, but she hardly even let him see her nakedness. During subsequent meetings, in which he fully cooperated and it was obvious they were both deriving immense pleasure, Dixie softened a great deal. She was still in charge, but their meetings had become more like trysts between lovers, each giving pleasure and receiving it. \n\nWith the door secure, he was ready to remove his clothing and kneel in front of the sofa in the usual way, but she stopped him. \"Tomorrow is your final exam, and you've already got an A-plus, but this will be our last time together, and I want to make it special. It'll be more fun for me and more fun for you too.\" \n\n\"Sure, Dixie. What do you have in mind?\" Whatever it was, Jeremy expected to enjoy it, and he wanted her to enjoy it just as much.\n\n\"Do you like to eat pussy?\"\n\n\"I love it, especially with a really sexy woman. Like you.\" \n\nHe had no need to flatter the professor, and he wasn't. In class, she usually concealed the fact with clunky suits or floppy sweaters, but he knew Dixie had a great figure, with big, firm breasts, topped by large, dark brown nipples. Her waist was slightly plump, in a very sexy way, and her hips and ass flared alluringly. Besides her sexy body, Dixie's face was quite pretty, with a generous mouth, clear skin, and big, brown eyes. In the classroom, she wore heavy glasses to look more professorial, and her dark brown hair was always tightly pinned up in a tight bun. When they were together in her office, however, the glasses disappeared and her hair fell across her shoulders in soft waves. All in all, she was one of the most attractive women he knew, at least in her private persona. \n\n\"That's good, because my pussy is badly in need of being eaten.\" \n\nDixie unbuttoned her skirt and pulled down the zipper but stopped and stared at him when Jeremy didn't also start undressing. He quickly took the hint and stripped off all his clothing. In little more than a minute, the professor and her favorite student were both naked, and she was lying on the sofa, her head resting on the arm and one foot on the floor, ready for him to go down on her. \n\nJeremy was not quite bold enough to kiss her face as he would have with a girl friend, but he was delighted to cup her succulent breasts in his hands to kiss and lick her nipples. They were already erect, and the tiny bumps and ridges felt good on his tongue as he alternated between them, licking either one, a few strokes at a time. He also enjoyed Dixie's murmurs of pleasure, so his tongue continued fondling her big nipples, until she started breathing faster, and said \"That's good. Now suck them.\" \n\nHe drew one of her luscious breasts into his mouth and sucked, while his tongue continued caressing her areola and erect nipple. As Jeremy's mouth moved back and forth between the lovely twins, Dixie's upper body squirmed on the sofa, thrusting the succulent globes into his mouth. He continued with her delightful breasts until she was ready to have him move lower on her body. \n\n\"That's great,\" Dixie told him. \"You really know how to use your mouth. But now it's my pussy that needs you.\" As she spoke, she pushed down on his shoulders until he ended up kneeling on the floor. Dixie sat up, spread her legs and slid to the edge of the sofa until he was between her thighs. She raised her legs and, when Jeremy moved forward, draped them over his shoulders. \n\nThis was the first time he had gotten such a close look at her pussy, and it was in keeping with the rest of her beauty. In the past, he had seen a dark brown triangle where her legs met, but now Jeremy could see that her pubic hair was not as thick or as dark as he had thought. Her slit was clearly visible, and it had been pushed open by her engorged inner lips as they blossomed and, at their apex, he could see her clit peeking out from its protective hood. Her brown hair framed the swollen dark pink of those inner lips and, between the labia was her love hole, shiny-wet pink with the delectable juices that were bubbling out. \n\nThe aroma of those juices drew him forward and he licked them off where they had trickled onto her crotch. They were as delicious as any he had ever tasted, and his tongue sluiced them off and into his mouth. When they had all been swallowed, he buried his face in Dixie's beautiful and fragrant pussy and started licking one of her swollen inner lips. As good as her pussy had looked and smelled and tasted, the best part was the spongy feel of the lip against his tongue. \n\n\"Oooo, yeah, that feels good. Keep doing that; I love it\" she urged him, looking down her body at his blonde hair and blue eyes. They were the only part of his face that was visible.\n\nJeremy was glad to keep doing that. Her pussy was one of the best he had ever eaten, and he took pride in the way that Dixie's body responded to what he was doing. After his tongue had slowly cruised to the end of the inner lip, Jeremy briefly drew his head back. He saw that her clit had pushed its way out slightly more but it was still too early to concentrate there. He moved his face back to where he had started, devoured the fresh juices that Dixie had produced, and started licking her other lip. She didn't say anything but, from the way she was moaning in pleasure and the way her pussy was squirming under his face, Jeremy knew that Dixie was really enjoying the gentle caresses of his tongue. \n\nWhen he reached the end of the second lip, he looked up to see how she was reacting. Her eyes were closed and a blissful smile was spread across her face. Her head was rolling from side to side on the back of the sofa and her sexy body writhed from the intense pleasure she was getting, while her luscious breasts swayed enticingly.\n\n\"She's getting ready to cum,\" Jeremy said to himself, seeing the movements of her body and the way her clit had completely pushed its way clear of its protective hood. He wasn't ready yet, though.\n\nBefore bringing the professor to her orgasm, Jeremy wanted to prolong their mutual pleasure even more. After feasting on all the nectar that had been produced, he started thrusting his tongue against the edges of her pink love hole, relishing the juices that spurted out. Alternating between the sides, he probed the rim of that delightful place, and explored under her inner lips. Dixie's pussy was fucking up against his face as she implored him to suck her clit and make her cum. \n\nHe would, but first he squeezed his tongue into the source of the nectar he had been savoring. The aroma and the flavor of her pussy were at their most intense, especially when he flicked his tongue up and down, indirectly stimulating the base of her clit and producing a fresh gusher of her delicious juices. \n\n\"Yes! Yes! Suck my clit!\" she implored him. Her whole body thrashed on the sofa before him. \n\nWithdrawing his tongue and moving his face up slightly, Jeremy opened his mouth to engulf that succulent morsel and started sucking on it. His tongue caressed the swollen sides and top. Dixie's became even more vocal, begging the young man to keep sucking her clit, and her pussy seemed to be trying to wrap itself around his face. He immensely enjoyed both responses, and kept sucking and licking. \n\n\"Oh! Oh! I'm cumming, Dixie blurted out. Her hands seized the back of Jeremy's head and jammed her pussy up into his face, while her thighs squeezed his temples. Her ass rocked back and forth and side to side as she continued cumming until she climaxed, her back arching and ramming her pussy against Jeremy's face for a final time. After her orgasm, Dixie's hands released his head and she totally relaxed on the sofa, an even bigger smile bisecting her face. \n\nGreedily, Jeremy licked all the fresh nectar off her legs, crotch and pussy, even sucking it out of her bubbling pink hole. After he had devoured it all, he continued kneeling on the floor in front of the sofa. Jeremy had greatly enjoyed eating the professor's pussy, but now he was looking forward to what he had gone there for in the first place. \n\nDixie was looking forward to it too, but she needed to rest for a few minutes. \"That was great, Jeremy,\" she told him, still smiling broadly. \"You really meant it when you said you had no complaints from women.\" That was a reference to their discussion the first time he had come to the office, when he had thought that she wanted more conventional sex with him. \n\n\"I need to rest a bit after that. You really made me cum big time. While I'm catching my breath, how about getting out what we're both looking forward to using? You know where it is, don't you?\" \n\nHe knew. Jeremy went to the desk and opened the bottom right drawer. A plastic bottle of Aquaglide was there, along with the strapon dildo that had given him so much joy over the past few months. As he carried them over to where the professor was waiting, he realized there were two new dildos attached to it, the one that would be going into his ass and the other that Dixie would have in her pussy. \n\nI've made some changes,\" she told him. \"Your dildo is longer and thicker and the end is more tapered so it'll slide in better. There are some pleasure bumps too, but I don't know if you'll notice those. Mine is the same except it has a spur for my clit. I don't think it'll feel as good as your mouth did, though.\" \n\nShe arose from the sofa. \"Help me get this on, please. Stand behind me and buckle the straps. She reached under her crotch to insert the dildo in her pussy.\n\n\"You ate all my lubricant. You should have left some inside me so I could get this thing in more easily.\" \n\n\"I'm sorry. It was so delicious, I couldn't resist.\" \n\n\"That's okay. Just thinking about how I'll soon be fucking your beautiful ass is getting me wet enough anyhow.\" \n\nSeconds later, one hand at her crotch to hold the dildo in her pussy, Dixie stepped closer to him so he could buckle the toy around her waist. When she turned and faced Jeremy again, she smiled at the look of anticipation on his face as he gazed at the new dildo that she had ready for him. He could see it was much bigger than the other had been, at least eight inches long and thicker in proportion. He was eagerly looking forward to the immense pleasure of feeling Dixie easing it into his ass, followed by driving in and out, stretching the whole channel it would be filling, and massaging his prostate. \n\n\"Okay, you know what to do now.\" He knew extremely well, and Jeremy got on his knees a short distance from the sofa and leaned forward to rest his arms on it. He had to be far enough from the front of the sofa that he could masturbate when the need became overwhelming. \n\nBefore starting, Dixie rested her hands on his smooth, white buttocks. \"I really do like your ass, Jeremy. It's nice and smooth and just the right size, a bit plump, but not fat.\" She slid her hands around so her fingers were fondling the insides of his ass cheeks. \"You don't have a lot of hair back here like some guys do, either. I like that.\" \n\nHer hands left his ass and he heard the faint, squeaking noise of the Aquaglide being opened and, although he had not been told, Jeremy reached back and spread his cheeks apart. The neck of the bottle penetrated his ass slightly, and he felt the cool, pleasant sensation of the lubricant gushing in. This was followed seconds later by the even better sensation of Dixie's middle finger squeezing inside him and spreading it all over the sides of his ass, as far in as she could reach. The next thing would be for Dixie to spread more of the Aquaglide on the dildo that would soon be bringing so much joy to him. \n\nJeremy's hands were still holding his ass cheeks apart when he felt two fingers, one on either side, pulling apart the sides of the hole that was about to be stuffed so full and so pleasurably. The next thing he felt was the tip of Dixie's new dildo pressed against the tiny hole they had created. The more tapered end worked perfectly; with a slight push, he felt it wedge inside his ass, all the way to the ridge around the head. \n\nIncredible pleasure rocketed out from around the point of entry. To Jeremy, the initial penetration was one of the high points of being fucked, but only one of several. Everything about taking this woman's dildo in his ass was more fun than he would ever have expected. He and Dixie still held his ass open and, with another push, an additional inch of plastic cock was inside, sending fresh waves of bliss crashing through his body. Fantastically good as it felt to him already, he knew the best was still ahead. \n\nIt felt almost as good to Dixie, and she also knew the best part was still ahead. She loved fucking young men like Jeremy, both from the feeling of power she got from it and because of the attraction that men's asses had always held for her. After the third thrust, when she no longer needed to hold his tight hole open, Dixie allowed her hands to once again roam over the smooth, hairless contours of her current favorite. \n\nJeremy's ass was probably the best one she had ever fucked, and she really hoped she would be able to persuade him to take one of her classes in the fall semester. Dixie much preferred fucking male students who were in one of her classes because that gave her some leverage she wouldn't have had otherwise. Even if, as with Jeremy, she didn't need it, she still preferred to have something to hold over them, as well as having a way to repay them for giving her fun.\n\nThe dildo inside Dixie's pussy wasn't giving her much fun yet, but that would change after she had started driving the other one all the way in and out of Jeremy. Her steady back and forth movements would make the toy move inside her, and the spur would massage her clit. She had allocated two hours of her time to the session with Jeremy and very much hoped to use it all. \n\nHe hoped to spend a lot of time in his current position too. Her next thrust, besides stretching his ass farther open and giving incredible pleasure to his rear channel, started to massage his prostate. Jeremy knew it was sometimes called the male clitoris, and the immense joy he derived from the contact gave him an idea of how happy it made Dixie and other women when he fondled or licked their clits. Waves of pleasure crashed through his body from his prostate as it was caressed by the pleasure bumps on the new dildo. They were joined by other, even stronger waves that throbbed from where he was getting so wonderfully stuffed and from his ass that was being alternately stretched and released as the dildo plunged in and out. \n\nDixie's new dildo, being so much longer and thicker that the old one, was giving his ass the best fucking it had ever gotten. It felt so good that Jeremy, as usual, became impatient to get it all the way in. He spread his legs a bit more and moved his face closer to the sofa cushion while arching his back downward. This elevated his ass slightly, giving Dixie even better access to where he wanted her dildo. Besides the changes in position, on the next stroke, when he felt the plastic cock surging into him, he thrust his ass back to meet it, taking it in even deeper. \n\nDixie chuckled at his reaction to her toy, which was how he usually responded. \"You really like what we're doing here, don't you? I'm glad, because it makes it more fun for me too.\" Like most people, the professor enjoyed any kind of sex a lot more when her partner was also deriving pleasure. \n\nAnd Jeremy was deriving immense pleasure, so much that he didn't even interrupt his moaning and whimpering to agree with the woman who was giving it to him. With every stroke, her new dildo drove into him deeper than the previous toy had ever gone. Its thicker base spread his ass open wider than it had ever been stretched, producing greater waves of bliss that reverberated throughout his body. Even the molded bumps on the shaft, designed to stimulate the sweet spots inside a pussy, massaged his prostate gland in ever-changing ways, sending multiple swirls of delight, mingling with the other kinds of pleasure her plastic cock was giving him. With every thrust, the new toy plunged deeper and deeper into his ass, bringing him ever closer to ecstasy. \n\nFinally, the entire dildo was lodged inside, saturating his body with more pleasure than he could have ever thought possible. He felt Dixie's thighs pressed snugly against his and her hands on his hips, and he knew she was prepared to begin the deep strokes and slow, steady fucking they both wanted so much. Before she started, though, the professor leaned forward, squeezing his shoulders with her hands and mashing her succulent breasts against his back. \n\nShe whispered into his ear. \"This is great, Jeremy. I'm glad you like it so much too. I hope you can take one of my classes in the fall semester, and we can do a lot more of this. A couple of times a week, even.\" \n\nHe couldn't answer out loud but he nodded his head. He would do anything or say anything to keep his ass crammed full of that wonderful plastic cock, today and for as long as he could manage in the future. Since he was not a serious student, and was attending college mostly for fun, he would arrange his schedule to include one of Professor Dugan's classes. The sure honors grade he knew he would receive, even without ever cracking a book, helped him decide, but mostly, it was the amazing pleasure he wanted to keep getting from her dildo. ",
        "Although he appeared to have agreed, Dixie realized nodding his head was hardly a firm commitment. Besides having the best ass she had ever fucked, Jeremy had shown himself to be skilled at eating her pussy. Physically, he was perfect too, short, a bit chubby, and very fair-skinned. She very much wanted him to return. To assure that he did, she decided to give him the best time possible, while enjoying herself to the maximum as well. Having him eat her pussy would be a good start, and she hoped to find other ways. \n\nDixie straightened her back again and returned her hands to Jeremy's hips. Moving slowly and tantalizingly, she drew the dildo out of his ass, paused with only an inch remained inside, and drove the entire toy all the way in again. Jeremy, moaning from the incredible pleasure, fucked his ass back to fully envelop it. \n\nHis cock was at full erection, and badly in need of being masturbated, so Jeremy reached under his body to take it in his hand. Dixie saw what he was doing and, after driving her dildo all the way into his ass and leaning over him, she whispered \"Want me to do that?\" \n\n\"Would you?\"\n\n\"Glad to.\" Dixie spread some of the Aquaglide on her hand and reached under Jeremy's body. With her other hand gripping his shoulder, she gently took hold of his cock and started stroking it. While she continued slowly driving her dildo in and out of his ass, Dixie pumped his cock in the same rhythm\n\n\"Uh! Uh! Uh!\" Jeremy whimpered as another source made its contribution to the ocean of pleasure that was inundating his body. \n\nDixie was having a great time too. With every long, smooth stroke of one dildo into Jeremy's ass, the other toy moved inside her pussy. The cleverly designed stars and triangles performed exactly as they were meant to, poking and prodding the sweet spots there and sending extra shivers of joy gushing through her body. The spur attached to the base of her dildo tickled her clit every time she moved forward. The sensation was thrilling, but not enough to start her cumming until her whole level of arousal had ratcheted up much higher. \n\nShe even liked the round, hard feel of Jeremy's cock in her hand as she pumped it back and forth simultaneously with driving her dildo into him. Dixie really wanted him in one of her classes for the next semester, and for as long as he was a student after that, and hoped that jacking him off while fucking him would be encouragement enough. She might even promise to do the same for him every time, besides having him eat her pussy, since he was really special.\n\nAs Jeremy moaned and whimpered from the unprecedented pleasure he was getting, one source started to dominate. Dixie's soft, oiled hand pumping his cock felt better than some pussies he had known, and he could feel the pleasure from it welling up inside his body, concentrating in his groin. \n\n\"Faster, Dixie. I'm ready to cum,\" he whispered to the sexy woman who was leaning over him and pleasuring him in so many ways. \n\nShe knew what he meant, of course, and drove the dildo all the way into his ass and held it there, while she pumped his cock faster. After a few dozen strokes, she felt it throbbing, and it suddenly jerked in her hand as Jeremy ejaculated onto the carpet. As he did, the muscles in his buttocks tightened, and a sudden massive wave of pleasure flooded his body from the entire length of his ass and rectum that was filled by the dildo. He sighed blissfully, almost passing out from sheer ecstasy. \n\nDixie stroked his cock a few more times until his cum was through spurting. Some of it splashed onto her hand, which she brought up to her mouth and licked. \"Not bad,\" she told herself,\" thinking about something else she might do for him if it became necessary. \n\nShe straightened up, put her hands on Jeremy's hips, drew the dildo back and drove it forward again, filling his ass and rectum and sending fresh waves of incredible pleasure coursing through his body. She remained upright for a while, slowly driving her dildo in and out of his delightful ass, while he moaned and whimpered and fucked back to meet her. Jeremy's hips began to swivel, driving his knees into the carpet like pistons, while he writhed from the bliss the big dildo was giving him as it plunged in and out. As he once again neared ecstasy, he no longer had control of his body, with his torso moving up and down and his rear end swinging from side to side. With her hands on his hips, and using long, slow strokes, Dixie rode him like an expert horsewoman riding a bucking bronco. \n\nThe same slow, deep strokes continued for a long time, bringing both partners closer to absolute bliss. Sometimes Dixie leaned forward, affectionately squeezing Jeremy's shoulders, her nipples digging erotically into his back, and whispered to him how wonderful a time she was having. Sometimes she was upright, her hands on his hips, driving her dildo into him as deeply as possible. He liked either way, with Dixie's hard nipples against his skin and her soft whispers, or the longer, deeper strokes into his ass. \n\nDixie liked both ways too, and when she stroked into him from either position, she could feel the dildo moving in her pussy, its molded pleasure bumps massaging her most sensitive places while the spur raked across her clit. The buildup had been long and slow and gradual, and a total delight, but she could tell she getting close to cumming. \n\nLeaning over Jeremy, Dixie whispered into his ear. \"I'm almost ready to cum. I'm going to start fucking you faster.\" There was no real need to whisper but they both enjoyed the intimacy of it. \n\n\"Good. Really give it to me.\" \n\nStraightening up and placing her hands firmly on his hips again, Dixie started slowly increasing the speed of her thrusts. The Aquaglide was still working perfectly and, even though Jeremy's ass was tight, the dildo surged easily in and out. Up until that time, Dixie's moans and sighs and other expressions of delight had been drowned out by the louder ones of Jeremy, but she became noisier as her climax approached. \n\nFaster and faster, the professor's dildo surged into Jeremy's ass, and he matched its speed with his own thrusts back to meet it. Harder and harder she fucked him, as she approached ecstasy from what the other dildo was doing to her pussy. With every movement, it fondled and tickled her sweet spots, while the spur did incredible things to her clit. \n\n\"I'm cumming,\" Dixie cried out joyfully. Her movements became faster and more frenzied, but she kept her balance, staying on her knees, and supporting her weight on Jeremy's hips as she continued pounding the dildos into his ass and her own pussy. \n\n\"Uh! Uh! Uh! Uh!\" she whimpered, as she increased the speed of her strokes. \n\nThe whimpering and the fucking continued. The man on his knees and the woman riding on him moved wildly and frenetically until she trilled \"Yes! Yes!\" and climaxed. \n\nDixie sprawled on top of Jeremy, more satisfied than she had ever been from any of their previous times together. Not only had the new toy in Jeremy's ass given him the best fucking he had ever gotten, hers had done the same for her. She was tired from her great orgasm, and in no hurry to dismount from him. \n\nHe was in no hurry for her to leave either. The dildo remained stuffed deep inside him, and pleasure throbbed through his body from the entire channel it filled, from his ass that remained so pleasurably stretched and from his prostate. With every movement of either him or Dixie the dildo stimulated what he now thought of as his clit. From the immense pleasure he had gotten, his cock was stiff again, and as badly in need of masturbation as it had been before. He reached under his body, took hold of it and started slowly stroking it. \n\nOnce again, Dixie saw what he was doing and reached down to cover his hand with hers. \"Let me,\" she murmured. \n\nHe let go of his cock and her soft hand started slowly stroking it again. With every movement of hers, the dildo moved inside him, and the delightful swirls of exquisite pleasure quickly had him close to cumming. He told the woman who was sprawled on top of him, and she started to jack him off faster. After a few more minutes, he climaxed, spurting more semen onto the carpet. After he was through cumming, she stopped, and removed her hand from his cock. For a long time, they were both quiet and still. \n\nAlthough neither one liked the idea of ending the great time they were still having together, they both had things they needed to do, and knew they would have to get off their knees. Dixie straightened up and backed away, slowly pulling the entire eight inches of plastic cock from Jeremy's ass. He sighed, from the enormous pleasure she had given him, walked on his knees to the sofa, and used it to help him stand up. His ass was actually a little sore from the long pounding it had endured, but it was a good soreness, because it reminded him of how wonderful that day had been. \n\n\"Help me get this thing off, will you?\" she asked him, turning her back so he could unbuckle the strap. \n\nHe did so, while admiring the succulent curve of her ass, and she pulled the dildo from her pussy, letting loose a great gush of her fluids that ran down her legs and dripped into the carpet. They were both unashamedly naked, but too sexed out to care very much. What they mostly had a need to do was talk about what they would be doing in the fall semester. \n\n\"I'll sign up for the last class you have in the afternoon. That way, we'll be able to come back here and spend as much time together as we want.\" \n\n\"Good idea. And I'll arrange it so my last class of the day is not an advanced one, so you can qualify to enroll in it.\" \n\nHaving decided on that, they both slowly got dressed. Dixie had some work that needed doing before tomorrow's final exam and Jeremy had finals in other classes and he needed to cram for them. Before he left, they paused at the door to share a long embrace and a deep, very affectionate kiss.\n\nAlthough they were very fond of each other and regular sex partners, it was the first kiss. Neither of them expected it to be their last, and they both hoped it wouldn't be. \n\n*\n\nThank you for reading this story. I hope you had as much fun as Dixie and Jeremy did, and expect to have in the fall semester. I like writing stories on Literotica, but I like it a lot more when I know that people are reading and enjoying them, and I appreciate it when readers take the time to express their opinions by voting. Like most authors on Literotica, I practically live for feedback from readers, either public comments or email to me. Such feedback, whether praise or criticism, helps me to write more and better stories, and I respond to it whenever I can. "
    ],
    "authorname": "Boxlicker101",
    "tags": [
        "strapon",
        "woman fucking man",
        "dildo"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/the-professors-dildo-ch-02"
}