{
    "title": "The Usual Suspects Ch. 02",
    "pages": [
        "The chronological order of my stories is now listed in WifeWatchman's biography.\n\nFeedback and constructive criticism is very much appreciated, and I encourage feedback for ideas.\n\nThis story contains graphic scenes, language and actions that might be extremely offensive to some people. These scenes, words and actions are used only for the literary purposes of this story. The author does not condone murder, racial language, violence, rape or violence against women, and any depictions of any of these in this story should not be construed as acceptance of the above.\n\nPart 5 - Political Boundaries \n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" shouted the lovely redheaded MILF reporterette at 7:00am, Wednesday, October 5th, from in front of the Courthouse. \"Channel Two News has learned that the Town & County Council has passed structural changes to the Police Department, which includes the elimination of a Precinct and a consolidation of Operations within the Police Force!\"\n\n\"It is also going to be a big day within the Court system here, as rulings on Jeremy Moreland and former Police Commander Robert Brownlee are expected to be handed down. The State Supreme Court will hand down its emergency ruling on the Jeremy Moreland case, and that is expected before noon. The Federal Courts have already denied allowing the case into the Federal system, citing that Federal Law is already clear and established on this matter.\n\n\"Channel Two News has also learned that lawyers for the man accused of beating Jeremy Moreland potentially to death are going to Court to demand the State formally declare its charges against their client and proceed with the legal process. The State has asked for more time to file charges because Jeremy's status is in limbo pending the outcome of the State Right To Life's lawsuit.\"\n\n\"And in political news, SBI Director Jack Lewis met with Narcotics Task Force Director Richard Ferrell. Roll tape.\" \n\nThe tape rolled, and the voice of Jack Lewis praising Ferrell reached my ears. \"I want to congratulate Richard Ferrell and his agents for successfully solving the Jeremy Moreland case. I have nothing but the highest respect for and confidence in Richard Ferrell, and he will absolutely be considered as my successor as SBI Director when I win in November!\"\n\nBack to Bettina: \"And locally, former ADA Jenna Stiles brought out her harshest rhetoric yet against incumbent D.A. Gil Krasney. Roll tape.\" \n\nThe tape showed Jenna Stiles, her face almost as red as her hair, screaming to a group of supporters: \"Gil Krasney tried to sweep rape accusations under the rug, showing his hatred of women! And now we learn that Gil Krasney brought the hammer down on Coach Grimes, a black schoolteacher and coach, and then threw his Assistant D.A. Patterson under the bus for it! Gil Krasney has no honor, and he has no respect for minorities! This County needs a better man than Gil Krasney, and I am that man... and woman, too!\" The crowd cheered loudly.\n\nBack to Bettina: \"Public Policy Polling tells us that Director Lewis is opening a can on Governor Jared, and now leads 49-44%, better than the margin of error. And Jenna Stiles's campaign, once thought dead, is now within four points of D.A. Krasney, 48-44%. Early voting will begin in just a couple of weeks!\"\n\n\"Sir,\" asked Joanne Warner, \"what are the Police Structure changes about?\"\n\n\"They're going to fire all the redheads in the Police Force.\" I said. \"They consider me too rebellious.\" No laughter, not even a chuckle.\n\n\"Wow, tough audience today.\" I said. \"Okay, okay... all I can say now is that no jobs are threatened, and I'll tell everyone after the Council passes the Second Reading of the Bill...\n\n* * * * * * * * * * * * * * * *\n\nAt 8:00am I was in my office. The Crowbar-Level Team joined me, and we started the meeting by watching Priya's broadcast:\n\n\"This is Priya Ajmani, Five-Alive News in the Morning!\" shouted the beautiful Indian reporterette from in front of the State Office Building. \"Five-Alive News has learned that the Town & County Council has authorized a restructuring of their leadership. The legal team for Robert Brownlee is going to Court this morning, and will file papers demanding the Court require the Council to fill the vacant spot so that Police Commander Robert Brownlee gets his job with the Police Force back!\"\n\nEveryone groaned as Priya turned to her guests: Thomas P. Cook and Robert Brownlee. \"Commander Brownlee, why isn't the Council following the law and giving you your job with the Police back?\"\n\n\"Priya, it is obvious that the corruption within the Police Force starts at the top, with Chief Moynahan and Commander Troy.\" said Brownlee, who looked gaunt on camera. \"They're the ones illegally resisting my return to the Police Force, and their corruption will be overturned by the Courts.\"\n\n\"Councilman Cook,\" said Priya, \"will the Council do the right thing and restructure the Police so that Commander Brownlee returns to the Force?\"\n\n\"Priya,\" said Cook, \"I'm doing what I can, but it's an uphill battle to force the rest of the Council to stop violating the law with regard to Commander Brownlee. We're just going to have to ask the Courts to make things right for us.\" Commander Della Harlow came into my office, scowling at Cook's words.\n\nPriya finished up, saying: \"KSTD has contacted the TCPD Press Relations Office, and we have received no reply to our requests for comment. This is Priya Ajmani, bringing you the news you have a right to know!\"\n\n\"She called the number to the Press Relations Office.\" said Della. \"Of course we have no one in there now, as Scott Peterson is working for the Sheriff now.\"\n\n\"Commander Harlow, if you will have Captain Aaron have Peterson's phone forward all calls to the Duty Desk, so they can transfer those calls to you or me or someone authorized to speak for this Department, that will solve that little problem.\" I said. \"Priya's playing dirty pool again.\"\n\n\"She's not the only one, sir.\" said Cindy. \"They're trying to force Brownlee back into the TCPD.\"\n\n\"I just don't get that.\" said Wes 'Coldiron' Masters. \"It should be obvious that Brownlee is not wanted back here, that his return crushes our Officers' morale. Don't the Council Members know that?\"\n\n\"Yes, they do.\" I said. \"And in fairness, it's not the majority of the Council, but two Haters who seem willing to do all they can to fuck us up. They want us demoralized. And you get just one guess as to who those two are.\"\n\n\"The Usual Suspects.\" Cindy replied. \"Cook and Carnes.\"\n\n* * * * * * * * * * * * * * * *\n\n\"Okay,\" I said as we continued the 'C-Level' meeting some minutes later, discussing the Wargrave Estate invasion, \"Sergeant Irwin reported that they found some evidence of people recently being at the Myers home. They called in a larger team and swept the house, but found no perps there. I think we missed them by the hairs of their chinny-chin-chins. So, do we know anything about Cook's staff?\"\n\n\"Yes sir.\" said Teresa. \"The Wargrave Estate would seem like too much house for a bachelor like Councilman Cook, but he often has dinner parties there. And sometimes he has parties that might be something your friends of the Libertines or Hedonists would be accused of having.\"\n\n\"Orgies.\" I said, shocking Lt. Masters.\n\n\"Yes sir.\" said Teresa. \"Swing parties, sometimes a Gentlemen's Evening, with poker parties and prostitutes present. All the fun stuff this Town seems to have more than its fair share of.\" I loved the way 'Teresa Cunt' could be sarcastic about things.\n\n\"So,\" Teresa went on, \"Cook will bring in chefs for those parties, and sometimes have a couple of butlers, male and female, if guests are staying overnight. Last, he has a live-in maid named Consuela, who we believe is an illegal alien, and she does the cooking if no one else is there. I suspect he beds her most nights.\"\n\nThis was not an Agency of the Weak-Minded, and I wondered only if Consuela was Teresa's C.I. on this, or if it was someone else on the staff. Probably Consuela... but then who let the bad guys in?\n\n\"Okay,\" I said. \"Good information, thanks for acquiring it. Let's see, Cook's office had some minor damage to a couple of the walls in his office. Looks like the bastards started looking for the One Ring to Bind Them All, but were observed and didn't get to finish.\"\n\n\"Lucky for Cook that he didn't go check out that light himself rather than call us.\" said Masters.\n\n\"Opportunity missed, Commander.\" Cindy said.\n\n\"Naah,\" I said, \"we're here to protect the rights and lives of all our citizens, good and bad, even Thomas P. Cook. I think the relevant Bible verse is Matthew 5:45.\"\n\n\"Sermon on the Mount.\" said Masters. \"Where do you think they'll hit next, sir?\"\n\n\"We'll have to do some thinking about that.\" I said. \"My guess... is my second home, the Cabin.\"\n\n\"What?!\" came a chorus.\n\n\"And after that, my wife's office.\" I went on. \"They hit Westboro's home, then Wargrave's. I think they're after something related to past cases of ours...\"\n\n* * * * * * * * * * * * * * * *\n\nAt 10:30am, Cindy came flying into my office, and went for the TV remote. \"You need to see this.\" she said.\n\nKSTD was covering a press conference. District Attorney Gil Krasney was standing on a podium in front of the A.M.E. Church, with the Rev. Joseph E. Williams and Reginald B.F. Lewis next to him.\n\n\"I am not a racist!\" Krasney was yelling to the audience, which KSTD was careful not to show beyond a few people with signs. \"I have supported the Black Community, and the fair application of the law for Citizens of all colors, orientations and backgrounds!\"\n\n\"In addition,\" Krasney yelled, his voice a snarl, \"my opponent Jenna Stiles is a liar! Her record of prosecutions was poor, especially in comparison to the other Assistant D.A.s in my Office, and she has nothing but specious attacks and race-baiting left to attack me with! I ask you to reject her dishonest tactics, and support me and my good civil rights record in November!\"\n\nCindy turned off the TV. \"I've seen all I can stomach.\" she said.\n\n\"My carpet thanks you for turning that shit off.\" I said. \"Have you spoken to Jenna lately?\"\n\n\"Yes.\" Cindy said. \"She called and said Krasney tried to browbeat her into stopping the racial comments, which she sincerely believes are true, and that she was going 'scorched earth' on him. But it looks like he beat her to the punch. My only question is... who let him know he needed to do that?\"\n\n\"I would say the Usual Suspects... the Press.\" I said. \"They really want to gin this up for their ratings.\"\n\n\"It's not KSTD.\" said Cindy. \"Priya hates his guts.\"\n\n\"Who's the executive producer there?\" I asked. \"The top guy?\"\n\n\"Dan Walther.\" said Cindy. \"He's the Acme Group's hired 'boy'... oh, I see where you're going with this... he and Krasney are friends, aren't they?\"\n\n\"If memory serves me correctly.\" I replied.\n\n\"And it always does.\"\n\n\"By the way,\" I added, \"don't assume Priya hates Krasney or is on Jenna's side in the race.\"\n\n\"What?\" Cindy gasped. \"Priya is always saying within my hearing that she hates Krasney! I'm not so sure you're right on this one, Iron Crowbar.\"\n\n\"Well, I don't insist on it...\" I said, turning back to the television... knowing Cindy just hated it when I said that...\n\n* * * * * * * * * * * * * * * *\n\nAt 12:00 noon, Wednesday, October 5th, I got a call from Paulina Patterson. \"The rulings are coming down.\" I turned on the TV to watch Bettina, who was waiting with other reporters in front of the Courthouse.\n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" she said as reporters started rushing around. \"The State Supreme Court has ruled summarily in favor of the parents of Jeremy Moreland, and has lifted all stays enjoining them from having his respirator turned off! The Federal Courts have declared they will not pick up the case, so the way is clear to allow Jeremy to die peacefully and with dignity!\"\n\n\"What's that?\" Bettina said a moment later, listening to someone talk to her. \"Ladies and gentlemen, the Robert Brownlee lawsuit ruling is being postponed until after the November election! However------ are you sure?... okay... wow... ladies and gentlemen, the recent injunction to force Robert Brownlee into command of the newly created Police Force Operations Division has been denied! This clears the Council to continue their plans without consideration of Brownlee. Judge Rodney K. Watts made the ruling...\"\n\n* * * * * * * * * * * * * * * *\n\n\"The County Attorney wanted the postponement on Brownlee.\" said Paulina as she sat in my office thirty minutes later. \"His lawyers wanted an immediate ruling, and thought they could get him in with this new structure change. Judge Watts shredded it.\"\n\n\"Good.\" I said. \"Looks to me like Judge Watts is going to take the County's side against Brownlee, and will wait until after the Election to see how easy it will be to put Brownlee in the Public Health Department.\"\n\n\"I don't want that filthy piece of crap in charge of my Public Health.\" said Paulina with some passion in her voice.\n\n\"He won't be.\" I said. \"He won't take the job. He's all-in on getting back in the TCPD, God only knows why. By the way, what are you hearing about the race for Westboro's seat?\"\n\n\"Only that it's probably going to be close between Michaels and Peterson.\" Paulina said. \"Most people in City Hall are already planning for a run-off election three weeks after the General. So, who's handling security at the Hospital?\"\n\n\"Campus Police.\" I said. \"State Troopers are being brought in, and the Sheriff is going to have a contingency there, as well.\"\n\n\"Very sad for Jeremy.\" said Paulina. \"But maybe they'll let him die in peace now.\"\n\nPart 6 - The Quick and the Dead \n\nJeremy's mother kissed his forehead, tears streaming down her cheeks as she said goodbye to her son for the last time. Then his fianc\u00e9e Stella tearfully kissed his cheek. One of her friends, who had not been in the Alternative Theater play, helped her as she walked away sobbing.\n\nThe minister prayed for Jeremy's eternal soul and for his family. Jeremy's father gave Dr. Morgan the signal, and Dr. Morgan shut down the respirator and pacemaker keeping Jeremy in existence...\n\n* * * * * * * * * * * * * * * *\n\nA near-war with the SBI was narrowly averted when Judge Watts ordered that Martha the M.E. would perform the autopsy, but at the State Crime Lab. The SBI had wanted their own medical examiner, but Lt. Tanya Perlman had objected, stating that an 'independent' and 'trustworthy' M.E. was needed. Needless to say, this caused much hatred for Lt. Perlman within the SBI ranks.\n\nLt. Perlman was an observer, and had Crime Lab technicians ready to take charge of each piece of evidence. SBI Agents, including Deputy Director Robert Gaston, were also watching... as was I, Your Iron Crowbar. The tension was palpable.\n\n* * * * * * * * * * * * * * * *\n\nStill Wednesday, October 5th. I came to Tanya's office at 3:00pm at her request. Also there were Sheriff Daniel Allgood, FBI Special Agent in Charge Jack Muscone, the State Attorney, who was named Glenn Alberts, and SBI Agents Fischer and Crenshaw.\n\n\"Martha is still finishing things up and collecting samples,\" Tanya said, \"but she expedited the examination of Jeremy's brain. While the blow to the head severely damaged him and probably would've blinded him at the very least, she found damage to the nerves in the brain, in the cerebellum, and the brain stem that she thinks was caused by a potent neurotoxin. She said the nearest example she can think of is cobra venom, but she doesn't think it's an actual cobra bite, and she's running tests.\"\n\n\"Did she find any injection marks on Jeremy?\" asked Carter Fischer.\n\n\"Martha didn't,\" Tanya replied, \"because Jeremy's body was on autopilot and would've healed over a small syringe injection. However, there was an injection just below the wound where Jeremy was hit, and a photograph of it was taken when Jeremy was first brought to the Hospital. The Campus Police Officer that took the photo thought medics had done it for some reason, but we now have affidavits from all people at the scene that none of them gave Jeremy an injection near his head.\"\n\n\"What does this mean?\" asked the State Attorney, Glenn Alberts. He was becoming overweight and had wavy brownish-auburn hair. If Cindy were here, she would be mentioning the 'smarmy-vibe' in spades. \"Did the tire iron blow kill the boy, or not?\"\n\n\"It is likely that the blow did kill Jeremy.\" said Tanya. \"But it is not 100% certain, in Martha's estimation... until she knows more about the drug that was injected into him.\"\n\n\"I guess we better go talk to Mr. Ken and see if he injected Jeremy with something.\" said Agent Crenshaw.\n\n\"Before you do,\" I said, \"I'd suggest waiting for the test results to come back. Once you ask Ken, in front of his lawyer, about a drug injection, then 'reasonable doubt' is going to hit the fan and splatter all over the place.\" Crenshaw and Fischer nodded, their faces sober.\n\n\"Okay, guys, that's it.\" said Tanya. \"If Agent Muscone and Commander Troy would stay, I'd appreciate it. The rest of you can go.\"\n\n* * * * * * * * * * * * * * * *\n\nOnce we were alone with Tanya, she said \"I called you guys in to talk about this venom drug business. Martha told me explicitly that she was mentioning cobra venom to give a general frame of reference, but that it was definitely not cobra venom. She thinks it's a synthesized drug. If stuff like that is going around, you guys might want to start looking into it.\"\n\n\"I'll notify the Bureau.\" said Muscone. \"But exactly what should I tell them?\"\n\n\"Just to be alert for any underworld talk about synthesized nerve agents.\" I said. \"I don't think this is Sarin or VX, but it might be something somebody made, and somehow found Jeremy in about the fifteen seconds after Ken hit him and before the Campus Police arrived to find him.\"\n\n\"That was actually 43 seconds.\" said Tanya. \"Your mother made me check.\"\n\n\"My mother knows what's going on here, doesn't she?\" I asked, very sure.\n\n\"You'll have to ask her.\" Tanya said... and then her eyes began to sparkle as she said \"I now know where your penchant for not telling subordinates about things came from: it was inherited.\"\n\nA red crowbar was waved in Tanya's general direction.\n\n* * * * * * * * * * * * * * * *\n\n\"We're fucked.\" said Paulina Patterson.\n\n\"In a good or bad way?\" I asked. She and I were in my office, with Cindy on the sofa.\n\n\"Bad.\" Paulina said. \"Ken's lawyer already has heard about the autopsy results, and he's told Ken as well as the State Attorney that there will be no plea deals.\"\n\n\"So only charge him with aggravated assault.\" I said. \"He's confessed to that.\"\n\n\"Lynch, his lawyer, is making a motion to have the confession thrown out.\" Paulina said. \"He is saying that his client made that confession under the duress of being charged with murder. Since there is, quote, 'reasonable doubt', unquote, about that, Lynch is going for the whole enchilada to get the charges dropped. Oh, he also mentioned that you, Don, were bullying Ken, which added to the duress that led to the confession.\"\n\n\"Fer cryin' out loud------- oh.\" I said. \"Of course. I see what's going on now.\"\n\n\"What's that?\" asked Cindy.\n\n\"Let me ask you: who told Lynch about the autopsy report... which has not been published yet?\"\n\n\"Could've been anyone.\" said Paulina.\n\n\"No, it could not have been.\" I replied. \"Martha told only Tanya some of the things about her findings. Only Tanya. Tanya told only a few of us in the room.\"\n\n\"Crenshaw or Fischer?\" asked Cindy.\n\n\"I have 'reasonable doubt' that it was them.\" I said. \"Lewis has already showered Ferrell with praise for 'solving' this crime. Would Crenshaw and Fischer risk their careers... and maybe their lives... by making Lewis and Ferrell look bad?\"",
        "\"I'm sure Jack Muscone would not have told Lynch a thing.\" Cindy said. \"Nor would you... unless you have something sneaky up your sleeve.\"\n\n\"No, Scout's Honor it wasn't me.\" I said. \"And by the process of elimination, that leaves....\"\n\n\"The State Attorney.\" said Paulina. \"But why?\"\n\n\"He's a lazy ass bum.\" I said. \"He doesn't want to try this case at all. He wants it to go away. So he'll probably not fight Lynch's motions, and Ken. Will. Walk.\"\n\n\"No way in hell!\" Paulina exclaimed. She got up and stormed out the door, quickly saying goodbye along the way.\n\nPart 7 - Smoke and Mirrors \n\nWednesday, October 5th, 5:00pm.\n\n\"Okay, we're finally starting to get some money in.\" Jenna Stiles said as she sat with her Campaign Manager and three remaining volunteers at the table in her Campaign Office. \"We've paid for this place through the Election, we've paid bills and distributed what we could in back pay. We've got a little bit for advertising. So, let's plan our homestretch strategy.\"\n\n\"Ladies, I don't know about any of you,\" said the Campaign Manager, \"but I really want to just go 'scorched earth' on Krasney. Win or lose, let's leave nothing on the Campaign Room floor, so to speak.\"\n\n\"I'm already doing that.\" said Jenna. \"Here's my question: what's working better? the racial angle? or the misogyny angle?\"\n\n\"Race.\" said one of the volunteers. \"With respect, ma'am... to be honest, the women's issue just hasn't been resonating. It doesn't get any men, and it doesn't get nearly as many women as you might expect. But race? We're up tremendously with the Black vote, and doing better with the Hispanic vote, as well. Painting Krasney as the racist he is, is what's working for us.\"\n\n*BUZZZZZZZZZ-ZOOOMMMMMMM!*\n\nThe sound they'd just heard was of a motorcycle speeding by the Campaign Headquarters window.\n\n\"Wow, that sounded like he was practically on the sidewalk.\" Jenna said. She'd noticed someone on a motorcycle speed by... male, in a tan jacket, darker brown pants, black motorcycle helmet. \"Okay, let's get back to------\"\n\n*BUZZZZZZZZZ-ZOOOMMMMMMM!*\n\n*CRASH!*\n\n\"GAS!\" yelled one of the women as purple smoke billowed through the room, coming from whatever had been thrown through the glass window, shattering it.\n\n\"Get out of here!\" yelled Jenna. The women ran toward the brightest haze in the smoke-filled room, and came to the front door...\n\n* * * * * * * * * * * * * * * *\n\nThe Campaign Headquarters was roped off with crime scene tape. Officers were keeping the curious crowds at bay. Though it was rush hour, this location was not on a busy street, and it was not hard to close the street and force cars to detour.\n\nCaptain Cindy Ross and Detective Joanne Warner were inside, along with Sergeant Rudistan, Sr. Patrolman Morton, the TCPD Crime Lab team and the Fire Department's Arson team, which also investigated bombings. I was just outside, looking around the neighborhood.\n\nJohn Hardwood came up with a two-camera team. How he'd gotten through the Police cordon, I did not know... but would soon be finding out, I promised myself. Hardwood said \"What are you looking up at the sky for, Troy? The bombs are inside.\"\n\n\"How do you know that, Hardwood?\" I replied, just a little too quietly and evenly. \"Did you throw them in there yourself?\"\n\n\"Wha?! Of course not.\" said Hardwood. \"But shouldn't you be inside investigating the bombing?\"\n\n\"And you think you know better than me how I should do my job, butthead?\" I snarled back, knowing the media microphones would not be picking that up with my device full-on. \"My own counsel will I keep on how I solve this case.\"\n\n\"All right, guys, let's roll.\" said Hardwood. The cameras were switched on, and Hardwood began speaking. \"This is John Hardwood, KSTD Five-Alive News. We are at the scene of the bombing of Stiles Campaign Headquarters, and Police Commander Troy is at the scene. Commander, do you have any suspects?\"\n\n\"Why, yes I do.\" I said. \"White male, about 5'10\" in height, medium build, graying hair... and recently changed jobs from one news network to another.\"\n\nHardwood looked like he was going to explode as he yelled \"Cut!\" He turned to me and snarled \"Are you actually accusing me of this bombing?\"\n\n\"Time will tell, Mr. Hardwood.\" I said. Getting bored with toying with the arrogant reporter, I went inside.\n\n* * * * * * * * * * * * * * * *\n\nThere was a fine sprinkling of purple dust all over the place, and one shattered window, but otherwise there was no real damage in the Headquarters office. Jenna and her staff were shaken up, but not harmed.\n\n\"Sir,\" said Cindy, coming up to me, \"we have a description of the motorcyclist as male, mid-size, medium build, wearing a tan jacket and darker brown pants. Motorcycle is a bigger model, maybe a Harley, all black. I've already called Myron to start collecting and processing film footage of the street, and Franklin Washington is getting the warrant to support that.\"\n\n\"Cool beans.\" I said. \"But why Franklin? Why not Paulina?\"\n\nCindy said \"I couldn't reach her on the phone, so I just went to Plan (F)ranklin.\" I nodded.\n\n\"How's Jenna?\" I asked.\n\n\"She's okay. Pissed, more than anything.\" Cindy replied. \"She's talking to Joanne, and I'm letting that happen and just supervising.\"\n\n\"Good.\" I said. \"Okay, call Jack Muscone or someone on his team. If the SBI's Bureau of Firearms and Explosives (BFE) tries to come in, tell them they are not invited to any Crowbar parties, including this one...\"\n\n* * * * * * * * * * * * * * * *\n\nIt was 6:30pm, and Police Headquarters's Classroom 'J' contained Chief Moynahan, me, Cindy Ross, 'Coldiron' Masters, Teresa Croyle, Della Harlow, Joanne Warner, FBI Special Agents Martin Nash, Sandra Speer, Eduardo Escobar, and Jack Muscone... who had brought pizzas.\n\nThe SBI's BFE did try to come in, and Carter Fischer brought Agent Andy 'Dog' Redmond and SBI Lt. Bob Bohrmann to Headquarters. I had told the Duty Desk to keep them out, but Chief Moynahan told me we had to let them in. When they saw the FBI there, tensions grew immediately.\n\n\"Okay,\" said Moynahan, \"let's lay some ground rules here. You SBI Agents are here at my personal courtesy and the Governor's personal request. We have not invited you to be a part of this investigation, and neither of the people with crowbars in this room want you here.\"\n\n\"This was a bombing of a political headquarters.\" said Bohrmann. \"The SBI BFE should be part of the investigating team. I don't understand the hostility towards us, here or anywhere else.\"\n\n'It's the first three letters of your bureau's name.\" I said. \"S-B-I. I don't trust you, I don't trust your Director, and I think your organization is incompetent.\"\n\n\"We know how good you are, Commander Troy.\" said Bohrmann. \"So you're one of the few people in this State that can say that to my face. But I'm not Dick Ferrell, and I and my people are good at what we do. We're here to help... if you'll let us.\"\n\n\"Don't say it Mr. Crowbar.\" said Moynahan, knowing exactly what was about to come out of my potty mouth. Cindy stifled a laugh as she saw me roll my eyes.\n\n\"Chief, why is the FBI here?\" asked Agent Redmond. He was not tall but was big and stocky, a bit like Jack Muscone. \"No offense, but this isn't a national office campaign headquarters, nor does it cross State lines.\"\n\n\"They're here,\" said Moynahan, \"for the same reasons you claim to be: they are experts on crimes such as these, we work with them frequently due to our proximity to the State Line, and to be honest, Agent Redmond... we like them more than we like you.\" The silence that ensued was most very uncomfortable.\n\n\"Okayyyyy,\" said Moynahan, \"Captain Ross, what do we have on this?\"\n\nCindy described what had happened, and the description of the motorcyclist. \"We have secured a lot of camera footage of the area, and it's being processed. We're procuring more footage as we learn the motorcyclist's path to and from the scene of the crime. The license place of the motorcycle is obscured.\"\n\n\"Is that by the same methods as Newton's motorcycle?\" Sandra Speer asked.\n\n\"Who is Newton?\" asked Bohrmann.\n\n\"We'll discuss that in time.\" I said. \"For now, just roll with it.\" I nodded at Cindy to keep going.\n\n\"Here's the deal on that, as you FBI guys know.\" Cindy said. \"When we captured Newton's motorcycle, the FBI studied that refractive material on the license plate to see if they could create algorithms to defeat it. Your people are working on this footage now, but with limited success. They think it's a similar material, but constructed in a different way. We're going to have to be adaptive.\"\n\n\"Do you think this motorcyclist is related to Newton or Westboro in any way?\" asked Eduardo Escobar. All eyes turned to me.\n\n\"No way to know yet.\" I said. \"There are some similarities in that license plate masking, and also in this method of quick attack; some of you might remember that bozo that tried to assassinate me outside the tailor shop. But if it's anyone truly associated with the Westboro Syndicate? That remains to be seen.\"\n\n\"I know we're behind the power curve on this Westboro business.\" said Bohrmann, \"but are you guys suggesting that this is not related to Ms. Stiles's campaign headquarters, that it's not a politically-motivated attack on her?\"\n\n\"Lieutenant Bohrmann,\" I said, \"we are not suggesting anything. We are groping for data right now so that we can formulate theories. Obviously it relates to Jenna Stiles and her campaign, as it was her headquarters that was attacked.\"\n\n\"She's been blasting Krasney as a racist lately.\" said Della Harlow. \"You think this is some sort of retaliation?\"\n\n\"I don't think Krasney has it in him to do something like that.\" Cindy said.\n\n\"I agree.\" I said. \"I'm not ruling out a Krasney supporter, though.\"\n\n\"Sir,\" said Joanne Warner, \"may I say something?\"\n\n\"Of course, Detective.\" I said. Get a backbone Joanne! I thought silently to myself.\n\n\"Well, sir,\" said Joanne, \"this wasn't much of an attack on Ms. Styles. These smoke generators can be bought publicly. The University uses blue one when their football team runs onto the field; the cheerleaders even carry them in their hands when they run out, while the fireworks are smoking. They're not explosive and they're not dangerous.\"\n\n\"How do you know that?\" asked SBI Agent Redmond.\n\n\"This is why I don't like working with you SBI jerks.\" I said forcefully. \"My Detective is making a point. Shut your mouth and let her make it.\" The SBI Agents's eyes flashed anger, but they held their tongues.\n\nChief Moynahan interjected: \"The Crime Lab report confirms what Detective Warner is saying. These were just little smoke generators that huff and puff and don't blow anything down. They do create a mess, though. You were saying, Detective?\"\n\n\"Yes sir, that was what I was saying.\" Joanne said. \"These weren't explosives meant to physically harm the people inside. It's like it was just a warning, or just harassment.\"\n\n\"Good thought, Detective.\" I said. \"Even so, let's step up our presence and coverage at all public political events.\"\n\n* * * * * * * * * * * * * * * *\n\nAs the meeting was concluded, SBI Lt. Bohrmann came up to me and said \"Commander, may I speak with you privately? Perhaps in your office?\"\n\n\"Okay.\" I said. We went down the hallway. As we went, I heard Agent Redmond say to his boss \"Newton was that Detective that was Westboro's 'Sinon', his mole inside the TCPD.\" Bohrman nodded and told Redmond to check in with the FBI Agents. When we got to my office and went in, Cindy of course followed us in, as was expected of her.\n\n\"Er, Commander, I was hoping to speak with you alone.\" said Bohrmann, seeing my Captain's presence.\n\n\"You may say anything in front of Captain Ross that you would say to me.\" I replied. \"If that is not acceptable, then there's the door; don't let it hit you in the ass on the way out of here.\"\n\n\"Er, okay.\" said Bohrmann. \"Why don't we sit down and------\"\n\n\"This is my office, Bohrmann.\" I said with authority. \"I am the one who decides who sits down, not you. And I have not invited you to sit down.\"\n\n\"Okay.\" said Bohrmann, getting testy. \"I have tried hard, Commander, to ignore your blatant hostility of the SBI and your rudeness to me and my Agent today. What do you have against me?\"\n\n\"Who do you work for?\" I asked.\n\n\"The SBI. You know that------\"\n\n\"That's right!\" I said harshly. \"You are part of the State Bureau of Investigation. When you lie with those dogs, you have their fleas. I consider your organization and it's Director to be corrupt, with no redeeming value.\"\n\n\"Look, Commander, I know there are bad people in the SBI, but I'm not one of them. I'm trying to do my job, and------\"\n\n\"You see that drawing there?\" I thundered, pointing at the drawing of me by Gunny Guernica's son. \"That was drawn by the child whose U.S. Marine father was brutally blown away, shot dead, by your fellow SBI Agents. In addition, one of your fellow SBI Agents tried to murder me. So maybe I'm feeling just a little bit personal about it.\"\n\n\"There's bad blood on both sides.\" said Bohrmann. \"FBI Agent Muscone assaulted Dick Ferrell. You nearly killed Chaplain Ikea, albeit for hitting your mother. And then there's that machine gun attack------\"\n\n\"Yeah, when your SBI Agents were purposefully trying to kill some of my TCPD Officers.\" I said. \"Bohrmann, I do have one regret about that machine gun attack: if I had to do it over, I would've killed every single SBI Agent that was there. I regret letting them live, and I won't make that mistake again if they come into my County unannounced again.\"\n\nBohrmann just stared at me, gaping.\n\n\"That's right, Bohrmann,\" I said, seeing the look on the man's face, \"I regret not killing your fellow Agents. Now if you don't like how I feel about your Agency and it's people, then you can go fuck yourself along with the rest of them.\"\n\n\"So why did you become part of the SBI Reserve?\" asked Bohrmann, and I sensed he was more curious than anything else about it.\n\n\"At the time,\" I said, \"my Chief wanted me to. And I did think that I might be able to help clean up some of the deep corruption rotting the SBI from within, from its core. Now... I think the SBI is irredeemably corrupt, and will remain that way until it's dissolved by the State Legislature. Now if you say you're not one of them, prove it: resign from the SBI, find employment with another agency, perhaps the FBI, and maybe then I'll believe you're not as dirty as they are.\"\n\nBohrmann looked at Cindy, whose ice blue eyes showed whose side she was firmly upon. \"Okay, Commander,\" he said. \"I won't argue. But some of us in the SBI are good, and are working to clean up the mess. Give us a chance, and maybe even help us. We want things to be right just as much as you do.\"\n\n\"Have a good evening, Lieutenant.\" I said. \"Captain, escort Lieutenant Bohrmann to the Duty Desk, where he can sign out and go home.\"\n\n* * * * * * * * * * * * * * * *\n\nComing back in, Cindy said \"He seems genuinely confused by you. And may I speak freely?\"\n\n\"Sure.\" I said, sitting down. \"Oh, and have a seat. The office owner approves.\"\n\n\"Yeah, that was a bad breach on his part.\" Cindy said, sitting on the sofa. \"But sir... he is partly right: he may just be doing his job, and you were bearing down on him like a freight train coming out of the mountain passes. Do you really need to be so harsh on every SBI Agent?\"\n\nI nodded. \"Valid point. Let me ask... did you hear what his assistant Redmond told him about Julie?\"\n\n\"Yes sir, he said she was the traitor in our midst.\"\n\n\"More specifically, what did you hear?\"\n\n\"Uh, oh.... he called her Westboro's 'Sinon'.\"\n\n\"That's right.\" I said. \"Now to whom did we really discuss Ms. Newton's code name?\"\n\n\"Er, nobody.\" Cindy said. \"I get the drift... how did Redmond know that?\"\n\n\"Yes.\" I said. \"Good observing and deducing. Bohrmann may be clean and want to clean things up, but his own lapdog gave himself away. The SBI is chock-full of stupid idiots, as well as corrupt bastards. They can't help but give themselves away.\"\n\nJust then, the Duty Desk Sergeant came to the door. \"Commander, KSTD Reporter John Hardwood is in the Press Room. He wants you to come down for an in-person, on-camera interview.\"\n\n\"How did he ask?\" I asked.\n\n\"He just said 'Have Commander Troy come down for an in-person, on-camera interview.'.\" said the Sergeant.\n\nI looked at Cindy, then back to the Sergeant and said \"Sergeant, return to the Duty Desk. Do not tell Hardwood anything; don't say a word to him. Don't tell him I'm coming down or not coming down. Let him sit and spin.\"\n\nThe Sergeant grinned and excused himself and left. Cindy was trying not to laugh, then she said \"What has gotten in Hardwood's bonnet about you, sir? He's been a real tool, lately. Even got himself fired from KXTC.\"\n\n\"Yeah, I know.\" I said. \"The party never stops in our Town & County, Cindy. And it's always the Usual Suspects stirring the pot...\"\n\n* * * * * * * * * * * * * * * *\n\n9:30pm. Cindy came into my office, though I had just told her to go home.\n\n\"The Chief is still in his office.\" she said. \"The light is on and I can see his shadow.\"\n\n\"I know.\" I said. \"He's been on the phone pretty much since that meeting broke up earlier tonight. I'm not sure what about.\"\n\n\"Sir, what do you really think about the attack on Jenna today?\" Cindy asked.\n\nI looked at her, seeing that this was a question of a personal nature, not a professional one. \"I don't know what to think, at least not yet.\" I said, not trying the 'not enough data' dodge and weave tactic. \"Krasney issued a statement deploring the attack, complete with the usual political platitudes about subverting our democratic processes. And like you said today, I just don't think he has it in him to try something like that, nor to order anyone to try something like that.\"\n\n\"I talked to Myron and Mary.\" Cindy said. \"The motorcyclist went west, towards the River, after the attack, but was soon lost in traffic. The Precincts are putting out word to all the patrols.\" I nodded in acknowledgement.\n\nThen the door opened and the Chief looked in. \"You two are still here?\" he asked.\n\n\"Yes sir. As are you.\" I said. The Chief chuckled.\n\n\"Well, I'm going home.\" he said. \"Would you two care to join me at the Irish Pub for a post-day li-bay-tion?\"\n\n\"Sir, can I take a raincheck?\" I asked. \"I have to get home and tuck in some kids.\"\n\n\"I'll take you up on that, Chief.\" Cindy said. \"I need a drink after this day...\"\n\n* * * * * * * * * * * * * * * *\n\n\"Daddy!\" cried out Carole as I came into her bedroom. She was just being put into bed by her mother. \"Can I read you a book, Daddy?\" Yep, trying to stay awake, she was.\n\n\"Why don't we do that tomorrow, Sweetie?\" I replied. Bowser had come up to me and I was petting him while talking to Carole. \"You get some sleep, and I'll take Bowser out.\"\n\n\"Okay. Nite Daddy! Nite Bowser!\" Carole said. I kissed her forehead and collected Bowser. Jim was already asleep, so I just collected Buddy and took him and Bowser outside. I asked Laura to join me, and we sat on the patio while the dogs did their business.\n\n\"Honey,\" I said, \"how did my blood tests come out?\"\n\n\"So far, so good.\" Laura said. \"A bit of extra testosterone after we have sex, but that's no surprise. You had a bit more adrenalin in your bloodstream when you woke up out of that dream the other night. All other times, everything's been normal.\"\n\n\"Good.\" I said. \"By the way, and please do tell me straight out: is the Company looking for any more of Ned's drugs?\"\n\n\"Not that I know of.\" said Laura. \"But it's funny you should ask. Jack's boss with the FBI asked me the same question after Westboro's home was ransacked and Wargrave's was invaded. He thinks someone is after something.\"",
        "\"Think the Company might not tell you, since you're trying to retire?\"\n\n\"That, my darling,\" Laura replied, \"is a very distinct possibility. I'll see if I can find out anything tomorrow morning.\"\n\n\"You're aware of that bust the SBI made, where they found the synthetic drugs?\" I asked.\n\n\"Oh yes, that came right to my attention.\" Laura said. \"One of my groups is following up on that. The drugs were powerful analgesics, is what I'm told, but I'm going to sneak a peek at their classified reports to the Director.\"\n\nBowser and Buddy came up, having finished their business and wanting to get back to guarding their young charges. We went back inside, and Bowser bounded up the stairs to Carole's room, Buddy following at a more deliberate pace. Not to be rushed, that good Cocker Spaniel, I thought to myself.\n\nAnd speaking of not rushing... Laura and I took a long time getting upstairs ourselves. We made out like teenagers for a long time, kissing and feeling each other up...\n\nPart 8 - Maneuvers \n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" blared the lovely redhead MILF at 7:00am, Thursday, October 6th, from in front of Stiles Campaign Headquarters. \"Channel Two News is following the story of the bombing of District Attorney Candidate Jenna Stiles's Campaign Headquarters!\"\n\n\"In fairness,\" Bettina noted, \"the devices used in this attack were not bombs, but smoke-producing fireworks. But they created a mess, as well as a big scare for Ms. Stiles and her staff. Police have few leads in the case, saying that a motorcyclist threw the devices, which were tied to rocks, through the window and then sped off. Because he was wearing a helmet, Police are unsure of his facial features.\"\n\n\"This crime has brought in personnel from the FBI, Homeland Security, and the SBI, as well as the Town & County Police and the Fire Department Arson Squad.\" continued Bettina. \"Commander Donald Troy of the TCPD has issued a statement that the Police are going to increase their presence at all political events in the County.\"\n\n\"Meanwhile, D.A. Gil Krasney issued a statement that he condemns and deplores the attack on his opponent's Campaign Headquarters, and says the democratic process will not be denied by thugs using these terroristic methods...\"\n\n* * * * * * * * * * * * * * * *\n\n\"This is Priya Ajmani, Five-Alive News in the Morning!\" said the Indian beauty at 8:00am, in front of Police Headquarters. \"Five-Alive News is bringing coverage of the bombing of Jenna Stiles's Campaign Headquarters! Two bombs were thrown into the office yesterday, shattering the front wall of glass and going off inside, threatening the lives of the D.A. candidate and her staff! Let's go to John Hardwood at the scene!\"\n\n\"Thank you, Bettina.\" said Hardwood, from in front of Stiles Campaign HQ. \"As you can see, police tape has been put up, marking the scene where the bombs went off. With Commander Donald Troy and the Town & County Police overmatched by this bombing, the SBI's Bureau of Firearms and Explosives has been brought in to tackle the case. The FBI and Homeland Security are also monitoring the situation. Back to you, Priya.\"\n\n\"Thank you, John!\" shouted Priya. She then brought in Jenna's Campaign Manager and asked \"Do you believe D.A. Krasney is involved in any way with the bombing of his opponent's campaign headquarters?\"\n\n\"We have no idea who might've attacked Jenna Stiles for her strong campaign of protecting minorities' and women's rights, and exposing the truth about the current District Attorney.\" said the Campaign Manager. \"But we do know that we will not let this intimidation deter us from our commitment to the People of this County.\"\n\n\"Ma'am,\" asked Priya, \"do you believe the Town & County Police can solve this case, or is it out of their depths?\"\n\n\"The same Police that rescued Jenna months ago?\" replied the Campaign Manager. \"Yes, I trust them to get the job done, and to protect Ms. Stiles from further political threats to her safety.\"\n\nAfter concluding the interview, Priya then said \"District Attorney Krasney denies that he or anyone involved in his Campaign is responsible for the bombing of his opponent's Campaign Headquarters. This is Priya Ajmani, bringing you the news you have a right to know!\"\n\nNo mention of Krasney's statement, much less showing him deliver it. Bias? You get one guess...\n\n* * * * * * * * * * * * * * * *\n\nThe Director of the SBI Bureau of Firearms and Explosives (BFE), Lt. Bob Bohrmann, came into the office. He was offered coffee or water, which he politely declined, then was bidden to sit down, which he did.\n\n\"So,\" said his host, \"how did it go up there?\"\n\n\"Bad.\" said Bohrmann, almost sadly. \"Commander Troy, as well as the rest of his Police Force, have a very deep distrust of the SBI. With him personally, I would say it borders on pure 'hatred'. In some ways, I can understand: Sharples did try to murder him, and Pelletier did try to murder his former Police Chief and killed a U.S. Marine in the process. But Troy doesn't try to separate the wheat from the chaff, the good from the bad. He took verbal jab after jab at me the whole time I was there.\"\n\n\"That's too bad.\" said the host. \"And it's reflective of nearly the entire State. Virtually every local law enforcement agency hates our guts. How do we overcome that? What can Lewis do, when he becomes Governor, to overcome the distrust?\"\n\n\"Honestly, sir,\" said Bohrmann, \"I don't think we can. The City Police have orders to shoot us on sight within City Limits... they don't say that out loud, of course, but after Ferrell's last escapade up there, that's the unspoken word. I don't even need to tell you what Troy thinks of us, and he is practically worshipped by the whole northwest part of the State. The Southport Mob laughs in our faces. And Midtown... well, their Police have been going into the gutter since Moynahan and his team left... hard to believe one group of people were such a lynchpin for that entire Police Department, but that appears to have been the case.\"\n\n\"Okay.\" said the host. \"Thank you for coming by.\" Bohrman left, leaving his host to contemplate.\n\nSBI Deputy Director Robert Gaston had worked his ass off for years to reach the top of the SBI ranks. He had played the Game, and when it became clear what he was expected and required to do, he got down in the mud with Lewis and Ferrell and the rest of them. And he was almost at his lodestone, the very top: the SBI Director's chair. But Jack Lewis had slipped the other day, and said on TV that the dirtiest SBI Agent of them all, Richard 'Dick' Ferrell, was being 'considered' for SBI Director. \n\n'Considered'. Gaston knew what that meant, and he knew that his lifetime of work, and of compromising his own values and his soul, were for nothing. As he brooded over his predicament, he tried to consider how to secure the SBI Directorship that Lewis had promised him, Gaston, before saying that bastard Ferrell was being 'considered'.\n\nWhat would the Iron Crowbar do? he asked himself, at first humorously, sardonically. Then he realized that the Iron Crowbar had been hired into the TCPD and had risen brilliantly to the top. He could've had the Chief's chair or even won the Sheriff's job up there. He was an SBI Reservist, one of that bastard Conlan's pitbulls, and he was an FBI Consultant... and could go to work for them full-time if he wanted. Yes, how did the Iron Crowbar get to the top so quickly, and almost being pushed upwards, not having to work like a dog like Gaston did...\n\nYes, what would the Iron Crowbar do in my case? Gaston wondered...\n\nPart 9 - Depths of Corruption \n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" shouted the lovely redheaded reporterette at 7:00am, Friday, October 7th. \"Channel Two News has learned that Governor Val Jared faces a blowout loss in the General Election!\"\n\n\"According to our friends at Public Policy Polling, Jared is now down 49-41%, and may sink even more in the polls. Evangelical Christian groups and Social Moderates are publicly hammering him on both sides of the Jeremy Moreland issue and the Governor's failure to take a stand. Jared's opponent, SBI Director Jack Lewis, is openly calling Jared weak, ineffectual, and unable to continue his failed policies as Governor!\"\n\n* * * * * * * * * * * * * * * *\n\nAt 8:00am, I got a call from Chief Griswold, asking me to come to his home. Cindy and I piled into my Police SUV and worked our way through the traffic to get to Reservoir Road and to the Chief's home. I noticed three black limousines in the driveway, and knew what was going on.\n\nYep... upon Mrs. Griswold letting us in, I saw Governor Jared sitting in a living room chair, Griswold in the other one, and Staff in the kitchen eating doughnuts the Governor had provided.\n\n\"Help yourselves to some doughnuts and coffee.\" said Griswold. Cindy and I hustled to get a couple of doughnuts each before they were consumed. Then we went back into the other room.\n\n\"Thank you for coming by, both of you.\" said the Governor, who was by now used to the fact that Cindy would be where I would be. \"I need.... I need your advice.\"\n\n\"This Right-to-Life issue?\" I asked. The Governor nodded. He looked exhausted. Not beaten, not down like a loser would be, but like a man who was fighting with everything he had and still losing. I remembered how I'd felt on that hallway floor after waking up from Dr. Casey B. Walker's torture and trying to fight my way out, and I knew the Governor needed a 'Whirling Dervish' rescue himself, though a more political and less physical one.\n\n\"I don't know what to do about it.\" said the Governor. \"No matter what I say or do, someone will attack me, and the God-damned Press will gin up whichever side attacks me. Don't get me wrong; I'll fight to the very end, I'll go down swinging. But if I can't find a way out of this hole... I will go down to the most corrupt politician in the history of this State, Jack Lewis.\"\n\n\"Well,\" I said, \"when you're in a hole, the first thing to do is stop digging a bigger one.\" I went over and got the piano bench and brought it next to the Governor in his chair, in 'Michael Corleone' style. \"Would you guys give me and the Governor a moment alone, please?\" As Griswold and Cindy got up, I handed the Chief my red crowbar. He nodded as he took it with him.\n\n\"Okay, sir,\" I said quietly as I sat on the bench next to the Governor. \"It's just you and me, nobody else, no crowbars. I don't want to hear what Governor Jared thinks. I need to know what Valnius Jared feels, in your heart and your deepest soul...\"\n\n* * * * * * * * * * * * * * * *\n\n\"Ferrell.\" said the Director of the SBI-NTF as he answered his cellphone.\n\n\"The Crime Lab found out, Dick.\" said the voice at the other end. \"You better get down there and squash this before the shit hits the fan and hurts Jack Lewis's campaign.\" The line went dead.\n\n* * * * * * * * * * * * * * * *\n\nAt 9:30am, the Governor of the State went to the podium in front of City Hall, ostensibly to speak on behalf of State Representative William C. \"Billy\" Williams (R)... who was running unopposed.\n\n\"I support Life, and I support the values of those who cherish Life.\" said the Governor. \"What I do not support is this so-called 'State Right to Life Committee' that not only does not support Life, they support harassment of grieving families. I grieve with the Morelands over the loss of their son, and I strongly condemn the State Right to Life Committee's invasive actions. This committee had no business butting into the private decisions of a heartbroken family. They had no place there, no interest that could justifiably serve them. Yet they dragged this family through the mud, through pain and agony, all just to make the exact wrong point at the exact wrong time.\"\n\n\"Again, let me be clear.\" said the Governor. \"I condemn the State Right to Life Committee. And who is their organizer? SBI Chaplain Steven Ikea. Note those first three letters: S-B-I. Once again, this corrupt organization and its corrupt leader, Jack Lewis, do the exact wrong thing at the exact wrong time. Once again, one of SBI Director Jack Lewis's agents either is responsible for the grief of a family, or makes their grief worse. I blame SBI Director Jack Lewis and his corrupt organization for using a brain-dead young man as a political tool in their unappeasable thirst for political power. I can assure you that when I am re-elected, the deeply corrupt State Bureau of Investigation will be cleaned out like the Augean Stables... and this man will be my 'Hercules' in cleaning out that filthy organization...\"\n\nHe was pointing at the man to his right... me, Your Iron Crowbar. The look on my face was of a man dead to all feeling but inexorable Justice. And I was tapping the red crowbar in my hand.\n\n* * * * * * * * * * * * * * * *\n\n\"Governor Jared is not only corrupt,\" yelled Jack Lewis from in front of the State Capitol in Midtown, \"he's a desperate man. The SBI is not corrupt. It is the finest, most trustworthy and honest law enforcement body in this State! I am proud to be its Director, and I am proud to have great Agents like Richard Ferrell and Chaplain Ikea working for and with me!...\"\n\n* * * * * * * * * * * * * * * *\n\nState Crime Lab Director, Lt. Tanya Perlman, sat behind her desk going over the results of Jeremy's autopsy when the phone rang. It was the supervisor of one of her labs.\n\n\"What?!\" she exclaimed. \"You're kidding! Those drugs are the same ones, the same exact ones, that the SBI confiscated in that drug raid? Okay, I'll check the email. Yes, call Detective Troy! Bye.\"\n\nShe checked the email. It was true... those drugs were the same, the lab tests were solid proof. Everything had correct chain of custody; this was evidence! And it did not take Lady Ironside long to figure out that only the SBI or someone working for them could've obtained and injected those drugs into Jeremy!\"\n\nShe printed out the report and copied files to a jump drive, then said to her assistant \"Call my van! I've got to get this to the Iron Crowbar immediately!\"\n\nShe rushed out the door, pushing the control of her wheelchair as hard as she could to make it go as fast as it could. She got to the elevator and pressed the button. It seemed like forever, but the door finally opened...\n\n... and out popped SBI Agent Richard 'Dick' Ferrell.\n\n\"You're not going anywhere with that, bitch!\" he snarled. \"Give it to me, now!\"\n\n\"Fuck you! Get out of my way!\" yelled Tanya, trying to drive into the elevator. Ferrell pulled at the side of the wheelchair, spinning it sideways. Tanya tried to maneuver it again, and Ferrell grabbed it. He pulled it up and over, emptying Tanya onto the floor!\n\n\"Auggggh!!\" Tanya screamed in pain as she landed on her back. She was unable to move as Ferrell dropped the heavy motorized wheelchair onto Tanya's legs!\n\n\"Now, give me that fucking evidence, you bitch!\" snarled Ferrell, going for his gun...\n\nTo be continued. "
    ],
    "authorname": "WifeWatchman",
    "tags": [
        "mystery",
        "police drama",
        "crime drama"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/the-usual-suspects-ch-02"
}