{
    "title": "Jacob's Ladder",
    "pages": [
        "The good news, Randi called! The bad news, I had to come up with a story. At that point, the idea fairy whispered in my ear, \"Just dance with the themes that brung you.\" So, I rounded-up the usual suspects; anti-social nerds, smart women, big dogs, sailboats, and tropical sunshine. I garnished them with a pinch of infidelity and added a dash of romance, and here it is. I want to thank Randi for giving me the chance to strut my stuff. She's a truely visionary woman. I also want to thank her and Pixel the Cat for their super editing job. It's amazing how two knowledgeable people can improve a pedestrian tale. The title refers to a couple of different things; one biblical and one nautical. You can decide which one applies -- enjoy - DT \n\n*\n\nIt's a fact. The oldest Lutheran Church in the Western hemisphere is located in the Virgin Islands. Lutherans, you say? I can understand Catholics, or even Church-of-England; but Lutherans? Lutherans belong in Wisconsin, not the Lesser Antilles! \n\nThe Danes settled the place in 1666, hence, the Lutherans. So, the architecture is more Hamlet, than Harry S. Truman. Still, the AVI's are as American as apple pie, at least from a paperwork standpoint. And, that's why I was docked at the Crown Bay Marina. \n\nI had sailed a Beneteau 58 down the inter-coastal and across the Leewards, all the way from Washington, DC. The boat was expensive. But I could afford it. The best part was I could always up anchor and move, if the neighbors annoyed me. \n\nThe Beneteau is an excellent craft, comfortable, beautifully appointed and easy to handle; if you know your way around a cruiser. Solo-sailing wasn't a challenge for me. My old man put me on a sunfish at age six; which was over a half-century ago. \n\nMy deck hand's name is Buster. His mom must have had one hell of night; Labradors, Pit-Pulls and American Bulldogs, all lining up to take their turn. Buster's big, brown, smelly and he slobbers. But, he's my staunchest friend; utterly loyal, devoted and the best side-kick a guy could ever ask for. \n\nWe talk in the dark-hours. I'll sit with three fingers of cheap scotch in an old jelly glass and share my thoughts. He'll cock his head back and forth, as if to say, \"Yeah, I get it boss. Life ain't easy.\" He's a former street dog; he knows these things. \n\nI'd changed a lot since my personal day of reckoning. The slightly overweight and pasty me, was now a white-haired hunk of brown rawhide. Nobody in my old life would recognize me now. I was just a solitary old boat-bum, with his dog.\n\nIt's hot in the Leewards and I was sweating gallons. I needed a beer, so I pulled on a t-shirt and strolled down the dock to Tickles. That place has all the charm of a shopping-mall TGI-Friday's, but it has the advantage of being less than 100-yards from my slip. \n\nThey let Buster sit in the walkway, just off the property line. He'd lie there panting and drooling, love and trust in his eyes, while I tossed him scraps. That kind of thing would get a tourist kicked out. But I was a regular. So, the owners turned a blind eye. \n\nI ordered a beer from the twenty-something hottie, waiting on the outdoor customers. It was one of those days when the ever-present anguish and world-weariness got the best of me. My mind wandered back to the beginning. \n\nGENESIS Every love story has a beginning. Mine began when I was eight. \n\nKate lived down the block and we played together. We were always a little \"different.\" We'd spend our time inside, reading, talking and drawing while the rest of the kids were running around outside. The others were aggressive, constantly in motion. They shouted-over each other. Kate was as quiet and shy as I was. It would be creepy to use the word \"attraction.\" More correctly, we preferred being alone together.\n\nWe were the same age and lived on the same block. Thus, we were always in the same class. Our last names were close, alphabetically; so, most years we sat next to each other. You would think that our inseparability would wear thin, but the opposite happened. We were only happy with each other. That wasn't a conscious decision. It was innate, something that was just THERE. We never questioned the feeling. \n\nThen puberty hit. We helped each other through THAT ultra-confusing time. In two years; I went from being geeky and scrawny, to being geeky, but the biggest kid in the class. Kate went from being a tiny little nerd-girl, to a tiny little nerd-girl with huge, perfect tits. Meanwhile, her hips and butt rounded into womanly curves. She was mortified by the changes. \n\nKate had always been the classic girl-next-door; big hazel eyes and a cute oval face, a pointed chin and perfectly proportioned features framed by long naturally wavy chestnut hair. Now she looked like the twenty-four-year-old girl next door. That difference posed problems. \n\nThat was about the time they started holding dances. We were so self-conscious that we'd only dance with each other. Our bond was more intellectual than physical, but still, the pains of adolescence forced us to accept our transformation. I would feel her hard, little body and big soft boobs moving on my chest. She must have felt my giant boner poking her leg. It made us painfully aware that things were different. It was agonizing. \n\nWe began to explore those differences in innocent ways. One Saturday afternoon we were playing a multiplayer online game. We had just dispatched a particularly troublesome Orc and Kate threw her arms around me in celebration. Our faces were inches apart. She looked at me. I looked at her, and we kissed. \n\nWe kissed all the time growing up, but it was innocent stuff. This time, there was no mistaking the passion. It was an adult kiss. We mashed our lips together and held it for a count of ten. Then we broke apart, startled, panting like bloodhounds on a Mississippi porch. \n\nI said, \"What was that?\" Kate looked as confused as I was.\n\nShe said, \"Did you mean it?\"\n\nI nodded, \"Did you?\" \n\nShe said, \"I've never meant anything more in my life.\"\n\nSo, we gradated from childhood pal status. The intimacy of swapping tongues only added to our union. But, we were still so repressed that we were stranded at first base. We even had guilt pangs about going THAT far. \n\nWe entered high school, that fall. Kate was the sensation of the freshman class. It was a Catholic school, so we had to wear uniforms. The short, pleated skirt made it impossible for her to disguise her lithe, long-waisted body with its round hips and beautiful legs. The simple blue cardigan over her white blouse showcased the swell of her big perfect tits. Even I was surprised at how developed she had become. \n\nEvery player in the school wanted to put Kate in his trophy case. A more social girl would have reveled in the attention. But, it was excruciating for her. She may have looked like a Victoria's Secret Angel. But, she was a shy, sweet, gentle soul without any social pretensions whatsoever. Plus, we were both agonizingly introverted.\n\nIt was the same with me. I was bigger than most of the guys and not bad looking. But as far as I was concerned, Kate was my only friend. I didn't have to do stupid things to get peer approval; I was the guy with Kate. I didn't need to go pussy hunting; I had already bagged the prize. The other girls could never compete with Kate. None of the boys wanted to get on the bad side of a fellow as big as me. In that respect, her beauty and my size worked in our favor. All I cared about was Kate. All she cared about was me, so the equation balanced. Eventually, everybody backed off and left us alone. \n\nIt all seems so improbable now. But, it never crossed our minds that we WOULDN'T be together, forever. Nobody meets their soul-mate, at age eight, and smoking-hot girls, who just happen to be totally devoted to you, only exist in fairy tales. Nonetheless, both our families were solid, and stable. We had internalized their humble and unassuming values, and all we wanted was to live like they did. \n\nWe were both college-bound and, of course, we wanted to go to the same school. Kate was going to study medicine and I wanted an MBA. The best place to find both degrees was at the big university up-state. \n\nThe only frontier yet to be negotiated, was the consummation of our love. As usual, we were hesitant to cross that line. You would think that a girl with a hot body would want to have it touched. I knew that there were infinite wells of passion down there, but we were both so repressed that we never came close to tapping into it. \n\nIt took the Fourth of July and impending college to make the breakthrough. We had both turned eighteen, and I was painfully aware that we would soon be leaving for school, but I wanted reassurance. I grabbed a big blanket and headed for Kate's house. \n\nOur city has a remarkable Fourth of July fireworks show. Most of the people are downtown, or out on the lake in boats. But, the rockets burst in front of the hill looming over the town. It's secluded and peaceful up there, far away from the crowds. That was where I planned to take Kate. I had scouted around the week before and found a good spot.\n\nI stashed the blanket in the trunk of my new TR-4. Both our families were affluent. That was part of the reason Kate and I had gotten together as playmates. Her dad was a doctor and her mother was a hospital administrator. My dad owned a small electronics firm. His company specialized in micro-electronic controllers. It was a niche market, but he did very well. Neither Kate, nor I, wanted for anything. \n\nKate was always late for our dates. Some guys would find that exasperating. As far as I was concerned, it was an endearing quality. We weren't going to do anything more than watch the fireworks. But, Kate treated each date like the senior prom, so it took her forever to decide what to wear. \n\nI talked with her dad while I waited. I told him that I was preparing to follow in my old-man's footsteps, since he owned the company. But I knew that I needed a lot of seasoning. Getting a bachelor's in business, and an MBA, would be the first step. \n\nMy Pop was a man-among-men. After he got out of the Navy, he started building custom boards for industrial controllers. It was something he learned as a combat systems technician on a destroyer. He did it in our garage. His work was brilliant and meticulous. As a result, he started getting contracts from defense suppliers. \n\nThe business grew, and it eventually became the best electronics specialty shop in eastern Pennsylvania. I was his successor, and I had plenty of time to mature into the role. That had been our plan since we started talking about my future. \n\nKate appeared at that point, and it sucked the air out of the room. She's not a big woman, at five-foot-three and perhaps 115 pounds, but her sheer perfection was breathtaking. \n\nMost girls would wear shorts and a t-shirt to an outdoor event, but Kate dressed for me, not for comfort. She was in a fetching little sun-dress that showed off her shapely muscular legs at the bottom, and her two huge eighteen-year-old tits at the top. She was stunning. \n\nHer dad was as gobsmacked as I was. He looked at her proudly and said, \"Wow, Kitten, you are beautiful!\" \n\nShe dimpled demurely. Kate might look like a goddess, but she was always very self-conscious. I think that was because she spent most of her time in her head. So, the real world was a little intimidating. I was the same way. The last thing I wanted to do was call attention to myself. \n\nWhen we were by ourselves, Kate was like a cheerful little bird. She was far too shy to act that way in public, but she was her true beautiful self with me. She chattered all the way up the hill. Most women would ask a guy where he was going, since the fireworks were in the opposite direction, but Kate trusted me. \n\nWe got to the spot. It was a grassy promontory with the town spread out at our feet. It was dusk. The night was hot, but not oppressive. The sky was painted with the pinkish-blue tint of an evolving summer evening. The moon was already up, low in the sky, shining in a three-quarter silhouette. The lights were beginning to come on below as the darkness fell. The clicking, whirring and buzzing of nature enfolded us. \n\nI was carrying the blanket. I spread it out on the grass, positioned toward where the fireworks would appear. We sat down next to each other, braced on our arms, legs touching. Sometimes we talked a lot. Sometimes we just sat there in a little cocoon of togetherness. This was one of those times. The sense of her proximity filled my heart with peace and happiness.\n\nI had to get something important out of the way. I turned to her and said, \"Kate, I have loved you for my whole life. I want to die in your arms. We are beginning the next stage of our journey and I hope you will be with me forever.\" \n\nShe looked at me warily, like I was talking nonsense. She KNEW we were going to be together forever. I could see her trying to decipher what I was REALLY trying to say. I asked, \"Do you feel the same way about me?\"\n\nShe said with measured seriousness, \"I love you Jake. I will always love you. I can't imagine being with anybody BUT you. Why are you asking me this?\"\n\nI laughed and said, \"Maybe, I'm feeling a little insecure. We've never been anywhere but this town. More important, you've never known anybody but the boys in our school. The place we are moving to has lots of guys. There will be some who will be a lot more sophisticated than either of us. I don't want to lose you.\" \n\nShe seemed to melt in front of my eyes. It was the oddest look. I had always thought of Kate as shy and inhibited. The look she gave me was pure animal hunger. It was like my admission of insecurity had made her decide something, and her inner fire poured out of her eyes. Maybe she was as uncertain about the future as I was?\n\nShe said nothing. She simply turned and grabbed the back of my head. She dragged me into the same kind of open mouthed kiss that we had been indulging in for the past year. But, she was frantically pulling on the ties on her sundress as she did it. It was one of those dresses with a built-in bra, so the top was heavier. I could feel it come loose and fall straight to her waist. \n\nWe parted, and I gazed at her mesmerized. I knew that Kate had big tits, but I had NO idea that they were so utterly faultless. They were high, taut and proud, with jutting nipples. The aureoles were wrinkled with arousal. She sat there, still as a statue and totally unashamed. \n\nShe said quietly and with simple sincerity, \"I want you.\" Then she lay back on the blanket, eyes boring into mine. \n\nWe were both virgins. Nonetheless, we both knew the principle of the thing. I leaned down and kissed her heated mouth. She moaned loudly with sensation. It was the first time I had heard Kate utter a sexual sound. Its primal unfamiliarity was incredibly stimulating. \n\nWhen she lay back, her boobs had puddled out slightly on her chest. So instead of mountains, they were two big distinctive plateaus now; with stiff nipples at the center, like sacred pillars. I put a hand on one tit and she moaned louder. \n\nI began to squeeze and manipulate her right breast. The nipple was red hot and distended to a point where I took it between thumb and forefinger, just to feel its rubbery length. Kate cried-out and then groaned loudly. Her breathing accelerated and her legs began to thrash. She said through gritted teeth, \"Touch me there.\" \n\nI knew what she wanted. So, I ran my hand down across her dress, which was now bunched at her waist, and over her flat lower belly. I moved my hand under the waistband of her panties and dipped into the space between her widely-spread thighs. I crested the little rise where her legs joined and fell into the gap between. \n\nThe reality of female genitalia was intimidating to a dedicated virgin like myself. I must admit that I only knew what it was because I had seen the drawings in my sex-education class. Nevertheless, the space between her nether lips was boiling hot, and slippery. There was a pheromone smell, which was so totally distracting that I almost got lost. Sex-Ed hadn't covered any of that.\n\nI persevered along the path between her lips, across a little bump that make Kate grunt with sensation and entered her with my finger. She moaned, cried out again and began to thrash. The feelings of intimacy that came from putting my finger in my childhood friend's most secret and intimate place was overwhelming. \n\nIn retrospect, my telling sounds rational. But, we were both so caught up in the furor of the event that most of the memories were either not recorded, or blown out of our head by the sheer raw emotion. \n\nIn concept, I knew what to do. I was eighteen years old, for God's sake. I had read a few Playboys and seen a few movies. Plus, guys talk. But we were both so inexperienced that it took a lot of flailing around before I could get my pants down and properly positioned.\n\nI was finally situated. I looked down at the person who I had loved for so long. Kate's face was wild with emotion. She had always been shy and reserved. This Kate was an alien-being. She was desperately whispering, \"Put it in me!! You have to put it in me!!\" \n\nAt that point, I had my cock in my hand and I knew where it was supposed to go. I placed it at her opening and began to push. Kate was so well lubricated that the head slid right in; even though she was incredibly tight. I moved up her channel, to the expected obstruction. I pushed, there was resistance, Kate gave a shrill little shriek, and then I glided rapidly to the top. \n\nShe let out an unearthly groan of pure sensation. I waited for a second while she gathered herself. Her beautiful hazel eyes were round with fear. Then they clouded over with lust and slowly rolled up in her head. \n\nShe engulfed me in every place. Her arms were clasped tightly around my neck; her legs were gripping me like she was riding a horse, and of course, her secret place was clasping and churning around me. The heat and silky wetness was incredibly stimulating, too stimulating!!! \n\nIt felt like a bomb exploded in my loins. That happened an embarrassingly short time after I entered her. I gave an unearthly grunt and groan and emptied myself. That set Kate off on a sequence of bucking and gyrating maneuvers, accompanied by frantic shrieks. \n\nI knew what I had done and I expected the thing to shrivel out of her. But, Kate's continued gymnastics kept me harder than an iron bar. I was moving with her. That was just instinctive, when suddenly she stiffened and it felt like the cargo shifted down there. \n\nHer passage gripped me and then she began to yell, \"Nyaaaahhhhh!!! Nyaaaahhhhh!!! Nyaaaahhhhh!!! OH, MY GOD!!! AHHHHHH,\" and it sounded like she was choking to death as her legs thrashed. To say the least, our first orgasms were memorable.\n\nShe finally went completely still. I remained buried deep inside her; hard as titanium. I knew I might have knocked her up. I didn't care. That was the instant our adult love was consummated. Kate was well and truly mine!!! If we started a family earlier than planned; more the better. We were in this together.\n\nI looked in her eyes. She was terrified, and well she might be. Losing your virginity is a momentous event for any girl. Kate was the deepest, most thoughtful person I knew. But, more pertinently, she had acted so unlike her usual self, so totally out of control, that I knew that her behavior had shocked her. \n\nWhether we are Gandhi or Hitler, our public demeanor is based on the way we want other people to see us. So, we filter the dictates of society through our own individual programming. The outcome of that process is the face that we present to the world. Invariably, that image is phony. We all hide our inner-selves.\n\nKate and I were both smart, but we knew nothing. The place in our life where we had just gone was novel and permanent. We had finally had sex. What we had discovered was the sublimely uplifting knowledge of how much intimacy enhances a committed relationship. It was life-changing, in that there was no going back to our former state of ignorance. ",
        "I realized that intelligence might be one thing. But experience is the quality that tempers intelligence into effectiveness. Up to this point, Kate and I had been preciously na\u00efve. Now, I understood that there were depths of human experience that we had only begun to plumb. \n\nBoth Kate and I were complicated, perhaps too complicated. We both knew from experience that there are very few intrinsically kind people in the world. We were not naturally aggressive and we were both introverted; it was just the way we were. Our attraction to each other was that of fellow travelers, alone in a very strange land. \n\nPerhaps that was why Kate had decided to act; to show me what her inner self was really like. I wasn't going to ask her about her reasons. That would have been incredibly crude, but I could make an educated guess. The Kate I knew, would never impetuously give up her virginity, especially if it was for no purpose. Obviously, she had the same concerns as I had. My sharing my fears must have prompted her decision to seal the deal. I don't think either of us expected the degree of passion that ensued. But, it was inevitable. Still waters run inordinately deep, and both of us had a lot going on inside our repressed psyches.\n\nI gazed into Kate's worried face and said, \"If you think that what just happened changes anything, you're absolutely right.\" A look of anguish washed across her face. I hastily added, \"I thought I loved you. But I didn't have a concept of what love really meant. You just showed me what true love is, and I would walk miles through white-hot coals to keep what we have.\" \n\nHer face began to register joy, but at that point there was a huge boom, and the sky lit up with a barrage of fiery blossoms. It was dramatic timing. The fireworks show was a perfect physical manifestation of the love that we had just consummated.\n\nTHE TREE OF KNOWLEDGE\n\nSounds sappily romantic, doesn't it? Well we were kids; insulated from \"Nature red in tooth and claw.\" My ingenuous state didn't last much longer. A couple of weeks later, I was sitting in my room trying to decide what to take with me to college. The phone rang downstairs and I heard my mother answer it. There was a couple of seconds of conversation then I heard my mom wail, \"Ohhh Nooo!!!\" \n\nI came thundering down the stairs to see what provoked THAT heart rending cry. Mom was slumped dazedly on the floor, phone in her hand. I picked it up and a voice was still talking. It was saying something about the local hospital. I said, \"This is Mary's son, Jacob; what's going on?\" The voice said, \"This is Officer Martinico and we need you to bring your mother down to St. John's.\" \n\nI said, \"What's the matter?\" His next words blew away my innocence. He said, \"Your father has had a heart attack and we need you to bring your mother here as fast as possible.\"\n\nThat was my introduction to real-life. Pop was only 51; kidding around with some of his employees, and dead before he hit the floor. There was the usual medical mumbo-jumbo; which was followed shortly thereafter by the funeral. My Dad was a respected member of the community. The crowd was impressive; everybody offered condolences. \n\nMy mom was a basket case, and suddenly I was the man of the family.\n\nDad had a good team, but he didn't have a succession plan. That just seemed too far in the future, so I had to get up to speed, or sell the business. Selling it would probably have been the smart thing to do. But, the company was my father's life achievement and neither my mother, nor I, could bear to part with his legacy. It was a sole proprietorship, with me as the owner. And I was an 18-year-old kid who didn't know shit about anything. \n\nHence, the die was cast and it didn't include college. I was going to have to learn the trade from the ground-up, and I was going to have to learn it fast. Kate had been my rock in my grief, but she was going to leave for State College. She had offered several times to stay home. Each time, I told her \"no.\". \n\nThere was no earthly reason to put Kate's hopes and dreams on hold, just because karma had chosen to stomp all over mine. My selfish reason was that I didn't want any distractions. I knew I would be dedicating long hours to making myself into the new head of Jackson & Son. If Kate was parked at State College, I could devote myself to learning the things I needed to know, without distractions. \n\nWe had been regularly fucking. It was like the dam had burst and we couldn't get enough of each other. Kate was spectacular the first time, but it turns out we had only scratched the surface of her sexuality. We didn't do anything beyond the conventional, but we did it frequently and from many different angles. Kate was an uninhibited and totally giving woman, and her sheer enthusiasm made up for any lack of sophistication. \n\nThe thing about life, though, is that the clock ticks at the same inevitable rate. Kate left for her college orientation session at 7:30 AM that Saturday. She cried. I cried. It was a difficult parting. Her parents even looked like they were questioning the decision. \n\nI had lost the two most important people in my life in less than a month. That was the reason why the sight of their car disappearing out of the suburb was particularly overwhelming. It might not be true for everybody, but I react to grief like a bad case of the flu. I'm drained of energy, listless and even achy. I went home and slept for two days. \n\nBut, you have to march, or die, and I wasn't ready for the latter. So, I started my new life, willing or not. William Barnes was my dad's right-hand man and a steady older guy. He was my version of Yoda; without the green complexion and long ears. William, don't call me Bill, was ten years older than my old-man, meaning he was sixty-one. He had overseen the daily operation at Jackson, from as far back as I could remember. \n\nHis title was Chief Operating Officer, but it might as well have been Drill Instructor. He had always been kindly, like the older uncle. Now he was a demanding task-master. He started my introduction to the business by putting me to work in the mail-room. That might be a bit of a clich\u00e9. But working there, I quickly got to know everybody in our little company. \n\nTHEN, after work he tutored me for several hours on everything from financial management to circuit design. That was following a nine-hour day trudging around the building carrying packages and letters. The fourteen hours that I spent at work quickly became my routine. \n\nOn Saturdays, William would teach me about networking. That skill had nothing to do with routers and switches. We would meet for dinner with business associates and the various movers and shakers in our corner of the market. These were almost exclusively old white-guys who treated me like a manservant. After all, I was forty years younger than most of them. \n\nI really didn't mind being William's boy-Friday. I was still as shy and introverted as ever. I let him do all the talking. I just sat there smiling politely, but the time I spent in those figuratively smoke-filled rooms gave me a much better idea of what it took to keep a company running, and I got a lot smarter. \n\nThat quality should never be confused with intelligence. I was starting to develop the animal cunning that you need to succeed in business. It begins with the assumption that every one of your \"friends\" are adversaries. It also includes a healthy dose of paranoia, which is how you develop survival instincts. Of course, you aren't paranoid if people really ARE out to get you, as I soon learned.\n\nWilliam was a master of the art and he would debrief me after every session. I would be astonished to discover how everyone was playing an angle, all designed to give them a slightly larger share of the pie. After months of those sessions, I was beginning to lose all faith in humanity. That was reinforced by what happened next.\n\nIn the meantime, I was conducting a passionate long-distance romance with the love of my life. I knew that Kate's situation was as demanding as mine. She was away from home for the first time. She had to get up to speed in her classes, and they were not the typical blow-off courses that a husband-hunting female would take. They were the hardball studies that were required for a pre-med student. \n\nWorse, Kate also had to learn how to get along with strangers, which is difficult for an introvert. Kate was in a dorm room with two other girls and she told me that it was horribly intrusive. They were constantly in each other's space, and privacy was impossible. She would have begged her parents to move her to her own place; they could afford it. But all freshmen had to live in the dorms, unless they were in a sorority. \n\nWe both realized that growing-up was a bitch. We talked for hours every day. It was like we were helping each other adapt to our new, unfamiliar, and very uncomfortable existence. I wanted to visit, but that wasn't feasible. My business lessons took up most of my time and it was six hours back and forth to State College. We conversed by phone and exchanged loving text messages. \n\nThat contact got less and less frequent as the fall progressed. I put it down to the fact that Kate had joined a sorority early that October. It was less for the social life and more to simply get away from her roommates. But, it was a very exclusive group.\n\nKate was rich and beautiful, so she went from living in a box with two other freshman girls, to being the star of her sorority's recruiting class. I was a little worried about her newfound sense of empowerment. That would go to anybody's head. Everybody wants their woman to be desirable, but that is a two-edged sword, and I knew it. \n\nWith Christmas week looming, I told William that I wanted a break. He said, \"You're making great progress. Why do you want to take time off?\" I said, \"Because Kate is going to be home and I want to spend all my time with her.\"\n\nI had become more confident in my role as heir-apparent. William was an excellent mentor, and I was amazed to discover that I was a quick study. I had the business routines down, and I was beginning to get a lot smarter about the relationships with the workers. I was also becoming something of a prodigy in circuit design. \n\nI had always been a geek. But, I found my true inner nerd with circuit innovation. My first exercise was to write a new hardwired connection for linking sensors in a diesel-engine-monitoring-system, to a program logic controller. It was just designed as a learning exercise, but it was so intellectually absorbing that I spent all of my free hours doodling with it. \n\nWilliam was astonished when I showed it to him. Shortly thereafter, I found myself meeting with the entire engineering design team. It seemed that I had put together a device that could handle a much greater sensor load at three times the speed. \n\nI signed my first patent application just before Kate's arrival. I had also cemented the respect of my own engineers, most of whom were twenty-five years older than me. That boded well for the future. I was confident that I was going to be successful, so I decided to take the next step. \n\nI had managed to scrape up the money for a one carat diamond ring. I owned the company, but it was in trust. Instead, William was paying me ten-bucks an hour to deliver mail. Nonetheless, I was still living at home, and had no social life. So, I planned to propose to Kate on New Year's Eve. It was time.\n\nI was standing in the driveway when they arrived. Kate emerged from the car, glided gracefully over to me and we hugged. Neither of us were into public displays of affection, we were both too inhibited, but it was clear that she was happy to see me. I handed her the dozen roses that I had hidden behind my back. She seemed thrilled, but there was something else in her response. Was it hesitancy? \n\nKate needed time to settle in, so I told her that I would drop by as soon as I got my own Christmas out of the way. My mom needed me, and it wasn't like Kate had all sorts of high school friends to visit. It had always just been her and me, and we wanted to bask in our togetherness. \n\nI arrived right after dinner on Christmas day. We sat alone in the den. Her parents trusted both of us. The first thing I noticed was that she was ready when I got there. That was a first. Then the second thing hit me. I should have noticed it when she arrived. But I was blinded by the sheer joy of seeing her again.\n\nKate was a rich kid. But, she always dressed in relatively modest and inexpensive clothing. The Kate sitting in front of me was a study in style, from the zip-up blue cashmere sweater to her short, A-line skirt; and she was wearing enough gold to make Midas jealous. Nevertheless, the biggest change was her hair. Her long chestnut hair was cut in a chic preppie bob.\n\nI said warily, \"I like what you did with your hair. It's very sophisticated.\"\n\nShe smiled happily and said, \"The girls at Kappa Gamma are helping me come out of my shell. They're like real sisters. I feel like I grew-up a year for every week I was on campus. You were right. We had a very limited world-view living here. The transition to college opened my eyes. I'm free now, and I can spread my wings and fly.\"\n\nThat was the precise instant that I knew I'd lost her. \n\nThe fact that we were both a little odd, had driven us together. And the stresses of adolescence only reinforced our intimacy. Both of us had broken through our limitations, but we had done it in different ways. \n\nI was a long way from the naive kid I was six months ago. Eighty grueling hours a week, under the tutelage of a grizzled old warhorse like William Barnes, will change how you view the world. I was a lot more confident and in command of my life. Having to step into your dad's shoes without any preparation will do that for a fellow. \n\nKate needed a personal sense of connection to feel secure. Growing up, I was the only person who gave her that critical assurance. Now, she had discovered a new source of intimacy, in the hot-house culture of Greek-life. I can imagine how comforted she must have felt, finding a group of women who went out of their way to connect with her. \n\nThat connection had channeled Kate's entire persona into a different path. She was no longer the timid, self-doubting and inexperienced girl I loved. She was a woman who fully understood her worth, and she had adopted a different attitude toward her world. It was one of grace, ease, and style. I simply didn't have the sophistication to match that. \n\nWorse, just like I could never go back to being the na\u00efve kid who played video games in our basement; Kate could never return to the unassuming and insecure girl she had been before she left for school. I didn't have to be a social savant to see where that put us, but I still had to ask. I said, \"So what does this mean for you and me?\"\n\nKate gave me a deeply loving look and said, \"It doesn't change anything. I still love you. I will always love you. We grew up together and there is an unbreakable bond between us.\" I could hear the \"But\" coming... \"But I also know that I have a lot of things to do and a lot of places to see. I had always expected to be your wife, but I have to grow into that role now.\"\n\nI said, heart sinking, \"I assume that your 'growth' includes dating other guys?\" \n\nShe looked at me sympathetically and said, \"Yes it does. I have been totally devoted to you, since the second grade. I think it's obvious that focusing on one person to the exclusion of everybody else helped ensure that I would be the inexperienced and immature girl that I was when I left home. I know that I have to learn things if I EVER want to become a fully capable adult. I've experienced enough of life to know that, now.\"\n\nI couldn't question her logic. Every person has to decide who they are and where they fit. That's been the case since they chiseled \"Nosce te ipsum\" on the face of the Temple at Delphi. But, it still hurt. I said, \"I assume that your 'sisters' where the ones who helped you discover this?\"\n\nShe looked uncomfortable as she said, \"We talked a lot about it. These girls are far beyond my modest upbringing. They have helped me to understand that I need to experience life before I can truly be fulfilled. I know that college isn't the real world, but, I'm surrounded by 40,000 kids, all of whom are going through the same learning experiences. It's hard to see self-discovery as a bad thing.\"\n\nI said, \"I assume that you've gained some of these discoveries from the male half of that population?\"\n\nKate looked even more uncomfortable as she said, \"Of course I've dated. I would have never been allowed to pledge Kappa Gamma if I hadn't. But, I just go out with whoever asks me. There's no love, nothing like we have. I tell them that I have a boyfriend back home and I have been completely faithful to you, but I date. That has helped me understand myself better.\"\n\nThere it was. It was obvious that Kate had crossed the great divide. She had moved from sheltered, to immersed in her culture, and thanks to cruel fate, I wasn't going to be part of the picture. It was inevitable that she would meet, interact with, and I was certain, eventually fuck other guys.\n\nI didn't blame her. The adult Kate was forged in a different mill. It was one where the only emphasis was on self-actualization. That is what college is all about; it's in the oxygen and the water. The intensive navel staring might seem a bit self-involved and egocentric. But maturation takes time; unless destiny tosses you into the deep end of the pool and says, \"Swim!!\" \n\nFate had denied me the luxury of taking a four-year hiatus to \"find myself,\" so I was on a different path than Kate. That path didn't give me the time to mull over the meaning of life; I was stuck surviving it. The only saving grace was that I had found out that our paths were different before I did something REALLY humiliating. I hoped the jeweler would take back the ring. \n\nEvery year, there's a huge New Year's celebration at the club. So, I smiled and said, \"Okay, let's talk about something less earth-shaking. What time do you want me to pick you up for the New Year's gala?\" I was only trying to cool down the situation; but wait! There's more!\n\nHer beautiful face changed and she looked sad. She also looked more than a little embarrassed. She said, \"I'm sorry, but I'm going to that event with a boy I met at school. He wanted to see where I lived and I invited him down for New Year's Eve.\"\n\nIf her declaration of independence had been a little abstract, THAT announcement was a stake through my heart. She knew what she was doing. She would have had to be brain dead to think that I was NOT expecting to go to the gala with her. This was an intentional message, read and acknowledged. \n\nI tried to keep a poker face as I said, \"I see. Well, I gotta get going. The day starts early for us working stiffs. And Mr. Scrooge doesn't let us take Boxing Day off.\" I rose and began to walk toward the door. \n\nShe said plaintively, \"Jake.\" I just kept walking. Then there was a huge collision. Kate had run across the room, thrown her arms around me and plastered herself on my back. She was weeping. I turned. I could see the struggle in her eyes, so I did it for both of us. \n\nI said, \"I know it's hard to let go of childhood. Seriously, it's killing me, but you've made your choice and I accept it. Everybody needs to be all they can be. But then again, you can't have it both ways. So, I'm ripping off the Band-Aid.\"\n\nI added sadly, \"We've gone in different directions. I told you that would happen. Truthfully, I knew we were doomed the day you left town. We both have to accept that and get on with our lives. \n\nI could feel the desolation creeping in like San Francisco fog. I said, \"At least you had the good grace to tell me in advance, rather than let me find out on New Year's Eve. I appreciate your honesty, and I will love you the rest of my life, but we don't belong together anymore. Enjoy your vacation, and maybe I'll see you around.\" ",
        "With that, I turned and walked out the door. I could hear a wail of grief behind me. I knew she would get over it. I did. But It took almost eight years. \n\nAFTER THE FALL\n\nI assumed my role as President of Jackson Industries on my twenty-fifth birthday. It had been seven excruciating years of hard work. I had buried myself in the business. It helped me forget, or perhaps the proper term is, \"mourn less.\" \n\nMy mom and sister dragged me to the fucking Gala. It was over my dead body. I was in a cheap suit. The sight of my beautiful Kate being escorted by some elegant dude in a tux, nearly killed me. Every time she glanced my way, she gave me a distraught look. Her conflict was obvious. \n\nFortunately, I was the walking dead and nothing hurts zombies. \n\nNonetheless, it was still tough when midnight rolled around and the only person I had to kiss was my sister. I averted my eyes from the painful exhibition of tongue swapping that was going on in other parts of the ballroom. Kate's dad had the kindness to cut me a sympathetic glance. All that did was make me feel worse. \n\nThe one thing that night DID teach me was that I could weather anything. It also ensured that it would be a very long time before I put my heart in the hands of a woman. I thought that losing my dad was tough. But, losing Kate was a whole different level of pain. \n\nI would wake up and realize that; she wasn't there anymore!! Then the grief and longing would wash over me. I would mourn as I brushed my teeth. I would wrestle my feelings into a cage and leave for work. That was MY daily routine, rinse and repeat.\n\nThe patent on my circuit-board came through. The revenue from that little gadget would have funded a lot of drinking and pussy hunting. But instead, I spent fourteen-hours a day working. I eased up on weekends; I only put in ten hours. The work filled-up the emptiness of my loss. It wasn't obsession. A ninety-hour week kept me from thinking about Kate. \n\nThe trust matured on my twenty-fifth birthday and I was officially the new owner. William was still in charge. We had agreed that he would stay on until he was seventy, which was a couple of years up the road. In the meantime, I would spend my time in the DC space. \n\nThe company had grown a lot under William's steady hand. The growth was fueled by an aggressive expansion of our defense business. My assignment was to continue to develop that product line, so I relocated to DC in order to be close to our customer base. \n\nI had a rental in Alexandria. It was a corner unit and incredibly expensive, but I was the fucking owner of the company; we could afford it. I was also away from home for the first time in my life; which to some extent exorcised the ghost of my former lover.\n\nI settled in Alexandria for two reasons. The first, and most obvious one, was that it is the best place in the entire DC metroplex for a single guy to live. The other reason was the DC Metro. I could get to the King Street Station in five minutes; and I could get across the river to anywhere in DC in under an hour in rush-hour traffic.\n\nAlexandria predates DC, as does Georgetown on the Maryland side. All the space in between those two old river towns was dismal swamp; until the Founding Fathers built DC there. In many respects, nothing's changed. Old Alexandria still looks like it did in Light Horse Harry Lee's day. In fact, his son, Robert E. Lee's, boyhood home was just down the street. And, DC is still a swamp. \n\nI could have gotten much cheaper digs in Roslyn, or Arlington, and the nightlife is a lot hotter, but I was not a party animal. Instead, I preferred to while-away my after-work hours indulging my oyster and beer addiction at the Columbia Firehouse, over on St. Asaph. \n\nWhen I got the urge to party, which was rare, I could walk up Duke, to the \"Rock It\" Grill, over on King. It provides pick-up service, both food and social. I had dated some in the seven years since Kate, mainly in the time after I arrived in DC, but there was no connection. \n\nYou are-what-you-are; based on what you've experienced up to that point. The problem was that all my experience, actually my entire world, was colored by my relationship with Kate. Once that connection was broken, I had to scramble to put together a new life plan. \n\nI had to admit that Kate was right. Our childhood hang-ups, and sheer force of habit, had made each of us the other's primary emotional support. So, I would need a lot of seasoning if I EVER wanted to be an effective adult. Kate saw it before I did, because she had gotten out first. \n\nNow, I knew that no sane person should EVER put their eggs in one basket. At least, they shouldn't unless they're certain that the basket is totally reliable. The problem was that we were eight. We had no point of reference; nothing to judge our actions by, so we just didn't know better. I hadn't learned how to successfully interact with another person; because Kate and I had been inseparable from the beginning. Thus, I had no social aptitude, let alone relationship skills.\n\nI was not bad looking, well-dressed, tall and slim, and I was filthy rich. But, I was hopelessly tongue tied and bashful. Some women read my ineptitude as creepy. The others simply didn't know that I existed. \n\nI had consciously avoided thoughts of Kate. It just hurt too much. Of course, my mother and sister felt like it was their sworn duty to fill me in on every bit of gossip about her. According to my sister, Kate was engaged to a hotshot doc up in Philly. That news killed any hope that we might reconcile; and it almost killed me. But, that was life. I straightened my shoulders and continued to march. \n\nMy primary job in DC was to \"inform.\" Anyone who has ever worked that space knows that \"informing\" is the code word for lobbying. My job was to expand our footprint with the defense community, and the people who supported it in Congress. I knew my stuff; I already held four patents, but, I was impossibly young and it was hard to get meetings with the right people. \n\nSo, we hired a door opener. Wilkes was a guy who had been a Rep for a couple of terms. His job was to show me the ropes. He was middle-to-late-forties and had been a Congressional page before he went home to get elected. Ex-Reps don't have anything like the cushy deals that ex-Senators have, but anyone who spent time on the Ways and Means Committee had a profile in town, and Wilkes knew how to spread the wealth around. \n\nI had a meeting with him at the Hawk 'n Dove, over on Pennsylvania. That's where the House Staffers hang out. If my guy had been a Senator. it would have been Charlie Palmer's, The Capital Grille, or the Monocle, and a whole lot more expensive. \n\nThe Hawk 'n Dove is like the Happy Hunting Ground, for women. You think of DC as a male dominated place; since all you ever see in the media are old white-boys wearing expensive rugs. But, DC has a voracious appetite for clericals, and women are the real power behind most of the thrones up on the Hill. So, the ratio of available women to men is closer to 2-1 in favor of the dudes. \n\nWilkes told me to meet him in the President's nook at the upstairs bar. It was a little quieter there. He had gotten me an appointment with the Chair of the House Energy and Commerce Committee and he wanted to brief me. \n\nI had come into the Capitol South Metro Station on the Blue Line. It beat fighting DC traffic; even if you DO get a very up close and personal experience with all the other sardines in the can. Wilkes had been at the Department of Energy over on Independence and ridden down from the Smithsonian stop. \n\nIn the summer, the combination of heat and humidity in DC makes it one of the most uncomfortable places on the plant. Most days feel like you're living in downtown Bangkok. So, Wilkes was drenched when he arrived. The first thing he did was order a cold beer, He drained it and then ordered another. He was geeked. \n\nWilkes was a good-looking guy, smooth and sophisticated. While, I was a six-four, awkward nerd, unworldly as the day is long, and celibate for an entire election cycle. Our contrasts were obvious.He said, \"Good news, Jake; I got the Undersecretary interested in your remote-terminal-unit interfaces. We're going to coordinate that with the Committee Chair tomorrow. I think we can get a big bucket of cash written into the Energy and Water Development Appropriation.\"\n\nI said, \"How much?\"\n\nWilkes said, \"Maybe as much as fifty million;\" and grinned. No wonder; he was going to make a lot of money for that hookup. Of course, so was I. \n\nNaturally, we would have to go through the bidding process. But, if the language happened to be written in such a way that it favored a little specialty manufacturing shop in eastern Pennsylvania; that would NOT be a coincidence. \n\nI said, \"What do you need me to do tomorrow?\" \n\nWilkes proceeded to lay out the script. It was the standard DC shuffle, where we let the esteemed member of Congress know what we were going to do for him; without saying or doing anything indictable. Those guys start running for re-election the day after they're sworn in, and that takes money. \n\nWe were just finishing up when I heard an angelic southern voice say, \"Who's this, Wilkes?\" I looked up and an utterly stunning woman plopped down opposite me. Her face was perfect, heart shaped, high cheekbones, big blue eyes and a wide sensual mouth. All of that was framed by long, thick, silky, raven hair. \n\nShe had beauty that money DOES buy, perfectly made-up, coiffed, dressed, manicured and pedicured. With her dusky skin, bright-red lipstick and nails, she was a riot of colors. I also noted a trim athletic figure. \n\nShe looked across at me and said, \"Why Wilkes, I do believe this boy is blushing!!\" \n\nShe was right. The collision between her raging sexuality and my self-consciousness was generating a lot of heat, most of which was on my face. I gulped and looked down at the table, all thoughts of being a wealthy mover-and-shaker lost in my panicked reaction to the force of nature sitting opposite me.\n\nWilkes laughed and said good naturedly, \"Jake's just bashful. I'm trying to make him into less of a geek.\" He turned to me and said, \"Jake, this is Evangeline Q. She works at Cassidy.\" \n\nThat explained it. The goddess wasn't merely a lobbyist. She worked for one of the top K Street firms, so she was as smart and influential as she was beautiful. I was getting my voice back. I mumbled, \"What does the Q stand for?\" \n\nShe got an impish look and said, \"Queneau.\" She pronounced it like \"canoe.\" I understood why she stuck with the initial. \n\nI said, \"Evangeline, like in the Longfellow poem?\" Yes folks, I had finally acquired some culture. After all, the only entertainment I had over the preceding seven years was reading.\n\nShe seemed impressed and said teasingly to Wilkes, \"Oh, and he reads big-boy books, too.\"\n\nI laughed and said, \"Laissez les bon temps rouler!\" This goddess had to be a Cajun. The black hair, the bright blue eyes and her delightful bayou accent were like a trademark. \n\nShe dimpled demurely and said, \"Evangeline Belle Queneau at your service, kind sir. My friends call me Evie.\"\n\nI said, \"Can I call you Evie?\" \n\nShe said coquettishly, \"It depends. Do you WANT to be my friend?\"\n\nI gushed, \"I've never MET a woman as beautiful as you.\" Shit!! That was suave. \n\nWilkes snickered and said, \"Jake's social skills are a bit feeble, but he's a good businessman.\"\n\nEvie's eyes flashed interest. She said, \"What does the boy do?\" That was addressed at me.\n\nI said, \"We design and build specialized controllers. They're used in a lot of different applications, both military and in the critical infrastructure. We're going to talk to some people on the Hill tomorrow.\" \n\nEvie said to Wilkes, in her delightful bayou accent, \"So, the boy is in sales?\"\n\nWilkes laughed and said, \"God no!! The boy owns the company!!!\"\n\nEvie looked incredulous and said, \"Just how big IS this company?\"\n\nWilkes smiled at her astonishment. I probably looked like I owned a paper-route. He said, \"Tomorrow's meeting is for fifty-million but his company is a lot bigger than that.\"\n\nEvie was gobsmacked. She said, \"How in the world did THAT happen.\"\n\nI tried to look humble. I said, \"I did it the old-fashioned way. I inherited it. My pop is the real genius. But, he was taken from me far too early. I'm just trying to follow in his colossal footsteps.\"\n\nWe sat and talked for a while and then Evie stood. We stood, too. I couldn't help but scan her gorgeous supple body. When I looked back at her face she was smiling. I immediately averted my eyes, humiliated. \n\nShe said mockingly, \"Like what you see?\"\n\nI blurted, \"God yes!!! Can I see it again?\" \n\nShe laughed, handed me a card, and added mischievously, \"How could I resist an offer like THAT. Call me.\" \n\nThen, Wilkes and I and every other male watched her sway out of the place, round little butt moving in one direction and her long beautiful raven hair moving in the other.\n\nThe next day, we had one of those kinds of meetings you dream about. It started out friendly and proceeded to love-in status. We had the best product. There was no doubt about that, but it wasn't the point of the meeting. Our willingness to play ball made us the apple of the good Congressman's eye, so we got a lucrative contact; and of course, he would get a sizable boost to his campaign war-chest.\n\nThe cab rank for the Rayburn Building is at the bottom of the long marble steps. There were a fantastic pair of legs sticking out of the first cab in line. The owner of those legs finished paying, slid out, and began to hurry up the steps. The legs, hips and bouncing boobs might have distracted me, but it was that stunning perfectly proportioned face with the huge blue eyes that had me captivated. \n\nShe nearly bumped into me. Running in five inch stilettos requires concentration and I was just standing there gawping at the perfection. She stopped, irritated, then she saw who it was and a huge lascivious grin spread over her face. She said, \"So the boy's had his meeting?\" \n\nI said, \"Yes, and now I can afford to buy a beautiful woman dinner at Marcel's. That is, IF she can spare the time.\" \n\nEvie said, \"Got a meeting with the House Republicans. Call me after 4 o'clock and we can arrange a time.\" Then she hurried up the steps trailing a cloud of perfume. The scent hearkened to wildly beating drums, bacchanalian fires and erotically cavorting savages. Her incredibly long legs and round hips disappeared into the door of the security checkpoint. \n\nI was sitting at the wine bar when she arrived. There was a stirring among the sheep at the reception stand. I knew it was Evie. I dropped a fifty on the bar and walked around to where she had just entered. There were a couple of tourists snapping pictures of her. They probably thought she was famous. Evie IS that charismatic. \n\nI had reserved one of the private dining areas. It was last minute, which required a $500-dollar emolument to the Ma\u00eetre'd benevolent fund, but I wanted to talk without being disturbed. I had a 2013 Far Niente Cabernet Sauvignon waiting for us; and YES, I had to look it up, but I didn't want her to think I was a total gomer. She sipped it and gave me an approving look.\n\nShe had changed into a tasteful little black dress with a delicate gold chain, which displayed a spectacular five-carat, diamond pendent nestled at the base of her throat. It was both classy and stunningly bold. Her long thick raven hair glistened. Her incredible bright blue eyes were full of life and intelligence. \n\nShe said teasingly, \"So, did the boy do well today?\" \n\nI laughed and said, \"Very well indeed. It looks like we are going to be on the Federal gravy train for some time to come.\" \n\nShe said amused, \"That is a very well-appointed and luxurious train to be on.\"\n\nI said, \"Enough about me, tell me about yourself.\"\n\nShe looked surprised. It was like the guys she was normally with, said, \"Enough about me. Now YOU can talk about me.\" \n\nI learned that she was from Abbeville, which is in the heart of Acadiana and the seat of Vermilion Parrish. The residents are descendants of the Acadians from Nova Scotia, who were displaced there in the 1770s. Evie folks were Old-South planter stock, so she had the white-glove upbringing that all proper southern maidens get. That was until she hit the LSU campus. \n\nShe was a cheerleader there, and that inevitably led to Miss Louisiana. It was hard to keep Evie down on the farm after that. She went through a year of professional beauty pageants and decided that she didn't need college to be successful. \n\nShe unashamedly admitted that she was the 20-year-old mistress of a Louisiana politician who was three times her age, a fellow whose name I knew. The old goat brought her to DC where she learned the craft working under him, so-to-speak. \n\nA woman with Evie's looks and personality wouldn't be anybody's mistress for long. She had already established her reputation as a beautiful woman; who could do what beautiful women do best, which is lead the Nation's power-brokers around by their genitals. Cassidy hired her and she had been working K Street for the past decade. She was 32, four years older than me, a powerful and totally free-spirited woman. \n\nShe was light years out of my league, but it was wonderful to be the envy of every man in the room, if only for one evening. After we finished dinner, she fixed me with those piercing blue eyes and said, \"What is a beautiful boy like you doing without a woman in your life?\" She was serious. It was like I puzzled her.\n\nI had no reason to hold anything back and she seemed genuinely interested, so I told her about Kate. I told her how we had grown up together and how we had been soulmates from the third grade. I told her how we had given our virginity to each other and how I had expected to die in her arms. \n\nEvie looked skeptical. She had a century of real-world wisdom packed into that gorgeous body. And, what I had just said sounded corny; even to me. \n\nI told her about my dad's unexpected death and our family's decision to keep the business. I told her about the 90-hour work weeks getting up-to-speed and how that prevented me from having any kind of social life. I added, that it DID put me where I was, which was the owner of a very profitable firm. \n\nFinally, I told her how I had lost Kate. I said, \"It was inevitable. I knew that the world would steal her away from me. I just didn't expect it to be so soon. She had always been shy, but it was like she became a different person when she got to college.\" \n\nEvie gave me one of those looks that was half disbelief and half sympathy and said, \"If she was as beautiful as you say; she was gator-bait for every predator out there. My guess is that she was with somebody within a week after she arrived on campus.\"\n\nEvie saw my skepticism and her eyes turned kindly. She said, \"Maybe she lasted a couple of months. That is, if you were as close as you say you were. But, she was sleeping with the guy she showed up with, and that was a long time before New Year's.\"\n\nThat statement shot a thunderbolt of anger and jealousy through me, even after ten years. It was okay to lose Kate to cruel fate. It was something else to simply have her lie to me. I said angrily, \"She assured me that she loved me. She said that I was the only boy she had ever been with.\" \n\nEvie looked lovingly pained. Then she seemed to come to a decision. She said, \"Come on boy, you need an attitude adjustment.\"\n\nWe cabbed to her place. It was a colonial-brick row-house on 27th; overlooking Rock Creek Park. Geez!! It probably only cost upwards of two, or three million. We walked up the federalist style steps to the entrance. She unlocked the door; which looked like she might have picked it up at Thomas Jefferson's estate sale. ",
        "We transitioned into a dream world of exposed brick polished oak, mahogany, chrome and copper. It was clear that, besides being stunningly beautiful, Evie had a lot of money and extremely cultured taste. It was also obvious that wealth and power all went with it. \n\nEvie quietly led me up another flight of stairs. Being a southern-girl, it was like walking up the wide steps from \"Gone with The Wind.\" We hadn't said anything since we left the restaurant, but I knew where we were going. I had no idea WHY. But, I would have to have been gayer than a tree full of chickadees not to take advantage of it.\n\nThe lights in the bedroom were on a motion sensor. They faded up to create a romantic aura as we entered. She unzipped and stepped out of her dress; never taking her eyes off me. The body that was revealed was in a black bra and matching cheekster panties. It was perfect. \n\nShe had beautifully proportioned full breasts, a flat muscular stomach, an exceptionally long and narrow waist and a round hip structure, that was both sleek and abundant at the same time. Nonetheless, her legs were the real glory. She had extra-long shapely thighs. They were gloriously, smooth and perfectly muscled. \n\nI was standing there like an imbecile; just gazing at her sheer splendor. She walked over to me, still not saying a word, and expertly dropped my pants. Then she adeptly skinned my shirt off and remarked casually, \"Lose those shoes.\" \n\nShe sauntered enticingly over to the bed, undid her bra, bent and did that one-legged thing that women do when they are taking off their panties. Any man attempting that feat would fall on his face, but women make it look graceful and sexy. It also showed off the roundest and most muscular set of buns outside the swimsuit edition of Sports Illustrated,\n\nShe turned to face me, arms extended from her side, palms facing out like one of Da Vinci's anatomical drawings. She was showing me the goods. They were remarkable. She slid gracefully under the covers. I finally stopped gawking and slid in next to her. She propped herself up on one arm, still very elegant and controlled and we kissed. Her lips opened like a flower and she moaned. It was the first sign that Evangeline Queneau was mortal. \n\nI knew what she was doing; her motives had been clear from the moment we left the restaurant. I was as close to a twenty-eight-year-old virgin as she could get. Educating me in the ways of the world was an interesting challenge to a sophisticated woman like her. I'm not sure that it was anything more than curiosity, at least at that point, but I was clearly something different for her. \n\nShe was sleek as a seal, satin with steel underneath. She showed me all the places she wanted to be touched, and how to touch them properly. Her passion was controlled, but fierce. I got the feeling that she was gauging me while showing me what making love to a deep and complex woman was like. \n\nIt wasn't loud moans and thrashing. She made little purring noises of enjoyment as I slid up into her. She enfolded me with her arms and those fabulous legs and just held me there, deep inside her. Her bright blue eyes were wide open and staring into mine, drawing me to her inner self. Her passage was in constant motion, clenching and nipping. \n\nWe just held that position, staring into each other's eyes, merging our souls. It was more like Zen than sex, and it was the most intimate sensation I have ever experienced. I was lost in her. \n\nThen her eyes clouded over and rolled back in her head. She had to have her satisfaction. She began to writhe like a snake; with me still buried to the hilt inside her. Our mutual sweat made the writhing particularly sensual. \n\nIt was still almost completely silent, but then her legs began to quiver and she emitted a huge grunt. It was like somebody had punched her in the stomach. Her passage went nuts. I could feel her fluids gush like an opened bottle of champagne. She began rapid-fire moans of sensation as she bucked in a frenzy of desire. \n\nThat went on for what seemed like eons. I would have come much quicker with a normal woman, but there was something about the way Evie went about sex that let me prolong the act to a point where we were both totally satisfied. \n\nI'm not a porn star, or even that experienced, but the power of her orgasm made me feel like John Holmes standing on Ron Jeremy's shoulders. Afterward, we lay together on our backs, drenched in sweat, holding hands and staring at the ceiling. \n\nI felt like I had passed some kind of test. She finally said, \"That was special Cher. I didn't expect that. We are going to be lovers and I am going to teach you everything.\" Then she proceeded to deliver the lesson three more times that night.\n\nTHE LITTLE FOXES\n\nThat was the beginning of life with Evangeline Belle Queneau. Every man should experience a woman like Evie. She was all of the best things about the feminine half. She was a friend, confidant and companion, experienced, knowledgeable, witty and well versed in everything from high culture to the Natty's pitching staff. \n\nShe was an endless source of ideas and her sense of humor was second to none, but she was also gentle, nurturing and always on my side. I knew that she wasn't mine. She was only Evie's. She had many men in her life, and I am sure that her job led her to have sex with some of them. She never mentioned it and I never asked. \n\nShe had a fierce, almost motherly, devotion to me. In some ways, it was more intense and reassuring than the love of a wife or girlfriend. Initially, we spent a little time together; Then we began spending a lot more. In many respects, it seemed like she had decided to act like a married woman. We spent so many nights together that she asked me to move in with her. \n\nI said worried, \"Won't that put a crimp in your love life?\" \n\nShe was irritated. \"I never bring men here. This is my fortress of solitude.\"\n\nI said, incredulous, \"Do you mean I'm the first?\"\n\nShe laughed lightly and said, \"You're my beautiful boy. I love you.\" \n\nThere it was. She clearly loved me in her own way, but I had no idea why. She said it was because I listened; I was smart, kind, considerate and goofy. I had no idea what THAT meant, but it seemed to differentiate me from every other man she'd ever known. A woman as compelling as Evie would attract a lot of sharks. I guess she liked playful otters better.\n\nWe were compatible. I was big and good-looking and I had considerable social standing. Money makes people that way, but Evie was a one in a million woman and I was more in the dime-a-dozen category, especially in a place full of power-players. \n\nShe said that she got her fill of those kind of people in her day job. But, she only had one beautiful boy. I took that at face value. She loved me in her own way; which might have been the way she'd love a Golden Retriever, but, it didn't matter; I was the only one sleeping in Evangeline Q's bed. \n\nMaybe she was paying it forward to the old goat who educated her, or maybe I just made her feel safe and loved. I had learned a few things in the months we had been together, and one of those was to not ask questions. \n\nIt was the most luxurious existence imaginable. Her place was 3,500 square feet of impeccable culture and style, right down to the genuine Old Masters on the walls. It was bright and airy while giving the sense of solidity that a few million will buy you. \n\nEvie had earned every cent of it. And I need to emphasize here; that she didn't make any of that money on her back. She was a fixer, she was the go-to person if you needed a vote, or some insider business. The commissions from her skills were astronomical. \n\nThe thing that kept me from feeling like a personal pet was the fact that I was probably richer than she was, even if I wasn't in the same zip code when it came to class. The business was growing under William's judicious management, and with Evie's help I had bagged some serious federal money. All of that came to me in a sole proprietorship when I turned 30. \n\nEvie was such a strikingly gorgeous woman that nobody thought of us as anything but a golden couple. That is, after she finished teaching me how to dress and comport myself. If you want to think of me as a male Eliza Doolittle, feel free. I was fucking the most beautiful woman in DC and developing my own personal style under her tutelage. Anybody who had a problem with that never walked a mile in my tasteful and extremely expensive shoes. \n\nWe did the things that are only possible in a cultured city like Washington, and we traveled when work permitted. That was the reason why I had a moment that I will remember forever. One beautiful English summer evening, we were at a Pre-Raphaelite exhibition at the Tate Britain. Evie was working on my art appreciation and I had dropped a considerable sum of money into their coffers, so we were getting special access to the Rossetti collection. \n\nWe were wandering the exhibition hall, holding the requisite glass of champagne; accompanied by a docent who was explaining the collection. On her own time, Evie drank straight bourbon, just like a bayou truck driver. Still, because she was the consummate doyen, she could hold a champagne flute and make it look like she was born with one in her hand. \n\nThere were several other couples in the room, all of whom were in the million-dollar donor class. I noticed an attractive pair as we circulated. He was an older man; perhaps late fifties, tall, slim, good-looking with a wealth of white hair and an air of utter superiority. His wife was considerably younger. I would guess around my age. She was absolutely gorgeous.\n\nThe male member of the couple was leering at Evie. That happens wherever we go, and I don't mind. Knowing that every guy in the room envies you is an ego boost. Nonetheless, it was the fellow's obvious interest that first caught my eye. He was working his way in our direction, no doubt to introduce himself. \n\nEvie was holding my arm possessively. I didn't own Evie. She was with me by choice. But, she's a Cajun woman. Any female who made a move on her man wouldn't know she'd been cut until she walked away and her head fell off. \n\nThe strange couple eventually managed to work their way to a place where we would have to say something, or stand there like idiots. I turned to the guy and stuck out my hand. \"Jacob.\" He shook it and said, \"Charles.\" \n\nEvie gave our new acquaintance a blast of her powerful sexuality and said, \"Evangeline.\" She only does that when she is hunting appropriations, or backing off a predator. It was clear she didn't like the dude. \n\nWe all turned to the strange woman. She was just standing there eyes wide, with both hands over her mouth. I thought, \"Of all the gin joints in all the towns in all the world, she walks into mine?\" \n\nIt was Kate!!\n\nTime froze. I hadn't seen her since that auspicious night at the Gala. She was thirty-four now, just like me, and she had an air of competence and authority that was obviously a product of the sixteen years in between.\n\nShe was a beautiful woman, not in Evie's league, but close. Evie was up there in the high country with movie stars and super-models, so comparing the two women was like comparing a Cadillac to a Bentley. There was so much more elegance and refinement with Evie. \n\nNonetheless, my little third grade pal had grown into a splendid specimen of female pulchritude. Kate's husband was clueless, but Evie picked up on it right away. She turned to Kate and said, \"My name is Evangeline. It's a pleasure to meet you.\" That was said with the sort of animal magnetism that lays Senators at her feet. It was clear that Evie was making a point. \n\nEvie turned to Charlie and said flirtatiously, \"Can you show me the Beata Beatrix?\" She gave him another dose of her spectacular sexuality. Charlie was absolutely delighted to walk Evie over to gaze at that florid piece of pre-Raphaelite shit, while resting his hand possessively on her shoulder. Normally that would have cost him a limb. But, Evie was clearing out the space to let Kate and I talk.\n\nI looked at Kate. She had tears in her eyes. I was going to say something cute like, \"Long time no see,\" but the sophisticated overlay that Evie had baked into me prevented me from doing that; thank God! Instead, I took both her hands and said, \"What a delightful coincidence. You look wonderful, Kate!!\" \n\nShe continued to stare at me, regret fighting with sorrow. I had to get this under control, or something embarrassing was going to happen. I said, \"I assume that Charlie is your husband. He seems like a fine man. Is he a doctor, too?\" My busybody sister had told me that Kate was a surgeon at Thomas Jefferson University Hospital in downtown Philly.\n\nShe shook herself out of her daze and said, \"Yes, he was my surgical supervisor and mentor when I was a resident.\" Then she hesitated and said timorously, \"Is Evie your wife?\" \n\nI laughed and said, \"Evie is one of the top lobbyists in Washington DC, and she doesn't need a man to support her. We've been together for six years and we will probably die in each other's arms.\"\n\nI could see my remark about dying in each other's arms hurt Kate. But, what was I supposed to say? I added with emphasis, \"But Evie is NOT the marrying kind. She's more like a partner, or perhaps the better term would be life-companion.\" \n\nShe said, \"Your sister tells me that your business is growing.\" That was pure conversation. She had no interest in my business, and she had no idea how rich I was.\n\nI said, \"We do alright; that's for sure. All those hours I spent trying to become a pale shadow of my old man paid off.\" I didn't mention that I was the President and Chairman of the Board. I was sure she wouldn't care.\n\nShe had never taken her eyes off my face. She was searching for something. Finally, she said, \"Do you ever wonder what would have happened?\" \n\nI could be honest. Fate had been more than kind to me. I said, \"I've never stopped wondering, about that, Kate. But, that's not what the gods decreed. I'm good with that now. We are both where we belong, I mean, my heavens, you save people's lives!\" \n\nShe smiled self-effacingly, and said, \"It's what I wanted and it IS rewarding, but in all those years I never stopped loving you.\" That was a face-value statement, not meant to lead anywhere. \n\nI said, \"Well, I have never stopped loving you, either. The currents of life have taken us in different directions, and we are with other people now. Still, Jake and Kate are forever.\" \n\nA tear dropped out of her eye. This was getting way too intense. We had both gotten some closure and I, for one, was ready to move on. I gave Evie a signal. She came over, leading Mr. Clueless by the hand. \n\nHe still had no idea about his wife's relationship with me, but he WAS beginning to display all the distinguishing traits of Pepe Le Pew. He said conversationally, \"So, do you two want to get a drink afterward?\" \n\nThat was so transparent that I was embarrassed for Kate. I was going to send them on their way, but Evie said seductively, \"That sounds charming.\" \n\nI thought, \"What is she up to?\" Evie deals with entire battalions of arrogant d-bags. This guy was no different. \n\nI gave her a WTF look.\n\nShe gave me her, \"Wait!\" hand signal. \n\nKate said, looking sourly at Evie, \"No, we really have to get back to the hotel. We're flying out tomorrow morning.\" Then she grabbed lover boy by the hand and angrily dragged him out of the exhibition hall. \n\nI turned to Evie, one eyebrow raised. She gave me her lighthearted, Scarlett O'Hare titter and said, \"That self-important fool actually propositioned me while you were talking with your former girlfriend. He thought you two were attracted to each other. If he only knew.\"\n\nThen she added mischievously, \"So, he wanted to swap. I was curious whether his wife was aware of his shenanigans; and apparently, she is. If she hadn't hosed him down, I would have, but I wanted to know for sure.\" \n\nI thought with sympathy, \"Oh, poor Kate.\" Part of me was marveling at how little we had known about life when we were together. The other part of me marveled at the amazing woman who had inexplicably decided to adopt me.\n\nARMAGEDDON\n\nTo say the least, Evie and I had a strange relationship. We never used the \"L\" word, but we were as close as two people could be. She was a dazzlingly sexual female and she wasn't afraid to use her sexuality, especially if she wanted to get something. She was also a monogamous, one man woman. I sincerely believed that. Her personal integrity was indisputable.\n\nShe was fiercely independent, and yet she was warm, loving and fun to be with. Most of the independence seemed to be due to her bayou upbringing, but Evangeline Queneau was not wired like any other woman I've ever known. She was a true force of nature. \n\nWe had been living together for over twenty years. Occasionally we were apart. We both had heavy lifting to do. But, we were never apart in our hearts. At the end of each day we were always together with a glass of wine; sitting on her little balcony and gazing out over the park. \n\nDid she ever get with someone else? I don't know. She could have, if she wanted to. We had made no pledges or commitments. We were together because we chose to be together. The more important consideration was, \"Did I trust her to do the very best she could for us?\" That was easy to answer. I know it's a smarmy concept, but we were soul-mates.\n\nThen, one day in my fiftieth year, things changed. Evie had just turned fifty-four. Looks-wise, she could still give all the twenty-year-old hotties a run for their money. But, the wealth of wisdom and experience that she had accumulated over her years had made her into the most talented and sophisticated lover and companion a man could ever ask for. \n\nShe had been behaving strangely for a couple of weeks. It was nothing alarming, just kind of distracted. We were sitting on the big sectional in the great room. She was snuggled up under my arm, purring with contentment. I thought it was a good time to ask her what was going on. \n\nWe were honest with each other. I said, \"You've been moody for a while baby. What's the problem?\"\n\nShe said, \"It's nothing. I'm just a little distracted. I have something on my mind that hasn't worked itself out yet. When it does, you'll be the first to know.\"\n\nI left it at that. Evie had an adamantine soul. One of the reasons we were so close is that I recognized her strength and intelligence, so I simply let Evie, be Evie. She would tell me when she was ready. No amount of solicitous curiosity was going to get it out of her any sooner. \n\nOf course, I immediately drew the obvious conclusion. She had found somebody else. She was as loving and sexually aggressive as ever, but the thing that made Evie special was her all-in quality, and she was clearly holding something back now. \n\nIt didn't surprise me. Evie was the dominant one. She was older, much more experienced and far more attractive to the opposite sex. We have been together for twenty-two years, and I thanked god for every day of it. \n\nHer decision to move on would hurt, but she had the right to make it. She owed me nothing, at least anything that had been sanctioned by a pledge.\n\nMy company had grown to the point where our corporate headquarters had relocated to Fairfax. It was a big glass building with my name on it. But, it was not a full-time job anymore. I had the honorary title of \"Chairman,\" but I had hired a bunch of smart guys to actually run the business, and they had countless minions to do their bidding. I spent my time doing advocacy and tinkering in my little workshop. I was still a nerd at heart.\n\nSeveral days passed. I had my lawyers investigate moving me to someplace in town. I had essentially been boarding with Evie for all the time I was living in DC. I could have easily bought the entire block. But, she insisted that I simply live there with her. ",
        "Initially, she was \"mothering\" me, but it soon became something else. I knew that it was impossible for Evie to surrender control of any aspect of her life. That was one of the things that I respected the most about her. But she also had a fierce need to be with me, to be my partner in every aspect of our emotional life. It was a deeper commitment than just love. That paradox was one of the reasons why I trusted her so implicitly.\n\nI was in my home office doing a little telecommuting. It was one of those days in DC when the bad weather sweeps down out of the Alleghenies and the place starts to resemble Sodom and Gomorrah, in more ways than just the behavior of the residents. Evie walked in as the rain was starting. It was 2:19 in the afternoon. I will never forget that time. \n\nI said, \"What are you doing home?\" \n\nShe looked at me sadly, and said, \"We need to talk.\" At that point, there was a clich\u00e9d crack of thunder. \n\nI thought, \"I KNEW IT!!\"\n\nI walked over to the kitchen table. She sat next to me, rather than across from me. She turned toward me, took one of my hands in her two dainty little paws and just looked at me. Finally, she said, \"I love you more than I can ever express, but I'm going to be leaving you soon.\" \n\nShe could see the pain in my face. I said, with resignation, \"I'd guessed that already. How much time do I have?\"\n\nShe said, \"Six months, to a year.\" That made no sense.\n\nI said, \"Huh? You are giving me a half year to move out? I can do that in a week.\"\n\nShe continued to look sad, and said, \"No, I'm leaving you. I just got some very bad news.\"\n\nIt was coming at me like an approaching freight train, but it hadn't quite gotten there yet. \n\nShe said, \"I'm dying, Jake. I have perhaps a year to live.\" \n\nThat statement ended my world as I knew it. The dinosaurs must have felt the same way. One moment your life is certain. Then the fatal meteor streaks across the sky; and it's all gone in an instant. \n\nI said the stupidest thing imaginable, \"We can beat it. I know we can. \n\nShe looked at me lovingly and said, \"No, we won't. This kind of cancer is a death sentence. The only positive thing is that I will be able to live a fairly normal life until my last days.\"\n\nI consider myself a tough and pragmatic guy. I survived my dad's unexpected death. I managed to pull through my loss of Kate, but this was too much to endure. I put my head down on the table and wept. \n\nI sensed HER comforting ME. THAT shameful image straightened my spine. I wiped my eyes and looked at her as determinedly as I could. I said, \"We'll get specialists.\" \n\nShe said, \"I've seen the best.\"\n\nI said, \"I have friends at NIH. We can get you into experimental treatments. I don't care how much they cost. I can afford them.\"\n\nShe looked at me tenderly, and said, \"I have more friends than you do at NIH, and they all just told me to accept it.\"\n\nIt finally hit me. This supremely courageous woman was in a battle to the death. I knew that I ought to just face it. But, that simply wasn't possible. A man losing a wife is losing her love and companionship. Evie was also my mentor, and in many respects my only connection with the outside world. She had cheerfully compensated for my innate weaknesses and made me a much stronger man. \n\nLosing her wouldn't just put a hole in my life; it would end it entirely. It is extraordinarily selfish, to view somebody else's death in terms of how it affects YOU. After all, I was healthy, wealthy, and if I wasn't wise, at least I had a presumably long life in front of me. But, that last part was irrelevant. I didn't want a long life without Evie. Losing her would blow-up my emotional foundation and all of my intellectual structures. I had anchored my entire life on her steadfast soul. She was my center, my rock and personal fortress. Without her, I was totally alone and bereft. \n\nI felt the onset of panic. I knew that I couldn't break down in front of her. She had bravely acceded to her fate. I had no right to make it worse by flying off the handle. She saw the effort I was making, and said lovingly, \"Let it out baby. I did the same thing when I learned that I would be parting from you for eternity.\" \n\nI didn't cry when my dad died. I hadn't shed a tear over Kate, but I began to wail like a little baby girl. She held me to her perfect round bosom, stroking my head and making soothing noises. I would begin to stop my caterwauling. Then the awful reality would hit me again and I would start up again. \n\nI finally realized how spineless my behavior was. It made me stop sniveling. I looked into that perfect face, still radiating the energy of her stunning life-force. I said through my tears, \"I will spend whatever it takes to make whatever time we have memorable.\" \n\nAnd, I did just that.\n\nFor a change, I was controlling things. I couldn't pay Evie back for a quarter century of loving guidance, but I could, and would, devote myself to a spectacular end-game. It wasn't a fair exchange. She had given me so much more. Still, I threw myself into taking care of her with the aggressive energy that I put into the first seven years of learning the business. \n\nI cashed out all of my corporate ventures and put the money in a big pile. My mom was gone and I had secured my father's legacy. I set my sister up for life, and then moved on to my only real purpose, which was to do as much as I could for Evie. \n\nShe liked history. We toured Italy with a Professor of Antiquities at the American University in Rome. We did the same in Greece. We fucked in our $500 per night room on the lip of the cliffs at Santorini, and then watched the sun set over the harbor. We saw the Great Pyramids, the Great Wall, the Great Barrier Reef and the Grand Canyon. We were at the World Series, the Super Bowl and the opening of every blockbuster show on Broadway. \n\nThere were inevitable interruptions for treatment, but the palliative care took place in an advanced facility in the next-door townhouse. I purchased it and joined it with Evie's place so she could go back and forth without leaving our home. The full-time nursing staff stayed in luxury quarters in the other house. It cost, but it was a drop in the bucket compared to Evie's love.\n\nMy valiant little Cajun was conducting a fighting retreat. Even though the odds were stacked against her, she was Foch at Verdun, \"Hard pressed on my right. My center is yielding, Impossible to maneuver, situation excellent. I am attacking.\" And Evie attacked life with the kind of ferocity that only she could muster. \n\nMost of the time, she was her old self, intelligent, witty, and above all, loving and giving. We would talk and laugh as we always had. Then a shadow would pass across the face of the sun. I had no idea how much pain she was enduring, because she never complained.\n\nStill, she fought on. The moment finally came when even HER magnificent spirit couldn't hold-off the malicious power of the disease. We maintained her in her own room. It was the room where we had first made love. That was eternities ago, back when the world was young. \n\nShe was under the care of a 24-hour oncology team, and YES, it cost a fortune, but I had several of those at my disposal. They wanted me to stay out of the immediate vicinity, simply because I got in the way hovering over Evie's bed. So, I slept next door. \n\nHer beautiful body had shrunk to an 80-pound husk, but lying in the hospital bed she would greet me every morning with a bright sunshiny smile. I would spend the day holding her hand and talking. I would read to her. She liked Twain. I think it was the Mississippi River associations. But, as the time grew closer, she wanted me to read Virginia Woolf. \n\nShe slept a lot. I did my crying then; so she couldn't see me. The end came, spiteful as a thief in the night. The head nurse woke me at 4AM to tell me that Evie had started Cheyne-Stokes breathing. I sat at my love's bedside holding her hand as she went through each of those deadly cycles. Peaceful death is for the storybooks. The reality is that it's a vicious and terrifying fight to the end. \n\nI know; I was there.\n\nEvie was in some form of deep sleep, or perhaps unconsciousness as the final battle raged. Ninety minutes passed. There was silence. She slowly opened her striking blue eyes and looked at me with the sincerest and most profound love. Then she left me slowly, dignified and graceful as ever. My unearthly howl of pain brought the nursing staff running en-masse.\n\nWe weren't officially married, but Evie had given me power of attorney, which I was going to enforce through a battalion of very high paid lawyers. She didn't have a family to speak of, so she had left everything to me. I immediately cashed it in. I matched it dollar-for-dollar, and used the millions to endow the Evangeline Belle Queneau School of Public Policy at LSU. \n\nI might have given it to a more high-profile academic place like Georgetown, but I wanted the generations-to-come in Acadiana to remember her name. \n\nAs for me, I got myself a dog and a boat. I was fifty-three. I didn't know how much time I had left, but I planned to finish my days in the exact state that Evie had rescued me from: solitary. \n\nI am an expert sailor, but solo-sailing anything over 50 feet in your middle fifties still takes some getting used to. I took a year to work my way around the southeast coast and down to a place where I felt comfortable. I had endless resources to draw on, so there was no need to interact with anybody except the people who ran the Marinas. \n\nOnce in a while, some misguided soul would try to be neighborly. Buster looks like the hound from hell, even if he wouldn't hurt a fly. Between his deep bark and my surly demeanor, they never stayed long. We just drifted south until we ended up at St. Thomas. I liked it there. People left me alone.\n\nREDEMPTION\n\nThat's how I came to be sitting at Tickles; on a very hot afternoon in June, of my fifty-ninth year. I had been living at that marina for five years. I'd read a bit, play on the internet and do all the maintenance needed to keep the boat ship-shape. Sometimes I would run over to Cruz Bay on St. Johns, and even down to St Croix for a couple of months. \n\nThe change of scene was nice and I liked the bars in Christiansted. But, I would always end up back at Charlotte Amalie. People ignored me there. I think it's the cold, remorseless effect of the bureaucracy. It encourages personal distance. That's the way it is in DC, too. I wanted to remain nameless.\n\nI stood up, gestured to Buster and began to walk back to the boat. He followed in my wake. His tail-stump was waggling hopefully, in anticipation of feeding time. As we approached, I saw that a stranger was sitting in the cockpit. It was a woman of approximately my age. She must have been stunning when she was younger, because she was still a very good-looking fifty-something. \n\nIt irritated me. I don't like my privacy invaded. There is too much cruise traffic into Charlotte Amalie, and sometimes the tourists wander down to the marina to look at the big boats. A couple of times, I had found kids using the bow for a diving platform, but the older, more genteel types, like this lady, were generally more circumspect. \n\nShe was gazing to her left out toward Hassel Island, so she didn't see us coming up the dock. Buster's deep bark startled her. She jumped, and turned to face us. \n\nFor the second time in my life, I was buried by a tsunami of memories. She was twenty-five years older. Even so, I would recognize those beautiful hazel eyes anywhere. After all, I had gazed lovingly into them all the time I was growing up. \n\nOnce again, it was Kate!\n\nShe smiled nervously, and said, \"Hello, Jake. I was hoping to talk to you.\"\n\nIt was like my brain had crashed and was trying to reboot. Kate was the only person I had ever felt anything for in my whole life; besides Evie of course. Throughout childhood, adolescence and early adulthood, she had been my sole companion. We did everything together and we had plans to spend our life with each other, so it seemed natural for the years to fall away and all the old feelings, associations and memories to flood back.\n\nKate's loss had been the greatest tragedy of my life; until Evie's death retired THAT trophy for all-time. But, our unhappy parting was forty years ago. I'd led a full life in those intervening years with the most fascinating woman in the world. SHE had made me into the man I was. \n\nI stepped on the side deck of the boat, over the gunnel and into the cockpit. Buster hopped down next to me. He was still eyeing Kate suspiciously. I said, \"My God, Kate. It's wonderful to see you, but what are you doing here?\" \n\nShe said, \"I wanted to have a serious talk with you.\" \n\nI motioned toward the cabin and said, \"Come on down to the lounge while I feed Buster. The old boy has his routines.\" I realized that I was prioritizing my dog over her, but I hadn't invited this visit. \n\nThe Beneteau has a luxurious cabin, all high-end wood, leather and chrome. I had gotten the premier package, so the furniture was in the same class as the fittings. The masterpieces on the forward bulkhead were some of Evie's best. Evie loved them. Hence, they were the only things of hers that I couldn't bear to part with. \n\nKate was impressed by the decor. I walked into the galley, filled Buster's big food dish and water bowl. He instantly buried his jowls in his evening meal. I turned and sat down in the lounge-chair, gesturing for Kate to sit wherever she pleased. She sat on the sectional, knees together, looking even more nervous.\n\nShe was wearing the classic preppie uniform; Topsiders, a white pleated skirt and a navy blouse. There was a slight scoop to the top and the requisite set of pearls. It was not intended to show off her boobs, which were still exceptional. Her hair was longer. It wasn't pure chestnut anymore. Now, it was streaked with white. \n\nHer face had held up well, relatively smooth and unlined. Her eyes were as beautiful as ever, sparkling with intelligence and kindness. She radiated an appearance of competence and command; something that she had not displayed in London. \n\nIn fact, it was the firmness in the set of her mouth that distinguished this Kate from the woman I had encountered there. Of course, almost twenty-five years had passed, and she was a famous surgeon now. And yes, I knew who she was. Just like me, she had her own Wikipedia page.\n\nI said gently, \"You said you wanted to have a serious talk? I'm listening.\" I was puzzled. People from your past don't just show up on your doorstep unannounced. \n\nShe said uncertainly, \"I've been rehearsing this for two years and I'm totally tongue-tied, so I guess I'll just say it. Growing up, you were the most important person in my life. I loved you; even more than I loved my parents, and I never imagined being anything but your wife.\"\n\nShe added sincerely, \"Leaving home terrified me. Being without you was confusing and frightening. I never stopped loving you in my heart. But, I felt like I was drowning. I was a silly and inexperienced girl back then and I did whatever I could to survive. So, I simply grabbed onto the first life-ring that came my way.\"\n\nI looked incredulous. She hastily added, \"I knew how badly I hurt you. The other boy insisted on coming to that gala and I was too weak to say no. He was out of my life by Valentine's Day. But, I knew that I had betrayed your trust; and I had too much pride to come crawling back. I was afraid of what you might say, or do. So, I moved on, as painful as it was.\" \n\nI said mildly, \"Were you fucking him before you came home? That was long ago and far away so I don't care. I was just wondering how delusional I was at the time.\"\n\nShe hung her head shamefaced, and said, \"Of course I was. He was a big man on campus. I was weak and vulnerable. I must have been no challenge to him. It all seems so sordid and juvenile. I thought he was my knight in sining armor, my savior. I'm sorry I lied. But, I did a lot of stupid things back then.\" \n\nShe hesitated and said, \"I love you, Jake. I have never stopped loving you. Even when I was married, I kept hoping you would appear on a white charger and whisk me away. Seeing you with that unearthly beautiful woman ended that dream. I even considered suicide after that.\"\n\nI said a bit harshly, \"So whatever happened to old Charlie?\"\n\nKate cracked a vindictive smile and said, \"He was 22 years older than me. He's dead now, but I divorced the creep a long time before that happened. I gravitate to men who take charge. The boy you saw me with was like that. So was Charles. He was my clinical supervisor. Then he was my lover and eventually my husband. He was so self-assured.\"\n\nShe grimaced and said, \"I know I am not presenting myself in the best light, but I've always been weak.\" She added glumly, \"Then he started making me do things that I simply couldn't justify morally.\"\n\nI quickly interrupted, I didn't want the confession to go any farther. I said, \"I know. He tried to swap you for Evie when we met. Of course, he didn't know who I was, and Evie caused normally rational men to do dumb things. We both suspected that was not the first time.\"\n\nShe looked angry and said, \"That happened a few times. It was one of the main reasons why I cut him loose.\"\n\nI added mildly, \"Evie said that you knew.\"\n\nShe said, sounding embarrassed, \"I was always too submissive. It took a lot of therapy to overcome my demons. I've worked hard to become a strong and independent woman. I know that I am accountable for my choices now, and I accept that responsibility. But, the worst decision of my life was to give up on you. That's why I mustered the courage to have this conversation.\"\n\nI said reasonably, \"It would have hurt me more to think that I prevented you from becoming the person you were destined to be. I loved you then. I love you now. We've both lived full lives; different than we thought, but that's behind us now.\"\n\nThen I looked at her and said pointedly, \"You never told me why you are here.\"\n\nShe took a deep breath. She was going \"all-in\" on a single card. She said, \"I have never lost my feelings for you. We are both alone and we are both getting older. I just couldn't live with myself if I didn't try to reestablish some small part of what we used to have.\"\n\nInstead of answering her, I said, \"How do you know all of this. How did you find me?\"\n\nShe said, \"They have this little thing called the internet. I would occasionally look you up. I wasn't cyberstalking you. But, for forty years, you have never been far from my thoughts.\"\n\nShe gave me a wan smile and said, \"I know that you don't use Facebook, but Evie did. As heartbreaking as it was, I followed your life and I felt nothing but happiness for you.\" \n\nShe added wryly, \"I DID have to pay an investigator to find out exactly where you were living. It only took an hour.\" \n\nShe said with regret in her voice, \"I know your situation. I know that you never married. I know how much you loved Evie. I respect that commitment, but I'm as alone as you are now.\"\n\nThen she hesitated, and added forlornly, \"I always hoped that we could end our lives together.\" She stopped talking and sat there looking expectantly at me, waiting for a reply. \n\nMy first thought was, \"The gods really enjoy fucking with me.\" There was no question that Kate was the only OTHER female I had ever loved. She had been special to me from the time I had thoughts, so her essence was always tucked in the attic of my mind. \n\nOur parting hurt a lot, inevitable as it might have been. Discovering that she had not been truthful about why she left me was upsetting, but a guy who holds a forty-year grudge because his teenage girlfriend lied to him, needs serious psychiatric intervention.\n\nThe problem was that a word like \"love\" is totally inadequate to describe how I felt about Evangeline Queneau. Her loss hadn't crushed my soul. It had vaporized it. That fact gave me several concerns. I said hesitantly, \"I would prefer to be alone for the rest of my life, simply to honor my love for Evie.\" ",
        "Her face saddened. I quickly added, \"But Evie is dead and she was always the practical one, so I am sure that she would want me to explore this.\" Kate's beautiful face lit up with pure joy. \n\nI added, \"I hope that you understand that we would start out as total strangers. We have to get to know each other. Everything I am, happened after we parted. I'm sure that's true for you, too. We might end up hating each other, or maybe we'll recapture the magic. Either way, we're starting from square one.\" \n\nI didn't add, \"And I don't care how it turns out.\" \n\nIt might seem disingenuous to approach rebuilding a relationship with an \"I don't give a shit,\" attitude, but that was precisely how I felt. I didn't ask Kate to reappear in my life, but this \"miraculous\" event DID need to be explored, at least to put any lingering doubts to rest.\n\nKate was smart. She knew that my offer was the best I could do. She said calmly, \"So what are the ground-rules?\" \n\nI said, \"I'm happy here in the tropics. This might be the deal-breaker, but I have no desire to move back to the States.\" \n\nShe looked like the idea of eternal summer delighted her. She said, \"I own a big house in Bryn Mawr, but the housekeeper can look after it.\" I smiled at the image of shy Kate as lady of a grand manor. \n\nI said, \"Where are you staying and for how long?\"\n\nShe said matter of fact, \"I'm staying at the Ritz-Carlton, and I'll be there for however long it takes. I can afford it\" This person wasn't Kate. This woman was rich, sophisticated and socially adept; garnished with her exceptional skills as a doctor. Of course, so was I, in my own way. Maybe we WOULD make something out of this crazy situation. \n\nI was conflicted. High school sweethearts only reunite in fairy tales. Kate would never replace Evie in my heart, but there was a lot of middle ground between monastic life and spiritual soul-mate, so I decided to see where on that scale we might land.\n\nAs far as I was concerned, Kate was the only like-minded person left on earth, and I suppose you never forget your first real love; even though I had been totally devoted to Evie. I missed the companionship of a woman. It wasn't the sex. Charlotte Amalie is a seat of government and a popular tourist destination. A lot of accomplished professional beauties practice down there. \n\nStill, I craved the easy-going, day-to-day ritual of having a woman partner. Evie and I had built a fortress of happy intimacy, which kept the outside world at bay. I had something like that, on a much lesser scale, growing up with Kate. I didn't expect to establish more than that sort of live-in friendship, but that would be sufficient. I really didn't want to die alone. \n\nEvie was the sticking point. I presumed that she would want me to do this, but I didn't know for sure, and I was simply not going to move any closer to Kate without being certain that I was honoring Evie's memory. \n\nEvie had been inexplicably loyal to me. She could have had any man in DC, but she chose me, and she clung to me with a ferocity that only a woman with Evie's profound strength of character could muster. So, I wanted a sign. It didn't have to be trumpets and angels, but I needed to know that I was doing the right thing by my lost love. I'm stupidly sentimental that way. \n\nIn my mind, there were three possible outcomes. We could immediately go our separate ways. Or, we could try to capture the old magic and find out that there were no fairy-tale endings. Or, we could establish something like we had forty years ago. Apart from option one, and option one was just fine with me, it wasn't going to happen overnight. I had all the power, for a change. \n\nKate might have hoped to stay with me on the boat. I had a huge sleeping cabin by cruiser standards. But, I wasn't going to have any woman in it until I got my concerns about Evie's ever-present, ghost ironed-out. It was the middle of the day. I was drenched in sweat and I had already had a couple of beers. Kate was looking expectant. \n\nI said reasonably, \"Let me grab a shower and I'll meet you at Bleuwater in a couple of hours.\" Bleuwater is the upscale restaurant at the Ritz. Kate looked disappointed. I think she hoped I would drag her down to the stateroom and ravish her. We obviously had different expectations. But, she had never experienced a great love.\n\nShe said tentatively, \"I can wait for you while you do that.\"\n\nI said, \"No, if we are starting from scratch we need to start it out with a romantic first date. You aren't an eighteen-year-old high school girl. You're an accomplished woman now. If I'm going to love you I'm going to have to get know you, because right now, you're a total stranger.\" \n\nKate's smart. She got it right away. I was going to treat her proposition seriously. If I didn't give a shit about her, I would have fucked her and then blown her off. But if I really wanted to establish something, there was going to have to be an exploration process. \n\nShe gave me a sexy look and said, \"Well then, I'll make it worth your while, sailor.\" \n\nI helped her off the boat. You need sea legs to gracefully disembark from a big sailboat. She disappeared up the dock. I stood and watched her as she walked away. She always had an exceptionally sweet body, slim, long waisted and a beautiful round ass. She had lost none of that in the intervening forty years. \n\nI felt something that I thought I would never experience again in this life. I said to Buster, \"This might work after-all, old pal.\" He looked at me wordlessly from the spot where he was carefully grooming his unmentionables.\n\nI was sitting in Bleuwater's window niche two hours later, the one that directly overlooks the harbor. I was wearing a custom tailored Irish linen suite and an open necked St. Laurent shirt. I was sipping from the bottle of Louis Jadot Pommard, which I had just ordered. Thanks to Evie, I had come a long way from my beer and oyster days. \n\nIt was sunset and the sky to my right was a brilliant gold and purple. The harbor lights were like a necklace of pearls around the blackness of the water. The shrimpers were still coming in with their bright red and green running lights. That added to the spectacular array of colors. The breeze blowing in through the open French doors was silken with its exotic tropical splendor.\n\nThen Kate appeared. She had gotten a lot more sensual as she had gotten older, and she had gone all out. Of course, she was gorgeous. \n\nMy first thought was of the skinny little girl who had been my only friend and companion, growing up. Kate had developed into a stunning teenage beauty, but the woman approaching me had refined that into a true belle-femme-du-monde. \n\nShe was poised and graceful in a figure hugging tropical di Chiara dress. The premium Jersey knit covered her from neck to knees. Her huge breasts, tiny waist and lush womanly hips were tastefully displayed; not too tight, but tight enough for me to understand that this Kate wasn't a coltish teenage beauty anymore. She was a full-on erection inducing seductress. \n\nI rose and pulled out her chair. She sat down opposite. She had one of those secret smiles; the kind that women get when they know they've knocked the socks off some poor male. It DID seem like the years had melted away. She was as witty and intelligent as ever, but there was a melancholy behind it all.\n\nWe ordered, and then I took her hands across the table and said, \"You're not happy Kate. You can tell your old friend why.\"\n\nShe said, \"I'm almost sixty and I feel like I've wasted my life.\" I must have looked astounded. She continued with, \"It was so fresh and hopeful back then.\" \n\nI knew what she meant. I said, \"We traded our innocence for a lifetime of wisdom and accomplishment. There was happiness and pain in abundance. And frankly, I wouldn't change anything even if I could.\" \n\nShe said solemnly, \"I WOULD. I spent forty years alone, all because I didn't understand the consequences of my own weaknesses. There were hundreds of times throughout my twenties, when I wanted to beg your forgiveness, offer you anything to get you back in my life. And I believe that you would have come, too, at least until you met Evie.\"\n\nShe sighed as she said, \"But instead, I just drifted, afraid to humiliate myself.\" She got tears in her eyes as she said, \"Because of my foolish pride and indecision, I lived forty empty years without the one person I was meant to be with.\"\n\nWe were at a place where we could look back and see the metaphorical fork in the road. That fork had dictated who we were. There was no doubt life would have been different if we had NOT gone our separate ways. If we had stayed together, I would have owned a thriving business in a little Pennsylvania town, not been a millionaire many times over. Kate would have been the town's beloved GP, not a legendary maven of medicine. \n\nHonestly, I knew that my subsequent years would have been as empty as Kate's, except Evie had filled in that emptiness with her sparkling soul. More relevantly, I was enough of a realist to accept that Evie was gone forever and I still had to march or die. \n\nKate was looking at me, trying to fathom what I was thinking. I said, \"In many respects I was as passive as you were. I spent a decade mourning your loss; night and day.\" \n\nI looked at her kindly, and said, \"Then, I got lucky. Evie adopted me. I don't know what she saw in me. She could have had any man in Washington, but she made me the person I am today.\" \n\nI gave Kate my most sincere look and said, \"In that respect, it is important that you understand that I can never be anything but devoted to Evie. Nonetheless, she's gone and you were my childhood companion and my teenage love. Back then, I couldn't imagine any scenario where we were ever apart. So, the fact that we are together again, as unlikely as that might seem, feels like a portent.\" \n\nI'm as superstitious as a medieval peasant. It's one of my more neurotic quirks. I've always been that way. I've never actually sacrificed a goat to curry celestial favor, but all my important life decisions are influenced by small things, seemingly auspicious events that occurred when I felt like I needed guidance. \n\nI saw each happening as a sign. Kate's decision to re-insert herself in my life seemed like one of those portents. The question was whether it was a good sign, or a bad one. We finished dinner and we walked out onto the terrace for a nightcap. Kate's eyes were glowing with affection. I don't think mine were any different. \n\nIf you share a deep love with a person, the feeling never goes away. That is, if your love is true. It was clear that my feelings for Kate were as steadfast as they had always been. Forty years of life told me I was correct. It was like the years had melted away and it was just Kate and me sitting on that blanket on the hill. I said, \"Thank you for the evening, Kate. This has been wonderful.\"\n\nI could see that she was expectant. So, I hastily added, \"I want to be honest with you. In fact, we should be brutally honest with each other, if we are going to make this work.\"\n\nI looked at her tenderly, and said, \"We could easily finish the evening in bed. I have no doubt that I have the same loving feelings for you that I had when we were kids, but we are not the same people, total strangers as-it-were. I want to get to know you again before we take it to the next level.\" \n\nHer body language said that she was crushed, but her eyes revealed her understanding. I took that as a positive indication. Kate is an intelligent and practical woman. She knew better than to try to force intimacy. That could only happen in time. \n\nI offered her my hand and she took it. We walked hand in hand to the elevator. We kissed for the first time in forty years. It was a sweet sensual promise of many things to come. The doors closed and I went back to the boat.\n\nI had a lot of thinking to do. In some respects, I was still as much in love with Kate as I'd been the day she left for school. I was also certain that our fundamental compatibility would lead us into a contented, secure and joyful old age, but unfortunately, there was the specter of Evie. \n\nI had loved Evie so profoundly, that I knew I would have to make peace with her lingering soul. I think best when I'm at sea. The endless ocean and the infinite panoply of stars on the black velvet of the cosmos is as close as I ever get to a religious experience. So, I unhooked, and motored out through the West Gregerie channel into the open Caribbean. \n\nIt was almost ten o'clock and I was set on a leisurely course west-southwest. I got the sail up and locked the self-steering mechanism on 250 degrees. I went down into the cabin and got out the bottle of Valdespino, Pre-1962 Cuban Rum. I was saving it for when I needed inspiration. There was never a better time. \n\nTonight, I was going to wrestle with the question of what next? Buster was sitting at my feet panting, as I poured three fingers of $500-a-bottle rum into a jelly glass. It was smooth as silk. The only sound was the murmuring of the sea as it rushed past the hull and the occasional snap of the stays overhead. I savored an inimitable view of the stars. It was breathtaking. \n\nThe question under debate tonight was simple: Was I justified in moving on from Evie? I had not kissed another woman, except as a commercial transaction, since Evie's death. That was almost a decade ago. \n\nI knew that Kate and I would have a bond almost as intense. But, I am both a sentimental fool as well as a superstitious idiot. I wanted some indication that what I was doing was the right thing, anything that would release me from the binding chains of the commitment that I had made to my eternal love. \n\nI sailed and I drank. It was nearing 3 AM. I had gone perhaps thirty miles, so I was fifty miles southeast of the Isla De Culebra, still oriented south-southwest toward Vieques. \n\nThe sky at night on the open ocean is not like anything a landlubber will ever see. When you are away from the light pollution of civilization, the Milky Way is laid out like a shining pathway across the sky. All the prominent stars glitter with their own special colors. Everything else is silent. You are enfolded in a celestial eternity, and it is easy to understand why humans have always believed in powers greater than themselves. \n\nIt was late and I had enough to drink. I had promised Kate that I would meet her for lunch. I regretfully concluded that it was time to start the diesels and head back. Once I got docked, I could sleep it off for part of the morning. \n\nTHEN I SAW IT!!! \n\nFor a moment, I thought it was Arcturus, but that super-bright star was sitting a little lower on the horizon. Plus, this light was the brightest object in the sky. The phenomenon burnt with an intense blue glow. It held perfectly stationary, so it wasn't an aircraft. It just hovered there on the southwestern horizon like a beacon. The blue was the exact shade of Evie's sapphire eyes. \n\nAs I stared at it, it began to pulse. I felt loved and reassured. I could almost hear her voice saying, \"Let me go, baby. I'm gone now. You need to be happy.\" \n\nI was rocketed back to the night she had left me. The sense of loss was overwhelming. I began to cry; huge heartbroken sobs. I just let the boat drift. If I wandered into a shipping lane, then so be it. I would have the joy of being with Evie sooner-than-later. I crawled down to my bunk and cried myself to sleep. \n\nThe tropical dawn shining through the deck prisms woke me. The ever-present sense of misery was gone. For the first time in a decade, I had hope and a sense of future. It was a true miracle.\n\nAll the way back to Charlotte Amalie I thought about the mysterious light. The Navy still has a training presence around Vieques. And when you are at sea you can see for miles, especially if it's as calm as it was last night. Hence, I had probably just stumbled onto a night anti-submarine exercise. Or, they might have been testig a blue laser. That was the rational explanation, but as I said, I'm not logical; especially when it comes to omens, so I had another interpretation. \n\nI was looking for guidance. As always, Evie provided it. I had asked for an answer and she had released me. Now, I was ready to fully commit to a relationship with Kate. \n\nLiving in close quarters on a boat, even if it's a luxury yacht, will tell you all you need to know about your fundamental compatibility. So, I planned to bring Kate on-board as a full-time first mate, and we could rebuild our childhood love. \n\nI had arranged to meet her at the Gran Palazzo Club, which is on the Ritz property, so I cruised around to Great Bay. It took me almost five hours. I dropped anchor and motored in. I beached the launch and walked up to the veranda. \n\nOf course, Kate was late. I had a romantic memory. She couldn't decide what to wear! It was like old times. \n\nShe finally appeared on the veranda looking gorgeous. I had always been struck by her beauty, even when we were little kids. My appreciation was clearly aesthetic back then. But, anyone could see that Kate had perfectly proportioned features on her snotty-nosed little face.\n\nThen she grew that outrageous body, and all the attention shifted south of her cute little pointed chin. Guys also mature. But, their maturation is nowhere near as striking as the girl who goes away for a summer and comes back the next year totally stacked. I vividly recalled the difficulty Kate had adjusting to her new appendages. And of course, they practically set off riots among the boys. \n\nEvie had a beautiful athletic body, but it was her incredible face and larger-than-life personality that made her the force of nature that she was. Kate's sex appeal came from her sheer voluptuousness. She was four inches shorter than Evie, at five three, but she had huge heavy breasts and a long-waisted figure. \n\nOddly enough, with all that bounty, Kate's legs were her best feature. Proportionally, her thighs were a little longer than average and it gave her that leggy appearance that all fashion models covet. She was never a dancer. Still. her legs were muscled like one of those tiny gymnasts. \n\nThe combination of huge tits and fantastic legs in a tasteful Herve Leger sleeveless dress had every man on the Terrace leering. She sat down opposite me, as fresh and cheerful as ever. Then she looked at me. We have always been very attuned to each other. She saw the change. \n\nShe said nervously, \"Something happened last night after you left me?\" \n\nI said, \"I can't explain it, but Evie released me. I went for a sail to think about what we ought to do and I saw something out there that I took as a sign.\"\n\nKate was a doctor and a scientist. I saw on her face what she thought about omens, but instead she said, \"Annnnnnd, what did this sign tell you?\"\n\nI said, \"You probably don't remember the conversation we had the night we first made love.\"\n\nShe interrupted with, \"Of course I do!! Every word of it. That was when I made the decision to give myself to you. You saw how capable I was of enforcing that commitment. But my mind never changed. That's why I'm sitting here, hoping that we can get back some of what we had.\"\n\nI smiled at her fondly and said, \"That night, I told you that I wanted to die in your arms. I never forgot that; even when I was with Evie. Now that you are back in my life, it's as if things have come full circle.\"\n\nKate's smile was radiant. I gave her a loving look, and said, \"Nonetheless, I was conflicted. My tiny little heart only has room for one woman, and that was Evie's exclusive domain for twenty-three years. So, even though I knew I'd never see Evie again, I felt like it would be cheating if I tried to start something with you.\"\n\nKate went from radiant to miserable, so I hastily added, \"Last night I had an epiphany. It's one of those sixth-sense things that a person gets when their life is about to change. It doesn't matter what It was and you would probably think I was nuts if I told you, but I felt like Evie absolved me of my impossible commitment to her. Now I know I'm on the right path.\"",
        "Kate's face went back to radiant. I said, \"So, if it's acceptable to you. Can we try to get it ALL back?\" \n\nShe jumped to her feet and said, \"YES,\" and dragged me to MY feet for a tight embrace. I'm sure everybody on the terrace thought I'd just proposed. In some ways, I guess I had. Then she proceeded to lay a smoking hot instance of PDA on me that the Kate I used to know would have never even considered. I could see that I had a lot to learn about the grown-up version.\n\nI moved Kate lock-stock-and-barrel onto the boat. Surprisingly, she didn't travel with much gear, at least by female standards. I got the impression she was so rich that she didn't need to pack much. She had the money to just live off the land, so-to-speak. \n\nLate that afternoon, we docked at the Tamarind Reef Marina and Resort near Christiansted on St. Croix. St Croix is the party island in the USVI, and Christiansted has the upscale atmosphere that I've always sought-out when I'm in a happy mood. The boat was better appointed than any of the rooms we could rent, so we decided to just stay there. We ate ashore. \n\nThat first night we were sitting at the Galleon, which is part of the marina. We were drinking Mojitos while watching the tropical sky turn from azure, to purple, to a flaming red and gold. Kate was oriented so she could watch the sunset, while I was looking at the green shores of Buck Island. \n\nKate was stunning. I realize that I was seeing her through the eyes of a man in love. We were both fifty-nine years old, but little Kate had aged well. She had a golden tan and her thick chestnut hair was hanging loose like it did when she was a girl. The white streaks only added to her beauty. She was wearing a tasteful spaghetti strap sun-dress that looked like it had cost her a mere thousand bucks. And of course, there was that trim figure and those big heavy breasts.\n\nI kept reminding myself that the beautiful woman sitting opposite me was a highly reputable doctor, not my little childhood buddy. It was the same with me. My company was a major defense contractor. Forty years had passed. We had done our best. Now it was time to settle down to just being Jake and Kate again. \n\nThere was one very large pachyderm still left in the room. I had told Kate that I no longer felt constrained by Evie's memory, so there was no roadblock to recapturing the profound personal closeness that we once had. Still, the thing that nurtures spiritual intimacy is the physical bond between a man and a woman. That also had to be rebuilt for our union to be absolute. \n\nIf you are experienced in life you know that sex can lead to all kinds of irrational behaviors, needless moralizing, thoughtless judgements and irrational jealousies. Kate and I had a personal history that extended back a half century, and god-only-knows what had happened in the interim, so our sexual history might entail some nasty landmines. \n\nFirst, we had been lovers. Then she had left me for someone else; as much as she regretted it later. After that, she had spent years in the dating scene. She had acquired a lover who had become her husband, and that husband had a decided kink. Then she had lived another decade in the wild. \n\nMeanwhile, I had carried-on a twenty-three year deeply committed relationship with a woman who was arguably the hottest female on the planet. In that respect, Evie had taught me more about women and sex, than any normal man should ever be allowed to know. \n\nHence, Kate and I were indeed dragging a lot of baggage, and that was the last hurdle we had to overcome before we could begin to build a life together. It was nighttime when we got back to the boat. We stepped into the cabin. Buster looked up from where he was sleeping in the cockpit. \n\nI said, \"We're home, buddy.\" \n\nHe said, \"That's good, boss,\" and went back to sleep; ever vigilant. \n\nI sat on the big sectional. Kate came over and sat next to me. She curled those gorgeous muscular legs under her round little butt and I put my arm around her. She turned her face up to me, her lips only a few inches from mine. I gazed into her beloved face with its striking hazel eyes. Those eyes were filled with arousal. It was time.\n\nI lowered my lips to hers and her mouth opened like a flower. Her lips worked frantically on mine while our tongues slid back and forth. She moaned and threw herself sideways on the couch in a way that plastered her massive boobs against my chest. \n\nI slipped one hand down her body and began to massage her beautiful round ass. She moaned loudly, her hips began to buck and it felt like she had some kind of mini-orgasm. She broke the kiss, took my hand and led me to the cabin. \n\nI drew her to me and looked into those powerfully intelligent eyes. The feeling of her ripe totally round little body, the fullness of her breasts and the flat muscular flanks of her hips took my breath away. She was panting. I hugged her. Her huge tits bunched up between us, as I flattened them against my chest. She was looking very hungry. \n\nShe said with deep emotion, \"We are not the same people that we were forty years ago. There is no doubt that we have a lot to relearn about each other. But, I give myself to you without reservation, as I should have done in the beginning.\"\n\nThen she drew back, unzipped, stepped out of her dress and pulled me toward the king-sized bunk. When she got to it she turned, grabbed my hips, fell to her knees and dropped my pants. She did it like a seasoned professional. My little pal had clearly learned a few things over forty years.\n\nShe took my cock and surveyed it. She said, \"Ahhh, just like I remembered it.\" It was as if she was reminiscing about the Eiffel Tower, and at that point, the instrument she was holding resembled it.\n\nIn the short time before she left for school, we had never done anything more than fuck missionary style. Kate had obviously expanded her repertoire in the interim. Her lips showed me just how much a smart woman can learn over a lifetime. She quickly had me begging for mercy. She stopped the torture, gave me a satisfied smile and unstrapped her bra, while idly pumping me with her other hand. \n\nShe stood; I saw those remarkable boobs for the first time in four decades. They were still high, proud and as heavy as ever. Her big brown nipples were succulent and inviting. I led her toward the bed by taking the hand that was NOT holding my cock. \n\nThere was a short interlude while we got completely undressed. I had anticipated that this would be awkward and stressful, but it was as if we had never been apart; the body understands things a lot better than the mind. We eased back on the bed, me between her widely spread legs. Her pheromones were blowing my senses away. \n\nKate had learned a lot. She was as graceful and receptive as Evie. Her eyes were insanely eager. Her hips were already slowly humping at me, and she was quietly moaning. I saw her hip structure, round and womanly to the maximum, and yet incredibly powerful. The heat and lubrication indicated that she was fully aroused. \n\nI pushed into her and she gave a loud sustained groan. That was the last rational thought we both had. She began to moan loudly, legs raised and spread wide, with her arms stretched out directly over her head and her hands frantically gripping the brass bars of the headboard. \n\nI began to fuck her with long purposeful strokes and she was crying out and bucking frantically. Then she just yelled, and I do mean yelled, \"Oh Jesus. I'm coooooming sooooo, soooonn, Ahhhh! Fuck me!\" \n\nThen she muttered desperately, \"Don't stop! Fuck me hard!\" I was pumping like a madman and she kept bucking and yelling \"Ohhhhh Fuccckkk!\" \n\nThen her legs came down, and she began to kick the bed like she was swimming the backstroke. Her arms were still straight over her head and her fingers were clenched, knuckles white, on the bars of the headboard. I couldn't take my eyes off her perfect red finger nails. \n\nThen her hips shot straight up, stopped and she began to push herself hysterically against me trying to get every inch into her. She was screaming now, \"Fuck-me, Fuck-me, Fuck-me, Fuck-me, Fuck-me, Fuck-meeee!\" She went limp. It was almost like she passed out from the sheer force of her orgasm.\n\nI had not come yet, and although I wanted to be a considerate lover, I had reached the point where the only conceivable option was fucking her dead body., so I pounded her limp form for another few seconds. Her subconscious must have been wide awake. Because, she suddenly woke up screaming, \"OHHHH MYYYYY GODDDD!\" Her eyes shot wide open, rolled completely up in her head, and she went into quivers and convulsions of pleasure. At that point the frantic twitching of that hard, little body took me so far over the line I didn't expect to ever come back. \n\nI came so hard I thought my balls would fall off. We were both totally out of control. She was still writhing underneath me as I pumped into her and literally screaming her delight. That was probably the most intense fuck of my life. \n\nI collapsed on her, still slowly bucking form and her hips finally stopped moving, but they didn't halt until I had shrunk out of her. I rolled to my right, just to keep from smothering her. She lay there, not moving for an uncomfortably long time. Then she turned her head toward me. \n\nWe looked at each other with wonder. She said, \"If we ever have a bout more intense than that you will have officially killed me.\" \n\nI said, \"We'll go together,\" and I meant it. \n\nThat made us a complete couple. When we were together as kids, we had always had an easy-going, comfortable vibe. Of course, we were the odd ones back then, together because both of us were painfully shy and introverted. \n\nWe were in our golden years now, able to look back over a lifetime of accomplishment. It gave us perspective, and we now understood how important we were to each other. When we were young, burdened with the impetuousness and simple-minded assurance of youth, we just knew things would work out. That idea blew up when we had to face reality. \n\nWe lost each other then, and the ensuing forty-years of trench warfare were full of moments of utter joy and total crushing defeat, but that was behind us now. Shaw was right; youth is indeed wasted on the young, but wisdom is wasted on the old, unless you approach your life youthfully. \n\nWe had as many years left as we were granted. We had both made mistakes and we both paid the price that life demanded, but we were together now and we understood the true meaning of, \"Until death do you part.\" In the meantime, there was one official chore that I wanted to get out of the way.\n\nWe stayed in St. Croix for a couple of months, just living the lazy island life. We snorkeled the reefs around Buck Island. Like every other female on the Main Line, Kate's an expert rider. So, we frequently did the horseback tour; me holding onto their oldest and gentlest mare for dear life. Yet, the sight of Kate's magnificent buns in tight riding pants was worth the frequent near-death experiences I endured, trying to stay on top of the beast; I mean the horse, not Kate. We even went deep sea fishing, where I learned that I was definitely NOT Hemingway. We laid around on the beaches with my old pal Buster, and we got wholly reacquainted.\n\nThere was still some of the old Kate in there, quiet, cheerful and loving, but the overlay of forty years of medical practice had created a strong and confident woman with the deep humanity of the healer. This Kate was like the difference between a pop song and a piece of classical music. Same idea, but dignified, intensely profound, more elegant and substantial. \n\nWhatever trials she had faced in her life, she had overcome them and aged with grace and beauty. I loved her with the same intensity as my love for Evie.\n\nI didn't feel like I was dishonoring Evie's memory, by falling deeply in love with Kate. First and foremost, Evie was a pragmatist. Evie loved life. She knew that you only have one shot. She was gone; and she would have been royally pissed if I spent the rest of my life pointlessly mourning her. I was certain about that. And if I was wrong; we would sort it out at the Pearly Gates. That was how much I loved both the women in my life.\n\nWe had toured down the Leeward Chain all the way to Guadeloupe, and I was in the open ocean, on the rhumb line back to St. Croix. Kate was sitting with me, staring at the panoply of stars. It was late enough, and we were far enough from any land that the heavens were shining with almost sacramental grandeur.\n\nI had a package. I had picked it up in Pointe-\u00e0-Pitre. But, I had commissioned it in Amsterdam. I eased it out of the locker next to my seat. I said, \"Kate.\" She turned to look at me, wonder in her eyes. I said, \"I've loved you since the third grade. I lost you, but you came back to me. I always intended to die in your arms, but there is one serious problem.\"\n\nHer eyes blasted their alarm. Things had been so perfect. I said gently, \"The problem is that you aren't my wife. We should have done this forty-one years ago, when we were eighteen. But, it's never too late to rectify things. So, would you marry me?\" I produced the five-caret diamond ring, with a couple of big blue sapphires flanking it. \n\nOkay, I admit it; the sapphires were the color of Evie's eyes. They were my tribute to her. There was no disrespect to Kate; and yes, I'm a sentimental slob. But, I was the only person on the boat who knew what they meant, besides Buster, and of course Buster would never talk. \n\nKate looked at me genuinely wonderingly. It was like every part of her life from eight, to sixty flashed in front of her eyes, and then she began to cry. I said distressed, \"God! I'm so sorry! I thought this was what you wanted.\" \n\nShe looked at me, her eyes filled with sorrow and said, \"Of course I want it, you big goof. That's all I've EVER wanted. I'm crying over all those wasted years. Now, one thing I promise you is that we will make up for it.\" \n\nI slipped it on her finger and she spent the night trying to squeeze forty years of making up for it, into one eight-hour period. It was exhausting.\n\nWe married in the Lutheran Church, on Charlotte Amalie. Kate was a practicing Catholic, and at the time, I was advocating Druidism. But, we both thought it was cool to be married in a historical footnote. The Lutherans didn't object; especially after my generous donation to the building fund. We had a wedding feast back at the boat, just Kate, me and Buster. It had always been just her and me, and that was good enough for both of us. \n\nSo, as we transition into the winter of our lives, and the cold winds began to blow us toward our inevitable destiny. We both know that our last journey will be eased by the hope and comfort of our love for each other. And the skinny little girl and the big geeky guy will be together for eternity. "
    ],
    "authorname": "dtiverson",
    "tags": [
        "legends day story",
        "lost teenage love",
        "beautiful woman",
        "washington dc",
        "big tits"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/jacobs-ladder"
}