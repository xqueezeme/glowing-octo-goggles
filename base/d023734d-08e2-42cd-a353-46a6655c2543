{
    "title": "Knights of the Round Ch. 01",
    "pages": [
        "The chronological order of my stories is now listed in WifeWatchman's biography.\n\nFeedback and constructive criticism is very much appreciated, and I encourage feedback for ideas.\n\nThis story contains graphic scenes, language and actions that might be extremely offensive to some people. These scenes, words and actions are used only for the literary purposes of this story. The author does not condone murder, racial language, violence, rape or violence against women, and any depictions of any of these in this story should not be construed as acceptance of the above.\n\nPart 1 - Death And Disguise \n\n\"Cindy Ross, Captain, Badge Number 1-0-6-9.\" the platinum blonde Officer stated to Patrolman Culver at the edge of the crime scene. It was Sunday night, November 20th, 10:30pm.\n\n\"Thank you, Captain. How are you doing these days, ma'am?\" asked Culver.\n\n\"Not too bad.\" she said. \"Let me see what's going on in here, and we'll chit-chat later. Has Commander Troy arrived?\"\n\n\"If he has, ma'am,\" said Culver, \"he did not come through me.\" Cindy nodded and went on, a bit surprised.\n\nThe crime scene was near MLK Jr. Boulevard, the main east-west road of the Tenderloin District. Captain Ross saw a car on the side of the road, several bullets having struck it. A body was lying in the adjacent parking lot, a black man lying face-down, his clothing all black. The Crime Lab was setting up a portable tent, with which they'd cover the body after it was set up, giving them privacy from the prying eyes of the Public, and more importantly, the Media.\n\nSquatting next to him was a Uniformed Police Officer in a standard dark blue uniform and highwall Police Officer's hat. His back was to Cindy and she did not recognize him. \"Who is that?\" she asked of Sergeant Carswell, who was assigned to 2nd Precinct and ostensibly in charge of the scene. Carswell was black, had a good reputation with the people of the area as well as within the Police Force.\n\n\"I don't know, ma'am.\" said Carswell. \"He's not one of us at 2nd Precinct.\"\n\nCindy strode up until she was behind the man. \"What are you doing, Officer?\" she said, her voice commanding and not friendly.\n\n\"Examining the body, ma'am.\" said the Officer, his voice scratchy and whispery. He did not look up, nor over his shoulder at her.\n\n\"Why are you doing that? That's for Detectives to do, and the Crime Lab. Why don't you go man a barricade or something?\" Captain Ross asked, knowing that if he were a Detective of any level below Lieutenant, he'd be in plain clothes. She could see no rank on him at all.\n\n\"Yes ma'am, in a moment.\" the man said.\n\nGetting angry at the effrontery of the Officer, she said \"Who is your boss?\"\n\n\"Chief Moynahan, ma'am.\" he said flatly.\n\n\"No, dipshit, I mean who is your Sergeant?\" Cindy all but yelled, worn to anger.\n\n\"All of them, ma'am.\" said the man. Getting more angry, Cindy's left hand tightened on her green crowbar.\n\n\"Turn around and face me---- what the hell?\" she asked as she grabbed his shoulder. He had turned to face her, and she was looking into the gray eyes...\n\n...of the Iron Crowbar.\n\n\"Don!\" she gasped. \"Commander, what are you doing?\"\n\n\"As I said, Captain,\" I replied, \"I'm examining this body.\" My rank and the 'TCPD' on my collars were subdued, making them uneasy to see, and I was not wearing my MOV, DSC and Purple Order rectangles over my right pocket. I looked just like an entry-level Patrol Officer to the uninitiated.\n\n\"Uhhh... aaahh... I mean... geez...\" she stammered, trying to get her wits about her. \"You know what I mean, Commander.\"\n\n\"Yes, I know. I have reason to not want to be noticed as myself, Captain.\" I said. I stood up and said \"I guess I'll go man that barricade as you ordered.\" The Crime Lab people were coming with the tent, so Cindy and I moved out of their way.\n\nJust then, there was a commotion. Patrolman Culver was having words with someone, a black woman in a suit. \"Better go check on that, Captain.\" I said. Cindy hurried over to Culver.\n\n\"Ma'am,\" said Culver, \"this woman is demanding entry, saying she's an officer with the State Department of Justice, but she won't show an I.D.\"\n\n\"Then you don't come in, lady.\" said Cindy. \"And if you try, you'll be arrested, or possibly shot.\"\n\n\"Are you kidding?\" said the woman.\n\n\"Not about you being arrested.\" said Cindy. \"Now it's State Law that you have to follow my order to show me your I.D. Show me your I.D. Now.\"\n\nThe woman pulled out her State badge and I.D.\n\n\"Tasheeka Jones.\" Cindy said. She pulled out her Police iPhone and read the RFID chip inside the badge. \"Whaddya know, she's legit.\" Cindy read the badge number to Culver, who wrote it down, and Cindy returned Jones's ID to her.\n\n\"Why are you here, Agent Jones?\" Cindy asked as they came towards the body. \"And why did you give my officer back there so much crap?\"\n\n\"I'm here to observe the TCPD's procedures at crime scenes.\" Jones replied. \"I was testing your officer and your perimeter setup.\"\n\n\"Who is your boss, Harold Bennett?\" Cindy queried.\n\n\"Yes.\" said Jones. \"He is concerned that all local Departments are not following proper protocols as directed by the State.\"\n\n\"We have a murder here, and you're worried about fucking process...\" Cindy said sardonically.\n\n\"Do you have a problem with that, Captain?\" the woman asked confrontationally. Cindy stopped and squared up to her.\n\n\"Yes I do.\" Cindy said. \"We follow procedures, we have no problems in our Court cases, and that's with defense lawyers rabidly trying to find any hole against us. Your presence here is an interference and an irritation. Stay out of our fucking way.\"\n\n\"Who is your boss, Captain Ross?\" the woman asked, and in a tone conveying a threat.\n\n\"Commander Donald Troy.\" Cindy said with great alacrity, and no small measure of pride. \"TCPD badge number 1-6-4-0. By all means, run to him if you have a problem with me. Or run to the Chief.\"\n\n\"Where is Commander Troy now?\" asked the woman.\n\n\"As a matter of TCPD policy, because of threats to Commander Troy's life, we do not give out his whereabouts to people we don't know.\" Cindy said, then added with emphasis: \"I don't know you.\"\n\n\"You will soon.\" Agent Jones said. It was then she noticed the tall Uniformed Officer standing near them, standing sideways so that only his left side was visible. \"Who are you, and what are you doing standing there listening to us?\" Jones snarled at the offender.\n\n\"Exactly that.\" said the tall man. \"Listening to you.\"\n\n\"Why you little prick!\" Agent Jones said. \"Captain, why is this Patrol Officer standing here minding our business? Why isn't he working?\"\n\n\"For someone observing our procedures, Captain,\" I said to Cindy, \"Agent Jones is not very observant, is she?\" Cindy was now having trouble stifling a laugh.\n\n\"What is your badge number?\" Jones yelled. \"I am going to...\" It was then she noticed the nametag on my right pocket, which unsurprisingly said 'Troy'; and my badge, which said 'Commander' and '1640'. And then she noticed the circular oak leaf cluster on my right collar.\n\n\"That's right.\" I said as she looked at me in shock. \"I am Commander Donald Troy, Agent Jones. I don't know what kind of fucking games you are playing, but you've harassed my officer, you've harassed my Captain, and you are now in a world of shit with me. You are lucky that I don't arrest you and have you spend the night in my jails until Harold Bennett comes and gets you... or your real employers, the FBI, come get you.\"\n\n\"What?!\" Cindy gasped. \"So she gave me a false ID?\" Agent Jones was dumbfounded with shock... and was not denying the accusation of her connection to the FBI.\n\n\"No.\" I said. \"She's with the SDOJ, too. Playing fucking games with us. But just because she's not observant doesn't mean that I have to stoop to the same levels of stupidity. I am not going to allow the SDOJ nor the FBI to think that this is an Agency of the Weak Minded. Now keep well back, Agent Jones... my Captain is very fast with a crowbar, and it's hard for me to stop her in time, sometimes. Come along, Captain.\"\n\nWith that, we moved to the tent and went in where the body was. The Crime Lab people recognized me, and were understandably surprised at my attire.\n\n\"Never mind how I'm dressed, people.\" I said. \"Whaddya got?\"\n\n\"Black male, aged 25,\" said J.R. Barnes, \"died of multiple gunshot wounds to the chest and back. Looks like nine millimeter holes, but we'll have to get Martha the M.E. to confirm that. Man has no I.D. on him, has a holster for a gun, a revolver like a .38 Special, but the holster is empty. I put out word to look for a gun, but so far no one has found one.\"\n\n\"I anticipate a visit from T-Square shortly, Captain Ross.\" I said. \"I believe that this is Holden, one of T-Square's 'Regiment'. J.R., any drugs on him, any money, anything at all?\"\n\n\"No sir.\" said J.R. \"No wallet, no wads of money. Pockets are empty, we've already taken lint samples and brushed down his clothes for fibers. There are some abrasions on his wrists, as if he's been handcuffed in the recent past, but no handcuffs now, obviously.\"\n\n\"Sir,\" said Sergeant Carswell, who had just come in, \"I've called Headquarters, and your Mouseketeers are getting all video footage possible, and asking for the warrants as we go along.\"\n\n\"Good.\" I said. \"And Sergeant Carswell, you've done good work at this scene. I like the way you've handled it from start to finish. We have a State DOJ protocol examiner here, and I suspect she will be forced to admit you are doing it right.\"\n\n\"Thank you, Commander.\" said Carswell, pleased with my praise in front of others. I asked him to check in with Captain Ross, and he left the tent area.\n\n\"Protocol examiner, Commander?\" J.R. asked, and I understood the underlying joke.\n\n\"Well,\" I said, \"I didn't want to offend Miss Cho here and call that person what she deserves to be called.\" Everyone laughed, including Christina.\n\n\"Sir,\" Christina said, \"I've heard plenty of bad things. I work with these guys, remember?\" That got some banter going.\n\n\"Sir,\" asked Patrolman McGhillie, \"with all due respect, why are you dressed like it's Orange Order Day?\"\n\n\"So that... protocol examiners... won't be able to find me.\" I replied with a grin, to more chuckles.\n\n* * * * * * * * * * * * * * * *\n\n\"He's here.\" Cindy said. Sure enough, two limousines had pulled up to just outside our perimeter. A door was opened by a chauffeur and the legendary rapper T-Square got out. As he came up to Patrolman Culver, I told Cindy to escort him to the tent.\n\n\"You're letting him inside the perimeter?\" Agent Jones gasped as Cindy met up with T-Square.\n\n\"Yes.\" I said. \"And for good reason. Now why don't you shut the fuck up and let me do my job. Another word out of you, Ms. Jones, and you will go to jail. I am not kidding, I am not fucking around with you anymore. Keep your God-damned mouth shut.\" I walked away from her and up to Cindy and T-Square.\n\n\"Damn, I.C.,\" said T-Square, \"what's up with the... er, uniform?\"\n\n\"I do look good, don't I, T-Square?\" I said. \"Come on in, and you can bring the lawyer, but your Regiment has to stay here.\"\n\n\"They're my bodyguards, I.C., you know that.\" said T-Square.\n\n\"Captain Ross and I will be your bodyguards inside the perimeter, T-Square.\" I said. \"And you know we're good. I've got a reason for asking them to stay here.\" T-Square relented and signaled his Regiment to stay put. I took him to the tent, and inside.\n\n\"Recognize him?\" I asked.\n\n\"Awwww, shit.\" said T-Square, kneeling down and looking at the man's face. \"Yeah, he's one of my Regiment.\"\n\n\"Holden?\" I asked. T-Square looked up at me from behind his eyeshades, then nodded.\n\n\"Any idea why I'm investigating his murder, here?\" I asked.\n\n\"No.\" said T-Square. \"And that's for real. Holden never was a problem, did his job well and quietly as a security man.\"\n\n\"I'll need a statement from you.\" I said. \"Your legal eagle is here, and can listen in. But if you want me to solve this and let you know who did it... I'll need whatever help you can give me.\"\n\nAfter giving his statement, T-Square went back out and broke the news to his Regiment. I heard their groans of dismay, then came up to them.\n\n\"Gentlemen,\" I said, \"I'm sorry for the loss of your colleague. I'm going to have to ask all of you to talk to my Officers about him. Anything you can give us that will help me wax the killer or killers will be greatly appreciated.\"\n\n\"Do what the I.C. says, guys.\" said T-Square. \"And do it for Holden.\" I cannot complain about the cooperation I got from them...\n\nPart 2 - Seeing Orange \n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" shouted the lovely redheaded reporterette at 7:00am, Monday, November 21st, from in front of City Hall. \"Channel Two News has learned that the lawsuit filed by Thomas P. Cook to have Loran T. Michaels seated immediately on the Town & County Council has been acted upon by Superior Court Judge Patrick R. Folsom!\"\n\n\"Judge Folsom wrote that the Council did a very poor job in wording their resolution for the election to fill the seat vacated by the death of Pastor Raymond Westboro last June 22d. Judge Folsom ruled that the election of Loran T. Michaels is for a two-year term beginning January 1st, that the People believed that is what they were voting for on November 8th, and the Council's resolution did state that. However, that also means that Mr. Michaels is not filling in the unexpired term of Pastor Westboro.\n\n\"Judge Folsom also ruled that Mr. Michaels may sit in on all Council meetings and deliberations, but may not vote until January. Asked for comment, Mr. Thomas P. Cook said that he would appeal the ruling to Judge Leahy of the Appellate Court. Experts say Leahy might very well overturn the ruling.\"\n\nBettina continued: \"In other news, praise is pouring in from all over the region for Commander Donald Troy, who, while working with the FBI as a consultant, solved the murder of Tiffany Barclay, a student at the University. Ms. Barclay was murdered by her father, Attorney General John Barclay of the State east of us. Governor Val Jared stated that Commander Troy's brilliance is just what he needs to clean out the corruption of the SBI in our State.\"\n\n\"And speaking of the SBI,\" Bettina said, getting the attention of all of us in MCD, \"Director Jack Lewis formally stepped down as the head of the SBI over the weekend. He has issued no statement on the matter nor held a public press conference since being defeated for the Governorship on November 8th. Governor Jared has also not yet commented on the SBI situation, but said he would do so soon. And now for Sports with Nick Eastwood! Nick!\"\n\n\"Thank you Bettina!\" said the handsome blonde Nick Eastwood. \"The Bulldogs face off against their arch-rival, the State Tech Engineers, this Saturday, right here at University Memorial Stadium. The Bulldogs have only the blemish against the Wildcats on their record, and are expected to soundly defeat the hated Engineers from across the State. Adding to the drama are reports that the Conference intends to strongly sanction State Tech for repeated examples of dirty play and intentional attempts to cause injuries. Tech denies this, and states they will not accept sanctions of any kind!\"\n\n\"Nick,\" Bettina said, \"what can State Tech do? Sue the Conference?\"\n\n\"That is one possibility, Bettina.\" said Eastwood. \"However, most experts say that if Tech does that, their efforts will likely fail and also result in their expulsion from the Conference. Their only other option is to leave the Conference. We have unconfirmed reports that State Tech is in talks with the All-Regional Conference, a lower-level conference to be sure.\"\n\n\"Meanwhile, Bettina,\" continued Eastwood, \"the Wildcats play their rival, the State U. Purple Hawks on Saturday, and the Bulldogs need a State U. win to advance to the Conference title game. If the Wildcats win, they are in, and will get a chance to avenge their only loss, which was to the Tigers, who clinched the other division already.\"\n\n\"Thank you, Nick!\" said Bettina. \"And in other news, the Town and indeed the entire Region has responded with excitement at the announcement by Dr. P. Harvey Eckhart, founder and leader of the self-help company 'The Vision', that the introductory \"Envision Your Life\" seminar event will be held here for the first time! The dates are Wednesday through Friday, December 28-30th, and the event will be held at the new Civic Center! 'The Vision' announced that all 1500 available seats have been sold, and they are taking names for a waiting list.\"\n\n\"Also,\" Bettina went on, \"Sheriff Daniel Allgood has issued a statement that he will name Assistant Public Health Officer Beth Paige to the position of Public Health Officer, replacing Loran Michaels, who resigned to take over the Council seat he won on November 8th. Sheriff Allgood also named Police Captain Susan Weston to the Assistant Public Health Officer position, which is a cross-department promotion for Ms. Weston...\"\n\n\"And finally,\" Bettina said, to the gratitude of my tired ears, \"Police have no leads on the murder of a man in the Tenderloin District last night. The man has not been identified pending notification of next of kin, but sources tell Channel Two News that he may have been employed by the T-Square Music Empire...\"\n\n* * * * * * * * * * * * * * * *\n\n\"Okay,\" I said to Cindy and Teresa as we sat in my office for the 'Angels' meeting, \"the Orange Order announcement is today. I'll be putting out the email, and my assistant Helena will be collecting the ballots here, and the Precinct Captains' assistants will collect them at the Precincts.\"\n\n\"Who do you think is going to be elected?\" asked Cindy.\n\n\"I really have no idea.\" I said. \"The Chief won't be eligible until next year. We'll see what the rank-and-file have to say about it. Okay, what else do we have?\"\n\n\"The Holden murder.\" said Cindy. \"I've put Theo Washington on it as the primary Detective. Sergeant Carswell asked if Patrolman Jermaine Davis could work with Theo; they want to monitor Davis for the Detective track.\"\n\n\"Sure, why not?\" I said. \"But Cindy, tell Theo very privately that Davis had worked with McCombs and Hendricks in the past, and there were times I didn't know if Davis was clean or dirty. Tell Theo to be monitoring that, and to watch his backside.\"\n\n\"Wilco.\" said Cindy.\n\n\"Okay, Captain Croyle,\" I said, \"what's going on in Operations?\"\n\n\"Right now I'm concentrating on reducing three Precincts to two by January 1st.\" Teresa replied. \"Then I'm going to work on security for The Vision's seminar. After that, we'll be beefing up the SWAT teams. The Assembly approved a bigger budget for them, and more armor for all our Officers.\"\n\n\"Chief Moynahan worked like a dog to squeeze that out of the Assembly, as did Sheriff's Chief of Staff Oswald... and with some of the Council fighting them every step of the way.\" I said. \"We owe our guys a lunch. Okay, what about Vice?\"\n\n\"Lt. Masters is beginning to get some leads on some organized activity.\" said Cindy. \"We've got an undercover Sr. Patrolman, his name is J.J. Perry, a.k.a. 'Ice Cube', who has made some contacts in the Tenderloin District. This murder might cause issues, so I'll check up on that.\"\n\n\"Think that same organized activity might be related to this murder?\" I asked.\n\n\"I don't know. I was going to ask you what you thought of that murder.\" said Cindy.\n\n\"What do you have on him, so far?\" I asked. I had Mary and Myron's report already, but wanted to see what Cindy had obtained.\n\n\"Holden was a security man in Midtown and then the City.\" said Cindy. \"I'm thinking you knew who he was because you knew him in Midtown as opposed to being in T-Square's Regiment.\" She peered at me.\n\n\"You're part right.\" I said. \"I didn't know him personally, but I knew who he was. He ordered some of my stuff by mail and I shipped it to him. Then he moved to the City and I never heard from him again, until I made a point to learn who composed T-Square's Regiment. And then his name did not come up again until last night.\"",
        "\"He was hired by T-Square a few years ago,\" said Cindy, \"to install security equipment at T-Square's studio in the City. Then T-Square hired him as a security man, then a full member of the 'Regiment'.\"\n\n\"What does it take to be a full member of the 'Regiment'?\" asked Teresa. \"Like being a 'made man' in the Mob?\"\n\n\"It's not as bad as that.\" I said. \"Mostly showing loyalty, coming to work on time, being good at the job, keeping calm with crowds and fans around, willing to take a bullet for T-Square or his lieutenants, such as T-Mac. Also, I've always equated it to the special bodyguard of a Japanese daimyo, or feudal lord... a protector that might hear important, private conversations and is expected to keep his ears closed and his mouth shut.\" Teresa nodded at the analogy.\n\n\"Anyway, no criminal record, no problems with finances, had a concealed carry permit.\" Cindy said. \"No reason pops out for him to be targeted. But that does lead me to ask another question, sir: why your 'Orange Order' uniform last night? What was the real reason?\"\n\nI smiled. \"To see if you were paying attention, Captain Ross... and I fooled you pretty well.\"\n\n\"For a second there, you did.\" Cindy said. \"And you're lucky you didn't get a crowbar on your back, the hard way. But what was it about?\"\n\n\"Well,\" I said, \"the FBI and Chief Moynahan have told me that they've developed credible evidence that my life is in danger. And after we solved the Barclay murder and John Barclay came over all dead, people he associated with are very unhappy with me, and Forest Gillis is leading the way in creating a stink. The danger extends to you too, Cindy, so continue to take precautions.\" Cindy nodded.\n\n\"So,\" I said, \"I showed up as a Uniformed Officer, didn't stand out too much, at least at first, and I never observed anything unusual in the few people that showed up to see what was going on. The only anomaly was that State DOJ bitch showing up and fucking with us.\"\n\n\"Geez.\" Cindy said. \"I was so close to beating the shit out of her.\"\n\n\"Have you heard any more from her?\" asked Teresa.\n\n\"Not yet.\" I said. \"But there's plenty of time for that.\"\n\n* * * * * * * * * * * * * * * *\n\n\"I can tell you this.\" said Chief Moynahan as we sat in his office at 9:30am. \"Harold Bennett said that he sent Tasheeka Jones, one of his State psychologists, to examine your procedures at the crime scene, because a Federal lawsuit was filed against the State.\"\n\n\"By whom?\" I asked. \"The US DOJ?\"\n\n\"No, a couple of lawyers.\" said the Chief. \"Their names are Ken Eidex and Jay Swenson. They represent a group called 'Citizens For Police Accountability', and the FBI thinks they're a front for a group of black activists. Eidex and Swenson themselves are white, but they're a front for black activists.\n\n\"So Bennett sends a psychologist...\" I mused.\n\n\"I've always wondered, Mr. Crowbar,\" said Moynahan, \"why you put Bennett in this Chief's chair. Part of me thought you thought he was stupid and you could control him. And part of me thinks you thought more of him than you should have. So which is it?\" \n\nI smiled. \"Both. Neither. My real reasons were that he wasn't corrupt, and that it wasn't your time to leave Midtown yet. Funny how the job opened up just as you needed to get out of Midtown, Chief.\"\n\n\"Heh heh heh heh.\" the Chief laughed. \"I'm glad you did think of me, though. It has been wonderful getting to watch you and your fellow Officers on this Police Force.\"\n\n\"Thank you, sir.\" I said. \"And back to the question... Bennett sent a psychologist for another reason... she's worked with the FBI before, if not currently, and she had ulterior motives for being there. Maybe to check up on me, or... ohhhhh.\"\n\n\"Yessss, Mr. Crowbar, I can see that it is not getting past you.\" Moynahan said.\n\nJust then, the Chief's phone buzzed. \"Chief,\" said my assistant Helena, \"I have several Officers here to see Commander Troy, including Chief Griswold, and they say it's urgent.\"\n\n\"Is there anything else, sir?\" I asked.\n\n\"No. Go put out that fire, and I'll put out these other ones.\" he said. I went back to my office.\n\n* * * * * * * * * * * * * * * *\n\nCorporal Ronnie Kirkpatrick, Chief Emeritus Griswold, and Commander Della Harlow were sitting in my office \"What's up, guys?\" I asked. \"To actually call me out of a meeting with the Chief? Must be big.\"\n\n\"Yes sir.\" said Kirkpatrick. \"It's about the Orange Order. Since the ballots went out, I've been inundated with questions about someone.\" Kirkpatrick said who it was, and asked about the rules.\n\n\"At first,\" I said, \"I was thinking 'that is crazy'... but as I think about it, it makes sense. I see no reason why not.\"\n\n\"Neither do I.\" said Griswold. \"Never had a case quite like it, though.\"\n\n\"I guess it'll be up to the Membership.\" I said. \"But my input is that it's good.\"\n\n\"I'll check with every member today.\" said Kirkpatrick. They all left, and later that afternoon Kirkpatrick would call me and say all the Members of the Orange Order were in concurrence. I then told Cindy and Teresa, and said that if they quietly made it clear to everyone about the decision, I'd have no problem with it... and neither did they.\n\nPart 3 - Regimental Colors \n\nAt 10:00am, the Mouseketeers came to my office: Detective David Krueger, Supervisor Myron Milton, and Master Technician Mary Mahoney Milton sat in my hot chairs as I tried to get comfortable in my 'command chair': I was still wearing 'the girdle' to protect my back, as well as protect my abdomen with its bulletproof properties.\n\n\"Virtually nothing new on Holden.\" said Mary, opening their report. \"No recent police reports on him, nothing about him as a C.I. or anything like that, not even so much as a traffic ticket.\"\n\n\"His car, the one that was shot up at the scene,\" said Myron, \"was purchased four years ago from the Cadillac Dealership near Jefferson Avenue and University Parkway. I might add that all of T-Square's Regiment have bought cars from there, but they all bought their cars with their own money in their own names.\"\n\n\"Doesn't mean T-Square doesn't give them some cash to cover the purchases.\" I said. \"But the cars were standard, nothing souped up, or with extra drug compartments and such stuff?\"\n\n\"No sir.\" said Myron. \"Standard latest-year models. And always black, never silver or blue or anything else.\"\n\n\"Cellphone?\" I asked.\n\n\"Pinging from his home.\" said Myron. \"He had a phone system in his car, but I'm still surprised he left his cellphone at home.\"\n\n\"What about his weaponry?\" I asked.\n\nDavid Krueger said \"T-Square created a shell security company, and all of his Regiment are listed as employees. They're authorized to carry firearms as his security, and they all carry 9mmP, .40 S&W, or 357 SIG handguns as their official weapons. Holden owned a .357 Magnum revolver as a backup piece, and that may have been what was in the holster that was found on his body.\"\n\n\"Didn't find a semi-auto pistol at the scene, either?\" I asked. Kruger confirmed that none was found.\n\n\"Sir,\" said Mary, \"T-Square said in his statement that Holden was due to come in to T-Square's offices at midnight, to be bodyguard security.\"\n\n\"Where are T-Square's offices?\" I asked.\n\nMary replied \"Right behind the 'Rhythms & Rap' Club... that's his new name for his old club, so the offices are the same place they've always been, just renovated to look like he's the millionaire rapper that he is. Anyway, T-Square says Holden always arrived early, usually 15-30 minutes early.\"\n\n\"So he was gunned down about, what, 10:00pm last night?\" I asked, and they all nodded. \"So he was really early... and that area was further west than T-Square's club... a lot further west. Where did Holden live?\"\n\n\"His address was an apartment on the West side... not far from those apartments you raided and where Easley went into that fire.\" said Krueger. \"And the Regiment's members live all over the lower to middle parts of Town. Good blanket coverage of the area, geographically.\"\n\n\"Hmmm...\" I said. \"So, David, what were his finances like?\"\n\n\"Rock solid.\" said Krueger. \"He was paying for the car and his apartment and bills, just like the rest of us. T-Square gives the Regiment a company credit card, but Holden had only bought some suits on it, and had not run up any sort of debt. Considering he gets to eat free at T-Square's clubs, and he's on 12-hour shifts if not all-day shifts while T-Square travels, his expenses were light.\"\n\n\"So no motive that we know of.\" I said. \"You did get a warrant to search his apartment?\"\n\n\"Theo Washington did, first thing this morning.\" Mary said. \"I think he's already back from doing that.\"\n\n\"Street camera coverage?\" I asked.\n\n\"Not much.\" said Myron. \"The parking lot is covered by cameras from the strip mall, but that corner is on the periphery of their view. The street coming up to MLK Jr. Drive is a small side street, Leon Avenue, that connects to Adams Street, which goes towards the Southwestern Ghetto going west, and towards Hotel Row and Junction Station going southeast in the other direction.\"\n\n\"Hotel Row...\" I mused, seeing the map of the Town in my head. \"Did y'all try to get camera footage along Leon and Adams Streets, and Hotel Row?\"\n\n\"Yes sir, going back about four hours, which was the best we could do.\" said Myron. \"His car didn't show up. The tapes look strange, too, as if they're a recording from an earlier time. And before you ask, his GPS showed nothing. Either it wasn't recording, or it was wiped.\"\n\nThat caused me to sit up straight and take notice. \"Nothing on his GPS?\" I asked, astonished. I turned and fired off an email to the Crime Lab, telling them to check on that GPS system, see if it was malfunctioning or had been tampered with, and let me know their findings pronto!\n\n\"All right.\" I said. \"That might be our first 'strangeness'.\"\n\n\"How so, sir?\" asked David Krueger.\n\n\"From what I understand of the eyewitness reports, the small amount of camera footage we have, and whatever else... this thing happened very, very quickly. A car came up behind Holden, possibly a running gun battle up Leon Avenue, he exits his car, they gun him down, and they leave. Therefore... they didn't have time to wipe his GPS... unless...\" Yep, I was gone. Reverie.\n\n\"Sir,\" said Mary after a moment, breaking me out of my train of thought, \"I know you don't like to theorize without data, but is there any direction you can think of to point us?\"\n\n\"You're right, it's bad to theorize without data.\" I said. \"But the absence of data, after one has sought to acquire it, is in itself a data point. And this case is startling in its lack of data. My only suggestion to you is to see if anything comes up on T-Square himself. Either T-Square had him bumped off, or someone else did it as a message to T-Square. Check with the highly regarded SBI's vaunted computers, and see if there's anything there.\" By that, I meant to hack the SBI's computers, which were anything but vaunted, and anything but secure.\n\n* * * * * * * * * * * * * * * *\n\n\"Autopsy report, sir.\" said J.R. Barnes at 10:25am, as he came into the office.\n\n\"You didn't have to hand-deliver it.\" I said.\n\n\"I sent an email of it, sir,\" said Barnes, \"but I wanted to cover some points. Mr. Holden was shot multiple times in the front and back by high-powered weapons, mostly nine millimeter caliber but a couple of 40 S&W---\"\n\n\"And the .40 cal bullets were from his own gun, whose ballistics are on record because he's a security man.\" I said, interrupting. J.R. was suitably shocked.\n\n\"How... how did you know that, sir?\" he asked, his voice full of wonder.\n\nI smiled slightly as I said \"If you hand-deliver an autopsy report, then there must be something unusual in it, and I simply figured out what it was and told you before you could tell me. Also, it fits the data I have, so far. Obviously his killers took his security gun, which we Officers would call 'service weapons', and shot him with it. Very interesting. What was the time of death, by the way?\"\n\nJ.R. again looked at me. \"Not what we expected, sir. Martha is running more tests to make sure. The shootout was at 10:00pm or so. But Martha says the preliminary evidence suggests he died much earlier, as early as an hour before that!\"\n\nI nodded. \"I'll tell Martha she may not be wrong on that. This is starting to get interesting. Anything else?\"\n\n\"There was blood in the car, which types to his. We're running further tests. Ballistics on the bullets recovered from the car are the same weapons that shot him.\" said J.R. The GPS gave us nothing, but per your email we're going back and checking on that some more. If we can, we'll use forensic recovery methods to get data from the device.\"\n\n\"Good.\" I said. \"How was Holden's health?\"\n\n\"Martha says he was relatively healthy, though showing the early stages of heart disease.\" J.R. replied. \"Showed no evidence of heavy drinking, and he was pretty fit, athletics-wise. He had not eaten in at least 18 hours, though.\"\n\n\"He probably would eat at the club before going on his shift.\" I said. \"Okay, see what else you guys can find, and J.R... tell Martha this: expect the unexpected on this case.\"\n\n\"After what you just did, sir... no doubt about that.\" J.R. said. I dismissed him. Yep, cannot let people think this is an Agency of the Weak-Minded...\n\n* * * * * * * * * * * * * * * *\n\nAt 10:45am I went into MCD. Theo Washington, Teddy Parker, and Joanne Warner were setting up the whiteboards for the Holden case.\n\n\"Sir, do you know Patrolman Jermaine Davis?\" Theo said, introducing the Patrolman. Davis was black, medium height and build, and his uniform looked pressed and sharp.\n\n\"Yes, I do. Hello, Patrolman Davis.\" I said, shaking his hand.\n\n\"Hello, Commander. Thank you for this opportunity to work with the Detectives.\" said Davis. Chief Griswold would approve of the sucking up, I thought to myself.\n\n\"Let's see if you might be a Detective yourself, one of these days.\" I said. \"Okay guys, carry on. I didn't mean to interrupt you.\" I sat back, drinking my mug of coffee as the Detectives talked.\n\nFirst, a DMV picture of Holden was put up at the upper left corner. \"Holden's never had his picture taken by a police department, while he was alive, anyway.\" Theo said as Joanne taped the picture up. \"He's never been arrested, never had a problem with the law. He had a concealed carry permit as well as a State permit to buy and sell security equipment. He was employed by T-Square's Regiment, which is an incorporated company, and he had license through that to carry a .40 S&W handgun. Personally owned a .357 magnum revolver, and he was the owner of the Cadillac that got shot up along with him at the crime scene.\"\n\nAs they talked, I went to one of the empty desks and logged in as a SuperAdmin. I set up Jermaine Davis's already-existing account so that he could look at data along with the other Detectives, then sent an email copy of the autopsy report and Crime Lab findings to his email.\n\nJoanne was putting up T-Square's photo next to Holden's. She then said: \"T-Square, internationally known rapper. Holden worked for T-Square. T-Square was at his club, 'Rhythms & Rap' last night, per several C.I. sources, and was there meeting people pretty much all evening. No known problems with Holden, who was by all accounts a very quiet and good employee. So no motive right now for T-Square being behind Holden's death.\"\n\n\"Why would T-Square kill one of his employees?\" asked Davis. Joanne and Theo looked back at me.\n\n\"Well,\" I said, \"we had a small problem of one of T-Square's Regiment being found headless in barrel of acid.\" (Author's note: Pink Lemonade, Ch. 04.) \"That crime remains unsolved, but we had some word that the guy may have offended T-Square in some way. So it's something we have to consider, that Holden ran afoul of T-Square, and paid a wicked price.\"\n\n\"Having said that, Patrolman Davis,\" I continued, \"the m.o. of this crime doesn't fit what I'd expect T-Square to do if he were involved. Holden would more likely have gone into T-Square's club and never would be seen again. Shootouts on the street are bad for T-Square's business.\"\n\n\"Not to mention bringing the Iron Crowbar into T-Square's territory!\" said a voice behind me. Captain Cindy Ross was coming in from the back door, the one to the back hall near the Chief's suite.\n\n\"Ah, Captain, glad you could join us.\" I said.\n\n\"Sorry, sir.\" Cindy said, \"The Chief called me into his office.\"\n\n\"No problem.\" I said. \"Okay, everyone, before going further, go to your desks and read the autopsy reports and CSI reports that have been emailed to you. Davis, I set this computer up for you, so sit down here.\"\n\n\"Thank you, sir!\" said Davis, who looked like he'd just gotten a Christmas present. As they did, I went to the whiteboards. Taking a dry-erase pen, I began writing on the far-right side of the boards...\n\n* * * * * * * * * * * * * * * *\n\nOnce everyone had read the reports, I asked Theo to tell us about his visit to the Holden apartment.\n\n\"There was nothing there, sir.\" said Theo. \"We took Sergeant Stonewall and Sergeant Seymour, our drug and explosives dogs, and they came up with nothing but an ibuprofen bottle. We found Holden's personal cellphone on his desk and we confiscated it for analysis, but nothing else. Everything was perfectly clean and in place; laundry all done and in the drawers, bills filed, no papers of interest. No magazines, nothing to suggest a personal life.\n\n\"Interesting.\" I said. \"What do you make of that, Captain Ross?\"\n\n\"It's how Westboro left the homes of his victims.\" said Cindy. \"But Westboro is no longer with us, so it's a copycat there.\"\n\n\"Yes, and that may be important.\" I said. \"Anyone else?\"\n\nTeddy Parker said \"Commander, do you think Holden might have overheard something discussed between T-Square and others, and was eliminated because of it?\"\n\n\"If three or four other Regiment members come over all dead as well, then I'd consider that. T-Square always has three to four Regiment people present.\" I said. Parker nodded at the explanation.\n\nJoanne said \"That time of death thing is bothering me, sir.\"\n\nTheo said \"I'm waiting for the further testing on that, just to make sure.\"\n\nI said \"I'm going to go out on a limb and suggest that Martha's time of death is accurate. When I examined the body at the scene, I was a bit confused that the body was less than warm, and rigor was just beginning to set in. In addition, a lot of blood had already been lost, and was not running down the parking lot pavement. So, what are your conclusions? Davis?\"\n\n\"Uhhh, sir, I'd have to say if the time of death is right, then the man died earlier than we thought. And that means he had to have died before getting to the scene of that gun battle.\" Davis said.\n\n\"You mean, he wasn't killed during the gunfight?\" Theo asked. Davis had started well, but now he looked a little lost, so I jumped in.\n\n\"What gunfight?\" I asked. \"We know perps shot up the car, but no one saw Holden fire back, no one saw him fire at all, he had no gun on him at all at the scene. Looks like a shoot-ing, not a shoot-out.\"\n\nI went on: \"You did a good job there, Davis. The time of death from the M.E. is a data point, and while not exact, I take it as data. We have to formulate our theories based on the data, not try to force the data fit our theories. So Holden died half an hour to an hour before the fireworks began, more likely the latter. So, what do you reason from all that?\"\n\nI had some confused Detectives on my hands. But I saw Joanne thinking about it, and starting to get it.\n\n\"Sir,\" she said, \"that would have to mean---\"\n\nJust then, Tasheeka Jones walked into MCD, accompanied by the Duty Desk Sergeant.\n\n\"Commander, Ms. Jones is from the State DOJ, and she wants to talk to you.\"\n\n\"I know who she is, Sergeant.\" I said, rising to my feet and turning on my 'thunder' voice. \"What I want to know is why you broke the rules and brought her back here, instead of contacting me from the Duty Desk while she waited in the waiting room.\"",
        "\"Sir, she---\" the Sergeant started.\n\n\"He brought me in here because I told him to.\" said Agent Jones. \"Do you have a problem with that, Commander?\"\n\n\"Yes I do.\" I said. \"You are now an unauthorized intruder in a Restricted Area. Captain Ross, escort this intruder to the front lobby. If she resists, arrest her and put her through booking.\"\n\n\"Hold on, Commander,\" said a voice behind me, \"I'll handle this.\" It was Chief Moynahan, who had just come in by the back door. \"Ms. Jones, you are very close to wearing out your wellll-come. Come with me to my office.\"\n\nWhen neither moved, Moynahan did a rare thing: he raised his voice in anger. He said \"Don't just stand there like a bump on a log, Sergeant.! Escort Agent Jones to my office... NOW!\"\n\n\"And Sergeant,\" I said, \"you are not to leave Headquarters today without my personal permission. If you do, I'll have you arrested and brought back.\" The Sergeant blanched, realizing that I was playing for keeps as far as his continued employment was concerned.\n\nAfter they were gone, the Detectives were looking at me as if I was a bomb about to explode... and they were right. My face was a darker red than my hair.\n\n\"Okay, guys,\" I said, feeling the heat on my cheeks, \"we'll pick this up later. Y'all keep working on this. Theo, push the Crime Lab to get the situation about the car's GPS system worked out and a report in your email ASAP.\" With that, I turned and left MCD by the side door.\n\n\"Damn!\" Joanne Warner spat as she sat back down at her desk. \"Just when we were making progress, too.\"\n\n\"I take it that wasn't normal?\" asked Jermaine Davis.\n\nTheo barked a short laugh. \"On the one hand, no it's not... and we should thank God we're not that Duty Desk Sergeant. On the other hand, Davis... there is no such thing as 'normal' where the Iron Crowbar is concerned...\"\n\nPart 4 - Baiting A Trap \n\nCaptain Croyle was not in her office. She was at 2d Precinct. I fired of an email to her to see me 'as soon as it is convenient'. She would know that meant to not drop everything and rush over, but that her next agenda item should be to see me.\n\nI also fired off an email to all Duty Desks, their Precinct Captains, and all Lieutenant and higher officers (with a cc: to the Chief) reiterating the Duty Desk policies. \n\nAnd then, Cindy came to my office. \"The Chief wants us to come in and speak with Agent Jones.\" I got my red crowbar from underneath my desk where I stored it on hooks, and got up. Cindy saw it, and just shook her head but said nothing.\n\nWhen we went inside, the Chief was much less than happy to see me carrying my crowbar. \"Have a seat, everyone.\" Cindy was waiting for me to sit down next to Tasheeka Jones; I waved her to the chair and remained standing to Cindy's right, and the Chief's left, and a bit of a distance apart from the group. The Chief did notice, though he said nothing.\n\n\"I have been talking to SDOJ Agent Jones.\" said the Chief. \"I have informed her that her methods of observing our operations are not in compliance with State Law, and that she is interfering with our murder investigation. I have also called Regional Di-rector Harold Bennett to complain, and so now Agent Jones cannot make an evaluation of the TCPD, as it will be taint-eddddd.\"\n\n\"My report will be accurate and fair.\" said Jones. \"But it will definitely mention the lack of cooperation I have received, as well as the unnecessary rudeness and overbearing manner of Commander Troy and Captain Ross.\"\n\n\"Chief,\" said Cindy, \"this woman mis-identified herself at the crime scene last night. She is with the FBI but did not inform us of that. I confirmed her FBI status this morning. Therefore, I would like to place her under arrest, and let Harold Bennett come get her.\"\n\n\"No, I want this to be de-fused.\" said the Chief. \"However, Agent Jones, you are no longer welcome here, and if you do attempt to regain entry to Police Headquarters, you will be de-tained. And per State Law, you have now been warned. Okay, you can go.\"\n\n\"Before I do, Chief, I have one question.\" Jones said. \"Why was Commander Troy in MCD instead of in his office, working?\"\n\n\"I was working.\" I said angrily. \"We're trying to solve a crime here, but you keep showing up and interfering with us!\" I noticed Cindy readying herself.\n\n\"That's their job.\" Jones snarled. \"Why aren't you doing yours?\"\n\n\"Who... who the fuck are you to tell me my job?\" I yelled. I was advancing upon Agent Jones, crowbar ready to fly, with the intent to seriously beat the shit out of her. Cindy stood up and got in my way.\n\n\"You're not a Detective.\" Tasheeka Jones said, obviously baiting me and intentionally creating angst... and not aware of the literally mortal danger she was putting herself in. \"You're an office manager... a paper-pusher!\"\n\nI felt the blood rush to my head and my hands grip the crowbar. Fortunately for Agent Jones, Cindy got in the way.\n\n\"SHUT THE FUCK UP!\" she shouted, right into Jones's face. \"Don't say another fucking word!\"\n\n\"You can't talk to me like that.\" Jones said, seeming to enjoy herself.\n\n\"I'm trying to SAVE your sorry ass!\" Cindy yelled. \"If you say one more fucking word, I'll take the Chief out of here, and leave you alone with the Iron Crowbar... and you won't live to talk about it.\"\n\n\"Is that a threat?\" Jones said, smiling.\n\n\"Call it what you want.\" Cindy said, a little more evenly, still right in the woman's face. \"But we're not joking here. I'll leave, the Commander will kill you, literally, and then I'll testify that he was never alone with you. And we're cops... we WILL get away with it. Now either keep your fucking mouth shut, or say your final god-damn prayers.\"\n\n\"Captain,\" said the Chief, \"escort this State DOJ instigator out of my office. Ms. Jones, I suggest you never be seen in this County again. I can't restrain the Iron Crowbar if he catches up to you and I'm not there. Now get out. Captain, she either walks out the front door, or she can go through booking.\"\n\nTasheeka Jones took the wise course and left, though acting haughty about it. When he and I were alone, the Chief went and opened his lower right desk drawer and took out a bottle of whiskey and two shot glasses.\n\n\"No, Chief, I can't.\" I said. \"My wife will be here within 30 minutes to take bloodwork.\"\n\n\"Oh yeah, I forgot about that.\" said the Chief, putting the liquor away. \"That woman was definitely trying to bait you, and she damn near succeeded. You okay?\"\n\n\"Yes sir.\" I said, feeling myself calm down... some. \"But what she said...\" I mused, beginning to think, beginning to see it, \"... yes, that was a message... calling me 'paper pusher'.\"\n\n\"Why is that a big deal?\" asked Moynahan.\n\n\"Because that is what I called Robert Brownlee all the time, and it infuriated him.\" I said. \"So that was a message... and my guess... is it was from Katherine Woodburn.\"\n\n* * * * * * * * * * * * * * * *\n\nCindy watched from the sofa as Laura drew the blood from my left arm, taking several tubes for testing.\n\n\"Feeling okay?\" my wife asked as she put everything away in her doctor's bag (yes, she carries one around at times).\n\n\"I will feel a lot happier,\" I said, \"when you are formally and officially retired from the CIA.\" I said. Laura paused and stood still a moment as our eyes locked. Then she silently picked up her stuff and headed for the door, nodding to Cindy on the way out. Cindy nodded to Laura, then turned to peer at me, and I could feel the mental energy pouring from my cousin.\n\n\"I take it that your bug-killer was full on in the Chief's office.\" I said.\n\n\"You better believe it.\" Cindy said. \"Yours wasn't?\"\n\n\"No.\" I said.\n\n\"Okay, I'll get back to work and check in with my Detectives...\" Cindy said, then grinned as she finished: \"...and leave you to the paper-pushing stuff.\" A red crowbar was waved in her general direction, but humorously.\n\nA moment later, Captain Teresa Croyle came to my door. \"You wanted to see me, sir?\"\n\n* * * * * * * * * * * * * * * *\n\nCaptain Croyle came out of the Commander's office in a hurry, walking with a purpose. She came to the Duty Desk, pointed at the Sergeant and said \"You, in my office. Now!\"\n\n\"But ma'am...\" the Sergeant said.\n\n\"What, do you have a problem following orders?\" Teresa snarled. \"I said get to my office NOW!\"\n\n\"I want a Union rep.\" the Sergeant said, not moving.\n\n\"You'll get one at the proper time.\" said Captain Cindy Ross, coming up with the green crowbar in her hands. \"But for now you're being insubordinate if you don't get moving.\"\n\nBeaten, the Sergeant followed Teresa to her office, and Cindy followed them. Once the door closed behind Cindy, Teresa turned on the Sergeant.\n\n\"I have been informed that you broke the rules this morning, Sergeant.\" said Captain Croyle. \"Allowing an unauthorized person access to our MCD room is a severe breach of our security as well a threat to solving a murder case.\"\n\n\"She was an SDOJ officer.\" said the Sergeant. \"What's the problem?\n\nYou know damn well what the problem is!\" Teresa growled. \"She could've been the President, and she should not have been allowed into the MCD room without Captain Ross, Commander Troy, or Chief Moynahan authorizing it. Sergeant, you're suspended with pay pending an investigation of this incident. I will tell you now that Commander Troy is looking to get you fired. So while you're going to the Union, you might want to consider looking for new employment. Dismissed.\"\n\n* * * * * * * * * * * * * * * *\n\n\"What in the heck got into Don this morning?\" Teresa asked as she and Cindy ate lunch at one of the subway shops on the south side of Courthouse Square.\n\n\"I don't know.\" Cindy said. \"He was fine, just talking to the Detectives, set up Davis's computer account, which kind of surprised me since he's resisted Uniformed Officers playing as Detectives... and then the moment that woman walked in, he was changed. Didn't yell at her, though, until we were in the Chief's office, and I nearly ripped her head off myself.\"\n\n\"Think that torture a few months ago got to him? Making him lose control?\" Teresa asked.\n\n\"No.\" Cindy said. \"I am sure, very very sure, that the vibe I got from him is because he is worried now, under severe pressure now.\"\n\n\"From what?\" Teresa asked. \"This murder case? The SBI? The Governor and politics?\"\n\n\"No.\" Cindy said. She looked around to make sure they weren't being heard. \"Between you and me alone... I think it's something about Laura. I don't know what's going on, but he said something to her about retiring from the CIA, and they had this 'look' between them. And the vibes coming off both of them... whew! I don't know what it is... but Don is worried as hell about his wife.\"\n\nTeresa nodded. Cindy did not realize for a few moments that her friend said nothing further...\n\n* * * * * * * * * * * * * * * *\n\nThe large, fat man was putting away glassware and bottles of liquor behind the cabinet when three men came into the Rhythms & Rap Club.\n\n\"I smell Pork. Iron Pork.\" the man said. \"And two Uncle Toms.\"\n\n\"Not much gets by you.\" I said as I came up to the bar. \"Just tell him I'm here and I want to talk to him.\" The man went to the telephone next to the cash register on the counter against the back wall behind the bar, and made a call.\n\nAs he did, I looked around. The club was in black and chrome, and looked really good. I noticed a lot of blacklights and other colored lights that made things like phosphorescent necklaces glow brightly; it would be a hot place in here at night, but very dark. I would not want to be in this place when it was crowded after dark... I might get a knife stuck in me somewhere.\n\n\"He's in a meeting. Give him a few minutes.\" the fat man said. I sat down at the bar. Theo was also looking around. He was dressed in a suit and tie, as usual, with a trenchcoat over his suit, lighter colored than mine. Jerome Davis was in plainclothes as well; I'd instructed him to wear plainclothes whenever he was working with Theo as a Detective... and definitely to be in plainclothes for this mission.\n\nIt only took one minute: T-Square came out from the back offices, wearing a seersucker suit and his trademark shades. With him was his agent and two other rappers; they were famous and would be recognized if their names were mentioned.\n\n\"Okay, we have a deal.\" said T-Square. He noticed me and, without skipping a beat, said \"And my club has the best protection you can get: the Iron Crowbar himself.\"\n\n\"That's the Iron Crowbar?\" asked one of the rappers, peering at me as I stood up. \"I heard of what you did to that badass preacher, and up in that shitty little county where that spring is.\" He moved forward to shake my hand, and I shook it.\n\n\"This is my posse today.\" I said. \"Theo and Jerome.\" The famous rapper shook hands with them. \"Okay, T-Square, I'll be in touch. Probably see you in the City soon.\"\n\n\"You know it.\" said T-Square. After the others left, T-Square said \"So what is the I.C. doing here, messing me up like that?\"\n\n\"You renovated your club and never gave me a tour.\" I said. T-Square took me at my word: he showed us around the club, and was obviously proud of the new technology that operated the lights in time and beat with the music being played. He showed us the audio boards that controlled everything. It was impressive, and I told him so.\n\n\"All right, let's go to my office.\" said T-Square. He led us to the back rooms, which contained recording studios as well as offices. Everything was renovated and a lot nicer than the old. His own office had a window to the left as one walked in, and I noticed the bulletproof glass... having installed similar glass into the new Cabin when I rebuilt it.\n\n\"Nice.\" I said. I noticed that a backdoor led to stairs to the outside, and to the right (and left of the desk), a small door that when opened, was right at a pole that he could slide down to the ground floor, and make a hasty exit if needed.\n\n\"So, I.C.,\" said T-Square, \"this'll do for me. I even had a bed put into T-Mac's office so he can fuck Gloria whenever he wants.\" T-Square's lawyer and two Regiment members laughed.\n\n\"When is he going to marry her and make an honest woman out of her?\" I asked with a grin. Everyone laughed.\n\n\"Hell, I.C.,\" said T-Square, \"there ain't no 'honest' in that woman.\" We all laughed again. \"All right, I guess you're here about Holden?\" I nodded and he said \"I don't know what to tell you, man.\"\n\n\"I have reason to believe,\" I said, \"that he was captured before that shootout... and maybe he was killed before it happened. So... anyone threatening you, T-Square? Trying to get to you through him?\"\n\n\"No way, brother I.C.\" said T-Square. \"Threats like that wouldn't work, anyway. All my boys know I won't play that game.\"\n\nI nodded. \"Well, someone targeted him and killed him. Someone who knew what they were doing. Sure there's nothing about that, that you can tell me? Is this some kind of race-related thing? Or just tell me the truth: was Holden doing something for you behind the scenes, and he got caught up?\"\n\n\"I.C., I know you're the real deal,\" said T-Square, \"and your coming here shows me you are interested in keeping shit from going down here. So I'm going to tell it to you straight: Holden was pure security for me. He wasn't a courier, he didn't do side jobs. Just did his job protecting me. He was a smart guy, helped in the security planning for my concerts and all that... but that's all.\"\n\n\"And squeezing him for info on your security wouldn't work, because you changed things as soon as he dropped dead.\"\n\n\"Not much gets by you, Iron Cracker.\" T-Square said. \"So you think somebody's trying to gin up some shit? Start some racial shit?\"\n\n\"I don't know.\" I said. \"But something's going on. Thanks for your time, and if you hear anything, let me know.\" I got up, and as we were leaving I looked back and said \"And by the way, watch your own back, T-Square. They didn't kill your bodyguard at random.\"\n\nWe left the club. On the way back, as we rode in my SUV, Theo said \"He knows something. He has to know. He was nervous in there.\"\n\n\"Yes, yes he was.\" I said. \"But not about the murder of Holden. He was worried about me being there. He gave us the tour of the club to let someone get out without us seeing him or her. Yes... something is going on with T-Square...\n\nTo be continued."
    ],
    "authorname": "WifeWatchman",
    "tags": [
        "mystery",
        "police drama",
        "crime drama",
        "non-erotic",
        "no sex"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/knights-of-the-round-ch-01"
}