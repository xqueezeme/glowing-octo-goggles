{
    "title": "F is for Fail",
    "pages": [
        "<center>Chinese Parents Set a High Standard for Success</center>\n\n\u00a9 2021 Chloe Tzang. All rights reserved. The author asserts a moral right to be identified as the author of this story. This story or any portion thereof may not be reproduced or used in any manner whatsoever without the express written permission of the author except for the use of brief quotations in a review. If you read this story on any website other than on Literotica or Wattpad, it has been copied and used without the author's permission.\n\nAs always, there's that little note from Chloe right at the start. This story was written for the 2021 Literotica \"On the Job\" Story Event organized by HeyAll, so right up front, thanks to HeyAll for organizing this, and to Laurel and Manu (who keep Literotica running) for hosting this event and running Literotica to keep us all entertained, and for giving us writers a venue for our little fantasies. If you're reading this and you haven't seen the \"On the Job\" Story Event page, go find it, it's on the Literotica Stories Page, and take a look at all the other \"On the Job\" stories. You're sure to enjoy more than just mine. \n\nAnd coming up on May 25th is the 2021 Literotica \"Geek Pride\" Story Event, with a bunch of geeky stories for you. But enough. You opened this... get reading! And I hope you enjoy...Chloe\n\n<center> * * * F is for Fail * * *</center><br><center>\"Young teacher, the subject<br>Of schoolgirl fantasy<br>She wants him so badly<br>Knows what she wants to be<br>Inside her there's longing<br>This girl's an open page<br>Book marking - she's so close now<br>This girl is half his age\"</center><br>\"Don't Stand So Close To Me\", The Police & Sting\n\n<center> * * * </center>\n\n\"Take your panties off for me, Krystina,\" Mr. Montoya said, very softly, and he was standing behind me in that little office behind his classroom that nobody knew about, and the door was locked.I'd locked it myself. And checked.\n\nI'd thrown the bolt as well, just to be on the safe side, because it was high school and he was a teacher. He was my Grade Twelve Physics teacher actually, and I was one of his students so what we were about to do, well, if we were caught, Elijah would be in trouble so deep he'd need a thirty foot straw to breathe through. If he was still breathing after my mom and dad finished with him, and my mom was pretty good with those big Chinese meat cleavers.\n\nSo yeah, I checked the locks and that bolt really really carefully. I pulled the blinds over the outside windows down just as carefully, I pulled the curtain over that, and I hung my blazer on the hook at the top of the door.\n\nI was supposed to be here for my physics tutorial, but, well, what Mr. Montoya was about to tutor me in before we moved on to physics wasn't on the official Saint Ignatius Loyola Catholic High School curriculum at all. It wasn't quite what my dad had paid Mr. Montoya to tutor me in either, but neither Mr. Montoya or I worried about that. What we worried about was someone finding out about us.\n\nNeither of us wanted anyone walking in on this tutoring session.\n\n\"I like it when you don't wear a bra,\" Mr. Montoya added and of course he'd know I wasn't wearing one. He was close behind me, really close and I could feel how hard he was and his hands cupped my boobs through my white school blouse while his thumbs brushed backwards and forwards over my nipples.\n\n\"I know you do. That's why I took it off before I came here,\" I whispered, not quite shyly because I wasn't at all shy with Mr. Montoya anymore, slipping my hands under my skirt and pushing my panties halfway down to my knees. My school uniform skirts were a lot shorter now than they used to be. I'd had them shortened so that Mr. Montoya could enjoy looking when I was in one of his classes. He wasn't the only one that looked of course, and I didn't mind that at all now that I knew why guys looked, but Mr. Montoya was the only one who got to do more than look.\n\nMr. Montoya got to do a lot more than look.\n\nHe got to do anything he wanted.\n\n\"All the way off and give them to me.\" He kissed the top of my ear, releasing me and stepping back, watching, and I liked that he was watching, because I knew he'd like my new panties,and of course I did as he told me to. I was a good Chinese girl. Obedience to authority was in my genes, and obedience to my teacher came so easily.\n\nEven more easily with experience, and I had a lot of experience now. I eased my panties all the way down to my ankles, stepping out of them, and I could hear his clothing rustling and when I turned around, he was naked from the waist down, except for his socks, and his cock was rock hard. Rock hard, and ready for me. I gave him my panties and I'd slipped them on when I took my bra off. He took them from my hand, looked at them, and smiled.\n\n\"Red G-string? Those are new, aren't they, Krystina? When did you buy them?\" I'd been right. He liked them.\n\nI didn't smile. I looked at him and I was breathing hard, my face burned, and I tingled everywhere. Tingled and burned and my sex was hot and slippery wet and I wanted him inside me. I wanted his hands on me and his body on me, riding me, taking me and he knew. I knew he knew, and my heart pounded.\n\n\"Last week,\" I said, watching him as he raised them to his nose and inhaled and I shivered. \"I ordered them online. They arrived yesterday.\" I smiled. \"I used the gift certificate you gave me for my birthday. I read your note.\"\n\nHe grinned and we both knew what his note had said. Buy. Sexy. Lingerie. And a smiley face.\n\n\"Wear them again on Thursday,\" he said. \"Wear them all day at school. And afterwards, I'm going to fuck you while you're wearing these.\" He grinned as he held them up, dangling from one finger. \"Nothing but these.\"\n\n\"Yes, Mr. Montoya,\" I said, breathing hard, and I was so wet and ready. The insides of my thighs were wet, and my knees were weak, and I wanted him, and he knew.\n\n\"Take your tie off and undo your blouse for me,\" he said, and he watched me as my fingers unclipped my school tie, and dropped it on his desk. Thank god the uniform code didn't say berets. That would just be too cliched. It was bad enough having to wear a uniform. Really, it was. The Catholic School Board insisted, and when I was younger, I hadn't minded at all, but now?\n\nNow I knew what I looked like. I was Chinese. I was pretty, and okay, I had long slender legs. I wore a school uniform, and my skirts were as short as all the other girls now, and they really did make my legs look stunning. Those Catholic girls high school uniforms were, to be honest, on a whole different plateau of wrongness for an Asian girl. Nobody, and I mean nobody, should EVER make Asian girls wear those uniforms.\n\nSure, you all get the traditional Catholic schoolgirl-fetish stuff, but when you're a slender Asian girl, and you're wearing that short pleated navy blue skirt (and thanks to Mr. Montoya, I did wore mine short now, very short, just like all the girls did) you look, well, cliched. Combine that with those knee-high white socks, those black shoes and that navy blue blazer over a white dress blouse with a school tie. When you're a slender, long-legged and, yes, pretty, Asian girl with long slender legs, and dressed in one of those uniforms...?\n\nWell, guess what: you're a walking fantasy from a Japanese porn website made for men like Mr. Montoya, whether you know you are or not. By then, well, I knew. I knew it, and I liked it, and I liked being Mr. Montoya's little Asian porn fantasy. Liked it? I reveled in it, because I was far more than a fantasy for him,and he was far far more than a schoolgirl fantasy for me.\n\nSo when he asked me to undo my blouse?\n\nI smiled as my fingers worked their way down, unfastening those buttons until my blouse hung open. He said nothing, but as he watched me, he unfastened his own shirt and peeled it off. He stood there, naked except for his socks and he really was gorgeous. He was eleven years older than I was, twenty nine, I knew because he'd told me, and he really worked out.\n\nHe was all hard muscle and six-pack abs, and I loved looking at his body. He was short and stocky. Five foot six, and that was tall enough for me because I was only five one and I loved it that he wasn't waaaay taller than me - I didn't get a sore neck looking up at him and I could vine my arms around his neck easily too.\n\nSix months ago, I'd never imagined looking at a naked and aroused man could be so exciting but it was and really, I wanted to sink to my knees and take his cock into my mouth and cup his balls and tease him the way I had last Thursday. I reached for the clip at the side of my skirt but his hand reached out and took mine.\n\n\"Leave your skirt on,\" he said, and his hand ran down my hip to my upper thigh and the hem, followed the hemline around to brush my inner thigh with his fingertips. \"I want you to shorten it some more for Thursday, to go with the panties.\"\n\n\"How short?\" I gasped, and that tension was back. My skirt was already short.\n\n\"I'll show you afterwards,\" he said, and his hands gripped me and turned me around so that I was facing his desk, my back to him, and I knew exactly what he meant by afterwards. \"But right now, I'm going to teach you something new, Krystina.\"\n\n\"Yes, Mr. Montoya,\" I almost moaned.\n\n\"We haven't tried this before. Bend forward over my desk,\" he said, one hand on the back of my neck. \"And rest on your forearms.... Yes... like that... yes... now shuffle your feet apart... further apart... a little more... yes, that's good, Krystina.\" His hands brushed my skirt up to bunch around my waist and I was exposed to him. Completely exposed and one of his hands caressed my butt.\n\n\"You're wet,\" he said, softly, and I knew he could see and I was. Hot and wet and I wanted him so much. So badly.\n\n\"Don't wait,\" I moaned. \"Please.\"\n\n\"Spread your legs wider, Krystina,\" Mr. Montoya said. \"You're still too high.\"\n\n\"Okay,\" I gasped, shuffling my feet sideways and I could imagine what I looked like to him as he stood behind me and the anticipation was almost agony, and I was moaning softly with every breath I took as I waited.\n\nWhy was he taking so long? Didn't he know how much I wanted him? But I knew that he knew, and that he was teasing me by keeping me waiting. I enjoyed that too, knowing that he was teasing me. Knowing that he knew that I knew, and that we had hours. There was no hurry, we both knew that, but my body wanted him desperately.\n\nI wanted to feel his hardness inside me again, because it was Tuesday, and it'd been last Thursday when we were here last. Five whole days without him making love to me, because Tuesdays and Thursdays, after school, those were my tutorial sessions with Mr. Montoya. He tutored me in Physics. After he tutored me in what we were about to do.\n\nThe physics tutoring, that was arranged and paid for by my dad. This subject, this was arranged between me and Mr. Montoya, and I was more than willing to be tutored in this subject. More? I was very willing. Enthusiastic, even.\n\n\"So beautiful,\" he breathed and I gasped and jerked as his hands brushed my hips, his thumbs sliding across the backs of my thighs and my butt, stroking, teasing, not quite touching me where I needed and wanted him to touch me. \"So beautiful, Krystina.\"\n\n\"Ohhhhh,\" I moaned, my hips jerking and my knees were weakening, my hands clawed at the desk and I waited. I couldn't do anything else except wait and my wetness was trickling down my inner thighs. \"Ohhhh please... please... please, Mr. Montoya.\" I knew his name. His first name. It was Elijah. But I almost always called him Mr. Montoya. I was worried I'd call him Elijah accidentally in front of someone. Anyone really.\n\nBecause no-one could know about us.\n\nHe was one of my teachers. Physics. And what we were about to do was going to get very physical. The sort of physical that a teacher shouldn't get with his student.\n\n\"What is it, Miss Wong?\" He called me Miss Wong in class. He called me Miss Wong when we were making love, sometimes, but only when he wanted to tease me, because he would never call me Krystina by accident. His voice was soft, teasing me, and now his thumbs teased me too, brushing my sex, lightly caressed my slippery sex lips, parting me, teasing me, drawing my wetness from me to flow out onto my inner thighs.\n\n\"What is it, Miss Wong?\" he asked again and I moaned again, wordlessly, wanting him inside me. Wanting him to fuck me and unable to express it. \n\n\"Oh please... please ... I can't stand it,\" I was almost sobbing with my need and my desire. I wanted him inside me, deep inside me, filling me and moving in me. I was enjoying what he was doing, I knew he was enjoying this too but I needed more. He liked to make me wait until I begged and pleaded with him, and I knew his cock was ready for me, rigidly erect, ready to take me at any time, and I was ready to be taken. I wanted him to take me. Badly. Right now.\n\nHis thumbs caressed my lips, my wetness flooding and slippery, his thumbs parting me, peeling me open, and he knew what he was doing to me. He knew me so well, knew my body, knew what excited me, and I knew he wanted me as much as I wanted him, but he was holding back, his anticipation building and he had so much more self control than I did, because I had none. Not when I was with Elijah.\n\n\"Ohhhhh... ohhhhhh... ohhhh.\" I whimpered softly with every breath, my body at once tense with anticipation and limp with excitement.\n\n\"Ohhhhhhhh.\" His thumbs peeled my lips wide open, and something touched me. Something big, and I knew it was the head of his cock. His swollen cockhead, large, plum-sized, and I'd thought he was huge those first few times. Now? Now he was perfect for me. Large, yes, stretching me, yes, but not too large, just right and I loved the way he stretched me around him as he entered me and slid up thickly inside me.\n\n\"Oooooooh.\" I moaned as he pushed lightly, his cockhead pushing inwards between my labia, pushing against my entrance, easing back, pushing again. Teasing, not demanding and shivers of delight ran through me, that gentle sliding pressure filling me with desire, with need, with want and there was nothing I wanted more than to experience his cock sliding relentlessly up inside me to fill my sex.\n\n\"Please,\" I breathed. \"Oh please, Mr. Montoya... do it to me now. I can't wait.\"\n\n\"You're mine, Krystina,\" he breathed, and his voice was different, almost desperate. \"You're mine and I want to take you hard today.\"\n\n\"Okay,\" I moaned. Gentle. Hard. Over his desk. On the floor. Hanging from the ceiling. I'd do it anyway he wanted me to. Any way at all. All he had to do was tell me.\n\n\"I'm yours, Elijah,\" I gasped, knowing I was. I was his. Completely.\n\n\"You're mine, Krystina,\" he said again, telling me what we both knew, and his cockhead was there, against my entrance, and he pushed, not roughly, but irresistibly, his cockhead stretching me and opening me. My body surrendered to him, as it always did now, and he was inside me, my entrance circling his shaft below the glans, my sex accepting his cockhead, feeling him inside me, swollen, large, hard, pressing thickly against my channel walls.\n\n\"Uuuuhhhhh.\" I tensed, hands clenched into fists, back arching, eyes wide and my boobs quivered as he thrust hard. His hands gripped my hips, his body forced mine up against his desk as his cock drove into me and that rigid shaft surged deep up inside me, stretching me around him for the first time that afternoon, that was such exquisite pleasure. That first thrust was such exquisite surrender, and I shuddered rapturously, trapped between the edge of his desk and his body as he slapped up hard against me.\n\nFilling me with his length, stuffing me full.\n\n\"Aaaahhhhhh,\" I sobbed, as he pulled back and thrust in again. Hard, and he gave me everything, not stopping until he was pressed up hard against me and I was pressed up hard against his desk. \"Aaahhhhhh.\"\n\n\"Too hard?\" he grunted.\n\n\"Don't stop,\" I pleaded. Too hard? Yes, too hard, but I didn't care. As long as Mr. Montoya was fucking me, he could do me anyway he liked. Hard. Gentle. Over his desk. On the floor. In between. Any way at all.\n\nHe didn't stop. He didn't slow. He didn't pause. He fucked me. He fucked me hard now, his cock thrusting and plunging into me, stretching my channel around his cockhead, massaging my channel with his movements, and my sex squeezed down on him, squeezed down on his cockhead and his shaft as he rammed himself into me, pressing deep with every thrust, while his hands gripped my hips and forced me to move for him as he wished.\n\n\"Fuck me, Mr. Montoya,\" I gasped, jarred against the edge of the desk with every plunging penetration, and his thighs pushed my thighs wider apart so that I was almost lying on his desk as he filled me. \"Fuck me hard... make me scream.\"\n\n\"God, you're so fucking tight,\" he grunted, pushing deep and now he held himself high inside me and I squeezed him with my sex, sobbing.\n\n\"Krystina... Krystina...\" He was driving into me again, long hard strokes and I felt every inch of him sliding in and out. Easing outwards until only his cockhead was inside me, ramming inwards until he was pressed up against me, his thighs forcing mine apart as he forced himself into me. Deep. So deep. So good.\n\n\"Use me,\" I sobbed. \"Use me.\" Bent over his desk, helpless, his cock ramrodding into me, I was his to use and I wanted him to use me. Before he'd first taken me, I'd never imagined sex was like this. So good, so exciting, so wonderful. So exquisitely pleasurable to surrender myself. Such pleasure in experiencing a man's rigid cock within my body, an intimate surrender of myself. Such exquisite delight to be taken and used like this by a man, and it was Mr. Montoya who'd brought me this knowledge, this awareness of myself.\n\nHe'd taught me everything.\n\nHis hands left my hips, moved under me to cup my breasts, lift me a little and now I wasn't supporting myself at all, I was hanging in his arms like a rag doll as he fucked me. His fingers found my nipples, worked on them, brushing, squeezing, rubbing and the pleasure jumped from exquisite to completely unbearable.\n\n\"Aaaahhhhhhhh,\" I cried out as he humped himself hard into me and I wasn't standing anymore. I was hanging off the edge of the desk, my feet flying with every single one of his thrusts and his hands held me. My hands scrabbled helplessly at the surface of the desk and my head hung down. Looking down, I could see his cock surging into me, thick and hard, blue veins on the surface, my lips spread tight around him and his girth, the way he fitted into me, that never ceased to amaze me.\n\n\"Uuuggghhhhh.\" In me. All of him in me and he was easing out and I watched, hanging in his arms. He held me easily and I loved his strength and his size. He was five foot six, stocky, two hundred pounds of muscle, without any fat on him. I was five foot one, one hundred and ten pounds soaking wet, slender, not quite tiny in his arms but I always felt like a doll. Right now, I was a doll, a little Chinese rag doll, hanging in his hands.\n\n\"Nnnnuugghhhh.\" Oh god. Again, and I watched, I felt. I felt him inside me, surging inwards, my channel walls massaging his cockhead as he slid upwards, my channel walls clasping his shaft as he buried himself to the balls inside me and I felt so full, so complete.\n\n\"You okay, Krystina?\" he groaned.\n\n\"You're so big in me,\" I gasped. \"I can feel you all the way up inside me.\" Every time, and I loved that feeling. I'd loved that feeling from the very first time he took me.\n\n\"God, I want to fuck you forever,\" he grunted, his thrusts long and slow now, not as hard. \"Can you lean over the desk again?\"\n\n\"Yes,\" I gasped, as he lowered me and I did, bracing myself on my forearms as his hands returned to my hips and I knew what he wanted. I knew what he was going to do.",
        "\"Yes,\" I moaned as my toes scrabbled for the floor and I really was spread wide for him. As wide as I could spread myself.\n\n\"Yes, Mr. Montoya,\" I sobbed, my toes curling as he thrust deep and hard, his hands pulling me back onto him. \"Oh yes... yes...\"\n\n\"You okay taking it like this?\" he gasped, and I knew he was holding back.\n\n\"I like it,\" I sobbed, and I was. More than okay. I loved it. Bent over before him, his to take and he was taking me. \"I love it... Do it to me.\"\n\nHe plunged into me, hard and then harder, making me sob and cry out with each hard thrust, his body slapping up against me with every plunging drive of his cock into me. Fast, hard, powerful. Every thrust reverberating through me, and the longer he fucked me, the more my excitement grew, the greater my eagerness as that now familiar pressure and anticipation inside me built, sheer bliss radiating from my sex, filling my body, pooling inside me at my center and expanding, building and my hands clawed at the desk.\n\n\"Ohhhh... ohhhhh... ohhhh.\" My sobbing cries were louder now, uncontrolled and Mr. Montoya did what he'd done before when I couldn't control myself. He took my panties and stuffed them into my mouth, muffling the noises I was making.\n\n\"Ohhhh... ohhhhh... ohhhh.\" I loved taking him. I loved his cock deep inside me, thrusting, stretching me, forcing me to take him. I loved that friction against my channel walls as he moved, the thickness of his shaft sliding inwards at my entrance. I loved the sounds that came from my mouth, loved the wet sounds from my sex and the slapping rhythm of his body against mine.\n\nThat pressure inside me grew, a wave within me, building and I knew that sensation now. I knew what was coming and I wanted it and now I was trying to move myself, pushing myself back at Mr. Montoya as he fucked me and I was going to burst. I was going to... I was... I was...\n\n\"Hard,\" I sobbed. \"Hard...\" and he did and the universe exploded in a cataclysm of rainbow light and pleasure and a great golden wave that rocketed through my body, filling me from my toes to my ears and I hung there, not even able to scream as my sensory system overloaded and still he thrust, taking me over the edge and keeping me there.\n\nEcstasy.\n\nThat's what it was. Ecstasy, and he took me there and held me there, on and on, those golden waves washing through me, slowly receding but that glow remained and still he pumped himself into me, changing his rhythm, slowing a little, changing the angle he entered me at and his hands stilled my shuddering hips as he thrust, on and on and my sex spasmed on him, clasped him and that pressure was already building within me again and I was helpless.\n\nCompletely helpless.\n\nHe thrust, again and again and I struggled to moan, struggled to sob in the face of that building pleasure as he thrust hotly up inside me and his cock seemed bigger, harder.\n\n\"I'm close,\" he grunted. \"So close.\"\n\n\"Do it,\" I choked, working my panties out of my mouth. \"Do it.\" It was safe. I was taking the pill now. I had been since we'd first started making love because I wanted to feel him finish inside me, and I knew there was only me for him, and I loved it when he came, and he was going to soon, I knew and another orgasmic little wave rippled through me, then another, magnified as he thrust harder.\n\n\"God,\" he groaned. \"Krystina... Krystina...\"\n\n\"Yes,\" I sobbed. \"Please... I want it... I want it...\"\n\n\"You're going to get it...,\" he groaned. \"Going to... going to...\"\n\n\"Ohhhhhh,\" I wailed, my sex clutching at him as that wave inside me crested and broke and washed through me in a surging tide of pleasure once more, and now he was close. He was fucking me hard, his cock slamming into me, my breath huffing out with every thrust as he jack-hammered his cock into me and my sex squeezed him, squeezed and danced on him.\n\n\"Ahhhhhh,\" he grunted. \"Ahhhhh,\" and his cock seemed to swell inside me. Swell and pulse and throb and I was impossibly full as those waves swept through me again and I screamed and hs cock drove into me, one, two, three wild driving thrusts and with each thrust he spurted his semen deep within my sex. Great jetting spurts that flooded me and my entire body quivered and shuddered and collapsed limply down onto his desk as he bent forward over me, his breath coming in frantic gasps.\n\n\"Am I good?\" I moaned, holding on tight to the desk and doing my best to milk his cock with my sex as he stayed inside me. He'd come hard, he always did and I loved that sensation. That implacable grip of his hands on my hips, his cock driving into me, pumping his semen into me and there was always so much of it. I loved that, that feeling as he spurted inside me and I loved the thought of his semen flooding my sex.\n\nSometimes I thought I'd like to stop taking the pill and have his baby. That almost always made me climax and I smiled. I'd said that to him once and he'd held me close, his cock still inside me.\n\n\"When you're older, Krystina,\" he'd said.\n\nDid that mean he wanted to keep this going after I went off to college. Would he move? Give up his job here? Come with me? Him and me, it'd be okay for us to be together openly when I went to college. I wouldn't be his student anymore. We wouldn't have to keep this secret. We could even live together and I thought I'd like that. Him and me together, every night. He was older. He was a lot older than me but that wouldn't matter so much when I was older.\n\n\"Oh God, Krystina,\" he groaned, holding his cock deep in me, pressed up against me and he throbbed again, a last spurt. \"That was good.\"\n\n\"Mmmmmm,\" I murmured, my eyes half closed, and I was lying on his desk now, limp. \"Can we stay like this for a few minutes before we start studying?\" Because this was a tutorial session, and my Dad was paying Mr. Montoya to tutor me for Physics. He did tutor me in Physics, after he tutored me in sex, and we kind of mixed both together a lot, and I was doing way better at Physics.\n\nI was doing way better at sex too.\n\n\"Sure,\" Mr. Montoya gasped, staying inside me, one hand stroking my back and I wanted to purr.\n\n<center> * * * </center>\n\n\"I can't study Physics like this,\" I moaned, an hour later, and he was sitting in his chair and now I was straddling him, seated on his lap, facing him. I just sat there with him inside me, shuddering because I loved him inside me. Big and hard and completely stuffing my sex full with cock. His cock, and it went so far up inside me I couldn't think of anything else at all. My hands rested on his shoulders and I just sat there shivering and I looked at him as he brushed my white school blouse back and I knew what he was going to do next.\n\n\"Sure you can,\" he murmured, and he did it. He brushed my blouse open, exposing my boobs and then he took my nipples between his thumbs and fingers, both of my nipples, and he squeezed them gently and I just about climaxed on the spot.\n\n\"Review that last formula, Krystina,\" he murmured, smiling as I bit my bottom lip and tried to talk except the words that came out were totally incoherent and I was moaning as well. \"Focus now. If you can focus while we're doing this, you won't have any problems with your exam. Focus, Krystina.\"\n\n\"Nnnnhhhhhh,\" I whined. \"Nnnnnhhhhh,\" and I couldn't stop myself from moving, lifting and lowering myself, his cock moving inside me and I wanted to look at him where he slid into me but I was still wearing my skirt.\n\nMr. Montoya chuckled. \"I better finish you so we can study,\" he said.\n\n\"Ohhhhhhh,\" I moaned, because now he moved under me, thrusting upward and he touched something high inside and he was so deep in me, his hands on my hips pulling me down and I wanted more. I needed more and I did what seemed natural.\n\nI braced myself with my hands on his shoulders and I began to ride him, lifting and lowering myself faster, sobbing with every movement and I never wanted to study anything but this with him.\n\n\"That's good,\" he breathed, and we were watching each other's faces. \"That's so good. Jesus, that's good.\"\n\n\"I want to be good for you,\" I moaned, riding him, tossing my hair back as I rose and fell, seated on his cock, impaled on his cock and his hands were back on my hips, kneading my butt, stroking my hips, my thighs and I was seated on a steel rod, impaled, filled and I couldn't do anything except move myself on him and the pleasure rippled through me with every thick slide against the walls of my channel and I was close. Closer with every movement and I was sobbing now and his hands were taking control.\n\n\"Oh yeah, you're good,\" he groaned, moving me and he was penetrating me to my core, huge inside me and his hands moved me and his cock took me with slow intensity and now his nose brushed mine and we were kissing as I rode him. Gentle brushing kisses of our lips as I moved on him, panting and sobbing and shivering with the sheer intensity of that pleasure.\n\n\"Ohhhhh God,\" he groaned, stiffening beneath me and his cock seemed to swell inside me and he was close now too and I looked into his eyes and he smiled.\n\n\"Climax for me,\" he said, pulling me down hard onto him and I did, instantaneously, as if I'd been doing nothing but waiting for his command and it took me by surprise, washing through me like a tsunami, overwhelming, sweeping me away in a whirling maelstrom of pleasure that filled me so that I clung to him, my chin on his shoulder, my moans of delight filling the room as his cock filled me and my sex spasmed and danced on him as my body shuddered helplessly.\n\n\"Oh Jesus,\" Mr. Montoya groaned, his hands on my hips, pulling me down hard onto him as his cock throbbed inside me and that first spurt erupted from the tip of his cock, his hot cum flooded me wetly and I buried my face against his shoulder and moaned as my sex spasmed and danced and my climax washed through me, golden shuddering pleasure washing through me as spurt after spurt of his cum exploded from his cock deep inside my sex.\n\n\"Ohhh... ohhh... ohhhh,\" I moaned, desperately clutching at him as he came and came and came and I loved it when he did, just as much as I'd loved it earlier when he bent me over his desk and fucked me and I squeezed his cock with my sex, milking him as he throbbed inside me and his hands held me tight and he groaned his pleasure as he humped upwards desperately beneath me and I clung to him, sobbing with my own pleasure.\n\n\"God, you're good, Krystina,\" he said at last, and it was a long time after and I was still sitting on him and we were both still breathing hard and me, I was just glowing and shivering every now and then in the aftermath of that climax and when I looked at the clock, I wanted to smile because I knew we could finish my Physics, and do it one more time before he drove me home to the Dragon Cafe.\n\n\"Do I get an A this afternoon?\" I murmured without lifting my face from his shoulder.\n\n\"Oh yeah, that was better than A. That was an A Plus,\" he said, one of his hands caressing my butt.\n\n\"I'll tell my dad you just gave me an A Plus for sex,\" I half-giggled. \"He'll be happy my tutoring's going really well.\"\n\n\"Don't you dare,\" Mr. Montoya said, but he was smiling, and he knew I was joking.\n\n<center> * * * </center>\n\nIt was an old joke and it went all the way back to Grade Nine. My first year in high school, and Mr. Montoya hadn't even lived in town back then. Mr. Montoya only arrived in town the year I started Grade Twelve and my Physics results in my Grade Twelve mid-year exam hadn't been so good. A + in everything but Physics, and Physics had been a B. You have to understand Chinese parents to understand what that did to my mom and my dad.\n\nHere's the thing. If you're Chinese-American, well, an A is Average. B is below average. C is \"Can't Eat Dinner\", D is \"Don't Come Home\" and an F, well, that's F as in Fail. F as in, \"Failure\". F as in \"Find a New Family.\" Don't laugh. It's true. That's why Asian American students outpace everyone else academically. It's the expectations and the pressure from not just your family but everyone in your Asian-American circle. Relations. Friends of the family. Your peers. Everyone.\n\nIf you're Asian American, there's all kinds of role models to emulate, and everyone you know understands what they are. \"Mrs. Ko's oldest son is a doctor.\" \"Mr. Chin's daughter is an accountant.\" \"My Patricia just graduated from dental school.\" Medicine, law, engineering, accountancy, computer science and pharmacy. There's others of course, but everyone aims high. Everyone expects their children to study hard and do well. It's not about coercion or some mysterious ethnic Asian gene. It's about the way Asian-Americans view their horizons, with extraordinarily high expectations, so high that the kids who don't rise to the occasion and meet those expectations feel like black sheep.\n\nIf an Asian-American kid comes home with a 3.5 grade-point average, their parents are disappointed that it's not 4.0, and they show it. If you get into, say, Cal State, the question is why you didn't make it into Stanford? Were you slacking? If all you have is a bachelor's degree, you're asked why you don't have a PhD or an MBA.\n\nSo what does \"do well in school\" mean if you're Asian-American?\n\nThat's easy. Getting straight A's across the board in every subject, graduating as valedictorian or salutatorian, getting into one of the top schools or an Ivy, doing some type of graduate education, and working in one of the 'four professions': doctor, lawyer, pharmacist, or engineer. That's Asian-Americans. When you're Chinese, it's even tougher, because you're expected to beat all those other Asians as well and hey, they're smart too. Nobody said those Korean kids were dumb.\n\nNo pressure there.\n\nIn my case, yeah, I'm Chinese. Krystina Wong. Wong. Chinese name. That means, yes, I have Chinese parents, so yeah, pressure. I studied really hard. Mom and dad emigrated here way before I was born. Refugees. They didn't have much of an education where they came from but all that meant was that I was gonna have to achieve everything they thought their kids should aspire to. And I was an only child so I got it full force.\n\nTiger Mom. Tiger Dad. Me. Yikes.\n\nAnyhow, you're probably wondering what all that's got to do with Mr. Montoya bending his star Grade Twelve student over his desk after school finished for the day, flipping her skirt up around her waist and standing behind her fucking the ever-loving Jesus out of her, and yeah, that's what he'd done, and then, well, you read what I did. Then I sat on him and rode him until he came a second time and that's not what your average (or above average) Asian-American Grade Twelve girl does with one of her teachers, is it?\n\nSo yeah, a momentary regression to Grade Nine, when a younger Krystina Wong came home with a form from high school for her dad to sign. Home was actually a big apartment above the Dragon Caf\u00e9. Small town, one main street lined with small businesses and shops and a couple of bars and yeah, the Dragon Caf\u00e9. One of those old two story buildings you find on small town Main Streets everywhere across small town America.\n\nMost of my school friends lived in normal houses or out on farms. Me, I lived with mom and dad up above the Dragon Caf\u00e9. Used to be offices upstairs I think, but when mom and dad bought the old building with a loan from Uncle Wentan back in San Francisco, we moved in upstairs to save money. It was empty, no tenants, and no-one interested, so we lived up there and dad worked away, kind of converting it to somewhere we could live comfortably, bit by bit.\n\nI slept on a mattress on the floor when I was little, but now I had a bed and my room looked sort of like a normal bedroom. Except all the furniture was from moving sales and garage sales and stuff and it was a real mish-mash, but it was home, and there wasn't a mortgage, and mom and dad were doing okay. Everybody likes Chinese food, and mom and dad did a bit more than that.\n\nThey worked the Dragon from way before six in the morning until late night. Small town, only Chinese restaurant and if anybody wanted Chinese food, the Dragon Caf\u00e9 was where they came. Anybody wanted breakfast, like, a real breakfast that wasn't from MacDonald's or the two other takeout places scattered down Main Street, the Dragon Caf\u00e9 was where they came. Pancakes, toast, waffles, bacon and eggs, sausages, ham, whatever. We did it all.\n\nHeading home at night from one of the half a dozen bars scattered down the road, the Dragon Caf\u00e9 was where you stopped for your fries. We were famous for our fries. Big chunky golden fries that tasted delicious, and we made 'em fresh, they weren't the frozen ones. I didn't have to prep them though, we had an old auntie out the back who did that, and she lived with us as well, slept in a room out the back and Uncle Wentan had sent her to us. Illegal, so she came cheap, but she liked it here. My dad did the cooking and mom took the orders. Typical small Chinese family business.\n\nMe, I sat upstairs and I studied, and when I got tired of that, I came downstairs and sat at a table at the back of the Dragon Caf\u00e9, and I studied, and when it got real busy I helped out clearing the tables. That was where I was when I flipped that form to dad to sign. Downstairs in the Cafe studying. This was when I was back in Grade Nine, mind. First year at high school. Easy to embarrass. Self-conscious the way fourteen year old girls are. That's why I always remembered what happened next.\n\n\"What this?\" my dad asked, his voice rising in volume and I knew he'd spotted something he didn't like and I couldn't figure that one because it was nothing but a permission form for a Field Trip. I don't even remember what the Field Trip was. I do remember what my dad said though, because he said it real loud.\n\nLoud enough that everyone in the Dragon Caf\u00e9 heard.\n\n\"What this F for?\" my dad just about yelled, and he wasn't quiet. My dad was never quiet. \"You get F for Sex. F is for Fail. You fail Sex? You no fail anything. You study Sex harder. Next time I want to see A for sex, not F, Krystina. You need tutor to get A in sex, I get you tutor.\"\n\n\"Dad!\" I squealed, blushing bright red, because the Caf\u00e9 wasn't exactly empty.\n\n\"Hell,\" one of the truckers sitting there was looking at me and grinning. \"I'll volunteer, won't charge a thing.\"\n\nHis buddy punched his shoulder. \"She's just a goddamn kid, Marty. Don't embarrass the girl. You know old Charlie don't know much goddamn English.\"\n\n\"No F next time,\" my dad said, signing where he was supposed to sign and he'd have kept on at me but there was an order waiting and the Dragon Caf\u00e9 didn't keep customers waiting. You did, they'd be off to MacDonalds.\n\n\"Sorry kid,\" Marty said after my dad vanished into the kitchen. \"That was a bit outta line.\"\n\n\"That's okay,\" I muttered, my face flaming and I guess we could've turned the lights off and saved some electricity because my face would've lit up the room.\n\nSomeone from high school must've been in the Caf\u00e9 and heard, because next day...\n\n\"I hear you got an F for Sex, Krystina,\" Phil said, and he'd never talked to me before but he was one of the jocks and a senior and everything and I would've died from excitement if he'd talked to me about anything else. \"You need a tutor, you just call me. I'll make sure you get an A.\"\n\nHe wasn't the last and it was about a month before something else took everyone's minds off Krystina's F for Sex but believe me, that embarrassment lasted for years and I never did date, even when I was older and guys asked, because you know, I was the only Asian girl in town so if you liked Asian girls.... \n\nAnd everybody'd heard about my F.\n\nI didn't get over the embarrassment until, well, Mr. Montoya got me over that hump and that was four years later, when I was in Grade Twelve and yeah, I was eighteen. Just. Boy, did Mr. Montoya get me over that hump.",
        "My Grade Twelve was the year Mr. Montoya started teaching at my high school and it wasn't a big high school. A few hundred students, that was all and all the teachers knew all of us and we knew them. But we didn't know Mr. Montoya, and I met him first.\n\nWe'll get to Mr. Montoya and getting over that that hump of course, because this story's about Mr. Montoya and me, and not what happened to me way back when in Grade 9, but there was a reason I was shy with guys, and a lot of it went back to all that shit in Grade 9 over my F for Sex, because it came up every now and then for years.\n\n\"Do you remember when Krystina got an F for sex...\"\n\n\"Remember when Krystina failed sex.\"\n\nThat kind of shit, it's impossible to live down in a small town. Somebody always remembers and crap, I embarrassed real easy. Mom and dad didn't help, because small town, one Chinese caf\u00e9, everybody knew my mom and dad. Everybody came to the Dragon Caf\u00e9.\n\nMr. Montoya came to the Dragon Caf\u00e9 the day he arrived in town.\n\nThat's how I first met him. Summer, just before we all went back to start Grade Twelve. Final Year and I was gonna be the valedictorian that year, my final year, if it killed me. Mom and dad didn't exactly expect it, but I knew it was something they really wanted for me, and hey, I was grateful to them for everything they'd done, all the risks they'd taken to get to America, to start their own business, and just plain work hard, and I knew a lot of that was for me, and I was the only child.\n\nHow could I not do my best to give them what they wanted? \n\nThat summer, I didn't do summer stuff with my friends, and we never went on vacation anyhow. Me, I sat in that booth at the back of the Dragon Caf\u00e9, and I studied like a bitch. Everything. I redid every Grade Eleven textbook and exercise and assignment. I worked my way through the entire Grade Twelve curriculum. In advance. I pored over Grade Eleven and Grade Twelve exam papers. I even did some first year college courses. I studied everything I could lay my hands on.\n\nI studied from seven in the morning until ten at night. My breaks from study were waiting tables and taking orders for mom when she was helping dad, and half the time I was taking orders and doing tables, my head was busy with whatever it was I was studying.\n\n\"Anybody home? Got time to take an order?\" The hand waved in front of my eyes brought me back to reality, because I was just standing there behind the counter, doing math exercises in my head.\n\n\"Uh, yeah, sorry, what'll it be?\" I asked, smiling, because he was the sort of guy you smiled at, even if he was older. \"You passing through?\" I asked. \"I can get it rushed if you're in a hurry.\"\n\nBecause, that smile. Even then, when I'd just seen him, I wanted to please him.\n\n\"Just arrived in town,\" he said, gesturing and there was this U-haul trailer hooked on the back of a truck right outside. \"Hey, you do real Chinese food? Not the gweilo stuff?\" He was looking at the menu on the wall and yeah, Chop Suey, Sweet and Sour Pork, and Lemon Chicken, right at the top.\n\n\"Only for ourselves,\" I said, grinning. \"No other Chinese in town.\" No Asians at all. Just us. Small town midwest. Still like that in a lot of places. \"You know Chinese food?\"\n\n\"Grew up in San Francisco,\" he said. \"Ate Chinese all the time. Sunday dim sum, that's my favorite.\"\n\n\"You'll have to drive about five hundred miles from here to find a dim sum restaurant,\" I said. Honest to god, that was about right. We made dim sum for ourselves though. Sunday mornings. Dad, mom, auntie and me. Early, really early, before the customers started rolling in.\n\n\"What're you doing moving here?\" I asked, because everybody moved out. Nobody moved in.\n\n\"Teaching at the high school,\" he said. \"Wanted to move somewhere like this and there was a position listed, I got it. Start in two weeks. Teaching Physics and a couple of other subjects maybe.\" He grinned, and it was infectious. I grinned back. \n\n\"I'll probably be one of your students,\" I said, because you know, working in a Cafe, you couldn't be shy. Gotta talk to the customers.\n\n\"What grade?\" he asked, curious and his eyes had this sparkle.\n\n\"Twelve,\" I said. \"It's my final year.\" Duh. \"You really want real Chinese?\"\n\n\"Yeah, if the cook can do it.\"\n\n\"The cook's my dad,\" I said. \"He'll do it if I ask.\"\n\n\"Hey, Dad,\" I yelled in Cantonese. \"Got a gweilo out here wants real Chinese food. He's going to be my Physics teacher at high school. How about making a few dishes? Something really nice. I want to butter him up. You know my Physics needs some help. Make some for me too, huh.\"\n\n\"Okay la,\" my dad yelled back. \"I make something good for him. You bet.\"\n\n\"It's coming,\" I said, smiling and the Cafe wasn't busy. Everyone had their meals and no queue. \"Want some coffee or a drink?\"\n\n\"Got Chinese tea?\" he said, hopefully.\n\nI laughed. Pointed at my table at the back. \"On the table there. I'll bring you a cup.\"\n\nBy the time I got there, he was in a seat and leafing through my textbooks. \"Studying?\"\n\n\"Yeah,\" I said. \"Getting a head start. And going back through last year's.\" I sat down and poured him a cup, blinking when he tapped the table with three fingers.\n\n\"Kowtow?\" I asked, surprised.\n\n\"San Francisco,\" he said.\n\n\"Oh, yeah,\" I said, because nobody here would know that one.\n\nSo we drank tea and talked, and he asked a lot of questions, and my dad made about half a dozen dishes, and mom plunked them down on the table after I cleared my books away.\n\n\"Sweet and sour pork?\" he asked.\n\n\"Yeah, it's my favorite,\" I said.\n\nHe grinned. \"So this is a dinner date?\"\n\nI kind of giggled. \"Only if you like a girl taking you out. This is on me.\"\n\nHe made a few noises, and we ended up eating, and yeah, he was hungry alright, and he protested again when I told him there wasn't a bill.\n\n\"It's respect,\" I told him, keeping my voice down so my mom didn't hear. \"My mom and dad are from back there, they respect teachers. There's no way they'll let you pay so don't make a fuss, okay? You'll hurt their feelings. It's their way of showing respect for you because you're gonna be one of my teachers.\"\n\nHe looked at me, then at my mom and, slowly, he nodded. \"Okay,\" he said. \"Just this once, okay. But after this, I pay my way.\"\n\nI grinned. \"You want to pay your way here, you wash dishes.\"\n\nHe laughed. \"Okay.\" And Jesus, he did. He came out back to the kitchen with me and he helped me and aunty wash dishes, and he talked away to my dad.\n\n\"My name's Elijah,\" he said, half way through that pile of plates. \"Elijah Montoya.\"\n\n\"Krystina Wong,\" I said, and we smiled at each other.\n\n\"That is good man,\" my dad said, after he left. \n\n<center> * * * </center>\n\nHe was. He was a good teacher too. And yeah, he taught my Grade Twelve Physics class, and he started coming into the Dragon Cafe, and before too long he was coming round early on Sunday morning for dim sum with dad and mom and auntie and me. I'd get up on Sunday morning and wander downstairs, and he'd be there with my dad out back in the kitchen, and dad would be teaching him to make dim sum, and they'd be talking away. He'd see me and smile.\n\nWasn't too long before I realized I had, like, this total crush on him, and the way he looked at me sometimes, I kind of thought it was mutual, but he was my teacher, and he never said a thing. Not until almost halfway through the year, and that was this Sunday morning he was there when I came down, and him and dad and mom must've got up early because the big table was all set and it was like this dim sum banquet or something and there was a big birthday cake with candles and everything.\n\n\"Happy eighteenth birthday, Krystina,\" Mr. Montoya said, and he handed me a gift-wrapped box and when I opened it, it was this gorgeous cheong-sam.\n\n\"Go change, wear it now,\" my Mom said, all excited, so I did and it was perfect. A perfect fit, and just beautiful, and I sat there and just glowed because he'd bought it for me and my dad and my mom and auntie all looked at me so proudly.\n\n\"I'm going to wear this to the Prom,\" I said, really happy because it did, it made me look beautiful, and I was so happy I almost cried.\n\n<center> * * * </center>\n\nI did cry after my mid-year exam results.\n\n\"You got B in Physics,\" my dad said, looking at my mid-year exam scores. \"Everything else A Plus. That B no good. You need all A's, Krystina.\"\n\nHe shook his head, and I knew he was frustrated. \"Your mom and I no good helping you with Physics,\" he said. \"I get you tutor.\"\n\n<center> * * * </center>\n\n\"This your new Physics tutor,\" my dad said on Sunday morning after dim sum, and Mr. Montoya was there, and he was smiling. \"We talk, Elijah going to tutor you three times a week for rest of year. Tuesday and Thursday afternoon. You stay after school, Elijah tutor you, then bring you home. Sunday, he stay after dim sum, tutor you more. Okay?\"\n\n\"You okay with that, Krystina,\" Mr. Montoya said.\n\n\"Uh, sure Mr. Montoya,\" I said. Was I okay with that? Did a cow moo?\n\n\"You sort out with Krystina, Mr. Montoya,\" my dad said. \"Gotta open up.\"\n\nIt was easy to sort out, really, because he was my Physics teacher at high school and he knew exactly where I was weak. We sat at the table at the back except this time he was beside me, not opposite me, and we were so close we were touching now and then. Every time we brushed against each other, it was like an electric shock and I couldn't help keeping on glancing at him. Every time I did, he was glancing at me.\n\n\"It's too noisy down here. Let's go upstairs,\" I said at last, standing. He'd never been upstairs before and my head was spinning. Mr. Montoya was going to tutor me? Three times a week? I was smiling all the way up the stairs and somehow by the time we reached the top of the stairs he was holding my hand and I had no idea how that happened and I stopped and looked down at my hand.\n\nOur hands.\n\nI looked up at him. He was holding my hand. Mr. Montoya was my teacher. I was one of his students, and we just looked at each other and my heart pounded because I could see the hunger on his face and it was like there was this magnet that was drawing us closer and closer to each other.\n\n\"Krystina,\" he whispered, and there was no need to whisper. Everyone else was downstairs working, and it was noisy down there.\n\n\"Mr. Montoya,\" I breathed, and we were almost touching, and I wanted him to take me in his arms so much, and our eyes never left each other's eyes.\n\n\"Uhhh,\" I gasped, and I had no idea how it happened but one second we were looking at each other, and a second after that his arms were around me, holding me, and mine were around his neck, and I was pressed against him and that crush. Oh my god, in that moment, I knew it was so much more than a crush, and what I hadn't realized was that while I had a crush on Mr. Montoya, he had a real hard-on for me.\n\nLiterally.\n\n\"Uuuuhhhhh,\" I gasped as his hands pressed me tight against him and there was something big and hard pressing firmly against me and I knew exactly what it was. No boyfriend but there were Biology classes, Sex-Ed, and, well, some of the other girls, they did talk and like I said, I knew exactly what it was, and I realized that yeah, he had a hard-on for me, and my knees went all kind of weak.\n\n\"Krystina Wong,\" he breathed, shuddering against me, holding me tight and I wasn't objecting because my arms were around his neck. \"Did I ever tell you how beautiful you are?\"\n\n\"No,\" I gasped. \"No, you didn't.\"\n\n\"You're beautiful,\" he said, and then he kissed me. I'd never been kissed before but it seemed so natural when he did and our mouths were locked together and his tongue was exploring, touching mine, inside my mouth and then I moaned and sucked his tongue into my mouth, and we kept on kissing and kissing and kissing until we came up for air and we were both breathing hard.\n\nWe started all over again. And again. And again.\n\n\"My parents,\" I whispered, between those frantic kisses. \"They're downstairs.\"\n\n\"I don't care,\" Mr. Montoya whispered back, his hands on my butt now, pulling me hard against him and I could feel him, big, really big and really hard. I moaned into his mouth as his lips crushed mine and my mouth opened wide to him. \n\n\"I want you, Krystina,\" he gasped, and I knew what he meant.\n\n\"We can't,\" I gasped. \"Not here. Not now. Tuesday.\"\n\n\"Tuesday?\" he groaned.\n\n\"At school,\" I moaned, and his hands were ruthlessly holding me against him. I clung to him, squirmed against him, deliciously. \"You're going to be tutoring me at school.\"\n\n\"Oh Jesus, Krystina, I want you so much,\" he gasped, kissing me again and again, and I welcomed those kisses. I responded to those kisses.\n\n\"Come into my room,\" I gasped, and somehow I walked backwards without letting go of him and he shuffled with me and we edged into my room and across the floor and somehow we were both on my bed and he was lying on top of me and his weight was the most exquisitely delicious thing in the world and my arms were around his neck, his mouth was on mine, sealed to mine and we kissed, on and on and on.\n\n\"Aren't you supposed to be tutoring me?\" I gasped, and it must've been half an hour later and we'd been holding each other and kissing that entire time.\n\n\"I think I am,\" he groaned, easing himself off me and now he was lying beside me, looking down at me and one of his hands rested on my stomach.\n\n\"In Physics,\" I gasped, and I wanted his weight on me again. I wanted him lying on me kissing me, and then I heard the door at the bottom of the stairs, and I was so glad no-one had oiled those hinges.\n\n\"Someone's coming,\" I gasped, and we both moved like lightning and thirty seconds later I was at my desk and he was kneeling on the floor beside me pointing at some diagram and we were both talking nonsense.\n\n\"Chair for Elijah,\" my dad said, carrying one in. He patted Mr. Montoya on the shoulder. \"Thank you for helping Krystina. Very good of you.\"\n\n\"It's no problem, Mr. Wong,\" Mr. Montoya said. \"She's the best student I have.\"\n\n\"And she's the most beautiful one I have,\" he said as my dad reached the bottom of the stairs and we were looking at each other. Next second I was on his lap, straddling him, facing him and his arms were round me and we were kissing as if we were trying to devour each other, his tongue deep in my mouth one second, mine in his the next, and I was moaning into those kisses, and squirming against him because I could feel him. How hard he was and how good it felt when I was pressed close to him, in his arms, his hands on me.\n\n\"I want you, Krystina,\" he gasped. \"I want you so much.\"\n\n\"Tuesday,\" I gasped. \"I'll stay at school for my tutorial.\"\n\n\"What'll you say to your parents?\"\n\n\"We need the lab.\" My dad would believe that.\n\n\"Okay.\" He was almost crushing me in his arms and I welcomed his strength, the forcefulness of his kisses, his lips crushing mine, although his moustache tickled. \n\nWe never did study that morning. I stayed in his arms and we kissed until my lips burned and then he held me. Just held me and I sat with my head on his shoulder breathing in his scent, savoring being held in his arms, looking forward to Tuesday.\n\n<center> * * * </center>\n\nMonday. Tuesday. I don't remember a thing about those days. I was consumed by thoughts of Mr. Montoya. I sat there, shivering with excitement and anticipation. Monday's Physics class, I sat there looking at him and squeezing my knees together, and I was just about moaning out loud and after class ended, I was the last out of the room and he was looking at me as I walked out. I smiled, and the look on his face, that was my reward.\n\nThat entire last class of Tuesday afternoon, I sat there looking at him and remembering those kisses. Remembering his weight on me. I wanted him to hold me and I wanted to hold him like I had on Sunday and I didn't know what else I wanted but if he wanted to, I would. I knew I would. Everything. Anything. Whatever he wanted.\n\nWith him, I'd do everything.\n\nThe final bell rang, class was dismissed, everyone was filtering out.\n\n\"You coming, Krystina?\" Isabel asked.\n\n\"I'm finishing this before I go home,\" I said. \"See you tomorrow.\" I never did anything after high school anyhow except go back to the Dragon Caf\u00e9 and study. Wasn't like she'd miss me.\n\n\"See ya,\" she said, and then it was just me and Mr. Montoya, and the classroom door closing behind her and my heart thumped.\n\nHe didn't say a word. He sat behind his desk, not looking at me. That was all he was doing. Not looking at me and breathing. Me, I sat at my desk with my laptop open and I was typing, but I had no idea what. We both looked up at the same time and our eyes met. It was like being kicked or something, a physical blow and my breath huffed out of me and I couldn't move. I couldn't say anything or do anything.\n\nI sat there. Waiting for I knew not what, except that I did and my heart was thumping.\n\nHe looked at me and he was so serious. He wasn't smiling and I didn't have any idea what he was thinking. I wished I did and when he stood up, I swallowed.\n\n\"Your dad and I talked,\" he said, hoarsely. \"Your dad said you could stay until seven.\"\n\nIt was only four. Three hours. \n\n\"I'm supposed to drive you home.\" He swallowed and I realized he was nervous. \"Maybe we should study back at the Cafe?\"\n\n\"No,\" I protested, and then I blushed because it wasn't Physics I was thinking of at all. Except, this was a classroom. We couldn't do anything there. Not even kiss. Someone might come at any moment. Another teacher. A cleaner. Another student. \n\nHe stood up and I just looked at him. He held out his hand. \"Come.\" His voice sounded shakey.\n\nI stood, I took my laptop and my bag and walked over to his desk, then followed him through the doorway in the corner behind his desk and I'd always thought it was a closet. It wasn't. It was a small office looking out over the sports fields and when I followed him in, I looked around. A desk and chair. A bookcase. A couple of old posters on the walls. A filing cabinet. A big old rattan day-bed against the back wall with some cushions on it, and he closed the door behind me. I heard a lock catch and when I turned towards him, he was standing there looking at me.\n\n\"I never knew there was a room here,\" I said.\n\n\"I don't think anybody did,\" he said. \"The door was locked and the caretaker didn't have a key. He thought it was a closet. I took the lock off and got the door open and there was this. I haven't told anyone about it. I like it like this, that no-one knows.\" He grinned now. \"It's my hideaway.\"\n\n\"So do I,\" I breathed, smiling as I looked at him. Smiling and shivering and I was so warm and my skin tingled everywhere. Tingled and glowed and I wanted him to hold me like he had on Sunday morning.\n\n\"Krystina?\" he said, and he was looking at me, breathing hard and when I glanced down, it was obvious that he was hard.\n\n\"Mr. Montoya,\" I said, and it came out as more of a gasp and I didn't wonder for a second why I felt like this about him. It just was, and he seemed so perfect to me. Everything about him was perfect.\n\n\"On Sunday,\" he said. \"I shouldn't have.\" But his eyes said he'd wanted to.\n\nI smiled and now I wasn't nervous at all. We were here, together, alone in a hidden room behind a locked door and no-one could possibly walk in on us, and I didn't need to worry about mom and dad downstairs. Him and me, that's all there was here, and we had three hours.\n\n\"You did,\" I breathed. \"For hours.\" I smiled, because it had been, a couple of hours. \"My lips are still sore,\" I said, and I knew my cheeks were pink. \"You should kiss them better.\"\n\n\"Jesus,\" he breathed, and he took two steps across the room towards me and I was in his arms and he kissed me, but he didn't kiss my lips better. He kissed my lips hard, crushing my lips with his, his tongue deep in my mouth, touching and dancing and exploring and tasting. My arms went round his neck and it was as if I was meant to be here, as I was, pressed against him and his hands crushed me.",
        "His hands were large, large and strong and he was so solid and muscular and neither of us said anything as those hands ran over my butt, my back, my shoulders, stroked my hair, returned to press me against him and he was so hard. Big and hard and that delicious shivering heat was back and I was wet. I was so wet and slippery and sensitive.\n\n\"Krystina,\" he breathed, just holding me for a second. \"I want you. I want you so much.\"\n\n\"Yes,\" I whispered. \"I know.\"\n\nI knew he did, and I knew what he meant and what he wanted, and I wasn't nervous or scared. I was excited and there was this anticipation and he was all I wanted. He was what I needed and in his arms, feeling him pressed against me, I knew that.\n\n\"I'm here,\" I gasped, looking up at him. \"I know what you want, and you can have anything you want. You can do anything you want.\"\n\n\"Krystina,\" he breathed. \"Are you sure?\" He actually groaned and shivered against me. \"You're my student, I shouldn't.\"\n\n\"I'm eighteen,\" I murmured, moving myself against him, just a little. \"It's alright.\"\n\n\"I'm your teacher,\" he groaned, but his hands held me close. Pressed me against him.\n\n\"I don't care. I want you too. I want you to teach me,\" I moaned. \"Teach me everything.\"\n\n\"Are you sure?\" he gasped, his eyes looking into mine.\n\n\"Yes,\" I breathed, looking back. \"Oh yes, I'm sure. I'm so sure.\"\n\nHe didn't say a word but a second later his hands began to peel my blazer off me and I helped him and then looked down as he began to unbutton my blouse. He was fast, seconds later my blouse was undone and on the chair and he was fumbling at my bra, looking down at me.\n\n\"Do you always wear a bra? You don't look like you need one.\"\n\n\"I... yes, I do,\" I stammered, flushing, licking my lips and my nipples were so swollen and so firm that they ached. \"I don't really need to, do I?\" I added, not quite panting, but close.\n\nI hesitated, a second, then reached behind my back, hesitated for a second more, and then I unhooked my bra and I knew I'd crossed a line as he watched me slip my bra off one arm, then the other and my nipples were so swollen and firm and he was looking at my breasts and I was naked from the waist up.\n\n\"They're small,\" I gasped, and they were, but his face said he liked them.\n\n\"They're beautiful,\" he said and his hand cupped one, is thumb brushing across my nipple, and at his touch, my knees almost buckled.\n\nI kept looking at his hand on me. Hot against my skin and his thumb kept brushing across my nipple. Brushing back. Every brushing touch sent ripples to my center.\n\n\"Beautiful,\" he said, looking down at me.\n\n\"What?\" I gasped, and I wanted to moan out loud.\n\n\"Your nipples,\" he said, his hand cupping one boob, his thumb brushing across it and I just looked. His hand, it was so big on me where he was cupping my boob, and my boobs were so small. \"They're beautiful. I want to kiss them.\"\n\n\"Uh,\" I gasped, my face burning because I wasn't used to this. A man looking at my boobs, and admiring my nipples. Telling me he wanted to kiss my nipples.\n\n\"Beautiful,\" he said again, and he kissed me as his thumb brushed my nipple and his mouth swallowed my moan and his tongue was deep in my mouth. His other hand found the clasp and zip on the side of my skirt, unfastened it, brushed it downwards, and next second it slipped over my hips to pool around my feet, and suddenly all I was wearing were my white school socks and my cutest panties.\n\nThe white cotton bikini briefs with the little Hello Kitty's.\n\n\"Ohhhh,\" I gasped, acutely aware of my exposure, blushing pink, but I wasn't resisting as Mr. Montoya guided me down and onto my back on that large old rattan day-bed against the back wall of his office hide-away, and he was lying beside me, propped up on one elbow, looking down at me as I lay there.\n\n\"Hello Kitty panties?\" he said, smiling and I blushed, because I knew where he was looking.\n\n\"Mom buys my clothes,\" I gasped.\n\nFrom Walmart mostly, but I wasn't saying that, and my heart was pounding, my stomach was a black hole, and his hand was caressing my boobs, both of them. First one and then the other, teasing my nipples and they both were so swollen and large, aching and when he cupped one boob, I half turned, pressing my boob into his hand and moaning quietly, and he smiled, and then he kissed me again.\n\n\"Take your shirt off,\" I gasped when his mouth lifted from mine. He did, and I watched him while he unbuttoned it and shrugged it off and when he half sat up and sat up myself and fumbled at his belt, unbuckling it. He looked at me and his hands worked his trousers down and he kicked them off. He was wearing boxers and that bulge inside looked enormous.\n\nHis hand eased me back down and now I could feel him against my thigh, hot and hard and his skin pressed against mine, warm, little electric shocks rippled through me as his hand ran over me, exploring, touching, caressing and I lay there looking up at him, melting.\n\n\"Touch me,\" he said.\n\nI looked into his eyes, startled.\n\nHe smiled. \"Touch me, you know you want to.\" His hand left me, he fumbled with his boxers, pushing them down and he kicked them off. I didn't look but I knew he was naked and I felt him against my thigh, hot and hard and my heart wanted to explode.\n\nHe reached out and took one of my hands in his, lifted it towards him. \n\n\"Touch me,\" he said again, and I didn't look. I didn't look as his hand guided mine to his erection, placed it on him, curled my fingers around his rigid girth and I held him. I clasped him and I wanted to look but I was too scared. It felt huge, hugely thick and I didn't want to think about how long it was, how big it was but I knew what my hand was doing.\n\nMy hand held him. Held his cock, and he was naked and I was holding his cock. In my hand. Hard. Hot and thick and big and hard and my heart choked me.\n\n\"I like that, Krystina.\" His voice was low, husky, passionate, loaded with desire. His hand was caressing me and my own desire held me enthralled.\n\n\"Do you?\" I whispered, and I couldn't tear my eyes from his. I didn't want to, because as soon as I did, I knew what my eyes would be examining and all I could think of was that he wanted me and I wanted him.\n\n\"You're beautiful,\" he said again, his hand leaving mine clasped around him, hot and hard and thick under my fingers and I continued to hold him and his hand circled on my stomach and I was naked naked except for those panties and his hand slid down to cup my sex through my panties.\n\n\"Ohhh.\" A man's hand. Mr. Montoya's hand, touching me, and I was so sensitive and so hot and wet, and my knees fell apart.\n\n\"I love those Hello Kitty panties,\" he breathed. His finger pressed the cotton of my panties inwards between my labia, sudden harsh friction and I knew he could tell how wet I am, because my panties were wet.\n\n\"Ohhhhhh,\" I sobbed, and my fingers were clasped around his cock.\n\n\"I'm hard because of you, Krystina,\" he breathed, his finger pressed against my slit. \"You're so gorgeous.\"\n\n\"I'm not,\" I moaned. \"I don't know what to do.\"\n\n\"You know what I want don't you?\" Mr. Montoya breathed, and the heel of his hand presses hotly against my tummy and his fingertip is where I was so wet and it curled and pushed, curled and pushed, delicious friction and I wanted to take my panties off for him but I couldn't move, I couldn't let go of his cock....\n\n\"Yes... yes...\" I knew. I knew exactly what he wanted and that was why I was in here, on his daybed, wearing only panties and my white knee socks and holding his cock in my hand. I knew exactly what he wanted and it was his to take. I looked up at him and he read my face, he knew and that smile, that look, I knew that he knew and he knew that I knew that he knew, and his hand lifted and slid inside my panties and his hand was on my sex.\n\nTouching me. Touching my sex, and I was wet, wet and ready and hot and liquid where his fingertip pushed inwards, and I opened to him, his digit probed inexorably up inside me, his hand cupped my sex beneath my panties, and I shuddered as his finger pushed up inside me, exploring.\n\n\"Ohhhhhhh.\" His finger caressed my channels walls inside and my hand clasped his cock and without thinking, because all I could think about was his finger inside me and his hand on my sex, I began stroking him slowly, and he was huge and now I was scared. Scared and excited because his finger was inside me and what I was stroking was so much bigger than his finger and I knew what he wanted, and I knew what I wasn't quite sure I wanted now, but I wasn't going to stop him.\n\n\"Ohhhhhhh.\" I knew that, and his hand was so good, and I wanted to spread my legs wide and my knees parted and I guess my face was telling him I was hooked. Hooked on his finger and I was so wet on him, his hand was wet with me and he had me where he wanted me. He didn't need to say where he wanted me. We both knew.\n\n\"Do you want to take your panties off for me?\" he breathed, and his face told me that he wanted me too and somehow he brushed my clitoris with his thumb so that my sex spasmed on his finger and my body shivered with delight.\n\n\"Nnnuuhhh,\" I half-moaned, half-whined and I wanted to take my panties off, and I didn't want to let go of his cock, and I was melting on his probing finger and I wanted to move myself on his hand. I wanted to rub myself on him, I wanted that touch on my clitoris to keep touching me. \n\n\"Ohhhhhhh.\" Like that. Oh yes... yes... like that... like that.\n\n\"Ohh... ohhhh Mr. Montoya... ohhhhh... ohhhhohhhhhhh,\" and I shivered through a little orgasm that just rippled through me, leaving me limp and glowing and wanting more because his touches, that feather-light brushing of his thumb, his finger inside me, none of that stopped and he was so big and hard in my hand and I knew where it should go and now I stroked him, slowly, almost but not quite moaning, and I knew it was going to happen.\n\n\"Take your panties off for me, Krystina,\" he breathed again, reminding me, his lips brushed mine and I knew if I wanted more, I was going to have to. It was his way of making sure I really did want him. I didn't hesitate. I didn't let go of his cock. My free hand began to work my panties down, down to my upper thighs, mid-thighs, wriggling on his finger and my sex spasmed and danced with every movement of my hips.\n\n\"Ohhhhh,\" I moaned. \"Ohhhhh,\" and I was almost frantic now. As soon as my panties were down to my knees I drew one leg up, freed my foot and dropped my leg, limp with heated desire and with excitement, and his cock was rigid in my hands, a steel bar. My fingers stroked his length, ran over him and I wanted... I wanted.... \n\n\"I want to see you,\" I gasped, and he knew what I meant. He smiled.\n\n\"Look,\" he said, half easing onto his back, his finger sliding out and I shuddered at that loss but I wanted to see and I slid up and over, leaning forward over him, my hand holding his cock so that I could look, and I could see him now. All of him. His erect cock jutted hugely outwards from my hand, and my hand held barely a third of his length, and it looked enormous.\n\n\"Oh,\" I said, very weakly, because it was so long and so thick. Longer and thicker than I'd imagined a man's cock could be and I hadn't done that except on Sunday and Monday and today and now it was here, looking me in the face and I examined it carefully, not quite hypnotized but definitely fascinated and excited.\n\nMr. Montoya knew what that sight was doing to me. He looked at my face, then down at his cock and he smiled, stroking himself slowly with one hand, displaying himself to me and I couldn't tear my eyes away from him. Huge, rigid, jutting up and out, enormous, and my sex pulsed hotly, and all I could do was gaze at that enormous cock and his balls.\n\n\"Come back here, Krystina.\" He smiled as I obeyed, lying back on the day-bed and now I felt exposed and vulnerable and he looked down at me, his hand circled on my stomach, ran down my hips to my thighs, then to my inner thighs and he eased my legs further apart and he looked at me. I knew what he was looking at and his cock rested on my thigh now, huge. Hard. Ready.\n\n\"You know exactly what I want, don't you, Krystina,\" he said softly, his hand caressing my inner thigh and my sex was swollen and wet with liquid heat. If he touched me there, I knew I'd scream from sheer excitement, and I knew what he wanted.\n\n\"Yes,\" I gasped, my hand searching for him, finding him and I clasped my fingers around him and stroked him, heart pounding as I tugged gently at him and he responded, moving. He moved up and over me, one of his knees slid between mine, then the other and one hand urged my knees to part as he moved over me and looked down at me and my hand held him, stroked him and my heart thumped and pounded.\n\n\"You know what to do,\" he said, looking down at me.\n\n\"I don't.\" My gasp was desperate. \"I've never done this before. I don't know what to do.\"\n\nHe smiled, his lips brushed mine, his hand gently pushed my knee wide and back and my other knee followed and his thighs moved, pushed against the backs of mine, his eyes stared down into mine.\n\n\"Here.\" He reached down, his fingers clasped mine on his girth and he was so hard and so thick, my finger and thumb didn't meet around him. \"You know what to do,\" he said. \"You know where it goes.\"\n\nI looked up at him and I held him in my hand and I did know what to do. His hand moved mine so that I was stroking his cock, slowly and he kissed me. His lips brushed mine, his tongue touched me, a wet flicker and my mouth opened, slowly, then all the way as his mouth possessed mine, gently, his tongue teased mine.\n\nThis wasn't like those kisses back in my bedroom above the Dragon Cafe. These kisses were slow, gentle, teasing, his lips brushed mine, his tongue slipped into my mouth, tasted, flirted, teased my lips, slowly morphing into that open-mouthed kissing, our lips sealed to each other's, his tongue deep in my mouth, my tongue in his as we sucked at each other, surrendered to each other, our tongues danced together, tasted each other and time slowed, that kiss and his rigid cock in my hand, his body over mine, my excitement, my exposure to him, that was everything.\n\nHis lips, the texture of his tongue, the taste, that shared saliva and his scent and his taste and his mouth intoxicated me, the silky smoothness of his muscles against my skin, his size, the sleek power of his body, wide shouldered, slim hipped, his nakedness and mine and I knew I was surrendering myself to him, I knew that as I kissed him while my hand clasped his length, stroking him as his hand engulfed mine and he didn't guide me. His hand was reassuring, exciting me and his cock was rigid, hard as steel, huge in my clasp and there was no thought of stopping him.\n\nThere was a tinge of fear, a dread of the unknown, the fear of doing the forbidden and then there was that overwhelming excitement and I was so hot. Molten wet heat at my center, and I was so wet for him, swollen and slippery and ready for his taking and I was moaning into his mouth as he kissed me and I knew what I wanted to do.\n\nI knew what he wanted to do.\n\n\"Krystina,\" he smiled, his mouth lifting from mine. \"Krystina.\" He lifted himself a little, he looked down at my delicate olive-brown fingers, small and delicate beneath his hand, so tiny on his massive shaft where I stroked him. \"Krystina.\"\n\nI didn't say a word. I looked down, looked down at that massively long and thick cock I held in my hand and I watched my hand stroking him, looked at that huge cockhead pointing up at me. I watched as his hand cupped my sex, and his hand was so big on me. Huge, covering me, and his finger pushed into me, huge and thick.\n\n\"Nnnnhhhhh,\" I whined, biting my bottom lip as his finger penetrated me, slid up inside me.\n\n\"So tight,\" he breathed, looking down at me, and he didn't wait for a reply, his head sank down, his lips seized on one of my nipples, drew on it, tugged.\n\n\"Ohhhhh.\" My back arched. My free hand clutched at his head as I pushed my boob into his mouth. His finger was inside me, his thumb brushed my clitoris, again and again and now my mouth was wide open. I wanted to scream but I couldn't. If I screamed the way I wanted to, someone might hear us.\n\n\"I want you now.\" His hand closed tightly over mine where I was still stroking him. He guided his cock towards my sex, and my heart was pounding. Thumping. His cock was huge and now I was scared. Scared and excited, and his cockhead brushed my sex, and I shivered in response. I knew it was going to happen.There was no stopping now. \n\nMr. Montoya was going to make love to me.\n\nA montage of thoughts rushed through my head in that second where his cockhead brushed against my sex and I felt myself part for him. Fear, mostly, because I'd never, and I'd heard the other girls, and they all said different things. That it hurt. That guys were rough. That they used you. That it was exciting.That they really liked it. That they didn't. I didn't know what it would be like, and I was scared, but scared or not, I wanted it. Wanted him.\n\nHis cockhead brushed against my sex, where I was hot and wet and slippery. Where I wanted him, and his hand held mine on his cock, he rubbed himself gently against me, and his cockhead was huge there. I'd never imagined it being that big. Thick and round, and his cock in my hand was so big, so long. Would it fit? Would it hurt? Would it...?\n\n\"Krystina.\" His voice was low, husky, filled with desire. \"Move your knees back for me.\"\n\nHesitantly, timidly, fearfully, I did as he wanted me to do. I drew my knees back, my feet lifting into the air, and as I lifted my knees, exposing myself, offering myself to him, his thighs spread wider, pushing against the back of mine, holding me open for him, and my hand continued to hold him against my sex.\n\n\"Further back, Krystina,\" he murmured. \"Move your knees further back, as far as you can.\"\n\nHis hand left mine holding him, and now his fingers guided one knee gently back, further and further, my other knee automatically following suite, until both my knees were clasping his ribs, my feet brushing his hips, open and exposed him,and I'd never felt more vulnerable, more helpless that I did in that moment as I offered myself up to him, gazing up into his eyes, my heart pounding wildly.\n\nMy sex pulsing hotly, and I was scared of what was about to happen, scared of what I held clasped in my hand would do, but my sex wasn't. My sex wanted him, and I was so wet, so sensitive as he pushed against my clasping fingers, brushed his cockhead against me, exquisite friction where he parted my labia a little, and pushed up against my entrance, and he was steely hard beneath my fingers.\n\n\"Mr. Montoya, I've never...\" I gasped, and I was scared. Scared and excited, because it was going to happen, I knew it was.\n\n\"Krystina, I know,\" he breathed. \"I know you haven't,\" and his lips brushed mine, his hand brushed my hair back from my forehead as he kissed me so gently, his tongue exploring my mouth, sliding against my tongue, and it was my hand that held him against my sex. It was my hand that moved his cockhead against me, just a little, and I was gasping, burning, alive, everywhere so alive, my sex so wet and my clitoris so sensitive, and I wanted him as he kissed me again and again.\n\n\"Do you want to be mine, Krystina?\" he breathed, kissing me again and again, one arm under my shoulders,his body on mine. His naked body on my naked body, his cock hard in my hand as I lay beneath him, and I knew. \"Really?\"\n\n\"Yes,\" I murmured, my eyes looking up into his, and my lips welcomed his kisses, as my sex longed to welcome him within me.\"Yes...\"\n\nHe smiled, he kissed me, he moved, pushing against my hand where I held him. Where I guided him, and his cockhead pressed hugely against my entrance. Pressed firmly, and my eyes widened as he stretched me there, and his cockhead was huge, so much bigger than his finger, and I had no idea how it would fit in me,but I did know the theory. It should, but that was theory, and what we were doing was reality.",
        "\"Uhhh,\" I gasped, my back arching a little as his hand reached down between us and removed mine, and he pushed. He didn't slide into me. He pushed, and my eyes widened as I felt myself stretch.\n\n\"Uhhhh.\" Open.\n\n\"Nnnhhhhh.\" Big, he was so big, and he pressed hugely against me, a steady relentless pressure that forced me to open to him, and he pushed and pushed and pushed, and slowly, so slowly, my body surrendered to him, and I knew it was going to happen.\n\n\"Nnnnuhhhhhh.\" My head jerked back, my mouth worked, my back arched, my knees clutched at his ribs, and a good Chinese girl would have stopped him long ago, but I didn't want to be good. I wanted to be his, and I was going to be. I was going to be. I was...and his hands moved, took mine, his hands pinned mine to the daybed above my head, just as his weight pinned me beneath him, and he wasn't stopping.\n\n\"Nnnnnnhhhhh.\" I was stretching. Opening to him, and I knew it was going to...he was going to... \n\n\"Ohhh... oooohhhhhh.\" My back arched, my head arched back, my hands clutched at his, and I juddered beneath him as his cockhead entered me and paused, inside me, and it was big. Big, and he's stretching me around him, I can feel him there, forcing me to shape to him,and when he eased back a little, his glans tugged at me there, where I clasped him, a gentle movement that sent little ripples rolling through me.\n\n\"Krystina,\" he groaned, and I felt him shudder, felt him tense as he looked down into my eyes, his nose brushing mine, and then he kissed me and he moved, his cock moved, inside me, gently thrusting, pushing, forcing higher, stretching my channel walls, and I felt him inside me, so big, so thick, thrusting, sliding, exquisite friction at the juncture of my thighs and where he entered me.\n\n\"Ohhhhh,\" I sobbed. \"Ohhhhhh,\" and I was alternately limp and tense beneath him, relaxing as he eased back a little, tensing as he thrust himself back inwards, again and again, slowly, gently easing himself deeper and deeper inside me, I was waiting for it to hurt, but it didn't hurt at all, and it was feeling better and better, more and more exciting with every movement he made.\n\n\"Tight, Krystina,\" he groaned, kissing me, his lips butterflying across my face as my mouth opened wide and my lips sought his. \"You're so tight... I want you... I have to...\"\n\n\"Ohhhhh,\"I groaned, my knees clasping his ribs,my heels riding the small of his back as his butt rose and fell, as his cock eased in, eased outwards, pushed inwards once more, huge in me, new in me, and nothing had prepared me for this. \n\n\"Ohhhhh.\" This penetration within my body, this male weight on me, spreading me wide, entering me at the juncture of my thighs, filling my sex with his rigid hardness, and I welcomed him. I wanted him. I wanted him to take me, possess me, fill me where I was made to be one with him, and I wanted to be one with him. I wanted everything he had to give me.\n\n\"Yes... yes, Mr. Montoya... yes...\" and I knew I was. I was taking him, we were making love, and his cock was pushing deeper, not pausing, sliding in and out of me, steadily, again and again, and he was taking more of me with every movement, and I was so hot and wet and slippery tight on him, his cock sliding thickly against my channel walls, sliding against me where I clasped him so tight where he entered me.\n\n\"Krystina... Krystina...\" He breathed my name as if was some magical spell, his eyes looked down into mine, and it was as if he was possessing my mind as he possessed my body, and he was possessing my body, pressing higher inside me now, and his cock was huge inside me, huge and long and penetrating so deeply. Impossibly deeply.\n\n\"Ohhh... ohhh... ohhhh.\" I sobbed with every movement of that rigid, steely hardness. Impossibly hard, and he was stretching me everywhere inside now, stretching me where our bodies joined, and the sliding friction of his movements was exquisite, and then he was pressed up against me where we joined, straining against me, crushing himself against my sex and my back arched upwards, my knees clutched at his ribs, my feet kicked helpless in the air, and he was all inside me,his cockhead so deep and high within my body, and it seemed impossible that he had, that I had, but he was all inside me. I'd taken him. I was his.\n\n\"You're mine, Krystina.\" His lips brushed mine, his mouth possessed mine, and we were one, joined, and I knew I was his. Knew I wasn't a virgin anymore. Knew he'd taken me, and I could feel him, inside me, filling me, his cockhead so high in me, and his slow movements told me we were only starting, and I wanted everything, all the way to the end.\n\n\"I am,\" I moaned. \"I am... I'm yours.\"\n\n\"Are you..? Did I hurt you?\" he breathed, and now he held himself still inside me, and my sex was adapting to him inside me, where nothing had ever been, and I wasn't thinking. I was feeling. I was experiencing it. I was living my surrender to him, his weight on me, not crushing me, but pressed against me, everywhere, overwhelming me with sensation. With pleasure.\n\nMy thighs cradling him, my knees clutching at his ribs, my heels rested on the small of his back, my boobs pressed against his chest, my hands pinned to the daybed above my head by his, the daybed so firm beneath me, and overriding everything, there was that fullness, that rigid steely presence inside me, inside my body, filling my sex, telling me that I was his. His to make love to. His to take. His to enjoy, and I wanted him to enjoy me. I wanted him to everything me.\n\n\"I'm fine,\" I gasped. \"It doesn't hurt... don't stop... please don't stop.\"\n\n\"I won't, Krystina,\" he breathed, and his lips brushed mine. \"You're mine now. You'll always be mine.\"\n\n\"Yes,\" I moaned. \"Yes,\" and I wanted nothing more than to be his, always, as he began to move inside me. Move on me, and he eased his cock in and out, in and out, drawing back, thrusting into me until all of him was inside me, and he was pressed against me, and then he did it again. And again. And again, and with every movement my breath puffed out, my back arched, and I gasped, I moaned, I sobbed, I juddered, and my hands clutched at his where they pinned mine to the daybed above my head and I was his, I knew I was his.\n\nI was there for him, there to give myself to him, and I have, and it was good. It was so good as he moved inside me, his cock sheathing itself inside me, sliding out, sliding in, exquisite sensation where he entered my body, the thick friction of his movements sending wave after wave of pleasure rippling through me, pooling at my center, a pool of molten need and excitement that was growing with every thrust of him into me.\n\n\"Can I, Krystina?\" he groaned, and he didn't stop moving. In me. On me.\n\n\"Yes... yes,\" I sobbed, and I didn't have any idea what he was asking, but it didn't matter. Whatever he wanted, I knew I'd say yes to.\n\nWithout saying a word, he began to move a little faster, a little harder, and now he went deep on each stroke, easing all the way back, thrusting in until his pelvis hit my clitoris at the end of each in-stroke, and every time he did that, another surging rush of sensation rushed through me, and I wanted more. I needed more.\n\n\"Harder,\" I moaned. \"Harder,\" and my body was tingling, burning, on fire, and he did. He moved faster, he gave me harder, picking up speed, long full thrusts that gave me all his rigid length in one long thick slide after another, that left his cockhead high and deep within me, again and again, and my body was alive with sensation. Alive with pleasure. A pleasure that his body moving on mine fed, and I was sobbing, moaning, crying out with every movement, so aware of my own body in a way I'd never been aware of myself before.\n\n\"\"Ohhh... ohhh... ohhhhh.\" His weight on me, his skin against mine, everywhere. My thighs spread wide, cradling him as I took his thrusts, and that molten heat inside me was bubbling, coming to a boil, demanding more. Wanting more, needing more, and I wanted to move on him, craving those thick slides, craving the friction of his movements, my skin slippery with sweat, my sex so wet that every movement brought those wet sounds that I was hearing for the first time.\n\n\"Uhhhhh... nnhhhh... hhuuunnnhhh...\" Those sounds I made were unintelligible, not words but raw emotion and pleasure, escaping me without any thought as my body reacted, and I knew this was what my body was for. For this. For Mr. Montoya to make love to. For him to use me as woman's body was made to be used, and I crossed my ankles behind the small of his back, and I did my best to move myself on him, pulling myself onto him, squeezing him, enjoying those groans of pleasure that escaped him, because it was me that was causing those hoarse sounds to escape him, and something was close.\n\nSo close, rising inside me. Something huge and inescapable, taking away thought, taking everything away except him and me and that need to find out what it was. Pleasure. Excitement, it was indescribable, and I was close. Close, and every movement of his inside me and on me brought me closer, and he kept on. On and on, his movements more urgent now. Urgent and relentless, and somehow I knew there was no stopping him. No slowing that urgent need, and soon I'd know. Soon.\n\n\"I have to,\" he groaned. \"I have to,\" and I had no idea what he was talking about, but his movements became suddenly harder and faster, and I knew he wasn't making love to me now. He was fucking me, and inside me something crested high, and began to break.\n\n\"Ohhh... ohhhhhh... ohhhhhhhhh.\" My sex danced on his cock. Spasms and clutches and squeezes and that tidal wave of ecstasy lifted me up, and I was clutching helplessly at his hands where they still pinned mine to the daybed as my pleasure overwhelmed me, a golden rushing tide filling me from the tips of my toes to the ends of my fingers to the tips of my ears and it was so good I wanted to scream, but all that came out were choked off little sobs as I climaxed, my feet beating helplessly against the small of his back, and he didn't stop. \n\nNot for a second, and seconds later, I climaxed again, even more helplessly, and my body was his. Completely his, and I knew that, and he did too.\n\n\"Krystina,\" Eliijah grunted, and I groaned and jerked beneath him as he pushed harder, pushed his cockhead half an inch deeper and I took it, took all he had to give me, and in that moment, I was nothing but a tight slippery hot sheath clasping that big hard cock inside me. and he started to move while that second climax washed through me and I wanted it so bad, and it was going to be soon. Somehow I knew he was coming to his culmination, and I was groaning. I was, and I wanted him to finish, I wanted to find out,to experience, and I didn't care that he wasn't using any protection.\n\nI wanted him to finish in me so bad.\n\n\"Uhhhhhhhhh.\" He groaned, a long low groan of pleasure, holding himself deep inside me, pressed up hard against me and his cock penetrated me so deeply. Rigid, thick, hard as steel, his muscles tensed against me, his muscular body heavy on me, his size and raw male power dominated my senses. His cock throbbed, a deep pulsing throb that I felt pulsing against the walls of my channel and then he humped himself hard against me, into me and he began to climax. Inside me, and when it happened, I knew.\n\n\"Ohhhhhh.\" My head arched back, my back arched, my eyes widen and my mouth was a round \"O\" and I would've screamed out loud except that the sensation as I took that first jetting spurt of his semen within my sex overwhelmed me, and there was nothing else.\n\nOnly his cock, throbbing inside me as he spurted that first thick hot jet of his semen out inside me, reaching his culmination within me, and it was only the first. Only the first, and I knew this was what I was for as I took the next. And the next. And the one after that, as his cock throbbed and pulsed inside me, on and on until he was finished, and I shuddered convulsively beneath him as our bodies relaxed, suddenly limp in the aftermath of our mutual pleasure, and I would have smiled if I could have stopped panting long enough.\n\nMr. Montoya smiled down at me and he was still breathing hard. Me, I was lying beneath him, his weight on me, spread wide for him, and I shuddered and quivered and whimpered and clutched at him as my body shivered through the aftermath of that orgasmic climax and I couldn't believe how good that felt. I was just glowing as my sex danced and spasmed on his cock, knowing he'd finished inside me, flooding me, and my knees were still clamped to his ribs and my hands clutched at him and he'd made love to me and I couldn't believe it could be so good.\n\nLying beneath him on that daybed in that little office at the back of his classroom, I knew I'd found paradise, and paradise was Mr. Montoya making love to me. Paradise was Mr. Montoya's body, naked against mine, his lips brushing mine, his cock inside me, and he'd finished inside me, and there was that unfamiliar wetness, that slow pulsing throb of him where I still clasped him, and he had.\n\nHe'd really made love to me. He was over me, his face looking down at mine, his weight heavy on me and my legs were spread wide for him, cradling him, and he was still inside me, still big and hard and I could feel him in me and I wasn't a virgin anymore and my sex spasmed on him and he'd finished inside me and I knew, I just knew, I was so fucked. Completely fucked and I loved it. I loved what we'd done. I loved that he was the one that had done it to me.\n\nI wanted to do it again.\n\nLooking up into his eyes, his naked body pressed against mine, I loved him so much and I wanted to do this with him again and again and again. I wanted him to teach me everything and I didn't care that I was lying on an old daybed at the back of his school office. I didn't care that it wasn't the most romantic place to lose my virginity in. All I cared about was that Mr. Montoya had done it with me, he'd made love to me and I lay beneath him, just looking up at him and I'd never done anything like this before and I didn't just like it. I loved it.\n\n\"I'm going to give you a homework assignment, Krystina,\" Mr. Montoya said, kissing me. A long slow kiss that went on and on.\n\n\"Huh?\" I said, at last, kind of wondering what sort of homework assignment you could be given for something like this.\n\nHe smiled, and that smile was wicked. Wicked enough that little thrills ran through me. \"For our Thursday afternoon tutorial session,\" he said, \"I want you to decide what position you'd like me to make love to you in.\" \n\nHe grinned. \"Now we better get dressed and do some physics. Your dad's paying me to tutor you, so we better do some.\"\n\n\"Yes, Mr. Montoya,\" I said, and then there was that moment of loss as he eased himself out from inside me, and I felt suddenly empty, as if part of me had gone. It was the first time I'd felt that loss, and I wanted him to hold me close, and he knew. He did, his arms around me, turning me to him, so that now he was on his back and it was me lying half on him, my head on his shoulder, breathing in the scent of his sweat and of our love-making.\n\n\"I love you, Mr. Montoya,\" I whispered, almost inaudibly, and I don't know if he heard me at all, and I didn't say it again, but I did. I loved him so much. I loved his body against mine. His arm around me, his hand on my butt, his other hand brushing my hair back, and there was that momentary puzzle as I felt myself so wet on his thigh, and then I realized what it was.\n\n\"Uh...\" I said, half sitting up, looking at myself, and that must be his semen, and there was blood there too, and I wasn't afraid or startled, I was curious, watching his semen trickling from me, seeing myself there, puffy and a little swollen, beads of his semen in my pubic hair, what there was of it.\n\n\"Here,\" he said, handing me a wet wipe, and I smiled and took it, and I wasn't embarrassed at all when he took another one and helped me.\n\n\"There's a lot of it,\" I said, watching, because there was more oozing out, and I watched as he wiped it up, delicately.\n\n\"Mmmmm,\" he said, then, \"are you using any contraceptives, Krystina?\"\n\n\"No,\" I said, and I hadn't even thought about it, but we hadn't used any protection,and for a moment, I thought about having his baby, and I looked at him, and half-opened my mouth to say so, except that he smiled and touched my lips with his finger, and I was sure he knew what I'd been thinking.\n\n\"We'll deal with that on the way home,\" he said. \"Let's get dressed now,\" and he helped me find my clothes, as well as his, and while I was dressing, and he was watching me, I was already thinking about Thursday after school. I'd do some serious research tonight and I did like it that Mr. Montoya took his tutoring so seriously. My Dad always said if you took a job on, you should do it well and, well, I felt extremely well done. Someone had done a good job this afternoon.\n\nI knew I was going to take my homework seriously. My Dad was paying Mr. Montoya to tutor me, and I was going to make sure my Dad got his money's worth. Mr. Montoya had a job to do and me? I was going to do everything I could to make sure he did that job well.\n\n<center> * * * </center>\n\nThat all happened four months ago now, and yeah, for the last four months I've been tutored by Mr. Montoya in his little office off of his home room at High School twice a week. Sometimes I wish we could go to his house, or we could spend the night together somewhere, or even just date like a normal girl and her boyfriend and, you know, make out in his car or something, but with my parents, and him being a teacher and everything, we can't do that because someone might see us, and I'm still one of his students.\n\nHis little office at High School, nobody at all knows about it. It's always locked and not even the cleaners go in there, because Mr. Montoya changed the locks to make sure, and when we're in there, it's like we're in our own little room. He has some rugs on the floor now, and there's some cushions and even a duvet for if it gets cold, and we can do whatever we like in there, and we do, and no-one knows.\n\nMy parents don't mind at all that my tutoring sessions are much longer than they're paying for. They think they're getting value for money, and they're not wrong. Mr. Montoya really is tutoring me in Physics, and he takes his job very seriously. I know I'm going to ace those end of year exams. He tutors me in our other subject even more intensively, and I know that by the time I graduate, I'm going to ace Mr. Montoya's final exam in that subject too.\n\nSo yeah, that was how I ended up four months later in Mr. Montoya's office behind his classroom seated on him, with his cock buried inside me and my sex full of his cum and wearing nothing but my white school socks and my white school blouse hanging open, and my skirt round my waist and just glowing.\n\n\"High School's nearly over, Krystina,\" Mr. Montoya murmured, brushing my hair back from my sweat-soaked forehead. He smiled and then he tilted my face up and kissed me gently, a slow brush of his lips against mine. \"You're going to ace Physics.\" He chuckled. \"You're going to ace everything, and you won't be getting an F for Sex either, that's for sure.\"\n\n\"What?\" It came out as a moan rather than a squeal. \"How did you know about that?\"\n\nHe smiled, his lips brushing mine. \"A Plus,\" he said, and his cock was moving inside me, swelling, getting harder and I felt it inside me.\n\n\"Ohhhhhh,\" I moaned, my eyes widening. \"Do you want to tutor me some more?\"\n\n\"You bet,\" he breathed, and he was as hard as he was when we started now, and my sex did a little dance on him and my back arched. \"Your parents are paying me to tutor you, Krystina. I'm a tough tutor, you know that, and you're going to study hard under me for as long as I'm your tutor..\"",
        "\"I will,\" I whispered. \"You know I'll study really hard,\" and I was enjoying the look on his face and the way he was breathing faster and then I said \"uuhhhhh\" because he lifted me and lowered me into my back on the rug and he moved with me, still inside me and now he was on me and I loved it when he made love to me like this, and I just sighed with pure happiness.\n\nHe moved in me now, in and out and then in again, hard, and my sex made these wet wet noises as he filled me and his cockhead was so deep inside me and it was so good when he moved and he stretched me around him inside all over again with every thrust and I loved his weight on me, heavy on me, his body possessing mine. I loved studying under Mr. Montoya, although I didn't mind being on top either, or on my hands and knees, or however he wanted me, really.\n\n\"I bet you like this tutoring job.\" I wanted to giggle but it came out as more of a long moan because he was sliding up so deep inside me and that thick penetration made my toes curl and my back arch as he filled me.\n\n\"You know what I really like, Krystina?\" he breathed, kissing me again as he pressed up hard against me where we joined and I squirmed under him, I did, because I wanted all of it.\n\n\"Tell me,\" I murmured, offering him my mouth and he took possession of it for a long moment the same way he was possessing my body. Completely.\n\n\"It's not the tutoring job. It's you, Krystina Wong. I really like you.\" He didn't smile, and I didn't either because he was moving in me, sliding outwards, slowly, until just the head of his cock was inside me and then he was easing in again, just as slowly, stretching me around him as he thrust deeply inwards in a long slow slide that had me shuddering with pleasure.\n\n\"I really like you, Elijah,\" I said, except that I knew it was more than like. It was love, and I wanted to say that, but I wasn't sure what he'd say if I said that to him. \n\n\"We better start studying physics soon, though. My parents would be really disappointed if I didn't get everything they're paying fuhhhhhhh... uuhhh... uhhhhh.\"\n\n\"Oh, your parents will get their money's worth,\" he murmured, smiling as my back arched again and my knees clamped against his ribs while my feet beat a wild little tattoo against his hips and my fingers clawed at his shoulders. \"Everyone thinks tutoring students is work, but sometimes it's not just work, it's a real pleasure and I'm going to work with you until you get straight A Plus's.\" He smiled. \"For sex as well as everything else. No more F's in sex for you.\"\n\n\"You won't stop, will you?\" I moaned. \"After I graduate, I mean.\"\n\n\"Your parents won't be paying me to tutor you after high school ends and you go to college,\" he said, pausing inside me, holding himself still and I wanted him to keep moving in me. On me. Doing me. \"We wont be able to meet like this, so I guess it won't be sex on the job after that.\"\n\n\"Don't stop,\" I gasped. \"Please don't stop meeting me.\"\n\n\"I won't, Krystina.\" He kissed me, and he moved inside me, so slowly. \"I won't ever stop, but it won't be work.\"\n\n\"You won't? It won't?\" I moaned, shuddering as his hand slipped under my butt and held me, and he was moving steadily now, and my excitement was soaring, and his cock moved and stroked and slid and thrust inside me, and my sex made those wet noises on him, but I wasn't embarrassed now.\n\n\"No, it'll be love,\" he murmured, and his eyes looked into mine and he was making love with me now. \"When you go away to college, I'll come with you if you want me to, Krystina, my little love.\"\n\n\"Uhhhhh,\" I groaned, and my heart wanted to explode with happiness, because there was that moment when I knew he wasn't just enjoying me, he was making love to me, and I wanted him too, and I wasn't a schoolgirl fantasy for him. I was his reality, I was his, and he was mine and yeah, he was still my teacher, and I was still one of his students, and this was sex on the job for him, but we'd make sure no-one found out for the next few weeks, and after I finished twelfth grade everything would be fine.\n\n\"No more talking,\" he said. \"I want to fuck you now.\" He grinned. \"Gotta give your Dad his money's worth while I'm working for him.\"\n\n\"Work me hard,\" I moaned. \"It's your job to help me study hard, and my Dad wants me to get straight A's in everything, and I want to study really really hard.\"\n\nAnd then I didn't talk anymore, because Mr. Montoya did. He started working me really hard, and and my Dad was getting his money's worth all right, and when Mr. Montoya brought me to that first climax I thought I was dying and Mr. Montoya had to stuff my new g-string panties into my mouth again to muffle my screams because we were at high school, and he didn't want anyone to hear me and neither did I except I couldn't stop myself because it was so good and when he came inside me and I climaxed a second time, it was even better.\n\nAfterwards, lying in his arms, I just closed my eyes and held him, trying not to think because the school year was almost over. A few more short weeks, final exams, summer, and then I'd be leaving town for College, and Mr. Montoya wanted to come with me and I didn't want to leave him behind. I wanted him to come with me, and I was sure he could change jobs or something and we could live together. He was ten years older than me and I'd never said I loved him but I knew I did. He'd just called me his little love and he wanted to come with me and my heart was overflowing with joy.\n\n\"I love you, Elijah,\" I breathed, cradling him, holding him, and it was the first time I'd ever said that loud enough that he could hear me, and I said it again. \"I love you, Elijah.\"\n\n\"I love you, Krystina,\" he breathed, his eyes looking into mine, his lips brushing mine. \n\n\"Come with me,\" I whispered. \"I want you to come with me,\" and the smile on his face was all the answer I needed, and I was going to die from happiness.\n\nWas it the right thing to do? I was only eighteen. Maybe I was too young, maybe it wouldn't last, and I wasn't sure about a lot of things but I did know two things. We loved each other, and Mr. Montoya had done a really good job tutoring me. \n\nI wasn't going to get an F for Sex now, and I couldn't help smiling because, hey, I was Chinese-American, and a total over-achiever, and I knew that. I wanted A's in everything, and looking up at that look of bliss on Mr. Montoya's face, I knew I'd succeeded. No F's for this girl. I'd get an A in Sex. Maybe even an A-Plus with a few more weeks of practice.\n\nI wasn't going to tell my Dad though.\n\nEven if he had paid for it.\n\n<center> * * * </center>"
    ],
    "authorname": "ChloeTzang",
    "tags": [
        "chloe tzang",
        "chloetzang",
        "asian",
        "chinese",
        18,
        "virgin",
        "high school",
        "student",
        "on the job"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/f-is-for-fail"
}