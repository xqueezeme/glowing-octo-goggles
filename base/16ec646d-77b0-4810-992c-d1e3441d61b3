{
    "title": "The Garden Shed Ch. 05",
    "pages": [
        "All persons engaged in sexual activity in this story, are over 18 years of age.\n\nThis story took place in the 1970s in the United Kingdom when the 'World Wide Web' or Internet as it is known today, was barely an infant and not available to private individuals. As for mobile phones, they were only at an experimental stage. This meant that knowledge of sex was gleaned mostly by chats with 'experienced' friends or looking at adult magazines aka Playboy, Penthouse, Hustler and so on. \n\nBoys and girls were nowhere near as mature or knowledgeable about sex at age 18 compared to many of today's 14 or 15 year olds, thanks mainly to the multitude of internet 'information' that can now be accessed by anyone that can type 'sex' into a search engine.\n\nAll of this is to set the scene for you, to make you aware that in the 1970s, unlike the present, many boys and girls at age 18 were considerably na\u00efve when it came to real sexual encounters.\n\nObviously, if you have read the previous chapters you will be more in tune with the characters.\n\n**********\n\nI had been back at college since Monday, and although I had tried to concentrate on the lectures and work, my mind kept going back to last Sunday afternoon and all that had happened with my sister Sue.\n\nAt my sister's suggestion, we had showered together while our parents were out for the afternoon. In the shower, we had given each other oral sex, the first time for either of us and both of us had intense orgasms.\n\nJust before we left the shower, my sister had surprised and almost shocked me by making me stand still and not speak, then carefully and slowly, put the head of my cock just into her entrance for just a few moments. She said that she wanted to feel what it might be like if we went 'all the way', but then asked me if I would, and to think about it.\n\nI thought about it a lot. \n\nWe had come a long way down the route of finding out a lot about sex with each other in secret, mainly in my shed, but to actually go 'all the way' with my sister, I wasn't sure. We had touched, stroked, and pleasured each other, eventually being naked together, but this was the biggest step, and although the thought of having my cock right inside her, gave me an erection every time, I didn't know if it might change everything afterwards. Then there was the risk of pregnancy or our parents finding out.\n\nYes, I was doing a lot of thinking.\n\nOne thing she had said was that I might need to 'buy something' and I worked out she meant a 'french letter' or 'Durex'. (I think that was the only brand name for condoms then, and they were often referred to by that name). I decided that to be on the safe side, I should buy some, even if it was only to be safe if we repeated some of the things we had already done, when my cum had ended up near her pussy. I could hide them in the false bottomed drawers in my shed, with my magazines, so keeping them hidden wasn't a problem.\n\nBuying them in that era, was only from either a Chemist or a Barber Shop, but you had to ask for them. One problem was that you didn't want to buy them from anywhere where you were known, or where your parents might shop or get a haircut. Also, most chemist shops had female counter-assistants and usually only the owner or pharmacist was male. You couldn't just walk round any supermarket and slip them off a shelf into your shopping basket as you can now. Many young men had collections of toothbrushes and other small items, bought in place of Durex, when a young woman came to serve them at the counter and their courage failed them.\n\nI was no different, and in my lunch times, I wandered the various streets looking for an anonymous chemist shop with a male serving at the counter. I reasoned that at lunchtime, the counter-assistant might go to lunch and the pharmacist would be serving at that time.\n\nThe first one I tried looked hopeful and the shop was empty when I walked in ready to ask for them. Unfortunately, the pharmacist must have been preparing something in the back room, and by the time he came to the counter, two of the young girls from college that I knew had come in and queued behind me. I blushed a little and bought a small packet of aspirin, then left. That sounds odd now, but that's how it was.\n\nIt took several days before I finally managed to walk out of a chemist shop with three Durex discretely placed in a brown paper bag. It was strange having them there in my pocket during the afternoon classes. I had bought my first packet of Durex, but would I have the courage or even the opportunity to use them.\n\n****************************\n\nIt was the usual practice at home for either Sue or me to wash the dishes after our evening meal. There had often been arguments to determine who's turn it was, because one of us had perhaps mowed the lawn, or hung out washing, or done another chore that made it the others turn, However, since Sunday afternoon, we had started to do the dishes together, while our parents went to the sitting room to watch the TV. This gave us the opportunity to be close and for me to have an occasional feel of some part of my sister. We couldn't do much, for fear of discovery, but it did maintain an intimacy and made us both randy, so that afterwards I often had to go to my shed for a wank, and I noticed Sue went to her room straight after.\n\nSue always worked on Saturdays, as it was a busy day in the hair salon where she worked, so it was a surprise when I finally surfaced at about 10 am dressed in my habitual shorts and tee shirt, to find Sue standing by the kitchen sink in her pajamas. They were just plain trousers and top, with some sort of flowery pattern on them that hid any shape she had, probably why she was allowed to wear them around the house.\n\n\"Sue? I thought you would be at work?\"\n\n\"Yeah, I should be, but they phoned early this morning to say there had been a big water leak from one of the wash basins overnight and they couldn't open today. So, I have an unexpected day off,\" she smiled.\n\n\"Ah, ok, a little bonus then,\" I said.\n\n\"Yep, great isn't it.\"\n\n\"What you going to do with this free day then?\"\n\n\"I dunno, my friends all work, so I'm catching up on a few chores, starting with some hand washing of a few more delicate items. It's a nice warm day, so they should dry outside ok.\"\n\n\"Where are the folks?\" I asked.\n\n\"In the garden, look,\" she nodded at the kitchen window.\n\n\"They look busy.\" \n\n\"Yeah, something to do with a new vegetable patch, I think. I wouldn't let them see you or you will get roped in,\" she grinned.\n\n\"Oh yea, thanks.\"\n\nShe already had the kitchen sink full of soapy water and a few things floating in there. I walked over behind her.\n\n\"What you got in there,\" I asked, just out of curiosity.\n\n\"Just a few bits and pieces that can't go in the washing machine.\"\n\n\"They look like...underwear,\" I said, peering into the water.\n\nShe started to blush, \"They are, I bought these silkier bits on a whim a few months ago, they are not my normal kind, but they do feel a bit special when I wear them,\" she answered, shyly.\n\n\"Ohhhh,\" I murmured, when she pulled out a very sexy pair of panties, much finer than the ones I had seen her in, \"they look really sexy,\" I said.\n\n\"Thank you, kind sir,\" she giggled.\n\n\"Wouldn't mind seeing you in those,\" I joked.\n\n\"In them or out of them,\" she retorted, blushing a bit more.\n\n\"Mmmmm,\" was all I could say.\n\nImagining her wearing those skimpier items, had me feeling a bit randy and my cock was beginning to grow. I moved closer to her so that my cock was touching her pajama-clad bottom.\n\n\"Hey,\" she said, \"Mom and Dad are only there look, down near your shed, they'll see.\" she blustered.\n\n\"They are very busy though aren't they.\" I said, pressing myself against her bottom.\n\n\"Ben, they will see.\"\n\n\"I don't think so, its sunny outside and I know you can't see into the kitchen from right down there.\" I said.\n\n\"But they may come up for a drink or something.\" she replied, not reassured.\n\nI put my hands on her hips and slowly worked them round to her firm little bottom and started massaging the lovely firm globes.\n\n\"Ben! You can't, it's too risky.\"\n\n\"Doesn't it make it even better,\" I whispered into her ear, \"knowing they are just there, and we can see them, but they don't know what we are doing?\" \n\n\"It's too scary Ben.\"\n\nI left one hand on her bottom and quickly worked the other one up under her loose pajama top at the front, easily reaching her right breast, which I cupped in my hand.\n\n\"Hmmm, no bra today Sue.\"\n\n\"Oh God Ben! You are making me feel randy and we shouldn't do it here.\"\n\n\"It's ok, if we see them coming this way, I'll just go back to my room.\"\n\n\"I dunno,\" she said, weakening.\n\nI rolled her hard nipple in my fingers and continued to stroke her bottom. Although she was concentrating on looking out of the window, she seemed to have stopped protesting.\n\nI nuzzled her neck with my lips and licked round by her ear and had the satisfaction of seeing goose bumps appear on her neck. I swapped to her other breast and gave it lots of attention, cupping, lifting, grazing her nipple. She had her hands on the front of the sink, her washing forgotten. Our parents continued to dig and weed down the garden, oblivious to what we were doing.\n\nSue was making little noises as I massaged her breast and nipple. My cock was now fully erect in my shorts. I pressed it against her bum crack and moved it up and down slowly.\n\n\"Ben,\" she whispered, \"this is really bad you know.\"\n\n\"I know,\" I said through a smile, \"it is sexy though. Are you feeling sexy doing this?\"\n\n\"I am, yeah, very much.\"\n\nI moved the hand that had been stroking her bum round to the front and slipped it down the front of her loose pajama bottoms. I found her panties and moved my hand over her mound, feeling the slight spring of her pubic hair under the material.\n\n\"Ohhhh, I think that might be too much,\" she whispered urgently, but did nothing to stop me.\n\n\"Don't worry, we can see them and remember they can't see us.\" I assured her.\n\nI held her right breast while I rubbed my hand up and down over her mound. After a couple of minutes of this, I let my fingers drift up to the waistband of her panties and slipped them underneath and then down into her pubic hair. She looked over her shoulder at me biting her bottom lip, then focused back on the garden, where our parents continued to work.\n\nSlipping my finger down, I found her slit and ran my forefinger up and down, catching her clit with it each time. Her pussy lips were getting wet and I could smell her arousal. She was letting me do it, but also trying to keep quiet, although she was breathing heavily, and her neck and face were flushed.\n\nI kissed her neck again and nuzzled it with my lips while I kept up the massage of her breast and stimulation of her clit and pussy lips.\n\nI took away the hand on her breast and undid the buttons on my shorts, then pulled my cock out through the hole in my underwear and shorts into the open. Sue, feeling the movements looked round and down.\n\n\"Christ Ben, you can't get him out here, we will be in such trouble,\" she said, panicking a bit.\n\n\"It's ok, I can get him back in, and be out of here, if I need to.\"\n\n\"What are we doing? I am scared,\" she said.\n\n\"Don't worry, I won't do anything stupid enough for them to catch us,\" I said, hoping that would be true. \"Wouldn't you like to feel him against you down there?\"\n\n\"Emmmm...go on then, but we gotta keep watching.\"\n\nI pushed my hips forward and placed my cock between her thighs, against her pajamas that were covering her pussy. She closed her legs on it and trapped it there, just like we had before, the head sticking out in front of her, but this time in our kitchen, with our parents only a hundred feet or so away. It was very very sexy, dry humping my sister from behind while looking out on the garden. I knew she was feeling it too as she was moving her hips slightly back and forth, making quiet cooing sounds, and I still had one hand down her panties, gently rubbing round her clit.\n\nI wished now that I had one of the Durex with me and could have put it on, so that I could have finished with no mess. However, I couldn't just walk down to my shed and get one, then waltz back with it, alerting our parents to something, so I had to make do. But I knew we would now have to stop before one of us finished, as previous experiences had shown that what we had been doing would be obvious to anyone that should come in, even minutes later.\n\nThey carried on working in the garden, totally immersed in their project, and didn't seem to even glance at the house.\n\nI could feel a dampness, even through her pajamas, so I knew she was very turned on. I pulled my cock out from between her legs and took hold of the waistband of her trousers and attempted to pull it down over her bum. \n\nShe put her hand round to stop me, \"No Ben, we mustn't, not here, not now, we are going to be found out.\"\n\n\"We won't, trust me, we are both watching out, they can't sneak up on us.\"\n\n\"I'm scared we might miss them Ben.\"\n\n\"Look, they are totally engrossed.\"\n\n\"What - what are you going to do?\" she asked, trembling a little.\n\n\"Only what we have done before, wouldn't you like to feel that again?\"\n\n\"Look at the state I'm in, my heart is hammering, even if we see them coming, they will wonder what's been going on.\"\n\n\"Just for a few minutes then, that's all.\" I suggested.\n\n\"Well, alright, but you mustn't finish down there, promise?\"\n\n\"I promise, of course,\" I said.\n\nShe gradually released her hand that was stopping me, and I took hold of her waistband again. I eased it down to just below her bum cheeks. Standing in front of the kitchen sink, as we were, the lower halves of us were totally hidden, so I knew it was relatively safe as long as they stayed outside.\n\nI did the same with her panties, so that from the waist down, to the bottom of her delightful bum, was bare. I moved forward again and pushed my cock back between her legs, but this time against her bare pussy. Oh, that feeling of the head sliding along between her lips was exquisite.\n\n\"You ok?\" I asked, as I slid slowly backwards and forwards, my cock lubricated now by her juices, as we had done once before.\n\n\"Oh God, yeah. Ohhh Ben, I can't believe we are doing this here. You're right, it's because it's so bad and scary, that it intensifies the feelings ten times,\" she said, breathlessly.\n\nWe carried on for a few minutes. Here we were in our kitchen, my bare cock gently pumping along her pussy, feeling her lips part to let me sail through like a boat through water while watching our parents just outside. I was starting to feel that I might come accidentally, it was so intense, both the euphoria in my head and the sensations on my cock. I knew I had to stop, soon, but as we watched and humped, Dad dug his spade into the ground and took his gloves off.\n\n\"Oh hell, they've stopped,\" Sue said, \"quick, get up to your room and don't come down until you have got it soft enough, and pretend you've just come down.\"\n\n\"Right,\" I said, quickly withdrawing my cock. \"I love you,\" I whispered, as I kissed her neck and headed for the stairs. \n\nAs I turned the corner, I saw her tugging up her panties and pajama bottoms and couldn't help but see a damp patch just visible between her thighs. I hoped they wouldn't notice or would be too polite to ask what it was.\n\nIn my room, with the thoughts and image of where my cock had just been, I wanked out another load of cum. I waited a short time afterwards until I was sure I looked 'normal', then went back downstairs ostensibly for the first time. \n\nOur parents were now in the kitchen having coffee, so I exchanged the usual greetings, poured some breakfast cereal and made myself some toast, as I normally would.\n\nSue was no longer there, but there were a few items drying outside on the washing line, so I assumed all was well and no questions had been asked.\n\n\"What are you doing today?\" Mom asked.\n\n\"Oh, this and that,\" I replied.\n\n\"You can come and help us in the garden if you're not doing anything else.\"\n\n\"Ahh, well, I meant that I have a project to do for college, and then I said I would go round to a mate's house for a while.\" I said, thinking quickly. The last thing I had in mind to do was digging in the garden.\n\n\"I suppose that's important son, maybe Sue will help us,\" she said.\n\n\"Sue? Isn't she at work?\" I asked, innocently.\n\n\"No, they have some flooding problem at the salon, so she has the day off.\"\n\n\"Oh,\" I said, \"I bet she's pleased. Pity to make her work here though, it's not as if she likes gardening.\"\n\nMom thought for a bit, \"Yes, maybe you're right, I'll leave her to do whatever she wants, she deserves some time off.\"\n\n\"Come on Mike,\" she said to my Dad, getting up, \"put that paper down and let's carry on.\"\n\nShe walked out into the garden followed by my dad, who rolled his eyes conspiratorially at me, as he passed.\n\nWell, I thought to myself, I got you out of that one Sue, and grinned.\n\n********************************\n\nI saw Sue at lunchtime and made a point of saying, in front of Mom, that I had heard she had the day off. We acted normally, except for exchanging the odd look and grin when no one was looking. She then made herself scarce for the rest of the day and I spent some time in my shed, and the rest at my mate Tony's house, helping him service an old motorbike he had bought.\n\nAs usual, we had a family meal in the evening. Sue and I joined forces to clear up and as they habitually did, our parents went into the sitting room to watch TV.\n\nI stood next to Sue, drying things as she washed, our hips occasionally touching. Once or twice I sort of bumped her with mine deliberately.\n\n\"Ben,\" she whispered, looking towards the sitting room, \"don't start anything tonight, I got a few odd looks this morning, I didn't realise immediately that my PJs were a bit damp...you know,..down there.\" She looked round again. \"When I did, I had to 'accidentally' make a splash in the sink, and then complain out loud it had made me wet.\"\n\n\"Technically,\" I whispered back, \"I made you wet.\" I grinned. \n\n\"It's not funny,\" she said slightly crossly, \"we can't take risks like that.\"\n\n\"No, I know, I'm sorry. But I did get you out of gardening with them.\"\n\n\"You did?\"\n\n\"Yea, Mom said she was going to ask you to help, as you had a day off, and I said it would be a pity to make you work when you had just got a day off, so she didn't.\"\n\n\"Oh, thank you, that was nice of you.\"\n\n\"I know,\" I said. \n\nGrinning, she flicked water in my face.\n\nWe laughed together.\n\n\"What's going on in there,\" our mom's disembodied voice shouted from the other room.\n\n\"Just messing around,\" I shouted back, grinning at Sue.\n\n\"See,\" she whispered very quietly, \"they have ears like bats, we have to be careful what we do and say. Ok?\"\n\nI nodded.\n\n\"That's ok then,\" Mom shouted back, \"only we have to go visit grandma again tomorrow, I want to make sure you two aren't going to start arguing again.\"\n\nWe looked into each other's eyes and smiled, \n\n\"You thinking what I'm thinking,\" she said, right into my ear.\n\n\"Hmmm I might be,\" I replied.\n\nWhen we had completed the cleaning up, we watched TV with them, sitting apart in separate armchairs. Later, Sue disappeared for the night to her room, leaving me to only imagine what she was thinking.\n\n********************************\n\nWhen I finally woke up on Sunday morning, it was clear from the dull light coning through my window that the weather had changed for the worse. When I looked outside, it was raining and the temperature even in my bedroom had dropped several degrees. After I showered, I dressed in jeans and a thicker top, it wasn't going to be shorts weather today.\n\nI went down to have breakfast and found that the family had also changed to warmer clothing, sadly including my sister, who now wore jeans too, instead of her sexy miniskirts.",
        "Mom and Dad reminded us that they were going to visit grandma again and asked if we would like to go with them. I waited to see how Sue answered, and when she said she had already invited one of her friends over for the afternoon, she sounded so genuine, that I believed it.\n\n\"Ben,\" Mom said, \"it's raining, so there isn't much to do here, you haven't been over to see her for a while, would you like to come with us this afternoon?\"\n\nI did feel guilty that I hadn't seen grandma for a while, and if Sue was having her friend over, maybe it wasn't a bad idea. I was just about to say yes, when, out of the corner of my eye, I saw Sue looking directly at me and give a quick shake of her head. \n\n\"Oh,\" I said, thinking quickly, \"I've...emm... promised Tony I'll help him service his motorbike, that we started yesterday, it's..a two man job and I don't want to let him down.\" I finished.\n\n\"That's a shame, but you really need to visit her soon, she isn't very well.\" Mom said, \"maybe next time.\" \n\n\"Yea, sorry, maybe next time,\" I said, slightly ashamed of the lie I had just told.\n\nI glanced at Sue, who almost imperceptibly nodded, then turned and I heard her going off to her bedroom.\n\nThe morning passed slowly. I went down to my shed, warmed it up a bit with the old paraffin heater I had there, and messed around a bit tidying up. I opened the secret bottom of the drawers and checked that the two pairs of my sister's very used panties and the packet of three Durex I had bought were still how I had left them. I read the instructions on the Durex box a couple of times, but couldn't really waste one trying it out, so I just hoped it was as easy as it sounded. \n\nI wondered what it would be like to put one on and if I really intended to use them soon. I remembered how my sister had looked when we were both naked in the shower, and where my cock had almost been, these images soon had my cock straining at the front of my jeans. I sat and re-read my latest 'explicit magazine' purchase, taking in all the details, imagining it was Sue lying there as I lay on top of her. I was soon slowly stroking my cock; first just over my clothes, then, having checked that no one was about outside on this wet day, taking it out and wanking while I read.\n\nTime must have passed more quickly than I thought once I got engrossed in the magazine.\n\n\"BEN, we're leaving now,\" I heard, shouted from the house. \n\nI opened the door just enough to put my head out and shouted back, \"Ok, give my love to grandma,\" and waved at Mom standing by the back door to the house.\n\n\"There's some food in the fridge,\" she replied, \"see you later, about the same time as last week.\"\n\nI waved 'ok' so that she knew I had heard and then closed the door. I stood and watched out of the window, my cock still poking out of my jeans but invisible from outside, as it was way below the window level.\n\nI wondered what Sue was doing, had she got engrossed in something, I thought she was probably playing her records and doing that 'singing along' noise she did sometimes in her room.\n\nHow wrong I was.\n\nIt was about fifteen minutes after they left. I had just got going again, slowly stroking my cock so as not to come too soon, when I heard the pit, pat, pit pat. of feet slapping on the wet path down to my shed. I glanced out of the window and there was Sue jogging through the rain towards me. I jumped up, and with difficulty, I pushed my cock back into my jeans and only managing one button, dropped back into my old armchair, just as she pushed open the door and rushed in out of the rain. Damn, I thought, I had again forgotten to bolt the door, I was getting lax.\n\n\"Wow, it's wet out there,\" she said, panting a little from her exertion.\n\nI looked round at her; even the small amount of rain had darkened her shoulder length, light hair and it stuck to her face. Her tight blue jeans that hugged her trim figure and long legs were damp from the knees downwards. She had on a tight, long sleeved, white top, but the cool temperature between the house and my shed had left its mark in the shape of two pointy bits slightly tenting her top.\n\n\"You can expect that with rain,\" I said, glibly, looking her up and down.\n\nShe moved closer to me and shook her wet hair, spattering me with water, \"That's for being not nice,\" she said.\n\n\"Hey, it was just a joke.\" I retorted, shaking the water off my magazine that I had forgotten I had on the arm of the chair.\n\n\"So was that,\" she said, a smug grin on her face, \"we're quits then, yeah?\"\n\n\"I suppose.\"\n\n\"Ahh,\" she said, catching sight of the magazine, \"that's why you are grumpy, I disturbed your 'studying'.\"\n\nI felt my face getting a bit hot, \"Just ...revising,\" I replied.\n\n\"Do you need to?\"\n\n\"Just refreshing my memory, that's all.\"\n\n\"Right, of course,\" she laughed. \"Woo, it's not very warm down here, why don't you...umm.. come and 'revise' in the house, it's much warmer there?\"\n\n\"I'm not going to bring these into the house, it's too risky... if they found them...\"\n\n\"Well I was wondering,...maybe, we could do a bit of 'live' revision...if you're feeling like it,\" it was her turn to blush. \n\n\"Do you want to?\"\n\n\"Do you?\" she batted it back.\n\n\"Revising has got me a bit worked up,\" I said, candidly, \"and it's more fun than reading about it.\"\n\n\"I think it might be.\"\n\n\"Do you think it's safe, ...in the house?\"\n\n\"As safe as last time, but I can't phone again, they would be suspicious.\"\n\n\"They told me the same time as last week, so that's several hours at least,\" I said, warming to the idea of sharing some intimacy with my sister again.\n\n\"I'll go back then and wait for you, and...emmm...you might want to bring that little box that's on top of your magazines...if you want,\" she said coyly, turning around and running back to the house.\n\nI wasn't sure about doing anything in the house again, as we would have no warning should they come back early. I guess I should have been more forceful, but she took me unawares and I wasn't really expecting her to suggest anything more than the repeat of things we had already done together. She had asked me to bring the packet of Durex with me, what did that mean? Was it just so that there would be no mess if I came, or did she want more? My head was spinning with what might happen and how risky it all was. I had already been wanking and got interrupted twice. I was ready to release all the tension I had already built up, and it was exciting to imagine touching and being close to my sister again, far better than just sitting here on my own reading.\n\nI made up my mind.\n\nI popped the magazine back in the drawer, put the Durex in my back pocket and closed the false bottom of the drawer, replacing the few odd woodworking tools on top and closed it. I turned the paraffin heater off, had a final look round that everything looked 'normal' and headed up to the house.\n\nI could see why Sue had arrived with very wet hair as it was raining very hard, and by the time I had reached the house, my hair was wet too. I decided to quickly go straight to my bedroom and run the hairdryer over my hair, to stop it dripping down my neck. \n\nI sat on my bed with the blower on high and hot and within a few minutes, it was sorted.\n\nI didn't know where Sue was, but as I turned the hairdryer off, I had the feeling I was being watched. I turned my head towards the door and saw she was leaning on one side of the doorframe, watching me.\n\n\"You made it then,\" she said.\n\n\"Not without getting soaked.\"\n\n\"Yeah, me too, makes 'getting wet' a different experience doesn't it.\" she said, with a perfectly straight face.\n\n\"You could say that,\" I grinned, noticing that she had changed from her warmer jeans and now wore one of her short, black skirts, that showed off her great legs, and a different tight top. \n\nDid you ...bring them with you,\" she asked.\n\n\"You mean these,\" I said, taking the small box of Durex out of my pocket.\n\n\"Yeah...emm...can I have a look at them, I've never seen inside a packet.\"\n\nI gave them to her and watched as she carefully opened it to reveal three, small, oblong foil envelopes.\n\n\"Oh, it's not what I expected,\" she exclaimed, \"they seem so ...small,\" she started to blush.\n\n\"Well, I think they're sort of rolled up somehow, look at the instructions.\"\n\nShe studied it for a moment, getting redder \"Ahh,... I think I see; it doesn't look too difficult.\"\n\n\"I don't know, I have never tried one, you just have to avoid using your nails I think though, in case they make a tiny hole. Once you open the foil, you can't keep it, so I haven't, like... you know, looked inside.\"\n\nShe was fingering the foil envelope, feeling the shape of the thing inside which, due to the oblong envelope, felt like an elongated oval rather than round.\n\n\"It's sort of sexy, isn't it, having one of these in your hand. I mean...knowing where it's going to go,\" she said, her voice a little husky.\n\n\"Does it do that to you?\"\n\n\"It does a bit,\" she murmured, crossing her legs as she continued to lean on the doorframe, her face fully flushed now. \"Does it all go in that end bit they show on the diagram then?\"\n\n\"Yea, I think that's why its shaped like that.\"\n\n\"Hmm, all your stuff in there,\" she mused, \"do you want to... try one on, just as an... experiment sort of?\"\n\n\"I don't know, maybe we should just keep them for now?\" I said, still not wanting to waste one.\n\n\"Well...maybe, we could just try it to keep your stuff off me if ...um.. we just played around a bit, what do you think?\"\n\nI was already thinking what a great feeling it would be to get her to actually roll it down my hard cock, what would it feel like to have it on me, and it had already responded to those thoughts by starting to grow. I wondered if I could do that sliding between her naked thighs thing again, against her pussy, that had been so erotic, and with a Durex, it would be safer.\n\n\"You sure you want to?\" I asked.\n\n\"Only if you do,\" she returned the question.\n\n\"It always makes me feel randy talking about things like this with you. Does it do that to you?\"\n\nYeah, 'cos really I know we shouldn't be, and that somehow makes it sort of naughty but exciting too.\"\n\n\"I know what you mean,\" I said, my cock now fully hard.\n\nThere was an awkward silence while she still fingered the Durex packet, and it seemed neither of us wanted to be the one to decide or to start anything.\n\n\"Do you want to come and sit here with me, instead of propping up the doorframe?\" I asked, still leaving the decision up to her.\n\n\"I could do. Would you like me to?\"\n\n\"Yea,\" I said, \"I won't bite...much,\" I joked.\n\n\"You'd better not,\" she said, as she walked the few steps to put the Durex on my bedside table, and then sat down on the bed to the left of me, \"I don't want any marks left.\"\n\n\"Where don't you want any marks?\" I grinned.\n\n\"Anywhere!\"\n\nSitting on the bed, with her feet on the floor, the edge of her skirt was across the middle of her thighs, exposing a lot of slim leg.\n\n\"You know Sue...,\" I started, looking down, \"...you have great legs.\"\n\n\"Really...do you think so, I thought they were always too thin,\" she said, sounding surprised and blushing again, then putting her legs out straight, and pulling the hem of her skirt up her thighs, until it was only just covering her underwear.\n\n\"See,\" she said, \"not much meat on them is there?\"\n\nI put my hand just above one of her knees pretending to feel its thickness, \"Well they look fine to me, very sexy in fact,\" I said truthfully.\n\n\"God Ben, you are actually blushing, you must mean it,\" she said quietly, making me blush even more.\n\n\"I'd better just check a bit more before I'm sure though,\" I said, looking her in the eye and sliding my hand up her thigh to where she had pulled the edge of her skirt. \"Mmm, yep, confirmed, very sexy.\"\n\nOur faces were only a few inches apart and with my hand slowly sliding up and down her leg, I leaned a bit further towards her. She leaned too until our lips just touched.\n\n\"Are you going to kiss this girl with sexy legs then Ben?\" she whispered.\n\nI felt, as well as heard, the words as her lips moved mine when she spoke.\n\n\"I think so,\" I whispered back, and put my lips totally over hers and began to kiss her.\n\nOur lips moved, feeling each other, nibbling and teasing taking turns to gently suck on a lip. Our breathing rate increased slightly as the kiss deepened. \n\nWe stayed like that for a couple of minutes I guess, just testing the other's readiness to move on.\n\nThe knowledge that my sister was in my bedroom, kissing me, on my bed, in a short skirt, letting me stroke her legs, got my cock as hard as it would go. It was also a slightly uncomfortable position, with both our heads turned at right angles to our body, so with some trepidation, I put my right hand under her armpit and gently eased her round onto the bed. She didn't resist and slid round to lie longways on the bed, and I followed, hanging on to that kiss.\n\nNow that she was lying on her back and I on my side facing her, I propped myself up on my left elbow and put my other hand onto the side of her face, pushed her hair back over her ear and let the tip of my tongue gently prise at her lips.\n\nShe opened her mouth a little and allowed my tongue to slip in. Once she felt it contact hers, it seemed to act as a catalyst and released something in her. Her tongue snaked into my mouth and we started a sensuous dance, like the mating ritual of two serpents. We kissed and then broke apart to breath, then were back locked together.\n\nAs I kissed her, I slowly ran the forefinger of my right hand around the contours of her breasts, underneath, round the side and over the top. Then gradually, in a decreasing circle, I homed in on her nipple, feeling the hardening nub under my fingertip through her clothes. She moaned a little into my mouth and put her hand on the back of my head to hold me against her lips.\n\nPutting my whole hand onto her right breast, I gently squeezed it and rubbed my palm over it, feeling it constrained in her bra. She made no objection when I slipped my hand under her top and worked my way up to cup her bra clad breast. I was able to lower the bra cup so that I could touch her bare nipple, by now, long and hard. I teased it with my fingers, then slid my hand inside her bra. She didn't have huge breasts, so it fitted into my hand nicely. The skin was warm and soft, but the whole breast was firm to the touch.\n\nHer breasts were obviously one of her sensitive areas, as her little noises and moans became more frequent as I stroked and manipulated it. \n\nHer right hand, that had been lying by her side against me, shyly started searching the front of my lower body, until she found the bulge in my jeans made by my hard cock. She ran her fingers up and down, the feelings intensified for me knowing it was my sister that was rubbing my cock. She squeezed it and felt its length, testing its rigidity. With the ministrations I had already been giving it in my shed, I was scared I might even come before she did anything else.\n\nI took her feeling my cock as an indication that she wanted to do more, so I withdrew my hand and lifted her top to expose her bra. She took her mouth away from mine for a moment and raised both arms upwards, allowing me to pull her top up and off. When she felt me slip both hands under her back, she arched it slightly to give me room and I easily managed to undo the bra clip and take that off too. As it came off, I lowered my lips to the nearest nipple and took it into my mouth.\n\n\"Mmmm, ohhh, that's so nice Ben,\" she murmured, and put her hand back down between us and returned to rubbing my cock through my jeans.\n\nI sucked on one nipple while I teased the other breast with my hand, feeling the rubber-hard nub of it on my palm. For the size of her breasts, she had quite long nipples, not quite the length of the first part of my little finger, but not far short. They were dark pink to start with, but now they had darkened to almost the same brown-red as her areola. I loved sucking on it and flicking it with my tongue, teasing against my teeth and feeling the little tiny bumps on her areola surrounding it. She obviously did too, as she had closed her eyes and was just bathing in the sensations, gasping when I teased a little too hard, but loving it all the same.\n\nHer hand was sort of scrabbling at the front of my jeans, \"Ben,\" she said, through her gasps, \"I can't undo these with one hand, I...want him out.\"\n\n\"Do you...want them right off...or what?\" I asked.\n\n\"Yeah, that would be easier,\"\n\n\"If you're sure?\"\n\n\"Yeah, please...can you?\"\n\nI quickly sat up, undid my jeans and slid them off onto the floor.\n\n\"Emm,.. what about...?\"\n\n\"Take them off too... if it's ok with you.\"\n\n\"Ok.\"\n\nI got rid of my underwear too, just leaving me in my warm top, although being with my sister on my bed had warmed me up sufficiently that I actually felt a bit too hot. I decided to just remove that too and the pile of clothes on the floor grew a little bit bigger. \n\nI didn't realise she had been watching my striptease.\n\n\"Mmmm Ben, you are totally naked and with your sister in the room too, whatever would Mom say if she knew?\" she grinned.\n\n\"I hope she never finds out,\" I replied, lying back down alongside her but naked now, my cock sticking out in front of me, pointing at her.\n\nHer hand quickly came back between us, but this time she took hold of my bare cock and started to gently stroke it up and down, as she had done once or twice before.\n\nI placed one hand back on her breast and kissed her again, her mouth opening almost immediately to accept my tongue.\n\nIt was my turn to moan now, the sensations of her small hand gently wanking me, knowing I was lying naked with my beautiful sister, were thrilling.\n\nWe stayed like that for a while, kissing, tongues playing round and round, in and out of each other's mouths, it was no wonder my pre-cum was coating the head of my cock and her fingers.\n\nI moved the hand from her breast down over her stomach, which apparently tickled, as she giggled through our kissing. Then down onto her bare thigh, just below where her skirt ended all the time feeling her hand on my cock. I brought my hand back up, under her skirt until I reached her panties and pressed it to her mound, cupping it. \n\n\"Mmm, God,\" she said, while trying to kiss and breath.\n\nI moved and massaged my hand all over the front of her panties. I pushed my hand sideways down that sensuous gap she had between her thighs and felt the wetness that had soaked through already. She opened her legs a little more and I was able to turn my hand round, several of my fingers feeling her pussy lips under the material. I slid them up and down, putting a bit of pressure on them, slightly pushing the damp material into her slit. Her hips moved slightly to get more of the pressure where she wanted it.\n\nPulling back, but leaving my lips just in contact with hers, I said, \"I think you have too many clothes on compared to me.\"\n\n\"Hmmm...do you now. Do you propose to do anything about it?\"\n\n\"Do you think I should?\" I asked.\n\n\"Would you like to?\"\n\n\"I would like to see all of you.\"\n\n\"You know what to do then, don't you?\"\n\nI took my hand from under her skirt and found the button and zip on the side of it. With a little bit of fumbling, I managed to undo both, and she lifted her bottom so I could slide it off.\n\nShe now only had on her small, white, cotton panties, so looking her in the eye, I tugged experimentally at the waistband to see if it was ok to remove them, and was rewarded by her lifting her bottom for them too.\n\nWe were now both naked, on my bed, my heart was going ten to the dozen, I could feel my face hot and flushed from the feelings flowing through me. I crawled back up to lie alongside her, at which, she let go of my cock and turned on her side to face me. We put our arms round each other and drew ourselves close together, her nipples pressed into my chest, my cock against her mound and stomach and our legs touching. Oh Christ, I was lying naked against my sister on my bed. A few weeks ago, I would never have thought we would be doing this or anything remotely sexual.",
        "We kissed, I kissed down her neck, across her breasts, down her stomach to the start of her dark pubic hair, damp with her juices.\n\n\"Ben...what..?\"\n\nI ignored her and continued down, letting my tongue lead me to her slit. Gently easing her onto her back again, I moved over the nearest leg, separating her legs with my hands until I could see her swollen labia glistening slightly in the dull light. Despite the fact that I had hardly done more than touch her there, her lips were slightly open and a musky perfume was evident as I moved my face closer.\n\nUsing both hands, I separated her pubic hair, opened her lips more and slipped my tongue between them, tasting the remembered nectar within. Sue groaned and moved as if my tongue was heated metal. I licked some more, not touching her clit, just the inside of her labia. I could feel the tiny tube of her pee hole with the tip of my tongue, and gave it some attention, as I licked up and down.\n\n\"Ben,\" she was saying, \"Jesus Ben, Ohhhh,\" squirming a little on the bed.\n\nI moved my face lower, put my hands under her bottom and started to probe the entrance to her vagina with my tongue. Now at an angle better than in the shower, I could push my tongue further in. A little at a time, I poked my tongue in, licked around and then out, trying to get further in each time. Even though both my tongue and her entrance were very wet, she was so tight, it took me several minutes until I got as much of my tongue inside her as I could. When she felt this soft intrusion, she started to squirm more wildly and make more noise. It was a good job my bedroom was on the unattached side of our house.\n\nKnowing that I had her close to coming now, I moved my tongue up until it finally contacted her clit. When I moved it around and then sucked it into my mouth, she gripped my head with her hands and weakly tried to push me away.\n\n\"Ben, Ohhh.. for Christ's sake, ohhh..you are going to make me finish if you carry on like that,\" she panted.\n\n\"Do you want me to stop then?\" I asked, between licks.\n\n\"Yes...no...yes...ohh, I don't know Ben...\"\n\n\"Shh,\" I said, and went back to concentrating all my attention on her clit, using it like I had her nipples, teasing the hard little pleasure nub back and forth, then sucking it hard and letting go.\n\nShe was bucking her hips to my rhythm on her clit, making it difficult to stay attached, I could see she was ramping up to her peak. As her entrance was so wet now with her own secretions and my saliva, I carefully slipped two fingers into her, and started to finger fuck her juicy hole while I gave her clit a thorough taste of tongue friction.\n\nShe didn't last long after that. Clenching her internal muscles and her firm stomach, she shuddered and trembled through her climax, crying out some unintelligible words. Her vaginal muscles gripped my fingers and a new wetness coated them and ran out of her tunnel, wetting down between her thighs and onto the bed.\n\nAs her orgasm came to an end, leaving her body twitching with the aftershocks, she cried out \"Stop Ben, it's too sensitive,\" and pushed my head more forcibly away from her soaking mound.\n\nI crawled up the bed on top of her and held her close to me, my face level with hers and my still hard cock on her stomach. I was holding my post-orgasmic sister against my naked body; it was just an amazing feeling.\n\nI let her come down slowly, stroking my hands over the parts of her body I could reach, but avoiding her sensitive clit and labia.\n\n\"Ohh, Ben, you know how to get me going, that was..soo...soo much, but you made me finish and you haven't.\" she whispered, throatily.\n\n\"There's still plenty of time,\" I whispered back. I wasn't sure why we were whispering, but the situation seemed to warrant it somehow.\n\n\"Yeah, we still have time.\"\n\nShe was so relaxed, I wondered if she was going to doze off, but I kept running my hands over her naked warm flesh, breasts, ribs, hips, shoulders, neck, they all received a gentle massage.\n\nAfter a short while, she opened her lovely brown eyes and looked at me, putting one hand on the side of my face, \"Could we try putting that Durex on you now Ben?\"\n\n\"So I don't make a mess you mean?\" \n\n\"Well, I'd kinda like to see how it goes on, and... it would help if you are going to finish too,\" she said.\n\n\"That makes sense as I have them,\" I agreed, also curious to see how one felt and maybe watch Sue put it on for me.\n\nI reached over to the bedside cabinet and grabbed the foil packet, then pushed myself up to sitting position. Sue sat up beside me, my sister's pert breasts and nipples open to my gaze.\n\n\"Do you want to do it?\" I asked.\n\n\"I dunno, I've never done it before though.\"\n\n\"Well that makes two of us, but it would be more exciting if you did it,\" I said\n\n\"Hmm ok, let's try.\"\n\nI gave her the little packet and she carefully tore off the top. She squeezed from the bottom until the rolled, thin latex, contraceptive, slipped into her hand. Having already looked at the instructions, we both looked at it trying to determine which was the outside so it could be rolled down the right way.\n\n\"I think this is the bit you hold to keep the air out,\" she said, \"so that must be the outside, and look, its rolled round the thicker bit that way, so I think I just push it down that way.\"\n\n\"Want to try,\" I said, paying more attention to her hard nipples than the contraceptive.\n\nShe took hold of my cock with her small hand and pulled the skin back to fully expose the large mushroom head.\n\n\"Ahh... Ben, he's quite big, do you think it will stretch without breaking?\"\n\n\"I think it's made to do that, so try.\"\n\nShe squeezed the tip of the Durex in one hand and placed the elastic ring on the top of my cock. Pressing downwards with her fingers in as big a circle as she could, she managed to cover the head with the thin material, then had trouble getting it over the ridge of my foreskin.\n\n\"I am gonna have to push harder,\" she said, \"is that ok?\"\n\n\"Yea, I said,\" enjoying the feel and sight of her hands on my cock, \"but don't use your nails,\" I reminded her.\n\nShe struggled a moment longer, then suddenly, it was over the obstacle and unrolling down the length of my shaft. She kept stroking it down until the ring met my pubic hair. I loved the feeling of her doing that, but I wasn't sure about the tightness at the base of my cock.\n\n\"There,\" she said, looking pleased with herself, \"I did it.\"\n\n\"Yea, that's look good,\" I replied, \"you can be an official Durex operative now,\" I grinned.\n\n\"Now it's on, come and lie on me like you were,\" she said, more quietly, and lay back onto the bed.\n\nI got almost back into the position I was in before, on top of her and in-between her legs, but as I went to lower myself down, she took hold of my covered cock and positioned it between her thighs so that as I lowered down, my cock went down against her bare pussy. We had done this in a similar way in my shed that time, standing up, but this felt a lot more like the 'real thing'. She was still wet from her orgasm and added to the lubrication on the contraceptive, when I moved, it slid easily and sensuously between her thighs and her pussy lips.\n\nI had been building up to my release for a long time, both back in the shed on my own, and here with my sister, so I lost no time in starting to slide back and forth against her.\n\nHer sensitivity had obviously diminished and I could feel she was enjoying the new feeling too. She rose up to meet my down strokes until our pubic areas met, then reversed as I pulled back. I think we were both feeling as though we were actually fucking. The sensations on my cock from her pussy lips hugging it, were taking me ever closer to my own finish, and from the sounds she was making, the base of my cock hitting her clit must be moving her towards her second orgasm.\n\nI suddenly felt her stop moving.\n\n\"Sue? What's the matter, have you heard something?\" I asked, stopping too, worried maybe our parents had returned, and she had heard the car or something.\n\n\"Nothing's the matter, but ...emm.. you know in the shower,\" she was whispering again into my ear, \"when I asked you to not move or say anything, then I did that ...thing.\"\n\n\"Yeah, I remember,\" I said, as if I could forget.\n\n\"Well...now you have something on him, could we just ...like ...do that again?\"\n\n\"You mean, put a bit of him into you?\"\n\n\"Yeah, like before.\"\n\n\"You really want to?\"\n\n\"Well, it's not so risky now, is it?\"\n\n\"No, I guess not, but...it might change things if we go too far,\" I said, wondering where this might go.\n\n\"It needn't, we won't let it.\"\n\n\"That's easy to say.\" I said.\n\n\"You don't want to then Ben, is that it?\"\n\n\"No, 'it's not that, I just want to make sure you know what this means, we can't ever pretend it never happened.\"\n\n\"It'll be okay, I promise... please...I want to feel what it's like again to just have a little bit of you there.\"\n\nI was lying on top of her, between her legs, supported by my elbows, slightly trembling at the thought of what she was suggesting. I wanted to feel it again too, but it was way over just touching and kissing each other, but so exciting to think about.\n\n\"I don't want to hurt you,\" I whispered, my heart racing and my breathing shallow and fast.\n\n\"You won't, honest...go on,\" she encouraged me, sliding her feet nearer her bottom and raising her knees with her feet flat on the bed.\n\nResting on just one elbow, I shuffled back a little and took my cock in my other hand. I gently rubbed the tip up and down her slit between her wet labia. She was very wet now and I could smell her arousal again. I moved it lower until I felt it lodge in the indentation of her entrance.\n\n\"Is that in the right place?\" I asked her, nervously.\n\n\"Yeah, now just gently push in a bit, just a bit...ok.\"\n\nI did.\n\nI pushed, not hard.\n\nI felt a bit of elastic resistance.\n\n\"I don't think it will go in,\" I said, desperately.\n\n\"It will,\" she said, \"push a bit harder, its ok.\"\n\nI was trembling so much with the tension and not knowing how much force to use.\n\nI pushed, and as I did so, my sister also pushed her hips towards me.\n\nMy cock-head stretched her entrance and suddenly popped inside her.\n\nIt didn't stop there.\n\nOnce it finally slid through the tight entrance, all the lubrication, and the joint pressure from us, pushed my cock about halfway into her vagina.\n\n\"Ahhh,,, God, God,\" she cried, \"stop there.\"\n\n\"Oh, hell, I'm sorry,\" I said, \"it just happened, are you ok?\"\n\n\"Yea, I think so, it's not your fault. Christ, I feel so stretched, much more than when I did it that little bit before.\"\n\n\"Shall I pull out?\" I asked, still worried that I had hurt her somehow.\n\n\"No, just stay still for a moment, let me see if I get used to it.\"\n\nMy cock felt as though gripped by a long elastic tube, but soft and warm. It was so snug in there that I could feel every movement she made with her muscles, as she tried to adapt to the penetration.\n\nThose sensations made my already sensitive cock twitch inside her.\n\n\"Oh, I can feel him moving in there, like small spasms,\" she said, almost in wonder. \"It's gradually feeling better.\"\n\n\"Shall I pull out now then?\"\n\n\"No, it's starting to feel nice having you in there, part of me. How about you, are you ok?\"\n\n\"Yeah, I'm trembling all over, you know that we are actually 'doing it' now Sue.\"\n\n\"I know,\" she whispered, \"I wasn't sure we would, but now that we have, it's a bit emotional.\"\n\nI saw a small tear run down her cheek.\n\n\"Oh Sue, I am sorry, I didn't mean to go right in, don't be sad, please.\"\n\n\"I'm not sad, just a feeling of being so connected to someone, for the first time, is a bit overwhelming.\"\n\nI could see it had affected her more than me, but knowing I was lying here with my cock half inside my sister, naked on top of her, was for me the most erotic and intimate sensation I had ever had, and I knew I would never forget it.\n\n\"Ben.\"\n\n\"Yeah?\"\n\n\"Would you like to be more inside me?\"\n\n\"Only if you want it,\" I answered.\n\n\"I do, can you go slowly though.\"\n\nMy cock was really twitching now. \n\nI was thinking.\n\nShe wanted me further in. \n\nShe wanted my cock right inside her.\n\nFilling her up.\n\n\"You can start Ben,\" she broke into my thoughts.\n\nAs gently as I could, I moved my hips forward, feeling my cock sliding more easily now, into her vagina. Slowly half inch at a time, I moved further inside my sister.\n\nShe moaned a little, not with pain, but more like when I was licking and finger fucking her. I knew she was starting to enjoy the feeling of having a cock in her.\n\nEventually, our pubic hair touched and a moment later my balls touched her bottom, our pubic bones met, and I could go no further. Oh wow, what a sensation fully inside her, tight as a well fitted glove, totally interlocked.\n\n\"Ahh, I feel so full of you, nothing ever felt like this before,\" she panted, her breathing fast too. \"Are you really right in now, all of you?\"\n\n\"Yea, I am, God, Sue, it feels ...like..I dunno, like I am really part of you, but ...ohhhh..shit..shit!\"\n\nWithout warning, I felt a contraction deep inside, and my cock swell, as the first blast of cum shot up my cock and into the waiting tip of the contraceptive, buried deep in my sister. \n\nI shook and shuddered\n\n\"Sue...I'm sorry...Ohhh, ummmpphh,\" as the second, third and fourth contractions pumped more large amounts of sperm into the latex sheath.\n\nShe held me close, wrapped her legs over my thighs and held me to her, as my long-awaited orgasm and forceful ejaculations racked through my body.\n\n\"Oh, Ben, Ben, it's, ok my love, it's ok, finish for me, let it all go.\" she cooed in my ear, running her hands over my back while keeping me deep inside her with her legs.\n\nAs my ejaculations eased off and the tension started to leave my body, I slumped down onto her, still trying to keep my full weight off her. I felt I had let her down coming like that having only just managed to enter her fully for the first time. I knew that I had been very excited and aroused and I guess that penetrating her fully was just the last straw that trigged it, but I wished I had anticipated what might happen and been able to delay it.\n\n\"Sue...I..\"\n\n\"Don't say anything... it's ok... I felt all of that deep inside me, it was a truly amazing and intimate thing Ben. I loved feeling you finish like that.\"\n\n\"You did, really?\" I asked doubtfully, wondering if she was just saying that.\n\n\"Yes,\" she said, and kissed me hard, wrapping her tongue round mine.\n\nI realized my cock was still inside her and I needed to remove the Durex. Gently I pulled away and withdrew my cock, holding onto the ring as it had said on the box and then sliding it off, seeing the large quantity of sperm caught in the end.\n\n\"Let me see,\" Sue said.\n\nI held it up for inspection.\n\n\"Wow, there's a lot in there, you must have been storing that up for a while,\" she smiled.\n\nI put it on the floor near my clothes, so that I wouldn't forget to get rid of it.\n\nI rolled back onto the bed alongside her and stroked her flat stomach, letting my fingers drift into her pubic hair.\n\nI felt her hand take hold of my cock which had softened a little and slowly wank it,\n\n\"Wow Ben, you're still a bit hard, is this ok to do?\"\n\n\"Yeah, it's nice,\" I said, my cock starting to harden again because of all those thoughts going round in my head of how it had just felt, being inside her, and now feeling her hand on it.\n\nI stroked my hand up her body, over her breasts and then back down until my fingers slipped down between her pussy lips, then used the moisture to gently rub round her clit. She began to pump my cock faster, and by now it was as hard as it was before.\n\nShe was breathing fast again.\n\n\"Ben,\" she said, barely audibly, \"will you put it back in?\"\n\n\"You mean... like before?\"\n\n\"Yeah, all the way, I need you inside me, I want to feel it again.\"\n\n\"I'll have to get another thing,\" I said.\n\n\"No.\"\n\n\"No? What do you mean?\"\n\n\"I want to really feel you...you know what I mean.\"\n\n\"We can't, it's too much of a risk.\"\n\n\"I... think it will be ok, you have just finished, so most of it has come out.\"\n\n\"I'll get another.\"\n\n\"No Ben, I think I am safe anyway at this time of the month, just this once, now, I need to feel you...please.\"\n\nShe continued to pump my cock.\n\nI think I was losing my mind even thinking about doing it.\n\n\"Are you really sure it's safe?\"\n\n\"Yeah, please, Ben..., make love to me... I need it this once...\"\n\nI didn't know what the difference might be without it being sheathed in latex, but she was very persuasive and after my premature ejaculation earlier, I did want to feel how it would be to move inside her. My brain, anesthetized by the eroticism of it all decided to trust her judgement.\n\nI crawled back over her and she lifted her knees back to where they were. I ran my now nude cock-head up and down her slit again to wet it and this time found her entrance easily. It was still a bit expanded from earlier and gently pushing, I felt the head go straight in. \n\n\"Ahh..yes, that's good, go on, more,\" she said.\n\nI pushed more inside, an inch at a time. She was still very tight, and it gripped my cock, but being well lubricated by her continued juices, it slid in without too much trouble.\n\nIt was different, I could feel more of the contours inside her warm love channel, some smooth and then a slight patch of roughness, the changes produced exquisite sensations along my cock that I had never experienced before.\n\n\"Mmmmm,,, ohh, yessss,\" she whispered, \"keep going.\"\n\nI did, until once again I could go no further, the very tip of my cock-head bumped against something deep inside her.\n\n\"Uhhh...you're right in me, I can feel it, oh, God, thank you Ben, just pull it out slowly now, not all the way, then push it back,\" she instructed.\n\nI did as I was told and slowly, we repeated it, slightly faster this time. \n\nOh shit, I was fucking my sister, I mean really fucking her, with my bare, hard, cock. I was deep in my younger sister's vagina, actually fucking her. Oh my God! I couldn't believe the thoughts, feelings and euphoria those sensations and knowledge were producing.\n\nWe were kissing each other as we fucked, our tongues moving in rhythm to my cock moving in and out of her. Her hips were rising to meet mine and our skin making 'slapping' sounds when we met. We moved faster together, each matching the other, my cock coming almost out of her before plunging in as far as I could push it, trying to get to her very soul.\n\nShe had moved her heels onto my bottom and was pulling me into her on every stroke, I knew I had come not too long ago, but I felt myself building for another climax soon.\n\nI could feel Sue was close too, she made little sounds on every stroke, her muscles trembling with the effort of being 'nearly there'.\n\nI knew I had to pull out before I came now that I wasn't wearing anything, but Sue had me gripped with her arms round me and her legs imprisoning my bottom against her. \n\n\"Sue,\" I tried to tell her, through her mouth pressed against mine, \"I have to stop\"\n\n\"No, no,no, don't stop.\"\n\n\"But...Sue we can't...\"\n\n\"Yes, yes, inside me, you must...\" she almost cried out.\n\nShe went over the edge, forced her hips up at me bottoming my cock inside her, shuddered, dug her nails into my back and squeezed me so hard against her with her heels, I didn't stand a chance. She cried out then, using words I didn't know that she knew, and she probably didn't know she was shouting. \n\nAs she released, like an express train hitting the buffers, inevitably she triggered me. I could hardly move she held me within her so tight. Her vaginal muscles gripped and squeezed then relaxed, only to repeat it a second later. I came with my cock as deep inside her as it could possibly be. My sister's vagina was coated with sperm for the first time and with more sperm than I thought I had left in my body.",
        "She gradually stopped moving and lay there looking exhausted. She released her heels from my bottom and straightened out her legs either side of me. We were both panting with exertion, and our limbs were shaking from the effect of whatever chemicals we had released into our bloodstream, with our passion.\n\nI think I was the first to slowly come to my senses.\n\n\"Sue,\" I said, I finished inside you, all my stuff...I didn't know there would so much more.\"\n\n\"Whew.. just whew...I know you did, I felt it.\"\n\n\"You felt it?\"\n\n\"Yes, I felt it... like a warm sort of something, suddenly inside me, it felt like ...jets of warm water, but I definitely felt it.\"\n\n\"Did..it...I mean.. was it ok?\"\n\n\"Oh yes, oh yes..Jesus... that was just unbelievable, I had no idea it would be like that. The other things we did, were amazing, but this was just way beyond, what about you?\"\n\n\"Yea, the same, it's not something I'll forget, but we can never say anything.\"\n\n\"No, I know, but I won't ever forget it either.\"\n\n\"Sue, I am still inside you.\"\n\n\"I know, emm... can I see?\"\n\n\"If you want to,\" I said, surprised at her request.\n\nI moved the top part of my body back until she could partially sit up. She looked down at where we were joined.\n\n\"Oh Ben that's sexy, seeing him sticking into me, I wish I could have seen him going in and out while I felt it, don't you think that would be very erotic?\"\n\n\"I'm sure it would,\" I said, maybe...\n\n\"Yea maybe,\" she said wistfully, \"but we need to clean up, look, he's going soft and all your stuff 's coming out of me onto your bed.\"\n\n\"Oh hell, it is, we should have had something there.\"\n\nShe put her arms round me as we sat there, \"Would you ...like to do this again sometime?\" she asked.\n\n\"I would, yes,\" I replied, \"but we have to be very careful, it's too risky without using something, unless you know how to get on that pill that's available, without anyone knowing.\"\n\n\"I'll think about it,\" she mused, \"but let's sort all this out, they will be back soon.\""
    ],
    "authorname": "jasperspen",
    "tags": [
        "experimenting",
        "first time",
        "innocent",
        "learning",
        "naive",
        "oral",
        "shy",
        "sister",
        "young 18"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/the-garden-shed-ch-05"
}