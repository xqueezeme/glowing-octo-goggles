{
    "title": "Alpha Killer Ch. 46-50",
    "pages": [
        "Randall Meechum's POV \n\nSulphur River Pack \n\nI groaned as I woke up, looking at the clock next to my bed. Two-twenty. My movement caused my mate to shift in my arms, her leg coming up and bumping into my morning wood. I groaned again as she moved her hand down to it. \"Morning love, or should I say good afternoon.\" \n\n\"It is,\" she said. \"I love waking up this way.\" \n\n\"In my arms?\" \n\nShe grinned as she looked up at me from where her head was resting on my chest. \"Horny and you're already hard,\" she said. She moved over me, kissing my chest and moving up my body. Her nether lips were rapidly moistening as they rubbed over my length. My hands ran down her sides, grabbing her hips and moving her back and forth as I became even harder. \"I need you,\" she said as he reached down and grabbed my shaft, aligning it with her opening and sinking back down. \"Oh fuck that's good,\" she said as she bottomed out. \n\nShe was hot and tight, and I tried to focus on her instead of the velvet glove around my cock. She started to rock back and forth as she put her hands on my chest. I moved my hands up to her perky breasts, leaning forward to suck on a nipple. Neither of us were going to hold out as she started moving faster. The sound of her hips smacking down on mine filled the room, each thrust pushing me deep inside her until I couldn't hold back. \"I'm cumming, love,\" I said as I let go. \n\n\"FUCK!!\" She felt the first of my cum hit her deep inside and dropped down, her own orgasm squeezing me as she threw her head back and screamed. I grabbed her ass, holding her down on me until I had filled her completely. She collapsed back on my chest, enjoying the feeling over the mate bond. \"I love you,\" she said. \n\nI hugged her tight. \"I love you too, Talia.\" We enjoyed the moment, which was over as soon as I came out and our legs were covered with goo. She rolled off the bed, pulling me to my feet and leading me to the shower. \n\nWe were enjoying the cleanup when my Dad sent to me. \"Talia, Randall, we need to talk with you guys. We're down in the safe room with your vampire friends. You missed breakfast and lunch but there's food down here.\" \n\n\"We'll be there in fifteen minutes,\" I replied. \"Come on, duty calls.\" We quickly finished and dried off before getting dressed. We were there in fourteen, hand in hand. Mom and Dad were sitting at a long table, along with all four of the vampires and Erica. Bobby and Tania came in just behind me. \"What's going on?\" \n\n\"While you have been changing, they've been busy working on the leads for the slave trade. We need to make some decisions soon,\" Dad said. \n\n\"We have three major targets,\" Jarrod said as he walked up to the walls where bulletin boards were hanging, filled with photos and other documents. \"The first is the slave training facility where Tania was taken after Beta Jack sold her to Joey 'Bag of Donuts' Venucci. Tania didn't recognize him, so we don't know if Joey just transferred her or if the Chicago Mafia is running it.\" \n\n\"Either way, Donuts is going to have a bunch of holes in him,\" I said. \"With the organized crime links, it probably would be best for me to bring in the FBI on this one. I'm sure they have a lot more on him and his group than I do.\" \n\n\"Which brings us to the facility. You were there for weeks, weren't you?\" \n\n\"Yes, up until the auction,\" Tania said. \"They never used their full names. Crystal was the only one who worked with me directly, I don't know her last name. The others were in the background.\" \n\n\"Do you think you can remember faces, with enough detail for a sketch,\" Patty asked. \"We have a good artist in our Pack, and now that your wolf is back, you should be able to send images to her over the link.\" \n\n\"I think so,\" she said. \"I can try.\" \n\n\"Good. We can use facial recognition to search the FBI databases, right Randall?\" I nodded. \"After that is the island. You can't hide an operation that big,\" Jarrod said. \n\n\"I think we know where that is, we just haven't been able to gather evidence to shut it down,\" I said. \"They are on an island under Colombian jurisdiction, controlled by the drug lords. Private landing strip, connecting from other islands so no US jurisdiction. Invitation only.\" \n\nPatty moved over and knelt by Tania, holding her hand. \"I hate to make you relive those days, Tania, but we're going to need help here. There's no getting on that island without an invitation, and operations like this are done by referral. I need the same things; names and faces of the staff you can remember, and anything you remember for names of customers.\" \n\nJarrod nodded. \"If we can track down the customers, we can use them to wrangle an invite.\" \n\n\"What good will that do,\" Tania said. \"There's dozens of people there.\" \n\n\"You'd be surprised what Talia and I will be able to do with a few of our buddies,\" I said. \"We don't care if they search our luggage because we bring our own weapons. They'll be dead and buried before morning comes.\" \n\n\"Good,\" Tania said. \"What about giving a statement to the FBI?\" \n\nI looked at my father. \"Randall, you and Talia are returning to your apartment tonight. In the morning, go back to work. Bobby, you call him when you guys are done here and set up a time to come to his work.\" \n\n\"Is she going alone?\" \n\nDad shook his head. \"No, Talia is her sister, she will bring her in. The story will be that Tania ran off after the shooting, and you didn't see anything, and you were scared. You ran until you were able to call your sister, and she came and picked you up. You've been in rehab under the care of Doctor Anders in New Orleans, and you are now well enough to give a statement. We will practice with you so you can say as much truth as possible while still protecting the Packs and the Coven.\" \n\n\"I think I have a better idea,\" I said. \"Dad, is Lou Walls still a lawyer in town?\" Dad nodded, he was an older wolf in our Pack and often worked Pack matters. \"Let's bring him in, he can be the counsel for Tania. She's willing to talk, but she is worried about being arrested. Have him call my office late this afternoon and ask for me. When you are told I'm not available, ask to speak to my supervisor. Tell her you are willing to make a statement and answer questions on the Fort Worth killings and your time as a sex slave. In return, you want immunity from prosecution.\" \n\n\"She was a victim, son,\" Dad said. \"They aren't going to arrest her.\" \n\n\"She's scared and she doesn't know that. She was involved in prostitution and she fled the scene of a crime. She also stole cash from the pants pocket of the man who was in there with her. They'll give her immunity, once Lou tells them what she is willing to provide.\" They all nodded. \"Request that an agent interview her at Lou's office in town, because she's afraid to go back to that city since they haven't found the killers yet. My boss will send me, since this is in my back yard.\" \n\n\"That could work,\" Bobby said. \"I'd feel better if she could be around home instead of traveling back to the cities. I want to be there with her.\" \n\n\"How do we explain them knowing each other,\" I asked. \n\nDad thought a minute. \"We can't. I think Snacks will need to make a comeback. It's not a stretch that a woman who has been through so much would bond with a big dog from my ranch, one we gave her for protection and comfort,\" he said. \"That way you're in the room and it doesn't raise more questions. We just need to get you a collar and a service dog vest.\" \n\n\"I hate collars,\" he said. \n\n\"Maybe I'll feed you some of those liver treats if you behave,\" Tania said with a giggle. \"I like this plan, I don't have to spend hours on the road.\" \n\n\"You'll get plenty of latitude in questioning, you'll have the statements written up already and we can just ask clarifying questions. Give them everything on the abduction, Todd is a fugitive right now and Justin is missing and will be dead soon. The Chicago Mob is likely running the training center. The island is outside FBI jurisdiction, but we won't give them names or helpful details. Your time with Dirk and Peggy you can talk as much as you want; both are dead, and it has nothing to do with Packs. All you have to do is say you didn't see the shooter, and you grabbed cash and ran. Any objections?\" \n\n\"Lou and I will make sure she stays within bounds,\" Dad said. \n\nI nodded. \"We can also say that your lawyer put you with the sketch artist so you would have more to offer. When it's over you say you're done. You fear for your safety and are going back into hiding, only your lawyer will know how to reach you. I want you to disappear again.\" \n\n\"That sounds good. We're staying here, right?\" Tania was leaning into Bobby for comfort. \n\n\"You won't be wanted for anything, but I think it will be best if you stay on Pack grounds,\" Dad said. \"Todd's still out there somewhere.\" \n\nI looked over at my mate. \"With this plan, there's no reason to risk you traveling to Dallas just to end up coming back here tomorrow. You're safer here, and you can help train Erica while I drive.\" She didn't look happy I was leaving, so I leaned over and kissed her. \"I'll call into work and tell them I'm over my viral pneumonia and will be back in the office in the morning. Jarrod, I'm going to be fine on my own, right? No bloodlust?\" \n\n\"You should be good for another week before you need to drink again. You should spar with Talia and with us when you return; no one else in the Pack will be able to challenge you now. You already know the moves, now you need to adjust to your new strength and speed. If there are any questions, call us. We'll be here.\" \n\nDad tossed me a set of keys. \"Your Jeep is in the garage, two of the exchange wolves arrived with it this morning. Talia's motorcycle key is on the ring with it.\" She almost grabbed for the ring, and I quickly detached the carabineer and handed it to her. \"It's fine, it's been washed and gassed up.\" \n\n\"Probably best if leave it in the garage for now,\" I said. \"There's only one paved road and that's the driveway.\" \n\n\"We've got some dirt bikes in the pole barn if you want to ride,\" Patty said. \"Any of the boys would be happy to show you the trails we have, and it gives you a chance to see our land.\" \n\n\"That would work,\" Talia said. \n\nI stood up, and Talia took my hand as she stood by my side as I took her hand. \"Thank you all for the help. I'll be back here after the interview is done and we can go over the next moves.\" Talia and I hugged everyone, then went back upstairs. \n\nI barely had the door closed before she had her clothes off and was yanking down my shorts. I moaned and leaned back against the door as she licked at my rapidly hardening cock. \"I need you,\" she said between sucks as she looked up at me. \"Fuck me hard, baby. I want to feel it when you're gone.\" \n\n\"We're wamps with vampire healing, I could fuck you half to death and you'd be good as new in an hour,\" I said. \n\n\"Then fuck me half to death.\" I smiled and picked her up, tossing her twenty feet onto the bed. Her naked body twisted in the air, landing softly on all fours. I kicked my shorts off and was behind her in a flash, grabbing her wrists and holding them behind her back. She moved her hips, trying to get me inside her. I lined up and slammed my hips into her, plunging deep into her tight pussy as she screamed in pleasure and pain at the sudden invasion. \n\nWe'd never really let go, our lovemaking had been at normal human speeds. She howled her pleasure into the pillow as I took her hard. The room was filled with the wet slap of my hips hitting her sex, the grunts and groans of our exertion, and her begging me to fuck her harder, faster or deeper. \n\nShe came explosively as I suddenly speeded up, fucking her from behind at vampire speed. I soon realized why even vampires didn't screw like this. No matter how wet and willing she was, if you move one object in another fast enough, the friction builds up heat. \n\nLots of heat. \n\n\"FUCK!\" I pulled out, my cock red and the juices on it sending off wisps of steam. She rolled on her back, holding her legs open. I moved on top of her and shifted to face the opposite way, using my tongue to cool her insides as she took my length in her mouth. It only took a few seconds to cool us off, then I rolled off and lay next to her. \"I guess that answers the question,\" I said. \n\n\"Which one?\" \n\n\"If I smoke after sex.\" She looked at me, then busted out laughing. I got up and moved over her, slowly pushing my healed length into her. \"Maybe a slow lovemaking is better.\" \n\nWe rocked back and forth as we kissed, but she needed more. Her legs wrapped around me, and I picked up the pace. I moved her legs onto my shoulders, changing the angle, and started pounding her hard again until we both broke as I came deep inside her. I moved her legs down, then laid on my back and rolled her into my side. \"I'm going to miss you tonight. I don't like being apart from you now that I have you.\" \n\n\"I feel the same way, Randall. I never expected to be happy, I didn't expect I'd still be alive by now. We're going to do this.\" \n\n\"Together,\" I said. \n\n\"Together.\" She snuggled into my side, falling asleep. \n\nI couldn't sleep, so ten minutes later I rolled out of bed and packed my bag. When I was ready, I leaned over and kissed her. \"I love you, Talia. Stay safe.\" She let out a moan and snuggled my pillow. I let myself out. \n\nTwenty minutes later, my Jeep was leaving the Pack lands and heading towards the highway. I called my boss, who was thrilled to hear I was on my way back. \"You've never been sick before, Randall. This pneumonia must have been bad.\" \n\n\"It knocked me on my ass, I can't argue that. My Mom hasn't fussed over me that much since I was eight.\" She laughed. \"See you in the morning.\" \n\n\"Lots to do, Agent Meechum.\" She hung up as I was reaching the main road. \n\nUnknown POV \n\nI was in my sniper's hide, the camera attached to the spotting scope and the scoped rifle next to it. I tracked the Jeep leaving Pack lands, taking photos which were then sent to Todd at our hotel base. I called him up. \"Todd, you get the photos?\" \n\n\"Yeah, it's Randall Meechum. Let him go, he's not a target.\" We had photos of the Alpha Killer and her four Vampire friends. He was offering ten thousand a week to be part of his army, and we'd split a million dollars if we captured Talia and Jarrod. It wasn't going to be easy, but being a rogue had never been easy. \n\nDo my job well, he had said, and there would be a spot for me in his Pack. Five years alone was long enough. \n\nCh. 47 \n\nAlpha Brent's POV \n\nSulphur River Pack House \n\n\"Alpha, you need to see this, we've got watchers near the entrances,\" the warrior manning the security center in the basement of the Pack House said. \n\nI looked at my watch, it was just after three. \"I'm going to bring Jarrod in with me since this might be involving him.\" I linked Patty who was with the children out back and asked her to meet me at the basement door. \"Hi baby,\" I said as I pulled her into my arms as I reached the stairway. \n\n\"More intrigue,\" she asked. \n\n\"I guess.\" We went downstairs, and I grabbed Jarrod out of the safe room. He and his Coven were amazing because they didn't need to sleep, and Eduardo was a whiz on computers. I'd put him with my alpha geek down in the server room and they were digging up all kinds of evidence. \n\nWe entered the small security center, which had one warrior manning the station 24/7. High definition televisions showed the areas around the Pack homes, the entry roads, and other areas of interest. The technology was state-of-the art; all cameras were shown sixteen to a screen normally, and motion sensors or mouse clicks could be used to bring up details on two large screens. The passive defenses, such as vehicle barriers, remote-operated fences and tear gas bombs, were also controlled from this room. Our Theta, Marvin Thurber, the leader of Pack security, was already there. \"What did you find, Michael?\" \n\n\"Our perimeter patrol drone picked this up around lunchtime,\" he said. He pulled up a video clip on the computer of the main driveway to the Pack House. Across the road, maybe a quarter mile away, the thermal imager picked up the shape of a man, prone in the bushes and pointed towards our territory. \"I made a note of it, but he was still a ways off. It was only when the drone saw this that I got nervous.\" The next clip, of the back exit to our territory, showed a man in a group of trees. \n\n\"Sentinels,\" I said. \n\n\"Yep. They were in the same places as the drone did its next lap.\" Our territory was huge, and it would take too many wolves to patrol the border to make it practical. In addition, we were in cattle country; if any neighbors saw a wolf, they'd probably shoot it. We had purchased a half-dozen autonomous drones and programmed them to fly a surveillance pattern. Flying high enough their engines were difficult to hear, their high-resolution cameras transmitted images live back to our security center. Once in our security center, artificial-intelligence image processing software matched the images to stored images of the territory and highlighted any differences. We always had one in the air at the edge of our territory, and another flying a one-mile perimeter from our homes. The technology brought it to the warrior's attention, and he could dispatch remotely-piloted drones from there. \"I sent a patrol out to scout it, they stayed out of sight and got eyes and noses on. They are both werewolves, both rogues, and both armed with long-range rifles.\" \n\n\"Shit.\" Things just got real. \"Any more of them out there?\" \n\n\"I think we may have some patrols in cars, but it's hard to tell. I can direct our patrols to investigate.\" \n\nJarrod shook his head. \"Better not to approach them or show any signs we are onto them. They probably know my Coven is here, maybe Talia is who they are after. They didn't shoot at Randall, they're just observing and reporting. Now that we know where they are out there, we have the advantage.\" \n\nI thought about it, he was right. If they stayed off the territory, I couldn't do anything about it anyway. \"Keep an eye on them and let me know if others start to gather. Keep two drones in the air around the border at all times.\" \n\n\"Yes, Alpha,\" Marvin said. \"I am also going to have a few of my best snipers find positions where we can observe and take out the targets if directed.\" I nodded, knowing it would be good to have that option ready. \"Do you want to put the Pack on lockdown?\" \n\n\"No, but I don't want anyone going out alone or unarmed. Changing our habits could tip them off too.\" I sent a message out to all Pack members, informing them we had rogues monitoring the Pack borders. Effective immediately, no one was to go closer than a mile to the Pack border without coordinating it with Theta Marvin or myself. Once I was satisfied my Theta had it under control, my mate and I returned with Jarrod to the safe room. \n\n\"How are we going to get Tania out of here safely,\" Eduardo asked as we briefed the vampires and Erica on what we had found. \"If it's Todd, he'll want her dead.\" \n\n\"We have an advantage in that Todd thinks she has no wolf,\" I said. \"We can use that.\" \n\nMarcy looked at me. \"It might be best to move quickly. We haven't been here long. If Todd is raising a rogue army, the longer we wait the more people he has.\" \n\n\"He's after Talia and Tania,\" Erica said. \"He probably thinks he can survive the backlash if Tania isn't around to testify against him. Or, he thinks killing Talia will be enough to get the Council to pull its arrest warrant.\" \n\nJarrod smiled. \"Well, they don't know about the four of us, and they don't know about Erica's new abilities.\" \n\n\"What are you implying,\" I asked. \n\n\"Sometimes when you see the mousetrap, you just need to trip the bar and steal the cheese. We send Talia out in a car, something with bulletproof glass if you have it.\" ",
        "\"I have one armored SUV,\" I said. \"I use it when my mate and I leave our territory.\" \n\n\"Perfect. Put her in it with a few of your top warriors. Put more in another vehicle. We will be the surprise, they'll never expect vampires to be working with you. The six of us will zip out and kill this rogue army while your warriors keep them engaged.\" \n\n\"That's kind of dangerous, isn't it?\" \n\n\"Not so much if we do this,\" he said. He explained his plan, and I went to talk to my sons and my Beta about how we were going to make it happen. Tonight, while Randall was back in Dallas and the Pack was resting, we'd make our move. \n\nJust after sundown, Talia entered the armored SUV in the back seat behind the driver. Three warriors were with her, and all four were wearing body armor under their clothes. The vests included ballistic plates capable of stopping a rifle round, but their heads were still vulnerable. A second SUV with four more armored and armed warriors led them down the driveway. The group stopped at the end of the drive, where it met the county road. \"They are leaving Pack land now,\" Theta Marvin sent from the security center. \n\n\"Be careful, love,\" Patty sent to me. She and all the other non-combatants in the Pack were already in the safe rooms, just in case this was bigger than we thought. \n\n\"I will.\" I looked at my iPad in the lead SUV, I had Erica, Jarrod, Eduardo and my Beta with me. The live feed from the drone overhead showed the two cars turning left. I could see the sniper tracking them, with a spotting scope not a rifle, and it looked like he was making a phone call. \"Time to spring the trap. We're two minutes back. In thirty seconds, take out the sentinels.\" \n\n\"Roger that, Alpha.\" We were running without headlights, and the hills would hide us from the sentinel for a few more seconds. \n\n\"Target down,\" the sniper on my side sent. \n\n\"Target two down,\" the sniper on the back road sent. \n\n\"Good job, men. Send the backups out and around,\" I said. Since it was impossible for Todd and his people to know where we were headed, we figured they would set up before the first crossroads, which was about ten miles away in the direction Talia's motorcade had turned. The backups were going to approach the crossroads from the other side, making sure none of these bastards would escape. A second group of warriors was going to the crossroads on the side they didn't go to. They'd either kill them or chase them if they came towards the other group. \"Marvin, what are the drones showing?\" \n\n\"Ambush point is three miles ahead of Talia's convoy, at the bottom of the draw by Mitchell Creek,\" he said. \"Twenty-one hostiles on both sides of the road, divided evenly on each hillside. There are men moving around by the bridge, it may be rigged to blow,\" he said. \n\n\"I'm going to bail out before we reach the ambush point,\" Talia said. \"Our escorts will stop just short of the top of the hill and draw fire.\" \n\n\"Sounds good, we'll be just behind you. Warriors, watch your fire because they'll be moving fast. Try to take Todd Aldridge alive if possible, kill the rest without mercy.\" \n\nEveryone was ready. We were racing down the road, about a mile back of Talia's group with our lights off. \n\nI saw the brake lights ahead and knew it was starting. The two SUV's skidded to a halt just before the ambush point, and the warriors used the cars for cover as they started firing their rifles at the wolves lying in ambush. The drone video showed Talia moving quickly through the line of wolves on the left side of the road, leaving four dead in her wake in seconds. \"Dammit, there's not going to be anyone left for us at this rate,\" I said as we pulled to a stop at the bottom of the next hill. The doors flew open, and the four vampires plus Erica disappeared faster than my eyes could track them. \"Cease fire, friendlies inbound,\" I ordered. \n\nOne warrior stayed with me, and I stayed back as I wasn't needed. I watched the feed as the four vampires and two hybrids killed the ambushers in a violent spree that lasted less than twenty seconds. \"All clear, Dad. Todd isn't here.\" \n\n\"Alpha, you have four vehicles inbound your position from the secondary ambush point, we are in pursuit,\" the backup team leader sent. \n\n\"Stay back, we'll be ready for them. Let's get these cars set up on the other side of the hill,\" I said. \n\nOnce we had moved the four vehicles out of sight off the sides of the road, I had them set up spike strips at the top of the hill. We had a few minutes before they arrived, so my men carried the dead to the vehicles and put them on tarps in the back. \"Two minutes out, take positions,\" I sent. \n\n\"Dad, let your warriors do this,\" Talia sent. \"We'll stay back and get any stragglers.\" \n\n\"If you see Todd, grab him and get him out of there,\" I said. \n\nThe vehicles were coming fast, and they didn't slow down as they reached the top of the hill. The sound of blowouts was loud in the air as the spike strips did their job, and the first vehicle skidded and rolled onto its side. The second vehicle stayed upright but ran into the first. The third and fourth skidded to a stop. As the doors opened, my men unleashed a hail of bullets into them. \n\n\"Todd's in the lead vehicle,\" Erica said. \"Shift fire, we're grabbing him.\" \n\nThe crossfire shifted back to the other cars, and since every wolf that showed his head died, there wasn't much return fire. \n\n\"Todd's in custody and we're clear,\" Erica said. With that, the warriors moved forward, wiping out the rest of the resistance. \n\nWhen the gunfire stopped, I walked past the lead vehicle to where Jarrod was holding Todd to the asphalt. His jeans were stained with urine, and his shirt was spattered with the blood of his driver. One of the warriors brought over silver cuffs and shackled him. \"Get him out of here and to the cells now,\" I told my men. He was loaded into the back of a vehicle and they took off. \n\n\"Load the dead into the vehicles and get them out of here,\" I said. My Theta had already dispatched trucks to collect the cars that weren't driveable, plus cleaning crews and their gear. We didn't have much time, there were human ranches around and we needed to be out with the evidence before any Sheriffs arrived. The vampires fed on the wounded before cutting their throats, and the dead were piled and removed in minutes. \n\nI stayed around with a dozen warriors and the vampires as we waited for the trucks. We pushed the lead vehicle back upright, but it wasn't going anywhere with its tires shredded. The trucks arrived and we pushed the ruined vehicles up ramps and into them. The cleanup crew had tanks of hot water with bleach to remove the bloodstains from the road and the dirt on each side. We also removed the charges that had been set on the bridge. \n\nThirty minutes after the attack started, we were done. I wanted to run, my wolf a little disappointed we didn't get into the action, and I was joined by the remaining warriors. We crossed back into our territory and beat the trucks back home. \n\nIt was a good night; we only had a few injured, none seriously, and the Rogue Army was no more. \n\nI shifted back as Patty jumped into my arms, kissing me and welcoming me home. The scene was repeated by many of the other warriors, everyone relieved to be back after defending the Pack. I kissed her hard, then set her down and looked over at Talia, who had shifted and pulled on a long T-shirt. \"Ready for some fun?\" \n\n\"Oh yeah. Let's get Tania and Bobby then go talk to Todd.\" \n\nCh. 48 \n\nChief Enforcer Jacque Jones' POV \n\nHampton Inn, Sulphur Springs TX \n\nI hadn't heard from Todd Aldridge in an hour, and their snatch-and-grab of Talia Stillwater should have been done long ago. I pinched my nose, knowing this was going bad. I needed to know how bad, so I grabbed my phone and keys and left the hotel room for my rental car. \n\nThe drive took about forty minutes; he had told me she was spotted leaving and which direction, so I had a good idea of where they would have made their move. It was nearing midnight as I reached the crossroads, then took the country road that led along the edge of their Pack lands. The night was warm, my windows were down and I had the radio off so I could concentrate. \n\nI came over a hill and braked quickly, pulling over to the side of the road. My headlights showed nothing but two-lane blacktop, heading down to a bridge over a creek and back up the other side. Nothing appeared out of place, yet everything was wrong. \n\nThe smell of blood was strong in the air, as was the smell of gunpowder and bleach. \n\nI turned off my car, closing the door behind me as I took a good smell. There weren't any houses around and my senses were better in wolf form; moving to the passenger side of the car, I pulled off my clothes and tossed them in. Shifting into my large black and tan wolf, I took a deep sniff of the area. \n\nThere was a lot of blood, but no bodies, so the wolves had cleaned after themselves. The bleach was cutting the strong smell, and I could see some places where the road had been power washed. In the scrub I found fresh shell casings, mostly 5.56mm but some pistol caliber as well. It must have been a battle. \n\nI spent the next twenty minutes processing the scene as I sniffed around the kill zone. There had been close to fifty people here, including four vampires. What was shocking to me was that the four vampires had arrived and departed with the Pack wolves. I had confirmed one thing; the Sulphur River Pack was working closely with the New Orleans coven led by Jarrod Covington. \n\nI had smelled the Alpha Killer before, and my mind processed the change in her scent. She was no longer rogue, she had the Sulphur River pack smell, and she was mated. The vampire wildness that was part of her scent was easy to detect, and I froze when I smelled it in another wolf. \n\nThe Council would need to know this. There were two of these abominations running around this pack with the four vampires. How many more were they making? The new one was young and female. Imagine if they could breed true! \n\nI needed to call this in. The rogues were dead, and there was no time to raise a rogue army or look for plausible deniability. We had the evidence now that the vampires were turning multiple wolves, and who knew how many more were on the way. It was time to call on the Packs and wipe this nest out before it killed us all. \n\nI trotted back towards my car, my mind on the problem and not on my surroundings. It was a rookie mistake, and when I saw the man sitting in my car I froze. \"You're trespassing on my land. Shift back,\" the man ordered. I could feel his dominance, and if that wasn't enough, I could sense a half-dozen more wolves surrounding me. \"Council Chief Enforcer Jones. I didn't expect to find you so close to a group of rogues who tried to kill my Pack members. Your presence here is problematic.\" He tossed me my clothes, and I pulled them on. \"Get in.\" \n\nI sat in the passenger seat of my car as he started it up. I saw a few wolves starting to follow us along the road as we pulled back out onto the road. It didn't take long to find out that he knew far more about what I was doing here than I thought. \"We captured Todd Aldridge, and he's singing like a canary. Before you even drove out to see what happened, we knew you were his contact and we knew exactly what you were here to do.\" \n\nI let a breath out. \"Where do we go from here, then?\" \n\n\"That would depend on how loyal you are to the men on the Council. They hired a rogue army, led by a wanted criminal, to attack and capture members of a sovereign Pack and a Vampire Coven. My Pack and my allies will not stand for this, and when the other Packs learn of the Council's treachery?\" \n\n\"The Council is doing what they must. You and Jarrod cannot continue to create these abominations. It will be the END of our species!\" \n\nHe just laughed as we turned into the driveway for his Pack House. \"Do you know how Talia became the Alpha Killer?\" \n\nI had my ideas, but no one knew for sure. \"She disappeared, then a year later she makes her first kill. We all assumed she had dedicated herself to the warrior arts. It was only in the past few days that we realized she had become hybridized, and her strength and speed was from our enemies.\" \n\n\"They aren't our enemies, there is no declared war. Our kind does not have to be in conflict if we can find common ground.\" He smiled at me. \"Jarrod is a good man, as is his coven. I am proud to be bound to him through mating.\" \n\nMy jaw dropped. \"How can you...\" \n\n\"Talia is mated to my son Randall. Jarrod's blood runs within her, and he and his Coven took her in and became her family. As you suspected, it was Jarrod who turned her.\" \n\n\"Because his blood was the only one strong enough,\" I said. \n\n\"Yes. I see you are not completely ignorant of the process.\" \n\nAt this point, I had to start thinking of myself a little. Alpha Brent was not a power-mad Alpha, he clearly loved Talia and had no issue with her being his son's mate. \"The Council's doctor, Tara Himen, experimented with blood from captured vampires. She tried injecting their blood into prisoners, but it was a spectacular failure. She was the one who speculated that the vampire blood they had was not strong enough. When we figured out Talia had completed the change, she said it was because of the Master Vampire's blood being stronger.\" \n\n\"She is right, though it troubles me greatly to know the depths to which our own Council has fallen. I am glad Talia was able to put an end to that madness.\" \n\nI nodded, experimentation like this turned my stomach. \"Then you know why they wanted to take Jarrod. They saw how strong Talia had become, a young female with no training, and wondered what an experienced Alpha male would have. They intended to take the change themselves, to become unassailable in their positions over the werewolf world.\" \n\nHe tapped the steering wheel with his finger as the Pack House finally came into view. \"Talia was a good candidate for the turn because she had no interest in the power she would gain. To her, it was just a tool to get the revenge she wanted. That is why she has refused to take a Pack, even when she has won them in battle.\" \n\nI had found this fascinating when I was reading her files; it was not natural for a wolf. We naturally followed the stronger wolf, and the strongest were the Alphas. He stopped the car in front of the stairway to the front of the Pack House, where a few large men and their mates were waiting. I saw the chase wolves shift and move past them into the house, not paying any attention to me. It was curious; I was a strong wolf, the head of Council Enforcers, yet none of them showed any concern with my being here. It was like they knew I was no threat. \n\nWith three hybrids, an Alpha pair and a couple Alpha blood sons, I wasn't a threat. \n\nI stepped out of the car and waited for the Alpha to come around by me. He led me up the stairs. \"Council Chief Enforcer Jacque Jones, this is my mate Patty,\" he said as she nodded to me, \"Alpha Heir Dusty Meechum and his mate Kimberly, and my youngest son Bobby and his mate Tania Stillwater.\" \n\n\"Welcome to the Sulphur River Pack,\" Patty said with a smile. \n\nI shook hands with each, pausing when I came to Tania. I knew her story, everyone did after she was found. \"You're a werewolf,\" I blurted out. \"How?\" \n\nShe looked at her mate Bobby. \"The love of a true mate can work miracles,\" she said as she hugged him. \n\n\"I hope to find out someday,\" I said. \n\n\"Come, let's go inside and meet the others. We have a lot to talk about.\" Alpha Brent lead us into the dining room, where the long table was filled with warriors and family alike. I froze at the door when the scent of vampire hit me. \"Come on, don't be like that.\" I gulped and pushed myself past the terror I felt when I came before the Vampire Master and his Coven. I practically dove for the chair he gestured for me to take. \"We have had a successful night, and this late dinner is a celebration.\" \n\nThe bottles of wine were passed, the first course was brought out, and Alpha Brent stood with glass in hand. \"I would like to propose a toast,\" he said as he looked over the thirty or so people at the table. \"Tonight's operation was as smooth and successful a mission as we could hope for. The intelligence and tactics were first rate, and I couldn't be prouder about how we executed the plans. The plans were a result of our alliance with Vampire Master Jarrod, and his Coven was key to this night. To Jarrod, Marceline, Anastasia and Eduardo, thank you for trusting us and may our friendship become a beacon for both our kinds.\" \n\n\"Hear hear!\" I joined in the toast, then he sat and we started the salad. \n\nThe conversation was beyond enlightening. The family and friends didn't stay in one place, people were constantly grabbing their plates and moving so others had a chance to visit. At one point I was across from Eduardo and Erica, a vampire and a hybrid, as they explained how they found out they were mates. \"I didn't think it was possible to have a vampire mate,\" I said. \n\n\"It's possible it was because I was her human mate before I was turned and that carried over, or if she mated with my vampire nature. It's not like we have a lot of data, our kinds are not in contact with each to find mates,\" Eduardo said. \n\n\"I don't care. I have my Eddie, and now that I'm a hybrid we were able to complete our mating.\" \n\n\"Was it difficult?\" \n\nShe nodded. \"Jarrod had to plead my case before the Vampire Council, who was not happy with Talia being changed. We got permission to change Randall because Talia bit him, and me so we could mate. The Vampire Council will not grant permission easily. Some of them think we should be destroyed, but we have the votes for now.\" \n\nI could see that. \"The Werewolf Council thinks that having a captive Master Vampire will allow them to become more powerful and cement their rule.\" \n\n\"They have no idea what awaits them. The pain, the bloodlust; if it wasn't for the Coven's help and my mate's support, I would have given up. So many times I begged for death just to end the pain. Sure, I gained powers, but I'm as much of an outcast now as I was when Todd carved the traitor symbol on my cheek. I'm not trusted or accepted outside of Packs I have family relations with.\" \n\nThey moved away, and I started talking with Bobby and Tania. She had a boy on her lap I recognized as Phillip. \"Hey there sport, how are you liking Texas?\" \n\n\"It's hot,\" he said. He let out a big yawn, the frosting from the cake had rubbed onto his cheek. Luna Patty came over and picked him up, telling Tania to relax while she gave him a bath. He clung to his Grandmother as he waved goodnight to everyone. \n\n\"He's doing well?\" \n\n\"Better than we expected,\" Bobby said. \"It's a lot to take in, being taken from the only parents you've ever known and handed to others. It helped a lot when Tania got her wolf back and the bond could snap into place.\" \n\n\"And you, Tania? You went through so much.\" \n\nHer eyes moistened and looked towards Bobby. \"I did, but my life has completely turned around in a short period of time. I have my wolf, my mate, my son, my family and Bobby's family. I haven't been this happy since I was playing at the lake.\" We talked about Tomah Pack, and she spoke about wanting to go back and see her friends and Pack again. \"At some point, I'll either have to step up as Luna or ask someone else to step in. They deserve a leader.\" \n\nI smiled at the two. \"I think they know the leaders they want. Life has a way of putting you where you need to be.\" ",
        "Jarrod got everyone's attention and lifted his glass for a toast. \"I thank you all for inviting me into your home. I am honored by your friendship, and I can see the love you have for each other so clearly. Some of you have more love than others, which even the safe room concrete doesn't muffle,\" he said to laughter. \"Love is what makes life worth living. Without love, immortality is a torture, but with the love of my Marceline and the others in my family, a family that now includes you, it is a joy. To Bobby and Tania, Eduardo and Erica, and Randall and Talia, the newest members of our family. May your lives be filled with joy and pups.\" \n\nI raised my glass to this as well. \n\nI was given a room for the night, though it had no phone and my own phone was not returned to me. The guards were unobtrusive but there; I was not free to leave, and they were not going to let me contact the Council. As I took a shower, I wondered what I would even tell them. \n\nJarrod wasn't creating an army; he was doing what had to happen so mates could have each other. The Pack was not aggressive or power hungry, something that couldn't be said about the Council. As I brushed my teeth and got ready for bed, I realized it came down to one simple question. \n\nWho did I trust with the future of the Werewolf race? The Council, so willing to imprison and experiment to gain power, or the Alpha and Master I met tonight who were forging bonds of friendship? \n\nI wasn't sure about many things anymore, but I was sure of one. I would not allow the Packs to wipe out these good people who wanted to live peacefully. \n\nCh. 49 \n\nRandall Meechum's POV \n\nDallas, Texas \n\nI hated sleeping without my mate now. \n\nMy whole life, I'd never had an issue sleeping. Out on stakeout and there's a chance to grab ten minutes of shuteye? Out in seconds. Sleeping alone? No problem, out when I hit the pillow. With some one-night stand in my bed? Out before she gets out of the bathroom. \n\nLast night I tossed and turned for an hour. I finally got up and got the shirt I had worn yesterday out of the hamper and put it around my pillow, because it still held her scent on it. One sniff and I relaxed and fell asleep. \n\nYesterday Afternoon \n\nI had been driving home when I got a call from my boss, Special Agent-In-Charge Rosalie Martinez of the Dallas FBI Sex Trafficking Unit. \"Where are you, Randall?\" \n\n\"Just hitting Dallas,\" I said. \"Should be home in thirty minutes.\" \n\n\"Too bad, looks like we're heading back up towards your parent's place again.\" She knew I came from an area near Sulphur River. \"I got a call from a lawyer in Sulphur Springs. His client is the missing girl from the Budget Inn. He wants immunity for her, and based on what we know the District Attorney will have no issue with it.\" \n\n\"Was she in on the murders?\" \n\n\"He says no, but she stole money from the john and ran off. I'm hoping she can give more details on the killer. In any case, she has details on that slave training center we've been trying to shut down, as well as previous owners.\" \n\n\"Good. What's the plan?\" \n\n\"Be at the office by seven. The Assistant District Attorney for the case will be driving with us, along with an Assistant US Attorney for federal matters and Detective Carl Anders of the Fort Worth Police. More to the point, you as the junior agent will be driving while we work. We have an appointment with him at one o'clock at his office. He will provide the witnesses' proffer, we'll sign the immunity agreement and take her statement and ask questions. I'm sorry to turn you around like this, but you know the area and you're my lead on this case.\" \n\nI knew this was coming. \"I don't mind the drive. Where are we on jurisdiction?\" \n\n\"No change. The locals have the murders, we have the trafficking. So far, none of the girls we have interviewed have known anything about anyone other than the two dead perps. They were recruited into their ring. None had been with them more than six months and nobody saw nothing.\" \n\n\"I'm not surprised, they were kept busy with clients in those rooms.\" The operation they had was mobile, often moving to cities with lots of tourists or major sporting events. Working through message boards, trusted agents or the Dark Web, they would show up, run for a night and be gone again. The girls might service twenty men a night, never leaving the hotel room. \"I guess I'll get some sleep and see you in the morning.\" \n\nI called my Dad back, letting him know it was on. He promised Tania and Snacks would be ready. I talked to Talia for a few minutes, but she had training to do. We'd talk in the morning. \n\nThis Morning \n\nMy alarm went off at five-thirty, way too early given how I slept. The text message on my phone made my heart drop. It had come in at three in the morning, and I must have slept through the ding. \"Baby, I have to go take care of a problem and I can't bring my phone. I love you and miss you.\" \n\nI sent back immediately. \"Call me when you can, love you &lt;3.\" I rolled out of bed and went into the bathroom, emerging and putting on my suit. I tucked my shield into my belt and my Glock into its inside-the-waistband holder, then strapped my backup to my right ankle. I kept a dagger strapped to my left ankle. I went down to the car and stopped at a local diner for breakfast, then rolled into my office ten minutes early. \n\n\"About time you came back to work,\" Detective Carl said as he got up from my desk chair. \n\n\"Well, the pneumonia kicked my ass for a while, after that I was seeing how much I could milk it with my mom and brothers,\" I said. \"I'm back now, ready to roll.\" \n\n\"Yeah, I ran out of leads a week ago. I'm hoping we get something new here because that killer didn't leave me shit for clues. I can't believe a guy can fire a big-ass forty-five in a hallway, walk out covered in blood, and nobody saw anything.\" \n\n\"One guy did, and he took a round to the head for it,\" I reminded him. \"It's not like any of these degenerates are eager to be heroes.\" \n\nI looked over to my boss's office, where she was walking out with a man in an expensive suit with a University of Texas tie tack, and a woman in a low-end pant suit. \"Special Agent Randall Meechum, Detective Carl Anders, this is Assistant State Attorney Albert Frost and Assistant US Attorney Melanie Perkins.\" We shook hands as she was heading for the elevator. \"Let's go, people, before the traffic gets too bad.\" \n\nIn the parking garage we loaded into one of the standard FBI black Chevy Suburban and I drove us out. I didn't need navigation since I'd made this drive many times. Along the way, the other three were on their cellphones or their laptops the whole time. They didn't want the radio, so I was able to pick up a lot more information than I thought with my wolf hearing. We made it to Sulphur Springs about eleven thirty, and I picked a good place for lunch. I wanted a place with a varied menu and took them to the Corner Grub House. \n\nNow that they were off their phones, we talked strategy as I devoured my chicken-fried steak and a plate of cheese fries. It was my first time to see the information the lawyer had sent. The proffer stated that she would testify and provide information regarding three separate crimes; her sale to and time at the slave training school, her first owners at an island sex vacation spot, and her past year up to her escape. \"Why is she not talking about her kidnapping and rape?\" The AUSA was indignant. \"She was fourteen, she was taken over state lines which makes it a Federal case, and it resulted in a child.\" \n\n\"Her family tracked Tania's son down. The man who took her was known to the family and has since passed away, along with the man who raped her. The wife of her rapist had no idea, she thought he had hired a surrogate who was artificially inseminated. When DNA tests proved Tania was the mother, she waived her parental rights and Tania agreed not to pursue things further. Tania is going through the adoption process to change his birth certificate; at this point, the family believes nothing would be achieved by dragging this into the investigation,\" the ADA said. He was the one who had initially been contacted, while AUSA Perkins had just been assigned this morning. \n\n\"She got her boy back. If she changes her mind, she can tell us later,\" I said. \"It says she didn't see the killer in the motel, so it looks like she can't help Carl with his case. I'm more interested in the training facility and the island. We've heard rumors of the facility for years.\" \n\n\"If it is in the United States, I'd love to take it out,\" my boss said. \"The island is problematic. We haven't been able to touch it, and the Colombians are not cooperating since it is protected by the druglords. The place is frequented by the powerful and the rich, attracted by unlimited sex with boys and girls of any age. Still...\" \n\n\"We'll deal with that when we can,\" Melanie said. \"Based on the proffer, I have no issue with giving her transactional immunity. It's not like we'd be able to prosecute her for theft or prostitution when she's been held in slavery.\" \n\n\"I agree,\" the ADA said. \"I've already prepared the paperwork, I just want to talk to her before we sign.\" \n\n\"We better get going then,\" I said. We each paid our part, keeping receipts for our expense reports, then loaded back up. Lou Walls and Associates was a small office in the suburbs; we were led into a conference room, where the older lawyer was waiting with a teen girl. Tania was looking better, but I couldn't tell if they were more shocked by her lack of weight or the size of the wolf dog sitting next to her chair. Bobby's muzzle was even with her shoulders as she sat down, and her arm was on his neck just above his service dog vest. \n\nLou made introductions, then we got down to business. The immunity paperwork was signed, then Lou laid out the information Tania was providing. They had done a good job; in each setting, her recollection had been transcribed with as much detail as she could remember. The statements were signed and in a neat pile. I was most excited by the drawings they had come up with, as were the others. \"These are very detailed,\" Melanie said as they were passed to her. Done with computer software and aided by the images sent from werewolf to werewolf, they were better than any FBI sketch artist. \n\n\"My investigators were able to pair her with a skilled computer graphics artist, and we were fortunate Tania has a great memory for faces.\" I set up a camera and started the interview. The next four hours were brutal, and I was wiped out by the time we stopped for dinner. Tania's memory was amazing; she had remembered names, identifying features, sexual proclivities, phone calls, all kinds of things that could corroborate her statement. There wasn't as much from the training facility as they were careful not to use names, but the people on the island didn't care. They thought they were above the law, and the list of people who visited and abused her would keep us busy for months. \n\nActors. Celebrities. Politicians. Idle rich. Businessmen. Judges. It was all there, in great detail, and we hadn't even gotten halfway through the time. When Tania and Snacks left to use the bathroom, I sank back in the chair. \"Fuck, if we can prosecute a third of these people it will be the biggest case ever seen,\" I said. \n\nAUSA Michelle agreed. \"She wasn't sixteen for almost every session she's described thus far, and that makes these acts felony sex tourism with minors. Under the Prosecutorial Remedies and Other Tools to End the Exploitation of Children Today, the PROTECT act, plus the Trafficking Victim's Protection Reauthorization Act, they are each facing up to thirty years in prison.\" \n\nADA Albert whistled. \"That'll leave a mark. I bet they'll be shocked to find they can go all the way to South America and still get hit for sexual assault of a child. Do you think you can get indictments based on her statement?\" \n\n\"Not just on that, but she has given us a lot of information on the people there. That pilot they use can fill in some holes for us if we flip him,\" Rosalie said. \"We get the flights and passenger lists and it's a slam dunk. Add in travel information, credit cards, phone records, eyewitnesses...\" \n\nI could sense the AUSA's excitement; she was seeing this as the case that would make her career, and she was probably right. \"Can Tania file a case in civil court against them? I mean, if we don't have enough evidence to convict, can she file a lawsuit?\" \n\nAlbert nodded. \"I'd personally recommend a dozen lawyers who would love to get these cases. None of these people will want to go through discovery, they'll be eager to settle and have a non-disclosure agreement. If they go to court, any evidence is admissible for us.\" \n\nThe door opened and Tania walked back in, Snacks right at her side. \"I hope you don't mind but I ordered some pizzas so we can keep working,\" Lou said. \n\n\"I just want to get this done and go home to my boy,\" Tania said as she sat down. \"I've already missed so much with him.\" \n\n\"Where is home,\" Rosalie asked. \n\n\"It's an undisclosed location,\" Lou said. \"If you need to get in contact with my client after tonight, you'll do it through me.\" We continued the interview, and she described in detail the last client she had on the island, the man who almost beat her to death, who left her scarred and broken. I wanted this bastard bad. He was a famous film director who lived in France but spent a lot of time in the United States. After she described how he destroyed her and paid a fine to the owners for the damage, she started to cry. \"We need a break,\" Lou said. \n\n\"Men leave,\" Tania said instead. \"You need to see something, Ms. Perkins. Do you have a camera?\" \n\n\"I do,\" Rosalie said, pulling it out of her briefcase. She looked at us and we got up and left. \n\nI knew exactly what she was going to show them, I just hoped my brother was calm enough about it now. \"You going to be all right with this, Bobby?\" \n\n\"I've seen the scars and I love her all the more for it,\" he replied. \"You catch this fucker yourself, Randall. You and Talia make it a priority. He's going to suffer under Werewolf law, not human.\" \n\nI walked away from the others towards the bathroom so they wouldn't see how pissed I was. \"You can count on it. He might bounce down a few stairs on the way to our cells, though.\" She was my mate's sister, MY family too. I knew Talia would be all for a road trip for this asshole. \n\nWe didn't stop until eleven at night. We had pages and pages of suspects. As Tania stood up to leave, I came towards her. \"I know it was very hard to go through all this again, and I can't tell you how sorry I am this happened. I promise you that we will use every resource available to find the men who did these things to you and bring them to justice.\" \n\nMichelle came up and impulsive hugged her. \"You're so brave, Tania. I have already talked to my boss, and we are putting together a team right now to build cases against these men. These criminal organizations are going to be shut down and girls like you freed, I promise you that.\" \n\n\"Thank you.\" She had her hand gripping Snack's fur. \"Put them all away.\" With that, she walked out with her lawyer. \n\n\"Great job, Tania, you did so much more than I had hoped for,\" I sent to her as she left. \"Give Talia a hug for me.\" \n\n\"I will when I see her,\" she said. \n\n\"Randall, you need to call your father after you get them to a hotel,\" Lou sent to me. \"A lot has gone down while we were talking.\" \n\n\"Let him know I'll call him when I can. I don't know if they are going to want to get a hotel or head back home.\" It turned out they were too excited to sleep. I ended up driving us back to Dallas, getting there at four-thirty in the morning. I dropped them at the office and went home with instructions to be back at one for a meeting. \n\nMy office was going to strike a blow for justice. I knew they wouldn't give up on this, even if I had to leave the FBI. \n\nCh. 50 \n\nAlpha Brent's POV \n\nSulphur River Pack House \n\nThe celebration had gone late into the night, yet I was up at six like clockwork. That was one of the things I'd lost at fifty years of age, the ability to sleep until my alarm. I don't know why I bothered to set it anymore. I linked with Security Control and everything was quiet. They were going to send a \"highway cleanup crew\" out to the battle site to pick up brass and make sure no evidence had been left behind in the sunlight. So far, we had been lucky, no law enforcement interest. \n\nI got out of bed and dressed quietly. Patty was still sleeping with Phillip curled up next to her. He'd bonded quickly with his grandmother, and that had helped with his transition. He still had crying fits, he missed the parents he grew up with, but his wolf was helping him now. We'd be watching him today since Tania and Bobby were going to do the interview with the FBI and the lawyers. They'd be gone after lunch, and it might go into the evening. \n\nDownstairs was quiet, only Sally was there making early breakfast for those on duty or who like me were up early. With the celebration, we'd be having a pack brunch starting at nine instead of the normal breakfast. \"Good morning, Alpha,\" she said as she brought me a cup of coffee. \"Biscuits are just coming out of the oven. Would you like a chicken-fried steak with that?\" \n\n\"That would be wonderful, Sally. Take your time, I need to wake up.\" \n\nI sat at the large table, iPad in hand, and thought about the day. We had worked over Todd Aldridge in the cells last night, and he had quite the tale to tell. Heck, he was giving us information as he was being driven to the cells, which is why I knew exactly what Chief Enforcer Jones was up to when he showed up later. The Council was behind this all. Todd had cut a deal with them, bring them Talia and Jarrod and his slate would be wiped clean. \n\nWe would have to dispose of the rogues soon, and for that I was glad we had construction equipment and thousands of acres of land. Sally sat a huge breakfast plate before me, the steak covered half of it, four biscuits on the other, and it was smothered and covered with the thick sausage gravy. A huge glass of orange juice was set down next to it. \n\nA few more people straggled in and took their seats, and Sally was joined by four others as they started to prepare for a buffet brunch. \"Grandpa!\" I looked up and smiled as Dusty's daughter Sandy ran into the room. \n\n\"Hey sunshine,\" I said. \"Did you get up by yourself?\" \n\n\"No, Mommy and Daddy are coming,\" she said. I saw Dusty and Kimberly come in the room and come sit by us. \"I'm going to watch cartoons.\" She ran off into the play room for the kids, obviously not hungry right now. \n\n\"Couldn't sleep in?\" \n\n\"I think this boy is going to be a soccer player by the way he keeps kicking my bladder,\" Kimberly said as she sat down by me. Dusty sat on her other side. \n\nI saw my Beta, \"Bear\" Baldwin, entering and I waved him over. Sally took their orders and I took the opportunity to talk. \"Priorities for the day. Cleanup of the road, I hear we have a crew heading out already, we need to make sure that area is sanitized before anyone else gets there.\" Bear nodded, he would put someone on it. \"The rogues have to be disposed of. I want them photographed, identified and buried by noon. Take the excavator out by the old dump and make the hole deep, I don't ever want them found.\" \n\nBear nodded. \"They have cars, hotels, phones...\" \n\n\"Dusty, you have cleanup from that. Collect everything that could track or identify them. If they've rented a car, sanitize it and return it. If it can't be returned, get it to the chop shop. Same thing with hotels, go there, pick up all their stuff and check out. Leave the phones in a public place, scatter them around so it doesn't look coordinated,\" I said. \"Keep any cash, throw everything else.\" ",
        "\"I'll get a team together and get on it,\" he said. \"This could take a while.\" \n\n\"Start with Todd,\" I said. Sally set down food for them, and they dug in while we talked. \"I'm going to go find out what Jarrod has found out overnight.\" They had put Eduardo on the computer trails of the rogues, and Jarrod was interrogating Todd. Just a look from the vampire was enough to get him talking again. I got up, giving Sally and the girls in the kitchen my thanks, and walked across to the building that housed our cells underneath. I acknowledge the guard, who let me in the secure doors leading downstairs. \n\n\"Good morning, Jarrod,\" I said as I walked down the stairs. \"I would have thought you'd be back in the safe room by now.\" \n\nHe just laughed. \"You werewolves and humans think we'll turn to ash if the sun hits us, but that takes sustained exposure over hours. We wear thick UV-resistant clothing, cover our heads and hands and wear UV-resistant sunglasses, and we can walk in the sun long enough to move around,\" he said. \"SPF 100 sunblock helps too, even if it is uncomfortable to be out there, we can recover from the damage of a short exposure. It doesn't mean we like it, though. It's easier to stay underground during the day.\" \n\nI did not know that, and it made me feel good to see how he would trust me with something that could be used against his kind. \"How is our guest?\" \n\n\"Sleeping. I got everything I could from him. He has balls, I'll give him that. He showed up at the Council, alone, and worked out a deal. The Council wanted me as a blood bank, and they told him he could have Talia as his mate if he came through.\" \n\nWait a second. \"So Talia was to be taken alive?\" \n\n\"Yep. He's had a hardon for her ever since he kicked her out, no other she-wolf does it for him now. I don't think for a minute the Council was going to follow through with it. They were using him, knowing that attacking my Coven would mean war.\"  \n\nIt was true. The Vampire Council would never allow a Master to be held captive by werewolves, for good reason. \"Why would the Council risk this?\" \n\n\"What three things drive a man, Brent?\" \n\nI thought about it. \"Power, obviously. Procreation, that's instinctual.\" I thought about it for a while. \"Staying alive.\" \n\n\"Exactly. For the Council, Talia and I are the trifecta. With my blood, they would gain power greater than any other werewolves. Procreation, it's instinctual for a male to seek the strongest female to reproduce with, to give them the strongest children. We don't know if hybrids can breed, none have been allowed to exist long enough to find out. The ones I knew of from vampire history were male, so Talia is a first. I have no doubts Chairman Wolfe planned to take her for his own.\" \n\n\"She's already mated, with Randall.\" \n\n\"To them, Randall is an inconvenience, just like your Pack is. You have to be destroyed, because you know their secrets, you defied them, and you have some control over her. They will wipe you all out, especially her mate, so he can take her and use the mating bond to control her.\" \n\nI just laughed at the idea, Talia was so dominant she controlled Randall, not the other way around. Then it hit me. \"Immortality.\" \n\n\"Yes. Vampires are the living dead; we never age from the time we are changed. We exist until we are killed, which only happens if our head and heart are separated or one is destroyed. We can even regrow limbs if damaged. Werewolves live longer than humans, but you still face death. The hybrids gained our strength, our speed and our healing, but what if they gain the power we have for healing and eternal life? What WOULDN'T the Council do to have that?\" \n\n\"They would do anything, they would be in power forever.\" \n\nHe nodded. \"And that is why the Vampire Council is so resistant to the hybrids existing. Two of the five wanted Talia destroyed just for existing. If she had not proven her loyalty to me and her usefulness to the Council, she'd already be dead.\" \n\n\"Three to two, huh? That's like the Supreme Court. One person dies and it could flip the whole balance of power.\" \n\n\"And now you know my problem. I do not regret changing the three, but I must be careful. If one of them starts behaving badly, Vampires and Werewolves will unite to destroy them all, because both Councils fear them.\" \n\nWe talked for a while longer, working through the options, until I had my plan. I left him to go back to my office and started to make phone calls. \n\nThe first was to the La Crosse Pack and Alpha Clark. I filled him in on all that had happened and what it meant. \"Those BASTARDS,\" he said. \"I want blood on my teeth!\" \n\n\"I have a plan, meanwhile, we have Todd in custody and the girls will have their revenge,\" I said. \"Jarrod pointed out that our two Packs are in danger, since both of us know about the hybrids and both have family ties to them. Stay on a war footing, protect yourselves just in case they rally other Packs against you.\" \n\n\"Again.\" He let out a sigh. \"I have plenty of allies after what Todd did. Let Talia know that Justin died last night, alone and in pain. His mate wouldn't even look at him. I gave her some money to move on and she's gone now, headed off to human life.\" \n\n\"Will she be a problem?\" \n\n\"I put a tracker inside her neck and we'll have a warrior following her. I made her record a statement about her involvement in the kidnapping and rape of Tania. If she becomes a problem, we kill her or release the video to the authorities, and she spends the rest of her life in jail. She signed the paperwork for Phillip, that's in a Fedex envelope heading your way now.\" \n\n\"Good. I'm going to call an Alpha Conference at two in the afternoon,\" I said. \"Tania and Bobby will be giving their statement to the FBI then, but I have other information. Todd is singing like a canary, and their Chief Enforcer, Jacque Jones, is disgusted enough to help. He was the liaison to the rogues and they won't be able to discount what he says like they will Todd.\" \n\n\"I'll follow your lead. Email me the conference number and I'll start calling Alphas. I'll take last names starting with L, you get those from A to K. This is going to be fun, Brent.\" \n\n\"We'll have fun after the danger is over,\" I said. \"Keep you Pack safe.\" I hung up and sent an email to the Council and all Alphas with the request for the video call at 2 pm Central time, along with login details. I went down at eleven, catching the last of the brunch, then joined my mate and my children at the pool. Phillip was a good swimmer for his age, and he was screaming as he was tossed into the air by Bobby before plunging back in. \n\n\"How are they doing?\" \n\n\"Good. She's losing her self-consciousness about the scars on her body; nobody is staring or saying anything, and you know a wolf has no issue being naked.\" Werewolves found no need for swimsuits. We didn't have human body consciousness, and it allowed us to shift in the pool if we wanted. The biggest pool problem we had was fur, which is why we had extra filtration installed when it was built. I watched as Phillip was tossed twenty feet horizontally, shifting into his little wolf in the air and dog paddling back to his Mom before shifting back. They weren't the only ones at the huge backyard pool; some of the younger adults were playing basketball, while a bunch of adults were talking at the swim-up bar area we had. \n\nMy mate looked over at me, she could see the stress. \"Go play with the kids, relax a bit. The afternoon will be bad enough as it is.\" \n\n\"Come with me then,\" I said. We left our clothes on the table by our chairs and I shifted, howling before I took off running for the deep end. I landed so my body splashed the young kids, who squealed in glee before coming after me. Soon I was shifted back to human in the three-foot area with a half-dozen kids trying to pull their Alpha down. \"There are too many,\" I said as I lifted my arms up, four kids hanging from them while the others hung from my neck. \n\n\"Deal with it, love,\" Patty said as she swam away. I was looking at her and didn't see the attack coming from underwater. My legs were knocked out from under me and I was pulled down backwards. I lost half the kids in the fall, and I stood back up and shook the water out of my hair. Bobby was laughing his ass off by his Mom, he must have done it. I glared at him before turning my attention back to the kids, who were laughing as they went after me again. \n\nTania and Bobby had to leave, but Phillip wanted to keep swimming. We stayed in the pool for an hour, just enjoying time with my Pack. She took him to shower and change while I went to the office. I asked Dusty and Bear to join me for the broadcast, mainly to help keep me calm since Patty wouldn't be here. The 80\" hi-def screen in the conference room was being used, and the camera would only show me. I set the computer up, there were some things I was going to show them all and I got them ready. The software we used would allow photos and documents to be displayed for all. \n\nI was in place ten minutes early; since I had called the meeting, I was running the show. I watched as the Alphas got on, each appearing in a small window on the right half of the screen. I smiled at Dallas as he came on representing the Copper Mountain pack. On the left, the person talking (I could click on a person to give them the floor) and the documents were on the top and bottom of the frame. Shortly after two, I started the meeting. \"Thank you for coming on, gentlemen. Last night, an organized group of rogue warriors carried out an attack on my Pack, going after two vehicles just outside my territory. I am pleased to say that all but one of the rogues was killed, and the leader was captured.\" I was studying the reactions; the Council was trying hard not to respond, while the others were pleased. \"Here is the list of the men who were killed.\" I went through a slide show, showing each dead man along with their name and any information we had on where they were from. \n\n\"Those men came from all over the country,\" one of the Alphas said. \"Why would they all come together at your lands?\" \n\n\"Alpha Brent is not disclosing that his Pack is harboring the Alpha Killer,\" Chairman Wolfe said. \"There is a reward for her capture, I'd have no problem paying rogues for it if they capture or kill her.\" \n\n\"My pack isn't harboring anyone, Mr. Chairman. Talia Stillwater is mated to my son, she is part of my FAMILY and part of my PACK. The real question is why the Council is bankrolling Todd Aldridge and paying rogues to get her. Todd kidnapped Tania Stillwater, who is mated to another of my sons, and had her parents killed. He walked in to the Council headquarters and walked out with money and a mandate. And I can prove it.\" I started playing the video, it ran almost five minutes long and during that time all reaction was muted. Todd went through everything; his visit to the Council, the deal he made, where he got the money to hire the rogues, and what he was supposed to do. When it was done, I unmuted, and it was bedlam. \n\n\"ALPHA BRENT IS WORKING WITH VAMPIRES,\" Chairman Wolfe yelled over everyone. \"He is betraying our kind. Talia is an abomination, a mix of vampire and werewolf, and it has to be stopped. The Master Vampire on his lands right now did it, and we as a Council were right to demand their capture.\" \n\nI laughed. \"If your cause was so just, why work in secret with outlaws and disgraced Alphas? I have nothing to hide here. Talia was changed after a Vampire Coven took her in when all of US abandoned her. The vampires didn't kill her parents, Alpha Justin Heranus' men did. The vampires didn't take kidnap her sister, the man the Council elevated to Alpha instead of her did. The vampires didn't rape her sister and steal her baby, Justin did. And the vampires didn't take away her wolf and sell her as a sex slave, Beta Meoffe did.\" I leaned forward, letting my face show that I was pissed. \"Yes, I have a Coven on my lands. They are Talia's family. Werewolves and vampires are NOT at war right now, and I'm building a relationship with them that could benefit us all. Talia proved to me that there were vampires who could be trusted, ones with more honor than some of the men on this call right now,\" I finished. \n\n\"This is madness, and it must stop NOW,\" Chairman Wolfe responded. \n\nSuddenly, the doors burst open in his room. \"I AGREE,\" a woman's voice shouted. He turned and his eyes opened wide, just before Talia Stillwater grabbed him by the neck and lifted him like he was nothing. She slammed him onto the conference table, her claws extending, then she pulled her hand back. \n\nThe front of his neck went flying away in a spray of blood, and Wolfe raised his hands to his neck. It was hopeless, arterial blood was spraying all over the room and he had seconds to live. Talia moved to the side and we heard a plea for mercy. When she came back on camera, she had the Chief Counsel, Lawrence Kendall, on his knees. Extending a claw, she drew it across his throat and tossed him onto the table next to the dying Chairman he served. \n\nShe moved towards the microphone, covered in blood and totally dominant. \"These men gathered in this very room and decided they wanted me for themselves,\" she said to the assembled Alphas. \"The entire Council voted to send rogues after me and my Pack. This Council also risked starting a war with the Vampires by capturing a Master for their experiments. It wouldn't be the first time the Council has experimented on vampires. I personally killed the Mount Shasta leadership that was doing it at their bidding and freed the two vampires they held. You would be at war right now if I had not taken action to defuse the situation,\" she said. \n\nShe casually grabbed each of the men with a hand and tossed them backwards. It looked like she wasn't trying, but these big men flew backwards and their dead bodies left dents in the wall behind her. \"I will no longer accept such leadership. My family will not accept it. My Pack will not accept it, and neither should honorable Alphas. The four of you on the Council who are not here to die at my hands, you have five minutes to resign. If you do not, I will come after you and your death will be neither quick nor painless. Do not think you will escape death, for I bring certain death with me. Choose a new Council, boys. Choose wisely.\" She turned and walked off camera. \n\nA new face came into view, I'd recognized him when they entered. \"Everything she just said was the truth,\" Chief Enforcer Jacque Jones said. \"I have taken control of this facility pending the election of a new Council.\""
    ],
    "authorname": "partwolf",
    "tags": [
        "rogue",
        "vampire",
        "werewolf",
        "fantasy",
        "non-human",
        "nonhuman"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/alpha-killer-ch-46-50"
}