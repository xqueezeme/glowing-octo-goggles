{
    "title": "My Son My Conqueror Pt. 01",
    "pages": [
        "Incest stories. Either you hate them or love them. I'm on the fence despite having written a few and now here I am, providing yet another. There is something so naughty about writing them. It scratches an itch. Now, while I am not proud of writing incest stories, I am aware of the draw for some people.\n\nDoes this make me a bad person? Probably. But I've never pretended to be a nice person.\n\nI love stories with proper endings--not some long protracted series of events that go on and on with more and more implausible things happening. I know readers demand more and more in the stories I create, but you need to understand most times I like the ending and that's it for me. I won't go farther down the rabbit hole, usually content in what I've created.\n\nThis story will have a few parts, but not many.\n\nPlease enjoy,\n\nLove,\n\nLana Ocean\n\nCanada\n\nPrologue\n\n\"A man who has been the indisputable favorite of his mother keeps for life the feeling of a conqueror.\" Sigmund Freud.\n\nMy psychologist instructed me to write down the events that led to me taking my son into my bedroom, my life, and ultimately, my heart. Not the heart of a mother, but the heart of a lover. The quote above from Sigmund Freud is so appropriate to me and my son. My psychologist had quoted it to me during a session after I had admitted to her I had slept with my son. I had gone to her to help me with my emotions. Not to stop me, but to help me make it work.\n\nShe also gave me this quote:\n\n\"It sounds not only disagreeable but also paradoxical, yet it must nevertheless be said that anyone who is to be really free and happy in love must have surmounted his respect for women and have come to terms with the idea of incest with his mother and sister.\" Sigmund Freud.\n\nSo much of Freud is exclusively focused on the man and so little on the woman. Or rather, on the son, and not the mother. When incest is discovered and exposed, it is the woman who suffers the hardest. She will be the more criticized. The more shunned. I feel all those feelings toward myself, all on my own. Thankfully, my son and I have found a way to co-exist. To live in our sin. To find solace in our combined peace and happiness. And no one will ever know.\n\nStill, I can't escape the guilt and shame. They are now my constant companions, but I have come to terms with them. Just seeing the look my son gives me erases all those doubts. It's not right. It's illegal. It's horrible.\n\nAnd I've never been happier or more in love. I actually have three loves, but that part of the story will come later. Just know that I am so very happy.\n\nIt started innocently enough; I suppose. First, a forced encounter. Then another. Then I rose to the challenge. I'm not proud of what I did. But I'm proud of the results. A little hypocritical, but I don't care anymore. My son has accepted all my ministrations and manipulations. It's strange. I've been in love many times in my life, and I have always loved my son from the moment I became pregnant to the moment I held him for the first time in my arms and took him to my breast to feed him. Nourish him. Care for him. As only a mother can. Knowing I was providing his much-needed life sustaining nutrients bonded me to my son in a way that only women understand intimately. The line between mother and son blurs at times. That special bond that is created at conception and continues until your dying day.\n\nAnd now I love him beyond what my heart and soul can handle. It's so raw and real and floods my mind with desires that my body can barely contain. It can be overwhelming. Its psychological and physical.\n\nMy son feels the same way. When you cross that line--the incest line--you open something almost surreal. You wonder: It can't be this real, can it? All I can say to explain it is, my love for him knows no bounds. There is nothing I will not do for him. Nothing. It's as simple as that. All my prior loves pale in comparison. I live in a constant state of arousal as a forty-year-old woman. Constant. And I love it. It has transformed me and brought meaning to my life.\n\nEnough. I was told to write this down chronologically. To explain my feelings along the way. My psychologist is very keen on this story, and I've spent hours with her already. She sits perched on the edge of her seat, her eyes locked on me, writing furiously, grinning at times.\n\nI can tell this story excites her terribly. I can smell her in the room. And she can smell me. It's carnal and I enjoy watching her expressions shift and change. She's addicted to my story. And I can't blame her. I'm addicted.\n\nOkay. Deep breath. Here we go...\n\nChapter One--Jessica and Desmond Smith, Mother and Son\n\nMy name is Jessica Smith. That's obviously not my real name, but let's stick with that. I live in Smalltown, USA, somewhere in the Midwest. The main industry is agriculture and livestock, and the people are not very complex. It's a simple life. The summers are hot, muggy, and wet. The winters are very cold, snowy, and windy.\n\nI work at one of the two banks in town as the Mortgage Loan Officer. My son, Desmond Smith, works part-time as a teller. I've worked at the bank for twenty years. My son started two years ago when he turned eighteen; working mostly weekends during the school year until he finishes his degree in business.\n\nMy husband left us two weeks before our son's first birthday. He moved to California, and I haven't heard from him since. I divorced him through correspondence and his pay was docked a small amount for childcare until Desmond turned eighteen. He's not a deadbeat. He simply felt trapped in a life he didn't want. He wanted to escape Smalltown and eventually he just left. I used to hate him for abandoning us. Now, I feel nothing toward him. His parents still live here, and they used to come around to see their grandson, but now I rarely see them.\n\nTheir loss. Truth be told, they're not very nice people. Sadly, they lost interest in him when he stopped being the young grandchild they could spoil. All that matters is Desmond grew into a wonderful man.\n\nAfter my husband left, I struggled to come to terms with it. I blamed him. Then I blamed myself. Then I blamed my son. My in-laws. The town. The bank. Then I realised it was no one's fault other than my insecure, lost in life, former husband.\n\nThe last man to have sex with me was my husband. He fucked me the night before he left me. One last hurrah, I suppose. He left for work in the morning, kissing my cheek, and I've never seen him again. Since then, I've never been interested in sex. If I were to be honest with myself (and my psychologist tells me, I need to be more honest with myself) after Desmond was born, my sex drive disappeared. Sometimes I wonder if that had anything to do with my husband leaving. Probably. Most likely. I never missed it. You can't miss something you aren't interested in. I simply lost interest.\n\nI am hit on all the time in the town. By men I know who are married. Almost all the men in town are married. Single men my age can't exist in Smalltown, USA. They aren't tolerated. They are suspect. Shunned even. A single man past age twenty-five is looked at as a possible deviant. Homosexual. It gets worse as they get older. I suspect a massive amount of cheating is happening in this town. But not with me. I'm just not interested.\n\nThe young men and women in town have mastered the art of hiding their relationships in town. I know. I lived it once. I was wild in my younger days. I'm the stereotypical Midwest woman. Straw blonde hair (now dyed to hide the little bit of gray), cornflower blue eyes, nice full lips, and a slim figure I work hard at keeping by running and doing yoga.\n\nHeh. I suddenly remembered the first time my son had called me 'hot'. I had been so surprised to hear it I had snorted and looked at him in shock and admonished him, telling him that sons don't say that to their mothers. He looked so upset after I said that, that I had immediately apologized, thanked him for the beautiful lie, and gave him a chaste kiss on the lips. A motherly kiss. Perfectly normal.\n\nMy son would later confess to me that he had left the room, went upstairs and masturbated thinking of me. Not his first time, either. I had no idea my son had been masturbating, thinking of me for a long time. Now I loved to know it. That I did that to him. That I was his most secret desire. Dammit, I adore my son. He's perfect. And I made him. That makes me proud.\n\nAs I said, my son had been working in the bank since he turned eighteen. I got him the job, the bank manager doing a favor for me. I'm sure the manager had expected some kind of reward, but not from me. I had thanked him profusely. And his eyes had roamed my body. As always. Something as a woman you either accepted--that men would ogle you if you had the looks--or something that made you angry and upset despite there be nothing you could do about it. So, I accepted it. As soon as I had started to show signs of being a woman, men stared. Women attract men. And so long as they only look, there's no harm. Women who lose their mind over this need help. Such a wasted emotion, in my opinion. Can you imagine telling a moth to ignore the light? No, you can't. It's the same with men.\n\nI just realised I'm actually enjoying writing all this out. It's therapeutic. I'll get Desmond to check it out later as we've discovered a mutual love of erotica. We find wonderful mother and son erotica and act out some of the sex scenes. It's so much fun. So much fun. Not porn though. I've convinced Desmond to stop watching porn and I think he has stopped. I provide all the relief he will ever need. I'm at his beck and call. The number of times he has simply taken me in our home... so many wonderful memories. I love feeling his strong hands grab my waist and pull me back toward him and claiming me. Pushing me down over the counter, or the table, or the bed, or the back of the couch. He loves looking down at my ass as he ploughs me. Fills me. Completes me. And I take it. And welcome it.\n\nMy son, my conqueror.\n\nI would do anything for my son. He's my lover and soulmate. And he would do anything for me. I am loved, pleasured, cared for, and protected. Does it get any better than that?\n\nWhen I was a young teenager, I had a thought once. What if the entire universe is something my mind has created? What if everything is there only for me and because of me? What a lonely existence that would be. That everyone and everything is simply manufactured out of your own mind and imagination. I almost believed that until my son and I merged as one. I have no doubts that my son and I share the same mind. He exists and lives in his head but with me. We become one. I can see it in his eyes when he makes love to me. It's as if there is only him and me in the universe. The rest is just our imagination. But there's two of us, and I'm not alone.\n\nI think I'm delaying telling this story. I'm so sorry. I just lose track these days. My life has become such a pleasure. I wake every day pressed up against my son. Most mornings I take his wonderful cock in my mouth and pleasure him. Then he pleasures me. Then we shower together. Eat breakfast together. Then we go to work together. Eat lunch together. Come home together. Watch movies together. Go to bed together and pleasure each other until sleep takes us. Every day. I'm so fortunate. It's been a year now and we never tire of it. His existence completes mine.\n\nI will say early on that there are two other important people in our lives. And inside my home, we all co-exist, and the rest of the town doesn't even blink. It's perfect.\n\nI'm still delaying. Sorry. Okay. Whew. I'm shaking a little now. This starts so embarrassingly.\n\n<p align=\"center\">* * *</p>\n\nMy son surprised me by bringing his long-term girlfriend home for dinner. He had turned twenty the week before and I know he lost his virginity to this same girl from his high school. At prom in a typical fashion. Surprisingly, they stayed together afterward. People told me they were always seen around town, hand-in-hand, and everyone assumed they were destined to marry and raise a family. A Midwest mentality.\n\nNow our town is small, and you know everyone. Mostly, but most of the students from the high school were unknown to me, other than those that used the bank, but even then, I had a back office and didn't meet senior teenagers. They don't take out mortgages. After two years of him refusing to introduce me, I insisted she come over for dinner so I could meet her finally and after a lot of nagging on my part, he grudgingly agreed. That's what surprised me: that he finally agreed to introduce me to her. I was worried she already didn't like me, which would explain Desmond's refusal these past two years to introduce me. Which was unusual, I thought, until I met her for the first time.\n\nShe looked like me at her age. Not just a little bit. She looked like me. Same face shape, same hips, same bust, same length of legs, same hair, and eyes. I could show you a picture of me when I was twenty. She was my twin.\n\nI stood in the doorway staring at a mirror image of myself and my very first thought was: He's fucking a girl who looks like me. He chose her, wooed her, and fucked her because she looks just like me.\n\nFor the first time since I had birthed my son, I felt a strong surge of sexual hunger. It hit me like a thunderbolt. My legs threatened to fail me. I put a hand against the wall and tried to breathe as my body betrayed me. Desire washed over me, and I went from cold to hot. My clothes were too tight. My bra crushed my chest and felt two sizes too small. My thighs pressed together to try to hold back the warmth and tingling.\n\nI was so ashamed of myself. I knew exactly what was happening. I had had these thoughts before. Random flashes of thoughts thinking of being intimate with my son. They would come and go, and I would dismiss them as just silly thoughts, convinced it was perfectly normal. And my psychologist agreed. It was perfectly normal, she had said. Children imagine being sexual with their parents and parents imagine being sexual with their offspring. But it is never acted on. Never pursued. Just flights of fancy that come and go.\n\nDesmond, of course, rushed to my side, concern all over his face. He grabbed my upper arm to steady me, and his fingers brushed my left breast. He couldn't help it. My breasts spread a little beyond the side of my body. A curse and a blessing. His fingers around my arm pressed into my breast flesh, and it only made matters worse.\n\n\"Mom!? Are you okay? You're flushed! Your face is all red! Do I need to call a doctor?\"\n\nThis was Smalltown, USA. You didn't call 9-1-1. You called the doctor. There were only four doctors in town. No ambulances except for the county service, and that sometimes took hours. No, you called the doctor, and he came to your house.\n\nI knew what was wrong and the last thing I needed was for my doctor to see just how soaked my panties were. I was struggling to compose myself. My sexual identity had just woken up. Hard. And I was so ashamed for the reason why.\n\nI had to give him a reason to relax. I could see his girlfriend looking at me in a strange way and, at the moment, I was certain she understood what was going on with me. My cheeks burned hot. She knows! She knows I'm having sexual desires for my son. I was disgusting. Immoral. Sinful.\n\nOh my God, I thought, I need to get away for a moment. I need to calm myself.\n\nDesmond was staring intently into my eyes, looking for something. I could see his worry, and I nodded at him and straightened. The whole incident had taken mere seconds. I straightened my skirt and smiled at him.\n\n\"Hot flashes, I think,\" I said, and forced a little laugh, although I was nowhere near menopause. \"It will pass. Desmond, please introduce me.\"\n\nDesmond looked at me for a longer moment, and then his eyes went to his hand around my arm. He could feel his fingers pressing into my breast, and he let go like he had been branded. He wiped his hand on his jeans and turned to his girlfriend. That little action made me sad, for some reason.\n\n\"Mom, this is Leanne. Leanne, meet my mom.\"\n\nLeanne smiled, and her face lit up with it. She was beautiful, and I was immediately struck by how proud I was for my son landing a girl like her. Oh, right, she looks like me and I'm suddenly a narcissistic bitch. \"Hi, Mrs. Smith, nice to meet you?\"\n\nShe spoke strangely. \"It's Miss Smith, Leanne. Desmond and I took my maiden name after the divorce. But please, call me Jessica. And come in! Get out of the doorway. Come inside. I have a small starter for us to enjoy while we acquaint ourselves. Leave your shoes on. It's fine. I just need a moment. I'm so sorry. Desmond, why don't you take Leanne into the kitchen? The starter is in the fridge. I'll be right there, okay?\"\n\nDesmond nodded and led Leanne deeper into our small home. She made comments about how nice the house was.\n\nI ran up the small set of stairs leading up to the bedrooms and went into our only bathroom. I was desperate. I went over to the toilet, turned my ass to it, pulled my panties down, noting just how damp they were, sat and did something I hadn't done in over a decade. I pleasured myself.\n\nI pushed through my thick unruly bush and found my labia slick and thick and plunged two fingers into my vagina to wet them, and then found my clitoris, hard and exposed, and rubbed it furiously. I came in seconds. It had been so long since I had last orgasmed. The feeling washed over me in waves that built and built. I had forgotten the feeling. The euphoria. The bliss. I came hard, grunting, keeping my voice from screaming. My pussy vibrated, and I felt the orgasm reach a peak. It was too much. Too much pleasure. I imagined my son standing before me, me on my knees, his cock thrusting obscenely at me. Rigid, hard, pulsing with his heartbeat, the head engorged, swollen, veins thick and protruding. My son and his cock. Wanting me. Needing me. Then I imagined Leanne, my doppelg\u00e4nger, licking me. Eating me, my son behind her, fucking her so hard her ass would ripple and undulate.\n\nI exploded and my pussy clamped hard, almost painfully. I heard water hitting the water in the toilet and looked down as the orgasm clenched me hard again. A small amount of liquid gushed from my vagina, and I moaned. I had never done that before. Never. I kept rubbing my clitoris as the orgasm went on and on. This was a first for me. I had orgasmed before with my husband, but never like this. It was too powerful. Too strong. I rode it feeling like I was riding a wave. The thoughts of a woman pleasuring me had been my surprising undoing. I had never had those thoughts before, and those images coupled with my son... Behind me towered a massive wave and it frightened and excited me. I rubbed harder and then the wave crashed down on me. I was lost, tumbling in the surf, I was biting down on my left hand, holding back the primal scream.\n\nI don't know how long the orgasm lasted. It was a series of them. One after the other. Slowly, it faded, and I released my fingers from my clit. My left hand hurt, and I pulled it from my mouth and teeth. Deep grooves from my teeth marked my hand. I had almost broken the skin. I panted and then shook as another minor orgasm wafted through me. I heard dripping and looked down between my legs. My pussy was dripping. Actually dripping.\n\nOh my God, I thought. That was too much. Too much.\n\nI caught a drip in my hand and raised it to my mouth and licked it away. I had done it so quickly that I froze. What have I just done?",
        "I smacked my lips and savored the taste. It was a unique taste. Wonderful. Intoxicating. I swiped my hand through my pussy and then lifted my hand to my face and smelt it. My mouth watered, and I licked my fingers. The slick liquid was stronger tasting now. Jesus, I thought, I taste wonderful. How would another woman taste? The same?\n\nThen reality struck home. What the fuck am I doing? Masturbating and then tasting myself? What was with imagining Leanne licking me? I have never had lesbian thoughts. I was sick. Depraved.\n\nI stood up in a hurry and then grabbed a hand towel from the rack beside me and dried myself. I flushed the toilet and washed my hands and then looked in the mirror at myself. My eyes were dilated. I could see a deep red flush across my face that spread down to my upper chest. My breathing was deep and quick. I couldn't go out like this and face my son. He would know. One look at me and...\n\nA sharp knock came from the bathroom door, and I stifled a shriek.\n\n\"Mom? Are you okay? You've been in there a long time. I'm worried. We heard noises? Are you okay?\"\n\n\"Y-yes. Yes! I'm fine, hon. Just give me a moment to freshen up, okay? I'll be there in a moment.\"\n\nDesmond didn't answer me, but I could sense him hovering outside the door.\n\n\"I'm fine, Desmond. Go back to your girlfriend. Just give me a moment.\"\n\n\"Okay, mom.\"\n\nI heard him walk away on the hardwood floor and sighed in relief.\n\nI looked at myself again. \"What is wrong with you, woman?\" I stared back and refused to answer.\n\nTen minutes later, face washed, and makeup reapplied, I hurried downstairs to the kitchen. Desmond and his girlfriend were seated at the glass table that sat in the sunroom my son had built off the small kitchen. It filled with sunshine most of the day and it was my favorite room in the house. Floor to ceiling glass windows surrounded the room and broad soft couches, almost like daybeds, surrounded the outer walls. Desmond had made it for me. He was so handy around the house, from plumbing to electrical. He could do it all.\n\nWhen he was six, he came up to me one day, looking very serious. I could see his expression and looked at him intently. He spoke very elegantly for a six-year-old. He explained to me how he was the man in the house and would always take care of me. I held him and cried for a long time, assuring him I was happy and not sad. Since then, he always kept that promise. He's the only man I could depend on and trust.\n\n\"I'm so sorry, everyone! I don't know what came over me. Desmond, where's the wine?\"\n\n\"Sorry, mom, I wasn't sure.\"\n\n\"Nonsense. Leanne, I allow my son to drink in the house. I know you're underaged for alcohol, but if you want, you can have some wine. Or beer. Desmond prefers beer.\"\n\nLeanne was staring at me the whole time I had entered the kitchen. I was very aware of her gaze. Then she smiled. \"Sure, missus... I mean Jessica? I would love a beer if you don't mind?\"\n\n\"Desmond, be a gentleman and grab beers for yourselves. And pour me a wine.\" I looked at the table and saw the board I had laid out with meats, cheeses, and crackers was untouched. \"Eat! Dinner won't be for an hour. This will tide us over. Eat!\"\n\nDesmond rose and went to the fridge and busied himself with fixing the drinks. Leanne sawed off a piece of salami and put it in her mouth. She did it in a way I found surprisingly sexual. She gleamed at me, and I smiled back. Did I like women? Is this new or something I always felt? I thought back to my younger days and couldn't remember ever fantasizing about women... Maybe it was just because she's Desmond's girlfriend. She was pleasuring him. And if she would do that for him, looking like me... I left that thought unfinished.\n\nI held my left hand under the table. I could still feel the indents on the side of my hand from my teeth. It throbbed, and I rubbed it a little and then cut off a piece of cheese with my right hand. Leanne looked through the glass tabletop and looked right at my hand. I was sure her eyes went a little rounder, and she shot me a look.\n\nI flushed again. I could feel the heat rising in my cheeks.\n\n\"So, Leanne, are you working?\"\n\nLeanne smiled at me. A knowing smile. I had to pretend she didn't know. She didn't, did she? Maybe not. Maybe I got away with it. Maybe... she grinned harder at me. Fuck, I thought. This is embarrassing.\n\n\"No, I'm not working yet? I applied at the Dairy Queen, but they're not hiring? And at the hardware store? There's not much work in town? I can't work at Walmart? No way?\"\n\nLeanne had a horrible way of speaking that made everything sound like a question. \"Oh, that's too bad. Keep looking though. I'm sure something will open up.\"\n\nLeanne kept glancing at my left hand and my face. \"I saw your wedding photo? The one in the living room?\"\n\nI nodded. I hadn't the heart to put it away. It reminded me of happier times despite the asshole standing next to me in the photo.\n\n\"We kinda look alike? Don't we?\" she said/questioned.\n\n\"Hmm, a little.\" That was a bald-faced lie.\n\n\"Really? I thought it was me in the photo for a moment? How old were you in the picture?\"\n\n\"Nineteen.\"\n\n\"So, wow? Like my age?\"\n\n\"I guess.\"\n\nDesmond returned with my wine, and I grabbed it and took a large swallow. Suddenly, I was so thirsty. My mouth felt dry. My pussy was still wet. I set down the glass as Desmond sat and handed a beer to Leanne, still in the can.\n\n\"Desmond! Get her a glass!\"\n\n\"It's okay, Miss Smith,\" said Leanne. \"I prefer the can?\"\n\nI nodded and cut off another slice of cheese and ate it slowly, trying to think of anything to say.\n\n\"Desmond?\" said Leanne. I was starting to find her way of speaking really annoying. \"Did you see how much I look like your mother in her wedding photo? We're the same age in it?\"\n\nDesmond didn't look surprised. He didn't look surprised at all, to me. I studied him. I could see his cheeks grow a little redder. \"No? Really?\" he said and looked anywhere but at me.\n\nLeanne rose and went and fetched the picture frame. \"Look? This could be me?\"\n\nDesmond looked at the picture and then at me. He looked like the little boy who broke my favorite vase when he was ten. Clearly guilty, with his Nerf darts strewn about the living room, but still intent on denying the obvious. \"Maybe. But I don't think so,\" he said, and we all heard the lie.\n\nAt least I did. I knew my son better than anyone. I knew instinctually when he lied to me. This was a lie. My heart sped up. This means he KNEW she looked like me. He picked her because she looked like me. That was... wrong. But my stomach flipped and flopped like the feeling you get when speeding over a rise on the road and the ground goes away for a moment. My bra felt tight. A warmth spread across my pelvis and seemed to focus in on my groin. I moved in my seat and immediately felt my clitoris between my legs.\n\nAfter years of having no sexual desires, the dam had broken open, and I was not ready for it. I was an emotional wreck. I wanted everyone to simply leave. I needed time to process everything. Except... I had to feed these two people first. I was trapped. I was in a nightmare.\n\nInstead, I sat and sipped my wine. I nibbled on food and tried to follow the conversation. After about thirty minutes I excused myself and rose to start getting dinner ready. I was having roast beef. One wonderful thing about living in a small town surrounded by farming and cattle was the price of wholesome red beef was cheaper than potatoes sometimes. I had a large roast slow cooking in the oven with potatoes, carrots, and onions in the pan. It had been cooking for hours. It was my mother's recipe and a secret. The secret being a low temperature. You sear the meat and then slowly cook it. Desmond and I would be eating it for weeks. The house already smelled heavenly.\n\nI opened the oven door and checked the meat. It was done perfectly. I grabbed the oven mitts and put them on when Desmond startled me. He came up behind me and placed his large warm hand on my lower back, right above my ass, as I bent over the over door. I was fully aware of my position, my ass raised high toward him. I wanted him to...\n\n\"I'll get it, mom. Give me the gloves,\" he said, and his voice was deep with a tone I had never heard from him before and the sound vibrated the air and I swear I felt it in my bones.\n\nMy first thought of what I had wanted him to do finished flashing through my head. Me bent over and Desmond fucking me from behind. Penetrating me deeply. Pushing into my depths. Filling me and spreading the walls of my vagina, sliding along my depths. Suddenly, I wanted to see his penis. See how big it was. I straightened up and blew out a breath and banished the thoughts. \"Thanks, son. Just place it on the counter there.\"\n\nThankfully, I had granite countertops, again thanks to Desmond.\n\nDesmond took over and then helped me pull all the meat and vegetables from the pan on to a serving dish. I put the pan on the stovetop and turned on the heat. I added a little red wine and deglazed it and then made a slurry and added it to the drippings in the pan and made gravy.\n\nDesmond and I were a team in the kitchen. We always made meals together. We would fly around the kitchen, rarely bumping and rarely in each other's way. Like a dance. Soon we had everything laid out on a large platter with the gravy boat almost overflowing. Leanne had set the table once we showed her where everything was, and we sat.\n\nDesmond always sat at the head of the table. A place I always reserved for him as the man in the house. He had gone from a highchair to a regular chair sitting there. And I would sit next to him around the table corner with the whole empty table extending out past us and forgotten. He rose from his seat and carved the roast beef. I watched him and admired his skill. I caught Leanne watching me from across the table and smiled at her. The meat was perfect and juicy, just like my mom had always made it. He served us and then waited for Leanne to say grace. Desmond and I just smiled at one another. We were never religious.\n\nThen it was all eating and talking and drinking. Leanne got a little tipsy, and we laughed. We retired to the living room after a quick cleanup and the dishwasher hummed. Leanne said she had to leave soon and then we realised we were all too drunk to drive.\n\n\"I'll just call your mother and let her know you'll spend the night in the spare bedroom, will that be alright?\" I asked her.\n\nShe nodded happily exchanging a meaningful look with Desmond, and I called her mom when she gave me her number. We had a lovely conversation about our children before hanging up. \"There, done. Spend the night. It's no bother. Now, it's late and I'm exhausted. You two behave! Night everyone.\"\n\nI rose to leave but Desmond stopped me and hugged me. He whispered in my ear. \"Thanks, mom. That was a perfect meal and goodnight. I love you.\"\n\n\"I love you, too, son. Have a good night. Don't stay up too late.\"\n\nLeanne said goodnight, and I went upstairs to my room, stopping first to use the bathroom. I undressed and slipped naked under the sheets feeling the cool, luxurious sheets caress my skin. I lay still thinking about the entire day. The sudden explosion of sexual desire was foremost in my thoughts. I felt like I was going through puberty again. Then I had thoughts about my son and Leanne. All so terrible and unwanted.\n\nI tried to sleep and lay there for a long time. The house was quiet. I could hear the AC unit through the vents. The occasional truck or car barreling down the road. We lived outside the town in a converted farmhouse. It had been my parent's home and the only home I had ever known. It was all stone and mortar with septic and well water. The laneway was over a hundred feet long and the nearest neighbor was a mile away on either side. During the winter, I paid for snow removal, and in the summer, I paid for the grass to be cut. It was just too much land to have Desmond take care of it and snowplows and grass cutting tractors were too expensive.\n\nThe house was quiet, and I suddenly felt more thirst and craved cold water. I slipped out of bed, threw on a fake silk robe, and crept downstairs to the kitchen. I filled a glass of water from the fridge water dispenser and stared out the sunroom windows to the night sky. It was early summer, and the sky was clear, allowing me to see all the stars in all their glory.\n\nI was taking my first sip when I heard the first moan coming from the basement. Downstairs was a small area added to the house when my father was alive. There was a furnace room, a cold room, and a small office that Desmond had turned into a playroom as a child. Now it housed his gaming stuff and a large television. We called it the Gaming Room for obvious reasons. A small smile crept to my face.\n\nDesmond's bedroom and the guest bedroom, where Leanne was supposed to be, were next to the master bedroom. I heard a moan again. A female moan.\n\nI tip-toed over to the door leading downstairs and saw it was open about an inch. The sounds of moaning grew a little louder. I hovered. I knew I should leave them in peace and respect their privacy. And they were both adults and could do what they liked with one another. I was happy for my son. Happy that he was a man and enjoying himself with a lovely, beautiful woman. I knew I should leave and not listen, but my feet betrayed me and kept me rooted to the spot.\n\n\"Desmond!\" growled Leanne.\n\nI heard a grunt in response.\n\n\"Jesus, right there!\" she added.\n\nIt grew quiet.\n\n\"Ah! God! Stick another finger in!\"\n\nMy eyes went round.\n\n\"Yes! Right on my clit! Suck it!\"\n\nI heard another grunt, presumably from my son.\n\n\"Oh fuck! Baby, I'm gonna suck that huge dick of yours... ah! So close!\"\n\nMy hand holding my glass of water shook, and I almost spilled some water. Part of me noticed that Leanne was speaking properly without the annoying added question lilt.\n\n\"Baby! Pretend I'm your mom! Do it for me! She's so hot. My God, her body... I can only hope I look like her when I'm her age... what?\"\n\nI heard a muffled response.\n\n\"No, baby. It's not weird. Do it. Imagine I'm your mother... Ai! Baby! Warn me! Oh my God, you're so deep! That's it! Fuck me! Fuck your mother! Ohhh!\"\n\nMy free hand went to my mouth in shock.\n\n\"Oh, baby, you came so fast! Does that turn you on, thinking I'm your mother?\"\n\nI turned to leave, but something kept me in place.\n\n\"You're still hard. Like a rock. Wow. Look at that perfect cock. Put it back in, I was so close. That's it. Slowly. Yeah. So deep. Never. Wow. Kiss me and fuck me. I look just like her, don't I? Just like your mom. She's so beautiful! Fuck me baby! Oh! Oh! I'm cuming! I'm cuming! Ergghhh!\"\n\nI fled. I flew under my covers after placing my water at my bedside table. I sat up against the headboard and tried to calm my breathing and heart rate. It was too much. Thinking of my son fucking his girlfriend and thinking and pretending it was me... It was too much. I held my face in my hands and shook.\n\nMy desires were coming back like earlier. My stomach was spinning. My groin hot and throbbing. I could feel my pussy swelling and expanding. My clit rubbed on the sheet and pleasure coursed through me. I spread my legs and touched myself. The pleasure rippled through me, and I gasped at the intensity.\n\nI masturbated and came hard in no time at all. But I wasn't satiated. I needed more and pushed three fingers into my vagina, stretching it deliciously. My other hand played with my clit. Pleasure came in waves and built. I came again and then eagerly sucked my wet fingers.\n\nI lost count of the orgasms. I felt I could do it all night. I had never been this sexually alive, and it frightened me in its breadth and depth and all the for the one reason it was overwhelming me.\n\nI wanted to fuck my son.\n\nWhat the fuck was wrong with me?\n\nChapter Two--A New Friend\n\nThe next morning, I woke early. It was a Saturday, and I had no plans for the weekend other than reading and maybe putting together a new puzzle. This morning neither of those things interested me.\n\nI threw on my running gear and then stopped outside the bedrooms and heard Leanne and Desmond each in their own rooms sleeping soundly. I would pretend they had been chaste in my house. It was far easier to do that.\n\nI was bothered by my realization last night that I wanted to fuck my son. I wanted to fuck my SON. With some difficulty, I set it aside and reasoned it was simply a flight of fancy. A daydream to play with in my mind. Nothing wrong with that. It was likely natural. The mind is amazing in its ability to rationalize things.\n\nI exited the house and ran down the laneway to the main road and turned left. I would only run five miles this morning. I passed the Johnson house and then past Old Man Cooper's house. I was surprised to see the For Sale sign gone. After more than a year, it appeared someone had bought the place. As the town's Mortgage Loan Officer, I knew no one in town had bought it, but I was surprised it wasn't part of the town gossip. I ran another half mile and turned around and ran back home. The children were still asleep, and I took a quick shower, loving the hot water on my body after a good run.\n\nIn no time, I was humming in the kitchen, frying up bacon and summer sausages. Pancakes were ready to be made. Orange juice made from frozen was on the table, and the coffee pot finished its gurgling and coughed up the black gold.\n\nI sat in the sunroom on the couches sipping my coffee wearing my weekend comfy clothes when Desmond appeared wearing his sleep bottoms. He came right over to me, as he always did, and kissed my cheek and wished me a good morning. I kept my eyes from his groin. He went over to the coffee machine.\n\n\"How'd you sleep, mom?\"\n\n\"Hmm. Good, actually. Really good. How was your night?\"\n\nDesmond glanced at me and filled his cup. He brought the pot over and topped me up. \"Really good.\"\n\nI raised an eyebrow at him. \"How good?\"\n\n\"Mom!\"\n\nI giggled. \"Sorry! I couldn't help it. I hope you were careful.\"\n\n\"Yes, mom.\"\n\n\"Good. I don't want little babies running around under foot. Not at my age.\"\n\n\"Mom!\"\n\n\"Sorry! Sorry! I'll shut up.\"\n\n\"Thanks. This is weird enough as it is.\"\n\n\"You've never brought a girl home before. I like it. Means you trust me.\"\n\n\"Course I trust you, mom. I've just never been with anyone I wanted you to meet before.\"\n\n\"Oh? Are you and Leanne getting serious?\"\n\nDesmond was quiet for a moment and sipped his coffee. He sat near me, and I placed my feet on his lap. It was a common enough event. I did it all the time and sometimes Desmond would massage my feet. He absently took my right foot in his left and pressed his thumb into my insole. Damn, it felt good, especially after my morning run.\n\n\"I don't know. One day at a time for now. She wants to leave town. Head to the city.\"\n\n\"And you?\" I asked, afraid to hear the answer.\n\nDesmond smiled at me, and I felt a flood of warmth pass through me. Every mother should see that look from their son. The look of love. \"Nah. And leave you all alone? I could never do that.\"\n\nWorry hit me then. Was I going to trap my son in a small town for all his life? Would he be the dutiful son caring for his elderly mother? Mortified, I pulled my foot free from his grasp and sat up. \"Desmond! You have your entire life ahead of you! Leave. Find happiness! Don't worry about me! I'll be fine.\"\n\nDesmond looked hurt, with that little boy expression on his face of not getting what you want. \"Mom, I could never leave you. You need me. To look after the house. To look after you.\"\n\n\"Desmond, look at me.\" When he didn't, I tapped his thigh. \"Look at me!\"\n\nHe did.",
        "I reached out and grasped his strong, chiseled chin in one hand. \"I'll be fine. You need to decide what you want in life and grab it! You're young with your whole life ahead of you! I want you to be happy! That's what makes me happy.\"\n\n\"And what if that's what makes me happy, mom? Making you happy?\"\n\nI sighed and let his chin go. \"Baby, I've lived a lifetime already. I've loved, lost, and then had you. My life's goals are complete. You on the other hand have only just begun to live your life. I want you to be happy!\"\n\nDesmond's face shifted, and I recognised the look. The honest, sincere, and serious man that dwelled inside his head and made rare appearances and usually only to me. I knew every expression on his face and how his mind worked. He would say one thing and I would know what he really meant. \"I'm happiest when I'm with you, mom. Why would I ever leave that?\"\n\nI had no words to say. He was being sincere. He rose and poured a second cup of coffee and disappeared around the corner to bring Leanne her cup.\n\nI fought off the tears. I was ruining my son's life. Trapping him in a false utopia. I was a horrible selfish mother.\n\nA little while later, Desmond and Leanne appeared together. She had showered and looked fresh. I heated up the meat and started to make pancakes as soon as I first heard the shower shut off and when they entered the kitchen, I had the first pancakes off the griddle.\n\nLeanne smiled at me and wished me a good morning. I watched her sit at the table and saw the slight wince on her face as she sat. I smiled to myself, proud of my son.\n\nI served breakfast and sat with them as they ate.\n\nLeanne kept looking at me. \"Aren't you going to eat, Miss Smith?\"\n\n\"Call me Jessica, please. No. I never eat in the morning.\"\n\nDesmond nodded while chewing. \"It's true. Never. Makes me eat though.\"\n\n\"The way to a man's heart is through their stomach,\" I quoted and then realised what that truly meant and blushed.\n\nLeanne looked at me and then Desmond. She kept eating putting away a remarkable amount of food for someone so slim. She must have noticed me staring because she stopped eating.\n\n\"I'm sorry, I never get breakfast at home. Not like this! Usually my mom just gets pop-tarts.\"\n\n\"Oh dear,\" I said. \"Well eat up! There's lots. Desmond can eat a whole pound of bacon by himself.\"\n\n\"Pig,\" mumbled Leanne around a mouthful of pancakes.\n\nDesmond smiled and stole a piece of bacon off her plate and shoved it into his mouth, grinning and flashing his greasy teeth at her.\n\n\"Oh, you're gonna get it!\" she said, her eyes aglow.\n\n\"Promises, promises,\" muttered Desmond, swallowing.\n\n\"Next time you want a blow job see where that gets you!\" she cackled and then threw a hand over her mouth and snapped her head to stare at me in shock. \"Oh my god, I'm so sorry!\"\n\nDesmond had his mouth open in surprise and then turned his head slowly to look at me.\n\nI laughed. \"See? I always told you there were consequences, Desmond.\" My mind filled with the images of Leanne sucking my son's penis.\n\nLeanne looked sideways at Desmond and then back to me.\n\n\"Relax, you two. I was your age once. Based on last night I would suspect its nothing new between you.\"\n\nRight away I was mortified. I shouldn't have said anything. Now they knew I had heard them last night. With Leanne pretending to be me with my son. I faked a smile and sipped my barely warm coffee.\n\nDesmond and she shared a look. I pretended not to notice and rose to get more coffee. My hands were shaking.\n\n\"You heard us last night, mom?\" asked Desmond quietly to my back.\n\nI refilled my cup and turned around, calming my face. I sipped the coffee. \"I got a glass of water. I could kind of hear you. Don't worry about it. Like I said, I was your age once. Just use protection, okay? I don't want grandchildren.\"\n\nLeanne and Desmond shared another look before Desmond spoke again. \"I'm sorry, mom. I hope you didn't hear anything you didn't want to hear.\"\n\n\"Nope.\"\n\n\"Okay. Sorry. We'll be quieter.\"\n\n\"Thanks.\"\n\nI could see through the kitchen table that Leanne was gripping Desmond's thigh tightly, her knuckles white. People always forgot the table was see through. She was warning him.\n\n\"You kids have any plans today?\"\n\nThey shook their heads.\n\n\"I'm going into the market, I think. I want to pick up some tomatoes to make sauces. Can I trust you two alone? Leanne, your mother was quite concerned with you sleeping over at a boy's place, as she put it. It was only having me around that relaxed her. Can I trust you two?\"\n\nLeanne let go of Desmond's leg. \"Yeah, sure Miss Smith.\"\n\n\"Jessica, please.\"\n\n\"Jessica, sorry. You're pretty cool, Jessica. Thank you.\"\n\n\"My pleasure. Desmond, can you clean up?\"\n\nHe nodded.\n\n<p align=\"center\">* * *</p>\n\nAn hour later, I pulled into the market, finding a parking spot up close. I grabbed my shopping bag and locked up my car out of habit. In small towns like these you don't need to lock anything up other than the stores.\n\nI sauntered down the sidewalk, feeling cute in my floral summer dress, wide brimmed sun hat, large sunglasses, and simple sandals. I went past the nickel and dime store and into the large parking lot converted to an open market on the weekends. Most of the booths sold produce and preserves, but a few sold hand crafts and art. I made my way through the market slowly admiring the goods and then spotted a new stand run by a woman I had never seen before. She looked Asian and there weren't many Asian women in town. The only Asians I knew of were just the mother, father, and son who owned the Lucky Star Chinese takeout restaurant in town. I couldn't remember their names. But she was not them and she stood out like a light in the darkness.\n\nShe looked at me when I approached and smiled. \"Hi!\" she said. I was expecting an accent, but all I heard was plain old American.\n\n\"Hi! You're new to the market!\"\n\n\"Yes I am. I just moved into town a month ago.\"\n\n\"Really? How exciting! Where are you living?\" I watched her face enchanted by her exotic looks. She was gorgeous, and I had never been attracted to another woman before. A quick image of Leanne crossed my mind, unwanted. But this woman had a face I was sure I could stare at all day.\n\nI gasped when she told me where she lived. \"That's two houses down from me! You bought the Cooper place!\"\n\n\"I did!\"\n\n\"Wow, that house was on the market for over a year.\"\n\n\"It's a little run down. And I think vacant for over a year?\"\n\n\"Sadly, yes. Old Man Cooper lived alone in that house. His wife passed a long time ago.\"\n\nHer eyes grew larger, and I loved how that happened with her gorgeous, slanted eyes. Her pupils were dark brown and had a wonderful depth. \"He didn't die in there, did he? Oh my God! I never thought to ask the realtor!\"\n\nI laughed a genuine laugh, and it felt good. \"No! No! He died in town. Heart attack in the post office. Just dropped dead. No ghosts or anything! At least, I don't think.\"\n\n\"Whew!\" laughed the woman. \"That's a relief!\"\n\n\"I'm Jessica, by the way. Jessica Smith.\"\n\nShe put out her hand to grasp mine. I felt a shock when she touched me. Her hand felt so small in mine, and I didn't want to let it go. \"Pleasure to meet you. I'm Jennifer Kimura.\"\n\nI suddenly needed to see more of her. \"I'll have to stop by your house. So I can welcome you better. You and your husband.\"\n\nJennifer laughed, and I loved the sound of it. Her face was so animated. \"Single. No husband. Are you married?\"\n\n\"No. Divorced. My husband left me twenty years ago.\" Inside I was so happy she was single. Why am I happy about that?\n\n\"Twenty? You look so young!\" She was looking at me in an unexpected way. Closely. Intimately. The electricity I had felt in the air seemed more charged. Focused.\n\n\"Um, thanks,\" I said. She looked far younger than me. She looked to be in her early twenties. She was slim, extraordinarily so, but with breasts that seemed too large for her frame. Her hair was jet black, perfectly straight, and falling to the middle of her back and it shone in the morning sunshine. I had to admit she was beautiful. She was exotic looking to me and I felt plain in her presence. \"But I'm forty. Don't tell anyone!\" I laughed at my own stupid humor.\n\nShe laughed with me. \"Well, I'm thirty-five.\" She leaned toward me and whispered. \"Don't tell anyone!\"\n\nI laughed then, instantly warming completely to this woman. I looked down at her display, seeing it for the first time. It was mostly scarfs and small artwork. It looked like hand-painted silk. I asked, and she nodded.\n\n\"Yes, all pure silk. I hand-paint them. It's a hobby, really. I've been making them all my life. I sell quite a lot online. I have an Amazon store. I do pretty well.\"\n\n\"They're beautiful.\" I said and meant it. My eyes spotted something strange on her table, placed in the back corner. I picked one up and examined it. It looked like a twisted unicorn horn, except it had raised circles like tentacle suckers. It was squishy like rubber or silicone. \"What's this?\"\n\nJennifer grinned at me. \"Are you sure you want to know?\"\n\nI looked at her confused. \"Yes?\"\n\nShe giggled. \"It's called a Takoyaki. I make them, too. My biggest seller online.\"\n\n\"Taco? Taco yacky?\"\n\n\"Takoyaki,\" she repeated and spelled it out. \"It's a play on the word in Japanese for octopus balls, a food delicacy. The word plays on another use of tentacles.\"\n\n\"What's it for?\"\n\n\"For stimulation.\"\n\n\"Stimulation?\"\n\nShe looked at me and grinned wider. Her teeth were so white and perfect. God help me, but I wondered right then what it would be like to kiss her. To kiss a woman. A feeling so foreign to me I had no idea what to do with it. But there it was forefront in my head. I tore my eyes from her face and studied the strange object in my hand. And then it dawned on me. I looked up at Jennifer. \"No way!\"\n\nShe nodded, smiling, and laughing at the naughtiness of it.\n\n\"And you just...\" I moved it a little in my hand in up and down motions.\n\nShe laughed. \"Yup.\"\n\n\"And people buy these?\"\n\n\"Yes. A lot of people. My best seller. Those are the, um,\" she glanced around, but we were alone. The market wouldn't get busy for another hour. \"Those are the smaller ones.\"\n\nI stared the object and tried to imagine using it on myself. I couldn't. I just couldn't. \"Oh my God.\" I looked up at Jennifer and suddenly I wanted to know more about her. This was the most exciting thing that had happened to me in years in this small town. \"Oh, now you simply must come over to my place. I need to hear more.\"\n\nJennifer looked surprised. \"Come over to your place?\"\n\n\"Sure. Why not? Tonight. I have wine. Food. Music. Come over and we'll just talk. I can answer any weird questions you might have about this town. I've lived here my entire life. I know everyone. There are reasons to get to know me.\"\n\nJennifer hesitated and then nodded. \"You know what? I think I would like that. What time?\"\n\n\"Six? Seven? Come right from here if you want. It's just me and my son at home. He's an adult now.\"\n\nJennifer's eyes lit up. \"Does he do repairs?\"\n\n\"Oh yes. He's quite the handyman. He can do anything. What do you need?\"\n\n\"The house is quite run down. I need a lot of work done. Walls, plumbing, everything. I had one of the men in town come round to look but he was more interested in looking at me, if you know what I mean.\"\n\n\"I do, sadly. The men around here aren't like in the city. They don't have boundaries. It's like going back in time about fifty years.\"\n\n\"Can I meet your son? And ask him to have a look?\"\n\nI reached out and took her hand. Her hand was so dainty. \"Hon, I promise you, he'll love to help you out. I know my son. He loves helping people.\"\n\n\"I can pay him. Money's not a problem.\"\n\n\"You discuss it with him. He won't want anything though.\"\n\nJennifer and I chatted for a little while. I bought a small eight by eight-inch frame with a piece of silk inside it under glass. A beautiful Japanese dragonfly was painted on it. Jennifer explained to me dragonflies are the national emblem of Japan. I asked her if she was Japanese, finally getting the nerve to ask. She nodded but added her parents were born in America and so was she. I understood what she meant. She wasn't Japanese. She was American just like me. She wrapped up the frame behind the table and handed me the bag, smiling at me.\n\nWe parted, and I finished my chores and exited the market, looking for and waving goodbye to Jennifer. I stopped at the local Walmart since the local market didn't have any tomatoes yet and bought some frozen juices that Desmond enjoyed and a few more odds and ends and then headed home. Desmond's truck was gone, and I found the house empty.\n\nI brought in my shopping and put the bag containing the dragonfly painting on the kitchen counter. I put away the produce and then looked for a suitable place to hang the dragonfly art. I immediately knew it had to go in the sunroom. The sun would highlight the beautiful pearlescent painting.\n\nI reached into the bag to remove the painting when my hand closed on something I recognised at once. I pulled out one of the Takoyaki's. It was the one I had held. I smiled and then wondered what to make for dinner before remembering I had at least three pounds of roast beef in the fridge.\n\nI busied myself around the house for a few hours. Mostly cleaning. My house was always clean. Desmond and I were fanatical about it. He had helped me since he was old enough to help and never complained and never waited to be told to help. We always worked that way. A team. A pair.\n\nI stopped sweeping the floor as a thought struck me. Desmond was more of a best friend in many ways. We did everything together. Always as a team. Laughing at the same jokes. Finishing each other's sentences. I resumed sweeping. Probably just like every other mother and son team, I surmised. For a moment there it had meant something more to me, but I didn't know what.\n\nAs always, I cleaned the bedrooms. Mostly dusting and sweeping the hardwood floors. I entered Desmond's room and swept barely glancing around. I knew his room like my own. I always respected his privacy and when I cleaned here I never, ever, snooped. I had read horror stories about mother's finding crusty socks and what not. I was afraid to look under his mattress and find magazines with naked women. Nope. Nope. Nope. No need to see that.\n\nAs I was leaving, I noticed the teddy bear on his bookshelf. It contained a nanny camera. My husband had bought it so we could go out with a babysitter. I had refused to leave my son in the care of a stranger. Perhaps that had led to him leaving. I would never know. Desmond had liked it simply as a teddy bear and over the years it ended up on his shelf. A memory of his father attached to it, I supposed.\n\nI took it down and checked it out. It ran off batteries and it was empty now. I think part of my brain was well ahead of the rest of me. The next thing I knew I had replaced the batteries, checked it still worked, and sat it back on the shelf. I hummed as I completed my cleaning routine in the kitchen.\n\nJust then I heard a knock at my door, startling me.\n\nI should mention that Desmond had done a wonderful job over the years insulating the house. His effort greatly reduced the cost of heating and cooling the house. As a side benefit, the house was quiet. Nothing creaked or groaned. I looked at the clock on the microwave and saw it was a little past four thirty in the afternoon. The market closed at four and I knew who it was. Suddenly, I was nervous and excited. I wasn't sure what my interest in Jennifer was. I just knew I had to go down that road and see where it led.\n\nI opened the door to find Jennifer standing there smiling up at me. I hadn't noticed at the market, but she could only be a little over five feet tall. She had a bottle of wine in her hand.\n\n\"Jennifer! I'm so glad you came! Come in! Come in! Leave your shoes on!\"\n\nJennifer handed me the bottle of wine. \"For you. Thank you for inviting me over. Your house looks so beautiful from the outside. All that stonework! It's like mine!\"\n\n\"Come in, and thanks. It was my parent's house. My son has really fixed it up though. He's quite handy. You'll see. I said leave your shoes on!\"\n\n\"I can't. I'm sorry. I have to remove them.\"\n\n\"Is this some cultural thing?\" I asked, not knowing.\n\nShe laughed. \"No. My feet are killing me after standing on them all day!\"\n\nI laughed then. \"I'm sorry. I'll be honest. You're probably the first oriental woman I've ever spoken to. I'm probably going to say all sorts of horrible things.\"\n\nJennifer placed a hand on my arm. I could feel it there. I was completely aware of it. \"Stop apologizing. It happens all the time. Ask away. Ask anything no matter how dumb it might sound. Better to clear the air right away, don't you agree?\"\n\n\"I do,\" I said and warmed to her even more. She removed her hand, and I looked at the bottle to distract myself. \"Oh, this looks nice. I don't think I've ever had this one...\"\n\n\"It's good. I have a few cases at home.\"\n\n\"Levy and McClellan, Cabernet Sauvignon. Yum, I like Cab Sauvs.\"\n\n\"You'll like this one, I promise. So?\"\n\n\"Follow me! I have a beautiful sunroom my son made for me. Come this way. Or would you rather have a tour of my house? It takes about one minute to see the whole place.\"\n\nJennifer laughed. \"Another time. Let's sit and get to know each other. I do love the inside. So tasteful.\"\n\nI grinned at her. \"A girl after my own heart!\"\n\nJennifer blinked rapidly and then smiled. \"Cool.\"\n\nShe gushed at the sunroom extension and stared out past the large bay windows. \"Oh my God! It's so perfect! You can see all around! And the couches, they're perfect! I could sit and read here all day! I am so jealous!\"\n\n\"All my son's doing. I swear I only like mentioned in passing one day how much I would love a sunroom. I came home the next day, and he was tearing everything apart. I was so mad at him! And then look at this. He has a gift for this.\"\n\nJennifer was really admiring the work. \"Have you heard of Feng Shui?\" she asked me suddenly.\n\n\"No? What's that?\"\n\n\"It's Chinese. It's the practice of arranging the pieces in a living space to create balance with the natural world. It is said to give people harmony between where you live and the world around you. This place just reeks of Feng Shui. You can feel it in the air!\"\n\nI had no idea what she was talking about. \"I suppose. All I know is that I spend a lot of time out in this room.\" I rummaged through the utensil drawer and found the corkscrew thing. Normally my wine comes with twist tops. I started to use it, fumbling, and Jennifer took it from me.\n\n\"Let me,\" she said, and I happily gave it over to her.\n\nShe opened it with practiced precision, and I remarked on it.\n\n\"Lots of practice. Glasses?\"\n\n\"Of course. I'm an idiot.\" I quickly grabbed two glasses and Jennifer poured a little into each glass.\n\n\"First we taste,\" she said and lifted her glass. I did the same and followed what she did. We smelled it, let the wine slide down the inside of the glass and watched what little clung to the glass, and then sipped it. I felt very special.\n\nIt tasted pretty good and said so.\n\n\"I hope so,\" she smiled and then filled our glasses.\n\nI grabbed the board with meat and cheeses from the fridge, and we retired to the sunroom, stretched out on the large couches, our feet almost touching. I raised my glass.\n\n\"Here's to new friendships!\" I toasted and Jennifer raised her glass.\n\n\"Your house is beautiful, Jessica. It feels very feminine but with a touch of masculinity. It feels like a home with much love.\"\n\n\"It is. My son and I, it's just been us two since he was one-year-old. His father left us and moved to California. He wasn't meant to be a father. He always paid his child support, though, he never missed a payment. He just missed all the birthdays and Christmases and everything in between. But Desmond is a good man. He understood early on just who and what his father was. I don't think it bothered him too much. He always said it meant he got me all to himself.\" I realised how that sounded and blushed. I hid it by taking a large sip of wine. \"Say, this is getting much better.\"",
        "\"It's breathing. Just wait. The next glass will be spectacular. Your son sounds amazing. Does he cook?\"\n\nI laughed. \"No. He has me for that. I do all the cooking and love to cook for him. We share laundry, chores, yard work, you name it. He's the perfect son. I adore him. Without him my life would have no meaning.\"\n\nJennifer looked long and hard at me. \"That can't be true. You're smart, beautiful, funny. You just would have led a different life. One you'll never know.\"\n\nShe had called me beautiful. That was twice in one day. Leanne had called me beautiful, too, while fucking my son. I was uncomfortable but pleased. \"So, what brought you to our small town?\"\n\n\"I needed to get out of Los Angeles. Too many memories.\"\n\n\"Why here?\"\n\nShe laughed. \"You won't believe me.\"\n\n\"Try me.\"\n\n\"I threw a dart at a map. It hit here.\"\n\nI stared at her. \"You're messing with me...\"\n\nShe giggled at my language. \"Nope. Threw it and wham.\"\n\n\"You didn't think to throw it again?\"\n\nShe paused then and stared at me and then threw her head back and really laughed. \"No!\" she finally managed to squeak out, and I joined her.\n\nWe spent the next hour laughing and sharing life stories. She told me little about herself other than she had lived in Los Angeles and had a bad breakup which she refused to speak about. She had lived with her father, and he had suddenly passed from a brain aneurism, and she only knew she had to escape everything that reminded her of that life. I found myself loving the sound of her voice. The words flowed through me and circled me and caressed me.\n\n\"It seems pretty excessive to end up here, though. This is a remote area of the country. It's just so quiet out here. The weather can be harsh in the winter. It's mostly an easy life, but that can change quickly.\"\n\n\"Actually, this is really helping me. I don't know how long I'll be able to stay. But right now, this feels right. It's hard to explain. I feel like I'm where I need to be.\"\n\n\"Me too,\" I said after a moment of reflection. \"My husband, he couldn't wait to get out of here. Most of the kids I grew up with have moved on. Not me. I feel that this is my home. I have no desire to see the world. All I need is right out that window,\" I pointed at the window with my wine glass. \"Just look at that beauty.\"\n\nJennifer's eyes looked at me before she turned her head to look out at the land surrounding my home. She looked content to me. Happy with a little streak of deep sadness.\n\nWe were on our second bottle of wine. The first sip of the cheap stuff I bought had caused me to shiver uncontrollably and Jennifer had laughed until she took her first sip.\n\n\"Oh my God,\" I said. \"We need more of that first bottle. This stuff is garbage! I never knew!\"\n\n\"Maybe next time.\"\n\nI looked at her. She was the first woman friend I had since high school. It felt wonderful. \"We could make this a regular thing. You do the market and then come here for wine and dinner.\" I wanted that so bad. I needed more of her in my life. I knew what I was thinking. Wanting. My life was twisting itself, turning on me. Making me think impure thoughts about my own flesh and blood, my son, and now I was finding myself falling for a woman.\n\n\"That would be imposing,\" she argued.\n\n\"Nonsense. You're all alone in that house of yours. What better way to spend Saturday afternoons?\"\n\nShe nodded. \"Maybe.\"\n\n\"You're more than welcome here. In these small towns, privacy is a rarity, people will just show up at your house and walk in. It's just the way it is. I wouldn't mind one bit if I came home from work and found you sitting out here enjoying the sun.\"\n\nJennifer smiled. \"Okay. So, people really don't lock their doors?\"\n\n\"Nope. There's no point.\"\n\n\"I find that strange.\"\n\n\"Life is strange...\"\n\nJust then the front door opened, and I heard Desmond come home.\n\n\"Mom?\"\n\n\"Out here, hon! I've met a new friend!\"\n\n\"A new friend?\" he asked, and his voice grew louder as he approached. \"Who is it?\" He entered the kitchen and saw us lounging drinking wine. \"A new book club?\" he asked and smirked.\n\nMy heart thudded in my chest. Every time I looked at him as a man my heart would beat uncontrollably. He was gorgeous, my boy. Standing there in a white tee-shirt, tight blue jeans, and his damn cowboy boots, I was practically drooling at him. The wine sure didn't help. I glanced at Jennifer to introduce her and saw a look of lust cross her features for a moment.\n\n\"Come here, Desmond. Meet Jennifer. She lives two houses down from us. She bought the Cooper place. She sells beautiful things at the market. See the dragonfly painting?\" I pointed at it and then looked at him. He was staring at Jennifer, ignoring me.\n\n\"Hi, ma'am. It's my pleasure. Welcome to the community.\"\n\nJennifer went to rise but Desmond, always the gentleman, insisted she stay put. They talked easily, and he refilled our wine glasses, emptying the bottle. He brought out more cheese and grapes for us and then excused himself to wash up for dinner.\n\nI glanced at Jennifer. She was lost in some thought. Probably thinking of my son, I thought.\n\nShe finally looked over at me. \"So that was your son, I see where he gets his good looks.\"\n\n\"Jennifer!\" I said, proud and appalled at the same time.\n\n\"Sorry! Sorry! He's just... wow. So handsome.\"\n\n\"I know. He's a beautiful boy. Man. He's a man.\"\n\n\"Yes, he is,\" muttered Jennifer and quaffed more wine.\n\nI smiled to myself and looked out the window. By the sun in the sky, it was soon time to heat up dinner. I heard the shower start up upstairs. Desmond would be down to help in mere minutes. He was a quick shower person. \"I'm going to get dinner started. Just stay there and enjoy the remaining sun. It's just leftovers tonight. Nothing gets wasted around here. You'll like it, I hope.\"\n\n\"Okay.\"\n\nI rose and felt the wine hit me. \"Whoops. Balance is a little off,\" I laughed.\n\nJennifer rose. \"I'll help no matter what you say. Two drunk people can certainly heat up dinner.\"\n\nJennifer joined me and we pulled out the leftovers and put them all into a heating dish and covered it with tinfoil. I turned on the oven and slid it in. \"Thirty minutes and it should be heated up.\"\n\nI rummaged in the cupboard and failed to find more wine. \"Dammit. Out of wine.\"\n\nJennifer was standing next to me. \"I can run home and get more.\" She placed her hand on my lower back, right above my waist. I could feel her fingers flex slightly. I moved a little closer to her, feeling the intensity of those few inches remaining between us. What was wrong with me?\n\nJennifer looked up at me. The top of her head reached the bottom of my chin. Just then Desmond stepped back into the kitchen and froze when he saw us. I stepped back. \"Desmond? Can you run Jennifer home to get more of her wine?\"\n\nDesmond stared at me and then Jennifer. \"How many bottles have you had already?\"\n\n\"Only two,\" pouted Jennifer. She still had her hand on my lower back. Even after I moved away.\n\nDesmond was looking at that arm and hand. I felt like I had been caught in something I didn't understand. He had changed into more of the same clothes, but his blond hair was still wet and slicked back. He smiled that easy smile of his and my heart raced, and my breath caught. Jennifer looked up at me suddenly and then away.\n\n\"It will only take a minute,\" said Jennifer and released me and walked toward the door. \"It will give me a chance to show you my house. Your mom says you're quite the handyman.\"\n\nDesmond nodded. \"If they don't find you handsome, they should at least find you handy.\"\n\n\"Red Green?\"\n\nDesmond blinked. \"Wow, didn't think you would get that one.\"\n\n\"I'm a woman of mystery,\" she purred and arrived at the front door. She slipped her shoes on her feet. \"Let's go. Jessica? We won't be long. Thanks for this. For the first time, I feel pretty good, and I don't mean the wine.\"\n\nDesmond led her out to his truck, closing the front door behind him.\n\nNo sooner had I heard the truck start up, then I was running into my son's room. I grabbed the teddy bear and ran into my bedroom. I pulled out my aged laptop, found a cable and plugged the bear in. I wasn't completely illiterate with technology and soon had the contents of the bear on my screen.\n\nI fast forwarded the video until I saw Desmond walk into his room. I pressed play.\n\nWhat am I doing? This is a huge breach of privacy. Desmond will never forgive me if he found out. This is... This is a terrible thing I'm doing.\n\nI didn't stop.\n\nI watched Desmond undress like I was some teenager in heat, my breath panting. I was fully aware that I was his mother and that I shouldn't be doing this. But I had to see. I had to. I had to feed my curiosity. Once I knew, I could go back to normal. His back was turned to the camera, but I saw the muscles on his back as he ripped his shirt off and tossed it into his laundry hamper. They rippled and undulated with power. Next came his jeans, and his perfect ass pushed toward the camera. My God, I thought. It's a perfect ass.\n\nThen he grabbed the waistband of his boxers and slid it down past his hips. His naked ass thrust back at me, and his gorgeous firm ass cheeks were in full display. I could see only darkness in the crack of his ass and growled and moaned at the same time. Then on camera he turned toward his door, and I paused the video, holding my breath.\n\nThere on the laptop was the image of my son's beautiful, gorgeous, uncircumcised penis. He was about four inches soft. I could see massive pendulous balls dangling from him. I stared in absolute awe. He was hung. It was a beautiful penis.\n\nI wiped at my mouth; my eyes glued to the image. I reversed the image and then let it play. I watched his penis being exposed and then walk out of the frame. It swung on him as he walked. My husband's cock had just kind of stood there and had been half the size if I was any judge. I saved the video to my laptop and disconnected the camera.\n\nI was trembling. I loved my son's penis. It was a work of art. The image was seared into my brain and lighting up all those feelings a woman has for a man. They say women aren't visual. That's a lie. I most certainly was. I was trembling because now that I had seen it... I knew. I knew what I wanted next.\n\n\"You want it inside you, don't you?\" I whispered to myself. My pussy answered with a delightful feeling of warmth. Shame and guilt flooded me, and I held my head.\n\nWhen the front door opened and Jennifer and Desmond walked in, I was back in the sunroom, watching the sinking sun. We had about two hours left of daylight.\n\n\"Mom? We're back!\"\n\n\"Out here, hon! I put the leftovers back in the oven. They weren't quite heated through.\"\n\n\"I grabbed a few more bottles of wine,\" declared Jennifer, then she walked into the kitchen brandishing three bottles with two hands. She set then on the counter and opened the first one.\n\nI smiled as she filled my glass and then filled hers. She clinked her glass to mine. \"I am sooo happy I met you today. Your son is a Godsend. He was already familiar with my house; did you know that? Says he used to help Old Man Cooper now and then.\" I had known that but thought it inconsequential. \"Desmond says he'll be happy to help out on the weekends. And some nights.\"\n\n\"Good. I'm glad. He's run out of things to do around here, and I think he was ready to start breaking things just so he could fix them.\"\n\n\"Nah,\" said Desmond, stepping into the kitchen. \"You'd kill me. Lots of land to bury a bad son in.\"\n\n\"Come here, baby,\" I said to him, and he came over. \"Lean down.\" And he did. I gave him a quick kiss on the lips. A motherly kiss. Nothing more. I was not imagining his cock. \"You're a good son.\" What I meant in my head was, I love your penis.\n\nDesmond looked at me and didn't move away. He gave me a quick kiss back, surprising me. \"And you're the best mother a son could ever hope for.\" He stood up and went to check on the stove.\n\nJennifer was back in her spot. She was watching me. \"Lucky girl,\" she said quietly to me.\n\nI was surprised by her comment. That wasn't something you say to a mother about her boy. I raised an eyebrow at her, and she simply smiled and shook her head.\n\n\"My buzz is gone,\" she said. \"Here's to more wine!\"\n\n\"Here, here!\" I shouted, and I felt the mood grow lighter.\n\nDesmond responded by cracking a can of beer and grinned at us.\n\n\"Is he old enough to drink?\" asked Jennifer, playfully.\n\n\"In my house, yes,\" I purred. \"In two months, he'll be perfectly legal to drink.\"\n\n\"Just a baby still,\" replied Jennifer and smirked at Desmond.\n\nDesmond stood easy and glanced between us. \"Great, stuck in the house with two cougars.\"\n\n\"Desmond!\" I cried in false outrage. Inside my heart was pounding again. I knew what a cougar was. And I certainly wasn't one but having Desmond call me that had me flashing back to the image of his penis on my laptop.\n\nThe stove timer went off, and I suddenly felt like I had just escaped something.\n\n\"Be a dear and get that out, I'll get the plates.\" Oh yes, get that out.\n\nSoon we were seated and enjoying yesterday's dinner. It was just as good. The meat was still juicy and tender. Jennifer gushed over it.\n\n\"I've noticed the meat here is so much better than in the city, why is that?\"\n\nDesmond answered her. \"We send the shit meat to the city and keep the good stuff to ourselves.\"\n\nWhen Desmond saw that Jennifer believed him, he laughed. I saw the effect that laugh had on Jennifer. She liked it and her face lit up. I felt a pang of jealousy hit me.\n\n\"No, not really. We do keep the choicest cuts. And we age it a little longer. We eat a lot of red meat out here. Not much call for sushi when the nearest ocean is five hours away by plane. Chicken, pork, and cow. The three food groups.\"\n\n\"And potatoes,\" I added. \"The fourth food group.\"\n\n\"And pie,\" added Desmond. \"The fifth food group.\"\n\n\"Oh my God,\" said Jennifer laughing. \"I've landed in Redneckville.\"\n\n\"Ma'am, nothing wrong with a red neck. Just means you've been working hard outdoors all day.\"\n\n\"Please don't take offense,\" she said immediately. \"I was just trying to be funny.\"\n\nDesmond glared at her, and Jennifer squirmed.\n\nThen Desmond broke out laughing. \"I'm sorry! I couldn't help it! I'm just fucking with you.\"\n\n\"Fucking with me, huh?\" said Jennifer, and I saw the gleam in her eye. \"Just for that, I'll work you extra hard at my house.\"\n\n\"Ma'am, you can't punish a man for doing free work for you.\"\n\n\"Free? No, no, no. I intend to pay for your work.\"\n\n\"No ma'am. That's not how it works out here. You supply the parts and what-not. I supply the labor. Simply math. Neighbors help neighbors.\"\n\nI nodded my head at my son's words. Jennifer tried to argue, but I then saw a rare side of Desmond. He looked hard at Jennifer, and she stilled under his gaze. I've seen it before. The look a man gives you that means the conversation is over and what's been decided has been decided. It's forceful. Its direct. It makes me wet. Thousands of years of evolution and a man being a man still makes a woman do things.\n\n\"Ma'am. I'm telling you honestly. I'll gladly help you. That's the neighborly thing to do. I could never accept any payment. Maybe some lemonade. A piece of pie. You're new around here and I don't doubt you've still got a ways to go to understand life in small towns. But we look out for one another out here. Life can be hard for some folks. Best way to fit in? Accept the help and then look for your own way to help others. Doesn't have to be a big thing. Every little thing helps. A bag of green beans. Onions from your field. Hay for the livestock. If you can provide and not put yourself in a worse way, then you do it.\n\n\"I'll be by tomorrow around noon and fix up that front door of yours. I have the parts. Won't take me long. Then I'll fix your water filtration and check your septic. I saw a bunch of Old Man Cooper's tools in the work shed, so I won't need much. Maybe you could write down everything you think needs fixing and I'll prioritize it and start working on it. It'll be my pleasure.\"\n\nJennifer nodded and bit her lip. She was gazing at Desmond with a strange look on her face. She tore her face from his and looked at me for help.\n\n\"He has it right, Jennifer. He'll help you because he wants to, and he knows he's the right man for the job. You'll see. My son is the best of them.\"\n\nWe finished dinner with small talk, and Jennifer and I returned to the sunroom to watch the sunset. Another bottle of wine was gone, and we had started a new one. I was glad tomorrow was Sunday. We watched Desmond clean up and then disappear downstairs to play his games.\n\nThe silence was comfortable, and nothing needed to be said. We watched the sun sink to the horizon and slowly slide down. The sky lit with beautiful colours, the few clouds in the sky lighting up. There was barely any wind, and the silence was calming.\n\n\"That's a beautiful son you have there, Jessica.\"\n\nI nodded, lost in the serenity of the moment. \"I adore him. He's so beautiful. A perfect specimen of man.\"\n\n\"It must be lovely having a man like him around the house all the time.\"\n\n\"You have no idea. It's been me and him for twenty years. A constant presence. He's the best man I've ever had in my life. I love him so much.\"\n\n\"I loved my father the same way.\"\n\nSomething about the way she said it had me looking at her. She was watching the sunset. Her profile was even more beautiful.\n\n\"My father was the love of my life. When he died, it was too sudden. He was there and then he wasn't. He left such a massive void in my life. Too large to fill.\"\n\nThe love of her life? That's how you spoke about a lover, not a father. I was confused but didn't interrupt.\n\n\"My family found out. Cousins, aunts, uncles. They were furious with me. I ran. I've lived in many places. I figured being out here in the Midwest would be the last place they would look for me.\"\n\nFound out what? I was missing something. Something crucial to this conversation. The wine was heavy on me, and I was feeling sleepy, but I forced myself to listen. I kept watching her, the sunset painting her face with color.\n\n\"My father and I were lovers, Jennifer. I've never told anyone that. I never admitted it to my family, but they knew. When my father died, he left everything to me. That's why my family is looking for me. They want my inheritance. They say my illegal relationship with my father means I don't deserve it.\n\n\"I can't believe I'm telling you this. I hope I can trust you. I've been desperate to talk to someone about it. And... and I see how you are with your son. I think you might understand me.\" She turned her head to look right at me and I could see her eyes were filled with tears, ready to fall. \"Am I wrong?\"\n\nDamn me, but I understood her. I understood everything she was saying. I searched my own feelings and found I had nothing but sympathy for her. I should be shocked and appalled at her admission of incest, but I wasn't. I held her eyes for a long moment and then shook my head once and looked away. \"No, you're not wrong.\" Those words were the hardest I had ever spoken. Saying them out loud brought their meaning to reality.\n\n\"Don't wait, Jennifer. I waited too long, and our time was stolen from us. He won't disappoint you. He looks at you in such a special way. Trust your feelings. Reach out. Don't lose any more time.\"\n\nI felt a tear escape me and I wiped it away. I was drunk. I was confused.\n\n\"Jessica?\"\n\nI looked at her. She was staring intently at me. \"Can I sleep here tonight?\"\n\nI couldn't respond. My throat refused to let me speak.\n\n\"With you?\"\n\nI felt panicked. Unsure. Lost. But I saw the look in her eyes. She had just confided something so deep and personal with me. She trusted that knowledge with me. Maybe she sensed a kinship. I had no idea. I did know that all day I had been watching her. Captivated by her beauty. Her serenity. Her strength.",
        "\"I've never been with a woman,\" I whispered, and hearing those words thrilled and frightened me.\n\n\"Neither have I,\" she said. \"Do you feel it, too? Tell me I'm not crazy or imagining it or drunk. The moment you appeared at my stall in the market I felt it. That's why I gave you the Takoyaki.\"\n\nI nodded. \"Maybe we just sleep in the same bed. Comfort each other. Take it a day at a time.\"\n\nShe nodded and looked back out the window as the last rays of the sun disappeared into the night sky.\n\nI felt deliriously happy. And so nervous, I was sure I was going to throw up.\n\nChapter Three--The Sleepover\n\nI realised right away that Desmond would never approve. I thought frantically about how to explain Jennifer sleeping over. I was too old for sleepovers, and at my age it was just a euphemism for having sex. Lesbian sex.\n\nOh my God, I was planning on having sex with a woman. Was it only yesterday that my sexuality exploded back to life? Maybe there's something wrong with me? Some sickness?\n\nI had never had any inclination or desire to be with a woman. It was so foreign to me. Depraved. Deviant. And what would the town think if they found out? I would be ostracized. Shunned. Spat on. I would lose my job at the bank.\n\nMostly, though, I worried what Desmond would think. Would he shun me? Hate me? Would I lose that special look he gave me? Would I forever lose that chance? A chance to...\n\nMy mind veered quickly away from that thought before it could form. To grow roots.\n\nI could simply say we were too drunk. That we only wanted to sleep and that sharing a bed wasn't abnormal. Just two friends sleeping in the same bed. Surely, he could believe that. It could be totally true. I wasn't committing to anything. I had already told her I wanted to just sleep.\n\nDammit, Desmond would insist on driving her home. He only had a few beers. People around here drank and drove all the time. The chances on hurting someone was unlikely in the sparsely populated area. And it was just up the road. Two minutes there and back.\n\nDesmond came upstairs from the Game Room. He made more noise than normal, and we looked as he rounded the corner into the kitchen. We watched him closely and I could tell he was totally aware as he kept glancing at us. I wondered how we looked. Like two schoolgirls, caught smoking behind the school?\n\nHe grabbed a beer from the fridge and cracked it, the foam pushing up through the opening. He slurped away the foam and stared at us.\n\n\"Okay, what's up?\" he asked.\n\n\"Nothing,\" I replied.\n\n\"You two look guilty.\"\n\n\"No, we don't\" we both said at the same time and shot looks at each other.\n\n\"Ah, yes, you do.\"\n\nJennifer spoke first. \"Is it okay if I crash here tonight? I just love it here and your mom and I are really talking. I haven't had this in a long time. I suggested I just crash here. Would that bother you?\"\n\nDesmond looked between us and lingered on me. I looked down and pulled my sundress down a little lower. It had ridden up to just below my panties.\n\n\"Yeah, sure. We have the guest room. I made it back up after Leanne left.\" Part of me noticed his manner of speech. It was authoritative. He was the man of the house and I had never heard this side of him. A little dominating. A shiver went through me.\n\nJennifer watched me, waiting for my answer.\n\n\"No, we're going to have a girl's night. We're going to stay up in my room, swap stories about boys, and probably just sleep there.\"\n\nThere, I said it. It was out. I watched him for his reaction.\n\nHe shrugged and drank his beer.\n\nI waited for more. The silence dragged out.\n\nHe finished his beer and crushed and tossed the can in the recycle bin. \"I feel like I'm interrupting something. Sorry, ladies. I'll get out of your hair.\"\n\nDesmond crossed over to me and then hugged me and kissed my forehead. He held his lips there, and I loved the feeling. His arms held me so easily. So effortlessly. I felt as light as a feather. He let me go and stood up.\n\n\"Can I get a hug, too?\" asked Jennifer. She used such a small voice. She looked at me and I nodded, smiling.\n\n\"Sure? For my mom's new friend, I can do that.\"\n\nDesmond went over and hugged her, his arms wrapping around her back and pulling her up to him. He kissed her forehead, too, and that shocked me. It shocked Jennifer too judging by her face. He let her go and stood up. His jeans looked a little tight to me and I looked away.\n\n\"Night ladies, don't stay up too late.\" Desmond grinned at me and walked away to head upstairs.\n\nWe listened to him head into the bathroom. A moment later, the toilet flushed and then his bedroom door closed.\n\nI stared at Jennifer the entire time, and she stared back.\n\n\"Wow,\" she said.\n\n\"He kissed your forehead,\" I said at almost the same time.\n\nShe giggled. \"He did. I guess I'm your friend now?\"\n\n\"If you want to be.\"\n\n\"Would you like that?\"\n\nI nodded. \"I haven't had a girlfriend since high school. I think I need this. Would you mind?\"\n\n\"God, no. It's been a long time since I had someone to be open with. Talk through things. I missed this. Badly. I know we've just met, and this is going really fast, probably because of the wine, but I feel so at peace right now. Comfortable. Happy.\"\n\nI stared at her, trying to get her face to imprint on my memory. She was dazzling gorgeous. Petite, slim, busty, with a perfect complexion, and her hair shone in the dimmed light of the sunroom. Her legs were stretched out like mine and her skin shone. She was beautiful.\n\n\"You think I'm beautiful?\"\n\nI started and then realised I had spoken the last thought out loud. \"You are. So beautiful.\"\n\nHer face warmed, and she looked embarrassed. \"So are you. So tall and beautiful. Desmond looks at you like my father used to look at me. Did you know that? Can you see it?\"\n\nI shook my head, fear running through me. Speaking of this made it real, and I didn't want it to be real. I wanted it to remain just a fantasy. I could only see pain and rejection down those thoughts.\n\nI went to sip my wine but found my glass empty. I stared at it like it had betrayed me. \"How much wine did we drink?\" My words were slurred.\n\n\"A lot. Way more than we should have. It just went with the company.\"\n\nI was afraid of my next words, and I forced them out. \"Ready for bed?\"\n\nShe nodded.\n\nWe rose, and I led the way to my bedroom. The stair steps felt higher than normal. The hallway stretched to infinity. And then we were inside my bedroom, and the door closed behind us, sealing off the outside world. I turned to her and found her right behind me.\n\nHer arms went around my waist, and she placed the left side of her face up against my collar bone and hugged me. I could feel my breasts pressed against her, and right below them, her breasts pressed up against my upper stomach. We fit together perfectly.\n\nI plunked my chin on top of her head. \"I, ah, sleep naked.\"\n\n\"Me, too,\" came her muffled reply.\n\n\"I need to pee, first.\"\n\n\"Me, too. You go first.\"\n\nI did my business, and I took a moment to freshen up my, ah, lady bits. I stared at my face in the mirror in disbelief. I hurried back and she used the bathroom, and then we found ourselves back in each other's arms. She looked up at me. I could see how drunk she was. As drunk as me, most likely. I gazed into her eyes and saw nothing but admiration in them. Her lips were wet and plump and delicious looking. I knew then that I was attracted to women, and it upended everything I thought I knew about myself. American society frowns on same-sex relationships. The result of far too much interference by a repressed tiny segment of the US population. Part of me had been swayed by that overly loud misinformed minority. I fought those useless voices in my head.\n\nImagine being at the top of a building and wanting to jump. Knowing you could fly but everyone says you can't. That's how I felt. Trapped between what my heart wanted and what society expected of me. Was I strong enough for this? Would this change me? Make me have regrets? Would I wake in the morning and hate myself, or hate Jennifer for allowing it to happen?\n\nI had no idea. But I was drunk. And horny. And Jennifer, in that moment of time, looked like everything I could possibly need or want.\n\nI lowered my head, staring into those eyes. My lips crept closer and closer to the event that would likely change my life. My heart pounded so hard in my chest, I swear I could hear it. My lips grew closer and closer to hers. She raised herself on her toes, reaching higher.\n\nAnd then our lips touched every so lightly. She stared back at me with the same fears that would tear my heart. It was a mirrored look that convinced me this was the right thing to do. My lips pressed a little harder, enjoying the pillowy feel of her lips against mine. She pressed back. My tongue, all on its own, parted my lips and probed ever so gently outside my mouth and found the tip of hers already there to meet mine.\n\nThe moment my tongue touched hers, I was lost. Our mouths pressed harder, and our tongues grew bolder. Her arms around my lower back pulled me tighter, and I soon had my hands around her upper back, pulling her in. Pressing her body against mine. Our lips pursed and softened and guided our tongues and then I was inside her mouth. My tongue brushed her teeth and found the hard upper palate. Her tongue danced in my mouth, and I could taste her sweet, wine drenched mouth.\n\nWe necked, standing just inside my bedroom. I was making noises without trying to. They just escaped me. It had been far too long since I had been intimate with anyone. Far too long, but my body remembered. Craved it. Needed it. My hands stroked her back, and hers did the same to mine. I was making out with a woman. A gorgeous, vibrant, Asian woman.\n\nShe broke off the kiss and looked up at me and licked her lips. \"Wow. That was amazing.\"\n\n\"I want you,\" I whispered.\n\n\"I want you,\" she replied.\n\n\"I don't know what to do,\" I admitted. \"This is a huge first for me.\"\n\n\"Me, too.\"\n\n\"Are you scared?\"\n\n\"Yes. Are you?\"\n\n\"Very.\"\n\n\"We can wait.\"\n\n\"I don't think I can, Jennifer.\"\n\n\"God, me either.\"\n\nAnd we kissed again.\n\nIt didn't take long. She tugged on my dress, and I quickly pulled it off my shoulders. I pulled at hers and it pooled at her feet beside mine. We only stopped kissing to get undressed, one item at a time. Her hands fumbled with my bra clasp, and I fumbled with hers. It's backwards undoing someone else's bra, and we laughed into our mouths as we failed and tried again.\n\nOur bras slipped off our shoulders and fell to the floor, and together we mashed our breasts against one another and moaned at the wonderful feeling. Her hands found the waistband of my panties and I found hers. We pushed them down but could only reach so far. We stepped away, glancing at each other's hanging breasts as we bent to remove our panties. I caught a glimpse of a trimmed, black-haired pussy and then with horror realised mine must look like a blonde jungle.\n\nBefore I could think, we were pressed back together, kissing, tongues exploring, hands fondling our backs, moving lower to cup firm ass cheeks, squeezing and groping, each moaning the pleasure into the other's mouth.\n\nI couldn't get enough air, I sucked it in past her mouth and tongue and she did the same. We broke, breathing heavy, and stared at each other's flushed faces. I grabbed her hand and pulled her to my bed. We collapsed in the middle, on our sides and squirmed together, relishing in the feel of each other's naked female bodies pressed together.\n\nWe kissed for a long, long, time. Hands touched only backs, shoulders, necks, hair, lower backs, and then our ass cheeks. I gripped her ass and pulled the firm, round, cheeks apart. My hand crossed over her buttocks, and I felt the heat coming from between her legs. I was wetter than I ever remembered being. My whole body cried out for this. Needed this. Wanted this.\n\nTears leaked from our eyes as we stared into each other's soul. I had never been this close to another person and so completely in tune with what they needed and how. There was no mystery other than how she felt compared to my own body. But I was a woman and so was she. We understood each other, and it was glorious. I never had a moment like this with my husband. I didn't think it was possible to have this with a man and I felt a small sadness.\n\nWe didn't rush anything. We took our time, careful not to cross any imagined lines. We left room for the other to pull away and stop it. But neither of us did. It just took time.\n\nShe was the first to touch our pussies. I felt her hand slide down my stomach, and I flinched. She stopped, and I moaned and shook my head and her hand resumed. I held my breath and pressed my lips harder against hers. I wanted it so bad. Her fingers touched my pubic hairs and flowed through them like a comb, sinking lower and over my mons. Her finger slipped past my clitoris, and I moaned in frustration and then...\n\nI broke our kiss and moaned deeply as her fingers slipped over my outer lips. She was so light in touch and the feeling was out of this world. My husband had never touched me so intimately. She was so completely aware of how to touch me. Jennifer watched my face, and I watched her back through half-lidded eyes. Her middle finger slipped past my outer lips and pressed inside. No woman had ever touched me there. It was perfect. My senses of hearing, taste, and smell seemed overly heightened.\n\nMy own hand slid down her body as she continued to tease my outer lips and just inside. Light feathery touches that burned deep inside me. My hand crossed her flat, tone stomach and I felt the little patch of hair, left on her mons. I spread my fingers and avoided her clitoris as she had done with me. I smiled at her scowl and slipped my fingers down over her outer lips and marvelled at the smooth, shaved skin. I pressed her lips together and she moaned, never breaking eye contact.\n\nI was loving this. I was touching another woman in her most private area, and she was loving what I was doing to her. I felt powerful. Strong. Vibrant. With a shock I realised I felt more like a woman than I ever had during my entire life. This was perfect. My whole soul was singing, happy to have discovered a rich secret in life. The joy two women can bring each other. It was beautiful and beyond what I could emotionally handle. I felt my tears fall and Jennifer kissed them.\n\nI slipped a finger inside her, wondering at just how different it felt from mine, and just how well I knew it already. She was soaking wet. Her juices were thick and slippery, and I spread them around. She was doing the same to me and I felt the stirring of orgasmic bliss start its beautiful rise within me.\n\nWe were panting and our breaths washed over each other. Her exhale was my inhale, and we shared the oxygen in the room. Our fingers probed gently, spreading lips, touching the vaginal opening to seek more moisture. We could hear our fingers working and the wet sound was magic to my ears.\n\nHow could anyone think lesbian sex was depraved or evil? It felt like the most natural thing I had ever done. Natural like childbirth, except this was the pleasure that women feel and not the pain of bringing a child into the world. I felt at peace with my prior doubts. They had vanished with the intimate understanding that two people can love each other and pleasure each other.\n\nI raised a finger and gently touched her clitoris. I knew exactly where it was and how to touch it. I was gentle and watched her eyes flutter and close. Her hand stopped between my legs, and I smiled. I gently played with her little, hard bud. She was as excited as me. I continued to play with her, and her hips started to thrust at me and my fingers. I switched my finger for my thumb and then pressed two fingers into her vagina. She moaned deeper than I woman should be able to, and I thrilled at the sound. I made her do that. I was proud of myself.\n\nI pushed her away from me and onto her back. She gasped and looked at me confused and then I lowered my mouth to her left nipple, after taking a brief moment to enjoy the look of her dark, thick nipple. It filled my mouth and I sucked gently. My hand continued to thrust into her vagina and my thumb stroked her clitoris. She writhed under me. Her hand slipped from my pussy and slipped up past my face, leaving a streak of my own juices across my cheek. Her hand slipped up through my hair and held my mouth to her breast and nipple.\n\nI sucked and nibbled gently on her hard nipple. My fingers continued their play on her clitoris and vagina. She flooded my fingers and made it easier and better. She was close to an orgasm. I could feel her body vibrating under me. Moans escaped her and her breathing stopped and started. Her hips started to buck higher and higher, and I held on.\n\nShe came.\n\nIt was an explosion of sound and motion. She pressed my head hard against her breast and I bit her nipple a little harder. My fingers didn't stop. I knew she had to push past this first orgasm and reach the next one. The bigger one. I bit and sucked and fucked her pussy with my hand, driving my fingers in deeper, harder, and faster.\n\nI was lost in the pleasure of giving pleasure. I almost felt like her orgasm was my own. She screeched and made the most delightful sounds. And I continued my ministrations. She calmed but I didn't stop. And then she exploded again. She cried, her head thrashed and then lifted and looked down at my hand fucking her and then her head flopped back, and she continued to orgasm.\n\nI wished I could feel that. I was envious of her but so happy for her. I watched her orgasm and wondered if that was how I looked. Except, I had never cum like that.\n\nShe clamped her thighs and hand on my hand, stopping me, and pulled my head off her nipple with her hand yanking on my hair. I looked down at her, my eyes equally glazed and happy, and smiled.\n\n\"Oh my God, Jessica...\" she moaned. \"I have no words to describe that! That was...\"\n\nI grinned. I was proud of myself.\n\nHer thighs loosened and I pulled my hand free when she released it and looked at it. It was covered in her juices, and I could smell her so clearly. The smell touched my nostrils and my mouth watered. She watched as I put my fingers near my mouth. I watched her and then put one in my mouth tasting a pussy other than my own for the first time.\n\nShe was delicious. The moment the tangy sweet juices touched my tongue I knew I would happily eat her out. I put a second finger in my mouth and sucked and moaned. Her eyes went wide as she watched me.\n\n\"Jessica, that's so hot. I can't believe you're doing that!\"\n\n\"You taste amazing.\"\n\n\"Let me taste.\"\n\nI put my fingers in her mouth and she gripped my hand and held it there. I felt her tongue swirl around my digits and the feeling went right to my pussy. She sucked and then licked my hand clean.\n\nI kissed her and tasted her all over again.\n\nJennifer pushed me away and I fell back laughing. She scooted on top of me, legs on either side of my waist and kissed me. She grabbed my breasts and found my nipples and pinched them lightly. I moaned into her mouth. I sucked her tongue hard into my own and she moaned. I could feel the wet heat from her pussy on my stomach and loved it.\n\nI loved being a lesbian. I had never felt so free. I had woken something up inside myself and knew I could never not be with a woman ever again. This was the most beautiful intimacy I had ever experienced. I broke our kiss.\n\n\"Jennifer?\"\n\n\"Yes?\"\n\n\"That was the most beautiful thing I have ever done. Thank you.\" More of my tears leaked and I saw and felt hers splash on my face. Women are very emotional. I love being a woman.\n\n\"Baby, you just rocked my world. That was intense. So intense. I've never felt so in touch. Even with my father.\"",
        "\"Wow. You'll have to explain all that to me one day.\"\n\n\"Soon. But first, I think I owe you something...\"\n\nI raised an eyebrow knowing what she owed me but not how.\n\nShe grinned at me, then kissed me quick, and then her mouth started leaving tender kisses along my jaw line. Up to my ear and she sucked on my ear lobe. My body erupted in goosebumps. Her lips brushed me, her tongue gave little licks, her long hair stroked my skin in soft caresses. It was the most pleasure I had ever felt, and my pussy flooded with desire. I could still taste her in my mouth and my tongue looked for more of her flavour. I already needed more. I wanted to taste her directly. To eat her out, I thought and the naughtiness of that thought thrilled me.\n\nJennifer continued to kiss me around my head, neck and ears, and then she moved lower. She kissed and licked my collar bones, down between my breasts to my stomach. My nipples ached, wanting to feel her hot wet mouth on them. She licked under my breasts, and I strained my upper torso upwards to meet her mouth, thrusting my breasts toward her. She pushed down on my shoulders, and I got the hint. I relaxed as best I could and gave in to her mouth.\n\nHer mouth and tongue touched the lower part of my left breast and my breathing hitched, stopped, and started. Her tongue snaked out and licked upwards toward my hardened nipple. My nipples had never been so hard. They hurt so badly. Then her tongue found my left nipple and I moaned. I went to lift a hand to her head, but she stopped me. I laughed and then moaned as her mouth engulfed my nipple, drawing it in with soft suction, and then harder, and then her teeth nipped at it and a small orgasm rippled through me, so completely unexpected, it stunned me.\n\n\"Shh,\" she whispered. \"Not so loud...\"\n\nI was being loud? Was I making sounds? Oh my God, could Desmond hear us in here? My mind whirled. Of course, he can. He's probably jerking off listening to us, right now. His hard cock in his strong hands, stroking himself. His cum erupting in gouts.\n\nI can watch that later, I realised remembering the nanny cam in the teddy bear, and another small orgasm lit me up.\n\nJennifer traced a wet line down the vertical crease in the middle of my abdomen to my belly button. Her tongue swirled inside it, and it tickled and went straight to my pussy. I giggled and then gasped as she went lower. Was she? Was she going to...?\n\nShe grabbed my thighs and pushed them up and apart. I naturally helped her. I looked down, worried to see a bad expression on her face. Instead, I saw her lust as she gazed up past my pussy to me.\n\n\"You're beautiful,\" she whispered, her voice thick with desire, and then lowered her mouth to my pussy.\n\nMy husband had rarely done this. When we first started dating, he had with gusto. But over the months it waned, and after we were married, it had all but stopped. So did the blowjobs.\n\nJennifer was a natural. She licked me in ways that had me gripping the bed sheets and trying to pull my body down and into her mouth. She tongued my vagina, digging deep, and then up through my tender, engorged folds, and circled my clitoris with a hard pointed tongue.\n\nI had never felt so much pleasure. My legs spread wide to grant her full access, and she rewarded me by sucking lightly on my clitoris. I felt so swollen down there and wet. Her tongue lapped and lapped and then her face moved away. I glanced down and saw her smile at me, her lips and chin slick with my juices.\n\n\"Don't stop me, I want to do this,\" she said cryptically and then she lowered her face and bathed my asshole with her tongue.\n\nI fucking came in a shuddering, screaming frenzy. The pleasure started at the top of head. I could feel it pulsing through my scalp and then down across my painfully hard nipples. It swam through my stomach, heating it and clenching it, and then swiftly down through my vagina and ripped through my entire pussy. I clenched hard at the pleasure, screaming who knows what. My legs spasmed and then clamped around her head, crushing it, and holding her there. I would never let her leave my pussy. I needed more of that magical tongue, and I thrust at it. She gripped my ass and pulled me tighter and the orgasm crested again, surprising me. I choked on a sob, my emotions overwhelming me.\n\nShe pressed hard on my thighs and pushed my legs apart. I heard her breath deep and then she licked my clitoris. It was too much, and I pushed down on her head to get her away from me. She chuckled, and I lifted my head, my eyes swimming and unfocused to look at her. She was beautiful. Her smile was wide and bright. Her face was covered in my juices, and she licked her lips.\n\nI reached down and grabbed her head none-to-gently to pull her up and she slid up my body deliciously, with her breasts caressing my skin, to find my hungry mouth. My lips crushed hers and slipped across them with my slick, sweet juices. I licked at her mouth and then probed deep, thrusting my tongue in her mouth searching for more of my flavour.\n\nWe became animals. Unable to press ourselves together enough. Our combined sweat, our juices, and our spit covered us and made everything more pleasurable. My hormones were on overdrive. Nothing existing except her and our mutual pleasure.\n\nI felt I was ignoring her own pleasure, and I felt guilty. I forced her over onto her back, and I wasn't gentle. She squeaked and then moaned when my mouth closed on her nipple. I sucked the hard nub into my mouth and relished the feel of it. I switched nipples and sucked again. Her hands slid through my hair to my head and held me there and I bit gently. I pressed both of her breasts together and sucked both nipples at once. She was making the most beautiful sounds. Everything I did was rewarded with a small sound of pleasure and it guided me. Let me learn what made her happy and feel pleasure.\n\nMy God, I managed to think clearly for a brief moment, making love to a woman is so much better than a man. She's so responsive. So ready and willing. So soft. And so, so, hard when the time is right.\n\nI had to taste her entire body and started my quest. I was out of control. I no longer had any inhibitions, and the liberation was soul changing. I licked her breasts, sucked as much flesh along with her nipples into my mouth. I lifted her arms and licked her sides along her rib cage eliciting a fit of giggles. I swirled my tongue in her tiny belly button. I would rise up quickly and nip at her neck, and ear lobes, descend to a nipple and then down around her stomach. I wanted to taste every inch of her.\n\nAll the time my thoughts were focused on her pussy. I could smell her so clearly. It was heavenly and my mouth watered, letting me lick more and more of her exposed flesh. My tongue finally brushed her patch of downy hair, the only hair she had down there, and her smell of arousal grew stronger in my nostrils.\n\nMy fingers slid down and caressed her calves, squeezing and tickling. I stroked the back of her knees and she groaned letting me know I had found a lovely spot. I slid down and lifted a leg and licked inside her knee and stared down at her swollen pussy. She was shaved and her lips were parted and gleaming.\n\nI licked up her thigh and then, too hungry to continue teasing her, I lapped at my first pussy. The first taste was so much better than I had hoped, and I knew I could never be without it. People describe the taste of pussy and never truly get it right. Her taste on my tongue was tangy and sweet. Beyond pale words. It was nectar. It was honey. It was mine and I dove in.\n\nI pushed up both her legs and she grabbed them holding them high under her knees. I could see her beautiful pussy spread open and soaking in her juices and my spit. Below, her asshole pulsed and called to me, remembering the pleasure she had given me there. I licked her from her rosebud to her clit and she moaned deep and loud. Her head was thrown back, her hair strewn about and in disarray, and her mouth was open wide sucking in air. Grunts and groans poured from her. I looked up over her body and loved the image of her breasts rising firm above her slim ribcage. Her nipples jutted hard into the air. I reached up and twisted them and placed my mouth on her clitoris and sucked gently.\n\nJennifer came on my mouth. Juices poured from her and she spasmed and grabbed my head forcefully and pressed me hard against her pussy. I lapped and sucked and swallowed her nectar. I had never tasted anything better.\n\nI wanted her to cum again and continued to eat her. I licked and sucked every part of her pussy and asshole. I was starving and she was my dessert. She came again and again and then pushed hard at my head and clamped her legs closed and rolled onto her side, gasping and panting.\n\nI slid behind her and carefully rearranged her hair and pulled it from her face where it was plastered by her sweat. I spooned behind her and sucked her earlobe, kissed her cheek, and then stretched my head around to her mouth. She twisted her head toward me and we kissed gently. Our tongues lapping up our combined juices and probing our mouths. She shuddered over and over.\n\n\"I just keep cuming,\" she moaned into my mouth. \"Oh, my fuck, it's so powerful. Jessica! Oh, Jessica! That was amazing. Thank you! Thank you, so much!\"\n\nI held her until her shakes stopped. And then she turned on her side to face me. Our noses touched and we stared into each other's eyes. I could get lost in her deep brown eyes. Her lashes were long and gave her eyes a beauty I don't think I had ever noticed before in other women. I kissed her lips and then smiled at her.\n\n\"Welcome to the neighborhood!\"\n\nWe laughed, then giggled, and kissed while we giggled. Hands roamed and found wet places to explore and tease. Nipples were sucked gently, and breasts caressed. Necks were nibbled and backs stroked. We were lost in our intent to simply pleasure the other and I lost myself in what I was doing and what she was doing. We would stop by some understood sign and cuddle and hold each other, soaking up each other's heat. Then we would resume. It was a never-ending cycle of pleasure and relaxation.\n\nI had never been so intimate with someone. So closely connected. My heart was on fire, and my soul? My soul was singing louder than it had in any other time in my life. I thought of Desmond then, holding him in my arms right after giving birth, and looking into his eyes. No, I realised, the pleasure with Jennifer is only a close second to the birth of my son. I pushed those lovely thoughts away and focused on the woman in my arms.\n\n\"Are we lesbians?\" I asked her, smiling.\n\n\"Hmm. Probably.\"\n\nWe stared at each other and then giggled again.\n\n\"Tell me about your father,\" I asked.\n\nI watched her eyes roam about my face before settling back on my eyes.\n\n\"When he died, it was horrible. Not in how he died. That was painless for him, the doctors said. But it was horrible for me. I was living with him in Los Angeles. We had an expansive studio apartment. After mom died when I was ten, it was just me and my dad. A little like you and Desmond.\"\n\nOn hearing my son's name my heart pounded. He had to have heard us having sex. He now knew I was a lesbian. What would he think of me now? He would hate me; I was sure of it. Deal with it later, I reasoned. Enjoy this moment while it lasts. I'll talk to him later and he'll simply have to understand.\n\nThen a part of me worried if I had ruined any chance to... Don't finish that, Jessica! I admonished myself. Just don't!\n\nI pushed all that away with difficulty and focused on my lover. My female lover, I accepted, and a rush of warmth and a ripple of joy ran through me.\n\nI could see in Jennifer's eyes she was reliving her memories of life with her father. I focused on her and her words. She deserved my complete attention.\n\n\"Dad and I were always close. I matured and noticed the looks he gave me. Not dirty looks. They were looks of appreciation. He admired my figure and that gave me a confidence I never knew existed. I loved him all the more for that. I looked just like mom. And he missed her so deeply. I found him many times crying. In many different ways...\"\n\nI sensed something more. \"What do you mean?\" I kissed her nose.\n\nShe blushed. \"Once he drank a little too much. He rarely drank, but it was a day after an anniversary of her death. I had just turned eighteen the month before. I went to check on him and he was passed out naked on the bed, lying on his back. A framed picture of mom and me was lying beside him. He was naked and had all this white cum splattered up his stomach and chest. I didn't want to, but I had to. For my father, you see. So, I got a warm washcloth and cleaned him up. He never stirred once.\"\n\n\"You washed his cum off him?\"\n\nShe nodded and bit her lip looking at me to see if I was judging her. I wasn't and said so. \"Keep going, tell me more.\"\n\n\"I-I... I washed his penis,\" she blurted quickly. \"That was hard to do at first. Seeing your father's penis is not... normal. I... I... I took my time, Jessica. I enjoyed it. Because it was my father, do you see? I was taking care of him. I was being the dutiful daughter, and it gave me pleasure. I washed him carefully.\"\n\n\"Then what happened?\"\n\n\"I shouldn't tell you this.\"\n\n\"Go ahead, I won't judge you.\"\n\n\"Are you sure? You may not look at me the same way again.\"\n\n\"I'm sure.\"\n\n\"I touched it. I had never had a penis so close and exposed to me. I wanted to examine it. So, I did. I looked it all over. It was so soft. I touched his scrotum. Felt his testicles. It was amazing.\"\n\n\"And he was passed out the whole time?\"\n\nShe giggled, warming to her story. I could see it excited her to tell it to me. \"Yes. Dad had drunk an entire bottle of sake. He was snoring hard the whole time.\"\n\n\"You bad girl,\" I said and gave her ass a small smack. I grinned at her, and she laughed. She was lovely.\n\n\"And then I thought, why not taste it, too? So, I put the head of his penis in my mouth.\"\n\n\"You did not!\"\n\nShe nodded her head on the pillow and grinned. \"I did! I put it in my mouth and held it there and then let it go. It tasted good. Not bad. Not great. Just good. Then I noticed his penis was getting larger. So, I put it in my mouth again and this time ran my tongue over the head. It felt so weird. Spongy. Jessica, it started to grow! It was so amazing to watch. It transformed. Swelled. Grew longer. His scrotum tightened. I watched it all, fascinated. It was like a whole other living thing.\n\n\"I held it in my hand and couldn't believe how it felt. It was so soft, Jessica. But underneath, it was so hard. Hard so it could fuck women. I knew that. And the heat coming off it. It was like a small furnace! The head of his cock was so much bigger and squishy. I had a hard, hot penis in my hand that could go inside me. And I wanted that, to feel the hardness and heat, but I was too afraid. So I just played with it.\"\n\n\"What do you mean?\"\n\n\"I stroked it a little. I looked into the little slit at the top and watched clear liquid ooze out. I tasted it. It was slippery and sweet. Not like candy, a different kind of sweet. I loved it. I put dad's cock into my mouth and sucked on it for the first time. I wanted more of the liquid. His pre-cum. I felt so naughty. But I also felt like a child locked in a toy store. I had complete freedom to do what I wanted. So I sucked him. And licked him.\n\n\"After a bit I realised I really liked having a penis in my mouth. Especially my father's. I felt powerful and hungry. I sucked and sucked.\"\n\n\"And your dad stayed sleeping?\"\n\n\"Oh yes, he did. He would moan though and sometimes his hips moved. By his moaning, I could figure out what gave him the most pleasure. I licked his scrotum and he really liked that. Pre-cum was pouring out and I licked it all up. And I kept sucking him and I touched myself.\"\n\n\"You masturbated while sucking your father's penis?\"\n\n\"Yes. I couldn't help myself. I came a couple of times sucking my father's penis.\"\n\n\"Then what happened.\"\n\n\"He came. Right into my mouth. It surprised me so much. I knew it could do that, of course. But I wasn't ready for it. I hadn't thought through to this point. I froze when his cock pulsed hard in my mouth. It spasmed in my hand, lurching like a little animal. He shot his cum deep into my mouth.\"\n\n\"Oh my God,\" I murmured. Her story was turning me on immensely. For a second, I wished I was her and her dad was my son.\n\n\"I stayed that way, his cock pulsing and his cum filling my mouth. I kept my lips around his shaft and held it. I didn't know what to do. I thought of running to the bathroom and spitting it out. But I swallowed it instead. I surprised myself again. A little had already slipped down, and I thought, what's a little more? So down it went.\"\n\n\"Jennifer!\" I exclaimed, and she grinned at me. \"How was it?\"\n\n\"Bitter. Sweet, too. Sticky. Slimy. I fucking loved it. I don't know why. I think about that first taste all the time. The best reason I have for swallowing it is I am a woman and cum is meant for me. So, I took it and claimed it.\"\n\nI stared at her with admiration. \"Jennifer, that is so hot what you just said.\"\n\nJennifer stroked my pussy and felt how wet I was. Her story and her touch had me horny again, and I moaned. \"Want me to take care of that?\" she smiled.\n\nI hesitated. I did want that. \"Sadly, no. Not right now, keep talking, this is hot!\"\n\n\"Okay. So that was the first time. I cleaned up and then pulled the bed covers over him. And I kissed him good night. Not a daughter kiss. I really kissed him.\" Her eyes had a faraway look.\n\n\"Had you brushed your teeth?\"\n\n\"No! Later I realised I had cum swapped with my father. A little bit, anyway.\"\n\n\"Did he ever find out?\"\n\n\"No. But I eventually told him once we became lovers. He was shocked. But he wasn't upset. He said he wished he had woken up.\"\n\n\"Why does that make me so hot?\"\n\nJennifer searched my eyes. I loved watching her gorgeous exotic eyes peering into mine. \"Because I think all girls dream of their daddy at some point. Maybe fleeting. Maybe more than that. But it occurs to them. I know it does.\"\n\n\"Me, too, actually.\"\n\n\"That is my experience. I researched it a lot. I always loved my father, but now I wanted him in another way. It scared me and repulsed me. I was repulsed by myself. I felt disgusting. Shameful. Father knew I wasn't doing okay, but not the reason why. He was so caring. Hugging me. Holding me. It just made it worse.\"\n\n\"What happened next?\"\n\n\"I should describe my father to you. He was my height. Very Japanese looking, ha! But he was fit. He did a lot of martial arts. Such strong arms and hands. He was beautiful to me. He was into very healthy lifestyles, and we always ate well. I was certain I would never have another opportunity like I had with him that evening. He rarely drank and usually only on the anniversary. I realised if I wanted that again I would have to make it happen.\"\n\n\"What did you do?\"\n\n\"I started dressing more provocatively. Exposing my skin to him in little ways. I looked at pictures of mom and started to dress like her. Dad noticed right away. He looked more at me and longer at me. I found ways to see him watching me without him knowing. Mirrors, toasters, anything that would let me see him watching me.\n\n\"One night I heard a noise and I crept over to his bedroom. His door never shut properly and sometimes opened by itself. I could see in and there he was. He was lying on his bed, naked, holding the same picture of mom and me, and he was playing with himself. I stood there and watched him the whole time. He stroked himself, and I played with myself. I was so wet watching my father pleasure himself. I wanted to run in. Admit my lust for him and ravish him. But I couldn't. I could only watch. Then he came and my life changed.\"",
        "\"How?\"\n\n\"I had expected words from him to be my mother's name. Instead, he moaned MY name.\"\n\n\"Oh my God!\" I thought that was beautiful. \"That's beautiful!\"\n\nShe nodded at me. \"That night drinking he had drunk that much sake because he had wanted me. He drank to stop himself from acting out. The anniversary of my mother's death made him miss her and I was her spitting image. I had no idea he felt that way. All the time I was parading around looking like her, I was driving him crazy with lust. And he hated himself for it. I was being a terrible daughter.\"\n\nMy eyes were wide open, and I hung on her every word.\n\n\"This is why I know what Desmond sees in you. I can see the exact same looks he gives you that my father gave me. It is lust, regret, love, and sorrow, all wrapped into one bitter, jagged pill. It consumed my father. Tore him down. For years he suffered. Desmond will be the same way, Jessica. Trust me on this.\"\n\nI thought about that for a long time and Jennifer gave me a moment to process it.\n\n\"We will talk tomorrow about that, okay? No pressure. But let me finish my tale. It is almost over. I heard my father call out my name when he came. The surprise was so great that I came, too. He heard me and I fled to my room. I cowered under the blankets of my bed, ashamed, and terribly excited at the same time. Then came a knock on my door. My father came in and slipped under my blankets and held me. He spoke gently to me. Apologized. We talked about mom for a bit. Then I kissed him. And he kissed me back.\n\n\"We made love and never stopped until he passed. To him, I was his wife reborn, but also his daughter. We lived a beautiful life together. Like husband and wife. Rumors started, we never figured out from who, but slowly the family started to realise we were much more than father and daughter. Father fought them. Pushed them all away. And we found a peace for ourselves.\n\n\"When he died, the family descended like vultures. Looking for blood. They had held back because of father. With him gone, I was free game for their lies and scheming. They wanted father's money. Lawyers got involved. It was nasty. In the end, I fled. I moved from city to city. They always found me, and I would run again.\"\n\n\"Why are they so angry?\"\n\n\"Because my father was very rich, Jessica.\"\n\n\"Really?\"\n\n\"The wine we drank tonight?\"\n\n\"Yes?\"\n\n\"It is around six hundred dollars a bottle.\"\n\n\"What?\"\n\nShe giggled. \"We drank four of them.\"\n\nI did the math. \"Oh, my God!\"\n\n\"Worth it,\" she murmured and kissed me. \"Don't worry about it. Money means little to me. This,\" and she kissed me a little harder. \"This means everything to me. I missed this. I needed this. Thank you.\"\n\nI stared at her in surprise. Who was this incredible woman? She had waltzed into my life only yesterday and now I could taste and smell her wonderful nectar on my lips. I had never in my life had sexual thoughts about a woman. The thought had repulsed me. But now? I smiled at her and pushed myself down her body and ate her out.\n\nShe came in minutes and then swung around for a 69. Our first. It was the best thing ever. Women's bodies are perfect for a 69. You can completely mash yourselves together. It felt like putting in the last piece of a jigsaw puzzle.\n\nWe could have gone all night had we not needed to sleep so badly. It was four AM before we finally fell asleep. I insisted on aspirin and water before we slept and by the way my head felt when I woke at noon, I probably would have died without it.\n\n<p align=\"center\">* * *</p>\n\nJennifer shook me awake. I was lying mostly on top of her with my left leg holding her down. I was groggy and my head pounded something awful. I groaned. She shook me harder.\n\n\"Jessica! Wake up! Your son is outside your bedroom door.\"\n\n\"My son?\"\n\n\"Desmond! He knocked on your door! Wake up!\"\n\nMy eyes fluttered open and then the night events came thundering full throttle into my head. I lifted my head in fright.\n\n\"Oh my God! Desmond is at the door?\"\n\n\"Yes, he says he has breakfast for us.\"\n\nI disengaged from Jennifer, and my hand brushed her breasts. I look down at her and was pleased to feel my lust for her return. I was worried last night that in the morning I would have regrets. I sat up, my breasts exposed and hanging and looked at her.\n\nShe looked worried to me. She watched me closely.\n\nI smiled and wrapped my right hand around her neck and pulled her in for a kiss. Our tongues found each other and then we pulled away, holding our hands over our mouths.\n\n\"Oh my God, our breaths stink!\" I laughed.\n\nShe giggled.\n\nA knock at my door sobered us. \"Mom? I have breakfast.\"\n\n\"Ah, okay, hon. Give us a minute to freshen up and we'll be right down!\" My heart was pounding.\n\n\"No. I have it here. Breakfast in bed.\"\n\nJennifer looked at me in surprise.\n\n\"What? You have breakfast for us for in here?\"\n\n\"Yes! Can I come in?\"\n\nI looked at our naked bodies and shrieked \"No! One minute!\"\n\nWe both grabbed at the duvet pushed down to the bottom of the bed and pulled it up to our chins. We sat back on the headboard. My heart was threatening to escape my chest and bounce around the room.\n\nI looked at Jennifer and then myself. We were decent. Just naked and lying together in bed. \"Um, okay. Come in.\" I heard the quaver in my voice.\n\nThe doorknob jiggled for a moment and then turned. The door pushed open a little and then I heard the clink of plates and then the door was pushed open by Desmond's foot. He held our large wooden tray in his hands, and it was heaped with food.\n\nI watched him and waited for his eyes to fall on us. Please God, don't make this worse, I prayed. Not that I believed in God, but every little bit helped. Desmond's eyes rose and met mine. I almost sobbed in relief. He looked amused. Amused! In one moment, the dominos between being a child and a mature adult man were toppled and I was so proud of my son.\n\nJennifer grasped my hand under the covers and squeezed it.\n\nI sobbed once. It escaped me and I covered my mouth with my free hand.\n\nDesmond smiled at me. \"It's okay, mom. I'm happy for you. I really am.\"\n\nMy chin quivered and I couldn't speak. Tears splashed down my cheeks in little rivulets. I was emotionally all messed up. But seeing Desmond's acceptance made everything I had done with Jennifer all the more special to me. I looked at her and saw her eyes were wet for me.\n\nI kissed her. I had to. And then looked at Desmond. Now he looked a little spooked.\n\n\"Um, breakfast. Is served. Where do you want it?\"\n\nI wiped at my eyes and nose. \"Um, right here on the bed, hon. That would be perfect, thanks.\"\n\nDesmond went to put it on our laps. The tray had legs that folded down that let you eat in bed with it over your lap. For it to work, Jennifer and I would need to be closer. The tray was only so wide.\n\nJennifer scooted closer and patted my lap. Which caused the duvet to slip down exposing both of our breasts. I squeaked and pulled it up.\n\nDesmond stood frozen for a moment staring at where my breasts were. I could see his desire. I knew what Jennifer had spoken about. I watched him wrestle with it in his head. I could no longer try to deny it. My son lusted after me. I felt my heart lift and soar.\n\n\"Sorry about that, Desmond.\"\n\n\"Uh, sure, no problem. Here...\" He reached over the bed with the tray and set it down over our laps.\n\nIt was a feast. It was one plate for us to share, covered with sausages and bacon, scrambled eggs, hash browns, fresh fruit, and white toast. He had placed a few of the restaurant jam packages with it. We had coffee, orange juice, bottled water, and a jar of Tylenol. It was perfect, but it was the small water glass containing two little marigolds from the garden that had my attention.\n\n\"I thought you would be hungry and maybe your heads would be hurting a little.\"\n\nI looked at Desmond with nothing but love and admiration. \"Baby, this is wonderful! How'd I end up with such a perfect son?\"\n\nHe shrugged but smiled that little boy smile I knew so well. Maybe there was one more domino left in him, and I loved that.\n\nI bit my lip and tore off the band-aid. \"Did you hear us last night?\" I braced myself.\n\nHe nodded. \"Um, I think the neighbours heard you. You guys were very loud. VERY loud.\"\n\nI was embarrassed to my core. I looked at him and he seemed to be okay with it. I could also see the dark lines under his eyes. \"Did we keep you up?\"\n\n\"Kind of, yeah. I'm right next door, remember?\"\n\nJennifer snorted. \"I bet. It's not every night you hear your mother and her female lover making out all night.\"\n\nDesmond suddenly looked like he wanted to be anywhere but here. But he remained. I was proud of him in that moment. \"True. True. Okay. Okay, I'll leave you two be. Enjoy. Your breakfast, I mean. I mean, enjoy your breakfast.\"\n\nHe walked to the bedroom door and then stopped and looked back at me. \"I'm really happy for you, mom. You too, Jennifer.\" He left and closed the door behind him.\n\nI stared at Jennifer. \"Wow.\"\n\n\"Wow is right. Did you like how I exposed our tits to him?\"\n\n\"You didn't!\"\n\nShe nodded her head and giggled. I loved her laugh. \"You tramp!\"\n\n\"Takes one to know one! Let's dig in. I'm starved.\"\n\nWe started eating, feeding each other, and then Jennifer snorted.\n\n\"What's so funny?\"\n\n\"I bet it absolutely smells like our sex in here...\"\n\nEnd of Part One\n\nAuthor's Closing Comments:\n\nI have a problem. I have too many story ideas and not enough free time to write them all. This one was screaming at me, so I played hooky from work and wrote 24K words in two days.\n\nTell me what you think!\n\nStay sexy my friends,\n\nLana Ocean\n\nJanuary 2022\n\nAll rights reserved. Copyright \u00a9 2022 Lana Ocean"
    ],
    "authorname": "Estcher",
    "tags": [
        "incest",
        "lesbian",
        "rural",
        "mother and son",
        "father and daughter",
        "swallow",
        69,
        "romance",
        "freud"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/my-son-my-conqueror-pt-01"
}