{
    "title": "Changed Redux Pt. 06",
    "pages": [
        "Author's Note: \n\nThis story depicts graphic lesbian sex and mind control. All characters in this story are over the age of 18. If you are in a location where this style of writing is prohibited or if this isn't your cup of tea, I suggest you click the back button now. \n\nOnce again I would like to thank all the loyal readers who have waited so patiently for this next chapter to finally arrive. My humble apologies for how long it has taken. My life has made a few... ahem... changes, in the last year and the time I have available for writing has decreased rather substantially. Aside from that, I tend to be a somewhat methodical writer. Knocking out 30,000 words can be a time consuming endeavor even for a prolific writer, never mind a slow one. \n\nAs always, a very special thank you again to all those who read, vote and leave feedback. Hearing from you means the world to me and I truly appreciated it all. \n\nFinally, please try and remember as you read any story on this site that the writers here on Literotica, are not professional writers. Likely many, if not most, were not English, Writing or Literature Majors in college. I am actually an Engineer and did quite poorly in grammar and writing classes when I was younger and it's only been through years of practice and reading that I have managed to make myself into a marginal, though hopefully still improving, author. So please try not to judge too harshly those that give freely of their time and effort with nothing really to gain except for a few votes and an occasional comment. \n\nHaving said my piece, I hope you'll enjoy my words. \n\n~ CD\n\nPrologue\n\nMary's eyes snapped open for an instant before fluttering and rolling up as the hot rush of orgasm surged through her veins. She let out a stifled groan and sagged back into her pillows, letting the pleasure take her for a few moments. \n\nOnce she came back down and the heat began to fade, her thoughts slipped back to the dream that had driven her to this unexpected climax. She had been lying on the beach, tangled in a delicious sixty-nine with the young mother that she had seen at the gas station a few weeks ago, back when she was still just figuring out her new powers. With a little help for Mary's newly raging libido and her newfound ability to manipulate people, she had made the unsuspecting woman share a steamy mutual public masturbation session. The encounter, though brief, had been pretty kinky and especially erotic, at least Mary thought so. So far, she still had no idea what the other woman really thought. \n\nMary guessed however, that the woman likely enjoyed the session at least as much as she had. In fact, thanks to the magic, she probably enjoyed it more. Maybe even a lot more. With her still tenuous control of the magic at the time, Mary was pretty sure that she had altered the woman's sexual orientation at least enough for the woman to be interested in her. She wasn't sure if it applied to all women or just her or even if the effect was temporary or not. Although after becoming more experienced with the ring, Mary thought now that the changes likely permanent.\n\nWhich meant there was probably a young mother out there somewhere who was potentially infatuated with Mary but had no idea who she was since Mary never told her and the woman was likely a freshly minted lesbian. The idea of it sent a thrill of excitement through Mary that started in her clit and shot through her entire body. Immediately on the heels of that thrill was a wave of embarrassment that she was so excited by something like that. Dear Goddess she was turning into such a pervert. \n\nShe sat up slightly and looked down at her girlfriend, Julia, who was lying asleep between her legs. The smaller girl was on her side, hugging one of Mary's thighs while resting her head on her lower belly. Carefully so as not to wake her, Mary gently stroked Julia's lustrous, silky black hair and marveled at how beautiful she was and how it took so long for her to really appreciate it. \n\nWell, she thought, I wasn't a lesbian before the magic changed me.\n\nThat was true. Before putting on the ring, Mary had never really had any serious thoughts about her own sex. But once she put on the ring that all changed and now she couldn't imagine going back. The idea of being with a man now did absolutely nothing for her. In fact, just the thought of it kind of repulsed her. \n\n Guess it's a good thing I didn't have a boyfriend when I put this on. She thought, fiddling with the ring as she smirked. That would have been awkward.\n\nHer thoughts turned back to the young mother at the gas station and after a few moments hesitation she reached to the night stand and picked up her phone. Scrolling through the contacts she found what she was looking for. \n\nKristy. She didn't even know the woman's last name. Only her first name that she had quickly scrawled on a piece of scrap paper along with her phone number before driving away. \n\nMary's finger hovered over the text icon. Should she contact her? She held the phone for a few seconds while gently stroking Julia's hair before finally putting it back down. \n\nMaybe tomorrow. She thought, closing her eyes and slipping back to sleep, fantasies about Kristy joining her and Julia floating through her mind while her afterglow continued to simmering in her veins. \n\n<p align=\"center\">* * *</p>\n\nPart One ~ The girl from the gas station\n\nThe heavy box dropped onto the shelf with a muffled thud as Kristy Vanders stepped back with a sigh of relief. Stocking the shelves was by far one of her least favorite activities at her current job. Things like brass water valves and copper pipe fittings tended to be heavy, at least when you were talking about a box containing fifty of them, and putting them onto the higher shelves was a challenge for someone as short as her. Brushing the dust from her hands, she headed back towards the front of the stock room and the customer counter beyond.\n\n\"Did you get all that shipment put away already?\" Asked Arthur Boyer, or Artie as everyone called him, owner of Artie's Plumbing Supply. \n\n\"Yeah, just put the last box of half inch ball valves on the shelf.\" Kristy said as she reached the counter. \n\n\"Kid, you don't need to put the whole shipment away in twenty minutes. Take a breath sometime for cripes sake.\" Said the older man.\n\n\"I'd just rather get it over with.\" Kristy said, wiggling the grimy mouse on the computer to wake the system up. After a moment the aging CRT screen came slowly back to life displaying the inventory tracking program. She pulled up a battered stool whose griminess nicely matched that of the mouse, sat down and started entering stock numbers from the shipping paperwork.\n\n\"Well you sure do know how to work, I'll give you that.\" He started to get up from the other stool at the far end of the counter but stopped halfway up and made a quick, startled sounding inhalation of breath.\n\nKristy looked over with a bit of concern at what had sounded a little too much like a gasp of pain.\n\nShe had been working for Artie for about nine months now and had come to regard him as almost a surrogate father, or more accurately, a grandfather. He was a warm, kind hearted, elderly man with what had to be about the friendliest disposition she had ever encountered. In all the time she had known him she had never, not once, heard him utter a single unkind remark about anyone or to anyone. Not once. \n\nSeveral months ago, just a short time after Kristy had started, a particularly unruly and unreasonable customer had been in the shop. Artie had been dealing with him and not Kristy and she recalled how amazed she was at how calmly he replied to every one of the disgruntled customer's comments, remarks and eventually insults. When the asshole had finally walked out the door all Artie had to say when he turned to Kristy was \"Well, I hope he has a better day tomorrow.\" And that was it. \n\nKristy had been almost floored by this reaction and said, \"How can you just sit there and let him yell at you like that? Insult you? Swear at you? And then say you hope he has a better day tomorrow? Why?\" \n\nArtie just shrugged and said, \"What good will swearing back do? It's not going to change him and it won't help me. If anything it will just make him more bitter. If I insult him, I allowed him to bring me down to his level. I'm letting him control me and take me somewhere I don't like going. Personally, I would prefer to try to bring him up to my level than to have him drag me down to his.\" \n\nThat response, delivered in his casual, almost folksy, matter-of-fact manner had touched Kristy. There was a wisdom there that she though was now largely absent in the modern world. Over the following weeks Kristy began to see it wasn't just hollow words, it was how the man really lived. Unfailingly kind and respectful, always courteous, always forgiving. He was just... nice. \n\nKristy also began to notice something else about Artie the longer she was around him. He was always in a good mood. Always. \n\nKristy had spent so much time lately being bitter and feeling sorry for herself at her current situation that finding someone who was so unfailingly cheerful was a actually irritating at first but as time passed his demeanor began to affect her. It was almost impossible to be cross at Artie for more than a few minutes at most. His unflaggingly friendly personality simply didn't give Kristy's negative thoughts anything to bite into and they just kind of slipped away. \n\nTo her own surprise, Kristy had begun to find over the last few months she had actually begun to act and think more like her perpetually cheerful boss. Not totally, that was for sure. She still had her regular bouts of road rage and swearing matches with the store's antiquated computer system. But by and large, she had begun to think, act and generally be, more positive. \n\nHer thoughts were interrupted by Artie making another sucking sound as he stood up again. \n\n\"Are you alright?\" She asked. \n\n\"Oh, I'm fine. I'm just old.\" He said. \n\n\"You're only sixty-two. That's not old.\" She said. \n\nHe chuckled. \"Well, if it's not old, then it's at least knocking on old's front door.\" Then he sobered a little. \"It just seems like lately my age is catching up with me fast.\"\n\nUnfortunately, that was also something that Kristy had seen with her own eyes. When she had started here Artie had been a spry and energetic man who worked ten hours a day with no complaints. Now, in just the last couple months he had come to a point where he had to sit down and rest after fifteen minutes of standing. It worried her. \n\n\"When was the last time you went to a doctor?\" She asked. \n\n\"The Doc? Oh, I don't know, a few years ago I suppose.\" He replied. \n\n\"Call him and make an appointment, you need to go.\" She said. \n\n\"Kristy...\"\n\nShe raised one eyebrow and stared him down. \"Call him.\" \n\n\"You ordering me to?\" \n\nShe smirked, \"If I ask you nicely, you'll say you don't need to go.\" She pointed at him, \"So yes, I'm ordering you. Call him, now.\" \n\nArtie dropped back onto the stool with a sigh, \"I hate to admit it, but I think you're right.\" \n\n<p align=\"center\">* * *</p>\n\n\"Goodnight Gramma.\" Kristy said as she headed up the stairs with her not quite one year old daughter, Nola, cradled in one arm. Thankfully, Nola had turned into a good sleeper, at least in the last few months, and now rarely woke Kristy up in the middle of the night for a snack. For the first few months Nola had been waking up what seemed like every fifteen or twenty minutes. Kristy had been wondering at the time if she would ever get a full nights sleep ever again. Luckily she had, eventually. She laid Nola in her crib, made sure the sound machine and the monitor were on and carefully tiptoed out of the room. \n\nOnce she concluded her nightly routine in the bathroom, she entered her own room and closed the door. After a moment of hesitation, she pushed the lock button. Her grandmother's bedroom was on the ground floor and with her arthritis, she rarely came up to the second floor anymore but there was always a chance. Kristy definitely didn't want the elderly woman walking in on a scene like the ones that had been happening in this room most nights over the last few weeks. She felt her nipples stiffen and her sex getting wet just at the thought of it. \n\nIt had been a few weeks since Kristy had her first encounter with her mystery woman at a local gas station one night. During that encounter some kind of impulse had come over her and she had masturbated herself to a fantastic climax right in front of her. She had left her name and number before hurriedly taking off in embarrassment. Then a few weeks later, after not hearing from the woman at all but still fantasizing about her constantly, she had finally run into her. Well, kind of ran into her. Kristy had at least seen her although the woman never saw Kristy in return. At the time, the woman was at a local park along with several other women who were all tangled in a pretty kinky, very sexy and also quite public, sapphic orgy in a picnic area down by the river. \n\nAfter watching the show for a while Kristy had snuck quietly back to the parking lot. As luck would have it, Kristy had spotted the business card of her mystery woman sitting on the dashboard of her truck in the parking lot. Mary Calise. Now Kristy had a name for the fantasies, and also a phone number. \n\nLater that same night, Kristy had been lying in her bed trying to figure out what was happening to her as a seemingly endless chain of shattering orgasms crashed down upon her. At the time it had seemed like she would barely come down off one climax before another would sweep her back up. After an hour or so she had thought she was approaching the ragged edge of her endurance as well as her sanity when she had appeared. \n\nKristy's breathing hitched and her eyes slid closed as she recalled that night. Hovering over Kristy in the darkness of her room had been the most exotic being she had ever laid her eyes on. She was breathtakingly beautiful with dark, umber skin and long, flowing hair so dark it seemed to absorb what little light was in the room. Her eyes were those of a cat, brilliant yellow-green that appeared glow in the dim light with long, slitted, vertical pupils. But more exotic than that had been her body. Three pairs of arms had sprouted from her shoulders matched by three pairs of heavy breasts on her chest. \n\nSomewhere in the back of Kristy's mind was a half remembered image of some ancient Goddess that looked somewhat similar, though not exactly the same. Shiva...Kali...something like that? \n\nWhatever her name, the apparition had been dressed only in a skimpy purple gown of some kind that barely covered her but was so sheer as to be completely transparent. Around her neck, arms, legs, fingers and waist had been dozens and dozens of gold necklaces, chains, rings and bracelets that shimmered in the dark, clinking musically together with her every move. Huge golden hoops dangled from her ears and a delicate golden circlet graced her brow, just visible under her thick mane of hair. \n\n\"Who are you?\" Kristy had eventually managed to ask between gasping moans. Her eyes greedily drinking in the exotic form floating over her even as her conscious mind shrank away from it in fear. \n\n\"I am Kazorra Dar Nok, Empress of the Third Realm, Ruler of Earthly Delights, Guardian of all things beautiful, enjoyable, delicious... sensual... pleasurable. I am the Goddess of Lust.\" \n\nThe voice had been deliciously thick and sweet, rich with the promise of all the pleasures of the flesh, an eternity of endless nights of rapture and endless days of debauchery. The voice slid easily into the deepest, most secret recess of Kristy's mind, burrowing deep into the depths of her soul and planting seeds of ancient primal, earthly, carnal desires. \n\nKristy's mind reeled, barely able to comprehend what was happening even as her sex responded.\n\nMore thoughts and images slipped into her mind, sliding down into her soul to join the seeds that had been planted. \n\nThe Goddess of Lust.\n\nGoddess.\n\nWetness flooded Kristy's sex and her nipples stiffened to hard little points. \n\nLust. \n\nA goddess... beauty... pleasure... lust... \n\nA goddess must be worshiped. A goddess must be served. \n\nKristy gasped as her core contracted almost painfully.\n\nA goddess. \n\nMy Goddess. \n\n\"Yesss.\" Kristy breathed as rapture took her.\n\nKristy shook her head, trying to clear the memory. It had been a couple weeks since that night and still just the thought of it effected her almost instantly. She tried to ignore the heavy, wet, throbbing heat between her thighs. The memory of that night was still incredibly sharp and vivid in her mind but even so it was still hard to accept that it had been real. Had she really been visited by some kind of goddess. Had an actual goddess seduced her and had she actually pledged her life to her? \n\nKristy both thrilled and quailed at the thought of it. \n\nSince that first night, the Goddess hadn't returned to her in that same manner, only in Kristy's dreams. She awoke every morning soaked in sweat, dripping between her legs while her whole body sang with the afterglow from countless climaxes. \n\nShe only partially recalled the dreams but the parts she did remember were nothing but an seemingly endless orgy of sapphic debauchery and lust. \n\nKristy still felt that somehow this desire for women was new for her, that somehow something inside her had changed but how and when it had happened she wasn't exactly sure. However, at this point Kristy had pretty much given up wondering what had changed in her that made her now desire women and just started to accept it. Pretty much. She liked girls, this was who she was. Maybe always had been? Maybe?\n\nPushing the confused memories from her thoughts for the night, she climbed into her bed, set her alarm and after a slight hesitation, clicked off the light. The room was plunged into darkness as she pulled up the blanket and settled in. After a few minutes her breathing settled down and her eyes became accustomed to the darkness. She tried to fall asleep but apprehension... anticipation? Something... was keeping her up. Thoughts of the rapture that sleep and the subsequent dreams would undoubtedly bring floated through her mind. Her nipples became stiff while her sex got wetter and wetter. \n\nUnable to resist the urge, she allowed her hand to drift downward to glide over the front of her panties. The thin cotton did little to cover her mount and even that minimal contact made her twitch. Biting her lower lip, she spread her legs and slid her hand under the fabric. Slowly, she pushed her way farther down, feeling the shape of her mons, the smooth skin that gave way to the curly, soft hairs. The way the rounded mound curved down to the folds of her sex, the outer lips already wet and swollen with her need. She hissed as her exploring finger glided over the wet, pliable skin to the hood protecting her... \n\n\"Aaah.\" She gasped and her whole body jerked at the first contact with her clit. Dear Goddess she was sensitive tonight. Her breathing was rapidly turning to panting as her finger went to work on the sensitive nub. Withing minutes she was moaning and gasping as fire flowed through her veins. She felt the tingling tightness in her breasts increasing with her passions and knew that in addition to the soaking wetness seeping from between her legs, a lot more wetness was coming as her breasts started to let down. Another ripple of pleasure rolled through her as she slipped her fingers into her depths then out again to circle her clit before plunging them deep inside herself again. \n\nHer body writhed with the sensations and she felt her shirt sticking to her chest as her milk, dripping from her nipples, soaked her thin tee shirt. The knowledge of this only served to fire her lust more and she groaned. ",
        "Kicking off the blankets she gripped the hem of her shirt and yanked it up, exposing the firm mounds of her breasts, swollen with her hot, sweet milk, glistening in the dim glow of the light from her alarm clock. \n\nThe tempo of her fingers increased as she felt her release approaching. Her breathing was coming in quick, sharp little pants as her entire body began to tighten. Her toes curled as her legs spread wide and her hips rose. The sound of her rapid breathing, accompanied by the wet noises of her fingers pumping in and out of her trembling sex filled the small room and was occasional accented by a muffled gasp or grunt. \n\nWhen her release finally arrived it did so in a shocking rush. A cry was torn from her throat as her sex contracted around her fingers with crushing tightness. Her back arched, forcing hips down as her body instinctively tried to drive her fingers ever deeper into her hungry core. She felt wetness raining down onto her running down her and was shocked to see milk spurting from her nipples like tiny fountains. She had leaked milk before while masturbating but never like this. She found it both embarrassing and at the same time incredibly erotic. \n\n\"Oh Goddess!\" She managed to gasp out as another savage wave of ecstasy crashed through her. Her soul sang with pleasure as she twisted and thrashed, her body straining against the tangled sheets until she finally collapsed back onto the bed, totally spent. \n\n<p align=\"center\">* * *</p>\n\nKristy awoke slowly, her veins still humming with a delicious post-climax burn. She stretched languidly and rolled onto her side, savoring how wonderfully sensitive her entire body still felt as the soft blankets slid over her skin. \n\nGradually she became aware that something was amiss. Something felt a bit off somehow. With a jolt, she sat upright and looked around her small bedroom. In the dim glow of her alarm clock, she saw a woman standing at the foot of her bed, smiling down at her. Except it wasn't a woman... at least, not a human one.\n\n\"Goddess.\" Kristy breathed. \n\nThe woman's smile grew wider. \"Ah, I'm so very pleased that you remember me, my love.\" \n\nThe Goddess Kazorra took a step closer to the bed, her eyes gliding over Kristy's naked form. Kristy saw the woman's smile change as her gaze lingered on her breasts. The look that flared in those inhuman eyes made Kristy's breath hitch in her throat. Kristy couldn't recall another instant in her life when she had seen such powerful look of raw, animal lust in another person's eyes. It went far beyond normal human needs and desires. This was something deep, ancient... primal. She bit her lower lip and whimpered as wetness flooded her once again. Trembling, she wanted to sink back into the bed, to get away from the entity before her but instead found her body leaning in, desperately wanting whatever the Goddess would do to her. \n\nThe Goddess raised one hand and reached for Kristy's face, ghosting her hand over Kristy's skin, teasing but not quite touching. Even without contact, Kristy could feel the promise of what the Goddess's touch was capable of doing to her... for her... with her. It was like an electric current dancing over her skin, making her hair stand on end while all of her nerves fired in concert. Inwardly, Kristy thought that if the woman actually touched her even the barest amount, she would likely have an orgasm on the spot. She also suspected that any kind of climax the Goddess gave her might just conceivably kill her. \n\nIt would probably be worth it. \n\nThe woman sat on the edge of the bed near Kristy and leaned in languidly towards her. Kristy found it very hard to keep her eyes up, they were continually drawn to the woman's breasts, all six of them. They way mounds shifted and swayed with her movements was entrancing and deliciously exotic. Kristy found herself fixating on the dark, hard nipples that were easily visible through the thin, gauzy material that barely even counted as a dress. Kristy imagined her tongue circling the stiff, crinkled skin, circling the nub...her lips closing around it... her tongue drawing it in... \n\nThe Goddess's quiet laugh brought Kristy back to the present and she felt a furious blush heating her cheeks and even the tips of her ears. \n\n\"Oh, no need to be embarrassed, my love. Your thoughts are absolutely delicious and we'll have plenty of time for that later.\" She slid in closer to Kristy and leaned in to whisper in her ear. \n\nThe closeness of the Goddess sent ripples of pleasure tingling through Kristy and she couldn't contain another whimper. When the woman spoke, the feel of warm breath on her ear made her shudder with need. \n\n\"But first,\" the Goddess whispered, \"do you remember your pledge to me?\" \n\nKristy recalled that night a few weeks ago. The Goddess had taken her and in the throws of her passions Kristy had agreed to become her priestess and pledged her life to the Goddess. \"Yes.\" She breathed. She didn't know what being a priestess for the Goddess of Lust would entail but at that moment she had never wanted anything so much in her entire life. \n\n\"Mmmm.\" The Goddess said. \"That was just what I wanted to her.\" She kissed the tip of Kristy's ear. \n\nA shocking jolt of pleasure lanced straight through Kristy's head and she cried out as her body went taught. Electric currents of pleasure seared through her as powerful climax took her body. \n\nAfter a couple minutes she came back to earth and realized that somehow Goddess has slipped behind her and Kristy was gently cradled in her arms. She moaned as her fogged mind started piecing together a number of odd sensations into a clearer picture. The feel of six breasts against her back was certainly unusual but the feel of six hands gliding over her body was beyond erotic.\n\nKristy's moaning became a constant purr as the hands of the Goddess touched her seemingly everywhere at once. Her breasts, her neck, her pussy, her hair, her nipples, her arms, her mouth. No part of her body escaped their caress. Within minutes she was approaching another climax. Her moaning had turned to keening cries of rapture as the pressure in her core continued to build. \n\nKristy felt hot breath on her ear and she cried out louder as lips, soft and hot, kissed her. \n\n\"Are you prepared to join with your Goddess?\" \n\n\"Yesss!\" Kristy cried as she felt fingers pushing impossibly deep into her sex. \"Oh Goddess, yes! I'm yours, take me!\" \n\nThe Goddess Kazorra kissed her newest acolyte on the ear and said, \"Very well, my love. The words were spoken, the pact is sealed. In this life and in the world after, you will serve me for all eternity. Your life and you soul, are mine.\"\n\nA stunning orgasm exploded throughout Kristy's entire body as all six hands gripped her tightly, crushing her into the Goddess behind her. Kristy wanted to scream out with the sudden, terrifying assault of blinding pleasure mixed with searing pain but her body refused to respond. She sagged lifelessly, a pliable doll in the hands of her new Mistress. \n\n\"Relax, my love, this is just the beginning of a whole new life of pleasure for you.\" \n\nShe lay helpless in the arms of the Goddess as climax after climax rolled through her. Time became meaningless an her entire world dissolved away leaving nothing but the Goddess and the rapture that flowed from her. \n\nEventually some distant part of her mind noted that light in the room was slowly becoming brighter and she could now see their reflection in the large mirror mounted on her dresser. She watched enraptured as the six hands wandered over her body, seeming to touch everything at once. It finally occurred to her pleasure fogged brain that the light in the room was actually coming from her. Or more accurately from both of them. Wherever their bodies touched Kristy's skin was glowing. The glow was a soft, pale turquoise blue that was dim but getting stronger by the minute. \n\n\"Wha...?\" Kristy managed to gasp out between the moans and cries. \n\n\"Ssssh. Just wait my love.\" The Goddess Kazorra whispered, her breath hot in Kristy's ear. \"You're almost ready, it's almost time.\" \n\n\"Wha... ah... are... ah... a... unh... ungh!\" Kristy tried to speak, tried to ask a question but was barely able to think and couldn't manage to form the words properly. \n\nNow the sensations coming from where her skin was in contact with the Goddess were changing. It almost felt as if she was somehow changing. Looking back to the mirror she saw that where their bodies came together the glow was now a brilliant blue and she had to squint against the glare. She looked closer and what she saw made her blood run cold. \n\nTheir bodies were joining together. Or maybe melting together was a better term. As she watched, the Goddess slowly sank into her, their skin melding and blending under the brilliant turquoise glow. As the deity sank deeper and deeper into her, Kristy felt as though she were becoming larger and at the same time, more powerful. Energy charged her veins and the burning pleasure surging through her turned into a searing, all consuming rapture. \n\nWith a final flare of brilliant light she felt the Goddess meld with her completely and every nerve in her body responded. Energy flared in her and tore through every corner of her being. She arched her spine, threw back her head and screamed into the darkness. It was a raw, savage, animal sounding cry that made her own hair stand on end. When intense assault on her reason and self control finally subsided, she collapsed onto her bed. \n\nSome time later reality came back to Kristy an she looked about to see what had become of the Goddess. She didn't see her and tried to sit up. It was then with a cold, hard shock that Kristy realized that while the Goddess may have disappeared, she had left her mark on Kristy. \n\nKristy fumbled for a few moments, trying to gain control of the three pairs of wildly flailing arms that she now possessed while she also tried to gain her balance that was thrown off by the six full, round breasts on her chest. \n\n\"What the hell! She... she made me into... to... her!\" Kristy stammered in horror. Then, panic rising she cried, \"Oh dear Goddess. What did you do to me? I can't go out like this!\" \n\n\"You don't like your new look?\" Said the Goddess. It took Kristy a moment to realize that the voice was actually in her head and that she was alone in the room. \n\n\"I can't go out like this!\" She cried. The pleasure that had been flowing through her veins now quickly fleeing in the face of a panic fueled surge of adrenaline. \"I look like a... a... a freak!\"\n\nThe Goddess laughed into Kristy's thoughts. \"A Freak? I didn't realize that's what I was.\"\n\nWith a flash of sudden horror, Kristy realized that she had just insulted a Goddess and wondered what might now happen to her. She stammered an apology, \"I'm... I'm sorry Mistress. It's just that I...\"\n\n\"No need to apologize my love. I know that all that has happened to you is a lot to absorb.\" \n\nAs the Goddess spoke, Kristy took a deep breath and tried to quiet her panic. This was difficult to do as she constantly felt the three sets of arms twitching a moving on their own as if her body didn't know quite what to do with them, which wasn't really far off the mark. The feel of all six moving independently was decidedly foreign to her her. \"I'm sorry Mistress, it's just so... well, strange.\" She concentrated and was both fascinated and horrified to see all three hands on the right flex in unison. \n\n\"Here, I think I can help you with that.\" The voice of the Goddess echoed in Kristy's head, \"Can't have you flailing around like a freak now can we?\" \n\nKristy felt a furious blush heating her cheeks and ears at the dig from the Goddess. \"I'm... uh, no. I'm sorry my... uh... what should I call you? Is Mistress proper? Or My Lady? Goddess?\" \n\n\"I'm not that particular, my love, at least for you. Goddess or Mistress will do fine.\" She paused then the tone of her voice changed, suddenly becoming more forceful and commanding. \"But all your new followers, all of the followers  you will get for me, will address me as is fitting. They will address me as Goddess Kazorra. But you, well my love, you hold a special place, you are my High Priestess. You alone among mortals will have the exclusive right of communing directly with me, of touching the divine, of lying with eternity. That is the privilege of your new station.\" \n\n\"I... me?\" Kristy asked. \"But I'm nobody special. I'm just... well... me.\" She said quietly.\n\n\"No my love, look at who you are now.\" The voice of the Goddess seemed to swim around in Kristy's head, whispering in her ear, sending tingling ripples of warm, comforting pleasure through her mind. \"You are the chosen of a Goddess on Earth. You have bonded with that Goddess and been touched by the divine. You have just gained powers that few mortals have had in eons. In time you will see that you are destined to be so much more than you ever imagined. So much more than you ever thought you could be.\" \n\nA tingle started at the base of Kristy's neck and quickly radiated outward, down each of her six arms. \"Now, hold still a moment, this should help you get used to your new... what was that word I heard the other day... upgrades?\" The sultry laugh echoed deliciously through her head as flush of rapture slipped over Kristy's skin, making her core contract and her nipples tighten. She realized with a groan that her extra breasts amplified the sensations to delicious new heights. Without thinking she brought her hands up, all of them, to cup her new breasts. She moaned at the feel of the six heavy orbs, each so much larger than her breasts had been previously. Moving more on instinct than conscious thought, she pinched first one, then two, then all of her nipples. With a shudder she cried out at the flood of new sensations that exploded in her chest. \"Oh Goddess...\" She croaked out as her core convulsed. \n\n\"You see, my love. I told you, a whole new world of pleasure.\" Kazorra said, her voice thick with passion. \"Now, my love... worship me.\"\n\nKristy knew exactly what the Goddess of Lust wanted and with her own hands, she plunged herself into rapture. \n\n<p align=\"center\">* * *</p>\n\nPart Two ~ A Flash of Blue\n\n\"Kristy! Are you going to work today?\" Echoed up the stairs and prodded Kristy groggily back to the living world.\n\n\"Wha...?\" She mumbled as she disentangled herself from the mass of blankets and sheets that was somehow wrapped around her entire body. She finally manged to get the fabric off her head only to be momentarily blinded by the clear morning sunlight streaming into her room from around the edges of her window blinds. \n\nBright sunlight. Too bright for early morning. She looked wildly at her clock. 9:34. Shit!\n\nShe launched herself out of bed and made a grab for the nearest clothes that looked like they would be presentable and started stuffing her body into them. After a few seconds the events of the previous night came back to Kristy and her eyes snapped open wide. \n\nShe looked down at her chest. Two boobs. \n\nShe looked at her arms. Two. \n\nTwo... not six. Normal. She was still normal. She sighed heavily. It must have just been a dream. \"Thank God.\" \n\n\"I think you mean Goddess, my love. And besides, you already gave me plenty of thanks last night.\" \n\nThe voice of the Goddess Kazorra floated through Kristy's head, or was it actually in the room? Regardless of where it came from, it's unexpected arrival made Kristy squeak in surprise. She took a startled step back, tripped over a pillow and fell square on her ass.\n\n\"Goddess, I... I'm sorry.\" She stammered. \n\nKazorra laughed again and Kristy found herself warmed by the sound. The laughter was rich and musical and reverberated with something deep in her soul. \"There is no reason to be sorry. You are new to this so I will be patient with you. But for now, I believe you have somewhere to be.\"\n\nThe real world came back to Kristy and she swore softly. \"Shit. Yeah, I'm going to be late for work.\" She looked around the room but saw no actual sign of the Goddess anywhere. \"So, um... will I see you again or, uh...\" she hesitated. \"Should I be saying prayers to you or, uh... something?\" The whole line of questioning felt awkward and just generally wrong to Kristy. She imagined it was somehow wrong or improper to be addressing a deity in such a familiar way. But then again, they had just had sex... or at least something like sex, the night before so maybe she had earned a little familiarity. However, even for all that, Kristy had absolutely no idea what a High Priestess to the Goddess of Lust was supposed to actually do. Well, have sex she supposed, but what else? And considering the current state of her social life even that single requirement was likely going to be problematic. \n\n\"Don't worry my love, it will all care of itself. Remember, you have a Goddess in your corner now.\"\n\nKristy had the uncomfortable feeling that the Goddess had just been reading her mind. \"Uh, yes Mistress.\" She said cautiously. \"I need to be going now.\" \n\n\"Have fun.\"\n\n<p align=\"center\">* * *</p>\n\nLuckily, Kristy's grandmother agreed to watch her granddaughter for the day and saved her the drive to the daycare center and the resulting extra twenty minutes it required. She pulled open the door to the store at a couple minutes after ten and taking a deep breath, walked in. \n\nArtie looked up from his place at one of the computers on the front counter and raised his eyebrows questioningly. \n\n\"I know, I know.\" Kristy said. \"I'm so sorry. I had the weirdest dreams last night and they kept me up most of the night. I guess when I finally fell asleep I really fell asleep because I slept right through my alarm.\"\n\nArtie looked at her for a few more seconds before one corner of his mouth quirked up in a half grin. \"It happens.\" Then one eyebrow quirked and the grin receded, \"Just don't let it happen tomorrow. I need you here right at seven every day for the next week or so. Ok?\" \n\n\"Ok. But why? What's up?\"\n\n\"You're running the show, that's why.\" The older man sighed and continued, \"Doc is sending me up to Boston for a bunch of tests and scans and God knows what else. I'll probably be out for a few days at least.\" \n\n\"Did the Doctor think you were going to be ok?\" Kristy asked, feeling a weight settling into the pit of her stomach. Artie was the closest thing she had ever had to an actual father and the thought of something happening to the old man was heartbreaking. \n\n\"Doc didn't really say. Too early to tell I guess.\" He stood slowly, \"But I suspect whatever it is they'll be some pill or something to cover it.\" He looked over at her and smiled, \"Don't count me out yet, I'm planning on running this place for at least another ten years.\" \n\n<p align=\"center\">* * *</p>\n\nThe next morning rolled around and Kristy dutifully opened the store at seven sharp. She handled the morning business without much trouble. That early it was mostly all contractors and professionals who knew exactly what they wanted. For that reason, mornings were typically pretty easy for Kristy, hectic, but relatively straightforward. She had gotten a pretty good handle on all the different parts and fittings associated with plumbing and even knew a lot of the shorthand terms for fittings that the contractors used. She was glad for this because it saved her from feeling like an idiot when she stood there looking lost when someone asked for P-Trap.\n\nSeemingly contrary to almost everyone else, Monday was not Kristy's least favorite day of the week for pretty much the same reasons that mornings rolled by quickly. On Mondays the store was filled mostly pros who knew their business. It was actually Friday afternoons, the time that most people looked forward to at work because it was so close to the weekend, were Kristy's least favorite. That was when all the homeowners, or \"Weekend Warriors\", as Artie liked to call them, came in looking for parts for their weekend projects. She had learned to dread dealing with the person looking for \"It was some kind of valve I think. It was metal and I think it had a blue handle. You know the part I mean?\" Kristy had a lot of patience, but not a limitless well and many of these encounters severely tried her limits. ",
        "By early afternoon, the morning rush was long gone, along with the post coffee break parts runs at about nine thirty and the post lunch parts run at twelve thirty to about one. Kristy was down one of the isles in the stock room putting some returned parts back in their bins. It was a task she had done so many times that she hardly even had to think about it anymore. As she worked, her mind wandered back to the events of the last few days and a nervous thrill coursed up her spine then settled like a lead weight in the pit of her stomach. \n\nFor not the first time and certainly not the last, she wondered again if she had gone completely, utterly, and irredeemably, stark raving mad. An ancient Goddess? Had she seriously pledged herself to some pagan god? Did she really have sex with some pagan god? Did that make her some kind of heretic or heathen or, or... something? She wasn't really sure but she did know that she was becoming more and more uncomfortable with the whole idea of it. She briefly considered that maybe she could somehow get out of the whole thing but upon reflection decided that no, pledging your eternal soul to a god wasn't really the kind of thing you could just go back on.\n\nBut then she wondered again if in fact the whole thing had even been real or if it had just been a... a... a what? A dream? Her imagination? No, it had all been far to real for that. It hadn't been a dream or her imagination. It was real, just as her pledge had been real. She had pledged her soul to the Goddess of Lust. \n\nAt that thought, a shudder ran through her as a gout of heat boiled up in her core. She fell forward, only barely catching herself on the edge of the metal shelf. Trembling slightly, she sucked in a few ragged breaths as she tried to calm her suddenly racing libido. \n\n\"Yes, my love. That's right, there is no going back now. You have pledged yourself to me.\" The voice of the Goddess echoed through Kristy's mind. \n\nA searing bolt of pleasure lanced straight through Kristy's mind and she cried out as she dropped to her knees. \"Goddess...\" she moaned. \n\n\"Yes, I'm here, my love.\" Kazorra said, her voice tinged with amusement. \"Honestly, I don't know why you'd want to leave my service anyway. I would have thought the benefits would be obvious.\" \n\nMore pleasure washed through Kristy's mind and she moaned louder. Wetness flooded her sex as her center contracted. \n\n\"Now see how enjoyable being my servant is? And you haven't even started using your real powers yet.\"\n\n\"What?\" Kristy gasped. \n\n\"The powers that are granted to you as one of my priestesses. I'll show you.\"\n\nInstantly, stabbing pain lanced through Kristy's head as a thousand carnal images of sapphic passion flooded through her consciousness in a confused, overwhelming torrent. A strangled scream escaped her lips as her mind overloaded and the world went black. \n\n<p align=\"center\">* * *</p>\n\nA strange sound like some kind of bird chirping prodded Kristy back to the living and she groaned as she pushed herself up onto her hands and knees. The world swam sickeningly about her as she tried to get her bearings. She tried unsuccessfully to recall what had been happening before she blacked out but it was all just a dark, greasy mess in her mind. She recalled pleasure and pain and... and ...had the Goddess been here? \n\nAgain she heard the strange bird chirping but it now she realized what it was. It was the cheery, electronic jingle of the front door chime to the store. Someone was in the store. Or maybe someone just left. She wondered briefly just how long she had been lying on the floor.\n\nMoving slowly, her head still swimming, she headed up to the front desk. As she rounded the last shelf she came up short, surprised by what, or rather who, she saw there. \n\nStanding at the counter was a young woman dressed in jeans, workboots and a dark blue tee shirt with \"Rodriguez Mechanical Services\" printed on it. Kristy knew the name of the company, they were a regular customer of the store. Manny Rodriguez, the owner, was in here almost every day. Kristy recalled that she had seen the young woman in here once last week with Manny but she had stayed well back from the counter and Kristy hadn't talked with her or even really gotten a good look at her. \n\n\"Can I help you?\" Kristy asked, trying not to look like she was looking the woman up and down while she was actually doing just that. \n\nThe young woman was short. Probably a good three or four inches shorter than Kristy's already unimposing five foot four. Her skin was a lovely, dusky light brown, her hair was gleaming black that was pulled back in a thick ponytail. Her deep brown eyes were framed by dark rimmed glasses. \n\n\"Hi. Uh, yeah.\" She said, giving a little grin that showed off straight, white teeth. \"My dad sent in an order a while ago.\" \n\n\"Ok.\" Kristy said,trying not to let her eyes linger on the girl's chest as she read the name of the company again. \"Rodriguez Mechanical? Your dad is Manny?\" \n\n\"Yeah, that's him.\" \n\n\"So I'm guessing you work for your dad?\" Kristy asked as she pulled up the online order. \n\n\"Well, yeah, sort of... I guess.\" Said the girl with a little shrug. \n\n\"Sort of?\" Kristy raised one eyebrow as she looked up over the computer screen. \n\n\"This wasn't exactly my plan, if you know what I mean.\" She said, gesturing around at the store around them. \n\n\"No dreams of becoming a plumber?\" Kristy said with a little quirk of her lips. \n\nThe girl gave a little snort before saying, \"Well, when I graduated from high school I had hoped to take a year off before starting college next year. Get a part time job, figure out what I really wanted to do in life, have some fun, you know.\" She sighed, \"But my dad had other ideas. When he found out I was looking for a job he had me come to work for him instead. So now I spend all day running errands, cleaning up and doing whatever else he can find for me. Not exactly what I had in mind.\"\n\nKristy found the order and pulled the inventory numbers, scribbling them down on a scrap of paper before getting up. \"That sounds... um... fun?\" \n\nThe girl's eyebrow raised even more, \"Not even a little bit.\"\n\nKristy smirked as she headed towards the stock area. \"This will only take a minute but have a seat.\" She gestured towards the two old metal stools that faced the order counter. \n\n\"Thanks.\" She said as she sat down and pulled out her phone. \"Take your time, please. I'm in absolutely no rush to get back to sweeping and playing gopher.\" \n\nAs Kristy walked down the isles of the stock area pulling the order she felt a wave heat wash through her and her mind was suddenly filled with images of the girl in a dozen, a hundred, a thousand, carnal displays. The girl naked on the sheets of Kristy's bed, writhing in ecstasy. Her kneeling in some hotel room fondling her full breasts as Kristy watched. The girl lying face down on her own bed pleasuring herself while crying out Kristy's name. Her and Kristy wrapped in a furious sixty-nine, soaked in sweat, gasping into each other. The two of them wrapped around each other, her staring deep into Kristy's eyes as they shared an endless chain of soul shattering climaxes...\n\nWith a strangled gasp, Kristy sagged back against the metal shelves and slowly slid to the cold concrete floor, her eyes wide and staring at nothing. Her breath coming in quick, shallow little pants as panic began worrying at the corners of her already much abused sanity. She shook her head trying to clear the images from her mind but it was no use. More and more lewd images flashed through her mind in a seemingly endless chain. \n\nOnly now was Kristy just beginning to realize what she had actually agreed to with the Goddess. She knew of course that the Goddess of Lust wanted her to have sex but truthfully she hadn't really considered just how that was going to happen. She was hopelessly single, after all. Also, in her most recent experiences, the whole single mom thing tended to shut down most potentially romantic interactions long before they ever even got off the ground. Anyone she had been interested in recently, once they found out she had a kid, took off faster than if she had told them she had the plague. \n\nMuch to Kristy's relief, the barrage of images faded away and she managed to suck in a few deep, calming breaths that, in truth, did very little to calm her. Her pulse was still racing, sweat was beading on her brow and most distressing of all, her panties were completely soaked. While her mind may have been at least a little nervous about the ramifications of her recent promise to the Goddess, her body was, apparently, really looking forward to it. \n\nShe looked to the front of the store to the young woman sitting at the counter staring at her phone. \"Well, she is cute.\" Kristy muttered to herself. \"But why would she want me?\" \n\n\"Because you'll make her want you.\" \n\nThe word echoed through Kristy's head and make her jump. \"Goddess?\" \n\n\"If any other voices speak to you out of the ether I'd rather like to know who they are.\" Came back the droll reply.\n\nKristy felt her cheeks and the tips of her ears heating at the sarcastic reply. \"I'm sorry Mistress. I was just surprised.\" She said softly, looking back to the front of the store to make sure the girl didn't catch her talking to herself. She turned to look up and down the isle but saw no sign of the Goddess anywhere so she addressed her words to the ceiling. \"What do you mean I'll make her want me?\" \n\n\"You'll see, my love. Trust me.\" \n\n\"I... uh... ok, yes Mistress.\" She looked back to the front and taking a deep breath, headed up with the handful of parts she had collected. \n\n\"Here you go.\" She said, setting everything down on the counter. \"I'm Kristy, by the way. May as well introduce myself since it looks like you may be coming in here more often now.\" She held out her hand to shake and the girl took it. Kristy had to be careful not to make any outward sign of the surprising amount of pleasure she got from just that simple contact. It was almost as if a tingle of electricity started in the hand the girl was touching and went straight through her body, right to her clit.\n\nFor an instant, Kristy thought she saw something deep in the girl's eyes as they stood there face to face, the strange feeling rippling through her. It looked to Kristy as if Leticia's dark brown eyes were were somehow glowing a faint blue. When she blinked, the effect disappeared. She blinked again and shook it off as a trick of the light. \n\nThe girl paused for a second, her breath visible hitching before she finally said, \"Leticia Rodriguez.\" \n\n\"Pleased to meet you Leticia.\" Kristy said, holding onto the hand for probably a little longer than was exactly proper. Strangely, the girl didn't seem to mind. In fact, if anything she seemed to be enjoying the contact as well. Kristy could have sworn that she saw a little flush of color come up into the young woman's cheeks as they stood there for a long moment. \n\nFinally Kristy sensed it was getting awkward and released the hand, feeling a the warmth of the girl's soft skin lingering on her palm even as her sex tingled from that strange... whatever it was that just happened. She struggled for a moment to try and find something to talk about before eventually starting lamely, \"So will you be coming in more often? It's nice to see another female in here. I kind of get sick of all the sports, trucks and hunting talk after a while, you know?\" \n\nLeticia laughed, \"Oh, trust me I know. Although in my house it's sports and fishing.\" \n\nIt was Kristy's turn to laugh. \"Fishing! Oh, yeah, how could I have forgotten fishing.\" \n\n\"I know, its like a favorite topic, right?\" \n\nKristy laughed again then, feeling a surge of naughtiness well up from somewhere inside her, she leaned in close and whispered in a conspiratorial way, \"Personally, I think their favorite thing to talk about is boobs, but they are always careful not to do it in front of me.\" \n\nLeticia looked a little taken aback but giggled shyly and said, \"Yeah, I think you're right. Breasts are definitely the main topic of discussion.\" \n\n\"Yeah, it's like they are always on the guys minds. They try and be sneaky but I catch them staring at mine all the time.\" Kristy said, hardly believing the words that were coming out of her own mouth. She never talked like this normally and certainly not to someone she had just met. The strangest part was the effect her words were seeming to have on her own body. With every word she felt little tingles coursing up her back, like little charges of electricity were traveling directly from her clit to her mouth, almost as if she was somehow sexually charging her speech. Just the idea of it made her feel sexier and more powerful.\n\nFeeling increasingly saucy and confident, she winked at Leticia and was thrilled to see her cheeks blush a deep crimson as a small, shy smile played over her lips. She gave another nervous sounding little giggle and looked down at her shoes for a second before looking back up and smiling even more. \n\nThe Goddess had said something about helping her, hadn't she? Had this been what she had meant? Did she give Kristy some kind of... power? Was that what that, that... energy she had felt? And the blue glow in the girl's eyes? What had that been? \n\n\"So I guess I should... you know... get going.\" Leticia said, interrupting Kristy's thoughts.\n\n\"Huh?\" Kristy said, feeling suddenly off balance. \"Oh, yeah. Sure.\" \n\n\"Yeah, my dad is waiting for these parts.\" She said, slowly picking up the small pile on the counter. \n\nThe feeling of power flared inside Kristy and she blurted, \"Hey, I'll give you my number and you can text me when you're bored at work.\" \n\n\"Sure!\" Leticia said a little too eagerly. \"That sounds great.\" She punched it in and then sent some message back to Kristy so that she had her number as well. \"There. Now we can commiserate about work and having guys stare at our boobs.\" She laughed. \n\nKristy laughed, \"Well, you do have great boobs. I mean, I'm having a hard time not staring myself.\" She laughed again, making it seem like a joke but she was also carefully watching Leticia to see what her reaction would be. She was elated to see the blush come back along with the same shy smile and another glance at the floor. \n\n\"Well thanks, I guess.\" Leticia said, with a chuckle that sounded more than a little forced. After a moment of hesitation she glanced down at Kristy's chest and said, \"Yours are... ah... pretty great too. Um... not that I was looking or anything. I mean... I, uh... you know.\" She gave another chuckle but it sounded even more forced than the first one. \"I... uh... I guess I should go. It was really nice meeting you. I... uh, I liked... I...\" She stammered then broke off. After an awkward couple seconds she hurriedly blurted, \"I gotta go. Bye.\" \n\nAs Leticia turned to leave Kristy again saw the girl's eyes flash with a faint turquoise blue glow again for just for an instant. This time she was sure it wasn't a trick of the light, something definitely just happened. \n\nThe bell on the door jingled as it opened and shut, leaving Kristy alone in the empty store with nothing but a phone number and her raging libido. She picked up her phone and looked to see what Leticia's number was and what she had sent her. It was a smiley face emoji with little hearts for eyes. Guess she liked what she saw, Kristy though with a wicked grin.\n\nLooking at the heart shaped eyes on the emoji brought Kristy's thoughts back to the glow in Leticia's eyes and she called out to the empty room, \"Mistress?\" \n\n\"Yes, my love\" The voice of the Goddess seeped into Kristy's thoughts like warm honey, filling every corner, drowning it all in delicious sweet rapture. \n\nKristy had to resist the urge to moan as the voice flowed over her. Getting a grip on herself she asked, \"Mistress, was that blue glow in her eyes from you? Was it some kind of... I don't know... magic?\"\n\nKazorra laughed, \"You will see, my love. You will see.\"\n\n<p align=\"center\">* * *</p>\n\nPart Three ~ Cyberstalking\n\nKristy was just pulling into the driveway of her grandmother's house when her phone twittered. It was a text from Leticia. \n\nHey, it was great meeting you today. Sorry I had to run off.\n\nKristy replied and they texted back and forth for the next hour or so. She found out that Leticia was actually pretty funny in a snide, irreverent, snarky kind of way. It was all the more amusing because it wasn't at all what she had been expecting. In their brief talk earlier today she had suspected that Leticia was at least a little bit shy and kind of quiet. She had joked around some when Kristy had started but her overall manner had seemed more reserved. That impression appeared to be incorrect, or perhaps Leticia just was feeling more comfortable with Kristy now? That idea sent a little thrill through her but she chided herself at the same time saying it was just a bit ridiculous, they had only met today, only spoken for a few minutes and had only been texting for a couple hours. \n\nKristy found that the longer they went back and forth the more aroused she was becoming. By the time she had put her daughter to bed and retired to her own room for the night her thoughts were constantly brought back to the pretty girl with the big eyes, dusky skin and dark hair. Kristy imagined what she would look like in something more attractive than jeans and a tee shirt that was a little too big. She pictured her in a tight, slinky little dress. Black? Red? No, white. White would show off her rich skin beautifully. Heels of course. Hair done up or down? Down, definitely down. \n\nAs the image in her mind got clearer Kristy's arousal grew. Soon she was almost panting with need and her pussy was soaking wet. She felt a tingling tightness in her chest and looked down to see two wet circles on her shirt where her nipples were starting to leak. \n\nShe squeezed her thighs together and shivered as a rush of pleasure washed through her. She locked the door and was just starting to pull her clothes off when a thought occurred to her. She finished pulling off her clothes and then sat at her small desk, flipping her laptop open as she did. She pulled up Facebook and in the search window typed Leticia Rodriguez. It came up with thousands of hits and Kristy realized belatedly how common a name that probably was. She plugged in a little more info and eventually found the profile she wanted. \n\nThere she was, smiling back at Kristy in a little inch square photo. Kristy felt another warm rush at how pretty the girl's smile made her look. \"She's adorable.\" Kristy whispered. She scrolled through the profile but it didn't appear that she really used it all that much. The posts were few and far between, mostly just re-posts of memes and a few photos of her with her friends. \n\n\"Probably mostly on Snapchat or something else.\" Kristy muttered to herself as she clicked.\n\nFinally, about six months back Kristy found something more interesting. A photo album called 'Vacation'. Clicked on it and saw a few photos of what looked like a family trip to Disney. She flipped through the photos of Leticia and what Kristy assumed was her various family members on rides, posing with characters and generally having fun. \n\nIt was the kind of vacation that Kristy hadn't been on since before her parents had died in a car crash when she was eight and she felt a momentary pang of jealousy. Her grandmother was a wonderful woman and had given Kristy everything she could growing up but that kind of vacation was simply beyond the older woman's financial means. Her grandmother had been a waitress for most of her life and her grandfather, who had died before Kristy had been born, had been a bus driver. Her savings, a small pension and social security checks kept a roof over their heads and food in the pantry but that was about it. When she had been growing up vacations were few and far between and when they did happen they tended to be weekend trips to something within driving distance.",
        "Shaking her head to clear the stray thoughts, Kristy went back to her computer and resumed stalking Leticia. One more spin of the scroll wheel and she felt her sex twitch. There was what she had been hoping for. She clicked on the thumbnail photo and a wicked little grin spread on her lips as a photo of Leticia in a bright orange bikini filled the screen. \n\nDear Goddess, she's gorgeous, Kristy thought. Curvy in all the right places with cute boobs, curvy hips and nice plump bottom. Not at all skinny, she was probably a bit heavier than was considered fashionable but to Kristy she looked perfect. \n\nKristy's hand moved between her thighs and she gasped in surprise at the power of the electric shock that the feathery contact on her sex shot through her body. With her other hand she flipped through the pictures, looking for more. A couple clicks later she found one of Leticia looking back over her shoulder, her fabulous, round ass on full display in the skimpy bathing suit. Kristy moaned as she imagined the feel of the girl's backside. The image in her mind became so real she could practically feel it, just the right mix of soft and firm as her hands glide over the skin giving a gentle squeeze. Leticia giving a little sigh as Kristy fondled her ass, hands gliding ever lower, down... deeper... \n\nTwo fingers slipped between the wet outer lips of her pussy as Kristy drove herself ever higher. In a surprisingly short span of time, far faster than usual, she felt her climax approaching. As bliss boiled up insider her she decided that she had to have this girl. She needed this girl. She would have this girl. \n\nSearing pleasure erupted in Kristy's center as a stunning climax took her. Her entire body bucked and shuddered with each surge of rapture. Thoughts of what she would do with Leticia filled mind as she came again. At the peak of her orgasm, she threw her head back and cried out \"Goddess, I need her!\" As soon as the word passed her lips, gleaming turquoise light seemed to flare around her for an instant before blinking out. \n\n<p align=\"center\">* * *</p>\n\nLeticia lay awake in her bed, restless, agitated, staring at the ceiling and trying to will herself to go back to sleep. Sighing, she looked over at the clock... three forty-eight. She sighed again and tried to slow her breathing and relax. She tied to tell her mind to stop but it was no use. Her mind was far too keyed up about... her. \n\nShe bit her lower lip as she felt a fresh surge of heat low down in her belly at the thought of something new and entirely unexpected. Coming right on the heels of the heat was a huge wave of embarrassment and following right after that was an absolutely smothering tidal wave of internal conflict and guilt. How could she be feeling this way? She wasn't like that. Everything she had ever been taught said that those kind of thoughts were wrong. How could she be feeling this? Why was she feeling this? It had certainly never happened before. Had it? \n\nShe rolled over again and tried to settle herself in more comfortably. A few minutes later she rolled over the other way and resettled herself. Three minutes after that she flipped her pillow over, rearranged her blankets and lay down on her back. Taking a deep breath she forced her mind onto something else and firmly told herself to stop thinking about the wet heat between her thighs. \n\nBut it was no use. Every train of thought she tired to distract herself with ultimately lead back to the one place she didn't... and did... want to go. The girl from the shop today... Kristy. \n\nAt the though of her name a fresh surge of arousal coursed through her mind and flowed through her body, eventually sinking down to her core and adding to the heat that was already simmering there. Despite her best intentions, she found herself wondering what kissing another girl would be like. Images blossomed in her mind as she began to lose her will to resist. She imagined the two of them sitting somewhere, side by side. Kristy would gently take her hand and pull her in closer. She could almost feel their bodies touching, the firm feel of another so close, separated only by a couple thin layers of cloth. Then Kristy would lean in, slowly, ever so slowly, until their lips touched... \n\nAlone in her bed, Leticia gasped quietly and squeezed her thighs together, savoring the increasing glow in her core. Her eyes closed as she slipped into the fantasy... \n\nHer lips were so smooth and soft. Gentle, patient, tender. Not at all like the clumsy, fumbling, hungry kissing of the few boys she had been with. No, this was different, being with a girl was going to different. She didn't know how she knew this but she was sure of it. \n\nKristy's hands came up and pulled them together, one hand at the back of her neck, one around her shoulders, gentle but firm. Kristy was taking the lead but she wasn't going too fast, she wasn't pushing, she was just guiding Leticia on...\n\nIn her bed, Leticia let another gasp, louder this time. Her heart began to race and sweat beaded on her brow. As her arousal grew, Leticia slipped deeper into her fantasy... \n\nKristy's hands glided lower and slowly she pulled up Leticia's shirt, slipping it off over her head, leaving her sitting only in her flimsy bra. Her nipples, stiff with her arousal, stood out making small tents in the thin material. Leticia though she should feel embarrassed at how exposed she was but she didn't, not with Kristy. She felt safe. \n\nSlowly, Kristy leaned back and took off her own shirt. Leticia groaned at the sight of her full breasts covered only by silky, black bra. Fingers trembling, Leticia reached out shyly to touch her but she hesitated, unsure of herself. With a smile, Kristy took her trembling hand and guided it to her chest. The feel of her is wonderful, the firm, smooth curve of her breast under her fingertips is amazing and Leticia desperately wants more. \n\nIn the real world, Leticia's gasps were turning to moans as the simmering heat in her slowly built to an inferno. She twisted about, trying desperately to resist the urge to slip her hand between her legs and touch herself. When her arm brushed against her nipple she moaned again at the fresh sensation that rippled through her, fanning her flames. \n\nLooking at her from under hooded lashes, Kristy smiled as she reached back and unclipped her own bra, releasing her beautiful breasts. Leticia's eyes greedily drank in the rounded curves of the heavy globes, the large, dark circles of her areole, the long, thick peaks of her nipples.\n\nLeticia trembled as Kristy leaned in and reached around to unclasp her bra as well. She felt the weight on her chest change as her breasts were freed from the restraining support of her bra, the fabric falling away, leaving her exposed. The feel of the cool air on her skin made her nipples even harder and she shivered with both the sensation and her own need. Kristy leaned into her again, closer this time, closer, until there was no longer anything between them, just skin on skin.\n\nLost in her fantasy, alone except for her wanton imagination, Leticia moaned and writhed. Her heart was hammering in her chest and wetness soaked her panties. It wasn't enough... she needed more. With a desperate need, she pushed her fantasy farther still... \n\nKristy slipped her hands down to the waistband of Leticia's leggings. With deliberate but agonizing lassitude, she hooked her thumbs under the elastic and started to slide them down over Leticia's hips. At first Leticia didn't even realize that Kristy was taking her panties as well but when she did, a fresh wave of arousal mixed with embarrassment surged through her. Another girl...oh God, this was another girl... this was wrong... so wrong... so... so... wonderful... so beautiful... so... right.  \n\nAlone in her small bed, the same bed that she had slept in since she was a little girl, Leticia burned. Pleasure she had never known, thick and hot, flowed in her veins, searing away the guilt over what she doing. Her body writhed, becoming hopelessly tangled in the sweat soaked sheets. \n\nKristy had finally disrobed them both and she was leaning in, closer, down... her lips wrapped around Leticia's nipple, taking the hard little pink nub into her mouth. Her lips were so soft, her tongue... oh God, her tongue! Soft and firm, warm and cool, smooth and rough, running over the sensitive skin and making her core throb and pulse with need. \n\nThen they were together, pulled in close by Kristy's strong arms. Their skin touching everywhere, as close as they could possibly be. She felt Kristy's breasts pressed into her belly as she continued to suckle, switching from one breast to the other, leaving a wet trail of kisses between whenever she switched. \n\nLeticia felt herself nearing a precipice and both feared and longed for it. A part of her mind was screaming at her that this was wrong, she shouldn't be doing this but another part, the stronger part wanted it... desperately, hungrily, needed it. \n\nLeticia felt Kristy's hand slipping down between them. Her fingers tracing over the soft curls on her mount, making her gasp and shudder with longing for something more. Then they slipped lower, gliding between her legs, gently caressing the soft, wet lips, parting them, slipping into the folds of Leticia's most intimate place.\n\nIn her bed, Leticia buried her face in her pillow, biting the fabric to muffle the moans and grunts that threatened to wake everyone in the house. \n\nKristy's fingers finally completed their journey and entered Leticia. They slid easily into her hot, wet center, filling her in a way she never before that second realized she wanted so badly.\n\nBrilliant blue turquoise light flashed in Leticia's mind as blinding rapture erupted in her core, flooding through her entire body in an all consuming flood. She cried out into her pillow as the most powerful orgasm she had ever experience crashed into her. It rolled through her like a tsunami, clearing away everything in it's path, leaving nothing inside her but a vast open sea filled with rolling waves of pure, hot, liquid, sapphic bliss.\n\nAfter some time Leticia slowly came back to the real world. She groaned as she rolled over and opened her eyes. A delicious afterglow was simmering in every corner of her body and she relished how her core seemed to still pulse in sympathy with every heartbeat. Her eyes slipped open and she was a little surprised that the light in her room seemed to be light blue. Her eyes narrowed in confusion when she realized that the light appeared to be somehow coming from her. Was she...glowing? \n\nShe closed her eyes, shook her head and opened them again, wondering if perhaps it was still part of her fantasy. When she looked this time, the turquoise blue glow was gone and her room was dark. She blinked a few times and took a deep breath. Nothing, just her mind playing tricks on her. She brushed the though away and sank back into her tangled sheets. After only a few minutes she was fast asleep as sapphic fantasies, new, forbidden and wonderful, filled her dreams. \n\n<p align=\"center\">* * *</p>\n\nPart Four ~ A little tweak here, a little tweak there...\n\nDuring the course of the following days Kristy noticed a few new things about herself.\n\nThe first and most obvious was the tattoo that had somehow appeared on the inside of her left wrist. It was about four inches long and was done in a shade of turquoise blue that was so brilliant it almost looked to be glowing from within. At first glance it appeared to be noting more than an intricate, interlocking geometric design. But upon closer inspection, Kristy realized that it was actually a highly stylized depiction of two bodies tangled in a passionate embrace, one figure facing up, the other down. \n\nWhen she first recognized what the tattoo actually was she felt a shock of embarrassment jolt through her entire body, making her cheeks and ears glow. Once the shock wore off, she immediately rushed to the bathroom and tried to wash the image away, scrubbing at it until her skin was red. When that didn't work she even tried scraping it off but that only hurt more and made her skin raw as well. Eventually she gave up and and sat heavily on the bathroom floor, staring at the image in defeat. The more she looked at it the more she thought the two figures looked distinctly female. Even though they were really nothing more than a few lines, there was a curve and flow to them that was, at least to Kristy's eyes, distinctly feminine. Eventually she calmed down and started to see that it would actually be fairly difficult for someone else to tell what the image really was. At least with only a cursory glance. Her knowledge of who had placed the tattoo there likely colored her perception of what it depicted whereas some person off the street probably wouldn't automatically start thinking along those lines. As least that was what she hoped. \n\nShe didn't know for certain yet, but she strongly suspected that the symbol was the sigil of the Goddess Kazorra, her new Mistress. This guess was bolstered when she found a silver necklace around her neck this morning when she awoke. The same sigil of intertwined beings rendered in a gleaming silver had been resting warmly between her breasts. As she ran her finger over the smooth curves of the forms she noticed that the metal seemed to be glowing faintly from within, the same turquoise blue glow as her tattoo and the light that had flashed in her eyes during her... uh, session, last night. \n\n\"This must be your symbol.\" She ran a fingertip over the amulet. Setting it back between her breasts she looked at the tattoo on her wrist. \"And is this your preferred color, my Mistress?\" She quietly asked the empty room, not really expecting a response. She was more than a little surprised when the tattoo flared more brightly form a moment before fading back to it's original glow. The flare was accompanied by a tingling pleasure that felt surprisingly like soft lips kissing her wrist. \n\nFingers trembling a little she whispered, \"Yes, Mistress.\" She lightly traced the tattoo with her fingers. It was the symbol of her new goddess, the Mark of Kazorra. \n\nKristy was marked. She was a Priestess of Kazorra. \n\nIt felt odd to think of herself in those terms but she supposed it was true now.\n\nShe grabbed her clothes and headed to the bathroom to shower. Flipping on the light and water, she stripped off her nightgown and turned to look at herself in the mirror. \n\nThis was the other change that had occurred. \n\nThe changes had been subtle the first day after she had pledged herself to the Goddess. The second day they had been more pronounced and as a few more days slid by they were now down right dramatic. So dramatic that she no longer even looked like the woman she had been, either before the pregnancy or after.\n\nBefore getting pregnant, she had been slim and somewhat angular. With a thin face, small breasts, a skinny waist and slim hips. Post pregnancy she had been heavier, softer and more generally rounded but still not really that curvy. But now... yikes. \n\nHer waist was far more shapely than it had been just a few days before or at any point in her life. The paunch of pregnancy weight that she had never been able to get rid of was now gone, replaced with a smooth, flat stomach and slender waist that flared out to wide, curvy hips an a full backside. Twisting around a little she was amazed to see how round and pronounced her ass now was. \n\nThere were changes up top as well. Her breasts before her pregnancy had been fairly small and pert. After her child and breastfeeding they had become full mounds on her chest. Not huge but definitely a handfull. But now, well, she chuckled nervously to herself as she brought her hand up to cup the heavy globes on her chest. Her hands barely were able to wrap around the bottoms of her breasts as she lifted their weight. Now, well, she was far more than just a handfull. As she moved she let her hands drop and felt the substantial weight shift and move on her chest as she twisted to view her new shape. \n\n\"I look like a stripper.\" She said to the empty room. \"Or maybe a porn star.\" She giggled nervously at the idea and the changes in herself. \n\nStudying herself for a few moments, she decided that no, she didn't really look like a porn star. At least not the silicon overdose kind. Her new boobs were certainly big, but they weren't ridiculously so. She could easily pass for just a well endowed woman. She was also glad to see that her new boobs looked natural as well, not the puffed up balloon look of some implants. \n\nSomething else caught her eye as she studied herself a little more. Leaning into the mirror she grabbed a lock of her hair and held it up. Her hair looked and even felt better. Softer, fuller and somehow more lustrous. She shook her head and watched mesmerized as the light brown mass shifted and flowed like water, beautifully silky and smooth. \"It looks like a shampoo commercial.\" She breathed, knowing that her hair had never, ever, looked or acted like this. Not even right after a trip to the salon. \n\nFeeling emboldened by the changes, she took a step back and struck a pose, admiring herself as a whole, not just studying individual pieces. She felt a little smirk spread on her lips. \"Goddess, I'm gorgeous.\" \n\nA disembodied chuckle floated through the air. \"You were always gorgeous, my love.\" The voice of the Goddess came form nowhere and everywhere, in her thoughts and also in the room. \"I just thought to give my favorite new Priestess a few... oh, what was that phrase I just heard... job perks?\" Her voice became more serious, \"But don't ever for a moment think that you were not beautiful before. You were lovely. I wouldn't have chosen you if you weren't because, let's face it, I AM the Goddess of Lust after all. I just decided that the new High Priestess of Lust should personify, well...\" she chuckled again, the musical sound it sending ripples of bliss though Kristy's soul, \"...lust.\"\n\n\"But, you did this? How can you make these changes?\"\n\nThere was another chuckle. \"I'm a Goddess, remember?\" The mirth in her voice was apparent but when she continued her voice sobered slightly, \"But in truth, these changes took far more out of me than they should have. My power is at the lowest ebb I have ever known. Many eons ago when I was at the height of my power I could have made those same changes in a thousand women all at the same instant with barely a thought. Now, a few changes to a single woman takes days and leaves me exhausted.\"  There was an audible sigh then the Goddess continued, \"This is why you must find me more followers. You must help me regain my place in the Universe, my love. This is your charge, your duty, your new purpose for being. To aid and serve me.\"\n\nKristy felt an electric tingle tracing over her cheek, down the side of her neck, over her breasts, down her belly, finally stopping at her sex. The light, invisible touch seemed to toy with her, tracing over her mount sending ripples of searing bliss into her, making her gasp with delight. She pictured the invisible hand of the Goddess, gently caressing her new follower, showing her favor in the best way possible, with pleasure. \"Goddess...\" she groaned. \n\nThe touch slipped lower, over her outer folds. The bliss brought by even this faint caress of her Goddess was exquisite. \"Yesssss...\" Kristy hissed as she dropped to her knees, allowing her thighs to spread in the process. As if invited, the invisible touch slid effortlessly inside Kristy in a way nothing else could. She felt the tingling bliss enter every corner of her sex almost instantly, filling her completely and stimulating every nerve simultaneously.",
        "A rapturous cry was torn from her throat as her entire body went taught at the unexpected new feeling. The inarticulate noise almost immediately melted into a long, low moan as her sex convulsed into a whole series of fantastically powerful orgasms. \n\n\"Goddess...\" Kristy managed to moan as another climax ripped through her body. In response, the tattoo on her arm pulsed with a faint turquoise light in time with her heartbeat. \n\n<p align=\"center\">* * *</p>\n\nSome time later Kristy lay on the floor enjoying the post orgasmic heat that still hummed through her muscles. She glanced down and found she rather enjoyed the view of her new boobs and the tempting valley they created. Looking over the luscious mounds, a question that had been roaming around in the back of her mind came back to the surface. She wondered if it was acceptable to just call out to the Goddess and ask questions of her or if that was somehow inappropriate. The Goddess had so far been very tolerant of her questions and had repeatedly said that Kristy had special privileges that no other mortal had. She decided to try. \n\n\"Goddess?\" She called to the empty room. \n\nThe reply came back instantly, \"Yes, my love?\" \n\nKristy swallowed then said, \"May I ask a question?\" \n\n\"Of course.\"\n\nKristy hesitated then took the plunge, \"The other night when we... uh, well, did whatever that was, when I changed into... uh, like, you... you know with all the arms and the...\" She gestured at her chest with a little circling motion, \"And this, what was that?\"\n\n\"The Bonding? That is how you join with me.\"\n\n\"Yes, but what about all the arms and the...\" She gestured at her chest again, \"You know... the boobs. Was that real? It seems more like a dream or something.\" \n\nThe Goddess chuckled, \"Ah, when you assumed my form? Yes, that was quite real, I assure you. Did you like it?\"\n\n\"I'm not sure. I don't really remember it so well. It's all kind of hazy.\" She paused, trying to recall, \"But I think, at least the parts I remember, it was pretty amazing.\"\n\n\"A mortal takes on the form of a goddess and she doesn't even remember it.\" Kazorra said with a bit of snark in her voice. Then she laughed and continued, \"The Bonding always takes a lot out of mortals and even me, especially if it is their first time. When I regain some more of my power we will try it again and I can assure you that the next time you will remember everything, my love.\"\n\nA ripple of anticipation went through Kristy and she shivered with need. \"Yes Mistress.\" \n\n\"And also, my love, as you build your own power, you may eventually be able to make that transformation on your own. In eons past, some of my most powerful Priestesses were able to do that, especially after several Bondings with me.\"\n\nThe idea sent a fresh shock running up Kristy spine and a thrill of something close to anticipation flowed into her veins. She didn't totally remember the feel of six hands on six breasts but she hadn't fully forgotten it either. \"I can change into that? Whenever I want?\" \n\nKazorra laughed, \"Not yet, my love, but likely someday. We will see. We will see...\"\n\n<p align=\"center\">* * *</p>\n\nThe front door closed with a creak and a thump as the customer left. Kristy sagged back onto the stool and resumed entering stock numbers into the computer. With the owner, Artie, still gone she was finding it increasingly difficult to keep up with both dealing with the customers and keeping the inventory straight and orderly. Normally she handled all the inventory and Artie and her split the counter work with the customers. With him out for at least another week, Kristy was beginning to dread what state the stock room was going to be in by the time he got back. Already there were several boxes lining the isles that she simply hadn't had time to get too yet. She had begun to think that she might have to start staying late to try and catch back up. She wasn't very excited about the idea but saw no real alternative. \n\nShe looked at her phone sitting on the counter next to the computer and noticed it was almost one thirty in the afternoon. Her lips pressed together in irritation as she realized she hadn't even eaten lunch yet. She also wondered why she hadn't had another problem yet. Walking to the door she flipped the lock and hug the \"Back in 20 minutes\" sign up. Walking towards the small bathroom, she grabbed her backpack on the way. \n\nOne of the joys of being a nursing, working mother was that her boobs didn't care if she was at home with her baby or at work with a bunch of sweaty plumbers. Her boobs made milk all the same. So if she didn't pump periodically, they would become full, get sore and eventually start to leak. A sizable percentage of the clientele that came in the store were already a bunch of sexist pigs so she didn't even want to imagine the oh-so-whitty comments they would come up with if they ever saw her with big wet spots on the tips of her boobs. \n\nShe flipped the seat down and sat, pulling open her backpack as she did. She pulled out the collection of cones, hoses and bottles and got it all hooked up to the small battery powered pump. Pulling off her tee shirt she set it carefully on the edge of the sink, making sure it wasn't going to fall onto the dingy floor.\n\nBeing one of the only women who had probably ever used the bathroom, she had found it to be in a deplorable state when she had first started working here. In fact on her first day she had refused to even use the toilet and had instead walked across the street to the coffee shop. Later that afternoon she taken several hours to clean every corner of the small room with the strongest collection of cleaning products Artie could come up with. The exposure to the fumes from the cleaners had left her a little light-headed and probably taken about five years off her life but she had deemed it worthwhile. While the little room would still never be what she would consider pleasant, it was at least now presentable and didn't give her the absolute heebie-jeebies every time she walked in. \n\nWith quick, practiced movements she fitted bottles to the cones, strapped them to her breasts, hooked up all the tubes, and turned on the pump. The little machine started making it's quiet whirring, hissing noises and she felt the familiar rhythmic tugging on her nipples as the vacuum pulled her into the plastic cones and started drawing the milk out. The milk came slowly at first but steadily increased in volume as she relaxed and started to let down. \n\nAfter a short while Kristy began to realize something was different this time. Normally the mechanical pull of the pump on her nipples was, while not entire unpleasant, also not something that she actually looked forward too. The cones and straps chaffed a little and cold, steady mechanical pull wasn't particularly enjoyable. \n\nThis time however, something new was happening. As the pump whirred away, Kristy became increasingly aware of a heat building in her chest and also between her thighs. Each mechanical pull on her nipples was sending ripples of pleasure washing through her breasts and down into the rest of her body. After only a couple minutes she was panting with confused need. Why was this happening now? It had never felt like this before. \n\nShe looked down and was a little shocked to see that the first bottles were already almost full. Looking closer she saw that she was flowing far more that usual, each pull of the pump sending a spurt of white liquid into the bottle. With trembling fingers,she flipped off the pump and changed out the bottles. She typically left six in the bag though she rarely even used four in a typical day. She had to stand and lean over the sink as she fumbled with the second bottles because even though the pump was off her nipples continued to drip and she didn't want to make a mess on the floor or her clothes. \n\n\"I guess this is what I get for waiting too long between pumpings.\" She mumbled to herself as she got the second bottles in place. She reached for the switch on the pump but hesitated just as her finger touched it, wondering if she should just leave it off. She was a little disturbed by how good the pump suddenly felt and what it was doing to her. Was it indeed just because she had waited too long or was is because of... she paused, looking at the tattoo of Kazorra's Sigil on her forearm...because of something else. Glancing up at her reflection in the mirror she could see the milk dripping into the bottles and decided that she didn't really have a choice. She had to empty herself out some more or she would just continue to leak. She flipped the switch. \n\nAs soon as the pump took it's first pull Kristy gasped as she felt a flood of milk spurt from her. The tingling tightness she always felt while nursing was now magnified seemingly a hundred fold. A groan escaped her lips and she was glad she was the only person in the building at the moment. The thin panel door of the restroom was unlikely to contain any of the noises she was starting to make. \n\nAfter just a couple minutes she was moaning and gasping almost constantly as the pleasure continued to build in her chest, radiating out through her whole body before plunging down into her sex. Without her even thinking about it, Kristy's hand had started toying with the waistband of her jeans and was just beginning to slip under when she finally realized what she was doing. With a feeble effort, she pulled the hand back and firmly gripped the sink with both hands. I'm not masturbating in the bathroom at work! she told herself feverishly but even as she said it she knew she was already close to losing the battle with her body. Even without touching herself, her hips were rocking on their own and she could feel her soft panties being pushed into the folds of her pussy by the seam of her jeans as she moved. She moaned again. \n\nIn a surprisingly short period of time, Kristy realized that the second bottles were now full as well. Trembling with need, she unscrewed the full bottles without switching off the pump. Even that slight movement of the plastic cones on her chest sent shivers of bliss through her body and she groaned. Why does this feel so good all of a sudden? It's never like this! She leaned over the sink as she fumbled for the last two empty bottles, letting the milk from her breasts just drip and drizzle into the sink. As she did so she bumped her pussy against the hard corner of the porcelain sink, pulling a startled bark from her throat as the contact sent a shockwave of sensation from her clit straight up her spine to her chest. \n\nLosing the last vestige of self control, she gave over to her need completely and started to grind herself against the corner of the sink in earnest. Hoping that the store really was empty, she moaned cried out with every movement of her hips as she drove herself closer and closer to release. \n\nLooking up she saw her pleasure wracked face in the mirror and was immediately struck by how deliciously erotic she looked. Looking into the reflection of her own eyes as she neared her peak, she noted in a surprisingly detached way that her eyes were glowing with the same faint, blue turquoise glow that she was now becoming accustomed to. With that thought, she let out one final cry and fell into rapture. \n\nSome time later Kristy came back to herself and looked around. She was seated on the floor, of the restroom, leaning against the sink. The whirring sound the the pump caught her attention and she looked down to realize that she was still hooked up to the running pump. She had no idea how long she had been lying there in her orgasmic stupor but it had apparently been a while. She must have been leaking milk for some time because she was now completely soaked with it. In fact she was surrounded by quite a puddle of it on the grimy floor. \n\n\"Fuck.\" She muttered and hurriedly switched off the machine. Tearing a hand full of paper towels off the roll next to the sink, she started wiping up the mess. Yanking off the cones and their straps she noted that her breasts while not actually leaking, at the moment, were still quite full. \"What the hell. When did I turn into a fucking cow?\" \n\nAs she cleaned up the mess she surveyed her hopelessly soggy clothes. She was a total mess and it was starting to dry and get sticky. \"Yuck.\" The thought occurred to her that this must be the work of the Goddess, but why? Why would her Mistress want her be so full? What was the point? Just to be kinky? \n\nLooking at her swollen tits in the mirror and at the single creamy white drop of milk hanging off one of her large, dark nipples she supposed that must be the answer. Pleasure, lust, debauchery. A corner of Kristy's lips quirked up in an impish smile. Yes, that was it. To the empty room she whispered, \"Was it good for you too, Mistress?\" \n\nIn response, Kristy saw her eyes flash turquoise blue as an invisible... something... slipped between her thighs and easily entered her soaking wet sex. Kristy cried out at the intimate invasion even as she dimly realized that she still had her pants on. The presence inside her seemed to swell in size until it filled her completely, reaching every secret corner of her center. Within moments Kristy was again moaning uncontrollably and rapidly approaching another orgasm. \n\nMilk once more dripped from her nipples but she made no attempt to control it now. Her body only wanted one thing and that was release. \"Ungh...\" She groaned.\n\nThe laughter of her Mistress filled the room and Kristy's soul. \"Of course it was good for me, my love. You are bonded to me. If it was as good for you, it was for me.\"\n\nKristy screamed as she again went over the precipice while the turquoise light flared in her eyes. \n\n<p align=\"center\">* * *</p>\n\nLeticia sat in the parking lot of the plumbing supply store and noted with ill grace that the 'Back in 20 Minutes' sign appeared to be more than a little optimistic. She had pulled into the parking lot almost and hour ago and saw the sign. She figured it was as good a time as any to get something to eat and went across the street to the coffee shop for a bagel. Still seeing no life at the store after she got her breakfast she decided she may as well go fill up the truck with gas. When she returned again door was still locked and the 'back soon' sign was still up. She shut off the truck and walked over to the door to see if maybe someone had just forgotten to remove the sign. A tug on the door revealed it was indeed locked. The lights were on inside so she tried looking through the glass to see if there were any signs of life. Finding none, she returned to the truck and turned on the radio, debating if she should wait for a little longer or just leave. \n\nWhen her dad had told her to go pick up the parts, her immediate thought that Kristy would be there. This sent a whole host of confusing ideas and images floating through her mind. A part of her really wanted to see Kristy again while another part was more than a little bit terrified at that prospect. She had been texting Kristy for days now and with every message that went back and for the she felt that her connection with her was deepening. \n\nIt wasn't the friendship, or at least blossoming friendship, that worried Leticia, it was the other part of her feelings that scared her. The part that she wasn't supposed to be feeling for another woman... the physical attraction part. \n\nNever before in her life had she ever experienced feelings like this towards a member of her own sex and she was confused and frightened by what it could mean. At first she had tried to ignore the feelings and then when that had failed she had tried to suppress them but as the days had passed and she talked... ok, mostly texted, with Kristy the feelings became undeniable. She had spent more time than she cared to admit even to herself over the last few days stalking Kristy on facebook and instagram. Finding out who she was, what she liked to do, who her friends were and most especially, just looking at pictures of her. \n\nBut the most worrying part of all wasn't the burgeoning infatuation or the cyber stalking, it was the physical arousal that just the thought of Kristy seemed to be capable of igniting deep in her. She had lost track of the number of times she had masturbated herself to orgasm over the last few days with lurid fantasies about Kristy at the forefront of her mind.\n\nOnce she had climaxed and was slowly coming down, savoring her afterglow, conflicting thoughts would start invading, nibbling at the edges of her bliss. Thoughts about what her family told her about same-sex relationships, about what her church taught her, about what she herself had always believed. She thought that based on what she had always been taught that this should all feel so wrong but the strange part was, it didn't. That was what confused her the most. This should feel wrong, but it felt... right. \n\nHer introspection was interrupted by a gray minivan that had seen better days entering the parking lot and pulling into a spot at the corner of the building. A couple seconds later the drivers door opened and Kristy stepped out. \n\nLeticia gasped as her stomach went liquid... \"God, she's beautiful.\" she whispered to no one. Had she looked like that the other day? How had she not noticed? The face, the hair, the body... Leticia couldn't stop staring. \n\nKristy was approaching the door to the shop when she apparently noticed Leticia's truck and waved as she started walking over. \n\n\"Hey!\" Kristy smiled as Leticia rolled the window down. \"Sorry, were you waiting long? I had to run home for a bit. I, uh, spilled something on myself and needed a change of clothes.\"\n\nFor along, awkward moment Leticia couldn't seem to remember how to speak. She found herself staring deep into Kristy's incredibly bright, blue eyes. They were such a brilliant shade of turquoise that they almost appeared to be glowing from within. But hadn't they been brown the other day? Leticia felt confused for a few seconds as she tried to recall. \n\nNot getting a reply, Kristy added, \"I assume you're here to pick something up?\" \n\nLeticia's mind snapped back to reality as she put the question of Kristy's amazing eyes aside. \"Oh! Uh, yeah. Sorry, I just got... uh... nothing. Yeah, my dad wanted a few things so he sent... uh...me... he sent me.\" Leticia stumbled and stammered, feeling her cheeks flush with embarrassment at her own ramblings. \n\n\"Well, lets go inside and set you up.\" Kristy said and headed for the door. \n\nA little while later Leticia had her order and was ready to go but was finding that she was reluctant to leave. She really liked spending time with Kristy and wanted it to last longer. While she was distracted she lost track of the conversation and was surprised when she realized Kristy was staring at her expectantly. \n\n\"What? Sorry, I got lost in space for a second.\" She said quickly.\n\n\"I said what are you doing Friday afternoon? I need to do some shopping, want to come along? Maybe we can go grab something to eat as well.\" \n\nLeticia felt her stomach flip. This was exactly what she had been both dreading and at the same time hoping for. She wanted to scream 'No!' and 'Yes!' at the same time but instead played it as cool as she could. Feeling slightly dizzy with nervous anxiety, she smiled and said, \"Sure, sounds like fun.\" \n\n<p align=\"center\">* * *</p>\n\nPart Five ~ A first time for everything\n\nKristy smiled to herself as she strolled along through the mall with Leticia beside her. This whole evening was going even better than she had hoped. The pretty young woman strolling along next to her was very clearly interested in her and doing a very poor job of trying to play it cool and hide her interest. What she wasn't sure of was if the girls restraint was just because that was her nature or maybe if it was because she was conflicted about her new feelings. ",
        "Kristy now knew that the turquoise blue glow she had seen on several occasions was a telltale of Kazorra's influence, both on herself and on others. She now knew that was what the Goddess had meant when she had spoken about how Kristy would make others want her. What she still wasn't sure about was how many of these things were her doing and how many were the Goddess doing them on her behalf. If it was the Goddess doing them then she guessed there wasn't a whole lot she could do to control it, but if it was she herself doing it then she figured she better learn to control it pretty fast before she did something stupid or maybe even dangerous. \n\nTruthfully, Kristy didn't even know yet if Leticia was really that interested in her yet or if it was just some kind of infatuation, like a crush. A divine crush? Was that even a thing? And if it was the magic, was it permanent or temporary? \n\nThen again, it was also completely possible she was just misreading the whole thing and Leticia wasn't even interested in her at all. Maybe that blue glow was something else?\n\nOut of the corner of her eye she saw Leticia glance over at her for about the thousandth time and she had to suppress a grin. She supposed she could be wrong, but she doubted it. \n\nIn her experience, limited as it may have been by her relatively young age, guys were typically so easy to read. Women, by contrast, were a bit more complicated. Added to that was the fact that only a percentage of women were lesbians or at least partially interested in their own sex and the whole thing became that much more challenging.\n\nThe word lesbian floated through her mind and Kristy felt a sudden moment of confusion. Was that actually what she was? A lesbian? How did that happen anyway? She wasn't always a lesbian, was she? Was she?\n\nThe idea was oddly confusing in a way that Kristy knew it shouldn't be, but it was a feeling that was also becoming familiar to her. She had experienced this same confusion several times over the last few weeks whenever she thought about her past sexuality. Wouldn't she know if she had always been lesbian? Why did she feel that the answer was both yes and no? How could that be? And why had she never had this weird mental conflict before?\n\nOnce again, she tried to think back over the years. Didn't she fantasize about her friends when growing up? Yes...no? Didn't she have a one night stand with some girl in college? A girlfriend? Or were they guys? She couldn't recall and that realization was both maddening and frightening.\n\nWhy couldn't she remember? She concentrated on the fuzzy memories but the more she thought about it the more they blurred into a confused, muddied mess. She also found that the more confused the memories became the more anxious and uncomfortable thinking about them made her feel. \n\nAbruptly, the image of her daughter slipped into her thoughts and with it a sudden realization hit her. Of course she had been with guys before, she got pregnant. With that realization some of the fog cleared. Yes, she had been with guys before so she hadn't always been a lesbian. But... now she was. So she had changed... somehow. \n\n\"Why am I so confused?\" Kristy mumbled to herself. \n\nShe glanced to her side as they were passing a high-end women's clothing store and there was a sales woman working in the window, setting up a new display. The woman was quite beautiful, probably about 30ish and dressed very stylishly with a well fitted, tight black skirt and white blouse that highlighted her figure well. Kristy felt an instant flare desire in her core as she watched the woman's well packaged backside sway for the few seconds as they walked past. \n\nWell, she thought with bit of a self deprecating a smirk, confused memories aside, whatever she was or wasn't before, whatever had or hadn't changed, she was sure that girls were now the only kind of thought she had. \n\n\"What?\" Leticia asked beside her as they walked on. \n\n\"Huh?\" Kristy said, snapping back out of her thoughts. She looked over at the young woman walking beside her, finding as she looked into her brown eyes behind the dark frames she really like the idea of a girl in glasses. She was adorable. \n\nLeticia was looking at her quizzically. \"Did you say something?\"\n\n\"Oh, sorry, just a stray thought.\" She pointed up ahead, \"So, you want to get something to eat?\" \n\nTen minutes later they were seated at a booth looking over the menus and making small talk when their waitress came up. \n\n\"Hi, how are you two doing tonight?\" The waitress said leaning over to fill their water glasses. \n\nAs she poured the water, Kristy gave the waitress a quick looking over. She was probably about Kristy's age, slim and tallish with long hair dyed almost black so that it contrasted dramatically with her pale blue eyes. She was pretty and Kristy noted with some small note of jealousy that her makeup was absolutely flawless in a way that she herself had never been able to master.\n\n\"We're doing quite well tonight, thank you. How are you?\" Kristy asked. \n\nThe waitress gave a little chuckle. \"Other than the fact that my feet are killing me, not bad. My shift is done in a little over an hour and I can't wait to get these shoes off.\"\n\n\"Oh, I know that feeling well. Get home, kick off the shoes and whip off the bra.\" Kristy laughed, enjoying the little tingle she got from her slightly naughty talk. \n\nThe waitress laughed as well. \"Oh, yeah, that too!\" She set down the pitcher of water, \"So, can I get you anything to drink besides water?\" \n\n\"Just a Coke for me.\" Kristy said, looking at the waitresses name tag which said Angelica. \n\nLeticia looked at the waitress with a small smile as she slid her now filled water out of the way. \"Do you have lemonade?\" \n\n\"Sure do, fresh squeezed every day.\" Angelica said with a broad smile that showed off her perfectly painted lips and dazzling white teeth. \n\n\"Uh, that sounds great.\" Leticia said after a moments hesitation. \n\nKristy looked over at her carefully and noted that the younger woman seemed to be staring at the waitress just a bit too intently and blushing ever so slightly. Could it be that she was a bit taken with their lovely waitress? \n\nSo maybe its not just me she's interested in? Kristy thought.\n\nAgain she found herself replaying in her head their text conversations of the last few days. Kristy had been slowly probing Leticia to see if she typically had any interest in girls at all. It had been tricky and she had to be careful how she phrased things, coming at them obliquely or disguising them as jokes but she had managed to get some answers, a little at a time. \n\nShe had slowly gleaned that Leticia had several boyfriends over the years but that she had only gone all the way with one and had almost instantly regretted it since the guy had gone around bragging about it then next day. \n\nBut never in any of their texting or small talk had Leticia ever talked about a girlfriend or even indicated she had any interest in girls. \n\nUntil I came along that is, Kristy thought with a little smirk as she recalled the faint flare of turquoise blue light that she had seen in Leticia's eyes. The influence of the Goddess or divine might or maybe just straight up magic had given the girl a crush on Kristy. \n\nBut maybe those new sapphic ideas weren't just for Kristy? Had the power of the Goddess completely changed Leticia's sexuality? Had she made into a lesbian? Was that possible? \n\nProbably, Kristy decided. Kazorra was Goddess after all. \n\n\"I'll be back in a minute with your drinks.\" The waitress said and left. \n\nAs the waitress walked away Kristy followed Leticia's dark eyes and saw clearly that the girl watched the other woman's nicely shaped bottom swaying off down the isle. Kristy smirked again as she felt a whole new flare of heat in her core. Never before would she have thought that she would get turned on by watching the girl she was pursuing watching another girl. And yet here she was, getting wet thinking about Leticia thinking about Angelica, a waitress they had only met a few seconds ago. Another flare of heat surged in her core and she felt that same saucy, slightly naughty boldness she had experienced when her and Leticia first met welling up inside her. \n\n\"Like what you see?\" Kristy whispered slyly. \n\n\"What?\" Leticia blurted, snapping her head back around and looking at Kristy, her eyes suddenly wide. \n\n\"She is pretty hot.\" \n\n\"I... uh... I... I don't know what you... uh, mean.\" Leticia stammered quietly, looking down at the table and avoiding Kristy's eyes. Her face heated to a shade of red that was almost incandescent and even her ears turned red. \"I wasn't...\" \n\n\"Looking at her ass?\" Said Kristy with one raised eyebrow. \n\nLeticia didn't say anything but shrugged nervously. \n\nKristy savored the flaring heat in her center even as a distant part of her mind wondered why she was enjoying this. Was this something she would have enjoyed before? She didn't really think so. \n\n\"There's nothing wrong with appreciating the view. She does look pretty amazing, after all. It would be better if she didn't have that little apron on so we could see more, but then again, it just sort of tantalizes, doesn't it?\"\n\n\"I guess... yeah.\" Leticia mumbled, still not looking up.\n\nKristy sensed that she may be pushing too hard and wondered if she might be assuming too much or maybe going too fast for the girl. She supposed now was as good a time as any to take the final plunge. Softening her tone she asked gently, \"You do like girls, right? I wasn't wrong was I?\"\n\nLeticia looked up with wide startled eyes. \"No!\" She practically yelled. Then more quietly stammered, \"I... I mean I'm not... I mean... I... \" She broke off and looked down again. \"I mean... I don't... I don't know?\" She said, then shrugged again. Taking a deep breath she whispered, \"Yeah... I guess... kinda.\" \n\nOn impulse, Kristy got up and moved to sit next to Leticia, sliding into the booth right up to her. At first Leticia stiffened and recoiled from Kristy. But when Kristy only took her hand in hers and held it gently, Leticia sagged and seemed to relax just a bit. \n\n\"You know it's ok to have these feelings. Lots of people do and there is nothing wrong with it.\" \n\n\"I guess. It's just, well, I've never felt like... you know... like...\" Leticia broke off and looked down again. With her free hand she began to fidget with a stray thread on the cuff of her shirt sleeve. After a few long moments she looked up again and asked nervously, \"So you feel this way too? You're like... you know... into... girls?\" The last part came out as barely a whisper. \"I thought you were but I wasn't sure.\" \n\nKristy smiled, \"Yeah, totally.\" She squeezed Leticia's hand. \"I mean not always. I've been with guys before. I mean heck, I have a kid, right?\" She laughed, hiding the fact that she still wasn't really sure about her past. \"So I must have liked one of them at least a little, right?\" \n\nLeticia gave a shy smile. \"Yeah, I guess so. But now you don't?\" \n\nKristy paused for an instant considering her feelings but she didn't have to consider long. \"No, not any more. My feelings have changed I guess. Looking back, I think I must have always thought like this and I was just suppressing it because I thought, well, you know, girls should like boys, that's what everyone else did so that's what I should do to. That we're supposed to do, right?\" She gave Leticia a lopsided smile, \"But not any more. This is who I am.\"\n\nLeticia seemed to consider that then looked up into Kristy's eyes, \"So you're into girls... like me?\" \n\nKristy knew what she was asking but wanted to toy with her bit because she liked the way she blushed and fidgeted. \"You mean am I into girls like you are into girls?\" She smirked, \"Or do you mean am I into a specific girl, meaning you?\" She leaned in closer feeling heat flare in her core and rushing up her spine in a tingling wave. \n\nLeticia's eyes went wide as Kristy leaned in but she didn't move away. She tilted her head slightly up as her lips parted just a tiny bit. \n\n\"Because the answer to both, is yes.\" Kristy closed the last few inches and their lips met.\n\nAt the first contact, Leticia went rigid as a statue. She didn't try to pull away but she didn't lean in closer either. She just sat there and let Kristy kiss her without any outward sign or reaction. After a couple seconds however, her lips started moving ever so slightly and after a few more seconds more she dissolved into the kiss and began timidly returning Kristy's affection. Her lips parted allowing their tongues to dance as they moved ever closer together. Leticia was just starting to make small sighing noises when there was a sound of someone clearing their throat a couple feet away. \n\nKristy abruptly broke away and turned to look up at Angelica smirking down at them as she placed their drinks on the table. \"Well, I guess it's a good thing the hostess gave you a corner booth where no one can really see you. Are you ready to order or should I give you a few more minutes to finish up?\" \n\nKristy smiled up at her feeling a whole lot more brazen than she thought she should under the circumstance. She was just about to make a snarky reply when she realized something new. She could feel... something, coming from the waitress. Something she recognized, something she was getting better at experiencing herself... lust. She didn't know exactly how she felt it or how she knew what it was but she did. She was actually feeling this woman's lust for what she had just seen them doing. She could feel it like waves of energy, hot and... spicy? It wasn't exactly like she could taste it or even smell it but somehow she could just sense it. Warm, tangy and a little sharp, pouring off the taller woman looking down at her. \n\nWatching her and Leticia making out had turned their waitress on. \n\nInto the pause Leticia said shyly, \"Um, sorry...we were just...\" \n\nGetting back on balance, Kristy interjected, \"Her lips were just cold so I was warming her up a bit. That's all.\" \n\n\"Ah, of course.\" Angelica said, her smirk getting wider as one perfect eyebrow quirked up. \"Very nice of you to take care of her like that.\"\n\n\"I kiss because I care.\" Kristy quipped, feeling the heat in her core burning even brighter now. As before the heat seemed to be starting in her sex and running right up to her mouth, making her far bolder and saucier than she ever had been normally. \"Let me know if you're ever cold. I could help you out too.\" \n\nAt her words, Kristy felt a flare of heat surge from the waitress. The wave was so strong that for an instant Kristy almost moaned. As she looked she noted that she could actually see a faint turquoise blue halo around the woman before her. \n\nThe realization struck Kristy's mind as the pieces fell into place. She was a Priestess of the Goddess of Lust. The Goddess required sacrifices and what she wanted was lust. Naturally it would be the duty of her Priestess to... well, honor the goddess. She supposed that in order to worship the Goddess of Lust properly the priestess would need to be able to somehow sense that lust. \n\nAngelica paused for a second, pulling her lower lip through her teeth, apparently a bit startled by Kristy's forthright manner. Within a moment however, she was back on keel and she quipped, \"Tempting, but maybe another time babe, I'm still on the clock now.\" She pulled out her notepad, \"Now, if you're done I can take your order or I can come back if you need a few more minutes to warm your girlfriend up a bit more.\" \n\n\"Oh, I already know what I want.\" Kristy said with a smirk. She turned to Leticia, \"How about you?\" \n\nLeticia smiled that same shy smile and said, \"Yeah, I think I know too.\"\n\nA while later they were just finishing up eating. Kristy found she was practically shaking with this strange new energy all around her and it was making her feel edgy.\n\nOn one hand, she had enjoyed the meal immensely. Between the rather brazen flirting between her and the waitress and having the adorable Leticia snuggled up beside her she was having a wonderful time. One of the most surprising and unexpected delights was that she was now feeling Leticia's lust as well. It was a little different from what she felt from the waitress. Still warm and thick but sweet, not spicy. Like warm honey. She wondered if it meant something or if maybe everyone just had their own unique taste... smell... whatever. She made a mental note to ask the Goddess if she got the chance. \n\nAt first, sensing these feelings from other people was more the a bit odd. But fairy quickly she found that she kind of liked the way Leticia's lust flared whenever Kristy was flirting with the waitress. If Kristy had to place a guess before today, she never in a million years would have bet that Leticia would have been turned on by anything like that. If anything, she would have thought it would make her angry, jealous or at least disappointed. Her enjoying it was unexpected and also very exciting. \n\nSo that was all good... at least so far. But on the other hand, she was beginning to feel more and more anxious about what has happening to her. As the night wore on she felt less and less like herself and more like she was a passenger in her own body. She was saying things and feeling things that seemed so far outside her usual comfort zones, indeed far outside of who she felt she truly was that she was becoming concerned that she was being changed as well. Not just a little bit, but a lot.\n\nAs time passed, Kristy continued to feel her anxiety build until finally she had to get up and move. \n\n\"I'll be right back.\" Kristy said, abruptly excusing herself and heading towards the ladies room at the back of the restaurant. She pushed open the door and after glancing at the open stall doors whispered a silent thank you that the room was empty. She turned to the sinks and splashed come cool water on her face as she tried to reign in what seemed like an entire army of confused feelings that were running around inside her. \n\nShe stared down at the water running into the sink and whispered. \"I need to get a grip on this or it's going to make me crazy.\"\n\n\"I think you're doing a fine job,my love.\" The rich and infinitely seductive voice of the Goddess floated through the room. \n\nAt the same time, Kristy felt a hand warm and soft, caressing her face sending pleasure rippling through her body. She moaned, \"Mistresssss.\" \n\n\"I'm here for you my love, just as I said I always would be. Now, what troubles you?\"\n\n\"Thank you Mistress. I'm sorry I'm... I'm just... I don't know what is happening to me. It all feels so... strange.\" Kristy said.\n\nThe voice of the Goddess laughed and Kristy felt her sex twitch at the blissfully musical sound. \"Yes, I can imagine how it would be. It's not like you have ever been able to feel and capture another being's lust before.\"\n\n\"So that is what I'm feeling? I thought it was but, well, it's...\" she fumbled for words and then said lamely, \"It's just weird. I mean I've never been able to feel... wait... did you say capture?\"\n\n\"Of course, how else would my priestess be able to give the offerings she collects over to her goddess? You have been given the ability to capture the energy of any raw, unbridled lust around you and hold that energy until you offer it up to me.\"\n\n\"Offer it up to you?\" Something in Kristy's mind clicked. \"The Bonding ritual? Is that what its for?\" \n\n\"Of course.\" The Goddess said then continued, \"In addition to just absorbing and giving the offerings to me, over time you will also learn to better use the power as well. The more energy you collect, the more powerful your magic will become and the more you can influence the will of others.\"\n\nKristy felt the room spinning slightly. She had guessed that she would have to do some kind of sacrifice or offering for her new Goddess, most likely having sex, but this wasn't what she was expecting. ",
        "\"So I just, like, need to be around people having sex to, uh... like, take their...uh... sex energy?\" She asked, feeling more than a little silly at the way this all sounded. \n\nKazorra laughed again, \"Not quite how I would have stated it but basically yes. Of course, lust and sex do go hand in hand. Or at least the temptation of sex, the desire for it, even if not the act. That is truly what the essence of lust is, desire. You felt it from that lovely waitress, no? How much she desires you?\" \n\nKristy recalled the waves of heat that she had felt coming from the woman as their flirting had gotten more brazen. \"Yes.\"\n\n\"And no sex with her, right? Well, none yet anyway. I think she would be more than willing if you asked her nicely. And even if she wasn't, you have now taken in more than enough power to change her mind.\"\n\n\"So I can just make her want me?\" Kristy asked. \"Is that what happened with Leticia? Did I do that?\"\n\n\"Yes and yes. You now have that power my love. And as I said, the more power you collect the more you will be able to influence individuals and the more people you can hold sway over. But once you commune with me and offer up what you have taken in, your powers will fade until you collect more.\"\n\n\"More people? How many?\"\n\n\"In eons past when I was at the height of my power, my priestesses held sway over thousands.\"\n\nA cold shock ran through Kristy at the thought. \"Thousands?\" \n\nKazorra chuckled, \"Fear not my love, you are not ready for that yet nor am I. I have been away so very long that many years will be needed to return me to my former place in the heavens. For now, we will start small. You learn and I regain myself.\" \n\n\"Yes Mistress.\" Kristy said then paused. After a second she asked, \"Mistress, may I ask a question?\" \n\n\"Of course.\"\n\n\"What I feel from Leticia doesn't seem the same as what I was feeling from Angelica. It's like it, I don't know, smells different? Tastes different? I... I don't know, it's hard to explain but it's definitely not the same. Why is that?\" \n\n\"That is because it is different. If I might make a guess here, what you feel from Leticia is lust based on caring, tenderness and maybe even love, or the beginning of it anyway. It is Lust of the Heart, what one feels when they care for them and that caring makes them desirable. That makes it sweet, to you, yes?\"\n\nKristy nodded. \n\n.\"And what you feel from Angelica is just raw and primal. Lust of the body. Spicy. Yes?\"\n\nAgain, Kristy nodded, feeling a little overwhelmed. After a pause, \"So Leticia cares for me?\" Kristy asked. \n\n\"If it is sweet to you, then yes.\"\n\nKristy felt her heart flip a little at the idea. She felt her cheeks heating and knew a dopey grin was spreading on her lips. Looking to change the subject she said, \"May I ask another question?\"\n\n\"You may ask whatever you want my love.\"\n\n\"How do use this new power? Apparently I have used it already on Leticia but I don't know what I did. Are their magic words or something?\" \n\nAgain Kazorra's rich laugh echoed around the small room. \"No, there are no magic words. You simply will what you want to happen. Envision what change you want in a person and through your force of will, the change will become manifest. Assuming you have enough power and control that is.\" \n\n\"So I just think about it and it happens? Is that what happened with Leticia? I wanted her to be interested in me, to be interested in girls, and it happened? But how much power did that take to change someones whole... well, their whole sexuality?\"\n\n\"Realigning a single person's mind is surprisingly easy, especially when the person in question is already is inclined that way, even if they don't know it yet.\" Kazorra explained. \"Major changes in personality, changing multiple people at once, physical changes... these things take much more power and are likely beyond you yet but will come with time.\"\n\n\"Physical changes? Like you did to me? I could do that too?\" Kristy asked, a giddy feeling that she didn't entirely like welling up in her belly. \n\n\"Perhaps with time. But one step at a time as you mortals say. Now, I think a bit of a demonstration is in order.\"\n\n\"What...?\" Kristy started to ask when the door opened and a woman walked in. Startled, Kristy jumped and whirled to look. \n\nThe woman gave her a little half smile and said, \"Oh, sorry, didn't mean to spook you.\" \n\n\"No, it's fine, my fault. I was just lost in thought I guess.\" Kristy said, smiling back. The woman looked to be mid thirties with a trim, slender figure that was well displayed by her tight jeans and fitted tee shirt. Without a second glance she went into one of the stalls and shut the door. \n\n\"Ok, go ahead.\"\n\n\"What?\" Kristy whispered, feeling suddenly incredibly self conscious talking to herself while standing at the sink in a public restroom.\n\n\"Use your power on her, of course.\"\n\n\"What?\" Kristy whispered again, \"I don't even know who she is! And what exactly am I supposed to do to her?\" \n\nKristy shivered as she felt invisible hands slide down her body, over her breasts and down over her ass. The voice of the Goddess whispered in her ear, \"I'm sure you can think of something. You are a Priestess of Lust after all, aren't you?\"\n\nStifling a moan at the contact, Kristy took a deep calming breath and slowly turned towards the closed stall door. Could she really do this? Could she change that woman? Should she? The thought then struck her that she didn't really have to permanently change her, just for a couple minutes. Or perhaps just make her do something she wouldn't normally do. But what should she do? What should a Priestess of Lust make her do? Slowly, a wicked little smile twisted the corner of Kristy's lips. \n\nAlmost as soon as the idea formed in her mind she knew how to do it. She felt power surge in her core and now saw it for what it really was, the energy she had been absorbing since she took her oath to the Goddess. She felt the stored power inside her surge at her thought and she was surprised at how good it felt, thick and burning as it pulsed through her veins. She held the power in her mind for a moment before willing it towards the woman. \n\nThere was soft gasp from the closed stall door followed by... nothing. \n\nAfter a few more moments passed Kristy was beginning to wonder if it hadn't worked. Maybe she had done something wrong? She was just about to ask the Goddess when she felt it. Lust. Invisible waves of energy began seep out into the room, tingling across Kristy's skin as it swirled invisibly around her. The energy played over her skin like a warm breath from a lover and she sighed with pleasure as she took it all in. \n\nSpicy. Kristy smiled. Raw lust. \n\nBefore long she heard soft moaning sounds coming from the closed stall door as the woman gradually lost control and succumbed to the urge that Kristy had imposed on her. From under the stall door Kristy saw the woman's pants drop to her ankles and from the angle of what little she could see of the legs, the woman's knees must be spread wide. Kristy envisioned her sitting there with her fingers now buried between her legs as she masturbated furiously, unable to resist the urgent need that had suddenly welled up from deep within her sex. The faint wet sounds Kristy started hearing a few seconds later confirmed this notion and her own sex became wetter in sympathy. \n\nKristy realized that as the woman's passion rose and the energy in the air became thicker, she could actually start to see the woman's energy. There was a faint turquoise blue glow around the exposed legs below the stall door that was slowly getting more distinct and brighter with every passing second. \n\nBefore long the woman's quiet moaning had turned to gaping and grunts of rapture as she rapidly approached release. Kristy savored the feel of the wanton lust that flowed ever stronger out into the room and subsequently into her. As it was drawn into her she could feel it settle, hot and wet, between her own legs. Kristy also saw that the aura of lust that she could perceive was even brighter and to her amazement she found that she could actually see the woman through the stall door. The woman looked like a hazy, bright blue form, vague and indistinct but also unmistakably female. She watched the form hunch over, then thrown her head back as rapture approached. Kristy had never thought of herself as a voyeur but this certainly had potential. \n\nWith a strangled cry that echoed around the small room, the woman came. Kristy gasped in surprise as a surge of lust flooded into her, raw and primal, the power of it was both delicious and frightening. Her own core convulsed in a mutual response and she barely managed to contain her own exclamation of pleasure. Her fingers desperately gripped the edge of the sink as her body shuddered. \n\nKristy stood at the mirror for several seconds savoring the post orgasmic euphoria from both herself and the stranger until she suddenly remembered that Leticia was probably wondering where the hell she went. Quickly she looked in the mirror and composed herself before turning to leave. She glanced back to the closed stall door and saw the woman's glow, now fading, through the thin metal walls, head down, elbows on her knees as she slowly came back to earth. Grinning, Kristy left the woman to her rapture.  \n\n\"Now wasn't that delicious?\" The Goddess Kazorra whispered in her ear as she walked back to the table. \n\n\"Yes Mistress.\" Kristy whispered, hoping no one saw her talking to herself. \n\n\"That is just the beginning, my love.\" \n\nLeticia smiled up at her when she sat down. \"There you are! I though you got lost or maybe got tired of me and ran off.\" \n\n\"No, I was just, uh, talking with some woman for a few minutes.\" Kristy said lamely. \n\n\"Talking, huh?\" Leticia raised one eyebrow. \"Ok. Well, the food arrived while you were in the ladies room for fifteen minutes. It's probably almost cold by now.\"\n\nThey talked and flirted more as they ate and Leticia continued to warm up and loosen up until by the end of the meal she was even flirting with the waitress a little bit when she came around to check on them, which seemed to Kristy to be far more frequent than was usual. \n\n\"So how was everything?\" Angelica asked, picking up Kristy's credit card.\n\n\"Delicious.\" Leticia said with a smirk as she squeezed Kristy's hand. \"You should really try this for yourself if you haven't already.\" \n\nKristy almost choked on the double entente, surprised at how brazen Leticia had suddenly become. Just an hour ago she was blushing and trembling at the notion of kissing another girl and now she was suggesting the waitress try it. \n\n\"What makes you think I haven't? I've actually dined on that dish many times before.\" Angelica said with a wink that make Leticia blush and Kristy guffaw. \"I'll be back with the slip for you to sign.\" She smiled and turned away. \n\n\"She got you.\" Kristy teased as she struggled to contain her laughter. \n\n\"Yeah, I guess.\" Leticia said with her own smirk. After a few seconds she said, \"Do you think she really has?\" \n\nKristy smiled to herself, recalling the lust she felt flowing from Angelica, \"Yeah, I don't think she's lying on that one. I bet she's... \" \n\nShe was interrupted by Angelica's return, \"Here you go. Hope you two have a delicious evening.\" She gave them both a very seductive smile and wink as she turned, walking back to the kitchen. \n\nKristy looked down at the check and smiled, \"Well, I guess there's your answer.\" She said as she opened the little folder that held the slip. Written across the bottom of their bill in a swooping script was \"Loved watching you two all night. Super hot. Call me if you're looking for someone else to join your party sometime.\" It was signed \"Angel\" with three hearts and a phone number. \n\nKristy almost gasped at the hot wave that surged from Leticia as she read the note. She struggled not to let out a moan as her body trembled and her sex, once again, flooded with wetness. \n\n\"Do you think she really would?\" Leticia whispered, running her finger tip over the little hearts. \n\n\"Totally.\" Kristy said as she got up. \"But not tonight I think.\" She held out her hand, \"Coming?\" \n\nHer shyness returning a little, Leticia took the proffered hand and climbed out of the booth, coming face to face with Kristy for a second before blushing and looking down. She asked, \"So what now?\" \n\n\"Come on, let's go for a ride.\" Kristy said, taking Leticia by the arm and leading her out. \n\n<p align=\"center\">* * *</p>\n\nPart Six ~ Different Flavors of Lust\n\n\"So where exactly are we going?\" Leticia asked as she stumbled along behind Kristy in the dark. \n\n\"You'll see, it's just ahead.\" Kristy said as she held a branch aside for her... her what? Friend? Girlfriend? Kristy wasn't sure. Honestly, she wasn't even sure if friend really applied to someone she had ensnared with magic. Her thought was interrupted as Leticia stumbled again and Kristy reached out an arm to catch her. \"Careful.\" She said, as she held the shorter woman. \n\nLeticia looked up at her as she held her and said, \"I'm not feeling very careful tonight apparently.\" \n\nKristy smiled at that and leaned down for another kiss. \n\nLeticia seemed surprised at first but quickly melted into the embrace and was soon returning the kiss with a furor that surprised Kristy in return. After a minute Kristy broke off. \"Hold that thought.\" She turned, looking up the trail, \"Just up here...\" She pulled Leticia up the last few feet of the path to where it broke out into a clearing. \n\nThe small clearing in the otherwise dark forest was at the top of an equally small hill. The clearing was covered with well manicured, thick grass and in the center was a stone monument that looked like a very short, fat Washington Monument. \n\n\"Where are we?\" Leticia said, looking around. \n\n\"Jillson's Park. Well, a part of it anyway. We're way up in the back now. The main park is off down that trail.\" She said, pointing at the opening in the trees on the other side of the clearing that could just be made out in the moonlight. \"You've never been here?\" Kristy said, a little surprised since she lived in this town and pretty much everyone came here at least once or twice. \n\n\"Oh, yeah, I've been here. I guess I just didn't recognize it in the dark. And I usually come in through the parking lot and the main entrance.\"\n\n\"Yeah, but that's closed at night. If you want to see it like this you have to sneak in.\" \n\nLeticia turned back to her and even in the dark Kristy could see her eyes shining, \"See it like what?\"\n\n\"Like this.\" Kristy said, taking Leticia's head gently in her hands and turning her face upwards. Here, out away from some of the lights of the main part of town, on a hill on a clear night, the stars were clear, bright and dazzling. It would have been even better if not for the bright light from the three quarters moon which lit the clearing and gave everything a shimmering, silvery glow. \n\n\"It's beautiful.\" Leticia whispered. \"You can see so many stars tonight.\" She stood there for a little while just looking up, slowly turning about, taking it all in. \"I guess I just don't really look up all that much. You forget just how many stars are really up there.\" She leaned in closer to Kristy, \"It's kind of amazing.\" \n\n\"I know. You should see it when you get even farther from people. Go up to Maine or even further north.\" She said as she sat down on thick grass, pulling Leticia down with her. \"When I was in college, I joined the outdoor club and one of the first things we did was go on a hike in Maine, up to Mouth Katahdin. It's the highest mountain in Maine, ever heard of it?\"\n\n\"Yes, but I've never been there. Aside from my dad fishing, my family isn't much into anything outdoorsy. That is unless you count sitting in the benches at a football game as being outdoors.\" \n\n\"No, not really\" Kristy laughed. \"Honestly, I was never really the outdoor either, at least not when I was growing up. I mean, I like being outside, but I grew up with my Grandma and her health wasn't really up to camping. I doubt she even knew the first thing about living in a tent anyway.\" She laughed, \"To her, roughing it was eating a pizza on a picnic table at the beach. Anyway, we climbed this mountain when we got up there and and it was really beautiful. I mean you can see for miles and miles. But then that night we camped near it's base in the state park. And I remember getting up in the middle of the night to pee and when I opened the tent flap I looked out over this small clearing and all I could see...\" she took a breath as she looked up, \"was stars.\" She smiled to herself at the memory. \"I had never seen so many, never even guessed there were so many. It was like... I don't know, like a bottle of glitter burst on black velvet. No, it was more than that... all those other suns, whole other galaxies, millions, billions... it was amazing.\"\n\n\"I guess I've just never noticed.\" Leticia said, squeezing Kristy's hand. \"Maybe I just don't spend enough time looking up.\"\n\n\"You don't see it as much around here. Too many lights, too many people. Also, the moon is pretty bright tonight which doesn't help but that's beautiful in it's own way too.\" She looked up for a few seconds before continuing, \"I found this place a few years ago and it's pretty good, but up north was so much better.\" She turned to Leticia, \"Maybe I'll take you someday.\" \n\n\"I think I'd like that.\" She smiled, \"But we'll have to see about the mountain climbing thing. I'm really more of a beach kind of girl.\" \n\nKristy laughed again, \"Well, maybe we should work on your outdoor experiences? Hmmm?\" She said, leaning in closer. As she did so she was delighted to feel the simmering heat of Leticia's lust start to burn brighter as her passion responded to Kristy's flirtations. \n\n\"Maybe. I guess it would depend on what you have in mind.\" Leticia teased, her voice sounding a bit breathy. \n\n\"Oh, I have a few ideas...\" Kristy said as she leaned the rest of the way in and kissed Leticia again, only this time with more heat. She was delighted at how energetically Leticia responded, her lips parted easily, inviting Kristy in to dance once again. She lay down in the thick, soft grass, pulling Leticia down beside her where they lay on their sides, facing each other lips still locked together. \n\nAs their kiss went on, Kristy started allowing her hands to wander more freely over Leticia's body. First over her arm, then her back, her side, then lower to her hip. Leticia's response of soft little sighing noises only encouraged Kristy to explore her glorious, curvy body further. One hand wandered down to the smaller woman's backside and played over the rounded curves. She reveled in the feel of the girls fabulous ass, heavy and full, firm but still soft. Taking half the girl's bottom fully in one hand, Kristy wriggled herself about a little and managing to slide the other arm up under Leticia's neck. Once she had a solid grip, Kristy pulled them tight together, kissing Leticia ever more deeply as their passions rose. \n\nKristy reveled in both the feel of Leticia's body against her as well as the electric feel of her lust as it poured out of her in ever strong waves. In her eyes, Leticia was beginning to glow faintly in that same shade of turquoise blue that she was coming to know so well. I can actually see how turned on she is getting. Kristy thought to herself as she gave the woman's ass another squeeze. \n\nFeeling it was time to move events along, Kristy broke away from Leticia's lips and moved down to the side of her neck . She slowly worked her way around from the side to the soft hollow at the base of her throat, enjoying the way Leticia's sighing was getting louder and sounding more like panting. A little reluctantly, her hand moved up from that wonderful backside to toy with the hem of Leticia's tee shirt for a minute before carefully slipping under to glide along her smooth skin. ",
        "Leticia responded with little gasping inhalation of breath that sounded absolutely adorable to Kristy. Encouraged, she slid her hand up ever higher until she reached Leticia's bra. Her fingers slipped over the hard curve of the satin covered steel underwire to the more pleasant curve of the thinly covered flesh. \n\nLeticia responded by bringing her hand up into Kristy' s hair and pulling them hard together. One of her legs came up to to wrap around Kristy, pulling her in even tighter still. \"This is so wonderful.\" she sighed. \n\n\"Would you like to feel even better?\" Kristy teased, breaking away and sitting halfway up, propped on her elbow. \n\nLeticia sat up as well and bit her lower lip for an instant but then said softly, \"Yeah.\" \n\nGrinning like a predator about to pounce, she reached down and pulled Leticia's shirt up over her head, pausing while the girl wriggled her arms out of the sleeves. She then leaned down to plant a string of kisses along the top of the girls breasts. She felt the girl's hands return to her hair, pulling her in again as she worked her way down into the divine valley of Leticia's chest. Her own hands moved around Leticia's back and skillfully unhooked the strap of her blue satin bra. She eased her down to lay flat on her back at the same time she pushed the the silky fabric down with her chin. In almost the same motion she wrapped her lips around the dark, hard nub of Leticia nipple before the girl even realized what was happening. \n\nAt the contact of the hot, wet lips and tongue on her sensitive skin, Leticia let out a surprised gasp of pleasure. \"Oh God...\"\n\n\"Mmmmmm?\" Kristy hummed into her flesh before releasing it with a wet pop. \"So you like that?\" \n\nThe spot they were lying in was back under the edge of the trees and the moon had moved a bit since they first sat down. The deepening shadows made it a bit too dark for Kristy to see the girl's blush but she was certain it was there when Leticia said shyly, \"Yeah, it's nice.\" She paused then continued in an even softer voice, \"Can I...um... can I take your shirt off too?\" \n\n\"Oh, I suppose since you asked so nicely.\" Kristy said while leaning back. With a little roll of her shoulders she slowly pulled her own shirt up over her head, exposing her plain black cotton bra. It occurred to her that if she was now a priestess of lust she should probably invest in some sexier underwear. The plain cotton stuff may be comfortable for everyday wear but it wasn't exactly the stuff a Playboy Bunny, never mind the High Priestess of Lust, was made of. \n\n'You're wet.\" Leticia said in surprise, pointing at her nipples.\n\nIn the dim light, the discolorations on the peaks of her breasts where her milk had started to leak through was just visible. The nursing pads she had put in earlier having been overwhelmed by her arousal fueled milk production. \"Yeah, it happens sometimes when you're nursing.\" She shrugged,\n\nReaching around her back, she popped the four hooks on the strap and let the fabric slip away. The nighttime air was cool on her damp nipples and she felt them stiffen immediately. Looking up to Leticia she saw the younger woman's eyes wide and staring in the dim light. \n\nSlowly, Leticia raised one hand to Kristy's breast, almost but not quite touching. \"You're nursing?\" the girl said, her voice barely above a whisper. \n\nKristy had to hold back another gasp as the level of energy and light flowing from Leticia flared brilliantly. The surge in the girls lust at finding out Kristy was lactating was both surprising and very exciting. Unable to resist, Kristy ran her hand under one of her breasts, cupping it, enjoying the new heavier fullness thanks to the changes in her body from her Goddess. She gave the mound a little squeeze and felt the familiar sensation of tingling tightness in her nipple that meant she was letting down. At the same time, she slid her free hand into Leticia's hair and guided her down. Leticia complied easily, lust flooding from her in ever stronger waves. \n\nKristy gasped when she felt the girls tongue tentatively brush her skin as Leticia tasted another woman's breast for the first time. Timidly at first but with gathering confidence, Leticia traced her tongue around the stiff bud of Kristy's aching nipple, circling around the crinkled skin of her areola and flicking up and over the hard summit. \n\nFinally, Kristy felt Leticia's lips, close around her as she took her nipple in. Tender at first, just wrapping her lips around it, circling the sensitive skin with her tongue. \n\n\"Mmmm.\" Kristy breathed, \"That's so nice. Your lips feel delightful.\" \n\nAs if spurred on by Kristy's words of approval, Leticia finally tried sucking on her. \n\nKristy shivered as she felt herself being drawn more deeply into Leticia's mouth. She savored the feel of the girls tongue, somehow both soft and firm, smooth and rough as it stroked her skin, pulling her, drawing her in while at the same time beginning to draw her milk out. Kristy felt herself letting down more with each passing second as her arousal continued to build. The tingling tightness starting in her nipples and spreading around the sides of her breasts. \n\nReleasing her with a slurping pop, Leticia looked up in surprise, \"It's sweet.\" \n\n\"It takes on a bit of the taste of what I've been eating. I ate a lot of fruit today so it makes it a bit sweeter.\" Kristy said, running her hand through Kristy's hair. \"Do you like it?\" \n\nIn reply, Leticia grinned and bent back down to suckle more. Eagerly pulling her back in and drawing her in harder this time, stroking the stiff skin with the flat of her tongue, trying to tease more of the sweet, white liquid from her. \n\n\"Ugh.\" Kristy grunted as the heat built in her core. I guess she does like it. Kristy thought. Then, without really meaning to, Kristy though No, you don't just like it, you love it. You love breasts, you love tits! Suckling another woman's breasts is a huge turn on for you. Especially if they are milking like me.  Kristy gasped again as she felt the energy in her core flare in response to her mental command. \n\nAlmost instantly, Leticia's attention to Kristy's chest became more ardent, more passionate. Her sucking became harder and little moaning sounds started floating through the still night air as she became more and more aroused. \n\nDear Goddess, I changed her! I made her into a... a boob girl. Kristy thought as she moaned in response to the increased attention. Her own excitement quickly rising in response to both the physical and divine stimulation from Leticia's lust. \n\nAs she became more and more excited, Leticia pulled herself tighter, spreading her legs to straddle Kristy's thigh. Slowly at first but with building need, she ground herself against Kristy's thigh, driving herself higher with every passing second. \n\nWaves of hot lust flowed from Leticia and drove Kristy ever higher as well. As the energy around her increased, Kristy found she could actually feel the energy being absorbed by her own body. The raw, animal emotion seeping down into her center, flooding her with it's hot primal need. She slid one hand under the waistband of Leticia's leggings to grip her ass while her other hand slipped between them to paw at her firm breast, twisting and rolling her small nipple with her fingers. Her lust fogged mind was just wondering what else she could use her now powers for, what else she could change about Leticia when she heard voices off through the woods somewhere on the other side of the clearing.\n\nLeticia heard them too and she released Kristy with a start and sat up, looking off to where the voices were approaching.\"Someone is coming!\" She hissed, covering her breasts with her hands while she looked about for her clothes. \n\n\"Ssssh. Relax.\" Kristy said, taking her hands. \"We're way over here in the shadows. They'll never see us. It's probably just some kids.\" \n\nCraning her neck, she looked out across the clearing, trying to spot who may be approaching. The moon illuminated the open clearing quite well once the eyes got used it but the surrounding woods were still very dark. After a few seconds she heard the voices again and this time spotted a glowing orange flare of light from a cigarette about a third of the way around the clearing. She was also quite sure by now that the voices were female which eased her tension slightly. \n\n\"It sounds like girls.\" Leticia whispered, coming to the same conclusion. \n\n\"Yeah.\" She pointed, \"Over there.\" \n\nFinally, two slender figures stumbled out of the end of the path and into the clearing. She and Leticia were correct, it was two women. More like girls Kristy corrected, seeing that both appeared to be high school or maybe college age. Both were fairly slim and dressed in tight jeans and shirts. One wore her hair up in a high pony tail while the other had her hair flowing loose. \n\n\"Oh shit. It's Sara and Elizabeth!\" Leticia hissed. \n\n\"You know them?\" Kristy asked, wondering what the problem was.\n\n\"Yeah, they are, or rather were, in my high school class.\" Leticia said, looking again for her shirt. \"We should go. I don't want them to seem me here like this.\" \n\n\"Like what?\" Kristy asked, feeling a little put out. \n\n\"Naked in the park!\" Leticia hissed. \"They are both miss little goodie-goodie. If they saw me doing this I'd never live it down...\" \n\nAs Leticia was speaking, Kristy caught a whiff of something and turned back to the intruders. They had sat down in the grass and were both giggling and laughing as they handed the cigarette back and forth. No, not a cigarette, Kristy realized. \"Apparently they aren't all that goodie-goodie.\" Kristy said with a smirk. \n\n\"What? What do you...\" Leticia started and then stopped, sniffed the air for a second before saying slowly, \"Is that weed?\"\n\n\"Looks like even the goodie-goodie kids smoke weed now.\" \n\n\"What thee fuck? Sara was president of the student anti-drug council. Are you kidding me?\" \n\n\"I don't know, but it sound like they are enjoying themselves.\" Kristy said, indicating the almost constant giggling from the girls. \"Sounds like they both at the type that gets silly when they get high.\" \n\n\"Too bad they had to show up now.\" Leticia said with a growl. \"I was rather enjoying myself without them here.\" \n\nAn idea popped into Kristy's mind and she felt her own lust flare in response. Would it work? She thought to herself. She supposed there was only one way to find out. Keeping her voice casual, she said, \"Maybe they came up here to enjoy themselves as well?\"\n\nLeticia looked at her, \"You mean what... like we were... uh, well, like we were doing? Uh... together?\" She shook her head. \"No, they are both totally straight, trust me. They both have boyfriends.\" \n\n\"I bet you're wrong.\" Kristy said, trying to keep her casual voice. \n\n\"No way.\" Leticia whispered. \"They're totally straight. No chance.\"\n\n\"Bet?\" \n\n\"You're on. What do I win when I'm right?\" \n\n\"A weekend in the mountains with me and I'm paying.\" Kristy replied. \n\n\"And what do you win? Not that you're going to.\" Letica whispered. \n\n\"We both get naked and sit here and watch them while you suck on me again.\" Kristy said in a breathy whisper. \n\nLetica gasped in surprise and Kristy had to control her own moan as a shockwave of heat surged out of the smaller woman. \n\n\"That's so fucking pervy.\" Letica breathed, turning to look across the clearing. \"But it's pretty fucking hot too. Ok, you're on.\" \n\nAcross the clearing the laughing and giggling continued on unabated. The flare from the joint was gone so they must have burned it down by now. Leticia had turned over, propped on her elbows, bare breasts hanging just above the grass as she watched across the field. Unable to resist, Kristy got up and climbed over the prone woman, straddling her ass. Leticia was just about to ask what she was doing when Kristy snaked her hands around and gripped both of her breasts. Using her thumb and forefingers, she gave both of Leticia's nipples a firm, rolling squeeze. \n\nLeticia let out a little startled cry that turned to a long, low moan and Kristy's fingers continued to work. \n\nFeeling the power simmering in her core, Kristy thought about the two young women just a few dozen feet away, trying to picture them in her mind. \"What do they look like?\" She asked Leticia. \"Are they cute?\" \n\n\"Yeah.\"Leticia gasped out. \"They are both on the track team. Super fit and really hot.\" \n\n\"Good.\" Kristy said thickly as she focused her thoughts. Feeling the heat in her core flare in response, she pushed her thoughts at the women across the clearing. You are hot for each other. You desperately want each other. Her sex clenched and she shuddered as energy surged in her core. \n\nAcross the clearing the giggling stopped and Kristy could see the girls looking at each other in the silver light. One of them, the one with the ponytail, reached out to push her friends long hair back, hooking it behind her ear. They said something that Kristy couldn't make out then they leaned in close and kissed. \n\nLust, hot and sharp began to fill the clearing. Kristy noted again as she drank the energy in that it felt different than Leticia's lust or even the waitress earlier that night. \n\n\"Oh my God... they are kissing.\" Leticia said,her voice practically hoarse with her excitement. \"They are actually fucking kissing. You're...\" She moaned as Kristy gave her nipples another twist, \"You're... right you... bitch. How did... ugh... did you... know?\" She moaned again. \n\nAcross the clearing things were moving along quickly, no doubt due to Kristy's divine influence. Sara and Elizabeth were pawing at each other while locked in a furious embrace. The somehow managed to pull their tops and bras off while hardly breaking their kiss or ever losing contact. A few minutes later both women were totally naked and their own moaning was getting louder and more frantic. \n\nThe lust in the air was getting thick enough to drink as Kristy leaned down to Leticia and licked her ear. \"You know what this means, right?\" \n\n\"Oh yes.\" She moaned. \"Please... I need you.\" \n\nSliding down to straddle Leticia's legs, Kristy slid her new lover's leggings and panties smoothly down over her curvy hips and thighs. \"Dear Goddess, your ass is gorgeous.\" Kristy said as she kissed Leticia's ass while slipping her pants the rest of the way down. With one leg, she forced Leticia's knees apart, spreading her thighs and opening her up. \n\n\"Oooh.\" Leticia groaned at the feel of the cool air on her suddenly exposed pussy. \n\nReaching back up to fondle Leticia's breast with one hand, Kristy trailed her other hand down in slow, lazy circles over that gorgeous ass, down between the shapely thighs and finally to the girls hot, wet center. At the fist contact between Kristy's fingers and Leticia's soaking wet sex, the girl let out a strangled cry that quickly turned to a series of long, low moans as she slipped her fingers up and down through the velvety outer folds. \n\n\"Ungh... unh... oh...\" Leticia mumbled incoherently with every touch.\n\nThinking that Leticia's vocalizations might get too loud very soon, Kristy formed another thought in her mind and sent it across the clearing. You won't care about anyone else for the next few hours. You won't care what anyone else sees or does. You won't even notice anyone else but your partner.\n\nIn reality, the command was probably unnecessary. Across the clearing, the other girls were continuing to kiss frantically, their legs interlaced, pussies touching, grinding together. Their own loud moans and cries easily masking the small, relatively restrained noises that Leticia was making so far. By the feel of the energy pouring out from the two women and the rapidly brightening glow of their auras, Kristy guessed they were already both approaching their first climax. She doubted anything short of a tornado ripping through the clearing would get their attention. \n\nReturning her attention to her own partner for the evening, Kristy ran her tongue over Leticia's ear before whispering, \"Sounds like they are having fun.\" She ran her tongue along the sensitive skin behind her ear before she wrapped her lips around lobe and sucking on it. At the same time, she slipped first one, then a second finger up inside Leticia's soaking wet sex. \n\nLeticia let out a sharp cry of pleasure at the intimate invasion but Kristy quickly clapped a hand over her mouth to muffle the noise although it wasn't really necessary. Kristy used the motion as an excuse to turn Leticia's head up, forcing her to look across the clearing to the shadowed forms of Sara and Elizabeth. \"Who do you think will come first? Sara or Elizabeth?\" She whispered in Leticia's ear.\n\nLeticia's only answer was a little gasping cry as her body bucked under Kristy't touch. \n\nLeaning down to lick Leticia's ear, Kristy eased the hand covering her mouth and said \"I bet they come together. Think I'm right?\"\n\nAcross the clearing, the two women were moaning and crying out almost continually. Searing hot waves of rapture were pouring off the women, flooding the whole clearing with lust that Kristy's body continued to greedily take in. \n\n\"Yeah... together... so hot...\" Leticia moaned, her own eyes now locked on the show just a short distance away. \n\nKristy felt her own core trembling in response to the show across the clearing, the lust pouring into her and feel of the woman under her. She knew that as soon as any other woman in the clearing went into rapture she would likely follow whether she wanted to or not at that moment. \n\nBeneath her, Leticia let out another cry, her entire body glowing blue in Kristy's eyes. She asked in a voice thick with passion, \"Oh God... are they... they... going to...\"\n\n\"Any second now I think.\" Kristy whispered. \"They're really going at it. Look at them grind their cunts together.\" Kristy said harshly, hardly believing her own crude words. She couldn't recall if she had ever said that word out loud before and if she had, it certainly hadn't been in circumstances like this! \n\n\"I... Kristy I... I'm... ungh!\" Leticia cried out as her body convulsed and shuddered.\n\nA wave of searing passion, hot and sweet, slammed into Kristy as Leticia came. Kristy cried out in sympathy as she allowed herself to finally go over the edge as well. She felt wetness gush from her sex as she convulsed in a powerful series of spasms that shook her entire body. The fingers she had buried inside Leticia were crushed with almost bruising intensity as the girls strong muscles clamped down hard with the power of her orgasm. \n\nMoments later, tidal wave of energy inundated the clearing as the other girls came together with loud cries of bliss. She looked over to see their forms, glowing a fierce blue, frantically grinding their mounts together, legs intertwined, clinging to each each other desperately as they shared their pleasure. Kristy moaned again as the sharp tang of their lust was drawn into her center, a carnal sacrifice for her heathen goddess. \n\nAs her passion slowly receded, Kristy flopped onto the soft grass beside the still moaning Leticia and closed her eyes, savoring both her own afterglow and the energy that was still seeping through the night air from those around her. After some time, she wasn't really sure how much, she felt Leticia stirring beside her. A warm arm slid over her belly and pulled her close as lips, firm and tender, took in her nipple and began suckling the milk from her once again. She hummed with pleasure. \"Mmmmm...that's nice.\" \n\nBy way of response, Leticia moved her hand to Kristy's other nipple and began to tease and pull the tender skin using slow steady pulls, mimicking her tongues movements. Almost immediately, fine streams of white liquid began spurting, arching through the cool air and raining back on both of them.",
        "With every pull, Leticia's movements became more energetic as her arousal quickly flared back to life. With each spurt of milk, Kristy could sense an new surge of hot lust from her lover who was obviously enjoying her new breast fetish, courtesy of Kristy and her Goddess. \n\nGiving in to her own lusts, Kristy twisted partly around to intertwine her legs with Leticia, straddling the smaller woman's thigh, pulling it tight up to her sex. Thrilling at the delightful smooth feel of skin on skin, she began to roll her hips, riding her lover, unabashedly driving herself higher. \n\nLeticia responded by mimicking Kristy's movements and humping her thigh in return. Soon they were both soaked from each other's essence as they rolled and thrust together with an ever faster pace. Even as she bucked and thrust, Leticia continued to enthusiastically suckle from Kristy's breasts, moving back and forth between the milk soaked mounds, licking up every drop of milk she could. \n\nKristy's arousal was so high and another climax so close that with all the stimulation her nipples had been getting she was flowing like a fountain now on her own. Even when Leticia wasn't pulling on her or suckling her she continued to spray fine white streams of milk over both of them, soaking them and making their skin gleam silver in the moonlight. \n\nAcross the clearing Kristy heard renewed moaning as the spellbound lovers continued with their own round two. They had wrapped themselves into a sixty nine and were eagerly lapping away at each other in a frantic race to orgasm. Both of them glowed fierce blue in the dim moonlight, their ethereal forms seeming to meld and join together as they shared their sapphic bliss. \n\nKristy marveled again at how she had managed to make those other girls do something just using the force of her will. The idea that she could manipulate other people, change them into what she wanted them to was turning out to be a bigger temptation to he than she would have thought it would. The idea of it was a little embarrassing, more than a bit frightening and whole truckload of exciting to her. Seemingly unbidden, another thought popped into Kristy's mind and before she could control her raging libido she felt the power surge inside her as she sent her new magic out across the clearing, You are both only interested in women from now on. Men no longer interest you.\n\nThe two girls didn't outwardly change but Kristy thought she heard their moaning and gasping get a little louder. She also thought the energy coming from them seemed to feel a little different, somehow a little... sweeter. \n\nDear Goddess, I just made the into lesbians! Kristy thought, feeling her own excitement surge upwards in response. Manipulating people was such a turn on!\n\nFeeling her own climax approaching fast and knowing that Leticia was as well, Kristy grabbed her by the hair and pulled her up for a hard, passionate kiss. She thrust her tongue into Leticia's mouth and her lover eagerly sucked her in as they shared the sweet taste of her milk. Breaking away after a few seconds, she tipped Leticia's head over so that she was looking a out across the clearing at the other girls. \"They are fucking again.\" She whispered harshly, \"Look at how fucking hot they are like that. They must love the taste of pussy.' \n\nTaking a handful of Leticia's hair, she forced the smaller woman too look right into her eyes. \"Do you like pussy, Leticia?\" As she said it she formed a new command in her mind and pushed it into Leticia, Once you taste me, you will love the taste of women. You will only ever want women from now on.\n\nAs she spoke she had to desperately hold back the raging passion that surged from both the excitement she felt from manipulating Leticia and the flare of heat she felt in her core a from using her new power. \n\n\"I don't know!\" Leticia gasped. \"I've... never...\" \n\n\"Then try it.\" Kristy hissed, pulling away and moving over Leticia. She straddled her head with her knees then lowered herself down, her own face between Leticia's legs. \"Taste me, my love,\" She whispered, \"While I taste you.\" She felt Leticia's hands grip her around the thighs, pulling her down then a tentative, timid caress of her outer folds as her lover took her first lick. \n\nAlmost instantly at the the girls first taste, Kristy felt a flare of passion from her as her lust surged up again. Oh Goddess, it works! The magic works! She loves the... Her thoughts were interrupted by an explosion of pleasure in her sex as Leticia buried her tongue deep inside Kristy, lapping up every drop of her sex that she could get. With an almost animal intensity, she plunged her tongue deep into Kristy time and time again. Coming out to lick the outer lips for a second before plunging back inside. \n\nKristy knowing her peak was immanent, fell forward and dove into Leticia's sex. Wanting to make them climax together, she wrapped her lips around Leticia's clit and started sucking on the small, hard bump, flicking the tip with her tongue. The intense stimulation had the desired effect and within moments she felt the smaller woman start to tense up as she began to peak. Releasing her own restraint, Kristy allowed herself to slip over the edge into rapture again. With a final thrust of her hips she felt every muscle in her body go rigid as mind shattering orgasm ripped through her. \n\nUnder her, Leticia clung to her desperately as she shared the same experience. Her cries of bliss muffled since her face was still deep between Kristy's legs. Wetness flooded from Leticia's pussy as her sex convulsed with her intense climax.\n\nWrapped together, deep inside each other, joined in rapture, Kristy and Leticia came over and over again till finally they collapsed into the grass, totally spent. \n\n<p align=\"center\">* * *</p>\n\nEpilogue\n\nKristy dropped into her bed and glanced at her alarm clock. It read 4:20 AM. She was thankful that the shop was closed on weekends and she didn't have to get up for work in less than two hours. \n\nThey had left the clearing about an hour ago after waking up naked wrapped about each other. The moon had disappeared behind the trees and the clearing was dark, quiet and a bit chilly. The other girls had left sometime before them. Kristy had wondered with slightly wicked thrill how they were going to break their new sexual preferences to their boyfriends.\n\nShe had dropped Leticia off at her house a little while ago but not before sharing a long kiss that threatened to reignite both their passions. Reluctantly, she had broken away and bid her new lover good night, promising that they would do it all again very soon. \n\nRolling over she groaned with the feel of her sore muscles and generally exhausted body. She still felt the hum in her veins from the evenings carnal adventures and it was delicious. She had never suspected that an afterglow could last this long, but then again, she had lost count of the number of positions they had tried and the number of orgasms they had. All she was certain of was that it had been a lot. Far, far more than she had ever had in one session before. Probably more than she had ever had in a month, maybe even more. \n\n\"Well, I am a Priestess of Lust.\" She said to the empty room as a wicked grin pulled at the corners of her mouth. \"Maybe every weekend will be like this from now on.\" \n\n\"This is only the beginning, my love.\" The voice of Kazorra, Goddess of Lust, floated through the room. \"Only the beginning.\"\n\n\"Mistress.\" Kristy said, sitting up. \"I didn't know you were here.\" \n\n\"I'm always with you, my love.\"\n\n\"Of course.\" Kristy paused for a moment. There was a question that had been nagging at her for a while now but she was still unsure if she wanted to ask her Goddess. She opened her mouth to speak but hesitated, the question caught in her throat. \n\nThe Goddess read her indecision and said, \"Something troubles you?\" \n\n\"I didn't want to bother you with it but I was just wondering if you... well, I...\" She hesitated then steeling herself said, \"Why can't I remember who or what I used to be? I try to remember but it's all, like, confused, almost like trying to recall a dream. Did you, um... change me somehow or was it something else or... or am I just going crazy?\" \n\n\"You are most definitely not crazy, my love. I can assure you of that. I do not bestow divine blessing on the mentally infirm. That would be a certain recipe for disaster.\" The Goddess paused before continuing, \"As to why you can't recall specifics about your past, it is because someone has used magic on you, changed you, altered your mind. Those kinds of changes can leave conflicts in your memories. You could think of it almost like mental scar tissue. The magic changes who you are and it tries to make your memories agree with that new you, but the human mind is a funny thing. Sometimes magic works very well and sometimes... not so much. It depends greatly on the skill of the person wielding the magic, the spell being used, the person being affected and even other things such as the season, position of the stars, the weather... many factors.\"\n\nKristy sat quietly for several seconds thinking about what this meant. Someone else had changed her? \"Someone changed me?\" She said in a confused whisper. After a second it clicked and she said, \"Mary Calise.\" \n\n\"Your instincts are good, my love.\" Kazorra said, a hint of pride in her voice, \"Yes, she possess a very powerful magic artifact.\"\n\n\"She changed me?\" Kristy said,her voice rising slightly as the implications started to become clearer.\n\n\"Yes, but it's not what you are likely thinking.\" Kazorra said gently. \n\n\"What do you mean?\" \n\n\"What she did to you was not intentional. She has only recently come into possession of this magic and she doesn't yet know how to control it. Indeed, she may never be able to control it, at least not fully. The magic she now wields has a mind of it's own and does not always behave.\" \n\n\"So you know her? Mary?\"\n\n\"Yes, her magic, this artifact she now possesses is how I managed to make my way back to this world. The artifact, a ring she wears, serves as a link between your world and mine. Even though I can't control it or her, I can still use it's magic to reach you and your world in a limited way. Without her I would still be stuck in my own realm. I had sought to make her my priestess at first but she proved... resistant, to my charms.\" Kazorra chuckled self derisively. \"Even a Goddess has her limits. She was eventually temped away by my sister and is now sworn to her service.\"\n\n\"Your sister? Another Goddess?\"\n\n\"Yes, Ama-Arhus, Goddess of Women. Mary has become her Priestess much as you have become mine. I was annoyed at first but I now believe it was all for the best. Through her I found you, my love, and you are as lovely a disciple as any divine could hope for.\" \n\nKristy felt her ire wilt a little as her mistress spoke about Mary now that she understood a little more. Then she felt her cheeks heat with embarrassed pleasure at the compliment. \"Thank you Goddess.\" Kristy thought for a moment, \"So without that artifact you can't get into this world?\" \n\n\"For the moment. But with you here now, rebuilding my influence, that will soon change. The more you gather to worship me and rebuild my power, the less I will need the artifact. Soon, hopefully, I will be able to join you whenever I wish or whenever you need me.\"\n\n\"Yes my Goddess.\" Kristy said, feeling both proud and nervous that a Goddess was actually relying on her for something. \"I won't fail you.\"\n\n\"I have complete faith in you, dearest.\"\n\nBlushing again, Kristy looked down and paused, trying to get her thoughts back on track. She eventually asked, \"So, the magic changed me and it changed my memories so now I have this... confusion?\" She looked over at her reflection in the mirror on her dresser. \"So I wasn't always a lesbian?\" \n\n\"No.\"\n\nA bit of the ire started coming back, \"But what if the old me wouldn't like who I am now? What if this isn't what I wanted! What if it's just something... forced on me. Should I try and fix this? Should I be upset? Should I be angry?\" Kristy asked, feeling more conflicted than before. \n\nKazorra's next words caught her blooming anger straight across the knees. \"Are you happy with who you are now?\" The Goddess asked gently. \"Not what your head says, but what your heart feels?\"\n\nKristy stopped, considering the words of her Goddess carefully. She tried to think but it was hard with all these new thoughts running around inside her head. She tried to reign in her emotions by taking in a deep calming breath and letting it out slowly. Deliberately, she took another, and another. With each breath she felt the confusion and conflict beginning to slipping away. She looked inward and envisioned the confusion and conflict as a shell around her core, closing it off, blocking it away from everyone, including herself. Another deep breath and the mass obscuring her center finally crumbled away, leaving her heart, the essence of her being wide open, exposed to the scrutiny of her soul. \n\nA smile formed on her lips. She knew. \n\nA small smile spread on her lips and she said, \"I'm happy.\" And it was true. This was how she really felt now, how she truly felt in her heart, this was who she was now. Whatever she had been didn't matter anymore. \"I've never felt like this before. It's... wonderful. I never imagined it could be like this for someone so ordinary like me.\" She glanced to the ceiling as if she could see the Goddess floating above her. \"I have the incredible new powers, I'm having amazing new experiences,\" she smiled again, \"And most of all I have you, Mistress.\" \n\n\"Then I would say that is your answer.\" \n\nKristy felt an invisible hand caress the side of her face and she sighed softly at the gentle, comforting touch. \"Thank you, Mistress. For helping me understand.\"\n\n\"I am always here for you, my love. Always.\" She paused then said in a mischievous tone, \"And don't worry about Mary Calise, I'm quite certain that you'll be seeing her again soon.\"\n\n<p align=\"center\">* * *</p>"
    ],
    "authorname": "china-doll",
    "tags": [
        "lesbian",
        "lactation",
        "lesbian lactation",
        "mind control",
        "magic",
        "lesbian sex"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/changed-redux-pt-06"
}