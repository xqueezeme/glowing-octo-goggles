{
    "title": "Poison Ivy Ch. 04",
    "pages": [
        "ETA: This is the revised version of Chapter 4. If you're new to the story, or reading them again, some minor details have changed, and may not line up with subsequent chapters. I'm slowly working my way through the series. The final chapter is coming, I promise! Thanks for sticking with me! \n\nYou guys are so awesome. Thank you so much for all the feedback and emails, it's still kind of shocking to know that there are people out there who enjoy reading the stuff I love to write. I'm appreciative of it every time!\n\nI noticed a few comments about how sex-less of a story this is and wanted to address it up front. Correct. This is a story that has more non-sex scenes then sex-scenes, so if that's not your thing, I'm totally cool with that and please move on. I'm actively working on trying to find a right balance of smut and plot-line, so if anyone has any advice on how to make that happen, let's talk. \n\nAnd if you're just picking up here and haven't read any of the previous chapters, a few warnings. This is an Omegaverse story, so if you're unfamiliar with Alpha/Omega stories, you might want to do a quick google search so you kind of know the basics. Also, it's a military story, and I unapologetically have the mind and the mouth of a sailor and it comes out in spades here. If cursing offends you, please stop reading here. \n\nThanks again! Especially recently, I've been overwhelmed with all the support and encouragement. I haven't figured out a way to respond to emails, but I'm getting them and love every one, so thank you! Enjoy!\n\n.............................................\n\n\"What the fuck was that, Eli?\"\n\nThe blonde Alpha, outfitted in dark Torrin fatigues, shrugged carelessly on the video conference screen, the scar running a diagonal path across his thin lips pulling jagged as he lifted a corner of his mouth in a smirk.\n\n\"You wouldn't accept my offer. I was poised to make a fuck-ton of money from my cut of the profits for surrendering use of the port. I'm no longer willing to wait while you stuff your own pockets. It's time to move on, Nelson. I tire of the game you've been playing.\"\n\nGeneral Nelson's jowls trembled as he shook his head in disbelief, pacing the length of the dark office with a hand buried in his greying hair. \"Do you realize what could have happened? You think you're losing a lot of men now? Imagine the shit that would have rained down on you if they had revealed her. He wouldn't have stopped until every last one of you Torrin shits was buried! You're playing your own dangerous game, Eli!\"\n\nA low growl emanated from the speaker at the far corner of the room. \"I will not be threatened by you, old man. I'm not interested in the girl or her father. Not one of those soldiers had a fucking clue who she really was, anyway. As far as any of them were aware, she was a Lieutenant General's newly pair-bonded Omega, a girl they could exploit for a simple ransom. Something to raise the hackles on the fearless Lostran warriors.\" The larger-than-life image of the commander of Torrin military forces sneered. \"Perhaps the General who takes your place will consider my offer more seriously.\" Eli straightened, and all traces of humor were wiped from his face. \"I'll see you in hell, Nelson.\"\n\n\"This isn't over!\" the aging Alpha roared into the now-blank screen. He spun around, resuming his restless pacing as he mumbled quietly to himself. Silently, Hunter slipped out from the shadows he'd used to cloak his presence. \"Traitor,\" he growled, startling the General who looked, to Hunter's utter disgust, about ready to piss himself.\n\n\"Hunter,\" Nelson breathed, a look of relief passing briefly over his face before he peered more closely at the approaching Alpha's darkened storm-cloud eyes. Hunter raised the matte black .40 pistol, his personal favorite, up to the old man's greying temple.\n\n\"I would have killed you quickly for betraying your country. How many good men have lost their lives because of you? How long have you been colluding with the enemy, you fuck?\" Hunter gritted his teeth at the wild look of fear in the General's eyes. Weak. The man was weak. And if there was one thing Hunter would not fucking tolerate, it was weakness.\n\n\"Now, though, you've put Ivy in danger. For that, you'll die slowly.\" He pulled the hammer back, smiling at the satisfying, familiar click as his thumb swept over the safety. \"Hunter, please,\" the old man begged, even lifting his hands in supplication. Fucking coward. Hunter took a step back, flicked the barrel of the gun downward and pulled the trigger, watching with grim satisfaction as Nelson's right knee exploded. The resulting high-pitched scream echoed and bounced off the mahogany walls of the videoconference office as the former general slumped to the ground. \"Shut up!\" he barked, pulling at the trigger again and again, until Nelson's left leg hung together only by a single bloody strip of flesh. He stalked slowly toward the man splayed out across the smooth wooden floor, whimpering like a wounded animal.\n\n\"Last words, Nelson?\" he forced between gritted teeth.\n\n\"You don't get it, do you?\" Shrill laughter escaped the General's lips. \"This is so much bigger than me. Bigger than us all.\" He shook his head as fast, frantic words spilled from his lips like vomit. \"They'll kill you. Make waves, and they'll torture the girl in front of you before they put a bullet between your eyes. You think it matters who her father is? He'll kill her himself! These men are ruthless, Hunter.\" He groaned as he clutched his thigh above what was left of the bloodied flesh. \"Do you even know who she is?\"\n\n\"I know,\" Hunter snarled quietly, quickly losing patience. \"It changes nothing. No one will ever touch her.\"\n\nThe fool sneered and began to say something else, but Hunter had reached the end of his rope. With pinpoint precision, he let off three rounds. Two to the gut, one to the lower lobe of the General's left lung. He missed all vital organs, ensuring Nelson would suffer excruciating, visceral pain while he slowly drowned in his own blood. He surveyed his work, allowing himself a small, cruel smile of approval. He didn't necessarily enjoy killing. But when it had to be done, he did it the right fucking way.\n\nWithout looking back, Hunter stalked across the room, ignoring the cries and gurgling pleas of the ruined man behind him. He crossed the threshold of the metal framed doorway and looked at the two Alpha guards flanking the entrance.\n\n\"No one goes in or out. He dies alone. Tell me when it's done.\"\n\nThey both nodded, their eyes never leaving the wall directly in front of them. Until the army could send a replacement for their commanding officer, Hunter was the highest-ranking Lostran soldier in Torrin, and his orders would be carried out without question. He considered Nelson's dying words as he strode down the hallway of the administrative building toward his office. If corruption ran as deep, and as high up, as the man had claimed, it would complicate things. He no longer had just himself to think about. He would have to tread carefully.\n\nTwo things he knew for sure. First, Ivy could never find out who she really was.\n\nSecond, he would hunt down and slaughter every single fucking one of them who would dare lay a finger on his Omega.\n\n.......................................\n\n\"You're not eating.\"\n\nIvy glanced up at the giant sitting across from her, then back down at the decadent tray of comfort food laid out on the oversized dark oak table they were seated at. Somehow, the lousy sneak had figured out all of her favorite foods, and had been plying her with picture-perfect platters of deliciousness at every meal. Meals he often spent across from her, eating from his own lush tray. He'd tried once to eat the same food she'd been served. Just once.\n\nPea-mush macaroni and cheese, roast chicken sprinkled with fresh lime juice and hot sauce, and fanned slices of avocado, just because she really fucking liked avocado, made up the contents of the meal she'd received that night. It looked and smelled incredible, but none of it was particularly tempting. She shrugged. \"I'm not hungry.\"\n\nThe giant snorted. \"You've been not hungry for several meals now, Ivy. If you are attempting a hunger strike, it will not work. I will hold you down and force feed you myself if I have to. Now eat.\" He pushed the tray closer to her.\n\nIvy glared at him, but picked up her fork and, to appease the bully, speared a piece of chicken. She knew when to pick her battles, and this wasn't a hunger strike. She truly just didn't feel like eating.\n\nIt had been five days since the attack on the base. Five days since Kentucky had ripped her heart out and paid the ultimate price for his foolishness. Five days locked inside her gilded cage, waiting for the Alpha who had swept in to destroy her life to come break up the monotony of her days. She greeted him with scowls and snarls. She would never admit to him, to herself, that a terrible sense of relief always flooded her when the locks turned, and his towering frame shadowed her doorway.\n\nThe Beta medic had been in often, checking the injury on her shoulder and the various cuts and bruises she had earned during her short stay here. A different nameless Beta soldier had also come in to bring her meals when Hunter was unable to eat with her, taking away barely touched trays and emptying her garbage as he did so. Neither of them would speak a word to her, despite her attempts at conversation. Her keeperand self-appointed mate, one of the largest Alphas she had ever seen, a man who would have terrified her just a few short weeks ago, was the only one who would deign to interact with her.\n\nIt wasn't just the lack of human contact, or the boredom, or how his presence gave her a reprieve from the way her obsessive thoughts worried over recent events. When he stepped through the door, her hand would subconsciously fly to the place directly below her sternum where the fresh pair-bond, even now, was slicing its way into her. It had hooked itself behind her ribs, and when it recognized the pair's close proximity, it would hum pleasantly. It was ludicrous and infuriating to think of how easily the link had manipulated her feelings toward the hulking mass of muscle now staring her down as the forkful of meat hung precariously suspended halfway between her frowning lips and the expensive, gold-rimmed china dish it had come from. She looked down at her plate, considering.\n\n\"I don't understand how you can justify feeding yourselves like kings,\" she mumbled. \"Beta grunts fighting the real war eat gruel from a communal 20-gallon pot. We're lucky to get a scoop of burnt white rice with it.\" She looked up. \"Yet you officers act like this is a tourist destination for fine-dining, insisting on dinnerware that would pay for medical supplies for ten goddamned years.\"\n\nHe regarded her silently.\n\n\"What did you do with the bodies?\" she asked, ultimately giving up on the bite of chicken and letting her fork fall back to her plate with a clatter. She flinched at the sound. When she looked up, his face was carved of granite, giving absolutely nothing away. She had seen this look before, any time she had asked about the day of the attack and what had happened afterward. Jaw clenched and muscles tensed, she pushed herself away from the table with a frustrated growl. \"Fine,\" she hissed. \"Fuck you too then.\"\n\nHe was towering over her before she had time to process the fact that he had moved. Ivy was quick, always had been, ever since her mischievous days as a wily youth. But fuck if she didn't have anything on the Alpha now caging her in with his hands splayed palm down on the polished oak table on either side of her. She yelped as his massive arm slid behind her and violently swept their silver-plated trays off the table and clattering to the floor, the priceless China plates shattering on impact. He forced his knee between her legs and lifted until she was perched on the smooth surface.\n\n\"What the fuck do you --\"\n\n\"Stop talking, Ivy,\" he growled, pressing a hand to the place above her heart and lowering her until her back hit the dark, polished wood. He hooked his hands behind her knees and tugged her toward him, pushing the hem of the simple, yet shamelessly expensive baby blue dress she'd chosen for today's anticipated activities of nothing up to her hips. Calloused fingertips caressed the back of her knees and slowly moved down until his fists circled her ankles with uncharacteristic tension. Stormy blue-grey eyes ensnared her own as he lifted, planting the heel of each foot at the edge of the precariously balanced table. Her legs now spread obscenely wide; her pussy, covered only by a flimsy strip of lace, was completely bare to the overwhelming intensity of his attention. Transfixed, she watched as the man lowered himself, inch by inch, until he was kneeling between her legs, his thumbs stroking soothingly over the skin of her inner ankles.\n\nShe started to push herself up, but was stopped short when his hand shot out and his palm pressed firmly into her belly. She looked down, pissed as fuck that his thick fingers stretched to nearly cover the width of her waist. Pinning her in place with nothing more than a stern look, he moved both hands to the lacy strap of her panties, hooking his thumbs around the flimsy fabric and pulling until they tore. Wrenching her eyes away from the unfolding, overwhelming scene playing out amid smashed dishes and scattered food, she snarled at the ceiling and wondered how this had become her life. Wearing delicate lace panties and fucking Alphas amidst expensive smashed china. He wouldn't have been able to do that if she'd been allowed to keep the comfortable boy short style underwear she had worn back when she had been just a simple Beta medic.\n\nAt least, not quite as fucking easily, she thought grumpily.\n\nBut of course, she hadn't been allowed to keep anything from her prior life. Her uniform, naturally, was the first thing to go, stripped right from her body after her quite unsuccessful escape back to Chid. What the uniform represented was thrown out with her fatigues; Her strength, her independence, her leadership, her skills as a medic, and her identity as a Beta Corporal. Her family was the next thing to go. Her uncle, already broken from a hard life of grief and booze, had been wrangled away from his dingy apartment in order to be interrogated here in Torrin by her supposed mate, and then released without being allowed to see her. And then there was her military family, and Kentucky...\n\nShe swallowed past the lump in her throat. She didn't want to think about Kentucky right now. Or ever again, really. Her cheeks heated with shame when the Alpha's fingers stroked through her soaked folds, a rumbling sound of satisfaction and approval emitted without regard for her humiliation when he found her body already eager to accept him. Strong, steady pressure on the inside of her thighs spread her bent legs even wider.\n\nHer breath hitched when he swept his tongue up her slit and circled the sensitive bundle of nerves he'd been expertly extracting mind-blowing pleasure from on a regular basis. Her fingers curled into fists when slick pooled between her legs in response to his low growl, the vibrations pulsing against her core. Two thick fingers pushed past her entrance, invading her like an enemy force. She squeezed her eyes shut as her inner muscles clenched around him, ready and eager for more. She hated that he knew how to play her body so well, that he was capable of dragging her past the confines of her own mind to mingle, brainless and pleasured, among unsympathetic stars.\n\nHis tongue circled her clit relentlessly as his skilled fingers moved in and out of her with torturously slow movements. She would never get used to how full he made her feel, how even his (admittedly giant-sized) fingers stretched her nearly to the point of pain. Maximum capacity. If not for the appropriately disgustingly named slick that coated her entrance and inner thighs at his will, she wouldn't be able to take him.\n\n\"I know... what you're trying to do,\" she groaned, gasping when she felt the thumb of his free hand press against the still-virgin entrance to no-mans-land. Hips wriggling in an attempt to force the offending appendage away from the hole she had absolutely no intention of allowing him into, she couldn't tell if she was relieved or disappointed when the warmth of his breath and the languorous strokes of his tongue fell away.\n\nThe distinctive sound of a buckle and zipper coming undone was enough to risk opening her eyes. She regretted her quick downward glance, her gaze immediately ripped away to settle once again on the frescoed ceiling, mundane and unsatisfying after the brief glimpse of him freeing his obscenely large cock as he dragged the back of his hand across his mouth. His sleeves had been rolled up, exposing his tanned, muscular forearms. What was it about forearms that was so goddamned sexy? Everything about this man, everything about this life, was way too fucking big.\n\nShe groaned when she felt him drag the head of his cock through her wet folds, coating his length with more of her slick as he let out another low growl. \"What am I trying to do, little Poison?\" he asked, letting out a low groan of his own as he pushed into her with a single, powerful thrust. Given her... difficult attitude as of late, he had taken to referring to her as Poison more and more, with the added little seemingly just to piss her the fuck off. She'd been proud of the nickname she had earned at her old battalion. To her, it represented her perseverance and determination. To the rest of Rico Battalion, she was not too proud to admit that it meant she was a pain in the ass they couldn't get rid of. Like poison Ivy. Coming from Hunter's mouth, saturated in a layer of amusement, it lost much of its former appeal.\n\nHe pulled back, dragging his cock almost entirely out of her, before thrusting firmly back in. She grunted, her nails digging into the wood of the table, the power of his movements pushing the very air from her lungs. His hands gripped her knees, pulling her into his forceful motions.\n\n\"Eyes, Ivy.\" The growled command registered a half second too late, her dilated pupils locking onto his before she had the chance to rebel, and once he'd captured her gaze, it was nearly impossible to look away. The way he watched her, the subtle slowing of his strokes, the altered angle of his thrusts as he bent over to cradle the side of her face where a soft brush of bruised yellow still remained, it was... unsettling. Despite her constant attempts to keep this intimate stranger at arm's length, with each day that passed, each meal spent together, each night cradled against the brick wall of his chest, the connection between them was solidified and reinforced. Like liquid steel, the bond anchored deep below her sternum stretched and flexed, but never diminished.\n\nStorm cloud eyes still locked on hers, his maneuvers became erratic and disjointed. The pair-bond pulled taut, physical discomfort urging her to move against him, the undulating motion of her hips enhanced by the way his thumb drew patient circles around her clit. Now, Ivy. Come now. \n\nHad his lips moved? She could have sworn they hadn't. Momentary confusion was swiftly swept away by mind-numbing pleasure. Freed of all coherent thought, she fell into the dark waters of bliss, her skin enveloped by the silky warmth of the pure fucking perfection of this moment. For this brief, intimate instant, no longer than a breath drawn and released, all else fell away. The only thing that mattered was him, the way he filled her up completely, warm pulses of cum pumping deep into her core as his knot expanded to lock them together.",
        "Her awareness came back slowly, little electric impulses dancing across her skin bringing her attention to the sweat moistening her brow and the Alpha lifting her off the cold table to carry her across the too-large room. Settling himself against the supple leather of that distinctly masculine chair where this whole sordid affair began, he arranged them both comfortably to wait out the time it would take for his thick knot abate. She squirmed in his arms when he started purring, her mind grasping desperately at the last of her sanity before she dropped into the pleasant oblivion that usually came after he'd fucked her, when arms rippling with muscles wrapped around her and pressed her into a sound she was biologically designed to be comforted by.\n\n\"You can't keep doing that every time I have questions,\" she told him, her words laced with lazy contempt. \"I'm not a child, I'm not an...\" she drifted off, frowning. Omega. She was about to say she wasn't an Omega. But that's exactly what she was now, wasn't it? He was treating her the way the rest of the world treated Omegas, like glorified fuck-dolls needing the protection of their Alphas against the outside world.\n\nHer eyelids drooped as she tried to focus. His fingers trilled over the marks he'd left, like some morbid souvenir of her first estrous, still swollen and angry red at the curve of her neck. His claiming marks. His touch was light, gentle even, and through the pair-bond, she felt his pride and tranquility at having made such a successful conquest of her. She knew how this would play out. He would hold her here, cradling her head against the rough fabric of his uniform, locking her to him with the bulge hooked behind her pelvic bone, until she fell asleep. Then she would wake, hours later, to the quiet sounds of one of her two silent Beta guards stepping into her room, or maybe from one of the many recurring nightmares that plagued her sleep, although she could never remember exactly what they'd been about. The Alpha would be gone, she would find herself washed and stripped naked between silken sheets, another chance to pry information from his stupidly gorgeous lips lost to this strange, mind-numbing post-sex hypnosis.\n\n\"You're being difficult.\" His tone was gruff, accusatory.\n\n\"And you're being fucking impossible,\" she growled back. \"Why did you even want me?\"\n\nHe was silent for a moment, even the soft rumble of his purr falling away as confusion and slight alarm thrummed unpleasantly from his side of the bond. \"Explain.\" It was an order, and it bothered her to no end that he thought he could give her fucking commands, but at least he had stopped petting and purring and was actually talking to her.\n\n\"I mean, it's obvious you don't want anything to do with me besides sex. You don't talk to me, you fuck me and then leave as soon as you purr me to sleep, you keep me trapped in this room like I'm your prisoner but I can't even have the satisfaction of plotting to kill you because this stupid fucking pair-bond you forced on me gives me a fucking migraine every time I consider it. You don't seem to give two shits about the fact that I just lost my best friend in the worst possible way and have no way of confronting the man responsible for ruining his mind. It's like I'm just a sperm receptacle to you. Aren't there plenty of beautiful women who would love to climb up on your Alpha dick? Even if you thought you recognized some weird matching scent on me, why wouldn't you wait to claim me to find out whether or not you even liked me?\"\n\nHer ears hurt from the quiet that settled over the room like a thick blanket of snow after she'd finished her rant. His chest heaved and the hand cradling her head clenched halfway into a fist, fingers threaded through her hair tightening until a shock of pain at her scalp stilled her distressed movements. She realized she had crossed some sort of line, broken some invisible barrier. Equal parts apprehension and relief warred for supremacy. These feelings had been building up for days. Every word had needed to be said, and breathing life into her insecurities was... liberating.\n\n\"This is what you think? You truly feel I have no interest in you outside of sex?\"\n\nShe nodded against his chest, moving her head as much as he allowed, which wasn't really much. It would have infuriated her when she had first been taken by the brute, but she was well used to the physical dominance he continually found opportunities to demonstrate. She thought he was going to say something further, but the familiar wall of silence fell between them once again, interrupted shortly after by the resumption of his purr.\n\nDisappointment wrapped a cold hand around her throat. She hadn't expected reassurances or false promises, but for just a moment, she'd thought he might have made an attempt to be honest with her, to treat her like an actual person who deserved to have her thoughts and feelings acknowledged.\n\nSoon, the rhythmic stroking of his fingers through her hair and the steady cadence of his rumbled comfort had her eyes drooping. Just as she was drifting off into sleep, he spoke again.\n\n\"Another Omega is scheduled to arrive within the week. I have arranged for her to have the adjoining room. You will have her company during the hours I need to be away.\"\n\nShe rolled her eyes. \"Great,\" she sighed. \"A new, handpicked friend. How thoughtful.\"\n\n\"She is pregnant.\"\n\nIvy paused. \"What did you just say?\" Did he really just say pregnant? Why would they be sending a pregnant Omega into a hostile country? Omega children were sacred, on par with tiny baby deities. Something had shifted, changed in the last decade. No one knew why, but Beta women had become unable to mother Omegas, even when mated to an Alpha. She'd read about different theories, including some genetic mutation that caused an incompatibility on the cellular level. A spike in miscarriages was thought to be the result of this mutation. As dynamics did not present themselves until adolescence, this theory was unable to be verified, but it was thought that, while Beta women were able to conceive Omega fetuses, they were unable to bring those pregnancies to term.\n\nOmegas, on the other hand, almost always bred more Omegas, at least when mated with an Alpha, and not every female was even able to become pregnant. With the dwindling numbers of the rarest Dynamic, children of Omegas, and by proxy, pregnant Omegas themselves, had the protection of nearly every Alpha male in Lostra. The girl would be treated like a fragile, porcelain doll.\n\nSo why the fuck was she coming here?\n\n\"Her Alpha will be the new Commanding Officer here in Torrin. He was... Unwilling to part with her during the remainder of her pregnancy. This will be good for you. You need to socialize with others of your dynamic. She will be able to answer many questions I cannot. Consider this an opportunity.\" His soothing fingers massaged the back of her neck in comforting circles.\n\nIvy wasn't stupid. He was securing her a friendship. And to be honest, the thought of someone to pass time with other than the lumbering oaf who had the shameful ability to turn her into a useless ball of writhing sex-mush, wasn't an entirely unpleasant one. But that didn't mean he could just dictate who she socialized with.\n\n\"What if I don't like her?\" she asked stubbornly.\n\n\"You haven't exactly been an excellent judge of character as of late,\" he said darkly.\n\nHe may as well have backhanded her. She sucked in a breath and reared back, wincing with the effort to free herself from the knot that had not yet abated quite enough for a comfortable decoupling. Anger, she found, could be quite the effective painkiller.\n\n\"You're not wrong, but you're a dick for saying it,\" she seethed. She squirmed the rest of the way off his lap and stormed toward the washroom that must have taken half a granite quarry to construct.\n\n\"Ivy,\" he called after her. She could hear the regret in his voice, and it was a new, strangely humanizing sound. It didn't matter. The damage was done.\n\nThe worst part was, he was right. She had been blind, and oh so fucking stupid, and Kentucky had played her for the fool she was. How had she not seen it? Had she always been such a dumb bitch? His words, still sharp as knives, echoed amongst the chaos of her despairing thoughts. She mourned the Kentucky she had known, and was ashamed it had taken getting hit over the head with a proverbial shovel before she saw him for what he truly was.\n\nHad she been so desperate to have someone besides her uncle actually care for her? She was an orphan, and let's be honest... Her father had never really been the warm and fuzzy type when he had been alive.\n\nAnd there it was, in a nutshell. Ivy had so desperately wanted the impossible, for someone to like her despite all of her flaws and the trainwreck she typically was, that she had blindly trusted the first person to treat her as more than just a stuck-up bitch who could never measure up to the real Beta male soldiers. She clearly remembered the first time her supervisor took her off a job, and told her she'd never be as good as her male counterparts.\n\nIt's not really your fault, he'd said. Females just aren't meant to stand up to the heat of battle. \n\nLittle did that prick know, not only could she stand the heat just fine, she was the motherfucking fire. She'd spent the next five years proving how wrong he'd been.\n\nKentucky had never treated her like that. He had never treated her like less. And like a dumb bitch, she had fallen for it, hook, line and sinker.\n\n\"I'm sorry,\" Hunter's gruff voice called out to her from across the marbled floor.\n\n\"For what?\" she called back over her shoulder, not giving him a chance to answer before the washroom door fell closed behind her.\n\n\"You were right,\" she whispered sadly, to no one at all.\n\n......................................................\n\nHours later, Hunter sat in a comfortable, tall back cherrywood chair situated adjacent to the wide canopied bed where his Omega slept. He had commissioned the piece of furniture just for this purpose, so he could spend what free time he allotted himself watching over her while she slept. Her dark chocolate hair, streaked with hints of gold, fanned out over the white satin pillow beneath her head. Deep in slumber, her normal intensity relaxed and smoothed out, and she seemed to find peace between the nightmares that regularly plagued her sleep.\n\nShe was remembering. Being around the other Alphas, being around him... It was bringing to the surface things she wouldn't yet acknowledge in her conscious mind.\n\nHe smoothed stray strands of hair across her forehead and tucked them behind her ear. She made a soft cooing sound and leaned into his touch. It was a gesture of the affection she refused to let herself feel for him while awake, and it crushed him as much as it pleased him.\n\nThe moment he had recognized her scent in that dingy little medical tent, the one that matched his own so completely, he'd been lost. He'd gone to Chid expecting to collect a lost Omega. What he'd found in Ivy was... Unexpected. She was astonishing. Perfect. And unquestionably his, undeniably meant for him and him alone.\n\nThere had never been a second of doubt, not a single moment of regret. Despite what she thought of herself, how she saw her strength and drive as flaws that pushed others away, he had known she belonged to him from the start. He'd fallen in love with her the moment he'd watched her fight the Torrin Alphas in the clearing of Chid forest.\n\nShe had played them like a fiddle, working the angle of damsel in distress so expertly that they hadn't for a second been prepared for what she had done. He'd been about to step in to dispatch the fuck who'd wrestled his dick from his pants when she'd brought her side arm up and shot him, quite unexpectedly, directly in the groin, blasting the ugly asshole's cock to bloody bits.\n\nHunter had been as stunned as they were. He found himself biting back a barking laugh at the sickly-sweet smile she had flashed the injured man before making her escape. Following close behind the Alphas chasing her, something about the situation playing out in front of him made him hold back for just a moment. The idiots had left their weapons back where they'd been prepared to wait their turn. She'd never been in any danger. Their clumsy pursuit, their obviously limited skill, and the fact that they apparently thought it took four Alphas to overcome one little Omega spoke volumes about their ability to defend themselves against his unseen presence. So he had stopped himself from interfering. Just long enough to watch as they boxed her in.\n\nHer face had been a painted canvas of her thoughts and emotions. He could see her trying to work out her options. He saw the brief flash of despair when she realized how hopeless her situation was, and he'd taken a step forward. Then, to his utter disbelief, the look had given way to grim determination, and that was when it'd been time to intervene. Because he knew without a doubt what would have happened next.\n\nIvy would rather have died than become their prisoner. And she was going to take a couple of broken noses with her, if she could.\n\nThe pair-bond pulls forth positive feelings for the bonded mate, and they are undeniably intense. But when he'd found her in that clearing, strong and proud and brave, and then witnessed that brief flash of vulnerability, he had not yet claimed her. And yet, he'd still felt it, that brilliant, terrifying moment when a heart first realizes it no longer beats for just one body.\n\nShe was frustrated and lonely. She didn't understand that keeping her here, with limited information and virtually no freedom, was the only way to keep her safe for the time being. Things would change soon. When the new General arrived, they would throw the celebratory dinner they had planned when she had first been brought here from Chid Forward Operating Base. Hunter and Ivy would be presented as newly pair-bonded mates, and General Maverick, Nelson's incoming replacement, and his pregnant Omega, Aella, would be introduced to the rest of the officer ranks. If she would just be patient for a little longer...\n\nHe sat straighter and looked around at the room that had been procured for her before they had even confirmed her Dynamic and placement. It had all the trappings of comfort, and it frustrated him that she seemed unable to settle. He wished she could find enjoyment in the priceless first-edition books he'd supplied when he learned she preferred more classical titles, or pleasure in the music and films he ensured she had access to.\n\nShe would be more comfortable when they returned home, with the sprawling hills of his estate providing the freedom to roam, and the endless opportunities for socialization and leisure activities he couldn't currently provide. She didn't belong here. Neither of them did.\n\nHer skills as a field medic he had witnessed in the Torrin ambush had been unparalleled, if infuriatingly self-sacrificing. The medics she led had no fucking clue what kind of leader they'd had in her, what sort of action his little spitfire was capable of. She threw herself as far into the flames as she could in order to pull lost souls out.\n\nIs that what she had done for him? She had come into his life, by miracle or by design, and had saved him from turning into a man he soon would not have readily recognized. The alluring edge of darkness that seemed to always draw him in had come so close to dragging him under, drowning him in anesthetized indifference. And then she had jumped out from literally nowhere, ready to make him fight, to make himself worthy, if not of her love and affection, then of the privilege to love her, to care for her.\n\nAnd she thought he didn't even like her? The idea was... Unfathomable.\n\nThe problem was, she lacked a general sense of purpose. Omegas taken from their families during adolescence had time to adjust, time to accept their dynamic and everything it meant. The sooner she accepted the reality of her new life, the happier she would be. He hoped things would change when Aella arrived. As it stood, he regrettably lacked the time and resources to ensure her successful transition from a Beta field medic to his pair-bonded Omega.\n\nShe had mentioned several times her desire for what she had aptly named her, \"don't-fuck-with-me-I-have-work-to-do\" clothes. He could be reasonable.\n\nStanding abruptly, he chanced one last look back at the precious creature curled up beneath the covers, and strode out of Alpha Barracks and across the way to supply and sequestering. If a different wardrobe could help convince her of how wrong she was, well... It was a small price to pay.\n\n..............................\n\nIvy's forefinger and thumb closed around the skin of the opposite shoulder, and she winced as pain receptors responded to the pinch and made short work of assuring her brain that she was, indeed, awake. While she'd slept, a miracle had happened. A tall metal garment rack sat at the entrance of the oversized dressing room, so as not to be missed, filled with a completely different wardrobe than the one she'd originally been given. Half were clothes she recognized; well-loved and well-worn outfits obviously taken from the modest apartment she had shared with two other roommates back in Lostra. Her old, faded t-shirts, pressed and hung in clear plastic bags like expensive designer pieces, along with similarly treated ripped jeans and cargo pants, made up an entire half of the wardrobe rack. Even her favorite pair of baggy sweatpants was there, hanging regally in a place of honor, between the old and the new, as if he knew it was the ultimate representation of comfort and familiarity.\n\nThe new clothes still carried brand names that she would have never been able to afford, but they were worlds apart from the skimpy wardrobe adorning the shelves and racks of the wide room beyond. Comfortable jeans, new t-shirts with the logos of her favorite rock bands on the front, workout pants that didn't cling like a second skin all fought for her immediate attention. And, to top it all off, her worn pair of steel-toed boots accentuated with fraying shoe laces sat surrounded by new sneakers and running shoes on one side, and cozy-looking slippers and surfer sandals on the other.\n\nIt was clearly a peace offering. Did that mean he was going to start lightening up, start giving her a little bit of fucking slack? The hope that bubbled up at the sight of the clothes was dangerous. It threatened crushing disappointment, and she wasn't sure it was wise to take anything as a sign that Sir Alpha was chilling out. Still...\n\nEven she could appreciate the sentiment.\n\nShe felt a wide grin spread across her face, perhaps for the first time since she'd gotten here. Better yet, they were the perfect clothes to go wreak some havoc in.\n\nTen minutes later, she stood behind the massive door leading to the hallway in torn jeans and a baggy sweatshirt. The tray he had knocked to the ground, along with the shattered china, had been cleared away and a new tray had been left in its place, one that she now clutched tightly in both hands. The Beta medic-slash-guard had the uncanny ability to sense when she was awake. Any minute now, he'd be unbolting the several locks the giant bully thought was necessary to contain her.\n\nHe had no fucking idea how many it would truly take.\n\nShe was about to make escape attempt #3. Nevermind the fact that the last two had ended in absolute disaster. She wasn't going to try anything too stupid this time. She just wanted to explore the base a little. To see for herself what the aftermath of the invasion had been.",
        "Maybe do a little reconnaissance inside of the medical building.\n\nShe felt slightly guilty for what she planned to do to the medic who had been tending to her shoulder so skillfully. She looked down, touching the place the bullet had torn through her the first time the Alpha had dragged her off Chid FOB. It would scar, but thanks to him, the scarring would be minimal. Her claiming mark, however, was another matter entirely. Apparently, Sir Alpha had forbidden the medic from tending to that monstrosity at all, apparently intending to leave the half-crescent teeth marks he had given her in the middle of her first mind-numbing estrous (gross) with as ugly a scar as possible. It was a sign of his ownership of her, his claim over his mate.\n\nBastard.\n\nShe heard the first lock unbolt, and then the second, and the third, and the fourth. She smirked. He was absolutely right to be so thorough in his entrapment. Not that it would make a lick of difference.\n\nThe Beta opened the door and stepped in, looking around the empty room. She would have liked to have seen his expression as he searched for her. No time! With a grunt, she swung the heavy silver tray just as he ducked, knocking into his shoulder instead of whacking him over the head like she had intended. He stumbled back, giving her just enough time to dart out into the ridiculously decorated hallway and slam the door shut behind her, locking him in. She was gone before he knew what hit him.\n\nWell, figuratively. He most definitely knew that she had been who had hit him, and by now, he certainly had an idea as to the what. \n\nIt wasn't like she hadn't been outside the Alpha barracks before. Twice, she had been able to sneak out, the first time on her own before she hitched a ride back to Chid FOB (before the asshole who called her his mate began locking her in), and the second time following Kentucky around like a puppy dog, straight into the trap he had set for her. She might not have the entire layout memorized, but she knew enough to get to where she wanted to go.\n\nThe base was laid out like a huge U. Alpha barracks was almost in the exact center of the connecting arm. Administrative buildings spanned all the way down the road to the right, supply buildings and the expansive medical building to the left. The northern arm of the road perpendicular to the one she stood on now was flanked by hangar bays and two runways that extended a ways out into the further reaches of the base. Her eyes were involuntarily drawn toward that area, toward the massive hangar bays, and she shivered, scenes from her abduction pulling a dark cloud over the aura of her thoughts. She squeezed her eyes shut and shook her head to rid herself of distracting thoughts. After a moment, and a few deep breaths, she looked back up to her target building.\n\nWilling herself to melt into the side of the barracks, which was more of a mansion than any of the steel painted buildings surrounding her, she scoped out the medical center directly across the way. Sir Alpha didn't want to tell her anything about the Torrins who had somehow recruited Kentucky, and then staged their ultimately unsuccessful attack? Fine. If there were any survivors, she'd find them, and make them talk. Kentucky had left her with a shit-ton of questions, and maybe she could conjure up a few answers.\n\nThe medical tent was set up like a make-shift hospital. Tent was really the wrong word for it, although she was sure it had started off as exactly that during the first years of the Torrin campaign. Now, though, the front side spanned the length of one of the massive hangar bays, and two halls broke off on either end away from the main road. Like everything else on this base (except, of course, for the Alpha barracks), the structure was coated with drudgery. Washed out army-green paint chipped in disillusioned flakes, and the lettering identifying it as Building 22 had almost completely dulled into non-existence. Looking in both directions for signs of any Alphas who might recognize her, she scooted across the way when she gave herself the all clear. They might have taken her fatigues and her guns away from her, but that didn't mean she'd forgotten all her tactical training.\n\nShe fell back down the exterior of one of the hallways and found a side door. Glancing around, she twisted the handle and snuck inside. A deep inhale brought with it an undeniable sense of tranquility as she leaned into the drab grey wall at her back. This was where she belonged. The familiar smells of antiseptic and clean linen nearly overwhelmed her. She had almost been homesick for it.\n\nTucking her long hair into her hood, she started down toward the main hallway, peeking into the sterile rooms as she walked, looking for any familiar faces among the patients laying on crisp white bedsheets. They couldn't have killed all of the Torrin Betas. And Kentucky couldn't have been the only Lostran soldier among them. Somehow, they had recruited soldiers from Chid base, and maybe some of the other satellite bases as well.\n\nShe couldn't entirely fault them for wanting to take action against that fucking asshole, General Nelson. The bastard had kept them all in a war that could have been over with who knows how long ago, deciding it was more prudent to line his own pockets with kickbacks from the companies who made the weapons, vehicles and supplies that drove the war effort. How many lives had his nebulous actions taken? Betas who could be home with their families right now were instead feeding the worms six feet under. It frustrated her too. No, it infuriated her. But that didn't excuse the damage Kentucky had done. The lives that had been lost on both sides as a result of a few well-armed, wayward soldiers' attempt to make a statement was, at best, seriously misguided. Furthermore, the idiots had tried to use her as a hostage. She'd have rather died than allow herself to be used as a pawn. Literally.\n\nThere was one other thing she'd been puzzling over. Kentucky had threatened to take her to one of the several Factories in Torrin. While a good chunk of Lostran society had clung to outdated, misogynistic attitudes, seriously limiting the roles females (of any dynamic) could take, they were still decades ahead of the way Torrin treated its female population. Since the start of the war, scattered groups of women and children, sometimes entire families, had been risking prosecution, bodily harm and death to find their way to one of Lostra's military footholds. These fugitive men and women, desperate for a better life for themselves and their daughters, were often found deep in Chid forest by one of their patrols. She and Kentucky had both shared the opinion that, if nothing else, the lives they saved while on those patrols made their presence in this hostile country tolerable, if not justifiable. Intercepted fugitives were given food, water and medicine, and were sent on to one of the several countries with programs specifically developed for these vulnerable refugees.\n\nOnce Torrin government officials caught on to what was happening right under their noses, their response was to establish several Factories throughout the country. Now, the groups that didn't make it to a Lostran base and were instead captured by military patrols of their own countrymen were taken to one of these insidious establishments, where they were imprisoned, tortured, raped, beaten, and eventually, executed. Ivy had seen the obscenely disturbing photos taken inside a Factory by an undercover operative. So had Kentucky.\n\nWhich was why it made no sense for Kentucky to have not only aligned with the enemy, but threatened to dispose of her in this appallingly cruel way. It was impossible to reconcile the Brad she had known with the dickhead that had tricked her, abducted her, threatened her, and treated her so abhorrently. She needed answers, and she was going to get them with or without Hunter's help.\n\nLost in ominous thoughts, she almost missed it. Almost. The room was so dark that she would have, if she hadn't been looking hard at the faces of sedated patients.\n\nHis face was illuminated only by the glow of the monitors and machines displaying his vitals. Multiple IV drips hung from hooks above the bed, several others ran through pumps to deliver controlled rates of fluids and medications. An intubation tube was taped to the corner of his mouth, and the rhythmic hum of a ventilator synchronized with the fall and rise of his chest.\n\n\"What the actual fuck?\"\n\nThere, laying on a thin metal cot, unconscious and in a perilously critical condition judging by the quick glance she spared at one of the screens, was the man himself.\n\nMotherfucking Kentucky.\n\n..........................................\n\nHunter paused outside the mess hall and checked his watch. He had a meeting with base officials in 30 minutes and wanted to check in on Ivy before a videoconference with General Maverick later that afternoon. This had to be quick. He pushed through the double salon-style doors and looked around.\n\nSix long tables with connected benches ran down the hall crowded with Beta soldiers, three on each side. A lengthy line snaked around from the end of the room almost all the way past the doors and to the other side of the serving window. The interior was grey and drab and for some reason, he was reminded of a parking lot after a heavy rain. Unlike the Alpha caf\u00e9 where he took his meals, there was no soft lighting, no circulating servers carrying pitchers of ice water and coffee, no gold-framed paintings adorning upkept walls. A constant undertone of bored chatter melded with the clank of cheap silverware on hard plastic dinnerplates. The sound put him on edge.\n\nMoving clockwise around the periphery of the room, Hunter found the last Beta in line, a short, pimply faced kid who couldn't have been older than eighteen with wide, thick wire-rimmed glasses. During one of their many conversations about Alpha/Beta inequities, which seemed to be Ivy's favorite topic of discussion, he had heard her refer to these glasses as BCGs. Birth Control Glasses. The memory made him chuckle under his breath. He tapped on the Beta's shoulder.\n\nThe kid spun around, his magnified eyes going wide at the sight of the broad-shouldered Alpha towering over him. \"S-sir?\" His stringy body went to attention instinctively. Hunter winced.\n\n\"At ease. Relax. Name?\"\n\n\"PFC Warren Sykes, sir.\"\n\n\"Afternoon, PFC Sykes. How long does it take to get through?\" He thrust his chin toward the rest of the line and watched the kid turn to look. It seemed to take him a moment to process the question. Hunter had that effect on people. Being around him somehow seemed to make coherent thoughts sputter and stall out like a jet engine in a freefall.\n\n\"Usually forty-five minutes, sir, unless it's a holiday or a supply day.\" Sykes chuckled. \"Those are the only days there's a chance of finding fresh food on the line.\" He paused, the color draining from his face, as he realized what he had just said, and to whom. \"Not that there's anything wrong with the food here, sir! I'm not a complainer, no sir!\" Hunter flinched at the high-pitched squeak that escaped during a word or two. What the fuck was this kid doing here? He hadn't even grown into his own balls yet. His mind snagged on something the PFC had said.\n\n\"How long does it take during holiday meals?\"\n\nSykes shrugged. \"At least three hours, sir. I usually just skip it, even if I'm not on watch. It's not really worth it for an extra helping of mystery meat.\" He glanced up cautiously. \"My squad is short two bodies anyway, so we're always limited on time. No point wasting it in line, sir.\"\n\nHunter was silent for a moment, considering. \"Thank you, PFC. Get out of line. If anyone else in your squad is here, pull them out also. I'll have lunch delivered today.\" Hunter made a mental note of the insignia on the soldier's right wrist that identified where he worked. Sykes thanked him with an enthusiastic salute and rushed off. Hunter looked around again, not surprised to see he had gained a small audience. Ignoring several wide-eyed stares, he stalked across the room to where the wall opened up to a wide window, metal grates running along the edge where trays could be slid across as food was scooped onto plates that looked about ten years past old. Hunter suspected that no amount of hot water and detergent would get rid of the greasy orange and brown stains that covered the majority of the dishes he could see.\n\nA male soldier, wearing camouflaged trousers buckled over a nondescript green t-shirt, pushed through a door at the end of the food line, carrying several containers of steaming forks and knives, seemingly fresh from the dishwasher. Hunter watched as the kid reorganized what was already out, taking several empty containers back into the kitchen. He reached out to grab a fork, cursing under his breath as the hot temperature scalded the skin of his fingers. He grabbed a plate and tray, glancing behind him at the Beta he had cut off who was staring at him in stunned, silent dismay. \"Pardon me,\" he said gruffly. The Beta tried for a shaky, unsuccessful smile, and gestured for him to go ahead.\n\nHe turned around and held out his plate to a server who was scooping what looked to be warmed cat food onto each soldier's plate. Hunter looked at it with disgust. \"What the fuck is this?\" he snarled, chiding himself when the soldier behind the line looked about ready to piss himself at the displeased, growly resonance of his tone. \"Ah... That's, uh, it's Beef stew, sir,\" the server stammered. Hunter grunted and moved down the line to receive the next scoop, laughing humorlessly at the measly portion of crispy, burned white rice a girl significantly taller than Ivy scooped onto his plate.\n\nShe wasn't kidding.\n\nHunter looked down, entirely displeased at the sight of the unsatisfying amount of sloppy mush that apparently passed for lunch in this sad place. He shoved the tray into the hands of the next Beta in line and backed up, looking around. \"You,\" he barked to the girl doling out sorry scoops of rice. She looked terrified, pale blue eyes going wide in her round face. \"Who's your commanding officer?\"\n\n\"First Lieutenant Parsons, Sir?\" she said, the upward infliction at the end turning it into more of a question than an answer. He nodded once and spun around. \"Stop serving this shit,\" he called over his shoulder. \"Parson's will personally be bringing food over from the Officer's caf\u00e9. Tomorrow, you'll have a new boss.\"\n\nAbsolute silence followed him as he stalked out, intent on locating the ill-fated Lieutenant.\n\n...................................\n\n\"WHERE IS HE?\" Ivy bellowed, tearing like a hurricane through the only place she knew to look for the lying bastard. The Alpha administrative building that housed the offices belonging to the dominate dynamic was yet another shamefully decked-out setting, with rich mahogany gracing almost every inch of every office she passed. A few officers stuck their heads out to investigate the commotion, and a Beta assistant scurried out of her way as her fingers curled into tight, angry fists. The looks on their faces would have been comical if she had stopped to think about it, but she was on a mission to find the biggest fucking liar there ever was and scratch his goddamn eyes out.\n\nKentucky was alive. Frankly, she didn't see how it could have been possible. She had seen his lifeless body riddled with bullet holes, watched as his blood saturated the pavement of the main road. She supposed it didn't matter. The only thing that mattered was that he was alive.\n\nShe didn't know if she wanted to laugh or cry. To kill him or hug him.\n\nShe was leaning toward killing him. For real, this time.\n\nAs for the other manipulative piece of shit in her life...\n\n\"DON'T even pretend you don't know who I'm talking about!\" she roared at the closest Alpha standing in the doorway to his office, a blank look of shock on his face. \"You get on the phone right now and tell that motherfucker he has some fucking explaining to do!\"\n\nThe Alpha blinked as she jabbed a finger up into his chest, straining her neck to look him straight in the eye. Apparently, he wasn't accustomed to having a female less than half his size giving him commands, and he stood there frozen, with a look that clearly said, \"Who the fuck is this crazy chick?\" She narrowed her eyes. \"I'm giving you ten seconds before I lose my goddamn shit!\" If the stunned Alpha thought she was crazy now, he had no fucking clue.\n\n\"Ivy.\" A deep voice rumbled behind her, and she spun to look up at the man of the hour. \"You,\" she seethed. \"You lied to me! After everything you put me through, you fucking lied to my face!\"\n\nHe stood stoic, looking down at her with his trademark stony expression that gave nothing away. \"I did not lie. I never told you he was dead.\"\n\n\"That's a pretty big fucking piece of information to just leave out, Hunter, isn't it?\" She bit her lip. She hated using his name. The few occasions it slipped past her typically uncensored mouth always made her cringe. It was entirely too familiar. Never mind the fact that they fucked several times a day, or that he could make her come so hard she saw double. Addressing him by his first name suggested an intimacy she wasn't quite ready to accept. \"You fucking ass --\"\n\n\"ENOUGH.\" The word was an explosion of rumbling sound, the command in his tone undeniable and absolute. It stilled her for a moment, just a moment, before she stormed toward him, totally intent on clawing her way past his lying teeth to tear out his throat. Before she could get that close, she was thwarted by a callous-roughened hand curling around her neck and squeezing lightly. Storm-cloud eyes to match the thunder of his growl seared her skin as he walked her backwards until her ass hit the wall. She clutched his forearm with both hands, scratching at the sliver of bare skin just above his wrist like a frenzied alley cat. His thumb pressed against the angry pulse of her neck, gentle but firm, as the fingers of his other hand gripped her chin to tilt her head up.\n\nShe froze. Every muscle in her body went rigid, and a cold sweat broke out across her forehead. She hadn't truly been afraid of him since those first few moments he came storming toward her that day in her medic tent, back when she thought he was intent on squashing her like a bug.\n\nBut this, this paralyzing terror? This was completely different, entirely unfamiliar, manifested from thin air. She shook violently, her breath coming in short, desperate gasps.\n\nA memory tugged at the corner of her conscious mind. Short bursts of remembered panic. A big hand wrapped around her neck, thumb pressed against the thready pulse of her carotid, squeezing tighter and tighter. The sound of a woman screaming. The smell of smoke. Menacing black eyes narrowing at her, and she couldn't breathe, couldn't see past the smoke, she was sure she was... He was going to...\n\nHunter's hand fell away, cursing under his breath as his arm snaked around her waist and lifted her to his chest. \"Shh, Ivy,\" he whispered. \"It's okay. Hush now, precious girl. I've got you.\"\n\nWhen had she started crying? She shook her head and tried to push away, but it only made him grip her tighter. He scooped his other arm behind her knees, cradling her against the brick wall of his chest like a child. Feeling ridiculous, she curled into him, tucking her head into the crook of his neck where his soothing scent flushed away the remembered (imagined?) smell of smoke.",
        "Hunter turned toward the door at the end of the suddenly, inconspicuously empty hallway and started walking. She barely noticed where they were going until he was setting her down on the velvety blue couch she preferred to the intimidatingly large bed. He crouched beside her as she stared numbly at the ceiling, brushing stray strands of hair across her sweat-drenched forehead.\n\nStrong fingers gripped her chin and turned her head to the side until she faced him. Her remembered terror was paralyzing, suffocating. She squeezed her eyes shut.\n\n\"Eyes open, Ivy,\" the giant purred, coaxing her gaze back to his with patient strokes of his thumb along her jaw and the projected serenity erupting from his chest.\n\n\"I will never harm you, Ivy,\" she heard him say, his warm fingers still stroking gently across her face.\n\n\"Do you understand me? Never. Tell me you understand that, Ivy.\" She nodded absently. \"I need your words now, baby. Tell me.\"\n\nShe opened her mouth, closed it, swallowed, opened it again. \"I understand,\" she murmured, her voice scratchy and unfamiliar. Storm cloud eyes searched her face, the entirety of his attention fixed on her. It was both unsettling and comforting. She licked her lips.\n\nApparently satisfied with whatever he found with those roaming grey eyes, he released a shaky exhale and pressed his forehead to hers, the hand curled around the back of her neck both supporting her and bringing her closer. His thumb traced soothing circles on the inside of her wrist.\n\nRising from his crouch, he leaned forward and crushed his lips to hers, the hand at her neck climbing up to thread and tangle through her chocolate-colored tresses. Releasing her wrist, his arm wrapped around her waist, fingers splayed across the expanse of her back. Chasing her tongue with his, the fingers in her hair flexed against her scalp, pulling the very breath from her lungs. He reached down and unbuttoned her jeans, tearing his lips away from hers only to tug them and her recently restored boy-short underwear off. Shifting them both until she was settled on his lap, straddling his waist, he swept his hands up her body to lift her worn sweatshirt over her head. Small, slender fingers dug into his muscled shoulders, and she found herself aching to touch bare skin, to run her hands over the landscape of his muscled torso.\n\nHow the hell did her escape attempts always end up like this? Conflicted thoughts battered an exhausted mind. She hated that he knew exactly how to drive her mad with need and lust. Her body responded to his of its own accord, without any input at all from her brain. There was no will, no choice in it at all. She could feel it, sometimes. Millenia of instinct and evolution would rise up from that place beneath her sternum, where discordant thrums punished her acts of rebellion and defiance, and pleasurable pulses rewarded her obedience and submission.\n\nDid she truly want this? If she hadn't been knotted and claimed during her very first estrous, would the rough pads of his fingertips skating across her skin, leaving a trail of goosebumps in their wake, feel as entirely intoxicating as they did in this moment? Would her nose still seek out that perfect spot on his neck, where corded muscles stretched and flexed with her exploratory licks and nips? Would the scent of him, the taste of him, leave her with shaky withdrawals every time she awoke to an empty room, naked and lonely, his seed slowly dripping down her thighs?\n\nThere was no easy answer. There was no clear villain in this story.\n\nThe man in question moved his hand between them, unbuttoning his fatigues and freeing his impossibly large cock. Every time she saw the thing, she marveled at how such an enormous appendage could fit inside her body. It was witchcraft. Had to be.\n\nThere was an urgency to his movements as he positioned her on his lap, his cock poised at her entrance, the tip of the bulbous head already stretching her open as he let out a low growl. She shuddered and closed her eyes, slipping her hands under the collar of his shirt to feel the way the muscles of his upper back flexed and bunched beneath her touch. Gipping her hips to control her movements, he thrust his pelvis up as he pulled her body down, impaling her with unapologetic force. She moaned and tried to roll her hips, frustrated when he refused to yield control.\n\nThis was the crux and the curse of the Omega. All control was to be surrendered, even when she was in a position of power. Being on top hardly mattered. She was pinned, as surely as if his body covered hers.\n\nFull, painful moments passed as he stroked one hand over her naked back, the fingers of his other hand digging into her hips to hold her in place. Her core drenched the monster appendage held infuriatingly still inside of her with copious amounts of slick, drawn forth from nothing more than the way his gentle touch roamed across her skin. Her breasts grew heavy, erect nipples tingling with excited anticipation.\n\nAs if reading her mind, he pulled her close, supporting her weight with strong hands wrapped around her waist. His mouth, warm and inviting, closed over one aching tip. A wicked tongue stroked cruel, languorous licks across the hardened bud before he sucked an alarmingly large portion of her modest A cup between his lips. Her fingers threaded through his dark, close-cropped hair. Her attempts to urge him on were ignored, a soft, playful growl reminding her who was in charge. As if she could possibly forget.\n\nAnd then he bit down.\n\nAlarmingly sharp teeth bit into the tender flesh of her areola, as thick fingers sought out the opposite hardened nipple to twist and pinch, tiny shocks of pleasured pain raising goosebumps across her skin.\n\nA warm, heavy glow nestled low in her abdomen as he continued his assault on her breasts, teeth still clamped around a throbbing tip, spreading it's heat down to her pelvis and through the thighs balanced around his thick waist. \"Hunter!\" Her cry was a foreign mixture of need and pain and, something else... Something balmy and delicious, like the taste of the summer sun on a plucked honeysuckle. She wanted to chase it, wanted to wrap it around her like a blanket, burrow into it and shut everything else out.\n\nHer Alpha responded to the cry, releasing at last her reddened, swollen breast, marked with the indents of his ownership, his claim.\n\nLater, she would reflect on this moment, paradoxically ashamed of the pride she felt at bearing his mark. She was an orphaned soldier, capable and independent and defiant, and yet... The steady, purring thrum of the bond, along with the throbbing of both wounds branding her as his, filled her with an indescribable, startling sense of tranquility. Biology, she would think to herself, tucking the entire experience away with an explanation that, even in this moment, did not entirely ring true.\n\nThe steady grip on her waist slowly relaxed as his hips sank into the soft fabric of the couch. Still buried to the hilt, his cock throbbed and twitched inside her, and there was pain there, yes. But what was pain? Essential, crucial reminders of one's own mortality, but more importantly, a reminder that she was alive. \n\nMomento Mori.\n\nRemember you are mortal. \n\nThere was a difference between pain and harm, and she instinctively trusted his earlier assurances, even as tiny shocks of discomfort spread through her body, paradoxically enhancing her pleasure.\n\nIt was not long before he began to guide her, moving her up and down his shaft with a gentle grip, urging her now to take her pleasure, a reward for accepting his pain. She started to roll her hips unhindered, lost in the ecstasy of their movements. Up, back. Down, forward. Up, back. Down forward. Up back. Down forward.\n\nAgain, and again, the steady pressure of his hands on her waist supported her as she fucked herself on his cock, rubbing against his pelvis with every smooth undulation, seeking the friction that would set her off like a firework.\n\n\"Give me your eyes, Ivy.\"\n\nHow did he do that? How did he thread such command, such dominant energy, into words that wrapped around her neck, slid down her throat, and settled uncomfortably in her gut?\n\nFucking bossy prick, she thought grumpily, fully intending to disobey the arrogant order, right up until the moment her eyes lifted and settled on his.\n\nAh, shit. Seriously, she hadn't meant to do that.\n\nOnce there, her gaze was trapped in the intensity of his storm-cloud contemplation. \"There she is,\" he murmured, just before his arms closed around her to lift and spin, planting her back against soft blue fabric as he settled himself between her thighs. Bearing his weight with an open palm by her head, his other hand was free to snake between their moving bodies, honing in on her clit like it was a fucking beacon. The ridges of his abs beneath her fingertips bunched and flexed with each forceful thrust. He was everywhere, an inexplicable and inescapable force of nature to complement his blue-grey tempest eyes. His scent saturated her skin, his breath filled her lungs, his body wrapped around hers in a protective cocoon.\n\nLost entirely to his dominating presence, it took her a moment to realize he had moved them again. He knelt between her spread thighs, cock still buried deep, pulling her up his legs as he went. Bent slightly at the waist, one of his hands cradling the back of her neck and the other continuing to strum her clit like she was a fucking guitar, she felt him push deeper, finding a place inside of her she thought for sure would kill her if he kept up the firm snap of his pelvis against hers. So focused was she on that particular spot the crown of his cock repeatedly stroked, she barely noticed how the finger on her clit slid across the inside of her thighs, catching some of the copious lubricant he had pulled forth from her molten core.\n\nSo when one of his thick fingers breached the entrance of the hole she was entirely confident provided one-way only access, she jolted and squeaked like a fucking mouse. Just for causing that sound to come out of her mouth was reason enough to snarl at him, but the way he slowly worked his digit in past the clenched ring of muscle brought a myriad of insults poised on the tip of her tongue, ready to fly like arrows, as soon as she could catch her breath. Never halting the tempo of his rut, he stroked the side of her neck in soothing patterns and released that serene rumble that never failed in its purpose of bringing her placidity, with absolutely no regard as to how inconvenient a certain relaxing of certain passages might be.\n\nToo soon, the offending appendage was entirely lodged in her ass. In. Her. Ass. No amount of snarling or scratching had slowed his steady progress, and before she had a chance to claw his eyes out, both his cock and his finger were fully seated. Overwhelmed with how completely filled she felt, her snarls became moans, and the hands that had been scratching and fighting were suddenly pulling him closer.\n\nHunter's soft chuckle drew her brief attention back to his face just as he began to move. There was amusement in his expression, and pride. \"I will have all of you, Ivy,\" he murmured softly, ducking his head for a single, gentle kiss. Just one soft brush of his lips against hers before he began moving with slow, steady thrusts of his hips.\n\nHe might as well have told her the moon would rise and the stars would shine. Here, in this moment, filled to the brim with everything that was him; his scent saturating the air filling her lungs, his cock moving in tandem with the finger now slowly fucking her tight hole, his storm cloud eyes capturing hers in a tempest of dominance and desire;it was impossible to deny. She could fight. She could scream, and scratch, and snarl, and run. Indeed, she had done all these things and more, and had no doubt she would do them again. Who would win, in the end?\n\nInevitability is a funny thing. You can race against a setting sun on the horizon, quick and fierce and determined as fuck. But the sun will always sink, drowned by the pull of the moon, leaving you abandoned in the dark.\n\nSo she said nothing. Digging her fingers into his shoulder, holding on while he worked to fill her completely, she lost herself in the moment, in the pleasure, in him. \n\nSensing her surrender, Hunter growled his approval and picked up the pace. The thick finger tunneling in and out of her ass burned, and it was sick, but nothing had ever felt as good as when they came together. Nothing even came close. \n\nThe lurid sounds of their heavy breathing, wet skin slapping against skin, echoed off the walls of the massive room. She felt every inch of his cock as he drove into her, every ridge and vein, the bulge slowly building at the base. The bond thrummed its pleased frequency, causing ripples of bliss to spread across her flesh in luxurious waves. One hand otherwise occupied between her legs, Hunter had propped himself up with a forearm planted by her head. His fingers traced the outline of her features, gently grazing across her forehead, down the bridge of her nose, over the sharp line of her jaw, finally coming to rest upon her lower lip. His expression was contemplative, stormy eyes searching hers. For what, she did not know, and yet, she found herself wondering if he would find whatever he was looking for.\n\nHer unraveling came without warning. She gasped, arching her back, pressing into him as his thumb slipped between her lips to flatten her tongue. His rhythmic thrusts became erratic and fervent, each stroke met with her own ardent movements. A shuddering breath was pulled into burning lungs as she braced herself against the crushing feeling of coming undone. He followed close behind, releasing a primal sound of conquest as he buried himself deep, locking them together as thick ropes of come flooded her core with a deluge of liquid fire. His cock was sheathed by the pulsing walls of her tight cunt, his finger stretched her burning, forbidden channel, his thumb hooked between her lips, and he was everywhere. He filled every empty space inside of her until she was sure she would burst. His teeth found the raised marks he'd left behind when he claimed her and bit down gently, his tongue flicking across her skin to taste her flesh. The man was inescapable, all-consuming, possessive.\n\nTremors began in her core and rippled through exhausted limbs. Releasing his grip on her neck with an affectionate lick over the tender marks, he flipped them until she lay sprawled across his chest, pressed close by steadfast arms. His contented purr coaxed relaxed tranquility through tense muscles, his ridiculously large hands massaging soothing circles over her shoulders and back as she caught her breath. His chin rested on top of her head as gentle fingers weaved through tousled, chocolate-colored hair, tugging lightly as he listened to her breathing even and slow.\n\n\"I know what you're doing,\" she mumbled sleepily. There was a pause, as if she was trying to remember. \"It won't work.\"\n\nHe smiled as she nuzzled into the crook of his neck with a satisfied sigh just before she fell asleep.\n\n...........................\n\nHours later, he rested in the lavish, high-backed cherrywood chair he'd dragged to the bedside as he watched over her unconscious form. A single crease had appeared on her forehead as she slept, placed there by fitful dreams and bygone fears.\n\nShe was remembering. Fuck. He thought he'd have more time. He had to fix things here and get her back to Lostra, where it was safe, where he wouldn't have to worry about her putting herself in harm's way on a fairly regular basis. He shook his head and rested his thumbs on his forehead, elbows braced on his knees, contemplating ways to thwart her next escape attempt. Every time she left this room, she created a risk he was entirely unwilling to tolerate.\n\nHunter didn't want to think about the implications of her finding the little shit Beta who'd abducted and threatened her. The traitor had been spared for questioning, but if he didn't wake up soon, his usefulness would soon outweigh the risk of keeping him alive.\n\nIvy moaned and shifted in her sleep, exposing the soft curve of her breast. He tilted his head and tugged the downy comforter up until it covered her shoulders. Tucking a stray strand of hair behind her ear, he sighed. He needed to be here more often, needed to keep a closer eye on her. Not that he'd given himself an abundance of free time lately. Even when he did have the opportunity to relax, he prefered to watch the steady rise and fall of her chest as she slept instead of getting a few hours of rest himself. He'd been trying to give her space, to let her adjust, but it was clear now that she would need his presence as she began navigating the dark recesses of her haunted memories.\n\nHe was going to fucking kill him. If it took gunning down every officer, every goddamned government official who had helped the fucker cover his tracks, he would do it. He was going to kill Vice President Hickson.\n\nIvy's father."
    ],
    "authorname": "ReckingBall",
    "tags": [
        "alpha",
        "omega",
        "beta",
        "omegaverse",
        "military",
        "non-con",
        "noncon"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/poison-ivy-ch-04-1"
}