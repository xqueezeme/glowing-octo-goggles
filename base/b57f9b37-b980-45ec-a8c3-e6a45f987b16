{
    "title": "Student Support Ch. 03",
    "pages": [
        "Sorry for the delay in this appearing. It's been busy on the work front, and this chapter didn't emerge as easily as the previous two. I'm still not entirely satisfied with it but see what you think. Comments very, very welcome.\n\n*****\n\nI was amused that as I followed the girls upstairs the conversation was not about the potential delights of the next few hours but about a scandal at their old school involving one of their teachers. Apparently he'd been asked to take early retirement on account of the bottles of vodka found in his desk. The details of this absorbed both girls even as they began taking off their clothes in my room, Maggie peeling herself out of her long, figure-hugging dress and Liz out of her usual uniform of jeans and a t-shirt. I found their matter of fact-ness of it all surprisingly exciting.\n\nIt was only when I went behind Liz to help her unhook her bra that the conversation reverted to the more immediate situation.\n\nMaggie had finished undressed and was standing watching us, a glorious vision of young womanhood, tall and curvy with those lovely full breasts and rounded hips, the small patch of fur nestling at the base of her stomach. Liz looked at her and groaned in despair.\n\n\"Look at you! You're so beautiful. God, I wish I looked like you!\"\n\n\"Don't be silly,\" said Maggie. \"You're amazing looking. Isn't she, CD?\"\n\n\"Absolutely stunning,\" I said.\n\nLiz still pouted, but her eyes wouldn't leave Maggie's body. Maggie saw her gaze and raised an eyebrow.\n\n\"It's not like you haven't seen me naked before!\"\n\n\"No... I guess not,\" said Liz shyly. \"But not like this. I didn't realise just how... well, how, well... wow.\"\n\nMaggie giggled. \"Careful Liz,\" she said. \"You're only supposed to be ten percent, remember?\"\n\nLiz blushed. \"That was supposed to be a secret!\"\n\nI was curious. \"Ten per cent?\"\n\n\"We did this test a few years ago,\" said Maggie. \"In a magazine. 'Just how bi are you?'\"\n\n\"Ah yes,\" I said. \"I think it was in Scientific American.\"\n\nShe scowled at me. \"Don't be a smart-ass. It was in one of the Charlie's mum's magazines.\"\n\n\"Definitely not Scientific American then,\" I said. It is never too late to score points against your ex-wife.\n\n\"Anyway, we all did it. And I got twenty-five percent and Liz got ten percent - or so we thought - and... well, yeah, so it was... quite interesting.\"\n\nShe'd been going to say what Charlie's score was, I realised. Did I want to know 'how bi' my daughter was? Not today, I decided.\n\nLiz looked at the floor. \"Actually... I cheated.\"\n\nMaggie looked stunned. \"You! Miss goody two-shoes! You cheated on a TEST?\"\n\n\"It was only a silly magazine!\"\n\nI sat on the bed. I was in no rush. Maggie was naked and Liz was in her underwear. If they wanted to have a chat first, I was quite happy to watch.\n\n\"So what did you actually score? Five? Or zero?\" Maggie's hand went to her mouth. \"It was zero, wasn't it? For the first time in your life you got zero on a test!\"\n\n\"What did this test actually involve?\" I asked, ever the scientist.\n\n\"Oh, we had to imagine different situations involving girls and then rate how turned on we felt.\" \n\n\"Except for the last one,\" said Liz. \"You haven't forgotten the last one, have you? We had to...\" She looked at me. \"We had to kiss each other for ten seconds and then give that a score too.\"\n\n\"Wow,\" I said. \"And I thought you were studying glacial erosion.\" Part of me was thinking about Charlie, Liz and Maggie, kissing each other solemnly and then noting down the results of how they felt.\n\nMaggie was still staring expectantly at Liz. \"So - what did you actually score? Was it zero?\"\n\nLiz hesitated. \"Forty,\" she muttered.\n\n\"FORTY! My god - you're practically a dyke!\"\n\n\"I am NOT! I love sex with men. Well - this one anyway.\" She gestured vaguely in my direction, which was pleasing.\n\n\"But...\" Maggie was in a state of mild shock. \"I can't believe you lied about it.\"\n\nLiz looked at the floor, her shoulders slumped. \"I didn't want you to feel... uncomfortable around me. I just couldn't bear that.\"\n\nMaggie's face, up until now an expression of mock disgust and anger, softened into a motherly smile.\n\n\"Oh, Liz, honey, we'd never feel uncomfortable around you. Never!\" She walked over and gave Liz a hug. The sight of the two of them holding each other like that was certainly something to linger in the mind.\n\nMaggie broke the embrace and looked wickedly at her friend. \"And you can touch my tits whenever you want.\"\n\n\"Maggie!\" Liz was in agonies of embarrassment.\n\n\"Don't tease her, Mags,\" I said. \"She's been very honest. And perhaps a few ground rules before we start might not be a bad idea. That is, if you're sure you still want to do this. Perhaps we shouldn't.\"\n\nThey both looked at me in dismay.\n\n\"Of course we should!\" said Maggie, and Liz nodded her head in firm agreement.\n\n\"Well... from the little I know about threesomes, I understand it's quite common for somebody to feel a bit left out. You know, if two of the participants have really found a rhythm or are really into each other, sometimes the third person is reduced to the role of observer, which be ... disappointing and upsetting. So we all need to be aware of that danger, and to try and limit the duration of those times...\"\n\n\"Christ professor,\" said Maggie impatiently. \"Do you want to fuck us both or not?\"\n\nI considered. \"I definitely do,\" I said.\n\n\"Then let's figure it out as we go,\" said Maggie. \"Right Liz?\" \n\n\"Yes.\"\n\n\"Shall we suck his cock?\" \n\n\"Mmm. Yes. Let's.\" \n\nAnd we were off.\n\n**\n\nThe girls settled themselves either side of me, Liz lying flat on her stomach with her head level with my groin, Maggie sitting cross-legged directly across from her. It was Maggie who took the lead, of course. She reached over, grasped my cock firmly, and began to teasingly work it up and down. Liz watched, her eyes bright.\n\n\"Has he come in your mouth yet?\" Maggie asked her.\n\nLiz nodded. \"I love it. I didn't think I'd like it... but I really did.\"\n\n\"Mmm, me too. Show me how you suck him.\"\n\nShe pointed my cock towards Liz who bent her head and gently licked the tip first. Then she ran her tongue up and down the part of the shaft that wasn't covered by Maggie's hand. Maggie adjusted her grip slightly and fed my cock into Liz's willing mouth. Maggie then started to slowly jerk me off.\n\nLiz reached for me with one of her hands and I held it. This was already beyond my wildest, dirtiest dreams, and they were only just getting started.\n\nMaggie watched, fascinated, as Liz's blonde head bobbed up and down on me.\n\n\"That's so horny,\" she breathed. \"I never thought I'd see you do something like this.\" It wasn't entirely clear if she was talking to me or Liz - not that it mattered, it could have applied to us equally.\n\nLiz sucked me for about a minute then stopped and rather shyly indicated that Maggie should take her turn. This invitation was greedily accepted and Maggie swooped down and began to suck me with an energy and gusto that was in marked contrast to Liz's gentler, more considered efforts. Liz's eyes grew wide as she watched.\n\n\"I can't believe you do it that fast,\" she said.\n\nMaggie paused and lifted her head.\n\n\"Sometimes I take it a bit slower, but I don't know, I just felt like I had to play catch up tonight. But you're right, we don't want to get him too worked up too soon. Your approach was much better.\"\n\n\"I'm not sure,\" said Liz, ever the studious one. \"Maybe he likes that better.\"\n\n\"I'm right here,\" I said. \"And both are amazing. But I think Maggie is right to worry about getting me too worked up.\"\n\n\"Particularly because at his age,\" said Maggie. \"His recovery time is not all that we might wish.\"\n\n\"He managed three times in an hour once,\" said Liz, with a touch of pride.\n\nMaggie glared in my direction. \"Have you been holding out on me?\"\n\n\"No,\" I protested. \"And I think I should point out that was extremely unusual, and should not be considered the benchmark.\"\n\nMaggie gave me a suspicious look and then resumed her sucking, a little slower this time. Liz shot me a smile and I gestured that she should come and lay beside me on the pillow. I put my arm around her and pulled her close and we both watched Maggie. Liz's breathing had become deeper and from the way she was squirming against me I knew she was becoming very aroused. I gently teased one of her nipples with my fingers and she closed her eyes.\n\n\"I'm getting so wet,\" she whispered into my ear.\n\nMaggie broke off again. \"Me too,\" she said. \"Mind you, I started getting wet just as I was getting ready to come over here. Just thinking about what we might be doing.\"\n\n\"Yes,\" said Liz, a little more diffidently. \"I was the same. But watching you do that to him... do you mind if I touch myself a bit? I'm going to go mad if I don't.\" This was directed at Maggie, who rolled her eyes.\n\n\"Go ahead! Of course. It'll be really sexy to see that.\"\n\n\"Really?\"\n\n\"Really. I've never seen another girl do it - well, not in real life.\"\n\nLiz hesitated. For all her progress, she was still much more of quiet introvert next to cheerful, outgoing Maggie.\n\n\"Go on,\" said Maggie. \"Look, I'll do it first if you want.\"\n\nMaggie proceeded to let go of my cock and scooted up the bed to lie the other side of me. I mentally suppressed a groan of disappointment, but this was hardly the moment to complain of being neglected. Then Maggie closed her eyes and began to touch herself enthusiastically, sliding first one finger and then two up and down her slit, occasionally shoving one inside herself and then the other.\n\nLiz almost seemed to stop breathing.\n\n\"Oh my god,\" she said, unable to take her eyes off her friend. \"Oh my god. Maggie... you're so beautiful.\"\n\n\"Kiss me,\" murmured Maggie. I did so, cupping one of her breasts in my hand as I did and squeezing it gently. Behind me I could feel Liz adjusting her position. When I broke the kiss I looked back and Liz was now copying her friend, her hand between her legs, eyes closed, teasing herself over and over. \n\nTo lie there between the two masturbating girls was extraordinarily arousing and absurdly touching. I watched them both for several minutes, switching my view from one to the other and then back again. Maggie preferred a more aggressive, set pattern, she was more male-like in the way she almost pounded away at herself. Liz's technique was more varied, sometimes fingers, sometimes the palm of her hand, sometimes hard, sometimes barely a light touch.\n\nMaggie was beginning to pant. \"God, I can't believe I'm going to come already.\"\n\nOn hearing this Liz's eyes opened and she rolled onto her side, her hand still between her legs but now able to see exactly what was going to happen.\n\nI stroked Maggie's head. \"Come for me, you lovely dirty girl,\" I said. \"Stick your fingers in that lovely cunt and come for me.\"\n\nMaggie writhed and moaned.\n\n\"Come for us,\" said Liz. \"Come for us, Maggie. I want to see you come. He wants to see you come. Please Maggie. We want it so badly.\"\n\nAnd with a loud cry Maggie's orgasm arrived. She tightened her legs around her hand, almost as if to prevent it from escaping.\n\n\"Oh fuck oh fuck oh fuck...\"\n\nI stroked Maggie's body as it twitched and shivered in the aftermath. Liz reached over and put her hand on top of mine so it was if the two of us were soothing Maggie. \n\nAfter a few moments Maggie's eyes opened and she smiled at us. Then she reached down and put her hand on top of Liz's, so our three hands were stacked together.\n\n\"That was a lovely start,\" she purred. \"I do believe that puts me in the lead.\"\n\n\"This isn't a competition,\" Liz told her severely. \"But that was wonderful, seeing you like that.\"\n\n\"Mmm,\" said Maggie, stretching out with an air of blissful satisfaction. \"I'll be right back with you in just one second. Why don't you two get on with something?\"\n\n\"I'll suck you some more, shall I?\" said Liz to me. I shook my head.\n\nI pushed myself down the bed so that now I was positioned between their two glorious young pussies, one on either side of me. I moved over so I was between Liz's legs. I could smell her scent.\n\n\"Yes,\" said Maggie, \"I want to see this.\"\n\nI began to nuzzle and lick Liz's thighs, moving carefully upwards as I did so. Her hips began to twist and rock of their own volition as I got closer, and I deliberately slowed down so as to draw out the anticipation.\n\n\"Oh please,\" she said. \"Oh please... just touch me.\"\n\nHer own hand began to move back down so it could do what I was refusing to, but I firmly pushed it away and gave it to Maggie to hold. Maggie took it with a smirk.\n\n\"Patience, Elizabeth,\" she told her.\n\nLiz groaned in frustration \"You're a fine one to talk.\"\n\nEver so slowly I let my tongue slide along her pussy lips, starting from the bottom and moving incrementally towards the top. Just before I reached her clit I broke away and kissed the area directly above it instead.\n\n\"Oh fuck,\" said Liz, breathlessly. \"Oh fuck, that's so fucking mean.\"\n\n\"I'm shocked,\" said Maggie. \"Your language, Lizzie. Really!\"\n\nI repeated the exercise. This time I hesitated just before reaching the top, I opened my mouth, and I blew gently onto her small little button.\n\nShe almost howled. \"Tell him to just fucking lick my clit,\" said Liz, furiously. \"Fucking lick it. Please. Fuck!\"\n\nMaggie thumped me on the shoulder. \"Stop being mean to my friend. And you,\" - this to Liz - \"when did you start talking so dirty?\"\n\nA third time my tongue traced its way up her slit. This time I followed it up with my finger just behind, probing and pushing at her lips and the enticing warm wetness that lay behind them. And this time I finally began to lick at her small, delicious clit and the area around it, circling and swirling my tongue around it while my finger continued its stroking.\n\n\"Oh god,\" said Liz. \"I can't stand it. Fuck... that's almost worse... than when you weren't... fuck, oh fuck.\"\n\nI slipped a finger fully into her. That aversion she had to things being inside her was long gone, it slipped in easily and without the slightest murmur of protest from her. I began to finger fuck her gently as I lapped away at her. As I did so I could see the hand that Maggie was holding began to tense and contract. My eyes met Maggie's.\n\n\"Yes, lick her,\" she told me. \"Keep licking her little cunt.\"\n\nAt this Liz moaned again.\n\nMy cock was rock hard and I was tempted to lift myself up and fuck Liz properly, giving myself some much-needed release at the same time. But part of me was also enchanted by this scene, my head between Liz's legs, the two friends holding hands, Maggie encouraging Liz and turning her on.\n\n\"Does she taste good?\" Maggie asked. \"Does she taste sweet? Is she going to come on your mouth, Martin?\"\n\n\"Oh fuck,\" groaned Liz. \"Oh fuck... you're driving me crazy you two...\"\n\nThe hand of Liz's that wasn't pressed into Maggie's now came up and began to play with her own nipples. Liz was surprisingly brutal with them, rougher and more aggressive with them than I would have been. She was obviously very turned on and also perhaps the pain was a way of distracting her from the building tension in her groin.\n\nOf course, she could only do one nipple at a time so her hand went back and forth between her two breasts, squeezing one of them into an angry bright red point and then going off to the other to do the same there. Maggie watched this repetition a few times and then slowly moved her own spare hand over, taking control of the breast closer to her.\n\nLiz's eyes widened as she saw her friend beginning to play with her nipple. She let out another desperate cry - this was all too much - and her legs tightened around me. It was close now, very close.\n\n\"Are you going to come now Liz?\" Maggie asked, kneading Liz's breast. \"Martin has his face in your cunt and I'm playing with your lovely little tits... Is that going to make you come? Or are you so greedy you want more?\"\n\n\"Oh... oh... I'm so fucking close...\"\n\nMy tongue never stopped. I began to lick her harder now, willing her over the edge with my tongue. My face felt drenched. My finger still worked remorselessly in and out of her.\n\nMaggie was also relentless. \"Perhaps you want a cock in your mouth as well?\"\n\n\"God oh god yes I'd like that...\"\n\nMaggie lowered her head so she could whisper into Liz's ear, though I could hear clearly what she said. \"Or would you like a juicy wet cunt on top of your face?\"\n\n\"Oh fuck Maggie oh FUCK FUCK FUCK...!\"\n\nAnd with that Liz came, a huge, juddering orgasm, the biggest I'd ever seen her have. She seemed to be on the verge of tears with the intensity of it, and both Maggie and I stopped what we were doing for fear of inadvertently adding to her apparent agony. We just watched in awe as Liz's small, perfect body rocked and bucked and writhed for what seemed like minutes, all the while accompanied by cries and whimpers.\n\nMaggie and I looked at each other. She gave me a warm smile of approval. For all her playfulness and mock jealousy, Maggie adored her friend and she couldn't have been more pleased for her.\n\n\"Oh... my... god...\" Liz was gradually coming back into consciousness. \"Oh god... I thought I was going to die, that was almost too much...\"\n\nMaggie kissed her on the forehead. I got off the bed and walked around and lay down beside her, so now Liz was in the middle. Any embarrassment on her part was gone now, she cuddled up to Maggie while simultaneously pressing herself against me, and made little noises of contentment.\n\nWe lay like there for a while. It was almost as if Maggie and I were protecting Liz who lay quietly between us as we stroked her and ran our hands carefully up and down her lovely toned body.\n\nLiz finally spoke, her breathing just about under control. \"Martin's turn next.\"\n\n\"Absolutely,\" said Maggie. \"He's been very patient. And really, we were supposed to be observing how each of us made him excited and made him come - but as usual he's been a bit slippery and ended up turning the tables.\"\n\nI raised an eyebrow at this. \"I don't think it's worked out badly for you,\" I said.\n\n\"I love it when he comes,\" said Liz dreamily. \"The way his whole body just shudders and the noises he makes...\"\n\n\"Mmm,\" said Maggie. \"And just before he comes his eyes go really crazy...\"\n\n\"Yes!\" Liz was chuckling softly. \"And he makes those little gasping noises...\"\n\nMaggie did an impression of what looked like a fish that had just flopped out of its tank. Liz seemed to find this amusing. I felt my dignity was being undermined.\n\n\"I shall go and read a book,\" I said haughtily. \"I don't think you're being very respectful.\"\n\n\"You're not going anywhere,\" said Maggie dismissively. \"We all know you're not, so stop complaining.\"\n\nI sighed. Liz lifted her head and kissed me firmly on the mouth.\n\n\"We love you,\" she said. \"Don't we Mags?\"\n\nAs an answer Maggie reached over and kissed me as well, an even longer and firmer kiss than Liz's.\n\n\"Who do you want to fuck first?\" she asked.\n\n\"God... I don't know... Either of you would be great... I wouldn't know how to choose... perhaps alphabetical order?\"\n\n\"Yay,\" said Liz, and pushed her bottom firmly into my groin to endorse this idea.\n\nMaggie pouted. \"Or oldest first? I'm three months older than Baby Liz over there.\"\n\n\"I guess that would also be fine,\" I agreed. \"Or perhaps we could toss a coin for it?\"\n\nMaggie shook her head. \"That's not very romantic, is it?\" \n\n\"I honestly can't decide,\" I said.\n\n\"I don't mind if Maggie goes first,\" said Liz. \"I just... well, I just had my fun, didn't I? So it must be Maggie's turn.\"\n\n\"Then I'll feel greedy,\" said Maggie. \"Actually... I think I've got a better idea.\"\n\nI regarded her with suspicion. \"Oh yes?\"\n\n\"Let's blindfold him,\" she said. \"And then he has to guess which of us he's fucking. In fact, not just fucking - we can do lots of things to him and he has to guess who it is each time.\"",
        "Liz was enthused. \"That's really sexy!\"\n\n\"But I won't be able to see anything,\" I protested. \"And I love looking at you both.\"\n\n\"Well, for once you're going to have to just use your imagination,\" said Maggie. \"Be a bit more open-minded, will you? Honestly, you old people are so set in your ways.\"\n\nShe looked at me challengingly. I shrugged in what I like to think was a manly way.\n\n\"Fine,\" I said. \"Blindfold away, youngster.\"\n\nMaggie dug into her bag and produced a pair of stockings, one of which she wrapped several times around my head to form a surprisingly effective blindfold.\n\n\"OK, so I think we're ready for round one. This is going to be a... taste test.\"\n\n\"Coke verses Pepsi?\"\n\n\"My pussy verses Liz's pussy. Can you tell the difference by taste alone... \"\n\nI felt the bed shift as both girls got off it. There was whispering and giggling and then Maggie's voice again.\n\n\"Ready for the first contestant?\"\n\n\"Ready,\" I said.\n\nAfter a few moments I felt the bed move again. I could hear and feel somebody positioning themselves above me, one leg either side. Then something tickled against my chin and mouth.\n\nI opened my mouth and sent my tongue out on a cautious exploratory expedition. It soon encountered a pleasing wetness, causing a small squeak from somewhere above me.\n\n\"That's my Lizzie,\" I said.\n\n\"You're supposed to not make any noise, you silly girl,\" scolded Maggie, from somewhere off to my left.\n\n\"Sorry, I'm just so sensitive there at the moment. I couldn't help it.\"\n\n\"Let's swap.\"\n\n\"Can I take the blindfold off then?\" I suggested. \"Since you're telling me who it is, I'm not sure it's serving much purpose.\"\n\n\"No. We're just getting started. I just wanted to feel your tongue on my pussy - I got quite envious of seeing Liz sitting up there.\"\n\nMore sounds and movement as Liz hopped off and Maggie hopped on.\n\n\"Right. Lick me please.\"\n\nI obliged. Maggie squeaked too.\n\n\"See what I mean!\" Liz sounded understandably triumphant.\n\n\"Mmm,\" sighed Maggie. \"There's something really sexy about a blindfolded man being forced to lick a pussy.\"\n\nI confess I found it more of a challenge than I usually did. I hadn't realised how much I depended on the power of sight when navigating myself around that familiar, enticing geography. But I like to think I did a creditable job in the circumstances. Certainly Maggie seemed happy enough with my efforts.\n\nAs I was licking her I felt a hand go around my cock and begin to massage it, slowly at first and then with increasing vigour. Then a mouth went on it, presumably Liz's, and I began to gently thrust upwards into her. The extra movement meant that my tongue also made more substantial contact with Maggie's pussy, and she groaned her appreciation.\n\n\"Such a lovely tongue,\" she said, almost to herself. \"Just perfect.\"\n\nShe continued to give a running commentary, for her own benefit as well as my own, I think. \n\n\"Your tongue in my cunt and your cock in Liz's mouth. All those times we were just down the hallway from you, all those years... who'd have known that in just a few years' time you'd be doing this to us... so wicked, so bad... I love it... yes, keep doing that...\" \n\nShe continued in that vein for another minute, grinding her pussy down into my face with ever increasing enthusiasm. Liz meanwhile sucked away with a single-minded intensity, obviously determined to be the first to get an orgasm out of me.\n\nSuddenly Maggie had a change of plan. She lifted herself off me and I found myself tonguing the air for a few ridiculous moments. Then I felt Liz's mouth disappear from me. For the first time in what seemed like hours I didn't have female flesh touching mine. As well as still being incredibly aroused - my wet cock felt about two feet long and a foot wide, though I suspected an element of exaggeration - I felt strangely alone without one of them beside me.\n\nThere was some whispering, and a chuckle. Maggie, for sure, plotting something.\n\n\"OK, proper test this time,\" she said. \"In the next thirty seconds, you're going to feel one of us get on top of you. No touching with hands. Cock only. No attempts to get us to make a noise. Then the other one will get on for a similar amount of time. Then she'll get off too. Then you have to tell us which is which.\"\n\n\"OK,\" I said. \"If only we did experiments like this at work. Time would fly by.\"\n\nThere was a pause. Perhaps they were tossing a coin. Or just checking Facebook or Instagram. Then I felt the bed move. A hand carefully took hold of my engorged cock and I jolted at the touch. The hand guided my cock upwards until I could feel it pressing against a damp opening. And then that damp opening was descending, engulfing me, hot and tight and lovely. I thought I heard a whimper but it was too soft to tell whose voice it was.\n\nThe bed began to rock as whoever it was began to raise and lower themselves on me, initially with an almost unbearable slowness but then with increasing enthusiasm. More than anything I wanted to be able to reach out and grab whichever girl it was and join with them properly, but this was their game and it was fun and the night was young. So I lay there and just let that cunt slide up and down on my cock. They were being very good at being quiet. I guessed it was probably Maggie, but I wasn't sure.\n\nAfter a minute they slowed down and then stopped. With what I hoped was some reluctance they raised themselves off me, and a few moments after that the process was repeated. The sensation was definitely different this time, tighter, and at a slightly different angle. Whoever it was also decided not to stand on ceremony but to make the most of it, and they began to use my cock quite ruthlessly, slamming themselves up and down on me and making the bed really shake. Again I had to fight the impulse to grab them and pull them down and fuck them hard and properly and relentlessly. \n\nThen that too was over. Probably just as well, as I couldn't have withstood much longer and I really wanted something more personal and intimate for my first orgasm of the evening.\n\n\"OK,\" I said, \"can I look now?\"\n\nI felt them lying down on the bed, one on either side of me. Then my blindfold was gently removed by Liz, who kissed me on the nose as I blinked up at her. She was breathing heavily, I noticed. Then I turned to Maggie on the other side and she was breathing equally heavily. No clues there.\n\n\"Well,\" said Maggie expectantly. \"Who was who?\"\n\nI pondered. I was genuinely a bit flummoxed. But the second person had definitely seemed more uninhibited.\n\n\"Liz first,\" I said. \"Then it was you, Maggie.\"\n\nThey both laughed in delight. \"WRONG!\" said Maggie, and Liz shook her head, beaming.\n\n\"No, really? So it was you, then Liz?\"\n\n\"Nope... it was me both times! The second time it was reverse cowgirl, just to try and fool you. And it worked!\"\n\n\"That's so sneaky!\" I was amused by how pleased they were with themselves with this deception. But I was even more pleased to feel Liz cuddling up to me, and to hear her whisper in my ear.\n\n\"Please can you fuck me now? Properly?\"\n\n\"I'd be delighted,\" I said.\n\nI turned and put my arms around her and she kissed me passionately. For all the fun and games we'd had, I was ready now for a proper connection and I could see she was too. Behind me, I could feel Maggie stretching out to watch us.\n\n\"Come on top of me,\" whispered Liz, and I rolled her onto her back and myself on top. She was still so wet that it was barely a matter of moments before I was ready to enter her.\n\n\"Oh yes,\" she said. \"Oh yes I want that so much.\"\n\nI pushed myself into her and she groaned with delight. She felt tight and perfect and I closed my eyes to savour the pure animal rightness of what we were doing.\n\n\"Fuck her,\" murmured Maggie beside me, her breathing almost as heavy as ours. \"Fuck her like that.\"\n\nI began to thrust gently into Liz and she wrapped her arms around my back to pull me as close as she could get me. She glued her mouth to mine and I could feel her making small noises of pleasure every time I pushed myself fully into her. I was totally lost to her. Nothing else mattered except sliding my cock in and out of her and making this girl feel as much pleasure as was in my power to give her. \n\nShe grew wetter and wetter as our fucking continued. I was vaguely aware of Maggie beside us. From the sounds she was making she was playing with herself.\n\nSuddenly I wanted Liz on top. I wanted to be able to hold her and see her better. I reached my arms underneath her and twisted around on the bed, able to hold Liz in position as I rearranged us. Liz herself hardly seemed to notice, her lips and tongue still exploring mine and her small, slim hips still twitching back and forth in time with my thrusts.\n\n\"Are you going to come in her?\" said Maggie beside me. \"Are you going to come in Liz's little cunt?\"\n\nLiz groaned deep in her throat at that.\n\n\"Will I have to lick the come out of her cunt?\" Another, more desperate groan from Liz. I may have made one as well. Maggie's sexy, dirty voice was taking us both ever closer.\n\n\"Or are you going to pull out and come in my mouth instead?\"\n\nI didn't know. I just hammered away at Liz, becoming more selfish now, desperate to get myself over the finishing line and to break this almost unbearable tension that was building inside me.\n\n\"Liz will have to kiss me and get your come that way,\" cooed Maggie.\n\nAt that Liz broke away from her prolonged deep kissing of me and gasped aloud to her friend.\n\n\"Oh god Maggie you're driving me mad...\"\n\nMaggie leaned forward and kissed her on the cheek. It wasn't quite a sexy kiss but nor was it a gentle kiss between friends. The boundaries between them were shifting, whether just temporarily or for good it was hard to say.\n\n\"Do you like it when I talk dirty to you Lizzie?\"\n\n\"Oh fuck, I really do...\"\n\n\"Do you like it when I talk about sharing come with you... do you like it when I talk about licking your cunt...?\"\n\nAnd with that Liz convulsed and came again, her body suddenly rigid against mine. I tried to keep thrusting into her but she lifted her body to keep herself just out of reach, my cock still just inside her but unable to go any deeper. I was in agony, but clearly Liz was in no position to pay attention to me just at that moment.\n\n\"Maggie,\" I said desperately. \"Maggie, suck me, please... I'm so close...\"\n\nMaggie is a good girl to have around in a crisis. Without a moment's hesitation she scuttled down the bed, gently moved Liz forward and took me deep in her mouth, at the same time wrapping a firm confident hand around my cock that immediately began stroking me off. Within a few seconds I was coming and she sucked greedily at the torrents of come that I felt sure must be gushing out of me.\n\nIt took Liz and I some minutes before we regained the power of speech. Liz looked at me, then at Maggie, then at me again. Her expression was of a kind of reverent awe that I hadn't seen before.\n\nMaggie, calmer and looking more than a little smug, looked questioningly at Liz. There were still traces of come around her mouth and I guessed more than a little remaining in her mouth. Liz nodded, and Maggie kissed her on the lips, tentatively at first but then as she sensed Liz's responsiveness with more passion and confidence. I watched the two of them kiss and taste my come and each other's juices. It was tender and warm and sexy.\n\nMaggie finally broke the kiss. \"I tasted you on his cock,\" she said quietly. \"I liked having the taste of both of you there.\"\n\nLiz kissed her again, a confident, sexy kiss. She was a different girl from the scared little mouse of just a few days ago. \"I want to do the same with you,\" she said. \"I want to do exactly what you did, take him in my mouth after he's been fucking you.\"\n\nThey both looked at me, then at my admittedly rather limp cock, lying damply across my stomach with some after-come trickling from the tip.\n\n\"But perhaps not quite yet,\" said Liz, with a note of prim disappointment, and we all three of us laughed.\n\nThen the two of them rearranged themselves, one on each side of me, one arm around me and the other free so they could take it in turns to gently stroke and massage my cock and balls and, indeed, each other's hands. \n\nAnd then, in the manner of girls and women the world over, they returned to chatting about college gossip about the teacher with the vodka bottles. I closed my eyes and listened to them and enjoyed the touch of their fingers on me and counted myself one of the luckiest men alive.\n\n**\n\nI'd like to claim a recovery time of ten minutes. In fact it was probably closer to twenty, but the girls didn't seem to mind.\n\n\"Well hello,\" said Maggie, who happened to be the one idly stroking my cock at the time. \"I believe some life may be returning down there.\"\n\nLiz looked hopefully down at my groin, then gave me an appreciative kiss.\n\n\"Good boy,\" she said. \"Lovely, clever, good boy.\"\n\n\"So, what now?\" I asked, with an air of mock weariness. \"I need your order for the type of act you'd like, who with, and in what position. And for how long, of course.\"\n\nMaggie and Liz almost spoke at the same time. Liz indicated that Maggie should go ahead and be the one to talk, but Maggie shook her head.\n\n\"You go,\" she said. \"Tell us what you'd like, Lizzie.\"\n\n\"Well,\" she said, a little shyly. \"I know what I'd like, but I'd also like Martin to just do what he likes to.\"\n\nShe looked at me. \"I mean, hopefully this is pretty exciting for you. I know it is for us. So - if you have any fantasies you've always dreamt about, I'm sure Maggie and I would be happy to... well, you know.\"\n\nI reached over and stroked her cheek. \n\n\"Liz,\" I said. \"I'm already incredibly fortunate, more fortunate than I deserve, having you two with me. But thank you. All I really want to do now is make love to you both, slowly and gently, and then curl up and go to sleep and wake up with you two beside me in the morning.\"\n\nI looked at Maggie. \"I hope that's not too tame for you?\"\n\nShe shook her head.\n\n\"Sounds pretty good,\" she said. \"And besides, I've got a feeling this isn't going to be the last time we do this. Part of me thought I'd get a bit jealous seeing you with Liz, but I'm really not.\"\n\n\"Me neither,\" said Liz, and they smiled at each other across me.\n\n\"Mind you,\" said Maggie, \"I do want him to myself some times. And I'm sure you do too.\"\n\n\"Yes,\" said Liz. \"We'll need to work out a proper rota.\" \n\nBoth girls laughed at the idea of that, though part of me thought that sounded very sensible. But then, men love lists, don't they? And a list that indicated whether I was to have sex with the dark, busty teenager or the slim blonde teenager, or both of them - that was a list I would definitely like to see on my fridge.\n\nAll this time the girls had continued to stroke and tease my cock, and this talk was doing nothing to reduce the tension that was building inside it. Liz noticed how hard I'd become and gestured at Maggie.\n\n\"Make love to Maggie,\" she said. \"Pretend it's just the two of you alone, and I'll watch.\"\n\nMaggie's eyes sparkled at the idea. I kissed Liz on the nose and then turned my attention to her friend. She lay on the bed beneath me, hair spread on the pillow, and I reached down and kissed her forcefully on the lips. Her taste was an intoxicating mixture of the three of us. She made a contented noise deep in her throat and pulled me closer, her tongue slithering into my mouth.\n\nWith her other hand she took a firm hold of my cock and began to work up and down the shaft. If she wanted to reassure herself I was hard enough for what she had planned I think her mind was soon at rest.\n\n\"Fuck me from behind,\" she murmured.\n\nI moved away to give her room to turn around and move into that classic, kneeling, submissive position. Then I arranged myself behind and dragged my cock up and down her slit, feeling it moisten and open as my tip teased against it.\n\n\"Oh yes,\" she said. \"Just push it in. Please.\"\n\nI thrust forward and closed my eyes as the sensation of being inside that warm, tight, welcoming cunt run through me. I took a firm hold of her hips, one hand each side, and began to slide in and out of her. Maggie began to gasp with each thrust, and I could see her fingers tightening around the sheets as her own pleasure began to build.\n\n\"Fuck me harder,\" she said. \"Just use me and fuck me.\"\n\nI increased the intensity and aggression behind each stroke and she moaned with pleasure.\n\nAs so often seems to happen with that position, Maggie gradually began to lower herself down onto the bed, and I followed with her. Within a short space of time she was lying flat on the bed, legs out wide, and I was lying between them, my cock still working away in and out of her cunt. I put my hands over hers as I fucked her.\n\n\"You're all mine now,\" I told her. \"You're pinned to the bed and there's nothing you can do but lie there as I fuck you and fuck you and fuck you.\"\n\n\"Oh god yes...\"\n\n\"I can fuck you hard...\" This was emphasised with an extra hard shove of my hips, taking myself deep into her so my balls pushed firmly into her buttocks.\n\n\"Or I can tease you...\" This time I slowly withdrew, almost completely, just the tip of my cock remaining inside her. I waited there for her response.\n\n\"No... please... put it back...\"\n\n\"You want me to keep fucking you?\"\n\n\"Yes... please... put it back...\"\n\nI paused for a few seconds, just to prolong her agony, then slid firmly back into her and resumed my energetic thrusting. Maggie seemed barely capable of speech now, just gasping and moaning into the pillow.\n\nI looked across at Liz who was following this with an open mouth, her tongue occasionally licking her lips. Her breathing was heavy and her hand was between her legs.\n\nShe saw me looking and returned my gaze, almost accusing.\n\n\"It's so sexy... you're so cruel to her... but you love her... and she loves it...\"\n\nSuddenly I wanted Liz involved, and I remembered what she'd said earlier.\n\nI pulled completely out of Maggie - there was an anguished howl from the pillow - and I looked at Liz.\n\n\"Suck me,\" I said. \"Suck Maggie's juices off me.\"\n\nShe only hesitated for a moment. Then she moved and bent her head down as I straightened up slightly and took my glistening cock in her mouth.\n\n\"She's tasting your cunt,\" I said to Maggie.\n\n\"I need your cock back,\" she moaned. \"Liz, be quick!\"\n\nLiz smiled even as she sucked. She took a few more appreciative sucks then reluctantly surrendered it.\n\n\"Push it back inside Maggie,\" I told her.\n\nAgain, a moment of brief hesitation. Then her hand was around my cock and she was pushing it back it down into the gap between Maggie's legs.\n\n\"Slide it up and down,\" I said. I began to gently push my hips back and forth to press myself forward into Maggie. My cock found the entrance and Liz looked at me for confirmation. I nodded, she withdrew her hand, and I plunged deep back into Maggie.\n\n\"Oh fuck.\" This was slightly muffled from Maggie , who had her face buried in the pillow.\n\nLiz lingered beside me, watching as I slid in and out. She put her hands out and gently dragged her fingers along the other girl's back. She leaned forward, her eyes bright, and kissed me on the mouth.\n\n\"Go behind me,\" I said.\n\nShe moved behind me and put her arms around my chest. As I thrust back and forth she moved with me, almost like she was helping me. I could feel her hard nipples pushing into my back.\n\n\"Fuck her,\" she breathed. \"We're fucking her together.\"\n\nI could feel Maggie's pussy tightening around me. She was still gasping and whimpering into the pillow.\n\n\"She's going to come soon,\" I told Liz. \"She's going to come soon and then you can suck her juices off me again.\"\n\nLiz reached down and pushed a hand through my legs, cupping my balls and stroking them.",
        "\"Then you're going to give us some more of your come,\" she said.\n\nI nodded my assent. I was sandwiched between these two beautiful girls, my cock buried in the one lying face down on the bed and the other behind me. I wasn't going to last long. I needed to get Maggie over the edge, and soon.\n\nI increased the pace and energy of my thrusts. Maggie moaned her appreciation - or so I hoped, it was hard to tell - and I saw her fingers clenching and unclenching.\n\nSuddenly Maggie lifted her head from the pillow.\n\n\"Liz,\" she said urgently, \"come here. Please!\"\n\nLiz moved from her position behind me and went around to the front. Maggie hurriedly slid down the bed a little, pushing me back as she did so, leaving more space for Liz to sit in front of her at the top of the bed. Liz's lovely little pussy was now just a few inches from Maggie's face.\n\n\"Play with yourself,\" gasped Maggie. \"Play with yourself right there while he fucks me.\"\n\nLiz reached down with one hand and spread herself and pushed a finger into her pussy, leaning back against the headboard as she did so. Her other hand reached for Maggie's and held it tight.\n\nI continued hammering into Maggie. As I did so she began to move almost imperceptibly further and further up the bed, pushed along by my efforts. And perhaps - it was hard to tell - just perhaps Liz was also pulling her closer with her hand. The end result was certainly that Maggie's head was moving closer and closer to Liz's cunt, which was still being frantically fingered.\n\nI didn't want to make the girls do anything they didn't want to do but both of them seemed to be absolutely comfortable with how things were. And the way they'd kissed each other earlier... and the fact that Maggie had asked Liz to move there... and the fact that Liz had scored quite highly on that ridiculous test... \n\nAnd the fact I really wanted to see it.\n\n\"Lick her cunt, Maggie,\" I ordered. \"Lick Liz's little cunt and make her come the same time you do.\"\n\nLiz's eyes widened but she didn't move. And she didn't stop playing with herself. She just stared as Maggie made one final movement up the bed and lowered herself into Liz's groin.\n\nLiz moaned loudly. \"Oh fucking Christ Maggie!\"\n\nMy view was mainly obscured, of course, and I had my own efforts to concentrate on, but I could tell from the movement of her head that Maggie was enthusiastically setting about her task.\n\nLiz came almost immediately, her hips rising slightly up off the bed and taking Maggie's head with her. Then when she came back down she wrapped her legs around Maggie's back, locking her in position - I don't think she knew what she was doing, it was all completely automatic and instinctive. And then I felt Maggie groan in front of me, her body began to shake, and her own orgasm began.\n\nInevitably, mine followed too. I spurted deep into Maggie, the feeling so intense that the room swam before my eyes. For several, long, long seconds I was aware of nothing but the fiery pleasure that consumed me. I don't even remember pulling out and moving, but I must have because when I opened my eyes I was lying down on the bed, a warm armful of girl on either side of me, my chest still heaving slightly.\n\n**\n\nNone of us spoke for a long time. Then Liz sighed happily, stretched out happily, and kissed my cheek.\n\n\"We're so lucky,\" she said.\n\nI nodded.\n\nOn my other side, Maggie was silent. Unusually so.\n\n\"Hey over there,\" I said to her. \"Everything to your satisfaction?\"\n\n\"Of course,\" she said. \"That was... amazing.\"\n\nBut there was something in her voice that made me lift my head and look at her. I felt Liz do the same. Maggie glanced at Liz, and I saw a questioning look pass between them.\n\n\"What?\" I said. \"Come, you can tell me anything. Was that thing at the end... did that make you uncomfortable?\"\n\n\"No,\" said Maggie. \"Not at all... it was really exciting and sexy. Was it OK for you Liz?\"\n\nLiz nodded, a little shyly. \"I loved it. Thank you.\"\n\n\"So - what then?\"\n\n\"It can wait,\" said Maggie. \"I don't want to... everything's perfect now, I don't want to change anything.\"\n\n\"Nothing will change,\" I said. \"Out with it.\"\n\n\"It's Charlie,\" said Liz softly. \"Isn't it Mags?\"\n\nMaggie nodded.\n\nCharlie. My daughter.\n\n\"You feel guilty about not telling her about this?\"\n\n\"That's sort of it,\" said Maggie.\n\nThere was a pause.\n\n\"Except... not really,\" said Liz.\n\nAnother pause. Maggie took a deep breath.\n\n\"You have to promise not to freak out,\" she said.\n\nI seemed to remember her saying that before.\n\nOh fuck, I thought. What's happening now?"
    ],
    "authorname": "AnnasFriend",
    "tags": [
        "older man",
        "younger girls",
        "mature",
        "group sex",
        "group"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/student-support-ch-03"
}