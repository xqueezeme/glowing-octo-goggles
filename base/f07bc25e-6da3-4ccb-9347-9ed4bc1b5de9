{
    "title": "Tore Up From the Floor Up",
    "pages": [
        "Thanks for the comments!\n\nI fixed a few errors, but mostly I restructured the story to make it more catchy from the beginning. I think people haven't been reading it because it didn't start engagingly enough. \n\n*\n\nI first saw my Dream Girl doing 85 on the Pacific Coast Highway, heading northbound out of Malibu. We were both driving red convertibles. I was behind the wheel of my a brand new Maserati Gran Turismo. She was behind the wheel of a cherry 1965 Mustang. I first noticed her long black hair, being whipped up in the air like a halo around her head. I thought, \"Could this be...?\" \n\nI found a break in oncoming traffic, and pulled alongside her to take a look at her face. Fuck, what a beauty! She was Asian, with prominent cheekbones and hooded eyes. I could tell she was tall, probably taller than me, from the size of her long beautiful arms and elegant hands. She was wearing a low cut, white blouse, which the wind was whipping about, exposing, in little flashes, the milky curvature of her large breasts and the lacy black bra that was barely able to contain them. She looked over at me through her smoky pink sunglasses. She saw the look in my eyes. She knew I was a Dog. She smiled a crooked little smile, winked and stepped on the gas, leaving me in the dust. She was a total tease. I put the pedal to the metal to catch up with her. \n\nPCH is a damned twisty road, so it got pretty hairy pretty quickly, but I wasn't about to let her get away. I knew this woman. I'd dreamed about her for years, and here she was, five car lengths ahead of me and accelerating like a motherfucker! She drove like a demon, swerving around those curves like a grand prix driver, and zigzagging past the slow pokes. I pulled along side her again, as soon as I matched her speed (somewhere in the neighborhood of 95) and shouted my name. She shouted hers. We couldn't really hear each other, but that didn't matter. We had already made a plan with our eyes. We were going to head back to Malibu, stop at the first hotel and fuck until sunset the next day.\n\nShe did a 180 on the highway, like something out of a movie, and started heading back to town. I'd never done that kind of maneuver before, outside of a parking lot, but I had to or she might have lost me. Soon I was chasing her tail, like The Dog I am. I even tried to pass her to demonstrate my top Dog status. But she sped up with me, not letting me get by. She had a beautiful, wicked smile on her face. We went faster and faster. The needle passed 110. \n\nThen that damned wide load truck came around the bend. It was a house on a big trailer, and even though there were flashing lights all over it, we barely had time to react. I guess that's why those damned speed limit signs are everywhere. Live and learn. We both swerved outward, passing that house-on-wheels with only inches to spare. But we overcompensated on our rebound and swerved together. Our cars clashed and our fenders entwined in a shrieking screaming sound. We swerved and spun and skidded and squealed in a ballet of twisted metal that played out in horrific slo-mo. Her car broke free of mine and headed straight as an arrow toward the glittering blue pacific. She smashed through the guardrail and did a Knievel over the cliff, leaving PCH in her rearview. \n\nHer hot red Mustang made a crazy arc through the air, trying to flip ass over front as it dove toward the briny blue. Apparently she didn't believe in seat belts, because she flew out of her seat, arms opening like wings as if she were trying to ride the warm ocean breeze to safety. But gravity wouldn't let her off the hook. I marveled at the beauty of her long legs. Yeah, she was tall, just like my Dream Girl, and nicely fed. This girl definitely had some junk in the trunk. She was wearing a short skirt that accentuated the voluptuous curves of her body. I marveled at her beauty, even as she fell, tumbling through a flock of sea gulls, into the roaring waves below. She splashed thirty feet beyond where her Mustang met its watery end. \n\nI guess I should have kept my eyes on the road, instead of turning my head to follow my Dream Girl's terrifying trajectory. My anti-lock brakes kept me from skidding as I slowed, but my wheel clipped a rock on the side of the road, and the world turned upside down, then right side up, then backside front and every which way, until my sexy Maserati crunched to a stop against a great big chunk of the good old planet Earth. \n\nI sat there in shock, bleeding and immobile in the twisted wreckage. Breathing the weird gasses hissing out of my deflating airbags. I was absolutely certain that the future Mrs. Dog was dead. It caused a pain in my heart worse than the grinding of my broken bones, worse than the pain in my arms, which were cracked and bent in the most alarming directions. I watched in my spider-webbed rearview as several Samaritans scrambled down the cliff to fish her out of the sea. It took a while for the Jaws of Life to set me free, so I was still there when the EMT's hoisted my Dream Girl up the cliff, strapped to a gurney. She looked like a rag doll, but the paramedics said she was alive. Barely.\n\nOur race continued, only this time we were in the back of ambulances, trying to beat each other to the hospital. I got my first close look at her, lying in a gurney next to her in the emergency room. She was a total mess. A fuckin' disaster, bruised and bloody from head to toe. Tore up from the floor up. Both of her legs and one arm were broken in numerous places. Her face was swollen and unrecognizable. There was a long bloody gash on her cheek. But her worst injuries were internal. \n\nI was looking at her when she died.\n\n\u2022\n\nThey call me The Dog. With good reason. I'm a tail chaser, straight up. I make no bones about it. I am all about the pussy. I'll do anything to get it. I love the women who hold their keys tight, but I also love them easy. Hey, I'm not particular. Women, all sizes, shapes and colors, that's what I crave, day and night, dreaming, waking and working. \n\nI have only three rules: she's got to be over 18 (I card), free of STD's (I take their word for it), but most of all, she's got to be into The Dog. Believe it or not, there are more than a few women out there who meet these exacting specifications. It's only a matter of sniffing them out. It ain't easy, but if you're always on the hunt, you never go hungry.\n\nI don't want to leave the impression that The Dog can't love. I've searched my whole life for my Dream Girl. I've always known she was out there, somewhere, looking for me. She's of Asian extraction, but not small and skinny like most Asians. No, she's a few inches taller than me and an athlete, though not a professional one. Maybe she plays Tennis or Volleyball, but it's definitely something competitive. She's strong, but you wouldn't know it to look at her, because she's a little on the chubby side. Not flabby. Let's just say she's got a bit of wiggle in her walk, if you know what I mean. She has a healthy appetite for food, as well as for sex.\n\nShe has long, straight black hair and her breasts are all natural, beautifully shaped, and larger than my hands. Her skin is the color of milk and soft as silk. And although her face glows with a radiance that speaks of innocence, you can see by the sparkle in her dark brown eyes that she's a dog, through and through. Like me. She thinks about sex all the time and ain't too particular about who she beds, just so long as they're clean and eager. She's into guys, girls and groups, and has done enough of the truly freaky shit to know it's not for her. But she loves it up the ass. She's the kind of girl that makes men's dicks hard just walking past them on the street. She's just that fucking hot. But she's not vain. She was just born that way, after all. She says it's nothing to be proud of. She's balled nerds and jocks, repairmen and stock brokers, fatties and skinnies, grandsons and grandfathers, and she didn't care if they were in her league or not, because life is short and if you can't give pleasure to your fellow man (or woman) then what the fuck's the point? \n\nMy Dream Girl is looking for the right man, for whom she'll feel love and loyalty, but who won't tie her down. She hasn't got a jealous bone in her body. And when she finds me, she'll love me with all her heart, even while she's watching me screw a stranger. Because she's happy that I'm the kind of man that will love her with all my heart while she screws you. \n\nYeah, I know. The impossible dream. But there she was, lying on the gurney next to me, dead as a doornail.\n\nI heard the terrible long beep her heart monitor made when she gave up the ghost, and all at once the whole emergency room staff poured into the room to save her. They rolled in the crash cart, were shouting out commands and shooting her up with drugs, just like on T.V. Then without so much as a how de do, one of the nurses cut her shirt and bra off with a big pair of scissors and I laid my eyes on the most beautiful set of ta-tas I'd ever seen. Those lovely globes were just the right size, just the right shape: paper white, with pale brown areolas and lovely little nipples. Fuck. That tall Asian cutie was built like a brick house. When they shocked her with the paddles to start her heart again, her breasts jumped and jiggled. They were all natural, baby. My cock began to harden immediately. \n\nOkay, I know, she was technically dead and I'm a sick man to have been checking her out at a time like that, but I have to remind you, this was my Dream Girl. I'd been in major lust with her from the moment our eyes first met, and it was breaking my heart to see her die. It was a mother fucking tragedy! I had to admire her while I could. Soon they'd cover her up with a bloodstained white cloth and wheel her to the morgue. I'd never get to touch that perfect body, nibble those beautiful boobs, or hear her orgasmic groans as I slammed my cock into her perfect pussy. It was total pitsville, man. \n\nI was also high as a kite from the pain meds, so give me a break. \n\nI wept like a baby, if you can believe it. A baby with a raging boner. But when I heard the beeps of her resurrected heartbeat, I tried to should out in joy. I couldn't though; because of the tube they'd shoved down my throat to keep me breathing. I could feel no pain when I realized she was probably going to survive, and Dog that I am, I savored the idea that maybe I'd get a chance to give her that orgasm after all.\n\nThen I passed out. \n\nThe next few weeks were a living hell, I shit you not. \n\nIn addition to several broken ribs, both my arms were fuuuucked uuuuuup. I mean, serious fractures. They'd mummified me in one of those upper body casts where the arms are supported in front of you on metal posts. My legs were okay, but scratched up pretty bad. They hurt like hell if I moved them even a tiny bit. I was as helpless as a baby. At first they gave me a catheter, since I wouldn't be able to piss on my own, but I got an infection in my piss hole, so they had to take out the tube and help me pee by hand. The first time it hurt like hell thanks to the infection. But by the third time, the pain was gone, and here I was, trussed up and helpless, with a twenty something fresh-faced Latina nurse holding my cock in her gloved hand. I tried not to let it happen. I may be The Dog, but I know the difference between appropriate and inappropriate. But my cock apparently never got the memo, because it got hard, and fast! I guess nurses are used to this kind of thing, because she pretended not to notice. She tried to let go of my stiffening rod, but it just stood straight up. I'd have pissed all over creation. So she had no choice but to bend my wooden cock sideways over my thigh and hold it, aiming into the piss jug, or whatever they call it.\n\nAny guy will tell you it's hard to piss with a hard on, so she had to hold my dick for quite a long time. She kept saying, \"maybe later\", but I'd say, \"No it's coming. Just hold on. Sorry...\" \n\nAll I could feel was her fingers on my dick and I kept thinking, 'If she fondles my cock much longer I'm gonna shoot my wad in that jug!' But I finally pissed, though I was so turned on by then that it totally felt like I was coming anyway. I gave a long, drawn out groan of pleasure the whole time it took to piss. She didn't like that. Not at all. When it was over and she'd covered up my raging boner with the blanket, I tried to apologize, but she wouldn't look at me. \n\nI thought it was just because she was so cute. I was wrong. After that, every time a nurse touched me to piss, I got a hard on. Every single time. It didn't matter if the nurse was old or young, male or female. It was intensely embarrassing when it was a dude holding me. But I must admit I took perverse pleasure whenever the young Latina nurse got the job. Fuck, she was so sexy; I got a hard on every time she came into the room just to take my temperature! \n\nWhat can I tell you? The Dog's cock is a pampered pooch. He felt neglected. \n\nAnd here's the part of the story where I tell you how one day the hot Latina, so turned on by my 7 inches of steel, suddenly bent over and blew me until I shot my wad down her hot little Latina throat. But that ain't what happened. I hate to admit it, but she wasn't into The Dog. Actually, touching The Dog's dick kinda grossed her out.\n\nThat wasn't my only frustration. I tried to find out about my Dream Girl's health, but since I didn't know her name, nobody on the staff would give me any useful information. Maybe they took my boners personally. I don't know. All they would tell me was that she was alive and in recovery. I would lay in bed hour after hour, day after day, just thinking about her... picturing her face, her flowing hair, her pale breasts bouncing as they brought her back to life. And my cock would get hard, tenting my hospital gown for anyone passing by to see. I could hear the nurses snickering. There was nothing I could do. I couldn't touch it. It wanted to come! I'd never been so frustrated in my life! It would just throb and throb, hard as a bar of iron. Absolute torture! I tried to get relief by calling my regular fuck buddies. They liked The Dog and all, but not enough to visit me in the hospital. Bitches.\n\nEventually I could stand to move my legs and the nurses encouraged me to start walking. I'm sure they wanted to speed my recovery along so I could start pissing on my own again. It certainly made it easier now that I could sit up on the edge of the bed. All they had to do now was lift my hospital gown and push the plastic jug over my hardening dick. They didn't have to touch me there anymore. But I missed it because it was the only contact my cock got, other than the occasional sponge bath.\n\nI was motivated to get back on my feet because I knew that the future Mrs. Dog was out there somewhere. I had to find her before they carted her away to another hospital and I lost her forever. Walking was pretty painful. With my arms in that insane cast, the IV cart hooked to my arm, and my chest wrapped up to let my broken ribs heal, I had to move slowly and carefully. As soon as I was able, I began to make shuffling excursions around my floor of the hospital, secretly searching for my Dream Girl. She was here somewhere, I just knew it. I just had to sniff her out! Every chance I got I would creep about the hallways, my dick at half-mast, peering into open doors, desperate to find her. The nurses tried to restrict my little jaunts, because frankly, I was creeping everyone out. So I began to get up in the middle of the night to continue my search. I discovered the best time to hunt was between 3 and 6 am, when there was only one nurse on watch in each floor of the hospital.\n\nEventually I started to think maybe she'd been transferred to another hospital. But finally, about a week into my search, I found her in a different wing, on a higher floor. My heart leapt with joy when I realized my frustrating search was over! I only recognized her in the darkness by her long black hair, but that's all I needed. I'd know that hair anywhere! Her face was covered with tubes and a breathing mask. I shuffled in and closed the door behind me, bumping it shut with my encased arms. She was in traction. Her legs were set in casts and hoisted up by some sort of medieval torture device. The leg casts ended a few inches below her ass. The blanket was between her legs, so I could see the side of her ass and waist glowing pale and silky in the dimly lit room. It was obvious she wasn't wearing any underwear. I got an instant erection. Her right arm was in a cast, also supported by cables, but her left arm was only slightly bruised. It was curved beautifully, clutching a blanket to her chest.\n\nI walked up close and looked down at her mask-covered face. One eye was swollen closed, totally black and blue, the other closed in sleep. I could see her mouth in the mask. Goddamn, she had some gorgeous lips. I bent to look closer, but something in my fucked up ribcage rubbed the wrong way, giving me a shot of pain that made me grunt.\n\nHer one good eye popped open and she looked at me. \n\n\"Hi\", I said.\n\nShe moved her lips, trying to say something. I noticed a bandage wrapped around her throat. I guess the accident had fucked up her throat too. \n\n\"Sorry about the accident. It was all my fault.\"\n\nShe just looked at me with that one amazing eye. It was almond shaped, with long eyelashes and dark brown corneas. A fire was burning in that eye that could never be extinguished.\n\n\"I should let you sleep. I just wanted you to tell you... I think you're the most beautiful, sexy woman I've ever seen in my whole fuckin' life. I chased you on the highway... I'll chase you anywhere. Coz I think we're made for each other.\" She chuckled and immediately winced with pain. It was a pretty crazy thing to say to a tore-up woman in traction. But I meant it. \n\nI saw something in her eye that gave me a thrill. I knew that look. I'd seen it the very first time our eyes met.\n\nShe unfolded her hand from her chest and pulled the blanket down, slowly, seductively, revealing her body clad in nothing but a hospital gown. She threw the blanket to the floor. I could see nipples poking up through the thin blue fabric. She winked with her good eye. Then I heard her chuckle some more. I laughed too, and boy, did it hurt. \n\nShe reached up and put her hand on my cheek, her IV tubes almost getting entangled on my rigid arms. I saw a wicked little smile curl up in the corners of her mouth. She moved her hand slowly down my neck and chest, drawing her fingers across me like a spell. It was a beautiful movement, graceful and dance like. Her hand kept going down, slowly, very slowly. Down my chest, down my belly. All the while her good eye was looking in my eyes. She knew what she'd find down there without even looking. She wrapped her hand around my hard shaft and squeezed it through my hospital gown. By her grin, I could tell she was pleased by my size. Not too big, not too small. Juuuuuust right! I arched my pelvis forward in pleasure at her touch. She swiveled her hand around and kept going down, her fingers trailing along my leg, until they reached the bottom of the gown. Then she put her hand under and ran it slowly up the inside of my thigh. Up, up, up until her warm hand was cupping my balls like a baby bird. I groaned as she massaged me there gently and expertly. \n\nThen she wrapped her fingers around my naked cock. She tried to stroke me lightly, but the fabric of my gown kept getting tangled in her fingers and IV tube. She grabbed a handful of the fabric and tried to fold it out of the way, but gravity is a stubborn thing. So she began to tug at my hospital gown with mounting lustful desperation. She grabbed my ass and turned me around and reached up to untie the strings on the back. But my arms were up in the casts, so there was no way to take the gown off easily. She couldn't reach the ties on top of my shoulders and I couldn't bend over far enough. But she kept yanking on it until the straps ripped free and my gown fell to the floor. The effort accidentally pulled my IV tubes out but I didn't give a fuck. ",
        "So there I was, standing naked over her, clothed only in the wrapping around my rib cage and my arm cast. She looked me over, and she liked what she saw. Okay, I'm a bit on the hairy side and my belly isn't as tight as it once was, and I hadn't shaved my face or my balls in weeks. But her good eye was riveted to my cock. The Dog's best feature, or so I'm told. She licked her lips in desire. I stepped closer and she ran her fingertips gracefully around my belly and thighs, touching everything except my throbbing manhood. She was teasing me and I could see by the gleam in her eye that she was enjoying it.\n\nYeah, this was my Dream Girl. I fell in love with her right then and I didn't even know her name. Finally she took pity on me and grabbed my cock and gave it a powerful little squeeze. But she let go and put her hand up hear my face, palm up. It took me a second or four to realize what she wanted. I hawked a gob of spit in her hand. She grabbed my cock again, and started stroking me with my spit, her hands moving with a deft motion that told me she was a master masturbator. I felt like singing, but all I could do was groan. She kept it up for a few minutes and before I knew it, I felt my long delayed orgasm coming on. She saw it coming, so she let go of me, and the feeling passed. She wasn't ready to let me come just yet. \n\nShe grabbed her blanket and tossed it to the floor. Fuck, what a body! Tall and curvy, just like I'd always imagined. She untied the string at the neck of her gown, the only thing holding it on, then pulled the fabric down, revealing her naked body a bit at a time. Fuck! She was bruised and scratched and crisscrossed with bandages, but it was still the best body I'd ever seen. The fact is, The Dog is not a handsome man. I guess I should have mentioned that before. This woman was wayyyyyyy out of my league in the looks department, but I could tell from the twinkle in her eye that she didn't think that way. She was attracted to the very thing in me that other women hated. The Dog!\n\nShe ran her hand lusciously over her naked breasts, making them roll ever so delicately about. Then her hand went down her pouty belly to her immaculate pussy. A perfect little fan of black pubic hair grew up and outward above the delicate pink lips. They were gently wavy hairs, not the tight little curls a lot of ladies have. She put her hand between her legs and started fingering her clit. I stepped forward, and rubbed the tip of my cock up and down her left arm, feeling the pure silk of her skin. She masturbated herself for our mutual pleasure. She moaned and shook, and had a little orgasm, although I could tell the effort was also causing her some pain. \n\nI wanted to touch her beautiful breasts, but of course I couldn't. She saw me looking, and touched her tits on my behalf. She squeezed them and pinched her nipples. It was freakishly erotic! I put a knee up on the bed and rubbed my cock back and forth across the top of her breast. I could see her mouth inside that mask, she wanted to suck me so bad, but it was more important for her to breathe, I guess. She started masturbating herself again while I stimulated her nipple with my cock. She began to shake and shimmy, giving herself an orgasm. \n\nWhen she was done, she brought her hand up, dripping wet with her pussy juice and wrapped her fingers around my cock, using her wetness to masturbate me. And I mean it was dripping wet, not just moist... soaked! She had one juicy pussy! And jerking me with her pussy juice was the next best thing to actually being inside her. Her fingers looked delicate, but they were strong. She masturbated me with increasing speed and tightness and in less than a minute I was on the brink of exploding again. And I wanted to, desperately. I wanted to see my hot white jizz shoot across her bruised belly. But she was no amateur. She knew I was about to blow, so she eased off, taking me right to the edge, but not beyond. The little tease! \n\nShe let me cool off for a minute, batting her eye at me playfully.\n\n\"Come on,\" I said. \"Jerk me, you little tease. Oh god, please, you're killin' me here!\"\n\nThen she got another handful of juice from her pussy and began stroking me again, this time so the head of my cock was tickling and teasing her left nipple. It didn't take long for me to start to moan in anticipation of ejaculation, but she saw it coming and eased off again. \n\nI looked at her, tears filling my eyes, and begged her, \"Please let me come!\" She giggled, and decided to take pity on me. She began to stroke me harder, with longer strokes than before, tightening on the upstroke, as if she were milking a cow. Holy mother of Christ, it felt great! She jerked me until the come exploded out of me, gushing into her nipple and shooting across the chasm between her bouncing breasts to land on the other nipple. I was never much of a distance shooter, but she had a way of squeezing on the upstroke that shot the jizz out of me with more power than I'd ever achieved on my own. She jerked four more shots out of me, each of which was more impressive in quantity and distance than the first. She had magic hands, I shit you not! And, oh, man, her tits looked great decorated with The Dog's come like that. \n\nShe touched her pussy again, and brought her fingers up to my mouth and let me taste her. I licked her fingers lasciviously. Then she gestured, pointing first at my face, then emphatically down at her pussy. I knew what she wanted. I wanted it to, but I had no idea how to manage it. I went around to the foot of the bed and tried to get between her legs, but they were hanging too close together and my arm casts were in the way. She began to gesture to something behind me. It was a series of buttons, which controlled various pulleys and positions on the crazy overhead traction contraption. She had apparently made a study of it, because she used one-handed charades to walk me through how to adjust the various pulleys by pushing the buttons with my elbows. It took a while because we had to be careful not to hurt her, but finally, her legs were positioned as wide apart as she could stand. She looked uncomfortable but she gave me a thumbs up. I also raised her butt up a little above the bed, so I could push the bed closer to the wall allowing me to shuffle a little closer to her glistening wet pussy. It helped that I figured out how to fold down the footboard on the bed, because it would have been in the way. Then I leaned forward, my ribcage shrieking with pain, my encased arms only barely fitting under her encased legs. I contorted myself until my face was just inches away from her glorious pussy. Holding my position there was like torture, but it was worth it!\n\nI didn't immediately dive in. Taking a cue from how she'd teased me earlier, I gently kissed the tender skin on her inner thighs for a while. She groaned in pleasure and ran her fingers through my hair. Then I slowly worked my way to her pussy. Finally, our lips met. She was much fresher than I expected. I mean, laying around all day in a hospital bed can make a person kind of funky. But she must have had a sponge bath right before bedtime. She was fucking delicious! My cock started getting hard instantaneously. I pushed my tongue deep inside her and my nose pressed into her silky tuft of fur. There was absolutely no stubble on her pussy lips, and since there's no way she was getting bikini waxes in the hospital, I knew she was naturally hairless where it counted! I ran my tongue gently up to her clitoris, then down again. I did this rhythmically for probably five minutes, slowly working her into a rolling orgasm which sent sweet little jets of pussy juice into my mouth. Yeah, she was a squirter. That wasn't on my Dream Girl checklist, but it was definitely a bonus. I love squirters. Soon my whole face was dripping with her come. \n\nHer orgasm came just in time too. The pain in my back and ribs had become too much to bear, and I slowly, painfully returned to a standing position. I looked down at her spread legs and watched her breasts roll magically as she continued having little spasms in a long drawn out bout of post-orgasmic ecstasy. She started fingering herself again, to extend her pleasure and work herself down gently. I normally would have done that, but I had lasted in that position as long as I could. I took the time to catch my breath and let the pain subside. \n\nShe opened her eye and we looked at each other for a while as her body continued to have little aftershocks of her orgasm. She gestured to me and I came close to her. She reached out and felt my cock. It was as hard as ever. Her eyelid fluttered with desire! Then with a gesture, she told me to look at her mouth. She moved her lips slowly, carefully mouthing, \"Fuck me. FUCK ME NOW!\"\n\nI had absolutely no idea how I would manage it, but I decided to die trying if necessary. I attempted to roll the bed entirely out from under her, but it just wouldn't go sideways no matter how hard I pushed or kicked. So with my feet I pulled the bed down where it had been originally, but a little farther. It was my intention to crawl up onto the foot of the bed and kneel between her legs. It was almost impossible. I almost fell over a few times. I could have been sad if I'd ended up helplessly laying on my back like a turtle. But I didn't. I scaled that bed like it was Mount Everest! I was intensely proud of myself for having achieved this monumental task. \n\nAnd now my cock was pointed right at her seriously perfect pussy. I began to gently tease her with the tip of my cock. I did this for a good long while until she was moaning and whimpering for me to show her some mercy. Then, with one smooth motion, I drove my shaft deep into her tight pussy. She gave out a shriek of pleasure and/or pain. God, we couldn't have been a more perfect fit! Fully immersed, I could feel the head of my cock pressing against the back wall of her vagina. I began to fuck her with long slow gentle strokes. Normally I would have pounded her good and hard, but that would have killed both of us, literally. Hell, even the way I was doing it made my ribs hurt like hell. But my cock felt great in her warm, wet embrace.\n\nThat's when I heard a little squeak. One of the cables slipped somewhere. Her butt lowered down slowly and my cock popped out of her. She kept going down until her butt was back on the bed. Her legs were still wide open, but she was out of reach.\n\nThen she beckoned me forward desperately. I should have gone back to the controls and readjusted the cables, but I was desperate too. The Dog's cock sometimes makes decisions all by himself. So I began to lean forward... to tip forward, to be more precise. I would have fallen on top of her but she put her hand on my chest and controlled my descent until my hard forearms came to rest on either side of her. It was incredibly painful. It felt like the knitting bones in my arms were about to crack apart. But I didn't give a shit. I was right over her beautiful breasts now. She arched her back so I could reach them. I savored several minutes of sucking, licking and nibbling her come drenched tits. She rubbed her breasts back and forth across my face, smearing my come all over my face. I could tell that it turned her on. I loved the feel of her nipples on my tongue and between my lips. I could have done that for hours, but soon she grabbed a handful of my hair and started tugging me upward. \n\nI walked my arms forward painfully; feeling alarming little snaps and pops inside. I groaned in pain, but I was a determined Dog. I finally brought my cock into position. I couldn't see between our legs, but somehow I found her gaping wet pussy with the first thrust and we were off and running again. I thrust myself into her a little harder now, than before. Reckless of my own health, of her health. It was insane, and painful beyond belief. It felt like my ribs were cracking apart, and my arms were splitting into pieces. I'm sure her legs felt even worse. But it was worth it. Every stroke was a triumph of lust. I could feel her gyrating her hips to meet my thrusts, so I knew I wasn't doing it too hard for her. She wanted me. I wanted her. We we fucked each other desperately, groaning in pleasure and whimpering in agony. \n\nNeither of us cared that I wasn't wearing a condom. We were in love, or something goddamned close to it. As I fucked her, I could feel that she was loosening and tightening her pussy in a way that felt like she was trying to draw the come out of me. Fuck, this girl did Kiegel exercises! She was serious about sex! \n\nWe fucked in this position for a solid forty-five minutes. Well, that's what it felt like anyway. All I know is that she came a number of times in painful little spasms. I felt her juices splash across my balls, and drip down my legs every time. I counted five orgasms... but who's counting? Finally my own orgasm began to bloom deep in my balls, and exploded out of me, deep into my Dream Girl's hot pussy. It was a shattering orgasm, accompanied by shrieking pain in my arms, legs, spine and ribs. Now I know what S&M people are talking about. The pain made the pleasure more intense than anything I'd ever felt before. I kept bucking and fucking for several more minutes, riding a wave of pain and pleasure until The Dog's cock, finally satisfied, began to soften inside her. \n\nWe looked at each other for a long time, gasping in agony, throbbing in pain.\n\nI had to say something, \"I love you. I don't even know your name, but I am totally in love with you.\"\n\nShe smiled, and mouthed, \"I love you too, hot shot.\"\n\nWe laughed, and then shrieked with the pain of our laughter. \n\nThen I tried to get up. But I couldn't. She tried to push me back up to my knees, but I was just too top heavy and she was too weak. I tried to crawl forward, but her legs were held up too high and too close together for me to get through.\n\nI finally gave up. \"I guess you should push the nurse's button. There's nothing else we can do.\" She nodded, but she didn't push the button.\n\n\"Or,\" I said, \"we can stay this way until The Dog gets hard again.\"\n\nShe grinned. She gave me a wink with her good eye. The Dog's cock grew hard and slipped into her as it grew. It was made to be inside her.\n\n\"They can pry us apart in the morning,\" I said. \n\nShe smiled wide, her beautiful teeth shining in the darkness. \n\nGod, but she's a Dog! "
    ],
    "authorname": "cbsummers",
    "tags": [
        "hospital",
        "car wreck",
        "perfect woman",
        "pain",
        "true love",
        "nurse",
        "traction"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/tore-up-from-the-floor-up"
}