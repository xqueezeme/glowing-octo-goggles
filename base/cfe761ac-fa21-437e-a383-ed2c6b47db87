{
    "title": "Selfish Love",
    "pages": [
        "Author's Note:\n\nAs a single mom, Kelsie Bauer is used to doing it all herself... or so she thinks. When her daughter begs for a Christmas present that Kelsie can't bring herself to say no to, she finds help from someone she absolutely shouldn't: her best friend's younger brother, twenty-one year old Jimmy.\n\nNormally, I would split a story this long up into separate postings, but as this marks my 50th posting on Literotica, I wanted to post the whole thing together. This is a long, novel-length story posted in its entirety and while there are erotic scenes, they take some time to get to. It features a balance of humour and angst, a lot of drama, and one or two Airplane! references.\n\nSelfish Love is a standalone story that builds on the events from No Strings Attached, a story written by myself and Bebop3, but any necessary backstory is explained within the text of Selfish Love. This story features discussions of toxic relationships and abortion. No descriptive or graphic violence occurs in the text.\n\n**\n\nI don't want a lot for Christmas<br>There is just one thing I need... \n\n**\n\n<p align=\"center\">One</p>\n\n\"I'm not going.\"\n\nSighing, I wordlessly held my hand out for the skimpy black bikini and fire-engine-red one-piece swimsuit Em had just yanked out of her suitcase.\n\n\"No,\" she said stubbornly. \"This is a terrible idea, Kelsie. I don't even know if these fit. I'm not going. I'm calling Alex right now to tell him I'm not going.\"\n\nIt would have been a lot more convincing had she not just stood there, her knuckles turning white as she clutched the swimsuits, instead of calling her boyfriend to tell him she wasn't going on the trip to Mexico he'd been planning to surprise her with for ages.\n\nNot that she knew she was going to Mexico. I knew she was going to Mexico because Alex had zero concept of the amount of things that would have to happen in order for him to pull his whole plan off without a hitch.\n\n\"Put it on,\" I ordered, nodding at the one she had left in her hands.\n\n\"What?\"\n\n\"Put it on,\" I repeated. \"You're so concerned about them not fitting, give it a try.\"\n\nIt took another few minutes, but she finally conceded and stripped down. I would've looked away to give her some privacy, but the way things were with me and Em, that would have been weird. She'd seen--and photographed--me mostly naked a bunch of times. As for her, well. She used to do some \"modelling\" of the explicit variety, which made sense. Em was born gorgeous and she'd die gorgeous. Long, lithe, and tall, she was covered in tattoos and had thick black hair, sparkling bright eyes, and unfairly perky tits considering how big they were.\n\nI, on the other hand, had a dump-truck ass that would give the Pixar moms a run for their money. I also had dump-truck hips that had never quite gone back to normal after I'd given birth, a poochy stomach, and slightly below-average tits. I didn't know if mom-bod was a thing, but if it was, that was what I had, only my mom-bod was contrasted by the vibrant coloured hair and multiple piercings I'd gotten after my divorce.\n\nI mean, I figured if I was gonna be a divorced single mom escaping from a quiet life under the thumb of a mature church-going counsellor who wanted little more than a trophy he could sometimes scream at, I might as well go all out.\n\nAnyway, the point was that despite her being a literal model and me looking more like I'd been sculpted out of modelling clay, neither Em nor I were particularly modest around each other. So I stood there with my arms folded as she stripped down and squirmed her way into the bright red one-piece.\n\n\"Hmm.\" I toyed with the piercing in my lip as I studied her. \"You're right. That's going to be a problem.\"\n\nShe sighed heavily. \"See, I told you I--\"\n\n\"Alex isn't going to be able to keep his hands off you. I mean, you'll never even make it to the beach when he sees you in that. It's just going to be pound town, twenty-four-seven, and then why did he even bother with all the fancy vacation stuff? He could've booked a room at the Motel Six.\"\n\nShe rolled her eyes and snorted, but her face lightened a bit. \"You're so full of shit.\"\n\nI watched as she turned to look in the full-length mirror, twisting and evaluating the way the stretchy fabric sat on her chest. After a moment, she frowned.\n\n\"Wait,\" she said. \"The beach?\"\n\n\"Or the pool, or the hot tub, or whatever,\" I said smoothly. \"And if there isn't one of those, you can just wear it in the hotel bathroom so Alex knows that if he wants to see all of this next time, you expect a beach.\"\n\n\"You have a lot of confidence there'll be a next time,\" she muttered. \"I'm still not even sold on this time.\"\n\nI passed her the black bikini to try on. \"What's this really about?\"\n\nEven though she hesitated, she didn't do me the discourtesy of pretending she didn't know what I meant. \"I don't know if I'm ready to be away from Leia.\"\n\nFucking finally. I sighed and sat on the edge of her bed.\n\nOf course it was about Leia--Em's daughter, and my daughter Baylee's best friend. Spitfires, the both of them, but Leia was far more talented at wrapping people around her sticky little fingers than Baylee was. Leia was charming and seemed to melt hearts simply by blinking her big doe-eyes. Baylee, on the other hand, was more likely to get in trouble for being one of those girls who was \"too much.\" She was going to be too loud, too outspoken, too dramatic, too unabashedly herself.\n\nI might not ever win Mom-Of-The-Year, but if my daughter turned out to be too much, I'd consider my parenting to be a resounding success.\n\nBut of course, that would be when she was a bit older. Right now, Baylee couldn't seem to tell the difference between standing up for herself and talking back to me, and I couldn't seem to go through a single day without claiming I was going to sell her to a zoo.\n\nNot that I'd ever say that to Baylee, of course. Just to Em. That's what best friends are for: making fun of your parenting skills and commiserating when you were wondering how in the hell your DNA came up with that squalling turd of a child.\n\nPersonally, I blamed Baylee's dad, but that was mostly because he was a squalling turd of a man.\n\nIn any case, I'd told Em time and time again that she could make fun of me all she wanted, but that I was going to do the same damn thing to her once Leia realized how easily she was able to get people to bend to her every whim and start using it to her advantage. And honestly, if Em kept pulling this \"Call it off, I'm not going\" bullshit, I was going to spill the beans to Leia and get her to convince her mom to go to Mexico for her week-long fuckfest with Alex.\n\n\"Okay, look at it this way,\" I said. \"The next time Leia starts learning a new song on her guitar and Baylee demands to sing along and Pepper's in the background whimpering because the girls are singing in tones only dogs can hear and you think to yourself, 'Man, I wish I could get away from it all for five minutes of peace,' ask yourself again if you're ready to be away from Leia.\"\n\nThat made her laugh. \"Okay, fair.\"\n\n\"I've watched her a million times before. I have my own kid. I know what I'm doing.\" I folded my arms. \"Are you questioning my mad parenting skills, Em? Because if so, I'm not sharing my flask of whiskey with you next time we have to shiver through a soccer game.\"\n\n\"You also work,\" she pointed out.\n\n\"Jimmy already agreed to watch Leia when I can't. I'm still trying to convince him he should take Baylee.\"\n\n\"I'm sure he'll watch both girls if you want him to.\"\n\n\"No, I mean permanently. I even offered a friends-and-family discount. Way better price than I'd give to the zoo. But for some reason he keeps saying he'll give her back after.\"\n\nEm snorted back another laugh.\n\n\"You can call Leia every day if you want to, but keep in mind that means you're going to be subjecting yourself to an impromptu over-the-phone concert. But Em, she's going to be fine.\" I nodded towards the bikini she was still holding. \"Try that one on. See if it's a little less likely to give Alex a four-hour erection before he even takes his Viagra.\"\n\n\"He doesn't need Viagra,\" she huffed, but peeled the red bathing suit off.\n\nShe managed to pull the black bikini on. I declared it even worse than the red one piece, telling her we were going to have to go to Target and find her one of those old-lady swim dresses so she wouldn't give Alex a heart attack.\n\n\"You're such a bitch,\" she scolded, laughing as she untied the straps of her bikini.\n\n\"It's not my fault you look like that,\" I replied airily. \"Nor is it my fault that Alex is going to lose his mind and fuck you until he--\"\n\nAnd of course, that was the moment someone flung Em's bedroom door open.\n\n\"Is Pepper's ball in here? The girls want to--oh, Jesus, Em!\"\n\n\"Ever heard of knocking?\" Em asked wryly, not managing to cover her tits before Jimmy's face turned red.\n\n\"How the fuck was I supposed to know you were naked?\" he muttered.\n\n\"Oh, I don't know.\" Em pulled her t-shirt on. \"I mean, you could assume that I'm naked at all times when the door is closed and then you'd never have this problem.\"\n\n\"Kelsie was in here with you,\" he replied. \"Why would I think 'oh, my sister and her best friend are in her room, better double check that neither of them are naked before I go in'?\"\n\n\"Prior experience?\" I suggested helpfully.\n\nWell, helpful in that it made me cackle with laughter as he glanced up, a haughty look of annoyance unable to mask the embarrassment on his face. His scowl had been his trademark, once upon a time. With dark eyes and high cheekbones, that glare had a dual purpose of intimidation and dampening the panties of any girl attracted to the rebellious type of rock-star-esque guy who would piss off her dad.\n\nOnly in Jimmy's case, he sort of was a rock star. Or at least, he had been, back when that scowl had been his trademark. It felt weird to say \"back when\" about a guy who was just recently old enough to legally buy alcohol for himself, but his star had burned bright and fast. Before turning twenty-one, he'd had a record deal and more money than he knew what to do with. Which meant, of course, that he drank, smoked, and snorted a lot of that money away while the people clinging to his star power blew so much smoke up his ass that his head started to swell.\n\nHe was barely twenty when it all came crashing down. That combination of money and drugs and the inherent sense of invincible immortality that boys that age seem to have pissed off the wrong person: Alex.\n\nYes, that Alex.\n\nBut it all ended up working out, in the end. Alex wanted to bang Em, Em wanted to bang Alex, Jimmy ended up with a decent job at Alex's studio with him as a mentor... what's a little career destruction by a pseudo-father-figure who wants to bang your mother-figure a.k.a your sister who practically raised you?\n\nEm was eight years older than Jimmy. She'd left home when he was only ten, but when he got kicked out a few years later, she took him in, even though she was a single mom with a toddler who was trying to get her shit together. As a photographer, she made decent money, but around the time Leia started kindergarten and with an eighteen-year-old brother-slash-pseudo-son-wannabe-rock-star who was on the verge of a big break, things had started to get tight.\n\nLuckily, that was around the time my ex-husband began paying his child support, so Baylee and I were able to move into a small townhouse across the street from another single mom and her daughter who happened to be in Baylee's new kindergarten class. The girls declared themselves best friends the moment they met, Em and I declared ourselves best friends as soon as we realized both of us were sneaking Bailey's into our coffee cups during morning drop-off, and the rest, as they say, was history.\n\n\"Will you help me build up my portfolio?\" she asked me while we were watching the girls at the park a couple of weeks after we'd met.\n\n\"Sure,\" I said. \"If you really think my face is going to sell people on your portrait skills.\"\n\n\"Gorgeous as it is, it's not your face that I want to take pictures of.\"\n\nI snorted and took a swig of wine out of my travel mug as the girls played on the monkey bars. \"What, you want pictures of my ass or something?\"\n\n\"Yep.\"\n\nI laughed, but she was serious.\n\n\"I want to start doing boudoir photos. I know what it's like in front of the camera and how to pose people to make them look their best. There's good money in it. But I need some photos of someone other than me.\"\n\n\"And you think my dump truck ass is going to sell people on your boudoir photos when you've got photos of you posted right next to it?\" I asked in disbelief.\n\n\"You have a nice ass. So yes.\"\n\nI scoffed. \"Sure, Em. Why not? I guess it'll be a testament to your skill if you can make me look sexy.\"\n\nAnd I mean, to her credit, I did look damn good in them.\n\nThe girls were invited to a classmate's birthday party that weekend, so while they were getting hopped up on cake and goody bags, Em and I went back to her place to take the photos.\n\nWe took them in her bedroom with sheer curtains drawn across the windows to filter the natural light and give it a soft, sensual feel. I was kneeling on her bed, holding an oversized men's shirt taut against my breasts so the hypothetical person who would eventually look at these photos could see the hint of my nipple piercings poking through the fabric. And I mean, I wasn't uncomfortable or anything; I might have had a dump truck ass and a poochy stomach, but that didn't mean I felt the need to hide those things from the world.\n\nSo there I was, mostly naked, legs spread, doing my best to pretend I was some pretty young thing and not a mom in her early thirties with stretch marks and pink hair and one or two more wrinkles than I was willing to acknowledge in the corners of my eyes. And there Em was, contorted around the edge of her bed with her camera pressed to her eye, trying to pretend like we weren't in a small, cramped bedroom as she took my photo.\n\nAnd then a skinny, dark-haired eighteen-year-old threw the bedroom door open and barrelled in.\n\n\"Hey Em, guess what I--\" The man looked at me and his eyes nearly popped out of his skull before he looked at Em with a wild expression on his face. \"What the fuck?!\"\n\n\"Jimmy!\" Em exclaimed, which answered my unasked question of who the fuck he was. \"What are you doing here? I thought you were touring the rest of the month.\"\n\n\"I am, but I--\" He couldn't seem to help himself from looking back at me, red splotches dusting his high cheekbones. \"What the fuck?\"\n\nI pressed my lips together, amused. \"As much as I love having someone look at me half-naked and repeatedly wonder 'what the fuck,' perhaps you and Em could go have this conversation somewhere where I'm not continually distracting you with my what-the-fuck body?\"\n\nHis face went even redder. \"No, that's not--I mean, you're not... You're not what-the-fuck, the situation is what-the-fuck. You... you're...\" His eyes flicked helplessly down to my tits and I was pretty sure almost every drop of blood in his body was concentrated in his face. \"You're naked.\"\n\n\"That's very observant. Thank you.\"\n\nHe cleared his throat. \"And hot, I mean. You're naked and hot. Or wait, no. Pretty. You're... uh--\"\n\n\"Jimmy,\" Em said flatly.\n\n\"--like you're pretty but I mean that in a respectful way and--\"\n\n\"Jimmy,\" she said again.\n\n\"What?\" he asked.\n\n\"Shut up.\" She pointed to the door. \"Go to the kitchen.\"\n\nI managed to wait until he'd hightailed out of the room before I burst out laughing and flopped back on Em's bed as she sighed.\n\n\"So anyway, that's my brother.\" She rolled her eyes. \"Let me go find out what he's even doing here.\"\n\nSo, all of that was to say, it wasn't the first time he had burst through Em's bedroom door and discovered there was a naked woman behind it, though maybe since this time it was his sister, he'd learn a lesson or two about knocking. Especially since this time it was just to find the dog's ball; at least when he'd barged in on me naked, it was because he'd signed with his record label and was so excited to tell his sister that he'd driven up to Pueblo to share the news in person.\n\nIt was part of the reason his intimidating scowl didn't quite work on me. I mean, my first experience with the moody wannabe rock god was him stuttering as he tried to find the line between offending me for commenting on my body and offending me for not commenting on my body. Every time he put that scowl on his face, I remembered the particularly sweet shade of red his cheeks turned and the slight waver in his voice as he spoke.\n\nFor reasons related to the fact that he was my best friend's brother and also much, much younger than me, I tried not to remember the absolute thrill I felt when he couldn't seem to take his eyes off me. I mean, yeah, maybe it was because he was enthralled by the absolute grotesqueness of my stomach or something, but I liked to pretend it's because he wasn't just trying to be nice when he said he thought I was hot.\n\nBut I digress.\n\n\"Ha, ha,\" Jimmy said flatly as I laughed at his scowl. \"So can I take that to mean Pepper's ball isn't in here?\"\n\n\"Actually, it is.\" Em pointed at the dog bed in the corner, the bright red ball tucked tightly into the raised cushion as if the owner of said ball was hiding it from prying eyes, which he probably was. \"But before you go, I need to ask you something.\"\n\nHe pointedly looked away as he went to fetch the ball. \"Can it wait until you have pants on?\"\n\n\"It's a bathing suit. I wear this to the beach.\"\n\n\"No way Alex is going to let you go to the beach in that.\"\n\n\"Alex doesn't get to 'let' me do anything,\" she snapped. \"If I want to go to the beach naked, I will.\"\n\nHe straightened up after grabbing the ball, raising his hands defensively. \"Right, okay. I just meant that--\"\n\n\"--that you think because Alex is a man and we're in a relationship that he gets to dictate what I wear?\"\n\n\"That neither of you is gonna see much of Mexico if you wear that since Alex is probably gonna be popping as much Viagra as he can handle so he can keep you in the hotel the whole time,\" he finished. \"Trust me, as much as I have zero desire to know how hot he thinks you are, he never fucking shuts up about it.\"\n\n\"See, Em?\" I said. \"That's the exact same thing I said, save for the part where someone clearly wasn't threatened with the wrath of Curt Llama if he spilled the beans on the location.\"\n\nHe grimaced. \"Shit.\"\n\nEm whirled towards me. \"He's taking me to Mexico?\"\n\n\"I refuse to confirm or deny these allegations,\" I said.\n\nA bright sort of energy seemed to vibrate off her as she struggled to maintain the cool, collected composure she was known for. \"I've never been to Mexico.\"\n\n\"And you might never get to go,\" Jimmy said. \"I mean, who knows where Alex is taking you? Show him the bathing suit and he might just rent a room down at the Motel Six.\"\n\nI hooted and nudged him with my elbow. \"That's also what I said.\"\n\nA hint of a smile broke through his haughty expression as I touched him.\n\n\"What was the question?\" he asked, looking at Em.\n\n\"You're going to be okay watching Leia when Kelsie can't?\" she asked.\n\nHe scoffed. \"Of course I am.\"\n\nShe didn't look convinced. \"You can't just be cool Uncle Jimmy while I'm gone, you know.\"\n\nHe rolled his eyes. \"I know.\"\n\n\"This is different from taking her out for ice cream or having a movie night,\" Em said. \"You're going to have to balance work and going out and taking care of my kid, and if that last one isn't your highest priority, then--\"\n\n\"Leia is always my highest priority,\" he said fiercely. \"I show up to everything. I've barely been drinking and when I do, it's usually with you. I've been working for Alex for ages and you can even ask him and Mike, I've been--\"",
        "\"--doing a damn good job of being a responsible, slightly disrespectable adult, since being respectable is completely overrated,\" I interrupted, looking pointedly at Em as I attempted to put an arm around Jimmy's shoulder. He was too tall, though, so I settled for resting my hand on him instead. \"And Em's doing the 'typical mom' thing with worrying about leaving her baby for an extended period of time, but she's going to remember that it takes a village to raise a child, and me and Jimbo here are part of her village.\"\n\n\"Jimbo?\" he repeated, his voice twisted with a strange mix of repulsion, shock, and laughter.\n\nEm snorted back a laugh. \"It suits you.\"\n\n\"It does not!\"\n\n\"Sure it does.\" She picked up a shirt she'd discarded on the bed and began folding it. \"You're part of my village, remember? You can be the village idiot.\"\n\n\"Oh, fuck off,\" Jimmy groaned as I dissolved into laughter. \"If I'm the village idiot, what does that make her?\"\n\n\"Town bicycle,\" I said before Em could reply.\n\nJimmy couldn't stop himself from laughing that time and Em rolled her eyes.\n\n\"Leaving my kid with the village idiot and town bicycle seems questionable,\" she muttered.\n\n\"You've left her with us before,\" he said. \"Kelsie and I have this down, Em.\"\n\n\"We make a great team,\" I added.\n\nHe nodded. \"You need this vacation. Let Alex spoil you a little and stop worrying.\"\n\nEm took a long look at her brother, then at me, then sighed.\n\n\"Okay,\" she said. \"You're right. Just... you know I'm gonna want to talk to her like, three times a day.\"\n\n\"How?\" I asked. \"I have a feeling Alex is going to make sure you spend a lot of time with your mouth full.\"\n\nShe tried calling the whole thing off again, but Jimmy and I were laughing too hard to pay any attention to it.\n\n<p align=\"center\">Two</p>\n\nTrue to her word, Em called an average of three times a day.\n\nTrue to my word and Jimmy's word, Leia was completely fine.\n\nWhile Em may not have been away on a tropical vacation before, there were times that Jimmy and I had taken care of the girls before. She was a photographer, which meant she occasionally had photo shoots or events scheduled at weird times. And, like me, she sometimes got sick of being around her kid. It happens.\n\nEither way, it meant that Jimmy and I had a system in place, though it was the first time we were testing it out for such a long stretch.\n\nI was lucky enough to have a job working for an amazing boss who sort of let me make my own schedule. It was the stupidest job: I worked in the warehouse of a specialty candle company, which meant my job was literally packaging up these stupid bougie candles and sending them to stupid bougie stores or stupid bougie customers. Day after day, I put glass-encased pillars of scented wax into cardboard boxes and lovingly tucked bubble wrap and packing peanuts around them so that somewhere, some rich lady who would be aghast at my colourful hair and multitude of piercings could unwrap it and display it in her bougie living room or bougie bedroom or bougie shitter.\n\nAt least my boss was nice and super easy going.\n\n\"I don't care if you're here at one in the morning or if you want to work split shifts every day,\" she'd told me. \"So long as the orders are processed in forty-eight hours, you do what you need to do.\"\n\nOn top of that, if I needed to make a little extra cash here or there, she was cool with me taking some shifts on the production line so I could get some overtime. It was a great job, stupid bougie products aside.\n\nNormally, I started around seven. I'd package up Baylee's lunch and schoolbag, bring my sleepyheaded daughter across the street to Em's, and she'd take care of morning dropoff. Then when school let out, I'd pick up the girls, since Em's clients usually wanted photos done in the evening. Easy peasy.\n\nWith Jimmy, though, that didn't work. He worked at Afterglow Records, Alex's studio, and he generally worked in the evening. So while Em was gone, I took care of the morning drop-off before going to work, and he picked the girls up after school and brought them to the studio to hang out until I picked them up. It worked out in my favour: Alex being gone meant Leia wasn't getting her usually scheduled guitar lessons, and since she had Mike, the crudgey old bastard who co-owned the studio, wrapped around her little finger, she could get some of her musical inclinations out of her system with Jimmy while she was there.\n\nSome. Not all. She and Baylee made sure that there was a brand-new concert for me to begrudgingly listen to each and every day I was watching them.\n\nIt was the fourth day of Em and Alex's trip when everything changed.\n\nI'd had to work a bit late, so I had just parked at the studio when Em's second call of the day came through. Rolling my eyes, I answered it as I got out of the car.\n\n\"She's fine,\" I said.\n\n\"I know she's fine,\" Em replied, staticky sounds of relaxed beachgoers in the background.\n\nI used my hip to slam the car door shut. \"Then why are you calling instead of sucking Alex's dick?\"\n\n\"I need to talk to you.\"\n\nThe lack of snarky response to my comment paired with the serious tone of her voice gave me pause, and I frowned as I leaned against my car. \"What's wrong?\"\n\n\"Nothing's... wrong,\" she said. \"I just... Alex asked me something and--\"\n\nMy heart jumped into my throat. \"That fucker! He proposed?\"\n\n\"Oh, God no,\" she said hurriedly. \"And I would've said no if he had.\"\n\nI let out a heavy sigh. \"Oh, thank God.\"\n\nShe laughed. \"On Alex's behalf, ouch.\"\n\n\"Em. Out with it. Why are you calling?\"\n\nAnother long moment of silence passed before she cleared her throat.\n\n\"He... he wants me and Leia to move in with him.\"\n\nThe parking lot of the studio wasn't an especially loud place, but the world around me went quiet all the same.\n\n\"Move?\" I repeated. \"But you... I mean, he pretty much lives with you already, doesn't he?\"\n\nShe sighed. \"Yeah. But it's... I mean, it might be nice to have the extra space, you know? And like, it would be nice to live in a place a little more updated, you know?\"\n\nUpdated. As in, not the shitty old houses we lived in.\n\n\"With more room for Leia to play in the yard. And a... you know, a safer neighbourhood.\"\n\nSafer. As in, not the shitty neighbourhood we lived in.\n\n\"I mean, Leia wouldn't switch schools, of course. But she'd be able to have a bigger room and Alex said we could convert the basement into a photo studio so I could expand my business.\"\n\n\"Right.\"\n\n\"Kels?\" she asked after a moment. \"What do you think?\"\n\nWhat did I think?\n\nMy heart had dropped out of my throat, leaving a trail of nausea behind as it fell further and further down into my stomach. Here was my best friend, calling me from miles and miles away to ask my opinion on her moving in with her boyfriend. Which, like... fair. It made sense. I mean, we were best friends, and best friends are supposed to give advice in situations like this.\n\nBut we were best friends who also relied on each other. Heavily. And Alex had to know that. I mean, he had to know that Em and I had built our lives and schedules around each other because for a long time, it was just the two of us. We didn't have other friends. We didn't have partners. We had each other. He knew damn well what he would be doing to me if Em moved away. And that was probably why he'd decided to ask her while they were on the other side of the continent.\n\nSo what did I think?\n\nI thought Alex was a complete shitbag for using me to plot this whole thing knowing damn well he was about to fuck me over.\n\nI wanted to tell all of that to Em. I wanted to tell her I was standing in the parking lot of her boyfriend's studio, covered in dust and sweat with the scent of a thousand essential oil candles permeating my freshly-dyed pink hair, about to pick up her daughter that I was babysitting so she could have a luxury vacation. That I'd made tons of changes to take care of Leia. That I absolutely, positively, one-hundred-percent did not want her to move in with Alex because that meant my life was going to get harder.\n\nBut I couldn't make it about me.\n\n\"I'm so happy for you,\" I managed to say. \"Y-You should do it.\"\n\n\"Wha... seriously?\" she said.\n\n\"Of course.\" My throat felt tight. Blinking rapidly, I stared up at the greyish fluff that made up the sky above me. \"You love Alex and he loves you. And it makes sense, you know? You're hot enough to be a trophy wife so you might as well get used to the finer things, starting with a nicer house.\"\n\n\"Oh, shut up,\" she scoffed. \"I'm not a trophy wife.\"\n\n\"Not yet.\" I laughed, but it sounded more like a cough. \"But you can start practicing now.\"\n\n\"Okay, no. But seriously.\" She sighed. \"Like, we do everything together. This is gonna affect you just as much as it affects me.\"\n\n\"Not really. I mean, one of us is going to end up sucking a lot more dick and it's probably not going to be me, so--\"\n\n\"You're awful.\"\n\n\"You love it,\" I said. \"So when do you think you'll move? Like, soon, or...?\"\n\n\"I'm not sure,\" she said. \"I wanted to talk to you. I haven't decided yet.\"\n\n\"I think you have,\" I said. \"I think you're going to move in with him. Which is great, Em. Like, so great. You'll have to give me a head's up once you decide when so I can take advantage of my across-the-street babysitter and bring home a couple of booty calls before you go.\"\n\nShe laughed. \"Oh, sure. Because you bring home so many booty calls.\"\n\n\"You're right. I usually end up at their place. I mean, it's harder for them to sneak out in the morning when they keep stepping on Baylee's Barbie shoes. That shit is worse than Lego.\"\n\nWe talked for another few minutes and I repeated my stance on her moving in with Alex, which was that I thought she should absolutely do it even though I secretly thought she absolutely shouldn't do it.\n\n\"Even though it's going to... like, what about school drop off and stuff?\"\n\n\"I'll make it work,\" I said. \"Girl, I don't want you to stop yourself from moving forward just because of what I need.\" Even though that was exactly what I wanted. \"This is the next logical step for you and Alex. We'll make things work.\"\n\nThere was a long pause, then she sighed. \"All right. You promise you're okay with this?\"\n\n\"Yep,\" I lied.\n\n\"Okay. Do me a favour and don't tell Jimmy yet, please?\"\n\nOnce we hung up, I took a deep breath and let it out, then wiped my hands beneath my eyes. When I was certain I could hide my heartbreak, I walked through the still too-quiet parking lot to the studio and pulled the door open.\n\nNoise poured out the moment I opened the door. The bustling sounds of chattering and singing and laughter burst forward and tugged me in, as welcoming as they were alienating. I paused just inside the door, glancing around the lobby. Normally, Jimmy was waiting up front with the girls, but I was now later than I'd even anticipated and he'd obviously taken them elsewhere to wait. Across the lobby, the office manager--a churchy woman named Lini who was surprisingly cool with the rock n' roll types that frequented the studio--poked her head out.\n\n\"Hi, Ms. Bauer,\" she called. \"Here for the girls?\"\n\n\"You can call me Kelsie, Lini,\" I said for the thousandth time, though I forced my tone to be bright and cheery. \"And yep, it's my turn to be on Baylee and Leia duty.\"\n\nShe smiled and motioned for me to follow her. \"I've been informed I'm not supposed to tell you that they're working on a little surprise for you.\"\n\nOh, good. Just what I needed. More surprises.\n\nI kept my smile on and followed Lini towards the office area, where I could hear the muffled sound of music and the shrill laughter of my girl giggling with her best friend.\n\n\"So how was your day, Kelsie?\" Lini enunciated loudly, and the music and giggling was swapped for the obvious rustle of two girls hushing each other.\n\n\"Oh, not so bad,\" I replied just as loudly. \"How about yours?\"\n\nShe pressed her lips together, though I wasn't sure if she was holding in a laugh or resigning herself to her next line. \"Well, it happened to be one of those days where things were a little difficult. But you know, sometimes that happens, and--\" She stopped and placed her hand on the knob of a closed office door, tilting her head to indicate I should stand in front of it. \"--you need to, um, shake it off.\"\n\nAnd with that, she pushed the door open, I had a half-second glimpse of Mike sitting awkwardly behind his desk, and then two bursting balls of energy jumped into my line of sight.\n\n\"Hit it, Uncle Jimmy!\" shouted Leia.\n\nFrom the corner of my eye, I saw Jimmy sigh as he pressed a button, causing the dulcet tones of one Miss Taylor Swift to start playing as Baylee and Leia broke out into a shakily rehearsed dance routine.\n\nMy fake smile broke just slightly; a real one crept out, something that was partly touched at the joyous way my daughter was jumping around the room and partly giddy for the day she realized what a cringey kid she was.\n\nI leaned against the doorframe as I watched, Baylee's blonde hair bouncing as she belted out lyrics, round cheeks flushed pink as she did her best to shake, shake, shake, shake, shake it off. There was a harrowing moment where she bumped into Mike's desk and the hula girl that sat there teetered precariously, but Jimmy lurched forward before the look of grumpy indignation even crossed Mike's grumpy face.\n\n\"Wow,\" I said as they finished and struck a pose, little lungs gasping for breath after they danced their hearts out. \"Great job, ladies. That must have taken a long time to put together. I didn't think I was that late picking you up!\"\n\n\"You were late?\" Leia said.\n\n\"They've been working on that all afternoon for you,\" Jimmy said.\n\nTheir sweetness made my heart swell for all of a second before I caught the pleading look on Baylee's face.\n\n\"Aw, out of the goodness of your hearts? That's so considerate and thoughtful!\" I said.\n\nIf I didn't know any better, I would have thought Mike had chuckled, but he was a grumpy old fuck so I figured I must have been hallucinating.\n\n\"Um, well, sort of,\" Leia said. \"But also, we wanted to tell you that--\"\n\n\"Mom, Ms. Lini told us that Taylor Swift is gonna do a concert here and Mr. Mike said that he thought he might be able to get tickets for us!\" Baylee shrieked.\n\nThere it was.\n\n\"Oh, wow,\" I said, cringing internally at the fake brightness of my tone. \"Well, that's pretty exciting!\"\n\n\"I said maybe,\" Mike grumped grumpily in a grumpy growl. \"I need to make some calls. Swift tickets ain't the easiest to come by.\"\n\n\"You don't say,\" I said flatly.\n\nMike raised an eyebrow at me, but I didn't say anything else. I mean, sure, it's not like he knew that I already knew about the Taylor Swift concert and had tried to get tickets for Baylee's Christmas present, only to realize I could barely afford the seats up in the nosebleeds even if they hadn't already been sold out when I tried to get them. And it wasn't Lini's fault she didn't know that Em and I had agreed to hide the knowledge of the concert from our girls so we wouldn't have to go to the concert, though Em's reasoning was more that she didn't like Taylor Swift. I mean, she was fucking Alex, so it wasn't like she couldn't afford the tickets.\n\nSo it might not have been malicious on anyone's part, but that didn't mean I was particularly pleased about it.\n\n\"Not sure how many tickets I'll be able to find even if I do,\" Mike said carefully, and I heard the words he actually meant: Leia was the priority.\n\n\"You can find four though, right?\" Leia said, looking up at Mike with her big, hypno-entrancing gaze. \"For me and Baylee and Mom and Kelsie?\"\n\n\"I, uh, well--\" Mike stuttered, then sighed. \"Yeah, kid, of course. I can find four.\" He looked at me grouchily. \"Might not be floor seats or anything, but I can probably swing something near the stage or maybe a box. You got a price point you don't want to go past?\"\n\nFuck.\n\nThe answer to that was yes, I didn't want to go past the price of the cheapest available seats because even those had been almost out of reach for me. I didn't want to even consider seats that were near the stage or in a fucking box or something. I could pick up a couple of extra shifts to cover the cost of the cheaper tickets, but box seats? That would require calling Daniel.\n\nAnd was it worth calling Daniel for something like this? He'd pay without question, I knew that, but he wouldn't pay without demand.\n\nBaylee looked up at me, her eyes wide. I met my daughter's gaze, familiar eyes that were so innocent and hopeful and excited. She'd be disappointed, but she'd survive; she'd understand, one day. I swallowed hard, decided on the cost I was willing to pay, then turned to Mike. One bushy eyebrow flicked up as he sat behind his desk with a judgmental grimace on his grouchy old face.\n\n\"Nope,\" I said. \"Just let me know how much.\"\n\nBaylee and Leia both squealed, throwing their arms around each other before they bounded behind the desk. Mike looked distinctly uncomfortable as both girls hugged him.\n\nThe price of that look of discomfort wasn't worth it, not when I had blurted something out of pride that would likely cost not only a call to the person I hated more than anyone else in the world, but also whatever that person deemed reasonable to ask for in return. But it did help me feel a little better.\n\n\"Well, girls,\" I said before they could break into another Taylor Swift song. \"We should head home for dinner so Jimmy can get back to work. Where are your backpacks?\"\n\nThey said goodbye to Mike and Lini, then raced out of the room to grab their things from the breakroom. I nodded politely at Mike.\n\n\"Thanks,\" I said.\n\n\"Don't mention it,\" he grumbled.\n\nI bit back a snarky response and went after the girls.\n\n\"Kels,\" Jimmy said, following me out of the office.\n\n\"Hmm?\" I asked, not looking at him.\n\n\"You okay?\"\n\n\"Yep.\"\n\nThe feel of a hand closing on my arm surprised me and I turned, almost shocked to see the concern on Jimmy's face.\n\n\"You're not,\" he said.\n\n\"Everything's fine.\"\n\n\"You look like you've been crying. Your eyes are all red.\"\n\nA sharp laugh escaped my lips. \"Yeesh. Someone needs to give you some lessons on talking to women, Jimbo. Does this uniform make my ass look fat, too?\"\n\nHis mouth twitched, though I wasn't sure if it was with laughter or annoyance. \"That uniform makes your fat ass look fantastic, but even though women with fat asses are hot as fuck, that's not important right now. What's going on?\"\n\nMy mouth dropped open. The dark, pouty look on Jimmy's face faltered, the skin on his cheeks turning a muted shade of red as he tried to gauge my reaction to his... I didn't even know what to call that. Compliment? Backhanded compliment? Pickup line? Admission that he liked fat asses?\n\nPotential admission that he liked my fat ass?\n\nWhatever it was, I froze, and he let go of my arm.\n\n\"Kels, I'm sor--\"\n\n\"Everything's fine,\" I interrupted. \"I'm fine. I just need to... I... work was hard today. I was thinking I... I might have to do some extra shifts, but you know what, that all works out because I have a little extra for Christmas.\" I laughed, hating the sound. \"Thank you for asking. And for keeping the girls a bit later than you thought. I appreciate it.\"\n\n\"No problem,\" he said. \"When, uh... when do you have to do the extra shifts? 'Cause if you want me to watch the girls, I just need to know--\"\n\n\"I'm not sure,\" I said. \"I... I guess I can wait until Em's back.\"\n\n\"I can watch them this weekend if you need me to,\" he said. \"I'm not working Saturday. I could even come watch them at your place. Maybe take Pepper out for a walk or something.\"\n\nI tried to smile. \"I work in the mornings, Jimbo. Pretty sure you don't want to be at my place at like, eight a.m.\"",
        "He smirked. \"You know I'm not up all night partying or anything, right? Sometimes I even work here at like, eight a.m.\"\n\nI stared at him, then swallowed and nodded quickly.\n\n\"That would be helpful, yeah. If you don't mind.\"\n\nHe touched me again, a soft pat on the shoulder before guiding me down the hallway. \"Anytime. I'm happy to help.\"\n\n<p align=\"center\">Three</p>\n\nI would never admit it to anyone--not even to Em, and Em knew everything about me--but I was insanely thankful that I had a daughter and not a son.\n\nDon't get me wrong. If I'd given birth to a boy, I would have loved him as much as I loved Baylee. He would never have felt neglected or sad or like his mom didn't care about him. And it wasn't that I'd spent my pregnancy praying for a girl or anything.\n\nIt's just that, when my marriage imploded, I couldn't stop thinking about how hard it would have been to have a little man in my life who was a reminder of Daniel.\n\nDaniel had wanted a boy. He hadn't been at that appointment--he attended barely any of the appointments because childbirth was a \"woman\" thing and he had \"man\" things to do--after the doctor congratulated me on my daughter-to-be, I was certain I'd misheard. I couldn't be having a girl. I couldn't. Daniel wanted a boy and what Daniel wanted, Daniel got.\n\nOtherwise, there would be consequences.\n\nWhen he got home from work that night, I'd been the very model of The Perfect Wife. It was a role I played often while Daniel and I were married, which would have surprised anyone who knew me post-divorce. I couldn't blame them; it was hard to reconcile the multi-coloured hair and plethora of piercings I sported now with the Stepford Wife I'd once been.\n\nThat was the woman Daniel had walked into see that day: his quiet wife, wearing a modest-but-flattering dress over her growing belly, blonde hair neatly pinned back, a pristine apron over her outfit to protect it from all the splashes and splatters she hadn't dared let touch the fabric as she cooked. On the table was The Perfect Dinner: meat, potatoes, vegetables that could have used a bit more salt, but since salt was almost An Actual Flavour, I didn't dare use too much of it. After all, then it wouldn't be close enough to his mother's cooking, and that might make Daniel Very Mad.\n\nHe wasn't mad, though. He saw his Perfect Dinner on the table and his Perfect Wife in the kitchen, shaking palms hidden by the apron's skirt as she wiped them off before greeting him, and he smiled. He put his briefcase by the door and his keys on the counter and crossed the kitchen, sliding an arm around my waist as he leaned down to kiss me.\n\n\"Look at you. How could I be any more blessed?\" he murmured, and I'd drunk so much of his goddamn Kool-Aid by that point that I straight-up melted in his arms. \"How was your day, my dear?\"\n\n\"G-Good,\" I responded.\n\nOne eyebrow flicked up. He knew I was lying, and I knew he was calling me out on it, and I trembled as I met his eyes.\n\n\"I had that doctor's appointment today.\"\n\nDaniel nodded, intense eyes studying me. \"And?\"\n\n\"We... we're having a, um... a girl.\"\n\nI'd imagined any number of reactions he might have. In my mind, I'd heard him yell. I'd heard him berate me. I'd watched him sneer and blame me for not being able to give him a son. I'd felt his breath as he huffed his derision, felt my heart crack as he wondered aloud what in the hell he was supposed to do with a daughter instead of a son. I'd spent the whole day playing scenario after scenario in my head, trying to plan what I'd do if he got Very Mad.\n\nI hadn't imagined a scenario where he stared silently at me before a small smile began to play on his lips. I watched it grow, hesitant to mimic the expression until it reached his eyes.\n\n\"A girl,\" he repeated.\n\n\"Yes,\" I said.\n\nA gentle hand touched my stomach. \"That's my daughter in there.\"\n\nI nodded, and he embraced me in one of those ways that made me forget all the horrible things about him, thanking God for blessing our little family with The Perfect Daughter.\n\nAnd really, even with all his faults--and there was an absolute fuckton of faults--I couldn't claim that Daniel didn't care about Baylee. I assumed it was more about his image as a Perfect Father rather than actual love for our child, but he cared. He cared so much that he'd tried to get custody back time and time again, but luckily for me, his anger issues had manifested in ways that left mountains of evidence and a paper trail that meant no judge could justify letting him buy his way into being Baylee's primary caregiver.\n\nHe was still entitled to some days with her and I was constantly battling with him about which holidays he got to \"have\" her for, but for the most part, Daniel's role in Baylee's life was mainly monetary. Each month, he dutifully sent his child support payment directly to my bank account. It still never seemed to be enough, not after school fees and field trips and birthday parties and Girl Scouts, but asking for more money wasn't worth the cost of giving that much power to Daniel.\n\nI'd tried explaining that to Em once, but she didn't understand how horrid he was and I didn't like dredging up all those memories. All that meant was that she didn't know just how tight money was for me sometimes; to be fair, until Alex had fucked his way into her life, it hadn't mattered all that much. There were days I was insanely jealous of her: she didn't know who Leia's father was, so she didn't have to deal with a psycho ex every month.\n\nI, on the other hand, had to talk to him at least twice a month. Once on the first day of each month when I confirmed I received his payment and informed him which day he was allowed to see Baylee, which was the second time I had to talk to him. He would agree and ask how much it would take for him to get an extra day or weekend with her, and I'd mentally tell him to go fuck himself before politely informing him he would need to speak to the courts about that. He would sigh, ask me if we really had to go through all of that again.\n\n\"It was one mistake, Kelsie,\" he would say.\n\n\"You put me in the hospital, Daniel,\" I would reply.\n\n\"I would never do anything to hurt her.\"\n\n\"You said you would never do anything to hurt me.\"\n\n\"I've changed. I'm not the kind of person who would do that anymore.\"\n\n\"So have I. I'm not the kind of person who would let you.\"\n\n\"She's my daughter, too. You can't keep her from me.\"\n\n\"I'm not keeping her from you. I'm giving you the court-mandated amount of time you're supposed to spend with her.\"\n\nI did have to relent occasionally, especially since Baylee was still too young to truly understand what all the presents and toys and adventures to amusement parks meant. As much of a piece of shit as Daniel was, I didn't badmouth him to her.\n\nAnd he was. He was a huge piece of shit.\n\n\"You're late,\" he said when he answered my call on the first of the month.\n\nI stared at the front of my house from my spot in the car, hoping that Baylee and Leia wouldn't look out the window and realize I was home almost as much as I was hoping Daniel wouldn't be able to tell I had completely forgotten it was the first of the month until I was driving home after my shift.\n\nOr at least, that's what I was telling myself. I mean, I must have completely forgotten. It couldn't possibly have anything to do with the crushing coil of dread in the pit of my stomach that had been growing and twisting for the past few days, ever since I realized I'd have to ask Daniel for money to pay for the stupid fucking Taylor Swift tickets.\n\n\"I had to work,\" I said flatly.\n\n\"It's Saturday.\"\n\n\"Yeah? Sometimes I work Saturdays, Daniel.\"\n\n\"You could have called on your break,\" he replied. \"Or texted to let me know. Or, I don't know, let me have an extra day with my daughter since you were busy anyway.\"\n\n\"It was last minute. I have a babysitter for her.\"\n\n\"So you'd rather waste money on some unknown tween instead of letting me see her.\"\n\n\"She's with Em,\" I lied. \"And you wouldn't have made it in time. And your day with her this month is the fifteenth.\"\n\n\"God forbid I get an extra day with her once in a damn while.\"\n\nThe coil of dread in my stomach pulsed and I almost puked all over my steering wheel. \"Well, I was, ah... thinking about that, actually.\"\n\nThere wasn't so much as a gasp or a muted noise of surprise; Daniel simply went silent.\n\n\"Were you?\" he finally asked.\n\nI kept my eyes glued to the front door of my house, willing my lunch to stay where it was as I tried to remember the words I'd rehearsed over and over in my mind. It had apparently been useless; the only thing my mind seemed capable of doing was watching in horror as I stooped to his level.\n\n\"Yes,\" I managed to say. \"I... I thought maybe this month you should have an extra day with her. The fifteenth and the sixteenth. She c-could stay with you.\"\n\n\"Why?\" he demanded.\n\nMy palms began to sweat as I tried to collect my thoughts, which apparently took too long.\n\n\"Why, Kelsie?\" he repeated. \"You have never offered an extra day with her. What's changed?\"\n\n\"I--\"\n\n\"Are you seeing someone?\"\n\nMy mouth fell open. \"Excuse me?\"\n\n\"You're seeing someone.\"\n\n\"I'm not--\"\n\n\"No? Because I can think of no other reason you'd offer an overnight visit when you've never so much as let me have an extra minute with my daughter before. Has she met whoever it is you're slutting around with?\"\n\n\"Fuck you.\"\n\nThe words fell out of my mouth; I didn't think them so much as spew them, and it was only once they were out that I kind of wished I'd spewed puke instead.\n\n\"Excuse me?\" Daniel said after a moment.\n\nThe dryness in my mouth was almost painful; I swallowed, hoping it would help, but it was like sandpaper coated my tongue and throat. It was disgusting, really, the way it had taken me years--fucking years--to muster up the strength to leave him, and then even longer to find the strength to stand up to him, and in one conversation, all that fragile strength began to crack.\n\nI was not the kind of person who would let him hurt me anymore, I told myself. It was a bit of a lie, but I managed a shallow breath so I could speak again.\n\n\"First of all, it's none of your business,\" I said, my voice shaking. \"Second of all, no. I'm not seeing anyone. I'm offering an extra day because Baylee wants to go to the Taylor Swift concert and I...\"\n\nI didn't need to finish the sentence.\n\n\"You need money,\" he said, sweet delight masked beneath the words.\n\n\"I thought it would be a good Christmas present,\" I muttered. \"She wants to go with Leia.\"\n\n\"Hmm,\" he said, then fell silent until I couldn't stand it anymore.\n\n\"Will you help me or not, Daniel?\" I asked.\n\n\"I will,\" he said.\n\nI closed my eyes. \"Thank--\"\n\n\"But not for one extra day.\"\n\nThe absolute shistain.\n\n\"What do you want?\" I asked.\n\n\"Two weeks.\"\n\n\"Fuck you.\"\n\nHe laughed. \"Language, Kelsie.\"\n\n\"You're not taking her for two weeks.\"\n\nHe made a tsk-ing sound. \"Taylor Swift tickets aren't cheap, you know. And I'm not asking for a lot here.\"\n\n\"It's not happening,\" I said.\n\n\"Really? You're going to stop your daughter from getting to see her idol because you're too selfish to let me have her for a couple of weeks?\"\n\n\"Not even,\" I spat back. \"I'll get the tickets another way.\"\n\nHe chuckled. \"Sure you will.\"\n\nI seethed. \"Goodbye, Daniel.\"\n\n\"Talk to you soon, my dear.\"\n\n<p align=\"center\">Four</p>\n\nI tried to shut the front door quietly as I walked in so I could take a few minutes to collect myself after talking to Daniel, and I succeeded.\n\nThen I tripped on a pair of stylishly beat-up Converse sneakers and stepped on Pepper's chew toy, which let out a shrill squeak that pierced through the sound of rock music coming from my living room.\n\n\"Sounds like your mom's home,\" I heard Jimmy say.\n\n\"Oh, no!\" Baylee cried.\n\nAny other day, I would have laughed. That day, a lump clogged the area behind the base of my throat. I kicked my shoes off and hung up my purse.\n\n\"What a welcome,\" I said, my voice dry as I peeked into the living room.\n\nThe girls were standing in front of the TV, Leia holding a plastic guitar and Baylee clutching a wireless microphone to her chest. Jimmy sat on the couch, sock-clad feet resting on the coffee table. A video game console was resting on the TV stand, the associated video game paused on the screen as all three of them looked at me.\n\n\"We just wanted to keep playing,\" Leia explained earnestly. \"And if you're back that means Uncle Jimmy is gonna take his games and go home.\"\n\n\"We were having fun,\" Baylee said sadly.\n\nJimmy caught my gaze for all of a second before he took his feet off the coffee table and stood up.\n\n\"Keep playing,\" he said. \"Your mom and I are gonna hang out for a bit.\"\n\nI raised my eyebrows at him, but the girls squealed in excitement and Baylee unpaused the game. It only took him a few long strides to cross the room, leaving me no choice but to step back and let him guide me down the hall to the kitchen.\n\n\"What's wrong?\" he asked in a low voice.\n\n\"Nothing,\" I said, shaking his hand off my arm. \"I'm fine.\"\n\n\"Right. That's why you've got that look on your face like nothing is fine.\"\n\nI snorted as I walked to the fridge to grab a bottle of water. \"Since when are you such an expert on what looks I have on my face?\"\n\n\"Since I kind of like your face.\"\n\nI glanced at him over my shoulder, showing him what my face looked like when I was unimpressed. \"Bullshit isn't going to win you any points.\"\n\n\"It's not bullshit.\"\n\nI turned back to the fridge and reached for two water bottles. \"Flattery, then.\"\n\n\"It's not that, either.\"\n\n\"Whatever you want to call it then.\"\n\n\"What, it can't just be that I'm flirting with you?\"\n\nI snorted and closed the fridge door. \"Jesus, Jimmy, I'm not old enough that you have to pity-flirt with me like I'm an elderly lady in line at the CVS or something.\"\n\n\"I... what?\"\n\nI rolled my eyes at him and held out one of the water bottles. \"Never mind. Drink this. Knowing you, you haven't had a sip of liquid since you finished your coffee this morning.\"\n\nHe rolled his eyes but chuckled, taking the water from me. \"You know me.\"\n\n\"Hydration is important, young man.\"\n\n\"Not that young, you know.\"\n\nThere was some kind of snarky response on the tip of my tongue, but the soft rumble of his voice stopped me. He met my eye again, but before I could say anything, he cracked the water bottle open and took a sip.\n\n\"Whatever,\" I mumbled, and mirrored his action.\n\nHe put his water bottle down on the counter. \"Talk to me, Kels. What's going on?\"\n\nI sighed, then procrastinated responding by taking another slug of water.\n\n\"Another rough day at work?\" he guessed.\n\nAnd see, I should have said yes. I should have made up some story about how there was an essential oil spill on the production line that caused a huge backup and that the whole warehouse now smelled like lavender which meant it was almost impossible for quality control to make sure the other candle scents didn't all smell like lavender, not that I knew what that was like from experience or anything.\n\nBut Em was still on vacation, and Jimmy was right there, dark eyes studying me as I struggled to keep my thoughts on the inside, and Leia and Baylee were in the other room screeching at the TV in an attempt to sing a song written years before either of them were born.\n\nI mean, I couldn't tell him everything. Maybe it was pride or maybe it was shame, but I didn't want him to know how tight things were for me and Baylee. And I didn't want him to know why I'd wanted extra money from Daniel since that would require admitting I'd gotten myself into this mess because I was too stubborn to tell Mike how much I'd be willing to spend on the stupid concert tickets.\n\nAbove all, I didn't want to tell him all the things Daniel had done to me, all the reasons why I couldn't just demand money from him, all the ways my ex-husband could punish me if I slipped up even a little.\n\nBut I could tell him some things.\n\n\"I just got off the phone with my ex,\" I said quietly, though there was no chance in hell the girls would be able to hear me over their yowling. \"It's child support day. And I... well. Let's just say I needed something from him and his response was to tell me he wanted to take Baylee for two weeks in exchange.\"\n\nJimmy looked confused. \"Two weeks?\"\n\n\"He's supposed to get one day a month,\" I said. \"He picks her up at eight and she needs to be home before bed. So he isn't... it's not happening. He can't have her that long.\"\n\n\"Right,\" he said, his voice guarded in a way that I hated.\n\nMy annoyance surged and I looked up, glaring at him. \"Let me guess. You think I'm a horrible, evil ex-wife who's trying to keep some guy's kid from him.\"\n\nHe scowled right back at me, though his smouldering glare was far more masterful than mine. \"Give me some credit, Kels. I know your ex is an asshole.\"\n\n\"Sure you do.\"\n\n\"I do.\" He put his water bottle down and folded his arms. \"And besides, why would I take his side over yours? I know you.\"\n\n\"You know what I want you to know,\" I muttered, but I couldn't bring myself to look at him.\n\n\"I know enough. You might not say much, but that doesn't mean Baylee doesn't talk about him.\"\n\nI physically felt the blood drain from my face as I snapped my head up. \"She... what?\"\n\nThe scowl faded off his face. \"Well, I mean... yeah.\"\n\n\"She talks to you about her dad?\"\n\nHe glanced towards the living room. \"Sort of. Like, not... Kind of in passing, I guess. Leia does, too.\"\n\nThe whole idea of eyes popping out of someone's head had to be exaggerated because if it was possible, mine would have shot across the room. \"Does Em know?\"\n\nHe shifted again. \"Not... no. I haven't--\"\n\nI put my water bottle on the counter a bit more firmly than I needed to. Just enough that the plastic made a crinkling sound and water sloshed out of the top and pooled on the counter top.\n\n\"Jimmy, what the fuck?\"\n\n\"It's not what you think. They're old enough to have questions about shit, you know?\" He folded his arms and tilted his head as he looked at me. \"But it was mostly today.\"\n\n\"What do you mean?\"\n\nHe sighed heavily. \"I brought video games over because I thought they'd like them. Baylee got all excited and started telling Leia about this arcade her dad took her to. Before I know it, Leia starts wondering why she doesn't have a dad, and I mean, I know she's asked Em before but it's not...\"\n\n\"She doesn't know if Em's telling her everything, so she asks you,\" I finished.\n\n\"Pretty much.\"\n\n\"What did you tell her?\"\n\n\"The truth,\" he said. \"That I didn't know who her dad was. But that her dad didn't know about her, either, 'cause if he did, he'd for sure want to know her. I thought that'd make her, you know... feel less like he didn't want her.\"\n\n\"Did it?\"\n\nHe shrugged. \"She still seemed pretty sad, so Baylee tried to tell her that all the things her dad takes her to and gives her and stuff aren't that good, but I think that just made Leia jealous.\" He cleared his throat. \"So she, uh, shared probably a little more than she should have.\"\n\nMy body didn't know how to react. My stomach was dropping and tightening at the same time; my throat was dry at the same time that my mouth began to water like I was going to throw up. \"She... she never asks me about it. What does... what did she tell you?\"\n\n\"I don't think she knows what happened to make you and him split,\" he said carefully. \"She doesn't remember a lot.\"\n\n\"She was only four.\"\n\nHe nodded. \"She said she remembers you went away on a trip and it was just her and her dad, and then one night you came back while she was sleeping. Then you went to the car together and all her toys were there.\"",
        "Oh, God. I pressed my lips together, certain I was about to puke all over the kitchen.\n\n\"She said after that she didn't see her dad for a long time, and that she doesn't see him much now,\" he continued. \"Look, she might not have said anything specific about why you split up, but from the sounds of it--\"\n\n\"It's none of your business,\" I said.\n\n\"It's a bit of my business,\" he shot back.\n\n\"Excuse me? It is not.\"\n\n\"I give a shit about you, Kels,\" he said. \"So, yeah, it's a little bit of my business because I want you to be safe and, like, happy and shit.\"\n\nI opened my mouth to respond, but I didn't know what to say. Instead, I picked up my water bottle and took another sip.\n\n\"I don't mean like you have to tell me whatever happened,\" he continued. \"Just that whatever it was, I'm on your side. And that I understand why him asking for two weeks with her is upsetting.\"\n\nI tried to smile. \"Thanks. I... sorry.\"\n\n\"Don't be. Sorry that you're dealing with it.\"\n\n\"Did... did she say anything that made it sound like he...\" I couldn't finish the sentence, but he knew what I was asking.\n\n\"She said she usually has fun but sometimes they have to take breaks from the fun stuff since he gets tired because he's old.\"\n\nMy laugh that time was a bit more genuine. \"He's not old. I'm old. He's fucking ancient at this point.\"\n\nHe rolled his eyes. \"You're not old.\"\n\n\"I'm practically grandmotherly. Which makes Daniel a dinosaur.\" I smirked and drank more water, shaking my head. \"I'm the same age now as he was when we got married.\"\n\nHe frowned. \"How old were you?\"\n\n\"Nineteen. My dad had to sign a waiver so I could have a glass of champagne to toast with.\"\n\n\"Nine--seriously?!\"\n\nHis expression was hilarious. I mean, yes, the tension had built up so strongly that anything remotely funny would set me off in hysterics, but I couldn't stop laughing at Jimmy's face.\n\n\"Seriously,\" I finally managed to say.\n\nHe shook his head again. \"How did you even meet?\"\n\n\"Through the church,\" I said. \"I was a rebellious teen brought to him for counselling after my parents discovered I pierced my belly button.\"\n\n\"At nineteen?\"\n\n\"Sixteen.\"\n\n\"Six--\" He gaped at me. \"What?\"\n\n\"Sixteen,\" I repeated. \"Don't worry, he patiently waited for me to turn eighteen and worked on getting into my head in the meantime. I was a very well-behaved, soft-spoken young lady by the time my parents handed me off to him after I graduated high school.\"\n\nI didn't quite know what to call the expression on his face. Horrified, maybe. Disgusted. Sympathetic, borderlining on pity. Whatever it was, I didn't like it.\n\n\"It's in the past now, Jimbo,\" I said boldly. \"It took some struggling but now I have a wonderful daughter and I get to make my hair whatever colour I want it. And you can damn well bet I put my belly button piercing back in literally the day after I left him.\"\n\n\"Good,\" he said. \"Belly button rings are hot.\"\n\n\"Careful now. You're going to give this old lady a big head.\"\n\n\"You're not old,\" he said again.\n\n\"Older than you.\"\n\nHe smiled, but it didn't quite reach his eyes. \"Can I, like, hug you?\"\n\nThe request surprised me, but in that delighted, exhilarated sort of way. \"You know I love hugs, Jimbo.\"\n\n\"Jimbo,\" he muttered disdainfully, shaking his head as he crossed the kitchen. I didn't have a chance to respond before he tugged me in close, enveloping me as though he was using his arms to tell me that it was all right, that it would all be okay, that I was going to be okay.\n\nAnd honestly? They were pretty convincing.\n\n<p align=\"center\">Five</p>\n\n\"I said yes.\"\n\nEm wasn't looking at me. I don't think she could bring herself to. And I understood that, obviously. I mean, she knew her decision was going to change my life as much as hers.\n\nShe probably thought I was going to be upset about it.\n\nAnd I was. I told myself not to be; I stared across the cafe, doing everything I could to push down the selfish little monster inside me that wanted to scream and cry and beg Em not to move in with Alex. They'd been back from vacation for a few days and even though she hadn't said anything up until now, I'd known, and I thought that would make it easier to pretend I was happy for her.\n\nBut hearing her say it was harder than I'd thought.\n\nI took a shallow breath, summoning up that other monster, the Stepford monster, the one that knew how to put on a fake smile and nod and be agreeable. The one I'd been controlled by for years and that I wasn't quite sure I'd ever be free of, even after all this time away from Daniel.\n\n\"I'm so happy for you,\" the Stepford monster said.\n\n\"Liar,\" Em replied bluntly.\n\nThere was a mother with her son on the other side of the cafe. I didn't know what the occasion was, but the little boy had a cupcake and was eating it with such a pure sense of delight that I almost smiled for real. I focused on them for a moment longer; then, when I was certain I could keep my feelings all wrapped up inside where they belonged, I turned to Em.\n\n\"I am,\" I repeated. \"I mean, girl, come on. Of course I'm a little bummed that you're moving across town. But it's going to take a lot more than physical distance for you to get rid of me.\"\n\nShe rolled her eyes. \"I'm not trying to get rid of you.\"\n\n\"Good, because I'm not going anywhere.\" I grinned and used my toe to gently nudge her shin under the table. \"You're moving in with the love of your life. I'm happy for you. You deserve happiness.\"\n\nMy Stepford monster must have been particularly convincing that day. Either that or Em knew I was faking it and chose to believe me anyway. She stopped fidgeting with her napkin and smiled at me, one of those radiant smiles that almost made losing my best friend worth it.\n\nAlex was good for her. I couldn't deny that. I could question it a little, and I had, more than once. I mean, the entire reason we were at that cafe having coffee was because Leia and Baylee were at the studio helping Mike and Alex with some fundraiser thing. Somehow, Em had gone from the kind of person who was hesitant to even let her daughter learn how to play guitar and who was openly resistant to letting her perform to happily agreeing to let Leia plan some charity concert. I mean, Leia had a fucking YouTube channel these days. She was just a kid, and she already had awards and... I had no idea when Em became okay with that kind of shit.\n\nLike, she was a good person. As a kid, she raised her little brother, and as an adult, she took him in. She was blunt and snarky and hilarious, but she was also kind and thoughtful. But I'd never known her to be the kind of person to do charity work. She didn't have the time for that stuff as a single mom, and it wasn't really her thing. There were more ways to be a good person than to do big, showy events or dedicate all her time to raising money.\n\nSomehow, though, Alex had turned her and Leia into the kind of people that like... planned fundraiser concerts for fun. And that was a change, of course, and it was my job as her best friend to question when she changed her life and personality and heart for a man.\n\nBut how in the fuck was I supposed to question a change that had her doing charity work?\n\nEven the monsters inside me couldn't justify it. Even if it meant I was starting to feel like I didn't know who she was. Even if it meant I was expected to help out with chauffeuring Leia and Baylee around a little more like I was that day so Em could do some photo sessions that night for some of the promotional stuff.\n\n\"You deserve happiness too, you know,\" Em said, pulling me out of my thoughts.\n\n\"Of course I do,\" I replied, taking another sip of coffee. \"After putting up with Daniel's all those years, I absolutely deserve a penis. A big one, even.\"\n\nIt came out louder than I intended. The mother across the cafe looked up, alarmed, but her son was still chowing down on the cupcake and hadn't heard my hilariously clever play on words.\n\nEm snorted with laughter. \"I said 'happiness.'\"\n\n\"And what is happiness if not a big, throbbing, hard--\"\n\n\"You're awful.\"\n\nI grinned. \"You love it.\"\n\n\"I do.\" She sipped her coffee. \"And so will the right guy. Once I'm done moving and things settle down a bit, you and I are going to go out on the town and find you a big throbbing hunk of happiness together. Then we can double date and shit.\"\n\nI lifted my almost-empty mug to her in agreement. \"And shit.\"\n\nMy inner monsters managed to maintain the slightly saucy cheerful humour as Em and I finished our coffees. Once she realized that I was at least pretending to be happy for her, she chattered endlessly about the move in a way that made it very clear she'd been planning to say yes to him for a while.\n\n\"I want us to be there for Christmas,\" she said. \"After the fundraiser, though. I can't plan a move and deal with that all at the same time. Probably at the beginning of December since it'll be that nice lull between people going 'oh shit, I need to order photos for Christmas cards' and 'oh shit, we didn't take a nice family portrait this year.' But that'll still give us enough time to settle in and for it to, you know, feel like home for Leia. And then Christmas will really make it feel like home, I think.\"\n\n\"Mm-hmm,\" I said.\n\n\"The girls can bunk together in Leia's room, but Alex has a guest room so you can stay over Christmas Eve. Then Jimmy can drive over in the morning since he's closer.\"\n\nI looked up, surprised. \"We're still invited to Christmas?\"\n\nEm stared at me, not bothering to hide the disbelief in her dark eyes. \"Of course you are. Why, do you not want--\"\n\n\"I do,\" I said quickly. \"We do, of course we do. The way you said you wanted it to feel like home, I thought maybe it was a family-only thing.\"\n\n\"It is,\" she said. \"And you're part of my family, so you better fucking be there.\"\n\nThe monsters were quiet, leaving me to fight back those weepy emotions all on my own. \"I'll be there no matter what.\"\n\nWe'd driven to the cafe separately so Em could go to her photo session while I drove back to the studio to pick up the girls after their planning session with Mike. It was nice, since I had a few minutes to feel cautiously cheerful after my chat with Em. I mean, it all still sucked, but we were going to make it work. We weren't family, but we were family.\n\nIt left me feeling pretty good, to be honest. But that all changed when I walked into the studio.\n\nHere's the thing about Leia.\n\nShe was a great kid. A really great kid. People loved her. Adults loved her, kids loved her, even the grumpiest grumpy fuck in the world--a.k.a. Mike--loved her. She might not have a father, but she had an abundance of male role models in her life. Alex was one, of course. He had been her guitar teacher, but he was also very much her father figure, even in the short amount of time since he and Em had gotten together. I guess that role becomes less complex when there's no one in it to oust in the first place, but he'd slipped into it so easily and smoothly that his role in Leia's life was unquestionable.\n\nThen there was Jimmy, the fun uncle, the man who got to spoil her rotten and treat her like a princess and set the standard of what she should expect to be treated like by a man when she was older. He was a teacher too, in a way: he was there to show her how to make mistakes and how to fix them. How to have fun and go on adventures and live life in a way that meant something.\n\nLastly, at least for the men in the room at that moment, was Mike. The grandpa figure. The curmudgeon who had a soft spot for Leia's particular brand of zest and excitement and doted on her relentlessly. Which was great for Leia, I'm sure, since Mike was a good person to have on your side, what with all the connections and apparent badassery.\n\nBut it sucked for Baylee.\n\nGranted, it wasn't solely Mike's fault that I walked in to see the three men showering attention on Leia while my daughter sat in an office chair. All of them were at fault for not seeing her expression as she sat there. Baylee wasn't the type of child to hide her feelings; she didn't seem to have an inside voice, and neither did her face.\n\nShe watched longingly as Alex laughed, showing Leia how to do something or the other on a small guitar. Mike sat nearby looking pleased as punch, a stack of posters abandoned on a nearby desk as he leaned forward to scold Alex jokingly. Jokingly. The old bastard was laughing about something. Jimmy was grinning, too, watching as Leia giddily strummed, then squealed.\n\nOn top of that longing was jealousy, though I recognized the way she was trying to cover that up. There was sadness, and loneliness, and a sense of exhaustion, the kind that someone gets after they've tried and tried and finally given up. And beneath it all, confusion, and not the kind I could explain away.\n\nMy little girl sat there, hurt and dejected, wondering why she was the sidekick in her own life, wondering what her best friend had that set her apart and made her more remarkable, more lovable, more worthy of attention than she was.\n\nAnd that pissed me off.\n\n\"Hi, sweetie,\" I said loudly, interrupting whatever it was they were doing.\n\nBaylee perked up, relief washing across her face. \"Mom!\"\n\n\"Kelsie!\" Leia said happily. \"Look what Mr. Mike got me! He got it special made!\"\n\nA new fucking guitar made just for her.\n\n\"Hey, Kelsie,\" Alex said. \"We'll be done in a few minutes.\"\n\n\"I don't have a few minutes,\" I said.\n\nI thought I said it politely, but my face didn't seem to have an inside voice, either. Jimmy glanced from me to Baylee with a look of concern. Alex looked stunned, and Mike's brow furrowed as his face sagged back into its usual irritable state.\n\n\"Baylee, Leia, let's go,\" I said.\n\n\"I'll, uh, go get the case.\" Alex gently took the guitar Leia was clutching. \"Back in a sec, honey.\"\n\n\"My backpack's in Mr. Mike's office,\" Baylee said quietly.\n\n\"I'll go with you to get it,\" Leia volunteered, sliding off the stool she'd been sitting on.\n\n\"Just as well,\" Mike said as the girls left. \"Had to talk to you anyway. Called in a few favours and managed to track down some Taylor Swift tickets. They're pretty decent seats.\"\n\n\"Wonderful,\" I said stiffly. \"How much do I owe you?\"\n\n\"Don't worry about--\"\n\n\"I'd prefer to pay. How much are they?\"\n\nI wish I could have blamed that stupid, stupid statement on one of my inner monsters, but it wasn't them. I was the proud one, the one who was angry and frustrated with the man sitting in front of me, the one who had it in her head that she didn't want to be indebted to the grouchy old fuck. Selfishly, I wanted to take credit for the gift. I had it in my head that I was proving a point, though I had no idea who I was proving it to. Myself, maybe. Daniel. Mike.\n\nIt didn't matter. Mike hesitated, then shrugged, and told me a number that nearly made me sick.\n\n\"Sounds great,\" I said instead of vomiting all over him. \"Is it okay if I pay that a bit closer to Christmas?\"\n\n\"Yep,\" Mike said gruffly. \"Whenever's convenient for ya. I'll give Em the actual tickets so you can wrap 'em up for the kid or whatever.\"\n\nAt least I had that much. It gave me some wiggle room, some time to... well. Daniel wasn't an option, so that meant taking extra shifts at work. I started doing the math in my head. I was sure Em would babysit and I could tell her that I needed to help out at work a bit more since we were ramping up for the holidays. And then there were the Saturdays that Baylee would be with Daniel. Working six days a week for a while wasn't that bad. I might be able to swing it. I mean, just barely, but it was theoretically doable. And that meant I didn't have to admit my failings to Daniel or Mike.\n\nThe only thing was that Em would probably wonder why I was working more, which meant the selfish, proud little monster inside of me would be forced to admit it was too expensive. And Em would be understanding, but that meant she might tell Alex, who might tell Mike, who... well. I just couldn't tell Em. I would tell her that we were short staffed. That I was doing my boss a favour.\n\nI hated to lie to her, but I would think of something.\n\nLini poked her head in the room a moment later to tell Mike about a problem in one of the studios. Sighing, he stood and grumped his way out of the room, leaving Jimmy standing there staring at me.\n\n\"Don't,\" I asked as he opened his mouth.\n\n\"Don't what?\"\n\n\"Don't ask me what's wrong.\" I folded my arms. \"I don't want to talk to you right now.\"\n\n\"Me?\" He looked surprised. \"What did I do?\"\n\nI shook my head silently. Jimmy waited, then folded his arms in return.\n\n\"Seriously? You're gonna act all pissed about something and not even tell me what I did?\"\n\n\"Yep.\"\n\nA hint of anger escaped in the form of a dry laugh. \"Didn't think you were the type to pull that shit.\"\n\n\"Didn't think you were the type to make my daughter feel like shit, but here we are.\"\n\n\"What?\"\n\nThe stunned look on his face was so disgustingly ignorant that despite saying I didn't want to talk to him, I couldn't stop myself.\n\n\"A new guitar,\" I snapped.\n\n\"Uh... yeah,\" he said. \"Mike got it custom made by--\"\n\n\"He got her a new fucking guitar and gave it to her in front of my kid. Leia got a new guitar and Baylee got ignored.\"\n\n\"That's not--\"\n\n\"That's exactly what happened.\" I glared at him, my heart hammering in my chest. \"The three of you didn't even notice her sitting there, did you? Baylee never shuts up. You know that. Other than me and Em, you're the adult who's probably spent the most time with her. She talks constantly. She smiles constantly. She--\"\n\nMy voice caught and I swallowed, tearing my eyes away from him before I started crying.\n\n\"I walk in here to see three grown-ass men doting on Leia while my daughter sat quietly to the side, so fucking upset that she was completely silent. You know how often that happens? And not one of you thought to check on her? Not one of you thought 'Hey, maybe spoiling one little girl in front of the other little girl is unfair'?\"\n\nI'd never seen Jimmy look quite so stricken or quite so ashamed. \"I'm sorry. I didn't think--\"\n\n\"I don't want to hear it.\" I tried to swallow back the words, but now that I was talking, everything seemed to pour out at once, and I was stuck desperately trying to assign my anger to something. Apparently, that something was Mike. \"Every time I bring her here, Mike acts like it's some goddamn miserable obligation to even treat her like she's human. She's just a kid. She's not Leia, but she's a kid. I don't know why you all act like he's King Shit of Turd Island, but I've never once seen anything from him that makes me think he's deserving of that kind of idolization.\"\n\n\"He might seem kinda... you know. But he does a lot of, like, charity work and shit. He's a good guy,\" Jimmy said.\n\n\"Oh, sure.\" I rolled my eyes. \"He's such a good guy. He makes up for the way he treats my kid by, what, making everyone else around him plan this stupid fucking concert? Pretending like he's so good because of all these charities he supports?\"\n\n\"Kels, come on. Don't be like this.\"\n\n\"I'm the one who has to go home now and try to make my daughter understand that she's just as special and just as talented and just as good as Leia because the three of you spent the afternoon tearing that away from her without even thinking about it.\" A tear spilled down my cheek. \"Like I get it, she's your niece and Mike's stand-in granddaughter, and she and Em are moving in with Alex so he's basically her fucking dad now, but that doesn't mean Baylee deserves to be treated as 'less than.' Is being considerate of her feelings too much to ask?\"\n\nHe frowned. \"Wait, Em's moving in with Alex?\"\n\nI didn't know that Jimmy still didn't know. Even still, I hadn't meant to let that slip. But before I could respond, Alex chose that moment to return. Jimmy looked at him, then back at me.",
        "Before anyone could say anything else, I decided I'd had enough and left the room.\n\n<p align=\"center\">Six</p>\n\nKids have the double-edged sword of inherent simplicity.\n\nUp to a certain age, things are very black and white to a kid. Baylee was smart as fuck and picked up on far more than I expected sometimes, but she was still a child. She might have understood the injustice and heartache of the situation, but to her, the problem was the men in the room.\n\nWalking away from them meant the problem was solved, at least in her eyes.\n\nI worried about it, late that night after poking my head in her room to make sure she was fast asleep. God only knew what the fallout would be, what sticky bit of trauma would follow her from that defining moment, what deep-seated lesson she had learned that would manifest in some strange way later in life. But Baylee didn't blame Leia for it; on the contrary, she couldn't stop expressing her excitement as I drove the two of them home.\n\n\"It looks so cool!\" she declared in the car.\n\n\"It'll make songs lots easier to play,\" Leia said. \"So I can learn them faster and you can sing along with me sooner!\"\n\nBaylee clasped Leia's hand eagerly, childish exuberance filling the back seat. \"I can't wait for you to play it more. Maybe I can be on your YouTube with you one day!\"\n\nThey giggled and chattered and I kept my eyes focused on the road, wondering with pride and shame how my daughter had ended up so selfless when she had selfish parents like me and her father.\n\nI expected Em to be pissed that I'd spilled the beans to Jimmy and had resolved to own up to it when she came to pick up Leia, but she already knew what had happened.\n\n\"I lost my shit on Alex,\" she said as soon as she walked into my house--without knocking, of course, because we didn't bother with those kinds of formalities anymore.\n\n\"I'm sorry,\" I said.\n\n\"Don't be.\" She walked to the fridge and grabbed two beers. \"Put the popcorn on, I'm starving.\"\n\nI grabbed a bag of microwavable popcorn from the pantry. \"I mean I'm sorry for... I didn't know you hadn't told Jimmy. Was he mad?\"\n\n\"Oh, that?\" She snorted and rolled her eyes. \"Of course not. If he wasn't pissed when he found out Alex and I were fucking, he wasn't going to be pissed about us moving in together.\"\n\nI smiled in spite of myself. Jimmy's discovery of Alex and Em's relationship coincided with my discovery that Jimmy had grown up and matured a lot. He'd overheard me and Em talking about the fact that not only was she sleeping with his boss, but with the guy who had ruined his career, and that they were the same guy. Both of us had cringed, waiting for Jimmy's trademark anger to show, and for him to storm off to find Alex and lose his mind on him.\n\nBut Jimmy just laughed, called Alex a fucker, and declared he was going to ask for a raise.\n\n\"He was concerned more than anything,\" Em continued as she opened the beers and passed me one.\n\n\"About what?\"\n\n\"You.\"\n\nI laughed, startled. \"What? Why?\"\n\n\"Well, aside from feeling awful about the whole guitar thing, he wanted to know who was going to bring Baylee to school and watch her and stuff.\"\n\n\"I hadn't thought about that yet,\" I lied.\n\n\"We'll figure it out,\" Em said lightly. \"Anyway, that was his main concern about that. Then the guitar thing was... well.\"\n\n\"It's... she's fine.\"\n\n\"Clearly,\" Em said, indicating the slightly off-key way my daughter was singing along to Leia's slightly off-beat guitar playing.\n\n\"I'm probably more upset than she is,\" I admitted.\n\n\"For good reason.\" She sipped her beer. \"I don't know who's asinine idea it actually was, but Alex took the blame for it. He said he should have told Mike to wait until Baylee wasn't there, but Mike was apparently crazy excited to give her the guitar.\"\n\n\"I wonder what that must have looked like,\" I muttered bitterly. \"Giddy as a schoolgirl, that one. Probably pulled a muscle trying to smile.\"\n\nShe burst out laughing. \"You know how he gets with Leia.\"\n\nOh, I sure did.\n\n\"None of them thought it through,\" she continued. \"Alex had the balls to ask how it was any different from a kid's birthday party.\"\n\n\"Fucking seriously?!\" I blurted. \"Because it's not her birthday and--\"\n\n\"--a kid understands how birthdays work but not necessarily how random fucking custom guitar gifts work,\" she finished. \"I know.\"\n\n\"Asshole.\"\n\n\"That's what I called him.\"\n\nWe paused, sipping our beer.\n\n\"And what did Mike say?\" I asked.\n\nThe shift was subtle, but there. Em tapped her beer bottle against the kitchen table.\n\n\"Well, I didn't talk to Mike,\" she said. \"And, um...\"\n\n\"What?\"\n\nShe sighed. \"Alex doesn't want Mike to know about it. He said he'd make sure nothing like it happened again, but... I don't know. Mike's kind of sensitive about Leia and I guess he's got some other stuff going on.\" She looked at me, dark eyes pleading. \"I know it's not fair to ask, but--\"\n\n\"Yeah,\" I said. \"Whatever. I won't mention it.\"\n\n\"Kels--\"\n\n\"Whatever, Em.\" I grabbed another handful of popcorn. Of course we were trying not to offend Big Mike's delicate sensibilities. Of fucking course we were. \"Look, maybe it would be best if Baylee didn't hang out at the studio for a while.\"\n\n\"Don't take away something she loves because you're mad at Mike,\" she said bluntly. \"I know it was a shitty thing to do, but--\"\n\nMy mouth dropped open. \"You think I would do that?\"\n\nShe had the self awareness to realize she'd crossed a line and the decency to look ashamed. \"No, I... that came out wrong.\"\n\nSure it had.\n\n\"I wouldn't,\" I said. \"I meant... I just--\"\n\n\"I know,\" Em said. \"If Baylee isn't... I mean, if she really doesn't want to spend time there, we can make sure the girls have somewhere else to hang out. This is all Alex's fault, remember? So he can figure something out for them. But if she does want to, I'll make sure they... it's going to be different.\"\n\n\"She's going to know if they're pandering to her,\" I said. \"She's not stupid.\"\n\n\"It's not pandering.\" She looked at me, earnestly fierce. \"Jimmy felt like shit. Seriously. You know he adores both of the girls?\"\n\n\"Sure. But Leia is his niece.\"\n\n\"Doesn't matter. Jimmy loves Leia, and Leia loves Baylee, and Jimmy feels as protective over Baylee as he does over Leia. He's spent so much time with the girls that... I mean, he cares about you both a lot, Kels. More than you know.\"\n\nSomething tugged in my chest as she said that. I sucked lightly on my lip ring but didn't say anything.\n\n\"He felt awful,\" she said. \"I don't remember the last time I heard him sound so upset with himself. He's not going to let something like that happen again.\"\n\n\"If you say so.\"\n\n\"I do say so.\"\n\nThe words stuck in my mind long after Em and Leia left. Long after Baylee had her bath and crawled into bed and let the memories of the day wash away. Long after I should have been asleep so I could wake up early and take advantage of the numbered days I had left with childcare in the morning.\n\nLong after I should have let it go, I held onto that flutter, the terrifying comfort I'd felt when Em said Jimmy cared about me and Baylee.\n\n<p align=\"center\">Seven</p>\n\nLies.\n\nAll of it was lies.\n\nLies, trickery, untruths, and fabrications. Straight up fucking delusional bullshit.\n\nI cursed them all. I cursed Em. I cursed the day that brought them into my life. I cursed Alex for instigating the whole thing. I cursed Ethan Poplin for making the damn thing. I cursed the inventor of the goddamn thing. I cursed Mike just fucking because.\n\nAll of them. Curses on all of them.\n\nEspecially that fucker Jimmy.\n\nI don't know how he convinced Em he cared for me. A master of straight-up deceit, that one. His actions weren't the actions of a man who understood what he was doing to me.\n\nAlthough I had to give him credit. He did care for Baylee. That much was clear the second he put that cursed instrument in her greedy little hand and taught her how to play it.\n\nA tambourine.\n\nHe gave my daughter a fucking tambourine.\n\nI would be haunted until the day I fucking died by the jingles and the jangles and the palm-slapping pounding of an eight-year-old girl's hand on the head of it. And yes, those were proper terms for parts of the tambourine, as Baylee so kindly informed me fifteen fucking times.\n\nThe thing was, I had been right. The day after the new guitar debacle, I brought Baylee over to Em's house to get ready for school like I always did. And like always, Em was in the kitchen, blearily brewing coffee and tucking Fruit Roll-Ups into Leia's lunch bag.\n\nAnd like sometimes, Alex was there, sipping coffee at the kitchen table as he flipped through some guitar magazine.\n\n\"Morning, Em!\" Baylee said cheerfully.\n\n\"Morning, Bay,\" Em replied. \"Leia's in her room. Go see if you can drag her out of bed, okay?\"\n\nBaylee dropped her bookbag and kicked off her shoes. \"You got it!\"\n\n\"No 'good morning' for me?\" Alex teased from the table.\n\nThe sunshine on Baylee's face flickered and my heart broke.\n\n\"Morning, Mr. Alex,\" she said politely.\n\nHe caught the subtle shift just as clearly as Em and I had, but smiled anyway.\n\n\"Hey, before you run off, I was thinking. Your mom says you're pretty good at art, right?\"\n\nShe brightened cautiously. \"Yeah, sort of.\"\n\n\"Well, Em and I were talking and we could use some help with the posters for the concert. What about if you and Leia came by the studio after school today and helped us make some? We could get Lini to print them so we can put them up around town.\"\n\n\"Oh,\" Baylee said. \"Um, maybe we could draw the posters at my house and then you can give them to Ms. Lini for us?\"\n\nAlex nodded casually. \"Sure, kid.\"\n\n\"I didn't say anything to her about not going to the studio,\" I said to Em as soon as Baylee rushed down the hallway to wake up Leia. \"This is the first I'm hearing about it.\"\n\n\"I believe you.\" Em glared at Alex. \"And I told you to give it some fucking time.\"\n\nThey were still squabbling as I left for work and when I picked the girls up after school, neither of them mentioned going to the studio or drawing posters for the concert. Instead, they shut themselves in Baylee's bedroom for what I was told was a Very Important Secret Project. I heard giggles and whispers and the occasional gasp of laughter accompanied by words like \"boyfriend,\" \"married,\" and \"in love.\" Before I could shit myself in panic at the fact that my eight-year-old was talking about boys, I heard a murmur about planning to \"trick them into a date\" and realized they were talking about setting up someone else.\n\nThat was a relief. I mean, they were eight. I told Em about it when she came to pick Leia up and we laughed, though we both cracked a beer and clinked the bottles together, silently grateful that we weren't the parents of whichever kids they were trying to set up on a date.\n\nA few days after that, I had to work late and asked if Em could take care of pick up. And that was where I fucked up.\n\nThe silvery rustling of the rattling jingles slapped me in the face as soon as I opened the door to pick up Baylee after work. I didn't make the connection at first; loud and strange noises weren't all that alarming on their own, not when I had a boisterous kid with a rambunctious best friend. It could have been some game they made up--Shake The Pennies Inside A Metal Can Because Of Reasons, for example--or a craft Em had invented to keep them busy--Put These Pennies In A Metal Can To Scare Away Bears Or Something, maybe.\n\nNo, what made it alarming was that I looked into the living room to see Jimmy sitting beside Baylee on the couch, grinning as she tapped and shook and struck the tambourine in her hand while Leia looked on excitedly.\n\n\"Mom!\" Baylee said. \"Look, Jimmy taught me to play this!\"\n\n\"Did he?\" I asked, trying to sound like I was something other than devastatingly horrified.\n\n\"She's pretty good,\" he said.\n\nThe cynic in me wanted to roll my eyes at him, assuming that he was being tongue-in-cheek at best and facetious at worst. I was halfway to giving him one of those \"I know what you're doing, asshole\" looks, but I couldn't.\n\nThe look on his face was so genuine and bright and proud that I just... I couldn't.\n\n\"Of course she is,\" I said instead, and Baylee beamed.\n\n\"Mom, watch!\" she demanded. \"I already know how to do, um... this thing.\"\n\nAnd she did a thing that featured rattling the tambourine and also hitting the tambourine. I guess it was good because Jimmy's face glowed with pride.\n\n\"Impressive,\" I said when the jingling faded.\n\n\"It is,\" Jimmy said. \"It's actually--okay, so, I have to double-check, but I think... I mean, if it's okay with you, Kels, but you know the Poplin Family Jug Band?\"\n\n\"I... yeah,\" I said.\n\n\"Okay, right.\" He was talking fast and motioned toward the tambourine. \"Ethan Poplin makes instruments and stuff. He made this as sort of a test thing, I think. But he was saying he wanted to incorporate some tambourine into their songs and asked if I knew anyone, and I said no but clearly I hadn't heard Baylee play yet.\" He looked at me imploringly. \"What would you say if Baylee maybe came to the studio to practice with the Poplins a couple of times? Then we could ask Ethan if she could play in the concert with them?\" He glanced at Baylee. \"Only if you want to, of course.\"\n\nWell, there was no question about it. She nearly jumped off the couch, her fist tight around the tambourine in her hand, her eyes wide and wild and eager and full of a passion I'd never, ever seen in her before.\n\n\"Mom, please?\" she asked breathlessly. \"Please, please, please can you ask Mr. Poplin?\"\n\nAnd how could I say no?\n\n\"No,\" I said.\n\nHer face fell.\n\n\"But you can,\" I continued. \"If you want to play the tambourine for the Poplins, you can ask Mr. Poplin if that would be okay.\"\n\nBoth Baylee and Leia shrieked with delight, and honestly, I had a feeling that Jimmy wanted to squeal right along with them. I sent Baylee to get her backpack out of Leia's room and as soon as the girls raced down the hallway, he stood from the couch.\n\n\"Is this because of the other day?\" I asked before he could say anything.\n\nThe almost-wholesome excitement on his face faded. \"Not even a little bit.\"\n\n\"Okay.\"\n\n\"I wouldn't do that,\" he said almost angrily. \"Ethan gave me the tambourine and I thought the girls might like it so when Em asked me to watch them, I--\"\n\n\"Wait, Em's not here?\"\n\nHe shook his head. \"She had a client tonight. Alex said he'd cover shit at the studio if I could watch them until she was back so...\" He shrugged. \"Anyway, I brought it over and Baylee saw it. It had nothing to do with... with that.\"\n\n\"Right,\" I said. \"Okay.\"\n\nHe glanced at the hall, then lowered his voice. \"But I am sorry, Kels. I fucked up. I'm sorry.\"\n\n\"Thank you,\" I said.\n\nHis jaw twitched and hurt flashed in his dark eyes before he looked away from me, nodding resignedly. \"Okay. I understand.\"\n\nD\u00e9j\u00e0 vu poured over me. There was a clamping sensation in my chest, guilt seizing me as I didn't give him the response he was hoping for. For half a heartbeat, I saw Daniel, and I braced myself for the inevitable gaslighting, the subtle nudges to direct me to do what he expected, the deprecating ridicule until I was the one apologizing for making him feel bad.\n\nBut that never came.\n\nOf course it didn't. Nothing about Jimmy was anything like Daniel.\n\n\"Jimbo,\" I said.\n\nHis mouth twitched and he looked back at me, one eyebrow flicking upward.\n\nI spread my arms. \"Come here.\"\n\nThe twitch turned to a full smile and he stepped forward, wrapping his arms around me as I pulled him in for a hug. Beneath the warmth of his body, I could feel the relief pouring off him, the gentle sigh as his tension slipped away.\n\n\"We're good?\" he asked.\n\n\"We're good,\" I replied. \"On that, anyway. The tambourine, on the other hand...\"\n\nHe snorted, but before he could say anything, the sound of two eight-year-olds giggling in the hallway interrupted us. We parted to see Baylee and Leia standing there, grinning.\n\n\"Hi, Uncle Jimmy,\" Leia said loudly.\n\n\"Uh... hey?\" he replied, confused.\n\nThey stared, then giggled again.\n\n\"Right,\" I said. \"Baylee, you ready?\"\n\n\"Yes, Mom.\"\n\nShe started towards the door, then stopped and rushed across the living room. Jimmy barely managed to get his arms open before she was hugging him.\n\n\"Thank you,\" she whispered, just loud enough that I could hear it, and that strange little flutter started in my chest again.\n\n<p align=\"center\">Eight</p>\n\nThe next few weeks weren't hell, but they were pretty close.\n\nThe only saving grace was that I was working six days a week, plus grabbing overtime hours wherever I could, so that meant I got a bit of reprieve from the sound of my beautiful, talented, determined daughter playing her tambourine at all hours of the day.\n\nShe loved the fucking thing. Loved it. If I'd let her, she probably would have slept with it like it was a teddy bear. Before school, she was playing her tambourine, and after school, she was playing her tambourine, and when bedtime rolled around, it was a struggle to get her to relinquish the goddamn thing. Everything in my life was done to the beat of the tambourine: washing dishes became an exercise in rhythm, I swept and mopped and cleaned in time to the ever-present tintinnabulation, and even taking a shit became a musical number.\n\nOf course, working that extra time meant one less day a week to spend doing all the other things I was supposed to take care of in my life. Casual nights with Em dwindled as exhaustion and obligation began to take over. The saving grace there was that Ethan Poplin had enthusiastically agreed to let Baylee play tambourine for them at the concert, so she was spending more time at the studio practicing and even performing with the Poplin Family Jug Band. Alex sorted it out so that he could pick the girls up from school those days and do some \"official\" guitar lessons with Leia while Baylee was practicing, which meant I could pick up a few extra hours here and there.\n\nIn a sick way, I was somewhat proud of how well I was covering up the stress I was going through. It gave me a sense of self-reliance, despite the fact that I was relying on other people heavily to help me. But each hour I worked was an hour closer to being Mom Of The Year in the category of Providing Basic Necessities And Bitchin' Christmas Presents Without Asking Her Squalling Turd Of An Ex For Help.\n\nWhich was something.\n\nBut the delusion that I'd been doing a good job handling it all came crashing down one Saturday night after I finished work.\n\nThe Poplins wanted Baylee to perform with them at some community thing, Em said, and the girls wanted to have a sleepover after, and would I mind if they had the sleepover at Alex's place so Leia could start feeling like her room there was her room?\n\nAnd that made sense, so I said yes, of course, and when I got home from work, Jimmy was sitting on my doorstep.\n\n\"What are you doing here?\" I asked as I slammed my car door shut.\n\n\"Bringing you food.\"\n\nThere were two large bags sitting beside him on the step. I glanced at them, then back at him with raised eyebrows.\n\n\"Why?\"\n\n\"'Cause you need a night to yourself,\" he said. \"That's why Em decided the girls were having a sleepover. She knows you've been working your ass off but that you'd never ask for a break. So she decided you were getting one and I said I'd bring dinner over for you.\"\n\nI eyed the overstuffed bags as I stepped past him to unlock the door. \"How much do you think I eat?\"\n\nHe followed me into the house, trapped behind me as I stopped to put my purse down and take my work boots off. \"Well, I was pretty hungry, so...\"\n\n\"So you figured you'd crash my night to myself?\" I teased.",
        "He grinned. \"Nah, I was gonna grab some to go, but I mean, if you're offering...\"\n\n\"Don't let me ruin your wild and crazy night,\" I said, straightening up as I tucked my shoes onto the mat. \"Besides, I haven't showered or anything. You don't have to subject yourself to my stinky after-work smell.\"\n\nThe way my house was set up, the entryway was pretty cramped. It was barely wide enough for Baylee to squeeze past if we entered the house at the same time, which meant a tall, fully grown man like Jimmy didn't have a chance to get past my dump truck ass. That could have easily been solved by me doing something sensible like moving out of the way, but when Jimmy caught my eye and leaned forward, all semblance of thought just... stopped.\n\nThere was half a smirk on his face and his dark eyes seemed to sparkle. Before I could even think to react, his face was to the side of mine, and I heard him inhale.\n\n\"You don't smell bad,\" he said, his voice low. \"Kinda uh... flowery. Like candles.\"\n\nI almost shivered, but rolled my eyes and slapped his shoulder. \"It's like I work at a candle company or something. And stop sniffing me, you creep.\"\n\nHe burst out laughing and pulled away. \"Go do what you gotta do. I'll get dinner on the table and then if you wanna kick me out, I'll go.\"\n\n\"Don't go,\" I said before I even thought the words. \"Hang out with me.\"\n\nI didn't quite know what to call the look on his face, but I liked it.\n\nWhile Jimmy got dinner sorted out, I showered quickly, though I still gave myself enough time to overthink everything while I was at it. How I felt like I didn't deserve this kind of kindness. How I was embarrassed that everyone had apparently noticed what I thought I'd been hiding so well. How easily I'd been swayed into letting him stay, and how delighted I was that he'd wanted to.\n\nYou know. Just your standard overthinking that had become a part of my personality after years and years of dealing with an ex that seemed to require it. Nothing entirely out of the ordinary, and once I was done, I debated putting on jeans and a nice top before shrugging on an old grey sweater and my comfiest leggings.\n\nI mean, who did I think I was trying to impress? It was just Jimmy downstairs. And after I'd left Daniel and his Wardrobe Regulations For A Proper Wife, I'd sworn that the next time I dressed for a man, it was going to be when they put me in my coffin to go see Jesus. Or if I really, really wanted to get laid, but that would be my choice, not someone else's.\n\nThe point is that my outfit was both a blessing and a curse when I trekked back downstairs and into the kitchen.\n\nIt was a curse in that I was almost blind-sided by the man in my kitchen. And I mean blind-sided. When I'd gone upstairs to shower, I'd left Jimmy--young Jimbo, Em's baby brother, fun uncle to my kid's best friend, notably younger than me by a not-insignificant amount--in the kitchen to set the table and dish up the Chinese takeout he'd brought over for dinner. When I returned, I saw... well.\n\nMy outfit was a blessing because it was still Jimmy standing in my kitchen, but it was Jimmy in a way I wasn't supposed to be looking at him.\n\nI don't know why it all hit me at that precise moment. Maybe it was the context: we'd been alone together before, but not... not like that. Not to have dinner and hang out and... you know. Be in each other's company or whatever.\n\nOr maybe it was the subtle shift in his demeanour: the maturity that seemed to make him stand up straighter and exude a quiet confidence instead of a screaming cockiness.\n\nOr maybe it was that I'd never seen him in anything other than concert t-shirts and ripped jeans, and now he was standing there in dark jeans and an unbuttoned plaid shirt overtop of a plain t-shirt, the sleeves casually rolled up to his elbows as he struggled to open a bottle of wine.\n\nIn any case, I was grateful I was dressed like a complete slob rather than in something that made me feel like I could have had a shot with him because that would have been even more problematic than the fact that he was opening a bottle of wine.\n\nOr, as I said, struggling to open the bottle.\n\nHe didn't notice me right away, which was good, because it gave me a moment to watch and let that strange feeling pass; the more he twisted the corkscrew, the more I saw of the Jimmy I was supposed to know, until I wasn't sure I'd seen anything else at all.\n\n\"Need a hand?\" I finally asked.\n\nHe looked up, his face turning red. The corkscrew was stuck, jammed into the cork at an angle. I pressed my lips together, trying not to laugh, and he shifted slightly as he cleared his throat.\n\n\"I thought I'd try to, you know. Class it up a little,\" he said. \"But, uh...\"\n\n\"First time?\" I teased.\n\nHe laughed. \"Yeah. I've never even had a glass before.\"\n\n\"Really? You've never had wine?\"\n\nHe shook his head and I smiled, stepping into the kitchen. Without saying anything, I reached for the bottle. He passed it to me and I undid all his hard work. Once I had the corkscrew out, I flipped out the little lever thingie, re-screwed it into the cork, and put the lever thingie in place. As I pulled the cork out in one smooth motion, he groaned.\n\n\"It's that easy?\"\n\n\"Sure is, Jimbo.\"\n\nHe'd put out two wine glasses and I poured a small amount into one, then slid it across the counter to him. He raised an eyebrow.\n\n\"That's it?\"\n\nI made a tsk-ing noise. \"This is how the pros do it. I pour you a small amount, you swirl it around and sniff it and shit, then you take a little slurp.\" I put some wine in the other glass and showed him the steps, then lifted it to my lips and took a sip. \"Then you say, 'mmm, that's quite lovely, is that from the Provence region of Italy? It tastes of smoked oak and ripened juneberries. That, along with the smoothness of the body, suggests the grapes were likely grown on a north-facing bush and harvested in early July. And do I detect a hint of tannins?'\"\n\nJimmy stared at me, then frowned down at his glass. \"Damn. I didn't know you knew all that shit about wine. I got this because the guy at the store said it was good.\" He shook the glass a bit, then took a sip.\n\nAnd he tried. He really tried. And I tried not to laugh. But he was able to keep his face neutral for all of a moment before his mouth twisted down and his nose wrinkled.\n\n\"Hmm,\" he said, his voice higher pitched than usual, and I completely fucking lost it.\n\n\"Not a fan?\" I managed to choke through my laughter.\n\nJimmy's cheeks turned red, but he grinned bashfully and set the glass down.\n\n\"Maybe it'll grow on me,\" he said. \"But, uh...\"\n\n\"Would you like something else instead?\" I asked. He nodded gratefully and I started laughing again, motioning towards the fridge before I poured more wine for myself. \"Help yourself.\"\n\nHe grabbed a beer and we moved to the table, which was teeming with styrofoam containers holding what appeared to be every dish the Chinese food restaurant made. The sweet and sour scent of overly sauced pork and greasy noodles made me realize how very hungry I was.\n\n\"How'd you learn all that stuff about wine?\" Jimmy asked as I started heaping my plate full of food. \"All I tasted was, like... wine.\"\n\n\"Oh, I'm completely full of shit,\" I said. \"None of that was true.\"\n\nHe laughed, his face turning pink again. \"Oh.\"\n\nThere was a lull; an awkward silence made worse by the fact that I couldn't decide if I was regretful or relieved by it. Mostly relieved, I told myself, since the level of comfort I was feeling with him was... well. He was my best friend's younger brother. Emphasis on \"best friend's brother\" and on \"younger.\" I swallowed hard and piled chicken-fried rice on my plate.\n\nStill, the awkwardness was... well, awkward.\n\n\"This is awesome,\" I said, hating the fake tone to my voice. \"You managed to get all my favourites. How'd you know?\"\n\nHe chuckled. \"Baylee was very specific.\"\n\n\"Baylee was in on this?\"\n\nHe looked like I'd caught him with his pants down. \"Sort of. She maybe said very pointedly that you deserved a nice dinner and spent a good ten minutes telling me what you liked.\"\n\n\"She's nothing if not thorough.\"\n\nWe chatted superficially over dinner. Easy things, unnoteworthy things, safe things about our day-to-day lives and shared connections. And that was good; it was right. But even as we cleared our plates and heaped them up again with far, far too much Chinese food, I could see Jimmy was holding something back.\n\nAnd that was terrifying.\n\nBut whatever it was, he didn't say anything about it. He told me about work and joked about the \"young punks\" he had to give tours of the studio to, kids from nearby high schools who were barely younger than him. And he told me about his side projects; bands he was playing songs with at gigs so he could keep performing now and then, songs he was writing in his spare time that he hoped Alex would help him with, even a new guitar he'd had his eye on that he was pretty sure he was going to treat himself to.\n\nIt was refreshing listening to him talk. Those mindless things, those hopeful things, those things that were real and right and normal for a twenty-one-year-old to be dealing with. Things I couldn't relate to, not having had the chance to experience them myself, since I was married to a monster at that age.\n\nThings that I so loved hearing about.\n\nWhen we finished eating, Jimmy put the leftovers away as I cleared the dishes. Then, instead of doing something useful like sitting around and finishing his beer, he made it even harder for me to not have more of those thoughts I wasn't supposed to have by helping me wash and dry the dishes.\n\nWhen we were done, we each grabbed another drink--more wine for me, water for him--and moved to the living room as easily as if we'd done it a million times before. I didn't have room for a full living room set, not that I'd ever needed one, so we had no choice but to sit side-by-side on the saggy old couch.\n\nA silent beat went by and just as I was about to propose watching an episode of whatever trashy reality TV show happened to be on that night, he cleared his throat.\n\n\"So, uh, I wanted to talk to you about something,\" he started.\n\nIt took everything in me not to look up at him in alarm. Instead, I stared at the darkened TV in alarm.\n\n\"What's that?\" I asked.\n\nHe cleared his throat again. \"It's, uh, something I'm not sure you know. But it's... well. I know it's kind of big and give me a chance to explain, okay? 'Cause I think... I think it's important. I've wanted to bring it up for a while.\"\n\nOh, God.\n\n\"Okay,\" I said hesitantly.\n\nHe took a moment to steel his resolve, then took a deep breath and looked at me earnestly.\n\n\"Baylee would be an awesome drummer,\" he said.\n\nThere it was.\n\nThat was why he was here, all dressed up, trying to make a good impression.\n\nI stared back, disappointed.\n\nNo.\n\nNo, that wasn't right.\n\nI stared back, relieved. So relieved.\n\nAnd then dismayed.\n\n\"Surely you're fucking with me,\" I said.\n\n\"I'm not fucking with you. And don't call me Shirley,\" he said, proving yet again that he was Em's brother, and I groaned as he grinned. \"Look, I know no one wants their kid to be a drummer, but Kels, she's just... she's got it.\"\n\n\"I... are you trying to kill me?! I've already put up with the tambourine at all hours of the day and now you want to introduce drums?\"\n\nHe held his hands up defensively. \"I'm not saying you have to, but she's a natural. Like, she just gets it. She's really good.\"\n\n\"How would you know?\" I asked. \"She's never played before.\"\n\nHe hesitated and I groaned.\n\n\"When?\"\n\n\"I'm sorry!\" he exclaimed. \"I showed them to her at the studio one day and it was like she just knew.\"\n\n\"You're killing me, Jimbo,\" I muttered. \"I live in a townhouse. The neighbours will kill me. I'm already dead. Tell Jesus I'm on my way to the grave right now.\"\n\n\"At least it'll be soundproof,\" he said.\n\nAs hard as I tried to keep being overdramatic, I couldn't keep a straight face. Jimmy grinned as I started laughing.\n\n\"Just think about it,\" he said. \"She'd be so good.\"\n\n\"Why drums, though?\" I whined, flopping back on the couch.\n\n\"Probably because it's the perfect balance for her.\" He shifted again, reaching for the glass of water he'd left on the coffee table. \"She's loud and out there, but she's not like Leia who can just immerse herself in the music and feel it, you know? Percussion gives her enough structure to let loose and work through stuff the way she needs to.\" He paused to take a sip of water. \"I used to play with a drummer who said it gives people the guidance they need to embrace their chaos.\"\n\nFor a moment, I had no idea what he was talking about. But even as I opened my mouth to express my confusion, I pictured my daughter. The little girl who was too much, too loud, too unabashedly herself, who understood too much and nowhere near enough. Who saw her best friend get things that she didn't and understood why at the same time that she understood nothing at all.\n\nAnd I knew what he meant.\n\n\"Man, I'm doing a bang-up job, then,\" I said. \"Giving her all that chaos to embrace.\"\n\nIt was meant to be a joke. Or, well, it was meant to sound like it was a joke. One of those jokes that wasn't a joke, just a statement I said like it was a joke because I wanted Jimmy to laugh at so the realization hurt a little less.\n\nApparently, though, he didn't get it.\n\n\"What d'you mean?\" he asked, frowning.\n\nI made a sound that was supposed to be a laugh. \"Oh, you know.\"\n\nAn annoyed look crossed his face. \"No, I don't.\"\n\n\"It was a joke, Jimbo.\"\n\n\"It didn't seem like a joke.\"\n\n\"Oh, now you're insulting my joke-telling skills?\"\n\nHis scowl deepened. \"You know that's not what I meant.\"\n\nOf course I did. And of course he wasn't letting it go. And of course he was scowling his trademark Jimmy scowl, which had absolutely no effect on me whatsoever, except that this time it did.\n\n\"She's got way more baggage than a kid her age should,\" I said, hardly aware I'd made the decision to speak. \"I mean, between me and her dad, she... she's not getting the normal childhood experience. I haven't been able to give her that. And that's why she's... you know.\" I laughed shakily again. \"Full of chaos.\"\n\nI was staring at his hands, for some reason, but from the corner of my eye, I could see him studying me.\n\n\"It's not you, Kels,\" he finally said. \"You know that, right?\"\n\nI didn't say anything.\n\n\"Kelsie,\" he said firmly. \"You know it's not your fault, right?\"\n\n\"I mean, it is.\"\n\n\"Wha--are you serious?\"\n\nI could feel heat rising up my neck as I stared at Jimmy's hands, needing something to focus on and hating that I'd chosen that particular thing. A creeping, crawling, nagging sensation was working its way up my spine, a coldness that was built on instinct, a warning in a calm, collected, hauntingly familiar voice to be quiet, woman, shut your fucking mouth.\n\nBut that voice wasn't Jimmy's voice, and that man wasn't here. And try as I might, I couldn't shut my fucking mouth.\n\n\"It is my fault,\" I said. \"I wanted her so bad. So I brought her into the world knowing damn well what kind of person she would have as a father. And when I finally figured out that she wasn't gonna get a normal childhood with... with how he acted and what he did to me, I took her away from a secure life to one where I can't--didn't, I mean, didn't know if I could make it paycheck to paycheck.\"\n\nIf I was someone else, a tear might have rolled down my cheek, but I wasn't. I was me, and I was focused on Jimmy's hands as hollowness filled my chest and my voice.\n\n\"I was selfish and now she's paying for it. I know no kid has a completely perfect childhood, but she's going to figure out how much more fucked up hers is.\"\n\n\"I don't even know what to say,\" he said.\n\nI smiled wryly. \"That bad, huh?\"\n\n\"Your take on it? Yeah, it's fucking awful.\"\n\nI was stunned enough to look up at him. There was a hardness in his gaze, but it softened as his eyes met mine.\n\n\"You wanted a kid. That's pretty normal. You had a piece of shit husband. That's less normal, but not your fault. He was the fucked up one, not you.\"\n\n\"If I'd just--\"\n\n\"If you'd just nothing. You got her out of there. You put her before yourself. That's literally the opposite of selfish.\"\n\n\"You don't get it, Jimbo.\" I laughed again, mostly to cover up that hollow upset still ringing through my voice. \"She's my kid. I love her. I want the best for her. Which means I know she deserves better than the shit parents she got.\"\n\n\"Not true. She's got a great mom.\"\n\n\"She's got a shit mom.\"\n\n\"You're not a shit mom.\"\n\nI should have caught the aggravation behind his insistence, but I didn't.\n\n\"I am,\" I said frankly. \"I can admit that, okay? Just because Daniel's horrific doesn't mean I'm not a shit parent, too.\"\n\n\"You know I fucking know what it's like, right?\"\n\nThe fire in his voice shocked me in a way it shouldn't have. Jimmy had always had a bit of a temper; not a scary one, not the kind that made him lash out or get physical, but even though he was far calmer and more settled than he used to be, that anger was still there.\n\nAnd he had a good reason for that anger, which I'd known. Apparently, though, I'd been so focused on myself that I'd forgotten why he harboured so much anger.\n\nBut Jimmy wouldn't ever forget. He couldn't ever forget.\n\n\"You know what my parents were like?\" he continued heatedly. \"You know. There's no way Em hasn't told you. You know I didn't know parents weren't supposed to scream at their kids constantly? Or that kids get presents on their birthdays? Or that people were supposed to eat three meals a day? You know they could've gotten us killed? You know they almost did? Or that they could've let CPS take us away, but then they wouldn't get their cut from the government, so they made sure they did the bare minimum to keep us at home? And you know how fucking low that bar is?\"\n\n\"I--no,\" I said softly.\n\n\"It's low.\" His voice wavered, not quite a crack but nowhere near steady. \"I know what shit parents are like. I know what it's like when someone treats you like nothing. Like you're a nuisance. Like you're not even a person. And I know that Em tried her fucking best with me, and I know she feels like she fucked up and maybe she did, but she tried, Kels. By your definition, that makes her a shit sister. D'you think she was a shit sister? 'Cause I don't.\"\n\nI shook my head, my lip trembling. \"I'm sorry.\"\n\n\"Don't be.\" His cheeks were red, but some of the ferocity in his words began to fade. \"Don't apologize. Just don't say you're shit, okay? You know how much would've been different if either of my parents cared about me the way you care about her? You know what I'd give to have someone like you in my life?\"\n\nI hated that he said it.\n\nI hated the way his voice wavered and the earnest, heartbreaking honesty in his voice. I hated the yearning, the regret, the way it was so clear he felt like he'd missed out on something and the knowledge that it was true. I didn't know Jimmy's parents, but I hated that they'd done that to him, that here he was, years later, not sure why he'd had to go through the shit he did. Why he'd been so unlucky, why he hadn't been loved unconditionally the way that any and every child should.\n\nAnd I hated, I fucking hated that it had the effect he'd intended. That the thought of how much worse I could be as a parent offered an undeniable comfort. That as chaotic and precarious as Baylee's life was, she would always know she was loved.\n\nHe wasn't looking at me. I don't think he could bring himself to. I glanced at his hands again. They were in his lap, fists clenched, knuckles white, and I couldn't stop myself from reaching forward and putting my hand over one of his."
    ],
    "authorname": "MsCherylTerra",
    "tags": [
        "christmas",
        "older woman",
        "younger man",
        "romance novella",
        "romantic",
        "drama",
        "single mom",
        "novel",
        "oral sex",
        "erotica"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/selfish-love-2"
}