{
    "title": "The Porch Wolf Ch. 51-Conclusion",
    "pages": [
        "Olivia Lawrence's POV \n\nWe loaded up into the three vehicles and joined the line of cars departing the parking garage of the Georgia Aquarium. I was nervous about Leo and Adrienne; now that the case was with the jury, anything could happen. \n\nI didn't know what I would do if they were found guilty and executed. Leo was a friend before he was my Alpha; I met my mate through him, and he was a better father to me than my own. Vicki loved Leo and Adrienne and would be devastated if her Alphas died. \n\n\"Where do you want to eat,\" Luna Carolyn asked as she pulled her phone out. \n\n\"My Sharkbait here likes her meat,\" I said with a smile. \"If she stays awake long enough.\" \n\n\"You won't find steakhouses open this late, it's mainly bars left open,\" Donna said. \"Would pizza be all right? There's a good place nearby.\" \n\n\"PIZZA!\" Vicki was clapping her hands together. \n\n\"Sounds like a winner,\" I said. Bonnie got on her phone and gave Anita directions to Max's Coal Oven Pizzeria, which was only a few blocks away. The smell of sauce and cheese had my mouth watering before I even got out of the car. \"I'm still getting used to how much more I can smell and taste now, much less see,\" I said. \n\nOur protective detail had sent a man ahead to check out the place, and when all was good, the group of us went inside, and the hostess sat the six of us at a long table in the center. Our guards took a booth near the entrance. We ordered five large pizzas and talked about what we'd seen tonight. Five minutes after our drinks arrived, my phone buzzed. \n\nAnd buzzed. \n\nAnd buzzed again. \n\nAnd it wasn't just me; all of us, even the Lunas, were getting text messages at the same time. \"Oh no,\" Bonnie said. \n\nAnita's face was pale. \"What are we going to tell Vicki?\" \n\n\"About what,\" I said. I hadn't started reading the texts yet. \n\n\"Leo collapsed in court. He's had a heart attack,\" she replied. \n\n\"We have to get back there,\" I said. I waved at the waitress. \"We've got an emergency, can you box up the pizzas and put the drinks in to-go containers?\" \n\n\"Of course, Ma'am.\" \n\nLuna Bonnie tossed a hundred-dollar bill on the table as the others downed their drinks. \"Use the bathrooms before we go, we're not stopping,\" she said. \n\nI took Vicki's hand and pulled her towards the bathrooms. \"What's going on, Mommy?\" \n\n\"Leo's in the hospital, and we need to get back to him,\" I said. \n\nShe stopped, making me halt, too. She looked up at me, her eyes watering. \"Unky Leo is sick? Will he be ok?\" \n\nI bent down and wiped her eyes. \"I don't know, baby. We're going to take our food and drive fast to see him, and we can pray together that he's all right.\" Vicki liked praying with me for people; her little face took on a determined look. \"Well, come on, we have to go!\" We did our business, all of us did, just in time for the pizzas to come out. Luna Bonnie and Mark grabbed them as we took our drinks, and in minutes, we were back on the road. \n\nAs Mike pulled onto the freeway, I unfolded a napkin to put on Vicki's lap and put a few pieces on one of the paper plates for her. I got my slices and ate while I was catching up on the text messages. Word of his heart attack had spread through the Pack like wildfire. Brent was helping Luna Susan back at the Pack, and he had sent out several group texts, and a few more to me. I dialed his number. \"Brent?\" \n\n\"Oh, Liv, are you all right?\" \n\nMy voice was breaking as I talked to my mate. \"I don't know. Have you heard anything?\" \n\n\"No, we're in Atlanta. Some of the Lunas took us to the aquarium, so we would be out of the way.\" \n\n\"That's for the best,\" he said. \n\n\"I'll call you if I hear anything else,\" I said. \"We're on our way back.\" \n\n\"I love you, Liv, and tell Vicki I love her too.\" \n\n\"I love you, Daddy,\" Vicki said in between bites of her all-meat pizza. \n\n\"I love you too, Sharkbait.\" He hung up the phone, and I went back to eating. \n\n\"Don't look at your phone, Liv,\" Anita said to me as I heard Bonnie gasping behind me. \"And don't react to this.\" Oh crap. \"Leo's dead, Liv. Massive heart attack, he never had a chance.\" \n\n\"No,\" I said. \"Oh, God!\" I looked back at Bonnie; her eyes told me she knew. I shook my head no as I pointed at Vicki; she didn't need to know right now. \"How long until we get back there?\" \n\n\"Just under two hours if we don't get pulled over,\" Mike said. \n\nI sent Brent a text saying I'd heard, and we were heading back as quickly as we could. \"IS THAT A GOOD IDEA,\" he responded. \n\n\"THINKING NOW. BYE.\" I turned the phone off, not wanting Vicki to get a glimpse at the screen, and not wanting the constant buzzing of all the messages. \"What do we do now?\" \n\n\"It's going to be hell on Adrienne, but she has her son and his mate there with her,\" Mike said. \n\n\"We left because we didn't want the uncertainty of what would happen to Vicki if Leo died,\" Anita said. \"We're going right into the fire.\" \n\n\"And the Lunas aren't stopping us,\" I said. \"We have to get away from them.\" \n\nAnita was panicked. \"And go where? They'll be looking for us at the airport and back home.\" \n\n\"It doesn't matter right now; we need to get rid of our escort first.\" We drove for a few more minutes while he thought about how to do it. It wasn't going to be easy; we had a car with two warriors in front and back of our own, plus two Lunas inside. We had to lose the escorts, then get the two out of the car. \n\nVicki polished off half a pizza before her eyes started to close. I used the wet wipes on her face and hands as she was falling asleep. With the long day and the food, she'd be out for hours. \"Vicki's asleep.\" \n\n\"I've got an idea, be ready as we approach these exits. The timing has to be perfect, or I'll go to the next one. Anita, have your knife ready in case Bonnie tries to stop us. Liv, reach forward on my left side, and take my knife. Keep it hidden; when I tell you, you have to use it to keep Carolyn from stopping us.\" \n\n\"I'll be ready, love.\" \n\nI watched the miles go by anxiously as we drove east on Interstate 20. We were in the left lane of the freeway, moving at over eighty-five miles an hour when the next exit came up. \"Hold on tight,\" he said as we pulled ahead of a semi-truck in the right lane. I grabbed the handle and braced myself as he suddenly swerved in front of the truck, barely making the exit ramp. The minivan went right to the edge, almost rolling over before he got it back under control. It worked; the trail car couldn't react in time and couldn't use the right lane. They would have to turn around, and that gave us precious seconds. \n\n\"What are you DOING,\" Bonnie said. \n\n\"Stay quiet and do nothing,\" Anita said as she pressed the knife to her throat. \n\n\"Don't move,\" I warned Carolyn. I had my left arm around her neck, the knife poised at her throat as I hugged the back of the passenger seat. \n\n\"Don't do this! We are trying to help you,\" Bonnie said. \n\n\"Forgive us if we're a little hesitant to trust the Council right now,\" I said. \n\nMike had made a couple of turns, pulling into a McDonald's. \"I think we lost them,\" he said. \"Ladies, get out.\" \n\nCarolyn opened her door, and I moved into the passenger seat as she got out. Mike pushed the button for the sliding door, and Anita made sure Bonnie left too. \"It was a fun evening,\" Anita said. \"Go, Mike.\" \n\nHe pulled forward even before the doors closed. \"Toss the phones, they'll use them to track us,\" Mike said. I handed rolled down the window and tossed it into a drainage pond we were passing. We got out onto the city streets, heading away from the freeway. \"We need to get rid of the rental car. Sooner or later, they'll report it stolen or get someone to hack the GPS.\" \n\nI got on the minivan's navigation system and found the closest National Car Rental location that was open. We headed south until we picked up 407, heading southwest of Atlanta until we arrived. Mike turned the rental van in while I waited by the curb, a sleeping Vicki still in her booster seat. Anita rented a mid-sized car and helped me load Vicki into the back as Mike returned. He pulled out of the lot and back onto the road. \n\n\"Where to,\" I asked. \n\nMike just shook his head. \"Worst case, the Council uses all its resources to come after us. Rewards, wolves sent out to look at likely places, stakeouts around our Pack and our families. We have to avoid detection and wait it out,\" he said. \"Two, three weeks, maybe more. When we make contact with someone in our Pack, it's in a driveby using a mental link. Until then, we can't have ANY contact with anyone.\" \n\n\"What if our Pack isn't around by then?\" If Leo was rogue, who knows what might happen to the rest of us. \n\n\"Then we won't be able to hear anyone on the Pack link,\" he said. \n\n\"South,\" I said. \"They will expect us to head home.\" \n\n\"Anyplace in particular?\" \n\nI thought about where we might go that was away from wolves. I'd love to go to Disneyworld, but werewolves visited theme parks too. It wasn't like you could hide a five-year-old with the Alpha mantle. It needed to be out of the way, remote, and with some room for us to let our wolves out. \n\nAnita poked around on the navigation system. \"Let's head towards Montgomery, then west to Texas,\" she said. \"No one will expect it.\" \n\n\"Fine,\" he said. \"We don't have any clothes or anything.\" \n\n\"Leo gave me a debit card with access to an account he'd set aside for us. We have enough money to make it a month if we have to. Drive through the night, we'll take shifts,\" I said. \"We can stop at a Wal-Mart in the morning and get clothes and stuff.\" \n\nIt was a good plan. Get far away and stay out of sight. \"Get some sleep,\" Mike told us. \"We'll be two states away by morning.\" \n\nCh. 52 \n\nLuna Carolyn's POV \n\nI watched the minivan pull away from us in the McDonald's lot, pushing down my wolf's desire to go after them and make them pay for threatening us. \"Call the guards, I'm calling my mate,\" I told Bonnie. She dialed one number while I dialed another. \"Lewis, it's me. Liv and the others kicked us out of their car and drove away after learning Leo was dead.\" \n\n\"Shit.\" I heard him talking to some of the others. \"Sanders will be back soon, and we'll talk about it. Have the guards pick you up, and I'll call you back. Are you all right?\" \n\n\"Shaken up, but all right. We got kicked out at knifepoint after almost crashing the minivan to get away from our escort.\" I heard his growl at knowing that we were in danger. \"We should have expected it with the news of Leo's death. They don't trust us, love.\" \n\n\"We haven't given them a good reason to trust them. I love you, baby.\" \n\n\"I love you too.\" I'd just hung up when one of the guard cars pulled up, and we got in the back. Bonnie had told them the last direction we'd seen the minivan going, and we headed that way. Five minutes later, it was clear they were gone. \n\nLewis told us to come home, so we got the cars back to the freeway and drove east. \"Dammit, they took all the pizza with them,\" I said as my stomach growled. One slice just wasn't enough. \n\nAlpha Anthony McInnis' POV \n\nOnce we got to the room, I called my Betas to join us. \"Keep the illusion going,\" I told her. When the Betas arrived, I switched to the link. \"From now on, only mental communication. Pamela, I need you to stay here, and I need them to guard you. Things are going to get bad out there tonight, and I don't want you anywhere near it.\" \n\n\"What's going on,\" my Beta asked. \n\n\"I can't divulge that now,\" I told them. \"The doctors needed to sedate Mom; when she wakes, she's going to need our help.\" \n\n\"I can't imagine how tough it will be to lose her SECOND mate,\" the Beta female said. \"We'll do everything we can.\" \n\n\"I know you will. I'm going to head down and figure out what is going on. I'll keep in touch.\" I kissed Pamela deeply, then walked out. My wolf and I hated lying to my packmates, but the illusion had to be complete, or it would be for nothing. \n\nI headed downstairs to the entryway, where most of the Alphas and Betas were gathered and talking. Chairman Sanders came in and called for quiet. \"The trial will not restart tonight, even if the Jury returns a verdict,\" he said. \"With one defendant dead and the other sedated, we will resume no earlier than tomorrow morning. The Single Wolves Reception will start in twenty minutes. All unmated females are to report to the Gymnasium, and all males line up outside the East entrance. \n\n\"Twenty minutes to scratch and sniff, no trial until the morning,\" I sent to the three in our room. \n\n\"May Luna bless some with their mates,\" Pamela said. \n\n\"May Luna rescue them from awkward moments,\" I replied. I'd only attended one. It was when I turned eighteen, and I found Pamela partway down the line. She was twenty-two, and it was her fourth. \n\n\"You never knew the disappointment that came with being alone at the end of the night,\" she said. \n\n\"I'm the luckiest wolf in the world. I found you my first try,\" I said. I closed the link and started walking around, keeping my eyes on Alpha Mark. He didn't have much time to talk to her; since Brenda had rejected John as her mate, both of them had to attend the Scratch 'n Sniff. I watched as Mark caught Brenda's eye and walked away. She followed a minute later. \n\nChairman Steele walked up to me. \"I need to speak to you in private, Alpha McInnis,\" he said. \n\n\"Of course, Mr. Chairman.\" He led me out of the room, but instead of heading upstairs to the offices, we went downstairs. He led me to a door marked \"SECURITY CENTER.\" A guard was waiting, his gloved hands holding a collar. \"Let him put that on, and then you can come in,\" he said. \n\n\"You're silvering me?\" \n\n\"We can't take any chances that you will link to someone and ruin the operation.\" \n\n\"Love, I'll be out of touch for a while, don't worry if you can't link me.\" \n\n\"Is everything all right?\" \n\n\"Of course. Love you.\" I turned around and let the man attach the silver-core collar. He closed the locking mechanism and slid the cover over it. The metal was dipped in black plastic, so it didn't burn my neck, but it cut off my wolf. I didn't like it a bit. \n\n\"Come on.\" The guard opened the door, and we walked in. \"The wires are working well?\" \n\n\"Perfectly,\" the guard Captain said. \"We have audio and video from this camera hidden in his tie, and audio backup from under his shirt.\" The room was full of screens showing the installed security cameras, but the main screen showed what Alpha Mark was seeing. \"We have officers surrounding the area, far enough back not to raise suspicions.\" Mark was walking into the woods surrounding the main compound. He found a small clearing and sat on a fallen log. It wasn't long before Luna Brenda Petersen arrived in her cocktail dress and handbag. \n\n\"You wanted Leo dead, and he's dead. I want my money.\" \n\n\"How did you do it?\" \n\n\"That's not your business, it's mine,\" I said. \n\n\"It is my business if it can blow back on me,\" she said. \n\nHe paused. \"Fine. I used a poison ring. He barely felt the poke, and the toxin causes cardiac arrest after ten minutes or so.\" \n\n\"Poison can be detected, Mark! They can find it in an autopsy,\" she said. \"I've got a claim in on his heir. If they figure out Leo's death was murder, I'm the prime suspect.\" \n\n\"And that's why you pay a professional. Fifty thousand dollars, in cash, now.\" \n\n\"I don't have all of it here. I can transfer the balance, or have it delivered to you after the summit.\" She pulled her purse around, reaching in and taking out a wrapped stack of bills and handing it to him with her left hand. \"Ten thousand.\" \n\nHe reached down as she came closer, taking the bill. The next moment, the camera was moving around, and we saw a flash of a silver knife. \"BITCH,\" he said. \n\n\"MOVE IN AND TAKE HER DOWN,\" the Captain said to his men. \n\nThe camera recorded the last moments of Alpha Mark's life; the camera showed the knife plunging into his heart before he fell to his knees. The last thing it showed was the pine straw as he fell face-down onto the forest floor. \n\nThe security controller shifted to one of the bodycams of a guard responding to the scene. They arrived twenty seconds after the order and surrounded a shocked Luna Brenda. \"You're under arrest for murder,\" one of the men said as he pointed a rifle at her. \"Drop the knife and get on your knees.\" \n\nShe looked around frantically, but there was no escape from this. The bloody knife was still in her right hand, her body covered in Alpha Mark's blood. \"I can't,\" she said. Before anyone could react, she slammed the silver knife into her heart. \n\n\"GET A MEDIC HERE,\" one of the men shouted as they rushed forward. A gloved hand removed the knife and placed a handkerchief over the wound. It was hopeless; silver prevented clotting, and the bleeding wouldn't stop without surgery. Brenda's eyes glazed over, and her body went limp before the medics arrive. We watched as they worked on Brenda for a minute before the men sat back. \"She's dead, Captain.\" \n\n\"Bag them up and bring them to the morgue,\" the Captain replied. \"Send guards to arrest the mates and Betas until we can find out how much they knew about this.\" \n\n\"Fuck,\" I said. Brenda and Mark had avoided a public trial and punishment, and I was pissed. \n\n\"It's not that bad an outcome,\" Chairman Stevens said. \"Brenda was going to die, but we would have to spare Mark for making the deal. This way, both are dead, and we can deal with the cancers in their Packs.\" \n\nI let out a breath. \"What about Leo?\" \n\n\"In the morning,\" he said. \n\n\"Everyone thinks Leo is dead,\" I said. \"That was all to set up this trap, and that's over. Can we tell the truth?\" \n\n\"Not a good idea, sir,\" the Captain said. \"We don't know if any of the other Stillwater or Marengo Pack members were involved yet. We need to complete the arrests and conduct interrogations. The safest place for Leo to be right now is dead.\" \n\n\"I agree,\" Chairman Sanders said. \"We will reveal at the start of the trial in the morning. Anthony, it goes without saying that you can't say anything about this.\" \n\n\"Of course, sir.\" I thought for a moment. \"People are going to notice the two are missing, and the arrests of the Pack members. We have to tell everyone something.\" \n\nThe Chairman thought for a minute. \"A private dispute between the Packs turned deadly. The Council is investigating,\" he said. \"Captain, I need an edited copy of the video, including the aftermath, for the morning.\" \n\n\"Yes, sir,\" he said. \n\nI had one more thought. \"Mr. Chairman, the Miesville Pack members must be frantic about Leo's death. Can we tell them?\" \n\n\"They are in Atlanta right now; they visited the aquarium with two Council Lunas. We can inform them when they return, as long as they remain isolated from everyone else.\" \n\nIt was the best they would get. I could only imagine what Olivia and Vicki, wolves for less than six weeks, would think about all this. All they knew was Leo and Adrienne, and you could see how much they loved him. \n\nSharkbait must be inconsolable. \n\nThe guard removed my collar before I left. \"Baby?\" \n\n\"You're back, thank Luna,\" Pamela said. \"What happened?\" \n\n\"It's over, but I don't want to tell you any details until it is revealed. Sorry about the link block, he had me silvered until the operation was over. I just got out.\" \n\n\"Are you coming back?\" \n\n\"No. I've been asked to help oversee the scratch and sniff; why don't you join me? The Betas are released.\" \n\n\"I'll meet you downstairs in ten. I have to get ready,\" Pamela replied. ",
        "I had a good twenty minutes to hang out and drink with the other Alphas, easy. \n\nCh. 53 \n\nLuna Carolyn's POV \n\n\"We're entering Pack lands,\" I sent to Lewis as we drove past the guards at the entrance. \n\n\"How are you,\" my mate replied. \n\n\"Tired and hungry. All our food was left behind, and we got back here as quickly as possible.\" I could still taste that pizza, and I wanted more. \n\n\"I'll have the kitchen send some food to the clinic. I need you and Bonnie to come to the clinic. The guards will let you in.\" \n\nNow I was alarmed. \"What's going on?\" \n\n\"Luna Brenda of Marengo Lake killed Alpha Mark Conway of Stillwater.\" \n\n\"Why?\" I felt terrible, Luna Belinda was fourteen weeks pregnant with their first child, and now their baby wouldn't have a father. \n\n\"Brenda paid Mark fifty grand to kill Alpha Leo Volkov. It's all on tape, but she pulled a knife and killed him instead of paying him the money. When our guards arrived moments later, she killed herself.\" \n\n\"Oh, my LUNA.\" What a mess, two Alphas dead at the Gathering? Three with Leo? \"Is Belinda at the clinic?\" \n\n\"We took everyone left in both Packs into custody, and Luna Belinda started to miscarry. She's in the clinic now. The other Council members and I are waiting for news. Come straight here, to the conference room.\" \n\nThe driver was already heading there, thanks to Donna, but her mate hadn't told her why. I filled her in before the car stopped. We were out of the back in a flash, hurrying to the door and pushing aside the guards. \"Belinda must be a mess, she's going to need us to pull through,\" I said as we moved down the hall. We burst through the door, and I froze. \"What the HELL,\" I said as I saw Leo and Adrienne sitting in the corner. \"You're DEAD!\" \n\n\"Don't say anything to anyone outside this room. We don't know how big the conspiracy was yet,\" Chairman Sanders said. \n\nLewis pulled me into his lap; I leaned back, letting him scent me to calm his wolf. \"Olivia and Vicki took off after they heard you were dead! Have you at least told them it isn't the case?\" \n\n\"We can't tell anyone outside of this room until morning,\" the Chairman said. \n\nMy jaw dropped; I couldn't believe it. \"OLIVIA AND HIS BETAS THINK HE IS DEAD! How can you DO that to them, to his Pack?\" \n\n\"That's enough,\" Chairman Sanders said with a growl. \"Council business takes priority over a minor inconvenience to a Pack, especially when the Alpha involved is already facing death!\" \n\n\"I...\" I shook my head; I couldn't believe this. \"There is a little girl out there who will be crushed when she finds out her Alpha, Unky Leo, is gone. His Pack may already be disbanding, afraid of what will happen if he is gone. This is madness!\" \n\n\"Control your mate, Chairman Wolfe, before I have her silvered and restrained,\" he replied. He didn't like a woman questioning his decisions. \n\n\"Why not silver someone else, it worked on a FIVE-YEAR-OLD,\" Bonnie said. \n\n\"WHAT,\" Leo asked as he jumped to his feet. Two guards behind him shoved him back down in his chair. \"YOU SILVERED MY HEIR?\" \n\n\"The Lunas stopped that as soon as we found out about it, Leo,\" I said. \"It was a serious lapse of judgment by people tasked to place her in protective custody. Bonnie and I took them all to the Atlanta Aquarium for Vicki's birthday, and she had a great time. If it not for the news of your fake death, she'd be here with you right now.\" Adrienne calmed him down, and I continued. \"What will they do now? Where will they go?\" \n\n\"They'll hide from you,\" Leo said. \"With me gone, Vicki has no protection from those who would use or kill her. Mike, Anita, and Liv will disappear to protect her.\" \n\n\"Shit,\" Lewis said. \n\n\"Worse than that. My Betas will expect the Pack to be taken over by the Council, so they won't call anyone or ask for help. They'll find somewhere far from any Pack and settle down. I've given them access to funds that can support them for years if needed.\" Leo put his head in his hands, and I could feel the pain off of him. Vicki was family. \n\n\"We'll deal with that in the morning,\" Sanders said. \"For now, you should get some sleep. The Captain is conducting interrogations with the other Pack members to see what they know. We should be able to 'undead' you when the hearing picks up in the morning.\" \n\nOne of the guards came in with a tray filled with sandwiches, chips, and drinks. Lewis got me an Italian meat sandwich, Cool Ranch Doritos, and milk. With everyone eating and the Chairman on edge, it was better to shut up and eat. \n\nOne of the doctors poked his head in, his scrubs stained in blood. \"We did everything we could, but she lost the baby. We couldn't stop the blood loss. Belinda didn't make it; we called it five minutes ago,\" he said before he went to shower. \n\nMy sandwich fell to the table, and I started to cry. \n\nOlivia's POV \n\nIt was two in the morning when Anita woke me up. \"We're almost to Mobile, Alabama. I need to get gas and let Anita drive,\" he said. \"We should all use the bathroom. Bring Vicki, too; we won't stop again until morning.\" \n\nI rubbed my eyes; Mike was slowing as we exited Interstate 85. He pulled into the truck stop and parked by the gas pump. I turned to Vicki, shaking her gently until she stirred. \"Come on, Sharkbait! Time to go to the bathroom.\" \n\nShe rubbed her eyes and slowly woke as I undid the buckles on her toddler seat. She didn't want to walk, so she held onto my neck as I walked across and into the bright store. I found a family bathroom and went in with her. \"I don't need to go, Mom,\" she said. \n\n\"We're going to be driving for a while, so go anyway,\" I said. After we were both done and washed, I carried Vicki back out. She was asleep again before Anita came back with a bag. \n\n\"What did you get?\" \n\n\"Mountain dew and chocolate donuts,\" she said. \"I can drive all night on those.\" I just rolled my eyes. \"There's still pizza around. I picked up some apples, bananas, and Twinkies, too.\" \n\n\"Twinkies?\" I just shook my head. \"They have an expiration date only because the Government makes them have one!\" \n\n\"This isn't Zombieland, even though he was right,\" she said. \n\n\"They are so artificial they don't even spoil! Anita, if a pill bottle says 'take with food' and all you have are Twinkies, you should wait,\" I told her. \n\n\"Creamy goodness and spongy cake! More for me, then,\" she said with a grin. She pulled up to the door, waiting for Mike to get out of the restroom. \n\n\"Where are we going?\" \n\n\"It was a combination of two factors. We looked for the best aquarium in Texas that wasn't near any Packs. We're heading to Corpus Christi.\" Dang, that was almost to Mexico. \"It's too hot, open, and dry for Packs down there. The other option was near Dallas, but there is a Pack in Denison.\" \n\n\"Seriously? We're picking a hiding spot based on aquariums?\" \n\n\"Vicki needs distractions. There are worse ways to do that than to hop from aquarium to aquarium.\" \n\nI thought about it. \"What if we run across other werewolves?\" \n\n\"We leave,\" she said. \"We won't be staying anywhere more than a day or two. It's better to stay on the road.\" \n\nMike got in the passenger seat, and Anita got back on the road, following the navigation system. I moved back to the third row, laying down to sleep. I'd drive at the next stop. \n\nIvan Volkov (John Petersen's) POV \n\nSo far, the Summit was a waste of my time. I wasn't allowed in the courtroom to support my brother because I wasn't an Alpha anymore. Brenda didn't include me in any of her discussions, as I was 'only' her protection. Once she figured out no one was going to challenge her, she told me to stay away from her. \n\nThat was the easiest order to follow that she'd ever given me. I hung out with the Betas, drinking and watching sports in the basement until it was time for the singles to head up for the mandatory disappointment period; the 'scratch and sniff.' A few of us hung together, passing a bottle around as we waited in line. It irked me that I had to go; what did they expect would happen? My real mate had rejected me immediately, and the arranged mate did it after we had two children. I would cut my junk off before I'd take a third try at this mating thing. \n\nThe bottle of tequila we were passing was almost to the worm when I felt a sharp pain in my chest. I reached my hand up over my heart, unable to breathe. \"John, are you all right?\" \n\nI shook my head no as I dropped to a knee. As quickly as the pain came, it went away again, and with it went the Alpha bond I had to Brenda. I shook my head as my wolf howled. There was only one explanation. \n\nLuna Brenda was dead. \n\n\"Brenda... something happened to her,\" I said as I stood up. \"I have to find her.\" \n\nI tried to smell her, but there was nothing. She wasn't in the area. Finding one of the security guys, I explained the problem. He linked with his boss, then gestured for me to follow him. \"Luna Brenda has been found dead. Follow me please, Alpha Volkov.\" \n\nAlpha Volkov. After she rejected me, I went back to my old name, no longer needing to keep the Petersen name that she and our children had. I may as well go back to my birth name. I walked with the security guy towards their building; I could see people coming in and out. Before I could react, I was surrounded by a half-dozen me, one with silver shackles. \"Ivan Volkov, you are under arrest. Kneel and be silvered.\" \n\n\"On what charge,\" I asked. \n\n\"Conspiracy to commit murder,\" he said. I looked around; the men had pistols loaded with silver ammo and cattle prods. There was no point in fighting; I went to my knees and allowed them to handcuff me. The men placed a silver detention collar around my neck and shackled my ankles with a chain connected to my handcuffs. The men pulled me back up, then took me to the cells. I was processed and led into a cell in the basement. They didn't say anything as they removed everything but the collar and left me alone. \n\nThey must have figured it out. \n\nI was technically guilty of murder. With Brenda gone, the Council must have decided to clean the house at Marengo Lake. I had arranged for Vicki's kidnapping, a bungled job that resulted in her great-grandmother's death. I would plead guilty and face my death with honor. \n\nAs I fell asleep, I wondered if I would have a chance to apologize to my daughter before it was too late. \n\nCh. 54 \n\nOlivia Lawrence's POV \n\nAnita drove until the sun was up, and we pulled off the interstate as we approached Baton Rouge, Louisiana. \"Pancakes all right with everyone?\" \n\n\"PANCAKES, YAY!\" Vicki had woken ten minutes earlier and was a little sore and crabby from being in the booster seat all night. I couldn't blame her, my neck had a crick in it, and I'd had to wipe the drool from my face when I woke up. \n\n\"IHOP it is,\" Anita said. \n\n\"Just pull in front and get out, I'll fill the tank and come back to you,\" Mike said. \n\n\"Sounds good.\" She stopped in front of the doors, and I unbuckled Vicki and helped her out. Mike drove off as we reached the door. \"Let me check it out first,\" she said as she went in. \n\nI stretched my aching body out as Vicki copied me. \"My butt is sore,\" she said. \n\n\"Mine too.\" \n\n\"Where is Unky Leo?\" \n\nI knew she was going to ask, and I didn't want to tell her the truth yet. We needed to be somewhere I could let her cry it all out. Hell, I needed a place to cry it out, but a pancake house wasn't that place. \"Leo and Adrienne are busy in Atlanta. We're going on an adventure instead.\" \n\n\"Really?\" Her eyes got wide as she looked around. \"Where are we?\" \n\n\"Louisiana,\" I said. \"Do you know how the Mississippi River begins in Minnesota?\" \n\n\"At Lake Eyetacka,\" she said. \n\n\"Itasca,\" I corrected. We had visited last summer with my Grandmother; we had jumped across the rocks where the river started in a bay on the Northwoods lake. It was only twenty feet across, while by the time it got near us, it was a big river. \"We're almost to the end. After breakfast, we'll drive over the Mississippi again, close to where it goes into the Gulf of Mexico.\" \n\nAnita waved us in, so I held open the door, and we walked into the restaurant. \"This way,\" the waitress said. A minute later, we were seated in a booth with a booster seat for Vicki. She put down three menus and a paper kid's menu with some crayons. We ordered drinks, and by the time Mike was back, we were ready to order. \"What would you like, young lady,\" she asked Vicki. \n\n\"Chicken-fried steak smothered and covered, with eggs sunny-side up and extra pancakes instead of hash browns,\" Vicki told her. The waitress looked at me and raised an eyebrow; I nodded, and she wrote it down. \n\n\"I'll have the same with the hash browns and a side of bacon,\" I said. Mike ordered a steak omelet, and Anita a breakfast combo. \"I told Vicki we were on an adventure,\" I said. I continued over the link to the adults. \"I said Leo and Adrienne were busy.\" \n\n\"Are you excited?\" \n\nShe shrugged her shoulders. \"What's is Loo-see-ana?\" \n\n\"We're going to drive until around lunchtime so we can get to Texas. We'll find a place by the beach where we can stay a few days.\" \n\n\"Beach? The OCEAN? SHARKS?\" She was bouncing in her seat. \n\n\"Yes, yes, and maybe,\" Anita said. \"I hope we don't see any big sharks with Sharkbait in the water,\" she said with a smile. \"We'd find out who has the bigger chompers!\" \n\n\"Yay!\" We finished breakfast and laughed at the waitresses' eyes as she saw Vicki's bulging stomach. I took my daughter to wash up as Mike paid the bill. \n\n\"Get out to the car now; another werewolf couple just walked in,\" Mike told me. \"Don't look, just walk out.\" I made sure Vicki was ready and picked her up; I didn't want to be dragging her if something happened. \n\nMike was standing near the entrance, and I walked past him and out before he moved. Anita was waiting by the car; she buckled Vicki in while I got in the driver's seat. Mike took the passenger seat. \"Just go,\" he said as soon as the doors closed.  \n\n\"Who were they,\" I asked as I pulled out of the lot. \n\n\"I don't know. It was a mated couple, maybe fifty. The two just nodded at me as they went by; they didn't smell like rogues,\" he said. \n\n\"Did they scent Vicki?\" \n\n\"I don't know,\" he said. He looked in the side mirror again. \"No one is following us. Get back on the freeway and let's put some miles behind us.\" \n\nI did, and he relaxed and fell asleep by the time we passed the Mississippi. With Anita sleeping off the meal as well, I appreciated the mental bond even more. Vicki and I were able to talk without disturbing the others. \n\nWe had a slower time through Houston, luckily not hitting it at the morning rush hour. Mike took over at the next stop and drove the rest of the way to Corpus Christi. We drove directly to the harbor where the Texas State Aquarium was, arriving about two in the afternoon. \"Let's GO,\" Vicki said. \n\n\"We need to find a hotel, and it's late,\" I told her. \"We need to eat lunch, too.\" I checked north of the aquarium and didn't like the look of the hotels, so we drove over the harbor to the south side where the larger hotels were. We settled on the Emerald Beach Hotel, the four of us taking adjoining tenth-floor double-twin rooms with a bay view. \"What do you think of the ocean,\" I said as I brought Vicki out onto the balcony. \n\n\"WOW,\" she said. \"It's salty and smells like fish!\" \n\nWe ate lunch, then did some shopping. We all needed swimsuits and towels, plus I bought sunblock and swim goggles for the girl. I talked her into going on the beach today, and we'd do the aquarium in the morning. \n\nWe changed into swimwear, then went out to the beach behind the hotel. Anita claimed four lounges under one of the beach umbrellas. The groomed sand was warm as the rest of us ran across it to the gentle surf. Vicki screamed in happiness as she hit the water, jumping up as the first wave crashed into her. I held both her hands, keeping her steady as we kept moving into deeper water. The next wave would have been over her head; when she jumped, I helped her go over it. I stopped when the water was to her chest. \"Dive the next wave,\" I told her. She was a good swimmer for her age, but I wasn't going to let her hand go. She had her goggles on, so when the next wave came, she leaned into it and went underwater. \n\nFor the next ten minutes, she was swimming the hotel beach \"looking for sharks\" in the shallow water. I'm sure they were out there; bull sharks, hammerheads, blacktips, and others were all present in these warm Gulf waters. It just wasn't likely to be on the well-maintained hotel beach. \n\nWhen she got tired of our 'boring' beach, Mike escorted us as we walked north along the surf to the public McGee Beach. It was more crowded than the hotel beach. After a few runs into the water and some prospecting for shells and crabs, Vicki was ready to head back. \n\nMike ended up carrying a worn-out Vicki back to the hotel beach. Anita was already relaxing with a drink in the shade when we got back. We used the outdoor shower to wash the salt off, then joined her. Vicki fell asleep in her chair almost immediately. \"Why don't you two go up and shower and change,\" I said. \"We'll be up a little later, and we can go to a late dinner.\" \n\nI didn't have to guess what Anita was planning as they walked off; she left the scent of her arousal behind. I ordered a strawberry daiquiri and watched the seagulls fly around as my daughter napped in the warm breeze. \n\nIvan Volkov (John Petersen's) POV \n\nI hadn't been asleep long when the door opened, and a man walked in. The guard closed the door, telling him to bang on it when he was ready. \"Who are you,\" I asked. \n\n\"I'm your lawyer,\" he said. He held out his hand to me as I sat up on the mattress. \"Lawrence Fenwick. I was your brother Leo's lawyer, and I guess I'm yours now. I'm sorry for your loss,\" he said. \n\n\"Having Brenda dead is not a great loss. It solves a problem or two, although I had nothing to do with it.\" \n\n\"You don't know?\" \n\n\"I felt Brenda die, then I was silvered and brought here,\" I replied. \n\n\"Your brother, Leo. After the jury left, he collapsed in the courtroom. It was a massive heart attack; he didn't suffer. I'm sorry.\" \n\nI couldn't believe it. How could my brother be dead, and I didn't feel it? I reached out to him, but the bond was blocked. \"I never felt the bond break,\" I said. \"Does silver do that?\" \n\n\"I don't know.\" Luna, this was all such a mess, a mess that I had started when I tried to remove Vicki from her home. If I had done nothing, she would have been under Leo's protection. Her great-grandmother would still be alive. And, Olivia might forgive me for how I treated her. \"I'm afraid we don't have time to grieve your brother. The Council interrogators will be taking you soon and questioning you. That's why I'm here.\" \n\n\"She's dead because of me,\" I said. \n\n\"You need to stop saying that. You don't have a fifth amendment right against self-incrimination, but you don't have to volunteer information either. I'll be with you; answer the questions truthfully. They'll know if you are lying.\" \n\nAs we waited, I told him everything that had happened; my rejection, my arranged mating with Brenda, the fling with Olivia, and the failure to produce a mantled heir. I continued with the kidnapping attempt, the brokered agreement with Brenda, and our fragile agreement. \"She didn't want me around her after no one challenged her on arrival,\" I said. \"I've been hanging out and drinking. I don't even know how she died.\" \n\nThe door opened, and two guards came in. They moved me down the hall to an interrogation room. My lawyer watched from a chair in the corner while they shackled me to the chair. The interrogator, a former Alpha in his sixties who looked like Captain Picard on Star Trek, sat at a table across from me. \"Alpha John Petersen,\" he said. ",
        "\"Ivan Volkov,\" I said. \"I only changed my name because Brenda wanted her family name to continue, and she was the mantled one. It's time for a change, wouldn't you say?\" \n\nHe made a note. \"Where were you tonight?\" \n\n\"I was drinking with the Betas in the rec room until I got called for the Scratch 'n Sniff, then I was waiting in line there until the arrest,\" I said. I gave him the names of people I had partied with. \n\n\"How would you describe your relationship with Luna Brenda?\" \n\nI laughed. \"Our relationship ended when Brenda went after my daughter,\" I said. \"She found out that I'd slept with a human, and that resulted in a pregnancy. Brenda rejected me, and I left the Pack. She offered money to Alpha Todd Miller of Welch to kill Vicki, an attack that injured her, her mother, and my brother. I went back to Marengo to kill her, but Mediator McInnis and Chairman Wolfe were waiting. They hammered out an agreement; I would stay on as her Alpha Protector, and she wouldn't do anything to harm my daughter.\" \n\n\"Did the agreement extend to anyone else?\" \n\n\"No. I should have insisted on it being broader, I guess. Brenda's dead now, so it doesn't matter.\" \n\nHe tapped the paper. \"Brenda's death leaves you as Alpha of Marengo,\" he said. \n\n\"I know. I thought about refusing it, but our children deserve a chance to inherit the Pack, mantled or not. I suppose it doesn't matter now.\" \n\n\"Were you part of any discussions between Luna Brenda and Alpha Mark of Stillwater Pack?\" \n\nLawrence caught my eye; I was to answer the question and ONLY the question. \"No. Brenda didn't trust me after I returned. I had my own house on Pack land, I had no Alpha authority, and she did not seek my counsel. I was a bodyguard and a threat to those who might challenge her, and that's all.\" \n\n\"How did she feel about your brother?\" \n\nI laughed. \"Brenda hated Leo with a passion. He claimed Vicki as his heir, stopping her from killing the girl so the mantle would return to HER heirs. I know she put a claim in on Vicki with the Council; although she would not break the blood oath she made, I figured someone else would do the job for her. You know, a 'Will no one rid me of this troublesome priest,' Rasputin-like moment. I couldn't allow that to happen. Vicki is my firstborn child, and I would gladly sacrifice my life to keep her safe.\" \n\n\"Would she act against Leo directly?\" \n\nI laughed. \"Brenda is a coward; she wouldn't dirty her manicured nails with that. It's easier to pay someone.\" \n\nThe interrogator closed his pad. \"Return the prisoner to his room,\" he told the guards. \"You will remain in the cells while we verify the information and complete the investigation.\" With that, I was unhooked from the chair and taken back to my room. \n\nI laid back on the mattress pad, more confused than ever. What had Brenda done before she died? \n\nCh. 55 \n\nAlpha Anthony McInnis' POV \n\nI woke early, the sleep inadequate to prepare me for the day. It didn't matter; the Summit schedule was full, with Alpha mandatory meetings starting after breakfast. I had a heads up on the changes coming, but I couldn't say anything about them. \n\nIt was going to rock the conference when the word got out. \n\nI came back from a shower and kissed Pamela, shaking her to wake her up. \"We should get to breakfast early so we can get a good seat,\" I told her. \n\n\"Ugh... my eyeballs hurt,\" Pamela said. \"Why did you let me drink so much?\" \n\n\"I tried to warn you. Never drink with people who are trying to drown out their pain,\" I said. It hadn't been a very successful mating gathering; only four couples emerged. The rest partied most of the night. I handed her a glass of water and some painkillers. \"Hydrate, it will help.\" She drank it down, then went to take her shower. I dressed and checked my phone for messages. As expected, there were a lot of texts about Leo's death and asking about my Mom's health. My idea worked perfectly in establishing Brenda's guilt, but at a high cost. If it was me in charge, I would have told everyone Leo was alive as soon as Brenda and Mark were dead; at the latest, when their Betas and mates were in custody. \n\nI couldn't answer much, but I did tell them Luna Adrienne was doing as well as could be expected. My next call was to Olivia's mate, Brent Lawrence. I could hear his fatigue, and knew he'd barely slept, if at all. \"Brent, it's Anthony McInnis.\" \n\n\"Hey, Alpha. How is our Luna doing?\" \n\n\"She's dealing with it. I'll have her call when she's able.\" That wasn't a lie. \"How is the Pack handling it?\" \n\n\"We're devastated, of course. It's been a rough time.\" \n\n\"It will get better.\" He grunted, not willing to go there yet. \"Have you heard from Olivia, Mike, or Anita?\" \n\n\"No... aren't they with you? I got a bunch of photos from the aquarium yesterday.\" \n\n\"They were driving back here with their security escort when they heard about Leo. With the whole mantle thing, it spooked them. They ditched their escort and disappeared.\" \n\n\"Fuck,\" he said. \"You don't know where they are?\" \n\n\"Nope. I've tried texting them, but they don't respond, and their phones go right to voice mail.\" \n\n\"I'll try again. Call me back in five.\" When I did, he wasn't happy. \"I go right to voicemail as well. I got on her computer and used the 'find your iPhone' app. They are east of Atlanta. I'll text you what it's showing me.\" \n\nThe pic came through; it was on Panola Road, a few blocks south of the exit. I texted Luna Carolyn, asking where they were stranded. \"PANOLA ROAD MCDONALDS OFF I-20,\" she texted back. \n\n\"They tossed the phones so we couldn't track them,\" I told Brent. \n\nHe let out a breath. \"Liv will find a safe place before she contacts me. Mike and Anita will keep them safe.\" \n\n\"I'll do what I can from down here. Do me a favor? Let me know if they contact you? I just need to know they are all right, and I know Mom will be worried.\" \n\n\"I will. Take care of your Mom, Anthony. I know she hasn't been here long, but we all love her. If you need to take her home to help her get over this, just do it.\" \n\n\"I will. Thanks, Brent.\" I hung up as Pamela came out of the bathroom, ready to go. We went down to breakfast, which was a lively affair. The rumors were flying about the Stillwater and Marengo Lake Packs; no one had seen any of the Pack members since about ten last night. Some of the Betas said Security guys pulled John Petersen out of line, and he didn't come back. \n\nThe room went silent as Chairman Sanders walked to the front. \"There are a few changes to today's schedule. In twenty minutes, all Alphas and Lunas are to be in the conference hall. Betas and other staff not on duty are to be here in the dining hall, where the proceedings will be on closed-circuit television. We have a lot to get to, so be on time. Enjoy your breakfast.\" \n\nI could see people react, Alphas and Lunas moved to get their food while others stood back, knowing they could eat during the broadcast. \"I wonder what they are going to say,\" Alpha Doug Winters said as they sat down at our table. We'd become friends with the Winona Pack Alphas during our visit to Miesville. \n\n\"I hope they find Leo not guilty,\" Luna Jennie said. \"He deserves to be sent off as an Alpha, not a criminal.\" \n\n\"I have a good feeling about the trial,\" I said. \"Adrienne's fate is still with the jury.\" \n\n\"How is she? I can't imagine losing a mate once, and this is her second,\" Jennie continued. \n\n\"Coping,\" I said. We finished our food and went to wash up before going into the room. The other Alphas had left us our seats behind the defense table, knowing the trial was coming to a close. I shook Beta Fenwick's hand as he waited, thanking him for his spirited defense. \n\nThe room filled as the hour approached. The door to the kitchen opened, and a shackled Luna Adrienne shuffled to the table. As soon as the guards had the shackles off, the bailiff called for us to rise. The jury returned with the Council, and the Chairman gaveled the hearing to order. He wasn't wasting time. \"Foreman, has the jury reached a verdict?\" \n\n\"We have, Mr. Chairman.\" \n\nThe bailiff took it, and the Council members read it. \"In the matter of Leo and Adrienne Volkov, do you uphold the rogue status declaration or unanimously declare them to be Alphas worthy of Council recognition?\" \n\n\"We find them Alphas worthy of Council recognition, Mr. Chairman.\" \n\nThe room erupted in cheers, quickly silenced as the Chairman banged his gavel. I pulled Pamela close and kissed her. \"The Council thanks the jury for its service. Please remain in your seats. Guards, remove the silver from the defendant.\" The guards brought the device up and removed her collar. \n\n\"Congratulations, Mom,\" I told her family link that I could now establish. \n\n\"I'm so proud of you two,\" she told us as she sat at the table again. \n\n\"Bring in the defendant,\" the Chairman said. The door to the kitchen opened again, and a shocked hush fell over the room as Alpha Leo walked in. \n\n\"You're dead,\" someone in the back yelled. Leo didn't respond. He kept his head high as he walked over to the table. Taking his place next to his mate, Leo kissed her before turning back to the front. The room exploded with people talking and yelling. \n\n\"ORDER,\" the Chairman said as he banged the gavel. The room instantly quieted. \"During the trial, there was an attempt on Alpha Leo's life. Alpha Mark Conway attempted to poison him using a needle hidden on a ring he was wearing. The attack poisoned Beta Fenwick by mistake. He is alive now because of the observation skills and quick actions taken by Alpha Anthony and Luna Pamela McInnis. Alpha, Luna, please stand. The Council thanks you for your actions.\" \n\nI stood holding her hand as the room applauded me. We sat down quickly, wanting to move on. \n\n\"Our security staff found the ring and arrested the Stillwater Pack members before they could flee the Summit. We made a deal to find out who had hired him for the job, and as part of the deal, we found the antidote that saved the Beta's life. Alpha Mark agreed to wear a wire as he met the person who paid him to kill Alpha Leo. Dim the lights, please. The next part is easier to watch than to explain.\" \n\nThe room went into darkness, and the televisions on the wall came up. It started in the woods, as Luna Brenda approached him. The room watched in stunned silence as they talked about Leo's murder and the fifty-thousand-dollar payment. There were screams when Mark got stabbed in the heart, and gasps as Brenda killed herself. The lights came back up, and everyone started to talk. \n\nThe Chairman let it go for a minute before he gaveled the room back into order. \"The leadership of both Packs has been placed in custody pending the completion of an investigation. Are there questions?\" \n\n\"What are we doing to stabilize those Packs during the investigation,\" an Alpha stood and asked. \n\n\"We have asked two retired Alpha pairs to step in and provide interim leadership,\" the Chairman replied. \"Larry and Donna Winters, former Alphas of the Welch Pack in Minnesota, have agreed to take over the Stillwater Pack. Steve and Carla Ingalls of Green Bay have agreed to take over Marengo Lake. The length of their term will depend on the changes required and the availability of suitable permanent candidates. Those interested candidates can notify their Regional Chairs, but no decisions are coming this weekend,\" he said. \n\nWow. Talk about cleaning house! Larry and Donna were Leo's in-laws, and both Alpha pairs were sticklers for following the laws of werewolves and men. Stillwater was going to be a far different Pack by Monday. \n\n\"What about my claim on Vicki Andersen,\" Alpha Carl asked. \n\n\"There is no valid claim by you,\" the Chairman said. \"You can't 'discover' a mantled child in the Pack of an Alpha. The only valid claim is by her biological father, Alpha Ivan Volkov of Marengo. That claim is on hold pending the investigation, as Ivan is in custody now. Also, both Vicki and her mother are members of the Miesville Pack. The Council will not force them into another Pack if they choose to remain with Alpha Leo.\" \n\n\"Thank you, Mr. Chairman,\" Leo said. \"I have a question. Where are my Pack members, including Vicki? The Council took them into protective custody on our arrival.\" \n\nChairman Wolfe answered instead. \"When word of your 'death' reached them, they escaped from the guards and Lunas we had protecting them. They have not made contact with anyone here, and no one has reported seeing them. Their minivan was returned to the agency last night.\" \n\nLeo stood to his feet. \"Everyone present has heard the Chairman affirm that Vicki Lawrence is my recognized Heir. I don't need to remind you what the penalty is for attacking an Heir.\" He paused for effect. \"I do not want anyone chasing after them or attempting to capture them; they are afraid, and this might make them do something stupid. I would ask that all Alphas contact their Packs and share a photo I will provide the Council. If anyone sees them, I would ask that you contact me immediately. Just tell me where they are so our Pack can tell them the truth.\" \n\n\"The Council affirms your request. If you forward the photo to Chairman Wolfe, he will forward it to all Alphas and Betas in the country.\" \n\nLeo turned to us. \"Crap, my phone was in the rental car,\" he said. \n\n\"I have a photo I'll send the Chairman,\" Pamela said as she pulled out her phone. \"Done.\" \n\n\"Two other things,\" Leo said. \"Someone ordered my five-year-old heir silvered and confined. I want his name, and I want his ass in the ring with me tonight.\" \n\n\"You can't kill a member of my Guard,\" the Chairman said. \n\n\"I won't kill him, but I will teach him a lesson,\" Leo said. \"The other is that I would like to withdraw my request to have our mating ceremony here during the Summit. I can't do that without my family here.\" \n\n\"Understood, Alpha.\" He answered questions for another twenty minutes, then told us to take a twenty-minute break while they rearranged the room. \n\nAs soon as they left the room, I leaped over the barricade and embraced my Mom. Leo, Pamela, and others surrounded us as we cried happy tears of relief. \n\nWe'd all dodged a bullet. \n\nCh. 56 \n\nAlpha Leo Volkov's POV \n\nThe wolf was bleeding and badly limping as I circled him. I faked an attack on his rear leg; when he moved away, I had already shifted directions and put my shoulder into his. The impact knocked him on his back, and my teeth were at his throat before he could recover. \n\n\"Don't kill him,\" Adrienne said over the link as my teeth closed down, his blood filling my mouth. I gave his neck a shake, and the wolf beneath me stilled. He moved his jaw back and exposed his throat to me. I accepted his submission and released him. \n\nTrotting back over to my mate, I sat as she scratched at my ears. \"I think he learned his lesson,\" she said loud enough for the others around the challenge circle to hear. The medics arrived, moving the injured Guard Captain onto the stretcher. He'd live, but the scars would remind him that children were not to be silvered. Ever. \n\n\"Come on, big boy, let's get you cleaned up.\" I limped after her; the fight had strained my healing ankle, and I had a few claw marks and some torn flesh from bites. The Pack had an outdoor shower area for wolves to wash off mud and blood before coming in. She pulled her clothes off and hung them up before turning on the water. I let the spray soak my fur as she grabbed a washcloth and some scent-free shampoo. I loved the feel of her hands on me as she scrubbed the dirt and blood out of my fur. I hated the sting of the water and soap on my open wounds. \n\nWhen she had me clean, she rinsed me off and turned the water off. I walked off to shake, then trotted back over the patio stones and shifted. \"We need to get these stitched,\" she said as she looked at my back and side. \n\nWe both dried off, her helping around the still-bleeding wounds, then I put on my sandals and pulled on a loose pair of basketball shorts. There was no point in dressing further before we got to the clinic. One of the visiting doctors cleaned and sutured the gashes before covering them with bandages. \"Go on, get out,\" he said. \n\n\"What's left for tonight,\" I asked Adrienne as I pulled my clothes out of the bag and dressed. \n\n\"There's a challenge for a Wyoming pack, but nothing we have to be at,\" she said. \"The controversial issues were all handled before dinner tonight. Tomorrow morning will be announcements, Council elections for the Eastern and Mountain regions, and voting on proposed changes to Werewolf laws. The Summit ends at eleven so everyone can get back home.\" Unfortunately, Chairman Sanders had two years left on his five-year term. \n\nOne proposed change dealt with the laws on banishments. Some Alphas were very upset after learning what had happened with us on arrival here. The proposal from Cascade-region Pack was to distinguish banishments for law violations from banishments for losing challenges. The former would still require other Packs to observe it, but the latter would only apply to the Pack expelling the losing wolf. I was confident it would pass. \n\nAnother potential change was less likely to pass, but one our Pack would support. It would require a Council member to officiate over trials for which the Alpha sought a penalty of permanent banishment or death. It was a restriction on their power that some Alphas resented, but it would ensure fair trials and consistent sentencing. \n\n\"Is there any blowback coming from your deal with Stillwater,\" I asked. \"Ivan is still in the cells.\" \n\n\"I'm not sure yet,\" she said. During the morning meetings, Adrienne drafted a statement in which she told the Council everything she had done at Marengo, Miesville, and Stillwater to contain the human interest in Vicki's abduction. She couldn't ignore Ivan's involvement in the original kidnapping in the writeup. At lunch, we brought in Beta Fenwick, his lawyer, to read it over. \n\n\"If you swear to this in the presence of two Alphas, the Council cannot punish Ivan for the kidnapping and murder,\" he said. \"A Council mediator effectively granted him amnesty during the meeting at Marengo with him and Luna Brenda.\" \n\n\"I don't have the authority to grant amnesty,\" Adrienne said. \"Only the Chairman has that.\" \n\n\"The Central Region Chairman told you to 'resolve the situation' and tell him when you had finished. You did just that. The resolution you reached did not require you to confess to the killing to the authorities; Mediator McInnis effectively shut that investigation down as well. Legally, the deal you mediated is binding as you were acting as the Chairman's direct agent. Your involvement closes the issue with the Council; there is only one way to punish him for the kidnapping now.\" \n\n\"What is that,\" Adrienne asked. \n\n\"The aggrieved party or their champion could challenge him in the circle,\" Lawrence said. \"Olivia could demand justice, and Brent, you, or Adrienne could enter the circle with Ivan as their champion.\" \n\nThat gave me pause; Brent would fight if Olivia asked, but Ivan would wipe the circle with him. She would refuse the challenge to keep him safe. I didn't know if I could fight my brother for them if asked, not knowing what I did now. I didn't think Adrienne would fight either. \n\nI didn't know what Olivia would want to do; she loved her Grandmother, but I think she understood what Ivan was trying to do. Vicki was too young to challenge, and I didn't know if she would ever meet her father. The best thing for everyone would be to let it go. \n\nAfter Lawrence left, we had two Alphas witness her signature, and she gave it to Chairman Wolfe during the lunch break. Chairman Sanders was furious when he found out, that much we knew. No one said anything to us during the afternoon or dinner. ",
        "We walked back to the Pack House, exchanging greetings as we passed the others. Many were outside enjoying the warm Georgia weather. Few Packs stayed in the deep south, the heat and humidity challenging their wolf forms. As we walked in, we saw the doors to the Council room closed and a guard outside. \"I guess we won't know tonight,\" I said. \n\n\"The worst they can do is fire me,\" Adrienne said as we walked to the stairs. \"That's not the worst thing. I was thinking about quitting, honestly. I can't see how I can balance being a Luna again with a Council job that involves lots of travel.\" She leaned into my side and wrapped her arm around me. \"I don't want to be apart from you, either.\" \n\n\"I love you, Adrienne.\" I opened the door to our room, and she was stripping off her clothes before the door closed again. \n\nNaturally, my new cellphone rang. It was a TracFone that one of the guards had given me, so we had a number to go with the message the Council put out to help us find Vicki. I pulled it out of my pocket; I didn't recognize the phone number or the area code. \"Leo Volkov,\" I said. \n\n\"Alpha Leo, this is Marge Johnson of the Atchafalaya Pack in Louisiana,\" the woman said. She sounded like a grandmother. \"My mate and I think we say your girl and the others at the International House of Pancakes in Baton Rouge about seven o'clock this morning.\" \n\n\"Baton Rouge?\" I waved to Adrienne; she opened up a laptop and went to Google Maps. \"Are you sure it was them?\" \n\n\"I didn't get a good look at the girl because her mom was shielding her from us. I could smell the mantle on her as they passed, though. How many five-year-old girls with Alpha mantles are there? When Marvin and I saw the picture our Gamma had, I knew it was them.\" \n\nI had to know for sure. Looking over Adrienne's shoulder, I saw the driving distance. They must have driven all night to be there by then, but it was doable. \"Did you talk to them?\" \n\n\"No, but I talked to their waitress later. I told them I thought the mom might be my neighbor's daughter. The server said that little girl packed away a whole chicken-fried steak breakfast with extra pancakes on her own! Can you imagine? Her little belly looked like she swallowed a balloon!\" \n\nNow THAT was my Sharkbait. \"Did you see where they went?\" \n\n\"No, but the IHOP was right off Interstate Ten, east of town.\" \n\nAdrienne was already moving the map, seeing where they might be going. \"Marge, thank you for the call. You've been very helpful.\" \n\n\"I'm glad I could help. You bring that girl home safe, you hear?\" \n\n\"Yes, Ma'am. Goodnight.\" I looked at the map. \"If they were in Baton Rouge fourteen hours ago, how far could they have gotten?\" \n\n\"No farther than Texas,\" she said. \"I can't imagine they'll drive for days non-stop with a five-year-old wolf. They probably wanted to get far away from Augusta before they stopped.\" \n\nI called Brent as she worked on a circle that represented that drive time. \"Brent, we got a hit on them. This morning at seven, an IHOP off Interstate Ten near Baton Rouge.\" \n\n\"Louisiana? Why would they be down there?\" \n\n\"Not many Packs, and a lot of open territories to hide in,\" Adrienne said. \"They drove past the exit for New Orleans, so they are probably still going west. That means they are heading for Houston, San Antonio, or points further south. Worst case, they are going to head through New Mexico and Arizona to Los Angeles.\" \n\n\"Being on the road has risks; I don't see them driving for days,\" Brent said. \"Maybe they are making a big loop to head back here? Interstate 35 goes right through San Antonio. They could head north there and come back to Minnesota in a direction no one will expect.\" \n\n\"They're going to ground with Sharkbait,\" I said. \"If you were going to hide somewhere AND keep a little girl happy, where would you go?\" \n\n\"Fogo de Chao for unlimited meat,\" Brent said with a laugh. \"No, it would be to aquariums. Sharkbait LOVES aquariums. She could spend all day at one.\" \n\n\"Adrienne, look up aquariums in Texas. Brent, you look up aquariums farther West, all the way to southern California.\" That list was pretty extensive. \"All right, to narrow it down, eliminate any aquarium without a large shark population.\" \n\nTen minutes later, we had our list. The most likely suspects were in Corpus Christi and Dallas in Texas, Long Beach in California, and Mandalay Bay in Las Vegas. \n\nWe decided to split things up. I would go to Corpus Christi, Adrienne to Dallas, Brent to Las Vegas, and Ron Temple would go to Long Beach. Hopefully, their blocks would be down so we could contact them with the Pack Bond; if not, we'd smell them. \n\nEither way, we'd bring them home. \n\nCh. 57 \n\nAlpha Leo Volkov's POV \n\nAs soon as we were off the phones, Adrienne got her clothes back on, and we went to find the Council. We found them in the common area, and one look at my mate had them moving towards the conference room with their Lunas. I let her take the lead because she knew them, she understood them, and because I wasn't going to get in the way of a Momma Wolf out to protect the young of her Pack. \n\n\"All of this is YOUR fault,\" she said as she laid into them in the conference room. \"You silvered our girl. You said she'd be safe going to Atlanta. You faked Leo's death, and then you refused to tell anyone it was fake until the next morning.\" \n\n\"We did what we needed to do,\" Chairman Sanders said testily. \n\n\"You did, at the cost of my Pack. They spent twelve hours thinking their Alpha was gone, and four of them took off because they thought Vicki was the next target. They are out there somewhere, alone and vulnerable, because YOU wanted a dramatic moment in the morning.\" \n\n\"We didn't know how big the conspiracy was,\" Chairman Wolfe said. \"Secrecy was needed.\" \n\nAdrienne rolled her eyes so hard she saw her brains. \"Really? They were TWO HOURS away, far out of link range, and TWO of your mates were with them. You don't trust your Lunas enough to tell them the truth, so MY people don't go through hell?\" It wasn't just Adrienne glaring at them; their wives joined in. \"They ran away, far from here. Leo and I need to find them.\" \n\n\"The Summit isn't over yet,\" Sanders said. \n\n\"We're buying plane tickets,\" I said. \"We will stay for the required votes, but we WILL be leaving early. We can't wait around to get to where we think they are going, or we might miss them.\" \n\n\"How will you find them,\" Luna Carolyn asked. \n\n\"We put Pack members around and hope they don't have their blocks up so we can contact them with the bond,\" I said. \"It's a long shot, I know, but Mike and Anita are well trained. They will think the Council and the Packs are after them, so they will go dark and deep until it's safe.\" I wasn't sure who to trust, so we didn't say where they were spotted. \n\n\"And that means they'll be vulnerable to rogues,\" Adrienne added. In the end, they couldn't argue with us. They agreed we could leave after the debate and votes in the morning, skipping the ceremonial portion at the end of the Summit. \n\nWe voted on the required measures after breakfast and left before nine. One of the guards drove us to the Atlanta-Hartsfield airport to catch our flights. I kissed Adrienne goodbye in the terminal as she caught her plane to Dallas. My plane to Houston left thirty minutes later. \n\nI took an expensive Uber ride to the Texas Aquarium in Corpus Christi, using the time to talk with the Pack members I hadn't talked to in the morning. Everyone was doing well, and thankfully, none had left the Pack after the report of my death. I got a call from Adrienne, who had arrived at the SeaLife Grapevine aquarium. \"Nothing yet,\" she said. \"It's a lot like the one back home. Vicki would like it.\" \n\n\"What about the other aquarium in Dallas?\" \n\n\"Dallas World Aquarium isn't near as big. Neither is the one in Austin or San Antonio. If they are looking for big sharks, they'll be here or at Texas State.\" \n\n\"I don't think they went to Dallas first, or they wouldn't have gone so far south before turning west. You might need to hang around a few days to see if they stop while going north.\" \n\n\"I agree. I just hope you aren't too late to get to them if they went to Corpus Christi. They could have visited the aquarium and left already.\" \n\nI snorted. \"Do you honestly think our Sharkbait would show up at ten in the morning and be ready to leave by four?\" \n\n\"Ready to go eat, maybe,\" Adrienne said with a laugh. \"Good luck, honey. I love you.\" \n\n\"I love you too,\" I said. I called Brent next. \"How is Vegas?\" \n\n\"Good, I arrived late this morning,\" he said. \"I have to say, Mandalay Bay is a FINE hotel. It would be a hell of a honeymoon spot.\" \n\n\"Maybe she will show up, and you get your wish,\" I said. \n\n\"I can dream.\" I bet he could. Hell, I wouldn't mind getting Adrienne in a room there and seeing the show. \"If they drove without many stops, they would take 28 hours coming the fastest way. You have to add another eight for the detour south to Baton Rouge. I don't expect them here until tonight at the earliest.\" \n\nThat made sense. \"One other place they might go, but not until tomorrow. The Tanked guys have their retail store in Vegas. Sharkbait loves the show, and they might stop in.\" \n\n\"Good idea. I'll talk to the store when they open, give them a photo and ask them to call if they come in. I can say they are wanted for questioning or something.\" I heard slot machines in the background. \"Sorry, I'm walking around, just in case.\" \n\n\"I'll let you go. Good luck.\" \n\n\"Thank you, Alpha. By the way, the room is on your credit card.\" With that, he hung up. I almost called him back, but it wasn't worth it to save a few bucks on a room. If they showed up there, he needed to be close. \n\nI'd talked to Ron this morning; he was flying to Los Angeles now since they couldn't reach there before tonight. I looked up and saw Corpus Christi coming up. \n\nI prayed to Luna that I was right about where they would go. \n\nVicki (Sharkbait) Lawrence's POV \n\nI woke up before Mom, so I sat up in bed and watched Animal Planet she got her wake-up call at eight. \"Baby?\" \n\n\"Morning, Mom,\" I said. \"Aquarium today?\" \n\n\"Aquarium today,\" she replied. She stumbled into the bathroom, and I got dressed before she came back out. \"I need coffee,\" she said. \n\n\"I need PANCAKES,\" I replied. Coffee was yucky. \n\n\"Are you two up,\" Anita sent to me. \n\n\"Ready to head down,\" Mom replied. \"We'll get a table.\" She grabbed the room key and took my hand as we went out to the elevator. My tummy growled. \"I guess you are hungry.\" \n\n\"Hungry like a Great White Shark,\" I said with a giggle. There was a breakfast place on the main floor, and we got a booth near the window. With the booster seat, I could see out to the water. \n\n\"Eat a big breakfast. We'll have a light lunch at the aquarium, then barbecue for dinner,\" Mom said. \n\n\"Barbecue?\" Anita slid in across from me with Mike next to her. \n\n\"Yeah, there's a place a few blocks from here, they even deliver,\" Mom said. \n\nWe ordered, and as the waitress walked away, I laughed. \"She doesn't believe that's all for me,\" I said. \n\n\"I'd never take bacon from those chompers of yours,\" Anita said. \"I might lose a hand!\" \n\nBy the time I was done with the tall stack of blueberry pancakes and bacon, I was full. \"I can't move,\" I said. \n\nMike reached across and poked my belly, which was round and hard like a soccer ball. \"I guess we go back upstairs instead of the aquarium,\" he teased. \n\nI let out a burp, then said, \"excuse me,\" while Mom glared at my manners. \"Let's go,\" I said. Mom had to take me to the bathroom, but we were on our way and at the aquarium entrance with tickets when it opened up at ten. \"YAY,\" I screamed when the door opened. Mom had the map and led us to the entrance to the Caribbean Sea exhibit. \n\n\"It's not a tube,\" Mom said with a little disappointment. \"But this window is HUGE!\" \n\n\"Sixty-eight feet long, over twenty meters,\" Mike said as he read the guide. \"This is nice.\" Since we were the first in, Vicki took a spot in the middle and watched. The exhibit had several sandbar sharks, shallow-water predators between five and eight feet long. Barracudas, rays, and other fish swam by as I watched. Mom let me watch until I'd seen enough, then we went to the Islands of Steel exhibit. This one looked like an oil rig and had a pair of Sand Tiger sharks. Once I saw enough there, we went through the other displays until I had seen them all. \n\nMom got me a sandwich as we took a break. \"What do you think,\" she asked. \n\n\"Not as good as back home,\" she said. \"And Atlanta is MUCH better.\" \n\n\"Yeah, I think this whole aquarium could fit in that one exhibit in Atlanta,\" Mom said. \n\n\"It's fun. I like tiger sharks.\" \n\n\"Do you want to go around again, or do something else?\" \n\n\"One more time, just the ones with SHARKS,\" I said. \n\n\"Maybe we could tour the USS Lexington, that's easy walking distance from here,\" Mike said. \"Would you like to see some planes and go on the big ship?\" \n\n\"OK,\" I said. It wasn't sharks, but it sounded fun. We went back through, then we left into the bright sun and walked onto the pier. \"THIS IS HUGE,\" I said as we got up next to the carrier. \n\n\"As long as nine football fields and up to three thousand men lived on it during World War Two,\" Mike said. Everything was so BIG, so grey, and so cool. We went everywhere on the big ship. It had airplanes, a cool flight simulator, and other stuff on the big deck. Inside, we saw where people slept and ate, and even where they steered the ship from. My favorite was the theater, where I put on these funny glasses, and everything looked real. Mom said it was called \"three-dee.\" \n\nMy stomach growled as we walked off the ship and down the gangplank to the pier. \"Thank you,\" I told Mike as we walked back. He had carried me part of the time and helped me get through the hatches. \n\n\"I had fun too,\" he said. \n\nWe walked back to the aquarium where the car was. Everything was closing down, so a lot of people were coming out. I caught a glimpse of a man waiting on a bench by the entrance. \"UNKY LEO,\" I yelled as I pulled Mom forward. \n\n\"Don't run,\" Mom said. She looked where I was going, and didn't see anyone. Mom got down to my level as Mike and Anita came around us. \"Baby... Unky Leo isn't here.\" \n\n\"I SAW him, Mommy! By the door!\" \n\n\"He can't be here, love. We got news from Atlanta. Alpha Leo had a heart attack. There was nothing they could do. I'm so sorry, baby, but Leo is dead.\" \n\nTears were flowing down Mom's face as I shook my head, refusing to believe her. \"NO! He's here! I saw him!\" \n\nShe pulled me into her arms. \"I'm so sorry, Vicki.\" \n\n\"Hello, Sharkbait.\" Everyone turned to the man who had just walked up. \n\nMike took a step back. \n\nAnita covered her mouth. \n\nMom fainted. \n\nAnd I ran into Unky Leo's open arms. \n\nCh. 58 \n\nAlpha Leo Volkov's POV \n\nI picked up on old scents as soon as I arrived at the aquarium, and I thanked Luna they were there. \n\nPaying the admission, I went through the whole place. I found places their scent was stronger, all spots where you had excellent views of the sharks. None were fresh, so I kept going. I got to the exit and still no sign of them. Reversing course, I walked through again. The scents were the same, just fainter. \n\nWalking out to the parking lot, I scented their car and went over to it. I didn't see their bags, which meant they had a hotel room. The scents outside were old and faint; I would have to wait. I walked back towards the entrance, finding a bench from which I could see the car while all those exiting the aquarium would have to pass by me. I pulled out my phone and made a call. \"Adrienne, they are here,\" I told her. \n\n\"Oh, thank LUNA! Let me talk to them.\" \n\n\"I don't know where they are, but they were at the aquarium earlier, and their car is here. I'll call you when I have them.\" \n\n\"What do you want me to do? Should I rent a car and come down there? Fly home?\" \n\nI didn't want to fly, not until we were all together. \"Don't do anything yet,\" I said. \"I'm going to call Brent and Ron next.\" I got ahold of Ron first, telling him to head back home. I called Brent last because I didn't expect him to hang up for a while. \"Brent, it's Leo. They are here in Corpus Christi. I found their car outside the Texas State Aquarium, but they aren't inside. They must have walked off somewhere.\" \n\nHe let out a relieved breath. \"Any sign of foul play?\" \n\n\"Nothing. I could tell the group spent time at the places I expected and walked through the rest.\" \n\n\"Sharks,\" Brent said. \"Always the sharks.\" \n\n\"Exactly. The place isn't as nice as SeaLife, so I can see that she might have gotten bored. Maybe they went shopping or out to eat.\" It was a tourist area, they could be doing anything. \"I don't want to miss them, so I'm waiting between the aquarium and the car.\" \n\n\"I'm kind of disappointed they aren't coming to Vegas,\" he said. \"I guess I'll look for a flight.\" \n\n\"No,\" I said. \"You two never had a time just for yourselves, not with all the things that have been going on. Let me talk to Liv first. Adrienne and I can take Vicki on an adventure, and I'll send your mate to you.\" \n\nHe didn't say anything at first, making me think he didn't like the idea. \"I'm sure Vicki would LOVE to show her Unky Leo some aquariums between Texas and Minnesota,\" he said. \"I bet you could stop at a half dozen.\" \n\nI laughed; there was San Antonio, Dallas, St. Louis, Chicago... probably more if I did a real search. \"I'll see what they think when they get here.\" The wind was blowing off the ocean, and I thought I recognized a scent. \"I have to go, Brent. I'll call you when I have them.\" \n\n\"Take care of my family, Alpha,\" he said. \n\n\"You got it.\" I hung up and looked around; the scent was gone with the shift of the wind. I looked at the time; the sun was going down, and the aquarium would be closing soon. The flow of people went faster as closing time came, making it more difficult to watch the lot. \n\n\"UNKY LEO,\" I heard a child's voice yell from far away, towards the back of the lot. \n\nIt was Sharkbait. \n\nI got up, joining the crowd heading for the lot as I looked for my family. Their scents hit me as I got closer. I spotted them a row away from their car; Olivia was hugging Vicki, telling her how sorry she was, as Mike and Anita stood behind her. \"NO! He's here! I saw him!\" Vicki was insistent. \n\n\"I'm so sorry, Vicki,\" Liv said as I walked up. \n\nShe must have told her I was dead. \"Hello, Sharkbait.\" It was at this point that they all looked at me. Vicki ran towards me, and I picked her up as she jumped into my arms. \n\nOlivia took one look at me and fainted. \n\nBefore anyone could react, she fell to the side and smacked her head hard on the pavement. \"LIV,\" I yelled as I set Vicki back down. Anita was already by her side, rolling her carefully on her back. She was unconscious, and there was a gash on her forehead that was bleeding badly. \"Here,\" I said as I pulled out a clean handkerchief. \n\n\"Apply pressure to the wound,\" she said. \"Mike, run inside. Have them call 911, and see if they have any medics available.\" He took off running as a crowd formed around us. \"What the HELL, Leo? You're supposed to be dead!\" \n\n\"The Council faked my death to get proof Luna Brenda was behind the attacks. You guys took off before we could tell you the truth,\" I sent back. \"The bleeding isn't slowing,\" I said. \n\n\"Keep the pressure on; head wounds tend to bleed. Vicki, I want you to sit here and hold Mommy's hand.\" She was crying, and this would give her something to do as a crowd started to gather around. \n\n\"What happened,\" a medic said as he set his bag down next to her head. \n\n\"She passed out and hit her head on the pavement,\" I said. ",
        "\"Passed out before or after hitting the ground?\" \n\n\"Before.\" \n\n\"Any history of heart trouble, seizures, or fainting? Medications?\" \n\n\"Not that I know of,\" I said. \n\nHe pulled on gloves and prepared some large gauze pads; removing the handkerchief, the EMT took a quick look before he put the pads over it. \"Hold pressure here,\" he said. He put on a blood pressure cuff and took her pulse. I heard a siren as the ambulance pulled into the lot; the security people moved others back so it could park near us. \"Female, early twenties, sudden onset unconsciousness followed by head trauma. BP one hundred over sixty-four, pulse seventy-two, no known conditions or medications,\" he turned over to the ambulance crew. \n\nThey brought over the gurney, and we carefully transferred her into it. \"Where are you taking her,\" I asked. \n\n\"Christus Spohn,\" he replied as they wheeled her away. \"Follow us close.\" \n\n\"Let's go,\" I said. I buckled Vicki into her car seat as Anita got the car started. The ambulance hit the lights and siren, and we stayed behind them. We drove across the bridge, past our hotel, and south to the hospital. \n\n\"I have to tell Brent,\" I said. Taking out my phone, I called the number. \"It's Leo. Get to the airport and get a flight to Corpus Christi as soon as you can. If you can't get here, fly to Houston or San Antonio and drive down.\" \n\n\"What's going on? Is Vicki all right?\" \n\n\"It's Olivia. She passed out and hit her head; we're following the ambulance to the hospital. She hasn't woken yet.\" \n\n\"SHIT! I'm on my way,\" he said. \n\n\"I'll call you when I know more.\" \n\nI had just hung up when the ambulance pulled into the emergency bay. Anita dropped the three of us at the Emergency Room entrance before going to park the car. I didn't see Liv as they rolled her in, and she didn't answer the mental call either. \n\nI did get to spend fifteen minutes giving insurance information and registration, while Anita comforted a rather upset little girl in the waiting room. We all smiled a few minutes later when her mental send reached us. \"I'm going to be fine,\" she told us. \"Leo, can you and Vicki come back?\" \n\n\"Ask your nurse if we can,\" I said. \n\n\"Doc says not until he's done stitching me up,\" she said. \n\n\"Mommy is all right?\" \n\n\"I just hit my head, baby. Don't worry about me.\" \n\n\"I was scared, Mommy. You didn't wake up!\" \n\n\"I know,\" she said. \"Stay with Unky, Mike, or Anita.\" \n\nIt was another thirty minutes before the nurse called us back. She had a bandage over the cut and looked exhausted in the bed. The Doctor asked if it was all right if he spoke about her status in front of us, and she agreed. \"The loss of consciousness was a concern, but she explained she had an emotional shock. Her blood pressure was a little low, so we'll be monitoring that, and she should follow up with her doctor at home,\" he said. \n\n\"And her head,\" I asked. \n\n\"Eight stitches to the scalp, and a concussion. We'd like to admit Olivia for observation overnight; given her condition, it would be best to have her monitored until we are sure everything is all right.\" \n\n\"Condition?\" I looked at her, wondering what she hadn't told me. \n\n\"Temporary condition,\" Liv said. \"I'm pregnant.\" \n\nNow it was my turn to be shocked. I sat down before I ended up in the next hospital bed. \"You're having a baby?\" \n\nShe nodded as Vicki started jumping up and down next to her. \"Baby sister! Baby sister!\" \n\n\"It could be a baby brother. It's too early to tell.\" \n\n\"Brothers are yucky. I want a SISTER.\" \n\nI got up, walked over, and kissed her forehead. \"Congratulations,\" I told her. \"Does Brent know?\" \n\n\"No, and don't tell him. I want to do that.\" \n\n\"No one can reveal to anyone else that Olivia is pregnant,\" I said with an Alpha order. \n\nThe doctor left, and a few minutes later, they came in to bring Olivia up to her room. \"Say goodbye, we'll come in the morning to see her,\" I told Vicki. We said our goodbyes. \"Brent is on his way, he'll drive here from Vegas if he has to,\" I said to Liv. \"We'll take good care of Vicki for you.\" \n\n\"I know you will, Leo,\" she said. \"I'm so happy you're still with us.\" \n\n\"Me too,\" I said. \"It's been a stressful weekend. I need a vacation from my vacation.\" \n\n\"I need a honeymoon,\" she said. \"Goodnight.\" \n\nWe drove away, stopping to pick up some barbecue to take up to our rooms. I talked to Brent, who was at the airport waiting for a flight. He couldn't make it before nine in the morning, no matter how he tried. It was too late on a Sunday to get a good flight. \n\nVicki ate through a rack of ribs and two pieces of Texas toast before she started to nod off. Anita got her cleaned up and in bed while we cleaned the table. When Anita came back out, she just sank into her chair. \"Part of me wants to know everything that happened, while the rest of me wants to sleep,\" she said. \n\n\"There's nothing you need to know tonight,\" I said. \"Tomorrow, we'll pick up Brent and take him to the hospital. We can figure out the next steps from there.\" \n\n\"You get the other bed in this room,\" she said as she got up. \"If anyone wakes me before seven, I will hurt them,\" she said as they went through the connecting door between our rooms. \n\nI took a shower and went to bed. Tomorrow would be a new day. \n\nCh. 59 \n\nIvan Volkov's POV \n\nI spent another day and night in the cells before they came back for me. This time, I was allowed to shower and put on sweatpants and a shirt before I was shackled again. \"Where are we going?\" \n\n\"Your hearing,\" one of the guards said. He tossed flipflops on the ground, and I put them on. I was taken upstairs and escorted back across the lawn to the Pack House. The barrage of smells from earlier was gone; now Sunday night, almost all the guests were gone. Cleanup crews were everywhere as we walked into the house. \n\nThe trial room was no longer since there wasn't the audience. Instead, the guards brought me to the hallway outside the Alpha's conference room. I smiled at Beta Lawrence Fenwick, my lawyer, as he stood by the door. \"Ah, Ivan, good news,\" he said. \"The Council has dropped charges against you for the kidnapping attempt on Vicki and Olivia.\" \n\n\"Already?\" I thought we were in for a fight on this one. \n\n\"They didn't have much of a choice after I raised the issues, and they spoke on the phone with Mediator McInnis. To say they weren't happy would be an understatement. They chewed her out pretty bad, at least until she hung up the phone on them.\" \n\nMy eyes got wide. \"Luna Adrienne HUNG UP on the Council?\" \n\nHe just shook his head. \"Yes, right after she told them off for challenging how she did her job, told them where they could shove said job, and told them to kiss her furry red butt. Not on the left side, not on the right side, but right down the middle.\" Now this made me laugh, and the guards couldn't keep a straight face either. \"Suffice it to say they will need a new Mediator.\" \n\n\"She's a Luna now; she doesn't need the job. It's too bad; she was good at it.\" Her reputation was excellent, and I'd seen first-hand how she could find or force an agreement as needed. \n\n\"If I'm in the clear on the kidnapping, why am I here?\" I hadn't done anything else wrong, and I hadn't violated the blood oath I'd made. \n\n\"I don't think they know what to do with you.\" My eyes got wide at that, but there wasn't more time. The door opened, and the guards escorted me into the room. \n\nThe Council sat around three sides of the table; Lawrence took his seat, and guards placed me next to him. \"What the hell should we do with you,\" Chairman Sanders said. \n\n\"You can start by letting me out of these shackles,\" I responded. \"I've done nothing to justify this treatment, and I am an Alpha.\" \n\n\"That is yet to be determined. Guards, remove his bindings and leave us. I think we can handle this without your help.\" No one said anything until they were gone. \"Your Betas were cleared of any charges. They arrived at Marengo Lake this afternoon with Steve and Carla Ingalls; those two are taking over the Pack.\" \n\n\"You're taking MY Pack from me,\" I said with a low growl. My hands gripped the side of my chair as I pushed my wolf back. \n\n\"Yes,\" Chairman Sanders said. \"We're taking actions to stabilize the leadership of both Packs involved. Stillwater is a lost cause; we're cleaning house there. We're here to figure out whether you can go back to Marengo or we get someone else.\" \n\n\"Marengo isn't my home Pack, but it is MINE,\" I said. \"It is my children's birthright.\" \n\n\"Your birthright went elsewhere when you fucked a college kid,\" Chairman Platt said. \"It went to Miesville. You only have a mantle because you got it from your mate.\" \n\n\"And I would do anything, hell, I HAVE done everything, to protect that daughter as well as my other children. Brenda couldn't handle how it went down, and she paid the price. I wasn't involved; I would have stopped her if I had known.\" \n\nChairman Wolfe leaned forward. \"That is the problem we've found up in Marengo. The Pack is irrevocably split; some side with you, others would never accept your leadership after what you did to your mate and the Pack. It is Alpha Ingalls' opinion that allowing you to run Marengo would be a failure.\" \n\nI sat back; since the blood oath, I had been around the Pack, but I never integrated back into the Pack. Brenda kept me away and poisoned the well against my leadership. \"I could take it; no one there could defeat me for the position,\" I said softly. \"What do you propose?\" \n\n\"We believe you were once a good Alpha and could be again,\" Chairman Sanders said. \"We'd like you to take your son and daughter with you, and take over Stillwater instead. The Council will find a new Alpha for Marengo.\" \n\nI sat back; it was brilliant. I'd still be a mantled Alpha with a Pack, but I'd be back in Minnesota, less than an hour from my brother. My problems in Marengo would go away. In their place would be far different problems in Stillwater. There, I'd have to guide an entire Pack where criminal activity was accepted. \"What about Vicki?\" \n\nChairman Wolfe spoke next. \"If your daughter does not take over Miesville? Vicki is a mantled Alpha; she could take over Stillwater instead. She's young, and a lot could happen in the next decade.\" \n\nHe was right; with Leo mating again, if Adrienne got pregnant, his mantle would pass to his child. \"It would be good to be around my brother again,\" I said. \"I agree in principle. What is next?\" \n\n\"You return to Minnesota and meet Alpha Larry and Luna Donna at Stillwater Pack,\" Sanders said. \"You would take over as their Beta, learning the Pack and helping to put it on the right path. When they believe you are ready to take over, they will inform the Council.\" \n\n\"And my children?\" \n\n\"Their nanny will bring them to you when you are ready,\" Wolfe said. \n\n\"I'd want to bring the nanny into the Stillwater Pack if she agrees. I need help with them, and my children will need the comfort of a familiar face.\" \n\n\"I'm sure we can work something out for them,\" Wolfe replied. \n\nI thought about what a move to Stillwater would represent. \"Is Leo Volkov in agreement with this plan? I don't know how he feels about me since the kidnapping.\" \n\n\"Leo has not been in contact with us; he is trying to track down four members of his Pack who left here under unfortunate circumstances,\" Sanders said. I raised my eye; there was something more. \"They believed Vicki was in danger when Leo's death announcement came out, and they ran.\" \n\n\"I'll talk to him when I can. I don't want things to be awkward between us.\" I looked around the room. \"Anything else? If not, I need to book a flight.\" \n\nLawrence reached into his pocket and pulled out a piece of paper. \"You'll forgive me for using your credit card? The flight leaves at five-thirty in the morning. Your ride will depart at two AM.\" \n\nI looked at the clock; it was almost ten. \"I better eat and pack, then.\" Lawrence and I stood. \"Thank you, gentlemen. I am grateful for your wisdom in this situation.\" \n\n\"Do not make us regret our faith in you, Alpha Volkov,\" Chairman Sanders said. \"Good luck.\" \n\nBrent Lawrence's POV \n\nNever in my life had I gone from elation to a gut punch so quickly. \n\nLeo called and told me he'd found them. Then he called back to say they were on the way to the hospital. I ran back to my room, packing and calling the desk to check out and get a ride to the airport. The whole way there, I searched in vain for a flight that could get me there tonight. I'd already missed the last flights to Dallas, San Antonio, and Houston, and the connections to Corpus Christi were on puddle-jumpers. It was a fourteen-hour drive there, so that wasn't happening either. I tried my best at the airport, finally settling for a pair of flights that would get into Corpus at nine in the morning. \n\nI tried calling Leo back, but it went straight to voice mail. I called Adrienne instead. \"Luna? It's Brent.\" \n\n\"Oh, hello, Brent! Isn't it great news?\" \n\n\"What do you mean?\" \n\n\"That Leo found them,\" she said. \"He called me a while ago. He was supposed to call me back, but he must be busy. He isn't answering his phone.\" \n\nHe didn't call his mate back? He was going to pay for that. \"Luna, there's been an accident. Olivia fainted and hit her head on the pavement outside the aquarium. She was taken by ambulance to the hospital.\" \n\nI heard the phone drop, then more noise as she picked it up again. \"Brent?\" \n\n\"I'm here. Leo told me to get there as soon as possible, but I can't get there until nine in the morning. They were at the hospital when I last talked to him.\" \n\nThere was a pause. \"It's a six-hour drive from Dallas. I'll be down there as soon as I can,\" she said. \"Olivia is in good hands, Brent. They'll keep your family safe.\" \n\n\"I know that,\" I said. \"Have a safe drive.\" I ended the call, walking towards the departure gate for my 0515 flight. I may as well get some sleep. \n\nCh. 60 \n\nAlpha Leo Volkov's POV \n\nI took a shower and went to bed as soon as Vicki was down for the night. I was exhausted, but I couldn't settle. My mind was going a mile a minute, trying to catch up on what happened over the past few days. My wolf was anxious about Olivia's injuries and had spent a lot of time keeping Vicki calm. It didn't help that we were in Corpus Christi, Brent was in Las Vegas, and Adrienne was in Dallas. \n\nDallas. OH CRAP! I sat upright, suddenly realizing that I'd never called my mate back. The last time we talked, I was waiting for the group to come back to their car. I looked over at the clock; it was just past eleven. Hopefully, she got a hotel room and slept through everything. I pulled out my cellphone and gave her a call. \"Hello?\" \n\n\"Hi, honey. I didn't wake you, did I?\" \n\n\"Of course not. I didn't want to sleep until I'd talked to you again.\" \n\nHmmm, maybe I'd escape with my fur intact. \"I'm sorry I didn't get back to you earlier, we've had a little excitement here, and I forgot to call you back.\" \n\n\"I understand you've been busy, after all, a PACK MEMBER IS IN THE HOSPITAL AFTER PASSING OUT AND HITTING HER HEAD, AND MY MATE 'FORGOT' TO CALL ME BACK.\" \n\nOh. Crap. \"I'm so sorry, honey.\" \n\n\"Thank Luna that Brent called me, or I'd be sitting in the parking lot waiting to find out what to do next,\" she said. \"He called me on the way to the airport.\" \n\n\"I can get you a flight,\" I said. \n\n\"I already looked, nothing is rolling tonight. I'm south of Dallas already; I'll be there early in the morning. I'll call you when I'm close.\" \n\n\"All right.\" \n\n\"What's the update on Olivia?\" \n\n\"Observation overnight for the concussion and some stitches. Liv will be fine. Vicki is handling it well, and Anita has been a big help.\" \n\n\"Good. I have to go. You wouldn't think there would be traffic at this time of night, but construction zones suck.\" \n\n\"I love you, Adrienne. Drive safe.\" Hanging up, I texted an update to Susan at the Pack, telling her I would talk to her tomorrow when we had a plan. I set my alarm for six-thirty since visiting hours started at eight. Closing my eyes, I went to sleep. \n\n\"Unky Leo, wake up,\" a voice said as someone tapped my shoulder. I opened my eyes, shaking my head to wake up. Vicki was standing by my bed in her Shark Tail pajamas, holding a phone. \"Luna wants in.\" \n\n\"She does?\" \n\n\"Yeah, she's coming up now.\" I took the phone from her and set it back on the table. \n\n\"Let's welcome her,\" I said. I held her hand as we walked to the door and peeked into the hallway. We only waited a minute before the elevator door opened, and she stepped into the hall. \n\n\"Luna!\" She ran towards her while I made sure the door didn't close. \n\nAdrienne picked her up and walked her back. \"We have to be quiet; it's four in the morning,\" she said. \n\n\"Hi, my love,\" I said as I kissed her and pulled her into my side. \"We missed you.\" \n\n\"I'm exhausted,\" she said. \"I need a shower, I've been driving all night, and my back hurts.\" \n\n\"Come on.\" I put Vicki back to bed as she showered, then I gave her a massage when she came to bed. She fell asleep halfway through, so I turned the light off and laid next to her. She turned into my side, and we were soon asleep. \n\nMy alarm went off, and I quieted it and used the bathroom before coming back in and getting Vicki ready to see her Mom. I left a note for Adrienne, kissing her before we headed down to breakfast. After watching Sharkbait's breakfast disappearance act, Mike dropped us at the hospital before going to the airport to pick up Brent. \n\nOlivia looked better, and Vicki climbed up in bed with her so her Mom could hold her tight. \"How are you feeling?\" \n\n\"My head hurts, but they'll be releasing me soon,\" she said. \"There's one problem.\" I lifted a brow. \"The doctor doesn't want me flying, and driving long distances will not help me.\" \n\n\"I have a solution for that,\" I said. \"Brent will be here soon, and Adrienne arrived early this morning. Would you let us take Vicki home, and you and Brent can have a honeymoon on the beach?\" \n\n\"Could we? Does he even want that?\" \n\n\"I was going to send you to Vegas before you got hurt. I didn't have a chance to ask,\" I said. \"Mike and Anita can fly home; they have work and other stuff to do. Adrienne and I can have our own adventure with Vicki while you're having fun. I think there are a half-dozen aquariums between here and home.\" \n\n\"You have no idea what you're in for,\" Liv said with amusement. \"If Brent agrees, then yes.\" \n\n\"There are lots of fun things to do on the Islands before the spring break crowd arrives,\" I said. \n\n\"Unky Leo, what are you talking to Mom about?\" Vicki was sitting up on the bed, her hands on her hips. \n\n\"You, of course,\" I teased. \n\nThe doctor came in, giving her the discharge instructions. Since Mike was at the airport and Adrienne was still sleeping, I had to call an Uber to take us back to the hotel. Anita took Liv to the deck overlooking the beach to eat breakfast while I went back to the room so Vicki and I could get in our swimsuits. \"Liv is out of the hospital, and we'll be down at the beach,\" I told a sleepy mate. \"Sleep as long as you need.\" She mumbled something and went to sleep again. I updated the note, just in case. \n\nVicki was swimming and looking for sharks when Brent arrived. He came straight to his mate, picking her up and setting her on his lap while he made sure she was all right. Vicki saw Brent and went running up the sand to hug him. While they caught up, Liv linked me again. \"We've talked, and if Vicki is all right with going on an adventure with you, we'll stay here for a week or so.\" \n\n\"Why don't you ask her?\" ",
        "Vicki was ready to go back to the water when Liv stopped her. \"Baby, I have a question for you. Mommy and Daddy were thinking of staying here for a bit while Mommy rests. Would you want to go on an adventure with Uncle Leo and Aunt Adrienne?\" \n\n\"Adventure?\" \n\nI nodded. \"SeaLife Grapevine in Dallas, SeaLife Kansas City, St. Louis Aquarium, and the Shedd Aquarium in Chicago,\" I said. \"We can take a week or so to drive home, and stop at each of them on the way.\" \n\n\"Can we, Mom?\" She looked to me and back to Liv. \"You'll be all right without me?\" \n\n\"I'll survive,\" Liv said. \"You'll have to FaceTime me at least once every day, or I'll cry.\" \n\n\"Don't cry, mommy. I'll tell you ALL about the sharks.\" \n\n\"Yay!\" \n\n\"We have some other news, Brent.\" She sent directly to me, asking to remove the Alpha command, and I did. \"Vicki, can you tell Dad what we found out about Mommy yesterday?\" \n\n\"She bonked her noggin,\" Vicki said. \n\n\"No, the other thing,\" I laughed. \n\n\"Mommy is gonna give me a baby sister!\" \n\n\"Or brother,\" Liv added. \n\nBrent's jaw dropped. \"You're pregnant?\" \n\n\"Only a few weeks. Congratulations, Daddy.\" \n\n\"OH, LIV!\" He pulled her into a tight hug. \"How?\" \n\n\"The usual way. The pill hadn't taken effect yet, and your animal side can't put a condom on.\" She moved his hand to her belly. \"I know we talked about me finishing school first, but...\" \n\n\"We'll manage,\" Brent said. \"I'm so happy right now!\" \n\nI picked up Sharkbait. \"We have to go look for the mighty Hammerhead. Why don't you two go back up to the room for a while?\" \n\n\"Adrienne's still up there,\" Liv said. \"I guess we can be quiet.\" \n\nI turned towards the beach. \"Send my wife out when she wakes up, we'll be swimming.\" \n\nWe never did find that hammerhead shark, but we did see some stingrays. \"Come get dressed. We need to take Mike and Anita to lunch, then we drop them at the aquarium,\" Adrienne sent to me. \"And by the way, when were you going to tell me we were taking Sharkbait on an aquarium tour?\" \n\n\"Communication, the key to a happy relationship,\" I said. \"You don't mind?\" \n\n\"It sounds like fun,\" she replied. We got everyone ready and headed to Joe's Crab Shack. It was no cheaper to feed a hungry Sharkbait seafood, we discovered. Brent took Mike and Anita to the hotel, turning in their car rental and getting his own. Adrienne had rented a Ford Escape, so we were good to go after moving her car seat in. \n\nBrent and Liv took over the adjoining hotel room with its king-sized bed, leaving the dual full-size beds for us. I found a place nearby that rented jet-skis, and the three of us found out that 'water snowmobiles' were a lot of fun too! The sun and the swimming, followed by Whataburgers, wiped Vicki out. She was asleep by eight. \n\nI kept Adrienne up until eleven, keeping things quiet as we played under the sheets. \n\nI woke when she practically jumped out of bed and ran to the bathroom. When I heard her throwing up, I got up and went after her. She had just flushed, and I handed her a cup of water to rinse her mouth. \"Are you all right?\" \n\n\"It's probably the shrimp,\" she said. \"I'll go back to bed.\" \n\nWhen she came out, she grabbed my arm. \"I need you to go to the drugstore and pick up a few things,\" she said. She walked over to the desk and wrote them down. \n\nI raised my eyebrows when I read it. \"Really?\" \n\n\"Maybe we got lucky. Sore breasts, morning sickness, food smells I suddenly can't stand; it's happened before.\" An hour later, I came back, and she did the test. \n\nLiv wasn't the only pregnant female in my house. \n\nCh. 61 \n\nAlpha Leo Volkov's POV \n\nIn the morning, we moved Vicki's car seat to Adrienne's rental car and loaded up. Adrienne had been queasy at breakfast, and I didn't want to have them both cooped up in the car for hours on end. Adrienne sat in back with her as they used her phone to plan out the trip. Our first stop was San Antonio, where the zoo had a small aquarium attached. \n\nNow that Adrienne was in the mix, she wanted to visit more than just aquariums. After hearing what she wanted, I had to agree. She wanted to visit some of the country's famous barbecue places. \n\nVicki and I were in full agreement with that. \n\nLuckily, San Antonio was less than three hours away. Adrienne was feeling better, and I wanted some authentic Mexican food. We went off a web search and ended up at a small place called El Chivito Tortas Ahogadas. I found out Adrienne spoke fluent Spanish when she and the owner started talking animatedly. \"Just find a seat, and I'll order,\" she said. The meal was fantastic; I tried torta ahogada, Argentinian empanadas, and fish tacos. When lunch finished, we checked into a hotel before heading over to the aquarium. \"Don't expect too much compared to some other places,\" I told Sharkbait as I paid. \n\n\"There's more to life than just sharks,\" Adrienne added. The aquarium had more freshwater exhibits, lemurs, and a stingray and shark lagoon. \"Someone stole one of those sharks a few years ago; they grabbed it and put it in a bag in their stroller,\" she said. \n\n\"Bad people!\" \n\n\"Yes, very bad.\" We spent a lot of time at the touch pool watching the small sharks; a juvenile blacktip, horned shark, bamboo sharks, banded shark, smoothhounds, even a guitarfish. It was only a few feet deep, and kids could lean in and touch them as they swam around. I bought some food, and Vicki got to hand-feed the sharks as they swam by her. \n\n\"I want a SHARK,\" she said as we washed our hands after we left the exhibit. \n\n\"Home aquariums can't have big sharks,\" I said. \"You're not going to have a mature blacktip at home.\" \n\n\"We need a BIG tank, Unky Leo!\" I could just imagine. I was pretty sure that in the next few years, a saltwater aquarium would be in our house, and a small shark would be in it. We spent the afternoon there before her stomach growled. \"Barbecue?\"  \n\n\"Of course,\" I said. Adrienne had left early to do some shopping, as we didn't have all the clothes and things we would need for the trip. When she returned, we piled into her car and drove to our first barbecue stop, The Smoke Shack, conveniently located a few blocks away. A classic Texas barbecue, we were soon sitting at a table with a tray loaded with ribs, brisket, pulled pork, and sides. \n\nThe only indicator of Vicki's progress was the growing pile of rib bones in front of her. \"Don't you want to try the brisket or the pork? Maybe some chicken?\" \n\n\"No, Unky Leo,\" she said as she tossed another bone down. Finally, she gave up as Adrienne was packing up the few leftovers. \"I'm full,\" she said as she came back to the table after going with my mate to wash up. \n\n\"That's too bad. We'll have to eat dessert on our own.\" \n\nHer eyes got wide as she saw the banana pudding coming over, the edges defined with Nilla wafers. \"I need a spoon,\" she said. \n\nThat set the pattern of our next week. We would drive after breakfast to the next place, eating lunch or dinner at a famous barbecue place. The afternoon into the evening would be the aquarium, then dinner before heading to a hotel. On the way to Dallas, we hit up Louie Mueller Barbecue before going to the SeaLife Grapevine. It was a lot like our aquarium back home, and Vicki liked it a lot better. Dinner was at the Cattleack BBQ; their brisket and beef ribs were excellent, and we even got Vicki to eat them. \"Man does not live on baby backs alone,\" I told her. \n\n\"Werewolves could,\" she said as she went back to her ribs. \n\nAfter Dallas, we made a long drive up to Kansas City to make the pilgrimage to Arthur Bryant's. There, we had the burnt ends, pulled pork sandwiches, and, of course, the ribs. We spent the day at SeaLife Kansas City, alternating who was with Vicki so we could each get some shopping done. After that, it was across the state to St. Louis. \n\nSt. Louis was a style of barbecue heavy on the sauce, where Texas was more dry rubs and brisket. We ate lunch at Jone Bar-B-Q. We had to go there for lunch, because the hours were \"11 AM until we run out.\" We all got ribs, and they were excellent, eaten on picnic tables out front. It would have been easier to tie Vicki to the roof and go through a car wash than to clean her up with wet wipes. That girl got sauce EVERYWHERE. \n\nThe fun part was the brand new St. Louis Aquarium. Adrienne and I hadn't seen the Atlanta Aquarium, so this one was fun to visit. Built at Union Station, a huge train station in the World War Two era, and blended the old and new seamlessly. The Shark Canyon exhibit had 250,000 gallons, making it half the size of the shark exhibit at the Mall of America. \n\nWe made it to Chicago on Friday and got a hotel room downtown on the South Loop. When we got to our room, people were waiting for us. \n\n\"MOMMY! DADDY!\" Vicki ran into the room, jumping into her Mom's arms as she sat on the bed. \"What are you doing here?\" \n\n\"We couldn't let you have ALL the fun,\" Brent said as she moved to his arms. \"I've never been to the Shedd Aquarium with a shark expert!\" We ended up spending the weekend in Chicago; we visited Shedd on Friday, the Natural History Museum Saturday, and the Museum of Science and Industry on Sunday. \"I think I need a vacation from my vacation,\" I said. \n\n\"There's one more place to go,\" I said. \"We'll get there tomorrow.\" We left Monday after breakfast, driving up towards Wisconsin. The SUV was full since Brent and Liv had taken a shuttle to the hotel. Vicki didn't realize where I was going until I exited 90/94 in the Wisconsin Dells. \n\n\"Waterpark?\" \n\n\"The Great Wolf Lodge. Where else?\" We had adjoining rooms again, with Vicki staying with her parents. Vicki swam all afternoon and evening, dinner poolside, and then again in the morning. By the time we left at noon the next day, she was exhausted. \"She's going to sleep the whole way home,\" I said as I looked in the mirror at her, already drooling onto her shirt. \n\n\"Good,\" Liv said. \"We've had a lot of fun. Thank you for taking her so we could have some alone time.\" \n\n\"You're welcome. We enjoyed spending time with our granddaughter.\" Her eyes teared up a little; with her father still refusing contact with her, our relationship meant a lot. \n\n\"How is it going to work for her now that you two are having a child? Is she still your heir?\" \n\n\"She will be six years older than both of our children, and who knows what will happen in the next ten to twenty years,\" I said. \"I can promise you that I will love and protect her as my own. When the time comes, as a mantled Alpha blood female, she will have choices. I will let her make the choice that is best for her.\" \n\n\"Even if it isn't your Pack?\" \n\n\"What if her mate has a pack elsewhere? It's a lot of unknown. I'd rather that we focus on stabilizing our Pack, rebuilding the company, raising our young, and seeing you two through your pregnancies. I'm far more nervous about Adrienne and our baby than Vicki's mantle.\" \n\n\"I've been doing some reading, and I'm nervous too,\" Adrienne said. \"I can't believe it's real. I thought I was too old to need birth control.\" \n\n\"It only takes one,\" Brent said. \"I'm happy that you and Liv get to be pregnancy buddies, both due in early November.\" \n\n\"And we'll be fat and sweaty all summer,\" Adrienne complained. \n\n\"Beautiful, and the pool will feel so good,\" I said. \n\nAdrienne laughed as she remembered something. \"You got lucky. When I was pregnant with Anthony, it was winter, and I had a craving for a Dairy Queen Peanut Buster Parfait. He tried five places before I called him back and told him to get me Mexican food instead.\" I tried to act relieved. \"Don't worry, when the cravings hit, a mate who wants to have sex again will get it for us.\" \n\n\"Of course, dear,\" Brent said quickly. \n\n\"We have our first well-baby visits on Thursday,\" Olivia said. \"I hope you don't mind, but with you moving here recently, I didn't know if you had a doctor. We have appointments right after each other.\" She reached her hand out to Adrienne. \"Could you be there for mine? My Mom probably won't be able to get away, and you've done this before.\" \n\n\"Only if you are there for mine,\" Adrienne said. \n\nWe got home before dinner, and most of the Pack was there to greet us. The children all went downstairs for supervised play while the adults had a meeting upstairs. \"In the end, we got what we needed. Miesville is a recognized Pack, Luna Adrienne's mating is acknowledged, and the Alphas know Vicki is my heir. Also, my brother Ivan is heading to Stillwater to take over that Pack.\" \n\nAdrienne pulled Olivia and Brent up next to her. \"That doesn't mean there won't be changes around here,\" she said. \n\n\"WE'RE PREGNANT,\" Liv said with a huge smile. \n\n\"Congratulations, you two,\" the ladies said as they descended on Olivia. \n\n\"You don't get it,\" Adrienne said. \"We are BOTH pregnant. Due in November.\" \n\nThe house shook with the screams of joy at that one. The broke early, as it was a work night, and we were tired. \n\nI worked Wednesday and took the afternoon off Thursday for the first of our baby appointments. Olivia wanted the two of us in the room for her checkup, and we all had tears seeing the first ultrasound. The waterworks continued with Adrienne's examination. \"The good news is that you are in good health, and many women in their late forties have healthy babies. We will be monitoring you closely, especially as you enter the third trimester,\" the doctor said. \"Now, let's take a look, shall we?\" \n\nAdrienne lay back on the table as I held her hand, and the doctor started looking with the ultrasound probe. The little black sack came into view, the baby a little bean inside. She printed a photo. \"Everything looks normal,\" she said, but as she moved the probe around, she stopped again. \"Baby number two looks normal, too.\" \n\n\"WHAT,\" Adrienne asked. \n\n\"Congratulations, you're having twins.\" \n\nAdrienne stared at her, then looked at me. \"I can't believe you knocked me up with TWINS at the first opportunity,\" she said. \n\n\"Fraternal twins, too early to tell the sex,\" the doctor said. She got a view with both babies and printed that out for us. \"I'll see you in four weeks. Diet, exercise, and neonatal vitamins.\" \n\n\"Thank you, Doctor.\" \n\nShe walked out, and we just looked at each other. \"We're gonna need a bigger house,\" I said. \n\nThe End"
    ],
    "authorname": "partwolf",
    "tags": [
        "alpha",
        "luna",
        "pack",
        "werewolf",
        "non-human",
        "nonhuman"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/the-porch-wolf-ch-51-conclusion"
}