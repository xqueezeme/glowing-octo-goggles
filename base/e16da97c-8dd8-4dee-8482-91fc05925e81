{
    "title": "Midwinter Weekend Pt. 02",
    "pages": [
        "*****Edited by Gustavca\n\nThe night in the plane made some things very plain. There were not going to be any awkward moments so long after Midsummer, none of us regretted anything, we had all grown and sexually matured since and were essentially even more open than we had been. In Iceland, during Midwinter, we were all going to reap what we had sown during the last few months.\n\nThese realizations explain why, right now, on this sunny Saturday morning, I'm sitting in a five-star suite with 5 individual rooms, complete with a glorious view, completely at peace with what I was about to do. On my left, stunningly visible through the floor to ceiling windows that run from one wall all the way across to the other wall, stand some of Iceland's wonderful mountains, hot springs and skylines. But that's not why the view is glorious. Right in front of me, sitting in a chair next to the fireplace, Rinette just removed her towel and sits gloriously naked, winking at me. \n\nThis may require some extra explanation. First though, there's the question of why Eleanor and I didn't get to spend the morning together. The answer: skiing was just about the only thing that would make all the others in our group get up early. It wasn't all pretty. Most of them looked like they had spent the night in a gutter instead of a 5-star Icelandic resort. So very early this morning, despite the few hours of good sleep, nearly everybody left to hit the ski slopes. I say nearly because I didn't go. I hate skiing. Funnily enough, Hope doesn't like skiing either. When they all left, the jokes were barely veiled. Hope was only half-awake, standing like a Celtic goddess in her green tank top and panties, her hair looking like a wild firestorm around her head. Rinette, anxious to get to the slopes, said, \"I wonder who's going to be more exhausted by the end of the day us, or these two.\" \n\nWe all laughed. The attraction between Hope and me last Midsummer had been the spark that lit the entire sexual weekend and changed everything between all of us. Nella even joined in the banter. We had talked about what could happen during this midwinter weekend. In the end we agreed that, essentially, anything could happen. So there was really no question that as soon as Hope and I were going to be alone, we were going to rip off what little clothing we had on. \n\nSurprisingly, though, nothing of the sort happened. It became quickly obvious Hope wasn't in the mood to rip anyone's clothes. She simply stood there by the table, her back to me, looking outside. Although my blood was pulsing in my veins, I realized that something was off. Trying my best to ignore the curves of her hips, ass, belly and the sides of her breasts, I walked to her. \n\nAs soon as I touched her shoulder she turned around, buried her face in my shoulder and started crying softly. A few minutes later we were sitting down next to the fire, her body securely hidden in the robe I fetched for her. \n\n\"I'm not cold, Will.\" she said when I gave it to her. \n\n\"I know, I replied, it's not for you...\" More than a little of her passion flared in her eyes when she understood why I brought the robe. \n\nFor the next hour or so, we talked about an incident that had ripped her family apart a few weeks ago. One of her uncles had been revealed as a pedophile. Hope and Connor were not even supposed to come to Iceland because of very important Christmas traditions. \"This year nobody really feels like celebrating what's obviously a children's holiday...,\" she told me, now in control of her tears. \n\nAfter a long, but very companionable, silence, I suggested we go and take a walk outside. She declined, but decided to go alone after a bit. \"I may end up at the springs... Don't wait for me, but if I'm not back before the sun sets, come and fish me out!\" she said with a grin. If there's something that has been constant in her life, it's her passion for baths, jacuzzis and now hot springs. Just before she left, she kissed my cheek, then my lips for a much longer kiss and said, \"My dear, don't misunderstand me. I still wanna fuck you before the week-end is out.\" Hearing her laughter as she walked down the corridor made me smile. Thinking about what she said made me laugh. \n\nTwo hours later I was making a sandwich when I heard noises outside the main door. As I was walking towards it I heard someone unlock it. I felt a sharp pulse in my belly. Hope must be back and feeling better. In a split second fantasies started erupting in my mind. But for the second time that day, those fantasies of Hope were frustrated. When the door opened, I saw Lincoln and Connor half-carrying Rinette inside. She was obviously in pain, crying and cursing as the two men carried her to her room. \n\nWhen Connor came out, leaving Rinette with her husband, he was smiling. Surprised, I asked, \"Why are you smiling? Isn't she hurt?\" \n\n\"Well, yes, she's hurt alright. Her pride took a hit!\" Connor laughed. \"Actually, she's mainly frustrated that she won't be able to ski anymore... A sprained ankle is not fun, but it's not all that bad either, unless you're planning on skiing!\" \n\nA few minutes later, alone with Connor, I told him what had happened with Hope. \n\n\"How is she?\" he asked. \n\n\"Not so bad, considering...\" \n\n\"Good... I'm hoping that this week-end will help her get some distance from it all... Shitty business.\"\n\nSoon after that Lincoln came out with a half-smile. Sighing, he wished me luck with Rinette and her temper then left with Connor.\n\nI knocked on her door, \"Are you alright in there?\" \n\nI heard her long moan, \"NO!\" As I entered her room, she was drying the tears on her face. She was wearing long woolen thermals, was sweaty and her normally flawless black hair were a tangled mess. \n\n\"Let me look at that ankle, Rinette.\" \n\n\"No need, Will. It's not that bad. It's been an hour since my fall and it's only slightly swollen.\"\n\nI hid my smile from her and said, \"Well, hop in the shower, it'll do wonders...\"\n\n\"What? Now you're saying that I'm an ugly mess?\"\n\nI started laughing but saw that she was just about to start crying again. \"Oh come on, Rinette, get a hold of yourself! Yes it sucks for your skiing, but there's plenty of things to do around here. Come on! Up!\" I managed to pull her up and helped her undress to her underwear. With a small smile she said that she would be ok from here. I got out of the room and made sure the fire was still alive in the living room. \n\nHalf an hour or so later, Rinette came out of her room, wearing nothing but a towel, tightly wrapped around her torso. Her long, magnificent legs were completely exposed. It took me an extra second before I managed to tear my eyes away from her legs. Hobbling to the chair in front of mine, she grinned. She then paused as if remembering something. \n\n\"Will,\" she said as she was sitting down, \"you're a great masseur... Would you mind massaging my ankle?\" \n\n\"A great masseur? You've never had one of my massages!\" I said, a smile on my face. \"No need to make false compliments!\"\n\n\"It's not a false compliment!\" she said, a different kind of smile on her face. \n\nI didn't understand, trying in vain to remember when I would have... until I saw her wink. Delicious memories suddenly came flooding back. \n\nAbout three months ago, Nella, Rinette, Lincoln and I took a long weekend trip to the Appalachian range. We had long hours to kill in the car and all day long we would switch drivers and places. On the way back Sunday night, I ended up in the back seat next to Rinette. She was wearing, as she had all summer long, very short shorts. She had teased me with them, consciously or not, all weekend long. It was pretty dark outside and I couldn't see much. Somehow, even if I had spent hours looking at them in the sun, I was still drawn to them in this darkness. \n\nAs Nella and Lincoln were chatting in front, we were quieter. She seemed to be fascinated by the moonlight in the clouds, so I could simply stare openly at her thighs. At one point she began caressing her left leg with her hand, the one closer to me. Her caresses became massages, and suddenly she slipped one of her finger under the tight hem of her shorts. Surprised, I looked up and she was looking at me with a huge grin on her face. I had been caught! I froze when she called Nella, \"Nella, can you pass me my iPad please?\" She laughed silently at my reaction. On her iPad she wrote, with her finger \"Wanna touch?\" When I looked back up, she was still smiling, and she winked. \n\nThat wink, the only time she had winked at me, was what I remembered now as she was asking me for a massage. I laughed out loud with her and took a deep breath. In the car, I had spent nearly an hour caressing and massaging her thighs, and as we were closing on our city, Rinette had slipped her hand down her shorts and panties and caressed herself until hitting a perfectly silent climax. \n\nNow, I had no idea what was going to happen. Kneeling in front of her, it was obvious that my massage made her feel better, just as it was obvious this was not just a massage. From time to time, as she adjusted herself on the chair, I could see her pussy peeking from beneath her thighs and the towel. At one point, as she turned around to reach for her cup of mimosa, she deliberately opened her legs wide. I mean, completely wide. I stopped massaging her and simply stared at her wonderful pussy. Her lips were perfectly shaven, but above them Rinette kept a patch of dense, trimmed black hair. Her pussy, besides being beautiful, was also obviously wet. \u2028\n\nAs she turned back and closed her legs, I said, \"You know, it's kinda worse if you keep your towel... I get peaks at your, er... perfectly shaven, er...\"\n\nRinette laughs at my comment and replies, \"What? You've seen it before!\"\n\n\"Well, yes, but not quite as clearly...\"\n\n\"Ok then!\"\n\nAnd as simply as that, she grabbed her towel and threw it on the floor. For an instant I closed my eyes and laughed, \"I was kidding!\"\n\nShe laughed with me, then asked, \"Well, is it easier?\"\n\nI took a deep breath, basking in her glory, and shook my head. She was as lean and tight as I remembered. Her breasts, while small, were still nicely formed, full despite her very low body fat. She probably could, if she wanted to, pose for fitness magazines. She was tall, beautiful, great long hair and a fantastic body. Kneeling there in front of her, I felt my blood heating up, and didn't know how long I could \"simply\" massage her. \n\n\"Are you serious, Rin? You really want me to continue my massage while my face is inches away from your pussy?\"\n\n\"Of course, Will! You have no idea how nice it feels to have your hands all over me \u2014 all over my ankle!\"\n\n\"Right... Your ankle!\"\n\nWe both laughed as I tried to resume the massage. The fireplace was very hot on my right side, but Rinette was glowing right in front of me. Soon enough, the entire room filled with silence as we shared only glances and smiles. I felt sweat on my brow. \n\n\"Will, you're hot. And overdressed. Why don't you join me?\" \n\nI looked up, unable to repress a grin, and said, \"Because you're way too hot yourself!\" I took a deep breath, thought about what I was about to say for a second, and went ahead anyway. \"Rinette, if I get naked right now I can't guarantee that I'll be able to, well, to remain a perfect gentleman.\" \n\n\"Who said I wanted a gentleman?\" she said, taking another sip of her strong mimosa. \"In any case, gentlemen don't simply finger half-naked women in a plane packed with people!\" We both laughed at that. How quickly things could change. Fantasies could turn into realities, \"Also, I've been talking to Hope for the last few months, and, frankly, I'm jealous...\"\n\nThe look we shared then lasted only two seconds. Three at most. Even though our last Midsummer had ignited something that had been steadily growing for the past few years, we were not quite at a point where we could just all fuck around. Not all of us anyway. Yet those few seconds changed that for us. And later for the others as they learned about it. The plane had been an incredible overture, but my Midwinter weekend was beginning right here and now.\n\nIn a very soft voice, Rinette said, \"Let me get more comfortable on the floor.\" Slowly, keeping a hand on my shoulder to prevent me from getting up, she rose from her chair and, very slowly, turned around. Rinette knows that she's beautiful, knows that some men love her small breasts. She also knows that her lithe and lean silhouette attracts even more stares. But most of all, she knows that her ass is her main asset. \n\nRight now that main asset was inches away from my own face. I could smell the soap she had used in the shower, a faint trace of the smell of her own skin and that elusive balsam fir scent I always associate with her. In the long seconds she took to move away, my face felt as if it was being pulled, as if by some strange gravity, towards those marvelous cheeks. Her golden skin, slightly dark even at Midwinter, was flawless. No pimple, no beauty or birth mark, no tan lines, no hairs, no stretch marks, nothing... Pure womanly flesh, firm, taut and mouth watering. Now I love breasts. I love big breasts. I've been a breast man most of my adult life. This morning was going to change that once and for all, although I was not going to emerge from the weekend as an ass-man. Rather, I became a breast or ass agnostic. \n\nI watched, entranced, as Rinette managed to gracefully lay down on the thick carpet despite her ankle. Her feet were pointing towards me. I was given a gift that morning. While Rinette was as different a woman from Hope as one could imagine, she nevertheless gave me the impression that I was near something more than human. While Hope had looked like a succubus from myth this morning, Rinette looked like a nymph. From my vantage point I could see the triple curves of her calves, thighs and buttocks all in line. It was an amazing sight which would stay burned into my memory for the rest of my life. \n\nI got up, my eyes never wandering, moved the chair away and undressed completely. To say I was erect was an understatement. I was painfully hard. Yet as I knelt above her calves, Rinette turned her head around, \"Oh my... That's a very nice cock... But, I really want you to keep going.\" \n\nBefore she turned her head back, I saw her grin, and then saw and heard her laugh. \"Oh... you're going to get it Rin!\"\n\nMoving back away from her mesmerizing ass, I resumed my massage, this time on both her ankles at the same time. I poured more oil on her calves, and started to move up. Slowly. Then again, my eyes were glued to her ass, so time had little meaning. Soon my hands were just below her knees as I kept moving up. The smoothness of her thighs was a very nice surprise. I knew Rinette was strong and in very good shape. Yet it didn't diminish the softness of her thighs at rest. As I rotated my hands from the inside to the outside of those thighs, I could see her ass cheeks were beginning to follow my motions. \n\nAs slowly as I was able to manage, I climbed up not expecting any objections. There were none. Finally, my fingertips were grazing the apple of her buttocks, the fine line between her thighs and ass. I was still doing my rotating motions and this time her cheeks were fully parting. Her pink lips, without a trace of hair from this angle, were literally glistening with her juices. I knew, without a doubt, I was going to bury my face between those cheeks with my tongue also buried into her pussy. \n\nBut not just now. I could have. Rinette was even starting to arch her ass upwards! But there remained one last step. I placed my hands right next to her cheeks, with my fingers on the inside of her thighs. Then, in one fluid motion, I moved my hands up and rotated them outwards. Slowly, wonderfully slowly, I felt my hands discover, then cover, then master both her cheeks. Rinette was completely relaxed and her flesh yielded to my hands. I could see it molding itself around and between my fingers, and the slow peak of a flesh wave in front of my hands as they moved. As my rotation was nearly finished and my fingers moved closer to her hips, my thumbs slipped from her thighs to her pussy. Shamelessly, without any hesitation, I placed each of my thumbs on either side of her long pussy, and kneaded it all the way up. \n\nAs soon as I started, her clit gently being squeezed, Rinette took a deep breath and arched her entire back upwards. Pushing back against her with my hands, I kept my thumbs moving, releasing her clit. Agonizingly slowly now, I let my thumbs slip up and up toward the base of her pussy. As her labia receded, I reached her hole and let one of my thumbs graze it. Rinette shuddered all over and once more arched herself upward. Yet I resisted. \"Wait for it, my leggy nymph...\" She half groaned, half laughed as my hands completed their rotation. When I fully grabbed her ass with both my hand, she slowly rotated it from side to side slowly. I was in heaven. \n\nI slipped my hands back down to her thighs and began again. This time I let all my fingers touch her hole and pushed one of my thumbs inside her. As I did, Rinette took a sharp intake of breath while pushing her ass towards me. Somehow I managed to resist the impulse to finger her more deeply. I placed my hands on her thighs again and repeated the process. Yet this time, although she moaned softly, Rinette clearly didn't react as much. When I did it the third time though, I saw goosebumps all over her skin as she pushed her ass against my hands. \n\nAnd suddenly it clicked. Her trigger wasn't exactly her pussy. As I pushed my thumb was partly inside her, my fingers were grazing against her anus. When I did it again, this time not even touching her pussy, but applying more pressure on her anus, Rinette reacted intensely. She moaned very loudly, then laughed nervously. Seconds later, when I deliberately placed my thumb on her asshole, she said, \" Oh Gods...\" My eyes widened in surprise. The woman with the most wonderful ass in the world just told me she wants her anus caressed, teased and played with. \n\nSuddenly I was looking at the divine offering in front of me very differently. Between those cheeks, nestled in the middle of that glorious ass were two jewels. The first, her pussy, I had already seen, felt and enjoyed. It was far from over, but still... The second one, her asshole, was now the object of my attention. \n\nBreathlessly, I whispered, \"Really?\" \n\nShe replied in a little voice, \"Gods yes... Well, I'm not sure I'm ready to go all the way this morning, but...\" \n\nIt was obvious Rinette was nervous. She didn't turn around to look at me and I could barely hear her murmurs. I said, just as softly, \"Rin, you're giving me an unimaginable gift. Just this massage, right here right now, even if nothing else happens. I'm profoundly in your debt, so don't worry.\"\n\n\"Well, honestly, I hope that you're going to be profoundly into something else soon!\" After we both laughed, she continued, \"But you don't understand... I've never, well Lincoln isn't really into... not at all in fact...\"\n\n\"Shhhh...\" \n\nShe didn't need to say more. It was obvious Lincoln, the clean freak, wasn't into anything like anal sex. I, on the other hand, have been fascinated by it ever since I saw Eleanor getting deeply ass-fucked by Timothy. Nella and I fooled around with the idea. She let me caress her asshole a few times as I just did with Rinette but nothing more. \n\nBack to the present. My hands and fingers still reveled in the luscious, small but positively feminine flesh of Rinette's ass. That my fingers now regularly grazed her asshole was now a given. I had been given a rare opportunity and I was not going to miss it. I slowly bent forward towards Rinette, until she opened her legs to give me some room. I was now down on the carpet, my torso between her knees and my hands still locked on her ass. I leaned forward and planted a kiss on the line between her thigh and right ass cheek. When my tongue parted my lips and tickled her skin, Rinette shook. ",
        "\"Do you know how long it's been,\" Rinette said after a long sigh, \"since anyone kissed my ass?\"\n\n\"Do you know how many men would weep hearing you say that?\" After a pause I lifted my head and asked, \"Seriously? Lincoln doesn't even want to kiss it?\"\n\nWhen she turned around to look at me, she had a strange expression on her face. \"Well, sometimes, a few pecks here and there... It's just not his thing.\"\n\n\"I can't believe it... It's as if I didn't want to kiss Nella's breasts!\"\n\nShe laughed at my comment and said, \"Hahaha! I know! Even I want to kiss Nella's breasts!\"\n\n\"All you have to do is ask her, Rin!\"\n\nShe groaned and smiled, then closed her eyes as I sucked as much of her buttock into my mouth as I could. \"And before I was with Lincoln,\" she added between quick breaths, \"I was too young and didn't let my boyfriends go too far...\"\n\n\"Enjoy this then, my dear friend. I know I will!\" \n\n\"I will too...\" \n\n\"Do you know what I plan on doing?\" I asked, smiling. \n\n\"Well, I have a pretty good idea!\" she said laughing. \"But, again... maybe not all the way this morning?\"\n\n\"I didn't forget, Rin. Don't worry. But that's not what I meant. Do you know what I'm planning to do?\"\n\n\"Not so sure...\"\n\n\"I'm going to eat your ass. Not kiss or nibble your buttocks. Right now I'm planning on eating that delicious asshole of yours until you and I have had our fill!\"\n\nShe moaned, laughed softly, then stopped sharply as I flicked my tongue directly on her anus, \"Oh my Gods! You're crazy!\" \n\nI laughed, and said, \"You have no idea!\" \n\nAfter that, I buried my face between her cheeks, pulled her buttocks against my cheeks with my hands, and began eating her asshole. I was a complete novice but it was obviously working. Within seconds Rinette was moaning loudly, pushing her ass against me and moving around wildly. I kept at it for as long as I could, then had to stop to breathe! As I bit, kissed, sucked and licked at her buttocks, she whispered urgently, \"Again! Go again, please!\" I was grinning as I dove back in, just about as thrilled about the situation as she was! \"Don't stop, don't you dare stop!\" I could barely hear her, flabbergasted as I was by the whole thing. My tongue was darting all over her anus, licking and poking. Slowly, between her spasms of pleasure, I could feel her muscles relaxing more and more. \n\nAfter another breathing pause, where I roamed and claimed as mine her wonderful ass, I dove back in and felt my tongue going in a fraction of an inch. Her sharp intake of breath was all I needed. Even as she was saying, \"Will, you don't have to\u2014\" I was diving back in, pushing my tongue as far as it would go. For a second or two, Rinette kept her muscles taut and I couldn't get in. But then she released a big sigh and relaxed her muscles at the same time. \n\nMy entire being was buzzing and my mind felt like I was in some narcotic trance. I felt my tongue push its way as far as it could go, and it reminded me of the moment I lost my virginity. I could distinctly feel every minute sensation, all the while I was reeling with the overflow of it all. It was my first rim job, Rinette's too, and I was blessed to be doing it to the most amazing ass I had ever seen. After a few minutes she was fully relaxed and I even felt her fingers grazing my cheeks to grab her own cheeks to pull them apart. \n\nStill fully relaxed, her muscles opened up even more and I was shivering with pleasure overload. It's strange just how sexually excited, thrilled and overjoyed I was all the while my cock was just about forgotten. Slowing down my assault I began to twist and turn inside her as much as I could, pushing her rim slowly up, left, down and right. I lost all track of time and honestly don't know how long I remained locked on and in her ass. When I felt her fingers tickling my chin, it took me a moment to understand. When her moans turned into screams of climax. It clicked she was simply pushing herself over. \n\nHer climax was just as wild as our shared morning was. \"Fuck me!\" she screamed right through it. After a last roll around the rim of her wonderful anus, I pulled up and lay upon her. Her hand guided my cock against the lips of her burning hot pussy and I impaled her on my cock. It took me ten seconds. Maybe. I was laughing like a madman as I felt my cum rising. \"I'm about to\u2014\" \n\n\"Do it, I'm on the pill... Oh, Will, fill me with your cum!\" \n\nI happily obliged. My climax was a mixture of pain and pleasure, very sharp and quick. \n\nAs I/my climax was winding down and my blood began to slow down, I felt Rinette's hands on her ass, spreading her buttocks apart. In her well lubricated hole, the feelings were still glorious. I pulled myself up, still squatting above her thighs, and slowly moved in and out of her pussy. Looking down, I could see my cock sliding in and out of her pussy, and her pink anus relaxed just above.\n\nI was lost in those sensations when she simply said, very softly, \"Do it...\" My eyes shot open and I looked at her. Same words as before, but clearly different. Her head on the side, she looked at me for a second and winked. Looking down, I saw that she was not spreading her ass to allow me a deeper access to her pussy. She was giving me her ass. \n\nFor a long while I thought that either Eleanor or Nella were going to be the first women I would assfuck. And it would have been absolutely great. I loved both of them, and there isn't any doubt in my mind that it would have been a moment to remember. It was not to be. Instead I was, in a matter of seconds, going to discover this delight with Rinette and her legendary ass. \n\nIf the blood in my cock had started to recede, that process stopped completely. As I looked down, pulling my cock slowly out of her pussy, I could see her fingers moving between her pussy and her asshole, lubricating it. I let a big gob of spit fall right on it and spread it around with the tip of my cock. \"This is insane...,\" I whispered. \n\nShe laughed beneath me, then arched her ass and opened her cheeks to me. One last time she repeated, \"Do it Will!\" \n\nSo I did. \n\nAt first I stayed upright and pushed my glans against her hole. I had climaxed just a few minutes ago, but felt like I'd never been harder in my life! Slowly, gently, I pushed in and saw her anus opening to me. Using her moans to gage my speed I took my time. Yet as soon as I felt her muscles contracting around the tip of my glans, I knew that it would be sheer torture to not push further quickly. \n\nAs if guided by some instinct I leaned forward, placing my left hand on the floor and using the other to keep my cock steady. It didn't need any help. As I leaned forward her anus swallowed my entire head, clamping hard behind it. I didn't move until I felt her hand relaxing against my thigh. Pulling myself back up, I let another gob of spit fall on my cock and pushed in again. The sight of her stretched asshole covering and accepting my cock was hallucinating. \n\n\"Come down against me, Will.\" As soon as I did, she added, \"Get in, get in... deep.\" \n\nInch and inch of my cock slipped right into her ass. Lubricated with my spit and her copious juices, my shaft slipped into its delicate nest until it couldn't go any farther. The last inch seemed a bit more painful, but once again I felt her relaxing her muscles. \n\n\"Take me gently, but take me...\" She took a deep breath of surprise as I wrapped my hands around her shoulders and pushed my cock into her. The sensations were wonderful but very different from what I was expecting. The first inch of her depth felt really tight, but the rest was relatively loose. Perhaps looser than her tight pussy had been. Despite everything, her ass felt delicate, fragile and deliciously feminine. I was expecting something rougher, grittier. Not at all. Even though I had just been into the core of her femininity minutes ago, this felt even more intimate. She was vulnerable. While I could have pounded her pussy into the floor earlier, there is no way I was going to do the same thing with her ass. Maybe one day, maybe... \n\nRight now this utterly naughty and taboo act felt like something intensely private, intimate and precious. Rinette was holding one of my wrists in her hand, and was kissing my own hand softly. For most people sodomy was something bad, akin to domination and linked to rape and humiliation. Right now though, as her delicate sphincter was firmly clamped around my shaft, I didn't feel like I was dominating her. Instead, she had allowed me in, letting me be the first to take her last virginity. Looking at her, our eyes were as locked together as our position allowed. \n\nYet, despite all of this, instincts were instincts. A bell seemed to ring in my head when Rinette, no longer simply still beneath me, pushed her ass up against my movement. We both saw, afterwards, that I had bitten her neck at this point, when the rhythm changed. I didn't start to assfuck her like in some porn flick; I think my long, prolonged strokes worked best for the both of us. But the intensity certainly shot up. After pulling her ass cheeks apart one last time she wrapped her hands around mine again and turned her head so I could kiss her. It was very strange. This mixture of tenderness and wickedness, that some would even call immoral and depraved. \n\nI was pretty sure I could have said \"I love you\" to Rinette right there, and she would simply have smiled. And to my complete surprise, I did. Between two kisses, it just came out. She grinned, and said, \"I don't know how to take this, Will, with your amazing cock taking my anal virginity right now...\" We laughed together in this overwhelming and bewildering moment. Despite the silence, my crazy outburst didn't ruin anything. The tenderness and kisses simply resumed and our bodies knew exactly what we wanted. \n\nFor the second time in something like twenty minutes I was cumming, filling another of Rinette's holes with my sperm. Torn between the urge to push as deep as I could into her and the very special compulsion that kept my movements gentle, I experienced a unique climax in this virgin anus. And was met with something very similar. Rinette didn't start buckling as if her entire world was being rocked, but her orgasm seemed to be deep and intense nonetheless. The idea that she had had a new climax was probably just as intoxicating as the pleasure itself. \n\nWe disentangled ourselves slowly, and lay on our backs next to each other for a while. Turning on to her side and propping her head on her hand, Rinette looked at me with a huge grin. \"You're crazy, Will, you know that?\" I simply smiled, still trying to regain full control of my breathing. \"If I didn't know just how much you loved Nella, your little declaration would have ruined a perfect anal deflowering.\" I was still smiling, but I was definitely less comfortable. With her other hand on my chest, she shook her head with a smile. \"Don't worry, my love... I understand what you meant.\" After kissing me, she said, \"Also, well, Eleanor and I talk about a lot of things...\"\n\nIt took me a few seconds, but I understood. \"What?\" I asked, shocked. \"She told you about that?\" \n\nLaughing, Rinette replied, \"Oh, my dear... Men always underestimate the amount of secrets girl friends actually share. Of course she did!\" \n\n\"Well, well... First Hope tells you about my sexual prowess, and Eleanor about this... Can I hope that I still have a few secrets?\" \n\nLeaning against me, she kissed me again, before pulling back. Loudly, clearly, she said, \"I love you too, Will... Don't misinterpret my earlier silence. I had your thick cock up my ass you see, I was a bit distracted!\"\n\nWe laughed together, and spent a few moments in silence. Still looking at me, she added, \"I think we all love each other. Our crazy Midsummer group. And now it looks like Midwinters are going to be something special too, aren't they? Solstices group now, maybe?\"\n\n\"I sure hope so!\" \n\n\"Oh my Gods!\" she said loudly, exasperated, \"Can you stop using the word Hope all the time?\" \n\n\"What?\" I asked surprised. \n\n\"We know you love her too, would love to fuck her again too!\"\n\n\"I, well, I wouldn't, \u2014 oh fuck it. Of course I'd like to fuck her again!\" I blurted out, laughing with her. \n\nAfter a while, I sat up and helped her up as well. \"Do you know what?\" she said as she thought of something. \"I didn't even get to wrap a lock of my hair around your cock. Oh well.... Just one more thing to do before we go back home!\" I laughed with her, shaking my head in disbelief. But she wasn't done, \"Wanna take a bath with me, Will? I really need to clean up.\" \n\nI was grinning when I replied, \"Sure. But do you really think that I can take a bath with you, clean every inch of your skin and not fuck you again?\"\n\n\"I certainly hope not!\""
    ],
    "authorname": "MrIllusion",
    "tags": [
        "rinette",
        "ass",
        "virgin",
        "ski",
        "massage",
        "fireplace",
        "bath",
        "asshole",
        "relief",
        "pleasure"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/midwinter-weekend-pt-02"
}