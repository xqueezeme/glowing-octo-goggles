{
    "title": "A Ditzy Handful Ch. 02",
    "pages": [
        "Author's Note: A continuation from the previous scene, naturally. When we last left off, the na\u00efvely sexy Alex was enjoying a full body massage from her best friend in the whole wide world, oblivious to Ryan's internal struggle with himself over taking advantage of his sexy neighbor's innocence and gullibility. Ryan decided to, temporarily at least, resist the temptation to grab hold of Alex's sexy bimbo body and fuck her brains out by removing himself from the situation. In this scene, he will quickly be pulled back in.\n\nOne of the comments on the last story was a request for Alex and Ryan to switch places on the massage table, which I thought was a great way to continue to explore their attraction to each other and continue to tease the build up to their sex scene.\n\n****\n\nAlex was kneeling on the big spread out beach towel in Ryan's back yard, her naked curves oiled up and shining in the bright sunlight. Her little pink nipples were still hard, her bosom heaving up in down as she tried to catch her breath from Ryan's exciting massage.\n\nHowever, her pretty face was crumpled in a pouty frown, as she puzzled over Ryan. He seemed like he was only just getting started, but then he just abruptly stopped. He even left her all alone to go back inside his house, seemingly upset.\n\nDid she do something wrong? Was he mad at her? Alex really liked Ryan, she would do anything to make him think she was a good girl! She decided that she needed to follow him inside and apologize to him for whatever bad thing she did.\n\nShe headed up the steps of Ryan's back porch, her bare feet padding along the warm floorboards, her full breasts bouncing and jiggling with every step. Her little string bikini lay forgotten on the ground s Alex was far too worried about Ryan to notice her own nudity, after all.\n\n****\n\nRyan stood over his sink, a frost covered beer bottle pressed against his temple. He was still debating about drinking it. He was still debating a lot of things. He honestly didn't know what the hell he was going to do next.\n\n\"Nice job, grunt,\" He muttered to himself. Alex seemed really disappointed when he left. Hell, Ryan was disappointed in himself. He imagined if anybody from his old unit would have seen him cut and run from getting their own personal sex toy like he just did.\n\nWhatever. He had enough to worry about. He would send Alex home in a little while, happily and longingly staring at her curvy ass sway side to side with every step of course, and things would go back to normal. She would just be his ditzy dumbass neighbor that sometimes forgot to--\"Ryan?\"\n\nRyan slowly turned, knowing that as soon as he took one look at Alex this moment of self control would immediately come crashing down. And when he saw Alex walking into his kitchen as naked as the day as she was born, he couldn't help but laugh in exasperation. Yeah; his dumb sexy bimbo of a neighbor sometimes forgot the social expectation of putting on enough fucking clothes to not tease a guy to insanity. His eyes immediately roved up and down her slutty body, trying to memorize every detail - her flat tummy, her toned legs, her round tits, her pink little nipples, her shaved pussy. It took a great deal of effort, but he managed to drag his gaze back up to her equally pretty face.\n\n****\n\nThis wasn't good at all. Ryan took a few seconds longer to turn around, like he didn't even want to see her. And when he saw her, she recognized his laugh. It wasn't his happy laugh - it was the tired, almost annoyed laugh he gave over the phone that one time she forgot to put gas in her car after he spent all day fixing it. And now it was like he couldn't even look her in the eyes!\n\n\"Ryan, I'm really sorry!\" Alex said, blinking really fast as she didn't want tears to start welling up. Oh no, Ryan was frowning now! \"Please don't be upset with me...\"\n\nShe walked over to him and hugged him tight, her arms tight around his midsection. \"Why won't you hug me back?\"\n\n\"Alex,\" he said with a wry smile. \"I don't normally have too many naked hotties run up to me and hug me.\" She felt his big strong arms envelop her, pulling her against him, her bare tits smooshed up against his warm skin. Alex became dimly aware of the nice tickle of his light smattering of chest hair against her big soft breasts, teasing her sensitive nipples.\n\n\"Oh. Um. I forgot,\" she stammered, as she attempted to cover her breasts with her hands, her nipples poking into her palms while plenty of her boobs were still exposed. \"But, you already saw me naked?\"\n\n\"Yes I did, that's true.\" Ryan said, with an appreciative glance. \"But also, I was holding a beer, and I didn't want to give a shock with these...Cold hands!\" Ryan said as he smiled big and quickly grabbed ahold of her booty, his cold fingertips pressing into her warm bare skin as he firmly pulled her hips forward, their groins tightly rubbing together.\n\n\"Aiiiii!!\" Alex gasped and shrieked in shocked laughter as she began to squirm, her stiff nipples pushing across Ryan's sexy chest, her groin and lower tummy tightly rubbing against that big something in his pants. She didn't know if it was a gun or flashlight or what, and she wondered why he was carrying around something so stiff and heavy, especially since it felt like it was right next to his cock. Ryan may be a tough army guy, but Alex didn't want him to hurt his cock!\n\nRyan's chuckle was low and rumbling, Alex enjoyed the feel of his voice reverberating through his torso. She looked up at him with her big innocent brown eyes. \"You seemed like you were mad and didn't want to talk to me anymore...\" she said shyly.\n\nRyan was quiet for a second. \"I was just ready for it to be my turn,\" he finally said, as he continued rubbing his icy cold hands all around Alex's sun-kissed body, perhaps in an attempt to heat them back up with the friction.\n\n\"Your turn?\" Alex asked, her head tilted to the side, confused.\n\n\"I rubbed that lotion on you outside,\" Ryan said, his palm warmly sliding up and down Alex's thigh. \"Now its your turn to rub some on me.\" Alex's pouty lips made a circular \"oh\" shape as she understood. That made sense, it was only fair. And maybe if she did a good job, Ryan would be back in a good mood. She smiled, excited at the idea, butterflies swirling in her lower tummy at the thought of getting to slide her palms all over Ryan's big muscles.\n\n******\n\n\"What the hell are you doing, grunt?\" Ryan mentally asked himself.\n\n\"I'm not doing anything, Alex is going to be doing all the work,\" he slyly answered himself, as he readjusted the big cotton towel. Ryan's mind immediately went to the last time he was a smartass in boot camp, when Sarge was less amused (both at Ryan and his constant informal referral of a Sergeant as \"Sarge\") and made him do push-ups reciting \"One clowndick, Two clowndick,\" and so on, making him restart every time he would bust out laughing.\n\nThe memory itself almost made him ache. He glanced over his at Alex, kneeling behind him on the towel, smiling as she was getting ready to massage his neck, and he started to ache in a different way.\n\nAlex held up the bottle a squirted some of the cool lotion onto Ryan's shoulder. \"Is that enough?\" She asked, unsure.\n\nRyan smiled. He might as well just relax and enjoy himself. \"Yeah babe, actually it might be too much. Just make sure to rub it in real good.\"\n\nHe felt Alex starting to rub his neck and shoulders. She began rubbing her thumbs up and down the back of his neck, firmly pressing her fingers into the tight muscles. She slowly began gliding her hands around, kneading the tension out along the back and sides of his neck, eliciting groans and grunts of pleasure.\n\nRyan slowly blinked, stunned. This was...actually a pretty good massage!\n\n*****\n\nAlex was intent on her work. She moved to Ryan's side, one of her big titties pressed against Ryan's firm bicep, as she began pressing the heel of one of her palm between his shoulder blades, apply long deliberate strokes.\n\nShe enjoyed listening to the little rumbling noises he was making, letting her know she was doing a good job. Alex began circling her hands down his shoulders, her fingertips under Ryan's collar bone, and could feel years of stress and tension melting away like butter.\n\n\"Lay back,\" she told him. Ryan had been sitting cross legged, but now he stretched out as he was laying on his back. He seemed comfortable. Alex looked over Ryan's sexy body. She felt herself flush a little bit; she always thought Ryan was handsome, a bit of a hunk with his dark smoky eyes, mischievous smile, rugged beard, and tattooed athletic muscles.\n\nAlex thought back to how wonderful she felt during her turn, when Ryan's hands were all over her. She remembered how Ryan had put his legs over her his when she was facedown, and decided to try that position to see if it was effective.\n\nAlex nestled her curvy ass right into Ryan's groin, straddling his hips. She s \"Oh, darn!\" she thought, as she felt something, like a long metal rod pressed against her booty, sliding between her cheeks. \"I forgot about that big thing!\" She looked down at Ryan, his eyes were closed, and he was rubbing his beard. Was he in pain? Was the metal rod laying across his cock?\n\n\"Are you okay, Ryan?\" she asked, laying her palm down on his chest. Feeling the discomfort of that rod, she tried to adjust her butt again by moving it back and forth.\n\n\"Yes.\" came a curt, strained reply as Ryan's body seemed to twitch a little bit.\n\n\"Okay,\" Alex said happily as began lightly rubbing across his torso, sliding her palms across his pecs, occasionally bumping across his nipples before kneading her knuckles in. Alex enjoyed the feeling of running her fingers down Ryan's tiger-line of chest hair. She slid her hand down to feel some of the bumpy scars along his left side. \"Am I doing a good job?\" she asked him.\n\n\"Oh yes,\" Ryan breathed out, his hands began gently rubbing her thighs. \"Yes, Alex, you're such a good girl.\"\n\nAlex smiled, so happy, warm with his praise. However, her moment of bliss was punctuated by that rod, that darned rod, rubbing up against her! This time it grazed along her pussy lips, teasing her just like Ryan's fingers earlier.\n\n\"Ohhhh!\" She gasped, blushing. \"Darn it, Ryan, what do you have in your pocket?\"\n\n****\n\nWell this was a bad idea.\n\nIt didn't take Ryan long to figure out that his funny little idea had backfired on him. Alex was such a sexy bimbo, and having her sitting cowgirl on top of him, her ass grinding against his hard dick, her palms rubbing his bare chest, god it was practically tort--Um, it was practically enhanced interrogation.\n\nRyan could feel his cock getting even more erect with every little thing Alex did. She turned him on so much, but judging by the way she kept wriggling around she could clearly feel the outline of his stiff cock grinding up against her little pussy lips through the thin fabric of Ryan's shorts. Ryan could certainly feel it, and god did it felt great.\n\n\"Darn it, Ryan, what do you have in your pocket?\" she asked as she began searching his pockets and sliding her hands under the waistband of his shorts.\n\nOh fuck. This might bring new meaning to being caught with your pants down.\n\n\"Uh, sorry about that babe...\" Ryan said, trying to play it cool. \"You want me to flip over?\"\n\n\"No, I don't think its safe for you to have your gun stuffed down your pants like this!\" She said as she began tugging on Ryan's shorts.\n\nGun? Ryan's guns were locked up in the house, and when he carried one he never just shoved it down the front of his pants. Ryan realized that she was blindly rooting around for his pistol, another big safety no-no, and was going to be in for a shock when her hands closed around a different kind of gun.\n\n\"Um, babe don't do that!\" Ryan said quickly. \"You uh you don't want it to go off!\"\n\n\"Its not gonna go off, you have the safety on,\" came the casual reply. Ryan thought about the irony of that, considering that he was, ahem, locked and loaded as it were.\n\nAlex grabbed the waistband of Ryan's shorts and tugged down, and her eyes went wide when Ryan's big erect cock sprung out."
    ],
    "authorname": "doinkbrah",
    "tags": [
        "bimbo",
        "gullible",
        "dumb",
        "massage"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/a-ditzy-handful-ch-02"
}