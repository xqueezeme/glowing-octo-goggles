{
    "title": "Birthday Girl Ch. 06",
    "pages": [
        "Hey Guys,\n\nApologies for the late submission, life has a knack of getting in the way sometimes.\n\nI've used some creative license for this one so kindly bear with me; all the facts may not be totally accurate.\n\nThis is a work of fiction and no part of it may be copied or reproduced without the express permission of the author and a signed affidavit from the league of extraordinary gentlemen.\n\nSeriously though, don't be a cunt.\n\nPlease don't forget to vote and comment, it's the only way for me to know how good (or bad) I'm doing.\n\nEnjoy!\n\n***************************************\n\nI opened one eye just a crack from under my pillow and saw six fifteen in luminous green on the bedside clock. Letting my eye droop closed again, I pulled my blanket around me tighter and sighed as I wafted through the wispy clouds of slumber beckoning me back into their warm embrace.\n\nSix fifteen. The numbers appeared before my eyes again and faded into the distance, merging with the clouds I was drifting on, getting lighter and lighter until they vanished completely. I felt an itch somewhere in the back of my brain. Something wasn't right, but I couldn't quite put my finger on it. I wanted to surrender to the calling of the sleep but there was a thorn in my side that kept pricking me, nudging me back towards consciousness.\n\nSix fifteen flashed again. My eyes shot open like someone had rammed a plunger up my ass. In the next second my blanket was flying across the room and all the springs in the bed squeaked as I jumped out of bed as if it was infested with bullet ants.\n\nShit. Shit shit shit! I ran my hands through my hair staring at the clock. Six eighteen. They were going to kill me. They were going to castrate me and feed my minced remains to the dogs. How could I have let this happen? I had set six alarms for God's sake, what more was I supposed to do? Hire a marching band to play outside my house at five in the morning?\n\nIn case you were wondering, it's Friday morning. Yes, the day of the trip, and I was supposed to have been at Nicks place by a quarter to six so that we could leave by six thirty at the latest and avoid the traffic jam. Everybody would be leaving town for a small vacation since it was a long weekend and the highways would be clogged with mini-vans packed with screaming children and distraught parents.\n\nI nearly jumped out of my skin as my phone rang. I blanched looking at the caller ID. This wasn't going to go well. I swiped to answer,\n\n\"Hello,\" I tried to sound like I'd been up for a while but no such luck, my voice was thick and gravelly.\n\nThe screaming that emanated from the other end forced me to keep the phone six inches away from my ear. It was Jenna. And she was mad. I only caught snippets of what she was saying since she'd gone supersonic. It was like listening to a bat.\n\n\"No good lazy........ piece of rotten......... I'm gonna kick your............ instead of five forty five........ six thirty you.......... better get your ass.......... swine...... get my hands on......... here now!\" I could picture her bunching and pumping her fists as she said the last part.\n\nThere was a second of silence before I heard a deeper voice, \"Brian?\"\n\nPutting the phone back on my ear I replied, \"I'm on my way dude, just backing out the car, be there in five minutes, I swear.\"\n\n\"You just got out of bed, didn't you?\" Nick said, sounding exasperated. \n\nI could hear Jenna in the background saying she was going to whoop my skinny ass as soon as she saw me.\n\n\"Dude, ten minutes tops, I promise. I set six alarms man, I don't know what happened.\"\n\nI was already in the bathroom, relieving myself and putting toothpaste on the toothbrush while holding the phone propped between my ear and shoulder. This wasn't the wisest of ideas. If the phone slipped it was going straight into the toilet.\n\n\"Everyone's already here, we're just waiting for you. Hurry up dumbass, or we'll be stuck in traffic forever.\"\n\n\"Wehn whinitz,\" I mumbled through the foam of the toothpaste in my mouth.\n\nI got ready in record time. I showered like I was bathing in boiling oil, and was out in just over a minute, almost slipping and breaking my head on the bathroom floor tiles. I put on a pair of blue jeans, my favorite, and grabbed any random T-shirt that came in my hands. While donning it I stubbed my pinky toe on the foot of the bed and spent the next half minute cursing while jumping around on one leg and my head stuck in the neck of the T-shirt. \n\nUnable to find matching socks I put on a grey one on my left and a black one on my right, hoping no one asked me to remove my shoes. Thankfully I had packed my bag last night before I had gone to bed, so I just grabbed it as I ran out of the house, throwing the bag in the back seat before getting into the car myself.\n\nHalfway out of the driveway I slammed the brakes and looked back up at my house, eyes squinted in concentration. Had I locked the door? I think I had. No, no, I definitely had. I think. Cursing loudly I put the car in neutral, jammed up the handbrake and ran back to the house to check the door. I twisted the knob and Lo and Behold! It held. Of course I knew it would, as it always did, but if I hadn't confirmed it, I would have spent all three days with a nagging doubt at the back of my mind, constantly eating away at me.\n\nI peeled out of the driveway and did a wheel-spin as I shot off in the direction of Nick's house, leaving rubber on the tarmac. I had gotten my beloved Celica back, as good as new, and I gunned it down the road like I was escaping from a stick-up. The others could have come and picked me up but we were supposed to leave the city in the opposite direction, so it would have been a wasteful trip to come get me then go back the same way again.\n\nThe journey of around twenty minutes to Nicks place on a normal day took seven minutes flat this morning, owing to the fact there weren't many cars on the road yet. I think I left a trail of dust all the way back to my house, my very own version of Hansel and Gretel. Skidding into the driveway, I had opened the door even before the car was at a complete stop, stepping out as the car halted just two inches behind Nick's electric blue Subaru Outback. I looked at my phone. Six forty. Nice. I felt like Michael Schumacher on pole position.\n\nI sauntered into the house like royalty, head high up in the air, and spread my arms as I stopped just inside the door,\n\n\"Never fear, Brain is here,\" I said grandly.\n\nI caught a throw pillow just before it hit my face and dodged as a box of chocolates nearly got me in the stomach. It sailed harmlessly outside the door, landing with a dull thud on the porch. This violence was just getting ridiculous, those chocolates could have caused some serious damage.\n\n\"Glad to see y'all too,\" I said as I threw the pillow back on the couch, then turning to face the firing squad.\n\nThey were all standing in a line, in various poses of impatience, staring at me. Was there a memo about the dress code that I didn't get? Apparently it was jeans and T-shirt day. Nick was wearing a grey T-shirt with blue skinny jeans and a light jacket on top. Jenna was wearing black jeans and a black T-shirt with an arrow pointing left printed on it ,and underneath it was written, 'I'm with stupid.' If you haven't figured it out yet, Nick was standing on her left. \n\nMelissa was in green snug fitting jeans and an orange T-shirt with the Tasmanian Devil from Looney Tunes in his usual grinning and drooling stance on it. She had a pink hair-band holding her hair up, and red headphones were lying around her neck, the cord disappearing into her pocket. Sally had on blue jeans with a pink 'Girl Power' T-shirt and Bill was in beige jeans and a red T-shirt with the Mustang horse on it, and a Ford Racing cap on his head.\n\n\"What?\" I asked when no one spoke.\n\nMelissa was trying to hide a smile and Sally was openly grinning. Nick was shaking his head and Jenna was glaring at me.\n\n\"What?\" I asked again.\n\n\"You've worn your T-shirt inside-out dude,\" Bill said finally, lifting his arm halfway to point at my chest. \n\nI looked down and confirmed what he was saying was true. Crap. I was worse than a two-year old. Next I'd find my shoe laces tied up together.\n\n\"I meant to wear it that way,\" I defended myself, looking back up.\n\n\"Of course you did. Are you going to flip it or what?\" Nick asked.\n\n\"I told you, I meant to wear it like this. You guys don't know fashion.\" I wasn't going to agree I was in the wrong. \n\nJenna stomped over to me and grabbed the hem of the T-shirt trying to get it over my head as I struggled to get her off me.\n\n\"It's bad enough that we are late, but I'm not going to go around with someone who looks like a retard!\" \n\n\"Ok! I'll flip it,\" I said as I pulled away from her. God, she was worse than my mom.\n\nI turned around and quickly removed the garment and wore it the right way round.\n\n\"What are you afraid we're going to see? Your boobs?\" Nick said as I was turned around.\n\n\"Bite me,\" I said, turning back to face them. \n\nOnce again, they stared. Now what? I looked down to see what was wrong this time and groaned as I saw it, throwing my hands in the air. In all the rush I had picked out one of my old Eminem T-shirts where he is openly and vividly flipping everyone the bird. I hadn't worn this for around five years, I didn't even know I still had it. It was a relic from a phase in high school where I had gotten it into my head that I was a gangster rapper. Picture a nerd with glasses, a skull cap, pants hanging below his ass and saying things like I'ma bust a cap in yo' ass, son! Somewhere in my box of old things I even had a chain with a clock on it. Thankfully that phase didn't last too long. I got out of it when I realized I couldn't rhyme red and bed in the same sentence. Word.\n\n\"Seriously?\" Sally asked, pointing at my T-shirt.\n\nI shrugged, \"I was in a hurry, I didn't see what I'd picked out.\" \n\n\"Why do you even have it?\"\n\n\"Educational purposes.\" I said, scratching my head.\n\n\"He was into rap back in high school,\" Nick sold me out. I heard a few snickers amongst the group. Traitor.\n\n\"You can change it later. If we delay any more it'll take us two hours just to get out of the city. We're already late, let's get moving,\" Bill said sensibly, absolving me from any further explanation.\n\nWe shuffled out as Nick locked up and I got my bag from my car. Bill's dad's Land Cruiser was sitting next to mine, pearl white and gleaming in the early morning light, the morning dew still stuck on the rear glass, forming a rainbow where a single ray of sunlight hit it through the trees. The car looked magnificent, I couldn't wait until it got dirty and muddy. Cars like this were meant to be used rough and rugged, like a Rottweiler, not pampered and groomed like a Poodle.\n\nI turned back to the porch and saw three huge suitcases and two small bags sitting there that I'd missed when I'd arrived. It didn't take a genius to figure out which piece of luggage belonged to whom.\n\n\"How many of us are going?\" I leaned towards Nick and asked quietly.\n\nHe looked at the luggage as well, getting my point as he said, \"Just us six.\"\n\n\"How long are we going for?\" I asked quietly again.\n\nHe held up three fingers.\n\n\"Why does it look like we are moving town?\"\n\nI felt someone tapping my shoulder and turned around to face Jenna, \"If you're done gossiping can we get a move on?\"\n\n\"What did you guys pack for? The apocalypse?\" I asked, pointing at the suitcases.\n\nAll three girls started cracking their knuckles threateningly and I backed away, palms up, and picked up a suitcase, \"Not that there's any problem, I mean we all got stuff we can't live without, I totally understand. For some people it's a clean pair of boxers, for others it's a washing machine.\" \n\nThe damn thing took all my strength to lift up into the trunk of the car. What the hell did they pack in there? Rocks? It was a good thing the car had enough storage space or we would have had to sit on the suitcases all the way there. After we loaded everything up, we got in. The girls had carried the food and water we would need on the way with them in paper bags. It was funny how they thought of such things. If it were guys only, we'd remember food when we were two hundred miles from civilization and the hunger pangs hit. Then we'd end up eating shrubs from the side of the road. And then boast about it like idiots afterwards.\n\nBill was taking the first shift and slid into the driver's seat with Sally as his co-driver. Nick and Jenna got into the middle seat and Melissa and I got the back seat. Awesome. Back seats were the best. The massive V8 roared to life as Bill turned the key and I felt the tingles of excitement run up my spine. I absolutely loved road trips. The excitement of hitting the road, seeing new things and stopping at random places always got me giddy as a kid with a new bicycle. And this time I had Melissa to share it all with so it was that much more special.\n\nWe all hollered and cheered like little kids on a bus as we set off. I checked the time and noted we were only half an hour behind schedule. Not bad actually. My track record showed I was always at least two hours late. Compared to that, we were practically ahead of schedule.\n\n\"Guys.....?\" Jenna called out.\n\nEveryone fell silent to hear what she had to say.\n\n\"I need to pee.\"\n\nIt hadn't even been five minutes since we left. The noise went back up as everyone started talking again, the guys chastising her and the girls sympathizing with her. In the end we stopped at a gas station to let her complete her business before continuing on our way. The girl had a bladder of a frightened mouse. \n\nWe managed to avoid most of the traffic build-up, being just ahead of the mass evacuation of the city. We settled down as we reached the outskirts of the city, the hustle and bustle slowing down gradually, the interval between passing cars increasing and we passed the occasional weathered 'Thank You, Come Again' billboard on the side of the road with the paint peeling off and a huge phallus drawn on it. \n\nMelissa propped herself up on the side of the seat and put her legs up on my lap, one over the other, and locked her arms behind her head, closing her eyes and listening to the calming lounge music Bill had put on the car's audio system.\n\nI absently massaged her legs lightly from her ankles to her knees, tracing the curve of her calves, while staring out of the window, watching the buildings becoming scarcer and scarcer, until all we could see were rolling hills dotted with the occasional barn or house. After a little while we started passing huge farms with large sections of well tended crops neatly divided by perpendicular pathways. Cows could be seen grazing in the distance and an occasional tractor trudging along carrying bales of hay and such behind it.\n\nLooking over at Melissa I saw she was enjoying the music, nodding her head slightly in time with the tune, her eyes still shut. I indulged in my newest favorite past time of just looking at her. She would clench her eyes and furrow her brows in a cute frown when the sunlight would hit her face at an angle as the car meandered around the bends. Never one to sit idle for long, I started feeling mischievous. Starting at her ankle I started walking my first two fingers up her leg, humming the Pink Panther tune. I paused at her knee and waited for a reaction before continuing upward slowly, one step at a time. She cracked open one eye lazily when I reached mid-thigh and looked at me through her lashes. I backtracked slowly towards her knee and she closed her eye again. Immediately I started moving forward again and she smiled but let me continue my journey this time. \n\nI passed her hip and crossed over to her belly and walked over it in random patterns, tracing the line of her jeans, across her waist, then back. She was squirming a little now, her smile growing bigger, moving her waist this way and that, trying to get away from my touch. Someone was ticklish. I pretended to trip as my index finger dipped into her navel and my finger-man stumbled and fell onto her tummy. She broke into a chuckle and I looked up to see her watching what I was doing in amusement.\n\n\"Having fun?\" she said loud enough only for me to hear.\n\nI shrugged and smiled. My finger-man struggled back to his feet and continued his trek up her torso, each step more grueling than the last as he got closer to the valley between the peaks. The Pink Panther tune was reaching a crescendo now. I could feel her tummy dip and rise as she laughed lightly to herself, her attention fixed on the man that was almost at her mountain range. And boy what a mountain range it was. \n\nJust as the finger-man was about to put his first step on the gently sloping mound, his first step to untold glory, we heard a loud pop and the car momentarily swerved to one side, jolting us, before getting back on track. Everyone sat up as Bill slowed the car and maneuvered it onto the side of the road, switching on the hazards. The car was tilting slightly towards the right front and the sound of rubber dragging on the ground could be heard.\n\nI looked at Melissa and saw a terrified look on her face, her eyes darting around and her hands gripping the head rest in front of her tightly. Reading the signs, I knew she was having a flashback of the other night, so I put my arm around her shoulders comfortingly.\n\n\"It's just a flat tire,\" I said calmly when she turned to me.\n\nHer features relaxed and she nodded as she came back to the present, giving me a small smile to show she was ok. We got out when the car came to a complete stop and confirmed it was indeed a flat. I always say a road trip isn't complete without some sort of mishap. What's the fun if everything goes according to plan? Ok if you're robbing a bank or something I can see where deviating from the plan may have undesirable consequences, but for other stuff, I think a little spontaneity doesn't hurt.\n\nWe had stopped in the middle of nowhere, the land was flat and lush green for miles in either direction and there was no sign of civilization anywhere. It looked like it was grazing land, but there were no cattle in sight. A light wind was blowing and the grass was rippling in waves as the gust passed over it.\n\n\"Bummer,\" Bill said looking at the tire and rubbing the back of his head.\n\n\"Please tell me you got a spare,\" I said.\n\n\"Of course man, you really have to ask?\" \n\nI was relieved. You never knew.\n\nAs we changed the tire, our female counterparts decided this would be a good time to have a snack, so they spread out a blanket over grass just a few feet away from the car and got out the goodies they'd brought along. Several cars whizzed by and the occupants stared at us but no one stopped. I guess we looked competent enough to solve our car troubles.\n\nIt took us roughly ten minutes to complete the tire swap. I loosened the nuts as Nick set up the jack and Bill got out the spare tire. Once the car was up I removed the flat tire, Bill put in the new one and fastened the nuts as Nick lowered the jack and I inspected the tire. \n\n\"Aha!\" I exclaimed as I found the culprit. A three inch nail was lodged in the middle of the tread. \n\nNormally it would have caused a slow puncture, but maybe because of the speed of the car and the way it had lodged itself at an angle, it led the tire to pop the way it did. Putting all the tools and the tire back in their place, we joined the girls on the field. It was quite pleasant. We had a light snack of biscuits and coffee from a thermos while we stretched our legs on the blanket.\n\n\"How far are we?\" Nick asked Bill.\n\n\"We've done a hundred miles so I'd say we're about a third of the way.\"\n\nNick looked at his watch, \"It's a quarter past nine. We've made good time, considering the traffic we had to wade through in the beginning.\"",
        "\"We should get going if we want to get there by two,\" I said.\n\nThey agreed and we rested for about five minutes before we filed back into the car and set off again. This time Jenna came up with a few games to keep everyone entertained. Then she hooked her phone to the car's system and soon it was like karaoke night in there, and everyone was forced to sing. There were fights for which song should be played next and I'm not proud to say I sang along to a few songs that I swore I would hate till the day I died. I was a guy dammit, I wasn't supposed to sing such girly songs, but they were Melissa's choice so there wasn't much room for argument there since she held my hand in hers and raised it up as we waved and sang along. If anyone ever asked I would vehemently deny all accusations.\n\nAbout two thirds way there we stopped at a gas station in a small town to repair the flat tire. It wasn't a case of lightning doesn't strike twice, and we had no intention of being stranded where we were going. The girls went to the bathroom to do whatever the hell they did in there as we waited for the tire to be mended. Sally had been complaining about wanting to pee for the past half hour and because of her Jenna suddenly decided she needed to go as well. Soon after, even Melissa felt the calling of nature. Women. It was like they were connected via Bluetooth.\n\nNick took over this time, giving Bill a much needed break from driving. The last leg of the journey went by quickly as we talked about the park and what animals we would see. Everyone had their own preferences about what they wanted to encounter but only Nick and I knew what we were really going there to see. Melissa had snuggled into me and my arm was draped around her shoulder, playing with a lock of her hair, as she passionately explained to Jenna how she'd always wanted to see a grizzly and a jaguar. \n\nThe park was a sanctuary for several local and national species and they had recently started a program to rehabilitate dwindling endangered species from across the globe. These included elephants, black rhinos, pandas and a few types of deer, to name but a few. The program was still in its beta stage and they were testing its viability with a few animals before embarking on a full scale project.\n\nAs I predicted, we saw the sign board for the park at around half past one, giving directions to turn off the main road in another two miles. We turned into a rough gravel road that went in, turning and twisting for another eleven miles, thick long trees starting about halfway and becoming increasingly dense, before we arrived at the main gate. It was impressive. The entrance was framed with enormous elephant tusks on either side that criss-crossed at the top. The tusks were fake, of course, but they looked pretty authentic until you got very close and saw the tell-tale signs of wire-mesh underneath. An electric fence ran off into the trees on either side, marking the boundary of the park. I think it was as much to keep the poachers out as to keep the animals in.\n\nAfter parking the car, we got out and stretched before heading over to the registration office. It was a small one story stone building, covered in vines creeping up its walls and three rooms in it. I had already booked in advance so it was a simple matter of filling in our details and paying the lodging and entrance fees. After we were given the keys to our cabin there was a small presentation in the other room, where a ranger in full uniform explained the rules and regulations of the park, followed by a short training session with instructions on how to act in presence of particular animals. We were given a small device that looked like a radio-call. In case of any emergency, we could use it to call for help and the rangers patrolling the park would zero in on the location of the device. Pretty cool. I kept the device, feeling all James Bondy. Now if only I could get my hands on a pen that doubled as a grappling hook......\n\nThe ranger explained that personal vehicles were not allowed in, due to the sensitive nature of the animals, and we had an option of either trekking to our cabins or being driven there in a special park van. \n\n\"Let's trek!\" Jenna said excitedly, the other two agreeing with her.\n\nThe color drained from my face and I looked over at Nick and Bill who had similar expressions on their faces. They had the same thought as well. How the hell were we supposed to carry those monstrous bags through the forest to a cabin in the middle of the wilderness? \n\nI raised my hand up like a school kid in the middle of algebra, \"Uhmm..... we actually have quite a bit of luggage,\" I said to the ranger, gesturing towards the girls with my eyes.\n\nHe laughed as he got my meaning, \"Don't worry, we'll get your bags there before you, just hand them over to our staff and they'll transport it there in our van. It's an hour's trek, two if you go leisurely, so just take some water with you, we'll take care of the rest.\"\n\n\"So will you give us a map or something?\" Bill spoke up.\n\n\"One of our guides will take you there, then you're free to settle in, freshen up and relax. It's too late today, but a van will come by to pick you up for a game drive tomorrow morning at six. Is that ok?\"\n\nWe all agreed and I was just glad I didn't have to haul the luggage. I would have slept all three days if that had been the case. We agreed amongst ourselves to take some sandwiches we had prepared earlier with us since it was past lunch and we hadn't had anything to eat as yet. We decided we would find a spot on the way since everyone was anxious to get to the cabin and no one wanted to waste time eating.\n\nNick gave me the signal as we were walking out of the room. It was just a dip of the head but I understood. Time for a diversion. I distracted everyone, talking loudly and leading them towards the car to hand over our luggage as Nick silently slipped away and went into the registration office to speak with the in-charge about our 'little arrangement'. I could distract the other three easily but Jenna had known us for way too long to fall for simple tricks. That meant I had to rile her up. As usual, I had to take one for the team. Sometimes I'm amazed at my selfless generosity. Wasn't there some sort of medal for people like me?\n\nI looked over at Jenna, \"Hey Jen, you sure those small legs of yours will take you up to the cabin? Just so you know, no-one's going to carry you from halfway if you fall down in the middle of the trail in exhaustion.\"\n\nThe characteristic frown appeared on her face but she kept her cool, content with just glaring, her tongue in her cheek. That was good, keep the attention on me.\n\n\"Brian....\" Melissa said in a warning tone.\n\n\"What? I'm just asking. I mean, imagine we get chased by a wild turkey or something, will her teensy weensy legs carry her to safety?\"\n\nJenna was grinding her teeth now, her hands clenched into fists. \n\n\"Brain, stop it,\" Sally said, but I saw she was trying not to smile. Bill was looking between me and Jenna, just waiting for the explosion.\n\n\"Stop what?\" I asked innocently, \"Can't a guy be concerned about his friends? I'd hate to drag her all the way there by her leg, I'm just looking out for her.\"\n\nIt might have been my imagination but I thought I saw steam coming out of Jenna's ears. Nick better hurry up, this was getting dangerous now. I knew I was starting to look like an ass, picking on Jenna for no apparent reason. She started looking around for Nick as two attendants came to take our luggage. If she noticed Nick was missing she'd go looking for him, and that would jeopardize the whole plan. I had to step it up. I turned towards the two attendants and said loudly,\n\n\"Hey, do you guys have a gurney or a stretcher we can borrow?\"\n\nThey looked at me confused.\n\n\"You see we have an ickle wittle kid with us, and she might collapse before we make-\"\n\nThat's all I managed to get out as I saw Jenna leaping towards me with a battle cry. I got two solid punches on my shoulder before I got out of range but she kept charging. We ran around the car like the episode of Tom and Jerry where Jerry drinks a secret potion and goes all Hulk on Tom. \n\nFinally I saw Nick exiting the office and coming towards us, giving me a covert thumbs up. Now I needed to get out of this mess I'd gotten myself into. As a small measure of compensation, I let Jenna catch up with me and she pummeled me with her small fists until she got tired. It was like getting hit by a house-fly. \n\nI put my arms around her as her punches slowed and calmed her down, giving her a brotherly kiss on the top of her head. Sometimes I felt guilty for all the shit I put her through. I loved her like a little sister, there was hardly anyone else who would put up with all my crap. Actually, she was the one that deserved a medal.\n\n\"I'm sorry Peanut, I'm sorry. No more teasing ok? I promise,\" I soothed her, rubbing her shoulders.\n\nShe gave me one last half hearted punch in the gut, \"Jerk.\"\n\nI knew I was forgiven. Melissa was just shaking her head, smiling. Sally let me know, in no uncertain terms, that next time I'd have her to deal with her as well. Bloody hell, they were unionizing against me now. This could turn into a rebellion.\n\nWith the luggage carted away, we were assigned a guide. A tall lanky guy who looked to be a few years older than us, dressed fully in dark green, with a tranquilizer gun on his shoulder. I wanted to ask him if we could tranq Jenna with it but talked myself out of it. I had tortured the poor girl enough for today.\n\nFood and water in hand, we set off down a narrow path leading deeper into the trees, walking in two's, since the trail was quite narrow. Melissa was walking just behind the guide with Jenna. Bill and Sally were a few paces behind them and Nick and I brought up the rear. We slowed down a little and put some distance between us and the rest before I asked,\n\n\"So.....?\"\n\n\"It's done.\" Nick replied.\n\n\"Gimme the details, dumbass,\"\n\n\"The in-charge has already spoken to the vet. Everything is in place and tomorrow morning they'll do it before we leave for the game drive. The rangers will be in contact with the driver and let him know the location of the rendezvous. After that.....\" he shrugged and put up his palms in an 'I don't know' gesture.\n\n\"Don't worry dude, she'll say yes,\" I reassured him.\n\n\"I don't know man,\" he looked down, \"if she says no.........\" he left the statement hanging, his expression somber.\n\n\"Are you crazy? She loves you to bits, and I'll say it for the thousandth time, you guys are made for each other. Don't get cold feet now.\"\n\n\"But don't you think all this is a bit of an overkill?\" he asked, arms waving around us to the surrounding undergrowth.\n\n\"Dude, that girl right there,\" I pointed ahead at Jenna, who was merrily chatting with Lissy, \"is one in a million. She's a gem, and one of the best people I know. She deserves more than a fancy dinner and a corny poem expressing your undying love. Not that she would ever complain if you did that, but nevertheless, get rid of all that doubt in your head and make this something she'll remember for the rest of her life.\"\n\n\"But-\"\n\n\"No,\" I shook my head, \"No buts. Do you know what your problem is?\"\n\n\"I sat next to you on the first day of high school?\"\n\n\"Oh look, we got a funny guy. No, your problem is that you over think everything. You don't have to dissect everything into a million pieces and ponder over each individual piece separately. Just go with it.\"\n\n\"So you think she'll say yes?\"\n\n\"She'll go to the moon and back for you man, have a little faith in her.\" \n\nHe smiled as he looked at me, \"For all the crap that you give her, just once she should hear you talk like this. Maybe I should tell her what a softy you are.\"\n\n\"I swear, if you even try.....\"\n\n\"What will you do?\" he asked cockily.\n\n\"I have stuff against you too, you know,\"\n\n\"Oh yeah? Like what?\"\n\nI gave him an evil smile, \"High school, Rachel Dumont, behind the washrooms.......\"\n\nHe was silent for a few moments as we walked.\n\n\"You're really an asshole, man. Don't you ever forget?\"\n\n\"Forget you comparing playing with her boobs to playing with a Play Station controller? I laughed about that for weeks. And don't even get me started after that when you-\"\n\n\"Alright alright, I get the point,\" he cut me off, \"sometimes I don't know who's worse at reminding me of all my mistakes, you or Jenna.\"\n\n\"Whatever the case, we are doing this. Tomorrow, at this time, you're going to be engaged.\"\n\n\"You sure?\"\n\n\"Absolutely.\"\n\nHe gave me a firm nod that showed conviction and I knew we were good. For now at least. We increased our pace to catch up to the rest. They had come across a small pond that had a small fast stream flowing into it and a stream flowing downhill. It was littered on both sides with rocks of all sizes and there was even what looked like a natural bridge of stones crossing the pond. The water was crystal clear and cool to the touch. Sunlight poured in from the opening in the canopy overhead and all that could be heard was the sound of the water gurgling in the streams.\n\n\"Let's have our lunch here,\" Sally suggested looking at all of us.\n\n\"Why not,\" I said, and everyone else agreed as well.\n\nWe found a small circle of stones beside the stream uphill and we settled down as Sally brought out the sandwiches. We had a few extra so we offered one to the guide as well. He accepted but didn't join us, and instead patrolled the area in a wide circle. I guess it came with the job.\n\nWe laughed and joked as we ate, Melissa sitting on the stone next to mine and eyeing my sandwich after finishing hers.\n\n\"You gonna finish that?\" she asked after I went a really long spell between bites.\n\n\"There's another one right there,\" I pointed at the paper-bag containing the sandwiches.\n\nShe shook her head then pointed at my sandwich, \"I want that one.\"\n\nI looked between my half eaten sandwich, Melissa, and the bag of fully edible sandwiches between us, trying to make sense of it all.\n\n\"Don't bother,\" Sally said, \"she's like that. For some reason she prefers other peoples food over her own, even if it's the same thing. Don't ask why, we tried to find out for years without success. She just finds it tastier. You have no idea how many French fries we have sacrificed over the years to her.\"\n\n\"So if we let you in a restaurant you'd go around eating off random peoples plates?\" I asked her.\n\nThat got me a smack on the arm, \"Of course not. It's only with people I know well. Like really well.\"\n\nI looked at Sally and she nodded in confirmation. Maybe that's why she hadn't tried it on our dinner date, she was still unsure of me. \n\n\"You're weird,\" I stated, looking back at her.\n\n\"Oh look who's talking, homie!\" she put her middle and ring finger together to give me the West-side sign and scowled like Ice-cube.\n\nThe soda Bill was drinking came out of his nose as everyone erupted in laughter, including me. She was a real fire-cracker, and I kept making the mistake of under-estimating her.\n\n\"Dude, she got you man, she got you hands down,\" Nick said between laughing.\n\nI was going to burn this T-shirt the first opportunity I got. I handed over my sandwich to Lissy and sure enough, the way she ate it, even I had a doubt that maybe it was tastier than the rest of them. Once we were done, we cleared the place of any debris and stuffed all the garbage in a paper-bag. It was one of the rules of the park, no littering and no leftover food.\n\n\"I'm so full!\" Melissa complained, still sitting in the same spot. \"I can't walk now,\" she pouted.\n\n\"That's what you get for eating my sandwich,\" I told her.\n\n\"I'm sorry Tupac, it'll never happen again.\"\n\nAgain everyone snickered. I really needed to just shut up, she was desecrating me. I started walking away, pretending to sulk.\n\n\"Aaaww ok, I'm sorrryyyyy,\" she whined, \"Please come here?\"\n\nI stopped walking.\n\n\"Pretty please?\"\n\nWhy did she have to sound so goddamn cute? It was the puppy dog eyes all over again. Reluctantly I dragged my feet back and stood in front of her, looking at her beautiful face turned up to me. She held out her hand smiling and I helped her up, steadying her as she stumbled forward. She gave me a kiss on the cheek and hooked her arm in mine as we started hiking again. \n\nWe spoke about inconsequential things as we walked, just enjoying the closeness between us. After around half an hour, up ahead the guide suddenly stopped and held up his hand towards us, signaling us to stop. He put his finger to his lips to tell us to be quiet and slowly took the tranquilizer gun off his shoulder. We stood together in a huddle as he disappeared into the trees on the right, barely making a sound as he passed through the under growth.\n\nWe dared not make a sound until he returned. He came back into view just as he had disappeared, silently like a ghost. He walked over to us with a finger on his lips and his gun ready. \n\n\"There's something you might want to see,\" he whispered, \"but we have to be very careful.\"\n\nWe all nodded and he continued, \"We have to be completely silent and you have to do exactly as I say. If I tell you to back away, there better not be even a second's hesitation,\" he said seriously.\n\nAfter we agreed, he arranged us in a single file and led us the same way he had disappeared moments ago. We walked carefully through low hanging branches and brambles for around five minutes before we reached a small rise that ended abruptly. There was a ten foot drop at the top and as we got closer we could hear something moving and growling. At the peak we stopped and peered over the edge to see what was below.\n\nIt was a big, fully grown gigantic grizzly. Its sheer size and presence was astounding. It was on the ground on its back, rolling around like it was playing, swiping its humongous paws in the air. Melissa had grabbed my T-shirt in her hand and she was twisting it I her hands, eyes focused on the beast below us. Her mouth was slightly open and a look of wonder on her face as the bear continued to fool around, now scratching the trunk of a tree.\n\nJenna had glued herself to Nick and even Sally was staring wide eyed from behind Bill's back. We watched for a few minutes when suddenly the bear stiffened then started moving its head around as if it was looking for something. It rose up on its hind legs and held up its nose in the air and sniffed, turning its head this way and that. \n\nThe guide immediately signaled us to back away quietly and quickly, placing himself between the hilltop and us, holding some kind of can in his hand. Minutes later we were back on the trail and we all released the breath we were holding and relaxed. \n\n\"Did it smell us?\" Nick asked the guide.\n\nHe nodded, putting away the can in his hand that said something like bear spray. \"A little while longer and he would have pinpointed us. The only reason I risked taking you guys was he was at the bottom of the ditch, it would take him a while to get up if he spotted us. In any case we should get moving, it's getting late.\"\n\nIt was approaching four o'clock and we still had another half an hour to hike so we set off again, Melissa still hanging on to me. She looked positively delighted.\n\n\"I can't believe we got to see a grizzly. That was so cool,\" she said to me.\n\n\"Yeah it was, wasn't it?\"\n\n\"Can you imagine if it had come after us?\"\n\n\"I would have totally saved you.\" Macho man alert.\n\n\"Really? Something tells me the bear wouldn't care if it was my birthday.\"\n\n\"That's not the only trick I have up my sleeve, you know.\"\n\n\"You mean you have more than one?\"\n\n\"I see I'm going to have to teach you some manners young lady.\"\n\n\"Promises, promises........\"\n\n*********************************\n\nThe trees started thinning out and soon, up ahead we could see a clearing. We stepped out of the cover of the forest and stopped to take in the view. To say it was stunning would be an understatement. There was a clearing the size of a football field, in the middle of which stood a two story log cabin. Three sides of the cabin were surrounded by the forest, thick and seemingly impenetrable. On the front side, roughly five hundred yards from the cabin was a cliff.",
        "The cliff was shaped like a crescent moon, extending forward on the left and right, and we were at the middle, on the inside. Both sides of the cliff were covered in forest and at regular intervals we could make out clearing just like ours. It looked like there were cabins all around the cliff edge but they were spaced out far enough that it was impossible to make out if the others were occupied. The forest also hid the cabins from direct view.\n\nWe had come into the clearing from behind so we walked ahead to get a better look. We passed the cabin without a second glance, all of us mesmerized by the breathtaking view in front of us. As we got closer to the edge, we saw at the bottom of the sheer three hundred foot drop was a huge lake extending to all the cliff faces, the water lapping gently at the base of each face. Beyond the lake, at the mouth of the cliff, all that could be seen was a green canopy extending till the horizon. \n\nRight at the edge of the cliff, maybe four feet from the drop, exactly in the middle, stood one lone tree. It had a thick trunk and low hanging branches and was drooping to one side as if in old age, and since it was so close to the edge, some of its roots could be seen exposed on the cliff face. It should have looked out of place but somehow it completed the picture perfectly. This was the kind of stuff you see on a desktop wallpaper.\n\n\"Unbelievable.....\" Melissa whispered beside me.\n\nShe had hooked her arm in mine again, leaning into me slightly. We just stood like that for a few minutes, taking in the scene and breathing in the fresh air, enjoying the tranquility of the place. There were birds flying from one edge of the cliff to the other, following each other in a single line. \n\n\"Let's check out the cabin,\" Nick said, turning back.\n\nIt looked more like a one and a half story structure, it wasn't tall enough to be a two story. A small black pit a few feet from the cabin with three logs around it indicated a bonfire area. That should be fun. There was a double glass sliding door in front that opened up into a living area furnished with straw couches, a table carved out of a log of wood and a huge fireplace on one side. Directly ahead, one step lower, was the kitchen and dining area. \n\nTwo doors on either side led to two bedrooms with queen size wooden beds, the headboards once again carved from wood. There were mosquito nets over each bed and large windows that gave a lovely view of the forest around. \n\nAnother door opened up to an impressive bathroom. We might be in the woods but that didn't mean we had to shit under a tree. It was large and spacious with a Jacuzzi type tub in one corner. I would have thought they would put it outside but then again, you don't want a grizzly to sneak up on you when you're half naked and wet in the middle of the night. Pun intended.\n\nA small steep spiral staircase in one corner of the living room led up. It was glorious. It was a loft with a low tapered roof, a low bed that covered almost the entire floor space and the wall opposite the bed was entirely glass, with a small balcony just outside, overlooking the cliff. You could just make out the far edge of the lake.\n\n\"Dibs on the loft,\" I said while everyone was still marveling at the view.\n\nThere was a collective groan from Nick and Bill and they tried to argue but the sacred rules of Dibs had to be upheld. I got the loft. More accurately, Melissa and I got the loft. Sweet. Maybe not so sweet. I was nervous about sharing the bed with her as I had never slept with another person in the same bed. I had a habit of moving around a lot at night and I was afraid I'd kick the snot out of Melissa by morning. I was going to have to think of a way to tie myself to the bed at night.\n\nThe guide departed after wishing us a good evening and our bags had already arrived and were waiting for us in the living area. We got our respective luggage and moved into our rooms. I almost broke my neck trying to get Melissa's bag up the steep staircase. I was just going to throw it out the balcony when we were leaving, I couldn't risk bringing it down again.\n\nStowing it away in a corner I turned to Melissa, who had followed me up,\n\n\"Any preference on sides?\" I asked, gesturing towards the bed.\n\nShe shook her head, \"I like to be on top.\"\n\nShe pushed me on the bed and climbed on top of me, straddling me on elbows and knees, bringing her face close to mine, \"like this.\"\n\nHer hair fell forward, hiding us behind the curtain, trapping us in our own private world.\n\n\"I don't mind,\" I said, lifting my head and kissing her nose, \"You'd make a terrific blanket.\"\n\nShe pretended to be angry, \"Is that all you can think of using me as? A blanket?\"\n\n\"No, there are a few other things I can think of putting you to use for. A body warmer, mosquito repellant-\"\n\nShe captured my lips and gave me a kiss that made me lose my train of thought. My hands went up under her T-shirt, up her back, raising it and exposing her skin as I went along. As I got to her shoulders, her top bunched up, and I pulled her down on me, closing the distance and squishing her breasts between us. She was now lying flat on top of me and her whole back was bare for me to explore. Deciding to be daring for once, I went for her bra, trying to find the hook.\n\nShe reached behind and took hold of my hands, pulling them away and stretching them up and pinning them to the mattress above my head.\n\n\"Not so fast cowboy,\" she said against my lips, biting the lower one, \"someone might come up.\"\n\n\"Sorry, got carried away,\" I said, and welcomed her tongue back.\n\nShe was right of course, and no sooner had we started mashing lips again, we heard the stairs creak and footsteps coming up.\n\n\"Melissa, do you want to use the shower? I'll finish the water if I go first,\" Jenna called out as she came up.\n\nWe hastily got off each other, Lissy pulling her T-shirt down, but not before I got a flash of a lacy blue bra. Damn you Jenna.\n\nJenna's head appeared just as Melissa plopped down on the bed beside me, looking all flushed and re-arranging her hair. Jenna took one look at us and immediately got a sly smile on her face,\n\n\"Did I interrupt anything?\" she asked sweetly.\n\n\"Yes. We were devising secret military strategies on how to infiltrate Gotham City. Now get lost.\" I replied, not so sweetly.\n\n\"Brian, be nice,\" Melissa warned, then turned to Jen as she got up, \"As a matter of fact, yes I would like to use the shower, I'm all sticky and sweaty after the hike. Let's go.\"\n\nShe rummaged through her bag and picked out a few clothes and a towel, then headed downstairs, hands around each other's waists, Lissy swinging her hips more than necessary.\n\n\"You're going to shower together?\" I asked their retreating backs.\n\nNo reply.\n\n\"Can I watch?\"\n\nSilence. \n\nI flopped back down on the bed, hands covering my face, a tent in my jeans, cursing the universe. Eventually I was decent enough below the waist and changed into some sweatpants before heading downstairs, only to find it deserted. Both bedroom doors were shut and the shower was running, leaving me in the middle of the living area wondering what to do.\n\nI could barge in on Nick and Jenna as revenge but I didn't feel like it at the moment. The view from the sliding glass doors told me what I should be doing. Stepping out I found an old rocking chair on the small porch and relaxed into it, putting my hands behind my head and my feet up on the railing. \n\nDusk was setting in, evening birds could be heard fluttering about and two crickets had started their racket somewhere close-by. The whole atmosphere gave me the urge to do something I hadn't done in a long time. Rushing in briefly, I returned with a paper and a pen and resumed my position, sticking the pen in my mouth and gazing at my surroundings.\n\nIt was so calm and serene, the greens of the leaves on the trees dustier in the waning light and the air heavy after a long day. Even through all this I could only think of one thing. Taking the pen out of my mouth, I started writing. The words just seemed to pour onto the paper seemingly all on their own. I probably could have even stopped paying attention and I would have continued writing. In addition to the birds and the crickets, there was now the scratching of the pen to add to the list of noises around.\n\nAfter completing it, I read and reread it a few times, my smile growing bigger each time. It may not be polished or overly poetic but it was how I felt and for that, I liked it. The door slid open behind me and I reflexively turned around to check who it was.\n\n\"There you are, I've been looking all over for you,\" Melissa said as she stepped out, dressed in a white sleeveless top and green shorts. Her damp hair hung loosely down on her shoulders in strands and she had that fresh, squeaky clean look. There was something about wet hair on a girl that drove me nuts. It was just so sensual.\n\n\"What's that?\" she nodded towards the paper in my hand.\n\nInstantaneously I crumpled it into a little ball without looking at it or even giving it a second thought, \"Nothing.\"\n\nI would have loved to say she shrugged it off, left it at that, and we went on merrily with our lives. No such luck. Crumpling it may have been the worst thing to do, I should have torn it into little pieces and swallowed them all.\n\nShe held out her hand, \"Give.\" It was a demand.\n\n\"Oh look, it's getting dark. Are you hungry? I'm hungry. Let's go look for the others, I bet they're worried sick about us by now. I heard that worry is the root of all diseases, we should definitely not let them worry about us, they're our friends after all, aren't they? Speaking of friends, yours are really cool. I mean Bill, what a guy huh? Amazing. And Sally. Sally's a riot. I have a sudden urge to pee.\" I said as I got up and edged around her, trying to get away into the cabin.\n\nHer gaze narrowed as it followed me, her stance turning to one ready to pounce.\n\n\"Brian, give me the paper, now.\" \n\nI sighed dramatically, sagged my shoulders in a defeated gesture and hung my head, \"Fine.\"\n\nI made as if to lift my hand to give her the prize and as soon as she relaxed I bolted like The Roadrunner back into the house. I swear the only thing missing was a white cloud of smoke and the 'Beep Beep'.\n\nShe was on me like white on rice. Damn that girl could move. Fast. We ran around the living area, jumping over the straw couches and wooden tables like we were doing parkour, almost tripping and falling numerous times. I couldn't let her get hold of the paper, no way in hell. I barely dodged her for the sixth time and zipped up the stairs, two at a time, to the loft.\n\nI froze as I reached the top and took in the area. This was a bad idea. There was no door to lock behind me. She took her sweet time, making sure I heard each step as she came up leisurely, very aware of the fact that I was a trapped mouse. On my end I was like a hamster on cocaine, running around the little room, desperately trying to find an exit. Houston, we have a problem.\n\nFinally she got to the landing, standing with her feet apart and arms crossed, an evil smile on her face.\n\n\"Where you gonna run now, little piggy?\"\n\nI pointed behind her head and shouted, \"Monkey!\"\n\nShe ducked and whirled around to inspect the space behind her and I ran out onto the small balcony and slid the glass door closed. Sadly there was no lock on the outside so I had to hold it closed with my hands. Even sadder was that there was no handle on the outside so I just had my palms pressed on the glass, pushing it closed, and one palm was in a fist since I was still holding the paper. At this point one might think, why doesn't he just throw it away? I would, but then she'd just go back down and retrieve it and I'd be screwed. Or even worse, Jenna might find it. I shuddered.\n\nShe stomped to the door, mildly pissed, though I think it was at herself for falling for such an obvious trick. Unfortunately she had a handle on her side and she pulled the door open with almost no effort at all. I backed up, my butt against the railing, and hid my hands behind my back.\n\nShe came forward until she was inches away from me, leaving me no room to maneuver, \"Hand it over.\"\n\n\"Why do you want to see it so bad?\"\n\n\"Why do you want to hide it so bad?\"\n\n\"Because it's nothing, just random scribbling.\"\n\n\"In that case there's nothing to worry about is there?\"\n\n\"Lissy, let it go?\"\n\n\"No.\"\n\n\"You're really stubborn, you know that?\"\n\n\"Yes I've been told,\" she mimicked me, \"Repeatedly.\"\n\nI slumped for real this time, debating the matter. Should I give her the paper? She'd just laugh at me and call me names again. Even worse, she'd think I was a weirdo, or a creep. Ok so she probably already thought I was weird, so maybe weirder was more accurate. If I didn't give her though, she might doubt what was in the paper and it might create friction between us. And not the good kind of friction either.\n\n\"Hey,\" she said softly, \"why are you so afraid to show it to me?\"\n\n\"You'll probably laugh after reading it.\"\n\nShe cupped one side of my face with her hand, \"I won't. Promise,\" she said genuinely.\n\nAgainst my better judgment I handed her the piece of paper and watched as she walked back into the room, unfolding it carefully. I should have just eaten it. I saw her eyes following the lines left to right, going lower and lower, almost to the end.\n\nYou're probably wondering what I'd written as well right? Fine, I'll show you, but if you laugh, then may the fleas of a thousand camels infest your ass crack and may your hands be too short to scratch it. \n\nHere's what it read:\n\nYou run your tongue slowly over your lower lip,\nSeduction with a hint of nervousness that makes my heart skip,\nI smile and move forward a bit,\nMy lips are almost touching your nose's tip,\nYou tilt your head ever so slightly to the side,\nAnd your lips open just a little more wide,\nAt this point I would have been happy to oblige,\nBut the opportunity was too perfect for me to let it slide,\nMy lips turn up into a teasing smile,\nAnd I let you linger there for just a little while,\nFinally I lean in, but then you back away,\nLooking into your eyes I see that you too know how to play,\nYou arch an eyebrow and smile with mischief,\nSeems like I've met my match in this chick,\nYou bite your lip suggestively and blink real slow,\nSuddenly I don't wanna play games anymore,\nWe both lean in at the same time,\nYou stop a fraction of a second before your lips touch mine,\nA sudden gust of wind and your hair blows into my face,\nFeels like we've been transported to some whole other place,\nYou reach up and place your hand softly on my cheek,\nHow could this simple gesture make my knees go weak?\nOur lips graze each other's ever so lightly,\nI can feel you hesitate ever so slightly,\nI understood because I felt it too,\nWhen our lips touched it was almost too good to be true,\nI press forward and our lips come together again,\nEverything around me disappears, I think I'm going insane,\nI'm getting lost in your soft lips,\nSubconsciously I place my hands on your hips,\nYou part your lips and deepen the kiss,\nThe feel of your tongue is pure unadulterated bliss,\nI can't get enough and put my arms around you,\nCan't thank my lucky stars enough that I actually found you,\nI get a whiff of the subtle perfume that you wear,\nYou feel so good pressed up against me it's not even fair,\nYou run your hands up and start playing with my hair,\nNo other feeling in the world can even begin to compare,\nYou bite my lower lip and gently pull it,\nRelease it and run your tongue over it as if to soothe it,\nI realize you're the lead here and I'm just the pawn,\nAs innocent as you look, you sure as hell know how to turn a guy on,\nI finally break the kiss as I'm short of breath,\nI swear another kiss like that could be the cause of my death,\nAs we gulp in air we rest our foreheads on the other,\nAll we can do is smile and stare and one another,\nAs we look into each other eyes its quite plain,\nWe both know things between us will never be the same again,\nI wink at you playfully and you let out a tiny laugh,\nI know at that moment that I've found my better half.......................\n\nShe finished reading and looked up at me, her face unreadable. I fidgeted, growing anxious by the second, not knowing what to expect. \n\n\"I swear if you call me something like Slim Shady, I'll launch you off this balcony,\" I joked lamely, just to fill in the silence.\n\n\"Better half?\" she asked, not even registering what I'd said.\n\nI looked down and shrugged, rubbing the back of my head, \"Yeah, I........ Yeah.\"\n\nI didn't know what to say. I didn't know if she was upset or happy or anything. She read the paper again, more slowly this time, then looked at me with the same expression as when I had given her the picture of us on the rollercoaster, only more intense.\n\n\"Are you mad at me?\" I asked her.\n\n\"Why would I be mad at you?\"\n\n\"I don't know. I do things and people get mad, I've never really understood it.\"\n\n\"How.............?\" she asked, holding up the paper.\n\n\"I used to have a habit of writing down things. As you must have noticed, speech is not my strong point so I used to prefer writing, but I haven't done it for a while now. Today when I sat out there, the only thing I could think about was you, and all I wanted to do was to put it down on paper.\" \n\n\"This is how you see me?\" she asked, reading the last few lines again, \"your better half?\"\n\n\"Yeah. Hell, personally I think you're my better three-quarter.\"\n\nShe strode to me and slammed into me forcefully, pinning me between her and the rail, giving me the most intense kiss we shared yet. It was like she couldn't get enough of me, her hands were everywhere, trying to feel as much of me as she could. Her right hand ended up at the back of my head and she pulled me even deeper, her tongue almost reaching the back of my throat. I was loving it.\n\n\"Someone's going to get so lucky tonight,\" she said between kisses.\n\n\"Does that mean-\"\n\n\"I swear if you bring up that lucky/unlucky joke right now, I will knee you in the balls.\"\n\nWas I that predictable? \n\n\"No, what I wanted to say was, we'll have to be a little quiet, we're not alone and these rooms aren't exactly sound-proof.\"\n\nAs if to prove my point, we could hear noises downstairs and the loud clang of a pan falling on the floor.\n\n\"We should go downstairs before Jenna brings down the house,\" I said, stealing small kisses from her.\n\n\"Alright, but tonight you're mine,\" she said giving me one last steaming kiss and running a finger down my chest. \n\n\"Promises, promises.....\" I said as she let me off the rail and walked way, leaving me to follow with the after-effects of the kissing session.\n\nWe found Nick and Jenna in the kitchen with Bill, arguing over what to prepare. The shower was still running so I guessed Sally was in there. We were all too tired to cook anything fancy so it was a choice between canned beans or hotdogs. \n\n\"Canned beans,\" Jenna said.\n\n\"Hot dogs,\" Nick countered.\n\n\"Canned beans,\"\n\n\"Hot dogs,\"\n\n\"Canned beans are easy to make Nick, we just need to heat them up and serve them with bread.\"\n\n\"Yes, and we need a world class chef to boil hot dogs and put them in a bun, and a certified nutritionist to add the mustard and mayo.\" \n\nJenna turned on Bill, stomping her foot and pointing the frying pan at him, \"What do you want?\"\n\nHe looked like he wanted no part of it. \"I'm fine with anything,\" he said diplomatically.\n\n\"Hot dogs,\" I said as we walked in.\n\n\"Yeah of course you're going to side with your friend,\" she sneered at me, \"Melissa what do you want?\" she asked expectantly.\n\nMelissa was caught in a bad place. I could tell from her face she didn't want canned beans, but at the same time she didn't have the heart to refuse Jenna.",
        "\"C'mon Melly Welly, tell Jenna what you want,\" I egged her on.\n\nBill snorted when I said Melly Welly but quickly disguised it as clearing his throat when Melissa shot him a dirty look.\n\n\"I'll have the canned beans,\" she said going to stand by Jenna.\n\n\"Ha!\" Jenna said to me.\n\n\"That's still two against two,\" Nick reminded her.\n\nSally walked in, still drying her hair with a towel, \"What's up?\" \n\n\"Canned beans or hot dogs?\" Nick asked quickly before Jenna could speak.\n\n\"Hot-\"\n\n\"Nooooo\" Jenna leaped on her and put her hand on a surprised Sally's mouth.\n\n\"That's cheating!\" me and Nick exploded, trying to drag her away from Sally.\n\n\"Canned beans, say canned beans!\" Jenna shouted at Sally as we carried her off.\n\n\"I want canned beans,\" Sally said, smiling.\n\n\"Three against two,\" Melissa smirked at me.\n\nWe all turned to Bill, who started backing away, hands in his pockets.\n\n\"Dude, we bros man,\" Nick started.\n\n\"I'm your girlfriend,\" Sally said in a tone that she thought would settle the matter.\n\n\"Do you want to fart all night?\" I asked him.\n\n\"Do you want any-,\" she wriggled her hips, \"tonight?\" Sally countered.\n\n\"Guys, guys, guys,\" Bill said, holding his hands up to stop us, \"why can't we just have both?\" he asked in that flat tone of his.\n\nWe all looked at each other, stumped. Nick was scratching his head, holding up a finger in mid-air, thinking. He had a point, who said we couldn't have one if we had the other?\n\n\"Fine. But they're cooking,\" I said, pointing at the girls.\n\nThat started up another argument that lasted another half an hour before we decided to just go with canned beans and bread because none of the guys wanted to cook. We just liked arguing for the sake of it.\n\nAfter dinner we started a small fire in the fireplace in the living area and spread out on the straw couches. They were incredibly comfy, you just sank into them, and they smelt like hay, which was quite pleasant. There was a three seater, a two seater and a single one. Nick and Jenna settled on the three seater, Jenna immediately stretching out and laying her head on Nick's lap. Melissa and I took the two seater, her leaning into me, legs tucked under her in her favorite position and I put my arm around her. Bill sat on the single and Sally settled onto his lap, still chastising him for not picking her side.\n\nAll the lights were off so we all sat in the warm orange glow, coming up with stories about previous trips and all the different things we had done. I had a little guy inside me jumping for joy when I found out Melissa and her ex had gone skiing with Bill and Sally a few years ago and her ex had broken a leg when he came down too fast. Good for him, bastard.\n\nWe told them about the time we had gone mountain climbing and Jenna piggy backed on Nick all the down because she was too tired. She insisted she wasn't well and was feeling woozy but we all knew she was just being a lazy bum. I told them about the time I heard Nick and Jenna doing it and they couldn't stop laughing when I mentioned the receptionist's reaction. Jenna almost threw her shoe at me for that.\n\nThat went on for a while as we tried to remember all the outrageous things we had done. I got up a few times to add wood to the fire and always returned to the welcome arms of Lissy, who was the only female who didn't appear sleepy. As the time went on the talking became less and less until we were all lost in our own musings. Jenna kept nodding off and even Sally dozed off a couple of times.\n\n\"Ok, we're off,\" Nick said when Jenna started snoring lightly. She always did that when she was very tired and it was incredibly cute to watch. He shook her awake and they waved their goodbyes and she leaned on him as went to their room.\n\n\"I think we'll head off too, you guys gonna be ok?\" Bill asked as they both got up, Sally covering her yawn with the back of her hand.\n\n\"Yeah man, we'll head up in a while too. Goodnight,\" I replied to him.\n\n\"Alright, see you in the morning,\" Sally said as she ruffled my hair and bent down to give Melissa a kiss on the cheek. They disappeared into their room holding hands and as the door shut, Melissa and I were the only ones left.\n\n\"Are you sleepy?\" I asked Melissa.\n\n\"Not particularly,\" she replied.\n\n\"Feeling a little adventurous?\"\n\n\"What did you have in mind?\"\n\n\"Come on,\" I said, getting up and holding out my hand for her.\n\n\"Where are we going?\" she asked, not letting go of my hand after standing up.\n\n\"Outside.\"\n\n\"Wait, let me grab something for my feet,\" she said, starting for the loft.\n\nI didn't let go of her hand and pulled her gently back, \"Don't bother, we're not going far.\"\n\nShe grabbed a light blanket as we headed out, closing the door behind us quietly, not wanting to disturb the others.\n\nThe wind had picked up outside but not to a level that was uncomfortable. It wasn't too late so the temperature was still quite pleasant, cool but overly so. Melissa hung on to me as we crossed the ground in front of the house, the grass feeling wonderful beneath our naked feet. I guided us to the lone tree standing guard over the cliff. \n\nAt the edge we once again stared out at the vast expanse before us. It was a full moon night and the giant orb was a quarter way up the sky, shining brightly enough to light up quite a bit of the forest in a silvery glow.\n\nI pulled Melissa carefully to the tree where I sat down, leaning against the wide trunk between two roots, then pulled her down and she settled in between my legs. I put my arms around her waist and locked her securely to me as she unfolded the blanket and draped us both underneath it. She leaned back on me and made herself comfortable, resting her hands on top of mine. Her head reached just under my chin and I could smell the subtle scent of her shampoo. I rested my chin on her head and tightened my arms around her protectively.\n\nGiven the proximity of the tree to the cliff, our feet were just short of the precipice, and we had an unprecedented view of the lake at the base of the cliff. The reflection of the moon could be seen on the inky black surface of the lake which was so still it looked to be made of pure untainted glass.\n\nAll that could be heard was the light rustling of the leaves on the tree and an owl hooting somewhere in the distance. I could feel Melissa's belly rise and fall gently as she took each breath. We didn't say anything for a while, just soaking up the night air and enjoying the peculiar sounds of the wilderness that cropped up periodically. \n\n\"It's so peaceful,\" Melissa said quietly.\n\nI nodded, making her head bob front and back since my chin was resting on her. She giggled lightly and put her fingers between mine. I started rubbing the sides of her belly, her top bunching up under my palms. Soon my hands were under her top, caressing her bare skin.\n\n\"Someone's feeling frisky,\" she said.\n\n\"One of these day's I'm going to have to find out who this 'someone' is that you keep talking about,\" I teased, my right hand travelling higher, tracing her ribcage, while I held her in place with my left. We were too close to the edge, I couldn't risk letting her go.\n\nShe laughed, \"Oh, you know him better than you think.\"\n\n\"Really? Then I think I need to have a word with him.\"\n\n\"And what are you going to tell him?\"\n\n\"I'll tell him to steer clear of my girlfriend.\"\n\nShe was silent for a few moments and I went over what I had just said in my mind. We hadn't yet categorized what we had between us, and I didn't know if we were exclusive or not. Maybe I was being na\u00efve and presumptuous. I had blindly blurted out whatever was in my head, my tongue moving faster than my brain as usual. I was such an idiot.\n\n\"I...... I'm sorry, I shouldn't have......\" my hands stopped their exploration.\n\n\"Sorry for what?\" \n\n\"I shouldn't have assumed we were........ you know.......\"\n\n\"No, I don't know. Tell me.\"\n\nWhy did she always have to be so stubborn, she always made me say everything out loud.\n\n\"I shouldn't have assumed we were....... boyfriend and girlfriend.\" Damnit, I felt like a total kid saying that. Couldn't I have picked anything else? In a relationship. That would have sounded much better but no, I was a candy licking fifth grader still looking for his girlfriend.\n\n\"So you mean to say I sit on any Tom, Dick and Harry's lap and let them feel me up?\" she sounded a little pissed.\n\n\"What? No, no, of course not, that's not what I meant.\" This was not going the way I'd planned. I'd never even dream of thinking of her that way. I had to make this right.\n\n\"Lissy I swear, I didn't mean it like that, it's just we haven't yet....... And we're not...... because this you and me........I felt like we should, because I don't want to assume and maybe you'll get the wrong idea.\" Wow. And I wonder why I was never picked for the debate team.\n\nI felt the tell-tale convulsions of her belly and realized she was laughing.\n\n\"Bitch.\"\n\n\"It's not my fault!\" she said between laughter, \"you're just too easy, and you get so flustered, I can't help it, it's adorable.\"\n\nI went into sulk mode. She tilted her head back and looked up at me as her laughter died down. I could see the reflection of the moon in her eyes as she locked her gaze with mine.\n\n\"Sorry?\" she mouthed.\n\nHow was I supposed to stay mad at her? She arched her back and tilted her head backwards further and reached up, grasping the back of my head with her hand. She pulled me down and our lips met, upside down. \n\nAs we kissed she guided my hand higher up on her torso, underneath her top. I couldn't get over how unbelievably soft her skin was. She shivered as she slid my hand up her bra covered breast and stopped there, breaking from our kiss to take a breath. Instinctively I squeezed the firm mound in my palm and I heard her suck in a breath.\n\n\"Again,\" she whispered.\n\nI squeezed once more and I could feel a small hard nub poking into my palm through her bra.\n\n\"Wait,\" she said and leaned away from me, reaching behind her and undoing her bra. Then she did that thing where they magically pull it out of their sleeve from the side. That was some Houdini shit right there. \n\nDropping it on the ground beside us, she scooted up higher so that she was now sitting on my lap and her face was level with mine. She turned her head and the make out session was back on in full force. Needing no invitation this time, my hand went up her top and I cupped her bare breast in my hand for the first time. \n\nIt was soft yet firm at the same time and it fit perfectly in my palm, maybe just a smudge bigger, but hey, I wasn't complaining. Our tongues dueled as I explored, feeling the texture of her smooth skin become slightly rough as I reached her aureole. She gasped in my mouth when I pinched her nipple and gave me a low moan when I twisted it between my thumb and forefinger. \n\nSince she was on my lap I felt it was safe enough to let go of her and my other hand travelled up to her other breast, giving it the same treatment. She was writhing on me now, her ass on my lap making me hard in an instant. Time to put my intense research into the female anatomy into practice. Having been left completely at her mercy the last time, I had no intentions of being in that position again, so I had gone on a fact finding mission myself.\n\nLeaving one hand to continue its ministrations, I travelled lower with the other one, over her flat belly, to the waistline of her shorts. I toyed with them for a while, waiting to see if she would object, running my fingers just under the elastic band but not going further.\n\nI got my answer when she spread her legs apart and my fingers finally breached her last line of defense. From what I could feel as I dipped under her shorts, she wasn't completely clean shaved down there but it was definitely trimmed and felt soft to the touch. I went lower, tracing the juncture where her thighs met her hip.\n\nShe was trying to maneuver her hips now, trying to get me to touch her nether regions but I was purposefully avoiding her, delaying the contact. Our lips had broken part and she was kissing up my jaw, tracing it up to my ear, where she started nibbling my earlobe.\n\n\"Please.....\" she whispered, desperately trying to get me to touch her.\n\nOne side effect of her wriggling her hips was that it had a direct impact on my hard-on. To still her movement I gave her what she wanted and slid my middle finger slowly from the base to the top of her lower lips. She froze for a second then released her breath and went back to work on my ear. Even from that one touch I could feel she was wet. I took that as a good sign. I started tracing her lips back and forth and she started rocking her hips in rhythm to my movements. That was not good. My erection was nestled between her ass cheeks and the way she was rocking her hips was creating a delicious friction for me.\n\nShe sucked in a breath and arched her back, pushing her breast further into my hand when I slid one finger into her. She was incredibly tight and felt warm and velvety around my finger.\n\n\"It's been so long.....\" she whispered in my ear as she came back down, the pleasure evident in her voice.\n\nThere was a brief gust of wind and the branches shook, bristling the leaves and sending a few floating down on us. It was my turn to bite her earlobe as I withdrew my finger and plunged it back in, causing her to arch again. I couldn't believe I was making love to Lissy with my fingers here out in the open, under the full moon and that she was enjoying every moment of it. \n\nAfter a few strokes I slowly added another finger. She was whimpering now, her head leaning back on my shoulders and her hands on my thighs. Deciding it was now or never, I gently pressed the heel of my palm down on the tiny nub at the top of her slit. The reaction was instantaneous. She turned her head and bit my neck, stifling a scream, her breathing shooting up as her chest heaved. Her fingers were digging into my thighs, squeezing with a strength I didn't know she had.\n\nI ground my palm on her nub in time with my strokes, rotating first in one direction then reversing without giving her time to get used to it. She was almost going to draw blood on my neck as she bit harder with every stroke, tiny screams escaping her sounding like music to my ears. All this wasn't going easy on me either. I was as hard as a rock. I could probably chisel my name on a piece of granite like Woody Woodpecker. If this kept up for long I was going to lose it, but I'd make sure not before I made her lose it first.\n\nHer hips were going crazy now, demanding more and more from me, which I was happy to oblige to. Her ass going over my erection was making me lose my focus and I had to fight tooth and nail to concentrate on what I was doing. I increased the tempo of my strokes, my fingers a blur as they pistoned their way in and out of her tight opening, keeping a constant pressure on her little nub, stroking it up and down feverishly now.\n\nAs she got close she dug her heels into the ground arced her back completely, releasing my neck and throwing her head back, her eyes closed and her mouth open in a silent scream. This presented her long and graceful neck to me and I could see her jugular pulsing. Giving her a taste of her own medicine, I clamped down on her neck and sucked hard, at the same time pinching and pulling her nipple outwards sharply. That drove her over the edge. She collapsed inwards, clamping her legs shut around my hand, forcing it to still, and rolling forward into a ball as she convulsed again and again silently repeating, \"Oh my god, oh my god, oooooohhh myyyy godddddd................\"\n\nIt was too much for me. Her orgasm, her moaning and the feel of her ass on me was too much for me to take and I gave in to the sensations and quietly released into my pants, resting my forehead on her back as I tried to prevent my hips from thrusting forward instinctively. I came hard, harder than ever before, and I was spent as the climax faded.\n\nWe stayed like that for a few minutes, breathing heavily, each coming down from our respective highs slowly, getting accustomed to our surroundings. My hand was still trapped between her legs and was now drenched in her juices. Finally she flopped back onto me and opened her legs enough for me to get my hand out, though it was very happy where it was. I put my arms around her possessively, nuzzling her neck. \n\n\"Jesus Brian, where did you learn how to do that?\" she asked lazily, her eyes still closed.\n\n\"I read a few articles here and there.\" Porn.\n\nShe opened her eyes and we looked at the moon for a while, too content to move. Occasionally a small cloud would across it, causing it to dim before it came back out in its full glory. A wolf howled somewhere far off and I felt Goosebumps on Melissa's forearm.\n\n\"Rabbit or duck?\" she asked after a lengthy spell.\n\n\"Rabbit.\"\n\n\"I saw the duck first, no matter how hard I tried I couldn't see the rabbit,\"\n\n\"Then how'd you find it?\"\n\n\"Sally googled the picture of the moon and drew out the rabbit for me.\"\n\nI chuckled, \"For someone who's so smart, you can be really dense at times.\"\n\nShe started preparing a retort but I silenced her with a finger on her lips, \"Relax, I'm just kidding.\"\n\nShe discarded the blanket covering us and turned around on my lap, straddling me and going for my sweat pants, \"Speaking of wabbits,\" she said, voicing Elmer Fudd, \"there's one that's been eluding me for a while now.\"\n\nI stopped her by putting my hands on hers and she looked up at me with a question in her eyes. \n\n\"Maybe we should stop here,\" I said.\n\nShe cocked her head to the side, \"Why?\"\n\nNow how the hell was I supposed to tell her that I'd already blown my load just watching her cum. This was going to get embarrassing.\n\n\"We still have tomorrow night, Lissy.\"\n\n\"But I remember saying someone was going to get lucky tonight,\"\n\n\"Yes, you did. And, you did.\"\n\n\"What?\"\n\n\"You said someone was going to get lucky, and you got lucky. You hadn't specified who was going to get lucky.\" I was arguing on technicalities regarding getting laid. How sad was I?\n\n\"Brian, stop talking nonsense,\" she started pulling at the drawstrings of my sweats again and I took her hands in mine, holding them to my chest.\n\n\"Lissy, we're still here for another night, we don't need to do everything right now. The fruits of patience are the sweetest.\" Did I just say that? Where does my mind come up with these things? And why don't I ever stop myself from saying them out loud? I think my filters were clogged because of all the sexual energy in the air.\n\nAs expected, she started laughing, \"Brian, you say the weirdest things.\"\n\n\"Please don't leave me?\" I pleaded playfully.\n\n\"But you want me to leave you with blue balls again?\"\n\nI was never good at lying and I'd already done a good job of embarrassing myself so why not just say the truth before I got busted again. \n\n\"Actually I kinda.......\" I shrugged and looked down, unable to say it.\n\nI have to give that girl points for being perceptive, she was really good at reading situations, \n\n\"No,\" she said, surprised.\n\n\"Yup,\" I nodded.\n\n\"When?\"\n\n\"When you did,\"\n\nShe looked at me for a few seconds then put her arms around my neck and hugged me tightly, bringing her lips close to my ear, \"You find me that sexy?\"\n\nI just nodded into her neck, putting my arms around her waist, \"You have no clue.\"\n\nShe pulled back and kissed me again but this time it was warm, tender and full of.................. nope, I wasn't going to go there. It wasn't possible. It was too soon and I was too much of an idiot for her to feel that way about me.\n\nThere was another gust of wind and I felt Melissa shiver in my arms. I ran my hands over her bare shoulders and found them ice cold. I hadn't realized how cold it had gotten since we had come outside, and we were wearing flimsy clothes that offered hardly any protection.",
        "\"Shit Mel, you're freezing, let's go inside,\" I said, pulling away and urging her to get up.\n\n\"No, it's ok, let's stay a little while longer?\" she tried to convince me.\n\n\"No way. It's quite cold out now, and I can't have you getting sick tomorrow Lissy, let's go.\" I said, making sure she was safely away from the edge before getting up myself. \n\n\"What's the big deal about tomorrow?\" she asked.\n\nCrap, I'd almost given away too much. The proposal was supposed to be a surprise, it wouldn't do to ruin it so when we were so close. Time to bring my powers of distraction into play.\n\n\"You've forgotten already?\" I said as I took her hand, leading her back to the cabin, \"All this talk about me getting lucky and how you're going to show me a good time and this is what I end up with? A forgotten dream? A mere indulgence that you cast away at your fickle whim?\" I shook my head in disappointment, \"I expected better from you Melissa.\" \n\n\"You're such a drama queen,\" she said, poking me in the ribs.\n\nI had a feeling she knew I was trying to veer her off the topic but thankfully she didn't pursue it further. We tiptoed silently up to the loft and one by one, we creeped back down to the bathroom to clean ourselves up and change. The cabin was dead silent, nothing could be heard from either of the rooms downstairs.\n\nAs Melissa came back up I was already under the covers and getting nice and warm, my hands propped up behind my head and staring at the wooden rafters up on the roof. I turned to her as she got into bed and saw she was wearing cute pink Powerpuff Girls pajamas. I idly wondered where the hell women find this stuff, it was a mystery to me.\n\nShe got under the duvet and snuggled right up to me, laying her head on my chest and draping her arm around me. I nearly jumped out of bed when I felt her feet touch mine. They were like blocks of ice.\n\n\"Damn Lissy, where did you go to change? The North Pole?\" I complained as I tried to scoot my feet away from her.\n\n\"What's wrong? My big macho boyfriend is afraid of my pretty little cold feet?\" she followed my feet and made sure hers were tucked right in-between mine. \n\nWhy'd she have to put it like that? It's just wrong to question a guy's manliness. \n\n\"No. But they feel like you were incubating them in a freezer for ten hours.\"\n\n\"They've always been like that, they get really cold, I don't know why. My ex never used to let me-\" she paused and sighed. \"Sorry, wrong time to bring that up.\"\n\nI was running my fingers through her soft hair, and went over what she'd just said. Yes, I didn't like the fact that she was with that scoundrel, but I didn't want her to think that she couldn't talk openly with me. I loved this open communication thing we had going where we could freely say whatever we wanted and I didn't want it to stop. That's how shit starts, when people stop talking. Just the fact that she realized this wasn't the most appropriate times to bring it up was good enough for me.\n\n\"Lissy, you never have to feel like you can't talk to me about anything. If you have something on your mind, just say it, whenever and wherever, I won't mind one bit.\"\n\nShe looked up at me, \"Really?\"\n\nI nodded and she gave me that gorgeous smile and a little peck before returning to her place on my chest. She was like a cat.\n\n\"He never let me warm my feet on him, always said he couldn't sleep if I did.\"\n\n\"Well, my burning furnace is always open for your frozen popsicles.\"\n\nI never learn do I? I did it again. One of these days I'm going to cut my tongue off, like seriously.\n\nShe giggled, \"You should write a book of these things you keep saying,\"\n\n\"I'd probably be sent to an asylum,\"\n\n\"I'd come visit you, made sure you took your pills,\"\n\n\"Ha ha, you're hilarious,\" I lightly spanked her bottom.\n\n\"Oooh, I didn't know you liked it kinky,\" she cooed as she circled my nipple playfully through my T-shirt. It tickled.\n\nI threaded my fingers through hers and pulled her hand away, trapping it under my back.\n\n\"Spoilsport,\" she muttered sleepily.\n\nWe fell silent after that and I felt her breathing become lighter and evening out, her fingers becoming loose in my hand.\n\n\"Goodnight Elsa,\" I said as I kissed the top of her head.\n\nI heard a half-hearted groan but she fell asleep again and I smiled to myself in the dark. If someone had told me a few months ago that I would be in bed with this incredible girl I would have told them to shove it. I looked down to double check if she was really there and saw her silhouette perfectly molded to mine in the sparse moonlight that found its way in through the window. I gradually slowed stroking her hair as she fell deeper into her slumber.\n\nAs I felt myself getting drowsy I couldn't help but think about what would happen tomorrow. Would everything go according to plan? Would everything turn out as we wanted? Would Jenna say yes? Despite my overconfidence when talking to Nick earlier, there was always that tiny chance that things would go haywire and for some reason, those doubts always surfaced in the dead of the night.\n\nJust as I was about to nod off I felt Melissa stir. She pressed herself even closer to me and raised and bent her knee over my legs so that I was completely trapped under her. She wriggled her head, and after finding her comfortable spot halfway across my chest, she sighed and became still again, fast asleep. \n\nI was a guy who needed to move at night and here I was trapped, rigid as a surfboard, under a tangle of arms and legs. Funny thing was though, I didn't mind it one bit. I relaxed and eased back into the land of dreams along with the beautiful creature on top of me.\n\nNope, I didn't mind it at all."
    ],
    "authorname": "Agera_R",
    "tags": [
        "road trip",
        "cabin",
        "park",
        "cliff",
        "song",
        "romance"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/birthday-girl-ch-06"
}