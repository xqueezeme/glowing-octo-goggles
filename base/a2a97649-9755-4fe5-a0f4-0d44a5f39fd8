{
    "title": "How I Married a Porn Star Pt. 01",
    "pages": [
        "It seems crazy when I look back on everything after all this time. It seems inconceivable, insane, and complete lunacy. I never thought that my life would be anything like this, but it is. I am married to a porn star. This is how it happened.\n\nMany Years Ago\n\nI was a senior in college getting ready to wrap up my final semester in a few months. I felt like I could take on the world. I had several job offers already lined up in many different places and I felt confident with my life's direction. \n\nOnly problem was that I was single. Here is the rundown of my last 3 girlfriends. Broke up with me because I didn't call her pretty enough, cheated on me with one of her \"just friends\", went on a study abroad program and \"found herself.\" I didn't find out to later she found herself in between the legs of her host parents' son & father. \n\nSo I was single. \n\nI lived off campus, attending Northern Arizona University in Flagstaff. I shared an apartment with my buddy Chet.\n\nChet was not like other dudes. No filter, no off switch, and no shame. I have seen this guy light farts on fire at a sorority party. And somehow, he still got laid that night.\n\nHe wasn't really that invested in his studies. It got in the way of partying, video games, and porn. He loved porn. I liked it like most guys do, but he lived and breathed it. He could name almost any porn star on the screen, no matter how obscure. I caught him once watching porn in our living room while he was banging some biology major.\n\nIt was a typical Tuesday, and I was home finishing some homework when Chet came barreling into my room.\n\n\"I won! I WON!!\" Chet screamed as he started dancing around like he'd just won the lottery.\n\n\"Chet? CHET!\" yelling to get his attention which I was finally able to get him to stop dancing. \"What did you win?\"\n\n\"Two VIP access passes to the AVN Convention in Las Vegas!!\"\n\nI recognized the AVN moniker as the Adult Video Network but was still confused.\n\n\"What the fuck are you talking about?\"\n\n\"I'm talking about the largest collection of porn stars all in one place and we are going to be in the center of it all!\"\n\n\"We?!\" was the only thing I could come up with.\n\n\"Of course, bro!\" Chet said to me with one of those \"obvious\" looks. \"I gotta take my home boy along for the ride! Maybe we even get you some finally!\"\n\nI was stunned at the offer and my brain started to try and think. Apparently, Chet's mouth was faster than my brain.\n\n\"Since we don't have to fly there, we get 2 rooms and casino credit at the Venetian! This is going to be epic! We're gonna be drowning in pussy!!\"\n\nIn his mind, I'd already accepted.\n\nThe next night\n\nBecause I had \"apparently\" agreed to go with him, Chet and I were on our way to Vegas for a porn convention. We left Flagstaff as soon as both of our classes were done. It's only a 3-hour drive and the \"contest\" people agreed to start putting us up Wednesday night.\n\nI'd contacted my professors and told them that I had an ill grandmother that I was the closest family member to help out. They bought it or said they bought it and gave me no problem about taking off 2 days.\n\nWe took my car, cause it was nicer and cleaner than Chet's and neither of us believed he'd be sober enough to drive home anyway.\n\n\"This is going to be the best weekend of my life!\" Chet made clear. \"Fuck, after this; a pack of wolves could rip me apart and I'll still die with a smile on my face!\"\n\n\"It's Arizona and Nevada,\" I told him, \"It'll be coyotes that get you.\"\n\nChet just shrugged.\n\n\"Whatever, man. Come on, how can you not be pumped for this?\"\n\nI shrugged a little bit in a fake \"too cool for school\" type thing. Sure I was excited, but it was more about the free rooms than anything else. I figured the convention would be interesting and maybe we'd get some free drinks, but not much else.\n\nI continued my somewhat pessimistic view until we saw the lights of the city over the horizon. It was always beautiful to see. Since we didn't live super far from here, this was by no means our first time in Vegas. We knew cool hangouts and cheap places to eat. \n\nI pulled up to the Venetian hotel where Chet said that we were staying. I still had trouble believing all this and figured they'd turn us around and we'd wind up a fleabag hotel. Chet insisted and I did what I never did. Lined up for valet parking. \n\nThey took my car and our bags as we went to the check in desks. I was surprised it wasn't a longer line. We got to a real live person within five minutes.\n\n\"Reservations for Applegate!\" Chet said confidently and forcefully. I was kinda shocked at his boldness and was even more shocked by what happened next.\n\n\"Yes, Mr. Applegate,\" the desk clerk responded. \"I have it right here. Two VIP rooms with full complements.\"\n\nMy mouth flew open. This whole time, I secretly thought that Chet might have been fuckin' with me. \n\nGuess not.\n\n\"Your rooms are ready, and we can get your things up there immediately. Once you're up there, you are to contact Mr. Snyder at this number for more information,\" the desk clerk said, handing a piece of paper to Chet. The desk clerk hit his bell, gave us two sets of card keys each, and someone immediately came and collected our bags.\n\nOur rooms were pretty high up. 28th floor. Our rooms were right across the hall from each other, both identical. They weren't suites, just nicer than standard. One of the rooms faced the pool and the other faced the strip. Guess which one Chet took. \n\nThe view was gorgeous. I started unpacking when Chet knocked on the door.\n\n\"This is great, man! No dive motels for us this time,\" he said with a confident nod.\n\n\"Guess you should probably call that number,\" I nudged. Chet's mind immediately seemed to light up.\n\n\"Good idea! I almost forgot that shit,\" he said as he got the paper out of his pocket and picked up the room phone to dial.\n\n\"Hey, this is Chet Applegate. My bro and I have checked in and were told to call you.\"\n\nI obviously only heard one half of the conversation.\n\n\"Sean Cohan,\" Chet said giving him my name.\n\n\"Bar near the craps table?\" Chet repeated for clarification.\n\n\"15 minutes?\" this was getting irritating.\n\n\"Blue suit?\" I guessed that's what he'd be wearing.\n\n\"Sounds great! We'll see you soon!\" Chet added as he ended the call.\n\n\"We gotta go meet the guy?\" I asked having obviously heard all this.\n\n\"Dude, this is gonna be great,\" Chet continued to insist. \"We're gonna go meet this guy so he can give us the rundown, our passes, some chips to play some games, even food & booze vouchers!\"\n\n\"Ok, lets head out then.\" \n\nI was still skeptical about all this. Most basic rule in anything: if it's too good to be true, it is. We arrived on the casino floor and immediately started looking for the craps table. With only a bit of hunting, we found the correct bar.\n\nWe began to order drinks when someone came over to us. He was wearing a blue suit.\n\n\"Chet Applegate?\" he asked approaching us.\n\n\"That's me!\" Chet answered enthusiastically.\n\n\"And that must make you Sean,\" he said extending his hand to me. \n\n\"Yes, sir,\" I said while taking his hand in a shake.\n\n\"I'm Kevin Snyder. Congratulations to you both. Let me get these drinks,\" he offered as he gave the bartender his card.\n\n\"Thank you, sir,\" I responded with, and he just waved me off, indicating that it wasn't necessary. He directed us to a table.\n\n\"So, the convention starts tomorrow at 11am. Since you guys are VIP's, you'll be able to get in each day at 10.\" He then gave us a pair of silicon wristbands.\n\n\"These'll get you into everything there, no waiting. It'll also give you access to the VIP area of the convention.\"\n\nChet jabbed me in the ribs hearing that. You couldn't've smacked the smile off his face.\n\n\"Here are some chips to play games at the casino with and vouchers for food. I'll check in with you throughout the weekend to see if you need anything. Your rooms are on us as is anything in the minibar. You won't be charged, but do me a favor and don't raid the thing every day, huh?\" \n\n\"No, sir,\" I responded.\n\nHe smiled warmly at us.\n\n\"Say, why don't you guys join me for dinner?\" Kevin offered. \"Most of the talent is staying here and we prepared a welcome dinner for some of them.\"\n\n\"That sounds fuckin' awesome!\" Chet replied in his usual Chet way.\n\n\"Thank you, sir. That's very nice of you,\" was my reply. He smiled at me. \n\n\"You're welcome!\" he said warmly. \"Now let's finish these drinks and head over.\"\n\nWe downed the drinks and walked over with him to a restaurant at the casino. It was a steakhouse, and it looked like a fancy one. Luckily, I insisted that we bring our sport coats with us and wore them down. The hostess brought us back to a big room in the back.\n\n\"Kevin!\" came from all around the room, male and female alike.\n\n\"Hey everyone!\" Kevin responded waving his hands at everybody there. A few women immediately came over to him and kissed him on the cheek. You'd think he was Hugh Hefner. I recognized both as porn stars but had no idea what their names were. Once again, Chet to the rescue...\n\n\"Holy shit! Whitney Stephens and Hannah Hilton!!\"\n\n\"Who are you guys?\" Hannah asked.\n\n\"Ladies, this is Chet and Sean. They're a few VIP's I wanted to bring along,\" Kevin explained before clapping us both on the back.\n\n\"Nice to meet you both,\" I said to both ladies while they offered their hands.\n\n\"Yo, I've seen all you guys movies! I'm such a huge fan,\" Chet admitted, probably accurately. Both smiled at the comment, but it seemed to me like it was more of a \"I hate this creepy shit\" type deal.\n\n\"Why don't you guys head to the bar and we'll get everyone together for their orders?\" Kevin suggested. There was a bar in the separate area that looked fully stocked.\n\n\"Dude, go score us some drinks,\" Chet asked/insisted. \"I gotta put my vibe out there!\"\n\n\"Don't hurt yourself,\" I said rolling my eyes, \"or anyone else please,\" I said cautiously.\n\n\"Ha ha! Don't worry, bro. I'm always cool!\"\n\nI rolled my eyes again as I went over to the bar. There was a sea of people, at least 40 in there. I recognized some of the faces. Guys I normally saw telling a woman to \"Take it bitch!\" and women I had seen saying, \"Yeah daddy!\" were all around. I did a few head nods and headed to the bar.\n\n\"Hello, sir,\" the bartender said friendly like. \"What can I get for you?\"\n\n\"Two whisky gingers, please,\" I asked the bartender, dropping a $10 tip in his jar.\n\n\"Coming right up, sir!\" the bartender responded. I have to be honest; I was surprised $10 was enough to get his attention.\n\n\"Whisky ginger, please,\" came from my side. The voice was female, but I didn't look over. The bartender was almost done with the two I ordered.\n\n\"Sure, just let me get this gentleman's and I'll make yours,\" the bartender responded. The gentleman instinct in me immediately kicked in. \n\n\"Oh please, give her one of the ones I ordered, I don't mind waiting,\" I answered finally looking over.\n\nAnd there she was. Cassandra Calogera. One of the few porn stars I knew by name.\n\n\"Thank you,\" she responded, looking at me and smiling. My dick twitched just at that.\n\n\"No problem,\" I replied to her, \"hope you enjoy!\"\n\nThe bartender handed her one of the drinks and started to make my second. Instead of walking off, she actually came closer to me.\n\n\"I'm Cassandra,\" she said offering her hand.\n\n\"Sean,\" I replied, shaking her hand in return.\n\nShe smiled at the small consideration that I was acting like a gentleman. She took a sip of her/my drink.\n\n\"So how long have you been in the business?\" she asked me.\n\n\"I'm not,\" I answered honestly. She then had a puzzled look on her face.\n\n\"Did you sneak in or something, cause I will call security,\" she said with determination to do just that.\n\nI threw up my hands to indicate she should slow down.\n\n\"No, no, no,\" I said to stop her. \"I came in with Kevin,\" I replied pointing over to where Kevin was. To my benefit, Kevin happened to be looking in my general direction anyway and gave me a finger gun back.\n\n\"Oh, shit,\" Cassandra immediately replied. \"I'm sorry. I had no idea you were friends with Kevin,\" she said with almost a pleading look in her eye. \"Please, I'm so sorry.\" She almost seemed scared.\n\n\"Don't worry about it,\" I reassured her. \"No big deal. I could've been some kinda creep or something. How were you supposed to know?\"\n\nShe immediately started smiling at me again.\n\n\"Thanks,\" she said with a sly smile. \"So how do you know Kevin?\" she asked.\n\n\"Actually I just met him,\" I admitted. \"I'm a \"VIP\" guest,\" I told her using air quotes.\n\n\"Oh!\" she replied. \"And he just brought you to dinner?\" she said in an almost an interrogatory manner.\n\n\"Yeah,\" I told her honestly. \"We met him at the bar, and he invited us to dinner.\"\n\nThe bartender was now ready with the second drink.\n\n\"Well, excuse me,\" I apologized to her, \"I have to go deliver this to my friend. It was very nice meeting you,\" I added, nodding at her with respect. I took the drinks and went to find Chet.\n\nChet was ogling a women who I recognized as Sara Stone. She was a pretty big star, known for her cute face and huge, natural breasts. You could tell she was annoyed with him.\n\n\"Your body looks even more bangin' in person!\" he announced to her.\n\n\"Thanks...\" Sara retorted to him, rolling her eyes.\n\n\"Hey, Romeo!\" I shouted, getting his attention, but not disturbing anyone else. \"Here's your drink,\" I said offering him the drink.\n\n\"Oh thanks, bro!\" he said taking the drink, looking down at it. \"I'm gonna go get a lemon slice,\" he said to me. \"I'll see you later...\" he said to Sara. He walked off leaving the two of us there awkwardly.\n\n\"Excuse my friend,\" I offered meekly, \"he's an idiot.\"\n\n\"No shit,\" was her only reaction, taking a sip of her drink. \"So your friends with the walking bag of hormones?\" she asked me somewhat accusingly.\n\n\"Guilty,\" I said shrugging my shoulders, \"someone's gotta be.\"\n\nShe giggled at the comment, apparently making her think I was an ok guy.\n\n\"So he dragged you here?\" she said with an eyebrow raised.\n\n\"Dragged,\" I explained, \"may be a bit of an exaggeration. More forcefully guided.\"\n\nShe smiled at that. Apparently, I was more charming than the walking hard-on. What a shock...\n\n\"Well,\" she started, \"he should take a lesson out of your book,\" she cautioned. \"He ain't gonna get laid acting like that,\" she said with a smirk.\n\nI nearly snorted out my drink when she said that.\n\n\"Sounds like the beginning of a joke,\" I started, \"guy couldn't get laid at an adult video convention!\"\n\nHer turn to snort her drink as she kept looking at me smiling.\n\nKevin came over to us.\n\n\"Hey!\" he said announcing his presence, \"glad to see you guys getting along. You should grab some seats so they can get your orders.\"\n\nI nodded at him as he walked away.\n\n\"Well, it was nice meeting you,\" I said walking away.\n\n\"Hey!\" she said stopping me, \"come sit with me,\" Sara offered. \"I didn't even get your name.\" Hard offer to refuse.\n\n\"Sean,\" I said extending my hand, de facto accepting her offer.\n\n\"Sara,\" she offered shaking my hand and guiding me to a table.\n\nI saw Chet over with a few of the male stars and a few women, chopping it up with them. I figured it was probably best to leave him be.\n\nSara guided me to a seat next to her at a table as more people were starting to grab chairs. Then I felt a tap behind me.\n\n\"This seat taken?\" Cassandra asked me as she slid into the chair.\n\n\"No, please,\" was the only thing I could think to reply with. She smiled at me and looked over at Sara.\n\n\"Hey girl!\" was Sara's response. \"Have you met Sean?\"\n\n\"Yeah, we met over at the bar. He was nice enough to give me one of his drinks.\" She rubbed my arm a bit as she turned to grab the menu.\n\n\"Hey, let's grab these seats,\" came Sunny Lane. Gianna Michaels & Hannah Hilton joined her, filling up the table. I smiled and introduced myself to them. Sunny was friendly as was Hannah. Gianna was more \"whatever.\"\n\nI looked over the menu and found my choice as the server came over. She looked straight at me.\n\n\"What can I get for you?\" she asked.\n\n\"Ladies first, please,\" I insisted as I was a gentleman. The women all smiled at me, Gianna even giving me a grin and nod as if to say, \"well done.\" Everyone ordered and then she came back to me.\n\n\"Can I get a sirloin and a plain baked potato, please?\"\n\n\"How would you like the steak sir?\" the waitress asked.\n\n\"Medium-rare, please,\" I answered. I noticed that Gianna had an eyebrow raised.\n\n\"And your salad?\"\n\n\"Caesar, please.\"\n\n\"Eating steak like a man, huh?\" she said in almost a challenging tone.\n\n\"I've never eaten steak as anything else,\" I retorted, \"don't have the proper equipment for it.\" A funny line, without being sexist. All the girls at the table laughed, including Gianna.\n\n\"He got you!\" Sunny said laughing.\n\n\"Yeah, yeah,\" Gianna said a bit on the ropes. \"But at least drinking as a woman can get you some free fuckin' drinks.\" All the women at the table agreed.\n\n\"True,\" I admitted. \"The only way I got free drinks at a bar was either my birthday or bar tricks.\" This last part aroused some interest.\n\n\"What bar tricks?\" Hannah inquired.\n\n\"You didn't show me any tricks when we were at the bar!\" Cassandra now insisted.\n\n\"All talk!\" Gianna insisted pointing at the bar, \"fuckin show us, boy!\"\n\nI wasn't gonna retreat from a challenge, and I needed a new drink. Without saying a word, I stood up and went over to the bar. I asked the bartender for a refill and begged his pardon.\n\nI then put my right leg on the bar. I'd always been fairly flexible, and this usually got attention. I then leaned into my leg to show that I could go further. I started hearing howling and applause from all over the room, not just the table I was at. \n\n\"That's my boy right there!!\" I heard from Chet over at his table. The bartender gave me my drink, I tipped him again, and went back to my table; only subtly acknowledging the applause, sitting back down.\n\n\"Damn, boy!\" Gianna exclaimed, \"normally guys can't put up what they throw out. That was the shit!\"\n\n\"Are you double jointed?\" Sara asked me, subtly rubbing my leg.\n\n\"No,\" I admitted, \"just flexible,\" shrugging my shoulders at it.\n\n\"A nice thing to be,\" Cassandra said rubbing my other leg.\n\n\"Definitely a plus in this business,\" Sunny said getting everyone to laugh.\n\n\"That's gotta help on shoots,\" Hannah commented.\n\n\"Oh, he's not talent,\" Cassandra offered, \"he's a VIP friend of Kevin's.\"\n\n\"Damn!\" Gianna said, \"you gonna be a pimp this weekend?\" I knew she was challenging me.\n\n\"No more than usual,\" I offered while taking a sip of my drink. \n\n\"Oooh,\" Sara offered, \"good game!\" she added chuckling. Her and Cassandra were still rubbing my legs subtly.\n\n\"So what do you do, Sean?\" Sunny asked.\n\n\"I'm a senior at NAU about to graduate.\"\n\n\"Sweet!\" Cassandra said, \"what are you majoring in?\"\n\n\"Nothing fancy, Computer Science,\" I replied.\n\n\"So like making websites and shit?\" Gianna asked.\n\n\"That's part of it,\" I replied, \"also programing and networking.\"\n\n\"Any good?\" Gianna asked. She seemed intent on challenging me.\n\n\"Decent,\" I said humbly.\n\nA few of the women seemed almost impressed at that. Suddenly I got a tap on my shoulder.\n\n\"Hey, that was really cool what you did on the bar,\" said the woman who came up.\n\n\"Oh, thank you,\" I said politely.\n\n\"Nautica Thorn,\" she offered. I recognized her in that moment. She was wearing glasses and I suddenly remembered seeing one of Chet's movies with her glasses covered in some guy's splooge.\n\n\"Sean,\" I greeted her, \"nice to meet you.\" \n\n\"You too,\" she said walking away, looking my way as she sat back at her table.\n\n\"Just making friends everywhere, ain't you?\" Sara noted. I just shrugged my shoulders again, really not knowing what other reaction I was supposed to have.",
        "\"Got any other tricks?\" Sunny asked.\n\n\"None that I can think of at the moment,\" I said not being able to think of any, \"but if I do, I'll let you know.\"\n\nShe smiled at me as the waiter brought bread over to the table. Some of the women took it and some didn't, watching their weight, I guess. I figured I'd need some carbs in me if I kept drinking and took some of the bread. They then brought salads for everyone. The girls now started talking amongst themselves a bit.\n\n\"Sara, what booth are you doing?\" Hannah asked.\n\n\"Naughty America,\" she answered.\n\nGianna then held up her hand.\n\n\"Me too,\" she admitted.\n\n\"Cool,\" Hannah replied. \"I'm doing an independent and going to spend some time at the Girls Gone Wild booth. I told Joe I would.\"\n\n\"God, he's a creep,\" was Cassandra's remark.\n\n\"Kinda,\" Hannah admitted, \"but I got my start from him so whatever,\" she said shrugging her shoulders. I noticed how much it made her boobs jiggle when she did that. I went back to concentrating on my salad.\n\n\"How about you, Sean,\" Gianna asked. \"What booth you workin'?\"\n\nI finished swallowing and answered her.\n\n\"None,\" I told her, \"I guess I just check on all of them.\"\n\n\"Ooh, make sure you come to our booth!\" Sara insisted. \"We'll be sure to get you the good promos.\"\n\n\"That's nice of you, thank you.\" I answered as I finished the salad.\n\n\"So you go to NAU, did you drive here?\" Cassandra asked.\n\n\"Yeah, it's not a long drive and I like having my car.\" She just smiled at my response.\n\n\"He just wants a mobile place to fuck,\" Gianna said with a smirk. Not a mean one, more like she was trying to set me up for a joke. I took the bet.\n\n\"You first?\" I replied. Everyone laughed at the table, Gianna included.\n\n\"You wish!\" was her reply, again much softer than before.\n\n\"Man needs to have dreams,\" I replied. She grinned a bit at that. If I didn't know better, I'd say she was thinking it over.\n\nApparently, I'd finished another drink during that time. I offered to get drinks for anyone who wanted one from the bar. All passed except Sunny who wanted a martini. I went back to the bar and ordered.\n\nAnother woman came up and ordered a rum and coke. She saw me and smiled.\n\n\"You're the guy who flexed his leg on the bar?\" she said in a British accent.\n\n\"Guilty,\" was my only response.\n\n\"I'm Roxy,\" Roxy Jezel introduced herself as. She was a petite and particularly nasty star who was making big splashes on the industry. Or so Chet told me later.\n\n\"Sean,\" I replied shaking her hand.\n\n\"I'm pretty flexible myself,\" she said, \"think I could do it?\"\n\nI just shrugged and indicated that I had no clue. She then raised up her leg and put it on the bar as well. I have to say I was impressed. I looked at her leg up there and then noticed she wasn't wearing any panties. I immediately averted my gaze, but she caught me as she lowered her leg.\n\n\"See anything you like?\" she said seductively. I smiled wryly. I kept telling myself I needed to play it cool. Make it light.\n\n\"Oh, sure,\" I told her as the drinks arrived to me, \"everyone likes clam chowder.\" I winked and walked away. I looked back and saw her laughing pretty hard. If I didn't know any better, I'd think I had game.\n\nAs I gave Sunny her drink the food arrived. I have to say it looked like a really good steak. Thick and juicy. Not unlike the company I was keeping. Some got steak and some just stuck with salads or an assortment of vegetables.\n\n\"Fuck, this is good!\" Gianna exclaimed as she started downing her steak.\n\nI had to agree as it was so juicy and moist. I continued listening to the girls while eating.\n\n\"Man, this is so good!\" Sunny offered up, \"I had a shoot the other day and didn't really have anything before it.\"\n\n\"Did you vom?\" Gianna asked.\n\n\"No, just tried to be as slim as possible,\" Sunny answered.\n\n\"Yeah, but you gotta protect that ass of yours,\" Sara offered up. Sunny smiled.\n\n\"It gets me paid, for sure!\" Sunny offered up as I continued just eating my steak.\n\n\"Still got nothin' on my ass, girl!\" Gianna offered while standing up and bending over.\n\n\"Hey!\" Cassandra said, \"Don't leave me out. Pretty damn juicy,\" as she got up and started shaking her ass.\n\nJust keep chewing, just keep chewing...\n\n\"Sean!\" Gianna prompted. \"Come on, best ass?\"\n\nI really didn't want to a part of this shit. I looked em over and knew that a 3-way tie wouldn't work. Nominally, I would've said Gianna, but then it hit me.\n\n\"Sorry girls,\" I replied standing up, \"me!\" and I shook around a bit. They all laughed, and Sara even took a swat. Situation was diffused as they all sat down. Sara and Cassandra both rubbed my leg a bit as if to say, \"nicely done.\"\n\nWe all kept eating when Kevin suddenly stood up, tapping his glass to get everyone's attention.\n\n\"Hey, everyone! Just wanted to say thanks for coming out. We've got an awesome few days ahead, and I think it's gonna be great for everyone! Ladies? Having a good time?\"\n\nVarious cheers erupted around the room, including from our table.\n\n\"Fuck, yeah!\" was Gianna's reaction in what I was quickly learning was her typical way about her.\n\n\"Gentleman?\" Kevin asked.\n\n\"Fuck yeah!!\" erupted Chet mimicking Gianna. I literally just put my head in my hands, shaking my head. The girls nearby rubbed my back as if to say, 'sorry for your troubles.'\n\n\"Everyone have a great night!!\" Kevin ended with another round of applause.\n\nChet then made his way over to our table.\n\n\"Dude!\" he said to announce his presence. I was mid bite of my steak and couldn't answer him.\n\n\"I got us a hook up with some of the dudes over there. We're gonna head out soon and party. You in?\"\n\nMy mind raced with a way to get out of it. Suddenly Sara and Cassandra dug their nails into me and Sunny gave me a look that very much said, \"don't.\"\n\n\"Actually, your boy was gonna help us with something,\" Gianna answered. I couldn't believe she was saving my ass. \"We needed to do some stuff for the booths tomorrow, and he said he'd help out.\"\n\nI thought there was no way Chet would buy it, but he just shrugged.\n\n\"Whatever, dude,\" he said slurring a bit. \"Hit me up when you're done. I'll probably be knee deep in bitches!\" Chet said classily as he walked away. I was definitely relieved. \n\n\"That party your buddy's going to is so lame,\" Hannah said, \"real sausage fest every time. Unless he swings that way, he ain't getting laid tonight!\" Everyone laughed, including me feeling a little sorry for my friend.\n\n\"In other news,\" Gianna inserted, \"I've got a line on a kick ass party in the VIP pool area soon. We need to hit that shit up!\"\n\nAll the girls at the table signaled their agreement. I smiled politely and ate my steak some more. I had no clue if this invitation applied to me. It apparently was noticed that I didn't signal an agreement.\n\n\"How bout you, bitch?\" Gianna said looking straight at me, \"think you can keep up with us?\"\n\nThere it was. I was being invited to party with porn stars.\n\n\"Well, if I can't; I can think of worse ways to go out!\"\n\nThe girls giggled and Gianna just nodded in a 'I got you, bitch' way. Cassandra and Sara both stroked my leg again, maybe trying to reassure me a bit.\n\nWe finished our food and drinks and prepared to go. Since it was a pool party, we'd need to change into swimsuits for obvious reasons. We agreed to meet on the 1st floor elevator lobby near the pools in a half hour. \n\nApparently, all the girls were also staying at the hotel, so we all got in the elevator together. I was the last to get off on the 28th floor with Cassandra.\n\n\"I got a free upgrade to get me these views,\" she explained. I also saw that she was only staying a few doors down.\n\n\"See you soon,\" she said with a wink. It was like a fantasy. I figured later; I'd warn her that Chet was also on this floor.\n\nI got in my room and took a quick shower to get some of driving sweat from me. I cleaned up and threw on a button-down shirt. I got a loose pair of swim trucks, porn stars + swimsuits = boners. Not that I really thought I would use them, but I included a few condoms as an incase. You never know, right?\n\nI got down to the lobby a few minutes early. I just hung around seeing if they were going to come. I had none of their numbers and I honestly thought there was a 60% chance that they were gonna wind up ditching me. I was pacing around. I figured I'd give em 15 minutes before I said fuck it and tried to find Chet.\n\nAt the exact same second I had that thought, Sunny came out of the elevator. She was wearing a floral bikini with a wrap around her waist. Her C cups may not have been what some of the other women at the table were packing, but it wasn't nothing. She saw me and smiled.\n\n\"Hey Sean, nice look!\" I could tell that unlike if Gianna had said it, she really meant it.\n\n\"Thanks! I like yours too.\"\n\nShe gave me a cute innocent smile that I knew meant nothing but. Sara came down next, wearing a full-length wrap that only showed flashes of her suit. She came over to us.\n\n\"Love your suit, girl!\" she said to Sunny.\n\n\"Thanks,\" she said nicely, \"trying the sugar/spice thing.\"\n\n\"You look nice too,\" Sara said to me, inching a bit closer.\n\n\"Hey!\" Hannah said to the group getting off the elevator. She was also wearing a full wrap that was tied up. You wouldn't think porn stars would have an issue showing off their bodies, but whatever.\n\nOut of the corner of my eye, I saw Cassandra. No cover at all. Just a blue bikini that hid none of her curves. She looked amazing. Confident. Radiating womanhood and sex. She seemed to be looking right at me, almost as if she wanted to make sure she had my complete attention. \n\nShe did.\n\n\"Hey guys,\" Cassandra said fairly whimsically.\n\n\"Shit, girl!\" Hannah said, \"you're rockin' it!\"\n\n\"Wanted to start off strong,\" Cassandra answered. Not unlike when they were all sitting at the table before, Sara and Cassandra were flanking me.\n\n\"All right, tit lickers!\" Gianna said announcing her presence, \"let's make 'em hard and wet!\" She was dressed in a very tight black bikini. She was basically putting out advertising, stating \"I got curves\" to the world.\n\nWe began walking out to the pool. 1 guy with 4 hot women, I was the envy of a few people. The men at least. After only walking for a minute, Sara and Cassandra both hooked their arms around mine.\n\n\"Gotta make you look good,\" Sara said.\n\nIt certainly built my confidence up.\n\nWe made it out to the pool area, and I started wondering how we were gonna get into the VIP area. Would they let the girls in and not me? Would they tell us all to fuck off? Then I saw Kevin.\n\n\"Hey Sean!\" he said clapping my shoulder, \"I see you have some traveling companions!\"\n\n\"Wanted to keep him company,\" Cassandra added with a wink.\n\n\"You guys headed to the thing?\" Kevin asked pointing to the VIP area.\n\n\"That's the plan,\" Hannah added.\n\n\"Well, shit! Come on!\"\n\nThe bouncer at the VIP area clearly knew Kevin as they bro hugged.\n\n\"They're all with me, Jerome,\" Kevin explained pointing at our group.\n\n\"No problem,\" as Jerome let everyone in. Kevin held me back a second.\n\n\"Oh, shit!\" I thought. \"He's not gonna let me in.\"\n\n\"Jerome, hook up Sean here with a platinum for me,\" Kevin said patting me on the shoulder.\n\n\"You got it!\" Jerome responded quickly grabbing something out of a locked drawer. It was a platinum bracelet with a metal clasp.\n\n\"Here Sean, keep this on you for the weekend! It'll get you taken care of.\"\n\n\"Thanks, Kevin!\" I said, though with a bit of guilt. Chet wasn't getting one.\n\n\"I'd give one to your friend, but...\" I patted him on the shoulder.\n\n\"I get it,\" I replied, holding up my hand to emphasize that I understood.\n\nWe both then headed in.\n\nIt was overwhelming. The music was pounding and there were women everywhere. I swear the ratio was 90/10 between women and men. So many women and all attractive. I had no idea if they were all in the industry, but they all looked good enough to be.  \n\nKevin and I found the bar and a few of the girls.\n\n\"There he is!\" Sara said sipping on a drink. \n\nI figured she was talking about Kevin and moved aside. She then gave me a kiss on the cheek.\n\n\"We thought we lost you!\" from Hannah who also gave me a hug.\n\nI then noticed both women had shed their wraps, leaving their bikini clad bodies free. Both were in ones that left no imagination. It was intoxicating. \n\nI then felt a slap on my ass. Gianna.\n\n\"Tried to hide from us, huh?\" Gianna insisted. \"Gonna need to take a shot to pay for that shit!\"\n\nI asked for tequila and the women were more than willing to go along. Then I realized someone was missing.\n\n\"Where's Cassandra?\" I asked. \n\nSuddenly I felt someone grab and cup my ass.\n\n\"Right here!\"\n\nWe all took the shot and decided the pool should now be explored. All the girls shed whatever wraps they had, and we got in, me removing my shirt as well. The water was really warm. It felt really good as I just bobbed in the pool for a bit.\n\n\"Fuck, this feels good,\" Sara declared wading with her personal flotation devices keeping her up.\n\n\"Fuckin' Las Vegas, man!\" was Gianna's contribution. She splashed around, not caring if her hair got wet or anything. It was weirdly erotic to see someone to just give no fucks about anything.\n\nCassandra was also loving the water. She got close to me again.\n\n\"It feels so wet,\" she whispered in my ear.\n\nThis was now nuts. I had a beautiful porn star at my ear trying to turn me on. Maybe she was just screwing around, but it was still hot.\n\nThere was a pool bar there too, so we swam over there. So many girls all trying to get booze. For once, being a dude was an advantage as the bartender saw something different from the rest. He came up to me.\n\nWe all ordered our drinks, with still no one asking for a card or anything. Whatever, I figured. Suddenly, I felt a tap on my shoulder.\n\n\"Hey!\" said Nautica Thorn seeming very happy to see me. She was wearing a very flattering bikini to show off her C cups.\n\n\"Hey! How are you?\" I replied.\n\n\"Good!\" she answered. \"Glad to see you out here!\"\n\n\"Couldn't miss this,\" I told her with false earnestness.\n\n\"Hey, bitch!\" Sara said to her in a very friendly tone to Nautica. \"Having fun?\"\n\n\"I am now that I found you guys,\" she said putting her arm on Sean. \"You've got all the entertainment.\"\n\nWith that, Nautica joined our group as we started sucking down our drinks. The music was still pumping, and we were all grooving in the water. The women's grooving was more noticeable as their curves made the water move.\n\nNautica then pulled me toward her to start dancing. More just grinding and moving, but it was nice. Before long she was starting to grind her cute ass into me. This got the attention of some of the other females around.\n\nBefore long, a few women came up to join us. Some were with our group and some clearly weren't. I was sociable enough to believe the more the merrier, but some of our group weren't as accommodating.\n\n\"Bitches trying to mess with our boy!\" was Gianna's rallying call. The others took up on it with the pretense of another shot. Whisky this time. \n\n\"Whoo, that hits the spot!\" Gianna declared.\n\nSara ordered another shot, having apparently gotten a sudden spark of inspiration. She got the shot and placed it in-between her tits.\n\n\"It's time for the first titty shot of the weekend! Come on, Sean!\"\n\nAll the other girls cheered, and I was about to bury my face in Sara Stone's mounds.\n\nSometimes it really doesn't suck to be me, as I craned my head down and retrieved the shot. They were so big and soft. I got the shot in my mouth and threw it down. Cheers erupted all around as Sara started to shake 'em around. I was really just trying to maintain at this point.\n\nI ordered a club soda slyly to stabilize myself a bit. No one would know I figured that it wasn't alcohol. I figured that I should maintain some level of control here. More dancing and grinding were all around me. It seemed like something out of a Roman orgy scene in a Cinemax afterhours movie. Some women were starting to shed their tops and it was nothing but movement, music, and rhythm.\n\nCassandra then grabbed me and pulled me toward a \"quiet\" area of the pool, and we just waded with our drinks.\n\n\"Crazy shit, huh?\" she asked me while sipping on her drink.\n\nI tried to act cool about it all while still agreeing with her point.\n\n\"A little, but it seems like a good vibe, nice people.\"\n\n\"That's true,\" Cassandra admitted, \"as strange as it may sound, I've met some of the nicest people in this business.\"\n\n\"And Gianna,\" I said to get a laugh. It succeeded because her drink almost shot out her nose.\n\n\"She's a little rough around the edges, but there's honestly no one who has more fun, or you want more in your corner.\"\n\n\"What are you bitches talking about?\" Gianna said coming over to us with a smile and more shots.\n\n\"How awesome you are!\" Cassandra said kinda truthfully.\n\n\"Fuckin right I am!\" was her response. \"Time for more boob shots! One for Cassandra and one for me!\"\n\nGianna shoved a shot glass in-between her tits and held it there for Cassandra. Cassandra bent over and took the shot, shoving her face in Gianna's tits as much as possible. Gianna then did the same with Cassandra, grabbing the shot then shaking Cassandra's bikini clad boobs around to the delight of anyone with eyes. Cassandra just smiled at this, not minding having her tits fondled by her friend.\n\nI just sipped on my drink and enjoyed they show.\n\n\"Hey Sean!\" I heard from behind to see Roxy again.\n\n\"Hi, how are you?\" I responded.\n\n\"I'm doing great!\" she said with a big smile. She looked over at the 2 busty women who were with me. \"How are you guys doing?\"\n\n\"Pretty fuckin' good!\" Gianna answered. \n\n\"Sean, will you get me a drink?\" Roxy asked.\n\n\"Sure. I'll be back in a sec,\" I answered. \"Gotta use the facilities.\"\n\n\"Why are you talking so fancy?\" Gianna asked. \"If you gotta take a piss, say so!\" She really was a ball buster. I just shrugged and made my way out of the pool. \n\nI found my shirt after drying off and threw it back on. After a little bit of searching I found the men's room. I walked up to a urinal and started my business.\n\n\"UNGH! Get it!\" I heard from one of the stalls. The stall walls then started rattling pretty good. Someone was having no trouble getting laid. I washed my hands and got out of there. People should be able to bang in piece.\n\nAs soon as I was out of the bathroom, I ran into Sunny. I saw her truly without the wrap for the first time and I saw she was wearing a thong bikini bottom that showed off her fantastic ass.\n\n\"There you are! Were you just in there with Hannah?\" Sunny asked.\n\n\"I just went to take a leak,\" I admitted, \"I heard some shenanigans going on in one of the stalls though.\"\n\n\"Yeah, that's Hannah,\" she said kind of flippantly. \"She found a hot guy and decided she had to pound on out.\" She shrugged her shoulders explaining them. \n\nIt was strange for me to be around women who were so comfortable talking about sex. Of course, I was used to guys doing that; I lived with Chet after all. It was liberating almost.\n\n\"Wanna get a drink with me?\" Sunny asked in that innocent tone she pulled off so well. After having that club soda I was feeling in better control and in more control.\n\n\"Sure!\" I declared as she led me back to the bar on the deck. We waited a bit for a bartender to see us. Sunny was standing in front of me as we were waiting, starting to plant her ass against me. My dick started stirring a bit from this.\n\n\"Oooh,\" she said to me turning her head around, \"getting happy, are we?\"\n\n\"Can you blame me?\" I was saying to denote all the half-naked women around.\n\n\"Not really, I know how good my ass feels,\" she said with a grin while patting it. Not really what I meant, but if she appreciated the thought; what's the harm?\n\nWe finally got the bartender's attention and got some drinks. Sunny and I walked away from the bar, and we saw some of our \"group\" in the pool. We headed over to join. Gianna was shaking around, with a noticeable difference. Her top was gone.",
        "Those big DDs were going in every direction imaginable. Sunny just smiled.\n\n\"That girl,\" she said, \"any excuse to get the girls out!\"\n\nI took my shirt back off and we swam over to her. Clearly, she'd had a few extra drinks since we last saw her.\n\n\"HEY!\" Gianna exclaimed seeing us, \"there's my people! Now we can party!!\"\n\n\"Looks like your way ahead of us,\" I noted slyly. She just giggled.\n\n\"Gotta give the people what they want!\" she declared, \"besides, I gotta air 'em out every once in a while. Fuckin' titty sweat.\"\n\n\"Amen,\" said Nautica who came up from behind. I noticed she her arm out around my waist from the back. I figured it was fair game and did the same. Nautica looked at me and gave me a 'atta boy' look. Sunny seemed a bit little less pleased while Gianna was in her own world.\n\n\"Having fun?\" Hannah asked coming up to us.\n\n\"Not as much as you were having!\" Sunny declared. Hannah wasn't plussed by it.\n\n\"Girls gotta have fun,\" she declared with Gianna giving her a high five.\n\n\"Sean went into the bathroom while you were in there and heard you boning,\" Sunny declared.\n\n\"Who's boning?\" Sara asked coming up to us.\n\n\"Hannah!\" Gianna informed her. \"And Sean was there too.\"\n\n\"You fucked Sean?\" Sara asked inquisitively and it seemed almost jealously.\n\n\"Nah, I was in the bathroom stall, and I guess Sean came in for a piss,\" she explained.\n\n\"Did you see them?\" Sara asked me.\n\n\"Heard them,\" I explained. \"I didn't even know it was her until I came out and Sunny told me.\"\n\n\"Yeah!\" Gianna said, \"what the fuck you little snitch?!\" clearly making it known she wasn't serious. Sunny just shrugged her shoulders.\n\n\"Why the fuck am I the only one topless?\" Gianna asked.\n\n\"You're the only one who needs the attention,\" Hannah shot back.\n\n\"Hey!\" Nautica jumped in, \"technically Sean is too!\"\n\n\"Good point,\" as Gianna came over to me and raised my arm up with hers. \"Topless buddies!\" Everyone had a good laugh on that.\n\nI started wondering where Cassandra was. I looked around a bit for her and saw her over to the side of the pool. She was making out with someone, but I couldn't tell who. Hell, I couldn't even tell if it was a dude or not. Well I guessed she was having fun.\n\nAnother of the guys that were there came up to Gianna and smacked her ass. She spun around quick.\n\n\"Bitch! You don't ever do shit like that unless I tell you! I don't fuckin know you and I don't want your limp dick paws on me!\"\n\nThe guy was clearly freaked out. He thought he was just fucking around, but shit turned sideways on him. He started mumbling out something about it being no big deal. Gianna looked over and saw me.\n\n\"See this motherfucker,\" pointing right at me grabbing my hand and putting it on her full ass. \"This dude is my homeboy and can grab my ass whenever he wants. You can go fuck yourself which is all you'll be doing!\"\n\nThe guy quickly got out of the pool, and I saw some security people find him and get him out. Gianna then busted out laughing.\n\n\"Fuckin' shithead grabs my ass!\" she said laughing about the whole thing as the party started back up. She then looked at me. \"So how did you like that shit?\"\n\nI considered my words carefully.\n\n\"Ironically,\" I began, \"shit is nowhere near the word I would use to describe your ass!\"\n\nGianna and the other girls around us started laughing hard.\n\n\"Goddamn fuckin right!\" as she high fived me. Sunny felt a particular way about it.\n\n\"Hey! Her's is not the only ass that deserves attention!\" Sunny suggested.\n\n\"Damn right!\" Nautica added.\n\nI threw my hands up to calm everyone down.\n\n\"I didn't mean to suggest anything,\" I explained. \"Just going off experience.\"\n\n\"Oh really?\" was Nautica's reaction as she spun herself around, pushing her ass toward me. Recognizing this as an invitation, I gave it a quick squeeze.\n\n\"Very nice,\" I said in honest reaction.\n\n\"Oh, yeah?\" Sunny said and spun around in the same way. I grabbed her ass too to the delight of the gathered masses.\n\n\"Quality,\" I spat out. Everyone giggled or laughed at that.\n\n\"So?\" Nautica asked, \"Who wins?\"\n\n\"It's a tough call, but in a tie situation; I gotta go with who's showing the most ass cheek. Sunny wins.\"\n\n\"Motherfucker!\" was Gianna's response.\n\n\"Damn,\" was Nautica's response, even though she seemed to respect the reasoning behind it.\n\n\"Here!\" Gianna said taking off her bottoms so that she was now totally nude. \"How bout now?\"\n\nIt was a hell of a site to see I had to admit, but fair was fair.\n\n\"That would've won the contest, but I can't reverse the decision,\" I said with a grin. \"It just wouldn't be fair to the other competitors.\"\n\nSunny and Nautica laughed again. Gianna just rolled her eyes.\n\n\"Whatever!\" she declared throwing her hands into the air. \"I fuckin' can't with this guy,\" she said clearly joking around. \"Guess you ain't tappin this ass tonight!\" she declared.\n\nI continued along the joke line.\n\n\"Well, I didn't know you were gonna try to bribe me,\" I said laughingly. She giggled at that loosening up.\n\n\"Fuck it, I ain't putting my shit back on. I look too fuckin good!\"\n\nAnd with that, nudity was now on the table. Thank God I wore the loose-fitting swim trunks.\n\nGianna's nudity brought some attention to our group. A naked woman with great curves tends to do that.\n\n\"Hey!\" Roxy said wading up to us, \"someone's getting comfortable.\"\n\n\"You know it!\" was Gianna's response with a big smile on her face.\n\n\"Hey, what happened to my drink?\" Roxy asked.\n\nShit!\n\n\"Oh shit, I'm so sorry,\" I said contritely. \"Let me go get you one really quick.\"\n\n\"I'm coming with you this time to make sure,\" Roxy said with a wink as she took me by the arm to get a drink.\n\nWe waded over to the bar while she stated asking me questions.\n\n\"So what makes you such a big deal around here?\" she asked. \"Are you a producer?\"\n\n\"Nope,\" I admitted. \"Just a guy who seemed to make a few connections and get to enjoy the company of some cool people.\"\n\nShe smiled at the complement as we reached the bar. We got her drink and headed back to the group. It was a bit more crowded around Gianna.\n\nWe made our way back and there seemed to be a lot more girls. I didn't recognize most of them, but they were hot and seemed friendly. Sara quickly got my attention.\n\n\"Having fun yet?\" she said leaning into me a bit.\n\n\"If I wasn't,\" I told her straight, \"I'm expecting too much out of life!\"\n\nShe giggled and came closer to me.\n\n\"Good point,\" she admitted.\n\nShe smiled at me so sweetly. I know it was probably just so that she wouldn't have other guys bother her, but it was still nice. Gianna saw that we were back.\n\n\"Sean!!\" she bellowed, \"get your ass over here!\"\n\nWhen a beautiful naked women calls for you, ya go. I did notice that Sara and Nautica came with me.\n\n\"Why are we not doing shots, man?\" she said attaching herself to me a bit.\n\n\"Cause we're not at the fuckin' bar!\" I retorted bolder then normal.\n\nShe waived her finger at me a bit then pointed it straight at me.\n\n\"Goddamn right!\" she announced, \"to the bar!\"\n\nDutifully we all followed while Gianna ordered shots. In most bars, I'm sure she would've been cut off by now, but not here. The bartender set up the shots dutifully.\n\n\"This is to!\" she said raising a toast, \"to my tits and ass and all the great things they represent!\"\n\nI had to drink to that, knocking the shot back. \n\n\"Hey! we should drink to my tits too!\" Sara insisted.\n\nGianna just started shaking her head.\n\n\"Uh uh!\" Gianna insisted, \"no toasts to your puppies while you still have them covered!\" Gianna was upping the ante and everyone around knew it.\n\nSara looked at me.\n\n\"Think I should whip out the girls?\" she asked with a sly smile\n\nSeriously?! What the fuck was I supposed to say to that?!\n\n\"I dunno, I'm not sure she could psychologically handle the competition,\" I whispered with a slight wink. She smiled at me with a knowing glare.\n\n\"Gotta leave something for the days coming up,\" she decided.\n\nI was proud of her for not giving into Gianna and sorry that I wasn't going to see them.\n\nThen I remembered I was in a pool with porn stars, and I really couldn't complain.\n\nThen surprisingly, Roxy shed her top to loud cheers. Her B cups couldn't rival Gianna or Sara in size, but they were cute and perky, fitting her frame very well.\n\n\"Think I look cute, Sean?\" Roxy asked innocently with those doe Asian eyes.\n\n\"I'd have to say so,\" I admitted with a wry smile. Roxy grinned at the complement.\n\n\"Well for a true test, you should give 'em a taste!\" she insisted pushing her breasts toward me.\n\nI leaned in, feeling a lot more confident doing so now than previous. Liquid courage is real. I tasted her left breast, licking the nipple and giving it a playful suck and bite.\n\n\"OOH!\" Roxy said responding, not out of anger but pleasure. It tasted quite nice actually.\n\n\"Yeah boy!\" Gianna said clearly looking over the action, \"now you're getting into it!\"\n\nIf Gianna was praising me, it was probably time for me to get another sobering drink. I started to wade back over to the bar for another club soda.\n\n\"Hey! Come back!\" Gianna shouted out to me, getting the attention of several others as well. \n\n\"If you're gonna sample titties,\" she said coming over toward me, \"gotta try the supersize!\"\n\nBefore I could even respond, she grabbed the back of my head and shoved me into her dirty pillows. They felt amazing. For a split second, I wished that I could build a summer home in them. I found a nipple near my lips, and I gave it a quick lick and twist.\n\n\"Aah!\" Gianna said in a gleeful way. I also gave then a quick grope when she released me. I figured when a girl invites you for a motorboat, a feelsky isn't really outta line. Gianna certainly saw it that way.\n\n\"Good shit, huh?!\" she said laughing.\n\n\"Hard to deny!\" I retorted laughing a bit. Roxy looked at me resigned.\n\n\"Fuck yeah!\" Gianna replied before shoving Roxy's head into her bosom.\n\nShe seemed a bit shocked, but she was also into it, groping and sucking away. Kinda hard to blame her for that.\n\nI was about to go back to the bar, but it was too hot a show. After breaking from her tits, Roxy started making out with Gianna, tongues flying all around. My dick started responding.\n\n\"Someone's enjoying the show,\" I heard from Sunny who came out of nowhere. It got Sara's attention too as she started looking down. Loose swimsuits can only do so much.\n\n\"Little lesbian action all it takes?\" Sara said coyly.\n\n\"The nudity doesn't hurt either. I'm only a mortal man.\"\n\nSunny and Sara laughed at this. I guess they figured I had a point. Sara took a hand and felt my shorts. Her eyes got bigger.\n\n\"Damn!\" she said in admiration & a smile, \"not bad.\" This got Sunny's attention to get her own feel.\n\n\"Very not bad,\" Sunny concluded. \n\nNothing in life prepares you for porn stars feeling you up. My only hope is that it wouldn't draw Gianna's attention. \n\nNot so much.\n\n\"You checking what he's packing?\" she asked Sara and Sunny before grabbing for herself. Her eyes didn't go wide, but she did slowly start to nod.\n\n\"Decent,\" she admitted, \"definitely decent.\" I figured that was as high of praise as I was likely to get from her.\n\n\"I try,\" was the only response open to me.\n\n\"Well,\" Gianna started, \"if a pool full of porn stars can't get you stiff, what will?\"\n\n\"Good point,\" I retorted, making her laugh and her boobs bounce.\n\nI then made my move to the bar. I needed something to help counteract all the alcohol. I got another club soda and took some big sips. Suddenly someone grabbed me around the waist from behind again.\n\n\"Hitting it hard, ain't you?\" Sunny said identifying herself.\n\n\"Nah,\" I admitted, \"marathon not a sprint. Just club soda.\"\n\nMy guess if it was Gianna, she would've called me a pussy. Sunny was nicer.\n\n\"Probably not a bad idea, clear head with all these fuckers running around,\" she said with a smirk, taking a big sip off my drink. I got another and we waded back over to \"our\" group.\n\nI noticed more and more girls were starting to loosen up and shed clothing, Nautica now among them. Her pretty C cup titties certainly added to the spectacle. I saw over to the side that Cassandra was gone, probably with whoever she was making out with.\n\nGianna was continuing to groove in the buff, still believing she was the center of attention, which she probably was. Sara was still clothed and dancing around too. She immediately got sight of me when Sunny and I came back.\n\n\"There you are!\" she said grabbing my arm, \"please don't leave me with these crazy fuckin people,\" Sara asked pleadingly.\n\n\"I'm here,\" I said in a nice way to reassure her. She smiled, seeming to feel a bit safer.\n\n\"Let's have a fuckin chicken fight!\" Gianna declared suddenly with everyone seeming to agree.\n\nChicken fight is an easy enough game. One person gets on another person's shoulders and tried to knock off the other person on someone else's shoulders. Balance and a strong base were necessary.\n\n\"Guess I'll have to be on bottom since none of you fuckers can hold me,\" Gianna declared, \"who's playing?\"\n\nRoxy immediately raised her hand to ride on Gianna's shoulders. Gianna then looked square at me.\n\n\"Sean, I know you're in,\" she declared, \"you need a rider!\"\n\nBefore I could even look around, Sara stepped up.\n\n\"Come on, Sean\" she urged, \"gotta take 'em down.\"\n\nI lowered myself down into the water so she could get on. Gianna did the same for Roxy. Suddenly I was in the middle of a pool porn star battle.\n\nI started moving toward Gianna and it was on. Roxy was trying to push off Sara with all her might and it just wasn't working. Sara had her legs tight against me and had the leverage. It didn't take long for Roxy to hit the water. Thankfully, people got out of her way, so she didn't hit anything or anybody.\n\nSara celebrated on top of me while Gianna fumed.\n\n\"Fuck!\" she bitched, \"I need more stable bitches. Nautica, get over here!\"\n\nNautica dutifully went over, and Sara indicated she was ready for Round 2. I got back to position, and it was on. \n\nThis battle took a bit longer. Nautica was a bit scrappier than Roxy had been and Sara damn near lost balance a few times. But in the end, Sara was victorious once again as Nautica hit the water. Nautica was smiling at the whole thing, but Gianna was livid.\n\n\"God fucking damnit!!\" she fumed, \"I need a bitch who ain't gonna fall!\"\n\n\"I've got an idea,\" chimed Sunny. \"I'll get on Sean and let Sara ride you.\"\n\nGianna seemed very open to the swap and Sara raised no objections. I let Sara off and let Sunny on. Since Sunny had a more pronounced ass then Sara did, I had to adjust for stability; but her cheeks felt amazing on me. Sara got on Gianna, and everyone was ready.\n\nSara started going after Sunny relentlessly, poking and prodding. Sunny didn't give up an inch and Sara soon felt the water sting. Sunny actually did so well that Gianna lost her balance too and tumbled over. Sunny got off my shoulders and gave me a big hug to celebrate the victory. She then pulled me into a kiss. It seemed more a celebratory peck then anything, but it was still a thrill. Sara and Gianna emerged after that.\n\n\"FUCK!\" Gianna exclaimed while Sara was more sportsman like, giving Sunny a hug.\n\n\"You just can't beat Sean,\" Sunny taunted. That was not helpful.\n\n\"Motherfucker must have suction cups on his feet or something!\" she said still pissed but loosening up a bit. I just kept my mouth shut.\n\n\"Oh, shit!\" Sunny screamed out, \"look who's here!\" she said pointing over outside the pool. We all looked over to see Tera Patrick enter the scene. She was wearing a dress instead of a swimsuit and was certainly dressed for success. She looked over the area in kind of a whatever mood.\n\n\"Man, fuck that cunt!\" Gianna said, but not loud enough for Tera to hear, or maybe she just didn't care.\n\n\"What's wrong with her?\" I asked literally anyone who would answer.\n\n\"She's just bitchy,\" Sara answered. \"She thinks she's better than the rest of us.\"\n\n\"Madam Dry Twat over there thinks her shit don't stink!\" Gianna said. \"But we should probably say hi anyway,\" as she made her way out of the pool. I looked quizzically at Sara and Sunny.\n\n\"She still has a lot of power in the industry. Better to be on her good side if possible,\" Sunny explained. I shrugged my shoulders as they led me out of the pool too. Sara especially kept a tight grip. Apparently, she really didn't want me going anywhere.\n\n\"Hey, Tera,\" Gianna said nicer than I'd heard her before, \"what's up?\"\n\nTera kinda looked her over, seeing that Gianna was still nude.\n\n\"Gianna, hi,\" Tera said in almost a \"I barely remember your name\" type of way. She then noticed the rest of the group, with me bringing up the rear.\n\n\"Roxy, right?\" Tera asked looking at her clearly.\n\n\"Yeah, nice to see you again,\" Roxy said trying to sound friendly. She looked over at Sara and her face lit up a bit.\n\n\"Sara! Hey girl!\" Tera said quite friendly and gave the girl a hug. Sara had to finally let go of me to hug her back.\n\n\"Hey,\" Sara responded, \"nice to see you,\" she responded politely.\n\n\"It's been too long,\" Tera insisted, \"I'm so glad you made it here!\" she continued smiling away. She then got a glimpse of me.\n\n\"Is this your boyfriend?\" Tera asked Sara, \"you didn't tell me you were dating. Cute though,\" she added looking me over a bit.\n\n\"This is my friend, Sean,\" Sara said in introduction. I sorta noticed that she didn't completely deny the boyfriend thing.\n\n\"Nice to meet you,\" she said extending her hand to me.\n\n\"You as well,\" I said returning the greeting.\n\n\"Let's get some drinks!\" Tera said, grabbing Sara along with her. Sara looked back pleadingly at me, clearly wanting me to follow her. I figured I'd made a promise and followed. Sunny came with us while the others mostly stayed back.\n\n\"Better than me, my fine white ass,\" Gianna retorted heading back to the pool.\n\nI caught up to Sara who manage to get a hand to me, pulling me along. I had a hand on Sunny, so we all got pulled together.\n\nWe arrived at the bar and Tera ordered a martini. She insisted that everyone have one. Sara and Sunny didn't seem thrilled, but I didn't mind martinis, so I just asked for no olives. She even got one for Sunny, even though she had yet to acknowledge her.\n\n\"Well,\" Tera said raising her glass, \"here's to a great convention!\" We all toasted as a big burly man came up to Tera.\n\n\"Sara, you remember my husband Evan, right?\" Sara nodded politely at him.\n\n\"Damn, you still looking fine, girl!\" Evan said to her. He then noticed me and Sunny.\n\n\"Sunny!\" Evan exclaimed. \"How are you doin'? Looking good as ever!\"\n\nSunny awkwardly smiled at him, clearly not comfortable around the dude. He then saw me.\n\n\"What's up dude?\" he said slight confrontationally, \"need something?!\"\n\n\"Babe,\" Tera said patting him, \"this is a friend of the girls, Sean, right?\" I noddedindicating she was.\n\n\"Oh, sorry man,\" he said dismissively. I noticed he didn't offer me a handshake. What a shitstain!\n\n\"Can we talk to you about something privately?\" Tera asked Sara.\n\n\"Excuse us guys, we'll probably be a while,\" Evan said with a wink. Sara indicated that she was ok and didn't have a problem. I looked at Sunny and she agreed. We took our drinks and headed back to the group.\n\nGianna was starting to get really drunk now and it was showing. More than a couple people were looking over at her.\n\n\"Hey! I'm fine bitches!\" she declared, convincing no one. I could see some security guys looking over. They were starting to make moves. I whispered to Nautica, Hannah & Sunny.\n\n\"The security guys are looking at her,\" as quietly as I could. They turned and saw what I saw.\n\n\"We should get her out of here,\" Hannah said. Everyone agreed, including Roxy who said she would distract the guys while we got her upstairs.\n\n\"Gianna,\" I said, \"we gotta get you outta here,\" I told her trying to be subtle.",
        "\"What the fucking fuck?!\" she said slurring her words and spilling her drink around.\n\n\"Babe,\" Nautica started, \"security's coming for you. We gotta get you away from those fuckers.\"\n\nGianna woke up a bit and saw me pointing at the guys who Roxy was trying to distract.\n\n\"Fuck that,\" she retorted, \"I'll take out both those fuckers with my tits!\"\n\n\"G,\" Sunny started, \"they could toss you from the convention.\" Whether that was true or not, I had no idea, but it worked.\n\nWe got Gianna out of the pool.\n\n\"Let's bounce then!\" Gianna said, heading for the exit. I stopped her.\n\n\"Wait,\" I said stopping everyone, \"we need our shit.\"\n\nSuddenly Gianna realized she was naked, and Nautica realized she was still topless. We quickly got everyone's stuff and Nautica put her top on. Sunny and I helped get Gianna's suit back on, Sunny handled her bottoms and I tied her top up. Then we bailed. I threw a quick shot to Roxy, letting her know we were clear. She smiled back as we left.\n\nGianna was wobbling a bit as we headed through the lobby, so Hannah and I got on either side of her to steady her up. We got to the elevator bank as quickly as possible.\n\n\"Anyone know what room she's in?\" I asked.\n\n\"I do,\" Hannah said explaining it was on the 14th floor.\n\nWe got her inside and hit the button before anyone could hop on the elevator with us. Gianna was still slurring pretty good as we rode up. We got off on the 14th floor and headed to her room. Hannah got the door open, and we threw her on the bed. She was kinda half out of it still and we all took a few deep breaths having been successful.\n\n\"I'll stay with her, you guys if you wanna bail,\" Nautica said rubbing her back.\n\n\"Thanks, Nautica\" I said as Sunny, Hannah and I left the room.\n\n\"I think I'm gonna turn in,\" Hannah said. She kissed us both on the cheek and left, leaving just Sunny and I in the hallway. She was just smiling.\n\n\"Did you wanna head back down?\" I asked her, feeling a little bad for leaving Roxy and Hannah all alone.\n\n\"I'm kinda over the huge group,\" Sunny admitted, \"just gonna wind down for the night so I can be ready for tomorrow.\"\n\nSeemed fair enough to me. I figured I'd probably head in to.\n\n\"Ok, well have a good night,\" I told her innocently, \"I had a lot of fun with you and everyone.\"\n\n\"Well, wait a minute,\" she said to try, and stop me from going much further. \"We should have a night cap, first,\" she said smiling.\n\n\"Oh, ok,\" I said a little surprised. \"Where should we get a nightcap?\"\n\n\"Well your mini fridge is stocked and paid for, right?\"\n\nBoth were technically true. From a monetary standpoint, it made sense. I nodded as to confirm her assertion.\n\n\"Lead the way, then!\" she said smiling as we went back to the elevator.\n\nThis was definitely a new experience for me. A beautiful porn star was now trying to get into my room. As much as I hated to admit it, part of me wondered if I was gonna have to pay for this. I put it out of my mind, thinking I just needed to take things one step at a time.\n\nWe got to my door, and I looked across the hall at Chet's room. I leaned my ear against the door to see if he was in yet. Sunny looked at me weird.\n\n\"You remember my buddy, Chet?\" I said with an eyebrow raised. Sunny knew what I was talking about now. I didn't hear anything and opened my own door.\n\n\"Ooh,\" Sunny commented, \"this is so nice!\" as she looked about the place, still just wearing her bikini and wrap.\n\n\"Thanks,\" I said admiring both views. \"What would you like to drink?\"\n\nI opened up the minibar to show her the options. She leaned over to browse, showing great cleavage while doing so.\n\n\"I'll take the tequila cause I can have that straight,\" she decided. I grabbed that for her and a whisky for me. I even took the extra step of putting them in glasses for us. She smiled at me while I served them, sitting on the edge of my bed even though there were chairs about.\n\n\"Cheers,\" I said knocking her glass into mine and taking a sip. She did the same.\n\n\"So what do you think of your first porn convention so far?\" she asked with a flourish.\n\n\"Well I have to say that I like the company, a lot of really cool people that are fun to hang with.\"\n\nShe smiled at this. Maybe she was impressed that I just didn't bring up the nudity or that they were porn stars or whatever.\n\n\"So you think I'm good company?\" she said smiling moving closer to me.\n\n\"Absolutely,\" I said honestly.\n\n\"Well, it's nice for people to want to be around me for more than the fact that I look good naked and fuck for a living.\"\n\nI almost choked on my drink when she said that.\n\n\"True,\" I admitted, \"but, that doesn't mean that some aren't complete douches.\"\n\n\"Exactly!\" Sunny admitted, \"just because you use one doesn't mean you should be one.\"\n\nThat one almost had be snorting. She just giggled. She also seemed to be inching closer to me.\n\n\"You know,\" she said somewhat sing-songly, \"it's kinda bad luck to start a convention without sex.\"\n\nOh shit! Here it comes.\n\nWith no other preamble, she started making out with me. Being not a complete idiot, I kissed back. Her lips were lovely, though I wouldn't call her kisses soft or gentle, more like a lion trying to maul a gazelle.\n\nIt wasn't long before she shoved me down on the bed and continued her assault. Her hands were rubbing over my body, trying to grope and feel as much as possible. My hands initially were on her back, until I decided that not making a grab for her ass might just be one of the dumbest things ever.\n\nI grabbed on with both hands, kneading her cheeks as she softly moaned.\n\n\"Yes,\" was all she whispered as I continued to grope her.\n\nWe continued hot and heavy, and it wasn't long before my dick started rising to the occasion. Apparently, Sunny could feel this too. She smiled as she reached her hand down.\n\n\"Ooh,\" she said happily, \"I think someone want to come out and play.\"\n\nShe untied my swim shorts and slid them down quite quickly. Her eyes seemed quite delighted at what she saw.\n\n\"Very nice,\" was all she said as she gave me a quick stroke and engulfed my cock into her mouth.\n\nI'd had women blow me before, but never with such gusto. She worked that thing like it was a nozzle on a life-preserver. Up and down, gagging herself a bit every few times. She tried to take as much of me as she could down her throat.\n\n\"I'm don't object to reciprocity if you like,\" I said to her with a grin. She looked up from my cock with a confused look on her face. I really had to learn when to use big words and when not to.\n\n\"Swing yourself up here,\" I explained, and the ding registered in her brain. She swung herself around so that her bikini clad ass and pussy were directly in front of my face. I slid the material to the side and dived right in.\n\nIt was tangy, but still tasted very good. She squealed as I assaulted her pussy with a similar relish that she was working my cock.\n\n\"Oooh, get it Sean!\" Sunny encouraged as started working her clit.\n\nI was lapping her pussy up while she continued to fuck my cock with her face. I eventually got a little adventurous and started tonguing her asshole. I'd done it before with girls with I'd say mixed results. Some liked the boldness while others thought it was gross. Sunny was very much in the former camp.\n\n\"Oh, yeah!\" Sunny said encouragingly, \"eat my ass!\"\n\nI did as she requested while I added fingers into her pussy. I kept a steady rhythm going and eventually added my thumb to her clit. That unlocked her box and I got flooded with girl cum. \n\n\"FUCK YES! YES!\" as Sunny ground herself onto my face. I could tell she was already sweating and really working hard. She got her face off of my cock and looked at me.\n\n\"Where are the condoms?\" she asked with fury and want. I pointed to the side table drawer. She threw it open and opened one of the condoms. She placed it in her mouth and used it to slide it onto my dick. I'd heard about people doing that, but I'd never been the recipient of it. \n\nI started to maneuver off the bed to get on top of her, but she quickly made clear that she wanted to take me for a ride. She straddled me and sunk herself down onto me.\n\nI was amazed. You'd think a porn star would be loose as hell, but she was pretty tight. She immediately went to work riding me like I was a bucking bronco. She really got into it quick.\n\n\"Fuck, baby,\" Sunny uttered over her moans, \"Sean, you feel amazing.\"\n\nHow much of this was true and how much of this was her 'acting' training, I'd never know. I just enjoyed the experience.\n\nI freed one of her breasts from her top and began sucking on them. Sunny did the opposite of objecting to this.\n\n\"Suck my titties, babe,\" Sunny said while continuing to milk me.\n\nShe then spun around so I could get a good view of her ass as she continued her ride. Her booty was bouncing so perfectly on me. I'd never been with a woman with an ass like this. I gave it a light spank as she continued her ride.\n\n\"Oooh, you like to be naughty? I like naughty,\" she made clear as she continued her ride. I held on for dear life as she continued. It felt amazing.\n\n\"Come on,\" Sunny urged, \"give your bad girl a spanking,\" she said with glee. I gave her a few good swats that were all accompanied by a moan from her. Her tempo increased as she came again.\n\n\"Shit, shit, FUCK!\" as she went over again. When you get a porn star off twice, it's a nice feeling.\n\nI then got on my knees and started ramming her from behind. I did try to start softly at first, but she wasn't having it.\n\n\"Fuck me, Sean. Pound that pussy!\" If she wanted a boning, she was gonna get it.\n\nI grabbed her hips and went to town. I was going with reckless abandon and Sunny was loving every second of it.\n\n\"YES! Take that cunt! Oh my God, it's so good!\"\n\nShe knew how to egg someone on, and it was working. I was smacking her ass and then I even started pulling her hair. That I'd never done before and Sunny had no objections.\n\n\"Fuck yeah!\" Sunny urged, \"God, you're hitting it so good.\"\n\nI was really amazed that I'd lasted this long with a porn star, and I knew it was coming to an end.\n\n\"I'm gonna cum,\" I said while continue to plow her.\n\n\"Do it, baby,\" Sunny said, \"Cum for me!\"\n\nWith that, I splattered the inside of the condom. It must've been powerful cause Sunny wound up with another orgasm when it hit.\n\n\"SHIT!!\" as she went over again. We then collapsed onto the bed, and she was somehow in my arms. She turned over and kissed me.\n\n\"That was so good,\" Sunny said earnestly. \"You've got a future in this.\"\n\nI laughed at it.\n\n\"I think I'll keep my amateur status for now.\"\n\nShe laughed and we just stayed there together, basking in the afterglow.\n\n\"DUDE!!\" I heard from the other side of the door, \"you up?!\"\n\nChet was clearly back from his gathering. Sunny and I both kinda laughed at it. I decided I should answer, or he'll keep up all night.\n\n\"I'm sleeping!\" I shouted back. \"Go to bed!\" Sunny was trying really hard to stop from bursting out laughing.\n\n\"Ok,\" he said meeker, \"see you in the morning, bro!\"\n\nSunny couldn't hold anymore and kept laughing into one of the pillows. I had to admit it was pretty damn funny.\n\n\"He means well,\" I said as an explanation of him. Sunny just rolled her eyes at the comment. Slowly, we drifted off to sleep."
    ],
    "authorname": "rumpleminty",
    "tags": [],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/how-i-married-a-porn-star-pt-01"
}