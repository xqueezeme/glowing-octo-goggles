{
    "title": "Jessa Ch. 15",
    "pages": [
        "By the time Jessa had caught her breath and thought she might be able to walk again, she had expected Torah to chase her back to her computer. Instead, he appeared to have fallen asleep. She slipped off the bed with the greatest care and tiptoed from the room and down the hall. Erich was watching her when she emerged in the kitchen. He looked from her to the hallway, then nodded and turned back to his cooking. Jessa continued to tiptoe to the computer room and dove back into her research almost as avidly as she had welcomed the sex with Torah.\n\nWhen Erich startled her into a soft gasp as he laid a plate of food next to her, she couldn't have said if it was his ability to move silently, or her wholesale concentration on the task of learning, and/or memorizing as much data as possible in the tiny window of time allotted her. Whenever she hit a roadblock, she flung herself at whiplash speeds into a different direction. It wasn't like there weren't questions aplenty to pursue.\n\nShe'd been at it about two additional hours, picking at the food Erich had provided - gourmet cooking obviously wasn't his forte, but it was edible and that was all that counted at the moment - when Torah was suddenly in the room, pulling her away from the computer. \"It's time. We have to leave.\"\n\n\"I have to delete my history,\" Jessa protested.\n\n\"It's a secure system,\" Torah pointed out, tapping his watch.\n\nJessa put her hands on her hips. \"Do you want council security or mine?\"\n\nTorah straightened. \"How long?\"\n\n\"Ten minutes,\" she replied confidently. He nodded and turned away, but Jessa saw him rubbing his face wearily as he headed down the hall. She hustled to clear her history of usage in ways that couldn't be recovered and ran out into the yard where the car was, determined to meet the timeline she had given Torah.\n\nTorah gestured her toward the back seat and she stubbornly shook her head. \"You need to sleep. You take the back seat.\"\n\nOn the far side of the car, Erich rolled his eyes. \"And you'll navigate?\"\n\nJessa spread her feet and planted them. \"I have a photographic memory and have studied countless current and historic maps.\"\n\n\"Enough, you two,\" Torah snapped. \"Jessa, back seat. You're our internet interface. Erich, just drive to the house Jacq has prepared for us. I will sleep when it's appropriate.\" He looked at them sternly when they continued to stare at each other. \"Move out!\" He added, emphatically.\n\nJessa climbed into the back seat and settled stubbornly in the uncomfortable center of the seat, struggling with the too small seatbelt only after Erich glowered at her. Mostly, she watched Torah as they pulled out onto an old highway. She didn't remember seeing him look tired ever, but maybe it was just him finally letting down some defenses.\n\n\"So what did you learn?\" Torah asked, leaning his seat back as Erich drove west and south into the French twilight.\n\nJessa shrugged uncomfortably, even though neither of them were looking at her. \"Not much more than I already told you. I focused on the Italy connection...\"\n\n\"What about Drau?\" Torah interrupted.\n\n\"Nothing,\" she said. \"I mean, I should say mysteriously nothing,\" she hastened to add when Torah scowled. \n\n\"There are gaps in his history?\" Erich asked.\n\n\"No. Which is part of the mystery. Everybody has gaps in their history, especially nowadays. His history is meticulous. And doesn't fit. He has a strong Germanic accent, indicating that he is from Berliner Region. Or from the outlands. But his history says he's from northern Rhine Region. Near the coast. The coast was most adaptive to the new European reality. Like you,\" Jessa added with a sidelong glance at Torah. \"Minimal accent, open to cultural diversity.\" She took a deep breath. \"Bona, you sister's husband, is from Austria Region.\" She took a deep breath. \"And your mother is from what used to be Poland.\"\n\n\"I didn't ask you to check into my family,\" Torah growled.\n\n\"I'm just trying to make a point,\" Jessa hurried on. \"Drau and his history - his real history - is pure Berliner Germanic. I'm sure of it. That is just highly unlikely if his family really came from a region that bordered on the likes of France and Belgium and the Netherlands. You've been to Summer's End. Region of origin goes out the window the first night there. I know the Circles are different, but they are no less aware of the need for genetic diversity.\" She noted the pulse at his temples speed up.\n\n\"So what are you saying?\" Torah demanded.\n\n\"Only that there is a reasonable probability that Drau is not who he says he is. That's as far as I've gotten with his history.\" She glanced at Erich and straightened in the seat. \"Your history is similar. Very Germanic. Probably Berliner Region...\"\n\n\"Don't you dare put me in the same lifeboat with Drau,\" Erich hissed.\n\n\"You told me to do the research,\" Jessa argued defensively, sinking back into the car seat. That lasted only a heartbeat before she was again leaning between the two front seats. \"I'm right, aren't I? I'm thinking somewhat north toward the Black Forest.\" She saw Erich's jaw set and Torah glanced toward her with a hint of respect, about the most he ever gave.\n\n\"I don't have an accent,\" Erich stated flatly, his eyes on the road.\n\n\"Everybody has an accent,\" she said in a softer tone. It hadn't been her intention to anger Erich further. She had slipped into lecturing mode, as if there were any classrooms anymore to be lectured to. \"When I hear you speak English, I hear too perfect, like someone who worked very hard to learned to speak the language to perfection. We, almost all of us in Europe, grew up speaking English well before we started doing coursework in the language of our ancestors. But we learned that English from parents who learned from their parents who learned from parents who originally spoke the language of their land of origin. Our accent is colored by that distant, if persistent, attraction to certain sounds, like a genetic memory.\"\n\n\"And you learned all this from your coursework?\" Erich demanded, though his sarcasm lacked a certain bite.\n\nJessa shrugged. \"I took a course in linguistics - Etymology, actually. But I became fascinated for a time after I read an old article about Native North Americans. The author had studied a vast number of pure or no less than fifty percent genetic natives, categorizing them by reservation born and raised or urban, and by whether they learned either their native language or a pan-tribal language from birth, or later by schooling or through cultural programs, or never at all. Or if their native language was lost forever. No native speakers or recordings or anything. His premise was that they all had a recognizable accent, major components of which were present regardless of regional English accents, and which often overrode any regional accent. For example, he cited a subject that was born and raised in Brooklyn, had never been exposed to his native Sioux language but had more accentual characteristics in common with an Inuit born and raised in Northern Alaska, than a fellow Caucasian Brookliner. He had a co-author whose specialty was around the biology of speech mechanics and brain language centers and the physical production of vocal sounds. Anyway, he was able to discount any physiological basis for the accents. Not to mention that fine permutations of the accents could be shown to vary from one tribal language to another. He was about to expand his research to Latin and South America when the pandemic hit,\" she added softly. \"I found the correlation to our situation fascinating and trained myself to listen for accents.\" She ducked her head. \"It was the first thing that drew me to Peter - Pietro. He had a strong Italian accent, because his ancestors came to English more recently than most of us.\"\n\n\"Even if all that is true,\" Erich demanded, \"If my English is so perfect, why would you decide that my original language is German? I could be a Russian or a Brit, passing as a Berliner.\" \n\nJessa kept her face a straight as possible, denying the urge to smirk. \"Because you speak French with a German accent,\" she replied, then hurried on. \"And when you speak German, it's flawless, not like someone who learned it as a second language.\"\n\n\"I thought you didn't speak German,\" Erich retorted, though it was to Torah that he threw a glower.\n\nJessa raised her hands defensively. \"I don't, save a word or two in passing. And I'm only slightly better at reading it. But when I was in the midst of my language fascination, I taught myself to listen for sounds, not words or grammar.\"\n\nTorah waved a hand between them, trying to disrupt an argument before it grew. \"So what did Drau's history say? He's no fool. There will be fact mixed in with fantasy. Fewer lies to keep straight.\"\n\nJessa closed her eyes, picturing mental screen shots. \"His father, Frederich, was a council member also. Bunch of Rhineland in hops and wine grapes, then he put the land under an Elite overseer and moved even further north to invest in shipping. Met his wife there, raised Drau there and in Dusseldorf when the council was in session.\"\n\n\"And you don't believe any of that?\" Torah asked.\n\nJessa shook her head. \"I didn't just look up facts. I mean, it's the internet, after all. Even if it's dark or classified by the Council, rumors abound. Frederich was considered an absentee landlord even before he joined the council. He was gone more often than he was at his manor on the lands and after he moved north, same thing. He invested in shipping, but no one could accuse him of micromanaging his investments. His absences were charged to Council business, but they were far greater than those of other Council members who lived outside Dusseldorf, including your father.\" When Torah scowled, she hurried on.\n\n\"His wife's history was quite vague. She was supposedly from the area of Bremen, orphaned at a young age, and very reclusive under the premise that her parents perished under traumatizing circumstances but I could find no corroborating information. The gist of it was that no one was surprised when she didn't appear in public very often, even on the few occasions that Frederich made appearances at his shipyards or Rhine valley manor, or even at his digs in Dusseldorf. No one was very concerned, because Drau - presumably with his mother - was keeping up and out-performing at his program work. When he turned twelve, he was a constant shadow of his father, again pretty much as was expected.\"\n\n\"So, what do you think?\" Torah asked.\n\n\"I need more time...\"\n\n\"I'm asking your opinion, not a recitation of facts.\"\n\nJessa rubbed her hands on the coarse pants Jacq had provided, trying to buy time. \"I'm not comfortable with speculation. My training screams against preconceived notions.\"\n\n\"Throw your training out,\" Torah said without inflection. He threw a warning look at Erich. Jessa glanced in the rearview mirror to see Erich eyes on her and quickly looked down at her lap again. She wasn't sure why Erich seemed so irritated with her of late, save maybe that he was being drawn into a situation he really did not relish, and blamed her for that. There, she realized ecstatically. She had just taken a giant leap of faith and speculated.\n\nShe took a deep breath. \"I think Frederich was really from Berliner Region and was set up in the Rhine Valley on the lands he took over. I think that maybe...\" She trailed off.\n\n\"We don't have time for coyness,\" Torah warned.\n\nJessa sighed. \"I kept asking myself what his reason for suddenly appearing in that area might be. Not that he doesn't have the right to move at will, but it all seemed to be wrapped in mystery, including the implication that the lands were originally owned by an ancestor of his. I traced back to before the plague. They were owned by an American, in the movie business. After the pandemic, a few people stayed on to caretake the place, figuring they were safer there. It appeared that Frederich showed up and claimed the land, but appeased the occupants by keeping them on and providing well for them. And the family history that he gave everybody certainly didn't have him arriving from East Germany.\n\n\"I think, too, that his wife was from the region of Berlin and that she was kept in seclusion because her English was so poor, which would mark her right away as not from Bremen. Even their servants were purported to have German accents. And Drau was obviously a German speaker before he learned English.\"\n\n\"What of Frederich, then, if a heavy German accent was so telling?\" Erich challenged.\n\n\"Apparently, he hid his better. Perhaps with intense training to be able to pass as a Rhinelander? The rumor was put out that Drau spent much of his childhood with his original wet nurse, who spoke mostly German, hence his accent.\"\n\n\"None of this makes sense,\" Torah complained. \"Why the subterfuge? The council for that area of the continent is made up of Berliners and Rhinelanders, as well as Austrians and others. \"What would be the purpose of hiding his origin? It's not like his homeland would impact his opportunity to get on the Council. Hell, they've been a few seats short for over a decade with all the health issues. They've had to open the seats up to wider and wider circles just to find competent Councilors.\"\n\nJessa sat back and wrung her hands. \"That's the mystery that I haven't unraveled yet. If you're trying to pull something over on the Council itself, you don't exactly post it on the Councilary Web.\" Jessa heard a faint growl from deep in his throat.\n\nWhat about this doctor he was trying to set us up with? Johnat?\" Torah asked.\n\n\"He doesn't exist,\" she stated flatly, then hurried on when he straightened in his seat abruptly. \"There's one thing that the Germans are really good at, well, more than one, but to my point, they track people really well. They might not have much more than a name, a date of birth, and a current location, but even lowborn can be found easily on a population list. I tried every permutation of the spelling of Johnat that I could think of, and even some that I couldn't think of. I couldn't find anything.\" \n\n\"Maybe he's within the city of Berlin. Maybe he's a Security Forces doctor,\" Torah suggested, leaning back slowly.\n\nJessa shuddered and shook her head in confusion. \"Why would Security Forces have an obstetrician on staff?\"\n\n\"They're often married. At least the officers are. Even they aren't free of the dictates of the Council to procreate. But they prefer to keep the rest of us at arm's length, so they maintain their own support systems wherever possible.\"\n\n\"But who do they answer to, if not the Council?\"\n\n\"The Council Agents evolved because the Security Forces were becoming too independent. They would accept the orders of the Council, as far as the desired end result, but they had become more insistent on choosing the means to meet the ends. So the council set up the training camps to funnel the best and the brightest into Agent career tracks and the not-so-dedicated or bright into Security Forces.\"\n\n\"Like Renik,\" she concluded. \"But that would mean the best and the brightest were also the more compliant. That seems... unlikely, given human nature.\"\n\nErich and Torah exchanged glances. When Torah seemed about to clam up, Erich jumped into the conversation. \"Council agents, especially team leaders, are often privy to information that is held very close by Council members. Things not even the highest Circles know, if they don't sit on the Council. Certainly, things that Security Forces aren't supposed to know or have access to. It makes it easier for Agents to accept the orders that are given, when they have all the background information and can understand the reasoning behind them.\"\n\n\"You're making it sound like someone has been giving Security Forces information they are not intended to have,\" Jessa said slowly.\n\nErich glanced again at Torah and cocked an eyebrow. Torah sighed, pulled in against his will. \"It goes both ways. Drau is our liaison, our handler, but I know he wasn't giving us information that we should have had.\"\n\n\"Because of what you knew from your father's network,\" Jessa concluded.\n\nTorah rubbed his face wearily. \"Yes,\" he conceded. \"By the same token, Renik and maybe others in Security Forces seemed to know more than they should.\"\n\nJessa gasped. \"Your agent, your teammate that was killed! Is that how he was set up? By Drau?\"\n\nTorah shrugged uncomfortably and Jessa suspected that it was because he blamed himself for not knowing the answer to her question. \"Perhaps.\"\n\nJessa sat back and said, rather sternly, \"I could probably help you more if you elaborated on what you suspect about the Security Forces. Who might be involved, where they are stationed. And if you think there might be other players besides Drau.\"\n\nErich glanced again at Torah, with a smirk that was much more typical of the Erich she had first met; the sort of friendly, teasing expression that made it really hard to remember he had an angry, violent side probably as lethal as Torah's. It earned him a scowl from Torah, but again, it seemed like a more comradely, teammates-type exchange. She dared to relax slightly. \n\n\"So what do you know about the Security Forces?\" Torah asked, his voice tinged with a touch of fatigue.\n\nJessa shrugged defensively. \"What you told me, and the stories that kids tell each other to scare themselves.\"\n\n\"You didn't research them?\"\n\n\"By the time I got to Paris and had access, it seemed like other things were far more important. And... the memories. No matter what you may think of my lethality, Torah, knowledge of vulnerable anatomy is in no way the same as actually killing Renik, or any other man. It was only fear for my life that kept me from throwing up all over myself. And I still...\"\n\n\"Fine,\" Torah snapped. \"You're not like me. I get it. So, tell her about Security Forces, Erich. You've been dying to bring her up to speed.\" And just like that, he closed his eyes and was snoring softly.\n\nJessa bit her lip. \"Maybe we should wait and let him rest.\"\n\nErich smirked, but it didn't reach his eyes, which were examining her in fine detail via the rear-view mirror. Jessa couldn't understand how he managed to stay on the road. \"When Torah decides to sleep, he sleeps.\"\n\nJessa sat back and rubbed her palms on the rough denim of her pants yet again. \"So how much do you know about the Security Forces?\" she asked softly.\n\nErich snorted, this time. \"More than I want to. I was in Security Forces.\"\n\n\"What? I thought it flowed the other way,\" Jessa exclaimed in confusion.\n\nHe shrugged. \"It doesn't technically flow either way, in the beginning. I mean, Council Agents and Security Officer candidates start out in the same training at the age of twelve. They're all Circles, mostly Tenth, by tradition more than anything else. I mean, they had the brains and could be trained for the brawn, but they often didn't have the land or resources to derive and maintain wealth because their folks were Agents or scientists or what have you. Torah was more of an exception, than a rule. He came down from scientists, but there were some pretty clever descendants along the way, who knew how to turn the world's disasters into profits. Rumor has it there was also some pretty ruthless players along the way.\" He paused. \"He didn't want to become an Agent. Did he tell you that?\"\n\n\"No,\" Jessa replied softly. \n\n\"His father convinced him, eventually. Wealth is one thing, but power... Power can get you things that wealth can't even dream of. Still, he held out for a pricey bribe before he let them know he was coming on board. There was never any doubt in their mind or in his that he would become an Agent.\"\n\n\"But you, I mean, he told me that Renik washed out. Is that, you know, what happened to you?\" Her eagerness to hear the answer only barely outweighed the cringeworthy question.",
        "Erich's scoff had a tinge of bitterness to it, but his voice betrayed nothing. \"I never wanted to be an Agent. Like hell I was going to go through life without the pleasure of women. Once you're an agent, if they catch you at even a one-night stand, you can get slapped with interminable desk duty. Can you just imagine women all over the countryside being put in jeopardy like you were with Renik?\"\n\n\"But Torah,\" Jessa whispered.\n\n\"Yeah, well, like I said, Torah plays by the exceptions, not the rules, and while he may not have as much power as his father did, he's got power enough.\"\n\nJessa glanced at Torah, but he still seemed to be sleeping, and Erich betrayed no concern over whether he heard the comments. She decided this must have been something they'd hashed out some time ago, and maybe explained the mixture of emotions Erich seemed to have toward her. \"Frankly,\" Erich continued, \"What you said in Paris explained some stuff. Or at any rate made more sense that what we'd been told. It's no secret among the Circles that we're in deep genetic shit, but of the entire team in Dusseldorf, Torah should have been the least likely candidate for marriage. Being an Agent is a hell of a lot more than just spy games and shoot-em-ups. There are far more desk jockeys than field agents. Any of them would have been a better candidate than Torah. Hell, I bet Drau wouldn't even recognize some of them as agents, let alone some outsider trying to get leverage over an Agent.\"\n\nErich scoffed bitterly. \"They had the audacity to suggest that if it went well, other Agents would be allowed to marry or take mistresses. Hell, the Brits do, and Jacq and some of his men. But obviously it was only to hide the real reason that you and Torah needed to be together.\"\n\n\"Erich, why did you leave the Security Forces, then, if that's what you wanted?\"\n\nHe eyed her for a long time through the mirror, then sighed. \"Drau. He pulled me out and made me an offer. Then he made clear that there was only one answer to the offer. I still don't know why. I was a couple of years behind Torah in training, but I knew of him, knew he'd been given the elite team even though he was barely out of training, knew I could work with him.\" He shrugged. \"I figured it had to do with politics. Torah was deep into that because of his father. And Drau, well, it goes without saying. I wasn't interested, so I admit I didn't ask enough questions, especially at first, when Drau seemed to want to pick my brain about the Special Forces stationed in Berlin, the officers I worked under.\"\n\n\"But he was on the Council. Surely, he would have access to troop rosters, ranking officers, all of that,\" she protested.\n\n\"That's what I mean. What he was after, as far as I could tell, went deeper. And I suspect he picked me because of my boyish charms... And my ability to blend into the woodwork when people are talking carelessly about things they really should keep hidden.\"\n\n\"Well, I can't speak to the other, but you certainly do have boyish charms,\" Jessa agreed, earning an elfin smile from Erich for the first time in a long time. She smiled in turn, but then quickly returned to the more serious matter at hand. \"Do you think he got what he wanted from you?\"\n\nErich shrugged. \"I don't know. I gave him mostly drivel, true but meaningless, least as far as I knew. Once I was confident I could trust Torah, we discussed more of what I'd heard and seen, but neither of us could figure out exactly what Drau was angling for. Most of the time, Drau has me sitting in Dusseldorf monitoring Special Forces transmissions and translating or deciphering communications. As you so accurately deduced, I am highly fluent in a number of languages, though apparently not as fluent - and accent-free - as I thought.\"\n\nJessa ducked her head. \"It's only because I was listening for it. It took me a long time to learn how to listen for the sounds without getting caught up in the words and nuances and double-entendres.\"\n\n\"Maybe you should have been a spy or Council Agent,\" Erich suggested, his face totally serious in the mirror.\n\n\"I guess I am, now. What else can you tell me about the Forces? Help me understand. What was your rank?\"\n\nErich shifted into a more comfortable position and launched into a monotone recitation that Jessa suspected was intended to hide his feelings and perceptions of the world he'd been immersed in during the waning years of his training and then young career. He entered the service at the usual age of eighteen - following the six years of preparatory training and schooling - as a lieutenant, but was quickly promoted to captain, though he was never assigned a unit to command, even from a distance. His duties consisted of serving higher ranking officers, allegedly as a secretary of sorts for confidential matters, but behind the scenes, as much for his verbal and body language skills. In occupied Berlin, for example, many of the troops were Berliners, and Erich's command of German sent him hobnobbing with the enlisted men in beer clubs, checking on morale should anyone inquire, though his commanders made no secret of the fact that he expected him to produce more \"juicy\" rumors at least occasionally.\n\nOver the next couple of hours, he detailed the rankings and general duties of each position, and the cities where the Command Centrals were located. Jessa's education had merely mentioned Special Forces as people charged with maintaining borders and refugee movements. They might occasionally perform some security-related service for the small towns that served as food and goods hubs to the largely rural populations, and she now knew that they were an erstwhile presence in the occupied sections of old cities that stood as Council Seats. But as Erich listed off the old cities that were being used as Security Force bases, she began to wonder if there were any old cities that didn't have occupied sectors. His list included St. Etienne, which was where they had presumable sent their cell phones on their way back to Dusseldorf, and Toulouse which they were headed in the general direction of now. She knew there had been tense negotiations with refugees from both Spain and Italy, so perhaps she should not have been surprised that Special Forces maintained a presence in border cities along the southern front. Or for that matter, along the northern seas, not really that far from where Summer's End had celebrated the coming of age of Elites each year. It was a very poorly kept secret that what was now Russia coveted access to more southerly waters and it wasn't going to get that through the Black Sea or the Mediterranean any more. But more to the point, why Berlin? Why Munich? Why Geneva? Those weren't on borders. And just how expansive were the Special forces?\n\n\"So how many people are in the special forces?\" Jessa asked with foreboding.\n\n\"One point five million, according to internal numbers,\" Erich replied.\n\nJessa's jaw dropped. \"Where does the money come from?\"\n\n\"Ah, that's the question to ask,\" Torah cut in. Jessa spun around to look at him as he moved his seat into an upright position, looking totally refreshed.\n\n\"I hate you,\" she muttered, and he grinned.\n\n\"Maybe you just took the wrong programs. Deep Meditation instead of Astrophysics for example?\"\n\n\"I can find my way to North America from the middle of the ocean,\" she argued.\n\n\"Yes, and you can tell me why Saturn has rings. Doesn't really help at the moment.\"\n\n\"And if I can tell you where the money comes from?\"\n\n\"Now that would be useful,\" he conceded.\n\nShe unbuckled her seatbelt and squirmed into a more comfortable position, then quickly re-buckled it when she glanced up and saw Erich glaring at her in the rear-view mirror. As she thought about it, if he was going to drive with his eyes on the mirror more than the road, the seatbelt was probably a good idea. She dove into a long, involved answer.\n\n\"When I was trying to find my way around the Councilary Web, I found myself tripped over onto the dark web on more than a few occasions. There were a lot of transitory black market and contraband sites. It dawned on me that it was too often to be a coincidence. The links were usually hidden, not old broken links that had been redirected.\"\n\n\"If they were hidden, how did you find them?\" Erich questioned skeptically.\n\nJessa looked at him with a frown, then caught herself. \"I was mostly looking at the code, not the screen shots. I was more interested in the... intent, I guess you could say. What the coder was trying to accomplish with the site.\" She sighed, trying to think of how to explain. \"The Councilary Web is informational, and minimally so at that. Like a Council's calendar page. If you have a reason to know, you go straight to the page. There aren't going to be any cutesy flowers or scrolls. Just a grid of dates and a bare outline of agendas. The agendas don't link to anything because either you are supposed to know what's going on, or you're not supposed to know anything about it. When you look at the code for a page like that, you can tell at a glance. So when I found a page that wasn't straightforward, it would make me curious.\"\n\n\"Of course it did,\" Torah muttered, but he readily signaled her to continue.\n\nJessa shrugged. \"The more complex the coding, the more likely there were to be hidden links. I had to follow them,\" she argued defensively and Erich snickered. \n\n\"Which did you prefer, the hookers or the gambling dens?\" he chided.\n\nJessa smiled to herself. \"Actually, neither. There was one site I found of particular interest. You had to find the 'doorway' to get in, and that portal kept moving, but behind the doorway, it was huge. And it felt like you could buy anything on that site. The currency is a sort of reinvention of the old Bitcoin, and I won't even begin to try to tell you how they've hidden that 'banking' site.\"\n\n\"So how did you keep finding this site?\" Torah interrupted, apparently well away of the underground currency. \"Was it like an algorithm, or something?\"\n\n\"No, actually. I just learned where to look for the links to the doorway. On the Councilary web, the graphic objects are almost always embedded rather than called from a library, one of the reasons a heavily, but unnecessarily, graphic page seemed out of place, especially if it is a page that regularly requires updating.\" She shrugged. \"So I'd look at the code, and there would be a hidden link, hidden in the middle of a picture, except the link 'hit' spot would be barely more than a pixel or two smack in the left eye of a person in the picture. The link would take you to the doorway. But to get through the door, you had to have an account and password. You couldn't get that until you'd given them a verifiable Bitcoin account. With a substantial balance.\"\n\n\"Do I want to know how you accomplished that?\" Torah asked.\n\nJessa bit her lip. \"Probably not.\"\n\nTorah shook his head, but encouraged her to continue. \"So this Bitcoin is where the money is coming from?\"\n\n\"Not directly. It's the stuff that's for sale on the site, I think.\"\n\n\"Like drugs?\" Erich offered.\n\n\"I would think that if they were selling drugs it would be in a more wholesale way than what is available on this site. There are those too, and it might be worth pursuing. They would certainly have the infrastructure to mass produce in all those cities. I was thinking more of antiquities, art, that sort of thing, though.\"\n\n\"Antiquities?\" Erich scoffed. \"You mean like mummies for sale! Get real.\"\n\n\"I've seen it, have you?\" she demanded.\n\n\"You've seen a website. Who'd pay for such a thing, anyway, in this day and age.\"\n\n\"People with too much money and too little to do,\" Torah muttered. \"What kinds of things and for what kind of money?\" he asked.\n\n\"Pretty much anything you can imagine from anywhere in the Mediterranean area. Imagine every museum in Italy being ransacked. And just about anything left in the Middle East after the NeoCrusades. The Grand Egyptian Museum. Even whole slabs of painted stone from the Egyptian tombs.\" She took a deep breath. \"I even saw a piece of the Rosetta stone.\"\n\nErich snorted and shook his head in derision. \"You saw a picture of a piece of the Rosetta stone. Anyway, I thought it was still in Britain, so it was probably a chunk of the copy they made for the Egyptians.\"\n\nJessa shook her head. \"The stone was secretly in transit to Egypt by a replica of an ancient sailing ship. To be formally repatriated; you know, the ship would sail dramatically up the Nile to Memphis and deliver the stone. It had supposedly reached the Mediterranean when Alexandria and the other port cities like Rosetta were closed by the pandemic. By the time the captain realized they were never going to be able to enter Egypt, the Suez and Gibraltar were blockaded. Rumor has it that the people on the ship anchored it and fled ashore in skiffs. It's doubtful they ever made it back north. The story proposed on the website was that the ship broke loose in a storm and crashed ashore somewhere, smashing the stone. I know it doesn't seem likely, but...\"\n\n\"Even if you bought the thing, how would you ever know if it was real?\" Erich complained.\n\n\"That's not really the point, is it?\" Jessa snapped testily. \"It's the money. And the fact that someone is going into the most dangerous part of this contaminated hemisphere, apparently with impunity.\"\n\n\"Or someone tore pictures out of an old encyclopedia,\" Erich pointed out.\n\nTorah waved away Jessa's retort. \"What are you suggesting?\" he asked, turning toward her.\n\n\"Either someone with the protective equipment and medical resources of the Special Forces, or someone who knows there is no danger, other than an itchy mosquito bite.\"\n\n\"And maybe those two someones are the same,\" Torah concluded.\n\n\"You're buying this?\" Erich blurted. \"Is that why you're taking us into the heart of the dead zone?\"\n\nTorah shook his head at Erich in some unspoken communication. \"How much money are we talking, here,\" he asked Jessa, though his eyes were on Erich.\n\nJessa closed her eyes, calculating. \"Given the inventory I saw on the site, the apparent turn-over, allowing for maybe fifteen percent haggle reduction, the currency conversion... It might average out to eight hundred thousand Euros a month...\"\n\n\"That's a drop in the bucket,\" Erich snorted.\n\n\"...From that one site. There are others. And other markets. Gems, gold, fossil fuels, tropical foods, spices. There was a site devoted to weapons - major weapons - that might have been recovered from the Middle East. Suppose the ancient Silk Road roared back into existence? Except without the pirates and roadside bandits. Torah, I've bought silk dresses and olives and mangoes in Paris. You offer someone a rich, rare luxury, they're often not too inclined to ask questions. Then there's opium from old Afghanistan or the Union of Stans, or whatever is left of that region.\"\n\nTorah looked at Erich. \"Do you want me to drive for a while,\" he asked so suddenly and incongruously, Jessa could only stare at him.\n\n\"Yes, because you're giving me one hell of a headache,\" Erich growled.\n\n****\n\nJessa was dozing when the irregular thunking of the potholed road was replaced by the crunching of a gravel drive. She sat straighter in the seat, rubbing her eyes. Torah was still driving and Erich was asleep in the passenger seat. They were pulling up to another decrepit rural house. Torah pulled around to the back of the house to hide the car from whatever traffic wasn't driving up and down the old road. It actually didn't look like it had gotten all that much use back in the day, even.\n\n\"Wait here,\" he told her softly, though Erich immediately stirred and growled softly at the sight of the old house. She figured Erich must have taken the same sleep class as Torah to learn how to exist on just a couple hours of sleep for who knew how many days in a row. She was going to have to check into that and see if there really was such a program.\n\nDespite Torah's orders, she climbed out of the car and studied the house. Was there some clue to indicate that it was occupied, at least occasionally? Wires draped down to the ground from a tilted utility pole near the highway. There wasn't as much vegetation as what covered the previous house, but this growth seemed no less invasive, even climbing inside through a broken window. She studied the yard about the house. There was no way the house could be on a sewer system after all these years, if it ever had. If it was on some kind of septic system, there was certainly nothing in the yard that was thriving from a drainage field that had seen active use. Yet once again, when Torah reappeared and waved them into the house, a handful of rooms in the house showed signs of frequent, if not continual occupancy. And this time, she could smell something hot and yummy baking in the oven. And yet, despite the welcoming interior, and a bottle of wine prominently displayed on the counter in an iced marble cooler, she found herself looking for the computer room. Torah pointed her toward a staircase leading down to the basement. Jessa gave an involuntary shudder, but technology was calling her name, and she trotted down the stairs, pleased to find, not only a computer room, but a bathroom. The bathroom even had a bud vase with a rose in it. Obviously, whoever had prepared the house for their arrival had been told to expect more than just the usual Agents. She stared at the rose and wondered ever so briefly if it was Jacq's way of forgiving her for everything she'd put him through. She decided to take it as that, even if it was simply meant to hold musty basement odors at bay.\n\nShe had barely fired up the server and satellite connection before Torah appeared with a glass of wine and plate of crackers and cheese for her. He remained, leaning over her shoulder, undoubtedly bored as she ran checks for malware, keystroke loggers and spyware. Anything she could think of that might betray their location, even if only by IP address. Through it all, Torah said nothing, though she became conscious of his warm, somehow minty breath falling softly on the juncture of her neck and shoulder. It reminded her of how long it had been since she'd seen a toothbrush, let alone toothpaste. She determined to find his stash and steal it before the sun rose again. She even smiled to herself over her evil plans as her fingers flew over the keyboard and she scanned the three large screens continuously.\n\nTorah was insistently thrusting a thick slice of aged cheese, on a wondrously crunchy cracker, between her lips as she tried to speak around the obstacle. \"There, shhhee,\" she exclaimed, shoving the cracker into her mouth to keep from having it crumble into her lap. Torah was already looking at the appropriate screen. Jessa clapped a hand to her mouth as if that could somehow capture the glorious flavor of cheese straight from the earthen vaults of the aging cavern. When she finally chewed and reluctantly swallowed, after a moment of worship on the center of her tongue, she pointed at the screen.\n\n\"That's fucking Tutankhamun,\" Jessa spluttered.\n\n\"Looks like a necklace to me,\" Torah pointed out.\n\n\"It's one of his pectorals, with his Prenomen or something,\" she said. \"I can't remember what it's called, but I know it.\"\n\n\"Okay, well, since Erich isn't here, I'll be the skeptic. How do you know?\"\n\nShe pointed at the screen with an impatient finger, as her other hand enlarged the image. \"See that chip in the enamel?\"\n\n\"The blue stuff?\" he asked.\n\nJessa rolled her eyes. \"Yes, the blue stuff. This was always photographed very carefully to hide the chip as best as possible. You know, vanity even 3000 years after the fact.\"\n\n\"Still not getting it,\" Torah replied, studying the screen, nonetheless.\n\nJessa tried to hide an impatient sigh. \"In most any photograph you would find, you would have to look really, REALLY, close to see the tiny corner of the chip. If you had access to the photos any Egyptologist or curator would have taken, there would have been a full-on of the damage, to record it, so they wouldn't get blamed for it later. This is the sort of photo taken by someone who is just saying 'Here it is, take it or leave it.'",
        "\"Okay,\" Torah agreed tenuously. \"Given that process, how can we get from here to who has it and how did they get it?\"\n\n\"I want to buy it.\"\n\n\"Excuse me? What is that price in real money?\" he asked, pointing at the value figure on the screen.\n\n\"It doesn't matter,\" she replied, studying other screens.\n\n\"A dress in Paris doesn't matter. King Tut's jewelry might matter.\"\n\nJessa rolled her eyes, without really taking her attention from one of the other screens. \"It's not your money.\"\n\n\"And whose money is it?\" Torah asked with a hint of his ominous voice.\n\nHe suddenly had Jessa's full attention. She straightened in the chair, rolling her shoulders back as she considered how to answer. \"I sort of created an alter ego. It's what I do when...\"\n\n\"Yes?\" he prompted, quietly.\n\n\"Well, when I need to be anonymous. I'm sure your people do it all the time.\"\n\n\"I'm sure,\" he agreed. But they don't have - what? - six hundred thousand Euros to spend.\"\n\n\"Um, seven hundred eighty-five,\" she whispered.\n\n\"And where did your alter ego get that kind of money?\"\n\n\"It's not real money, she said with a shrug, as if to brush it off. \"It's all electronic, you know, ether.\" She added a wave, hoping to deescalate the conversation, but realized instantly that the wave fell as flat as the shrug. She could feel Torah tensing beside her. \"What do you care? They are criminals,\" she argued, changing tack. \n\n\"Real people invest real money in this particular ether,\" he replied, his voice low. She realized he knew much more about the Bitcoin reincarnation than she had given him credit for. \"You're suggesting torpedoing the value of their investment just as the stock markets are beginning to come back on line in any real fashion.\"\n\nShe was about to snap \"For the Circles,\" but bit her tongue before it started a whole new argument. She took a deep breath instead. \"Technically, they're investing in the internet company that has created the 'bank' and tracks the transactions, keeps everything moving smoothly. They've made the choice to invest in a company whose mission is anonymity.\"\n\n\"I didn't say it was a wise investment. And your little trick, when discovered, will destroy a nascent company and its technological infrastructure.\"\n\n\"I'll make you a deal. Let me buy this and see where it leads us, and I'll let... the company... know how I did it. And how to prevent it in the future.\"\n\n\"You can do that? Reach out to the company? Not just the storefront?\"\n\n\"I said they were a nightmare to track down. Not impossible. Obviously, I had to get inside to 'move' funds into my account.\"\n\n\"Funds from where?\" he demanded, not missing the sharp edge of sarcasm to her statement.\n\nJessa shook her head slightly. \"Torah, please,\" she begged. \"Don't ask questions you don't want to hear the answers to.\" Then she immediately cringed, waiting for the explosion to come. She tried to catch a reflection of his face in the monitor screens, but the light was all wrong. She couldn't see more than a shadow that had gone impossibly still.\n\n\"Stand up,\" he said in that deathly quiet voice. She'd learned, over and over again, that disobedience brought even more painful corrective lessons. She stood, albeit slowly, turning toward him with her eyes downcast, not that she thought for a moment that a penitent fa\u00e7ade would appease him. He took her shoulders and spun her back toward the desk. \"Bend,\" he commanded harshly, pushing her over none too gently. His hands moved to her wrists and he leaned over her, pushing her even farther down as he molded her hands over the edge of the desk. \"Don't move,\" he ordered, his mouth next to her ear as he satisfied himself with the position of her arms. Then he straightened suddenly and yanked her hips back, so that she was stretched taut and had to hold tight to the desk to obey his command.\n\nJessa's pants and panties were pulled down even as his foot swung side to side, kicking her feet wide apart, preventing the clothes from descending past midthigh. There was a long moment of silence after that. Jessa didn't dare raise her eyes from the floor before her, or ask a question. Even though only her ass had been uncovered, she felt totally exposed, waiting to find out how angry he was, how much he intended to hurt her this time. Would it always be like this? Whenever he started seeing her as something other than just a vessel for his seed, she would relax her guard and say or do something that would bring out the angry Torah.\n\nHe was suddenly leaning over her again; his weight, his steely hardness pushing down on her spine, arching her back. His hands gripped the desk, covering hers, his hot breath washing over her ear. His voice had returned to the soft, cold tone that was far more frightening than if he had screamed at her. \"When I ask a question, you will answer,\" he instructed, in the same quiet voice. \"When I ask for an explanation, you will elucidate, without sarcasm, until I understand. Before you undertake questionable activities, you will ask permission. Do I make myself understood?\"\n\n\"Yes,\" Jessa whispered. She attributed the tremble to the position he had put her in and the weight against her spine. Just a suddenly, he straightened, and Jessa heard a rustle behind her and the unmistakable sound of a belt being pulled free. Inexplicably, she steeled herself, hoping that if she bore his wrath well or at least stoically, he would return to the more amenable Torah that much sooner. \n\nThere was another long moment when nothing happened, then she felt his hands on her hips again, sliding slowly down over her bared skin, his thumbs tracing her tailbone and then down the fully exposed crack of her ass. Despite her stoic pledge, Jessa gasped softly. It was not the contact she had expected, but she knew how effective the shock value of contrast was. She locked her elbows, shoulders and knees.\n\nSuddenly, he was pushing inside her, not forcefully, but inexorably, until he had reached the very depths of her belly and stopped, his cock twitching and her pussy throbbing in response. Jessa held her breath, her mind spinning with confusion. How was it that her pussy was wet and ready, when she was so sure a beating was coming? And how had she not been aware of her betraying arousal? Worse, if Torah didn't know before from his touch trailing down her ass or her musky aroma, he certainly knew now. \"Breath, Jessa,\" he commanded, and she dipped her head. Of course he knew. There was nothing he didn't know about her. She could be miles away and roll her eyes. He would know. And at that moment, she made the connection. It wasn't the anticipation of punishment, of pain, that aroused her. It was simply that he knew her so well, so intimately. Whenever he was near, she wanted him inside her, utterly necessary to her completion. Even angry Torah, she realized with horror.\n\nHe leaned over her again. \"Breath,\" he repeated, and in his voice, she heard the surety. He knew exactly what was racing through her mind, even as her pussy ached for him to move. \"You want respect,\" he stated, tonelessly, then suddenly shoved impossibly deeper into her. \"Then give respect,\" he snapped, straightening and pulling almost all the way out, then slamming back in. Jessa gasped, then solidified her position, daring him to give her more. She could sense his grin without turning her head to look. His fingers laced in her hair and yanked her head up, arching her back. She understood. This was for his pleasure and he wanted her deep and hard. She smiled. She didn't mind. It was fast becoming a truism that what brought him pleasure, fed hers. She held firm as he pounded into her, savoring the soft sounds he made in his orgasm even as a sparkling blue electrical field seemed to envelop her from foot to fingertip. Some might have thought it was just a screensaver kicking in on the monitors before her. She knew better.\n\nWhen she began to recover, she found herself on her back on the floor of the computer room, her head in Torah's lap. He was running his fingers through her hair, watching her, his face no less serious, despite the last few minutes. \"Is it always going to be like this?\" she asked.\n\n\"Like what?\" he asked with an innocent shrug. She grimaced, but with a soft, well-pleasured sigh. \"So where did the money come from,\" he asked, back to business.\n\nShe shifted uncomfortably, and he looped an arm across her chest, keeping her flat on her back, giving baby making every opportunity. \"I found a slush fund. I hid the transfers out by making them look like purchases similar to those that had been made earlier. It looked like a number of individuals had access to the account, so they would hopefully assume one of the others had made the purchases. Even if they figured it out, who are they going to complain to? They would have to admit that some of the illegal purchases were real.\"\n\n\"Who's slush fund?\" he persisted.\n\n\"Um,\" she hesitated and his arm tightened about her. \"The Council,\" she hurried on. \"The Dusseldorf seat.\"\n\n\"Explain.\" His soft tone was belied by the set of his jaw.\n\n\"Not all of the Council, I don't think. I sort of back-traced the 'shopping' and there were definite interests and fingerprints, of maybe five individuals. Of course, others may know. Or not realize that their slush fund is being spent on such things.\" \n\n\"How do you know it is the Council?\"\n\n\"There is a currency exchange of sorts. If you want to deal in Bitcoin, you purchase x amount of buying power to spend with sellers willing to take bitcoin value for their goods. You purchase that x amount with real Euros. Or, you 'sell' goods for bitcoin value, like gold, diamonds, weapons, even uranium. And, um, slaves.\" She would have sworn Torah actually paled, though he didn't say anything. She hurried on. \"I looked at some of the more recent incoming value to the slush fund. Some of it was in Euros that could be traced back to Council accounts.\"\n\n\"Really,\" Torah said and it was a statement, though she treated it as a question.\n\n\"Yeah. It's not that unusual, actually, for people with a lot of money, as opposed to real property, for example. After the pandemic, no one has trusted official currency completely. Bitcoin has been one way of hedging bets. I mean, all banking, all transfer of funds, now, is done through technology, so why not something called Bitcoin, as opposed to the Euro or the dollar? They used to complain when currency was no longer backed up by gold.\" He released his hold across her chest. She sat up with her back against the wall next to him. \"Now, no one knows what the value of an electronic blip is, or more to the point, what it will be tomorrow. And who wants to go back to carrying gold coins around?\"\n\n\"So you stole from the Council,\" he again stated as fact rather than question.\n\n\"Not all of the value of the account was from presumably legitimately acquired Euros.\"\n\n\"Oh?\" He was back to asking questions.\n\n\"The things sold on the dark web for Bitcoin, between anonymous buyers and sellers, well, it's pretty safe to assume the transaction involves items that aren't supposed to be bought and/or sold, or not the seller's item to sell. I mentioned uranium before. Weapons. Land.\"\n\n\"Land?\"\n\n\"Land in Italy, in fact.\" Jessa held her breath.\n\n\"What else do you know?\" he said softly.\n\n\"Not enough. There just wasn't enough time, and really, by definition, stuff happening on the dark web is pretty much all shady.\"\n\n\"Then you need to learn more and fast,\" he said, using the wall at his back as a brace to rise gracefully to his feet. He reached down and helped Jessa up, gesturing at the monitors. \"I'll see where dinner is at.\"\n\nHe turned to head up the stairs, but just then Erich came clattering partway down them, throwing a bundle at Torah, who caught it without comment and stripped Jessa's jacket free from the outside of the bundle. \"Trouble coming,\" Erich muttered before disappearing back up the stairs.\n\nTorah had unwrapped his own jacket and was tucking the inner contents of the bundle into various pockets. As he tucked a gun into his belt, he nodded toward her. \"Might want to pull your pants up,\" and Jessa blushed redly.\n\n\"I need to clear the computer,\" she said, turning back toward the desk, but he grabbed her wrist and pulled her stumbling toward the stairs. \n\n\"No time,\" he said calmly. When he had pushed her in front of him toward the landing, he paused long enough to toss something into the computer room.\n\n\"Torah, what...\"\n\n\"Move it,\" he snapped with a hard push and then a grip on her arm to keep her upright.\n\nThey reached the kitchen and Jessa noticed with dismay that the delicious smell was still entrenched inside the oven. \"How do you know how much time there is?\" she asked, turning toward him as she wrestled with the fly of her pants. In answer, he threw her over his shoulder and she was roughly jounced as he ran for the door. Around his side, she could just make out the car, with Erich at the wheel, spinning in a wide circle toward them, spraying gravel. Then everything happened at once. Erich screeched to a stop and she and Torah were slammed against the car by an immense blast just behind them. The sound, the hot blast of the explosion and a storm of flaming shards hit her all at the same time. Jessa brushed furiously at an ember that had caught in the collar of her shirt and was burning its way through to her skin. Torah had already recovered his balance, yanked open the back door of the car and was throwing her inside. Her jacket followed, covering her face. Erich had the car moving again before Torah was even entirely inside.\n\nBy the time she got disentangled from the jacket and her legs out from under Torah, he was already reading a text on the phone Erich had handed him. Jessa brushed embers from his hair, wondering how he could be oblivious to them, then stared out the back window of the car, watching the conflagration that had enveloped the farmhouse so utterly, as it disappeared rapidly into the distance.\n\n\"What is it?\" she asked softly as he snapped the cheap phone shut. He shook his head, but she just looked at him until he relented and handed the phone over. \"Thank you,\" she murmured as she opened the cover. She glanced at the text still on the screen, her brow furrowed. When she looked back at Torah, he had a very faint, but unmistakably wry smile on his face, daring her to make sense of the cryptic message.\n\n\"Fasten your seatbelt,\" he told her with a nod toward Erich.\n\nShe complied, still studying the text. 'D nos, A71 2 20, 10 out, GP, Comm SF TL;MP;SE scram.'\n\n\"What's our charge?\" Torah asked Erich.\n\nHe threw a scowl over his shoulder. \"Not nearly enough. It wasn't even plugged in for an hour. Hope you brought your walking shoes.\"\n\nTorah sighed. \"Well, obviously Montpellier is out.\"\n\n\"If we backtrack over the mountains to Avignon, we might find something seaworthy to take downriver to the Med, but...\"\n\n\"I know. I'm not crazy about hiking over the mountains this close to winter, even if it makes it harder for him to find us.\"\n\n\"Not to mention burning through whatever juice we have even faster.\"\n\n\"For who to find us?\" Jessa interjected.\n\nThe shadowy wry smile was back. \"Didn't you read the message?\"\n\nJessa scrunched her nose. \"I could use a hint.\"\n\n\"It's a standard tracking message,\" Torah said, mocking her earlier sarcasm.\n\n\"Wait. Tracking.\" She closed her eyes, searching her memory. \"Target, route, distance or time, transport modus, um...\" She looked at the text again. \"D. Drau. Drau knows.\" Torah nodded in admiration. \"So route could be A71 to A20. He's headed south?\" She looked at Torah for confirmation. He merely cocked an eyebrow. \"Toward us,\" she added softly. \n\nIn the front seat, Erich snorted. \"How about that. She has studied the old road maps.\"\n\nIgnoring him, she glanced back at the phone. \"So this next must be ten hours out, right? I mean, if it was ten kilometers, you wouldn't have been in such a hurry. Unless... Ten kilometers from the house?\" she asked, paling.\n\n\"Well,\" Torah drawled, studying his fingernails. \"The message was from Jacq and in his world, everything revolves around Paris, so I think it's safe to assume he meant ten hours out from Paris.\"\n\n\"Oh,\" she said softly, looking at the screen again. \"So GP is gas-powered. To be able to travel far and fast,\" she quoted Torah's statement explaining his need for a gas-powered car. \"But I don't get the rest of this. Except scram. Was that why we had to leave so fast?\"\n\nTorah rolled his eyes, again mocking her and she began to understand why he had found it so annoying when she had done it. She threw the phone at him, only half in play and he snatched it out of the air. \"The last section of the tracking message. 'Who else knows.' Communications. SF - Special Forces. TL is Toulouse, SE is Saint-Etiennes. I have to assume MP is Montpellier, though a base there is news to me. Scram means scrambled. He doesn't know what was sent, but I think it's safe to assume it was orders to look for us.\" He handed the phone back up front to Erich.\n\nJessa flashed on memories of being taken captive and brutalized by Renik. Torah reached over and squeezed her hand, ever so briefly, but she understood. This time, he was here. With her. She still needed to be strong, but not by herself, not this time. \n\n\"Two roads diverging in the woods,\" Erich announced, slowing. \"Decision time. The one less travelled by?\"\n\n\"No,\" Torah said calmly. \"Fuck it. The last place they're going to look for us is in their midst.\"\n\nErich cocked an eyebrow, but he accelerated, continuing on down the main highway, though he extinguished the headlights. Like Erich, Jessa kept her silence, but her heart did a bit of a flipflop. Then Torah was pulling her against his shoulder. \"Don't worry, I have it on good authority that the Special Forces have excellent computer equipment.\" She noticed Erich rolling his eyes before she closed hers and willed herself to sleep, not daring to wonder when the next chance might come along.\n\n****\n\nWhen Jessa opened her eyes again, the car was rolling very quietly and bumpily along a dirt track that probably hadn't seen a car in forty or fifty years. At some point, Torah had taken over the driver's seat and Erich was exhibiting that amazing ability of theirs to sleep wherever, whenever, curled in the passenger seat, belt unfastened, she noticed with a sniff. She leaned forward and glanced over Torah's shoulder. The battery gauge was pretty much flatlined, the car still moving by Torah's strength of will alone, as far as she could tell. The only light was provided by an almost full moon. When the car finally ground to a stop, refusing to go another inch, Jessa climbed out and navigated the ancient ruts nestled between walls of overgrown trees and stared at the night sky. Part of her brain was calculating directions and times, but most of it was simply adoring the beauty of the swath of stars that she could see. It had been early on in Paris since she had simply stared at the night sky for the sheer beauty and magnitude of it.\n\nWhen she returned to her present reality, she looked around to find that Erich and Torah were pushing the car toward what she had only just realized was a small lake. She hurried to catch up and help, though it earned her a scowl from Torah. Still, he didn't command her to stop 'exerting' herself and she counted that a small triumph. \"I don't suppose there's time for a swim,\" she said sadly, knowing the answer. \n\nErich looked at her in disbelief. \"You do know it's winter, right?\"\n\n\"Not officially,\" she pointed out.\n\n\"Save your energy for hiking,\" Torah told her. He had stopped pushing and was retrieving provisions and backpacks from the trunk of the car as it tettered at the edge of a sharp slope into the lake. When they went back to pushing, and Jessa jumped to help, Torah shoved canteens in her hands. \"Fill these and put the potable tablets in.\"",
        "She pretended not to realize that he was getting her away from the car and any danger deep-sixing it might present. He was trying, she could too. She obediently found a spot on the shoreline where she could kneel on a rock and fill the canteens. Even as she carefully removed the potable tablets from the waterproof wrap about the canteens, she wondered to herself just how much lake water she had swallowed in her years of swimming, all without so much as a stomach cramp. But she was compliant Jessa, now, determined to keep earning Torah's respect. Not blindly obedient, she told herself sternly as she walked back to where the men were catching their breath. Just respectful. Like teammates are. She even smiled at him as she handed him a canteen. He cocked an eyebrow at her in curiosity. Maybe he didn't know absolutely everything that went through her mind, she thought as she turned away with a secret smile.\n\nShe was immediately disappointed to realize there were only two backpacks, but as Torah shrugged into his, he put a hand on her shoulder. \"You really are our navigator now. We didn't dare use GPS in the car or with the phone.\"\n\n\"But how did you find the lake?\"\n\n\"I saw it in the moonlight when we came over that last ridge. From here, it's up to you. Get us to Montpellier. Avoid roads, open fields, rivers. You can do all that, right?\"\n\nJessa didn't meet his gaze. \"Of course,\" she said, looking back at the lake, hoping she could place it on a memorized map. If only her brain had a zoom function the way internet graphics so often did. She glanced back up at the moon, then the big dipper, tracing the path to where the North Star should be. The brightness of the moon was drowning it out, but she had a good enough idea to get her started on a course. She set out back down the rutted trail, looking for a break in the trees. The men followed her without question. She hoped that was a good thing.\n\n****\n\nIt was two days of walking, evasive maneuvering and dehydrated 'meals' before they came in sight of the city that had been Montpellier. There hadn't, exactly, been irrefutable evidence that Special Forces were out looking for them. But then, neither should Special Forces patrols have been so close to the mosquito-infested coast. And as they ate yet another freeze-dried meal and watched the sun set, they could also see an occasional vehicle entering or leaving what should have been an abandoned city. Further, there was the dim but unmistakable glow of powered lighting to be seen from their vantage point, at least until the bright moon rose.\n\n\"What now?\" Jessa asked softly, relieved that her astro-navigational skills had gotten them this far.\n\n\"I'm thinking we need one of those jeeps,\" Erich said nonchalantly.\n\n\"Land Rovers,\" Torah corrected absent-mindedly. He had binoculars to his eyes, studying the city.\n\n\"You say tomato...\" Erich muttered with a shrug as Jessa's head whipped around to stare at him. \"What! I can't listen to old music once in a while?\" he protested.\n\n\"Tamatoh,\" she intoned.\n\nTorah pulled the binoculars away and glared at them both. \"Trying to strategize here,\" he complained. Erich and Jessa both fell silent, mostly because they had nothing more to offer than out of contriteness. After a moment, Torah's shoulders sagged, and Jessa knew immediately it was because he'd come up with a plan but didn't like it.\n\n\"Okay,\" he said. \"We requisition one of the Land Rovers. We get into town, as far as we can without notice, then you get to the computer center,\" he told Erich.\n\n\"What?\" Jessa exclaimed. \"Why him? Why not me?\"\n\n\"You're staying here.\"\n\nJessa leapt to her feet, then drew a deep breath, trying to calm herself. \"Remember how you guys said the Council would give Agents more information, so they could understand the orders they're given? Well, I need that 'more information' now.\"\n\nIt was hard to tell, since the moon hadn't risen yet, but she thought she saw a flash of the angry Torah. Even considered taking a step back. He definitely stiffened, but then he too drew a calming breath. Jessa sat back down slowly. Erich was watching them closely, but giving no hint of what he was thinking.\n\nTorah gathered himself. \"One. There are no women down there. This is strictly a military outpost. Whatever you may think of your skills, you cannot pass for a man. Two. We have it on good authority from Jacq that this outpost has been ordered to search for us, and while they may not expect to find us in their midst, they can reasonably be expected to recognize us on sight.\"\n\n\"But...\" \n\nTorah held up a finger. \"Three. Erich knows the computer system and has the uncanny ability to hide in plain sight.\"\n\n\"Especially when it comes to raises, promotions...\" the Agent interjected.\n\nTorah ignored him. \"And four. If we don't make it out...\"\n\n\"Then I can help you,\" Jessa exclaimed excitedly.\n\n\"No!\" Torah almost shouted. \"If we don't make it out, you take yourself, and my babies,\" he pointed at her belly, \"and you get them the hell out of here. All the way to North America if you need to.\"\n\n\"But it's only been a couple of days,\" she protested. \"We can't possibly know if I'm pregnant...\"\n\nHe whipped a finger into the air to silence her protest, but it was Erich who spoke. \"Five. Drau may be down there. We still don't know what his role is in all this. Or what he told Special Forces. There may be an order out to kill you on sight, for all we know.\"\n\nJessa stared at him. Maybe this 'give me the whole picture' approach wasn't all it was cracked up to be. She drew a slow, deep, centering breath. \"Fine. You don't want me in the city. You want me where I'm safe. I want me somewhere I can be of help. Be of real help. Not just filling canteens.\" Torah rolled his eyes and she glared at him. He raised his hands in surrender, though the set of his jaw said he would still brook no argument.\n\n\"I want to be out there,\" she said, pointing toward the sea with her chin.\n\nTorah's brow furrowed. \"I don't understand.\"\n\n\"On the water. In the water. The whole idea of coming here was to get a boat to take to Italy. Right?\"\n\nHis jaw worked. He had never actually said that to her or to Erich for that matter, though he knew Erich had figured it out, and now it was clear that she had, too. She pressed on. \"This isn't like up north where you can just find a boat that's being used for fishing and know it's seaworthy. Nobody is fishing down here. No one is taking the risk, immunizations or no. What you're seeing in the harbor,\" she waved, though it was too dark to see anything that far away, now, \"is a few masts from sunken boats.\"\n\n\"Ships,\" Erich contributed helpfully.\n\n\"Whatever. The only thing you are going to find that has a chance of making it to Italy at this point is something that was sitting in drydock. Or maybe something that has been recently pulled out of dry dock. Or even recently been built,\" she added ominously. \"I can find that for you while you find out what you can in the city. You don't make it out,\" she argued, \"I will have found the means to get myself to safety, just like you said. The seawall is well south of the city. Even if they are exploring for art and antiquities in the Mediterranean using Montpellier as their base, it's not like the entire Security Forces are going to be stationed on the sea wall. They're going to be in the city. Where you are.\"\n\nErich snickered. \"Give in, Torah. She has you by the balls. What do you and I know about ships?\"\n\nHe glowered. \"First off, the sea wall has long since disappeared under the rising waters. Second, any dry docks would now be underwater, too.\"\n\n\"Then what did you expect to find here?\" Jessa demanded.\n\nHe suddenly gazed off into the darkening distance. \"Inspiration.\"\n\n\"Oh, oh,\" Erich commented. \"That's what he always says right before he pulls some ludicrous scheme out of his hat.\"\n\nTorah exhaled slowly. \"Look. We can't drive over the alps and through the Apennines on a tank of gas, never mind an electric battery. We sure as hell can't hike it this time of year. The French coast and across the water makes the most sense. I'm just not exactly sure yet how we're going to cross that water. And I definitely wasn't counting on running into security forces here of all places.\"\n\n\"Where's Hannibal and his elephants when you need him?\" Erich muttered, swiftly burying the remains of their meal.\n\n\"Then let me work on the inspiration part while you two find out whatever you can in Montpellier,\" Jessa argued. Torah scowled, still gazing off into the distance. \"Look, it's obvious that the Special Forces are hanging out in the north end of town, no doubt because the ground is higher there. From their movements, their main traffic is to the east, up the valley towards Nimes and Avignon, maybe around to Marseille. I skirt around on the west side of town, see if I can find your inspiration, see how close in the sea has risen and we meet up somewhere in the southwest corner. Then we compare notes.\" She stared defiantly at Torah. \"I think I've proven myself quite capable of finding my way safely through city ruins.\"\n\n\"Southwest corner of what?\" he demanded. \"It is - or was - a damn big city.\" \n\n\"You never seem to have any trouble finding me,\" she pointed out, glaring at him.\n\n\"We can argue all night, or we can move in now,\" Erich interjected. \"Frankly, I've got a craving for some real food, and maybe even a cold beer, so can we get going?\" Torah growled deep in his throat but got to his feet.\n\n****\n\nJessa was absent-mindedly chewing on an energy bar, under a bright, warm noon-day sun, studying the empty streets. The years of neglect, salt air and an earthquake had been hard on Montpellier. The classic red roofs were more often caps on a pile of rubble, now. Just as Torah had pointed out, the rising waters of the Mediterranean had long since breached the sea wall and drove sea fingers inland, sometimes leaving what had been suburbs as now lonely, desolate islands. \n\nTorah had all but demanded that Jessa remain with them until they could commandeer a car on the road east of town, but she had finally won the argument with logic, explaining patiently that she could run along the old road down from the hills and be at the western edge of town - especially with the rising of a bright moon to light the way - before they could even find a car to abscond with, let alone the danger that might present, given how determined he'd been to keep her out of danger. Two men waylaying a Special Forces vehicle could be written off to roadside bandits. But two men and a woman? He'd finally relented, but only after giving her the phone that could connect them to Jacq, and eliciting a solemn promise that she would turn it on and call the Parisian if they weren't back together by nightfall the following day. \n\nAs she'd made her way down from the hills to the north, she'd watched for the telltale signs of lights along where she guessed the sea to be. Once, she'd caught glimpses of light, but when she stopped to peer southward, something topped a rise and the light proved to be headlights on a car; probably one of the Range Rovers the Special Forces seemed fond of. She tried to visually trace back along its path anyway, noting landmarks as best she could. Now, she was working her way in that direction, as carefully as she could. The rubble and collapsing buildings made that more of a challenge than she expected, but when she came to a street that appeared to have been bulldozed clear, she quickly disappeared back into the rubble. It was beginning to appear that there was something down by the \"new\" waterfront that was interesting the Special Forces, and she didn't think it was a white sand beach.\n\nRemembering how cautious Erich had been to hide their trail over the hills to Montpellier, Jessa stashed the wrapper of her energy bar under a heavy fallen brick, then dusted the fine dirt over the sharp crevices produced when she'd moved the brick. She had not said anything to Torah or Erich, but she had watched them closely during the two days of hiking; the seemingly casual care they had taken to erase traces of their passage. When she had spotted a grouse and jokingly suggested they catch it for dinner one evening, Torah only rolled his eyes and Erich looked at her as if she'd lost her mind. \"I'll catch it if you'll eat it raw,\" he bargained. \n\nJessa found herself muttering, \"I was just joking,\" though her stomach growled at the thought of a fire roasted game bird. Torah had even gone so far as to indulge his baby-making urges by pushing her up against a tree, rather than risking the more tell-tale signs left by thrashing around on the forest floor; and Jessa had to admit that she wasn't very good at not thrashing, unless he saw fit to bind her. At first, she had been offended when he'd taken several opportunities to wrap her arms around a tree trunk and stripped her pants down to her ankles, especially with Erich only a few feet away. But as soon as he pulled on her hips and she slid effortlessly onto his cock, she would brace her feet on exposed tree roots, push her ass back against him, and dare him to fill her deeper. She only briefly remembered where they were and why, when Erich would shout out, \"You're disturbing the bears' hibernation, you know!\" If she had been vocalizing, she didn't remember, but neither would she have been surprised. The man behind her, ignoring Erich and ramming into her with a steady, determined rhythm was not to be denied. He kept her lifted, on tiptoes, minimizing footprints or something, no doubt. She hadn't cared then, and when she put her hand on her belly now, wondering and hoping, she still didn't care.\n\nOn one occasion, there had been a hefty branch just above her head, and he had put her back against the tree, her hands clasped over the branch and lifting her legs to wrap about his waist. Jessa couldn't have said how she hung on to that branch, save the pressure of the tree trunk at her back. Torah seemed almost savage in his fucking; or maybe desperate was more to the point, on reflection. Beyond rational expectation, he seemed certain that she was about to be pregnant again with twins, and if he had some arcane insight into that future, she was more than happy to embrace it. Even knowing that he could not possibly, because of their current separation, be aware of how much she exerted herself, or how careful she was picking her way through the all but demolished western side of the city, she remained vigilant, his warnings replaying on a constant loop in her mind.\n\nAs she moved further westward, she had doubled back north around a number of sea fingers, which were working hard to create new salt marshes along the southern outskirts of the city. Jessa tried not to think about the mosquitoes buzzing in eager greeting about her. It was just so wrong, being plagued by mosquitoes in December. But it was wrong, too, that a city more than a few kilometers from the sea wall should have its lower-lying lands inundated by the sea. Everything was wrong and out of control.  \n\nShe took not the first in a long line of deep breaths and plotted a route to take her even further west. Her occasional sightings of cleared, or at least well-used, roads heading in that general direction was giving her substantial hope to find something, if not immediately useful, at least informative. She continued west, at a couple of points opting to wade through the sea water, cognizant of its unnatural warmth and the loss of the beautiful \"Mediterranean Blue\" color that, in her memory, was derived from book stories and old pictures of dubious RGB reproduction. Apart from the whole concept of occupied sectors in old cities, nothing had jumped up and smacked her in the face the way this real Mediterranean Sea contrasted with her idealized - even romanticized - version of it had.\n\nIt was mechanical sounds that alerted Jessa first. Something like hammering, and metal on metal clangor. She ducked behind a portion of wall that was still standing and listened closely. It could be something washing against something else in the gentle surf of the Med. But it wasn't regular enough. And as she strained to listen, she could pick out men's voices, trying to be heard over the clanking. She'd come upon something, and she knew she shouldn't dare move closer until nightfall. Except that was when she was supposed to meet up with Torah and Erich. She glared at the sun, willing it to set sooner, and searched her pockets, knowing full well she'd eaten all the rations Torah had pushed on her.\n\nNever one for patience, Jessa carefully crept forward, dodging from cover to cover, closer to the sounds. When she finally reached a rocky outcrop where she could lay on her belly and look down on the activity, it took her more than a few minutes to puzzle it out.\n\nAt first, and even second glance, it appeared to be a line of warehouses that had been inundated be a finger of sea stretching up a low-laying wide roadway. They stood out more by virtue of their completeness from the surrounding rubble than anything else, but as she peered closer, she could make out a couple of vehicles, behind the line of buildings, hidden from satellite view by aluminum roofing, the same roofing that covered the 'warehouses.' And as she focused on the nearest wall of the line of structures, she realized it was not the usual concrete or brick utilitarian construction but something more haphazard, scavenged from ruins, perhaps, and it did not reach far enough down to meet the swirling water, even now at high tide. Further, she caught occasional glimpses of lights shining through that gap. \n\nJessa would have patted herself on the back for having found Torah's inspiration, but the soft sound of a growl froze her in place. It would not be all that surprising to find feral dogs hanging around a city that men had reoccupied, and where there was one, there was probably a pack. Her mind flew back over an all-too-brief segment on feral animals from a course on Animal Behavior. Researchers had found that feral dogs had retained some fear of men, normal in most wild animals, but they proved more dangerous as the refuse from men and other predators in the abandoned cities tapered off and the dogs found themselves without the highly trained hunting skills of their wild cousins. Of course, that study was probably four or five dog generations ago, at least. Jessa schooled herself with the protocols employed by the researchers; move slow, appear large, avoid eye contact. \n\nShe spread her hands, palm down, to push herself to her feet. Before she could rise, though, two paws came into view next to her left hand and warm breath rustled the hairs in her arm, which were standing straight up despite the humid sea air. She could hear the huffing as the dog calmly sniffed her. Jessa turned her head slowly, just in time to see two heavy black boots come to a stop next to the dog's paws."
    ],
    "authorname": "Chimera44",
    "tags": [
        "danger",
        "drama",
        "non-con",
        "noncon"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/jessa-ch-15"
}