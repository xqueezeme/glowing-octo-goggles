{
    "title": "The Last Chimes of Fall",
    "pages": [
        "Copyright\u00a92012\n\nSome of you might recognize this story. I published it a couple years ago under a different name but pulled it because of some difficulties I was having with the site at that time. Originally it was posted in three parts. \n\nRecently I combined the parts into one story and was going to publish it on the pay sites but changed my mind. I enjoy the instant feedback I get here so I decided to resubmit the story. I warn you, this is the long version but I hope you'll take the time to read it. I also hope you enjoy it.\n\nThank you,\n\nLaptopwriter\n\nAll characters are over eighteen.\n\n*****\n\nPrologue:\n\nWith-in the confines of chapters one and three, Brent, while working in his back yard, experiences a heart attack. Writhing from the pain, he struggles along the ground in an effort to seek help. During this time, he will relive the joys and tragedies from the three loves of his life. Please accompany him on his journey and I hope you enjoy the read. \n\nChapter One; \"Tanya\"\n\nThe bitter breeze strewn lifeless brown leaves along my cold, hard Midwest lawn. Only a couple weeks prior they dazzled brilliantly against the sun as it shown through the yellow, orange, and red colors of fall. Now, I struggled against Mother Nature; my only weapon to stop their attempted escape on the wings of her frosty breath was an old fashion bamboo rake, a hand-me-down from a generation long since passed. \n\nI worked feverishly, gathering the last remnants of summer into piles to be bagged and picked up before the first snow fall. The dull, gray sky and wintry winds told me time was short. \n\nMy left arm was still hurting as it had been for most of the day. Normal, I suspected for a man who, like the season, was also approaching winter. The long tentacles of the old rake scraped along the ground when suddenly it dropped from my hands. I went down to my knees clutching my chest from the worst pain I had ever experienced. My body twisted from tightening muscles and I fell hard upon the frozen ground behind my house. \n\nI was paralyzed from the agony. My body refused to function. I heard the rustling of leaves under me as I rolled uncontrollably from one side to the other. \n\nI had to regain control. I was alone, blocked from view of the street and my neighbors. Somehow I had to get to the house. Then it hit again. My body curled in a ball as it was wreaked with a second wave of burning torment. \n\nI laid there. I struggled to breathe. I could feel the erratic rhythm of my heart pounding in my chest, when off in the distance I heard a voice.\n\n\"I love you,\" it said like a whisper in the wind. There was something familiar about it. It was almost like a dream, yet so real...no, not a dream, a memory. I heard it again, \"I love you with all my heart.\" This time I recognized it. It was a voice I hadn't heard in over fifty years, the voice of my high school sweetheart; the first love of my life.\n\n\"Tanya,\" I said in a raspy voice. It was all I could manage but it brought me back to a warm summer's night in my home town. \n\nWe lay under the stars, our naked bodies entwined, our hearts pounding, our minds spinning, as we both had just experienced the rapture of making love for the first time in our lives. Tanya turned toward me and caressed my cheek with her dainty hand. \"I love you,\" she said. \"I love you with all my heart.\" \n\nI still remember how it all started. Back then, as far as I was concerned, it was the most unlikely romance I could think of. I was certainly no lady's man. In grade school I had red hair, freckles, and wore glasses. I was constantly ridiculed by the girls in my class. I guess I grew out of a lot of that by the time I entered high school. My hair turned darker in color. The freckles were all gone; I still couldn't escape the glasses though and was nonetheless very self-conscious in spite of the small popularity I enjoyed as the school photographer. \n\nTanya Dickens was a cheerleader and certainly one of the most popular girls in school. She and I shared a class in English Literature, but other than that, I had no real contact with her except to take pictures of her at the football and basketball games. \n\nI still remember my reaction on that cold November, Friday night after the football game when I felt someone tap me on the shoulder from behind. I turned around and saw Tanya with her winter coat wrapped around her little cheerleader's outfit.\n\n\"Hi Brent,\" she said, in what I was sure was the voice of an angel. \"Hey, if it's not too far out of your way, do you think you could give me a ride home tonight?\" \n\nMy brain instantly turned to mush. Be cool, I thought, don't get tongue tied, don't act scared, just answer her. \n\n\"Sure Tanya, no problem.\" Whew! I did it; I spoke to her and didn't make a fool of myself...at least not yet. \n\nIt was only a ten minute drive from the school to her house, but it was the most stressful ten minutes of my young life. She didn't wait for me to get out and open the car door for her like the gentleman I was taught to be. Instead, as soon as I stopped in her drive she opened the door herself, glanced over toward me with a smile that would have melted the heart of Genghis khan, and simply said thanks. A moment later she left me sitting there like a love sick puppy as she disappeared behind the front door of her house. \n\nDriving off, I thought to myself, if I live to be a hundred, I will remember this night for the rest of my life, the night Tanya Dickens rode in my car. Little did I know at the time, there would be many more nights to remember.\n\nThe following week was pretty much like all weeks in school until Friday in English Lit. I was already seated when I felt a hand on my shoulder. I looked up, once again, into Tanya's smiling face. \n\n\"Are you taking pictures at the game tonight, Brent?\"\n\n\"Sure, I'll be there,\" I said trying again not to pee my pants.\n\n\"Could you give me a ride home again?\" She asked. \n\nI was really finding this hard to believe. Two weeks in a row? \n\n\"Absolutely!\" As fast as I said it I wondered if I'd sounded too anxious. \n\n\"Great,\" she replied enthusiastically. \"I'll see you tonight then.\"\n\nThat night all I could think of was taking Tanya home again. What if she wanted to talk? What would we talk about? I was so nervous I almost forgot to shoot pictures. I didn't have a single photo that was even worthy of the high school newspaper until late in the fourth quarter. I happened to be in the right spot at the right time when I grabbed a great shot of the winning touchdown. \n\n\"Great shot, kid,\" I heard from my left. I looked over and recognized the middle aged man talking. He was the head photographer for the largest newspaper in the state. They would occasionally cover high school sports in our area.\n\n\"Thanks,\" I said, \"just a lucky shot.\"\n\n\"In this game, kid, there's no such thing as luck. Sports photography takes a keen eye and split second timing. You just showed both. Are you a senior?\" he asked.\n\n\"Yes sir.\"\n\nThe tall man walked up next to me, reached for his wallet and took out a business card. Holding it between his index and middle fingers he offered it in my direction.\n\n\"You've got talent, Kid. If you think you'd like to learn the newspaper game after graduation, give me a call.\" He smiled and walked off in the direction of the parking lot. \n\nWhat a night this was turning out to be, I thought. Just then Tanya came running up and grabbed my arm. She was all excited from our big win. \n\n\"Hey,\" she said still holding on to me. \"A bunch of the kids are going to the restaurant in town. Do you think we could join them, or do you have to get right home?\" \n\nEverything was happening so fast. Whose life was I living anyway, certainly not mine; just last week Tanya rode in my car, now she's talking about a...a...a date? Well, maybe not an actual date, but it was close enough for me. \n\n\"Sure, Tanya.\" Just then a couple more from the school's 'A' crowd came over.\n\n\"So, you guys going to meet us there?\" asked Judy, another cheerleader. \n\n\"Yeah, Brent and I are heading over there now,\" Tanya replied. When we got to the restaurant they pushed several tables together for us. I sat next to Tanya and was actually talking to several members of this elite clique, almost as if I belonged. \n\nOur tables were just getting served when two more from our school walked in, Pete and Darrell, the two stars of tonight's game. Pete was the quarterback who threw the winning pass and Darrell was the tight end who made the spectacular catch. \n\n\"Hey Brent,\" Darrell called out like I was a friend of his. \"Did you get a shot of me catching that pass?\"\n\nHell, I didn't even know he knew my name. \"Yes I did,\" I responded. \"I got it just as you grabbed for the ball.\"\n\n\"Alright!\" he said with exuberance. \"I'm going to have my picture in the paper.\"\n\nI didn't think the night could go any better until we were, once again, sitting in Tanya's driveway. This time I was ready. \n\n\"Wait right there,\" I said as I got out of the car and walked around to the passenger side. She smiled and stepped out as I held the door open for her. It was at that very moment that I thought the universe might explode. \n\n\"Thanks,\" she said. \"I had a great time tonight.\" She then stood on her tiptoes and kissed me on the cheek. I don't even remember driving home after that. \n\nThe following weekend was even more sensational than the last. Once again our team won the game and insured their spot in the sectionals. Tanya was so excited she grabbed me around the neck and started jumping up and down while kissing me several times on the cheek. \n\nHaving Tanya's body rubbing and bumping into me soon had my own body reacting. I became absolutely mortified when I felt an erection growing in my pants. Several times, Tanya's body, dressed only in that skimpy little cheerleader's outfit, came in contact with my, now fully engorged dick. I wanted to melt into oblivion and had no idea what to do. I could feel myself getting flush from head to toe. I heard Tanya giggle a couple of times. I didn't know if she was giggling because she was aware of my situation, or she was just excited about the game. One thing was for sure, I wasn't going to ask her. \n\nThat night several more kids showed up at the restaurant in celebration of the win. This time, however, in addition to talking about the game, the other main topic of conversation was my photograph of last week's winning touchdown. I was truly living in a parallel universe, I thought, as some of the kids congratulated me and told me what a great photographer I was. \n\nThe following Tuesday, Jim, a long time buddy of mine from grade school, walked up to me while I was getting some books from my locker. Just by the look on his face I could tell he had something on his mind. \n\n\"Hey, Jim, what's up?\" He stared at me for a second before responding.\n\n\"Are you really dating Tanya Dickens?\" he asked in a voice that more than showed his total disbelief, even in the question he was asking.\n\n\"Where did you hear that?\" I inquired. It was extremely flattering but what came to mind first was worry, worry that Tanya would hear that and get angry. Driving her home and going out with the kids after the games was one thing, but if she heard some kids use the term, \"dating,\" she'd probably think I started the rumor and be really pissed. \n\n\"It's all over school,\" said Jim still with a questioning look. \"Is it true? Are you really going out with Tanya?\"\n\n\"No, Jim, it's not true. Her house is right on my way home so I've been giving her a ride after the games, that's all. You don't really think she'd go out with me do you?\"\n\nI saw the look on Jim's face; I think he was actually pleased. I'm not sure why, maybe he thought we'd no longer be friends if I was really dating Tanya. I'm not sure. We both had to get to our classes so, after a couple chuckles, he went one way and I went the other wondering if Tanya had heard the rumors and if she would ever speak to me again.\n\nA couple days later I was relieved when Tanya stopped to say hi to me in the hall. Either she hadn't heard the rumors, or she simply shrugged them off, I thought. \n\nThat Friday night everything seemed normal. Football season was winding down and it looked like we had a good shot at going all the way in the sectionals. As was now becoming the norm, Tanya and I met several of the kids at a restaurant after the game and talked again about our team's victory. \n\nI had been nervous the whole night. Sooner or later Tanya was going to hear the rumor about us dating and I didn't want her to think I started it, so as we pulled into her drive, I had to take a chance.\n\n\"Tanya,\" I said apprehensively. \"Ah, well...I ah, well I heard there's a rumor going around the school about you and I dating and...well, I ah, I just didn't want you to think I started it, that's all.\"\n\nI saw the smile leave Tanya's face and really thought I'd blown it. Evidently she hadn't even heard the rumor until I just blabbed. \n\n\"Are you ashamed of dating me?\" she asked. \n\nOkay, now I was really confused. I never had a sister and had absolutely no experience with girls, whatsoever. Was she mocking me, making fun of me, or was she being sincere? Then again, my dad said many times, \"sincerity is what women fall back on when all other forms of deception have failed.\"\n\nI didn't know what to say. Then, before I knew what was happening, it just came out. \"Hell no Tanya, are you kidding, I love you.\" Even as I heard myself saying it, I wanted to pull the words back into my mouth but I couldn't. I think my eyes got as big as saucers about the same time Tanya put a smile back on her face. \"Oh God, Tanya, I'm so sorry, I didn't mean to embarrass you. I...I didn't mean to say that.\"\n\n\"Oh, so you don't love me?\"\n\n\"No, I mean, yes, but...\"\n\n\"Shhhhhh,\" Tanya shushed me putting her finger to my lips. \"Wow, that's the first time anyone ever told me they loved me. Look,\" she said, \"my mom and dad would like to meet the guy who's been driving me home. Why don't you come in and meet them.\"\n\n\"Oh jeez,\" I said. \"I've already made such a mess of tonight, I don't know.\" \n\n\"Oh come on,\" she countered. \"You haven't messed up anything. Come on in, it'll just take a minute.\" \n\nI reluctantly agreed. Tanya took my hand and led me into the lion's den. \n\n\"Well, you're the young man we've heard so much about,\" said her dad as he reached out and shook my hand. \n\n\"Dad,\" Tanya said. \"Don't embarrass me, please.\" He chuckled and asked me to have a seat. Tanya had a younger sister who came running in, I guess to see what I looked like. As we all sat and talked I began to relax a little when Tanya's mom brought me a Pepsi from the fridge. What do you know, I thought, Tanya didn't live in a castle guarded by dragons after all; she was part of family just like me. In fact her dad was a no nonsense kind of guy just like my own dad. I really liked her whole family and they seemed to like me. \n\nWhen it was time to leave Tanya walked me out. \"I don't know about love, Brent,\" she said honestly, \"but I like you a lot, and if you ever do decide to ask me out on a real date, I'd be happy to say yes.\" She then reached up, put her arms around my neck, and kissed me; this time on the lips. It was the first time in my life I had been kissed on the lips. I remember thinking at that moment, if God were to strike me dead right now, I would have no regrets. I had just been kissed by Tanya Dickens, what more could life hold? \n\nOh my God, oh my God, oh my God, was all that came to mind as I drove off heading for home. What'll I do? I've never been on a date before in my entire life, not a real date. I've never had a girlfriend before. God! What to do? I have to talk to someone. I need advice, but who? I can't talk to my folks...not about girls...oh God, I thought, that's just sick!\n\nDenny! Of course, my cousin, Denny; he was nine years older than me and was married. Denny and I were more like brothers than cousins. Cindy, his wife, was extremely pretty, too. Not as pretty as Tanya of course, but still very pretty. Tomorrow was Saturday, Denny didn't work so I could go over there and talk to him. \n\nSaturday morning at breakfast, all I could think about was Tanya and the talk I was going to have with my cousin. First; however, I had to help my dad with the last of the yard work. He handed me one of the two brand new bamboo rakes he had just bought, and we spent the next four hours raking and burning leaves. \n\nAfter dinner I told my parents I was going over to Denny's for a little while. They warned me not to make it home too late, we were all going to church on Sunday.\n\nWhen I got to Den's I was glad to see Cindy was in the kitchen doing dishes. Den and I sat in the living room. I guess he could read my face and knew I had something specific I wanted to talk to him about. \n\n\"Okay, Brent, you look worried, what's going on?\" he asked. \n\n\"Well,\" I said softening my voice so Cindy wouldn't hear me, \"I need some advice. There's a girl at school. I really like her and...well, I want to ask her on a date, but...\n\n\"Hey man, it's about time,\" Denny interrupted. \"Who is she? Is she cute? Hey Cindy, come on in here, Brent has a girlfriend!\"\n\nDamn it, I thought, there goes the private conversation I wanted to have. Cindy came into the living room wiping her hands dry on a dish towel. She had a huge smile on her face as she sat next to me on their couch. This was going to be embarrassing; I could just feel it in my bones.\n\n\"Brent that's great,\" said Cindy. \"Do we know her?\" \n\n\"No, I don't think so. Her name is Tanya Dickens, she's one of the cheerleaders at school.\"\n\n\"One of the cheerleaders!\" said Denny with a surprised tone in his voice. \"Hey man, that's my cousin,\" he said while shifting his body forward and leaning his elbows on his knees in a more intent listening posture. \n\n\"I think that's great,\" said Cindy. \n\n\"Yeah, she's really something special,\" I said with pride. \"But...well, I want to take her out on a date but I don't really know what to d...\"\n\nBefore I could finish Denny broke in again. \"The clit, man, go right for the clit. It drives them crazy, doesn't it honey?\" \n\nI looked up at my cousin in shock. \n\n\"It's right under the little hood at the top of the pussy,\" he continued. \"Show him yours, honey,\" he said looking at his wife with a big grin on his face.\n\nI could literally feel my entire body blushing. Cindy looked at me. \"Den, will you stop, look at the poor kid; you're embarrassing him.\"\n\nDenny looked back at me and laughed. \"Ha, ha, I don't think I've ever seen anyone quite so red in my life.\"\n\n\"Brent,\" Cindy said with empathy. \"You're a great guy. Just be yourself and you'll do fine.\"\n\n\"Oh hell, Cindy,\" I said nervously. \"She could have any guy she wants. I still don't know why she likes me but she does. At least I think she does. She sure seems to.\" \n\n\"What do you mean you don't know why she likes you,\" said Cindy in an almost angry voice. \"You're smart, witty, and good looking. You have a great personality...any girl would be proud to be your date.\"\n\n\"I don't know, Cindy. It just seems so farfetched that she really could like me. Anyway, I have no idea where to take her or what to do.\"\n\nCindy thought for just a second. \"Take her to a movie. You can't miss with going to the show, Brent. Pick out a nice romantic comedy, or better yet, let her pick it out. When they turn the lights down low you put your arm around her so you two can cuddle. When it's over you can take her out to a restaurant. If you can't think of anything to talk about, you can talk about the movie you just saw.\" \n\n\"Yeah,\" I said picturing me with my arm around Tanya. \"That's a good idea. Thanks.\"\n\n\"Hey, there's also a little trick you can do by cutting a hole in the bottom of the popcorn box and putting it on your lap,\" said Denny joking again.",
        "\"Will you stop!\" yelled Cindy looking at him with a big grin. \n\nThe following Monday at school, I was trying to figure out how to approach Tanya. I had the movie section from Sunday's newspaper with me. \n\nI was standing at my locker wondering when I would have the opportunity to talk to her alone when I felt someone push their hip against the side of my body. I looked over to see who it was.\n\n\"So,\" said Tanya with a big smile, \"have you thought anymore about what we talked about?\" \n\nFor the first time since giving Tanya that initial ride home, I was starting to believe she actually liked me. Why?- I still had no idea. Every guy in school would give his eye-teeth to go out with her. All I knew was I was starting to lose some of those inner demons I had developed in grade school. I felt just the tiniest amount of self-confidence as I smiled. \n\n\"Tanya, that's all I thought about all week-end,\" I said while reaching to retrieve the movie section from my locker. \"I know it's short notice, but would you be free Saturday night? I thought we could go to the movies.\"\n\nTanya smiled as she took the movie section from me then crooked her index finger motioning me to lower my head. As I did she kissed me, ever so softly, and right on the lips. \n\n\"Tanya and Brent, sitting in a tree, k-i-s-s-i-n-g;\" we both looked over and saw Becky Peterson, another of the schools most popular people, singing the little ditty. \n\nTanya smiled. \"Eat your heart out, Becky,\" she said to her friend with a cute, little cock of her heard. This was all just so hard for me to believe. Any time now I just knew I would wake up and realize it was all just a dream.\n\nFor the rest of the day, I'm not sure but I think I probably went to classes. I mean, physically, I must have been there. Mentally; however, I don't remember a thing after that kiss. All I could see was Tanya and me, standing together with wedding bells ringing over our heads. As they say, I had it bad...I was in love. \n\nThat Friday night turned out to be a real downer. In an upset, our team lost the second game of the sectionals. Tanya had tears in her eyes when she came over, put her arms around my waist, and leaned her head against my chest. I put my arm around her and pulled her closer.\n\n\"I'm sorry, honey,\" I said. The term of endearment came out before I knew it. It was what my dad always called my mom. It just seemed natural. I wondered if Tanya even heard it, if she did she didn't say anything. \n\nThere would be no celebration at the restaurant tonight, no joking, and no compliments on my photography. The game had been played at the rival school which gave us a very solemn forty minute ride home. I had as much school spirit as the next guy but I knew the loss affected Tanya much more than it did me. All the way home I wondered about our date the following night. Would Tanya be in a bad mood all night? Maybe she might not even feel like going at all and call it off completely. My worries were somewhat relieved when Tanya slid over on the bench seat of my fifty-seven Chevy and leaned her head into my shoulder for comfort. \n\nSaturday night I hadn't heard anything to the contrary, so I drove over to Tanya's house at six forty five as planned. Her mother must have seen me drive up and opened the door to invite me in before I could even knock. As soon as I stepped into the living room Tanya made her entrance. It finally happened; I knew it would sooner or later. She was so beautiful that the moment I opened my mouth to tell her so, I got tongue tied. All that came out was gibberish, and it happened right in front of her parents. \n\nI know I must have been turning a scarlet shade of red when Tanya smiled, walked over, and with a small peck on the cheek, said, \"Brent, you say the sweetest things.\"\n\nThat brought a chuckle from her dad and a snicker from her sister. \n\n\"You look absolutely incredible,\" I said. The little kiss did it; like a princess kissing a frog and breaking the spell, I could talk again. Tanya took my arm while we said good night to her folks and we were on our way. \n\nAt the show we got some popcorn and a couple of soft drinks before going in to sit down. I couldn't help but smile as I remembered my cousin's joke about the hole in the bottom of the box. Tanya asked what I was smiling about and I had to think fast. \n\n\"Well, I'm sitting here with the prettiest, nicest, most wonderful girl in the whole world. Why wouldn't I be smiling? \" I asked. Just then the lights were lowered. Tanya reached over and gently turned my face toward hers. She slowly moved her lips closer to mine. I felt her left hand on the back of my head as she pulled slightly making our lips touch; then I felt her other hand slip to the inside of my thigh and knew in an instant I would have a raging hard on in another second or two. Tanya's lips opened and I felt her tongue probing for mine. I wanted to concentrate on her kiss, but I was so worried, so embarrassed by the problem growing between my legs. \n\nI knew she could feel it. I tried to take my mind off of my dick and focus on the kiss. I swirled my tongue to intermingle with hers. When we broke the kiss Tanya had a big grin on her face. There was no doubt she was aware of my hard cock. It actually hurt from straining against the fabric of my trousers. Was she teasing me or testing me, I wondered. I was beginning to think I should have paid more attention to my cousin's information about a woman's clit. Shit, I thought, what if she really does want to have sex. I've never even been on a date let-alone had sex before. \n\nI put my arm around her and pulled her close. The screen lit up with the first of three cartoons before the movie. We both laughed as the road runner, using his speed and intellect, out foxed Wile E. Coyote, yet again. Now and then Tanya would remove her hand from the inside of my leg to get some popcorn or to take a drink, but would always return it to the danger zone. By the end of the movie I was actually getting comfortable with the feel of her hand so close to my, still hard cock. \n\nThe rest of the evening also went well. I was finally starting to accept the fact that Tanya, one of the prettiest and most popular girls in the whole school, actually did like me. I found myself more relaxed and allowed my personality to come out more. I was always kind of the class clown and usually kept people, even adults, laughing when I was around. It was a trait I had been too nervous to show off around Tanya until that night. We both talked and laughed the night away. \n\nBy the time I got her back to her doorstep around midnight, I was actually starting to think of Tanya as my girlfriend, a feeling that was completely foreign to me, but very enjoyable. \n\n\"Did you have a good time?\" I asked while looking into her deep blue eyes.\n\n\"I had a great time,\" she answered. \n\n\"Would I be out of line to ask if you'd like to go out again next Saturday?\" \n\n\"Next Saturday, and the next Saturday, and the next, would be okay with me,\" she said. She reached up and wrapped her arms around my neck again. This time I met her half way taking her slim waist in my hands and greeting her lips with a passionate kiss.\n\nThe following Saturday Tanya was running a little late which gave me some time to get better acquainted with her mom and dad. \n\n\"Tanya tells me you have a job after school, what do you do?\" asked Mr. Dickens. \n\n\"I work at the Chrysler dealership in town, sir. I clean up the new and used cars that come in. I work every night except Fridays, till nine o'clock and I work Saturdays from eight to three.\" \n\n\"I see,\" he said with a bit of approval in his voice. \"When do you get your homework done?\"\n\n\"When I get home after work; it's the only time I have,\" I said. \n\n\"So, did your dad buy that car out there for you?\"\n\n\"No sir. You don't know my dad. He believes people should work for the things they get. Not only did I have to have all the money up front to buy the car, but I had to come up with a year's worth of insurance as well. I've been saving up for the last two years for a car and last summer I worked two jobs to get the rest of the money for the insurance,\" I said with a smile. \n\nIn my sophomore year I was determined I would have a car in my senior year. I worked hard to make it a reality and I was proud of my accomplishment. Although my dad never said anything, I knew he was proud of me too. \n\nJust then Tanya came in the kitchen all ready to go. I almost got tongue tied again as I looked at her. There was not a doubt in my mind, I was truly dating the most beautiful girl in the entire world. \n\n\"Tanya, you look stunning,\" I said. \n\n\"Thank you, Brent,\" she returned with a big smile. We said our good-byes to her folks and, once again, were off to the movies. While driving it occurred to me, I was going to have to find other places to take her if this was going to be an on-going thing. \n\nThe movie was a comedy this time and we both laughed till we cried. I had my arm around her waist as we walked from the theatre to the car. I was all set to go to the restaurant again when Tanya said she wanted to show me something. We drove a couple miles out of town, then turned on a dirt road. \n\n\"Where are we, Tanya?\" \n\n\"We're behind the old cemetery,\" she cooed. \n\n\"The old cemetery, what are doing back here?\" Just as I said it I realized what we were doing back there. I remember thinking, God I've got a lot to learn. \n\nTanya kind of chuckled. \"Brent, we've been, more or less, dating now for several months. I thought I made it pretty clear that I like you...a lot, yet you have never even tried to touch me. You're not gay are you?\"\n\nThe question almost killed me. It seemed like I was in new territory every week. I just didn't know how to act around girls, but I was bound and determined I was going learn. \"No, Tanya, I'm not gay. To be honest, I'm still finding it hard to believe that you like me at all. These past months, it's like I've been living a dream and I'm so afraid of saying something or doing something to break that dream.\" \n\nShe was smiling again. She turned her body and maneuvered her leg under the steering wheel and over my left leg so she was straddling me. She was sitting on my lap facing me with her arms over my shoulders as she pressed her mouth to mine. I reached around her with my arms and held her, never wanting to let her go. We kissed passionately for several minutes before her long, slender, beautiful legs started to cramp up on her. \n\nBy the time she swung her leg back around and was sitting next to me again, I was very uncomfortable with an unbelievably stiff hard-on again. \n\nThis time Tanya looked straight at my crotch. \"I see you like me too,\" she said and reached for the tent in my pants. \n\n\"Tanya!\" I almost shouted as I quickly grabbed for her hand. \n\n\"I want to feel it,\" she said. I removed my hand from hers and let her touch the outside of my pants. Only two layers of cloth protected it from the touch of her fingers. \"Oooh; I've been thinking about this.\" She brought her head around and kissed me again. \n\nI had never been so scared in my entire life. Here was the girl of my dreams, the girl who I loved with all my being, the girl for whom I would lay down my life, offering me sex and I had not the foggiest idea of what to do. It was time to go back and see my cousin Denny again; this time for a much more serious talk. \n\n\"Tanya,\" I said blushing again, \"have you...ah, have you ever...\"\n\n\"Had sex?\" she took pity on me and finished my sentence for me.\n\n\"Yeah,\" I said sheepishly.\n\n\"No, I haven't; and I'm willing to bet,\" she said with a smile, \"you haven't either.\"\n\nI gave a little nervous laugh. \"What gave it away?\" \n\nShe laughed.\n\n\"Tanya, just so I don't embarrass myself any more than I already have tonight, are you really saying you would like to have your first sexual experience with me?\" I couldn't believe I just asked that of any girl, let alone Tanya.\n\nShe smiled at me again and kissed me, keeping me in suspense the whole time. Did I just say something stupid? God, I wish she would answer me, I thought. \n\nFinally she broke off the kiss and looked into my eyes. \"Yes, Brent, that's exactly what I'm saying.\"\n\nMy hands suddenly started to sweat. My whole body felt like it was getting hot. I must have looked terrified. Tanya smiled, closed her eyes, and kissed me again, so softly this time, I immediately started to relax until I felt her unbuckle my belt. Her hand slipped under my shorts and, for the first time in my life, a girl was touching my cock. It twitched with every light stroke of her fingers. \n\nI didn't know what to do but I was sure I was supposed to do some touching of my own. Tanya's eyes closed and she inhaled with a deep, breathy sound as I reached over and softly caressed her breasts through her blouse. \n\nFor the next several minutes we passionately explored each other's body until Tanya pulled back. \"I don't dare go any further right now, Brent,\" she said looking into my eyes. \"Please understand; I want you so much, but not here, not like this.\"\n\nI understood exactly what she meant. I touched her cheek with the tips of my fingers. \"It's okay,\" I said, \"I'm going to plan it all out, honey. I am going to give you the most romantic night of your life.\" \n\nShe was beaming. \"Can you save up for a motel room?\" she asked, \"That would be fine with me. I just don't want my first time to be in the back seat of your car.\"\n\n\"My darling Tanya, people are going to write books about your first time,\" I said grinning from ear to ear, but still not having any clue as to how I was going to achieve this miracle feat.\n\n\"Well if they do,\" said Tanya smiling again, \"I hope they don't use names.\" We each laughed nervously and stayed out there a little longer smooching. \n\nThings were a little quiet in the car during the ride home. I think we were both thinking about what we had actually decided to do. The only thing I knew for sure so far was that I wanted to buy something for Tanya, something nice, something romantic. Something that would remind her of the first time she made love every time she looked at it. For help with that I went back to Cindy. \n\n\"Do you think it's too early for an engagement ring?\" I asked Cindy. \n\n\"Whoa there stud,\" she said with a surprised, no shocked, look on her face. \"You're really serious about this girl, aren't you?\"\n\n\"Cindy, I love her with all my heart,\" I answered. She looked into my eyes and could see the sincerity that lay behind them. \n\n\"Brent, I know you don't want to hear this, and I can see in your face you really do love her, but you're still very young. She is probably only one of many girlfriends you'll have.\" \n\n\"Cindy, I know I'm young, maybe too young, I don't know, all I know for sure is how much I love her,\" I said with tears welling up in my eyes.\n\n\"Brent, has she said she loves you?\" Cindy put her hand on mine trying to comfort me from what she anticipated was going to be a negative response. \n\n\"Well,\" I said sheepishly, \"kind of.\" This was not the conversation I wanted to get into with Cindy. This was the conversation I wanted with my cousin, Denny. \n\n\"What do mean, kind of, Brent?\" \n\nI just sat and looked at her. I really didn't want to talk to Cindy about this, but she wasn't dumb. She put her hand to her mouth as it dawned on her. \"Brent, you had sex with her?\"\n\n\"No,\" I said, \"well not yet anyway. We talked the other night. She's a virgin and...well, she wants her first experience with me,\" I said grinning from ear to ear. \"Doesn't that mean she loves me? Huh?\"\n\nAt first Cindy didn't say anything. She just looked at me. Finally she spoke in a soft voice. \"Brent, I...ah, I can't really argue with your logic. She's still young too, but it sounds like you two have talked this out. I'm very happy for you, Brent. You're a great guy and I really hope this works out for you.\"\n\n\"Thanks, Cindy,\" I said while still blushing from our conversation. \"But you still haven't answered my question, what kind of gift can I get her to commemorate the occasion?\"\n\nWe sat there and discussed several options; not only what she would like, but what I could afford as well. We had it pretty well narrowed down when Denny came in.\n\n\"Hi Brent,\" he greeted in his usually jovial way. \"How's it going? Hey,\" he started to ask as an afterthought, \"how are things with the cheerleader?\" \n\nI looked at Cindy. She read my mind. \"You boys have things to talk over,\" she said smiling. \"I'm going to start dinner. Brent you want to stay for dinner?\"\n\n\"Oh, no thanks, Cindy; I've got to back home pretty soon.\"\n\nDenny was about to turn the TV on when I asked if I could talk to him first. He sat down in his chair opposite the couch and invited me to start the conversation.\n\n\"Den, promise you'll take this seriously,\" I said while trying to keep from looking so scared. \n\n\"Yeah, I guess,\" he said. \"What's this all about? You look like the cat that ate the canary.\" \n\n\"Ah, well, you remember a couple weeks ago when you started joking around about a...\" I lower my voice to almost a whisper, \"a girl's clit?\" I saw Denny's mouth drop open. \"Well I'm ready to talk about that now,\" I said with a big shit-eaten grin on my face. \"Tanya and I have been talking. She's still a virgin and I want to make her first time something really special. Like you said, I want to drive her crazy.\"\n\n\"Oh she's a virgin, but you're not?\" Denny wasn't about to let me get off so easy. \n\nI hung my head a little and was embarrassed. \"No,\" I said like I was not proud of it, \"I'm still a virgin too.\"\n\n\"Hey, don't say it like that, man. It's nothing to be ashamed of. It shows responsibility on your part, that's all, and the fact that you two have actually talked about it without just jumping each other's bones shows real maturity. No kidding, Brent, I'm proud of you, man.\" \n\n\"Really; wow, thanks Den. I really thought you were going to make fun of me.\"\n\n\"Not for something like this, having sex for the first time is way too important. In fact I'm flattered you came to me.\"\n\n\"Who else was I going to go to,\" I said with a wry smile. \"My dad?\"\n\nDenny laughed, \"Yeah, I see your point. Okay,\" said Den now starting to get serious, \"you have to remember to keep things romantic. There will be times when all you want to do is have sex, raw, passionate, powerful sex, but this isn't one them. You want to do things slowly. Pay attention to every little detail. Make her feel like there is nothing else in the world that matters except her and only her. Every single thought, every movement should be focused on, not just making her feel like a woman, but making her feel like the only woman.\"\n\nI was surprised. Once he started talking, Denny never cracked a single joke. I learned about the art of seduction, oral sex, and concentrating on her needs before my own. \n\nFor the next hour I sat and intently listened to everything my cousin said. I could visualize making love to Tanya as he spoke. He made me promise to use protection and then told me to practice putting the rubber on. \"There's no mood killer like making her wait several minutes while you try putting your rain coat on,\" he said.\n\nDenny took his time and explained the female body to me in detail. \"There's a whole lot more to a woman's body than just her pussy,\" he said. He taught me about erogenous zones, and the importance of finding and stimulating them.\n\n\"The most important thing,\" Den said as he was winding things up, \"is sincerity. A woman can always tell if it's not there. Look, I know this will be your first time as well, but make it her night. She wants this to be the most important night of her life. If you do that for her, it will also make it the most important night of your life.\"\n\nAs I drove home that night, I thought of everything my cousin told me. Maybe I was a virgin, but I was now confident that I knew enough as to not make a fool of myself. I knew I would be capable of expressing my love for Tanya as a man.",
        "Now I had to figure out where. It had to be something better than a motel room. I was going to make love to the woman of my dreams. It had to be somewhere...spectacular! \n\nFor the next several days and nights all I could think of was making love to Tanya. I walked around with a perpetual smile on my face and everyone, teachers, my folks, friends, everyone except Tanya and my cousin, wondered what I was up to. What was going on in my little pea brain? \n\nWinter was over and spring had sprung with the enchantment of unseasonably warm, summer winds. Of course with the arrival of spring in the Midwest, also comes road construction. Such was the case on the main road so I took the back road home one night after work. \n\nAs I got to the far edge of town I drove past the county fairgrounds. Wow, I thought, wouldn't it be something to make love to Tanya in there. It was acres and acres of beautiful tree lined rolling hills with a small picturesque lake and a one hundred year old covered bridge spanning the little stream that flowed through the countryside. Man, I thought, I could spread out a couple of blankets in the soft grass near the lake and we could make love under the stars. \n\nThe problem was, the entire site was completely surrounded with a tall cyclone fence that was locked up every night after dusk. I suppose I could cut a hole in the fence but that wouldn't be very romantic, plus I don't think Tanya would like that. Then of course, there was always the chance someone would see the hole and come to investigate. No, that wouldn't do. I'd have to think of somewhere else...or would I? \n\nAs I drove home I thought more and more about the fair grounds. The next morning I left for school a little earlier than normal. I took the back roads again so I could go by the entrance of the fair grounds. There were two sets of large gates about thirty feet apart that were used for vehicle entrances. To the side of each of them were two smaller gates used strictly for pedestrians. All the gates had a large chain wrapped two or three times around and locked with a large padlock. At lunch time, when the gates were open, I ran by there again. It was just as I thought and I was starting to form a plan.\n\nThe calendar we had hanging on the wall in our kitchen showed each stage of the moon over the dates. Everything had to be flawless. In just ten days the moon would be full, that was the night. So far my plan was coming together perfectly, almost like I was getting divine assistance. \n\nThat weekend I searched three hardware stores until I found exactly what I needed. Now all I required was some luck. I prayed it wouldn't rain and that the extremely warm, summer like nights would continue for another week.\n\nI picked out Tanya's gift but had to borrow another fifty bucks from my dad. I promised to pay him back ten dollars a week. I would probably have to see if I could get a few more hours at work to make up the difference, but that was okay with me. \n\nAfter a week and a half of preparation, and a lot of praying, the big night was here. Tanya knew I had something special planned but she did not know what it was. \n\nI was a little nervous talking to Tanya's parents before we left that night. I wondered if her dad could read my mind. I wondered if he could see the condoms in my pocket. Both her parents and Jackie, her little sister, told her to have a wonderful evening as we left. It was almost as if they knew something, I thought. \n\nUnknown to my own parents, I had even taken some money out of my savings. I wanted to take her out for a nice dinner, something a lot more elegant and romantic than Charlie's, the restaurant we usually ate at. We drove up town to a place my cousin told me about. It was a little pricy, but the romantic atmosphere made it well worth the money.\n\nI could tell Tanya was impressed the moment we walked in. The maitre d' seated us and handed us menus. \"Oh, Brent,\" Tanya said in a whisper so as not to embarrass me. \"You can't afford this place. Look at these prices, let's just go to Charlie's, that's fine with me.\" \n\n\"Tanya, this is your night,\" I told her. \"Don't worry about the prices. I want you to order anything you want tonight.\" \n\nShe gave me such a big smile. I sat looking at her and thought to myself, she has no idea what's in store for her. If everything went right, this would be a night she would remember for the rest of her life. \n\nAs promised by my cousin, the restaurant was perfect. The food was excellent and the ambiance was exactly what I wanted to set the mood for the rest of the night. \n\nI took my time driving back to town. I wanted to make sure no one would be around the fair grounds. Unfortunately there was no place near the entrance to park after dark without calling attention to the car, so we had to park about four blocks away. Tanya looked at me as I started to get out of the car.\n\n\"What are you doing? Where are we going?\" she asked. \"Why are we parking here?\"\n\n\"It's part of a little surprise I have for you, honey,\" I said with a big shit eating grin. I walked around and opened her door for her, then walked over to the trunk and opened it. I had two big, thick blankets in there. I stuck them under my arm and took Tanya's hand.\n\n\"Come on, honey, we have to walk a few blocks.\" Tanya, with a very quizzical look on her face, took my hand and started to walk with me. \n\nWhen we got to the gate and saw it was locked, Tanya looked at me like I was stupid. \"Brent, what are you doing? You know we can't get in here after dark.\"\n\n\"Here hold these a second,\" I said handing her the blankets. With a big grin on my face, I pulled the magic key from my pocket. I reached for the big padlock, inserted the key, and voila, open sesame. \n\nTanya's jaw almost hit the ground. \"Where did you get a key to the fairgrounds?\" she asked in bewilderment. \n\nHolding on to my man of mystery persona, I said nothing, but was still ginning as we stepped inside. I reached through the fence and re-locked the gate. \"I'll take those now,\" I said as I took the blankets back. I wished I had a camera at that moment to capture the look on her face.\n\nAh yes, I thought silently to myself, a feat of prestidigitation worthy of Houdini himself. Well, not really. When I came back that day at lunch I noticed they left the padlocks unlocked and hanging from the chain after opening them in the morning. All I had to do was find a duplicate lock and switch them before I picked up Tanya. They would use my lock to close up that night, the lock for which I had the key. Before we left that night, I just had to remember to switch the locks back again. \n\nTanya put her arm around my waist and I did the same as we walked the trail that would take us through the covered bridge and down to the lake. I found the perfect spot and laid out both blankets, one on top of the other. It felt soft, like a feather bed as we stretched out next to each other and looked up at the beautiful round lunar sphere shining down from the heavens. \n\n\"I don't know how you pulled this off, Brent, but this has been the most wonderful night of my life,\" she said as if almost in a dream world.\n\nI could already feel my cock growing as I put my right arm under her neck and pulled her closer to me. I reached into my left pocket and clasped my hand around Tanya's next surprise. \"Look,\" I said reaching my arm out and pointing into the sky. \"That's the north star.\"\n\nAs Tanya gazed in the direction I was indicating, I held onto the thin gold chain and let the pendant drop into her field of view. There, dangling from my hand was her present; a gold plated heart with a small diamond right in the middle.\n\nAll I heard was a gasp of breath as she reached out. I draped the chain over her hand. \"For you, gorgeous,\" I said softly. \n\nIt took her a minute to get her voice back. \"Oh, Brent, It's the most beautiful thing I've ever seen,\" she said almost breathlessly. \n\n\"Well, then I found the right gift,\" I whispered in her ear; \"because you're the beautiful woman I've ever seen.\"\n\nShe turned around and literally threw herself on top of me. She kissed me hard and passionate. Our tongues danced together for a while, then I rolled her over on her back and gently kissed her face as I slowly started undoing the buttons of her blouse. \n\nWhen she realized what I was doing she pulled her head back slightly and looked into my eyes. \"Here? Now?\" she inquired. \n\n\"Right here, right now,\" I said as sensually as I could. \n\n\"Oh Brent,\" she said wrapping her arms around me and pulling me down on top of her. Remembering everything my cousin told me, I kept it romantic.\n\nI stood up and reached down for her hand. I guided her to her feet. She closed her eyes as I stepped behind her and reached around, slowly unbuttoning her blouse from behind. I lightly showered her neck and the back of her shoulders with kisses. In just a matter of moments she stood before me...naked in the moonlight. \n\nI took her in my arms and escorted her back down to lie beneath me. She stared up at me while I removed my clothes. \"Look, its pointing at the stars,\" she said referencing my stone hard cock with a twinkle in her eye. \n\nI used both my finger tips and my mouth to explore every inch of Tanya's womanly body. She gasped and arched her back when I gently pinched her hard, pink nipples. \"Oh my God,\" was her cry several times as I used the teachings of my cousin and practiced the art of oral sex. \n\nHer body writhed under the workings of my tongue. I could feel her hands on my head as her body went into euphoric spasms, one right after another. \n\nCall it nature, intuition, or maybe good instructions, but something told me it was time. I reached down, and just as I had practiced, centered a condom over the head of my cock and rolled it down to the base before slowly guiding it into the most precious thing in the world. \n\nTanya's eyes opened wide and looked into my smiling face. \"Yes,\" she said. \"I'm ready, put it in. Please put it in.\"\n\nI cradled her head and kissed gently as I slowly pushed. \"Oh,\" she cried out. I stop for only a second before continuing. \"Oh God,\" she repeated, but this time her voice was different, it was more pleasure than pain. I backed out slightly then pushed a little deeper. \"Oh yes, yes,\" she moaned. \"Oh God, it's wonderful, God it feels so good.\" \n\nJust then she almost scared me as she screamed from her first real orgasm. I felt her entire body tense up. She grabbed me tightly around the neck and held on while she experienced the rapture. I felt her pussy tightening around my cock.\n\n\"Are you okay?\" I asked as she started to come down from her high. She bit her lower lip and nodded her head, still unable to verbalize. \n\n\"Yo...you haven't cum yet, have you?\" she asked, finally getting her breath back a little.\n\n\"No, but that's okay,\" I said. \"This is your night.\"\n\n\"Oh no,\" she said forcefully. \"Put it in again, please. We have to do this together... please.\"\n\nI just smiled as I slid my young, still hard cock, in with no trouble. Tanya kept her eyes open this time. She gazed into the crystal clear night as I began stroking in and out of her warm, moist center of love. It didn't take long for either of us. Within a couple of minutes I felt my balls drawing up tight and I knew I was about to burst. Just then I felt Tanya's body reacting and knew she was also about to cum again. Almost in unison, our cries of ecstasy pierced the night air. \n\nWe lay there, looking at the stars, our sweaty bodies intertwined. \"I love you,\" whispered Tanya. \"I love you with all my heart.\"\n\nI knew I had done it. I gave Tanya the most memorable, most romantic night of her life. \n\n\"I love you too, Tanya, probably more than you'll ever know,\" I proudly said.\n\nAfter that night we made love whenever we had the opportunity. We also spent every minute we could with each other. By graduation the whole school figured we were destined for marriage, me included. \n\nThe summer after graduation I remember as being the greatest summer of my life. I had actually landed that job with the newspaper and was looking for an apartment where Tanya and I could be with each other always. \n\nAs the summer months ticked away; however, my joy was slowly being replaced with anxiety. In the fall I would start night classes at a local community college, but Tanya was going to college down state. We would be separated for months at a time. I couldn't even think of my life without her. \n\nThe night before she left we both cried our eyes out and reaffirmed our love for one another. Five months later I received a dear Brent letter explaining she had met a really great guy and asking me to be happy for her. 'You will always hold a very special place in my heart,' the letter went on to say, and she hoped I would someday find the girl of my dreams.\n\n***\n\n\"Uuuhh,\" another wave of white heat seared through my body ripping me from my dream like state, and back to reality. I tried to lift my head. I had to get my bearings but all I could see was the darkening gray sky above. I struggled to gather my strength. I had to reach the house: I had to get help. I fought to stay conscious but I was having trouble breathing and I was getting light headed.\n\n\"Yes, darling, I do love you. I love you very, very much.\" Again I heard a voice drifting into my thoughts. No, not Tanya's this time, this voice I recognized immediately...\n\nChapter Two; \"Kris\"\n\nIt was Kris, the woman with whom I had shared ten years of my life and the mother of my two daughters. I remember when she first spoke those words to me. It was so many years ago and yet I could see her so clearly in my mind. She was propped up on her right elbow staring down into my face after our third, marathon love making session that night. \n\nAgain I tried to raise my head, but I was still too weak. I could feel the strength draining from my body and I had to regroup. I lay there and allowed myself to think back to the first time Kris walked into my apartment on the arm of my best friend, George. She was stunningly beautiful and, for the first time since losing Tanya, I found myself interested.\n\n\"Brent,\" started George, my pleasingly plump friend; \"meet Kris, or as she's known in the modeling world, 'KA.'\"\n\nI stepped forward and lightly took her hand. \"How do you do, Kris, it's nice to meet you,\" I said trying desperately not to trip over my words. \"Please, have a seat. Can I get you something to drink? I have soft drinks plus a fully stocked bar.\"\n\n\"Thank you,\" she said. \"I'll take a glass of white wine if you have it.\"\n\n\"One glass of white wine coming up,\" I said. \"George, you want your usual?\"\n\n\"Yeah,\" he answered while sitting in the chair opposite Kris. \"That'll be fine, Brent, thanks.\" \n\nAs I turned in the direction of the bar, George started the conversation. \"Brent here is the best damn newspaper photographer in the city,\" he told Kris. \"He's on staff at The Times.\" \n\nGeorge had a way of exaggerating big time, but I had no problem with him building me up in front of Kris. I knew exactly what he was going to say next when he started to chuckle. \n\n\"You know the difference between his job and mine?\" he asked. Kris shook her head. \"I shoot the live bodies, he shoots the dead bodies.\" \n\nThis was George's standing joke ever since he had gone with me to a crime scene one night. One of our local mafia wise guys had evidently pissed off his boss and was lying on a restaurant floor with several .45 caliber bullet holes in him. I shot a few pictures of the body before the coroner removed it, hence the dead bodies. \n\nGeorge, on the other hand, was the chief photographer for one of the largest studios in the city. They specialized in catalog photography and did most of the work for Sears, J C Penny's, Montgomery Wards, and almost anyone else who produced a catalog of their wares. George worked with dozens of local models every day, hence the live bodies. \n\nMost of the time George's little joke didn't bother me, but I certainly didn't want this gorgeous creature to associate me with nothing but dead bodies. \n\n\"Don't listen to him,\" I said to Kris. \"He's just jealous because I get my name in the paper every day.\"\n\nI handed out the drinks. \"White wine for the lady,\" I said as Kris reached to take the glass from my hand, \"and Kentucky bourbon for George.\"\n\nIt wasn't long before we were all engaged in conversation. Kris was so easy to talk to and had a smile that would light up the sky on a moonless night. \n\nAs the evening waned on George asked if I would mind taking Kris home. I was beginning to wonder what George was up to. He never did say the reason for the visit, and now he wanted me to give this gorgeous woman a ride to her apartment in the burbs. \n\nAt that point I really didn't care about his motives; I wasn't about to look a gift horse in the mouth. \"I don't mind at all,\" I said looking at Kris.\n\n\"Are you sure?\" she asked. \"I live in Wheeling. That's a good forty-five minutes from here.\"\n\n\"No problem at all,\" I said as we all started for the door. \n\nThe first few minutes in the car were filled with small talk until Kris turned her head in my direction. \"George was right about you,\" she said.\n\n\"Right about me, I don't get it, what was he right about?\"\n\n\"You're a really nice guy,\" she said with a smile. \"I haven't met too many lately. My last boyfriend was cheating on me and when I called him on it, we broke up.\"\n\n\"Cheating...on you?\" \n\n\"Yeah,\" said Kris, \"and I think it was with more than one woman, too. Anyway, I was complaining to George and telling him I didn't think there were any nice guys in this whole city. He said he knew of one and asked if I wanted to meet him.\"\n\n\"So that was the reason for the visit, I wondered.\"\n\n\"Yep, I wanted to meet the one nice guy from Chicago,\" she said grinning. \"And here you are.\"\n\nI learned a long time ago, if you're interested in someone, let them know by asking questions and paying attention to the answers. Kris loved modeling. She did hand and foot modeling, as well as lingerie. In addition to George using her whenever he could, she also had several other accounts including De Vry's, one of the biggest jewelers in the city. \n\nBy the time we reached her apartment it was getting pretty late. \"What time do you have to be at work tomorrow?\" she asked. \n\n\"Ah,\" I had to think, \"not until ten,\" I answered. \n\n\"Good,\" she said as she stepped up in front of me. With a slight smile she looked at my shirt and began to unbutton it. She looked back into my eyes. \"Then let's get horizontal.\"\n\nWow, I thought, these big city girls sure do move fast. I was already starting to pitch a tent in my pants. My brain was telling me to slow down, I've only known this girl for a few hours; of course my cock was saying who cares, we're going to get laid. \n\nI think I was more excited over seeing this breathtakingly beautiful woman naked than I was over having sex with her. Within a few minutes I found myself between her lovely legs giving my tongue the workout of a life time. \n\nShe screamed and twisted her body. She grabbed the back of my head and pushed me down into the sweetest pussy I had ever seen. \"Oh God,\" she exclaimed after coming down from her third or fourth orgasm. \"You have a very talented tongue.\" \n\nShe crooked her finger at me. \"Come up here,\" she said. As I crawled up further on the bed she reached down and took a hold of the steel bar between my legs and started guiding it home. \n\n\"Are you on the pill?\" I asked.\n\nShe smiled. \"Yes, I am. Thanks for asking. Now, quit being so damn nice and fuck me.\"\n\nI didn't have to be told twice. She already had the head of my cock poking at the entrance to heaven. She gave a breathy sigh as I pushed. I knew I wouldn't last long. The touch of her hand almost had me exploding, but I did manage to hold off a little longer.",
        "\"Oh yes, yes,\" Kris was screaming. \"Harder, harder,\" she yelled some more. I starting thrusting harder, faster, her body writhed under my assault. \n\nJust as I felt my balls drawing up tight Kris shrieked in ecstasy and I knew she was coming again. My whole body stiffened and I pumped with one last hard thrust before groaning with the intensity of my own climax. I collapsed on the bed next to her; we lay there, both trying to catch our breath. \n\n\"You're not only a nice guy,\" said Kris being the first one able to talk, \"but you're not a bad lay either.\"\n\n\"Kris,\" I said still breathing hard, \"any man who isn't inspired by your beauty is dead, and I'm not dead.\"\n\nShe turned toward me and lightly touched my mouth with her finger. She smiled, gently rubbed her thumb over my lips and kissed me. I hadn't dated much since Tanya. The trauma of losing her left me scared of getting too close to another woman, afraid of having my heart ripped from my chest again, but as I gazed into Kris' eyes, I knew I was about to become involved, there was just no way around it. \n\nAfter several minutes of cuddling, Kris got up and disappeared behind the bathroom door. I could hear water running and in another minute Kris came out with a warm wash cloth. I thought I was in heaven as she reverently bathed my genitals then patted them dry with a hand towel. No one had ever done that for me before but I knew next time it would be my turn. \n\nShe climbed on the bed, bent down, and took my semi-hard dick in her mouth. Her head bobbed up and down and had me at full mast inside of about thirty seconds. She held it upright with her hand and started to rapidly flick her tongue around the very tip then under the head. She knew all the sensitive areas and she knew what to do with them.\n\nShe stopped long enough to look into my eyes. \"You ready for round two?\" she asked. \n\nI was still in euphoria from her able bodied tongue. I closed my eyes, \"Oh yeah,\" was about all I could get out. Kris crawled up a little and swung her leg over me. She reached behind and steered my missile to its target. Kris laid her hands on my chest and started moving her body up and down. I took a hold of her waist and helped her on the way up each time. She closed her eyes and threw her head back as she picked up the pace. I could hear the bed springs keeping time with the tune of our love making. \n\n\"I...I'm going to cum,\" I cried. \"I'm going to cum!\" \n\n\"Come on, baby,\" she replied not far from euphoria again herself. \n\nSuddenly my body convulsed in an upward movement. I sat up wrapping my arms around Kris' luscious body just as she too erupted unleashing wave after wave of erotic sensations. \n\nWe rested on the bed next to each other giggling at our own exhaustion. \n\n\"I know this is probably a silly question to ask a man,\" said Kris in a soft voice, \"but did you enjoy it, because I sure did.\"\n\n\"I can't think of anything I could possibly enjoy more,\" I said turning my head and kissing her on the lips. \n\n\"What time do you have to get up in the morning?\" she asked.\n\n\"Oh, I should be out of here by seven anyway,\" I said. \"That'll give me time to get home, shower, and change my clothes.\" \n\n\"Okay, I'll set the alarm for six. That'll give us time for a quickie before you have to go,\" Kris said with a devilish, little smile.\n\nWe cuddled in each other's arms and drifted off to sleep. The next morning we not only screwed like rabbits again, but Kris asked if I could make it back that night. I did...that night, and the night after, and the night after that. In fact, Kris and I started spending all of our free time together. We became a couple, a couple who was falling in love. \n\nSix months had flown by like a whirlwind. I knew what my feelings were for Kris. I felt so vulnerable; not since Tanya had I allowed my heart to open up like this. The problem was neither of us had actually spoken those, so important, three little words. Did they really need to be spoken or could they just be understood? I was terrified to say them first. What if she didn't say them back? \n\nOne of the nice perks of working for the newspaper was our revolving work schedule. Every third month we got a three day weekend. We would work Friday until about five, then have Saturday, Sunday, and Monday off, not having to be at work again until two o' clock Tuesday afternoon. My long week-end was coming up in another week and I had something planned. \n\nI asked Kris if she had ever been to Door County Wisconsin. I knew she hadn't because George told me earlier it was somewhere she always wanted to go but never got the chance. When I asked her if she could clear her calendar and go for the weekend she jumped at it. \n\nBy the time we arrived in Ephraim, our destination, it was too late to do anything other than check in to our motel and get a good night's sleep. The next day; however, was filled with things to do. We found a quaint, little ma and pa restaurant that had the best eggs and sausage either of us had ever eaten. From there we toured antique shops, art galleries, and wineries. \n\nWe strolled the waterfront arm in arm and watched the waves of Lake Michigan thunder in and crash violently against the pre-historic rock formations along the shore line. Later that evening we dined at a fabulous, little restaurant in town that came highly recommended by everyone. \n\nAll night I tried to keep from showing my nervousness. I had to ask the question tonight, the answer to which, would certainly impact the following night, as well as the rest of my life.\n\nBy the time we got back to our room we both needed a shower. She stepped in first but I was right behind her. I reached around and lathered her magnificent breasts just as she reached around, took my cock with her soapy hand, and slowly started stroking my rigid member. I pushed it into the crack of her ass and moved up and down. Kris started to moan. She took a step back, braced her hands on the shower stall wall, and gave me full access to her love canal. \n\nI wasted no time in slipping my stiff cock all the way in. Kris threw her head back as she met my every thrust with her own rhythm. I wrapped my arms around her body and held her tight as we both climaxed.\n\nKris was having such a good time; she was like a kid at heart. We dried each other off and ran right into bed. I laid down. My cock was already starting to stiffen again. Kris sucked it into her mouth without a second thought. She used every trick she knew and was driving me absolutely wild with desire. Soon I was on top of her again pounding away with wanton enthusiasm. We both came in a climatic euphoria that shook the beams in the ceiling. \n\nWe rested for a few minutes then started again, this time; however, I wanted to make love, slow passionate love. I cradled her head in my arm and kissed her softly. She moaned with delight as I caressed the erogenous zones behind her ears, down the nap of her neck, around her shoulders, and then moved to her breasts. She arched her back and whimpered as I gently pinched her nipples. \n\nI worked my way down the tight muscles of her flat stomach and on to the recently shaved mound that lay in wait between her legs. \n\nI brought her to one climax after another before lovingly slipping my cock into her eagerly summoning hole. I moved with a burning passion that comes only from the heart. \n\nIt was after two the morning by the time we were both spent. We lay with our bodies intertwined. It was now or never, I thought.\n\n\"Honey?\"\n\n\"Uh huh,\" she answered as if in a haze.\n\n\"I have to ask, you've never said anything; do you love me?\"\n\nKris looked over at me. She propped herself up on her right elbow and looked down into my face. \"Yes darling I do love you. I love you very, very much.\"\n\nThat was all I needed to put the rest of my plan into action. I smiled up at her, raised my head and kissed her. \"I love you too, honey, but then I'm guessing you already knew that.\" \n\nSunday morning we were up early. Everything was so beautiful neither of us wanted to waste a minute of the little time we had left. Today was going to be picture day. I grabbed my Nikon and we were off to capture another day of wondrous adventures on film. Together we explored ancient caves, climbed the highest peaks, and tried to interpret three hundred year old Native American art. \n\nAt the end of a full day we returned to our motel room to shower and change into clothes suitable for a pleasant evening of dining and dancing. \n\nBy the end of the evening I was afraid Kris might be too tired for me to carry out the rest of my plan, but when I asked her if she'd like to go down by the water and gaze at the full moon for a while, she was all for it. \n\nWe changed into some warm, comfy clothes and walked to a little bench outside of our room. As we sat and cuddled, the gentle rolling waves of Lake Michigan lapped at the sand just inches from our feet. Kris turned her head toward me, and with a soft kiss said, \"This is really nice, honey, thank you for this weekend.\"\n\nI smiled; she didn't know it but she was playing right into my little trap. \n\n\"You're very welcome, honey,\" I said kissing her back. \"You know, I was watching TV the other night and a commercial came on for De Vry's Jewelers. I saw your gorgeous, feminine hand with long slender fingers adorned with a beautiful ring, and I was so proud to be able say to myself, I know the woman on the other end of that hand.\"\n\nKris was smiling as I took her left hand. Then, before she knew what was happening, I slipped a diamond ring onto her ring finger. \n\n\"Those commercials are missing one thing though,\" I said getting down on one knee. \"Kris, I didn't think it was possible for me to ever feel this way again, but being with you has become the most important thing in my life and I don't ever want it to end...will you marry me?\"\n\nFor a moment she just stared at the ring, like she was in shock. The silence was deafening. My stomach started doing flip-flops. I could feel the knee of my Levis getting wet from the moist sand and I thought maybe I had blown it. \n\nFinally, with tears streaking down her cheek, Kris looked up from the ring on her finger and into my worried eyes. \"YES,\" she yelled grabbing me around the neck, \"Oh my love, yes, yes, yes.\" \n\nShe jumped from the bench as I was standing up and threw herself into my arms. I hadn't fully gotten to my feet yet and lost by balance falling backwards into the cold water with Kris falling on top of me. \n\n\"Are you okay?\" Kris asked with a little giggle. \n\nI smiled, wrapped my wet arms around her, and pulled us closer for a kiss. We embraced as the Lake Michigan waves broke over our bodies. \n\nOn March first of the following year we exchanged vows in a quaint, little Illinois village church just north of the city. Our wedding was straight out of a Norman Rockwell painting with family and friends paying tribute to the two happiest people on earth. \n\nAfter honeymooning in the Virgin Islands, we settled in and started making a life for ourselves. Because Kris' apartment was so much bigger than my pad in the city, I moved in with her and became a suburbanite. Adjusting to married life was no problem at all. Her friends became mine, my friends became hers. Life was good and getting even better.\n\nEvery year the Illinois Press Photographers Association has its awards show and banquet. Press photographers from all over the state compete by submitting their finest work to be judged. \n\nI had been competing for years but never won much; this was my year, however. Maybe my work was better because I was in love. I don't know, but I won first place in three categories, second place in another, and third in still another. I missed, 'Photographer of the year,' by only two points. Even so, later that year, winning so many awards was enough to get me a sizable raise from the newspaper. I was going to take Kris out to dinner to celebrate, but she had other ideas.\n\nThat night she met me at the door with her usual welcome home greeting. Kris put her lovely arms around my neck and kissed me, long and hard. \"Ummmm,\" she said, \"you kiss pretty good for an old married man.\"\n\n\"I'll show you how old this married man is,\" I fired back. \"I plan to celebrate my raise by driving you into orgasmic bliss tonight.\"\n\nShe laughed; little did I know she had the same thing in mind, only with a twist.\n\n\"Sounds good to me,\" she said with a big grin. \"But before that, I made a little something special for dinner.\"\n\n\"Oh honey, I thought I'd take you out tonight; someplace nice and romantic before ravishing your body.\"\n\n\"No need honey, I have everything right here,\" she said looking into my eyes.\n\nIt was then that I noticed the glow from the candles. I looked around at the romantic atmosphere; she had put a lot of work into making this a special evening. I wondered to myself, what did I ever do to deserve such a fantastic wife?\n\n\"Are you sure dinner can't wait?\" I asked with an evil grin.\n\nKris playfully punched my arm. \"Are you kidding, after I've been slaving over a hot stove all day, absolutely not. Go make yourself a drink and relax. Dinner will be ready in ten minutes.\"\n\n\"I will admit,\" I said, \"something smells awful good.\"\n\nIt was good too. Trout Almoundine, just the way I liked it. After a romantic, candle lit dinner, Kris brought out some after-dinner wine and we retired to the couch for a little R & R. \"So,\" started Kris, \"you want to get frisky tonight, huh?\"\n\n\"Honey, I can't think of a better way to celebrate anything than to make love to my gorgeous wife. Honestly, I was going to take you out to dinner first, but that trout was as good as anything we could get at a restaurant. Thank you so much for that wonderful dinner. Now...you want to fuck?\"\n\n\"You do know how to woo a girl don't you,\" Kris said with a smile. \"Yes, I want to fuck, but there is something I want to ask you first.\"\n\nI looked into her eyes. It was getting so I could just about read her thoughts from those beautifully expressive green eyes, this looked serious. \"Of course honey, is something wrong?\"\n\n\"No honey, not at all. I want to make love to you, but first I want to know if you want me to take my pill? I haven't taken one today and I would like to stop them all together.\"\n\nI must have looked confused.\n\n\"Honey, I want to have your baby. I want to get pregnant. What do you think?\"\n\nThere was no way to misconstrue my reaction. My eyes immediately teared up with joy. I almost spilled her wine as I took her in my arms and smothered her with kisses. \"God how I love you,\" I told her. \"No one has ever loved anyone more than I love you.\"\n\nShe kissed me back with just as much passion as I had kissed her. \"I love you too my darling. Shall we get horizontal and start making a baby?\"\n\nI picked her up in my arms, something I hadn't done since our honeymoon, and carried her into the bedroom. I laid her down gently, reached behind her neck and undid the string that held up the small cocktail dress that so amply emphasized every delicious curve of her body. As I slowly and sensually slipped the dress off I found my suspicions of the night confirmed, she was wearing nothing under it. Her magnificent breasts and perfectly smooth mound slowly came into view.\n\nShe looked up with excited anticipation as I removed my own clothes and slid into bed beside her. We turned toward each other and kissed. \n\nTo me, making love was always so special. It was the ultimate expression of my devotion. It was an intimacy shared only between two life partners; to me it embodied my vows to love, honor, and cherish her for the rest of my life. That night I could feel my heart bursting with pride as well. I already felt like a father as I planted my seed in hopes it would grow. \n\nAs it turned out, it would be almost three months before Kris went to the doctors. \n\nBefore the age of cell phones the best way to contact someone on the road, like a newspaper photographer, was with a beeper. When mine went off and I looked down and saw our doctor's number I immediately pulled over and called using a pay phone. The office girl answered, then I heard her call my wife's name and tell her, her husband was on the phone.\n\n\"Honey,\" Kris said all excited, \"you're going to be a father!\"\n\nMy heart almost jumped from my chest. I couldn't even talk. I just stood there with the phone up to me ear.\n\n\"Honey; are you there? Did you hear me? You're going to be a daddy!\"\n\n\"Ye...Yeah honey, I heard you, I...I just can't talk, I'm too, ah, I...I can't believe it. I'm really going to be a dad. You're a mom, we're going to be a family, honey. Oh my God!\" By now I had tears in my eyes. \"Honey, I love you so much.\" I was completely choked up and starting to sniffle. Kris could hear it through the phone.\n\n\"I love you too honey,\" she said. \"You're going to be as great a dad as you are a husband.\"\n\n\"Honey, listen, I have two more assignments and then I'm done for the day. I'm going to see if they'll let me go a little early. How about a nice romantic dinner out tonight? I still owe you one. You pick the place, anywhere you want to go, honey, anywhere.\"\n\n\"My darling you read my mind,\" she said; \"how about that little Italian place on Sheridan road overlooking the lake?\" \n\n\"I'll make the reservations as soon as I get back to office,\" I said. We said our happy goodbyes and I immediately stopped off for some cigars.\n\nLater that night, we ate Italian cuisine with our forks in our right hand while we held hands across the candle lit table with our lefts. A little later we enjoyed an after dinner wine and watched as a big yellow moon seamed to rise from edge of Lake Michigan. Our waiter asked if we were newlyweds. I said no but I couldn't help burst with pride as I told him we just got word we were going to be parents for the first time. He congratulated us then surprised us a few minutes later with flaming Cherries Jubilee on the house. \n\nNine months later, after nervously walking the waiting room floor for more than four hours, a nurse came in and announced the birth of my daughter. She led me into the recovery room to see Kris and the newest member of our happy family. \n\nKris' hair was matted against her head from the sweat. I could see she was absolutely exhausted. She had on no makeup and was dressed only in a hospital gown, but she never looked lovelier. She lay with our child in her arms and the biggest smile I ever saw across her face.\n\n\"Hi honey,\" she managed to say. \"We did good.\"\n\n\"Yes honey, we did good. She's beautiful, just like her mother.\"\n\n\"Would you like to hold your daughter?\" asked the nurse with a kind smile.\n\n\"May I?\" I asked. \n\nThe nurse reached down and picked up little Brea and gently laid her in my arms. My chest swelled, my eyes clouded with tears of happiness. I had never felt anything like the joy I was feeling at that moment. I guess it was catching because as I looked, both the nurse and my lovely wife had the same tears of joy. \n\nOur apartment was plenty big enough for the three of us so there were no pressing plans for buying a house until a year and a half later, when Brea's sister was born. We were a family of four and I was truly a blessed man. Space; however, was getting cramped. \n\nIt was a couple of months after Catherine, our second child, was born when we started looking for a home. As soon as we started our search we realized it wasn't going to be easy finding one big enough to support our growing family, while at the same time, was in our price range. \n\nI was coming in from a day of assignments wondering if we were ever going to find a place we could afford when I walked into the photography office and smack dab into a blinding flash of light. I stopped in my tracks and blinked my eyes not knowing what had just happened. I heard a voice say, \"Now you know how people on the other side of the camera feel.\" The spots in front of my eyes cleared to see a gang of the people I worked with. ",
        "\"Surprise,\" I heard someone say from the group. I looked around hoping to find someone who would tell me what the hell was happening.\n\n\"Personnel clued us in my friend,\" said Terry a companion photographer. \"Today marks your tenth anniversary here.\"\n\n\"Happy anniversary;\" everyone yelled as Jenny, the office girl, approached with a cake supporting ten candles. \n\nIt looked like we were going to have a party so I thought I'd better call Kris and let her know I'd be home late. When I talked to her she asked how late I would be. When I told her about an hour she said okay but try not to make it much later because George was at the house and wanted to talk to me about something. \n\nI did enjoy myself at the party and walked into the house in a good mood. Company or no company, Kris greeted me in her usual, passionate way. \n\n\"I held off dinner until you got home honey. George is going to eat with us if that's okay. Oh, and one more thing,\" she said squeezing me a little tighter around the neck and giving me a second long, passionate kiss. \"Happy anniversary honey, I wished I'd known.\"\n\n\"Hell honey,\" I said, \"I didn't know myself until the party.\"\n\nI walked into the living room. \"Hi George, how the hell are ya?\"\n\n\"Fine as frog's hair,\" he responded. \"Hey, I understand congratulations are in order. Has it really been ten years? Damn; time flies when you're having fun, huh old buddy?\"\n\nJust then Kris called us to dinner. As usual, she fed Catherine and I fed Brea. George fed himself. After dinner Kris took the girls to get their bath and get them ready for bed. George wanted to talk to me about something so I got us a couple drinks and sat down on the couch.\n\n\"Brent, do you know Don Del Notto? He has a little commercial photography studio just off of Ohio Street.\"\n\n\"Ah, I know I've driven by the studio but I don't know him personally, no; Why?\"\n\n\"Because he's selling his studio and I think you should buy it.\"\n\n\"What;\" I couldn't believe George thought I should buy a studio. I was a press photographer.\n\n\"Listen to me a minute, Brent. We farm out some of our small product photography to this place. Hell, I'll bet we give him almost a hundred grand a year for shooting the stuff we don't have time for.\"\n\nI didn't know the first thing about running a studio but the hundred grand a year caught my attention. \n\nGeorge continued, \"Del Notto has a brother in Vegas who is very sick. Don wants to sell the studio and go out there to take care of him. I was talking to him the other day and you could buy that place for a song. Don just wants to get out and he's willing to sell the whole business for the value of the equipment.\"\n\n\"George, I doubt that I could afford it. How much is the equipment worth?\"\n\n\"Forty thousand dollars,\" he replied.\n\n\"George, we're trying to buy a house right now. There is no way I could come up with that kind of money.\"\n\n\"Brent the house could wait another year. I'm telling you, if you let this slip through your fingers you'll regret it for the rest of your life.\"\n\nJust then Kris came out from putting the girls to bed. She had a small grin on her face. \"So what do you think, honey?\" she asked. \n\n\"Think, about what?\" \n\n\"Ah, well,\" George stammered, \"maybe I shouldn't have, but I just couldn't help telling Kris about the studio. Brent I'm telling you, you just can't let this go.\"\n\n\"And what do you think?\" I asked looking at Kris.\n\n\"I think it's your decision to make honey, but I heard something about the house as I was walking out of the bedroom. If you're worried about buying the house, don't be. This apartment has been just fine for us so far and it will continue to be fine. You have to do what you feel is right. You have to listen to your heart, your head, and your gut; know this though, whatever decision you make, I will back you one hundred percent. I believe in you my love. I believe you can do anything you set your mind to doing, so whatever you decide, you will have the love and support of this family behind you all the way.\"\n\nWow, I thought as I sat there almost in shock from Kris' speech, would this really be possible. I had to admit, after ten years of constantly driving around the city at all hours of the day and night; sometimes having to go into dangerous areas in the wee hours of the morning to shoot a fire or some police action, it would be nice to work regular hours and from one location for a change. \n\nI looked at George who was staring at me with a big grin. I looked back at Kris who, by now had sat down next me and put her arm around my shoulder. I thought how quickly life can change. I was twenty-eight years old. Press photography was the only work I'd ever known and now I was seriously considering jumping into another career. It was scary, but with George's help and the staunch support of my wife, I didn't see how I could fail.\n\n\"George,\" I said looking back in his direction, \"I'm not jumping into anything yet but I would like to talk to this guy. I'd have to make sure whatever lease agreement he has would stand and for how long. I'd also have to make sure he's not going to leave me with a bunch of debt. All outstanding bills would have to be paid before I would accept the keys.\"\n\n\"Brent my friend,\" George said while laying his hand on my knee and giving himself a slight boost as he stood up, \"I will get a meeting set up with you and Don. He's really a nice guy. I've worked with him for years. I don't think you will have any problems coming to an agreement and you'll find him as honest as the day is long. I'll call you Monday or Tuesday. I'm sure you can meet right at the studio and look around while you're there.\"\n\nKris and I said our goodbyes to George then relaxed on the couch holding each other in our arms. Kris knew I had a million different thoughts whirling around in my head. \"You know what you need,\" she said.\n\n\"I know what I'd like to do,\" I replied with a grin. I didn't have to say another word. Kris knew exactly what I meant. I wanted to ravish her body. \n\n\"First,\" she said, \"you need a nice warm bath...along with your own private concubine, that's me of course, to bathe you. After the bath you're going to stretch out on the bed and I'm going to give you a massage. I'm going to work on every one of those tight, worried muscles of yours until they're loose and relaxed. Then I will be the one doing the ravishing tonight. I am going to suck your cock until it's so hard it hurts. Then I'm going to ride you until all the worries and negative thoughts are a thing of the past. I am going to drain every drop of precious cum and every ounce of strength from your body and when it's all over, the only thing on your mind will be pure, unadulterated euphoric bliss. How does that sound?\"\n\n\"Talk, talk, talk,\" I said with a big smile. \"When do we begin?\"\n\n\"Right now,\" she said standing up and pulling me toward the bedroom by my hand. \n\nKris did everything she said she would and more. Sometime around two in the morning, she finally cuddled up into my arms with a very satisfied look. A few minutes later we both drifted off to a peaceful sleep. \n\nIf Kris' night of sexual bliss was designed to put me into an adventurous mood, it worked. By the time George set up the meeting between Don and me, I had pretty well decided to go for it. As long as there were no surprises and everything looked good, and as long as I could get a business loan, Del Notto's photo studio would have a new sign out front.\n\nAnd so; 'Brent's Commercial Photography,' was born. \n\nNot once since turning the key in the new lock to the front door, was I ever sorry. For the first few weeks George would send me work during the day, then stop over after hours and show me how to light and shoot it. It wasn't long though, before I was shooting without George's help. I studied hard and even surprised George with more creative lighting techniques I had learned on my own. \n\nOne by one I sent the older cameras into the factory to have them updated and reconditioned. In the first year I made a little over a hundred and twenty-five thousand in total receipts. By the end of my second year I was up to two hundred grand and at the end of my third year I was doing over a quarter of Million. \n\nIt got so I couldn't handle everything alone anymore so I first hired an office girl to schedule appointments, keep the books, and just help out in general.\n\nBy now my landlord was feeling sorry that he hadn't raised the rent when I first took over. Del Notto wasn't doing all that well so he kept the rent low to help him out. Now; however, he realized he left a lot of money on the table. The space was easily worth another three to four hundred a month but I reminded him I still had another two years to go before the end of my lease. \n\nThen I saw an opportunity for both of us and said I would make him a deal. There were three rooms in the back of my studio that he was just using as storage. I told him, if he would clean them out I would rent them for an extra four hundred a month. He was more than eager to take my offer. He got his rent increase and I got the room to expand my business.\n\nNext I had to hire another photographer. He was a young kid straight out of college after receiving his master's degree in photography. He still had a lot to learn but he was a quick study. I had no doubt that he would learn everything I could teach him, then someday go out on his own and take some of my clients with him; it seemed to be the nature of the business.\n\nOver the next few years, things seemed to calm down. The business pretty well hit a plateau but we were in a very comfortable position financially and I had no intentions of expanding anymore, at least not just yet.\n\nMy personal life was also cooling off a little. About a year after buying the studio we found our dream house, a four bedroom, three bath Victorian on a three quarter acre lot. The moment Kris and I saw it we knew it was where we would raise our family. \n\nI spent an average of ten hours a day in the studio while Kris was doing a fantastic job of raising our children. Both Brea and Catherine were now in school and I guess the empty house syndrome was taking its toll on Kris. We had always made love at a fever pitch, but lately it had gone from a hundred and three degrees to about ninety-eight point seven. I supposed, after nine years of marriage and two kids, one should expect something like that.\n\nIn five months it would be our tenth anniversary and I had a plan that would, hopefully, bring our love making right back up to that high fever. Every year we tried to take a little vacation but always with the kids of course. We always had a great time but I was really looking for a nice, romantic get-away with just the two of us.\n\nYes, I could see the Virgin Islands in our future. When we were there for our honeymoon we rented a little cottage behind the hotel that owned the property. It had a living room, a bedroom, a little kitchenette and it was only steps from the beautiful turquoise waters of the Caribbean. \n\nOf course that was almost ten years ago. The hotel had changed hands twice since then and I didn't even know if the little hut was still standing. It took me a couple hours and several long distance phone calls before learning the new name of the hotel and the fact that the little hut was indeed still there, and was still being rented out. I immediately reserved it for the week of March first the following year. Now all I had to do was figure out what to do with the kids for that week. \n\nI wasn't about to leave them with my folks. In his old age my dad had lost what little patience he ever had. He would be yelling at them from the time they got there till the time they left. No, my folks were out of the question.\n\nThat left Kris' mom and stepfather, but they lived in Colorado. I wondered how they would feel about staying in Chicago for a week. I called and first made them promise not to mention anything to Kris before asking if they would be interested in babysitting. Since they lived so far away they didn't get a chance to see their grandkids that often and jumped at the chance. My plan was coming together.\n\nI really wanted to surprise Kris at the last minute with our second honeymoon so I was on pins and needles for the next several months worrying about her parents making a slip, especially around Christmas. They flew out and spent three days with us, but thank God, never said a word to spoil my plans. \n\nI was hoping the holidays would brighten Kris' spirits some but as soon as they were over she went right back into her slump. Our sex life was suffering even more than before and I was literally counting the days till March.\n\nOn February twenty-seventh operation 'little grass hut,' was launched. I had arranged for a limo to pick Kris' parents up at O'Hare and bring them straight to our house. A little after seven in the evening our doorbell rang. The look on Kris' face was absolutely priceless as she looked at her mother and step-dad standing on our porch with suitcases in hand. \n\n\"Hi honey,\" said Greg, the man she had known as her father since childhood. \"We were just in the neighborhood and thought we'd drop in for a visit.\" \n\nKris screamed with delight and hugged them both. \"Ah honey,\" I spoke up. \"Shouldn't we invite them in?\"\n\n\"Yes, yes of course,\" she responded. \"I'm just so surprised to see you guys. Come in, please. Gad,\" said Kris still getting and giving hugs, \"it's so good to see you.\" \n\nThe kids, who were upstairs in their rooms, heard the commotion and came down to see what was going on. When they saw grandma and grandpa they welcomed them with excitement. It took several minutes for things to calm down. I could see Kris was just full of questions but we still hadn't quite gotten over the greeting stage yet.\n\nOnce the initial shock was over I brought refreshments out for everyone. \"How did you get here from the airport?\" asked Kris. I could tell she had a ton of questions. \n\n\"Brent sent a limo for us,\" said Audrey, Kris' mother.\n\n\"Brent did?\" Kris looked at me with a question mark in her eyes. \"You knew they were coming and you didn't tell me?\"\n\n\"Honey, if I had said something it would have ruined the surprise,\" I said.\n\nKris smiled at her folks. \"Oh, of course, you're here for our anniversary.\" Kris got up from the couch, put her arms around my neck, and planted a big sloppy kiss on my lips. I heard the kids groan.\n\n\"Well yes honey.\" I said after getting my lips back. I looked into her eyes and smiled. \"They'll be here for our anniversary but we won't be.\" \n\nFor a second I thought I saw terror in her eyes but I knew it must have been more questions. I reached into my pocket and pulled out the airline tickets.\n\n\"Happy anniversary,\" I said handing them to her.\n\nShe looked at them and gasped putting her hand to her mouth. \"Honey; oh my God, we're going back to the Virgin Islands? Really?\" she had tears in her eyes when she looked back up at me.\n\n\"Yes darling,\" I said almost tearing up myself. \"Your folks are going to baby sit for us while you and I are lounging on the beach in St. Thomas right in front of the same little hut we had for our honeymoon.\"\n\nAt that point I think Kris forgot about her parents and the kids. She jumped on me, put her arms around my neck and hung on while wrapping her legs around my waist. Then she smothered me with a deluge of kisses. That was exactly what I was hoping for, I had my Kris back!\n\nSt. Thomas was even better this time than it was ten years ago; for one thing we had more money to spend. Even though the hotel had a new owner it hadn't changed much. We ate our dinners at the same outdoor restaurant and fed the iguanas from table scraps. During the day we shopped the many specialty stores scattered all over town. We went hiking in the mountains, swimming in the ocean, and took pictures of all the historical sights. \n\nOne that Kris loved in particular was a beautiful old tree, ancient enough to witness Sir Francis Drake himself as he stood on the high bluff overlooking the bay, just waiting for an unsuspecting galleon loaded with pieces of eight. \n\nThe evenings we spent at the outdoor bar we enjoyed last time; located right on the beach, it allowed us to drink our Pina Coladas as the warm tropical waters kissed our toes at high tide. \n\nOf course we did all this in between our love making sessions. I think we probably screwed more than on our honeymoon. Kris was insatiable and I was so happy to have my wife back that I was up for just about anything. \n\nWe never even got to sleep on our last night. After a Mai Tai or two, we were back inside our hut. Before removing my own clothes, I slowly and sensuously undressed Kris, meticulously undoing one button, one zipper, one clasp at a time. \n\nAfter getting horizontal, as my wife would say, we lay facing one another and gazed into each other's eyes. For a brief moment I thought I saw an unfamiliar look, almost guilt, but I knew I was wrong. What would Kris have to feel guilty about? \n\nShe closed her eyes as I rained kisses down in all those little areas that drove her wild. I knew I wouldn't be able to talk the next day but I didn't care as I brought Kris from one orgasmic episode to another using my highly honed oral skills. \n\nSeveral times during the night the skin around my cock was stretched so tightly it was painful, only for a little while though, Kris saw to that. \n\nWe were like kids again. We just couldn't get enough of each other. We cared not of the hour, but of our passion for one another. Finally spent we lay cuddled in each other's arms and kissed goodnight. A few minutes later we both started to laugh as streaks of sunlight broke through the bedroom window. It was time get up.\n\nKris squeezed my hand as she watch the island getting smaller from her window seat. A lonely tear fell to her cheek. \n\n\"We'll be back,\" I told her trying to cheer her up. \"And it won't take us another ten years, either.\"\n\nI guess it's true about traveling. No matter how great the trip, it's always good to be home. Such was the case when we pulled into our drive. The kids were the first to realize our presence and came running out to the car with hugs and kisses for both of us. The grandparents waited just inside the door with big smiles. Just judging by everyone's mood, I guessed everyone had a good week. \n\nOnce inside we did a replay of all the welcome home hugs and kisses; of course we had presents for everyone. Both Catherine and Brea were ecstatic with their seashell jewelry. Kris adorned her mother's neck with a beautiful, precious stone necklace, and I gave Greg an expensive gold watch. I won't even tell you how much I spent on Kris down there; after all, it was our anniversary.\n\nThe next day we took Kris' parents to the airport and sent them back home with our profound thanks. After that things pretty much returned back to normal, everything except our love making that is, it continued to be as passionate as it had ever been on the island.\n\nFor the last five years the neighborhood Fourth of July party was our responsibility. We had a great grill and a good sized back yard so we didn't mind a bit. Kris really got into sending out the invitations, always coming up with some clever gimmick. \n\nI remember the day in late April when I came home a little early. Kris was busy cooking with her back to the door and didn't even hear me come in. Her laptop was open on the kitchen table with the list of the people she was going to invite to the party. Silently I was browsing the names.\n\n\"You forgot Rita and Jerry,\" I said. Poor Kris jumped a foot in the air. \"I'm sorry honey,\" I said with a slight chuckle. \"I didn't mean to scare you.\"\n\nKris was gasping for breath with her hand on her chest. \"You scared me half to death, Brent. Don't ever sneak up on me like that.\"",
        "\"I'm sorry honey,\" I said, \"really.\"\n\nKris walked over, now grinning after the initial shock, and gave me my usual welcome home hug and kiss. On the way back to the stove she casually lowered the screen of her laptop. \n\n\"You forgot Jerry and Rita Anderson,\" I said. \"You can't forget Jerry, he's always the life of the party.\"\n\nI seemed to detect a hint of nervousness in Kris' voice. \"They can't make it this year,\" she said. \"They're going out of town that weekend.\"\n\nI was legitimately sorry to hear that. Jerry was Kris' friend before I met him, but he was also a longtime friend of mine and was always the comedian. \n\n\"Oh that's too bad,\" I replied, \"Jerry's always good for a dozen laughs. Remember the Christmas party a couple years ago? He walked around all night with mistletoe hanging from his belt buckle.\"\n\nI didn't think anything more about it until the following month. I was on the golf course with the three guys I usually play with. We had all known each other for years. \n\n\"Hey did you hear about Rita and Jerry Anderson?\" asked Gary. \"They up and moved to Phoenix or someplace out there.\"\n\n\"What?\" I asked. I knew he had to be mistaken. Jerry worked at the airport, had for over twenty years. He loved his job, there was no way he would move. \"No, come on, Jerry would never quit his job and just move. You must have heard wrong. Hell Kris has known Jerry for fifteen years, there's no way he'd leave without saying goodbye to her.\"\n\n\"I'm telling you,\" said Gary adamantly, \"they're gone. I heard they were having problems. I think Jerry was seeing someone else but I'm not sure about that.\"\n\n\"Okay,\" I said. \"Now I know you must be wrong, Jerry fucking around on Rita; no way!\"\n\n\"All I know Brent is that they're gone. I heard Jerry took early retirement, the house is already sold...the whole ball of wax.\"\n\nI still couldn't believe it. Then I thought of Kris telling me they would be out of town for our party. \"When did they move?\" I asked\n\n\"About mid-March,\" said Gary. Mid-March, it was almost the end of April when Kris and I were discussing the guest list for our Bar-B-Que. She must have known that they had moved by that time. I wondered why she didn't just tell me instead of saying they would be out of town for our party.\n\nSomething didn't feel right; was Kris hiding something from me? As far as I knew Kris had never lied to me or had she ever given me cause to doubt or suspect her of anything. I'm probably making too much of this, I thought as I stepped up to the third tee and let fly with one right down the middle. \n\nI hadn't thought anymore about it until the day of the party. Between friends, relatives, neighbors, and all the kids, we must have had sixty people all milling around the house and back yard. As usual, I got stuck with grill duty while Kris floated around being the perfect hostess. \n\nI was quickly running out of hamburger buns and had to run into the house to get some more. I opened the kitchen cabinet door and was looking for more buns when I heard my wife from the other side of the wall talking with Jan, one of her best friends.\n\n\"So, what did Rita say to you?\" I heard Jan ask.\n\n\"Shhhh,\" my wife shushed her friend then lowered her own voice so I could barely make out what she was saying. \"She told me she would scratch my eyes out if she ever saw me again.\"\n\nWhat; did I just hear her correctly, I wondered? Rita and Kris were friends; why would Rita want to scratch her eyes out? This didn't make sense. I was no detective but it didn't take Sherlock Holmes to figure out something wasn't right. I quietly took the buns and left. I had to think. As Holmes would say, 'The game's a-foot.' I had to figure this out. \n\nIt didn't take me long; by the time I got back to the grill I could only come up with one explanation, and I didn't like it. First, Kris evidently lied when she said they would be out of town. She had to know by that time that they had actually moved. Then Gary heard Jerry was fucking around on Rita and now Kris says Rita wants to scratch her eyes out. It was elementary my dear Watson...Kris and Jerry had an affair!\n\nSuddenly my stomach was tied in knots. I almost threw up on the burgers. I called out for anyone, the closest human to the grill, to please watch it while I went in the house for a little while. I walked right past Kris and Jan who were still talking in the dining room.\n\nI must have looked sick when I passed because Kris asked if I was okay. I just mumbled and headed straight for the bathroom. Kris came to the door and heard me vomiting. \"Brent, are you sick? Are you okay? What's the matter, honey?\"\n\n\"I'll be okay,\" I yelled through the door. \"I just got a sudden upset stomach. I'll be alright in a few minutes.\"\n\nI could hear her concern but told her to go out and take care of our guests. I assured her I would be fine in a few minutes. \n\nBetween throwing-up and quietly crying, I had no idea how long I had been in there. Finally I washed my face and tried to look presentable again. When I came out Kris was waiting outside the door. Just as she approached Jan was coming over as well. \"Is he okay?\" Jan asked.\n\n\"I don't know,\" Kris replied looking into my face. With true concern she asked me, \"Honey are you alright, is it your stomach?\"\n\nI guess I was a little short with her. \"I said I'll be fine, go out and take care of our guests,\" I said with an edge to my voice.\n\nKris and Jan looked at each other. You could just hear the wheels turning wondering if I knew something. \n\n\"Okay honey,\" Kris said anxiously. She and Jan went back out to the party through the kitchen. I just wasn't able to face people yet so I went up to our bedroom to think. I sat on the edge of the bed and buried my face in my hands. \n\nI had to be wrong, I thought. Like I said, I'm not Sherlock Holmes. I'm sure I'm jumping to the wrong conclusion. There is just no way at all that Kris would cheat on me, and certainly not with Jerry. He was funny; almost clown like, but sure as hell no Don Juan. No, this had to be all a big mistake. Tonight, after everyone is gone and the kids are asleep I'll talk to Kris. I'm sure she'll be able to straighten all this out.\n\nAfter convincing myself I had to be wrong, I actually felt a little better and returned to the party. As soon as Kris saw me she walked over and put her arm around me. \"Are you sure you're okay, honey,\" she asked again while reaching up and kissing my cheek. \n\n\"I'll be fine,\" I told her again, this time in a more pleasant tone of voice.\n\nThe party lasted well into the night with the last of the hard-core revelers making their exodus around ten-thirty. After a very full day, Catherine and Brea were both asleep as fast as their heads hit the pillow. I suggested we also get a good night's sleep since we had a lot of cleaning up to do the next day.\n\nI knew it wasn't my imagination, Kris was nervous. I could see it as I followed her into our bedroom. She knew something was bothering me, even if she wasn't sure what it was. I stood behind her and watched as she sat at her dressing table taking her ear rings off. \n\n\"Why would Rita Anderson want to scratch your eyes out?\" I asked bluntly.\n\nI saw her freeze. She looked at my image in the mirror. She seemed to be at a loss for words. Then I saw tears welling up in her eyes and I knew then it was true. \n\n\"There is only one reason I can think of why one woman would want to scratch out the eyes of another,\" I said in an accusatory tone. \"A couple months ago you told me they couldn't make it to our party because they had another engagement. Then I learned that they moved. Gary tells me Jerry was screwing around with another woman and today I heard you tell Jan that Rita wanted to scratch your eyes out. Please Kris-please tell me the other woman wasn't you.\"\n\nKris burst out in tears. All of a sudden I couldn't feel my legs anymore. I half fell and half sat down on the edge of the bed. I just stared at my hysterical wife. This can't be happening, I thought. My whole world just came crashing down on me. \n\nI guess I was the first to recover. \"I'm not sleeping with you tonight,\" I said angrily while taking a spare pillow from the closet. \"I'll sleep on the couch. I don't know how this is going to play out, Kris. I really don't think I can handle this. I've never been hurt so bad by anyone in my entire life and especially not by someone who claims to love me.\"\n\n\"I do love you,\" Kris managed to say between sobs.\n\n\"Yeah, right,\" I said, my voice dripping with sarcasm. \"Don't bother coming down stairs, I don't want to see you tonight.\" With that I vehemently marched out of the room and down stairs.\n\nTry as I did, after tossing and turning half the night there was just no way I was going to get any sleep. I finally went for a walk. I don't know how long I was gone, a couple hours probably, but when I got back Kris was sitting at the kitchen table with a cup of coffee.\n\n\"I was watching from the bedroom window when you left,\" she said. \"I thought I'd make some coffee for when you came back.\" \n\nI looked down at the floor and just shook my head. \"I don't believe it. You hear about this kind of thing happening to others but not you...not us.\"\n\n\"Honey it d...\"\n\n\"Don't tell me it didn't mean anything, don't you dare say that. It means everything. It means our marriage is destroyed. It means our happy home is gone. It means the woman who promised to love, honor, and cherish me thought those vows meant nothing. Don't you dare say it didn't mean anything.\"\n\nKris put her head in her hands and started to cry all over again. I just couldn't take it. Under normal circumstances my heart would be broken watching Kris cry like that, but at least for right now, it had turned to stone. \n\nI went back up stairs and quickly packed a bag. I didn't even look in her direction as I hit the bottom stair and headed for the door. \"I'm going to stay at the studio for a while. I have no idea for how long. You can clean this fuck'n place up by yourself tomorrow. I don't give a flying fuck!\"\n\nI didn't hear from anyone for three days, then the business phone in the studio rang. It doesn't have caller ID. \n\n\"Brent's Commercial Photography,\" I announced as I picked it up. There was a short pause.\n\n\"Brent, it's Greg,\" it was Kris' step-dad and it sounded as if he'd been crying.\n\n\"Hello Greg,\" I greeted sadly.\n\n\"Son, I...I'm so sorry. I just don't know what to say except that I'm so very sorry.\" He was starting to break down again. \n\n\"Kris told you then?\"\n\n\"She told us the whole story son. She said she had an affair and you found out. Thi...this hurts us too son, I...I just can't get over it.\"\n\nI could hear Kris' mother crying in the background. I wondered if Kris had any idea how much pain she caused the people that loved her most.\n\nJust then I heard a familiar voice that sounded like it came from in the room. \"Greg where are you?\" I asked.\n\n\"We're at the house son. We just couldn't leave Kris alone at a time like this. Ah, don't get the wrong idea, Brent, we're not condoning Kris' behavior in any way, but she is our daughter and I thought it would be better for the kids as well.\"\n\n\"How are they doing Greg?\"\n\n\"Well, I won't lie to you, they're taking it pretty hard. Kris took all the responsibility and told the kids this was all her fault, but...well, they still keep asking when daddy is coming home.\"\n\nHearing about my kids was ripping out my heart. \n\n\"Brent,\" continued Greg. \"Kris wants to know if you would consider marriage counseling? I...ah, I'm begging you myself, son. Please, at least give it a chance. I can only imagine how much you must be hurting, but if there's a chance in hell of repairing your marriage, I pray you'll take it.\n\n\"Why didn't Kris ask?\"\n\n\"She didn't think you would talk to her,\" replied Greg.\n\n\"Tell her to set it up and call me herself with the where and when and I'll be there.\" \n\n\"Oh God, Brent, thank you. You don't know what this means to all of us. Thank you so much son. I'll let her know and have her call you with the details.\"\n\n\"Okay Greg. I've got to go now, I have work to do.\" \n\nWe said our goodbyes and ended the call. After several days of trying to sort things through I was no closer than the night I walked out. I did not want to end our marriage but I just couldn't see how I could not. I prayed a marriage counselor could show me the way.\n\nLess than two hours Greg called, Kris called back with a schedule. Her voice was so weak I almost didn't recognize it. The first session was the following Monday at seven in the evening, four more days away.\n\nWhen I walked into the counselor's office Kris was already there. I never saw her look so bad. Her normally luxurious hair was sticking out at the ends. Her eyes were red and had dark circles under them. She was holding a hanky and her hands were shaking. I should feel sorry for her I thought, but I didn't. \n\nI sat down two chairs over from where she was sitting. Our counselor introduced herself. She was a nice looking elderly lady by the name of Betty. She wanted us to use first names, she said, to help keep everything friendly. She wanted Kris to explain how the affair got started and to explain what significance it had in her life.\n\nKris said it started innocently. When he was working nights, Jerry would come over for coffee during the day and they would joke around and flirt with each other. One day he slapped her butt. She turned around, but instead of slapping his face and telling him to get out, like she should have done, she playfully grabbed his balls. \n\nKris told the counselor Jerry was always so silly it didn't even feel like she was cheating. It was more like two kids playing house. There were never any emotional ties between them; one never mentioned love or having any feelings for the other. Jerry acted the part of a clown. He would stand up on the bed after fucking her, beat his chest and do a Tarzan yell. \n\nI listened to as much as I could. This was a bad idea, I thought. Hearing Kris talking about fucking another man was just making me more infuriated. About a half hour into the session I stood up.\n\n\"Stop,\" I yelled, \"stop, please stop! I can't listen to any more of this.\" I looked directly at Kris when I spoke. \"It's not going to work. As much as I love you there is just no way for us to get back together. Every time I looked at you, held you, kissed you, I'd think of that bastard Jerry. Darling you couldn't have hurt me more if you had slowly stabbed me in the heart and twisted the knife.\"\n\nKris looked into my face. Her voice trembled. \"I'm so sorry Brent. God I'm so very, very sorry.\"\n\n\"I know you are Kris, and I know you love me. It's not even a matter of trust. I doubt very much you'd ever do this again. It's the hurt. I will never get past the hurt.\"\n\n\"Honey,\" her voice was hoarse from the stress. \"My dad said he could get Jerry to apologize to you. Would that help honey? Dad said he would work at contacting him for me and get him to call you.\"\n\n\"Jerry!\" I could feel my face getting even more red. \"If you ever talk to that mother fuck'n son-of-bitch again, you tell him for me he better never cross my path because if he does, they'll take him away in a stretcher.\" \n\nI could see the shock on Kris' face. She'd never heard me talk about anyone like that before, never even heard me use that kind of language before. \n\nI continued, \"I have never hated a man in my life until now. He robbed me of my marriage, my happiness, my life, and my very soul. If I thought for two minutes I could get away with it, I'd put a bullet right between his fucking eyes and never give it another thought.\"\n\nBy the look in Kris' face, I think she realized the consequences of her, non-emotional affair. I was a different man. I turned and walked out. As I started down the hall I heard the therapist say, \"I'm sorry Kris, there's nothing I can do, he's too deeply hurt.\"\n\n***\n\nMy body convulsed as another bolt of excruciating torture shot through my chest. I was losing ground and I knew it. My only hope was to get my phone in the house. I could feel the cold breezes getting stronger as daylight was slipping away. My left side was numb. I used all the strength I could conjure up to twist my body onto my stomach. I looked forward, the ten feet between me and the steps to the back porch looked like a mile. I reached out using my fingers as a claw, digging into the frozen ground, and trying to pull myself toward the house.\n\nI could feel myself drifting in and out of consciousness. \"Ooh, look how beautiful.\" I heard Sandy, my wife. I could hear her voice. \"God has his paintbrush out again, and I have the pleasure of watching with the man I love.\"\n\nChapter three; \"Sandy\"\n\nBlocking out the pain, my mind drifter back to that early spring morning so many years ago. The sun hadn't been up for very long but already the birds sang with glee knowing the day ahead would be filled with magic and wonderment. \n\nFunny, after divorcing Kris, somehow I thought time would stop, but it didn't. Year by year the girls grew up into beautiful, intelligent young ladies. With our children as the common link, Kris and I were never far apart. I bought a condo just two miles from the house and for many years the girls would stay with me on the week-ends. Sometimes Kris would ask me over to help Brea or Catherine with their homework, or to assist with some household project, and I always obliged. \n\nThree times over the last nine years Kris asked if there wasn't some way we could be together again, but that would never happen. I still loved Kris and knew I always would, but the pain of her betrayal was still there as well. It was as if both the love and the hurt lived side by side with-in my heart, one never being able to cancel the other out.\n\nOn this particular Sunday morning, however, all I was thinking about was beating my three buddies in eighteen holes of golf. I was on my way to join them at our seven a.m. tee time when I absentmindedly made a wrong turn. I didn't know it at the time, but that wrong turn would change my entire life. \n\nMy new convertible was only a month old and it was the first day I was able to drive with the top down. With the wind in my hair and the first tee waiting, I was enjoying my leisurely drive and didn't realize my error in navigation until I was a couple miles down the wrong road. \n\nDang it, I said to myself, get your head out of the clouds and watch what you're doing, Brent. I turned left into the first driveway I came to so I could back out and go back the way I came. As I pulled in I noticed the cutest little Cape Cod style house in front of me. \n\nA quick scan of the shabby looking yard told me the place was probably empty. What a shame, I thought. I put the car in reverse and tuned my head to start backing out of the drive. That's when I saw it, a for sale sign. I'm not quite sure what came over me. I had a perfectly nice condo that had been my home for many years. I did not need a house, yet it was like some powerful, mystic force that made me grab a pen and paper and write down the agents name and number.\n\nAs soon as I met my friends at the course all I could talk about was the darling little house I saw on the way there. One guy in our foursome, just before sinking a twelve foot putt, reminded me of the added maintenance I would have with a house. I agreed. There was no reason in the world why I needed to buy a house. We stopped at the clubhouse after the front nine for a cold beer before finishing our round. \n\nOnce again that strange, almost supernatural force pulled me to the pay phone in the hall and I found myself dialing the number I took from the sign.\n\n\"Hello,\" answered the female agent. \"Sandy speaking.\"\n\n\"Ah, hi Sandy,\" I said just remembering it was Sunday. \"I'm sorry, I was calling about the little house for sale on Herlitz drive, but I should probably call you during the week.\""
    ],
    "authorname": "laptopwriter",
    "tags": [
        "heart attack",
        "fairgrounds",
        "love",
        "affair",
        "divorce",
        "cancer",
        "porch swing",
        "new home"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/the-last-chimes-of-fall"
}