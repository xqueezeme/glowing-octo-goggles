{
    "title": "Hard Landing Ch. 06",
    "pages": [
        "*** This series was awarded Best Lesbian Story, as well as Most Literary/Genre Transcending Story in the 2019 Reader's Choice Awards. Thank you to all who voted. ***\n\nWelcome, friend, to Chapter Six. If you haven't read Chapters One through Five, you'll be lost, but you probably don't hate me as much as people who read to the end of Chapter Five then yelled \"Are you kidding me, Broken?!\" or worse at their screens. Sorry for that, friend.\n\nThere is no update for the Spotify playlist this chapter. Shout out to those who've given me a \"like\" on that, though.\n\nMany thanks to my editor, ThisNameIsntTakenYet, who is the Jack to my Rotors. He totally saved me on this chapter when I was lost.\n\n~~ Adams Morgan, Washington, DC, April ~~\n\nJILL\n\n\"I'm riding the highs, I'm digging the lows, 'Cause at least I feel a-l-i-i-i-ve.\n\nI've never f-a-a-a-c-e-d, so many emotional d-a-a-a-y-s!\n\nBut my life is good! I'm feeling y-o-o-o-u-u-u-u!\"\n\nOf all the songs on our playlist, I sang I'm Feeling You to myself most often.\n\nThe day she'd left, I'd watched Jo go through the security checkpoint at BWI airport, dressed in her fatigues. She'd picked her backpack up off the x-ray belt, thrown it over her shoulder, and then she'd waved and blown me a kiss before turning to walk off towards her gate. I stood on my toes, trying to get a last glimpse of her cap as she moved through the crowd.\n\nAfter I'd lost sight of her, I'd sat in my car in the parking garage and started building a playlist of every song I could remember the band having played on the beach tour and the songs we'd sung to each other. Celebrity Skin. Left Behind. Falling For You. I'm Just A Girl. Jet Airliner. I'm Feeling You. Summer, Highland Falls. Even the Weird Al cover of American Pie I sang at the beach jam.\n\nI texted her the link to the playlist from my car.\n\n(Blue) I made this for us\n\n(Blue) I called it The Set List. Download as much as you can before you board.\n\n(Jo) The last 24 hours were all I could have wished for\n\n(Jo) Thanks\n\n(Jo) For giving me another chance\n\nI sat looking at her text, smiling for a moment.\n\n(Blue) Always\n\nA few minutes later she texted me again.\n\n(Jo) They're closing the door\n\n(Jo) I'll call you from Frankfurt\n\n(Jo) I love you\n\n(Blue) Love you too\n\n(Jo) My Blue Girl\n\n(Blue) My Jo\n\nOn my way home, I'd assumed I would listen to Falling For You most often, the one Jo had sang to me. But after one listen to the original, I realized I never wanted to hear it again from anyone's lips but hers. I found myself wishing Jack had recorded her that night for me. I left it in the playlist so Jo could see it, but I started skipping it every time it came on.\n\nInstead I was constantly singing I'm Feeling You, the Michelle Branch-Carlos Santana duet I'd started to sing to her in the barn, right before the moment things went sideways. The one she'd then asked me to sing to her at the bar. Begged me to sing to her. I'd picture myself at the mic, Jo ripping out the guitar solos in front of me, our eyes locked as I sang. Her coming up to the other side of my mic to sing harmony with me on the chorus.\n\nMy routine had settled into a comfortable one after she'd gone back to Afghanistan. I'd wake every morning and check for an email to see if she was going to be able to get time on video chat during her evening, my mid-morning. If she could, we'd talk as long as her time on the system allowed. Jo looked cute in the headset and microphone when she was on Skype, like an adorable Army gamer girl.\n\nIf we couldn't get video time, we'd trade a bunch of emails. Snarky, playful, loving. The rest of the day, I'd do my client work until I knew Jo was probably asleep, then I'd go running through Rock Creek Park.\n\nI hoped to be able to run with her when she got back. I was getting better at it; up to more than three miles a day now. I wanted us to have as many things to do together that I could think of when she returned. I'd started using the MapMyRun app on my phone and sending her screenshots of my times.\n\nMy hair was still the dirty blonde I'd gone back to when I had been moping, before she came back to me, but I'd already made an appointment at my sister's salon for the week before Jo's unit was scheduled to arrive back at Ft. Bragg. I was going to have my blue hair back for her when she stepped off the plane in October.\n\nI was working on a client's website that morning, sitting at my little table by the window and waiting for my first email of the day from Jo. I hadn't gotten one yesterday, but that happened at least once a week. She'd get called out for a night mission or the base's Internet would be down.\n\nWhen our song came on, I turned it up and started belting it out to my empty apartment. I'd begun fantasizing about recruiting the band to come with me to the airport when Jo came back and serenading her again, in front of the world this time.\n\n\"I'm riding the highs, I'm digging the lows, 'Cause at least I feel a-l-i-i-i-v-e.\"\n\nThere was a knock at the door. I got up to open it, still singing as I walked to the door.\n\n\"I've never f-a-a-a-c-e-d, so many emotional d-a-a-a-y-s.\n\nBut my life is good...\" I flung the door open.\"Hey Sara! What's\u2014\"\n\nSara was crying, twisting her fingers together. Steve was behind her.\n\n\"What's wrong? Sara?\" She flung herself at me and wrapped her arms around my neck. \"Steve?\" His eyes were wet too. \"What happened? What's wrong?!\"\n\n\"Jo's helicopter crashed, Jill. Yesterday her time. She's alive, but she's hurt. All we know right now is that it's really bad, and that they've stabilized her at Bagram and are airlifting her and the other survivors to Ramstein Airbase in Germany right now. There's a hospital there.\"\n\nI'd sunk to my knees, Sara still wrapped around me. I couldn't breathe. \"What\u2014?\"\n\n\"You need to pack a bag. Do you have a passport? Ok good, I got you a ticket. We have a flight out of Dulles in less than three hours so we have to hustle. Dad is meeting us at the airport.\"\n\nHenry met us at the gate and gathered us all into a hug. Since Steve had gotten our tickets at the last second, we were spread out all over the airplane.\n\nI ended up at a window seat near the back, with some businessman sitting next to me. He tried to make conversation at first but he gave up when I never turned away from the window or acknowledged his presence.\n\nAll I could think about was the moment Jo had turned off the engine in her dad's helicopter to auto-rotate us to the ground when she had taken me flying. Except I kept imagining Jo was flying it by herself, in her camouflage uniform, and everything was on fire and she couldn't slow it down this time and she was screaming as it barreled into the ground.\n\nThe flight to Germany was the longest eight hours of my life.\n\n~~ Ramstein Airbase, Germany ~~\n\nSteve had spent the entire flight on the plane's WiFi, texting Larry and Suzanne, who were calling Jo's unit at Fort Bragg, trying to find out something. Anything. Nothing...\n\nWe went straight from the plane to the rental car; none of us had checked any bags. At my apartment I'd thrown my MacBook and chargers into my backpack, along with the first handful of clean underwear I could find, two extra shirts and a toothbrush. I'd pushed Steve and Sara back out my door to take us to the airport less than five minutes after they'd knocked.\n\nRamstein was a two-hour drive from Frankfurt, even with the autobahn having no speed limit on sections of it. I had been staring out the window for most of the drive.\n\n\"Where's Hank?\" I finally whispered, almost to myself.\n\n\"What'd you say, Jill?\" Sara asked me.\n\nI cleared my throat and tried again. \"I said, who's looking after Hank?\" I couldn't say why I suddenly had thought of Henry's dog.\n\nHenry turned his head in the front seat and said, \"He's with a neighbor. He's okay. Thanks for asking, Jill.\"\n\nWhen we arrived, it took nearly an hour to get us cleared to drive onto the base to the hospital. I don't know how I managed not to scream at the poor airman guarding the gate to just let us in already.\n\nWe were directed to a waiting room, where we waited. And waited. Then we were finally told she was here, but she was in surgery, and it would be several hours before they could tell us anything.\n\n\"Well, we have our base passes now. I'm thinking we should go check in to our hotel and eat something, then we can come back later,\" said Steve. Ever the practical one, Jo's brother.\n\n\"You guys go ahead. I'm going to stay here,\" I said, pulling my feet up onto the chair and hugging my knees.\n\n\"Jill, there's nothing we can\u2014\" Steve started.\n\n\"I'm. Staying. Here.\"\n\nSara walked over and started whispering with Steve.\n\nHenry sat down next to me and patted me on the shoulder.\n\n\"Jocelyn's strong, Jill. She's stronger than anyone I know. As strong as anyone I ever served with,\" he said to me. I just stared ahead. He squeezed my shoulder, then got up and left with Steve.\n\n\"Steel is strong, but it can be brittle,\" I thought.\n\nSara took Henry's place next to me.\n\n\"Sara, you don't have to stay with me. You can go with Steve.\"\n\n\"I'm. Staying. With. You,\" she said, copying my voice. I laughed and sniffed at the same time. She gripped my hand and we waited some more.\n\n\"Chief Jocelyn Collins? Family for Chief Collins?\"\n\nI started awake and lifted my head off Sara's shoulder. Steve and Henry had apparently come back while I was dozing. Steve raised his hand and we all stood up to be greeted by a woman in surgical scrubs.\n\n\"I'm Colonel Hatcher, would all please follow me?\"\n\nShe led us into a smaller waiting type room, with a plaque on the door that said 'Counseling'.\n\n\"I just got out of surgery on Chief Collins. Let me give you a rundown of what's going on with her. She's suffered some pretty extensive injuries. At this point we don't think they are immediately life-threatening; however, we can't say what her long term prognosis is going to be right now.\"\n\nI drew in a ragged breath and took Sara's hand. Steve held her other one.\n\n\"She has five broken ribs, all on her left side. We aren't concerned about those, they're non-displaced fractures. They'll heal up on their own with no treatment other than rest. She sustained breaks to her left radius and ulna, but they were clean, and they were able to get those bones set and her arm cast at Bagram before she was airlifted.\"\n\nShe looked at the chart in her hands.\n\n\"The bullet wound to her left leg is extremely serious.\"\n\n\"Bullet?!\" I yelped, then stopped and looked around embarrassed.\n\n\"Yes. Apparently, her helicopter came under enemy fire from a concealed heavy gun emplacement on a mountainside near an outpost where she was picking up an ill Afghan Army soldier.\"\n\n\"So, she was shot down. It wasn't a mechanical failure,\" Henry said.\n\n\"Yes, sir. The injury to her left ankle is, well... catastrophic is the term I'd use. I'm an orthopedic surgeon and I've been working on her leg for the last six hours.\"\n\n\"What does 'catastrophic' mean, Colonel?\" asked Henry.\n\n\"It means, all I've been able to do for now is to try and stabilize it. The round was high caliber, and it passed through her leg near the ankle joint. I'd say about seventy percent of the bone in the lower six inches of her tib-fib is just gone. It's a miracle her foot's still attached at all, really. We've put in pins and rods to hold what's left in place, but if she comes around, we'll have to have a discussion about next steps.\"\n\n\"If she comes around?\" said Steve.\n\n\"You said her injuries weren't life threatening!\" I said, a little too loudly.\n\n\"This is the part where we get to the bad news,\" she said. \"She received a pretty serious skull injury during the crash. There was bleeding in her brain, and they had to take out a section of her skull at Bagram, both to relieve the pressure in her cranium and to fix the bleeder.\"\n\nI started sobbing as Sara turned and embraced me.\n\n\"They inserted the piece of bone they took out into a flap in her stomach muscles to keep blood going to it. Probably tomorrow or the next day we'll take it out and put it back in her skull. Her cranial pressure is already back to normal levels.\"\n\n\"But what does that mean? There's a hole in her head right now?\" I said, crying and trying to wipe my nose with my sleeve.\n\n\"This is not an unusual procedure in this situation. This injury is unlikely to be fatal at this point in her recovery. However, due to the nature of the brain injury\u2014\"\n\n\"You don't know if she'll wake up,\" finished Henry.\n\n\"It's probable she will wake up, Mr. Collins. But no one can predict when, or what the damage to her cognitive functions might be. She could wake up in a few days and be the exact same person you knew. In a few months you might never know anything happened except for the scar on her skull.\"\n\n\"Or?\" asked Steve.\n\n\"She could wake up four months from now and be fine. Or she could wake up in a couple of days and not recognize any of you, or not be able to speak or perform any basic functions. I'm not trying to be cruel, I just want you to understand we have no idea what to expect, except that it's likely she has a hard road ahead of her. The percentages are... Well, there are no percentages. Every brain injury is different and there's no predicting what's going to happen until it happens.\"\n\n\"So, what's next?\" Steve asked.\n\n\"Not much for now. We have her sedated, and like I said they'll probably take her into surgery to put the section of her skull back in tomorrow. That'll take about an hour.\"\n\n\"Can I see her? I mean... can we see her? Please?\" I tried not to sound too desperate.\n\n\"I can take you back but I need to warn you, she's non-responsive and her appearance will be shocking.\"\n\nDr. Hatcher led us all back to the ICU. Jo looked so... small in the bed. Her entire head was swaddled in gauze and she had a tube in her mouth with tape on her bruised cheeks holding it in place. Her beautiful apple cheeks.\n\nHer left arm was in a cast up to her elbow, resting on a pillow. Her left leg was... awful. Her leg was uncovered up to her mid-thigh and there was some sort black metal contraption encircling her leg from her knee to her foot, with pins radiating out from it into the skin and, I guessed, into the bone inside. The whole thing was suspended by cables attached to a frame suspended over her bed. Her leg was bruised almost black from her toes to her knee and her ankle was deformed and seemed like it was nothing but stitches.\n\nThe doctor stood with us for a while until Steve turned and asked her, \"Did any of her crew come with her?\"\n\nDr. Hatcher said, \"Wait one second.\" She left us alone with Jo. The left side of her face was one massive bruise.\n\nDr. Hatcher came back. \"We also have a Sergeant Ehrens and a Specialist Charles. I'm afraid I can't tell you anything about their conditions. Privacy, you know.\"\n\n\"What about Chief Eric Nguyen?\" Steve asked.\n\n\"Erhens and Charles are all we have here. All that means is that no one else was airlifted here. They could be fine in Bagram, or just have had minor injuries, or...\"\n\nSteve nodded, \"I understand. Will there be someone who can fill us in on what happened?\"\n\n\"I can try to have a family resource officer find out for you. You may stay here as long as you'd like. Familiar contact can help, you can touch her on her right arm if you want. But, stay away from her left side. As you can see most of the damage is there. This button will call a nurse if you need anything.\"\n\nHenry moved around the bed and grasped Jo's hand. We all stood in silence.\n\nAfter about half an hour, the nurse came in and asked if we needed anything.\n\n\"No, I think we're fine. Should we go to the hotel and get some sleep? We've all been up almost twenty-four hours,\" Steve asked.\n\n\"Probably a good idea, son. We can be here tomorrow if they take her back for...\" Henry gestured to Jo's head.\n\n\"Okay, let's\u2014\"\n\n\"I'm staying here,\" I said.\n\nSara looked at Steve, then came around to hug me. \"Okay, Jill. Steve's going to get SIM cards for our phones that will work here, so we'll bring one back to you so we can all text, okay?\"\n\n\"Okay.\" I pulled the one chair in the space next to Jo's bed and sat with my feet up and reached out for her hand.\n\nI held her hand all night.\n\n~~ Ramstein Airbase, Germany, May, Three Weeks Later ~~\n\n\"Why isn't she waking up?\" I knew my voice was sharper than it should be. They'd moved Jo out of the ICU and into a regular room ten days earlier. The attending doctor was visiting us during rounds. I forgot his name. There were so many doctors.\n\n\"Miss Doran, we simply can't predict anything with this type of injury. The procedure to reattach the piece of her skull went very well, her cranial pressure is excellent, her CAT scans look good. The brain is a complicated organ, we don't know how long it's going to take for it to heal itself. We believe she will wake up. We simply can't say when and we can't say what she'll be like when she does.\"\n\n\"So, what do we do?!\" I asked plaintively.\n\n\"There's not much we can do but wait. Keep talking to her. Keep touching her and letting her know you're here. I really believe that helps.\"\n\n\"Thank you, doctor,\" Henry looked tired. We were all tired.\n\nThey left to eat and I asked for them to bring something back for me. I didn't want Jo to be alone. To not have someone touching her, talking to her. They'd taken her breathing tube out and she just looked... asleep.\n\nLater sometime around midnight, after Steve had taken everyone back to the hotel, the nurses had turned most of the lights on the floor down. I was nodding off when I suddenly sat bolt upright in my chair. I thought I'd felt her squeeze my hand. I squeezed back and held my breath.\n\nNothing.\n\nI stepped out of her room and looked around for nurses, but the hallway was empty. As quietly as I could, I went back inside her room and lowered the side rail on her bed. She looked so tiny lying there; there was plenty of room. I eased myself onto the edge of the bed and rested my head on her shoulder on her uninjured side, wrapping my hands gently around her arm. As I breathed in her smell, I was suddenly filled with a certainty that it was going to be okay. As certain of it as anything I'd ever been. She was going to wake up. Jo came back to me once. She'd do it again. I knew she would.\n\nShe had to...\n\nBecause I didn't know what I'd do if she didn't.\n\nI don't know how long I laid there before I drifted off. The next thing I knew was being awakened by Steve's urgent whisper, \"Jill!\"\n\nI opened my eyes to sunlight streaming in the window and I looked guiltily at him and Sara standing in the doorway. But they didn't look angry with me. They looked... ecstatic.\n\n\"What?\" I asked sleepily. Then I suddenly realized someone was stroking my head.\n\nI turned my head up and looked into Jo's eyes as she said, \"Hey, Jill. What happened to your hair?\"\n\nHer memories were fuzzy. It took several hours for her to remember and understand that I'd changed my hair color from the blue she'd known months ago, before our reunion in January. Over the next few days, other things started to slowly come back to her. She remembered being hit, her copilot slumping over. She remembered trying to coax her Blackhawk over the crest of a hill. Nothing after that.\n\nWe'd had to tell her that Eric hadn't made it. Neither had Sgt. Jackson. I held her as she cried.\n\nSgt. Ehrens and Specialist Charles had both survived, and were in the same hospital, albeit with serious injuries.",
        "Amazingly, the Afghan Army soldier they had picked up from the observation post had also lived and had successful surgery at Bagram for his appendicitis, in addition to treatment for his numerous other injuries he sustained in the crash.\n\nFour days after she woke up, Dr. Hatcher was back to talk to Jo about her leg.\n\n\"We can try cadaver bone grafts, but the risks of infection or rejection aren't insignificant.\"\n\n\"If we do that, how likely am I to make a full recovery of my leg?\"\n\n\"A full recovery? I'd say not likely at all, Chief. If the graft is successful, you're going to be in a wheelchair for months and then walking with crutches for months if not years, then probably a cane. You're just missing too much bone in the joint.\"\n\n\"What am I looking at if you just take it off?\"\n\n\"Jo!\" I gasped.\n\nShe squeezed my hand. \"It's okay, Jill. I just need to hear all my options.\" She'd been calling me Jill since she woke up. In fact, she was using everyone's first name, even her dad's. I wasn't entirely certain she knew she was doing it. I felt a pang of loss every time she didn't call me her Blue Girl, but having her awake was salve enough.\n\n\"Well, the injury is entirely at your ankle. If we amputate, it would be mid-calf, below the main muscle. With the right prosthetics, you'd probably be seventy-five, eighty percent. You could walk, run, what have you. But the rehabilitation and getting used to the prosthetic is six months to a year.\"\n\n\"So, in six months I could be running, versus years with a cane?\"\n\n\"Chief, you'll probably never run again on that foot. If we can save it, the ankle will be fused and non-mobile. Also, the bone is going to be too fragile. You'd likely break it if you tried to run on it.\"\n\nShe nodded and looked down at her foot for a while. Then turned to me and said, \"It's going to be alright.\" I nodded at her. She squared her shoulders and huffed her breath out, the way she always did when facing a challenge.\n\n\"Take it off, doc.\"\n\n~~ Ramstein Airbase, Germany, One Week Later ~~\n\n\"I can't believe how much it hurts!\" Jo groaned.\n\nSteve and Sara had taken Henry home the day before. Jo would be getting transferred to Walter Reed in Bethesda soon to start rehabilitation at the new amputee care center there. I was staying with her until then.\n\n\"I know, and I know it's confusing,\" Dr. Hatcher said, \"It's called phantom limb pain. Your foot is gone, but your brain is telling you that the foot's still there and that it hurts. We can do some electro-stim on the muscles above the amputation and we're going to keep you on your pain med regime for now. But it's just going to take some time.\"\n\n\"Is there anything else we can do?\" I asked. \"Ice, maybe?\"\n\n\"Well, this is going to sound weird, but you can massage her foot. That sometimes works.\"\n\n\"What do you mean? Her foot is gone.\"\n\n\"No, I mean massage that foot.\" she pointed to Jo's right leg. \"The brain has some cross wiring and there anecdotal evident that scratching the left foot can ease an itch on the right foot and so on.\"\n\n\"You're shitting me,\" said Jo.\n\n\"I am not shitting you, Chief. Just something you can try. In the meantime, I'll see about getting you some electro-stim today. The incision is healing nicely. You should be ready to start working on your rehab at Reed as soon as your ribs have healed enough.\"\n\n\"Thanks, Karen.\" She'd heard her first name spoken somewhere and it was all she called her now.\n\n\"No problem, Chief. I'll see you tomorrow.\"\n\nI sat down on the foot of the bed and pulled Jo's foot into my lap and started massaging it. She leaned back and sighed with relief.\n\n\"Jesus, I didn't know you were so good at that.\"\n\n\"I'm so hurt you forgot our night in Ocean City!\" I teased.\n\nShe blushed. \"Now that you say it, it's uh, coming back.\" Her face clouded up. \"Sorry Jill, I'm having a lot of memory problems.\"\n\n\"Like what kind of problems?\" I asked.\n\n\"I'm having trouble calling up memories until someone mentions them. I know you and I spent a lot of time together on the beach trip. But I can't remember any of it. I couldn't recall your giving me that... massage in OC. But as soon as you mentioned it, it all rushed back in, the whole night.\"\n\n\"Well maybe that means I need to tell you about stuff like the first time we cuddled and you bit my neck here.\" I reached up and touched the special spot on my neck. \"Or the night I seduced you in the pool in Virginia Beach, or the next night when I wore the lace socks for you, or\u2014\"\n\n\"Stop, Jill! Jesus Christ, stop!\" she hissed, her eyes darting from side to side. She'd turned bright red and was squirming on the bed.\n\n\"What? Jo, what is it?\"\n\n\"It's like all those things are happening again to me right now!\" She looked troubled.\n\n\"You don't want to remember?\"\n\n\"Not all at once, sitting here in a hospital bed! And it's really disturbing that you can just... trigger me like that and it all floods in. It's like my brain isn't under my control.\" She gently reached up and touched the staples on the back of her head. With her short hair they'd hardly had to shave off much off when they'd performed the surgery on her and it was already almost back to her normal length. You couldn't even tell she had staples unless you looked at her head directly from behind.\n\n\"I'm sorry, I won't tease you again. But if you ever want help remembering something just ask and I'll help you.\"\n\n\"Thanks, Jill.\"\n\n\"Do you think that's related to the name thing?\"\n\n\"What name thing?\" She looked confused.\n\n\"You know how you used to only call people by their last names? Except your dad and Steve. And then me when you started calling me Blue. But now you call everyone by their first name as soon as you hear it. Like you call Dr. Hatcher Karen? Like how you call me Jill now?\"\n\n\"I do? No, I don't... Do I? Wait...\" She stared into the distance. \"You're... you're...\" I saw her try to form a \"B\" with her mouth, but it was as if she had something stuck in her throat. \"You're my B... my B... Jill why... why can't I...? B... B... I can't say it!\"\n\nI could see her start to panic. She pointed at the water cup on her tray.\n\n\"That cup is blue! You're my B... my B... I've been calling you Jill. You're not my Jill! You're my B... my... Why can't I say it?!\"\n\n\"Hey, hey, it's okay, I got you.\" I reached out to her and she grabbed onto me so tightly with her good arm my ribs creaked.\n\n\"The sky is blue! You're my B... My B...What's wrong with me?!\" She started gasping for air and saying \"B...! B...! B...!\" over and over.\n\n\"Stop, Jo, stop. It's going to take some time. It's okay.\" She was breaking my heart.\n\n\"It's like I've lost you again! I don't have my B...! My B...! Damn it!\"\n\n\"Hey. Hey, look at me!.\" She met my eyes, gasping for air. \"You haven't lost me. I'm here and I'm yours now, whether you call me Blue or Jill or Doran or anything you have to call me. You're just having a little brain thing, okay? I'm here. I'm here.\"\n\nShe stared at me, her chest heaving.\n\n\"Here,\" I clicked the control to recline the bed. As she lay back panting and staring at me, I carefully stretched out alongside her and held out my arms.\n\n\"Can you move down and cuddle me?\" She painfully tucked herself into the crook of my arm. I wrapped her up and said, \"Do you remember when we had our fight in Fayetteville? Remember when we made up on the bus and then got into the bunk together? What you told me you wished you could do with me?\"\n\nShe stiffened as I talked, then sniffled, then she started crying, her head against my chest. She grasped my shirt with her left hand, cast and all, and cried for all she was worth, sobbing as I held her.\n\nIt was what she had wanted to be able do that night on the bus. It was all I could do for her now. After she'd cried herself out, she drifted off to sleep with her head on my chest, whispering \"I want my B...\" to herself.\n\nLater that afternoon I sat at the end of her bed, massaging her foot again while the counselor talked to her.\n\n\"The brain is a weird thing, Jo, it's just going to take time. Some of your brain will rewire itself and you'll get back to where you were. Some of it you'll just have to adapt to your brain's new way of doing things. Let's try this. Who am I?\" She'd introduced herself as 'Dr. Samuels' when we had met her for the first time a few days earlier.\n\nJo looked up. \"Dr. Samuels.\"\n\n\"Right. I'm Dr. Samuels.\"\n\n\"Yes. Dr. Samuels.\"\n\n\"Dr. Wendy Samuels.\"\n\n\"Dr. Sam... Dr. S... Wendy. Dr. S... Wendy.\" Jo looked at me with wild eyes. \"F-u-u-u-c-k! I really am having a brain thing!\" She laughed hysterically. It felt a little better than when she'd panicked this morning, but only a little.\n\n\"Why do you think you always called people by their last names before?\"\n\nJo stopped laughing. \"It was just something I picked up in the Army,\" she mumbled, looking down.\n\n\"Really?\" She looked at me. \"But you said she called everyone by their last name, even her friends, right?\"\n\n\"Yes.\"\n\n\"Do you think it was some kind of defense mechanism, Jo?\"\n\nJo wouldn't look up. \"No. Maybe. I don't know.\"\n\n\"Brain injuries can lower inhibitions, so maybe you aren't trying to keep people at a distance quite so much and your brain is rebelling against its old way of doing things.\"\n\n\"Maybe. Maybe that's why I'm crying now.\"\n\n\"What do you mean, 'now'?\" Wendy asked.\n\nJo sighed. \"I never cried once from the day we buried my mom when I was fifteen until a couple of months ago. It was like I couldn't cry, even if I wanted to.\" She looked over at me. \"But I'm crying all the time now. I cried a couple times in the months before the crash.\"\n\n\"So, you've had some issues well before your injury.\"\n\n\"Maybe.\"\n\n\"Well, with the likelihood of PTSD or traumatic memories, I'd have been recommending a therapist anyway for your treatment plan at Walter Reed, but it sounds like maybe you could have used one for a while.\"\n\nJo looked away from us. \"Maybe.\"\n\nThe next day, I took her to visit her crew. Specialist Charles was being flown to Walter Reed to start rehabilitation and she'd asked to see Jo before she left. Sergeant Ehrens would soon be going to a hospital near the base at Ft. Bragg. As I pushed Jo's wheelchair down the hall, she was clearly nervous as she fidgeted with the blanket covering her legs.\n\nI'd asked her several times if she wanted to go visit them, but each time she changed the subject as quickly as she had during our first dinner in Rehoboth Beach when I'd tried to talk about families or dating. But with Specialist Charles flying out the next day I wasn't going to let her put it off any longer.\n\nI wheeled Jo into the room. There was a young woman in the bed with the head inclined so she could sit up, and a brawny looking man in a wheelchair talking to her. He had casts on both legs up to his hips.\n\n\"There's the Chief!\" he said as the young woman smiled at us.\n\nJo burst into tears as I rolled her over to him.\n\n\"Whoa, hey Chief! It's okay! We're going to be okay!\"\n\nJo leaned far over out of her chair, knocking the blanket off her lap, and embraced him tightly, still crying. He looked like he would have been less surprised if she'd jumped out of the chair and started tap dancing.\n\n\"I'm sorry, Billy. I'm sorry.\" She lifted her head and looked at the young woman. \"Liz. I'm so sorry!\"\n\nSpecialist Charles, Liz apparently, reached out and grabbed Jo's hand. \"Chief, what are you sorry about? You got us down. You saved us.\"\n\n\"But... but Billy, your legs. Liz, you're... you're...\"\n\nLiz smiled, but there was a tremble in her lips. \"Better paralyzed than dead, Chief. Besides, I'm gonna get all the best parking spots now.\"\n\nJo gasped out a laugh through her tears.\n\n\"Liz is right, Jo,\" said Sgt. Ehrens. \"Nine pilots out of ten, we're all a smear on the mountain side. You're the one who got us down.\"\n\n\"I could've done it better. I could've\u2014\"\n\n\"Horseshit, Chief. My buddy on the FOB sent me pictures from the scene and the crash report. Those fuckers got rounds through the main hydraulic lines, the fuel line for Number Two and the transmission. Chief, you\u2014\"\n\n\"Jo,\" she interrupted.\n\n\"What?\"\n\n\"You better call me Jo, Billy. I don't think that they're going to let me be a Chief anymore with this.\" She lifted the stump of her leg.\n\nLiz said, \"I'm happy to call you Jo if you want me to, but you'll always be our Chief, Chief. The Army can't ever take that away from us.\"\n\n\"That's a fact, Chief,\" agreed Billy, as Jo teared up again.\n\nI eased myself out of the room.\n\nJo had been getting increasingly frustrated with her speech problem, and had stopped using names altogether when she could avoid it. Once when I was working on my laptop, out of the corner of my eye I caught her looking at me and whispering \"B... B... B...\" to herself. Then she'd looked out the window, balling her fists up in her lap.\n\nIt was too much loss, all at once. Her foot. Her friends, Eric Nguyen and Ben Jackson. Her career as an Army pilot. Now she felt like she'd lost at least a part of her Blue Girl. Again.\n\nI stepped out into the hall to talk to Dr. Samuels after she had stopped by for one of her daily visits with Jo. After I explained my idea, she said, \"I mean, I don't know if it'll work or not, but I don't think it could do any harm. So, if you want to try it, go ahead.\"\n\n\"Okay, thanks. I just feel like she needs a win. Do you know a place?\"\n\nShe grinned at me. \"I do! Let me call and see if I can hook you up.\" She pulled out her cell phone and was soon speaking German to someone on the other end. She wrapped up the call.\n\n\"Zwei Uhr? Danke, Bibi!\" She hung up and said \"Two o'clock tomorrow? I can swing by and take you.\"'\n\n\"Oh, I don't want to trouble you.\"\n\n\"Do you speak German?\"\n\n\"Uh, no.\"\n\n\"Then you'd never find it and you wouldn't get what you want if you did. I could go myself. I'll pick you up out front of the hospital at one-thirty. Okay?\"\n\n\"Dr. Samuels, you're a full-service counselor. Thanks.\"\n\nWhen I first told Jo that I was leaving her for the afternoon, she was anxious. I'd been at her bedside since she'd woken up, working on my laptop during the day, showering in her bathroom and sleeping in the foldout chair next to her bed. Steve and Sara had gone shopping for extra clothes and toiletries for me before they'd left for home. It would be the first time she'd been without me for more than a few minutes since she'd come back to us. I tried to reassure her as much as I could before I left to meet Dr. Samuels in front of the hospital.\n\nWhen I walked back in that evening, she glanced up from her dinner tray. \"Hey Blue, welcome back,\" she said, then looked back down at her food.\n\nShe froze, then looked up at me again and whispered, \"Blue Girl.\" Then she threw her fork in the air, pointed at me and yelled, \"Blue Girl! Yes! You're my Blue Girl!\"\n\nI skipped over to her bed laughing, afraid she'd launch herself out of it towards me if I didn't. My plan had worked.\n\nShe wrapped her good arm around my neck and buried her face in my electric blue hair, freshly dyed that afternoon.\n\nShe was laughing, rocking me back and forth, yelling, \"Blue! My Blue Girl!\" until a nurse came in to see what was happening.\n\n\"What on earth is going on in here?\" the nurse asked.\n\n\"My Blue Girl is here, Gloria! I can say it again! My Blue girl!\"\n\nI could tell the relief in her voice wasn't really about me having my hair back to the color she'd known. She'd suddenly, unexpectedly, gotten a little piece of herself back.\n\nGloria smiled at her. \"Well, I've never seen someone this excited about their friend's new hairstyle before, but let's try and keep it to a low roar, okay Chief?\"\n\n\"It's okay, Gloria! I got my Blue Girl back!\"\n\n~~ Walter Reed National Military Medical Center, Bethesda Maryland, May ~~\n\nIt was our first full day at Walter Reed. We had arrived on an evening Air Force transport flight into Andrews AFB, and been shuttled to the medical center just before dinner. After dinner, Jo was given a tour of the facility as part of her orientation, then the staff had settled us in her suite.\n\nThe hospital had family suites for patients undergoing treatment, with a hospital bed in one bedroom, a tiny living area and a second, normal bedroom for family staying to support their loved ones. Jo had asked if I would stay with her.\n\nThat first night she'd insisted I help her out of the hospital bed and she'd painfully hopped into the other room with her arm around me. She'd slept with me curled up around her from the back that night, to the disapproval of the nursing staff the next morning, when they'd come to take her to meet with her treatment coordinator. Apparently, that meeting did not go well either.\n\nJo sat silently in her wheelchair, staring at the ground as the nurse rolled her back into our suite. She didn't say anything to the woman as she left.\n\nShe was fuming.\n\n\"Babe, what's wrong? Are you okay?\"\n\n\"What the fuck is the point of having us make goals if they turn around and tell you that you can't do what you want!\" she snarled.\n\n\"What do you mean? Talk to me, tell me what's happening.\"\n\n\"I had to meet with my treatment coordinator, and one of the things she wanted was for me to make goals for what I want to achieve here. Then she turns around and tells me to forget what I wanted. Then she tells me I can't handle my therapy sessions the way I want!\"\n\n\"Okay, slow down. Let's take this one thing at a time. What goal did you want to set for yourself?\"\n\nShe didn't say anything. She just grabbed the wheels and started spinning her chair around in place.\n\n\"Jo... Jo! C'mon, Jo, talk to me.\"\n\nShe finally snapped, \"I told her I wanted to try to get a waiver to return to duty once I adapt to my prosthetic, okay?!\" She looked at me then barked, \"What?!\"\n\n\"Jo, if that's what you want to try to do I'll support you. Has anyone ever been able to do that before?\"\n\n\"Yes!\"\n\n\"Really?\" She started spinning her chair again. \"Jo?\"\n\n\"Not any pilots, no. Some intel weenies and staff officers have.\"\n\n\"Okay.\"\n\n\"It's so stupid! Lots of civilian pilots get medical waivers to fly with stuff like this!\" She held up her leg.\n\n\"Well, so even if the Army won't let you fly, there are other flying jobs you could have, right?\"\n\nShe looked away. \"Please don't ever tell Steve this, but if I had to fly rich guys around so they can avoid traffic, I think I'd kill myself.\"\n\n\"What's the other problem, the one with your therapy sessions?\" She stopped spinning and looked at her foot.\n\n\"They won't let you come with me,\" she whispered.\n\n\"What? What do you... wait, back up. You want me to go with you to therapy? I don't think that's how therapists work.\"\n\n\"Blue...\" I waited patiently. \"I know they're going to want me to talk about feelings and shit. And probably my Mom. Or what happened with Amy.\"\n\n\"Okay, and?\"\n\nShe looked at me. \"How am I supposed to do that without you? I can't do that with anyone! You're the first person in my life that's ever... I need you to come with me!\"\n\n\"Why don't you try it for a while and see how it goes? I'll go with you and sit outside, okay?\"\n\n\"It's not going to work!\"\n\nIt did not work. After her third session the therapist came out to meet me.\n\n\"So, you're the infamous 'Blue Girl' who is the only thing Jo will talk about in sentences longer than a word or two. I'm Dr. Allen, it's nice to meet you.\" He was an older man, with a neatly trimmed beard and steel rimmed glasses.\n\n\"You too. Call me Jill, please. I take it it's not going well in there?\"\n\n\"No, not really. I can't tell if it's trauma from the incident or something else. But anytime I try to get her to talk to me about anything other than the weather she shuts right down. Except for asking if you can come in. I take it you two are close?\"",
        "\"Yeah, pretty close. And I'll tell you she was pretty closed off and had a lot of hang-ups before the crash, so this doesn't surprise me. I don't want to say anything more without her permission though.\"\n\n\"And I wouldn't want you to. Tell you what, we don't normally do this, but would you like to come sit with us for a while and see how it goes? I'd ask that unless I ask you something, you try and not participate, just let her talk.\"\n\nI followed him back into his office. Jo was sitting on his couch looking forlorn, her wheelchair next to her. I sat down next to her and she grabbed my hand and whispered \"Hey, Blue,\" then turned her attention back to the doctor. \"Thanks, Jim. I appreciate this,\" she said.\n\n\"Why don't we start with you telling me why you think you're going to be able to talk to me easier with Jill here?\"\n\nJo looked uncomfortable, but said, \"I'm not sure. I mean, I can't tell you why, but ever since I met her last July, I just... I just talk about stuff with her. Stuff I don't talk about with anyone, even my family. Stuff I've been trying to forget for years, or get over for years. She just draws it out of me. Just by looking at me, it seems sometimes. I mean, sometimes, most of the time really, I don't even feel comfortable talking about it. But I just... I just talk to her. The first night we met, I talked to her about my mom. I hadn't mentioned my mom to anyone for years before that night. Then I told her about my ex, Amy, which I never do with anyone. So, I don't know why. She just gets me to talk.\"\n\nDr. Allen raised his eyebrows. \"Well that's the most you've said to me in three sessions, so we might have something here.\"\n\nJo's sessions with Dr. Allen became almost instantly productive. I'd come with her and just sit, holding her hand. They talked about the crash. Her guilt at not saving the entire crew. Her guilt at surviving when Sgt. Jackson and Eric hadn't. Her fear of being without the purpose she'd given herself, now that she was going to be medically retired from the Army. The pain of losing her mom.\n\nI was surprised at how open Jo became in the sessions. Her discussions with Dr. Allen were wide-ranging and after a while she rarely held anything back. However, sitting in on her sessions was taking a toll on me. Her discussions about her mom. How her family had knitted tighter together in the aftermath of the loss. Not just with Steve and Henry, but Larry too, then later Suzanne and Jack.\n\nI found that listening to her stories was causing pain from my own past to surface in my mind and I realized I probably had serious issues of my own to deal with. Particularly from when my parents basically disowned me when I came out as gay to them during my sophomore year in college, but also my father's general lack of supportiveness as I was growing up. My sister did her best to stay close with me, but since she'd had her son Danny three years ago, she'd spent every holiday and birthday with our parents. Where I was no longer welcome.\n\nSara's family had taken me in. Her parents, Renee and Doug, were great to me, and I called them mom and dad most times. They made sure I was invited to every holiday so I wouldn't be alone, but... it hurt. And listening to Jo talk about her family made my pain more present. It was tough. I wanted to be here for her, but I was pretty sure I needed to find a therapist of my own if I was to continue sitting with Jo in her sessions.\n\nJO\n\n\"God damn it!\" Jo yelled in frustration, as she fell to the knee of her good leg onto the padded floor.\n\nTony sighed. \"Jo, I told you, you need to hold the rails.\"\n\nIt was Jo's first day with her new prosthetic foot, and she was having a hard time getting her balance. Part of it was that she hadn't been standing up without her arm over someone's shoulder or using a walker since the crash. Part of it was that she had just gotten the cast off her arm the day before, and the weakness in her wrist was distracting her. But she also wasn't listening to Tony, her physical therapist.\n\n\"It takes the body over three hundred muscles just to maintain balance while standing. They constantly make hundreds of tiny corrections every minute to keep you on your feet. And this new foot of yours, while a marvel of modern medical technology, has none of those muscles. You aren't going to be standing and walking on this thing today like it was your own foot. Or even tomorrow. You need to be patient.\"\n\nShe grabbed the rails of the therapy equipment and stood back up. \"I've been in bed for eight weeks. I'm ready to be on my feet again. And I'm going to be on the six months side of 'running in six to twelve months' the doc told me about.\"\n\n\"Not if you fuck around and hurt yourself you aren't,\" he retorted. \"I'll get you there as fast as you can, but you have to listen to me. Did you ignore your instructors in flight school?\"\n\nShe grinned and started down the track again, holding the rails this time. \"Most of the time, yeah. I already had four hundred hours of stick time when I joined the Army.\"\n\n\"How many hours do you have walking on a prosthetic foot?\"\n\nThat sobered her up. \"Okay, fair point.\" She knew she was grumpy because Blue was gone. She'd started leaving in the morning to go to work at her apartment and then coming back in time for Jo's late afternoon therapy session.\n\nI really don't like not having her here, she thought. I know that's selfish of me, but\u2014\n\n\"Jesus Christ, Collins. Focus, will you? You want to be walking again without using a walker? Or running? Pay attention.\" Little Voice was as pleasant as ever.\n\nYeah, she thought. Walking. Running. Then what the fuck do I do with my life?\n\n\"One thing at a time, Collins.\"\n\nAn hour later, and Jo was as drenched in sweat as if she'd spent the afternoon at her Cross-Fit gym. She couldn't believe how hard it was just to walk.\n\n\"Ready to head back to your room?\" Tony asked, pulling Jo's wheelchair out for her.\n\n\"Seriously Tony? I thought I'd be done with that piece of garbage that now they fitted me with this thing. Can't I walk back?\"\n\n\"Jo,\" Tony said warningly, \"you can't push yourself too hard. Look at how much you're sweating from walking back and forth fifty feet here. Your room's a quarter of a mile away with no handrails. How do you think that's going to go for you?\"\n\n\"I'm just tired of being pushed around in that piece of crap!\" She pointed to the wheelchair.\n\n\"Hey, Chief, you badmouthing my new preferred transportation mode?\" said Specialist Charles, rolling up to Jo from across the gym in a wheelchair that looked much sleeker than the basic hospital chair Jo was using.\n\n\"Liz!\" Jo's face lit up. She tried to lean over to hug her crewmate, but her balance wasn't quite up to the task yet and she fell into Liz, who started to tip over in her chair until Tony sprang forward and caught them both.\n\n\"Still feel like walking back to your room?\" he asked.\n\n\"Ha ha. No, I guess not.\" Once Tony had straightened her up, she plunked down in her chair.\n\n\"I'm done for the day, Chief. You have time to grab some coffee and catch up?\" Liz asked.\n\n\"Yeah, I'm done until my group session tonight.\"\n\n\"What floor are you on?\"\n\n\"Fourth, you?\" Jo replied.\n\n\"I'm on the fourth too! We're almost like roomies!\" They rolled together down the long hallway from the rehab center to the tower where the patient rooms were located. There was a Starbucks on the first floor and they found a table after ordering coffee. Most of the tables only had one or two chairs, leaving spaces for wheelchairs. There were at least a dozen customers in wheelchairs like themselves.\n\n\"So, how's your rehab going?\" Jo asked after they got settled. \"I just started on my foot today for the first time.\" Jo indicated the prosthesis attached to her left calf. It was titanium and composite material with an articulated ankle joint. It was currently wearing the matching Under Armor cross trainer to the one that she had on her good foot. The socket was custom molded to the stump of her leg with a neoprene sleeve that came up over her knee to hold it in place.\n\n\"Pretty good, I guess. Did they make you do the goals thing when you got here?\" Liz sipped her coffee.\n\n\"Yeah,\" Jo said sourly. \"Not my finest moment.\"\n\n\"Me either. I have no idea what I want to do now. I was such a bitch to Diane.\"\n\n\"That wasn't exactly my problem. I told them I wanted to get back in the cockpit and they told me to forget it.\"\n\n\"Jesus, Chief! Really? After what we went through, you want to go back? I'll be happy to never set foot in a chopper again. Well, put my wheels in a chopper that is.\" She looked down at her wheelchair and became lost in thought.\n\nJo watched Liz move away from the world as she sat there. She looked down at her metal and composite foot, that would eventually let her walk again, even run like she used to. I could have it a lot worse, she thought to herself, as she looked back at Liz. Some people already do.\n\n\"She's your crew, Collins. You're her commander. Show some leadership,\" Little Voice told her.\n\n\"So, Liz!\" Jo said loudly, startling the younger woman out of her reverie. \"Tell me some of the goals that you set.\"\n\n\"Uh, well, like I said I have no idea. I had two more years left on my enlistment then I was going to go to college. I think I missed most of the application deadlines for this year.\"\n\n\"So, what have you decided to do?\n\n\"Well,\" Liz said, setting her coffee down. She grabbed the wheels of her chair and idly began rocking it to and fro. \"I decided for now to aim for something that has more to do with my physical recovery. I'm going to finish the Army Ten-Miler in October.\"\n\nJo blinked at her. The Army Ten-Miler was an annual race that started and ended at the Pentagon. After crossing the Roosevelt bridge and winding its way through D.C. it crossed back over the Potomac via the Fourteenth Street bridge into Virginia again. Upwards of thirty-five thousand runners participated every year. Jo had run it five times with a bunch of members of her unit when she hadn't been overseas.\n\n\"You want to... run... in the Ten-Miler?\" Jo felt like she was missing something.\n\nLiz chuckled. \"No, Chief, I'm going to compete as a wheelchair athlete.\"\n\nJo flushed. \"Ah, yeah, right, that makes more sense. Sorry.\"\n\n\"So, I have a lot of upper body work to do at the gym between now and then.\"\n\n\"Well, I can help you with that if you like. I've been bedridden for two months now, so apart from whatever Tony has planned for my leg, I have some catching up to do, upper body wise.\" She didn't mention she'd been in a coma for three weeks of those two months, although she was pretty sure Liz knew.\n\n\"Really\" Liz seemed thrilled. \"I was a runner before I enlisted and I haven't done much too weight lifting or upper body conditioning, so if you'd be willing to help me out, that would be amazing!\"\n\n\"Sure, it'd probably be good for me to have a training partner. Let's meet with our treatment coordinators tomorrow and see if we can shift stuff around so we have like, let's say... two hours in the afternoon? Four times a week?\"\n\n\"Chief, I am so there! This'll be great!\"\n\n\"That's how you do it, Collins,\" Little encouraged her.\n\nJILL\n\nI was sitting in our suite, working on my MacBook after dinner Monday night. Jo had a group therapy meeting each evening, which obviously I couldn't go with her to that. I don't think she ever said a word in them, but Dr. Allen felt it was good for her to at least sit and listen.\n\nI looked up at the knock on the door.\n\n\"Hey, Jill. It's Liz? Specialist Charles? From Jo's crew?\" The young woman was sitting in her wheelchair at the open door to our room.\n\n\"Liz! Of course, I remember you, come in!\" She rolled herself up to the table where I was working. \"How is working out with Jo going?\"\n\nJo was in her second week of learning to walk on her prosthetic foot. According to Tony, she was making remarkable progress. She had stopped using the wheelchair after the first week with her new foot and was walking all over the hospital with a cane. Tony said she'd be ready to try on her running prosthetic in another month. She'd been working out with Liz in the afternoons at the rehab gym.\n\n\"It's going good! I mean, I guess it is. I'm always sore as hell the day after we work out.\" She rubbed her triceps.\n\nLiz was a pretty woman. She was about twenty-three, with shoulder length dark brown hair she kept in a ponytail, and I guessed if she'd been able to stand she'd have been somewhere between my and Jo's height.\n\n\"That's good to hear. I'm not much of a gym rat and I know Jo loves to lift. I think it's good for her to have someone to work out with.\"\n\n\"Yeah...\" She looked uncertain all of a sudden.\n\n\"What's on your mind, Liz? Something bothering you?\"\n\nShe hesitated, then said, \"Look, I don't want to get all up in the Chief's business, but you and she are... together, right?\"\n\n\"Yes?\" I suddenly wondered if there was some young crush going on.\n\n\"Well, I'm worried about her.\"\n\n\"Oh? What do you mean?\"\n\n\"Look, I know we've all been through, well... the worst thing we could have gone through. But Jo...\" she couldn't continue.\n\n\"What? Liz, it's okay you can talk to me. I won't rat you out to Jo.\"\n\n\"She just seems... lost. I'm not sure what's going on. Look I've been flying on her crew for almost two years. She's the most competent, confident woman I've ever known. I look up to her, you know?\"\n\n\"I feel the same way,\" I said.\n\n\"But now, she's so tentative. Unsure of herself. I used to see her in the gym on base. She's was a fucking machine. I've never seen someone throw themselves at the weights the way she did. Fearless. Now she's... she isn't that anymore. It's like she's lost all her confidence.\"\n\n\"Well, she was pretty badly hurt, Liz. Maybe she's working her way back.\"\n\n\"It's not just in the gym though. We talk a lot while we work out and when we've gone afterwards to get coffee or a smoothie. I don't think she has any idea what's next for her. I mean, she's over the moon for you, I can tell. But I don't think she sees any... purpose in her life. She was the best pilot in the best medevac unit in the Eighty-Second. Now... I don't think she has any idea what to do next and I'm worried about her.\"\n\nI sighed. \"Yeah, me too. I don't know what to do about that. She was crushed when they told her there wasn't any chance of getting a waiver to go back and fly for the Army.\"\n\nShe looked at me. \"You know she could get a medical waiver to fly in the civilian world, right?\n\n\"Yeah, but I'm not sure flying charter helicopters is her thing.\"\n\nShe hesitated again.\n\n\"What?\" I asked.\n\n\"I don't want to assume you guys are dumb, but she knows there's lots of civilian jobs basically doing what we did over there, only with no one shooting at you, right?\"\n\n\"Well, I guess that's true. But we haven't really talked about it.\"\n\n\"She should look into it. Also, before she the crash, she didn't talk about personal stuff much but she talked about music all the time. I haven't heard her say anything about it since we got back. Do you know if her broken arm did something so she couldn't play?\"\n\nI paused. I hadn't even stopped to think about that. We'd been so caught up in everything, getting her back to us, her surgeries, her rehab... she hadn't spoken once about playing since she woke up.\n\nI suddenly realized I'd been focusing on getting her physically back to life without thinking about what she might need to be back IN life. She hadn't picked up a guitar since she woke up. She hadn't been outside of a hospital since she woke up. We hadn't done more than kiss since she woke up. There were many things she hadn't done.\n\n\"Liz, thanks for coming to talk to me. You've given me a lot to think about.\"\n\nJO\n\nThe next day, Jo came back from her afternoon workout with Liz to find Blue sitting in their suite waiting for her.\n\n\"Hey babe, how was your workout?\" she asked.\n\n\"Oh, the usual,\" Jo replied. She didn't seem all that enthusiastic.\n\n\"Well, let's get you showered,\" Blue said, standing up. \"We've got things to do.\"\n\n\"What do you mean? What things?\"\n\n\"That's for me to know, and for you to find out. C'mon, let's get moving.\"\n\nJill helped Jo get showered as she did every evening. Jo had gotten pretty good at standing on one foot, but Blue didn't like to take chances and kept herself within an arm's reach until she got herself dried off, then helped her hop back to the bed.\n\nThe usual routine was Blue would help Jo get dressed in sweats or gym shorts and an Army t-shirt. Jo would then go to her evening group therapy, then come back and they'd curl up in Blue's bed and watch TV or just go to sleep.\n\nWhich was why Jo was surprised at the clothes Blue had laid out on the bed this evening.\n\n\"What's this?\" she asked.\n\n\"Clothes, Jo. Remember real clothes?\" She had set out the outfit that Jo had worn to the Four Courts bar, the night she'd surprised Blue and sang for the first time in eight years. \"You left these at my place back in January, so I figured it would be easier to bring this than buying you something new and hoping it fits.\" She knelt in front of Jo and started pulling the pants up her legs.\n\n\"But... what are we doing?\"\n\n\"We're going out to dinner. I talked to Dr. Allen and you have the night off from group. As long as I bring you back in time for physical therapy tomorrow morning, we have a pass and I'm taking you out. I'm tired of us being together in a hospital, I want us to be together, out in the world. Stand up.\" She pulled Jo upright and got her pants fastened then handed her the black tank top to put on, then started changing her own clothes.\n\n\"But... I don't...\" Jo looked uncertain, an emotion that had spent far too much time on her face lately.\n\n\"Jo, it's okay. I'll be right with you. We aren't going to ride the Metro, I think that would be too much for a first time out. But we're going to go have a quiet dinner, then if you feel up to it, we might do something else.\"\n\nBlue had finished changing. She was now wearing a long, swirling blue skirt that almost matched her hair and a yellow silk blouse, with black suede ankle boots.\n\n\"But... I mean, we could order food in here and maybe watch a movie or something?\"\n\n\"Quit being a wuss, and put on the monkey suit Collins. Jesus Christ, she just wants to take us to dinner, and the food here sucks,\" Little Voice said.\n\n\"Jo, you need to get out of here for a night. You haven't set foot outside a hospital in eight weeks. Now sit down and put your foot on. Tonight, it's my aircraft, okay?\" Blue smiled at her and held the white linen button down top out to Jo.\n\nThe black velvet slippers she'd worn in January didn't quite fit on her new foot, so Blue helped her put on a pair of her sneakers. Her slacks were so blousy around her legs, that you could barely see her shoes anyway. She had a noticeable limp as they walked out the front door of the hospital, but with long pants on, she looked more like someone who might've twisted her ankle, rather than someone missing a foot.\n\nAs they walked out to the driveway, a red Prius pulled up and Jack Vance hopped out. \"Hey, Jo!\" he said, and rushed around the front of the car to grab her in a fierce hug. She was startled but hugged him back just as hard.\n\n\"Jack! It's so good to see you! What are you doing here?\" Jack had come to visit with the rest of the band when Jo had arrived at Walter Reed, but she hadn't expected to see him tonight.\n\n\"Jack has generously agreed to help us out and be our driver tonight. No Metro, no cabs, no Lyft.\" Blue said.\n\nHe grinned at her. \"I can't tell you how happy I am to see you okay and up and walking...\" He glanced down at her legs. \"I mean. Mostly okay... I mean... Geez, sorry I'm being an idiot here.\"",
        "\"It's okay. I'm glad to see you again too.\"\n\nJo and Blue got in the back seat and Jack drove them out of Bethesda into D.C., talking up a storm, asking Jo every question he could think of. When they pulled over to the curb in Chinatown, Jo was almost wishing they'd taken a cab. Not that she wasn't happy to see Jack, but she was feeling overwhelmed.\n\n\"Thanks, Jack,\" Blue said. \"I'll call you in a couple hours to pick us up, okay?\"\n\n\"You got it, Jill. I'm going to find a sports bar when I can grab a bite and watch the Nat's game, so I'll be close.\" He pulled away from the curb.\n\nBlue linked her elbow through Jo's arm as they started walking down the street, the late May evening warm and pleasant. \"You know, I've been fantasizing about taking you to all my favorite places in D.C. once you came back from Afghanistan and now here we are.\"\n\n\"Not quite how I imagined it would be,\" Jo said sourly, slouching over and looking down at her foot.\n\n\"Collins, they may be kicking you out soon, but you're still a U.S. Army Warrant Officer until they do. Fucking stand up straight and carry yourself like one,\" Little admonished her.\n\nShut up, Little! Jesus! she thought. But she stiffened her spine anyway.\n\nBlue didn't notice her preoccupation. \"It's not how I imagined it either.\" Blue paused on the street and turned Jo to face her, \"But you're here. You're alive. And you're with me and we can figure out what we're going to do with the rest of our lives. Together, okay?\"\n\nJo finally looked up and smiled at her. \"Okay, Blue.\"\n\n\"Good. And here we are, which is good, I'm hungry.\" She kissed Jo, then took her hand and walked her the last steps to the end of the block and the restaurant there.\n\nJaleo's was the best tapas restaurant in D.C. Blue had called ahead and reserved one of the outside tables on the sidewalk. She ordered a pitcher of white sangria for them to share.\n\n\"I talked to Diane and she said if we keep it to one or two, you can have a drink tonight. You've been off your pain meds for a couple of weeks, but she still wants you to take it easy.\" Diane was Jo's treatment coordinator at Reed.\n\n\"You're just taking charge of me, aren't you?\"\n\n\"If I hadn't taken charge in the pool at Virginia Beach, do you think we'd be here now?\"\n\n\"Point.\" Jo raised her glass and Blue clinked it before they drank, smiling at each other.\n\nTwo hours and a dozen empty plates of tapas later, Jo had finally relaxed a little. Blue propped up her elbow on the low back of her chair and leaned her head on her fist.\n\n\"So... what do you want to do?\"\n\n\"I don't know. We could walk around some more?\"\n\nBlue started idly stroking Jo's right calf with the toe of her boot under the table. \"No, I mean what do you want to do? Diane said you'll probably be discharged from Reed in June or July and they'll process your retirement soon after that. So, what do you want to do?\"\n\n\"Oh.\" Jo looked down at her hands in her lap. \"I have no idea.\"\n\n\"Well, let's talk about it. Do you want to fly? I know you don't want to do charter work. Do you want to do what your dad does? The electrical line thing?\"\n\n\"No, there's not enough of that work for me to do it too. Dad's only part time these days really.\" All the stress she'd lost from her shoulders during the dinner had come rushing back.\n\n\"What about doing medical flights? There's lots of places that have helicopter ambulances, right?\"\n\nJo watched the traffic on the street for a while. \"Maybe,\" she finally said. \"Those jobs are hard to get. I might have to start in Idaho or Arkansas or something.\"\n\n\"Then we move to Idaho or Arkansas, if that's what you want.\"\n\nJo snorted. \"I don't want you to have to move to Arkansas, Blue.\"\n\n\"Well, I don't either. But I think we need to start thinking about what comes next. Let's think shorter term. What about the band?\"\n\n\"What? What do you mean 'what about the band'?\"\n\n\"This year's beach tour is just eight weeks away. Do you want to go with Steve, Suzanne and Larry again this year? You don't have anything on your calendar, after all.\"\n\n\"Why do we have to talk about this now?\" she asked Blue.\n\n\"Because we've been living together in hospitals for two months and we haven't talked once about what we want afterwards. We've just been focusing on each small step, one day at a time. I think we should start thinking about longer term. Do you want to move into my apartment with me? Do you want to go home to your house at your dad's farm? Do you want me to come with you? Do you want to go there alone?\"\n\nThat brought Jo up short. \"I... I don't know where I want to go. I know I want you with me wherever we go. Do you not want me to live with you?\"\n\n\"Of course I want to be with you! I mean I've stayed by your side for two months, doesn't that sort of indicate my preference?\"\n\n\"I guess. I know I'm not the easiest person to deal with. I didn't want to assume anything.\"\n\n\"Okay, see this is the kind of stuff we need to talk about. But we don't have to decide it all now, I just want you to be thinking about it. Now, do you feel like staying out longer or do you want to go home?\"\n\n\"What'd you have in mind?\"\n\n\"There's some live music a couple blocks over if you want to go to that. Nothing wild. A jazz guitarist who's supposed to be pretty good.\"\n\n\"Guitar...\" Jo was suddenly uncertain again. \"I think I want to go home. I've enjoyed being out with you, but I think it's been a bit much for me my first night out.\"\n\nBlue stood and held her hand out. \"Okay. I don't want to push you.\" She called Jack and ten minutes later they were in his car heading out of Chinatown.\n\n\"Wait, this is... are we not going back to Reed?\" Jo said looking out the window as they drove through Adams Morgan.\n\n\"We will. Tomorrow morning,\" Blue said as they pulled up to her apartment building. \"Thanks for the ride, Jack! Glad the Nats are winning,\" Blue called as she pulled Jo out of the car.\n\n\"See you later, Jo! Bye, Jill!\" Jack called out the window as he pulled away.\n\n\"So, we're staying here tonight, huh?\"\n\n\"Yep!\" She hooked her arm through Jo's again and pulled her up the steps. \"I just have to have you back for your first PT session and it's not until 9:30 in the morning.\"\n\nOnce inside Blue's apartment, the memories of the short day they spent together here back in January flooded back into her mind for the first time since she'd woken up from her coma. She knew that they'd done something the night after she sang to Blue, but she hadn't been able to remember details.\n\nNow she recalled that most of the time they'd been here together, they'd been naked. Jo turned several shades of red thinking about it.\n\nBlue led Jo into the bedroom. \"Get yourself undressed. I'll be back in a second,\" she told Jo.\n\nJo pulled her pants and shirt off and sat on the edge of the bed to take her 'foot' off. She was in her usual boy shorts underwear and her tank top when Blue opened the bathroom door.\n\nShe was wearing the lace socks Jo had bought for her in Virginia Beach, but somewhere she'd found a matching underwear set. The white lace panties were high cut and had little bows on the hips in the same powder blue ribbon that was woven through the cuffs of her socks. The bra was matching lace and virtually see through. She struck a pose, leaning against the door frame and rubbing one foot up and down her other leg. She looked breathtaking, with her cascade of blue hair draped over her shoulder, covering one arm.\n\nJo looked at her and her lip quivered, then tears started rolling down her cheeks.\n\n\"Jo! What's wrong?!\" Blue was quickly at her side. She sat on the bed and wrapped her arms around her. \"It's okay! If you aren't ready it's okay! I'm sorry, I just thought we haven't, you know, since your crash, we haven't had any privacy or time alone and I thought...\"\n\n\"No... it's...\" she was struggling to control herself as she held onto to Blue. \"I'm sorry. I'm sorry, I just... I wasn't sure...\"\n\nBlue pulled back and put her fingers under Jo's chin to raise it up so she would meet her eyes. \"Jo. You weren't sure about what?\"\n\nJo met her eyes for a second then looked down again, as a tear dripped off her nose. She whispered something.\n\n\"Jo, what? I couldn't hear you.\"\n\nShe whispered again, barely louder. \"I didn't know if you would still want me.\"\n\n\"What? What on earth? Why would you say that?!\"\n\n\"I'm... I'm maimed, Blue! I'm disfigured!\" she cried out, gesturing to her leg. \"I feel like only part of the person I was, and I have this huge scar on my stomach where they put the piece of my skull, and I have this huge scar on the back of my head where they took it out, and I'm missing half my leg, and I didn't know... I wasn't sure... you'd... still... want me.\" She started crying harder, burying her face in Blue's hair.\n\nBlue just held her while she cried herself out. When she stopped, Blue reached up, and cradled the back of Jo's head with one hand, her fingertips gently stroking the line of the scar beneath her hair, and pulled her in for a kiss. She made it last, caressing Jo's tongue with her own. Then she pulled back and stared into Jo's eyes.\n\n\"Jo. I love you. And of course, I want you. I want you so badly. I've wanted to make love to you for weeks but I wanted you to be ready. Physically and emotionally. Every day when I help you shower I have to restrain myself from being all over you.\"\n\n\"Really?\" Jo whispered. She seemed desperate to believe it.\n\n\"Really, Jo. You're so beautiful to me,\" she started pulling Jo's tank top off, \"and I've needed to get my hands all over this body since the day you left me at BWI. Nothing about that has changed.\"\n\nShe pushed Jo onto her back and ran her hands over Jo's abs, then stopped to trace the line of her scar there. It was about six inches long, running up vertically just to the right of her navel. Blue leaned down and licked Jo's stomach, tracing her tongue around Jo's belly button, drawing an intake of breath from her Army girl. She looked up at Jo as she licked the line of her scar.\n\n\"This doesn't make you any less beautiful, Jo. It's a part of you, a part of your journey through life. A journey that brought you here. Back to me. Right now, in this moment.\"\n\nBlue got up on her knees on the bed. With one hand she grabbed Jo's fingers and with the other she pulled her panties to the side. She pulled Jo's hand towards her and guided Jo's fingers between her legs. Blue was soaking wet, and Jo's fingers easily slid inside her.\n\n\"Do you believe me now, Jo?\" She gasped.\n\nJo felt the hungry look come over her face. The look she'd had in the pool in Virginia Beach when Blue had taken off her bikini top. The look she'd given Blue when she'd come out of the bathroom wearing these socks the next night.\n\n\"My god, Blue... What did I do to deserve you?\" Jo said as Blue rocked against her hand.\n\n\"I told you,\" Blue said, panting. \"You've deserved more than you've let yourself have.\" She moved down, and Jo made an unhappy sound as her fingers slid out of Blue's pussy. \"But now, I'm going to show you just how much I want you.\"\n\nShe lowered her head between Jo's legs and licked at her. Jo sucked her breath in again. Blue lifted Jo's legs over her shoulders. As she continued to stroke Jo's clit with her tongue, Jo started rubbing Blue's back with her feet. Well, with her foot and her other leg.\n\nBlue paused in her oral ministrations and slid a finger into Jo while saying, \"Jo, there's no one... no one, who's hotter to me than you are.\"\n\nJo finally had enough of being passive. She grabbed Blue's shoulders, pulling her up and flipping her over onto her back while rolling on top of her. Blue rewarded Jo's effort with a surprised \"Eep!\" but managed to keep her fingers inside Jo. Jo quickly joined her, stroking Blue's clit with her hand. They were kissing frantically as they approach their orgasms together, Blue running her free hand into Jo's hair and grabbing a fistful.\n\n\"That's my Jo,\" Blue said, panting. As the wave crashed over them both, they pressed their foreheads together, crying out and holding on to each other as if it were their first time.\n\nMuch later, as they lay in the afterglow of their lovemaking, Blue rested her head on Jo's shoulder, idly stroking her stomach and tracing the scar there with her fingers. She said, \"So I've been thinking. You've making amazing progress in your physical recovery, don't you think? I mean you're walking and you only had to use that cane for like a week.\"\n\n\"Yeah, I guess so,\" Jo said, tangling her hand in Blue's hair, watching it as she twirled a lock of it around her fingers.\n\n\"Only because Tony made you use it that long.\" Little hadn't been a fan of the cane.\n\n\"But I think we need to focus more on the other parts of your recovery. You need to get your self-confidence back.\"\n\nJo dropped Blue's hair and flopped her hands to the bed. \"Fuck, don't I know it. I'm gun shy about everything these days. I was terrified just walking out of the front door of the hospital tonight. I'm terrified of trying to think about the future. I'm terrified when... I just seem to be terrified all the time.\"\n\nIt was a startling admission. The old Jo would never have said it out loud before the crash. Or even to herself. It was a testament to both how well her sessions with Dr. Allen were going and how much she'd opened up since coming out of her coma, but also how insecure she'd become.\n\n\"I don't know... Every time I think about the future... I just freeze up. I've never been like this before. When I decided I wanted to be a pilot in the Army, I just charged straight ahead and beat down anything that got in my way. I wasn't afraid of anything. Now all I can do is obsess about what's in my way or what could go wrong instead of trying to figure out what I want and how to get it.\"\n\nBlue sat up. \"When you started getting all... muscle-y, did you do it by yourself or did you have a trainer?\"\n\nJo laughed. \"I had the best trainer of all, Drill Sergeant Evans and sixteen weeks of basic training.\"\n\n\"Okay, then, I'm going to be your drill sergeant, starting tomorrow. I'm going to whip you back into confident Jo.\"\n\nJo managed to look both amused and apprehensive at the same time. \"My drill sergeant, huh? What's your plan for beating all this doubt out of my head?\"\n\n\"Did your drill sergeant in basic tell you everything they were going to do to you for the next sixteen weeks the first day you got to basic?\"\n\nJo snorted. \"They didn't tell us what we were going to be doing five minutes ahead of time.\"\n\n\"Well then, I'm not telling you anything except that I have a three-part plan for you. We'll start tomorrow after your day of PT is over but before you group session.\"\n\nJo closed her eyes and threw her arm over her face. \"Is it stupid that I'm afraid of trying to do something that will make me less afraid of trying to do things?\"\n\nBlue hugged her fiercely. \"No, that's not stupid. You've been through something that could have killed you. Would have killed most people. But being courageous isn't about not being afraid. It's being afraid and then doing it anyway. You don't need me to tell you that, though. You probably know that better than I ever could. But I'm going to be with you every step of the way.\"\n\nJo started to tear up again. \"I don't know if I'd have made it through all this without you, Blue. I'm still not sure I will.\"\n\n\"You will. You've been telling the world that you're the strong one all your life, even when you were hiding pain. Now your brain just isn't letting you hide it anymore, so it's easier for both yourself and others to see it and you have to adjust to that.\"\n\n\"I know... I hate it.\"\n\n\"I know you do. But it'll get better.\"\n\nJo sniffed. \"I just wish I wasn't so up and down all the time.\"\n\nBlue grinned at her. \"That's all part of the song, Jo.\"\n\n\"What?\"\n\nBlue started singing.\n\n\"I'm feeling the way you cross my mind, and you save me in the nick of time!\n\nI'm riding the highs! I'm digging the lows!\n\n'Cause at least I feel alive!\"\n\nJo grinned back at Blue, then reached out to twirl a lock of her blue hair around her finger again, and joined her with the harmony.\n\n\"I've never f-a-a-a-c-e-d, so many emotional d-a-a-a-y-s!\n\nBut my, life is good! I'm feeling y-o-o-o-u-u-u!\"\n\nTo be continued."
    ],
    "authorname": "BrokenSpokes",
    "tags": [
        "heartbreak",
        "drama",
        "lesbian romance",
        "lesbian drama",
        "romance",
        "love story"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/hard-landing-ch-06"
}