{
    "title": "Afterglow Pt. 05",
    "pages": [
        "Hey, this is (not) John Grisham. Thanks to everyone who has read, responded and voted. This was a tough piece for me; your feedback was greatly appreciated. I learned more about law than I ever thought I would, resulting in a very interesting and potentially suspicious Google history. It was worth it.\n\nJust a note: This story is a fictionalized account of stalking and abuse. It isn't meant to romanticize this criminal behavior. Stalking is something that sends chills down my spine. If you or someone you know is going through this, please don't be afraid to seek help. There is hope.\n\n*****\n\nChapter VIII: An Appeal\n\nI hated hospitals. The smell, the sterility, the shiny floors... Soap stations were parked next to every door. Nurses walked around with cheery scrubs that somehow seemed wrong against the backdrop of the suffering. Even worse, the frantic and heavy expressions of loved ones were haunting and inescapable. \n\nThe employees at the front desk were assholes. They gave me a hard time when I said I was there to see Rose, telling me they were supposed to receive a list of visitors and my name wasn't on it. I fought with them, getting more and more pissed until they caved. A girl called someone upstairs, gave them my name and asked for permission. When she got off the phone, she tossed me an eye-roll and told me I had to wait.\n\nWhile I stood there, I prayed hard for a miracle. Life had been strangely good to me lately. For the first time in a long time my love life wasn't a punchline. I met a good woman who loved me, who patiently waited while I got over my hangups, who thought I was worth waiting for. My career wasn't going very well, obviously, but it didn't seem as important anymore. \n\nI wasn't so sure if I had done anything deserving of a miracle, but I got one when Olivia walked up to me that first night at the gallery and asked my opinion on her painting. It would be hard to summon yet another miracle, but I prayed and prayed, begging the universe on Rose's behalf. She needed one. She needed to survive. \n\n\u2028\n\nThen suddenly Rose's father was beside me, silently taking my arm. I only met Frank once before, and only briefly. I expected him to yell at me, to blame me as if I was the symbol of the system that had let him down. That had let his daughter down. Instead he nodded towards the elevator and I followed.\n\nOnce the doors closed, he exhaled and looked at me with a smile. \"She's okay.\"\n\nIt took me a minute to realize what he'd said. Everything tingled. \"What? Really?\"\n\n\"She's gonna wake up. They have her under, in an induced coma, but she's gonna wake up. The bullet was in her gut. But it came in at a weird angle, so it's a shallow wound. Nasty, they said, but the bang on her head was worse. He...he hit her over the head. Hard. They say the coma is a precaution.\" He fidgeted. \"Of course, you know, it might take some time to heal but she's okay. Alive. They might move her out of the ICU soon.\"\n\n\"That's...wonderful.\" Then I burst into tears. Her poor father had absolutely no idea how to handle me, and so he patted my shoulder awkwardly until we were finally upstairs. \n\nI hadn't stopped crying, but at least I wasn't wailing anymore. A tentative smile crossed my face as I followed Frank through a series of doors and hallways that didn't make much sense to me in the mood I was in. Finally we were in the ICU.\n\nA woman who looked exactly like an older Rose\u2014clearly her mother\u2014talked intensely with the doctor near the nurses' station. \n\nFrank cleared his throat and I looked back at him. \"Felicity's with her now. You should join her.\" I went to take a step but he put his hand on my arm. \"I need to warn you. She doesn't look great, but remember she's much better than she looks. It's gonna be a long way back. That's what the doctor says.\"\n\n\"Thanks for the warning.\" I smiled and impulsively hugged him. I was just so thrilled that she was still alive, that she still had a chance. Then I let go, rubbing at my tears and laughing at Frank's uncomfortable expression. Rose had told me once her father wasn't very touchy-feely, and neither was I. Usually. \"Thank you.\" \n\nThen I pushed the door open. I couldn't imagine what state Felicity was in. Rose often referred to her a hot head, and I couldn't disagree. Felicity felt with every atom she possessed. I admired her for that.\n\nI slipped through the curtain and there was Rose, pale and nearly lifeless against the stark white sheets\u2014not much whiter than her skin. Thank God Frank warned me.\n\nFelicity was in a chair beside her, toying with the fingers of Rose's right hand. She looked up when she heard the sound of my footsteps and greeted me with a small smile.\n\nI took a seat on the other side and stared at Rose.\n\n\"Rose always kinda expected to end up here. Morbid girl,\" Felicity eventually said. Her voice was a whisper. \"She said Dan wouldn't ever let her go. That he'd rather she died than live her life without him.\" I glanced at her and saw she was watching me with tears in her eyes. \"I feel like I was so busy telling her to be strong, reciting all that shit from online message boards and books, that I wasn't listening to her. I didn't hear what she was saying.\"\n\n\"There wasn't anything you could've done, Felicity.\" I listened to the beeping of Rose's machines for a moment. Her heartbeat on the monitor was an amazing sight to behold. \"You have to give yourself a break. The world doesn't rest on your shoulders.\"\n\n\"I was showering. When he came. I didn't hear anything else but the gunshot. I came out and he was standing there, fiddling with the gun. He gave me such a hateful look.\" She took a deep breath. \"I couldn't run. I couldn't scream. I just panicked, frantically scanning the room for Rose. He lifted the gun and tried to shoot. It jammed or something, I don't know. And then he ran.\"\n\n\"Are you going to blame yourself for showering, now?\"\n\nHer eyes slid to Rose's sleeping body. \"No. I'm not. I know it's not my fault. I just keep playing the look he gave me over and over. It makes me sick.\"\n\nWe were silent after that. I wondered if the police had tracked Dan down yet. A dark part of me hoped he killed himself. The world wouldn't miss him. Another part of me hoped they caught him. Seeing him in jail would possibly bring satisfying closure to everyone. It would be extremely rewarding to see him trapped, to show him that he hadn't won, to taunt him with the realization that Rose would go on living her life without him. \n\n\"What happens next?\" Felicity asked. \n\n\"He's definitely going away. There's no avoiding it.\"\n\nFelicity kissed Rose's hand. \n\nWe sat there in silence for what felt like hours. Felicity had fallen asleep with her head against the bed, her hand still clasped with Rose's. I knew I had to go. I stood and stretched, stifling the sound of a yawn behind my hand. \n\n\"You'll keep me updated?\" Felicity asked. \n\nI jumped. She was sitting up with bleary eyes. \n\n\"Yes.\"\n\nFelicity stood up, carefully pulling her hand away from Rose, and came around to my side of the room. She studied me for a minute, a smile creeping across her face. Before I knew what was happening, she had me in a bone-crunching hug. After a few seconds I lifted my own arms up to reach around her. \n\n\"Thank you,\" Felicity breathed. \"Thank you. I don't know what we would have done without you.\"\n\n\"I didn't do\u2014\"\n\n\"Hush. I'm actually thanking someone for once and you're spoiling it.\"\n\nMy eyes started watering but I commanded myself not to cry. \"I wish I could've stopped him.\"\n\nFelicity pulled back, a soft smile still on her face. She smoothed my hair down and then lovingly rested her palm against my cheek. \"Remember how you told me to stop blaming myself earlier? I think you need to start doing that, too.\" She gave my face a pat. \"You're wonderful, Elizabeth. You're too good for those dicks who tried to demote you. You're just right for Olivia... I'll even admit that. I'm glad you found her. And you're just right for Rose and me. You're a fantastic friend. We owe you more than you know. And we certainly don't blame you for one move you've made.\"\n\nI blew out a heavy breath. \"Thank you.\"\n\nFelicity stepped back and returned to her chair, closing her fingers around Rose's pale hand. \"Please keep us posted.\"\n\n\"I will,\" I said. \"I promise.\"\n\nOOOOOO\n\nI was exhausted when I got back to my apartment. All I wanted to do was climb into bed and sleep and sleep. Unfortunately I had to go to work, and while the weight on my heart had lessened after learning Rose was going to be okay, I was still feeling the withdrawal of having so much shock and anxiety coursing through my system. I'd been so fucking terrified. It seemed impossible to go into work after the night I had, but it was imperative. Things were shaky at work, and I desperately wanted to know what Robert and Roger's plans were. \n\nI talked with Rose's parents before I left, offering them as much comfort as possible. They wanted answers I couldn't give them. Luckily they got in touch with Robert, and he was supposedly heading over to the hospital to talk things over. I hoped he'd be at the office soon.\n\nOlivia called me and I told her what happened immediately.\n\n\"Dear Lord. If he isn't dragged away after this, then I give up on your country. You and I will move to Paris.\"\n\nI smiled. \"Paris? I could definitely live there. What would I do for a job?\"\n\n\"Be serious, Elizabeth! It's a travesty that it got this far.\"\n\n\"He will be held accountable for this. I promise you.\"\n\nShe was quiet for a minute, but I could hear her breathing. \"And how are you, my sweetheart? You must be so exhausted.\"\n\n\"I'm okay. Relieved, more than anything.\"\n\n\"Would it...Would it be in bad taste if we went out for a romantic dinner tonight? I know that it isn't a wonderful time for you but I'd like to tell you I love you all night long.\"\n\nHer words strummed a tight string inside of me. I understood what she meant; it did seem like an unfortunate time to be celebrating while Rose lay in the hospital and Dan had yet to answer to his despicable actions. And yet it seemed so important to give ourselves this night. We'd been balled up with worry for a long time. Olivia had stood beside me through it all. Now the nightmare appeared to be ending. It was time to start looking forward. \n\n\"I'd love to go out with you. Text me where and when, okay?\"\n\n\"I love you.\" I could hear the smile in her voice.\n\n\"I love you, too.\" We disconnected. I stood there for a moment, marveling at how easy it was for me to express my feelings to her. It felt good and natural.\n\nI didn't have much more time to linger. Toronto needed another quick walk. When we got back, I knelt down beside him and gave him another one of his favorite belly rubs. I got a nice lick on my face as thanks.\n\n\"I love you, you crazy dog!\" \n\nToronto stretched out and gave me those eyes that all dog owners know...that subtle \"pleeeaaaasseeee\" in their eyes that is so damn hard to deny. I gave him attention for another five minutes because I was happy and feeling generous but then I really had to go.\n\nI took a quick scalding shower, pulled on an ugly but clean dress and twisted my hair into a wet bun. I glanced at my clock; I was going to be late.\n\nThen Steve called me while I ran around my apartment, looking for a missing heel. I'd texted him earlier, asking if he knew the cops looking into the incident and if they had any information.\n\n\"Hi. Any news?\"\n\n\"Yep. They have him. He went to his mother's.\"\n\n\"Jesus. Is he hurt?\"\n\nHe sighed. \"No, he's fine. He didn't resist or anything. Surrendered right away. Gave the gun up. Gave the story up. Ray told me his mom was sobbing the whole time.\"\n\n\"God, Steve. That makes me sad.\"\n\n\"They think he was so cooperative because he thought Rose was dead. They said I should've seen his face when they told him. That he screamed and screamed. Now he's freakishly silent, they say.\"\n\nGood. \"Has Robert been down there yet?\n\n\"No. His attorney is already here, though. We haven't been able to talk to him since he got here. Slimy prick was waiting for us. His mother called him, I guess. Still feel sorry for her?\"\n\nI picked up my bag and keys. \"Yes.\"\n\nSteve snorted. \"Anyone protecting that piece of shit is an asshole, in my opinion.\"\n\n\"Mine, too, but she's his mother. She loves him.\" I left my apartment and headed for the subway. \"Thanks for keeping me updated, Steve.\"\n\n\"How's the girl?\"\n\n\"Not great, but she'll survive.\"\n\nHe cleared his throat. \"I know it's none of my business\u2014but how are things going with your friend?\"\n\nI knew immediately who he meant, and that he knew she wasn't merely a friend. I was speechless, mindlessly sidestepping people who rushed by me. A woman knocked into my shoulder with incredible force and I gasped.\n\n\"I shouldn't have asked,\" Steve mumbled. \"It was out of line.\"\n\nJesus Christ. This was so hard. I'd \"come out\" to Jacqueline but I blocked out the reality I'd have to \"come out\" over and over again. It would be something I'd always have to explain. I knew I wanted to be with Olivia. I wasn't ashamed or flakey about it anymore and I'd made up my mind. But this was different. Steve was my friend. He was one of the best people I knew, and perhaps I was doing a disservice to him by projecting my fears of rejection and disgust onto him, but his opinion mattered a lot to me. I would be wrecked if he decided I was sick, and I couldn't handle that on top of what happened to Felicity. \n\n\"It's okay.\" I took a breath. \"Um, we should probably meet for drinks to discuss this, you know? I'm on my way into work and it's not something to talk about on the phone.\"\n\n\"Are you happy?\"\n\nMy breath caught and silly tears sprang to my eyes. He didn't sound judgmental or weird at all. He sounded curious in the nicest way possible.\n\n\"Yes.\"\n\n\"Good,\" he laughed. \"Then that's all that matters.\"\n\nOOOOOO\n\nMy blood boiled whenever I thought about what Daniel Tierney had done. Not just the recent incident, but the fear and pain he brought to those girls' lives every day. I typed angrily, wishing Robert would show the fuck up. He hadn't answered my thousands of texts. Even Steve had stopped communicating with me. I knew he was busy and he didn't have much involvement with the case, but he was the best contact I had.\n\nRobert strolled in around noon. I was on him immediately and he rolled his eyes.\n\n\"Can I at least have a fucking cup of coffee?\"\n\n\"No. What happened?\"\n\nHe rubbed at his stubble and studied me. \"Don't you have work to do? What are you going to do once this case gets resolved?\"\n\n\"Robert, I thought we understood each other.\" My eyes narrowed with my unspoken threat. \n\nHe cleared his throat. \"Obviously we'll be pursuing the correct charge. I'm waiting to hear back about a court date.\"\n\n\"Have you seen Landon?\"\n\nRob gulped down his coffee and shook his head. He picked up a file and read it, ignoring me. Unfortunately for him, I could be a big pain in the ass when I wanted to be.\n\n\"I can't believe he hasn't contacted you.\"\n\nRobert looked up from the file with exasperation. \"He left me a message but I haven't gotten back to him yet, okay? God.\"\n\nThe rest of the day passed without incident. I texted Felicity a few times and she responded, assuring me everything had stayed the same. She even added that the doctor was saying Rose might come out of it in a few days. \n\nOlivia texted me saying she'd meet me at my place and we'd go to the restaurant together. I went home with a bit of a buzz, not completely aware of the world around me. In fact, I found myself surprised when I was back in my apartment building. It had been a wild day.\n\nWhen I got to my floor, I spotted Olivia leaning against my apartment door. It occurred to me how silly it was she didn't have a key, yet, and made a mental note to give her a copy. She grinned when I headed towards her, and then reached for me when I was close enough to touch. I felt an intense, invisible tug towards her. Her smile dimmed, and my own thrilled excitement shifted into quiet but forceful desire.\n\nShe licked her pink lips. My body grew hotter when her arms wrapped around my waist and her hands clutched my ass. \"How are you doing?\"\n\nI took a deep breath. \"Honestly? I have a headache. And all of this feels like a dream.\"\n\nOlivia stroked my side. The tickling sensation increased my pulse. \"What does, Elizabeth?\"\n\n\"You. Felicity and Rose. Rose surviving. Dan finally being punished. Me losing my job.\"\n\nShe blinked. \"So, your whole life, you mean? And you lost your job?\"\n\n\"No, but it's only a matter of time. I can't focus on my work anymore and I've completely lost respect for Roger.\"\n\n\"Quit.\" Olivia drew me tighter against her soft, comforting curves. \"You can do anything you want to.\"\n\n\"I'm afraid,\" I said in a small voice. \"I don't know where to start.\"\n\nShe smiled, tracing my lips with her fingers. \"Let's start with feeding your dog. Then we can go to dinner. Afterwards I'll eat you out all night until you are relaxed. Maybe I'll even draw you.\"\n\nMy pussy was ready for her even then. I could see her nipples pressing against the fabric of her dress and imagined she was feeling the same. I zipped up her coat, giggling a little at her puzzled and somewhat affronted expression.\n\n\"You know your nipples are my Achilles heel.\" Her smile returned and I gave her a quick peck. She was grinning when I pulled away. \"Plus, stop calling Toronto my dog. He's your dog, too.\"\n\nHer stare became intense and she lifted her hands up to my breasts. I couldn't feel much through my coat, but it didn't matter. \n\n\"I can't wait to have my tongue inside of you.\"\n\nMy eyes closed. \"Step one: feed Toronto.\"\n\nWe did all of the little tasks we needed to do. We got to the restaurant around 9 and were thankfully placed in an intimate corner. \n\nOnce we ordered and had wine in front of us, Olivia began speaking. \"Tell me about Rose. And Felicity. She must be crazy with worry.\"\n\n\"I still don't know exactly what happened and I didn't want to pry yet, but he shot her in the stomach. That's probably one of the worst places to be shot, but luckily it wasn't very deep. It hit her at a weird angle or something. Then she somehow got a head wound. It was enough damage for them to induce a coma.\"\n\nOlivia took a big drink of wine. \"But she's okay?\"\n\n\"They think so. It's going to be tough, I think.\"\n\n\"And he's in jail?\"\n\nI nodded. \"He'll appear before the judge sometime in the next few days. Robert is being purposely vague, the little shit.\"\n\nOlivia ran her finger around the rim of her glass, something she always did when she was thinking. \"Unbelievable. I always think back to the first night I met you. He was your date. I remember spotting him with you and thinking... Well, I'm not sure what I thought. It was baffling to me someone like you would spend time with him.\"\n\nI smirked. \"I'll never get why you were so interested in me right away. You always say it was because of the painting but I don't believe you.\"\n\nShe looked down at her hands. It was always an interesting sight to see Olivia nervous. \"You never asked me who our mutual friend was.\"\n\n\"What?\"\n\nHer eyes flicked up to mine. \"Our mutual friend,\" she repeated. \"How did you think I got your address? To send you the painting?\"\n\nMy face scrunched up with confusion. \"What are you talking about?\" I tried to remember, and did recall her sending me the painting but...Yes. I remembered the note. \"No, I didn't. I forgot about it. Who was it?\"\n\n\"A man. William Donovan? He worked with you once, he said.\"\n\n\"Oh, Jesus.\" He was an ex-boyfriend of mine. I'd dumped him because he always whined about my hours. He was great, better to me than he probably should have been, but I didn't think either of us believed we were meant to be together. He was a writer so it made sense he was part of her crowd. \"He did. And we dated.\"",
        "Olivia gave me a shy grin. \"Yes. I know. He caught me staring at you. I told you I kept studying people's responses to it. It was my best work, in my opinion. It amused me this little uptight lawyer was staring with a bit of understanding. I didn't know you were a lawyer yet, of course.\"\n\n\"But you knew I was uptight.\" I tried not to be insulted but it stung a little.\n\nOlivia shrugged. \"Wasn't I right?\" She swallowed the rest of her wine. \"William saw you and mentioned you were an ex-girlfriend. Told me what you did. He laughed at me, telling me I was absolutely crazy to send you the painting. To 'woo' you, I think he put it. He gave me your address anyway. I wanted to see what was under your modest dress. I wanted to muss up your hair. I wanted to make you forget about meetings and have you constantly frazzled. When I went over to talk to you, I wanted to kiss you even more. There was depth to you and I felt an instant attraction.\" She signaled to the waitress for another glass of wine. \"So there you have it. I was in love with you almost right away.\"\n\nI took her hand. Her anxious eyes met mine, only relaxing when she saw my calm smile. I kissed her palm, and then just to be a bitch about the \"uptight\" statement, I gave it a little lick. She gasped and I drew back laughing.\n\n\"Not so uptight anymore, right?\"\n\n\"That depends. Are you going to introduce me to your parents?\"\n\nFear rolled through my stomach. She stared at me, waiting for me to unfreeze and answer.\n\nIt was a terrifying prospect. While I doubted my parents would start stoning us, I was quite sure they would be extremely upset. It would take them a long time to get used to the idea. \n\nBut there was no going back. We met during a crazy time in my life. There was a lot of pressure on me, and with someone else it might not have worked. In fact, I doubt anyone would have been able to bear all of that misery with me. \n\nIt didn't matter what our sex was, or that she was older, or that I'd never really enjoy her friends' parties and she'd never understand why I couldn't wave a magic wand and make everything right in the world. We loved each other. \n\nMy lips curved into a toothy grin. \"Absolutely. I'll call Mom and set something up for this weekend. What do you think?\"\n\nOlivia choked on her piece of bread.\n\nOOOOOO\n\nWe were both buzzed when we got home. The headiness of being around each other without the dark cloud of anxiety and uncertainty, mixed with the few rounds drinks we had, made us giggly and immature. We took turns smacking the other's ass as we climbed the stairs, chasing the other and nearly falling down every time our heels twisted. \n\nToronto barely looked up when we came bursting inside the apartment, tearing off each other's clothes.\n\n\"I brought something special for us tonight,\" Olivia breathed. \n\nI ripped her bra off and immediately bent my head to suck one of her breasts. Her entire body was beautiful to me, but the sight of her round breasts with those hard berry nipples drove me wild. Her hands flew up to my head, pushing me closer to her chest.\n\nEventually she sighed and stepped away. \"Take the rest of your clothes off and sit on the couch.\"\n\nA flare of excitement rose from the tips of my toes all the way to the top of my head. I pushed off my underwear and hopped on the couch. I watched Olivia slowly pull her panties off, bending over so I could see the delicious plumpness of her ass and the barest hint of her pussy below. She spun around and dug into her purse. She pulled out a long dildo with dramatic flair, grinning at me. \n\n\"What the hell is that?\" \n\n\"A dildo, darling. Duh.\"\n\n\"What do you\u2014\"\n\n\"Shut up.\" She straddled me. \"It's double-sided. We can fuck each other at the same time with it.\" She took the head of it and pushed it through my slippery lips. She stroked me like that for a few speechless minutes, nudging the head against my clit every now and then. I was humping my hips upward, desperate for more. Olivia merely smiled. \n\n\"Please,\" I heard myself beg. \n\nShe adjusted it so that it began vibrating. With a lusty moan, she plunged it inside of me. I tossed my head back, feeling incredibly tight but so wet at the same time. She pushed and pushed until it was deep. \n\nEverything on my body was insanely sensitive. She ran her fingers up my sides that prickled with goosebumps. Then she touched my breasts.\n\n\"Olivia,\" I sighed.\n\nHer eyes moved to meet mine but she didn't answer. Her thumbs occasionally brushed against my nipples. Then she dropped one hand down between us, sliding it against my clit before grasping the dildo and thrusting it inside of me slowly but deeply. It vibrated against my walls; already I thought I might come. Her mouth swallowed one of my tits after a little bit and I nearly cried. My mouth was open in a silent scream, begging her with my wandering hands to give me more. My hand went to her ass and then twisted around her hips to play with her soaked pussy. She gasped into my nipple which sent a tremor of pleasure down my spine.\n\nAfter a few minutes she sat up straight and quickly dropped down onto the other side of the dildo. She screamed when she felt it pulsating inside her. I looked down at the image of us completely touching while we fucked ourselves with the vibrating plastic cock. \n\n\"I'm going to come,\" I moaned. \"Now.\"\n\nOlivia sped up which also drove the dildo inside of me more quickly. It was absolutely maddening to hover over that precipice, knowing that you're about to orgasm any minute, craving and dreading that unbearable pleasure. \n\nI looked up at Olivia. Her eyes were shut, her mouth hung open and her long hair clung to her body with sweat. I hugged her around her waist, bringing her closer to me so that our breasts touched. Olivia's eyes opened and I knew it was time. She gave me a sloppy, searching kiss that instantly made all the sensations sharper. \n\nI exploded, feeling my wetness coat the plastic cock and even my couch. Everything felt drenched. It was so divinely dirty.\n\nOlivia apparently wasn't far behind. She kept fucking the dildo, which in turn kept fucking me. The vibrations were almost too much. My orgasm was fading so I focused on getting Olivia off. I squeezed her breasts, pinched her nipples and nibbled her throat. One hand circled her clit, which was finally the last straw.\n\nShe orgasmed with unbelievable force, clenching my shoulders and riding the dildo as hard as she could.\n\nThen it was over. She moved off of me, carefully taking the dildo out, and switched it off. She sucked the side that had been inside of me, never taking her eyes off of me. Seeing her pink lips around the head, knowing she was tasting me, was so fucking erotic that I thought I might be able to come again.\n\nOlivia smiled as if she knew what I was thinking. She clutched my sweaty thigh and leaned over to kiss me. When she pulled away, she touched my face. \n\n\"No,\" she panted, \"you're not so uptight anymore.\"\n\nChapter IX: Your Honor\n\nI felt a bit giddy the next morning. Jacqueline spotted me coming into the office and rushed over to chat with me.\n\nWe talked a little about Felicity and Rose. She asked if I had any update, but I hadn't heard from Felicity since the night before. \n\nThen Jackie smiled wickedly at me. \"Someone got laid last night.\"\n\n\"You know,\" I began, pouring milk into my coffee, \"I always hated that expression.\"\n\n\"Whatever.\" She rolled her eyes. \"Things are good with the artist?\"\n\nI couldn't help the blissful smile that spread across my face. Jackie rolled her eyes but she smiled, too.\n\nRobert came into the kitchen, his gaze moving over us. \"Before you ask, Elizabeth, there's nothing fucking new.\"\n\nI knew he could go with a few options, particular Attempted Murder or Assault. The first would carry a term of no less than fifteen years, so it would probably be fifteen years to life. The other was trickier. He could get as little as 5 years, or possibly 25. \n\n\"You have no court date? No plan?\"\n\nHe put a donut in his mouth with a roll of his eyes and walked out. I followed. \n\nRoger stood talking with Landon Fontaine. My body tightened. Robert pulled the donut out of his mouth and greeted him, shaking his hand. I felt sick.\n\nLandon caught sight of me and gave me one of his asshole smiles. \"Liz. How are you, sweetheart? It's been ages.\"\n\nIt really hadn't been. Fucker. I fought the urge to curl my lips. \"Fine. Yourself?\"\n\n\"Oh, I've had better days. Very unfortunate, what's happened to your friend.\"\n\n\"Let's move to my office,\" Roger cut in. He didn't bother to glance at me, but Robert gave me a smug look. \n\nThey were in there for forever. I gnawed at my nails, unable to even pretend like I was working. The three of them eventually came out, laughing with each other. I overheard them talking about lunch. The might as well have been smoking cigars and palming their crotches.\n\nI couldn't stop myself. I jumped over and approached them. \"What's the plan of action to keep him off the street?\"\n\nRoger shook his head, Robert stared at me and Landon watched with slight amusement. \n\n\"That's none of your business at this time, Ms. Quilty,\" Roger said. Robert wasn't able to stifle his snort. \n\n\"I feel terrible for how this turned out,\" Landon said with his practiced politeness. His eyes peered at me with what I'd almost think was genuine sympathy if I didn't know him better. \"No one wanted things to work out like this.\"\n\nI looked at Roger. \"What are you charging him with?\"\n\n\"Jesus, she doesn't stop,\" Rob groaned. He shakes his head when I look at him. \"We're filing for Aggravated Assault and are considering a plea agreement with Mr. Fontaine due to problems with Mr. Tierney's medications. He has been sick for a while now and we're suspecting the medication issues contributed to his violence. Happy now?\"\n\nMy mouth dropped. I looked from Roger to Robert. \"That can't possibly be the best you can do. You're factoring in his medication... What, did you make a plea for insanity? This is fucking insanity. He isn't crazy, you asshole.\"\n\nRoger took an imposing step towards me. \"I think we will have to continue this discussion when I come back from lunch.\"\n\nThere was a heavy silence. All of the work I'd done, the years I put in under Roger, the respect I'd had for him...and yet now we were strangers. He was a little man in my eyes. That I ever idolized him ashamed me, and made me feel terribly for my father. They'd once been good friends. I dreaded telling Dad that Roger had lost his decency somewhere along the lines, if he'd ever been respectable. \n\nThis wasn't just about him being an asshole. It wasn't even just about Rose and Felicity anymore. This had become incredibly personal. Dan Tierney had messed up my life, too. He threatened me, terrified me, hurt people who had become important to me. To see these people whose job it was to seek vengeance so cavalierly dismiss our suffering made me nearly blind with rage. \n\n\"That won't be necessary,\" I said. I swallowed and straightened my spine. \"I'm resigning.\"\n\nI began walking away, ignoring all the eyes on me, but then I paused. It was petty, but it was the only weapon I had. And I felt like doing something petty, even if it would only take the edge off for a little bit.\n\nI looked back and met Roger's eyes. \"By the way, Roger. Something you should know that's been eating at me. Robert fucked your wife. Almost all of us know about it. Thought you might like to know, sir.\"\n\nI didn't bother waiting for his reaction. Instead I went to my desk and gathered a few of my personal things. I stalked out of the office, tying desperately not to cry.\n\nOOOOOO\n\nOlivia ran the soaked cloth up my back. \"Are you sure you have to go back there for another two weeks?\"\n\n\"No. It might be easier to say he fired me. He was going to, anyway.\"\n\n\"Will you tell them\u2014Felicity\u2014about the deal?\"\n\nThe thought killed me. \"I don't know. No.\"\n\nShe kissed the corner of my mouth. Then she went on, bathing me as she knelt beside the tub. She ran the washcloth against my nipples. I felt a detached sort of arousal. I asked her to join me a few times but she kept saying she wanted it to be about me.\n\n\"I went to visit Rose today.\"\n\nI gathered my knees to my chest and rested my chin on top. \"You did?\"\n\n\"Felicity says it might take longer to revive her than anticipated. She was fighting with one of the nurses when I got there. I invited her over here but she doesn't leave Rose's side.\" She massaged my back.\n\nMy eyes shut. \"Hmm.\"\n\n\"I love you, Elizabeth.\"\n\nI opened my eyes and looked at Olivia. Her eyes were dark and filled with tenderness. \"I love you, too.\"\n\nOOOOOO\n\nIt snowed that Saturday. The stoop to my parents' apartment was very icy. I took Olivia's hand and gingerly helped her up the steps. I rang their bell and smiled when I caught Olivia plucking the skirt of her dress nervously.\n\nThe door buzzed and I opened it, letting her walk inside first. I never saw her so nervous before. She'd left her long dark hair down and she had gone easy on the makeup. I told her she looked the prettiest I'd ever seen her. She tried to smile.\n\nWe were quiet on the elevator\u2014she didn't want to hear any more of my assurances that my parents would love her because she didn't believe me and she said I was getting annoying\u2014but I took her hand and squeezed.\n\nI'd already told my parents I was bringing a woman with me. It had been an interesting conversation with my mother.\n\n\"You're telling me over the phone?\"\n\nI felt bad. \"Yes. I'm sorry. I didn't really think.\"\n\n\"No, you didn't. Are you sure this isn't just a phase?\"\n\n\"No,\" I'd said firmly. \"Why is it that when guys turn gay, it's like, 'Oh, he's definitely gay' but when a girl says she's a lesbian people are like, 'It's just a phase!'\" \n\n\"I don't know, Elizabeth, and I certainly didn't mean it in an anti-feminism way so spare me. I barely hear from you, hardly see you in months, and you call me to tell me you have a girlfriend. I apologize I'm not reacting the way you wanted me to. I never knew my daughter was a lesbian so give me a fucking break.\"\n\nThen I'd felt really shitty. \"I'm sorry, Mom. I just didn't know what to do. But I know that I really want you to meet her.\"\n\nSo lunch was set up. I figured my mother told my dad, so that would be interesting. Also, in a morbid and selfish way, I wanted to take my mind off Dan Tierney pacing his jail cell and Rose Sherman lying in bed with a machine breathing for her.\n\nI still didn't know if the deal between Robert and Landon was officially struck. Jackie couldn't tell me one way or the other because of course she went on fucking vacation that week.\n\nMom was standing outside their apartment, holding open the door. She put on a brave smile when she saw us step off the elevator. One arm waved us forward while the other held the door open. \n\nOlivia nodded and smiled. \"It's nice to meet you, Mrs. Quilty.\"\n\n\"Call me Anne,\" Mom said automatically. She tried to hold on to the bright smile she must've practiced, but it began to slip. \"Please come in.\"\n\nMom didn't look at me.\n\nWe walked inside and there was my father. He held a bottle of wine in his hands. \n\n\"Hello. I'm Matt.\"\n\n\"Hello,\" Olivia whispered. Her palm was sweating.\n\n\"Wine?\" Dad asked.\n\nI cleared my throat. \"Please.\"\n\nMom silently brought out some appetizers and sat down. Everyone took a seat. The clock in the room ticked as we desperately tried to think of something to say.\n\nDad shifted so that he could get a better look at Olivia. \"I googled you. I must say I love your work. I'm not really much of an art guy but I liked it.\"\n\nOlivia held on to her wine glass so tightly I feared it might break. \"Thank you.\"\n\n\"Olivia and I met at one of her shows,\" I said, trying to hide my discomfort and probably failing.\n\nMom and Dad looked at me for the first time. \n\n\"I loved one of her paintings and we started talking. She's very inspiring.\"\n\nMom looked away and sipped her wine. Dad cleared his throat and ventured into what he thought was a safe topic. \n\n\"How's work, Lizzie?\" \n\nShit. My heart pounded. \"I quit. Or was fired. Depends on who you talk to. I was contacted yesterday that I'm getting a package, so whatever.\"\n\nDad had to put his glass down. Mom's head spun in my direction, her eyes wide and horrified.\n\n\"What the hell is going on?\" Dad demanded to know.\n\n\"It's a long story.\"\n\nDad's eyebrows lifted in that frightening way that used to scare the crap out of me as a kid. It still did.\n\n\"I was in charge of a stalking case. The guy was represented by Landon Fontaine, so there was my first problem.\" Dad rolled his eyes. He knew Landon pretty well, too. \"A few minor errors were made, but just enough that Roger could take me off the case. I became friends with the girl\u2014Rose\u2014 and her partner. Roger and Robert weren't happy about it. And the guy ended up almost killing Rose, who is still in a coma. He's only getting charged with Aggravated Assault, the lesser charge.\" I looked down at the carpet because I was a little embarrassed over what I'd done next. \"Roger acted so fucking superior and shitty that I couldn't take it anymore and I told him his wife cheated on him with Robert.\"\n\nMom gasped. Dad's stare melted through my flesh and bone. \n\n\"Roger hadn't wanted me on the case, I don't think. I believe there was a little favoritism going on. And I had the potential to be a pain in the ass over it. He underestimated my friendship with Rose. And her girlfriend, Felicity.\"\n\nNow Dad's eyes bulged. Mom looked like she might faint.\n\n\"You just happened to be working with a lesbian couple?\"\n\nI shrugged. \"Yeah, weird, right? I take it as a sign.\"\n\nMom put down her wine glass. \"God, I'm friends with Roger's wife. How will I ever face her again?\"\n\n\"She's the one who slept with vermin, Mom, not you.\"\n\nMom stood up. \"We can't all be so righteous, Elizabeth.\" Then she burst into tears.\n\nMy dad got up and gathered her close. I looked over at Olivia who appeared to be near tears, too. This wasn't going well.\n\n\"Maybe we should go,\" I said. \n\nMom pulled away from Dad and rubbed her eyes, smearing mascara all over. \"No. I made duck, damn it.\"\n\nShe rushed to the kitchen and started slamming pots and pans around. \n\nDad settled down and gazed at Olivia. \"I apologize for all of this. We haven't had time to acclimate. And Lizzie called Anne on the phone, from what I've heard, to...explain this. My wife doesn't deal well with such surprises.\"\n\n\"I completely understand,\" Olivia said in a hushed voice.\n\nI felt terrible. Nothing seemed to be going right for me. Olivia took her hand out of my grasp. If she was pissed at me, too, then I would have to give up.\n\nMom came out, still crying. \"Lunch is fucking served.\"\n\nLunch passed as you might've expected it would pass. No one spoke. No one even bothered to try starting a conversation. We were content with our discontentment; talking would only make it worse. That fucking clock continued ticking in the distance, each mark of another silent second driving me closer to losing my temper. \n\nMom mostly drank, ignoring the generous amount of food Dad had put on her plate. Olivia kept her eyes down, staring at the duck as if it held all of life's answers. \n\nI had enough.\n\n\"I'm sorry that none of this is going like you've planned.\"\n\nMom looked up and wiped her eyes.\n\n\"Maybe we should come back another day.\"\n\nMom's body relaxed for the first time since we'd arrived. \"No, don't go,\" Mom sighed, blowing her nose. \"It's just... such a big step for me. But please don't leave.\"\n\n\"I think we should. I don't want to keep upsetting you.\" I took Olivia's hand under the table. \"Olivia wanted to meet you guys, and I wanted you to meet her, but I don't want to push you if you're not ready. That wouldn't be right.\"\n\nMom glanced at Olivia. \"I'm sorry. It's just that Elizabeth wasn't answering her cell for the longest time and\u2014\"",
        "\"She's a pain in the ass,\" Olivia cut in, squeezing my hand. I recognized that little amused glint in her eyes and stopped holding my breath. \"I know all about it. But this was a big step for her, too.\"\n\nMy parents looked at each other. They shared some unspoken understanding and then faced us again.\n\n\"So why don't you tell us how you met again?\" Mom asked, clearing her throat. \n\nOOOOOO\n\nI helped Mom clean the dishes. We didn't talk to each other, though there was a great deal we wanted to say. Mom snuck peeks at me now and then. I tried to think of a way to say \"Sorry I came out to you on the phone, and sorry I basically avoided you for months\" but it wasn't as easy as one would expect.\n\nFinally Mom turned the faucet off and turned to me. \"You look happy.\"\n\n\"I do?\"\n\nMom nodded and smiled a little. \"I can see why you like her.\"\n\nI fidgeted and picked at my nail polish. \"I love her.\"\n\n\"I know.\" Mom looked out into the living room, grinning when she saw my father going off about politics to poor Olivia. \"She's a great woman.\"\n\n\"I'm sorry for how I handled all this.\" \n\nMom sniffed and gave me a hug. \"I don't think there's a rule book, Liz.\"\n\nI couldn't believe my mother was being so understanding. It shouldn't have been surprising, though; she'd loved me fiercely all my life, no matter what I did. It really was just the issue of getting used to it.\n\nWhen she pulled away, she wiped at some more tears. I found myself crying, too. I rubbed my face with annoyance. \"God, I keep crying lately. Everything changed all at once. Sometimes I can't catch my breath.\"\n\n\"You will. For now, just try to enjoy yourself. Let yourself off the hook.\" She peeked out at Olivia once again and gave me a wide smile. \"She's good for you. I can tell. You're glowing.\"\n\nMy hands went up to cover my cheeks. \"Really?\"\n\n\"Yes, really.\" Mom shook her head and poured the coffee. \"Now shut up and help me bring these out.\"\n\nLater when we were leaving, my mother kissed Olivia on the cheek and made her promise to come around more often. Dad seemed to really like her, too.\n\nHe pulled me aside before we left. \"Are you sure it wasn't all a misunderstanding with Roger?\"\n\nI hated this. It felt like I was telling a kid Santa didn't exist. But my father wasn't a child, and he needed to know. \"I'm sure. I've never been so disappointed in someone in my whole life.\"\n\nDad gave me a hug, which was a bit unusual for him. \"You'll find another job. A better job.\"\n\n\"I know.\"\n\nHe pulled away and pushed my hair back. \"I'm glad you're seeing someone, Lizzie. Especially someone as intelligent and kind as Olivia. Your mom and I will try really hard to get used it, okay? We already see how different you are with her.\"\n\nI smiled. \"Thank you, Dad.\"\n\nOOOOOO\n\nOlivia didn't say much when we got home. She asked if I wanted her to cook or if I wanted to order out. When I said I didn't care, she called for a pizza and pet Toronto. \n\nAfter we'd eaten and Toronto was taken care of, the three of us spread out on the couch and watched TV. I must've been falling asleep because Olivia poked me. We turned off everything and curled into one another when we got into bed.\n\nI was nearly asleep when Olivia spoke.\n\n\"Your parents were wonderful. They love you very much.\"\n\nMy eyes fluttered open. Olivia leant on her elbow, watching me from above. \n\n\"They liked you. I can tell.\"\n\nOlivia smiled, her teeth glinting in the faint light through the curtains. We listened to traffic for a few minutes. One of Olivia's hands rubbed my stomach.\n\n\"I can't believe this is happening.\"\n\nOlivia didn't take her eyes away from the hand that now tickled the skin just above my panties. \"What is happening?\"\n\n\"We're really a couple. You know what I mean? We're not just...experimenting, or even just dating, are we?\"\n\nShe bent her head to lay a gentle kiss on my shoulder. \"No.\"\n\nHer fingers slipped in and out of the top of my panties until they eventually rested just beneath the fabric. \n\nI reached up carefully, terrified for no reason at all, and stroked her hair. Her eyes met mine. \"I'm so glad I met you. I didn't know it then, but I needed you. Badly.\"\n\nOlivia smiled. \"I needed you, too.\"\n\nHer hand lowered, sinking between my thighs.\n\nChapter X: The Verdict\n\nFelicity called the next morning.\n\nShe was already on my mind. The next day was the hearing\u2014Jackie texted me to remind me\u2014and I was torn about going. Obviously I wouldn't go into the courtroom, but even hanging around in the hallways seemed uncomfortable. I didn't want to run into Robert, Roger or Landon. And I hated the idea of being in any kind of proximity to Dan.\n\nI wanted to call Felicity and see if she wanted to go. Clearly Rose couldn't. But I was procrastinating, partly because I was so tired of dealing with heavy stuff and mostly because I wasn't sure if I should tell her about Robert's decision and the disappointing amount of time Dan could potentially serve. \n\nI craved a little domesticity, so I lazed around with Toronto while Olivia painted. I didn't understand how she could possibly be comfortable painting in my cramped living room but what the fuck did I know? Craigslist ads for jobs were glaring me back in the face. That's just when my phone vibrated. I recognized the number and answered immediately.\n\n\"Rose is out of the coma!\" she wept.\n\nMy heart jumped with excitement. \"How wonderful!\"\n\nFelicity took a deep, excited breath. \"She's very out of it and still on a lot of drugs but she's looking around and talking and everything. The cops were here. Even that douche Robert was here.\"\n\nGoosebumps rose up from my arms. \"Robert?\"\n\n\"Yup. He's an asshole. He was fine to us, though, just telling us about where we all go from here.\"\n\n\"He...he told you about the charges? The sentence?\"\n\nShe sighed. \"Yes. Don't get me started. I'm NOT happy about it, but I have too much to be happy about right now to let it affect me.\"\n\n\"I know. I just\u2014\"\n\n\"Elizabeth? Stop worrying. What's done is done. 5 years is nothing when you look at the damage he's caused, but it is something. I'm raging about it, too, but right now we have more important things to do. And he says they're still deliberating Landon's plea deal so there is still hope. So come see us, bring Olivia, and buy the best champagne you can.\"\n\nI found myself smiling. \"When did you get so zen?\"\n\nShe snorted. \"See you soon.\"\n\nI told Olivia the good news. She cried and clapped her hands. Then we got ready, bought a classy enough bottle of champagne and took a cab to the hospital.\n\nRose's parents were waiting outside when we came to the door. I introduced Olivia and they were very polite. Felicity saw we were there and dragged us in, ripping the bottle of champagne from my hands.\n\nAnd there was Rose. She was so, so pale resting against white sheets. Her cheekbones pressed against the skin of her face so hard as if they wanted to escape. Her lips were cracked and her arms were merely white sticks poking out from beneath her pink blanket. Part of her face was bandaged, presumably where he struck her, and her face was nearly unrecognizable because of other wounds.\n\nSimmering, hot rage bubbled in my stomach once again after seeing what Dan did. \n\n\"Elizabeth and Olivia! I'm so glad you're here.\"\n\nI got close to her and took her cold hand into mine. \"We are happy to be here.\"\n\nFelicity handed me a plastic cup with champagne. We toasted to Rose's health. The conversation turned to surgeries, of which Felicity surprisingly knew a great deal. Even Olivia was fascinated. I daydreamed until I realized Rose was staring at me.\n\n\"Felicity told me,\" she whispered. \n\nMy heart sank. I didn't have to ask what. \"I'm so sorry.\"\n\n\"Even if he's only given 5, we'll figure it out.\" She nodded to herself as if she was attempting to convince herself. Her head fell back against the pillow; she looked unbelievably exhausted. \n\n\"Let's not worry about that yet. He's going to get what he deserves somehow.\"\n\nHer lips twitched into a tiny smile. \"You're so fierce sometimes.\" I smiled and she took my hand again. \"I love you. For everything you've done.\"\n\nI was too choked up to respond.\n\nThe nurse came in at some point, looking less than thrilled over how many people were crowding the room. She checked Rose out while we all watched in silence. When she finished with a smile, we could all breathe again.\n\nI noticed that Rose's parents actually talked to Felicity and seemed to be a lot more accepting to her now than before, based on what the girls used to tell me. Her parents seemed worn out. They had never believed Dan was as big a threat as Rose said. It must've been a rude, rude awakening for them when they received that terrible phone call in the middle of the night-that call all parents dread.\n\nA few minutes later I glanced at Rose. She'd fallen asleep. Some color had touched her cheeks, thank God, so she finally looked alive and semi-well to me. I checked the monitors from time to time, sometimes becoming entranced with her pulse. Sadly Rose looked like shit. I knew the prognosis was good but it was difficult to remember that, at some point, she'd be walking out of the hospital on her own two legs. \n\nThe sentence Dan Tierney would likely receive was unjust and dangerous. To think he could possibly serve a mere 5 years was disturbing and disheartening. Yet both girls\u2014Rose and Felicity\u2014loved each other and became even stronger because of their feelings. They were still scared, and still angry, but they'd already faced the worst thing that could happen and they'd emerged on the other side. They would always be haunted, but now they absolutely knew they could handle it because they had each other. It was time to rebuild.\n\nOlivia touched my shoulder. \"Shall we go?\" she whispered.\n\nI got up and said goodbye to everyone gently. Felicity grasped my hand and gave me a teary smile.\n\n\"You probably didn't get a chance to talk to her long, but isn't it wonderful?\"\n\n\"Better than wonderful. Any news on what they plan to do with her next?\"\n\n\"The stomach is the most important thing. They don't want to tear anything because the risk of bleeding is so high. Her head is still banged up but the doctors think it's okay.\"\n\nI nodded. I almost wasn't going to say anything but I turned to get one last look at Rose. The sight of her provoked me. \"Tomorrow is the sentencing hearing. Would you like to go? We'll linger outside.\"\n\nFelicity sucked in her breath. \"Oh, my God. I have to go into work for a little tomorrow... What time is it?\"\n\n\"10am.\"\n\nShe looked around, her gaze skittering over Rose like mine had a second before. \"I'll be there.\"\n\nOOOOOO\n\nIt was absolutely freezing outside the courthouse. We could've waited inside but Felicity was indulging in one of her guilty pleasures: smoking.\n\n\"I can't believe how cold it is,\" she said. She lit another cigarette.\n\n\"And Spring is around the corner,\" I mumbled. I pulled the collar of my coat up and tilted my head back, studying the slate-colored sky. \n\nFelicity flicked some ash off the tip of her cigarette. \"Jeez. I heard it's supposed to snow tonight.\"\n\nI knew what we were doing\u2014idle, trivial chitchat to pass the time and make the wait (somewhat) bearable. It wasn't going well, at least not for me. I wanted to pace the slick floors of the halls, I wanted to hear the faint voices coming from the courtroom inside, I wanted to be near the action. No, it wasn't any better or productive than standing outside in the cold, but that didn't matter.\n\nI waved away some of the smoke from the cigarette with a frown.\n\nShe switched her cigarette from one gloved hand to the other. \"You really disapprove of smoking, don't you?\"\n\n\"I disapprove of anything that kills people, yeah. Olivia does it sometimes when she thinks I don't notice and it makes me furious. I have her on another nicotine patch now, actually.\"\n\nShe smiled. \"I sneak sometimes, too. It's a powerful urge. Funny how puffing on something can be so comforting. I read something some time... Something about the mouth? The repetitive nature? And the nicotine, yeah, but not everyone who's smoked has become addicted, right?\"\n\nI rubbed my hands together. \"Well, I certainly can't begrudge you for smoking today, so whatever.\" I watched her for a minute. \"It's flirting with death. I think that's a big compulsion, too.\"\n\nFelicity studied me as she dropped the cigarette and twisted her foot on top of it. \"You're antsy. You want to go inside, don't you?\"\n\n\"Yes.\"\n\nFelicity groaned and rolled her eyes. \"God, fine! You're a huge pain in the ass. Let's go.\"\n\nI followed, a small smile forming. We sat on a bench outside and waited. And waited. Felicity toyed with her phone. I stared the doors, willing them to open. It didn't usually take that long.\n\nAnd then they did. A surprising flood of people came outside, talking enthusiastically. Robert was suddenly there, clutching his suitcase with a grim expression. He caught sight of me almost immediately. His face grew darker but he said nothing. He walked by without another look. Then I saw Jake, one of the other attorneys that didn't get as much of a chance to show his talents. I wondered what he was doing there. \n\nLandon strolled out, a huge smile on his face. That never meant anything one way or another; Landon was the best at the art of positive spin. He spotted me sitting next to Felicity; his eyes roamed over us, probing for secrets. \n\nHe walked over and for some reason I stood up. I wanted to immediately ask what the sentence was but I didn't want to get the information from Landon. Petty, sure, but I couldn't help it.\n\nHe started speaking as soon as I was in earshot. \"I never had the chance to tell you how much I appreciated you sticking up to Roger. The man has deserved something like that for a long, long time.\"\n\nI rubbed my palms against my skirt and tried not to freak out or punch him. \"What do you want, Landon?\"\n\nHis smile turned sweeter. Friendlier. He looked around my body and said hello to Felicity.\n\n\"And how is your friend? I apologize\u2014I haven't been able to check her condition lately.\"\n\n\"She's my GIRLFRIEND,\" Felicity spat. \"And she's still fucking alive. Be sure to pass that on to your client.\"\n\nLandon stood straighter, seemingly unaffected by Felicity. \"Well, I know you've never thought highly of me, Ms. Quilty, though I've never been sure why. I represent the opposite team, that's true, but I've always respected your work.\"\n\nI regarded him with intense suspicion. \n\nHe licked his lips and carefully ran a hand over his blonde hair. \"As for your earlier question, I don't want anything from you. I'm offering you something.\" He smiled when he saw me scowl. \"I mean it. I've always appreciated your approach and understanding of the law. There is a place for you within my firm. I would be absolutely honored if you'd consider working with me for a while.\"\n\n\"No.\"\n\nHis eyebrows lifted but I didn't think he was that surprised. \"So quick an answer. My well-meaning offer isn't even worth a moment of thought?\"\n\n\"Give me a break, Landon.\"\n\nHe grinned. \"You see right through me, Elizabeth. I think that's why I like you so much.\" He put his leather briefcase on the bench next to Felicity so he could put his coat on. His eyes never left mine. \"He's serving fifteen years without the chance of parole. Does that warm you up a little?\"\n\nFelicity failed to stifle a gasp. I couldn't move. \"Fifteen?\"\n\n\"Not the twenty-five you were hoping, I'm sure, but you must be pleased.\"\n\n\"They didn't take the plea,\" I whispered. The relief poured through my blood like a cup of fine, smooth red wine.\n\n\"No. The case was handed over to Jake, who I've only worked with a few times, by the way. Robert came today as a formality. The judge almost didn't let them switch but eventually he caved. Maybe he, too, was tired of Robert.\"\n\nI realized I was smiling and crying all at once. It should have embarrassed me to be crying in front of Landon but I just didn't care. My legs gave out, forcing me to plop beside a sobbing Felicity. \n\nLandon smirked down at me.\n\n\"You just like seeing girls cry,\" I said.\n\n\"Possibly,\" he agreed with a laugh, straightening his tie. \"The offer is serious, however. Keep it in mind. I'd enjoy having a scrappy girl like you on my side.\"\n\nHe picked up his briefcase and disappeared.\n\nFelicity pushed my shoulder. \"Did he really say what I think he did? Fifteen years?\"\n\nFor the first time in a long time, my grin was wide and genuine. \"Yes!\"\n\n\"I might pass out,\" she whispered. Our eyes met and we started giggling like giddy little girls.\n\nI could breathe. We all could.\n\nWe walked out of the courthouse feeling warm vindication. I wouldn't have spotted her if Felicity hadn't stopped us for one last cigarette\u2014\"Just to celebrate! Then I'm done, I swear. Don't tell Rose.\"\n\nI stuffed my hands into my pockets and watched the chaos of people walking each way, yellow taxis riding the tails of cars in front of them, people trying to sell shitty knock-off purses. I smelled hot pretzels cooking from the corner and my mouth-watered. I turned to Felicity to suggest we grab one and there she was. \n\nMrs. Tierney sat on a sad little bench beneath a sad little tree that had been planted there and likely forgotten. Her wool coat was that awful muted pink color from the 50s and 60s\u2014like calamine lotion. She even had a matching hat. Her old-fashioned purse sat on her lap. I wasn't close enough to see her face, but the slump of her shoulders told me everything I needed to know.\n\n\"I'll be right back,\" I told Felicity.\n\nI crept over. The area felt suffocating; someone had only bothered to shovel just slightly around the bench so that to the side lay only snow. The front was also only a few feet from another mound of dirty snow.\n\nShe looked up when she heard my heels. Her worn face was shivering while tears dripped rapidly from her eyes. She didn't bother to wipe them away. Her lips were slightly parted as if she had something to say, but they only quivered. \n\n\"Mrs. Tierney. I can't even think how hard this must be on you. I'm sorry.\"\n\nShe looked down at her brown gloves. \"I gave birth to him. Bathed him and clothed him. Sang songs and read books to him. Sent him to school. Stood up for him when his dad was mean. Loved him.\" Her eyes lifted, shining with tears. \"Tell me how I'm supposed to stop that.\"\n\nMy breath caught. \"I can't.\"\n\n\"No.\" She rose and slipped an errant button back through its hole. \"No, you can't. No one can.\" She looked away from me. \"How is the girl?\"\n\n\"They think she's going to be okay.\"\n\nShe exhaled. I watched the puff of her breath in the air until it stopped swirling, wishing there was something I could fucking say.\n\n\"Good. I'm glad. I've been trying to follow reports about it in the paper but... I sent her flowers this morning. I hope that won't offend her.\"\n\n\"I doubt it will. I'm sure she'll be thankful.\"\n\nShe looked at me with a bitter smile. \"Thankful? I brought her a nightmare.\"\n\n\"You couldn't have\u2014\"\n\n\"I could've said something. Done something.\" She clutched her purse tighter and shrugged. \"I tried my best. The rest is up to God. It's a test of some kind, or at least that's what I keep telling myself. I know that I'll be on that bus next visiting day. I know I'll bring him his favorite chocolate. I know I'll do this until the day I die.\"\n\nShe walked away from me without a second look.\n\nOOOOOO\n\nA week later Olivia and I were singing \"Happy Birthday\" to my father. Mom teased him to blow out the candles which he did with an enthusiastic flourish. \n\nAfter Mom cut the cake and handed it to us, she steered Olivia over to the corner and talked about different galas coming up. Dad gave me a look and then grinned.\n\n\"Come here, I want to get a good look at my daughter.\" \n\n\"Oh, no. No more beers for you.\"",
        "Still, he beckoned with his finger. I came around the table and sat next to him. For a long time he just stared at me. \n\n\"I always knew you'd be all right.\"\n\nI burst out laughing. \"What are you talking about?\"\n\nHe'd definitely had one too many beers, but he was still somewhat rational. \n\n\"You. My brave girl. You always go after you want. You're fearless.\"\n\n\"I'm afraid all the time.\"\n\n\"Hmm.\" Dad smiled. \"Doesn't matter. You do things us simple folk don't even imagine doing. You told Roger to go fuck himself, essentially. You handled Fontaine like you were his age, his equal in experience. Do you know what a big deal that is?\" I opened my mouth to say something but he went on. \"And her?\" He tilted his head in Olivia's direction. \"You couldn't have made a better choice. I'm proud of you most of all because of that\u2014because you weren't afraid, or too afraid, to be with who you wanted.\"\n\n\"Thanks, Dad.\" I didn't know what else to say.\n\nHe waved his hand as if he hadn't said one of the most important things he'd ever said to me. \"You're lucky. I have no doubt you'll find a job soon.\"\n\n\"I have a job interview Monday afternoon.\"\n\nDad patted my back. \"Good, good.\" He looked over at my mother and back at me. \"Hey, do me a favor. When everything settles, don't stop checking in with us. It hurts your mother. She misses you. I miss you, too.\"\n\n\"I promise.\"\n\nAn hour or two later Olivia and I were putting our coats on. My mom kept flinging food at me to take home, which I loathed doing on the subway. Olivia graciously took it after a few minutes, giving me a dirty look.\n\nThe ride home took forever. It was beginning to get warmer outside, making the inside of the subway hot and uncomfortable. And extra smelly. I was so stuffed from dinner that the unpleasant and immediate stench of burnt trash nearly made me puke.\n\nFinally we were in my apartment, fighting off licks from an affectionate Toronto. Olivia wordlessly handed me his leash and we went out for a walk, watching different people stroll pass. I peered into closed stores and opened restaurants. Another dog out for a walk barked at Toronto, trying to start a fight. My handsome sweetheart just kept on walking.\n\nMmm, it was good to be home. It was blissful peace and relaxation. \n\nI thought over and over again how odd it was to be pleased by such a simple thing: a walk with my girlfriend and dog. Yet there was a warmth in my chest I held onto.\n\nWhen we were back upstairs, we undressed in the bedroom with only the dim lamp illuminating us. Olivia shimmied out of her jeans. I unbuttoned my blouse.\n\nHome.\n\n\"When is Rose getting released?\"\n\nI pushed my panties down. \"Without any other complications, the end of his week.\"\n\nOlivia nodded, pulling off her bra. \"Good. Felicity must be going mad.\"\n\n\"Yes. She actually wants to go visit Dan. She says it's for closure but I doubt it.\"\n\nOlivia looked up at me sharply. \"Dear Lord, she'd bring a gun or something.\"\n\n\"I talked her out of it.\"\n\nOlivia, now naked, spread herself across the bed. She watched me slip my bra off my shoulders. I reached for my lotion and rubbed it into my skin, partly because moisturizing was part of my nightly ritual and partly because I knew she loved to see me do it.\n\nShe patted the bed beside her. \"Come.\"\n\nI got on the bed and kissed her. She tasted faintly of chocolate cake.\n\nWhen I pulled away, she ran a hand through my hair and pulled it over my shoulder. She gazed at my breasts for a long time before she teasingly reached out and moved her hands over them. \n\n\"I want you to move in with me,\" she said after a minute.\n\nI looked up at her, trying to come out of the fog. \"What?\"\n\n\"I like your apartment better but it isn't conducive for working, so I'll have to keep my own space for that. So I suppose in a way I'm asking to move in with you.\"\n\nAfter the first few minutes of shock, I gave it some thought. She practically lived with me now, as it was. And I'd learned so much. I learned that I loved an amazing person who magically loved me back. I knew that I witnessed, sadly through the misfortune of others, how important it was to stick with and by what you want. It would have been easy for Felicity to walk away when things got scary. But she stayed. The women made it through because of their love for the other, and they never let fear or second thoughts get in the way. And Olivia had stayed through everything, too. She loved me. I loved her. It really was a no-brainer.\n\n\"Okay,\" I whispered.\n\nOlivia's eyes widened. \"Are you sure?\"\n\nI nodded. \"Yes. If you can seriously handle giving away that brownstone.\"\n\nOlivia laughed, bringing her arms around me to tug me close. \n\nWe had sex that night, but it was different from all the times before. I wouldn't say it was hotter, and I wouldn't say some clich\u00e9 like the change was because we'd found peace and harmony. I personally felt it was sweeter and more precious because we were still learning one another's bodies, that we hadn't taken the recent events for granted and that the feelings we had for each other strengthened every time we gave a little piece of ourselves to the other.\n\nI fell asleep before her. I was usually a deep sleeper but something roused me in the middle of the night. The lamp was on and Olivia wasn't beside me. Then I heard something, something like pencil on paper. I looked at the bottom of the bed and found Olivia there, sitting on a chair cross-legged while she sketched me. \n\nShe didn't react when I sat up. I wanted to ask her how long she'd been up drawing me, why she felt the need to do it at 3:30 in the morning, but there was a stillness in the room that made me silent. \n\nI crawled to the edge of the bed. Delicately I reached for the sketchbook. \n\nIt was me, but not me. It couldn't really be. I never looked so tranquil and happy before. It made me look years younger. And she had me so graceful on paper, though that part had to be completely false. I knew for a fact I was a sprawling, drooling mess when I slept. And yet she painted me like this because she was looking through her own lens, and this was how she saw me. \n\nI flushed. The corners of her mouth gently tipped up. She took the book back and went on drawing.\n\n\"What are you going to call it?\" I asked, my voice scratchy and loud in contrast with the silence of the room. I laughed breathlessly when she didn't answer. \"Afterglow Part Two?\"\n\nOlivia smiled but kept her eyes on the drawing. \"No, honey. I haven't decided yet. For the moment, it's just 'Untitled'.\"\n\n\"I like that,\" I said a few minutes later. \"It gives you more to work with. You don't know what you might want to add.\"\n\nOlivia stared at me with sparkling eyes. \"Exactly.\"\n\nMy eyes drank the sight of her in\u2014her dark body beneath an overgrown white t-shirt, blue and lacy see-through panties, glittering dark eyes, glossy black hair hanging down her body.\n\n\"Come back to bed?\"\n\nShe put down the sketchbook and climbed back in under the covers. Her arm wrapped around my body and her hand folded into mine.\n\nAnd I thought: Home."
    ],
    "authorname": "GirlintheMoon",
    "tags": [
        "lesbian",
        "lawyer",
        "stalking",
        "crime",
        "vibrator",
        "dildo",
        "friends",
        "family",
        "love",
        "romance"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/afterglow-pt-05"
}