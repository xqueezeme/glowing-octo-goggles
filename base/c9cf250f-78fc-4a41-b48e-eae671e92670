{
    "title": "Tequila Shuffle",
    "pages": [
        "Something a little less intense and a little more lighthearted than the usual. Thanks to blackrandi for the invite. Thanks to blackrandi, sbrooks103x, Bebop03, stev2244 and the ever-so-lovely Nora for the beta reads and editing. This would be unreadable without all of them. There are others who prefer not to be named; you know who you are and you know you are appreciated.\n\n*****\n\nFuck me to tears.\n\nEven my goddamn hair hurt.\n\nMy skin was a thousand pinpricks of sharp pain.\n\nI tried to open one eye, but the painful brilliance of a supernova pierced through my brain, slamming into the back of my skull with all the delicacy of a semi-truck.\n\nWith a load of steel girders. And plate glass.\n\nDriven by Ted Nugent. A really pissed off Ted Nugent.\n\nProbably a drunk Ted Nugent.\n\nThere was a horrible screeching sound slowly building, kind of like cat nails on an endless chalkboard.\n\nSweet Jesus save me. Or Buddha... or Shiva... or anyone out there...\n\nCthulhu? Anyone?\n\nI felt myself heave and retch, but there was obviously nothing left in me to come out anymore.\n\nThe horrific screeching was slowly coalescing into something... well, if it wasn't coherent at least it was recognizable as a human voice.\n\nI forced my eyes open against the pain and unsuccessfully tried to understand the blurry form looming over me.\n\nI crushed my eyes shut, then tried again. A pair of feet came into focus in the dry white dust in front of me: Barbie pink toenail polish and a pair of open-toed slippers that seemed to be made mostly of pink cotton candy.\n\nOkay, a woman's feet. Well, maybe. Leonard, over in Trailer Six, sometimes liked to feel pretty when he'd been drinking, but this probably wasn't him. The feet were too small by half, lacked toe fungus, and the well-formed legs attached to them were missing both his many moles and his full thigh tattoo of Rick Astley.\n\nThe banshee voice started making sense, after a fashion. I couldn't fully understand it because it was Spanish, and what little Spanish I'd learned from Sesame Street in my delicate formative years did not include most of whatever was being said. I had picked up a larger vocabulary lately, but, hell, I'd have had trouble following English at that blurring speed. It was probably best that way, because if I was a hearing things correctly, the last sentence that blurred by had included the words for \"thirty-two donkeys\" and \"your whore of a grandmother.\" I was guessing that probably wasn't an invitation to a Tupperware party. Unless Tupperware parties had really changed since my Mom had one when I was a kid.\n\nConcentrating, I realized I had to be laying on my side and probably in the trailer park. The dull white gravel dust was pretty unmistakable.\n\nAt least I was near home. Such as it was.\n\nI pushed myself to sit and immediately began dry heaving from a combination of nausea and a headache that had to be among the greatest manmade disasters in history. \n\nThe screeching snapped off and those two delicate feet jumped back out of immediate splash range with a yelp. \n\nMy nausea subsided and I looked up, only to realize that shit had actually managed to get worse.\n\nRosa Rafaela Rodriguez.\n\nShe was glaring angrily at me from behind her oversize pink frame sunglasses, clutching her nearly transparent pink robe closed with one hand, while pointing accusingly at me with the other.\n\nHer Chihuahua stood, practically vibrating with fury just behind her, clearly poised to tear my throat out on command. \n\nMost everyone in the trailer park avoided Rosa. Leonard described her as \"The angriest woman on the planet.\"\n\nI'd been avoiding her like a religion since I had first bumped into her at the mailboxes and she'd reacted to my friendly greeting as if I'd attempted to kidnap her. In addition to handfuls of court notices for fees I didn't have the money for, lawyers bills I couldn't pay, a reminder to pay my parole supervision fees, and final notices from utilities -- some of which I wasn't even sure I'd ever had -- I got both barrels from her. After realizing there was no possible way to break even, I'd just turned and walked away from her, which sent her spiraling to new heights of righteous fury. \n\nI still enjoyed the hell out of watching her whenever she was outside. She never seemed to wear anything other than that near-transparent pink robe, probably to just drive every guy in the trailer park crazy. Still, her exhibitionist streak occasionally brightened my otherwise bleak existence in our mostly abandoned trailer park. \n\nShe drew herself up to her full height of probably five feet and launched into me again. Ignoring her, I struggled to my feet, wavering a bit as I pushed some kind of umbrella off of me. \n\nShe stopped suddenly, looked me over with a growing expression of disgust and finally lapsed into English. \"What the fuck is wrong with you?\"\n\nI looked down and realized I was standing in the rosebushes surrounding her trailer, which explained those pinpoints of agony.\n\nMore disconcerting, I was also naked... and apparently painted green, white, and red. This was just getting better and better.\n\nThere had to be another half- dozen-people standing in a loose amused semi-circle behind my tormentor. Leonard, happily sober, or at least sober enough to be wearing overalls instead of a peignoir, was standing behind her. Also behind her, were Maisie, who vaguely resembled a much larger Danny DeVito in drag, along with Delbert and Tawny, who were wearing matching sweat suits and had five o'clock shadows. \n\nAll of them were staring at me. \n\nI snatched up the umbrella to shield myself, which sent the Chihuahua into a frenzy of spins and hysterical wheezing barks. \n\nMaybe because the \"umbrella\" was actually a comically oversized brightly colored straw sombrero. \n\n\"Asshole! You scared my little Liam!\" Rosa reached down and snatched up the little dog.\n\nI shook my head to clear it, regretting that instantly. \"Fuck, that hurt. Wait...Liam? Who names a Chihuahua 'Liam' for fuck's sake?\"\n\n\"She likes Liam Hemsworth, 'cause she thinks he's hot.\" Maisie volunteered the information, nodding and fanning herself dramatically with her hand, making her calico housecoat flap and wobble disturbingly. \"I like that Chris Hemsworth myself, but I wouldn't kick Liam out of bed for eatin' cookies, if you know what I mean.\" She stopped for a second and gave a gap-toothed grin. \"They're pretty close though, maybe it'd best to test drive them. Maybe at the same time.\"\n\nSomewhere out there, I was sure both Liam and Chris Hemsworth shuddered and cringed in sudden fear. For their sanity's sake, I hoped they would never have a clue why.\n\nRosa's sudden shriek of outrage wasn't really completely in human hearing range, but I cringed from the sound anyway, expecting the glass to shatter out of all the trailer windows.\n\nThat'd suck because that Alex kid who used to do all the maintenance had disappeared a while ago. He'd mostly played video games and whined about how boring his life was, but he could at least fix windows.\n\nI was pretty sure if she hadn't had the sunglasses on, I would have seen the whites all the way around her eyes as she leveled an accusing finger at me. \"You think that's funny?\" \n\n\"God, no.\" I blinked. \"And I'm pretty damn sure Chris and Liam would be horrified by it.\"\n\nMaisie gave me a sharp \"huff\" and folded her arms over a chest the size of a pro linebacker's.\n\n\"That's not what I meant you...\" Rosa launched into another diatribe in Spanish. Probably, I judged, not a history of the Spanish-speaking peoples of North America. Unless there is some kind of historical theme involving my grandmother and thirty-two donkeys. It could be, though it seems unlikely.\n\nI couldn't follow Spanish well enough to really understand what she was saying. Besides, it was starting to sound like she might be repeating herself. To be honest, her robe had fallen open when she picked up \"Liam,\" so I wasn't really absorbed in whatever it was she was saying anyway. \n\nShe wasn't wearing a stitch under her slightly too small robe, and the Chihuahua was rapidly becoming my favorite dog ever by wildly pawing at her and pulling her robe even further open.\n\nRosa was not only built with curves like Monaco Grand Prix, she was also very well-groomed. Into a very pretty little heart shape.\n\nShe caught herself, glanced down, then back up, looking me dead in the eye. \"Asshole.\"\n\n\"Hey, I...\"\n\n\"What are you, a third-grader? Never seen a naked woman before?\"\n\nI was really getting tired of her attitude. \"Not very many built like you and I really love the heart.\" \n\nThat seemed to take her off her stride and she snatched her robe closed, much to my disappointment. I kept the sombrero in place. \n\nShe glanced down at the crown of the sombrero and I was sorely tempted to drop it to teach her a lesson, but I really didn't want to give Maisie any ideas. \n\nIt probably wouldn't have actually fallen anyway; Rosa really was hot as hell.\n\nShe realized I'd caught her looking and shifted uncomfortably. \"You need to clean your vomit out of my rosebushes, Asshole.\"\n\nI looked down at the ground around me again. It looked like an entire squad of Marines had lost their dinner in her prize roses. Fuck it, I probably owed her to clean it up, but I was really tired of her bullshit. \"I'll get to it this afternoon.\" \n\nRosa cocked her head in disbelief. \"Yeah, right.\"\n\nI shrugged. \"What can I say, you stole my heart. Just, you know, keep it next to yours to keep it warm.\" I nodded pointedly to where the hot dry wind was blowing the bottom of her robe open again.\n\nShe tried to get her robe closed but managed to pop one luscious brown nipple loose as she got that delicate, lovely heart covered again. She finally looked up at me. \"What?\"\n\n\"Nothing. I'm just staying until the show is over.\"\n\nShe gave a frustrated growl of annoyance. Or maybe that was the Chihuahua. Then she raged off, the friendly Santa Anna wind blowing the robe up to expose a perfectly delightful bare butt as she rounded the corner of her trailer and stormed back in. \n\nI stood there for a moment as most of the rest drifted off, leaving only Leonard, Maisie and me there.\n\n\"That's quite a woman,\" Leonard muttered, scratching himself through the unbuttoned side opening of his overalls, exposing a band of delicate red lace across his hip. \"Sop that up with a biscuit.\"\n\nMaisie rolled her eyes at Leonard. \"For God's sake, Leonard. She's half your age.\"\n\nHe grinned luridly. \"Yeah, she is.\"\n\n\"Pervert.\" \n\n\"Yep.\" Leonard nodded agreeably, still looking where Rosa had disappeared.\n\n\"Hey, Maisie?\" I followed his gaze, but Rosa didn't come back out.\n\n\"Joseph?\" \n\n\"Please tell me it's Sunday.\" \n\n\"It's Sunday.\"\n\n\"Then I'm not late for work.\"\n\nShe shook her head and looked over at me, puzzled. \"What does \"Mex-i-cano Hon-or-ario\" mean anyway?\n\n\"Honorary Mexican...\" I looked down and could just make out letters written in black across my chest. \"Son-of-a-bitch, I'm gonna kill Miguel.\" \n\nDragging myself over to my trailer, I retrieved my key from under the lone flowerpot in front of my trailer. It wasn't a very good hiding place, but I had fuck-all that anyone would want to steal, anyway. My living room furniture ensemble consisted of two folding lawn chairs, a thrift shop radio that sometimes worked and a milk crate for an end table. I pulled on a clean-ish pair of shorts, then lugged several buckets of water over to Rosa's garden. I figured asking to use her hydrant would probably have started another storm, and I wasn't ready for that. \n\nI spent the rest of the day, fighting my hangover with drawn curtains, four or five gallons of water and enough Tylenol to wonder if I was going to wake up alive on Monday. \n\nHell with it, not waking up again would probably be a step up from where I was.\n\nI set the alarm on my dollar store watch and went to sleep.\n\n*****\n\nI dragged my ass to the open gate long before the goddamn sun rose and watched Miguel grind the beater former school bus to a reluctant halt.\n\n\"Heyyyyy Jos\u00e9!\" He was grinning from ear to ear. \n\n\"It's Joseph. You fucking asshole.\" \n\nHe grinned like a hyena. \"It's Jos\u00e9 now, we made you an honorary Mexican, remember?\"\n\n\"Yeah, I saw the label, asshole. You didn't have to use a permanent marker. I don't remember much, but the way I felt yesterday, I think the ceremony involved replacing all my blood with tequila.\"\n\nHe nodded solemnly. \"And Mezcal.\"\n\n\"You asshole. You didn't even get me home.\"\n\n\"Hey, you said you were fine. We dropped you off at the gate.\"\n\n\"You took the word of a naked drunk man?\"\n\n\"You weren't naked. You had a sombrero.\" He seemed very pleased with himself.\n\nI glared at him as I sat down in the seat behind him. \"I came to in Rosa fucking Rodriguez's...\"\n\n\"You nailed her? Holy shit. You're lucky you survived, she's hot as ...\"\n\n\"Shut the fuck up Miguel. I woke up in her fucking rose garden.\"\n\n\"Is that a metaphor? Tell me that's a metaphor, 'cause I bet her rose garden is amazing.\" He shook his head and chuckled as we pulled away. \"I'd love to be her gardener. Except she's my cousin and she has that whole \"pissed at all men and would probably kill you the next morning\" shit going on.\"\n\n\"It's not a fucking metaphor, dickhead. She has roses growing around her trailer. And I threw up all over them.\"\n\n\"Lucky you alive man. She got a crazy-ass hot temper. Her ex-husband was fucking around on her with her sister-in-law. She beat the hell out of both of them. She's dangerous.\"\n\n\"That's kind of my point, Miguel. Why the fuck you do that to me?\"\n\n\"Hey, it's a position of honor. You're the first gringo crew boss we've had who doesn't act like we gonna steal everything in sight.\"\n\n\"Jesus, Miguel. We're harvesting fucking tomatoes. What the fuck are you gonna steal?\"\n\n\"It's pronounced 'Hey Zeus' now that you're a Mexican. And he's sleeping in the back. We like that you got common sense. That shit ain't very common, you know?\" \n\nI might have been the designated crew boss, but Miguel ran everything; I just stayed out of the way and mostly just-picked tomatoes with everybody else.\n\n\"You know, you could always be the crew boss.\"\n\n\"No way. I need you to take the blame in case one of these assholes steals something.\" He repeated that in Spanish to the rest of the crew on the bus. They roared with laughter all the way to the fields. \n\nWe weren't even three hours into the fourteen-hour day when the Fish showed up.\n\n\"Well, Joseph. Here we are. Just checking in on your sorry ass. Making sure you made it to work.\" My parole officer smiled at me. The repulsive grouper-like features that gave PO Hennan his nickname twisted in a grotesque parody of human emotion. \n\n\"Yeah, well, I'm here.\" \n\n\"Another miracle Joseph. It won't last. You know what the difference between a parolee and an inmate is?\" He didn't wait for me to answer. \"It's just one little fuck up. And you're a great big fuck up, so it's just a matter of time.\"\n\n\"I'm meeting my parole conditions. I'm working, I'm clean, and I'm not involved in shit.\"\n\n\"You've had three jobs before this one. Six months and three jobs. Now you're working with a bunch of wetbacks.\" He looked over at Miguel, who just looked back at him blankly, like he didn't understand a word of English. \"Can't get any lower than this; you'll never make another eighteen months.\"\n\nI glared at him. \"I lost those jobs because you fucked them up for me.\"\n\n\"They needed to know what kind of loser they'd hired.\" He looked around and gave a nasty sneer. \"Speaking of clean, I think it's about time to test again.\" He looked at this watch. \"You have two hours to get to the test center and piss in a bottle.\"\n\n\"Seriously? I don't have a car and the test center almost two hours away, as is.\"\n\n\"You know the deal. You don't make it or you fail it, you're back inside, shithead.\" He gave a low, sawing chuckle and headed for his car.\n\n\"Fuck.\"\n\nMiguel walked up beside me and we watched him roll away.\n\n\"You sure you're not really Mexican, Jos\u00e9?\"\n\n\"Pretty damn sure, unless Mom was banging the gardener.\"\n\n\"You might wanna ask, you know? Just to be sure?\"\n\n\"Why?\"\n\n\"Cause that man really wants to put you on the other side of a fuckin' wall.\" He stared after Fish's car as it faded into the distance leaving a trail of dust.\n\n\"Jesus.\"\n\n\"You're pronouncing it wrong again. Remember you're Mexican now. And he's in field three.\" He looked back and waved one of his guys forward. \"Don't worry about getting to the test center, my cousin, Alejandro here, has a bus license, he'll get you there and back. I don't have the time to break in a new crew boss.\"\n\nWe made it to the test center with a good 15 minutes to spare. I had to pry my hands from the edges of the seat, since I didn't know you could actually drift turn a bus. In heavy traffic. \n\nOn the way back, Alejandro was pretty chatty, which was great except that he couldn't speak English. My Spanish was still limited to mostly counting to ten, naming the colors and an assortment of obscenities I'd picked up over the last couple of months, so there really wasn't much overlap.\n\nWhen we broke for dinner, Miguel sat down next to me. \"Saturday night you started to tell me how you ended up here. But you passed out before you could tell me how a big shot stockbroker ends up picking tomatoes.\"\n\nI shrugged. \"Not that much to tell. I got caught up in an SEC investigation into the firm. I didn't think it had anything to do with me, so I wasn't worried. I showed up, was told to go home and was locked out for the duration of the investigation. Turns out there was an account under a fake name doing a lot of insider trading. It was closed two days before the SEC latched on to us and the money went somewhere offshore. I didn't do it. Hell, I didn't even know about the account, much less that I'd been given access to it; there were maybe six or seven of us that had access, but I got blamed. They didn't have the evidence to prove I did it, at least not enough to take to trial, but they pulled my Series 7 license to trade.\"\n\n\"You ended up in jail though?\"\n\n\"Yeah. While they were investigating, they searched my car and found enough cocaine to hand me off to the local police and charge me with possession with intent to distribute. It wasn't mine, but I couldn't prove it. And a clean piss test isn't really helpful if they bust you for dealing. They were trying to use it as leverage to get me to tell them where the missing money was; I guess it was a lot even by our standards, tens of millions maybe? But I didn't know anything about it, so I didn't have anything to trade. Got three years. It was supposed to be in prison, but you know how overcrowding is here. Ended up in county and only had to do six months before parole. First-time non-violent offender.\" \n\n\"You sure you didn't take the money? If you got millions of dollars, I got a cousin...?\" Miguel raised an eyebrow in mock interest.\n\n\"If I had millions of dollars, you think I'd still be around here? Fuck, Mexico's just two hours away.\"\n\nHe shrugged. \"So where'd the drugs come from?\"\n\n\"For a while, I was sure they'd been planted, but you get paranoid when everything goes to shit all at once like that, you know? Really, though, I picked up high-end clients from the airport all the time. Gotta give them the personal touch, you know? Some of those trust fund babies and celebs couldn't make it all the way to the hotel without taking a hit. One of them could've left his shit in my car and never even remembered it.\" \n\n\"Bad luck.\" Miguel mused.\n\n\"Once that shit starts rolling, it doesn't stop. Everything fell apart. My wife was humiliated; she kind of stuck with me until I was sentenced but dropped divorce papers on me as soon as I was in prison; stripped our accounts, savings, and CDs. The way it all came apart and how rough the trial was, I wasn't really even surprised. The whole thing put so much stress on everything. She didn't want to talk about it, she just wanted it over.\"",
        "\"What a bitch.\"\n\nI shrugged. I wasn't totally numb to it, but I'd apparently fried enough brain cells with cheap tequila over the last several months to take the edge off it. Time, distance and alcohol. \"She works for the same company, but over in corporate headquarters downtown. Honestly, she's lucky she didn't get fired just for being married to me. That job means a lot to her, she's busted her ass at it for years and losing it would really mess her up. I couldn't expect her to stay anchored to my sorry ass and end up living out of a cardboard refrigerator box.\"\n\nHe shook his head. \"True love conquers all, huh?\"\n\n\"True love doesn't pay the bills.\"\n\n\"So what were you pulling down?\"\n\n\"The two of us with bonuses? Almost half of a million a year, most of the time. Sometimes more.\"\n\n\"Now you're barely over minimum wage. She took all that money?\"\n\n\"Well, it wasn't as much as you'd think. We thought we had all the time in the world; we were spending it damn near as fast as we made it. Vacations in Bali, Cabo and the Seychelles, skiing in Aspen, jewelry, thousand dollar a bottle cognac. Lawyers for my defense. But yeah, she disappeared everything we had left when she dropped the papers on me.\" \n\n\"Couldn't you find it?\"\n\n\"She's an accountant so she was pretty thorough. They're pretty damn good at hiding money, too. It'd take money, time and lawyers to dig that shit out, and I didn't have any of those. When I get my feet under me, maybe I can get it looked into and sue for my share.\" \n\nHe shook his head sadly. \"I've seen your paycheck; it's gonna be a long time.\"\n\n*****\n\nAgainst my better judgment, I let Miguel talk me into going to another bar when Saturday evening rolled around. \"You need to get out Jos\u00e9, have some fun.\"\n\n\"Like last week? I had so much fun I only remember wishing I could just die on Sunday.\" Even as I argued against it, I climbed into the back seat; eight guys could fit in the ancient brown Bonneville as long as nobody worried about seatbelts.\n\n\"We're going to a different place this time. Someplace more fun.\"\n\n\"I thought you said that was your favorite bar?\"\n\nHe grimaced. \"They didn't really appreciate us enough.\"\n\n\"Did we get thrown out?\"\n\nHe frowned and held his hands up. \"Maybe.\" \n\n\"Didn't you say your cousin owned that place.\"\n\n\"He's a distant cousin.\" He shrugged and shifted to a brilliant grin. \"Besides this club has dancing.\"\n\nWhen he pulled his beater car to a halt in the parking lot and I unfolded myself out of it, I gave him a sidelong glance. \"A salsa club? Isn't that Cuban?\"\n\n\"This place is loaded with very hot chicks wearing very little clothes. I'd come here if it was a waltz club.\" He squinted at me. \"You do know how to dance, don't you?\"\n\n\"Yes. I can do the polka. And the waltz.\"\n\nThe shock on his face was priceless. \"Seriously?\"\n\n\"Yes. But I can also tango, foxtrot, salsa, jive, and a dozen other styles. Beth and I used to hit the dance clubs like it was a religion.\"\n\n\"Thank God. I thought we were fixing to get thrown out again.\"\n\nI laughed. \"I'll buy your first beer. Domestic.\"\n\n\"Yeah, I know, I've seen your paycheck.\"\n\nWe had an absolute blast. There were at least two huge bachelorette parties and three final divorce parties in the club, which made for well over a two to one ratio of women to men, and most of the women were already in the \"feeling no pain\" stage before we ever got there. \n\nI'd been dragged out onto the floor by two divorcees, a maid of honor, three bridesmaids and one mother of the bride\u2014who drunkenly copped a feel\u2014so fast I hadn't even managed to finish a drink. \n\nI finally managed to sit down, watching Miguel get dragged off to the floor by the voracious mother of the bride. \n\nHolding my Modelo Especial, I peered around the packed floor. More bare skin than a nudist colony. \n\nI settled my gaze on what Leonard would term a \"particularly full and toothsome behind,\" clad in skin-tight jeans. The woman was apparently talking with someone at a table, and was bent deeply over, leaning on her elbows, so she could hear them in the pandemonium. \n\nEvery damn time she shifted, I felt my heart\u2014among other things\u2014shift with her. Damn, that was one fine ass.\n\nI was still watching entranced when Miguel stumbled into the table and sat down next to me. \"You couldda warned me asshole.\"\n\n\"Yeah, she was a handful.\"\n\n\"That cougar got a handful! She got my zipper down. She mentioned she was divorced like six times.\" He paused and followed my gaze. \"Damn. That's some fine...\" He broke into silence as the woman straightened up and looked right at us.\n\nRosa's eyes narrowed and she started right for us. Miguel looked at me and held his hands up helplessly. \"Hey man, I just got here.\" \n\nHe made sure he said that loud enough for Rosa to hear as she marched toward us.\n\nShe must have since she came right up to me, ignoring Miguel. \"What do you think you're staring at, you fucking pervert?\"\n\nI was probably going to apologize. Probably. But just as I open my mouth, a giggling woman in a toy bridal veil half-fell into the table heavily, dragged by her maid of honor. I assumed it was her maid of honor because of the brilliant pink sash that read \"Maid of Honor.\" No waste of a college education here.\n\nThe maid of honor grabbed my arm and pulled. \"She needs to dance with five more guys!\" \n\nI was dragged to my feet and gestured helplessly to Rosa. \n\n\"I'll be back.\" \n\nThe bride was not as drunk as her bridesmaid, was obviously a little uncomfortable with the game and I did my best to be a gentleman. \n\nI didn't actually make it back to the table for three more dances, intercepted in turn by the other bride, the other maid of honor, and what turned out to be a very pretty trans who saved me from another round of defending myself from the cougar. At least the trans wasn't like dancing with a horny octopus.\n\nI was trying to work my way back to the table without falling into the clutches of the drunk and handsy mother of the bride when a hand grabbed mine, so I wearily stepped back onto the dance floor. \n\n\"Were you ever coming back to your table?\" Rosa glared at me as we started the dance, but it wasn't really bothering me all that much and for some reason, she didn't seem as pissed off as she had a few minutes ago. \n\n\"I tried, I had a cold beer back there, but it's probably warm by now.\"\n\n\"No, I drank it. I was waiting for you to come back and apologize.\"\n\nAny inclination I had to apologize disappeared. \"Bullshit. If you didn't want everyone to stare at your ass, you wouldn't paint those jeans on. And you damn sure knew what you were showing off bent over that way.\"\n\nRosa's lips tightened into a thin line and her eyes narrowed. \"That wasn't for your benefit, pervert.\"\n\nI shrugged. \"I didn't see a 'reserved' sign anywhere on it and I looked pretty close.\"\n\nI expected her to go ballistic, but she pursed her lips and shook her head, a small chuckle escaping. \"Miguel says you aren't as much of an asshole as I thought. He said that it was all his fault.\"\n\n\"They didn't actually tie me down and force me to drink.\" I paused, trying to remember. \"At least I don't think they did, but he could have not painted me up and dropped me off naked.\"\n\nShe smiled. \"I didn't expect you to actually come back and clean up the vomit.\"\n\n\"I wish you'd have told me that. Dragging those buckets around with that hangover was awful.\"\n\nAll in all, it was a pleasant dance with a very hot woman, and when the song finished, I figured we maybe had a pretty decent truce, at least for now. I watched her walk back to her table. The view certainly hadn't gotten worse. She glanced back at me, probably to make sure I was watching. Then she gave a slight shake of her head, a slight smile and mouthed the word \"pervert\" at me.\n\nI winked back and she rolled her eyes at me before sitting down at her table.\n\nMiguel looked me over for injuries. \"Looks like you got away alive.\"\n\n\"She's your cousin?\"\n\n\"Yeah. She's my second cousin.\"\n\n\"Well, thanks for putting in a good word for me.\"\n\n\"Kinda owed you that, man.\"\n\nI had to laugh at that. \"You kinda did, asshole.\n\n*****\n\nI managed to make a whole week without any kind of mayhem. That might have been a new record for me, at least lately. \n\nOne call to my PO, six solid days of work and no hangover on two Sundays in a row. The \"no hangover\" thing was remarkably pleasant and I was thinking of maybe trying to do that more often. \n\nFor me that almost qualified as \"life was good.\" \n\nSo, of course, it couldn't last.\n\nWe finished a field early, but not nearly early enough to get to the next block of fields, so we were heading back before sunset for a change. \n\n\"Hey, Jos\u00e9. Isn't that your parole officer? Over there, in that restaurant. With the blonde woman.\" \n\n\"Yeah, that's...\" I froze, unable to believe my eyes.\n\n\"What?\" Miguel pulled away from the stoplight, heading out.\n\n\"What the fuck? That's my ex-wife.\" I leaned back over the seat to get a better look. Beth's blouse was unbuttoned an awful lot for a friendly lunch. \"What the fuck is she doing with that asshole?\"\n\nMiguel glanced over at me, then went back to pushing the bus through the traffic for a second. \"Hold on.\"\n\nHe pulled to a stop and yelled in blistering fast Spanish to the back of the bus and a bearded guy stood up and pushed toward the front.\n\nMiguel popped the door and I started to get up.\n\n\"No, man, you say here.\"\n\n\"Jesus, I need to know what the fuck is going on.\" \n\nHe grinned. \"Exactly, but you're still pronouncing it wrong. This is Jesus and he knows what your parole office looks like.\" He shrugged. \"No promises, but we have a cousin who works here, maybe we'll get lucky and find out what's up.\" \n\nI wanted to say it was probably a coincidence, but what were the fucking odds of my high-octane ex-wife accidentally meeting my scumbag asshole parole officer? I sighed. \"Maybe she's checking up on me or something?\"\n\nMiguel looked at me with one eyebrow raised. \"Maybe. But... I dunno, man. Feels kinda fucked up.\" \n\nWe rolled out and Miguel glanced at me in the mirror. \"I'll come by your place tonight and let you know what Jesus finds out, okay.\"\n\nI nodded, a sick feeling spreading through my gut. \n\n*****\n\nJesus didn't find out much, but what he did find out was really unsettling. One of the waitresses was a cousin and she'd found them an odd enough couple to pay attention.\n\nBeth was all over Fish, and he was nervous as hell. She was doing her best to get him to do something that he was clearly uncomfortable with. She obviously wasn't above using seduction to do it. Jesus said if her blouse came unbuttoned any lower, she'd have had to start on her skirt.\n\n\"Maybe she wants him to go easy on me?\" That rang hollow as hell even as I said it.\n\n\"You can't be that stupid Jos\u00e9. Going easy on you wouldn't make him uncomfortable. The man's got child molesters and convicted murderers he treats fair. He's got a reputation for being pretty cool.\"\n\n\"How do you know that?\"\n\n\"There aren't that many POs who cover out here. I gotta cousin who...\"\n\nI waved him off. \"I have a really bad feeling about this.\"\n\nMiguel stared at my peeling linoleum tabletop for a second. \"You gonna look into it?\"\n\n\"Yeah, I'll just go ahead and pull a few grand out of my account and pay for a private eye.\" I shook my head. \"I can't afford that shit. Hell, I don't know if there even are private eyes anymore.\"\n\nHe suddenly grinned and looked up. \"You don't need to. I got a cousin who works in housekeeping at the condo she lives in.\"\n\n\"Jes..damn Miguel, how many cousins you got?\"\n\n\"How many do we need?\" We're everywhere and we're invisible.\"\n\n\"You don't need to do this.\"\n\nHe laughed. \"Nah, this is kinda cool. Play detective, you know? Besides, man, this is what friends do.\"\n\nWe headed over to a small house on the edge of the city where his cousin Isobel lived with her husband and four kids. \n\nThings were fine at first, she thought the whole thing sounded exciting and fun. Housekeeper-spy does have a pretty nice ring to it. It was fine right up until she asked if I had a picture of Beth.\n\nShe looked at the picture, looked closer, and rather suddenly Isobel seemed to forget English and began hissing rapid-fire Spanish at Miguel. The fact that she'd mentioned she'd been born in San Diego made that rather suspicious.\n\n\"Miguel. What the hell is going on?\"\n\nHe looked at me, pained. \"Uh, Jos\u00e9...\" he trailed off uncomfortably.\n\n\"Even I know what puta means Miguel.\"\n\nIsobel squared up. \"She's got a couple guys who visit all the time.\"\n\n\"We're divorced. I may not like it, but it's the way things work.\" I was lying. Even though my feelings had mellowed over the last few months, I hated it.\n\nIsobel looked at me stonily. \"You been divorced for four years?\"\n\nMy mouth went dry. \"What do you mean?\"\n\n\"I've been working there for four years and she's had this one guy coming over for the entire time.\"\n\nI felt oddly relieved for a second. \"That can't be her; I was home every night.\"\n\nShe breathed out almost silently. \"They come over at lunchtime. I'm sorry. I'm sure it's her. Skinny-ass bitch. Another guy started showing up, too. On different days. Maybe two years ago.\" \n\nMiguel pulled his cell phone out. He had a picture of Fish on it. \"This guy?\"\n\nShe shook her head. \"I don't know him. The newer guy is a big blond guy, maybe a weightlifter. The long-term guy is a kind of thin wiry guy with dark hair, acts jittery all the time.\"\n\n\"You gotta be fucking kidding me.\" I tried to sit down and ended up on my ass on the floor with the kitchen chair skittering away. \"That second guy sounds like Alan Voorhees. He works in accounting with her. Shit.\" \n\nIsobel looked at me sadly. \"You didn't suspect?\"\n\n\"How would I know? Her office is only about five minutes away from the condo. My office was almost forty minutes' drive in good traffic.\"\n\nMiguel reached over and grabbed my shoulder. \"You're not going to do something crazy, are you? You go after them, you break your parole.\"\n\nI shook my head slowly. \"Fuck. Go after them? My martial arts training consists entirely of walking into spider webs and going full kung fu theater. I could pay for maybe five minutes of a PI's time, and that wouldn't do any good anyway. Fucking around on me didn't break any laws and there ain't shit I can do about it now.\"\n\nMiguel shrugged. He knew I was right. \n\n*****\n\nI was expecting Fish to show up with more ridiculous demands, but he didn't and two weeks later I was starting to think it was all going to blow over.\n\nUntil Miguel got a cell call just as we were getting near the city limits on the way out. He abruptly cut across three lanes of traffic and broke land speed records back to the trailer park.\n\nInstead of stopping at the gate, he pulled up directly in front of my trailer. \n\nRosa, in her gloriously skimpy pink robe, was standing cross-armed in front of my trailer glaring hatefully at Fish. Leonard and Maisie were watching fascinated.\n\nI didn't even clear the steps off the bus before Rosa shifted her attention to me. \"Did you give this asshole permission to go into your trailer? He came in here as soon as the bus left.\"\n\n\"It's a fucking condition of parole.\" Fish glowered at her, then me. \"You have no expectation of privacy. You know that.\"\n\n\"Yeah, but it isn't an informal thing. In this state, you have to have reasonable suspicion. Otherwise, it's a harassment search.\" A bad feeling washed up my spine. \"And I read the terms. I can ask that you be accompanied by another law enforcement officer.\"\n\nHis lip twitched. \"That's for female parolees who want a female officer present.\"\n\n\"It doesn't say that, asshole. It just says I can have one.\" I decided to lob the one grenade I had. \"What did Beth say she wanted?\"\n\nHe blinked and his face washed grey. \"Fuck. I don't need this.\"\n\nHe turned and began walking back toward his car. I followed carefully. \"What the fuck is going on, Fish?\"\n\nHe opened the door and looked at me over his shoulder, he'd aged about fifty years in those twenty steps. \"How the fuck would I know?\" \n\nHe slammed the door and started the car. Then he seemed to think of something, rolled his window down and sighed the sigh of a very old man. \"My caseload is too damn heavy. I'm transferring you to Anderson as your PO. I don't want any part of this.\" \n\n\"Part of what, goddammit?\"\n\nHe flicked something out the window to my feet and stared at me steadily. \"Your ex-wife wants you back in the pen. Watch your fucking back. She's willing to do anything.\"\n\nHe drove off and I stared after him as Leonard walked up, reached down and picked up a package from the dirt at my feet.\n\nHe held it up and examined it. I noticed for the first time he was wearing one of Maisie's calico housecoats. A light blue one with little roses all over it. \"Oxy. In four bags. Probably twenty tabs. That'd be intent to distribute.\" \n\nBehind him, Miguel shook his head silently.\n\nI closed my eyes for a second. \"Fuck.\"\n\nRosa slid up beside me, a lot closer than I would have expected. I caught the scent of some kind of delicate tropical flower perfume. She watched his car disappear into the distance. \"He was going to plant that in your trailer.\" \n\nI nodded slowly. I wasn't even sure I could talk.\n\n\"You'd have gone back to prison.\"\n\nI nodded again. It'd have been to a real prison, too. I'd served my six months as a federal inmate in jail, but if I went back it'd be to a real prison with real prison gangs. Around here that meant mostly Nortenos and Surenos. I shivered.\n\nRosa reflexively grabbed my arm. \"Are you okay?\"\n\n\"Not really.\"\n\n\"Why does your ex want you in prison? You're not stalking her or something are you?\"\n\n\"I don't even have a car. Miguel pretty much drives me everywhere. How the hell would I stalk her?\" Somehow the fact that Rosa was still holding onto my arm seemed to help me focus. \"Something's going on, but I didn't get the script. We're divorced, she got everything and I haven't been anywhere near her.\" I took a deep breath and told her how we'd ended up divorced and I'd ended up on parole.\n\nRosa looked as puzzled as I felt. \"She tried to fuck that guy into putting you in prison?\"\n\n\"Seems like it.\"\n\n\"She must really hate you.\"\n\n\"I didn't do anything; she's the one who was fucking around, and I didn't even know that at the time.\"\n\nRosa's full lips twisted into a really attractive moue. \"You didn't have to do anything. She might blame you for what she did. Women, you know?\" Those big brown eyes locked on mine for a second. \"He was right, you need to watch your back. She hates you that much, she isn't stopping now.\"\n\nI suddenly felt exhausted. The idea that Beth might actually hate me was sickening. I looked over at Miguel. \"You have any cousins in the Bergman Towers? That's where Beth works.\"\n\nHe gave a grin. \"What can I say, man, we're everywhere. I'll also tell Isobel to get pictures of any visitors she gets at home.\"\n\nMaisie, disturbingly dressed in Leonard's overalls-and just Leonard's overalls-shaded her eyes peering the disappearing speck of Fish's car. \"Leonard and I will keep an eye on your trailer, but you might wanna install a latch with a padlock on it.\"\n\nI felt Rosa let go, and I turned to her. \"You called Miguel?\"\n\nShe nodded. \n\n\"You saved my ass.\" \n\nShe looked nervously uncertain for a second, then pasted on a confident smirk. \"You spend all your time watching my ass, I figured I could watch yours for a change.\"\n\nMiguel rolled his eyes. \"Yours is a helluva lot more interesting than his.\"\n\nRosa looked skyward for a moment. \"God, I hope so. If it isn't, I spend way too much time at the gym at work shaping this bad girl.\" She gave me a wink and slapped her butt, bouncing it intriguingly. \n\nI blinked, then dragged my eyes back up to hers. \"Where do you work anyway?\"",
        "\"Crestridge Medical Center. I'm an LPN. Pay isn't great, but the insurance is good, you know?\"\n\nI leaned back and pretended to study her ass. Okay, I really pretended to pretend. \"And it obviously has a really great gym.\"\n\nShe shot me a smug smile and gave a tiny wiggle. \"Damn right.\"\n\nMiguel looked over at the bus. \"We got a field of tomatoes waiting on us, Jos\u00e9.\"\n\nI nodded. \"Yeah. Thanks again, Rosa, I mean it, you saved me.\"\n\n\"I'm glad I could help. You let me know what's going on, okay?\" She turned and walked away toward her trailer, not bothering to clutch her robe to keep the playful Santa Anna winds from giving glimpses of that perfect butt. \n\n\"Wow,\" Maisie muttered, scratching herself through the unbuttoned side opening of the overalls, exposing a broad expanse of bare skin. \"Sop that up with a biscuit.\"\n\nLeonard rolled his eyes at Maisie. \"For God's sake, she's half your age.\"\n\nMaisie grinned luridly. \"Yeah, she is.\"\n\n\"Pervert.\" \n\n\"Yep.\" \n\n*****\n\nIt took Isobel six days to get pictures of both of Beth's regulars. We sat in her living room as she pulled them up. \n\nOne was Voorhees. I'd barely noticed him except as a worker drone in Beth's office. I'd certainly never pictured him as a guy I'd thought would be sneaking over and banging her in my bed when I was at work. \n\nThe other guy was a puzzle. I didn't know him; I'd never seen him at Beth's office or mine. Big blonde crewcut guy with a decent suit and a briefcase.\n\n\"Nothing?\" Miguel eyed me.\n\nI shook my head. \"Nothing.\" \n\n\"Maybe he works for your old company?\" Isobel was enjoying her role as a spy, I could tell. \n\n\"No, I've never seen him.\" I was certain.\n\n\"What about at your wife's office\" Isobel looked at me intently, as if ready to grab a trench-coat and head out 'into the fog\" to get \"back on the case.\"\n\n\"I visited there a few times. I mean, I recognized Voorhees, didn't I? I suppose he could work in a different department there. The brokers were all in my building, but the support staff is in the headquarters building.\"\n\nMiguel looked disappointed. \"You know, I got a cousin who does security there.\"\n\n\"Really?\" I was beginning to suspect Miguel's family tree looked like a sea urchin.\n\nHe nodded, frowned a little and pulled out his cell phone. \"Let me text him.\" It was bare seconds before he had a response. \"Yeah, we can drop by and he'll take a look.\"\n\nIsobel's husband grabbed Miguel and talked quietly to him for a second as we headed out. \n\nMiguel was chuckling softly as we pulled away. \"Isobel's husband wants us to keep investigating.\"\n\nI squinted in confusion. \"Why? He hasn't even been involved.\"\n\n\"Yeah, but Isobel really gets a kick out of it and she's kind of spun up when she gets home from work instead of just being tired all the time.\"\n\n\"Wha... oh. So, she's... uh...\"\n\n\"Yeah, apparently she's had this sexual fantasy about being a detective for a long time. She even went out and bought some handcuffs and a fingerprint kit...\"\n\n\"Stop. I really don't want to know.\"\n\nHe chuckled wickedly. \"But it's really...\"\n\n\"Dear God, Miguel, just stop. Or I'll tell you about Leonard and Maisie and the spatula.\"\n\n\"Ugh. That's nasty. You win.\"\n\nWe pulled up to a small apartment building and Miguel led me up the stairs to the third floor and rapped on a green door.\n\nI blinked when the door was opened by a powerful red-haired giant of a man. Miguel introduced us. \"Jos\u00e9, this is my cousin Bj\u00f6rn. He manages the security team at your ex-wife's building. They hired him away from the NYPD.\" \n\n\"Um, Miguel, he doesn't look very Mexican.\"\n\n\"Yeah, well he's Norwegian.\"\n\nBj\u00f6rn gave a weary sigh. \"Swedish.\" \n\nMiguel chuckled. \"Yeah, 'bork, bork, bork.' Swedish, Norwegian, Finnish. Whatever.\"\n\nThe huge man waved us in with a tolerant smile. \"Miguel's still pissed about that FIFA match last year.\" \n\n\"Oh, not that shit again. Get lucky one time....\"\n\nBj\u00f6rn looked thoughtfully upward. \"Get lucky on a hundred-dollar bet....\"\n\n\"Get lucky with your sister, man.\"\n\n\"She's taller than me, dude. She'd have to hold you by the feet and use you like a dildo. How long can you hold your breath? Maybe I'll give her a call.\"\n\nMiguel winced comically. \"Dickhead. So where is Kelsea? She's the high point of visiting you.\"\n\nBj\u00f6rn pulled out beers and handed us each one. \"She's stuck in traffic. Had a gig on the east side.\"\n\nMiguel gestured to a picture of Bj\u00f6rn with a cheerful-looking and pretty, but extremely pale woman. \"Kelsea's a clown. Like a real one, went to clown school and everything.\"\n\nMiguel gestured to a picture of Bj\u00f6rn with a cheerful-looking and pretty, but extremely pale woman. \"Kelsea's a clown. Like a real one, went to clown school and everything.\"\n\n\"Academy. It's Clown Academy. Bj\u00f6rn good-naturedly corrected. \"She's a medical clown now; works in the children's wards at a couple hospitals.\" I met her when I worked in New York, She was a busker, mostly working Times Square, clown act with street magic. She got stuck there when the circus she was working for shut down. I arrested her.\" \n\n\"Seriously?\" I took a sip of Bj\u00f6rn's damn good beer. \n\n\"Yeah, she got in an altercation with a mime and I had to arrest them both.\"\n\nMiguel snickered. \"Did you keep a straight face when you told the mime he had a right to remain silent?\"\n\nBj\u00f6rn chuckled. \"Took me three tries to get it done. Then I had to search Kelsea and it turned into a real fiasco. Probably a dozen balloon animals, three rubber chickens, a joy buzzer, six giant lollipops, two of those bulb horns that clowns use, and finally about 50 yards of tied-together handkerchiefs. When I finally pulled the last handkerchief out it had a red t-back lace thong tied to it...\" He sighed. \"Took fifteen minutes and we drew a huge crowd. She played it for all she was worth. Hell, the search netted her nearly six hundred in tips.\"\n\n\"Helluva way to meet.\" I savored another sip.\n\n\"Yeah, she found me on duty a few days later, gave me her phone number and demanded a date.\"\n\nThe door to the apartment popped open and an honest to God clown walked in. Not one of the weird creepy ones; she was bouncy, cute and cheerful.\n\n\"Hey Miguel! Nachos Cheese Doritos!\" She looked over at me with a ridiculously cheerful grin and comically raised eyebrows. \"It's the only Spanish I know.\"\n\nThere was something infectious about her silliness, and I shook my head and laughed. She abruptly leaned over and studied me intently. \"Bj\u00f6rn's giving you some line of bullshit about me, isn't he?\" She threw her hands up over her head. \"He runs around telling everyone I'm a clown.\"\n\n\"You do have on clown make-up and you're actually carrying a rubber chicken.\"\n\nShe held the chicken up. \"Dinner. And maybe I did get a little carried away with the eye shadow this morning.\" She deadpanned it perfectly, then grinned again. \"Anyway he exaggerates about how we met. It was only 43 handkerchiefs, not 50. And whatever he said, he loves the clown thing.\" \n\nShe spun into a ballet pirouette before smoothly sliding into Bj\u00f6rn's lap. \"Don't ya, Babe?\"\n\nHe gave her kiss and she spun back out of his lap just as smoothly. \"Be right back. Gotta get the make-up off.\"\n\nBj\u00f6rn watched her leave and his expression shifted. \"The texts sounded serious. What's up?\"\n\n\"Jos\u00e9 here has a problem. Somebody is trying to set him up and he doesn't even know why.\"\n\nThe big guy eyed me for a second and raised an eyebrow. \"He looks more like a Joseph than a Jos\u00e9 to me, Miguel.\" He tipped his bottle slightly toward me. \"I have pretty clear instructions to keep you out of the complex no matter what, so I hope that's not the kind of help you're looking for.\"\n\n\"What's the problem?\"\n\nIt took about fifteen minutes to bring him up to speed and as we did, Kelsea popped back out, face scrubbed, in jeans and a \"Snoopy\" T-shirt. She grabbed a beer from the fridge and sat next to Bj\u00f6rn. \"Sounds like a mess. Ex-wife hate you that much?\"\n\nI shrugged. \"No reason for it. Not that I know of.\"\n\n\"What are you going to try to do?\"\n\n\"Right now, we're just trying to figure who this is.\" Miguel pulled up the picture of the blond guy with Beth. \"You ever see this guy?\"\n\nBj\u00f6rn didn't even hesitate. \"Yeah, all the time for a while, not as much for the last few months, but he still comes around.\" He paused. \"I didn't know he was friends with Beth though. I didn't even know they knew each other.\"\n\n\"Do you know if he hangs out with Alan Vorhees?\"\n\n\"That weasel? No. Nobody hangs out with him.\"\n\n\"It looks like Beth has been having an affair with Alan for years.\"\n\n\"Her? Seriously, the security teams see a lot of shit we turn a blind eye to because it isn't our problem, but I've never seen her do anything. Comes in, does her work, goes home.\"\n\n\"Apparently she and Alan have been hooking up over the lunch hours.\" \n\nBj\u00f6rn looked thoughtful. \"Accounting kind of eats lunch in two shifts and they leave at the same time. Along with a bunch of others.\" \n\nIt wasn't looking like we were getting anywhere, so I figured I'd get what we could. \"So who is the blond guy anyway?\" \n\n\"His name is Evan Batchelder. I know him because he flexed on me when he first showed up. Some of the steroid babies do that by reflex. Weird name, too.\"\n\nI glanced over him. \"I don't think he's in your league. So what department does he work in?\"\n\n\"He doesn't work for us. He drops by to do his job. He's an SEC investigator.\"\n\n*****\n\nMiguel and I were pretty quiet most of the way back to the trailer park. He pulled to a stop at the trailer park gate.\n\n\"So, I gather not all your cousins are really cousins.\"\n\nHe shrugged. \"You got family you're born with, that's one thing. Then you got family you choose.\" \n\n\"And Rosa?\"\n\n\"Nah, she really is my second cousin. Hadn't seen her in years before I got back out here.\" He paused. \"You know she likes you.\"\n\n\"Weren't you the one who said she might try to kill me?\"\n\nMiguel grinned. \"She might, but that doesn't mean she don't like you.\" His grin dropped away. \"What are you gonna do?\"\n\n\"I don't know yet. I've got to look some stuff up. Beth even seeing the guy from the SEC is a serious ethics violation, I'm pretty sure of that... and there's stuff that maybe...\" I stopped. \"I'd rather just leave it alone.\"\n\n\"But she won't leave you alone.\" Miguel looked steadily at me. \"Don't do anything stupid, you need help, I'll help. Okay?\"\n\nI nodded. \"Not sure what I can do anyway.\"\n\nHe pulled away and I walked across the dimly lit trailer park.\n\nThe only sound was the crunch of gravel under my feet until I was almost to my trailer.\n\n\"Hey, pervert.\" She said it so softly I barely heard it.\n\nI looked over at Rosa's trailer. She was sitting in a chair in front of it with her feet up on another. \"Hey, Rosa.\"\n\n\"Looks like you had a bad day.\"\n\n\"Yeah, pretty much everything I thought I knew about my wife turned out to be bullshit.\"\n\nShe held up a half empty bottle. \"Need a drink? Tapatio out of Jalisco.\"\n\nI took a couple steps toward her. \"That's the good stuff. You don't need it waste it on me.\"\n\nRosa smiled gently. \"I've been there with my ex. I can spare some.\" She pulled her feet down, sat up straight and patted the empty chair next to hers. \"Besides, you promised to let me know what's going on.\"\n\nI slumped into the chair and took the proffered bottle. \"I don't have a cup...\"\n\nShe laughed softly. \"Tequila kills germs. It's okay, you won't catch any of my cooties.\"\n\nI took a sip and shook my head. \"More worried about you catching whatever kind of shit luck I've managed to catch.\"\n\n\"So what happened?\" She leaned forward a bit, a dim shape in the darkness.\n\nI did it. I told her the whole stupid story about what we'd learned.\n\n\"What does that mean?\"\n\n\"I can't prove it, but it looks like Beth has been setting me up for years. A couple of accountants could have put that trading account together, they'd have needed help but they could do it. Whoever was doing it got tipped to the SEC investigation. Beth is in the center of it all. She was sleeping with the SEC guy over a year before the investigation came down. She was screwing Voorhees for two years before that. And...\" I stopped for a second. \"She was trying to get Fish to put me back in prison.\" \n\nI could see Rosa pull her feet up into her chair under her. \"How long were you guys married?\"\n\n\"A little over four years. So she was fucking Voorhees practically from the beginning.\"\n\nShe sat quietly for a bit. \"You think maybe she married you to set you up?\"\n\n\"That thought makes me feel even better.\"\n\nShe leaned over and took the bottle from me to take a sip, then handed it back. \"Manipulating men is what some women do best.\" She looked at me intently. \"So what are you going to do? Get revenge?\"\n\nI shook my head. \"At least you're straightforward. I just want out of this, but that isn't going to work.\"\n\nRosa held up the empty bottle, then stood up. \"Maybe another bottle would help think it though? I think I have one inside.\" She walked up the steps to her door and I started to get up.\n\nWhen she opened the door, the light from inside seemed to dissolve her robe as she looked back over her shoulder at me. \"You coming?\"\n\nI followed and shut the door behind me, entranced by the rhythmic sway of her hips. She paused for a second and I saw the Chihuahua jump from where he'd been sleeping on the couch and race under a chair. \"I think the bottle is in my bedroom.\" She pointed to an open door.\n\nI took two more steps toward her and she turned to me with a wicked smile. Her robe was completely open and I reached inside it to pull her against me. Her rapacious smile widened further as she looked up at me. \"You can't say I didn't warn you. I told you that manipulating men is what some women do best.\"\n\nShe hooked one leg around my thigh and thrust against me in an almost lazy grinding tempo. She started to say something else, but I couldn't resist those full red lips and I cut her off with a kiss. She returned it hungrily and shrugged out of her robe, her full breasts mashing up against me. \n\nPicking her up, I carried her into the bedroom, a low growl following us from under the chair. \n\nI probably should have shut that door. I'm certain we emotionally traumatized the Chihuahua, he lost his voice from howling about two hours later. \n\n*****\n\nRosa lay half across me; I could feel her heartbeat in my own chest and I knew exactly when she was waking up without her moving a muscle. She slowly raised her head and looked languidly at me with those soft brown eyes.\n\nA slow smile crept across her face. \"Wow. You must have been saving that up for a long time. I'm a little... tender.\" She looked down off the edge of the bed for a second. \"I'm probably gonna throw that pillow away.\"\n\n\"Yeah. Even if you wash it...\"\n\nShe shook her head with a soft laugh. \"No, I think I'll just buy a new one.\"\n\nI ran my fingers through her hair, then down her neck, feeling goosebumps raise as I did it. \"I haven't exactly had the most active social life.\"\n\n\"You didn't hook up with that horny old lady at the club?\"\n\n\"No...\"\n\nShe cut me off with a soft laugh. \"I know you didn't. I was keeping an eye on you.\" \n\n\"That's fair, I had an eye on you, too.\"\n\n\"You had your eyes on my ass.\" She shifted and nestled a bit into my side. \"And I lied. That stuff at the club was for your benefit.\" Rosa looked suddenly serious. \"I need to tell you the truth because I don't want you thinking I'm like your ex. I knew you were going to be at the club, that's why I went.\"\n\n\"I'm gonna kill Miguel.\"\n\n\"He didn't know I was going to be there. He asked me for a decent place to go. So I kind of decided to show up.\"\n\n\"Why?\"\n\n\"Because I needed to stop being a bitch. I know I've been awful since that shit with my ex-husband. I've been so damn angry all the time.\" \n\n\"But why me?\"\n\n\"Now you can blame Miguel. He told me how your wife dropped you and I figured you might understand how I felt. Besides, I got a damn good look before you picked up that sombrero.\"\n\n\"Pervert.\"\n\nShe giggled softly. \"Yep.\"\n\n\"So you decided to wiggle your butt at me and lure me in.\" \n\n\"It worked, didn't it? You may think you're being subtle, but I could see you drooling over this ass every time I went outside.\"\n\n\"Is that why you wear that robe all the time?\"\n\n\"Sometimes, but I've always been kind of an exhibitionist, anyway.\"\n\n\"Either way, I think you found my weakness.\" I reached down and gave her butt a squeeze. \n\nA knock on the trailer door interrupted harshly. Rosa pulled on her robe and answered the door while I got my jeans on.\n\nI walked out of the bedroom to find Rosa staring at me with narrowed questioning eyes. \"This...girl...says she needs to talk to you.\"\n\nKelsea stepped out from behind her. \"Hey, Jos\u00e9. Got a minute? I need to talk to you about something.\"\n\n\"Rosa gets to hear it, okay?\"\n\nThat wasn't what Kelsea wanted to hear, but I was sure it was what Rosa needed. Kelsea's eyes shifted oddly and she sighed. \"Okay, but this doesn't go to Bj\u00f6rn, okay?\"\n\n\"I wasn't really under the impression you had secrets from Bj\u00f6rn.\"\n\n\"There's difference between secrets and stuff that Bj\u00f6rn just doesn't need to be bothered with. I mean he knows, but he doesn't need to have it rubbed in his face, okay.\"\n\nI nodded once slowly.\n\n\"When the circus went bankrupt, I was kind of screwed. They'd lost all our money and I couldn't find a job. I started doing the street performer thing and got involved in small con stuff, like three card monte.\"\n\n\"Bj\u00f6rn said you did street magic.\"\n\n\"Toughest kind of magic there is, just you and the marks; no stage sets, no assistants...\" She grinned. \"I was damn good at it. I had a lot of experience with it in the circus.\"\n\nRosa had obviously figured out who Kelsea was from my story. \"What does that have to do with everything here.\"\n\nKelsea blew her breath out. \"I was doing the small cons, but you do that, you hear stuff. The big cons. And, maybe, I helped on one or two of those as an extra. Bj\u00f6rn doesn't need to know that. He thinks he rescued me before I got into anything deep, and he mostly did. I didn't do badger games or play the hook or anything like that. Maybe I would have eventually though, being broke in the city sucks. I don't want to tarnish what he did, he doesn't deserve that.\"\n\nI looked over at Rosa and saw a gentle smile cross her face and I thought about her comment about women manipulating men. Rosa laughed softly. \"I understand.\"\n\nKelsea grinned back at her and shot her an exaggerated conspiratal wink, then looked at me. \"I think you're looking at it the wrong way.\"\n\n\"Why?\"\n\n\"Because you're wondering why they are doing this to you. But this is just another big con, and you're not the mark.\" She paused. \"No offense Joseph, but you can't be the mark. You don't have anything to take.\" She glanced at Rosa. \"I mean no money or stuff to sell for money.\"\n\nI know I grimaced at that. \"Then why set me up, why try to come back and put me in prison?\"\n\n\"You're not the mark, you're part of the con.\" Something a little manic lit in her eyes. \"You're the Shuffle.\"\n\nI stared at her silently for a minute. \"I don't know what that means, but I'm guessing it's not good.\"\n\nShe shrugged. \"It means you're the distraction. They want everybody looking at you, not them.\"\n\nRosa looked at her. \"How do we stop it?\"\n\nKelsea grinned and raised her eyebrows. \"That's easy. Just convince the Mark that they're being conned.\"\n\nI choked for a second. \"Dammit, I'm an idiot.\"\n\n\"Why?\" Rosa looked at me puzzled.\n\n\"The Seychelles. We were going to go to Fiji for our honeymoon and Beth suddenly changed it to the Seychelles.\"\n\n\"Why does that matter?\"\n\n\"Banking laws. She sent me out deep sea fishing one day and she stayed at the spa all day. Or said she did. I bet she set up an account. In person, so there'd be no trail to her.\"",
        "\"Isn't there anyone you can call?\"\n\n\"The SEC has a reporting mechanism, but Hell, that'd probably just tip them off.\"\n\n\"Quis custodiet ipsos custodes?\"\n\nI nearly choked on the tequila. \"Who watches the watchmen? In Latin? I think I've underestimated you.\" \n\nRosa gave a huge smile. \"It was in a comic book I read a long time ago. I always thought it was a great question.\"\n\n\"It really is a good question. I guess the DOJ. Or maybe the FBI?\"\n\nRosa smiled maliciously. \"Why not both?\"\n\n*****\n\nIt turns out that the FBI and IRS have websites for reporting fraud. Very convenient. I used the computer at the library, since I didn't really want to drag Rosa fully into the problem. I figured if nothing else, it might sow enough trouble that Beth and her cohorts would stay away from me. \n\nThat was it. I reported to PO Anderson and worked with Miguel and the crew another month, right up until the end of harvest. I managed to find a job making donuts, which was easier but I missed the old crew for a while. The hours did match Rosa's almost perfectly, and since we were pretty much living together full time, that was really convenient. \n\nThat definitely qualified as \"life was good\" for me. So, of course, it couldn't be that easy.\n\nThe knock came as I was nuzzling Rosa's neck and grabbing her butt while she struggled to get plates laid out on the table.\n\n\"Stop that.\" She tried to sound serious, but I could hear the husky tone in her voice and she tilted her head further to let me get to more of her neck. Besides, she was arching her back to make it easier for me to fondle her ass. I was pretty sure supper was going to have to wait a bit. Right up until the harsh knock sounded.\n\nRosa glared at the door and struggled to get her breathing to slow down. \"Dammit. I'm going to kill Leonard if he's come over here again trying to borrow my robe. The answer is no.\"\n\nIt wasn't Leonard. It was two uniformed deputies backing up a couple of guys in government standard suits.\n\nIt was some comfort that I recognized the deputies. The older of the two plainclothes men held up his credentials. \"Joseph Bateman?\"\n\nI nodded. I could see Leonard and Maisie peering out from the curtains of Leonard's trailer. \n\n\"I'm Special Agent Tanner with the Federal Bureau of Investigation. We need you to come down to the field office to answer a few questions.\"\n\nRosa clamped onto my arm. \"Are you arresting him?\"\n\n\"No. We just have a couple questions to ask.\"\n\nI looked at Rosa. \"I probably need to do this.\"\n\nShe reluctantly let me go, but not before taking cell phone pictures of the agents and hissing something in Spanish to one of the deputies. From the way he paled, it was probably a death threat, a very explicit and painful one. As we drove away, I could see Leonard and Maisie making their way to Rosa's trailer. \n\nI was escorted into the FBI field office, sat in an interview room with nauseatingly white walls, grey carpet, a dull grey table and told to wait.\n\nIt was probably twenty minutes of torture-by-florescent-light before a clean-cut guy in a black suit came in and sat across from me, placing his credentials on the table, pulling out a folder and flipping it open as he introduced himself.\n\n\"Mr. Bateman, I'm Senior Special Agent Michael Rivera out of the Criminal, Cyber, Response, and Services Branch in the DC office. We've received your tip and we'd like to follow up on some information you included for clarification in an ongoing FBI-IRS investigation. We appreciate your assistance.\"\n\nI stared at him in surreal horror. \"Miguel.\"\n\nHe ignored my whisper and ran a finger down to a line item on the list. \"In your account, you stated that you believed the money may have been moved to an account in the Seychelles and we need to try to narrow which institution your former wife may have used...\"\n\nThe next two hours were had a twisted dreamlike quality as SSA Rivera went over every detail of what I suspected the plot was and how it worked. I had to handwrite and sign statements, go over maps and itineraries of my honeymoon, and do it all while Rivera acted as if we'd never met.\n\nAt least there were no references to Isobel, Bj\u00f6rn or Kelsea; I was relatively sure I couldn't have handled that. They were supposed to be family.\n\nAfter we'd finished, He stood up and reached across to give me a perfect government official handshake with a \"Thank you for assisting us in our investigation.\"\n\nI walked into Rosa's trailer with silence roaring in my ears.\n\nShe was waiting for me. \"Are you okay.\"\n\n\"Did you know about Michael?\"\n\n\"Michael who?\" She recoiled from my tone.\n\n\"Miguel.\"\n\nShe blinked. \"What about Miguel? Is he okay?\"\n\n\"He's an FBI agent.\"\n\nThe obvious shock and disbelief on her face was probably the most comforting thing I could have seen. \"Miguel? Are you serious? He said he came out here because he had some kind of trouble in New York. He told me...\" Her voice trailed off and she stood silent for a second.\n\nThe silence didn't last long and I was probably lucky I didn't speak Spanish. After a couple of minutes, I was wondering if Liam would be willing to let me hide under the chair with him.\n\n\"Rosa, I'm sorry.\"\n\nShe stuttered to a stop and blinked. \"For what?\"\n\n\"For even thinking you could have...\"\n\nShe shook her head. \"You asked. You didn't accuse me of anything, but that hijo de puta lied to us. His family.\"\n\n*****\n\nWe saw the arrests and trial on TV; the FBI and IRS investigation of corruption in the SEC was in the news for the next year. \n\nBeth took a plea deal but still got fifteen years, even after turning over the money she'd stashed overseas. The SEC investigator was sentenced to twenty years. No plea deals for him. There were more people involved than I thought, which made me more than a bit uneasy, considering how Beth had drawn most of them into her plan. I was lucky I wasn't a CDC case study. Most received five years or so, although one pimply-faced IT guy drew only 18 months. \n\nRosa's only real comment was reserved for Beth when she finally saw her on television. \"You were married to that skinny bitch? I thought you liked having a woman with a real ass.\"\n\n\"What can I say? I was deprived for four years. I'm making up for it now.\" \n\nShe shot me a fake scowl, but the corner of her mouth twisted up in a slight smile. \"I know, I can't even wear shorts, you keep leaving toothmarks all over my ass.\"\n\nThat was utter crap. She still spent most of her time off wearing nothing but her skimpy little robe; if anything, her exhibitionist streak had gotten worse. I didn't argue with her, though, she did occasionally have a toothmark or two on her.\n\nThe court was looking at vacating my conviction; somewhere in all the finger pointing, somebody admitted that when I was being set up; Voorhees had planted the drugs in my car. Beth had thought of it, though. I wasn't really holding my breath. At the speed the courts moved, I figured I would be done with parole before they ever got to it, and PO Anderson had gone pretty much hands-off; he'd even been the one to let me know about the move to vacate. \n\nFish retired quietly without any charges being filed and I wasn't sure how I felt about that, but Rosa said she suspected he wouldn't have been able to go through with it. That was good enough for me. \n\n*****\n\nFour months after Beth's sentencing, Rosa and I went to meet Bj\u00f6rn and Kelsea at the Salsa club. We'd run into them at a street festival and started occasionally meeting them at the club for dinner and drinks. Dancing with a double-jointed clown was an absolute trip, and watching Kelsea play her street magic tricks on patrons never got old. \n\nWe got there a bit early; I grabbed a table while Rosa headed over to \"freshen up.\" I'd just waved a waitress over when Miguel pulled a chair out. \"I'll get this round, man. I owe you one.\" He talked to the waitress for a second, then sat down.\n\n\"Miguel. Or is it Michael?\"\n\nHe sighed. \"Miguel.\"\n\n\"You might want to keep a clear path to the door. Rosa's pissed at you.\"\n\n\"Yeah. I figure she might be.\"\n\n\"You earned that.\"\n\n\"Doin' the job, man.\"\n\n\"I bought it, I really did. I thought you were my friend. You're good.\"\n\n\"Lots of training.\"\n\n\"Bj\u00f6rn told me he suspected something; he just didn't figure FBI. He thought maybe you were on the state narcotics task force.\"\n\n\"I wasn't even there for you, you know. We had an op running but came up empty. I was already in place and you fell into my lap when the employment agency dropped you there. Blind luck.\"\n\n\"The FBI stalks low-level drug parolees? Really? What kind of shit is that?\"\n\n\"Everyone was convinced you had the money hidden. Probably six agencies watching and just waiting for you to run for it. Took me a while to suspect you weren't in on it.\"\n\n\"Why didn't you say something?\"\n\n\"I couldn't be sure for a while, and once we learned that there was an SEC investigator in the middle of it, I was stuck. The rules are simple, the FBI should have been able to investigate, but none of the evidence we had was legal. And the politics are complicated. We couldn't legally initiate an investigation with what we had, but...\"\n\nI sat for a second. \"But if somebody lodged a whistleblower complaint, you'd have probable cause.\"\n\nHe nodded. \"It worked, didn't it?\"\n\n\"I can't argue with the results.\" \n\n\"We even figured out why she kept targeting you after you were out. You were supposed to be a fall guy, but they didn't realize that they hadn't left enough evidence to really railroad you. So then, when you got out after a few months, the SEC and IRS were on high alert and Beth couldn't do anything to get to the money without drawing attention.\"\n\n\"If I went back into prison for a long time, the pressure would be off and she'd be free and clear. That's fucking cold.\"\n\n\"Yeah, I interviewed her. She's probably a full-blown sociopath. They're attracted by the money and power. They tend to end up in politics, law and the finance industry. Cold as ice and damn good liars, convincing as hell.\"\n\n\"Kind of the pot calling out the kettle there, Miguel.\"\n\nHe shrugged. \"That's fair. Still, you're lucky you're alive. She probably figured killing you would draw too much attention. She did ask about you though. Kinda wondering why you hadn't tried to see her and talk to her.\"\n\n\"What the hell is there to talk about? She was never who I thought she was.\"\n\nMiguel put his beer down. \"If she's like the other sociopaths I've met, she wants to know she won, at least in some way. See you break down or get upset. See your reaction when you realize you were played.\" He laughed. \"It really, really pissed her off when I told her from my angle it looked like a clean sweep. You screwed up her plan, cost her all the money and put her in prison. Pretty one-sided win there.\"\n\n\"I was just trying to stop everything.\"\n\n\"I know, but it worked for me. These sociopaths are usually narcissists. She tried to show how she won by explaining shit we didn't know about. Put two more assholes behind bars and recovered a bit more money.\"\n\nRosa was suddenly by the table glaring down at Miguel. She hissed something that dripped with evil and he held his hands up in surrender. \n\n\"I know. My mom relayed your, um, opinion to me.\" He seemed to send a prayer up. \"I'm never going to hear the end of that, so thanks for that.\"\n\nRosa glanced between us. I shrugged. \"He's explaining what happened.\"\n\nShe pulled a chair right next to mine and sat down, gripping my arm possessively, still glaring daggers at Miguel. \n\nHe took a sip of his beer. \"What else do you want to know?\"\n\n\"How many guys was she...\"\n\n\"You sure you want to know?\" He frowned. \"Ten people, but two of them were women.\" He paused. \"Eleven if you count the IT geek that fucked up the frame job on you. He said he only got a few blowjobs back in the server room, though. He rolled on everyone as soon as we put pressure on him.\"\n\n\"He the one that got eighteen months?\"\n\n\"That's the one.\"\n\n\"Eighteen months in prison to get a couple of blow jobs. Damn.\" I shook my head.\n\nRosa elbowed me hard with an evil grin. \"You don't think mine are worth that?\"\n\n\"Well, of course, yours are...\"\n\n\"Oh God, That's too much information.\" Miguel held his hands up to ward off Rosa's wicked laughter.\n\nThings got oddly quiet for a second. The intimate joking uncomfortably reminding us how close we'd all been before.\n\nI turned the beer bottle in my hand a couple times. \"What are you after Miguel?\"\n\n\"I wanted to kind of set things right, man. Family, you know?\"\n\nI had a half dozen bitter replies pop into my head, but they fell away. \"Are we?\"\n\n\"Jos\u00e9 and Miguel? Yeah, cousins. Michael and Joseph? Probably not so much.\"\n\nI looked at Rosa. \"I think I can live with that.\"\n\nShe studied him for a second. \"You ever do anything like that again, I'll make you regret it for the rest of your fucking life.\" There was no venom there, just certainty.\n\nHe nodded. \"I know and I deserve it. Thank you for giving me a chance to make things right.\"\n\nRosa nodded obviously mollified by his apology.\n\nHe finished his beer. \"I need to get going. I have to go apologize to Isobel. I talked to Bj\u00f6rn and Kelsea this afternoon, that's how I knew you'd be here. I don't know that I can say we're good, but I think Bj\u00f6rn understands. Kelsea will probably take a while, She doesn't trust a lot of people, but when she does, she trusts with her whole heart and I kinda messed that up.\"\n\nI nodded. As clever and street smart as Kelsea seemed, she had a kind of precious naivet\u00e9. Rosa loved that about her. \n\nHe stood up, pulled an envelope out of his back pocket, held it up and smiled with a bit of irony. \"I asked if I could deliver this personally.\"\n\n\"What is it?\" The wariness in my voice was even obvious to me.\n\n\"The adjudication on the IRS claim. Reward money for reporting tax evasion. It's not exactly Batman money, you aren't going retire on it. It's a percentage of the taxes that should have been paid on underreported income, then they take taxes out of and all that shit. Whittles it down quick but it should help get you back on your feet.\" He paused. \"If they vacate your conviction, are you going back to your job?\"\n\nI shook my head. \"No. There's always going to be a suspicion that I got over on it somehow, nobody would sponsor me for a Series Seven again. The owner of the donut shop is thinking about selling it. I'm pretty much managing it for her, already, and I was looking into bank loans. It's not too expensive and the profits are good.\"\n\nMiguel snickered. \"Look at you, a big shot donut shop owner. Jesus.\"\n\n\"You're saying it wrong, remember? He works at the shop. I hired him and Alejandro to work there.\"\n\n\"Man, it's still hard to picture.\"\n\n\"Money is just... money, Miguel. I got family now.\" \n\nI saw a flash of pain just before he walked away. I pulled the envelope open and sorted out the legal papers. The total was a little over five hundred thousand dollars. I showed it to Rosa. She smiled. \"No problems buying out the donut shop now.\"\n\n\"We can get you a nicer engagement ring.\"\n\nShe held her hand up and studied her quarter carat ring for a second. \"No. I'm keeping this one. You had to work hard to save up the money for it, 'cause you didn't have any at all. That means a lot more.\" \n\nI squeezed her thigh. \"So what are we going to do with the money left over from buying the shop?\"\n\nShe looked up at the ceiling. \"There are a lot of empty lots in the trailer park. Maybe we could get a double wide trailer with a big deck on it? So we can have everybody over?\"\n\n\"Like Leonard and Maisie?\"\n\n\"Maybe even Miguel, in a month or two.\" She looked at the door for a while.\n\nI nodded. \"With a barbeque grill and patio furniture?\"\n\n\"And a good stereo system.\" \n\n\"That sounds about right.\"\n\nRosa leaned against me. \"Maybe...maybe we could think of making one of the bedrooms a nursery, you know. Maybe in the future?\" Her voice was measured, but I could hear her uncertainty.\n\n\"Maybe not make it too far in the future, okay? Maybe get one of those four-bedroom ones. You never know.\" \n\nRosa sighed. \"Maybe I'll be the one leaving tooth marks on your ass tonight.\"\n\n\"Pervert.\"\n\nShe giggled. \"You better believe it.\"\n\nPost Production Notes\n\n Not much to say here. This was inspired by the song \"He Drinks Tequila.\" I didn't go into the trade violation mechanism because it would take 5000 words to outline it. The small con, big con stuff is an entire world of its own. The shuffle is a common term in that world -- hopefully we will get to give Kelsea her own story someday -- it'd be a blast.\n\nIt has been way too long. Been a crazy spring and summer; The Missus and I have been swamped by issues ranging from work to family illnesses, so we really wanted to get back to writing -- this is what we do to have fun. The crazy ideas don't stop just because you don't have time to write them, so it's been frustrating in the extreme. With any luck, things will slow down soon and we can concentrate on the 50 plus outlines and story seeds sitting on the computer, written in the grid notebooks and the endless post it notes The Missus has pasted all over the notebooks and the computer -- things like \"BtB horror story with that terrifying ending\" and \"Don't forget kitchen surgery scene with Delaney\" and \"Jinxy is from Detroit, right?\"\n\nSeriously, Thank you for the support. Knowing that readers are out there and we brighten a few days is amazing. We'd never have seriously considered doing this without all the support we've gotten. We're even taking a shot at novelizing the Needles&Delaney stories into a single book to see if we can get an agent interested. That's something we never even thought possible before this all started, so thanks for that experience. "
    ],
    "authorname": "Todd172",
    "tags": [
        "btb",
        "burning down the house story",
        "caper",
        "clown",
        "rosa",
        "tequila"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/tequila-shuffle"
}