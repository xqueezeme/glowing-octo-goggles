{
    "title": "Whirlwind",
    "pages": [
        "<center>__________\n\nPart One</center>\n\nWithout a doubt or exception, it was the most awkward situation I'd ever been in. Each second of deafening silence and dead air felt like an eternity. It was hard to imagine that ten minutes earlier, the now-empty conference room I was still in had been filled to the brim with other Acanthis employees. \n\nNow, there was no one else but Maxine and I\u2014we'd been left all alone together. \n\nFor the nth time since I'd first laid eyes on her, I looked at my new officemate from head to toe. I still couldn't wrap my mind around why she'd shown up to her job interview in the outfit she was wearing. The white broderie anglaise romper looked great on her, but it was inappropriate for the workplace. I wouldn't go as far as calling her attire promiscuous or lewd, but her long, tanned legs were very much on full display. The cherry on top though? Her fully visible septum ring. \n\nPersonally, I had no problems with piercings... One of my best friends had a bunch of them (along with a ton of tattoos). My issue was that Acanthis' headquarters was a place of business. It had a dress code that everyone needed to follow. So, the combination of Maxine's ultra-casual outfit and nose ring was a blatant slight to 'appropriate corporate wear.' And yet, she somehow managed to still look presentable. It was mind-boggling to me how much more beautiful people could get away with compared to the Average Joes and Plain Janes of the world.\n\nI squinted at Maxine, silently estimating her height. She was just a few inches taller than me, but I was in three-inch heels, while she was in lace flats, so she had to be at least 5'9\". She was definitely taller than average. Which made sense since both her mom and dad were statuesque individuals who towered over the people around them in many ways (including but not limited to being physically taller). The longer I studied my brand-new workmate's appearance, the more similarities I observed between her and her parents. \n\nTogether, the three of them comprised such a picture-perfect family. \n\nAlthough I was in a very stable relationship with my girlfriend of two years, I could still admit that Maxine was stunning. Was she my type? Not necessarily... But she was incredibly good-looking, undeniably so. Like if anyone passed her on the street, they'd probably do a double-take. Just to make sure she was real. Her youth elevated the attractiveness she'd inherited at birth to an almost ethereal realm. Her 'biological Punnett square' had to be made up of nothing but good genes. With her flawless olive toned skin, thick light brown hair, expressive honey brown eyes, cute button nose, sharp cheekbones and well-defined jawline, she was undeniably striking\u2014indisputably gorgeous.\n\nFortunately for Maxine (or unfortunately for everyone else), she'd clearly won the lottery of birth. And as if being that attractive wasn't enough of an advantage, she was also very, very financially secure. So much so that it wasn't an exaggeration to claim that her grandchildren's grandchildren would never ever have to worry about making ends meet.\n\nIn a nutshell, in terms of personal finances, even my wildest fantasy paled in comparison with her plainest reality. \n\nAnd yet, despite already possessing the upper hand all her life, she'd been given another trump card earlier when she was essentially gifted an undeserved position in the company I worked for. So what if GPA-wise, I was miles and miles ahead of her? So what if I spent my summer breaks interning for other companies in the industry, working for no money but 'earning experience?' So what if her bare-bones resum\u00e9 was pretty much a complete joke? As of today, the two of us were going to be holding the same exact job title. Which was a bitter pill for me to swallow since Acanthis was a globally recognized international shipping and logistics company that had an extremely rigorous selection / hiring process. \n\nAfter I'd graduated from college with Latin honors, I still wasn't a 'sure-hire' despite my stellar grades, impressive internship experiences and well-earned recommendation letters. Also, once I'd already landed that coveted spot in the company, I still had to claw my way up to where I was now from the very bottom of the corporate ladder. I spent more than a year doing coffee runs and being lectured at for every little thing by people who still believed age came with 'automatic seniority.' Maxine didn't have to start where I did though, she didn't have to go through what I went through to be even considered as qualified. \n\nEverything that I'd worked for years to attain was being handed to her on her very first day. \n\nBut the injustice didn't stop there. Adding insult to injury, I assumed that her paycheck was going to be bigger than mine. Like a lot bigger. I mean, she was the CEO's only child... So, it wasn't really a stretch for me to think that she was going to be making a lot more money than I did. I bit my lip in frustration. The whole thing was so unfair. I felt helpless, but I knew there was nothing more I could've done or said. Believe me, I really, really tried to make a difference during her highly unorthodox 'public job interview' earlier. Which was why I was in this awkward situation in the first place. \n\nWhen Maxine's dad had singled me out a while ago and asked me what I thought about his daughter 'joining the Acanthis family,' I decided to be honest and speak nothing but the truth. Fully aware that at the time, everyone in the room was looking at me like I'd gone certifiably insane, I began listing concrete reasons why my boss' daughter wasn't ready to join our company's ranks. I talked about how it was going to be a big, big career leap from being the assistant manager of some boutique hotel in a foreign country to holding a high-stakes, middle-management position in Acanthis. I tried to be as polite as possible, but criticism in a costume was still criticism. So, right then and there, in front of the murmuring crowd composed of everyone from my department, I'd doomed any chance of developing a good working relationship with Maxine. Which turned out to be a mistake since the whole thing had been an exercise in futility... In the end, none of my damning statements had mattered.\n\nThe job was still hers.\n\nHonestly, I could've yelled until my face turned blue and it wouldn't have changed anything. She would've still been hired. I just needed to accept that being the boss' child automatically granted her preferential perks and privileges. In essence, her skewed job interview was a microcosm of the real world, wherein the rich (the elite) had access to advantages that were not only invisible to but also unattainable by majority of mankind. \n\n\"Hailey, right?\" Maxine broke the tense silence first.\n\n\"Kelsey,\" I corrected her. Based on the facial expression I had on, I obviously wasn't thrilled by our forced interaction. I knew I was asked to show her around only because we'd be working very closely together, but in my annoyed and disappointed state of mind, I saw it as some form of punishment. \n\n\"Oh, my bad... Things were pretty chaotic a while ago,\" she replied. I'd already heard her speak when she was fielding her dad's non-stop barrage of questions, but her voice now was different. It was slightly lower than my own, but she actually sounded much friendlier than I'd expected. \"I can't believe my dad actually went through with it... That felt more like an initiation than a job interview. Christ.\"\n\n\"Yeah, it was pretty brutal.\"\n\nMy description was an understatement. Maxine's was closer to the truth, what had happened to her resembled an act of initiation... To me, it was borderline hazing. When I was applying for my job, the final interview had been with a four-person panel. A panel that'd asked me a typical set of questions about my strengths, shortcomings and future plans. I didn't have an audience of around two dozen people present, gawking at me as my own father grilled me without mercy.\n\n\"I think my dad made it especially harsh to shut down any talk about nepotism. As if that's even possible.\" She rolled her eyes before extending her right hand to me. \"Anyway, it's really nice to meet you, Kelsey.\" We shook hands.\n\n\"You, too.\" The feeling of her soft palm against mine snapped me out of my anger-inducing existential thoughts. Even if I didn't like it, I had a job to do. I'd been tasked by the HR head to show the company's newest hire around... I wasn't getting paid to philosophize about injustice and privilege. \"Look, Maxine, before we start with the tour, I just- I want to apologize for earlier.\" I figured saying sorry for what I'd said was the best option since I couldn't go back in time and tell myself to just shut up. \n\n\"Call me Max,\" she told me and I nodded. \"And apologize for what? You didn't do anything wrong.\" She raised a perfectly shaped eyebrow. I couldn't really read her face, so I wasn't sure if she was playing dumb or playing with me. \n\n\"Um. When I told your dad that you weren't gonna be a good hire... I really shouldn't have done that, especially in front of everyone. You were already dealing with more than enough. So, yeah, I'm sorry.\" \n\n\"Oh.\" She cast her gaze away. I was about to apologize again, just to make sure the hatchet was well and truly buried, but I noticed she was smiling. Her smile widened to a grin that showed her perfect set of pearly whites. And then suddenly, she just started full-on laughing. If I'd been perplexed when I saw her smile, then I was completely stupefied when I heard her laugh. For a while, the only sound in the enclosed, quiet room was her laughter. Until it naturally dissolved into giggles and chuckles, until it finally faded into silence.\n\n\"What's so funny?\" \n\n\"You are,\" she answered through one last chuckle. Even more blood rushed up to my blushing, burning cheeks. \"Not like in a bad way, I just remembered all the things you were saying about me earlier and I don't know... It cracked me up.\" \n\nI tried placing myself in her shoes, but I couldn't imagine reacting the way that she just did to another person basically berating me and my professional accomplishments in front of a crowd of onlookers. I sincerely wondered if she was deriving some twisted form of pleasure from remembering my hypercritical words. \"I don't get it.\"\n\n\"Sorry, I mean, I laughed 'cause all the reasons you gave against hiring me were the same ones I'd brought up to my dad before we got here,\" she explained. Her killer smile never left her face. \"I'm just glad that there was at least one person in the room who was being real. Everyone else was walking on eggshells, trying to be PC and please Dictator Dickhead\u2014not you though. You didn't care about any of that, huh?\"\n\n\"Wait, what?\" I furrowed my brow. \"You don't want to work in Acanthis?\" Her revelation made things so much worse. I could feel my annoyance bubbling into anger. What a spoiled, irreverent brat. Also, her father was an incredibly generous and down-to-earth guy, so her referring to him as 'Dictator Dickhead' made absolutely no sense to me. \n\n\"Nope, not at all...\" The little ingrate answered matter-of-factly with a shake of her head. \"I'm actually only here because\u2014\"\n\n\"Oh, grow up,\" I cut her off. My voice was noticeably colder. I was so, so pissed off, I couldn't hide it. \"Look, whether or not you wanna be here doesn't matter to me. And frankly, it shouldn't matter to you anymore either 'cause as of today, you're part of the company. I don't know what you used to do in your last job, but I can guarantee you that the stakes here will be much higher.\" \n\nI wasn't really one for confrontation or conflict, but nothing in the world ground my gears more than ungrateful people. Her nonchalance, her indifference really rubbed me the wrong way. I had to sacrifice so much to be granted the college scholarship that merely gave me a chance to reach where I was today. Which meant I couldn't stomach how entitled she sounded. Moreover, her utter lack of respect toward my boss who probably gave her everything she could've possibly wanted was insane to me. As someone who had two selfish knuckleheads for parents, I would've loved to have a dad like hers. Both her parents were great... Although I wasn't close to her mom or anything, I'd spoken to her several times in the past. She'd actually just resigned from her executive position in Acanthis recently to 'pursue other passions,' but basically everyone in the company loved her. She was pretty much regarded as a living saint. \n\nHow Max could've been as blessed as she was and not feel lucky was beyond comprehension to me. \n\n\"Whoa, wait, I didn't mean to offend you. I just meant\u2014\"\n\nAt twenty-two years old, Max was just around a year younger than me. But after the last few sentences that left her mouth, I'd begun to see her as someone who was incredibly immature and out-of-touch with reality. That said, for all intents and purposes, she was still a full-fledged adult. So, even if she wanted to act like a thankless, self-absorbed child, I was under no obligation to treat her like a kid. And as far as I was concerned, she needed a cold dose of reality. Stat. It seemed to be long overdue. \n\n\"Offending me is not the issue here.\" I shook my head, frowning at her ignorance. \"The issue is that you have no idea how lucky you are.\"\n\n\"Is that so? Cool, I guess I'm sorry for not knowing how good my own life is,\" she spat back. Immediately after fieriness flickered in her light brown eyes and venom seeped into her voice, she shook her head and released a heavy sigh. She sent me a nervous smile before continuing in a much more amicable tone. \"Look, Kelsey, I don't know how our conversation turned into a confrontation so quickly, but can we please just rewind, restart or whatever? I don't know anyone else here and I'd really love to make a new friend right now.\"\n\nI gave her another once-over, calculating the pros and cons of a friendship between us. Ultimately, I came to the conclusion that being her friend wouldn't have been conducive to success\u2014for either of us. Also, albeit I didn't know her very well, I was certain that we didn't have anything in common... We were much too different. There was just no point in us forcing a friendship.\n\n\"Max, we'll be colleagues, workmates.\" I kept my voice steady and stern. \"This isn't school, no one's really here to make friends.\" The evident disappointment on her face made me feel a pang of guilt. I quickly shook away the uncomfortable feeling though. \"Plus, you do know someone else in Acanthis... Your dad\u2014and he's just an elevator ride away.\" After almost a full minute of silence, I decided to finally start with the godforsaken office tour. \"Come on, I'll show you around now.\" \n\n\"Uh, no, that's okay.\" She curled her plump, pink lips into a forced, tight smile. \"I'm sure you're super busy, so don't worry about it.\" I opened my mouth to object, but she didn't let me get another word in edgewise. \"It was great meeting you, Kelsey.\" Before I could say anything else, she turned and began walking away from me. \"See you or whatever.\"\n\n\"Max, wait,\" I called out. With her hand already on the doorknob of the exit, she turned around. \"A bit of advice from one colleague to another? Shop for some workplace-appropriate outfits as soon as you can and at least hide your nose ring during office hours,\" I suggested with a shrug of my shoulders. \"This is a place of business.\"\n\n\"Yeah, okay.\" \n\nAfter the door shut behind her, I stood still for god-knows-how-long. I cringed as I remembered the uncharacteristic viciousness that left my lips. But it wasn't like I was being hurtful just for the sake of hurting her... I was just telling the truth. Furthermore, in the long run, she'd surely benefit from being more grounded in reality. So, in essence, I was actually helping her. \n\nFor a long, long while after our first meeting, no matter how hard I'd tried to rationalize what had happened to make myself feel better, unshakeable guilt continued to gnaw on my insides every time Max and I crossed paths. \n\n<center>. . .</center>\n\nThree years later...\n\nI watched Max and listened as she went through her notes. Unsurprisingly, she had the full attention of the eight members on the team we co-led even though it was just a last-minute powwow. Everyone in the small conference room seemed to be hanging on her every word (like usual). \n\nAs discreetly as possible, I ran my eyes over 'Little Miss Star of the Show.' I tried to look away. I should've looked away. I didn't look away. \n\nBased on what she was wearing, she'd clearly taken my harsh but well-intentioned advice to heart. Long gone were her revealing outfits and inappropriate jewelry. Today, she was in a light gray pantsuit number. And instead of the typical button-up blouse, she had on what seemed to be a black satin V-neck top under her fitted blazer. Of course she had to 'Max up' the outfit, so her feet were encased in pristinely white, dainty designer low-cut sneakers. But the touch of casualness actually worked really, really well... As always, she looked great. Although I'd never said anything about it to her or anyone else, her sense of style was something I frequently praised in the safety of my own head. For real, if for whatever reason, our office randomly held a 'best dressed contest,' then she would've won by a landslide. Probably even unanimously. \n\nJuxtaposing how she carried herself now against how she did during her first day in Acanthis, it was clear she'd definitely grown into herself in the last three years and matured a whole lot in the process. \n\n\"Don't get me wrong, I'm still on board with the rest of Kelsey's plan, but I think we should look into what this new guy is saying... Like if it's really possible for his company to shave off half a day, then we should at least consider it, right? Plus, according to the quote he sent over, we'll save like 7% of what we're currently spending for local trucking services. If he's legit, it'll be a win-win situation for us.\" \n\nAs always, she had to chime in with a new suggestion to disrupt the already established norm. Very early on, I'd learned to expect non-stop recommendations from her on how to 'change the landscape.' She was basically a personified factory of trailblazing ideas. Contrary to my initial misgivings about the big boss' daughter, she was the furthest thing from an airhead... I'd seriously jumped to the wrong conclusion when I thought she'd be like a helium balloon\u2014directionless and drifting. Honestly, after like the third time she'd presented one of her decks, I knew I'd gravely misjudged her intelligence and underestimated what she was capable of. She was smarter than probably 98% of all Acanthis employees (including me). \n\nThe critical thinking and analysis skills in her arsenal were awe-inspiring. There was also an eloquence in the way she spoke that textbooks couldn't teach... Pair all of that with her enviable ability to understand any document after briefly skimming over it and it was safe to say that she was a force to reckon with in the workplace. When I'd first started realizing how clever my new competition was, I was pretty intimidated. But when I got to know her and (more importantly) her habits better, I soon began merely using her presence as fuel for self-improvement. Staying ahead of her constantly motivated me to work harder, to be better. Things would've probably been different if she had a greater work ethic, but she constantly clocked out as soon as it was 'closing time.' Which thankfully tipped the scales in my favor. Sure, she had me beat in terms of natural brains and charm, but in the end, hard work always paid off. ",
        "As proven by the slight difference between what I secretly referred to as our 'win rates.' It was by no means official or anything, but Max and I kind of had this unspoken contest when it came to converting potential clients to actual clients. It probably would've been more efficient all around if the both of us worked together on pitches instead of silently competing against one another... But I figured our whole competitive dynamic was unavoidable, it was just part of the fallout from when we first met. From when I not only belittled her professional abilities but also explicitly stated that I had no interest in becoming her friend. \n\n\"Yeah, I agree,\" I said in reply to Max. \"Well, let's double-check if he can actually meet the proposed timelines and then we can send over a few of the smaller shipments... Trial basis until we can be sure about his reliability though. Everyone good with that?\" \n\nOur colleagues sitting around the table began nodding their heads. Max and I finally wrapped up the meeting. The rest of our team filed out of the room, ready to head home for the day. I was just about to follow suit and leave, too, when Max asked if she could run some things by me. I checked the time on my watch and bit my lower lip. I was going to be cutting it close, but traffic permitting, I wasn't going to be late.\n\n\"Uh, yeah, sure.\" I nodded my head. My hand distractedly fumbled around inside my handbag. \"But do you mind if I touch up my makeup for a sec?\" \n\n\"Of course not. Go right ahead,\" she replied. I mumbled out a distracted 'thanks' as I riffled through my small cosmetics pouch. \"Big date tonight?\"\n\n\"No, just dinner with the girlfriend,\" I told her as I held up a compact mirror with one hand, applying a fresh layer of light lipstick with the other. Acanthis had always preached tolerance and inclusivity, so I never really had to hide my sexual identity at work. Also, Max had already met and briefly conversed with my girlfriend when I'd brought her as my date to past work events, so casually mentioning her was really no big deal.\n\n\"Dinner date with your dashing doctor?\" She was obviously trying to be cute with all the alliteration. \"Are you guys celebrating anything or\u2014\"\n\n\"Max...\" I cut her off. I didn't have time for chitchat. \"You wanted to talk about the Goode cargo?\"\n\n\"Right, right.\" She nodded her head before pulling up a file on her laptop. She started going through the points she wanted to bring up. I ultimately ended up leaving the office fifteen minutes later than I'd originally planned, but I was sure my girlfriend would understand. \n\nIt was work, it was important. \n\n<center>. . .</center>\n\nAlthough I didn't advertise it or whatever, it was like my worst kept secret that I had control issues... For me, preparing and planning were pretty much synonymous to breathing and blinking. I had an incessant need to control the variables of any scenario as much as possible. Which made me really, really good at my job. \n\nSince my childhood (or more accurately, because of it), uncertainty had always left me feeling physically ill. For as long as I could remember, the feelings of doubt and unpredictability had brought on nauseating anxiety that pretty much wreaked havoc on my nerves. So, bar certain private / intimate scenarios behind bedroom doors, I preferred to be in complete control of all situations. And if that wasn't possible, I at least needed to be able to understand what was happening and also foresee what was coming next. Which was why I was at a complete loss right now... I literally had no idea how I was supposed to react or respond to what I'd just heard, to what I'd just been told.\n\nThe rug had been pulled from underneath me in the worst way and I was in a state of free-fall. \n\nEven good surprises made me feel uneasy, so this horrible turn of events had me reeling in pure shock, disbelief and panic. With rapid-fire swiftness, my brain sifted through the weeks that led up to this night. But no matter how hard I tried to make sense of what was happening, I just couldn't... I was getting dumped? I darted my eyes around our all-time favorite restaurant. In vain, I searched the classy, textured walls for answers that obviously weren't there. Why was this happening? The two of us were just supposed to be having a nice dinner out, we weren't supposed to be breaking up. \n\nShe and I had been in a stable relationship for five-plus years at this point, so a surprise proposal would've made so much more sense than a surprise breakup.\n\nFor the first time since I'd left my parents' house, I felt myself leave my body. My consciousness floated away from my physical form. So, like a voyeur, I watched the rest of the scene unfold. Two well-dressed, blond-haired women were sitting across from one another. They would've looked just like every other couple enjoying their meals if the younger of the pair wasn't visibly shell-shocked, stunned, sad. Underneath the ambient lighting, her hazel eyes were shining with unshed tears. Her pink lower lip was quivering as she fought the urge to cry, fought the impulse to crumble into pieces. She looked so, so gutted that if it were within the realm of possibility, I would've given her the tightest hug ever. I would've wrapped my arms around her in an attempt to comfort her, but I couldn't do that. \n\nI couldn't hug myself. \n\nLike earlier in the night, I was still hearing every word my now-ex was saying clearly. I was listening to all of the reasons she listed to justify her choice to suddenly end our relationship. It was only my point of view that had shifted, I was no longer sitting in front of her. I'd just begun watching the scene unfold from someone else's eyes. The out-of-body experience had essentially demoted me to a mere observer of my own breakup. It had been a long while since the last time this had happened, but once again, I perceived it as a terrifying and unavoidable response to stress.\n\nA bodily reaction to an emergency situation\u2014similar to how the airbags of a car deployed after a crash, a collision.\n\nHearing a series of statements that began with 'I love you' then continued with 'but,' my already pale face lost more and more color. I felt like the biggest idiot on the planet. For fuck's sake, I'd even spent like ten minutes fixing my hair and touching up my makeup while I was talking to Max earlier. Basically, I'd spent time and exerted effort to look my best while getting my heart broken.\n\n\"You know I'll always love you, right?\" She asked. And in response, I just began to shake my head, no. My shoulder-length, strawberry blond hair swayed with the motion. 'Always' was just another word in a long list of lies, just like 'forever.' \n\nAfter a few stretched-out minutes of heavy silence, I inexplicably returned to my body and then I finally lost all control. To my horror, hot tears began to leak from my eyes. My mascara started to run down my cheeks in dark tapered tracks as I struggled to keep whatever little composure I had left. I wasn't sobbing, but if we were anywhere with even a modicum of privacy, I knew I would've been. My ex-girlfriend kept repeating how sorry she was, but all of her apologies rang hollow... As far as I was concerned, her words no longer carried any weight or credibility. By breaking up with me, she not only broke my heart but also my trust.\n\nWhen she finally accepted that I wasn't going to say anything of value, she paid for the bill then offered to drive me back to what used to be our shared apartment. Graciously, she was letting me keep the place for the remainder of the lease. As polite as possible (so not very polite at all), I declined her offer to drive me home and booked a ride for myself. Thankfully, I didn't start crying in the backseat of some random ride-share driver's car. I saved the rest of my tears for the shower, for when I was all alone. \n\nSo, under the jets of hot water, I sat naked on the wet floor. I hugged my knees to my chest and cried. I couldn't stop repeating all of the reasons my ex had given for ending our relationship. They replayed on a loop in my mind, ridiculing me for not being good enough. According to her, we'd just grown irreparably apart and she no longer believed that she could give me what I needed or wanted. Basically, she just reworded the age-old excuse of: 'It's not you, it's me' in more than a dozen different ways. All of her statements seemed so well-rehearsed, I couldn't stop wondering when she'd made the decision. How much time had she given herself to acclimate to this new reality before finally pulling the trigger? Weeks? Months? The whole thing was so, so unfair... She took time to prepare herself for this new normal of ours, while I'd been completely blindsided by everything. The two of us had even slept on the same bed last night after she got home from her shift at the hospital! So, this whole thing seriously came out of left-field as far as I was concerned.\n\nI tucked my knees under my chin and hugged myself even tighter, my whole world had just been torn apart and I had no idea how I was going to fix it.\n\n<center>. . .</center>\n\nWhen I was still in school, my preferred way of studying was to write all important information on index cards. And in case I found a lesson particularly difficult, I made multiple sets of review cards for it. So, in the week that followed my unexpected breakup, I reverted back to student-me. But instead of academic subjects, I was dissecting my failed relationship and its recent demise. My messy penmanship filled ruled card after ruled card with notes about my ex-girlfriend. I had no idea if what I was doing was helping me in any way, shape or form, but I was desperate to make sense of what had transpired. \n\nIn line with my return to academics, for the first time ever, I was 'playing hooky' or whatever the equivalent of the phrase was in the adult world. I'd sent a vague email to my direct supervisor about 'personal matters' and copy furnished it to everyone on my team. In the message, I'd also informed all of them that I'd be working from home for the next week and a half. Given my virtually perfect attendance record, I'd assumed no one would question the vague excuse I gave.\n\nAnyway, back to more pressing concerns... I knew mine and my ex-girlfriend's relationship was no longer what it used to be, no longer what it had been when we first met. But that was par for the course, right? All relationships were altered by the passage of time. That was just an inevitable occurrence. Also, our relationship had never been one of fiery passion. It had never been a whirlwind romance. Which was why I was still struggling to accept 'we'd grown apart' as a valid reason to turn our lives upside down, to rip my world inside out. Sure, from the jump, I'd been very absorbed by my career, but I could've said the exact same thing about her! \n\nShe was five years older than me and we'd actually met while she was in her last year of med school. So, it wasn't like we ever had a surplus of quality time together. Not even in the very beginning. But I never took that against her... In fact, I'd always supported her through everything. Whenever she'd bailed on me in the past, I never resented her for it. I'd just chalked it up as another sunk cost that came with dating someone who'd taken the Hippocratic oath. Seriously, what more could I have done to be what she wanted / needed? \n\nGiven that our relationship had a slow and steady start, I really felt like I was going through a 'whirlwind breakup.' No matter how hard I tried to rationalize things, to piece together what had led to the untimely end of everything I knew, I just couldn't. I painstakingly recalled as much of our recent history as possible in the hopes that doing so would've uncovered some sort of clue I might've missed. Losing her, losing us had basically bulldozed my five-year plan as well as decimated my ten-year plan. I didn't know how to even begin coping with the acute uncertainty that had sprung up out of the blue. The unwelcome, dark unknown that had invaded all aspects of my life. \n\nWith each passing second, I felt less and less like myself, less and less like who I was supposed to be. \n\nWhen my ex-girlfriend and I were building our entire life together, weren't we building our future, too? Or were we just wasting each other's time? A non-stop tornado of questions swirled through my mind, but no matter how much it demanded for answers, it was only met by silence. \n\n<center>. . .</center>\n\nA week after doomsday (aka the breakup), I finally informed my five best friends that I was single in a cryptic but succinct message to our group chat. I also told them I was doing well and not to worry about me... But of course, they all ended up coming over to my apartment as soon as possible. They even came bearing gifts in the form of pints of ice cream and bottles of hard liquor. For the briefest of moments, when they'd first arrived, I felt incredibly anxious. I was worried about how pathetic and pitiful I looked with my bloodshot, puffy eyes. The last time we'd all hung out, which was less than a month prior, they were all making jokes about how I was definitely going to be the second one among us to tie the knot. Which quite frankly made the most sense since I'd always been called mature for my age and my then-girlfriend was in her early thirties.\n\nThankfully, the creeping anxiety faded almost as soon as it popped up though. The six of us had been friends for years, ever since we'd all met at a Pride Run event in our city... They were my chosen family, so I didn't have to pretend I was okay. Not in front of them. And to be completely honest, having them around meant the world to me. Their presence really made me feel more at ease. And I wished they never had to leave me alone, but we were all adults with our own obligations... So, way before I was ready to lose their company, they had to return to their own lives and I had to return to the mayhem that was mine. I felt my stomach start sinking once everyone was gone, once I was all alone with my thoughts. It was hard to explain, but although I'd lived in my apartment for more than two years already, the entire space just felt weird. Like it was meant to be a home for two people... So, half of everything there felt alien to me? Or maybe half of everything there made me feel like I was an alien? Whichever was more accurate.\n\nEven though it was my home, I really felt like a trespasser... It was as if all the inanimate objects around the space were mocking me, cruelly reminding me of all that I had lost. The longer I stared at the lifeless things that shouldn't have had any power over me, the harder it got for me to breathe. I knew that the awful feeling pressing against the walls of my chest was a panic attack gearing up to erupt at any moment. My heart started to race and my vision started to blur as tears filled my eyes yet again. On my L-shaped couch, I braced myself, knowing that the wave of anxiety was going to hit at any second. One, two, three\u2014 \n\nMy phone started ringing. The generic ringtone cut through the quiet air and pulled me back before I lost myself. I reached out for the buzzing gadget on the coffee table in front of me. I glanced at the time on the upper right corner of the screen before I refocused on the name flashing. Max. It was past eleven o'clock at night and everyone at work knew I was taking time off... She had no reason to be calling me. \n\n\"Hello?\" I picked up. I cleared my throat, realizing how hoarse I sounded. \"Max?\"\n\n\"Kelsey, hi,\" she greeted me back. \"Hey.\" \n\nI waited, but she didn't say anything else. \"Uh, hi? What's up?\"\n\n\"Nothing really, I just wanted to check on you.\" \n\n\"Oh.\" I pressed my lips together. \"I'm okay,\" I lied. The two of us didn't really share secrets with one another. \"Thanks for asking?\" It was the most confused-sounding thank-you I'd ever uttered in my life. \n\n\"Cool, that's great, awesome,\" she replied and I furrowed my brow. Although she only said four words, it was enough for me to note that she sounded nothing like her usual self... So much so that I had a hard time picturing how her face looked like. As far as I could recall, I'd never seen her nervous in person. \"You'll be back at work next week?\"\n\n\"Yeah, uh, Wednesday,\" I answered her. \"Is something wrong?\"\n\n\"No, no,\" she rushed out. \"I really just called to ask how you're doing.\"\n\n\"Why?\"\n\n\"Why not?\" She shot back then released a strained chuckle. \"I mean, it's really not like you to miss more than a week of work... So, yeah, just wanted to make sure nothing's wrong.\"\n\n\"Oh, okay,\" I replied, still sounding pretty unsure. \"I'm all good, thanks.\"\n\n\"Yeah, no problem. Night, Kelsey.\"\n\n\"Good night.\"\n\nI ended the call, but I continued to hold on to my phone. I stared at the dark screen, utterly confused by the conversation I just had. Had I unknowingly entered a parallel universe where Max and I were friendly with one another? Well, it wouldn't have really surprised me if I did... It would've just been yet another curveball life threw my way. Why stop at just one, right? \n\nOn the upside, the perplexing call served as a great distraction and I was at least breathing normally again.\n\n<center>. . .</center>\n\nAlthough my frosted glass office had been allocated to me a couple years back, I never felt like I needed it. I had no issues whatsoever with working in one of the many open workspaces outside, so I didn't regard it as a 'necessity.' However, since Max was eventually given an office, the big boss upstairs thought it was fitting that I had one, too. Today though... \n\nToday, I was thankful I had that private space. An alcove all to myself, away from prying eyes. Usually, I left my door open. But since I was trying to hide from everyone's stares and questions, I made sure it'd been securely shut the whole morning. I couldn't really blame my colleagues for their curiosity, I was MIA for a while, which was extremely out of character. But I'd never really discussed personal matters at work before. And I definitely wasn't about to start doing so now that my life was in total disarray. I figured it would've been less awkward if I just avoided talking to people entirely. At least until I was back on my A-game.\n\nMinutes felt like hours or hours felt like minutes. I wasn't sure anymore. Outwardly, it looked like I was busy, reading whatever was on my computer's screen, but in actuality, I was just staring at nothing. I wasn't even thinking about anything other than how tired I was and how much I wished I was back in bed. I had so many things I needed to finish... Well, 'start' would've been the more accurate verb. I had a menacing pile of things I had to do that was so high, I didn't even know how to begin tackling everything.\n\nThe harder I tried to come up with a plan, the more daunting and pointless it all seemed.\n\nThe sound of knuckles knocking against the glass outside jolted me from my extended state of stupor and self-pity. I cleared my throat before calling out to whoever it was to come in. I checked the time. I was surprised to see that my lunch break was long over. How was it mid-afternoon already? I quickly minimized the page on the screen, which had remained blank for hours now. Although I knew no one else could see it, the evidence of how unproductive I was being made me feel shameful.\n\n\"Hey, I heard you were back.\"\n\nI felt a pit form in my stomach as soon as I heard Max's voice. I tried not to wince as I locked eyes with her. She was standing by the door, her arms folded in front of her. Per usual, she was dressed to the nines. She was wearing a sleeveless dark maroon jumpsuit that was purposely cinched at her slim waist. On her feet were office-appropriate ballet flats that probably cost way more than the entire outfit I had on. Her long, naturally straight brown hair was tied up in a high ponytail. She'd always smelled like how she looked\u2014rich. The perfume she wore daily was a distinct blend of amber, vanilla and wood. The fragrance had always been noticeably sharp but not overpowering. Not even in the small glass box that was my office. ",
        "\"Hi, what's up?\"\n\n\"Nothing, just wanted to check in with you again... This time, in person,\" she replied with a shrug. \"What happened?\"\n\n\"To?\" I played stupid. I wasn't expecting her to stop by and I really wasn't expecting her to seem so concerned. I wondered self-consciously if it was a reaction to how I looked... Could she somehow tell I was falling apart? Was that why she was being uncharacteristically interested in my well-being? It was the most insecure I'd ever felt in my life. \n\n\"You.\" She stepped further inside. Without an invite, she sat down on the chair in front of my desk. \"Your email was pretty ominous... Like the phrase 'unexpected personal matters I need to handle' is so vague, my best guess was you were going to kill a coven of vampires, avenge your kin or whatever.\"\n\n\"What?\"\n\n\"Mm, 'Kelsey, the Vampire Slayer.' Has a good ring to it, don't you think..?\"\n\n\"Max...\" I shook my head, confused. \"What?\"\n\n\"Sorry, I don't really know where I was going with that.\" It took me a second to notice she was nervous, just like during our unexpected call a few nights back. I squinted at her, studying her face as she chuckled shyly. \"I actually don't know why I'm here.\"\n\n\"Okay...\"\n\n\"I just wanted to ask how you're doing. Like you don't have to tell me what's up or whatever but... Are you okay? Mm, you don't have to answer that either, I was just\u2014\" She pursed her lips and swallowed. \"I was worried.\"\n\n\"About me?\" Since she'd started working in Acanthis, the two of us had countless conversations about a wide variety of topics, but none of them had ever played out like this one. This was uncharted territory for us. We'd never delved into personal matters before. \n\n\"Yeah.\"\n\n\"Why?\"\n\n\"Why not?\"\n\nThe melodramatic, hurting part of my brain wanted to retort with a: 'Because no one cares about me!' I managed to stop myself from letting the embarrassing word vomit slip out though. Max and I weren't friends, she didn't deserve to get roped into the burning hellscape that was my life. \"I'm fine. No need to worry.\"\n\n\"You sure? 'Cause if you need someone to talk to, I'm\u2014\"\n\n\"I said, I'm fine,\" I stressed sharply. Seeing her wince and look away immediately made me regret my tone, so I let out a halfhearted chuckle. It sounded flat, dull, but it was all I could come up with. \"I have everything under control.\" \n\nIf distorting reality was as easy as distorting the truth, life would've been way more manageable.\n\n<center>. . .</center>\n\nI'd made zero progress in a big presentation scheduled for the next day. No matter how hard I tried to come up with something, anything, I just kept drawing blank after blank. I'd even read through my old work earlier, hoping that doing so would spark something in my stubborn, hibernating brain... But no such luck. So, although it was obviously going to be counterproductive, I decided to head out of my apartment for a late-night run. I was desperate enough to think that maybe, just maybe, the cold night air would shake something loose in the mess of dust bunnies and cobwebs that was my mind. \n\nEven if I used to run all the time when I was in college, I admittedly hadn't made time to properly do so in recent years. My current exercise routine consisted mostly of forty-minute stints on the stationary bike in my living room since I could respond to emails or read through reports while I pedaled. So, even if I'd loved running since I was a kid, 'working while working out' just appealed way more to my workaholic nature. But tonight..?\n\nTonight, I was running as if I hadn't taken a long, long break... The rubber soles of my shoes were angrily smacking against the concrete sidewalk as I upped my speed more and more. I was already breathless, but I stupidly kept trying to go faster and faster, pushing myself to the brink in mere minutes. I was clearly tempting fate and given that the universe hadn't been on my side as of late, that was a very poor decision on my part... Predictably, I tumbled to the ground soon enough. I only saved my face from crashing into the pavement by sacrificing the palms of both my hands. The hard impact ripped a few gashes through my leggings and skinned both my knees. My eyes began to burn in response to the discomfort, the aching, but I sunk my teeth into my lower lip and told myself not to cry. I wasn't a little kid, flesh wounds weren't a good enough reason to shed tears.\n\nAn older, kind-looking lady helped me up and asked me if she needed to call for help. I hurriedly shook my head, no. As someone who'd had her fair share of tumbles and scrapes, I knew that my worst injury was my bruised ego. I flashed the nice stranger the best smile I could muster as I thanked her. I then started limping back toward the direction of my empty apartment. \n\nIt was safe to say my spontaneous nighttime escapade hurt me more than it helped me. \n\n<center>. . .</center>\n\nBelieve me, more than anything, I wished that what I'd said to Max in my office last week was the truth. I would've sold my soul to 'have everything under control.' But the statement was so, so untrue. It was tantamount to me saying the sky was purple and polka-dotted. I was just lost\u2014plain and simple. As if I'd been blown so, so far off course... I could no longer perceive a path back to where I was supposed to be.\n\nI said a little prayer as I opened the door to one of Acanthis' meeting rooms. I knew my hopeful wishing was futile though. Nothing short of a miracle could've saved me now. I had nothing to say or show to anyone during my presentation... Which was basically career suicide since all of my higher-ups, including the CEO himself, were going to be in attendance today. I was a bit surprised to see Max already in the room. Her laptop was wirelessly connected to the projector and she was going through her prepared slides. I glanced at the screen projection. At least one of us had something to show... Thank god the whole meeting wasn't going to be a complete waste of everybody's time.\n\n\"Good morning,\" she greeted me. Her brown eyes merely glanced at me for a few seconds before returning to her laptop's screen. She was so fixated on what she was doing, it reminded me of how I usually was, of how I should've been. Not for the first time, I wondered if I was ever going to get back to who I used to be. \"Wanna just Airdrop me your presentation? It took me a second to get this running, so I'm worried that if we need to switch laptops later, something's gonna go wrong again.\"\n\n\"Can't.\"\n\n\"What? Why not?\" Right away, her full attention was on me. \"Uh, do you wanna use your computer 'cause sure, I'm okay with that. I just need to copy my\u2014\"\n\n\"No, I mean, I don't have a presentation,\" I clarified before sighing. It was embarrassing, but admitting my failure to her was basically child's play... Especially considering that I was going to have to tell everyone else the same exact thing in a short while. Time was ticking away. \n\n\"Oh. Where is it?\" I shrugged my shoulders before sitting down on one of the empty chairs. \"Email?\" She pressed for answers. \n\n\"No, like I didn't make one... Look, don't worry about it, I'll explain things to your dad as soon as he gets here. He'll probably fire me, but who cares? C'est la vie or whatever, right?\"\n\n\"Kelsey... What?\"\n\nThe way she said my name, as if she felt sorry for me, made me slump lower in my seat. Shame was coursing through my bloodstream. She started to interrogate me about what I meant, but before I could say anything else, the door opened and her dad walked in. I took a deep breath then flashed my boss a nervous smile.\n\nI stood up, ready to confess my shortcomings and ineptitude to him, but I wasn't given the chance to...\n\nFor reasons I couldn't fathom at all, Max started lying to her father's face to save me. Although I didn't ask her to, she took the rap for me. \"Um, Dad, full disclosure? I actually didn't get to finish my presentation...\"\n\nI blinked, failing to understand what I was hearing. I looked between the two of them, completely lost. I was beginning to really consider the possibility that I'd entered an alternate universe. This couldn't have been real, could it? Yeah, I was praying for a miracle earlier, but this turn of events was so unlikely, so inconceivable... It left me stunned. I listened to them tensely discuss matters for a while before I finally remembered how to put words together. I tried to insert myself in the conversation. \"Sir, actually, I'm the one\u2014\"\n\n\"Kelsey's the one who came up with the idea that we should work together,\" Max cut me off before flashing me a look to shut the hell up. \"That's why we're both here already, she's letting me present today. I just figured it was the least I could do since she'd basically planned out the whole thing...\"\n\nI wasn't a saint. Growing up, I'd lied to my own parents a bunch of times, but Max was bending the truth so smoothly. It was basically a master class in parental deceit. Each time I tried to get her to stop lying for my benefit, she just ignored me and soldiered on. I'd already known she was quick on her feet, but this was wild. With no prep time whatsoever, she'd come up with an entire narrative that not only painted me in a much better light than I deserved but also saved me from being found out as a fraud. By saying that I'd allowed her to assist me, she was going to still be able to deliver her presentation. Which, mind you, I knew absolutely nothing about.\n\nWhen her dad began saying how disappointed he was in her, I felt a fresh dosage of guilt fill my system. I'd never heard him talk like that before\u2014to anyone. And for the first time, I felt genuinely sorry for Max. My boss had always been a bit harder on her than everyone else, but I figured that was just a byproduct of the fact that they shared DNA. The way he was bringing up unrelated past events when she'd supposedly let him and her mother down was beyond brutal though. It was too much. And I knew full-well that if he found out that I was, in fact, the one who'd failed to do her job, he wouldn't have berated me the same way. So, I couldn't remain silent anymore. I couldn't let Max take the undeserved verbal beatdown any longer. \n\n\"Sir, wait, no. The truth is\u2014\" They both turned, two sets of identical brown eyes landing on me. Before I could confess though, our colleagues started entering the room.\n\nIt was too late.\n\n\"Maxine, we'll discuss this more later, okay? With your mom.\" My boss told Max pointedly. His features were cold. He then shifted his attention to me. \"Kelsey, while I appreciate you letting my daughter piggyback off your hard work, you're under no obligation to do any of this, okay? So, just to make sure, are you really on board with this or did she just force you into it?\"\n\n\"I\u2014\" I opened my mouth and Max flashed me another loaded look. I sighed in defeat before plastering a fake, megawatt smile on my face. \"Yeah, of course, I am, sir. I'm actually really looking forward to working on this with her. We'd discussed a few things earlier this morning and she has a lot of good ideas. Great ones.\"\n\nThe highest of praises wouldn't have been enough, but there wasn't much I could've said in that moment. We were pretty much still in the eye of the storm, so although I wanted to come clean badly, I just couldn't. At least not in front of our current audience of five Acanthis executives. If I did, it would've reeked of unprofessionalism, and reflected badly on both Max and I. There was always afterwards anyway... So, with a heavy heart, sinking stomach and conflicted conscience, I played along with Max's impromptu plan.\n\nI allowed her to take the lead.\n\n\"Good morning, everyone. I hope you're all doing great this beautiful Monday,\" Max began speaking, addressing the room. \"Full disclosure, Kelsey's the one who came up with most of the things I'll be discussing, but the two of us decided to work on this one together. We just figured that since we're already so great apart, just imagine how much better we'd be together?\" She grinned and paused for laughter. \"Okay, so first of all, to close the deal, we believe Acanthis needs to...\" \n\nOozing with natural charisma, my brand-new partner easily commanded everyone's attention. Usually, whenever she and I were scheduled to present our pitches for a potential client, I was too preoccupied with my own stuff to focus on what she was saying. Not today though. Today, I was concentrating on her and on every syllable that left her pouty lips. \n\nShe was my talking, breathing deus ex machina.\n\nUnsurprisingly, the other meeting attendees ultimately approved of the presented plans. Due to personal differences, there were certain directions I wouldn't have taken, but all in all, Max had all the bases covered and everything looked great. Foolproof from start to finish. In the end, my boss congratulated us both for a fantastic job. He then praised me specifically for all my hard work and I wanted the ground to swallow me up.\n\nI'd never taken credit for someone else's work, so I felt absolutely disgusted with myself.\n\nAs soon as Max and I had been left on our own, I let out a huge sigh of relief. Though the whole debacle lasted less than forty-five minutes, I felt like I'd aged a couple of years since I'd first walked through the door. \"What the hell just happened?\" I asked, disbelief and confusion evident in my shaky voice. The gravity of the situation was beginning to hit me. \"Why'd you do that? We need to tell your dad the truth.\" \n\n\"No,\" she disagreed with me, shaking her head. \"We don't have to tell him anything. No one has to find out.\"\n\n\"Everyone's going to find out!\"\n\n\"How? As long as neither of us says anything, no one's gonna know. Plus, I don't see what the big deal is... The both of us will be working on things from now on anyway, so who cares if I had to carry us through the first part?\"\n\n\"But I didn't help at all... You came up with the whole thing! And worse, your dad was getting so, so mad at you when you did nothing wrong,\" I replied. Echoes of the hurtful father-daughter conversation I'd been forced to listen to but not participate in came back to mind. She was owed an apology, a big one.\n\n\"So? I don't care about that,\" she said dismissively. \"And you shouldn't either.\"\n\n\"But he needs to say sorry.\"\n\nShe let out a dry laugh. \"He's never going to apologize to me... Again, you don't have to worry about that. He rips into me all the time. It's whatever, I swear.\" \n\n\"Max\u2014\"\n\n\"Look, you're probably the only person under the age of forty that my dad actually respects,\" she said matter-of-factly. It was a very flattering sentiment, but hearing it just made me feel faker than I already did. \"I don't want you to lose all of that well-deserved respect just 'cause you're going through a rough patch right now... You've worked too hard for that to happen. So, yeah, I'm here to help however I can.\"\n\n\"But why?\" I demanded. I should've made more of an effort to sound a lot nicer, especially since she'd just heroically saved my ass, but I was really confused. Given the way I'd treated her in the past, she owed me less than nothing. \"You hate me...\" I reminded her softly. \"Why are you helping me?\" \n\n\"Wait, what? I don't hate you.\" She was looking at me like I was crazy. \"Not at all. Where'd you get that idea?\" \n\n\"Well, we always fight, so\u2014\" \n\n\"Kelsey... Sure, you and I argue a lot over stupid work BS,\" she cut me off. \"But I wouldn't call that fighting and more importantly, I don't hate you. Trust me, I could never hate you.\"\n\nShe was being so, so incredibly and unexpectedly kind to me. I should've thanked her. That would've been the correct and socially acceptable thing to do... But like a loser, I just started crying (bawling, really). The rollercoaster ride of emotions I'd been on since I first woke up that wretched day had culminated in me full-on ugly crying. In front of someone I'd always perceived as my workplace rival, as my competition.\n\nIf anyone told me a few weeks prior that this mortifying situation was one I would find myself in, I would've asked them if they'd hit their head or something. Max got up from her seat, pulled me to my feet then wrapped her arms around me. Tight. Our height difference made it so that my face was pressed against her silky top. I half-tried to break away to make sure my runny makeup wasn't staining her clothes, but her embrace was too secure, too safe. So, I gave up, giving in and hugging her back. For a split second, I worried about someone walking in and seeing us, but we weren't really doing anything wrong.\n\nAnd frankly, it felt really nice\u2014she felt really nice.\n\nMinutes later, when we finally broke apart, I frowned. My eyes zeroed in on the smudges on her top. Mascara, blush, bronzer. \"Your shirt...\"\n\nShe glanced down at the multi-colored stain and laughed. \"Doesn't matter,\" she said, brushing it off. She moved back to her laptop, getting ready to pack her stuff up. \n\n\"Thanks, Max, I- you\u2014\" I stuttered before taking a deep breath. My heart was pounding. \"Thank you... For everything,\" I told her sincerely. It seemed grossly inadequate, but I really didn't know how to express just how grateful I was. She'd pretty much saved me from having to deal with another part of my life imploding. \"I don't know how I'm ever going to repay you.\" \n\n\"You don't owe me anything,\" she told me, smiling.\n\n\"No, I do. You have no idea how much this all means to me, how much I needed this. Thank you, I- uh\u2014just thank you,\" I repeated like a broken record. She quirked an eyebrow, probably noting how somber, how forlorn I sounded. I couldn't even play it cool, the distraught and exhausted expression on my face made it clear that I was barely keeping it together. \n\n\"Okay, tell you what... I'm pretty hungry, so you can take me out for lunch and then we'll be even. And if you wanna tell me what's wrong, I'd appreciate it. I might not be able to solve your problems for you, but I've been told I'm a great listener,\" she informed me with a proud grin. \"No pressure. We can also just have lunch and talk about the weather.\" She winked at me. \"Mm, spoiler alert though, the forecast this morning was: it's super stormy, but everything's going to be okay.\" \n\nDespite the sinking feeling in my tummy, I laughed. It was actually my first real laugh since I got dumped. I darted my eyes to the floor-to-ceiling windows of the conference room, double-checking. Like I expected, it was still sunny as hell outside, not even one drop of rain in sight. \"Okay, deal, but you're picking the restaurant and I'm paying.\" \n\n\"You got it.\" \n\nSo, for our lunch break, we left our building and went out to eat. Just the two of us. She chose a nearby pizza joint and during the meal, I opened up and she learned all about my breakup. About my personal life suddenly being shattered, leaving me in a disaster zone of broken promises, hopeless dreams and terrifying unknowns. I, on the other hand, learned about her love for brick-oven, thin-crust pizza... True to her claims, she was a really great listener. It felt good, cathartic to be able to talk so freely about all of the things that had been keeping me up night after night. Plaguing nightmare after nightmare. \n\nIt might've gone against my very nature, but although a budding friendship between Max and I was something unforeseen, it was something I was feeling increasingly grateful for. This plot twist / side story about the unexpected end of our workplace rivalry had given me a lifeline I hadn't anticipated but really needed. As I watched my new friend devour yet another slice of pizza, I silently wished for a time machine. I'd never been proud of how our very first conversation played out, but thinking about it now just made me so much angrier at myself. I thought about bringing up the first time we met, but I held back the apologies playing on the tip of my tongue... Saying sorry for something that had happened more than three years ago would've been far too little and much too late. ",
        "So, I just made a silent promise to myself that when it came to her, I'd stop at nothing to right my past wrongs.\n\n<center>. . .</center>\n\n\"From deep!\" Max suddenly yelled out as she lobbed a crumpled-up piece of paper in the direction of the waste bin in my office. \"Three!\" She cheered excitedly when she 'made the basket.' \"The buzzer beater drives everyone in the arena wild! The Maxes just won the finals!\" I bit my lip to stop myself from laughing out loud at her childish (but annoyingly cute) antics. Not only did she commentate on her so-called 'winning shot,' she even had the audacity to give her fictional paper-basketball team an actual name. \n\n\"Seriously, how did I not notice how weird you were before?\"\n\n\"Well, that's easy... You didn't want to be my friend, remember? Something about the nose ring I had back then?\" I opened my mouth to apologize, but she shook her head slightly. \"That's all water under the bridge though. We're good now.\" \n\nI still couldn't wrap my head around how quickly the last three weeks had changed the past three years when it came to everything I thought I knew about Max. All of my misconceptions about her had been swept away by all of the things I'd recently learned. The more I got to know her, the more I realized how much our personalities meshed and how much I enjoyed having her around. Her sense of humor and charm had me smiling way too often (my cheeks actually hurt sometimes). \n\n\"Yeah, I know we are... For what it's worth though, being a bitch to you all those years ago was a big mistake,\" I said sincerely. Given that she constantly helped me forget all about my problems, being honest with her was the least I could do. I wanted her to know I appreciated her. \"And I regret it a lot.\" \n\n\"Damn right it was a mistake,\" she agreed with a wide grin. Her eyes were dazzling. \"Just imagine how much better both our lives would've been if you didn't tell me to F off when we first met. The last three years would've been basically Monday-free.\"\n\nThe term 'Monday-free' made me smile. It was so spot-on. I liked it a lot.\n\n<center>. . .</center>\n\nI scanned the proposed itinerary attached to the email again and again. I read and reread it, over and over. I glanced at Max's excited face. I began to shake my head, refusing in silence because I was still processing the news. It'd been a bit over a month since she'd rescued me from ruining my career. And work-wise, everything was just so much better. Once the two of us had adjusted to our new cooperative dynamic, we'd easily found our groove and began playing off each other's strengths. At first, the other people in our department were thoroughly confused by the drastic change in our relationship. But since our cooperativeness directly translated to productiveness, no one really took up arms to question either of us about it. \n\nEach passing day made it more and more apparent to me just how much I'd avoided getting to know Max. I wasn't fully aware I was doing it at the time, but I now knew that I used to actively stop myself from even looking at her... As proven by the fact that prior to us becoming 'honest-to-goodness friends,' I had absolutely no idea how well-liked she was in our office. Every single morning, different people would stop her for a quick chat whenever she was walking by and every single time, she would give whoever it was her full attention. As well as the most radiant smile. I just assumed it was training, in a sense, since she was the sole heir of the entire Acanthis empire. \n\nOne day, the whole kingdom was going to be all hers. \n\n\"Well? Say something!\" Max requested with a thrilled grin, shaking me out of my stupor. She'd called me into her office as soon as she was done reading the email from our once-potential (now-actual) client. The message had actually been sent to the both of us, but she'd opened it up first. She was buzzing with excitement. If I weren't still in a state of shock, her beaming, blinding grin would've made me smile, too. \n\n\"Max, you have to be the one to go,\" I replied, steadying my voice. \"Not me... No way.\"\n\n\"You don't want to?\"\n\n\"Of course I do, but you should be the one. This is your project,\" I said, stressing the same old point she'd been brushing off from day one. Our new multi-national client had sent an invite to the 'primary handler' of their account to go on a three-week trip, scheduled to take place in a few months' time, to visit their two main company headquarters. A so-called 'immersive networking experience' that would span across two countries located in two different continents. Acanthis had funds, but in this modern day and age where digital meetings were routine, international trips were few and far between. During my five-year career, I'd only gone on four. Local trips, on the other hand, were frequent enough. \"Europe and Asia!\" I emphasized. \"You can't pass up on that\u2014not for me.\" \n\n\"Okay, first of all, thanks for the quick geography lesson, Columbus,\" she retorted, teasing me per usual. \"Second, you really need to stop calling it my project, we've both been working on it non-stop for like weeks now, so it's ours. I might've mapped out the original pipeline, but you've made a lot of improvements.\" \n\n\"But still, it's like your baby.\" \n\n\"Nah... This is just work, my baby has wings,\" she replied and I creased my brow. I had no idea what she was talking about. \n\n\"Wings?\" \n\n\"Never mind,\" she chuckled out. \"Look, as someone who has experienced the brutality of a long-term relationship ending... It's my professional recommendation that you take this trip and see a bit of the world. Take a breather... The change of scenery will be good for you, it's going to help you reframe everything.\" \n\n\"Wait... What do you mean you have experience getting out of a long-term relationship? You got dumped, too?\" I interrogated her, shocked and incredibly curious. \"Why is this the first I'm hearing about this?\"\n\n\"Uh, I didn't say anything about getting dumped,\" she corrected me, still grinning. \"But yeah, my last real relationship... I was with this girl for years. From when I was a sophomore in college up to when I was twenty-two\u2014like right up until I had to move back here.\" Her features took on a far-away look. \"We met while she was an exchange student in my school and we ended up doing the whole long-distance thing. As soon as I graduated, I moved to her country and we lived together for almost two years. The whole thing was really great... Until it was over.\" \n\n\"Wait. Girl?\" It was as if our conversation had a new surprise behind every corner. My head was reeling in response to the information overload. I was well-aware that we hadn't been friends for that long yet, but since we'd entered this new stage of our relationship, there'd been many talks between us that had nothing to do with work matters. We weren't confessing our deepest, darkest secrets to one another, but we no longer shied away from discussing personal topics. \"You're gay? Why didn't you say anything?\"\n\n\"Yup, proud, card-carrying member of the alphabet mafia over here.\" She sent a wink my way. \"Mm, I assumed everyone in the office knew I was a lesbian, I don't hide it. But I'm not really surprised you didn't... You and I haven't known each other for very long. We're still just acquaintances, right?\" \n\nShe was joking. Her light brown eyes were dancing as she spoke, but the accuracy of her last statement was sharp, loud. She knew as well as I did that even if we'd officially met years ago, I'd only started giving her the time of day recently. Guiltily, I wondered for the hundredth time just how much I'd missed about someone I spent pretty much every weekday with. All because I used to see through her. \"I'm so sorry.\"\n\n\"Hey, I'm just kidding, you have nothing to apologize for,\" she said again and I nodded even if I didn't agree. \"But wow, Kelsey, if you really had no idea I played on the same team as you, then I suggest scheduling a tune-up for your gaydar. I basically walk around like I'm in a Skittles commercial.\" \n\n\"A Skittles commercial? What does that even mean?\" I asked, chuckling through my confusion and she just shrugged. \"Anyway, believe me, I have a lot of questions about your mysterious romantic past... But let's table this topic for when we're not on the clock.\" She nodded her head, yes. \"You should go on the trip. I'll hold things down back here, but you have to go. You deserve it.\"\n\n\"Mm, we both equally deserve it... But you need it more,\" she argued. \"So, I'm ordering you to go.\"\n\n\"You're not my superior,\" I reminded her with a teasing smile of my own. \"You're not the boss of me, remember?\"\n\n\"Yeah, no, I know I'm not... But as your equal partner, I'm still ordering you to go,\" she repeated herself. \"Go have an 'Eat, Pray, Love' adventure or whatever. Traveling will do you wonders. You might even meet your next great love.\" \n\n\"I- I agree, not about the next great love part 'cause I'm definitely not looking for a relationship right now,\" I clarified, scrunching up my face at the idea of dating someone new. \"But how about you?\"\n\n\"What about me? I'll be fine... Well, I'll miss you, but I'm pretty sure I'll live.\" She dramatically placed her right palm over her heart and I quickly looked away, rolling my eyes. \"You do know I've grown pretty fond of our little talks, right?\" \n\nAnother thing I'd learned about Max early on was that she never shrunk away from intensity. She wasn't afraid to say whatever was on her mind. She was honest when it came to whatever she was feeling, through and through. The same couldn't be said about me, but I was trying my damn best to match her energy whenever possible. \"Yeah, same, you're pretty cool. I guess...\" \n\n\"Pretty cool? I'm great,\" she retorted cockily. I rolled my eyes again in a playful manner but didn't deny it. She wasn't lying anyway, she was great... And lightheartedly tooting her own horn was just part of how she carried herself, part of her charm. She was noticeably confident without being arrogant. She really had a knack for toeing that fine line between self-assurance and actual haughtiness perfectly.\n\n\"Okay, if you're sure, then I'll go... But only if you're 100% sure,\" I repeated and she replied with a resounding: 'Yes!' I smiled, beyond excited for what was coming my way. \"Thanks for this. I really appreciate it.\"\n\n\"You got it.\" \n\n<center>. . .</center>\n\nI released a long, drawn-out yawn as I rubbed my knuckles over my eyes. I was sleepy, but it was time for mine and Max's daily update. Every single day of my business trip thus far had been filled to the brim with long activities, new faces and site tours. I wasn't complaining though. No doubt I was tired, but I really liked it. The exhaustion weighing down my bones was the good kind, fulfilling. I felt incredibly blessed that I'd begun to feel more and more like the old me. \n\nMax was right, traveling was helping me a lot with putting things in perspective. \n\nSeeing new places, experiencing different cultures had reminded me of just how expansive the world was... And the idea of a boundless cosmos dwarfed the dilemma I was dealing with. Essentially, the trip was helping me 'make a molehill out of a mountain.' I'd also been using the time away from home to reminisce about difficulties I'd surmounted in the distant past, in my youth. Like my life was pretty much in pieces until I left for college... If I was able to make it through all of that turmoil as a kid, then I reassured myself that I was more than capable of getting my life back on track at twenty-six. I mean, countless people around the world kept chugging on after they'd had their hearts broken. \n\nHeartache didn't make me special.\n\nAnyway, I was on the second leg of my trip, so I was in the Far East. Which meant there was a fifteen-hour time difference between the hotel I was in and Acanthis' headquarters. People back home were just starting with their work day, but it was already past midnight where I was in the world... I pulled up the videoconferencing software on my laptop and joined the private meeting room. In seconds, Max's fully glammed-up face was displayed on the screen. We'd been on so many video calls at this point, but there were still times when how attractive she was caught me off guard. She was stunning. Clearly, our night-and-day difference wasn't limited to our time zones. It also spilled over to our appearances. But I was only 'seeing' her anyway, so I didn't feel the need to get all dolled up just to wipe off the makeup less than an hour later.\n\n\"Hi, how's my baby?\"\n\nWithout thinking, I replied. \"Sleepy... How are you?\" \n\n\"I'm good. But I kind of meant our project,\" she corrected me and I looked away from the camera, absolutely mortified. It wasn't even a Freudian slip on my part. My sleep-deprived brain just really wasn't functioning. \"Anyway, I'll make this as quick as possible, so you can get some rest, baby.\" \n\n\"Ugh, shit, sorry,\" I rushed out, blushing. \"Stupid time difference.\" I was incredibly embarrassed. My heart was beating rapidly. \"Forget that just happened. Please.\"\n\n\"Okay, okay, but I'm just messing with you, Kels,\" she said and I quirked an eyebrow. Most of my friends called me 'Kels,' so it wasn't a big deal or anything like that... It was just she hadn't used that nickname of mine before. I didn't call her out on it though, I didn't really mind.\n\nWhile Max and I were speaking, I heard someone enter her office. She excused herself as she stood up to properly address her unexpected, unscheduled visitor. I strained my ears to listen to the conversation playing out between her and another one of Acanthis' employees. The other woman's name was mentioned and I recognized that she was one of the recent hires from the accounting department... Which was a department located three floors away from ours. I rolled my eyes in response to all the flirty statements followed by high-pitched giggles. Someone was obviously crushing on my partner and wasn't afraid to lay the compliments on thick. \n\n\"Hey, sorry about that...\" Max said to me once she was back at her desk. \"Where were we?\"\n\n\"The office Wi-Fi is running, right?\"\n\n\"What?\" She knitted her eyebrows together. I watched her pretty eyes glance at the corner of her screen. \"Uh, yeah, seems like there are no problems with the connection. Why? Am I blurry or something?\"\n\n\"Then why couldn't she just send you an email? Like did your little five-minute conversation have to happen in person?\" My line of questioning made her chuckle. \n\n\"Careful. After the 'baby slip-up' earlier, if you keep talking like that, I might just start thinking you're jealous or something,\" she warned jokingly. Her perfect teeth were on display as she beamed at me. \"I think she just wanted to stretch her legs... A quick break from the monotony or whatever.\"\n\nI rolled my eyes. I wasn't jealous, like not at all. \"Jealous of her? Why would I be? But I agree with you, she probably wants to stretch her legs... The question is whether or not you're willing to help her with that,\" I teased in an attempt to shine the spotlight elsewhere. \n\n\"Kelsey!\" She called out my name, laughing. The slightly scandalized look on her face made me giggle. \"She's actually really friendly. I'm pretty sure you two would get along.\" \n\n\"You know her well?\"\n\n\"Not super well... But we've had a few conversations. She usually shows up in the weekly office hangouts,\" she informed me. \"Not like a certain jet-setter I know.\" \n\n\"You go to those?\" The 'office hangouts' she was referring to were the company-wide, open-invite Friday drinking sessions in a bar near our building. A casual hangout spot frequented by young professionals who worked in the same area as us. The weekly off-the-clock gatherings were part of a team-building tradition that'd been in place way, way before Max and I joined the company.\n\n\"Not always, but I try my best to at least make it once a month. Quick catch up with the gang, you know? Great way to meet the new-hires as well.\"\n\n\"Oh.\"\n\n\"You should check it out, it's nice to be able to unwind with everyone,\" she invited me and I frowned. Unlike her, my circle of friends mainly consisted of people who didn't receive paychecks from Acanthis. \"If you want to, we can go to the one next Friday? I mean, jet lag permitting, of course.\" \n\n\"Um, I can't... I already have plans,\" I said quickly. It wasn't a lie. Me and my friends had literally just finalized the plans for a dual-celebration of sorts. It was going to be a bon voyage event for one of my closest friends who was moving out of state... But it was also going to double as an opportunity for another friend of mine to introduce her new blue-eyed, blond-haired bombshell of a girlfriend to our friend group. \"My friends have this thing.\"\n\n\"Oh, okay, no worries,\" she said, nodding her head. \"Maybe next time?\" I didn't say anything. \"Let's get back to business? I'm sure you're dying to get some sleep.\"\n\n\"Yeah, okay.\" \n\n<center>. . .</center>\n\n\"Knock, knock,\" I announced my presence as I popped half of my body through the open door of Max's office. My right hand was holding on to a small gift I bought for her. \"Guess who's back?\" \n\n\"Hey, you,\" she greeted me. She quickly put down the stack of papers she was browsing through, smiling at me. God, she was a sight for sore eyes. \"Weren't you supposed to have today off?\"\n\nShe was right. I didn't have to show up at work yet. But after I'd arrived late last night, I wanted nothing more than to leave my stiflingly silent apartment. So, here I was, back at the office a day sooner than I was supposed to be, in search of a meaningful distraction. Particularly one in the form of a leggy brunette whose smile could brighten up any room. \n\n\"Ouch. Not happy to see me?\"\n\n\"No, no, don't get me wrong. I'm ecstatic you're back early,\" she said as she hurriedly got up from her desk chair. \"Come here.\" I helped close the gap between our bodies. She pulled me into a hug that was a trifecta of amber, vanilla and wood. \"How was the flight?\" \n\nBefore I actually wanted to, I broke away from her embrace. I shot the still-open door behind me a cautious glance. I didn't want anyone to ask why Max got a whole ass hug, while everyone else I'd run into earlier only received quick waves hello. \"Good, good. Slept the whole time, gotta love red-eye flights.\" \n\n\"Wait... Honest question, did you get shorter or something?\" She asked as she made her way back to her seat. She gestured to the empty chair in front of her desk and I sat down, too. \n\n\"Mean.\" I glared at her, sticking my tongue out for a second. \"I got you something, by the way.\" I placed the gift bag on her desk and she opened it up. \"I saw it in the airport and I thought of you.\" \n\nShe pulled out a box containing the designer perfume she wore. \"Oh wow, Kels, this is so thoughtful. Thanks!\" \n\n\"Yeah, well... I wouldn't have gone on the trip if it weren't for you, so I wanted to bring you back something special,\" I explained. \"I got it right, right? That's your scent?\" Of course I already knew the answer. \n\n\"Mhmm, I've actually been using this stuff since I was nineteen,\" she told me. \"Aw, this is really nice, thank you.\" \n\n\"You're super welcome,\" I replied. Her smile was something else. \"So... How've you been?\" I asked as if we hadn't kept contact pretty much the entire time I was away. \n\n\"Can't complain, everything's been pretty calm around here,\" she answered with a shrug. \"I'm actually not working on Acanthis stuff,\" she informed me while making an adorable shushing gesture. \"I'm going through some documents my mom sent over... She has another big charity event coming up in like six months, so I'm trying to help out as much as I can with the prep work.\"",
        "\"Aw, that's nice. I really like your mom,\" I said through a yawn, making sure to cover my mouth with my hand. I placed my elbows on her table then rested my chin on my forearms. Apparently, my groggy brain had forgotten about all the other adjectives in the English language. \"She's nice.\"\n\n\"Yeah, she is nice, isn't she? I really like her, too.\"\n\nI spent majority of the day in Max's office, just lazing around and bugging her. Technically, I'd been given the day off, so I figured as long as she wasn't busy, the two of us could hang out and just chat in good conscience. We'd talked eighteen out of the twenty-two days I was away, but all of the long-distance conversations with her were lackluster compared to face-to-face ones. I'd seriously never gotten close to anyone as quickly as I'd gotten close to her. Quite frankly, if I thought about it for too long, it scared me... But the thought of going through what I was going through without her terrified me even more. It was a secret I kept pretty close to my chest, but our interactions had become the best part of my day. Sure, my life was still a mess, but it was so, so much easier to drown out all of my worries in her company. \n\nI just found breathing more manageable whenever she was around (partly 'cause she smelled so good). \n\n<center>. . .</center>\n\nIt was Friday night, and my friends and I had been drinking at our favorite bar for a few hours. I was really trying my best not to stare, but I couldn't tear my eyes away from the lovesick, brunette and blond couple sitting in front of me for too long... Don't get me wrong, I was incredibly happy for my friend since she was absolutely radiating joy and warmth (like a really smiley, burning candle). But I was human, so I wasn't immune to envy. And I really wanted to be in her shoes, to feel how she was clearly feeling toward her gorgeous, blue-eyed girlfriend. The two of them just looked mutually obsessed with one another and it was adorable. \n\nThey were very clearly in the fiery throes of new love. \n\nIf it wasn't obvious enough, I wasn't a big fan of being single. And considering that I'd been in a relationship for the better part of my adult life, I could openly admit I wasn't very good at it. It wasn't that I wanted to jump into another relationship, I knew I wasn't ready for that yet... It was just that I was so sick of the loneliness. Wasn't it crazy that the absence of someone else was a heavy feeling? Or how sometimes, even silence could be loud? My non-stop internal philosophizing was a clear indication that I'd already drunk more than I should've. But vodka was water-colored, so it couldn't be that bad for you, right..? \n\n\"Drinks are coming!\" I was knocked out of my drunken musings by my friend's excited announcement. I noted how her new girlfriend's arms were securely around her as she was addressing our friend group. \"But we gotta go...\" \n\nI chuckled then smirked knowingly at the loved-up pair. They'd been increasingly touchy the entire night, so it was clear to everyone sitting at our table that the two of them were heading home early to 'do the nasty.' I may have been envious, but I was still glad... I knew the angsty backstory that had led them to where they were now, so without a doubt, they deserved many, many nights of wild sex. I quickly stood up and gave each of them a hug goodbye. \n\nSoon after they were gone and the aforementioned drinks had arrived, I downed my new glass of vodka then pointed at the bar. It wasn't even my turn to buy, but I wanted more alcohol in my system. I planned to stay for three more rounds at most and then I was going home. I was banking on my drunken state to make finding sleep a little bit easier.\n\nAt the bar, a good-looking, dark-haired woman struck up a conversation with me. \"Hi there.\"\n\n\"Hey,\" I replied before glancing back at the busy bartenders behind the illuminated counter. When I refocused on the stranger, despite how discreet she was trying to be, I caught her checking out my chest. Although my boobs were by no means huge, they were big enough in my humble, biased opinion. Each one was a bit more than a handful, so as a woman-loving-woman, I could understand the appeal of taking a look. The little black dress I was wearing also accentuated my cleavage (and ass) really well, so I couldn't exactly blame her for admiring 'the goods.' She quickly looked away and I grinned. She was cute. \"You having a nice night?\" \n\n\"Yeah, pretty good,\" she raised her voice to compete with the loud music and thumping bass blaring from the establishment's sound system. \"I actually asked one of your friends about what you were drinking, but her girlfriend kind of told me to fuck off.\"\n\n\"Really?\" I replied, amused. My friend's new girlfriend had been so, so personable to all of us the whole night. I was pleasantly surprised to learn that 'Goldilocks' had claws. My new acquaintance moved a little closer. It was clear that she was interested in getting to know me and I wasn't mad about it. I didn't have a lot of experience with random hookups, but I wasn't necessarily against them. The more I contemplated having a night of no-strings-attached sex, the more appealing the idea became. In my tipsy state, it seemed like it would've been a great (albeit temporary) cure for my loneliness. Like if only for a night, I could take a break from getting fucked by life to get fucked for real. I nibbled on my lower lip, feeling excitement bubble up in my tummy. Christ, if the mere thought of fingers that weren't my own being inside me was enough to turn me on, then I clearly needed to sleep with someone. \n\n\"So... What are you drinking?\"\n\n\"I\u2014\" I looked at the friendly woman again. She was attractive but... She wasn't who I was looking for. Her hair was a different shade of brown, while her eyes were a different color entirely. She was also standing close enough for me to note that although her perfume smelled good, it wasn't the familiar mix of scents I was looking for. \"I actually just got out of a long-term relationship, so I'm just chilling with my friends tonight.\" I kept my tone as friendly as possible to let her down easy. It was a white lie, but she didn't need to know that my last relationship had actually ended months ago. \n\nShe also didn't need to know that I wanted the same kind of fun she was looking for\u2014but just with a different person.\n\n\"I see. No problem, I get that,\" she replied, nodding her head. \"Well, have a good night and take care.\"\n\n\"Thanks, you, too.\"\n\nRight after she walked away, I pulled out my phone to check the time. I abandoned my quest for more alcohol and returned to my friends. I told them that the jet lag was hitting and gave all four of them lingering kisses on the cheek. I then hugged my friend who was moving away super tight, for super long. I also told her how much I loved her and how much I was going to miss her. I then tipsily gave everyone another round of sloppy, platonic kisses (this time, on their foreheads) before booking a ride on my phone. I made my way out of the packed bar. I wasn't heading home though... For the first time since I'd started working for Acanthis, I was going to make an appearance in one of our company's Friday night get-togethers. \n\nMy decision was uncharacteristically spontaneous and ill-conceived, but I just really wanted to see Max. \n\n<center>. . .</center>\n\nI felt like I'd made a big mistake as soon as I entered the establishment. In contrast with the place I'd just left, this one was a lot brighter and its dress code was a lot more casual. Somehow, in my formfitting black dress, I simultaneously felt overdressed and naked. I waved shyly at my officemates. I would've socialized with them more, but I decided against it since I could feel some of the guys staring at all of my exposed skin. I tried not to think about it too much though, knowing that my pale self would redden and betray my discomfort. I quickly scanned the room, wondering if Max had already gone home. With each passing second, the whole thing felt more and more like a mistake. I was about to leave when my eyes landed on a tall figure leaning against a wall, a beer bottle in her hand. \n\nIt was Max. She was talking to the 'friendly woman from accounting.' And they were standing a bit too closely, in my opinion. There was more than enough free space around them. Their faces didn't need to be just inches apart. Suddenly, as if she felt the weight of my stare, she looked in my direction. We locked eyes. She squinted at me, her mouth dropping slightly. She tilted her head and blinked, as if she was unsure whether or not I was a mirage. She hastily crossed the room, weaving her way through different groups of people. Her long legs made quick work of the distance between us and in seconds, she was standing right in front of me. \n\n\"Hi! I didn't know you were coming tonight,\" she said. Her eyes briefly traveled up and down what I was wearing. \"Damn, Kels...\" I felt myself blush but not because I was uncomfortable. I could appreciate being appreciated (especially by her). I would never show up to work or any work-related event in the outfit I had on, so she hadn't seen me dressed this way before. \"You clean up good. Wow.\" \n\nI leaned in closer, opting to kiss her on the cheek instead of greeting her with words. It was the first time my lips had ever touched her soft skin, but in my buzzed state, it didn't seem like a big deal... I'd been innocently kissing all my friends the whole night anyway. \"Hm, I was already out, so I figured might as well stop by, check out the scene.\" \n\n\"I'm really glad you're here,\" she said, making sure I could hear her over the music. \"Can I buy you a drink?\"\n\nI nodded, yes. \"Just vodka on the rocks, please? Thank you... Where's the restroom?\" She pointed at the far left-side of the space. \"I'll be right back.\" \n\n\"Kels!\" She called out when I was already a few steps away. She jogged up to me then removed the floral-print, bomber-style jacket she had on. The soft, silky material looked thin, which told me it was more of a fashion piece than anything else. Underneath it, she was wearing a fitted, short-sleeved white button-up. Her whole outfit was more casual than usual, which made sense since unlike me, she'd been to this bar before... She also wore tattered boyfriend jeans that were cuffed at the bottom as well as a pair of all-black Vans. Even when she dressed down, she was sexy. Unfair. \n\nShe didn't offer me the coat or ask me to put it on. Instead, she slipped my arms through it herself before zipping it up almost all the way. Though it was a bit too long for me, wearing it had instantly placed me more at ease. \"Uh. Thanks.\" More hot blood rushed up to my cheeks. She was so sweet but in a hot way. God damn it, I wanted her so bad. \"Okay... Be right back.\" \n\nI wasn't exactly proud of it, but in the empty restroom, I pressed my nose against the fabric of her jacket and inhaled. My heart was rapidly thumping against my ribcage, but I felt comforted by the scent that filled my lungs. I checked my reflection in the mirror. Due to all the drinking and shyness, my cheeks were much pinker than they were at the beginning of the night. I found the way I looked so telling, I wondered nervously if everyone else could pick up on the same signs I clearly saw on my face. \n\nCould the people outside read my appearance and body language? Did everyone know why I'd shown up so late? Was it obvious that I was looking to get absolutely railed by one person in particular? \n\nAnd most importantly, was Max aware of these things..? I wondered how she felt about the surprise kiss I planted on her cheek. Again, I was very rusty when it came to the flirting game, so I wasn't sure if I was doing too much or not enough. I really didn't know how to proceed... Like I knew what I wanted to happen. Simply put, I wanted us to end up in bed together. Whether it was hers or mine didn't matter to me. \n\n\"Fuck,\" I cursed quietly as I washed my hands. Was it blasphemous to pray to get laid? Anyway, regardless of the religious ramifications, I said a silent prayer in the hopes of finally quelling my sexual frustration. I then walked out of the restroom and back to Max. \"Hi.\"\n\n\"Hey, you,\" she greeted me before handing me my drink. She then briefly pressed the back of her hand against my hot cheek. I felt my tummy tighten at the light touch. \"How much have you had tonight?\" \n\n\"A little bit,\" I answered cryptically. I sipped on the new drink she got me. My nerves were flaring up. \n\n\"Do you wanna hang out with anyone? We can head over there\u2014\" She gestured to a table full of familiar faces from our department. I hastily shook my head, no. \"Okay, what do you want to do?\" \n\n\"You. I mean, I\u2014\" I stuttered. Okay, now that was a Freudian slip. \"I want to talk to you!\" It was a clumsy recovery but a recovery nonetheless. Since the two of us went out for lunch earlier in the day, the next question I asked was ridiculously pointless. \"So, how've you been?\"\n\n\"All good,\" she said through an amused chuckle. \"I have an idea... Let's get out of here.\" Before I could ask where we were going, she wrapped an arm around my waist and guided me up some stairs then through a side door on the second floor. A gust of cold wind blew my hair away from my face as we exited onto the balcony that served as a smoking section. There were only a few other patrons in the area, so although a handful of outdoor speakers were playing music, it was still a lot quieter than it was inside. \"Okay... What do you wanna talk about?\" \n\n\"Things.\"\n\n\"Yeah?\" She grinned and I felt another flutter in my chest. I found her so, so attractive and I was so, so done pretending like I didn't. \"What kind of things?\" \n\nInstead of responding, I darted my eyes around. I looked through the groups of people to make sure that we didn't know anyone. Thankfully, they all seemed to be strangers. I brought my glass to my lips, knocked back all of its contents in one-go then deposited it on an unoccupied table nearby. With a fresh dose of liquid courage, I laced my fingers with Max's and pulled her toward one of the emptier corners. I positioned her exactly where I wanted her, in between the safety railings and my body. Since I was in high heels, our height difference wasn't too bad. Which worked out in my favor because it made it a hell of a lot easier for me to kiss her. As I was leaning in, more than ready to take an uncharacteristically reckless leap, her hands softly gripped my shoulders. She stopped me from surging forward, from crashing my lips against hers. She was holding me gently but firmly, keeping me in place. \n\nClearly, she didn't want to kiss me. Clearly, I made a huge mistake. Clearly, I wanted to disappear into thin air. \n\n\"Kelsey...\"\n\n\"I-I'm sorry.\"\n\n\"You didn't do anything wrong,\" she reassured me, but it didn't help quell the embarrassment pouring through my bloodstream. \n\nI'd had my fair share of humiliating moments in the past, but this definitely took the cake (probably the entire bakery). My skin felt white-hot, but I knew I was turning so, so red. As if I'd developed a sudden full-body sunburn. Which was impossible not only because I had her jacket on but also because it was only the moon in the night sky above us. The sun was still asleep. \n\n\"Just almost, right?\" I said, refusing to lock eyes with her. I wished I had the ability to teleport. I didn't want to be there anymore. \"Fuck, I'm sorry- I just- I drank too much tonight.\" It was a horrible excuse, but I didn't know what else to say. \"I should go home.\"\n\n\"Kels, wait, I\u2014\"\n\n\"I don't wanna talk about it. Please,\" I said, wincing. I wanted to cry. \"I just wanna go home now.\" \n\n\"Okay,\" she replied hesitantly before sighing. \"I'll bring you home then. Well, I don't have my car 'cause I was planning to drink a bit tonight. But I'll book a ride with two stops right now, what's your address again?\" \n\n\"No, it's okay, you don't have to cut your night short for me. I\u2014\"\n\n\"This is non-negotiable,\" she interrupted me. Her sudden authoritative tone briefly pulled me back to the stupid, nonsensical fantasies I'd entertained earlier. The careless fantasies that led me to almost ruining everything the two of us had. We worked so well together, why did I have to risk that? And more importantly, how could I even think that someone like her could ever be interested in someone like me..? \"You said it yourself, you drank too much tonight. No way in hell I'm letting you go home alone. End of discussion.\"\n\n\"Yeah, okay then. Thanks.\"\n\n<center>. . .</center>\n\nThe day after what I'd dubbed as 'The Friday from Hell,' I woke up absolutely livid with myself. The risk / reward ratio of my actions from the night prior was so bad. There was absolutely no way for me to justify the decisions I'd made, the risks I'd taken. There might not have been anything wrong with me wanting to get laid, but there was definitely a huge issue when it came to who I'd wanted to partner up with to accomplish that selfish goal of mine. Reminding myself that I was just drunk didn't help at all. It really wasn't a good enough reason to rationalize what I'd done. \n\nI still couldn't believe I'd jeopardized something as significant as mine and Max's professional relationship for something as trivial as a one-night stand. Worse, I'd also basically compromised Max's reputation in the process. She was still my boss' daughter, so even if technically, we were equals in terms of our job titles and there was no inappropriate power imbalance... I shouldn't have forced her into a situation where our colleagues could've caught us kissing! It would've reflected badly on her and I just felt incredibly guilty. I wanted to apologize to her for the nth time, but none of the numerous sorry-s I'd drunkenly uttered in the car last night seemed to make a difference. So, I stopped myself from giving her a call. \n\nI figured I needed to give her time and space anyway. \n\nNo matter how I looked at it, the price of what I'd wagered was so disproportionate to what I could've gained. Trust me, even my aching, hungover brain knew that for a fact. As someone who'd been raised by parents that were still struggling with gambling addictions, I had enough stored knowledge to differentiate a bad bet from a good one. Although there was no monetary loss from almost kissing Max, I felt like I'd lost something much more important than money. I'd pretty much ruined our friendship and everything was going to inevitably change now. \n\nAll because I was a self-absorbed, sex-starved imbecile. \n\n<center>. . .</center> \n\nSince I couldn't shake off or hide from the feelings of regret and remorse, I'd decided that the best possible course of action was to hide from Max. And when hiding from her was sadly impossible, I at least made sure that there were other people around us, so we couldn't delve into topics I preferred not to discuss. Like how I'd drunkenly thrown myself at her and she rejected me... Or worse, how I was still crushing on her like an idiot even after the abovementioned rejection. \n\nMax was the furthest thing from dumb, so she was well-aware of what I was doing. There'd been multiple times wherein she tried to corner me, but each and every time, I just came up with a new excuse. I promised her again and again that we'd definitely talk later. In my defense, it technically wasn't a lie. Sure, there were no more unplanned lunches or random chats in each other's office, but we did still talk a lot... But only during group discussions about safe subjects related to work, like global weather conditions. In our line of business, 'discussing the weather' didn't always equate to 'making small talk.' ",
        "Since we were still getting paid to work together, I made sure to be professional enough to reply to all her work emails in a timely manner... Her personal texts were a different case entirely though. After the night at the bar, she'd left me three messages that I'd yet to reply to because I was a coward who refused to deal with the consequences of my own actions. The first two were from the Saturday after The Friday from Hell, while the last one came in on Sunday.\n\nMax: Good morning! How are you doing? Guessing your head hurts after last night. Make sure to drink lots of water today. Give me a call when you can. \n\nMax: Hi, Kels, tried calling earlier a few times but couldn't reach you. Hope everything's okay. Good night! \n\nMax: Can we talk first thing tomorrow morning? I know we have a meeting scheduled at 10, but I was thinking you and I could talk a bit before then. Let me know. Thanks. \n\nI wasn't delusional. I knew what I was doing was beyond childish. But I figured if I kept pretending like nothing happened, she would get the message and drop the whole thing at some point... It was by no means the greatest plan, but it was the best one I could come up with. Almost kissing Max was tantamount to almost opening Pandora's box. It was by far the most impulsive thing I'd ever done in my life and apparently, an act of pure impulse was my own personal Achilles' heel. My foolish moment of weakness had almost caused my own professional downfall. Seriously, how desperate and needy did I have to be to put what I'd been building for years on the line for a night of sex? I felt pathetic. \n\nNo, I was pathetic. \n\n<center>. . .</center>\n\nExactly two weeks after the disastrous incident was when I ran out of luck or when Max ran out of patience\u2014Either? Both? Anyway, karmically, it made sense that everything finally hit the fan on another moonlit Friday evening. It was after office hours and I was standing by the Acanthis building's curved driveway. My eyes were scanning through an email on my phone as I waited for my ride to arrive. A car came to a sudden halt in front of me. \"Get in.\" \n\nI tore my gaze from the screen in my hands, frowning in confusion at the curtness of the command. My eyes widened when I realized that the order didn't come from an unusually rude ride-share driver. I was looking through the open passenger window of Max's car, staring right at her clearly pissed off face. \"Uh... Hi?\" \n\n\"Get in,\" she repeated. She was sitting behind the steering wheel of a black-on-black subcompact SUV manufactured by a high-end automobile brand. To be honest, I didn't know a lot about cars, but I at least knew her eye-catching vehicle was one I couldn't afford to own myself. Not that it really mattered since I didn't like driving.\n\n\"What? No...\" I shook my head. \"Thanks for the offer?\" I followed up unsurely as I stuffed my phone in my purse. \"My ride should be here any minute now, so I'm good.\" I was being as polite as possible, hoping it would be enough for me to get out of whatever she was trying to get me into. \"Have a nice night, Max.\" \n\n\"Get in,\" she told me for the third time, ignoring everything I just said. \"One, two\u2014\" I blinked, stunned by her sudden counting. She was saying the numbers slowly, deliberately emphasizing each one of them. I felt a knot form in my tummy. \"Three, four\u2014\"\n\n\"You can't be serious right now...\"\n\n\"Five\u2014\" I had no idea how high she was even planning to count to, but the higher she went, the stronger my urge became to open her car door. She was talking to me like she was an angry teacher and I was a student in need of disciplining... And I really should've been offended, but I wasn't. I was getting turned on. \n\n\"Okay, fine!\" I groaned loudly before getting in the vehicle. \"I guess I'll just cancel my other ride...\" I said distractedly as I strapped myself in her car. She rolled up my window and I immediately breathed in the ever-elusive new car smell mixed with her. I didn't realize just how much I'd missed being around her until we were both trapped in the enclosed space.\n\nWithout another word, we drove off. For minutes, the only noises were coming from outside. Beeping cars, revving engines and screeching tires. It wasn't very late, so the city roads were still busy. When I couldn't take the silent treatment any longer, I spoke up. \"Where are we going?\"\n\n\"Nowhere.\"\n\n\"What?\" I glared at her even if her eyes were firmly on the windshield in front of us. \"If we're not going anywhere, then can you please just take me home?\"\n\n\"Nope.\"\n\n\"Max! What is this?\"\n\n\"I'm just going to drive until you start talking to me,\" she answered, shrugging her shoulders. \"So, I suggest you start talking.\"\n\nI was still waiting for her bossiness to make me mad, but it wasn't my temper that was rising... It was still my overall temperature. Why did I have to find her so hot? It was so unfair. \"Talk about?\"\n\n\"Oh, I don't know,\" she said before scoffing. She was tall. It made sense that her seat was positioned far away from the steering wheel. Her arms were extended to simply drive the car, they didn't look the way they did to drive me insane. Nervously, I tore my eyes from the sight of her sinewy arms and veiny hands. \"Let's see... Why don't we start with why you've been running away from me like we're in the most boring version of 'Catch Me If You Can?'\"\n\n\"Haven't seen it.\"\n\n\"You're joking, right?\" She actually looked at me for a split second. I shrugged, shaking my head, no. \"Okay, the two of us are definitely watching it when I'm less mad at you...\" \n\n\"Why are you mad at me?\" I was playing dumb and we both knew it. \n\n\"Because you're annoying.\" \n\n\"If you find me annoying, then why am I in your car?\" \n\n\"Because I'm a genius and I came to the realization that ironically, my best chance of getting you to stay put is by placing you in a moving car.\" I wasn't going to admit it to her, but her plan was definitely smart... There was nothing I could've done to escape while we were on the road. \"So, again, talk.\" \n\nI knew there was no way I was going to win against her\u2014not in this situation.\n\n\"Fine!\" I groaned out, frustratedly rubbing my knuckles over my closed eyes. \"I'm sorry I've been avoiding you... I just- I\u2014\" Talking to her was so hard, it made me appreciate the Fifth Amendment more than I already did. I didn't want to admit my faults, I didn't want to incriminate myself... But sadly, I wasn't talking to cops, I was talking to a gorgeous brunette who was hellbent on making me face my flaws. \"I really feel bad about almost kissing you.\" \n\n\"Why?\"\n\n\"What do you mean why..? I drunkenly cornered you and then tried to kiss you. In public!\" I covered my face with my hands as I recalled the night in question. Once again, I felt nothing but shame for the rashness I'd displayed. \"I'm so embarrassing... Like I still can't believe I almost forced you to kiss me.\" \n\n\"Kelsey, you're like five feet and I'm pretty sure I can carry you with one arm... You can't seriously believe you'd be able to physically force me into doing anything? You're tiny.\"\n\nHer first two statements were exaggerations (I was 5'3\"). Her overall idea was more or less correct though. She could've definitely manhandled me if she needed to (or if I wanted her to). \"Still! It was gross, we're colleagues and I crossed a line.\"\n\n\"Oof. I wouldn't call almost kissing me gross,\" she argued. \"I don't think I'm gross... Do you?\"\n\n\"What? Of course that's not what I meant... I'm the one who almost kissed you, doofus,\" I reminded her and she laughed. \"I mean, we work together, so it was gross that I put you on the spot like that. And I know avoiding you has probably caused more harm than good, but remembering that night just makes me feel bad and I don't know how to deal with it.\" I almost told her about my issues with losing control, but I didn't want to make even more excuses for myself. \"So, yeah, I'm just- I'm sorry. For a lot of things. I don't know why I keep messing up when it comes to you.\" \n\n\"Will it help if I say I forgive you? For everything you think you've done wrong?\"\n\n\"I don't know.\"\n\n\"Okay, well, will it help if I say I wanted to kiss you, too?\"\n\n\"Don't do that.\"\n\n\"Do what?\"\n\n\"Say stuff like that just to make me feel better.\" It was a sweet lie but a lie nonetheless. 'Cause if she did, in fact, want to kiss me, too... We would've kissed and we would've never found ourselves in the circumstances we were in. It was probably for the best she was just lying though. Since if we'd actually kissed that night, we would've been in an even more complicated situation.\n\n\"Kels, I\u2014\" She exhaled deeply. \"For what it's worth, you did nothing wrong in my book that night. I swear.\" Her tone was the gentlest it'd been since the spontaneous car ride started. \"That being said, you fucked up a lot after that night. And that's mainly what I have a problem with.\"\n\n\"I know, but like I said, I didn't know how to handle the situation,\" I repeated, watching the twinkling lights rush past my window. \"So, I just chose to take a step back and not deal with any of it first.\"\n\nIsolating myself was my tried and tested method when it came to dealing with unpredictability. I'd learned when I was really young that the easiest way to lessen the variables of a situation was to lessen the people involved. So, since I was a kid, my go-to coping mechanism for when things in my life became too chaotic / complicated was to push people away.\n\n\"That's not a good enough reason,\" she replied and I winced. \"You can't just go around and act like things between us haven't changed... For real, I thought we were way past all the 'colleagues BS.' Like the two of us had gotten so close and frankly, your recent behavior has been hurtful. You can't just pop in and out of my life when you want to. That's not fair to me.\" \n\nOf course she was right. Based on how candid and open she was being, she clearly wore her heart on her sleeve. Which was something I found simultaneously admirable and terrifying. \"You're right... You deserve better than that. A lot better. And I know I keep saying sorry, but I really do mean it, Max. You've been nothing but great to me. I'm sorry.\"\n\n\"Okay, I forgive you.\"\n\n\"Just like that?\"\n\n\"Just like that,\" she reaffirmed. \n\n\"You're too good to me.\" \n\n\"Damn right.\" Her eyes still weren't on me, but she was smirking. \"Okay, now that we've finally hashed this all out. Can things between us go back to normal? I've missed you.\" \n\n\"I've missed you, too,\" I admitted. \"Like a lot.\" \n\n\"Yeah? Lucky for you we'll be spending most of next week together. So, you'll get your Max-fix then.\"\n\n\"What are you talking about?\"\n\n\"We're going on a trip. Just the two of us.\" \n\n\"We can't just up and go on a random trip, we have work and\u2014\"\n\n\"The trip is for work, doofus, don't worry,\" she cut me off. \"While you were busy trying to impersonate Susan Storm, I finalized a deal with an artisanal ice cream company. And the owners want to meet with us in person. Based on the info they gave me, we'll need to take a plane, a boat and a car to get to their factory. We're leaving Sunday early afternoon and then we're getting back Thursday night.\"\n\n\"Wait, what?\" I had so, so many questions. Last and least being: Who was Susan Storm..? She took an exit and I realized we were getting closer to the street I lived in. I felt my cheeks warm up. She remembered where my apartment was from when she made sure I got home safe two weeks ago.\n\n\"The whole thing was supposed to be Plan B in case you were still going to be annoying tonight. But since there's already a signed contract and everything, we have to see it through. Don't forget, Kels, you're the one who taught me how important having a contingency plan is.\" \n\n\"Stop calling me annoying.\"\n\n\"Sure, as soon as you stop being annoying,\" she said teasingly and I rolled my eyes. I'd missed us so, so much. \"I'll forward all the files to you as soon as I get home later. Give everything a read when you have time.\"\n\n\"You really landed a new client just to fix whatever was going on with us..?\"\n\n\"Well, partly, but no... 'Fixing us' definitely incentivized me, but the company has a really interesting backstory. The co-owners are fraternal twins in their late twenties who spent like five years going around the world just to taste different kinds of ice cream. Now, they have a whole factory in their hometown and quite a large online following. Business has been booming as of late and unfortunately, they've experienced quite a few product transportation issues, so they were looking for a new logistics partner.\" \n\n\"An artisanal ice cream company, huh? And they want to hire Acanthis?\" Our company's typical clientele didn't include ice creameries... We actually rarely dealt with highly perishable goods. \n\n\"The owners' parents have deep pockets. Their family is really, really old money based on my research,\" she clarified. \"The whole thing seems to be a passion project for the twins... But they want their products to reach more people around the country and that's where we come in.\"\n\n\"And I'm coming on this trip with you?\"\n\n\"Yeah, of course you are. I told everyone we worked on this together, so we got the all-clear from up top.\" \n\n\"Max, don't get me wrong, I really appreciate all you've done for me, but you need to stop letting me freeload off your work.\"\n\nShe parked the car in a free space near my apartment building. She turned off the engine before turning her full attention to me. \"I don't see it as you freeloading... I like working on projects with you so much more than working on them alone,\" she told me, smiling sincerely. \"So, in a sense, even when you're technically not contributing, you still kind of are. At least that's what it feels like to me.\"\n\n\"I feel the same way. I like working with you, too,\" I admitted. I could've even taken it a step further and said I liked her period, but I held myself back. I needed to erase all of my daydreams that starred Max and I. I needed to revert to the version of me who didn't indulge in inappropriate fantasies about my gorgeous coworker. \"Monday-free when we're together, right?\"\n\n\"Right,\" she agreed, nodding. \"Monday-free when we're together.\" All of a sudden, she leaned in to place a lingering kiss on my left cheek. Her lips were so soft. In an instant, my whole face was burning. She then wordlessly unbuckled my seatbelt for me. \"Good night, Kels.\" \n\n\"Night,\" I said in a daze as I opened the car door. \n\n<center>. . .</center>\n\nOur new client was Violet Orange Ice Creamery. The company's name simply came from the twin owners' favorite colors. Violet was the guy's favorite color, while orange was the girl's. Their factory was located in a different state, about six hours away from Acanthis' headquarters. Like Max had mentioned, it was going to take us three different modes of transportation to reach our destination. Air, water and land. Unlike the last trip I went on, this one consisted of only domestic travel. Which meant our department had more leeway when it came to the trip's particulars. \n\nOur flight was still several hours away when we made it through the airport's security protocol. It'd taken me a while to convince Max that we needed to be in the airport a lot earlier than recommended, just in case there was an unexpected hitch. But in the end, she'd reluctantly agreed... And now, we had so much time to kill. We were on the way to the business lounge, to be normal working adults, when a colorful claw machine caught my very easily distracted partner's eye. \"Do you have any quarters?\"\n\n\"Are you serious?\" I asked, thinking she was just messing with me, but she just nodded excitedly. \"No, I don't...\" She looked around and suddenly rushed over to a nearby vending machine. She came back with two different kinds of chocolate and a whole handful of coins. She wordlessly gave me the snacks and I stuffed them in my handbag. \"You know this is a losing game, right?\" I knew it was innocent enough, but in essence, it was still gambling... It wasn't even good gambling, like no one ever won while playing on these rip-off machines. \n\n\"It's not a losing game,\" Max argued as she stuck her first couple of coins into the contraption. \"As someone who has won a ton of prizes from these things, I can assure you it just takes skill and patience.\"\n\n\"Bullshit,\" I replied. I then laughed when as expected, she failed to pick up one of the cheap and colorful plushies enclosed in the glass square. \"Okay, now that you've wasted your money, can we get out of here?\"\n\n\"Where are we going?\" She asked distractedly, sticking more coins into the slot. I looked away when I caught a glimpse of her pink tongue slightly poking out from her lips. She was concentrating on one prize in particular. There were many small, stuffed creatures to choose from, but she seemed to be hyper-focused on a green-colored cartoonish bird. \n\n\"Uh, lounge?\" I replied as if it should've been obvious. We were on a business trip and we had business class tickets, it made the most sense that we'd be spending our downtime in the business lounge. We weren't supposed to be wasting pocket change, playing some kids' scam game. When she lost again, for the third time, I tugged on her arm. \"Come on.\"\n\n\"Go ahead, I'll meet up with you in a bit.\"\n\n\"You can't be serious.\" I raised an eyebrow at her. \"You know you've probably spent more money than whatever that dumb bird's worth.\" \n\n\"Don't care,\" she responded without looking at me. \"I'm gonna get it.\"\n\n\"You won't...\"\n\n\"Wanna bet?\" \n\n\"No, I don't make bets,\" I said, pursing my lips. For a split second, I struggled to block out a multitude of memories revolving around the results of different bets. I still found it so silly that during my childhood, I'd been afraid of ghosts... Who knew that my childhood itself was going to be the only ghost I'd ever encounter in my life? \n\n\"Why? You scared?\" She taunted as she moved around the joystick and pressed on the large red button. The claw descended and once again, it came up with zilch. \"We won't bet money. If I win, we'll just trade airplane seats.\"\n\n\"What? But we both pre-chose our seats,\" I reminded her. \"Plus, I like aisle seats.\"\n\n\"And I like window seats.\"\n\n\"Then why would we even make the bet?\" \n\n\"To prove to you this isn't a losing game... Duh.\" \n\n\"Okay, but what if I win?\" \n\n\"I'll give you anything you want. No limits.\"\n\n\"Anything I want, huh?\" I repeated. \"That's like an open-ended wager, not the smartest move.\" \n\n\"Doesn't matter to me, I won't lose.\" \n\n\"I don't know, I just don't see the point in\u2014\"\n\n\"If you're so confident that it's a losing game, just take the bet.\" She challenged. \"Look, if you win, you can ask me for anything... Even a kiss on the lips if you still want one.\"\n\nI blushed. \"Asshole.\"\n\n\"Aw, come on, Kels,\" she laughed out. \"I'm just messing with you.\"\n\n\"Fine, you're on,\" I said through gritted teeth. The whole thing was dumb. But she was being so cocky in a way that I foolishly found more attractive than annoying. So, I wanted to wipe the stupid (but also sexy) smirk off her face. As soon as I agreed, she turned around and winked at me. My mouth dropped when during her very next attempt, she nabbed the bird without issue. I felt hustled, swindled, duped. \"Wait... How'd you do that?\"\n\n\"I told you, it takes skill,\" she explained without actually explaining anything. She fished out the forest green toy bird from the pick-up port below. I thought she was going to hand me the prize. She didn't though. Instead, she stepped past me and gave it to a little girl standing with her mother. I didn't even know the two of them were lining up behind us. The kid, of course, was ecstatic. Her mom, on the other hand, tried to refuse the kind gesture to no avail. In the end, the pair thanked Max profusely before skipping off to their boarding gate. \"No worries, have a safe flight, you guys!\" ",
        "We finally started walking in the direction of the lounge. \"That was really sweet,\" I said shyly, refusing to make eye contact with her. \"The thing with the kid... You definitely made their day.\"\n\n\"Yeah, well, she's definitely going to enjoy Broccoli Beak more than either of us.\" \n\n\"You named it? You had it for like five seconds!\" \n\n\"And? He was mine for those five seconds, so yeah, I named him. I don't think caring about something should be contingent on how long it's been in your life,\" she continued. \"Feelings really shouldn't be bound by timelines.\"\n\nI just kept quiet, silently battling with the impulse to ask her what she'd meant by the latest enigmatic tidbit that left her lips. \n\nHours later, we were on the plane, thirty-five thousand feet in the air. The entire flight, Max kept leaning over me to gaze out the curved window. I kept telling her we should switch seats, but she just kept reminding me that I was the one who'd lost the bet. Frankly, it wasn't much of a punishment for me... Each time she stretched her body over mine, I not only got a lingering whiff of her perfume but also a bit of physical contact. \n\nSo, no, despite what she had to say, I definitely didn't feel like a loser. \n\n<center>. . .</center>\n\nI gripped the rocky boat's railings. I was completely and utterly seasick. The love story in 'Titanic' couldn't have been real... Who could ever fall in love while fighting the need to puke? Nauseated beyond belief, I couldn't even appreciate the starry night sky above. Even the worst airplane turbulence didn't have this kind of effect on me. I was a landlubber through and through. We were warned by the ferry's crew as soon as we'd gotten our rented car on board that it was going to be a bumpy ride, but they'd definitely undersold reality. The wavy water was causing everything to sway wildly, tempting my tummy more and more to heave all its contents overboard. Suddenly, I felt someone's front press against my back. I stiffened but didn't panic, knowing it was just Max. It was the last ferry trip of the day, so there were only two other passengers on the ship. An elderly couple sitting safely inside the cabin. \n\n\"Uh... What are you doing?\" \n\n\"Close your eyes,\" she requested, placing her hands on top of mine. Her fingers filled the spaces between mine as we gripped the metal rails together. \"Are they closed?\"\n\n\"Yeah.\" \n\n\"Okay, now follow the rolling motion of the boat.\"\n\n\"What?\" \n\nInstead of explaining further, she just started moving behind me, swaying both our bodies slowly from side to side. I wouldn't have called it dancing... We were really just copying the boat's shifting movements, getting in tune with the waves. I had no idea if there was actual science behind what we were doing or if it was only helping because her body was serving as a great distraction. All I was sure of was that I liked having her pressed up behind me, holding me closer and longer than she'd ever done before. \"Is it helping?\"\n\n\"I don't know? I think a little bit?\" \n\n\"Want me to stop?\"\n\n\"No!\" I said quickly and leaned backward, putting more of my weight against her chest. She just chuckled knowingly. Don't worry, I didn't forget that she didn't want me the way I wanted her. I still knew full-well that my attraction to her was very much one-sided, unrequited. But if all I could've had with her were fleeting moments like this one, then I wanted each and every one of them to last as long as possible. \"It's helping with the nausea... So, don't stop.\" \n\n\"You sure?\" \n\nShe moved even closer. I could feel her warm breath against my ear. She then kissed the side of my head, her full lips pressing against my temple. It confused me, but I didn't call her out on the unexpected platonic kiss... I liked it anyway. It still perplexed me how easily she shifted back and forth between being playful and being sweet. I'd really never met anyone who treated me the way that she did. Even if I already wanted her so, so bad, the feeling was only getting stronger and stronger. \n\n\"Yeah, I'm sure.\" \n\n<center>. . .</center>\n\nI was admiring Max in her element. With a glass of white wine in hand, she regaled our new clients with even more stories about places she'd visited around the world. Places with names I didn't even know how to spell... Unlike Max and the 'Ice Cream Twins,' I'd yet to satisfy my wanderlust, so I was pretty quiet as our little quartet discussed colorful travel stories over dinner. \n\nMax was a good storyteller, expressive with a wide vocabulary. But although her descriptions painted pictures in my mind, I couldn't help but wonder if she was stretching the truth in some of her tales. Could people really sled down the Great Wall of China? Did she really see an equestrian show in Eastern Europe where the rider simultaneously stood on top of two horses as they galloped around a track? Had she really seen a volcano with blue lava with her own eyes? \n\nA lot of it sure sounded like fiction... But since it was Max, odds were she was telling the truth. I gulped the contents of my own glass as I listened to her recount a dicey situation she got into with friends on some tropical island. One that supposedly involved a few jet skis, a thunderstorm and a rescue party. The whole dinner just underscored the fact that her life was so much more interesting than mine. Consequently, also highlighting the fact that she was so out of my league. \n\n\"You okay, Kels?\" Max asked me softly when there was a lull in the conversation. Under the tablecloth, she briefly squeezed my thigh in a comforting gesture. \"You've been pretty quiet.\" \n\n\"I'm good,\" I told her quickly. \"Just a bit tired.\" \n\n\"Okay, let me wrap this up, so you can get some rest, my little sleepy head.\" \n\n\"I'm not yours,\" I jokingly reminded her and she just laughed.\n\nI really wanted to be though...\n\n<center>. . .</center>\n\nThe distinct vibe of the multi-sized pebbles on the shore combined with the overcast sky made for a very unique beach experience. One I'd never encountered before... Visually, everything was dreary but somehow magnificent, picturesque. The site of the red and white lighthouse in the distance, against the moving backdrop of deep blue waters and dark gray skies, made me question whether or not I was really seeing what was in front of me. It was all way too dreamlike... The sound of crashing waves as the water collided against the rocky shore paired with the astonishing views made me feel like I was in a scene from a seaside Monet painting. I was sober, but I still had to wonder if I was tripping, hallucinating. Life was just too beautiful right now. \"How is any of this real?\" \n\n\"My thoughts exactly,\" Max replied in an equal state of awe. She kept looking around, taking in as much of the natural masterpiece as possible. The two of us had actually found ourselves in a work of real-life art. \"Seriously... If places like this exist, why the hell are cities so crowded?\"\n\n\"No idea... Humans are just dumb, I guess,\" I responded. \n\n\"For real,\" she agreed. \"Next time my life goes to shit, I'm booking the first flight back here.\"\n\n\"Ditto.\"\n\nThree nights had passed since we'd first arrived in the island town, but today was our first free day for exploring / sightseeing. We'd based our leisurely plans on brochures from our hotel's lobby as well as random Google searches. And we'd already spent the whole morning driving around in our rental car, visiting different tourist attractions. \n\n\"I wish we brought something to eat,\" Max said as she sat down on the pebbly beach. I followed suit. The surface wasn't as comfortable as powdery sand, but considering no one else was around us, I wasn't going to start complaining. I would've taken a rougher seat over a crowd of strangers any day. \n\n\"Here,\" I said as I extended to her the chocolates she'd bought from the vending machine in the airport. \n\n\"Holy shit, I forgot about those,\" she replied excitedly, plucking out the packet of peanut butter cups. \"You can have that one... These are my all-time favorite.\" She quickly tore the orange packaging and pretty much bit off half a chocolate cup. Her eyes closed in what appeared to be pure bliss. \"You're the best.\"\n\n\"You bought those, remember?\"\n\n\"Still. You're the best,\" she replied, smiling through another bite. Personally, I wasn't the biggest fan of peanut butter, but the way she was devouring the snack made me feel like I should give it another shot. \"Today's been great, huh?\"\n\n\"Definitely,\" I agreed. \"This place... It's something else.\"\n\n\"Our new clients are cool, too,\" she added. \"I'm thinking this partnership's gonna be pretty long-term, so we better get a bonus or something after this trip.\"\n\n\"Yeah, well, with the way you've been charming the 'Ice Cream Twins,' I'd say they're hooked. Especially the girl...\" I nudged her shoulder with my own. \"I think she's into you.\"\n\n\"Mm, not my fault I was born a charmer,\" she replied, grinning. I reached for her face to wipe off a tiny spot of chocolate on the corner of her mouth. \"Thanks.\"\n\n\"She's cute,\" I said, quickly turning away from her to stare at the sea again. 'Cute' was an unjust description. The woman we were discussing was gorgeous. A sylphlike redhead who was definitely more Max's league than I could ever be. Well-traveled, well-connected\u2014well-equipped to live a life that was more Max's speed. \n\n\"Um, she's not exactly my type.\"\n\n\"What's your type then?\" I narrowed my eyes at her. She wasn't into me, so she clearly didn't like blondes. And apparently, she wasn't a big fan of redheads either. \"Brunettes?\" \n\n\"Cranky.\"\n\n\"I'm not being cranky,\" I defended myself. \"I'm genuinely curious about your type. If you aren't into redheads or\u2014\"\n\n\"No, I meant that's my type... Cranky,\" she elaborated. \"You know like how you're not being right now.\" I blushed and looked away, catching the subtext. \n\n\"You need to stop doing that,\" I said softly after releasing a drawn-out breath. I hugged my knees to my chest and looked straight ahead.\n\n\"Doing what?\" \n\n\"Flirting with me.\"\n\n\"Oh.\" She picked up a pebble and then threw it toward the water. \"I'm sorry. Am I making you uncomfortable?\"\n\n\"No, of course not...\" I shook my head. \"Not uncomfortable. Just confused,\" I clarified. \"Look, I get it, being a sweet talker is like a big part of your persona or whatever but sometimes... You say things and I think maybe you're saying something else, but you're really not. You know?\" \n\n\"Kels, I'm not following...\" \n\nI couldn't blame her. I was speaking nonsense, gibberish. But I didn't know how to properly put into words what I wanted to say. So, I decided to just be brave for once and simply spell things out. \n\n\"I really like you, Max.\" Now, that I'd admitted my feelings for her directly and out loud, the confession seemed gratuitous... I'd already tried to kiss her, so she had to already know how I felt about her. \"And I understand you're not into me like that, which is completely fine, but I need you to tone down the flirting a bit, okay? For now, at least.\" \n\n\"I like you, too. You have to know that by now,\" she replied and I just hugged myself more tightly. Protecting myself from the cool wind wafting past our bodies. Her words were saying exactly what I wanted to hear, but her actions had spoken differently. So, I didn't actually believe her. \"Is this still about the kiss?\" I nodded, yes. \"I already told you, I wanted to kiss you that night.\"\n\n\"Why didn't you then? I basically threw myself at you...\" I cringed. Despite how drunk I was at the time, I vividly remembered the sting of rejection. The feeling of her palms pressing against my shoulders to stop me from kissing her. \"And you didn't want me.\"\n\n\"Look at me,\" she requested and I sighed before turning to face her. \"I know you're not gonna believe me, but I've liked you for years now... Do you remember the first charity event my mom threw? I've liked you since that night. I'm so, so into you. I swear.\"\n\n\"Bullshit.\" \n\nShe exhaled before moving, so she was now sitting cross-legged in front of me instead of beside me. She forced me to lower my knees, removing the barrier between us. \"Okay, so that night, you were in an emerald cocktail dress that reached just above your knees. Your hair was in a neat bun, but you had a large braid on the left side. The color of your dress made your hazel eyes pop so much... I couldn't stop stealing glances at you even though you were there with someone else.\"\n\n\"How do you remember all of that? That was like more than two years ago...\"\n\n\"I told you, that was the night I started liking you. So, it was a memorable one for me.\"\n\n\"Why? What did I do?\" I thought back to the evening in question and honestly, I couldn't recall even one remarkable interaction with Max from that event. And I definitely didn't remember what she'd worn. \n\n\"Well, first of all, have you seen yourself?\" She asked and I rolled my eyes. \"I found you gorgeous the first time we met, like even if you weren't the nicest to me... I found you so fucking attractive,\" she revealed and I shyly turned away from her once more. She wasn't having it though, she reached out and guided my chin, so we were looking into each other's eyes again. \"And you're like the smartest person ever,\" she stated. \"So, that's an added bonus.\" \n\n\"Nuh-uh, that's you.\" \n\n\"Agree to disagree then,\" she grinned out. \"Anyway, so on a surface level, I've always been attracted to you. But the night of that charity event, that was the night I started crushing on you hard.\"\n\n\"Again, what the hell did I do?\"\n\n\"Okay, so I'm pretty sure you won't remember this but...\" \n\nShe started narrating this really simple story about me paying attention to her mom. Like according to her, her mom was so bummed that night because she had this whole spiel prepared, but each and every time she tried to talk to her so-called 'friends' about the mission of her new charity, they'd just hurriedly cut her a check. Supposedly, all of them were more interested in schmoozing than actually building schools in low-income areas around the world. \n\n\"So, yeah, my mom was starting to feel really jaded which sucked,\" she continued with the story. \"'Cause I knew how hard she worked on everything and how nervous she was since it was like her first project after leaving Acanthis. Anyway, I was starting to get so pissed because the whole thing was turning out to be just another social media photo-op... Then we got to the table where you were sitting with your girlfriend and other Acanthis employees.\"\n\n\"Ex-girlfriend,\" I corrected her.\n\nShe just smiled. \"And obviously, everyone was listening to my mom in that table because my dad pays their salaries.\" She pursed her lips, a distant expression appearing on her features. \"But you- you were the only one who was really paying attention to what she was saying. Like afterwards, you even asked a few questions and then commended her for all her hard work... Then you handed her a check for way too much money. Out of everyone in that table, you're the only one who actually made a donation.\"\n\n\"Well, that was around Christmas,\" I said, shrugging my shoulders. \"I had a bit more disposable income than usual. And education is a cause that's near and dear to me...\" \n\nIt really, really was. If I didn't study hard and earn a diploma, I'd still be stuck in some backwater town, eating nothing but canned soup and boxed pasta. Merely prolonging life instead of actually living it. \n\n\"Yeah, same here.\" \n\n\"Max, not to offend you or anything...\" I began. \"But your story doesn't really make any sense, it doesn't sound like I did anything special?\" \n\n\"I don't know what to tell you. I was just watching you listen to my mom and all I could think about was how lucky your girlfriend was to have you in her corner. Someone who actually cares about the world, who thinks beyond herself.\"\n\n\"Again, ex-girlfriend,\" I stressed. \n\n\"Yeah, sorry, ex-girlfriend. Anyway, before that night, I kind of assumed you only gave a shit about work,\" she continued. \"But then I learned you had a pretty big heart and I don't know, since then, I've just been infatuated with you. So, I started noticing more and more things about you. And yeah, basically, I've liked you for years now.\" \n\n\"If all of that's true... If you actually like me, then why didn't you kiss me?\"\n\n\"I didn't kiss you because I like you.\" \n\n\"How does that make any sense?\" \n\n\"Before you left for your solo trip, you told me you're not looking for a relationship right now,\" she reminded me. \"And I don't wanna be just your rebound\u2014I can't. If anything happens between us, I want it to be something real.\" It was the most nervous I'd ever seen or heard her. The blush on her cheeks put my heart in overdrive. \"Fuck, like you have no idea how many times I wanted to kiss you before that night, after that night\u2014right now even.\" She let out a breathy chuckle. \"But I don't want a casual relationship with you... Not with you. I mean, I have nothing against one-night stands, friends-with-benefits or whatever. God knows I've had way, way more than my fair share of meaningless sex. We all got needs, right..?\"\n\nDespite her chuckling, her last two statements caused my tummy to instantly knot up. Even if it was supposedly 'meaningless,' the idea of her being intimate with anyone who wasn't me made me feel absolutely sick. It was ridiculous, but I actually felt jealous of these faceless, nameless women she'd bedded because of her 'needs.' \"Max, I don't\u2014\"\n\n\"But when I really, really like someone, I don't play games... And I really, really like you, Kels,\" she declared before flashing me a nervous smile. \"So, if ever you're only looking for someone to hook up with, then I'd prefer it if we just kept things how they are. 'Cause I'm also really glad that we're friends now, you know? You're my favorite person in Acanthis by far and seeing you in the office is usually the best part of my day.\"\n\n\"Hold on, I\u2014\"\n\n\"Don't get me wrong, I'm sure hooking up with you would be amazing,\" she rambled on. \"Like your body is insane, you're super-hot, like exactly my type.\" Her eyes widened. \"Not that I'm objectifying you or anything, it's just a compliment. Really.\" \n\n\"Listen for a second\u2014\"\n\n\"And now that I've said so much, I realize that this conversation might make it difficult for us to keep things the way they are,\" she kept going. \"But I'm sure we'll manage... Might be awkward for a week or two, but we have a really good dynamic, don't you think?\" I opened my mouth to respond, but she wasn't done talking yet. \"I promise I'll do my best not to flirt with you from now on. But in case I slip up and say anything that makes you feel uncomfortable, just call me out on it, okay? I really\u2014\"\n\nIf she wasn't going to let me talk, then I wasn't going to let her talk either. \n\nI was the one who leaned in to kiss her, so I knew full-well that the kiss was coming and yet, it still knocked all the air out of my lungs. To my delight, history didn't repeat itself and she kissed me back. Experiencing a paradox of sensations, I felt like I was caught in a cyclone but also trapped in a vacuum. Like there was an explosion of feeling, but I still felt safe and sound. Her lips were so incredibly soft and sweet. I wanted nothing more for the kiss to last and last. \n\nShe pulled away though.\n\nFor the second time ever, her hands found their way to my shoulders. They stopped me from rushing toward her again, from driving my lips into hers once more. I blinked, confused as well as crushed by the sudden lack of contact between us. \"Kelsey, I\u2014\"\n\n\"I want what you want,\" I reassured her. And the dazzling smile that appeared on her face made me certain that my last statement was an honest one. I wanted something real with her, too. Sure, it hadn't even been half a year since my last relationship ended but... Like what Max had said about Broccoli Beak, 'feelings really shouldn't be bound by timelines.' \"I'm all in.\" "
    ],
    "authorname": "SpaceFirefly",
    "tags": [
        "lesbian drama",
        "lesbian romance",
        "romance",
        "romantic"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/whirlwind-2"
}