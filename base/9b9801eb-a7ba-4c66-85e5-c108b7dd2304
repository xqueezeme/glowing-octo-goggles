{
    "title": "A Lifetime of Valentines",
    "pages": [
        "\"Happy Valentine's Day Maddie,\" I said softly as I leaned over and kissed my wife of forty-nine years. Maddie was oblivious. Morphine did that to a person, morphine and the last stages of cancer. \n\n\"And Happy Anniversary,\" I added, kissing her again. I couldn't stop the tear from falling and landing on her cheek. I wiped it, but another took its place.\n\n\"I put your roses on the credenza near the window,\" I said, sitting in the chair I'd come to think of my own over the last month. It only seemed fair since I spent the bulk of that time sitting in it and watching my wife slowly die. \"I tried to arrange them, but you know how bad I am at that.\"\n\nI always bought Maddie two-dozen roses on Valentines Day. One dozen red because of the holiday and one dozen yellow for our anniversary. Maddie used to smile warmly and spend hours arranging them to perfection. I would have given every last dime I had to see that smile one more time.\n\n\"Kyle and Danny send their love,\" I said, wiping the tears from my eyes. \"Danny is away on business and Kyle, well you know Kyle.\"\n\nBoth of our sons had grown into fine men. Kyle was the oldest and had a family of his own. Daniel was too busy conquering the world for a family. I worried about Danny being alone, but he had a good head on his shoulders.\n\nKyle was very close to his mother. He couldn't accept that she was dying despite Maddie's three-year battle with cancer. The truth was that it was a miracle she lasted this long. There was little I could do for him, but his wife Beth and children would help him through it when the time came.\n\nI on the other hand, knew and accepted my wife's pending death. I didn't really have a choice, not after watching her decline these last few months. My problem was that I just didn't want to live without her.\n\n\"Good morning,\" a nurse I didn't know said as she walked in. \"My name is Elli and I'm covering for Sandra today.\" She seemed vaguely familiar, but the name wasn't one I knew.\n\n\"John Hutchens,\" I said, offering my hand as I fought to regain control from my maudlin thoughts. She took my hand, but instead of shaking it, she squeezed it, letting me know she understood.\n\n\"What beautiful roses!\" Elli said a moment later as she checked my Maddie's medicine and stats. \"I'm sure the red ones are for Valentine's Day, but why the yellow?\"\n\n\"Our anniversary,\" I answered in monotone. \"Yellow roses are her favorite.\"\n\n\"How many years have you been married?\" Elli asked. I frowned. She was a lot more inquisitive than Sandra.\n\n\"Forty-nine years today,\" I replied, and then added sadly, \"Maddie wanted a big party on our fiftieth. She used to say that was why she fought so hard against the cancer.\"\n\nElli smiled sadly and nodded. I didn't need her to tell me that Maddie wouldn't live that long. My wife was only days away from dying, maybe hours. She had been for nearly a month.\n\n\"It sounds like Valentine's Day is very special to you both,\" Elli said gently. \"Maybe she fought so hard these last weeks because she wanted to share one more with you.\"\n\n\"Maybe,\" I shrugged, but then nodded sadly and added, \"It would be just like her. She saved all the important things for Valentine's Day.\"\n\n\"Really? Like what?\" Elli asked. She was done checking on Maddie, but Elli didn't seem to be in a rush to leave. That was different too. Sandra or whoever else was covering Maddie's room never stayed very long.\n\n\"Well,\" I replied, smiling for the first time in a long time. \"I learned about the pending births of all three of my children on Valentine's Day. It was funny with my youngest Danny because Maddie was nearly four months along. I knew she was pregnant with him almost from the beginning, but I let her tell me when she was ready.\"\n\n\"How old are your children?\" Elli asked, making conversation. I knew it was a kindness. She must have seen my tears when she walked in.\n\n\"Kyle is forty-five,\" I replied. \"And Daniel is thirty-five.\"\n\n\"And your third child?\" she prompted.\n\n\"Elizabeth would be forty this year,\" I answered, losing my smile. \"She died in a car crash when she was seventeen.\"\n\n\"I'm sorry,\" Elli said gently. I shrugged.\n\n\"It was a long time ago.\"\n\n\"So, what made Valentine's Day so special to Maddie?\" the nurse asked, actually sitting down in the room's spare chair.\n\n\"Well,\" I said. \"Part of that's my fault and part of it was fate.\"\n\n\"Fate?\" she asked.\n\n\"We met, had our first kiss and were married on Valentine's Day,\" I smiled.\n\n\"I hope not all the same year!\" Elli laughed.\n\n\"Actually, none of them happened the same year,\" I grinned. \"It was ten years to the day I met her that we got married.\"\n\n\"And your first kiss and date?\" she asked.\n\n\"Oh, that's a long story,\" I sighed.\n\n\"I have time,\" she replied confidently.\n\n\"What about your other patients?\" I asked.\n\n\"The hall is pretty quiet today,\" she replied. \"The other nurses will come and get me if they need me.\"\n\n\"You're being very kind, but it's not necessary,\" I said. \"You don't have to sit hear and listen to an old man ramble on.\"\n\n\"I don't plan to,\" she smiled. \"Maybe it's the holiday, but whatever the reason, I'm in the mood for a good love story and it sounds like you have one to tell.\"\n\n\"I'm not sure I want to share it,\" I said honestly after a brief hesitation.\n\n\"I know,\" Elli said cryptically. \"But you need to. It will help you remember Maddie as she should be remembered, not like this.\"\n\n\"Are you studying psychology?\" I frowned.\n\n\"Hardly!\" Elli laughed. \"Like I said, I just like a great love story.\"\n\n\"I don't know how great it is,\" I shrugged. \"But it is very much a love story.\"\n\n\"Then tell me, please?\" she asked again. I surprised myself by smiling and nodding. \n\n\"I haven't thought about how Maddie and I met and fell in love in quite a while,\" I began, but then grimaced and admitted, \"Or should I say that I haven't let myself remember?\"\n\n\"It doesn't matter,\" Elli said. \"You're remembering now and that's all that counts.\"\n\n***\n\n\"Come on mom!\" I cried. \"It's an upperclassman dance and I'm one of the few sophomores who got asked to go!\"\n\n\"I'm sorry John,\" my mother replied. \"But it's your cousin's wedding and we already responded that you were coming with us.\" \n\n\"What kind of sap gets married on Valentine's Day!\" I snapped angrily. \n\n\"Your cousin Thomas,\" my mother replied. I could tell there was no point in arguing with my mother. It was her brother's son getting married.\n\n\"Dad, you understand?\" I asked, turning to him. \"Shelly Bonia asked me to go with her and she's a senior. If I don't go, she'll never speak to me again!\"\n\n\"Is she the girl you've been mooning over for the last month?\" my father asked.\n\n\"I wasn't mooning,\" I said in embarrassment. My father laughed and I continued quickly, \"But I do like her.\"\n\n\"Then tell her why you can't make it and ask her out,\" my father shrugged. I looked back and forth between my two parents and tried to think of something to say that would convince them, but I knew it was pointless.\n\n\"I can't wait until I get out of this house!\" I cried in frustration. \"And live by my own rules!\"\n\n\"That's nice dear,\" my mother said, only making me angrier.\n\nI told Shelly I couldn't go to the dance the next day at school. She was surprisingly good about it, but that didn't stop her from asking one of my best friends instead. I was so mad that I barely spoke with my parents for the next two weeks.\n\n\"You look nice,\" my mother said as I climbed into the car wearing the new suit she bought me for the wedding. I grunted and she shook her head.\n\n\"John, don't you think it's about time you stopped moping?\" my father frowned. I didn't bother to answer and he rolled his eyes.\n\nThe drive should have taken an hour, but of course it took two because of an accident. We barely made it to the church on time and the mass was long and boring. I was sitting next to my mother checking out the girls on the other side of the aisle. I couldn't find one that looked close to my age.\n\nI noticed that my cousin Jenna wasn't anywhere to be seen. She was the only cousin close to my age and we got along, but she was probably home watching her younger sister. Lucky her!\n\nI was so bored and distracted that I almost missed the bride suddenly bursting into tears and running out of the church when it was time to say the vows. The room filled with a not so low murmur. \n\n\"Oh my!\" my mother said.\n\n\"Poor Thomas,\" my father added.\n\n\"It serves him right for ruining my chances with Shelly...\" I began, but my father cut me off.\n\n\"That's about enough of that!\" he snapped, surprising me. Pop wasn't the type to get angry easily. \"I know you're fifteen, but do you think you can break away from your self absorption long enough to feel for someone else?\"\n\n\"This was supposed to be Thomas's special day,\" my mother put in. \"The day he married the woman he loved. Now all it will be is a painful memory.\" \n\nMy parents fell silent and I looked around the church. People on both sides of the aisle looked upset. My aunt Eve was in tears and my uncle Charlie was doing his best to console her. The bride's mother looked mortified and confused. She obviously had no idea her daughter was having doubts.\n\n\"I'm sorry,\" I said a few moments later, realizing just what kind of a jerk I was being. My father nodded and my mother patted my hand.\n\n\"I'd better go help Charlie with Eve,\" she said before standing and making her way toward my uncle and aunt.\n\nWe spent another half hour in the church before the bride's father stood at the podium, apologized and called off the wedding. The church emptied very quickly. I wasn't sure where we were going. Neither was my father. We waited for mom by the entrance.\n\n\"We're going back to Charlie's,\" she said without preamble. \"Thomas and his brother are on their way there. We'll probably be sleeping over.\" I took a step toward the car, but mom stopped me.\n\n\"John, you're not coming,\" she said. \"There isn't enough room for everybody. You're going with aunt Judy. She has a spare bed and only lives twenty minutes away. We'll pick you up tomorrow.\"\n\n\"I really am sorry,\" I said, surprising myself.\n\n\"I know John,\" my mother smiled sadly. \"It's okay. Be good and we'll see you soon.\"\n\nThe trip to aunt Judy's house was uneventful with the exception that she spent the bulk of the time gossiping about the family. I learned more of our family's little dirty secrets then I knew existed!\n\n\"Your cousin Jenna is home watching little Francine,\" uncle Karl said during one of the few breaks in aunt Judy's diatribe. \"Her friend Madeline is keeping her company. She's sleeping over tonight.\"\n\n'Oh great!' I thought. 'This should be fun!' I was certain it was going to be a long night. 'Just what I need! Two giggling girls!'\n\n\"Don't worry,\" my uncle laughed after seeing my expression. \"They'll probably hide out in Jenna's room when we get home.\"\n\n\"You know,\" aunt Judy said with a smirk. \"Madeline is a very nice girl.\"\n\n\"I'm sure she is,\" I said, hiding my groan.\n\n\"She's cute too,\" uncle Karl put in. This caught my interest. \"Strawberry blond hair and she plays soccer.\"\n\n\"What's that have to do with anything?\" Aunt Judy asked. The two argued for the few minutes we remained in the car. I ignored them. Uncle Karl and aunt Judy were always arguing, but it didn't mean anything. \n\n\"Hello John,\" my cousin Jenna said in surprise when we entered the house. Her parents explained what happened and Jenna shook her head sadly.\n\n\"Poor Thomas,\" she said.\n\n\"Go introduce your cousin to Madeline,\" my aunt said in that tone. Jenna and I looked at each other and rolled our eyes. My aunt either ignored or missed it. She added, \"Your father and I are going upstairs to get changed.\" \n\nI heard giggling in the other room as we neared and fought back a groan. I walked into the living room and saw that it was little Francine laughing, not Madeline. That was a relief! I really hated giggly girls. Madeline was tickling my younger cousin unmercifully.\n\n\"Madeline,\" Jenna called, getting the girl's attention. \"This is my cousin John.\"\n\nThe strawberry blond let go of Francine and stood to meet me. She looked a little embarrassed. I couldn't tell if it was because we caught her tickling Francine or just because of meeting me.\n\n\"Hi,\" she said, smiling gently. I smiled back and stared into her eyes. For some reason I was expecting blue or green even, but they were a soft brown. \n\n\"John?\" my cousin prompted with a frown. I blinked and suddenly realized I was staring.\n\n\"Hello Maddie,\" I said as if nothing odd had happened.\n\n\"No one calls me that,\" she said with a frown.\n\n\"Don't worry,\" I grinned. \"You'll get used to it.\"\n\n\"John!\" Francine cried and jumped into my arms before Madeline could retort. I hugged my younger cousin and gave her a quick kiss, but my eyes kept drifting back to Maddie.\n\n\"Sorry to ruin your night,\" I said once Francine let me go.\n\n\"You're not ruining anything,\" Jenna smiled. \"Now there are four of us and we can play charades!\" \n\n\"Oh no!\" Madeline cried.\n\n\"Don't bother arguing,\" I laughed. \"Jenna loves charades.\"\n\n\"I know,\" the strawberry blond moaned. \"She beats me every time!\"\n\n\"Oh will you two stop complaining!\" Jenna laughed. \"You can be a team and I'll play with Francine.\"\n\n\"I guess we'll have to humor her,\" Maddie said.\n\n\"If we must,\" I sighed loudly.\n\n\"She is my best friend and your cousin.\"\n\n\"Are you two done yet?\" Jenna asked with a raised eyebrow.\n\nThe game actually ended up being fun for a change. The teams were pretty even and Madeline was a good guesser. Somewhere in the middle Uncle Karl and aunt Judy joined us and formed a third team. Uncle Karl also gave me a pair of sweats and a tee shirt to change into. They were big, but at least I was able to get out of my suit!\n\nI spent much of the time stealing glances at Madeline. She was wearing flannel pajamas just like the other girls, but I thought she still looked amazing in them. I think she saw me looking, but she never said anything.\n\nThe game ended and uncle Karl and Aunt Judy went to bed. It was getting late. They took a complaining Francine with them.\n\n\"What do you want to play now?\" I asked, not ready to go to sleep and not wanting the night to end.\n\n\"I'm getting hungry,\" Jenna said. \"I think I'm going to sneak into the kitchen and make us some snacks. Why don't you two play a game without me?\"\n\n\"Don't you want help?\" Madeline asked. Jenna smiled and shook her head.\n\n\"So Maddie, what do you want to play?\" I asked as my cousin disappeared.\n\n\"Call me Madeline,\" she said, but I thought she was smiling slightly.\n\n\"Howe about we play...\" I began, but she cut me off.\n\n\"Let's play chess,\" she said. \"Jenna hates the game and I haven't played in a while.\"\n\n\"Okay,\" I shrugged and we set up the board. Madeline was very good. I loved watching her stare intently at the board. She beat me the first game pretty handily.\n\n\"She cheats!\" Jenna said as she rejoined us with a bowl of popcorn and some drinks.\n\n\"I do not!\" the strawberry blond snapped.\n\n\"Maybe not,\" I grinned. \"But you lie! You said you haven't played in a while.\"\n\n\"I haven't!\" Maddie argued.\n\n\"Didn't you say you beat your father for the first time recently?\" Jenna asked helpfully. Her friend gave her a nasty look.\n\n\"That was last week!\"\n\n\"And a week isn't recent?\" I asked.\n\n\"Not considering how often she normally plays!\" Jenna laughingly answered.\n\n\"Do you mind if we play again?\" I asked my cousin.\n\n\"No,\" she shrugged. \"It will be fun to watch her trounce someone other than me for a change!\"\n\n\"Thanks for the vote of confidence,\" I frowned, causing both girls to laugh.\n\n\"How about we make a bet?\" I asked Madeline.\n\n\"What kind of bet?\"\n\n\"Well if I win, you be my valentine and let me call you Maddie,\" I smiled. \"If you win, I'll call you Madeline.\"\n\n\"Deal!\" she grinned.\n\nWe were only a few moves in when she took one of my knights. A few moves later I lost a bishop. I finally took one of her pawns, but she took my queen the next turn.\n\n\"This is almost too painful to watch!\" Jenna laughed. \"She's killing you!\" I shrugged and remained silent. \n\nI watch Madeline's face. She was so intent on boxing in my king that she barely paid attention to my moves. I saw her smile triumphantly when I didn't protect my other bishop. She took it and Jenna shook her head. I moved my remaining rook across the board and ended the game.\n\n\"Maddie, that's checkmate,\" I smiled.\n\n\"What?\" my cousin asked in disbelief as she stared at the board. Madeline shook her head as she realized what I'd done.\n\n\"He let me take most of his major pieces while he maneuvered me into checkmate,\" she said. \n\n\"Sometimes a good offense is not necessarily a good defense,\" I put in.\n\n\"Let's play again!\" she demanded.\n\n\"Another time,\" I said.\n\n\"Chicken!\" Jenna laughed.\n\n\"Maybe,\" I shrugged. \"But I won the bet, didn't I Maddie?\"\n\n\"Yes,\" she said with another shake of her head. \"Just don't let my mother hear you call me that. She hates that name!\"\n\n\"I won't,\" I grinned. \"Maybe I'll just call you 'my valentine' in front of her?\"\n\n\"Oh brother!\" Jenna snorted.\n\nWe stayed up until four o'clock in the morning playing games and watching television. Jenna was the first to poop and go to sleep. Maddie and I got into a marathon game of monopoly. I didn't want it to end but eventually one of us won and it was time to go to bed. \n\nMy parents came by relatively early the next day. They said my cousin was doing as best as could be expected. We shared brunch with uncle Karl and Aunt Judy before leaving.\n\n\"You owe me a game of chess,\" Madeline said with a smile as I grabbed my coat. \"To see who's better.\"\n\n\"That's easy. You are,\" I smiled, and then laughed and added, \"Unless of course we make a bet.\"\n\n\"Happy Valentine's Day,\" Maddie laughed with a shake of her head. She surprised me by leaning forward and giving me a quick peck on the cheek.\n\n\"Happy Valentine's Day!\" I nearly stuttered. I took one last look at Maddie before saying good-bye and leaving. \n\nMy parents and I were on the road soon afterward. My mother and father told me some of the details of what happened. I didn't really pay that much attention. I was thinking about Maddie. It was too bad she lived forty minutes away.\n\n***\n\n\"Did you ever get a chance to play that chess game?\" the nurse asked me as I came back to myself from my memories.\n\n\"Eventually, but not until years later,\" I replied, taking Maddie's hand in mine and squeezing as I smiled down at her. \n\nThe cancer ravaged my wife's body until she was only a shell of her former self. Her hair was gone and her complexion was yellow and jaundiced. It was sad, but I could still see my Maddie there despite it all.\n\n\"When did you meet next?\" Elli asked.\n\n\"Not bored yet?\" I asked.\n\n\"Hardly,\" she replied with a smile.\n\n\"Okay,\" I shrugged, finding myself enjoying the memories despite the pain they caused. \"But there really isn't much to tell.\"\n\n***\n\n\"John! You came!\" my cousin Jenna cried.\n\n\"I told Jill that we had to at least stop by,\" I smiled. \"Otherwise you'd make my life a living hell!\"\n\n\"You've got that right!\" Jenna laughed.\n\n\"Jenna, this is my girlfriend Jill,\" I said in introduction. \"Jill, this is my cousin Jenna.\"\n\n\"Nice to meet you,\" Jill said.\n\n\"You too!\" Jenna smiled. \"Welcome to the first annual Leighton Valentine's Day party!\"\n\n\"First annual?\" I laughed.\n\n\"I plan on keeping the tradition going,\" Jenna grinned.\n\n\"One year is not a tradition,\" I argued.\n\n\"It is if I say so,\" she retorted.\n\n\"I believe you,\" I laughed, holding my hand up defensively. \"It's too bad I'll be in the army this time next year. I'll miss the party.\"\n\n\"Still planning on joining up?\" my cousin frowned. She didn't like the idea of me becoming a soldier. Neither did Jill so I quickly changed the subject. ",
        "\"Where is your valentine Donnie?\" I asked. \"He owes me ten bucks!\"\n\n\"I won that bet!\" Donnie said as he appeared behind Jenna and hugged her. Donnie and I met in the fall when Jenna and her family came for a visit on my mother's birthday. We quickly took to each other and became friends. We both loved arguing sports. \n\n\"No way!\" I cried. \"You took...\"\n\n\"Jill,\" my cousin interjected before we could continue. \"Why don't we leave these two to themselves? They'll be arguing for the next hour over who owes who what, and why. Let me introduce you around.\"\n\n\"Happily,\" Jill said and both ladies disappeared.\n\n\"She seems pretty hot,\" Donnie said once we were alone.\n\n\"You have no idea!\" I laughed. Jill had long blond hair and a great body that she wasn't against sharing, at least with me. \n\n\"How long have you been dating?\" he asked.\n\n\"Since New Year's Eve,\" I replied. \"We met at a friend's party.\"\n\n\"You lucky shit!\" Donnie grinned.\n\n\"Ain't that the truth!\" I laughed. \"Let's go get a drink.\" \n\nWe made our way over to the bar and I was startled to see Maddie acting as the bartender and handing out drinks. I hadn't really forgotten about her over the last two years, but as time passed our first meeting became more of a fond memory then anything else. \n\nI saw Maddie smile in recognition and felt my chest tighten for no reason. I suddenly felt on edge and a little hyper. She looked amazing! Her body had filled out nicely. The feelings I thought of as puppy love when I remembered our first meeting resurfaced in force.\n\n\"Hello John,\" she said.\n\n\"Hello Maddie,\" I smiled. \"I see Jenna assigned you for bar duty.\"\n\n\"Not really,\" she shrugged. \"I volunteered. I don't have a valentine this year. My boyfriend and I broke up a couple of weeks ago.\"\n\nAnd suddenly, I didn't feel so lucky to have Jill in my life.\n\n\"My valentine is around here somewhere with Jenna,\" I said, holding in a sigh. What was wrong with me?\n\n\"I know, I met her earlier,\" Maddie said. \"She seems nice.\"\n\n\"She is,\" I shrugged, and then shocked myself by adding, \"But you'll always be my first valentine.\"\n\n\"You were mine too,\" she laughed as she handed us our drinks.\n\n\"What was all that about?\" Donnie asked when we left.\n\n\"What?\" I asked in reply. He shook his head and let the subject drop.\n\nThe party was fun and Jill seemed to fit in easily. I got a lot of complements from those who knew me. Yet, despite all that, my eyes kept drifting toward Maddie. \n\n\"Okay, this is getting silly,\" Donnie suddenly said when Jill and Jenna were off in the kitchen.\n\n\"What?\" I asked.\n\n\"Come with me,\" he demanded, pulling me toward the bar.\n\n\"Where are we going?\" I asked, but I already knew the answer.\n\n\"Madeline, it's time for you to take a break,\" Donnie said, taking her hand and placing it in mine. \"Go dance with John.\"\n\n\"But...\" I began.\n\n\"It's just a dance between old friends!\" he snapped.\n\n\"You don't have to, if you don't want to,\" Maddie said, trying to let go of my hand. \n\n\"Oh, he wants to!\" Donnie snorted.\n\n\"Come on, let's go,\" I said as I blushed.\n\nWe made our way to the small dance floor and danced to the end of a fast song. I saw Donnie make his way to the DJ and say something just as the song finished. The guy nodded and quickly switched albums on the other table. The next song was slow. I shook my head, but didn't let go of Maddie.\n\n\"Shouldn't you be dancing with Jill to this kind of song?\" she asked.\n\n\"Yes,\" I replied honestly. \"But she's not here and I'd prefer to dance to it with you.\"\n\nMaddie shook her head, but didn't let go when I pulled her close. It felt wonderful to have her in my arms. It was like she belonged there. The song ended far to quickly. We parted slowly. I had a strong urge to kiss her and I think she would have let me, but I was at the party with Jill. It would be wrong.\n\n\"Thanks for the dance,\" Maddie said as I let go.\n\n\"Thank you,\" I smiled. \"Happy Valentine's Day, my first valentine.\"\n\n\"Happy valentine's day,\" she replied, smiling as well. \"You know, you still owe me that game of chess,\"\n\n\"I know,\" I said. \"One day.\"\n\n\"One day,\" she agreed and drifted away. I watched her go and noticed Jenna and Jill returning from the kitchen. I also saw Donnie watching me. I looked at him and shrugged. He shook his head.\n\n***\n\n\"Oh how romantic!\" Elli cried.\n\n\"Please!\" I snorted. \"Jill found out about the dance and grilled me for the next three days. She never did want to go visit Jenna again!\"\n\n\"How long did you two date?\"\n\n\"On and off until the next Christmas,\" I replied. \"I joined the army that fall and was stationed a few states over. You know the old saying about long distance relationships.\"\n\n\"I know it, but don't put much credence into it,\" the nurse replied. \"I've found that they work as good as any other relationship for two people who really love each other.\"\n\n\"You're probably right,\" I shrugged.\n\n\"So, did you finally ask Maddie out on a date the next time you met?\" Elli asked, switching topics.\n\n\"I planned on, but it didn't work out,\" I sighed, and then smiled and added, \"Although we did have our first fight.\"\n\n\"You had a fight before your first date?\" Elli asked with a raised eyebrow. \"That sounds very interesting.\" Her expression made me smile. It was very similar to one Maddie used to show me when I did something particularly stupid.\n\n\"It wasn't really,\" I said. \"Actually, it was pretty embarrassing.\"\n\n\"Why not let me be the judge of that?\" Elli asked with a smile.\n\n\"I'd rather not,\" I laughed. \"Isn't it time you went and checked on your other patients.\"\n\n\"Oh no you don't!\" she laughed. \"I'm too involved in your story for you to stop now!\"\n\n\"Okay,\" I sighed. \"But don't think less of me because of what I'm about to tell you.\"\n\nI told Elli about the next time Maddie and I met. I was tempted to give her a quick summarized version, but that wouldn't be fair. More important, I wanted to share my memories now. I'd held them so tight for so long that it felt oddly therapeutic to tell Elli. Actually, it was more than that. I kept glancing down at Maddie as I spoke. It hurt to see her like she was now, but the memories reminded me who she really was.\n\n***\n\n\"John, this party better be great for the amount of time we spent on the road getting here!\" my squad mate Steve grumbled.\n\n\"It will be,\" I grinned. \"My cousin Jenna throws a great party. She has a lot of cute friends too!\"\n\n\"But ten hours on the road...\" Steve continued to complain.\n\n\"That's why it's called a road trip!\" Jack, another squad mate interjected.\n\n\"Exactly!\" I agreed.\n\n\"Besides, John is hoping this girl who was at his cousin's party last year shows up again,\" Jack added knowingly.\n\n\"Aha!\" Steve cried. \"Now the truth comes out!\"\n\n\"Jerk!\" I snapped at Jack, but he just grinned and shrugged.\n\n\"I can't believe I sat on a bus for ten hours because of a girl!\" Steve whined.\n\n\"Oh stop bitching! I didn't force you to come. All I did was ask you if you wanted to join me on my leave. I'm starting to regret it,\" I said pointedly.\n\n\"Hey, relax! I'm just kidding,\" Steve said, realizing I was really angry. \"It's Valentine's Day and I'm not dating anyone. A party with a lot of good-looking women is just what I need. I'm planning on wowing them with my uniform!\"\n\n\"Good luck,\" I laughed, letting go of my anger.\n\n\"You've got a chance,\" Jack put in. \"These girls don't know that you're a jerk yet!\" The two exchanged some unpleasant words, but I ignored them. It felt weird visiting Jenna's parent's house after being in the army for almost half a year.\n\nWe decided to walk the few miles from the bus station because we needed the stretch our legs after being cooped up for ten hours. At least, that's what we told ourselves. The truth was we didn't want to spend the money for a cab. \n\nWe were a block away when I saw two young ladies making their way toward the party. They looked familiar. \n\n\"Hey!\" I called, making them turn. They looked nervously at the three of us. I smiled in recognition and asked, \"Sharri, is that you?\"\n\n\"John?\" she asked in reply as we moved closer.\n\n\"Yep,\" I grinned.\n\n\"You look different in that uniform,\" Sharri said, relaxing and smiling. She looked better than I remembered too. Either that or it was the fact that I was a soldier now and just about any female looked good. \n\n\"This is Steve and Jack,\" I introduced. \"We're on leave and I thought we surprise my cousin Jenna.\"\n\n\"I'm Lisa,\" the other girl said before Sharri could introduce her. \"We're on our way to the party ourselves.\"\n\n\"That's nice to know,\" Steve said, eyeing Lisa. She was doing the same to him. Jack and I exchanged a look and had to fight hard not to laugh.\n\nMy cousin's house was only a block away and it didn't take us long to get there. Lisa was nice, but Sharri was the one who caught my eye. She was a cute brunette who knew it. I always liked a girl with confidence as long as she had a sense of humor to go along with it.\n\n\"John!\" Jenna cried excitedly when she saw me walking up. \"What are you doing here?\"\n\n\"Hey,\" I grinned. \"How could I miss the second annual Leighton Valentine's Day party?\"\n\n\"You're lucky you didn't!\" my cousin grinned.\n\n\"This is my friend and squad mate Jack,\" I said, and the looked around and frowned.\n\n\"Lisa and Steve went to get a drink,\" Sharri said. \"It looks like they're hitting it off rather well.\"\n\n\"Oh well,\" I shrugged, \"I'll have to introduce to my other squad mate later. So how have you been?\"\n\n\"Jack, why don't you come with me to get drinks while we let these two catch up?\" Sharri asked before Jenna could answer.\n\n\"Sounds good,\" Jack shrugged.\n\n\"Thanks,\" I smiled, and then turned to my cousin after they went to the bar and asked, \"By the way, where's Donnie?\" I could tell it was a bad question from her expression.\n\n\"We broke up last night,\" Jenna admitted.\n\n\"What?\" I asked in surprise. It just didn't make sense. \"What happened?\"\n\n\"I'd rather not talk about it,\" Jenna sighed. \"It's so embarrassing!\"\n\n\"What is?\" I asked in confusion.\n\n\"I'm having a Valentine's Day party and don't have a date,\" she laughed, but looked close to tears.\n\n\"Hey!\" I said hugging her. Jenna squeezed me tight. \"Why don't we go somewhere and talk?\"\n\n\"Maybe later,\" she smiled, wiping tears from her eyes. \"I can't leave right now.\"\n\n\"Are you sure?\" I asked. My cousin nodded.\n\n\"Hello Jenna,\" someone said from behind me. I recognized the voice instantly. I turned and there was Maddie. Her hair had grown a bit, but other than that she looked just as amazing as the last time I saw her.\n\n\"Hi Maddie,\" I smiled.\n\n\"John!\" she said in surprise. \"I didn't know you were coming.\"\n\n\"It was a surprise for Jenna,\" I shrugged. Maddie nodded, but didn't look happy. It confused me. I thought...well, you know what I thought.\n\n\"There you are Madeline!\" a decent looking guy said as he joined our little party. I watched the way he was looking at her and sighed. Now Maddie's expression made sense.\n\n\"This is Bernie,\" Maddie said in introduction. \"Bernie, this is Jenna, my best friend in the world and her cousin John.\"\n\n\"Pleasure,\" Bernie said, holding out his hand. I felt an almost uncontrollable urge to push it away and slug him, but instead I shook his hand and smiled.\n\n\"Hello,\" Jenna said, giving him a quick kiss on the cheek.\n\n\"Madeline is always bringing you up in conversation back at the university,\" Bernie smiled. \"I feel like I know you already.\" \n\n\"Jenna and Maddie have been friends forever,\" I said, hiding my surprise at the fact that Maddie was going to college. Not many women did in the fifties.\n\n\"I know,\" he said with a frown for some reason. I wondered what was bothering him. I didn't have to wait long to find out. He turned to Maddie and asked, \"How come he calls you Maddie? I thought you hated that name.\"\n\n\"She does,\" I grinned. \"But I won the right a few years ago by beating her in chess.\"\n\n\"You beat her in chess?\" Bernie said in amazement.\n\n\"It was a lark!\" Maddie laughed. It still caused my chest to tighten when she did that, but I hid my reaction as best as possible.\n\n\"Now, now!\" I laughed. \"I won fair and square.\"\n\n\"You still owe me a rematch,\" she said.\n\n\"You name the time and place.\"\n\n\"Jenna, where's the chessboard?\" Maddie asked, I think only half in jest.\n\n\"You will not go off and play chess during my party!\" Jenna snapped, but she was fighting hard not to laugh.\n\n\"I guess it would be unfair to you and Bernie,\" Maddie sighed.\n\n\"You're just chicken!\" I taunted, and then grinned and added for good measure, \"Maddie!\"\n\nI thought I was doing a good job hiding my feelings for her, but Bernie must have picked up on something.\n\n\"Don't you think it's a bit childish to insist on calling her a name you know she doesn't like?\" he asked me with a frown.\n\n\"But of course,\" I shrugged.\n\n\"Forgive my cousin,\" Jenna said, stepping in. \"John thinks his childishness is part of his charm.\"\n\n\"Hey!\" I cried indignantly, but then grinned and added, \"Actually, I don't know whether to be offended or thankful that you're willing to admit I have any charm at all.\"\n\n\"Maybe a little,\" my cousin said with a grin of her own.\n\n\"What do you think Maddie?\" I asked, now using the name more to irritate Bernie than her. \"Do you think I have any charm?\"\n\n\"Stop calling her that!\" Bernie said sounding seriously annoyed. \"It's rude!\"\n\n\"Hey Bernie, maybe I am a little childish and rude at times,\" I said, no longer smiling. I didn't like this guy and it had nothing to do with the fact he was dating Maddie. That was just extra incentive. \n\n\"But it's really none of your business. I've known Maddie longer than you and if there's one thing I can tell you about her, it's that she can take care of herself.\"\n\n\"I'm sure she can,\" he retorted. \"But she doesn't have to as long as she's dating me.\"\n\n\"John, would you care to dance?\" Sharri asked as she and Jack returned. It was obvious she was trying to stop me from causing a scene at my cousin's party. I gave Bernie one last look, but he seemed to back off a little when he saw Jack. The uniform was a dead giveaway that we were friends. It was too bad really.\n\n\"Sure,\" I said, taking Sharri's hand. I also took the drink she had for me and downed it in one gulp.\n\n\"Jack, why don't you ask my cousin for a dance?\" I prompted.\n\n\"Nothing personal, but my boyfriend and I just broke up,\" Jenna said quickly to Jack before he could ask. \"I'm not really ready to date.\"\n\n\"Who said anything about dating?\" I frowned. \"I don't know what happened between you and Donnie, but I'm willing to bet a month's pay that you'll work it out eventually.\"\n\n\"Besides, Jack has a fianc\u00e9 who lives across the country that he's disgustingly loyal to. I just thought you'd both like to have some fun. It is a party after all.\"\n\n\"Let's dance,\" Sharri insisted, pulling me toward the floor. I went with her. A few minutes later I was happy to see Jack and Jenna dancing, but my smile quickly disappeared when I saw Maddie and Bernie join them.\n\n\"What was that all about?\" Sharri asked midway through the first song.\n\n\"Nothing,\" I shrugged. \"Let's go get another drink.\"\n\nA couple hours later I was feeling much better. Sharri was a lot of fun and quite a looker. The alcohol didn't hurt either. I tried hard to ignore Maddie and Bernie whenever I saw either one of them. For some reason I was just as mad at her as I was at him. It didn't make sense. I guess that was the alcohol as well.\n\n\"I'm stealing my cousin for a few minutes,\" Jenna said toward the end of the night, taking me away from Sharri and the bar.\n\n\"What's up?\" I asked.\n\n\"Bernie went to go get the car. He and Maddie are leaving. She'd like to talk to you for a moment before she goes,\" my cousin replied. I shrugged, but followed her to where Maddie was waiting.\n\n\"I'm sorry about Bernie,\" Maddie began once Jenna left us alone. \"He can be a little over protective at times.\"\n\n\"He's a jerk!\" I snapped angrily, causing Maddie to frown.\n\n\"You're drunk,\" she sighed.\n\n\"Certainly,\" I shrugged. \"But drunk or sober, he'd still be a jerk!\"\n\n\"This is pointless,\" Maddie mumbled.\n\n\"Probably,\" I nodded in agreement. I wasn't quite weaving, but on the other hand I wasn't steady on my feet either.\n\n\"Do you ever think we'll be able to play that chess game?\" she asked.\n\n\"Probably not,\" I laughed sadly.\n\n\"Goodbye John,\" she said and turned to go. It sounded so final.\n\n\"Maddie, wait!\" I cried, grabbing her and turning her back toward me.\n\n\"What?\" she asked.\n\n\"Only this,\" I said softly and then kissed her. She didn't pull away, but neither did she return my kiss. \"You'll always be my first valentine.\"\n\nMaddie touched her lips where I kissed her. She had a thoughtful look, but didn't stop me when I turned and left.\n\n***\n\n\"You didn't say that you shared your first kiss the third time you met!\" Elli said excitedly. \"What a perfect love story!\"\n\n\"That's because you interrupted before I finished,\" I sighed.\n\n\"What do you mean?\" she asked. \"You mean that wasn't the end of the story?\"\n\n\"Not hardly,\" I sighed. \"After saying goodbye to Maddie, I was suddenly very angry and still drunk. Instead of going to find Jenna or Sharri, I went outside.\"\n\n\"You didn't!\" Elli cried.\n\n\"Yep,\" I said with a shake of my head. \"First I broke Bernie's nose and then I threw up all over his car.\"\n\n\"What did Maddie say when she found out?\"\n\n\"You don't want to know,\" I groaned, remembering. \"Thankfully, I was drunk enough to miss most of it.\"\n\n\"How did she ever forgive you?\" Elli asked in amazement.\n\n\"I'm not really sure,\" I shrugged. \"It probably helped that we didn't see each other for a while. My unit was called up and I spent the next few years in Korea.\"\n\n\"You were in the Korean War?\" Elli asked in surprise.\n\n\"Yes, I'm that old,\" I laughed. \"I'm actually so old I can even remember World War II, although I was only a kid.\"\n\n\"What was it like?\"\n\n\"Korea?\" I asked in clarification. She nodded. \"Cold.\"\n\n\"That's it?\" she frowned.\n\n\"What more do you want to know?\" I shrugged. \"It was war.\"\n\n\"What ever happened to Steve and Jack?\"\n\n\"Steve came home after the war, married a nurse and had a whole gaggle of kids,\" I replied. \"He died a few years back from a heart attack. I still keep in touch with his eldest boy. The family is doing well.\" \n\n\"And Jack? Did he ever marry that girl he was staying true to?\" Elli asked.\n\n\"Yes,\" I sighed. \"He married her the next month.\"\n\n\"That's so romantic!\" she cried.\n\n\"Yeah,\" I shrugged. \"It's too bad Jack didn't make it home.\"\n\n\"Oh,\" Elli said, sobering quickly. \"I'm sorry.\"\n\n\"Me too,\" I smiled sadly. \n\n\"So, when was the next time you saw Maddie?\" Elli asked, getting back to her questions about Maddie and me.\n\n\"We didn't seen each other until a few years after I got out.\"\n\n\"Valentine's Day?\" she asked. I smiled and nodded.\n\n\"The year we both turned twenty-four,\" I answered.\n\n\"One of your cousin Jenna's parties?\"\n\n\"No,\" I said with a shake of her head. \"Jenna stopped throwing Valentine's Day parties after that second year. It always reminded her of her breakup with Donnie.\"\n\n\"They didn't get back together?\" Elli asked in surprise.\n\n\"Of course they did,\" I smiled. \"But not until the Fourth of July the following summer. You should have seen the parties they threw after that! One year the fire works were so bad that the fire department needed to be called!\"\n\n\"So, how did you and Maddie finally get together?\"\n\n\"Fate, of course,\" I smiled, looking down at my wife of forty-nine years. I wasn't seeing the husk she had become. I was seeing the girl I fell in love with nearly sixty years ago when I was a boy of fifteen. I was seeing the young woman of twenty-four who finally forgave me and took me into her heart. \"The only way true love ever happens.\"\n\n\"Tell me!\" Elli insisted. I nodded and began to speak.",
        "***\n\n\"Did you get to Mr. Hodge's brakes?\" Mike asked.\n\n\"Just finished them a few minutes ago,\" I replied, wiping grease from my hands. \"They were in bad shape.\"\n\n\"They always are,\" Mike said with a shake of his head. \"How would you like to help me tune up my baby?\"\n\n\"You're going to let me touch Beauty?\" I asked in surprise. Mike's car was like another child to him. Actually, it was more like a favorite child. He didn't let just anyone work on her.\n\n\"You've earned it,\" he smiled. \"By the way, tomorrow Mr. Kramer's coming in. I'll need some help with his transmission.\"\n\n\"Thanks Mike,\" I smiled. \n\nHe nodded as he moved to the chessboard set up in the corner of the room. He moved his rook a couple of places over and went to Beauty and popped the hood. I glanced at the board before joining him. We worked in companionable silence, joking back and forth. Every so often whosever turn it was would drift back to the chessboard and make a move. \n\nI'd only been working for Mike a few months. I had another job right after I got out of the army, but I didn't much like the boss. Mike's place was further from home, but I was a lot happier working for him, even if he did insist on playing chess as we worked. He said it was good for a mechanic to play chess. I didn't see it, but I always liked the game anyway.\n\n\"So, how did you become such a good mechanic?\" he asked when we were done for the day.\n\n\"I was always good with cars,\" I replied. \"I was transferred to the motor pool with a year and a half left in my tour. I learned a lot from a sergeant there. He sort of took me under his wing.\"\n\n\"Nice guy?\" Mike asked.\n\n\"Not really,\" I laughed. \"But a good one.\"\n\n\"He did a good job training you,\" Mike said. \"You're the first decent mechanic I've hired in ten years. You not bad in chess either.\"\n\n\"Thanks,\" I smiled. He shrugged. Mike wasn't one to give complements. In his mind, he wasn't giving me one now. He was just stating facts. He reminded me a lot of that sergeant I had in the army. \n\n\"Don't forget, we're knocking off early tomorrow,\" Mike said as we locked up. \"My wife wants me home. My older daughter is coming home from college with her boyfriend.\"\n\nThat was another oddity about Mike. Not many men were willing to pay for their daughters to go to college in the fifties. I knew a lot of it had to do with Mrs. Malone. She was a strong woman who started working during World War II while Mike was overseas. She never completely stopped working when he got back.\n\n\"You don't have to close the place,\" I offered. \"I can stay to normal closing.\"\n\n\"Thanks for the offer,\" he grinned. \"But Mrs. Malone says the shop will be closed at noon or there will be hell to pay, so we'll be closed at noon.\"\n\n\"I understand,\" I laughed.\n\n\"Besides, my wife wants you to come home with me for lunch,\" Mike slipped in. \"She'd like to finally meet you.\"\n\n\"I thought you had a wedding to go to tomorrow?\"\n\n\"Don't remind me,\" Mike frowned. \"Who gets married on Valentine's Day?\"\n\n\"A lot of people,\" I laughed. \"At least it's a Friday.\"\n\n\"So, can you make it? The wedding is later in the day and a few doors down at our neighbor's house. You can come home with me, meet the missus and my girls, and still be home in time for whatever girl your dating these days.\"\n\n\"I'm not dating these days,\" I shrugged. That wasn't completely true. I was dating. I just wasn't dating anyone seriously enough to warrant a Valentine's Day date. I didn't much care for the day anyway. \n\n\"Good!\" he grinned. \"Then you don't have an excuse not to come.\"\n\n\"Okay,\" I laughed, realizing that Mike was finally accepting me.\n\nFor months now it seemed like Mike was constantly testing me. He was a good boss, but never really all that friendly. I guess I passed whatever tests he was giving because suddenly he was acting a lot nicer and inviting me to his house. \n\n\"You've never met my younger daughter Doris, have you?\" he asked.\n\n\"No,\" I replied, all sorts of warnings going off in my head. I liked Mike, but I wasn't looking to make him my father-in-law! I suddenly wished that I did have a date for tomorrow night.\n\n\"She's a good kid,\" Mike smiled. \"Not bad at chess either. Almost as good as her older sister.\"\n\n\"I'll see you in the morning,\" I said, hiding my dismay.\n\n\"See you bright and early!\" he replied.\n\nNoon came very quickly the next day. Mr. Kramer's transmission ended up being a pretty big job. Good thing there was two of us.\n\n\"We'll just leave Beauty here for the night,\" Mike said when we were done.\n\n\"Afraid some of the wedding guest will hurt her?\" I teased.\n\n\"It's pays to be safe,\" he grinned. \"You never know what a bunch of drunks might do!\"\n\nI was about to laugh when I suddenly had a flash back to me puking on some guy's car. It took me a few seconds to remember whose and when. It seemed like a lifetime ago. Of course, thinking of Bernie reminded me of Madeline. I hadn't thought about her in a long time, at least not seriously. \n\nShe was probably married with kids by now. I just hoped it wasn't to that jerk Bernie. What a loser! I silently wished Maddie well wherever she was and shrugged.\n\n\"Are you okay?\" Mike asked.\n\n\"Fine,\" I smiled. \"Let's get going. I don't want to make you late. There's no telling what Mrs. Malone would do to me!\"\n\nMike's wife turned out to be really nice. She had a kind smile and a warmth about her. She made me feel at home almost instantly. Mike and I were just finishing a beer when his youngest came home.\n\nDoris was a looker. It almost made the thought of having Mike as a father-in-law bearable. It would certainly make my parents happy if I finally did marry and settle down.\n\n\"Daddy,\" Doris said nervously. \"It's time you to meet Herb. He'll be here in a few minutes. I had him park the car down the block so there's more room for the wedding guests later.\"\n\n\"He's coming here!\" Mike cried angrily. His face was bright red. Whoever this Herb was, Mr. Malone wasn't happy he was dating his daughter.\n\n\"It's time you meet,\" Doris said again. I looked around for a quick escape route. I wanted to be anywhere but in the middle of a family argument with my bosses' family.\n\n\"Come over and meet John,\" Mike said. \"He's a good guy and knows his way around cars. He's also a bit closer to your age!\" I fought hard not to groan. There was no escape now.\n\n\"Hi,\" I said.\n\n\"I'm sure he's a nice young man,\" Doris said to her father, ignoring me. \"But Herb's asked me to marry him and...\"\n\n\"He what!\" Mike yelled.\n\n\"What's wrong?\" Mrs. Malone asked as she ran in from out of the kitchen.\n\n\"Herb asked her to marry him!\" her husband yelled, only with slightly less volume.\n\n\"It's about time,\" Mrs. Malone said with surprising poise.\n\n\"You're okay with this?\" Mike asked in disbelief.\n\n\"If it's what Doris wants.\"\n\n\"But he's twelve years older than her! He could almost be her father!\"\n\n\"Michael, calm down. All this yelling is not helping,\" Mrs. Malone said. I watched Mike fight to control his temper. \"We might as well meet the man since he's here and has asked our daughter to marry him.\"\n\nThe room fell deathly silent as we waited for this Herb to arrive. It wasn't very long, but it felt like an eternity. Doris went outside instead of facing her father's obvious displeasure. \n\n\"What took you so long?\" I heard Doris cry a few minutes later. Herb had arrived.\n\n\"I bumped into your sister and her boyfriend on the way in,\" I heard a gruff voice answer. \"There's right behind me.\"\n\n\"Good,\" Doris said. \"Let's wait for them. Maybe my sister can help with daddy. He's being unreasonable.\"\n\nMike took a step toward the door, but his wife grabbed his arm to stop him. I thought he was going to pull himself free and go anyway, but Mike grit his teeth, let out a long breath and stood still.\n\n\"Mike,\" I said into the quiet. \"This is a family matter. I'm going to slip out the back door. I'll see you at work...\"\n\nThe front door opened before I could finish. I groaned as Doris walked in followed by three people. I was still contemplating escaping when I noticed exactly who was coming in. I froze in recognition.\n\n\"Sarge?\" I asked in amazement. \n\n\"Hutchens, what are you doing here?\" my old sergeant demanded. He was standing next to Doris. Another couple stood behind him. The girl looked enough like Doris for me to know they were related.\n\n\"I work for Mr. Malone,\" I replied, and then grinned and added, \"I'm also getting the picture that I was invited today in attempt to lore the innocent Doris from your dastardly clutches.\"\n\n\"You?\" he snorted. I shrugged, still grinning.\n\n\"You two know each other,\" Mike stated, more than asked.\n\n\"He's the sergeant I mentioned yesterday. The one who showed me how to be a mechanic,\" I replied.\n\n\"You did a good job,\" Mike admitted reluctantly.\n\n\"Hutchens has the touch,\" Herb shrugged. \"You either do or you don't. It seemed a waste not to teach him how to use it.\"\n\n\"Why don't we go to the kitchen and have lunch?\" Mrs. Malone smiled. \"It will give everyone a chance to get to know each other.\"\n\nMike and my old sergeant were still eyeing each other, but neither resisted as they were led to the kitchen. I grabbed Doris's elbow before she followed. She looked uncomfortable. \n\n\"I'm going to try and convince your father to show sarge Beauty after lunch,\" I said softly. \"Back me up.\"\n\n\"Daddy's car?\" Doris asked in confusion. \"Why?\"\n\n\"Doris, your father and sarge have only two things in common. First, they both love you,\" I grinned. She smiled tentatively and relaxed a little. \"The second is that they both love cars. Sarge will be impressed by Beauty and once your father sees sarge's reaction, well, we can only hope!\"\n\n\"Why are you helping me?\" she asked.\n\n\"I'm not,\" I shrugged. \"I'm helping the sarge. I owe him.\"\n\n\"Thanks,\" she said and we entered the kitchen. We received some interesting looks from those already sitting at the table. \n\nThe conversation started and I did my best to keep it focused on cars. Doris tried, but it was her mother's help that made the difference. Mrs. Malone obviously understood what I was trying to do. That made it a lot easier.\n\nA few hours later I was driving back to Mike's house for the second time. Mike was next to me and my old sergeant was in the back. They were still discussing Beauty in that tone that only true grease monkeys shared when we walked back into Mike's house.\n\nDoris took one look at them and gave me a quick kiss on the cheek. \n\n\"Hey!\" Sarge cried, causing everyone to laugh.\n\n\"I think it's time for me to leave,\" I said afterward.\n\n\"Past time,\" Sarge growled, causing more laughter. \"I'll walk you to the door.\"\n\nHe wasn't really mad. I saw Sarge seriously angry once. Thankfully, it wasn't at me. Some private who had no business in the motor pool used transmission fluid for an oil change. I thought the Sarge was going to kill him with his bare hands.\n\nMike got my coat while I said goodbye to Doris and her mother. Their other daughter and her boyfriend weren't in the room. Mike's wife saw me frown and guessed my thoughts.\n\n\"Christine and Bob had to go to the wedding,\" Mrs. Malone said as I put my coat on. \"She's in the wedding party. The bride is a very good friend. I'm sure they wish they could have said goodbye.\"\n\n\"Tell them it was nice meeting them,\" I smiled.\n\n\"See you at work tomorrow,\" Mike said.\n\n\"Bright and early,\" I replied.\n\n\"Not that early!\" he laughed.\n\nSarge walked me out of the house and to the sidewalk. It was nice to see him. I really did owe the man. I hoped everything would work out between him and Mike.\n\n\"John,\" he said once we were alone. \"Thanks for playing marine for me.\"\n\n\"Marine?\" I frowned.\n\n\"You gave me a beachhead to attack from,\" he grinned. \"I wasn't sure whether Doris's father was even going to let me into the house.\"\n\n\"Sarge,\" I laughed. \"You're one of the kind!\"\n\n\"Ain't that the truth!\" he laughed and stuck out his hand.\n\n\"Good luck,\" I said, shaking his hand. \"Mike's a good guy. Give him time. I'm sure your sunny disposition will win him over.\"\n\n\"But of course,\" he shrugged. You had to give the sarge credit. He had confidence to spare.\n\n\"I'll be seeing you sarge,\" I said with a gently shake of my head.\n\n\"John, we're not in the army anymore,\" he replied. \"You can call me Herb.\"\n\n\"Maybe in time,\" I laughed.\n\nMy car was around the corner. I started walking and shook my head at all the cars cluttering the street. The wedding must be starting soon. I passed the house where it was taking place. It was done up very nice.\n\n\"What is it about weddings and Valentine's Day?\" I sighed to myself.\n\nI was nearly past the house when the groom and his ushers appeared. They were laughing the way only drunk guys can laugh. I smiled and shook my head. Poor sap!\n\nI glanced at the groom and suddenly stopped smiling. He looked familiar. He didn't notice me, but I got a better look as he walked by. It was Maddie's old boyfriend Bernie.\n\n\"It can't be!\" I said to myself. What were the odds of bumping into Bernie again after all this time? \"The poor bride!\"\n\nI shrugged and walked around the block to my car thinking about the past. My car was still relatively warm from our trip to Mike's shop. I pulled out and headed for my place.\n\nI was only two blocks away when the possibility hit me. Could the bride be Maddie after all this time? \n\n\"No way!\" I cried, but almost without realizing it, I turned the next corner to go back. \"So what if it is? It's none of my business.\" Yet, a few minutes later I was in front of Mike's house. I pulled up in front and left the car in the middle of the street. I knocked on his front door a little too hard.\n\n\"Yes?\" Mike said with a frown as he opened it. He saw me and added, \"Forget something?\"\n\n\"What's the name of the bride?\" I asked without preamble.\n\n\"What?\" he asked in surprise.\n\n\"Your neighbor's daughter,\" I said. \"The one who's getting married. What's her name?\"\n\n\"It's Madeline,\" Mrs. Malone answered as she, Herb and Doris came to the door.\n\n\"Maddie!\" I groaned. Everyone looked confused except Doris. She was actually more startled.\n\n\"You're that John?\" she asked. \"Jenna's cousin?\"\n\n\"You know Jenna?\" I asked in reply.\n\n\"She's next door,\" Doris replied. \"Part of the wedding party, just like Christine. We were just heading over.\"\n\n\"I can't believe she's marrying a jerk like Bernie!\" I snapped, forgetting everyone else for a moment.\n\n\"You know the groom too?\" Mike asked in surprise.\n\n\"Broke his nose once,\" I snorted. \"And threw up on his car. I was pretty drunk at the time.\"\n\n\"Good for you!\" Mike laughed. \"Madeline's father Brian doesn't like the young man much.\"\n\n\"There's not much to like,\" I said with a shake of my head.\n\n\"Let's go,\" sarge said, taking my elbow.\n\n\"Where?\" I asked in confusion.\n\n\"To stop a wedding of course,\" he grinned.\n\n\"What?\" I asked in surprise, and then pulled away from him when his words sunk in. \"No way! I am not going over there!\"\n\n\"Sure you are,\" sarge insisted. \"For two reasons.\"\n\n\"Which are?\" I frowned.\n\n\"First, it's pretty obvious that you love this Madeline,\" he replied.\n\n\"I barely know her!\" I retorted. \"We've only met a small handful of times.\"\n\n\"I knew with Doris the first moment I laid eyes on her,\" sarge shrugged. \"Truth be told I wasn't completely thrilled at the time. I was going to be a career soldier and she's almost young enough to be my daughter.\"\n\n\"I'm not that young!\" Doris snapped. No one paid any attention.\n\n\"What did you do?\" I asked Herb.\n\n\"The only thing I could,\" he replied. \"I retired from service, went back to the family business and started courting her.\"\n\n\"He didn't have to try very hard,\" Doris smiled. \"I felt the same way about him.\"\n\n\"The last time I saw Maddie she laid into me pretty hard,\" I sighed. \"Oh, I deserved it, but...\"\n\n\"That's not the point,\" Herb shrugged. \"If you love someone, you have to tell them. Maybe they love you back, maybe they don't. You can't control that. But you tell them anyway.\"\n\n\"Not on their wedding day!\" I snapped.\n\n\"Better late then never!\" he laughed.\n\n\"Forget it!\" I said. \"Absolutely not!\"\n\n\"She does have feeling for you,\" Doris put in. \"I don't know how strong, but I used to hear Christine and her talking.\"\n\n\"It doesn't matter,\" I said, shaking my head.\n\n\"You're right,\" Herb said. \"It doesn't.\"\n\n\"What?\" I asked in confusion.\n\n\"Even if she's just a friend. You need to try and talk her out of marrying this Bernie. He sounds like a real shi...um, jerk,\" Sarge said, cleaning up his language at the last second.\n\n\"It's now or never,\" Mrs. Malone said. \"The wedding is supposed to start in a half hour. It would be nice to have your conversation with Madeline before she walks down the aisle.\"\n\n\"But...\" I began. It was pointless. Herb had a better grip on my arm this time. It didn't help when Mike took my other arm. They manhandled me down the block and toward a side entrance to Madeline's house.\n\n\"Doris, run ahead and find Christine or Jenna,\" Mrs. Malone said. \"Diane will probably never forgive me, but we have to try.\"\n\n\"Diane?\" I asked.\n\n\"Madeline's mother,\" Mrs. Malone answered. I nodded numbly. I was no longer fighting, but Mike and Herb continued to hold on. My cousin and Doris met us at the door.\n\n\"John,\" Jenna sighed. \"You can't be serious.\"\n\n\"He needs to talk to this Madeline,\" Herb grinned. \"Preferably before she gets married.\"\n\n\"You look good,\" I said, seeing that Jenna changed her hairstyle. I didn't know what else to say.\n\n\"We haven't seen each other in a while,\" she said pointedly. \"Donnie and the kids were wondering if you liked them or not.\"\n\n\"I'm sorry,\" I replied. \"It's just that...\"\n\n\"There's no time for this now!\" Jenna snapped. \"There's going to be a wedding.\"\n\n\"I know,\" I sighed. \"But the sarge is probably right. I should talk to Maddie before she walks down the aisle.\"\n\n\"You wouldn't even talk to me about her the last time we saw each other!\" Jenna cried. \"Or the time before that! Not since before you can home from the war.\"\n\n\"I thought she was already married and had a family,\" I retorted. \"How was I to know...\"\n\n\"...you could have listened!\" Jenna nearly yelled.\n\n\"That's all water under the bridge,\" Mike said. \"Go get Madeline. Your cousin isn't looking to embarrass her or her family. Let him tell her how he feels and then it's up to her.\"\n\n\"She doesn't need this on her wedding day!\" Jenna snapped. \"She's jittery enough already.\" \n\n\"Maybe it's because she knows she's marrying the wrong man,\" sarge put in helpfully. Jenna gave him a nasty look, but he ignored her.\n\n\"Wait here!\" Jenna snapped and disappeared back into the house. After a few minutes my nerve started to slip.\n\n\"We should go,\" I said, but Herb was still holding me.\n\n\"Nonsense!\" he grinned. \"I owe you for helping out with Doris. This is payback!\"\n\n\"If this doesn't work out, I'm going to...\" I began, but he cut me off.\n\n\"Anytime private,\" he laughed. \"Anytime!\"\n\nChristine came back to the door instead of Jenna a couple of minutes later. Unlike my cousin, she was at least civil.\n\n\"Where's Jenna?\" I asked, stalling. I was afraid she was about to tell me to go.\n\n\"She refused to be part of this,\" Christine answered. \"She said she didn't want to get in the middle between her best friend and cousin.\"\n\n\"So, what's the verdict?\" Herb asked.\n\n\"Come on inside,\" Christine smiled. \"But just John. The rest of you go take your seats.\"\n\n\"I'll go move John's car before someone calls the police,\" Mike grinned and walked back toward the street.\n\n\"Think you can handle it from here?\" my old sergeant asked. I just looked at him and he laughed. \"Good luck!\" I swallowed hard and followed Christine into Maddie's house.\n\nShe led me quickly through the house. A couple of people saw me, but I refused meet their eyes. If I did, I was afraid I'd bolt. I groaned softly and thought, 'What the hell and I doing!'",
        "\"She's in there,\" Christine said as she led me to a door. \"Make it quick. We don't want her to be late to her own wedding.\" I wasn't sure if she was kidding. I didn't want to know.\n\nI hesitated and Christine opened the door for me. She all but pushed me into the room. I nearly stumbled. \n\nIt wasn't hard to find Maddie. The room was probably her father's study. She was standing in the middle, next to a table and looking at me. I couldn't quite make myself meet her gaze. She looked incredible and I had to swallow before I could speak.\n\n\"Hello Maddie,\" I said tentatively.\n\n\"Hello John,\" she replied as I finally looked into her eyes. Suddenly all my fears were gone. I smiled.\n\n\"I thought you were already married,\" I said, my voice calmer.\n\n\"I'm about to be,\" she replied.\n\n\"No, you're not,\" I replied confidently.\n\n\"Yes I am,\" she insisted. \"I have the dress and everything.\"\n\n\"Everything but the right man.\"\n\n\"Bernie's a good man,\" she said softly, no longer looking at me.\n\n\"Maybe,\" I shrugged, not wanting to argue. \"But that doesn't make him the right one.\"\n\n\"I love him,\" Maddie insisted. My chest tightened momentarily, but I pressed on.\n\n\"Yes, but are you in love with him?\" I asked.\n\n\"You and I barely know each other!\" she snapped, changing the subject. I smiled.\n\n\"I know you well enough to know I love you.\"\n\n\"You're crazy!\" she cried.\n\n\"Maddie, argue all you want,\" I smiled. \"But I know you love me too. I can feel it when you look at me. You were my first Valentine and I want you to be my last.\" We both fell silent for a few moments, watching each other.\n\n\"You still owe me that chess game,\" she said softly.\n\n\"I know,\" I said. \"Marry me and we'll play as many games as you like.\"\n\n\"No, I want to play now,\" she said, shocking me.\n\n\"Now?\" I asked. Maddie didn't bother to answer. She simply pulled out a chess set from under the table and started setting it up.\n\n\"If you win, I'll break it off with Bernie and marry you,\" she said. \"If I win, you disappear from my life forever.\"\n\n\"You're serious?\" I asked in disbelief. Again, she didn't answer. Instead, Maddie sat at the table in her wedding dress and made the first move.\n\nI sat opposite her and shook my head as I took my turn. I heard the door open once while we were playing, but didn't bother to look up. The game was too important. The problem was that I was clearly overmatched. Maddie's defense had improved a lot since the last time we played.\n\nI knew there was no way I was going to win half way through the game, but I refused to give up, hoping for a miracle. The door opened again, but this time someone entered.\n\n\"Madeline, what in God's name are you doing?\" a man who had to be her father asked.\n\n\"Trying to decide who to marry,\" she replied, making another move.\n\n\"Who to marry?\" her father asked in disbelief. \"Bernie is out there waiting for you!\"\n\n\"And John is in here playing chess,\" Maddie said, and then added in introduction. \"John, this is my father.\"\n\n\"Hello,\" I said, not looking up from the table. \"Pardon my rudeness, but Maddie is beating me badly and a lot depends on this game.\" There was silence for a moment and then Maddie's father spoke.\n\n\"Good luck son,\" he said and left the room. Mike must have been right about Maddie's father. He didn't like Bernie.\n\nThe door burst open a few moments later. In walked a woman who looked like an older version of Maddie. Needless to say, she was not happy. Maddie's father followed her.\n\n\"Madeline! You stop this instant!\" she cried. \"You can't be serious!\"\n\n\"Mother, you're distracting me,\" Maddie frowned.\n\n\"You can't decide who to marry based off of a chess game!\"\n\n\"I'm not,\" she replied. \"Playing helps me think.\"\n\n\"Come to any conclusions?\" I asked nervously, feeling my hope rekindle. Madeline stood.\n\n\"Two actually,\" she said. \"First, you're a poor chess player.\"\n\n\"I'll get better,\" I promised.\n\n\"I should hope so!\" she snorted.\n\n\"And?\" her father asked.\n\n\"Stop this foolishness,\" her mother put in. \"We have guests waiting!\"\n\nI wasn't quite holding my breath as I watched Maddie's face for a sign. She was expressionless. I knew she'd made up her mind, but she wasn't giving any hints. Maddie next words were the most important of my life.\n\n\"And,\" she finally smiled, knocking over her king. \"I'd like to be the one that teaches you.\"\n\n\"You're surrendering a chess game?\" her father asked in amazement. \"I've never seen you do that before!\"\n\n\"My heart's not in it,\" she replied. I remained frozen for a moment longer, and then suddenly I was standing and Maddie was in my arms.\n\n\"Oh my,\" her mother groaned. \"What am I going to tell the guests? They're expecting a wedding.\"\n\n\"I'm willing if you are,\" I smiled down at Maddie.\n\n\"Absolutely not!\" she cried. \"It would be totally crass for me to break up with Bernie on our wedding day and marry you! We have to wait at least a year after this fiasco.\"\n\n\"Well then,\" I shrugged at Maddie's mom. \"Tell them to come back next year.\"\n\n\"Think of it this way dear,\" Maddie's father put in. \"Neither one of us much cared for Bernie anyway.\"\n\n\"There is that,\" her mother smiled, relaxing for the first time.\n\n\"Now you tell me!\" Maddie cried, causing everyone to laugh.\n\n***\n\n\"Hand me a tissue,\" Elli said, using her fingers to wipe away her tears. \"That was so romantic!\"\n\n\"I guess it was,\" I smiled, looking down at my wife lovingly.\n\n\"Did you get married the next year?\"\n\n\"To the day,\" I replied.\n\n\"How was the wedding?\" she asked.\n\n\"Rainy, cold and damp,\" I laughed. \"But the night was very enjoyable!\"\n\n\"I'm sure,\" Elli laughed, and then stood and added, \"Oh well, I really should go check on some of my other patients now.\"\n\n\"Thanks for listening,\" I smiled.\n\n\"No, thank you for sharing your story!\" she insisted. \"It's not many people who find their true love and spent almost fifty years together.\"\n\n\"I know,\" I sighed. \"But what I wouldn't do for a one more year!\"\n\nShe gave my shoulder a squeeze in understanding before walking to the door. She turned back just before she left, smiled knowingly and said, \"I'll check in on you later. For now, why not spend some time remembering your wedding night?\"\n\n***\n\n\"What a perfect wedding!\" I said as I placed Maddie on the ground after carrying her through the threshold of our new house.\n\n\"Perfect?\" she asked in disbelief. \"It rained the entire day! I'm soaked!\"\n\n\"Just a little bad weather,\" I shrugged.\n\n\"Please!\" Maddie groaned. \"I don't know whose side of the family was worse. I thought your uncle Fred was going to hit your uncle Jerry at one point!\"\n\n\"It wouldn't be the first time a fight broke out at one of my family weddings,\" I shrugged.\n\n\"And my aunt Eloise was so drunk she hit on every guy on your side of the family!\"\n\n\"Not just the guys!\" I laughed.\n\n\"Please tell me you're joking?\" Maddie begged. I just shrugged and she groaned.\n\n\"Our parents looked happy despite it all,\" I offered.\n\n\"They were just glad to finally get us married off!\" Maddie retorted. \"They want grandchildren!\"\n\n\"Speaking of that...\" I grinned. Maddie smiled for the first time since we entered our house.\n\n\"Tire of waiting?\" she asked.\n\n\"I can't believe you made me wait until we were married!\" I replied. \"It's not like we're kids or anything. A whole year wasted! Think about what fun we could have had!\"\n\n\"I'm not that kind of a girl!\" Maddie retorted.\n\n\"I know, I know,\" I sighed, and then grinned slightly and added, \"You know, I never much liked Bernie, but I started feeling bad for him about three months into our engagement. How the heck did you two date so long and nothing happen?\"\n\n\"I never said nothing happened,\" Maddie teased back. \"But I'm still a virgin.\"\n\n\"Doesn't a woman officially become a spinster if she's twenty-five and still a virgin?\" I asked, not willing to lose this contest so easily.\n\n\"Keep it up mister,\" Maddie frowned. \"And you'll be awfully lonely on your wedding night!\"\n\n\"Not going to happen!\" I laughed, pulling Maddie into a kiss. She fought me at first, but then melted into my arms.\n\n\"It was a nice wedding, wasn't it? Despite everything?\" she asked, her head resting on my shoulder.\n\n\"Yes, it was,\" I answered seriously, but then smiled and added, \"But then again, the world could have ended right after you said 'I do' and it still would have been a nice wedding.\"\n\n\"You are a rather lucky fellow, aren't you?\" Maddie joked.\n\n\"That's what your mother keeps telling me,\" I sighed. \"Over and over again!\"\n\n\"She likes you,\" Maddie smiled, hugging me tight.\n\n\"What's not to like?\" I joked. \"Besides, after Bernie I could have been an unemployed momma's boy and your parents would have liked me!\"\n\n\"He wasn't that bad!\" Maddie insisted, but she laughed too.\n\n\"You look beautiful in your wedding dress,\" I said, attempt to change the subject, but I couldn't help adding, \"It's much better than last year's!\" Maddie groaned and I quickly added, \"Sorry. I couldn't help myself.\"\n\n\"Try,\" my new wife sighed.\n\n\"I don't want to talk about Bernie or the past anymore,\" I said. \"It's our wedding night and there are better things to do.\"\n\n\"Hey, I'm not the one who keeps bringing them up,\" she shrugged.\n\n\"Well, you can't blame a guy for gloating,\" I smiled. \"I did win after all.\"\n\n\"Are you done yet?\" she asked with a raised eyebrow.\n\n\"I suppose,\" I replied.\n\nI led Maddie into the dining room and poured the wine I put there earlier in the day. It was one of her favorites. We then moved to the living room where I put on some music. Maddie smiled when she heard.\n\n\"Dean Martin,\" she said. \"Your favorite.\"\n\n\"We can listen to Bing or Franky if you want?\" I offered.\n\n\"No,\" she replied, still smiling. \"I like Deano too.\" \n\nWe started dancing slowly. Occasionally, I leaned down and kiss my new wife. Maddie looked amazing. Hell! She was amazing! \n\n\"So, now that we're married...\" I hinted when the album ended. Maddie smiled nervously.\n\n\"Turn it over and pour us another glass of wine,\" she said. \"I'll be back in a couple of minutes.\"\n\nTwenty minutes later I had just finished my third glass of wine when she finally reentered the room. I was a little annoyed that she took so long, but I forgot all about it the moment I saw her. She glowed! I swear she did!\n\nMaddie was wearing a full-length negligee. It was thin enough for me to really appreciate her curves without really showing me anything. Her hair was down now, the way I liked it. Her soft brown eyes met mine and she smiled. Maddie visibly relaxed as she saw my reaction. I didn't try and hide it.\n\n\"You're staring,\" she said.\n\n\"Get used to it. I'll be doing a lot of it if you're going to wear things like that!\" \n\n\"You like it?\" Maddie asked.\n\n\"I like what's under it,\" I replied honestly. Maddie blushed, but also smiled.\n\n\"Don't you think it's time we go to bed?\" she asked.\n\n\"I thought you'd never ask!\" I answered, taking her hand and making my way toward our bedroom.\n\nI sat on edge of the bed. Maddie stood in front of me. I reached up and pushed the negligee off her shoulders. It fell to the floor, leaving my wife naked in front of my eyes for the first time.\n\n\"You are the most beautiful woman in the world,\" I said, meeting her eyes. \"I love you!\"\n\n\"Will you feel the same way when I'm old and wrinkled?\" Maddie asked with a smile.\n\n\"I'll always feel this way,\" I promised. \"You're what I've been waiting for my whole life. I'm never going to stop loving you!\"\n\n\"Show me,\" Maddie said, her eyes sparkling with desire. I took her into my arms and pulled her down onto the bed. I started kissing her lips and slowly made my way down to her neck. I felt Maddie tense when I moved lower, but she didn't stop me. \n\nMaddie gasped when she felt my breath against her nipples. I watched them harden before tasting them for the first time. Maddie moaned softly. My new wife didn't so much relax after that as lose the nervous tension. It was replaced with another type of tension, one far more enjoyable. Still, I think she was surprised when I continued to make my way even lower.\n\n\"John...\" she began, but I cut her off.\n\n\"Shh,\" I said, reaching up and placing two of my fingers against her lips to silence her. \"Trust me.\" \n\nShe kissed my fingers and pulled them away from her lips. \"Always,\" she promised.\n\nI took my time, but it wasn't long before I was resting my head against one of her thighs and enjoying the sight before me. My breath was hitting her center and it returned a scent that caused every nerve ending I had to react. Maddie was more than a little uncomfortable, but she trusted me and I wanted desperately to show her that she could.\n\nI leaned forward, pushed my nose and mouth through her soft strawberry blond down and tasted my new wife for the first time. She tensed momentarily and then sighed contently. I continued until I could feel her desire grow.\n\n\"John!\" she cried. \"I need you!\"\n\n\"I'm right here,\" I said as I moved up her body and hugged her tight. My hardness found her center. I pushed deep and Maddie gasped out. So did I. We found a natural rhythm that felt like it was ours alone. \n\nMy sense of time faded as our passion built to a crescendo. I kissed Maddie and lost myself in her. All five senses fired as my body overloaded. Maddie's eyes snapped open and locked with mine as our passion broke.\n\nI'm not sure how long we lay there afterward. It didn't matter. It was one of the most perfect moments of my life. I knew I'd remember it forever.\n\n\"John, that was...\" Maddie began, but couldn't find the words to finish her thought.\n\n\"I know,\" I said as Maddie nestled into me. \"It was well worth the wait.\"\n\n\"If I'd known it was like this...\" my new wife began, but she stopped herself and blushed.\n\n\"Don't worry,\" I smiled. \"We have the rest of our life to make up for lost time!\"\n\n\"Promise?\" she asked. \n\n\"Do you want to start right now?\" I laughed.\n\n\"Can we?\" she asked, looking into my eyes. I smiled and nodded.\n\n***\n\n\"I love you, Maddie,\" I smiled as came out of my reverie. I looked down at my wife. \"You still the most beautiful woman in the world.\"\n\nI stood and adjusted her pillows. I took my time, making sure they were just the way she liked them. Afterward, I sat back in my chair and suddenly felt very tired. \n\n\"I'm right here if you need me Maddie,\" I said. \"But I'm going to take a little nap if you don't mind.\"\n\nMaddie didn't answer. I hadn't expected her to. I patted her hand, smiled at her and closed my eyes.\n\n***\n\n\"John, I'm going off shift,\" I heard Elli say as she gently shook me awake. \"I didn't want to leave without saying goodbye.\" I opened my eyes and she looked oddly familiar for a moment, but the feeling quickly faded.\n\n\"I'm glad,\" I said as I sat up and stretched. My old bones ached, but I felt better than I had in months. \"I wanted you to know that talking to you about Maddie has helped. Thank you.\"\n\n\"It was my pleasure,\" she smiled, and then grew serious and asked, \"Are you going to be okay?\"\n\n\"In time,\" I said. \"Probably.\"\n\n\"I have a little while before I have to leave,\" the nurse said. \"Why don't you tell me about some of your other Valentine Days with Maggie?\"\n\n\"What's to tell?\" I shrugged. \"We shared forty-nine of them after we were married. I tried to make them all good memories, but didn't always succeed.\"\n\n\"The year after our Elizabeth died was the worst,\" I continued. \"We were both in so much pain that we didn't celebrate.\"\n\n\"What did you do?\" Elli asked, sounding honestly interested.\n\n\"Our oldest Kyle just finished college the year before. He was smart enough to realize it wouldn't be a good day. He took his younger brother Danny out,\" I sighed. \"Maddie and I lay in bed and spent most of it sobbing into each other's arms.\"\n\n\"You loved your daughter very much,\" Elli smiled sadly.\n\n\"I don't think either one of us ever got over her loss,\" I replied honestly.\n\n\"Tell me more about the good memories,\" she suddenly prompted. I nodded in agreement.\n\n\"I already mentioned that Maddie liked to tell me she was pregnant on Valentine's Day. Those three years were great. So were the years our sons graduated college. There were plenty of others related to our kids, but truthfully many of our best Valentine's Day memories had nothing to do with anything more special than the fact that Maddie and I were in love and had each other.\"\n\n\"That's beautiful,\" Elli smiled warmly.\n\n\"I'm going to miss her so much!\" I cried, surprised at how quickly my control slipped. \"I already do!\"\n\n\"I know,\" Elli said softly. \"But you have to let her go. I think she's holding on because of you.\"\n\n\"I can't live without her!\" I cried.\n\n\"Sure you can,\" Elli replied gently. \"It won't be easy, but one day you'll see her again. But first you have to say goodbye and let her rest.\"\n\n\"I love her so much! I can't say goodbye.\"\n\n\"It's your decision,\" the nurse said sadly, squeezing my shoulder and leaving the room. \n\nI remained silently sitting and staring at Maddie. I was locked in my memories for a long time. I thought about what Elli said and somewhere deep down I knew she was right. Maddie was hanging on for me. I had to let her go. Yet, I still couldn't bring myself to say goodbye. \n\nI fell asleep without realizing it. I dreamed about Maddie and our life together. I dreamed about the possibility of us meeting each other again in the next life. I wasn't the most religious person, but I wanted desperately to believe I'd see her again.\n\nI woke up slowly. Nothing had changed in the room. My wife of forty-nine years still lay in the hospital bed waiting for me to release her so that she could die and find peace. It wasn't easily, but I finally came to the only decision I could make.\n\nI leaned forward over my wife. I kissed her lips gently. This time I didn't bother to wipe the tears that struck her face.\n\n\"Maddie, it's okay,\" I whispered hoarsely. \"You can go now. I'll always love you, but I'll be okay until it's time for us to be together again.\"\n\nMaybe it was my imagination, but it seemed to me that Maddie smiled one last time before she gasped and stopped breathing. I kissed her forehead and sat back.\n\nAlarms starting going off and a nurse I didn't recognize rushed in and started moving toward Maddie. I grabbed the woman's arm.\n\n\"She's gone,\" I said, tears once again falling, but oddly I felt calm. The woman looked at me strangely before pulling free and doing what nurses do in this situation. I didn't bother to pay attention. My Maddie was in a better place.\n\nThe room started getting crowded as more nurses and a doctor rushed in. It was time to go. I glanced around the room one more time. I didn't bother looking at Maddie's body. There was no point. I already said goodbye. Besides, what made my wife Maddie was gone. \n\nWhat I did look at was the roses I brought with me earlier. Someone had arranged them. I frowned and looked closer. My heart skipped a beat. Whoever had fixed the flowers did it exactly the way I remember my Maddie doing it for years. \n\n\"Happy Anniversary Maddie,\" I smiled sadly.\n\n\"Pardon?\" one of the nurses asked with a frown.\n\n\"Just saying goodbye,\" I replied. She nodded uncomfortably. I ignored her and focused on the flowers.\n\n\"Happy Valentine's Day my first and last love. I'll see you again.\"\n\nI could almost hear her answer."
    ],
    "authorname": "JoeDreamer",
    "tags": [
        "mature",
        "loving wives"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/a-lifetime-of-valentines"
}