{
    "title": "Westrons Pt. 14",
    "pages": [
        "Tudino was absolutely thrilled when I groaned and ejaculated inside her. \n\n- \"I can feel it!\" she exclaimed. \n\nShe wanted to look at my semen, as it oozed out of her. She also wanted to touch it, to rub it between her fingers, and to smell it. She even raised her fingers to her lips, and tasted a bit - but she didn't want to waste any. \n\n\"How do I stop it from coming out of me?\" \n\n- \"Liquid can't flow uphill.\" I said. \n\nShe lay back on the bed. I tucked a pillow under her ass, so that she wouldn't try to keep legs in the air. \n\n- \"How much does it take?\" \n\n- \"Sometimes, once is enough.\" \n\n- \"But we should do it again, to make sure.\" she said. \"Maybe a few more times.\" \n\nI had to laugh. \"That's why we're here.\" \n\n- \"So ... as long as my hemmer lasts?\" \n\n- \"That's the idea.\" I took a deep breath. \"You know, it's getting even stronger.\" \n\n- \"That's amazing. I've never heard of such a thing. Have you?\" \n\n- \"No. Maybe you should ask your grandmother.\" \n\n- \"Oh, I will: trust me.\" She glanced down at my crotch. \"Are you hard, again?\" \n\n- \"Not again. Still. I told you: your hemmer is very potent.\" \n\n- \"How long does it take? To produce more seed?\" she asked. \n\n- \"Ready when you are.\" \n\nShe would've scrambled back on top of me, but I suggested that she just roll onto her side. Somehow, I had the feeling that it would be wise to conserve my energy. I introduced her to spooning. \n\n- \"Mmm ... that's nice.\" she cooed. \"You know, Cook, I quite like copulating.\" \n\n- \"It doesn't hurt anymore?\" \n\n- \"Not at all. It feels ... incredible. You hybrids are so lucky. You can do this whenever you want.\" \n\n- \"There's something to be said for hemmer, though.\" \n\n- \"Like what?\" \n\n- \"We wouldn't be here, if you didn't have one.\" \n\n- \"I know.\" she said. \"But if I was a hybrid, we could do this all the time.\" \n\n- \"Who would command our regiments?\" \n\n- \"Hah! True.\" \n\nI was growing more excited, so I turned her onto her back, into the missionary position. I was still careful, worried about hurting her, but Tudino met my every thrust with a lunge of her hips. \n\nI came again, flooding her insides. She hadn't reached an orgasm, so I used my fingers to get her there. \n\nAfter a short rest, I convinced her that we should eat, and drink. \n\n- \"Is that how you produce more seed?\" \n\n- \"Yes. But I can also see that I'm going to need quite a bit of energy to keep up with you.\" \n\nWe sat at the table, naked. She saw me looking at her. I was trying to count her various wounds and injuries, so she helped me to see them all. \n\nThere was the scar left by a bayonet, along her scalp. The bullet mark on the corner of her mouth. The nose - broken by an enemy elbow. Her chin - very nearly shattered by a musket ball. Her ear, missing a small piece. \n\nShe'd had a bullet graze the top of her breast, and another break her left leg. She also had a sword scar along her ribs. \"That was from a duel.\" she said. \n\nEleven wounds in all. \n\n- \"Have you ever considered another line of work, Tudino?\" \n\n- \"I'm good at what I do.\" \n\nThat first day, we tried doggy, cowgirl again, reverse cowgirl, and then face to face, with her sitting in my lap. \n\n- \"I like them all.\" she said. \n\n*** \n\nHer hemmer lasted for four days. \n\nWe didn't fuck the whole time. In between couplings, we stopped to eat and drink. We also talked quite a bit; I wanted to know more about her family, and how they had so badly mis-diagnosed her hemmer. \n\nMilitary matters came up, too. How could they not? We had hours and hours to talk, and fuck, and talk some more. \n\nOn the third day, I introduced to the idea of making love, as opposed to simply fucking. She took to it like a duck to water. She was especially thrilled when she had her first orgasm while I was inside her. \n\n- \"See? This is what I meant! You hybrids have the time - the luxury of time - to think of things like this! And to practice!\" \n\nShe took it easy on me, that fourth day. She knew that Aneli had damn near killed me over three days. So we talked a little more, and cuddled longer. \n\n- \"Cook, do you think ...?\" \n\n- \"Yes, Tudino. I will join you for your next hemmer.\" I said. \n\nShe punched me in the chest. \"How did you know I was going to ask that?\" \n\n- \"I guessed.\" \n\nShe wrapped her arms me, and kissed me. \n\n- \"I hope it's a girl.\" she said. \n\n*** \n\nI will never forget Koroba's and Nasta's looks of sheer awe as we exited the cottage, after four days. Ishana was there, too; Madze had left, because she'd gone into hemmer herself. \n\nThe way they stared at Tudino was absolutely priceless. She'd known admiration, before, for her military skills and especially her courage. She'd never seen adulation - and envy - for her sexual prowess. \n\nA week later, a wagon arrived in front of the Belere. Esyle took delivery of 16 cases of wine. There was a note attached: \n\nA small gift, to show my appreciation to you sisters, for lending me your man. I hope that I'll be invited to your home in future, so here is some decent wine that you can serve to me when I visit. \n\nYours, \n\nTudino \n\n- \"Why 16 cases?\" asked Esyle. \n\n*** \n\nYehla gave birth to a little girl, and named her Oshide. \n\n*** \n\nEsyle and Tallia asked for a moment of my time. They also asked my bodyguards - Ishana and Nasta, this time - to excuse us. \n\n- \"It's just ... an idea we had.\" said Tallia. \"I was explaining to Esyle how you talked to the Woles, and got them to verify and even extend some of Papa's maps.\" \n\n\"And we got to thinking: what if we invited Woles to come by the house - our old house - to talk to him?\" \n\n- \"Ostensibly, they would be there to help with his maps - both Westron and Crolian territory, to allay suspicion. We could offer to pay for their assistance.\" said Esyle. \n\nI began to see where they were headed. \"And while they're there, we could ask them innocent questions about what they've seen on their travels ...\" \n\n- \"Exactly!\" said Tallia, with a big grin. \n\n- \"Talley would be willing to do this?\" \n\n- \"We haven't asked him yet.\" said Esyle. \"We came to you, first.\" \n\n- \"But if it helps improve his maps, and provides useful intelligence for the army, of course he will.\" added Tallia. \n\n- \"Who would ask the questions?\" \n\n- \"Not you.\" said Tallia. \"Your bodyguards would scare everyone away. Better, I think, if it doesn't like look like the army is directly involved.\" \n\n- \"Woles aren't stupid.\" I warned her. \"But that's a wonderful idea. What would you need from me?\" \n\n- \"A list of questions you'd like us to ask.\" said Esyle. \"And money, of course.\" \n\nI liked it; it felt like we were starting an intelligence network. But there was more. Esyle came closer, and sat on my lap, so that she could whisper in my ear. \n\n\"I had the link boy follow Ishana the other day, when Nasta relieved her. Care to guess where she went?\" \n\n- \"Home?\" \n\n- \"To the Palace. He waited until she came out, less than half an hour later.\" \n\n- \"Okay.\" \n\nEsyle leaned back, and looked me in the eye. \n\n- \"I know they're your bodyguards, Cook - just don't forget who they work for.\" \n\n*** \n\nEsyle needed a little more persuasion before she agreed to attend Countess Iloni's ball. Tallia worked on her. They both agreed that we needed new clothes. \n\n- \"I'll just go in uniform.\" I said. \n\n- \"You can't!\" They were both horrified. Apparently that would have been the faux pas of the half-century. \n\nOn a formal occasion like this, women still wore breeches, but many colours other than white were allowed. It was their shirts that would set them apart. Sleeves could be long, short, wide or flowing. Necklines could be high, modest, low, or absurdly low. \n\nThe shirts themselves could be loose, or skin-tight, as the wearer preferred. The materials were silky, or satiny, and the array of colours to choose from was astonishing. \n\nSo were the prices. \n\nJewelry was absolutely necessary, too. I could have bought a pair of six pounder cannon for what we were spending on this. But it was necessary, if Tallia and especially Esyle were to move in society, commensurate with my new status as ... well, whatever I was. \n\nBesides, neither sister was a fashionista. They didn't need the latest or the most avant-garde of anything. So I indulged their modest tastes to a moderate degree, and we were all happy with the results. \n\nThe trouble started when we went to look for my clothes. \n\n- \"A skirt?\" There was no Westron word for kilt, which I would have worn with some pride. But the current fashion for male skirts was nothing short of obscene. \n\nActually, that was the problem: it was so short that I felt utterly ridiculous. The damn thing was a mini-skirt. My ass was sticking out the back, and my balls were hanging out the front. \n\n- \"Nu-uh. Not for me.\" \n\n- \"But that's what males wear.\" protested Tallia. \n\nThat's when I noticed the edge of Esyle's lip curling slightly. They were having me on. Tallia burst into laughter a moment later. \n\n- \"Oh! You should have seen your face!\" \n\nI let them enjoy their joke. When they were finished laughing, they had the tailor bring out some real skirts. \n\nThose didn't make me feel any better. And the shirts ... \n\nThe whole ensemble reminded me of a cross between a pornographic vid performer, and a male stripper of the ancient world. \n\n- \"I'm sorry, girls. I can't wear those things. I won't wear them.\" \n\n- \"Seriously, Cook.\" said Tallia. \"That's what upper class Westron males wear, at a ball, or a party. You have to wear them.\" \n\n- \"Okay.\" I said. \"Now picture your father wearing them.\" \n\n- \"Eeww.\" \n\n- \"Exactly. Look, it's quite simple: I'm not a Westron male. So I'll go as what I am - a Pylosian.\" \n\nWith appropriate concessions to Westron culture, I ended up with a kilt that fell just below my knees, a plain white shirt, and a simple black waistcoat. New stockings, a new belt ... the girls insisted on all the accessories. \n\nWhen I was all kitted out, I felt like the lad on his way to a highland theme wedding, back on Terra. But Tallia was nodding, as she circled and studied me from every angle. \n\nEsyle actually clapped her hands. \n\n- \"You look wonderful.\" she said. \"That outfit will stand out - no doubt that's what you intended all along.\" \n\nIf you can't fit in, might as well stand out. I could pretend that I'd meant to do that all along. \n\nKoroba and Madze had discreetly followed us as we toured the shops. Tallia (the little sneak) invited them in to see my new clothes before I changed back to my military gear. \n\nMadze just nodded, but she seemed impressed. Koroba was struck speechless - for a moment. \n\n- \"Hoo-ee.\" she said. \"You look yummy, Colonel.\" \n\nTallia and Esyle grinned. They took that as a compliment. \n\n*** \n\nWe formed a party with Langoret and her fianc\u00e9e, a male named Tomos. He was short, and lean. I liked his plain, open features. He seemed like a decent guy, but I couldn't quite get over his get-up. Let's just say that I was glad I didn't have to emulate him. \n\nLangoret was dressed conservatively (as I'd fully expected), but she looked very elegant. She and Esyle quietly admired each other's shirts. \n\nAll four of my bodyguards were on hand, and Langoret had an attendant as well, who would carry a lantern to light our way home. \n\nAvette wouldn't be coming. She didn't care for many of the people who would be there. To be honest, she probably wasn't invited in the first place. \n\nIt was quite a procession, though, as we walked from the Belere to Countess Iloni's Palace, known as the Markviet. We encountered other parties, heading in the same direction. Some of them knew Langoret, which led to introductions. \n\nTo me, the females looked spectacular, and the males slightly ridiculous. But no one else seemed to find anything out of the ordinary. \n\nThere were sleeveless shirts, to show off the wearer's biceps. Wide open shirts, to display pecs and and/or abs. Bright colours, to match their hair. And finally, shirts that dipped in the back, behind the head, to reveal a trace of dorsal fur. Those were considered by far the most daring. \n\nCountess Iloni's home was palatial: large, with extensive gardens, and luxuriously appointed. Evidently she had money and taste (the two don't always go together). \n\nAs the guests arrived, they joined a long receiving line. There was no other way in, and nobody else in our party reacted, so I supposed that this was normal practice. \n\nJust before the entrance, we could hear someone - female - announcing the names of the guests. I had a mild panic. \n\n- \"Esyle - how's she going to know who we are?\" I asked. \n\n- \"All under control, Cook.\" she said, calmly. She showed me a card, whereon she'd written our names. Colonel Cook, and Esyle of Belere. \n\nWe let Langoret go first. \n\n- \"Countess Langoret, and the future Count Tomos!\" They'd officially announced their engagement, so I guess that made Tomos a Count-in-waiting. \n\n\"Esyle of Belere, and Colonel Cook!\" The announcer read them in reverse order - or maybe it was Esyle who'd had them backwards. \n\nThere was a sea of people inside - and this was only the entry hall. Langoret had briefed me on what to expect: food and drink to the left and right, music and dancing straight ahead. The Countess liked to stay in her spacious garden, at the rear of the Palace. We were going that way, to pay our respects to the Hostess. \n\n- \"Cook!\" \n\nIt was Tudino. She didn't stand on ceremony: she launched herself at me, wrapping me in a big hug, and then kissing me soundly on the lips. \n\n- \"You're late!\" she said. Her eyes were bright, but she didn't look at all drunk - she'd probably only had half a dozen drinks to warm up. \n\n- \"I believe you were early.\" said Langoret. \n\n- \"Well ... show up early, and you can leave early, without offending everybody. I'm not really used to ... this sort of thing.\" \n\n- \"You look wonderful.\" said Langoret. She did, too: Tudino was wearing a loose blue shirt, with silver piping, which brought out her eyes and set off her long black hair. \n\n- \"Umm ... thanks.\" She wasn't used to compliments, either. But she let herself be persuaded to join our little party for a while. \n\nAs we progressed through the gathering, dozens of people came over to say hello to Langoret. She introduced them all to Tomos, and then to Tudino, Esyle and me. \n\n- \"Langoret is very well-known.\" I said to Esyle, after the twentieth round of introductions. \n\n- \"Don't be fooled.\" she said. \"Some of these people barely know her. They're more interested in meeting you. And getting a good look at me, and especially Tudino.\" \n\n- \"Tudino? Because she never comes to these things? Or because of the battle of Tonol?\" \n\n- \"Neither. They're curious, because they've heard the story about her hemmer.\" \n\n- \"What story?\" I asked. \n\n- \" Four days? Until now, she's been ... socially reclusive. I don't how else to put it. All of a sudden, though, she has a four-day hemmer? With you? Of course they're all curious.\" \n\n- \"Don't they have anything better to do?\" \n\n- \"You must know Westrons by now - we love to talk about sex. Our own, other people's ...\" \n\nI took Tudino aside. \n\n- \"You know that they're talking about you?\" \n\n- \"About my hemmer? Yeah. That's all Countess Iloni and the others wanted to talk about. 'Why have we never heard of you before? Was it really four days? Tell us everything.' That kind of thing.\" She rolled her eyes. \n\n- \"Not your style.\" \n\n- \"Hardly.\" \n\nThe music in the crowded ballroom was muted. In fact, I could barely hear it over the buzz of conversation. \n\n- \"They will play louder, when the dancing begins.\" said Langoret. \"How are you holding up, Cook?\" \n\n- \"So far, so good.\" I was on my second drink - there were dozens of waiters circulating, with trays of drinks, which rapidly found their way into the hands of thirsty guests. \n\n- \"Are you enjoying it, though?\" she asked. \n\n- \"Not yet. Are you?\" \n\nBeing Langoret, she just gave me a half-smile, and continued to lead us towards the gardens at the back of the estate. \n\nThere were scores more people outside, but it was easy enough to locate our hostess. There was a knot of about a dozen garishly-dressed people that everyone else seemed to be watching. Not staring, exactly; but it was easy to see that many of the guests were frequently glancing that way, or listening in that direction - while pretending not to. \n\nWe met Aneli on the way, surrounded by a boisterous group. \n\n- \"Cook! And Tudino!\" she called out. \"The heroes of the hour!\" \n\nOkay, I didn't care for that. Tudino and I could be called heroes - but it wasn't because we'd had sex for the better part of four days straight. And to say that, with Langoret present - a genuine hero - it just felt wrong. \n\nAneli was ... what she was. I wasn't going to change her. But I didn't have to like it. \n\n- \"And the lovely Esyle!\" laughed Aneli. \"Most fortunate of women!\" \n\n- \"I'll talk to her.\" said Tudino. \"You go on.\" \n\n- \"Tudino!\" called out Aneli. \"Let's compare recollections!\" \n\nLangoret didn't say a word. Neither did Esyle. I bit back a whole slew of them. \n\nThe group around Countess Iloni saw us coming, but they went on pretending that they hadn't. Until the hostess deigned to acknowledge us, we didn't officially exist. \n\nThe Countess wasn't at all what I'd expected. The most frequent, most famous hemmers in the Kingdom? I'd been picturing some sort of modern Messalina, a femme fatale to rank with the great seductresses of all time. \n\nShe was tiny, for one thing. Five feet tall, maybe. Her hair was impressive: chestnut brown, with reddish-purple highlights. \n\nShe saw us. Actually, she saw me. Our eyes met. Very pretty eyes, in a lovely face. \n\nAfter a moment, she whispered something. I couldn't read her lips, but the woman next to us looked up, and her glance flickered over the members of our party. She waved. \n\nThe group around the Countess parted, and made room for us to approach. \n\n- \"Countess Langoret.\" said our hostess. Okay, her voice was hot. If someone was going to bring you off without even touching you, it could be this woman. \n\nShe and Langoret touched hands. \n\n\"Count Tomos. Congratulations. I hope that you'll be very happy together.\" \n\n- \"Thank you, Countess.\" he said, with a bow. \n\n- \"Esyle.\" Iloni extended her hand before Esyle was even close. My lover had to step forward, and reach, so as not to appear ungrateful for the mark of favor she was being shown. It was cleverly done - and smoothly, too. I don't think that anyone else noticed. \n\nBut I did. And my dislike of Countess Iloni probably started that very moment. \n\n\"So glad you could join us.\" she said. \n\n- \"Thank you, Countess.\" said Esyle. \n\n- \"And this is the famous Colonel Cook.\" \n\n- \"Countess.\" I bowed. \n\n- \"We have all followed your achievements with tremendous interest.\" said Iloni. \n\nThe way she said it, I knew that the 'achievements' she was referring to weren't necessarily military in nature. \n\nShe was a hot little number; I'll grant you that. Her voice had a certain power. She had nice tits, artfully popped up. Her bright purple shirt was cleverly designed to show them off, without seeming to reveal too much. \n\nDeep brown eyes, trimmed eyelashes, perfect features ... she was truly lovely. \n\nAnd on top of that ... I could smell her. I could feel her, too, and on a woman who wasn't in hemmer, that was just incredible. I began to understand her hold over male Westrons; this woman could cause a riot among eunuchs. \n\nUnfortunately, I couldn't prevent the front of my kilt from ... bulging forward, a little. \n\nCountess Iloni's eyes flickered down for less than a second. But she saw it. And I saw the smile that tickled the corners of her mouth. ",
        "- \"We really must become friends, Colonel.\" she said. \n\n- \"My hope as well, Countess.\" I said. \n\nNever. Not in a million years. Iloni's face was carefully made up, to conceal her true age. I'd have put her in her early thirties. But the eyes don't lie. This Countess was a thousand years old, in terms of experience. \n\nSometimes, you just instinctively dislike someone, from the very first moment. \n\nA dozen more introductions were made. I couldn't have remembered three names, a minute later. I was too busy wondering if Iloni was the one who'd blown up my tent, while I was lying in the tall grass with Tallia. \n\n*** \n\nI was caught off guard, later, when the guests split up - by gender. \n\n- \"Go with Tomos.\" said Langoret. \"He'll look after you.\" \n\nThe females went off to one side, and the males to the other. That left the dance floor of the ballroom open. Now I could hear the music. \n\nIt was odd, to say the least. \n\n- \"The point,\" explained Tomos, \"is that everyone can see which female asks which male to dance. It may be the first overture to inviting him to participate in her hemmer.\" \n\n- \"Like high school, in reverse.\" I mumbled. Then a horrible thought struck me. \n\n\"Tomos, I don't know how to dance.\" Not in Westron fashion, anyway. I had a nightmare vision of some female dragging me onto the floor, where I would be revealed as nothing more than a grinning idiot. \n\n- \"I know, Cook.\" he said. \"Esyle said that you were graceful as a lumbering ox. That's why she didn't even try to teach you. And that's why we're going to get something to eat. Come on.\" \n\n- \"A lumbering ... Wait - aren't you going to want to dance? With Langoret?\" \n\n- \"She asked me to take care of you.\" he said. \"And no - I wouldn't want to dance here, in any case. Langoret knows how I feel about her. We have no need to put on a show for these drones.\" \n\nHe led me back, towards the entrance. We passed close to General Vis, and her little entourage. I figured that a bow was sufficient, given that I had nothing to say to her - not after the way she'd treated Avette. \n\n- Urgh.\" muttered Tomos. \n\n- \"Pardon?\" \n\n- \"I'm sorry. For General Vis to pretend that she would have won the battle at Tonol ... and then to claim that she could have organized your winter raid, if only the Crown had provided her with the troops ...\" His face was screwed up in an expression of disgust. \n\n- \"Is that all she said?\" I asked. \n\n- \"I don't understand how you and Langoret can take this so calmly. It would drive me mad. That woman has said that you should never have stayed to fight at Limset, because you were outnumbered.\" \n\n\"That, she claims, is evidence of poor generalship, whereas her victory at Henach was tactically and strategically sound. You were merely lucky.\" \n\n- \"I'm getting used to it. Langoret has even thicker skin than I do.\" \n\nTomos laughed. We each grabbed a plate, and loaded up. \n\n- \"Drones?\" I said, repeating something he'd said earlier. \n\n- \"I shouldn't have said that.\" he admitted. \"But ... there are far too many wealthy people, in the capital. Too much money, too much time on their hands, and nothing constructive to do ... I'm sorry - listen to me go on.\" \n\n- \"I'm interested, Tomos. These are things I know so little about. Langoret won't tell me, because she doesn't want to influence my thinking.\" \n\n- \"Nor do I.\" \n\n- \"What do you do?\" I asked him. \"I mean - pardon my ignorance - but do you have an occupation? A vocation?\" \n\n- \"I raise oxen. I'm a farmer.\" he said. \n\nWe talked for a while, about breeds of oxen, the army's requirements, Woles ... he was easy to talk to. \n\n- \"Can I ask you something?\" \n\n- Please do.\" he said. \n\n- \"What political faction does Countess Iloni belong to?\" \n\nHe grinned. \"Langoret told me that you'd quizzed her about our politics. And the endless intrigues. You have to take my word for it, Cook: we're not all bad people.\" \n\n- \"I like Westrons, Tomos. I like them better than my own folk. There's just this small minority of yours who are trying to kill me.\" \n\n- \"Forgive me. I didn't mean to make light of your situation. To answer your question ... I don't believe that Iloni really belongs to a faction. She is a faction.\" \n\n\"She shifts so rapidly ... groups tend to coalesce around her, if you understand what I mean. Then she moves ... and things change. I'm sorry if I can't explain it properly.\" \n\n- \"No need to apologize - thank you for telling me.\" \n\n- \"I hope that we can be friends, Cook.\" he said. \"Langoret thinks the world of you, and I have this odd sense that I already know you, somehow, from all the stories she's told me.\" \n\n- \"I have one more story for you.\" I said. I told Tomos the tale of how Langoret had hidden from me, when she was in hemmer. \n\nHe laughed. \"I'd already heard that one - from a different perspective.\" \n\n- \"Is there - a lavatory here?\" The drinks were catching up with me. \n\nWe asked the first waiter who passed by. He directed us to a hallway in the east wing. There was a room set aside, with little curtained alcoves, and large chamber pots. A servant was busy carrying one out through a door on the far side of the room - probably to empty it in the garden, or to pour it in a cess-pit. \n\nI waited for a gent ahead of me to finish. That was when two men came up beside me, and took hold of my arms. They turned me around. \n\nA third male stood there. He was big, for a Westron, and thickly muscled. I'd never seen him before. There was no sign of Tomos, who was probably still in the main room. \n\nThere was a quick exodus from the lavatory, as anyone who wasn't actively using the chamber pots decided that they should be somewhere else. That was all I needed to know. \n\n- \"You need to be a taught a lesson.\" growled the third male. His hand closed into a fist, while his two confederates tightened their grips on my arms. \n\nI kicked the male on the right, a stomp with the sole of my foot right on the side of his knee. His leg buckled, and he yelped as he let go of my arm. \n\nI swung that arm around, and punched the guy on the left, right in the throat. He released his hold, too, when I followed that up with a kick in the balls. \n\nThe third male swung at the side of my head, but he telegraphed the blow, so that it was easy to dodge. I just swayed to one side. He tried again. That swing I blocked, with both arms. I got a grip on his hand, turned it into a reverse wrist lock, and then got my other hand on his elbow. A swift push let him feel the pain. \n\nThe first male looked like he was trying to get up, so I kicked him in the head. Then I said \"Come along.\" to the guy with the muscles, intending to drag him with me, back into the main room. \n\nWe didn't get there, because Ishana and Madze burst into the room, with Tomos a step behind. He looked ready to mix it up. \n\n- \"Anyone know this male?\" I asked. \n\n*** \n\nFrom the uproar we caused, you'd think that there had never been a fight at one of these balls. Or maybe the excitement was partially because I was involved. \n\nIshana was furious. She and the three other bodyguards formed a circle around me. I told her about the two others, so she sent Madze and Nasta to check them out. \n\n- \"No need to hurt them.\" I said. But I would like to know who they are.\" \n\n- \"This one's name is Krayt.\" said Tomos, indicating the male I still held in a wristlock. \n\n- \"You know him?\" \n\n- \"I know of him.\" \n\n- \"AH!\" said Krayt, as I adjusted my hold on his arm. It was bent back at an awkward angle. \n\nThere was a crowd gathering, getting bigger all the time. \n\n- \"Ishana - maybe we should get out of here? I'm guessing that Kanitz might want a word with this guy.\" \n\n- \"We have no authority to arrest him, Colonel.\" she said. \"I'm sorry. But we know who he is, so we can bring his name to the Chancellor's attention.\" \n\nI was tempted to break the bugger's arm; he'd probably intended to inflict a fair bit of punishment on me. There were too many people around us, though. \n\n- \"Alright. Let's get out of here, then. Tomos, would you mind letting Esyle know where I've gone? Ishana - who's going to stay with her?\" \n\n- \"HOW DARE YOU!\" \n\nI knew that voice. And that tone. \n\nColonel Berandot. \n\nShe was a tall, imposing woman, and she looked really good in black, with scarlet trim. But her face was contorted in rage. \n\n- \"Release him this instant!\" she shouted. She'd built up quite a head of steam - and she was coming straight at me. \n\nIshana stepped between us. \n\n- \"Colonel -\" she said, \"this male-\" \n\nBerandot barely slowed down. She backhanded Ishana across the face. \n\nI didn't stop to think. I let go of Mr. Muscles' wrist, and stepped forward. With flat palms, I just ... pushed. My left hand hit Berandot's shoulder. My right hand must have been a little lower, because I made contact with something softer. \n\nI shoved Colonel Berandot. She staggered back, and tripped over the leg of another guest who didn't get out of the way quickly enough. Berandot fell, and landed heavily - right on her ass. \n\nThe hall went dead quiet. I could hear the music coming from the ballroom. \n\nIshana took charge. There was a little blood on her face, but she ignored it. \n\n- \"Outside.\" she ordered. Koroba took my arm, and pulled. Nasta and Madze rejoined us, and covered our retreat. \n\nThe party was over. \n\n*** \n\n- \"What have you done?\" asked Langoret. \n\nShe and Tomos had brought Esyle back to the Belere. Tudino was with them. \n\n- \"It wasn't like I planned it.\" I answered. \"She hit Ishana, and I just ...\" \n\nThere wasn't much more to say about it. Everybody seemed to be in shock - including me. Tallia took charge, and put food and drink in front of us. \n\n\"I'm sorry, Esyle.\" I said. \"I didn't mean to spoil your debut.\" \n\n- \"It wasn't your fault.\" she said. \"I was afraid for you, though.\" \n\n- \"They'll be talking about this for a year.\" predicted Tallia. \n\n- \"I am more concerned with the immediate consequences.\" said Langoret. \n\n- \"They attacked him, in the lavatory.\" said Tomos. \"I'm prepared to swear to that.\" \n\nLangoret was a little bit prescient. Half an hour after we were all safely gathered, there was a knock on our gate. \n\nIt was Berandot. \n\nWe all trooped out to meet her. I wasn't about to duck her, even if I'd had a choice (which I suspected I didn't). \n\n- \"Colonel Cook.\" she said. \"You have assaulted a friend of mine. When I attempted to address the situation, you laid violent hands upon me. You've caused me shame and embarrassment.\" \n\n\"I would demand an apology, but the injury you've caused me is too great.\" \n\n\"I demand satisfaction.\" \n\n*** \n\nThere was more, of course. There's always more. \n\n- \"As the injured party, I claim choice of weapons.\" Berandot said. That sounded ominous. \n\n\"My seconds will call upon your seconds in the morning.\" \n\n- \"I'm his second, Berandot!\" shouted Tudino. \"And you'd better hope that he doesn't fall ill just beforehand!\" \n\nNobody could do 'haughty' like Berandot; she sniffed, and turned on her heel. \n\nI had just been challenged to a duel. \n\n*** \n\n- \"Well, that was foolish.\" said Kanitz. \n\nWe were alone in her cabinet meeting-room. \n\n- \"I'm sorry, if this causes you any -\" \n\n- \"You're sorry?\" She shook her head. \"I consulted just about every expert on the subject of duelling in the capital. There hasn't been a female-male duel in eleven years. But they're all agreed: you're both army officers.\" \n\n\"Gender doesn't matter, in such a case. Technically, you could challenge a Penchen, and they have no gender.\" \n\nAfter pacing for a while, she hid me in a little alcove, out of sight, but well within earshot. She wanted me to listen as she questioned the people involved in our little 'incident'. \n\n- \"I don't want to spy on anybody.\" I protested. \n\n- \"Be quiet. Stay here.\" \n\nFirst, she interviewed Aneli. I was embarrassed to listen to it, because the owner of my regiment seemed wholly intent on covering her own ass, in case anyone thought that she was at fault. She blamed Langoret for not keeping me out of trouble. \n\nTomos was next. He told Kanitz his story, and then apologized for not doing a better job of keeping me from harm. That was interesting. \n\nLangoret took her turn. She stuck to the facts. Except when it came to the matter of the duel. \n\n- \"Is there nothing we can do?\" she asked. \n\n- \"It's out of our hands, at this stage.\" said Kanitz. \n\nEsyle was interviewed, too. She acquitted herself well. \n\nTudino was amazing. \n\n- \"I'll kill her, if you want. Before the duel can take place.\" \n\n- \"That might not be wise, Colonel.\" said Kanitz. \"What weapon did she choose?\" \n\n- \"Pistols.\" \n\n- \"When?\" \n\n- \"A week from today.\" \n\nKanitz then heard from each of the bodyguards in turn. Ishana, straight to the point, described the bare bones of the events of that night. Koroba, though, advanced the theory that I'd been set up - not once, but twice. \n\nKanitz came to check on me, in the little alcove. \n\n- \"What do you think, so far?\" she asked. \n\n- \"I'm proud of my friends.\" I said. \"Did you get what you wanted?\" \n\nShe shook her head. \"We've only begun. Have something to eat, before we continue.\" \n\nWe sat on either side of her desk, and ate. \n\n- \"I'm afraid for you, Cook.\" she admitted. Kanitz wasn't being clever; she seemed to be genuinely worried. I thought that I could see dark circles under her eyes. \n\n- \"What can I do?\" \n\n- \"Win the duel.\" she said. \n\nAfter our lunch, she interviewed General Vis. \n\n- \"I bear Colonel Cook no animosity.\" she said. \n\n- \"Yet the two males who assisted Krayt in ... waylaying the Pylosian ... were your nephews, General.\" said Kanitz. \n\n- \"I had no idea that they were involved with other ... factions.\" General Vis was full of shit, as a general rule - she couldn't quite meet the Chancellor's eye. \n\nHer nephew were idiots. They only knew that Krayt needed their help to teach the foreigner a lesson. \n\n- \"Why?\" asked Kanitz. \n\n- \"Why ... what?\" \n\n- \"Why did the foreigner need to be taught a lesson?\" \n\n- \"Well ... he's been copulating with our women.\" \n\nKanitz let them stew in silence for a moment. \n\n- \"Your women?\" \n\nI couldn't see their faces, but they must have been feeling pretty stupid. Kanitz fined them a substantial sum, and advised them to stay away from Krayt. \n\nKrayt himself was made of sterner stuff. He denied that there had been any assault or attack on me in the lavatory. He denied even knowing who I was. Instead, he claimed that I had jumped him. \n\n- \"Why?\" asked Kanitz. \n\n- \"Huh?\" \n\n- \"Why would Colonel Cook attack you, if you'd never met?\" \n\n- \"Uhh ... jealousy?\" \n\nKrayt was a cockroach. But two interesting things emerged, as Kanitz questioned him: he'd been Berandot's escort that night, and he'd 'participated' in the hemmers of General Vis and General Brune, in the past. \n\nKanitz fined him heavily, and sent him on his way, before calling me out of my little hiding place. \n\n- \"He's just a tool, Cook. I could lock him in the stocks for a few days, but that's about it.\" The Westrons didn't have prisons, per se. Most offences were dealt with immediately: a fine, a beating or a flogging ... or execution. Prison was a place you waited in, for a day or two at most, until your sentence was carried out. \n\n\"You could challenge him to a duel, but that would be unwise.\" \n\n- \"Oh?\" \n\n- \"He is too far beneath you.\" she said. \"Beneath contempt, of course, but socially inferior, too. If you killed him, or even if you simply maimed him, it would look ... bad.\" \n\n\"Also, his family might feel justified to seek recourse.\" \n\n- \"Another duel?\" I guessed. \"If I was a Count, or a Countess ... what would I do about someone like Krayt?\" \n\n- \"Set your servants on him, and have him beaten to within an inch of his life.\" The way Kanitz said this, I wondered if it was something she'd done before. \n\nIt probably wouldn't go over well if I - a foreigner - tried something like that. \n\nShe explained the limits on her legal power to deal with Krayt. He was - barely - a nobleman. In the 17th or 18th centuries, on Terra, you'd have described him as a gentleman (not because he was courteous, or kind to women, but because he didn't have to work for a living). \n\nAs a noble, he couldn't be publicly beaten, or flogged; and if his crime was a capital one, he would have the privilege of being beheaded instead of being hanged like a commoner. \n\n- \"I see.\" \n\n- \"But in this case, I'd prefer if you left Krayt to me.\" she said. \"He's only an insect, but I'll have him followed, to see which hole he scurries into.\" \n\n\"Ready for more?\" \n\nI went back to the little alcove. \n\nBerandot was ... Berandot. Haughty, stubborn, and difficult. \n\n- \"How DARE you summon me here - like a common criminal!\" she shouted, before Kanitz had even uttered a word. \n\n\"This is an outrage! I won't stand quietly for this sort of treatment!\" \n\nThe Chancellor didn't reply. She just let Berandot run out of steam. \n\n- \"Colonel Berandot.\" said Kanitz, finally. \"There is nothing I can do to prevent your duel with Colonel Cook.\" \n\n- \"You'll miss him when he's gone, though, won't you - your little ... hemmer-toy!\" \n\nI couldn't see Berandot's face, but I was taken aback by the venom in her voice. She had a powerful hatred for me. It went well beyond the personal. \n\nKanitz' voice was level. \"As I said - I will not prevent your duel. That is not why I summoned you. The reason you are here today is the unprovoked assault on Colonel Cook by three young idiots - one of whom was your escort.\" \n\n- \"A scuffle between males.\" said Berandot, dismissively. \n\n- \"Three against one? And one of the three ... why was Krayt your escort, that evening? I would have thought that your tastes were more ... refined.\" \n\nI had to admire Kanitz' tactics, there. She hit Berandot in the one spot she was most vulnerable: her snobbery. Krayt was a bit seedy. The usual reason for taking a male out in public, for women of her class, was quite simple: a thank you, after a satisfactory hemmer, or as a prelude to inviting him to your next hemmer. \n\nIn other words, Kanitz was implying that Berandot had fucked Krayt - or that she was thinking about fucking him. \n\n- \"I do not have to explain my actions to you. Or to anyone.\" huffed Berandot. \n\nKanitz must have said something - or whispered it - I couldn't hear. But I clearly heard Berandot's response. \n\n- \"You wouldn't dare.\" \n\nKanitz didn't answer. That was the end of the interview. \n\nShe came back to my little hiding-place after Berandot had gone. \n\n- \"Interesting. Koroba may have been right. There's no way that Berandot would associate with a creature like Krayt - someone put her up to it. She was set up, just as you were.\" \n\n\"Can you stay for one more?\" \n\n- \"I'm at your disposal, Chancellor.\" She smiled at that. \n\nThe last person she called in was Countess Iloni. \n\nIt may sound unbelievable, but I could smell her - and almost feel her - before I heard her voice. \n\n- \"Thank you for acceding to my request, Countess.\" said Kanitz. \n\n- \"My pleasure, Chancellor.\" said Iloni. \"I hope that I can be of help to you.\" \n\n- \"Do you know anything about a male by the name of Krayt?\" \n\n- \"The one who attacked Colonel Cook? In my home - over the chamber pots, of all places. What a delicious scandal. And now a duel, to top it off.\" Iloni made it sound like the best thing that could have happened at her party. No doubt they'd be talking about it for months. \n\n- \"Krayt?\" \n\n- \"Hardly my type, Chancellor. Nothing like that Colonel of yours - now he looks well worth the trouble. I am so curious - how was he?\" ",
        "- \"I'm sure you've already heard, from other sources.\" said Kanitz. \n\nAneli, I thought. \n\n- \"Well, of course,\" said Countess Iloni, \"but I so value your opinion. Was he as good as I've heard? Or were you disappointed? We all noticed that he didn't impregnate you.\" \n\n- \"I asked him not to.\" said Kanitz. \"A pregnancy would have been ... inconvenient, given that we were in the midst of a war, at the time.\" \n\n- \"Oh, yes - the war.\" Iloni made 'the war' sound like a distraction, or an annoyance which interfered with her social schedule. \n\nShe was a consummate actress, and could have had a successful career as an improv performer. Kanitz came at her from several surprising directions, but Iloni parried or deflected every sally, without ever seeming ill at ease. \n\nI don't know if she would have told the truth under torture - but I was seriously tempted to find out. \n\nKanitz finally dismissed the Countess. I waited until she called me, to come out from my hidden corner. \n\n- \"I'm sorry.\" she said. \"I couldn't get anything out of her.\" \n\n- \"I thought you did well. It's just a game to her, from what I could tell. She would've run rings around me, if I'd been asking the questions.\" \n\n- \"That's true.\" Kanitz smiled, but the smile faded too quickly. She was preoccupied. \n\n- \"You seem to have other things on your mind.\" I said. \"If that's the last of the interviews, I'll let you get to it. I appreciate what you're doing, though.\" \n\n- \"Cook?\" Kanitz asked. \"Will you sit - just for a moment?\" \n\n\"May I ask you something?\" \n\n- \"Of course. Always.\" \n\n- \"I know that you have things to do ... and people to see.\" she said. \"But ... could I prevail upon you ... to spend the night here? With me?\" \n\n- \"When you say 'spend the night' ...\" \n\n- \"Lie with me. I want you to give me a child.\" \n\n*** \n\nWe had dinner together, by candlelight, in her rooms. A nice bottle of wine ... all very romantic. Except for the elephant in the room. \n\n- \"You want a child from me now, in case I don't survive the duel.\" \n\nKanitz didn't deny it. \"Anything can happen in these things, Cook. If ... if the worst result came about, I would never forgive myself for not bearing a child by you ... when I could have.\" \n\n\"If I had the choice, I would wait ... but tonight and tomorrow night are ideal ...\" \n\n- \"I understand.\" I said. I didn't know whether to be flattered, or frightened. \n\n- \"I'm afraid.\" she admitted. \"I can't predict the future, and I fear the possible outcomes.\" \n\nI'd never felt closer to Kanitz. No, I didn't entirely trust her; she herself had taught me that. But she was letting me watch and listen as she worked, and now she was allowing me to see her in an unguarded moment. \n\nI still admired her, and respected her talents. And there was no question: she was one of the most desirable females I'd ever met. \n\nAfter our meal, there was no point in delaying. Neither of us had to say anything. She rose from the table, and led me into her bedroom. \n\nShe opened the curtains, letting the light of the two moons flood in. Then she began to remove her clothing, so that I could see everything. \n\nI came up behind her. \n\n- \"Look out the window.\" I told her. \n\nI ran my fingertips across her shoulders. Then I let my fingernails run down her back, on either side of her dorsal fur. I lightly scratched both cheeks of her magnificent ass. \n\nThen I kissed her leg. \n\n- \"I'm ready, Cook.\" she whispered. \n\n- \"Preliminaries are important.\" I replied. \n\nShe spread her legs when I insinuated a hand between her thighs. Kanitz moaned when I kissed the lower slopes of her ass, and then trailed my tongue down to her inner thigh. \n\nShe was quite wet, but I wanted to eat her out from behind, so I did. \n\nKanitz' orgasm caught her by surprise - her knees buckled. I held her up, as I rose to my feet, and then steered her to the bed. \n\nI was very gentle with her, as I laid her down, and then entered her. The Queen's Chancellor and I had had sex several times, but I wanted this night to be memorable for both of us. For her, in case it led to a child. I hoped she'd remember it fondly. \n\nAnd for me ... in case the memory only lasted for six days. \n\n*****"
    ],
    "authorname": "AspernEssling",
    "tags": [
        "18th century",
        "ball",
        "sci-fi",
        "fantasy",
        "fantasy",
        "hemmer",
        "intrigue"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/westrons-pt-14"
}