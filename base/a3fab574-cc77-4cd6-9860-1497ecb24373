{
    "title": "Annie and Brendan, Getting Closer",
    "pages": [
        "Annie's eyes, half-closed, rolled back as Brendan licked her slit from the bottom of her nectar filled hole all the way up to her clit. He had been working her pussy over for a half hour and she was nearing climax for the third time. He had held her down after her first orgasm so that she couldn't move away from him on the bed. Her clit was so sensitive after she came that it was almost painful for her to continue, but Brendan knew if he could just keep her in place it would quickly pass and her second orgasm would be twice as good as the first and in half the time. It was.\n\nNow, as she was ready to pop for the third time tonight, he surprised her when he unexpectedly flipped her over quickly and pulled her hindquarters up to his mouth. Annie's face flopped into the pillow as his pulling motion caused her arms to drop helplessly to the bed. He stared at her shining rosebud, slick from her own juices and moved his tongue forward like a spear. He met little resistance as it pushed through the first ring of her glorious asshole and made its way towards ring number two, up her silky tunnel.\n\n\"OOOOOWeeeee!\" Annie squealed, pushing her bottom backwards in the hopes of driving Brendan's tongue further inside of her. Again, her eyes rolled back, she could hardly recognize herself, she had lost her resistance and was being moved around by Brendan as if she were weightless. Earlier in the night with her legs pushed back onto her chest, she felt in control, but slowly succumbing to his will. Next, for orgasm number two, her sexy feet were behind her ears and she felt as limber as a gymnast. Now she was more like a rag-doll; she had been tossed and turned and before she knew what happened he had violated her with his devil tongue in her sensitive anus. This time the orgasm was coming from a different place, her bottom, intertwined nerves forming the beginning of her clit all jumbled up her ass with Brendan's fleshy tongue probing and licking her insides. She had now worked two fingers into her pussy, pushing hard on her g-spot. Brendan added three more of his own fingers into her pussy, moving them in and out like a three-headed cook, while her fingers stayed fixed on her inner clitoral wall. Five fingers, two of them hers, stretched her pussy and gave her a fullness that made her warm inside her womb, God it was hot. She was unexpectedly hit by her third climax faster than she expected.\n\n\"Yes, Yes Yes.\" She was cumming, cumming for the third time and now the most intense time of the night. Suddenly there was a whoosh of water, soaking both of their hands. From his position behind Annie, Brendan's mouth enveloped her rosebud and sucked it in, he knew she was squirting.\n\n\"OHHHHH OHHHHH MY GOD.\" Annie growled. Her body shook for what seemed like ten seconds after the sticky love fluid had shot out of her glistening pussy.\n\n\"OHHHHHHH.\" She slowly turned her head back and looked at Brendan, his tongue still inside of her, \"Are you going to fuck my ass or aren't you?\" She half-smiled as she said it, but left no question as to what the answer was going to be.\n\nBrendan sprung to action. Quickly, on his knees and fumbling for the lube on the bedstand. WET Premium silicon, their favorite lube for ass-fucking. He snapped the cap upward and poured a puddle of the slick liquid into his palm, moving it forward and cupping it upward towards her red eye. Her hole, already dilated from his warm tongue, Brendan quickly drew as much of it as he could into her waiting tunnel. He took his index and middle finger and pushed them into her rectum up until he felt the webbing of his hand meet resistance. He moved them back and forth to test her readiness, as well as the slickness of the track. Satisfied with his findings, he withdrew his fingers and poured another palm full of lube into his hand. Next he slathered his cock, making sure he was covered to the point it was dripping off of him.\n\nShe was ready, but she had been ready from the moment his tongue snaked into her sensuous asshole, taking her by surprise.\n\n\"Give it to me, I need that cock in my ass, now,\" Annie urged, \"NOW!\" She was suddenly insistent.\n\nBrendan scrambled behind her and lined his rod up with her slick pucker and leaned in. Silk satisfaction. He moved through her without resistance, in the delicious grip of her butt. He started moving in her slowly as he would normally do, so as to give her time to adjust to his intrusion, but she was already prepared. She needed him, his cock, his force, his strength, She needed his pubic bone hitting her tailbone. She needed his hands gripping her ass checks, HARD. She needed his balls swaying and slapping against her pussy with each animal thrust. She needed his sweat dripping off the end of his nose onto her back. She needed the noise, the sound of flesh slapping against flesh, of his cock squishing and sliding in and out of her ass. She needed the buzz in her head, her pussy, her clit, her ASS, She needed all of her senses to remain engaged, to take her away.\n\nBrendan felt it too, he turned off his brain and let his cock lead the way. It started to move faster and faster, pulling his body along with it, by force of its own will. His prick was heating up, now over-heating from the friction in her body, but also the feeling of his orgasm speeding ahead. He grunted and moved even faster. He had never moved this surely inside of her, this deliberately, this forcefully, he was in complete control. That was it; control. She needed him to take over, to control her, to bring her through this moment. And he wanted control, he moved another inch higher onto his legs to penetrate her slightly deeper, to take her to the next plane. He started to black out from the effort and the pleasure, when his orgasm crashed through and took over.\n\n\"GRRRRRR AHH GRRR. YESSSSS.\" He screamed as the light in his eyes went black and shot red and green through his mind. His cum poured like lava out of him into Annie's tight tunnel. Lava, thick and hot. Not so much a jet blast, but the force of a crashing wave, Thick, steaming, white lava.\n\nAnnie threw her head upward and arched her back. She could feel his cum boiling inside of her. It was almost painful at first, but she recognized that feeling meant that the reward was hers. His cum. Her ass. Her reward.\n\n\"AHHHHHHHH YESSSS.\" she purred. It pumped into her and steamed further and further upward into her gut. She savored the feeling and felt her fourth orgasm of the night taking her over the edge...she whimpered, she was lost, no more energy, no more sound, no more screaming, only waves of pleasure, pleasure, more pleasure. All that was left of her was the cheshire smile that stretched across her face.\n\nDrawing a languid hand through her matted hair, she pictured what she must look like, laying there prostrate on the bed, with her hips in the air, face turned sideways, hair a mess, sweat dripping from her forehead and cheeks, sheets crumpled, Brendan's dick still in her ass, cum dripping from the sides or her reddened hole, her pussy lips swollen and draped open. What a sight, she loved it. She deserved it.\n\n\u2014\u2014\u2014\n\nThey shared breakfast the next morning, silently, but warmly, with glances across the table at each other. Brendan, peering over the newspaper, Annie, in his faded Twins T-shirt and nothing else, breaking into a grin. As she smiled, she could feel her asshole pulsing from the workout it was put through the night before. Sipping on her latte and leering back at him, blushing, she whispered, \"You're so bad.\"\n\nBrendan's cock twitched in his boxers. He was still turned on from last night's action. Now Annie was silently acknowledging the reaming he had put to her, \"So Good.\" he whispered back.\n\n\"mmmmmmm\" she half-moaned, \"So Good\"\n\nIt was the kind of Saturday morning Brendan had come to love. They started the day together and laid around until around eleven, when he would go upstairs and get dressed and head out to the club for a round of golf with his crew. Annie would work in the garden for a few hours and then make her way into town for afternoon coffee with a girlfriend. They'd meet back up around five in the afternoon and get ready for the evening, showering, dressing and having a cocktail or two to warm up for the night.\n\nThe way Annie was acting, Brendan wasn't sure he ever going to make it to his game. By 9:30 he was looking up towards the stairs, but Annie wasn't thinking about the time, she was still buzzing from last night and replaying the events in her mind as she leered at Brendan.\n\nThat loss of control was so unlike her, she thought. It wasn't the loss of control in terms of him taking her ass, he had done that dozens of times. The loss of control that she was high from was the part where she didn't have to decide anything. She was being dominated by Brendan, but not in a S&amp;M kind off way, no. This was the kind of dominance where she gave over her control and Brendan, picking up on her need to be led, somehow got into her head and could anticipate what she wanted and what she needed. He liberated her by deciding how she would be ravaged. She was ready to go for his cock after he went down on her the first time, but that's where things changed. She would normally pull him up to her after cumming and rub the head of his cock against her clit. She would masturbate herself with his hard dick for a few minutes to work him up and then then slowly slide him into her. But this time, he interrupted her usual progression.\n\nHe held her arms above her head with his left hand, while using his stronger right hand to keep her planted on the bed, not allowing her to roll over or squirm out of the way. He kept her there and after a minute, where Annie almost got angry, he moved his face back down between her legs and forcing her legs open with his right hand, he slid his tongue back inside her. She arched her back, surprised and still slightly resistant, and then, surrendered. At that point, she gave in and let him do with her what he would. She didn't feel anything other than release at that moment. She wasn't annoyed, she wasn't determined to have her way, instead she gave in and let herself go, to the pleasure, to his will. It felt so good. She thought of all the decisions she had to make everyday at work, with her family, decisions for them, decisions for Brendan and she realized she didn't want to make any more decisions. When she came the second time, he could have done anything he wanted, she was on-board. When he flipped her over and starting rimming her she wasn't even aware of what was happening, she was on a plane of release and eventually, when he fucked her ass, she was as relaxed and as free as she had ever been. She could feel no tenseness in her bottom, she was open, open to him, open to his cock and consumed by the feeling of being taken over by her lover. Everything that took place, her squirting, his orgasm, her fourth and final orgasm were as inevitable as breathing, because she was being enjoyed and she was enjoying it and she didn't have to do a thing other than love him.\n\nWordlessly, she got up from her chair in the kitchen and moved towards him. Kneeling between his legs, she looked up and grinned. She was now the one in control and as if to say, \"I'm Back.\" She pulled his boxers to the floor and lowered her head to his shaven balls and began to lick them. Brendan could tell she was determined to see him cum for her and this time he was the one who was giving in. Annie continued to lick his balls, first the left, then the right, nuzzling with her mouth onto them in a sweet, loving way. He felt the thrill of her saliva on his sac, cold in the morning air, but then warmer as she leaned in and engulfed them with her tongue. His ass lifted off the seat of the chair as she continued to find ways to thrill him with her tongue.\n\nNow she had taken her right hand and grabbed hold of his stiffened rod. Holding him by the root, she made an art of lathering his balls with her spit. She finally lifted her face form his lap and stared up at him, \"I love you,\" she mouthed to him before leaning his cock toward her and taking his glans between her lips. For minutes she worked the top half of his cock with her mouth. He surrendered to her skills and felt his balls start to tighten, meaning he was on the road to release. Annie, sensing that he was making the turn for home, started jacking his slick cock off with her hand while keeping his dick-head in her mouth. Brendan was now really getting close to cumming.\n\nAnnie rose up a bit on her knees and in doing so took Brendan's legs over her shoulders. As she raised up, his body slid down the chair slightly, exposing his waxed asshole to the light. This was what Annie wanted. Without hesitation, she took her left hand and slid her first and second fingers into his sphincter. Brendan moaned out loud, \"Oh God, So Close, Fuck My Ass Baby.\"\n\nAnnie moved into hyper-mode, pushing her fingers all the way up his ass and searching for his walnut shaped prostate. It was almost to much for him, the mass-stimulation: her hand pistoning on his cock, her mouth clamped on his prick, her tongue swirling around his dick head and finally, her fingers working in and out of his asshole.\n\n\"AHHHHHHEEEEYAHHHH.\" He screamed as his cum boiled into her mouth. \"Oh Fuck Oh Fuck OH FUCK.\" He continued to make a series of grunting sounds until he was drained. Shaking now, he almost whimpered as Annie continued to suck the last of his cum out of his dick.\n\n\"Annie, Annie, Annie, Easy.\" He was now in that refractive period after orgasm where his cock was super-sensitive and any more additional contact was almost painful.\n\n\"Perfect.\" Annie thought, \"Now he knows how I felt last night.\" Not wanting to torture her beloved any more, she let his cock pop out of her mouth and she slowly stood up and leaned into him. In what was becoming a ritual for the two of them, she took his mouth in hers, opened her lips and pushed his cum out of her mouth with her tongue, while he eagerly drew it in and filled his own mouth with his seed. They French kissed for minutes, exchanging his pearly fluid until there was nothing left to share because they had both, eventually, swallowed his load.\n\n\u2014\u2014\u2014\n\n\"Where's your game?\" Brendan's partner Chris asked as Brendan put his approach shot to the eleventh hole into the water hazard to the left of the green.\n\n\"I left it in the kitchen\" he half laughed as he looked whimsically at the other two guys in the group.\n\n\"You ate too much?\" Chris looked at Brendan wondering what was up? Brendan was his golf partner for nearly 4 years. They knew each other socially, competitively and yet Chris hadn't heard this kind of tone from Brendan before. Then there was the fact that Brendan was 6 shots over par and they were barely past halfway to the end of the round. His partner's head was someplace else.\n\nBrendan snorted with laughter, \"Yeah, you could say that about me last night, but then again you could say that about Annie this morning too\".\n\nThe other two men, whom Brendan and Chris were playing against now came over to get into the conversation. Drake, one of them, was Brendan's usual opponent. He and his wife had known Brendan and Annie for years. Drake's wife Molly was friends with Annie and would meet up with her socially, in fact they were in town at that moment shopping and stopping off for a latte.\n\n\"Details, I want details.\" Drake had always had a thing for Annie. He loved her toned body, especially her pert 34B breasts and her shapely legs. When they went out to dinner he would keep an eye on how she dressed and he loved it when she wore a revealing top or a skirt that highlighted her legs. She had those calf muscles that when looked at from behind, formed the shape of a diamond reaching from her ankle up to her knee. She was also a bit of a tease, as was Drake. They never missed an opportunity in their many nights out as couples to turn the conversation to sexual connotations and overture. Now he was hearing more from Brendan than he had before about what Annie was like between the sheets. He tried not to look to interested, but he was transfixed.\n\n\"Well for the past few months we've had this...awakening, I don't know what started it, but now it's like we're engaged again and trying to fuck in every position, in every room, on every piece of furniture in the house, and it just keeps going further and further.\" Brendan shared, kind of surprising himself with his revelation of their sex life to his friends.\n\n\"Wow, no wonder your heads up your ass today.\" Chris mused, not realizing all the things involving Annie and Brendan asses that had gone down in just the past 16 hours.\n\nThe men all exploded in laughter. The fourth guy in the group, Matthew was a high school buddy of Drake that would play with these guys as a guest a few times a year. He was about 6 feet tall, with a strong jawline and blue eyes and brown hair, dusted with blonde. He was clearly an athlete, his arms showing the girth of someone who had lifted weights, but not the kind of guy who wanted to be flashing his guns. He worked at creating a lean, strong physique, strong to the core. Brendan had always liked him and he was pleased when Drake texted that morning saying Mathew would be their fourth. Matthew was single, but only because he chose to be.\n\n\"She's how old, if you don't mind me asking?\" Matthew offered, although with no hint of caring at all if Brendan were actually offended.\n\n\"Ever since she turned thirty,\" Brendan replied quickly, secretly proud of his wife's striking beauty that led many people to assume she was in her early twenties; his trophy wife. Brendan would just as quickly let the person who said that know that she was indeed his trophy wife, but his first and only wife, a trophy since the day they met. Later he would share the story with Annie as a form of compliment and she would roll her eyes, although it always gave her a tingle between her legs that all these men found her desirable.\n\n\"Ahhh, the Dirty Thirties, that explains it.\" Matthew laughed and winked at Brendan.\n\nThe three men in the group, all married, looked for more explanation from the bachelor in their midst.\n\n\"It's my experience that women these days are in a such a rush to build a career before settling down with morons like you, that they never really let themselves focus on what they want for themselves until they look up and the calendar has changed. At that point they go one of two ways; they either give into the belief that they are aging and their role is mother, wife, worker, so that they lose some of their identity...and then there's the others.\" He took his hat off and swept his hair backward as they walked off the green towards the next hole, replacing his hat, just-so\n\n\"The others?\" All three men yelled at him as they pursued him to the twelfth hole.\n\nMatthew stopped and turning back towards his pursuers, said, \"The others. The ones who are secure enough in who they are and in their life, or their marriage, or their job, or whatever, that they look at their thirties as the moment to invest in themselves. It usually presents itself with an increased sex drive, but pretty quickly leads to the realization that's there's another world out there, right in front of them, that can can enter if they just open the door. These are the ones who start experimenting in bed, looking for new possibilities and pursuing pleasure wherever it comes to them from, no matter how taboo that might have once felt.\"\n\nHe took a step back towards them, \"Let's do an experiment, tell me the last time you took your wife's ass?\"\n\nMatthew looked at his High School buddy, \"Drake?\"\n\nDrake sighed, looked up and to the left and responded, \"I don't know, three Months ago?\"\n\n\"Not bad, but not yet Dirty Thirties,\" Matthew said, in a considerate manner, quickly moving to the next participant.\"Chris?\"",
        "Chris in a funny, self deprecating way joined in, \"I don't think we've fucked ass three times in total, ever.\" all the men laughed out loud and slapped him on the back.\n\n\"Brendan, that leaves you.\" Matthew turned towards Brendan and fixed a stare on him with his ice blue eyes.\n\n\"Well, that depends?\" Brendan offered.\n\n\"What does that mean?\" Asked Drake, desperately hoping to hear more about Annie's escapades.\n\n\"Well, last night I fucked her sweet ass, but this morning she fucked me right back, so I guess it's a tie, we've both fucked each other's ass in the past day.\" Howls of laughter roared out from the group.\n\n\"Good Man!\" Matthew laughed, \"You made the trade I've always made, I'll take a few fingers in my ass for a cock in hers anytime.\" He put his arm around Brendan's shoulder and turned him back towards the tee box, squeezing his shoulder firmly to the point where Brendan had to think for a moment if there was something else in his masculine gesture.\n\nThe shared conversation on the green freed Brendan's foggy mind up and he emerged from his bliss induced sleep-walking on the golf course to go on a run of two birdies and five consecutive pars to finish the round and take the win for he and Chris. After a few cold beers on the patio overlooking the 18th green the men broke up their group and started heading for their cars. Matthew was the first to leave and he took his hat off and shook hands with his mates, thanking them for hosting him and for the good time had by all. He shook Brendan's hand last.\n\n\"Man, you came on like a house on fire after the 11th hole, must have been something I said?\" The two men walked towards the parking lot.\n\n\"You know, I think it was, that was the turning point and I started thinking about what you said and playing it forward in my mind and it made me think it's going to be a great year.\" Brendan said, turning and looking at Matthew with admiration.\n\n\"Enjoy it man. Drake has told me that Annie is a hottie and you're one lucky bastard. As the resident bachelor of the group, let me give you one more piece of advice.\" He took a half step towards Brendan and said in a lower, deeper voice, \"Play this one out. If she's finding pleasure from this journey you're on, follow her where she goes, even if it's out of your comfort zone. I can tell you that the hottest times I've had are when I surrendered my preconceived notions about what a real man does and let myself go in the same way as the Dirty Thirties have. It's a hell of a ride.\" He winked again and fist bumped Brendan, \"Thanks bud, let's do it again soon.\"\n\n\u2014 \u2014 \u2014\n\nThat night, they went out to dinner with Drake and Molly and after dinner they went down a block to one of Minneapolis' most popular brew-pubs. They shared a booth in the bar area, Drake sitting next to Annie and across from Brendan. There they continued their conversation from earlier in the night. At one point, Drake related the story of Brendan's turn-around in that days golf game and that maybe it was Annie, he suggested, who should be taking the credit. Brendan didn't bite on the lead Drake threw out, but Annie did. She insisted on hearing more, but the men stayed cagey in their responses. Eventually, Drake tamped down the story to say that Brendan had merely mentioned that their sex life was on fire, and that after that, he went on to dominate the game.\n\nMolly laughed and rocked back in her chair, looking at Annie knowingly, \"That doesn't surprise me at all\". Earlier in the day she and Annie had ended up at a coffee house where they talked for over two hours. Annie shared her her feelings of sexual discovery with Molly and get incredibly detailed in relating everything she and Brendan had been up to in bed this summer. Annie confessed how she wasn't even close to feeling like they had explored everything they could. Molly listened, as if in a trance and secretly regretted that she didn't have the same sexy stories to share with Annie. Nonetheless, the talk did Molly a world of good and she vowed, silently, to herself, that she would do something about it and that the next time the women got together she'd have some stories of her own.\n\nIt was nearly 11:30pm when Annie and Brendan walked through the front door of their tudor home on the west side Minneapolis, an upscale leafy neighborhood that felt suburban, yet was only minutes from downtown.\n\n\"Damn, that was fun tonight.\" Annie laughed, putting her arms around Brendan's sturdy neck and as she twirled herself around him from left to right, ended up with her lips on his ear, \"I love you.\"\n\n\"We always have fun with them, don't we?\" Brendan asked, although it was a statement not an actual question.\n\nAnnie went to the fridge and pulled out a bottle of Chardonnay that they had opened before leaving for dinner and poured herself a generous glass, and one for him. \"I've got so much to tell you,\" She said, mischievously smiling and looking back over her shoulder as she made her way to the sectional couch in the great room adjoining the kitchen. She placed both glasses on the coffee table and motioned for him to join her. Brendan grabbed his iPhone and put the daily mix from Spotify on his Sonos speakers and moved towards his wife. She was laying with her back against the center section of the couch. Brendan lifted her toned legs and slid down under them, putting them in place over his lap so that she was back in the position she was sitting in before he joined her.\n\n\"So whats so juicy?\" Brendan asked, not pretending he didn't mean to say what he had just said, hoping that she was indeed the one who was juicy. As he said that he slid his hand along the curve of her calf and started moving it up the outside of her thigh and under her dress. He loved the tight line of her muscles on her long legs and he traced her thigh muscles with his hand until if gave way to the curve of her hips.\n\n\"Mmmmmm, I know something you don't know.\" Annie said, tilting her head and looking straight into his eyes.\n\nWhere could this be going? He thought they were about to talk about dinner and then to slowly undress each other so that they ended up fucking on the family room couch, like they were teenagers. Now Annie was playing games, but Brendan knew this tone of voice, the mischievous look in her eyes and the heat he was feeling from his touch meant it was going someplace good.\n\n\"What? Was it something from tonight? Was it Molly, was it Drake?\" He started the questioning.\n\n\"No, Yes, No.\" She laughed, leaning forward and kissing him. While she did so, she moved her other leg rhythmically against his freshening cock.\n\n\"Wait, No, Yes. No.\" He played it out, \"No, so not from tonight?\" He started breaking down her riddle.\n\n\"That's one correct, you have two to go\" she piped in, as if she were a game show host.\n\n\"So the second one is Yes, you said Molly first, so it has something to do with Molly?'\" He was getting the line of questioning now.\n\n\"Correct, although I didn't say it was about Molly, it's just something I heard form Molly.\" Annie gushed and looked onward at him so that she could finish the game.\n\n\"OK, OK, so Drake is third, it's not about him.\" Brendan was confident he passed the test and now he was anxious to hear the dirt from Molly, but he was also getting a but frustrated that Annie's game was taking so much time, as he was now fully hard, but his cock was still trapped in his pants.\n\n\"Good Boy!\" Molly screamed and threw her arms around his neck kissing him deeply. So, while you were playing golf today I had a girls day with Molly,\" Annie launched into her story.\n\nBrendan smiled and took a drink form his glass while Annie continued, \"Well, we went to that new shopping street downtown with the private boutiques and spent a few hours looking at things and picking out an outfit or two and maybe a pair of shoes.\"\n\n\"Well, I know that's gonna cost me.\" Brendan declared.\n\n\"No, it's not Honey, I make my own money, so this doesn't cost you anything. Now stop interrupting me.\" Annie tweaked his nose a little harder than usual as a reminder that he wasn't the only bread winner and she contributed as much, or more to the family finances as he did. \"It's what we did after that's so juicy\".\n\n\"Now we're getting somewhere,\" Brendan thought, but kept his mouth shut so that she could get to the good stuff.\n\n\"So we stopped into the coffee shop on that block, its' some Parisian bistro-ish place with yummy espresso and we took a table inside in the corner of the place and kind of spread out and took our time and started talking about the summer. Molly mentioned that I looked great, but that there was something different about me and she couldn't place her finger on what it was.\"\n\nBrendan repressed the urge to make a joke about Molly placing her finger on something in Annie, but didn't since he knew it would sidetrack her and Annie would then remind him that that wasn't the kind of threesome she was hoping for one day.\n\n\"So she kept pressing me and I finally just unloaded how amazing the summer has been with you and how we've been fucking like bunnies and in all sorts of ways. As I found myself talking and talking I kind of took her along the journey I have been on and how I've never been more free sexually and it's all because I finally stopped caring what anyone else would think about it. I mean I'm thirty-something fucking years old and I like to fuck! And I really like to fuck you because you still surprise me and without realizing it you've been expressing yourself sexually in a way that I was still bit afraid to.\"\n\nBrendan looked up. He didn't think that's what was happening, wasn't Annie guiding this exploration? Wasn't she the one with the sex drive of a monkey lately? \"Hey, I'm just following your lead.\" He said in, a surprised kind of way.\n\n\"Oh come on?\" Annie laughed sarcastically. \"Who's the one eating his own cum out of my pussy on a regular basis? I certainly wasn't the one started that little trick.\" Annie took a breathe and continued, \"Who's the one who literally pushed my nipple inside of his cock head and fucked it?\" She was on a roll now, \"And who's the one who admitted he wouldn't mind playing doctor with a boy and me?\"\n\nBrendan laughed out loud, realizing that she was right, he was exploring his own sexuality as much as she, \"But who's the woman who walks in the door on a Tuesday night with no panties on beneath her skirt and mounts my face on the couch with her creamy pussy?\" He was now running through the details of what Annie had been up to recently, \"Who insisted we fuck on the balcony of that hotel in South Beach without a care about who could see me ramming my cock into you from behind? It was 9:30 at night?\" He was ready to reintroduce the situation that she had referenced earlier in their conversation, \"And who, my dear, admits she wants to be spit roasted by me and a stud?\"\n\nBrendan moved his hand off of Annie's hip and slid it over to her pubic mound, only when he got there, he felt something different, was that a string, with a ring on the end that you put your finger through?\n\nAnnie giggled and kissed him, \"Just wait and you'll learn all.\" She clenched her legs together so that he couldn't investigate the mystery string any further until she was ready.\n\n\"Come On, tell me what this has to do with Molly?'\n\n\"Well honey, I shared a lot with Molly, a lot. I told her about how we've been stretching boundaries sexually and how it seems like everything is suddenly in play and she pressed me on that. She wanted to know where our boundaries are at this time and how far we were willing to go. So I finally told her that my secret fantasy was to have two guys fuck me, for me to suck their dicks, for them to take me, to have me and that I wanted to be covered in cum from you and another guy. Molly sat there in silence for about a minute and I was worried that I had gone too far with my sharing. She finally whispered to me that she thought that my fantasy was so fucking hot.\" Annie was now stroking Brendan's cock with her hand and fumbling for his zipper to let his rod out of confinement. \"And then I told her that you wanted it too, you wanted that and maybe more. So she jumped on that and was like, 'What more could there be' and I hope you don't mind terribly, because she's my best friend and she would never share my secrets with anyone, not even Drake. So I told her. I told her about you being bi-curious and if things ever went there and we both felt secure, that we would both want to play with Mr X's cock.\"\n\nBrendan breathed in sharply. He had never shared his feeling about being attracted to cock with any of his friends and he probably never would. However, Drake was his friend and if Moly slipped, for the first time in his life, he'd have to come to terms with someone he knows, knowing his secret...curiosity. He shifted in his seat and his cock twitched a bit.\n\nSensing his sudden apprehension, Annie gripped his cock and lightly began stroking it. \"Oh baby, I know this scares you, but she won't tell, she's been my friend for ten years and she's never shared a thing I asked her not to. In fact, she jealous of us and after I told her what we've been up to she started to cry a little, because she' been having some of the same feelings I've had since she turned thirty, but she's been afraid to act on it. I'm not saying she has the same fantasies as me, its just that she knows she wants more in her life right now and she wants to take Drake along with her on a similar track as us. I told her, 'SO DO IT,' He's your husband, just get it going. So she nodded and agreed and said she was resolved to explore herself and explore Drake as well and I told her consider it a gift to yourself, because you deserve it.\"\n\n\"\"This is all very hot, but I still don't know where this is going?\" Brendan insisted, his cock was now rock hard. He was intrigued. Was this leading to a swing with Drake and Molly? He didn't know how he felt about this. Sure, Molly was a smoking hot brunette and the type that Annie might also find attractive, but Annie had always said she wasn't into chicks and he was not going to feel comfortable with Drake being involved with Annie and him, he just knew him too well.\n\nAnnie sensing that this wasn't leading to where she wanted it too, took back over and slid her other hand into his pants cradling his balls in her palm. She continued her story of that afternoon's activities. She launched back into her story as she snuggled up next to him and began kissing his neck while leisurely stroking his now freed prick. \"Molly told me something about someone you know that you might find interesting\"...she toyed with the sentence and watched his face for a reaction.\n\nSensing the story was coming back around he replied in earnest, \"Finally, what did you hear and about whom and what does it have to do with me?\"\n\nAnnie leaned over him and looked directly into his eyes, \"Who did you play golf with today?\"\n\n\"The guys.\" He said, looking back at her quizzically.\n\n\"The usual guys?\" She asked again, raising her eyebrows.\n\n\"Yes, Drake and Chris and Drake's buddy, Matthew.\"\n\n\"Well two of the guys are your regulars, but one isn't, right?\" Annie was leading Brendan down a logical path at this point.\n\n\"\"Matthew.\" Brendan stopped himself as the thought came to him, this was about Matthew, \"What did you hear about Matthew?\"\n\n\"Hold on, tell me about Matthew first, I don't think I know him?\" Annie stopped Brendan. Secretly, she wanted to not only hear what he looks like and what he acts like, but what did Brendan think of him.\n\n\"Well he's a guys guy, he's super in-shape but not built up like a gym-rat. And he's cool. He's been a bachelor his whole life so his stories are pretty entertaining.\" Brendan continued, \"He has some interesting theories on women, you included\"\n\n\"How's that possible?\" Annie asked, since she had never met Matthew before, let alone even heard of him.\n\n\"We got into a discussion during the game that was similar to the one you had with Molly today. I kind of let the guys know how hot the summer had been in the bedroom and Matthew asked some questions about you that kind of led us to understand he finds woman of a particular age to be the most open sexually and mature enough to know what to do about it, he calls them the dirty thirties.\"\n\n\"Weeeeee,\" Annie squealed, laughing and gripping Brendan's cock even tighter, \"Then do I have some good news for you. But first, you don't know him that well, right?\"\n\n\"Just see him a couple of times a year on the golf course.\"\n\n\"And you think he's someone worth meeting?\"\n\n\"Yes, but what are you talking about, tell me!\" Brendan was exasperated and eager to hear more.\n\nAnnie now dropped her head down to his lap and began licking the length of his cock as she spoke, \"Molly told me that he's not just a good looking bachelor,\" She moved her head down to his balls and began to nuzzle her lips on his sensitive skin, \"He fucks around. He more than just fucks around, he's a stud. He is active in the swing scene, but he's very in-demand. Molly said he's bi and the people in the lifestyle like to trade him around because he'll get both partners off.\" As she said the last part she moved back up and engulfed Brendan's cock, taking it all the way down her throat to the root.\n\n\"Amazing......\" Brendan moaned out loud. Annie was now deep throating him and looking up at him as she did so.\n\n\"Just think, this could be him deep throating your cock baby.\" Annie lunged back down on his prick taking it into her throat.\n\n\"Ohhh baby, that could be us, he could be our guy, he's perfect,\" Brendan moaned as he said so, thinking about Matthew's chiseled face between his legs.\n\nAnnie continued on him with her mouth, while bringing her hand around to his behind and searched for his puckered hole with her index finger.\n\n\"Ohhh Annie, you could be sucking his cock while I plowed you from behind,\" Brendan mumbled as he enjoyed her amazing talents. \"You could be used by both of us, you'd love it, you'd be our cum queen.\"\n\nAnnie was now furiously sucking his cock and had succeeded in snaking two fingers up Brendan's ass on her way to giving him a deep prostate massage.\"Fuck, suck fuck, cum\" Annie was blurting out one syllable words between sucking his dick up and down. She was possessed by the thought of two dicks fucking her from both directions and she was taking it out on Brendan's appreciative prick.\n\nBrendan wasn't going to last long. Annie's fingers up his ass were having the desired effect and he was now clearly on his way to blowing his load in Annie's hot mouth. Sensing that he was near, Annie increased the pace of her mouth on his cock to a faster speed than she had ever done before. Brendan came so quickly he surprised himself, moaning and stuttering as long jets of cum blasted into Annie's mouth. He felt like he was cumming in buckets. Annie took as much as she could, but there was so much that it was leaking out of the corners of her mouth.\n\n\"Ahhhhh Ehhh Ahhhhhhh.\" Brendan yelled as he emptied his balls into his loving wife's mouth. Annie captured his salty load and waited for Brendan's prick to stop twitching. She took the two fingers of her right hand and squeezed his cock from the base up to the tip, forcing out any remaining cum that hadn't already been deposited into her mouth.\n\nLooking up lovingly at him, she slowly extracted her digits from his rectum and moved upward. She raised her face up so that it was about a foot above his and as he lay on his back. While Brendan looked up at her, she slowly started to drool the cum she had stored in her mouth downward towards his now extended tongue. Finally, the pearly fluid reached him and he began to take it into his mouth. More cum started flowing downward from Annie and after about twenty seconds of cum play between the two, she dropped onto his face with hers and they ravished each other, swapping Brendan's cum and spreading it all over both of their faces. After several minutes of sticky cum filled licking and biting, they fell off of each other, faces glazed with the output from Brendan's massive cum load.",
        "\"Ohhhhhhhhh, I want this so bad.\" Annie moaned, \"I want to be covered in cum, I want to be fuck-filled and spit roasted. Will you give me this baby?\" She held herself with arms crossed over her breasts.\n\n\"I will baby, I will.\" Brendan eagerly replied.\n\n\"And will you lick the cum off of me and off of his dick? Make me clean after you both cover me in sperm?\" Annie continued.\n\n\"I will baby.\"\n\n\"And will it be Matthews cum your eating baby?\" Annie asked, expecting that the answer would be yes.\n\n\"It will baby, I'll suck his cock and get it hard for you and when we cum I'll make a feast of it.\" Brendan said proudly.\n\n\"Baby please go down on me, please lick my pussy, I'm so wet.\" Annie begged Brendan, as she physically pushed his head towards her molten pussy.\n\nBrendan didn't need to be asked twice, he loved eating her out and would spend all day there if she'd only let him. Except, when he brought his face to her pussy, he was confronted once again by the round plastic ring attached to a string and dangling out of Annie's now blood engorged pussy. He put the ring in his mouth and gave it a short tug, it moved forward, but then met resistance inside of Annie. He pulled a little more persistently and saw the beginning of a red Benwa ball appear from inside Annie's honey tunnel.\n\n\"Molly and I bought them today,\" she blurted out, keeping her hand on the back of Brendan's head so that he did not stop servicing her deep dish pussy. \"I told her if she wanted to feel sexy, she needed to do something about it, so we ran across the street to the adult toy store in the back of the lingerie salon and bought them and we put them inside us right there in the dressing room,\" she was tossing her head back and forth while Brendan shoved his tongue in her hole, far enough that he could feel one of the balls when he searched deep inside her sweetness. \"Ohhhh, I had them in at dinner, so did she,\" Annie was breathing hard, \"and every time I shifted in my seat I could feel them pushing up on my g-spot,\" she was now rocklng her head left to right, \"And at one point I had a mini orgasm while you were telling that really funny story.\" Annie was becoming unglued as she neared her orgasm, \"And all I could think about was fucking you and Matthew, that, and how hot it was that my best friend was sitting across from me, with benwa balls...up her pussy and she was probably thinking the same thing.\" Annie kind of sang that last part and tumbled directly into an intense orgasm, driven by the pressure in her pussy from the balls and Brendan's expert tongue stroking on her stiffened clit.\n\n\"OHHHHHH OHHHHHH OHHHHHHH,\" Annie cried as she came and as she did, fluid began squirting out of her pussy, drenching Brendan in her essence. She came and squirted while Brendan took the force of it on his face. When Annie finally stopped shaking, she brought his face back up to hers. She grabbed his cheeks with both hands and started furiously licking her sweet cum off his drenched face, taking time every third or fourth lick to shove her tongue in Brendan's mouth, so as to share the sweet liquid with him the way she had done earlier with his cum load.\n\nBrendan pulled his mouth off of Annie and in one motion, flipped her over on the bed so that she was now looking up at him. He was once again rock-hard and eager for more of his delicious wife. She moved her hands to her breasts and began kneeding them and pinching her nipples. She continued to pull on her nubs and eventually let go of her own nipples and latched onto Brendan's. She took each of his man nipples between her fingers and pinched them until they hardened in her hands. Brendan didn't usually like the feeling of his nipples being tweaked, but this time, between the occasional pain, he felt jolts of heat move from his chest and down into his loins. Emboldened by the electricity emanating from his nipples, the taste and smell of Annie's sex all over his body and thought of his wife spending the day with Benwa balls buried in her pussy, he moved his considerable hard-on down to her slit and prepared to reenter her.\n\nWithout warning and without permission, he thrust his cock forward into her, into her pussy, her pussy that was already occupied by the aforementioned Benwa balls.\n\nAnnie's eyes shot open as Brendan's steeley rod filled her already stuffed womb. The sound of the Benwa balls clicking together inside of her, combined with the sudden feeling of complete fullness awakened Annie in a way she hadn't experienced before. She took a moment to adjust to the reality that Brendan's cock had pinned the Benwa balls inside of her and she felt her pussy contract and fill with moisture. She was flooding between her legs as the pressure from Brendan and the Benwa balls simultaneously pressed her g-spot and pushed against her cervix. She threw her arms around him and grabbed his ass cheeks. With enough pressure to leave marks on his ass for days, she pulled him in deeper and manhandled him in order to encourage his slamming his rigid prick into her stuffed pussy. She bit at him, she flailed her legs, she swore, she sweat, she urged him on, she felt taken and out of control.\n\n\"Ohhh FUCK BRENDAN! Don't you stop fucking me, don't you stop fucking me.\" Annie began a string of sexual taunts that lasted for minutes, \"Bring me that cum, fill up my cunt, fuck my cunt, you fucker.\" She lost track of time as the first of her orgasms crashed over her. She felt her pussy gripping Brendan as she came, but she also felt the Benwa balls placing intense pressure on her g-spot. There was no place left for anything to go except outward. That's what her orgasm was, an outward explosion of passion, within the stretched confines of her exploding cunt.\n\nBrendan could feel her pussy heat up at the point of her orgasm and raise the temperature of their combined loins. He was grunting and groaning as he fucked Annie hard and fast. With each pass into her sugar walls he could feel his cock rubbing against the Benwa balls. He loved the sensation, along with the feeling of complete tightness inside of Annie. He imagined that Matthew was there, that Mathew was also in her pussy, that those weren't Benwa balls inside of Annie, no, it was fantasy Matthew double penetrating her vagina with him. In his imagination, Brendan's cock was sliding against Matthew's inside of Annie's ravaged pussy. He played out the feeling of his balls slapping against Matthew's as they double-fucked sweet Annie.\n\nSince he had cum just minutes before, Brendan wasn't ready to blow another load just yet, so after Annie came off her second orgasm of the session, he pulled his cock out of her and rolled her over onto her stomach. Sliding his right arm under her belly, he lifted her mid-section up so that her flushed pussy was pointing upward at him. The string of the Benwa balls had disappeared into her cunt long ago and Brendan didn't even think about where it had gone as he lined his dick up to invade her already stuffed pussy. This time, he slowly entered her, taking note of how it felt as the Benwa balls repositioned themselves to his taking her doggy-style and the change in gravity associated with her being on her hands and knees. At first, the ball in front moved forward towards her opening and he could see the red color of it as his dick entered Annie at the same time the ball was pushing out. It served to spread her opening even further and Annie moaned in gratitude as the feeling of being stretched open jolted her senses and added to her excitement. Next as Brendan continued pushing in, the front ball reversed course and retracted, going back to its preferred position, tucked up and under her g-spot. Now, he felt his dick head bumping into the second Benwa ball which had centered Itself at the opening to her cervix. Brendan leaned into it and felt his cock-opening pressed flat against the unrelenting object buried in his wife.\n\nWith the new positions accounted for and wild erotic sensations to enjoy, Brendan picked up the pace and started sliding his cock in and out of Annie with determination, but control. Annie felt her breasts swaying as Brendan rocked her back and forth, she reached her left hand up and locked onto her rigid left nipple. She tried to pinch it as hard as she could, but it was completely hard already and there was simply no give to it. She lost herself in the feeling of a stuffed vagina, a radiating g-spot and rock hard nipples and felt a long orgasm building in her. Once again she started swearing and moaning, \"oh you fucker, let me feel that big cock, let me feel it all the way up me, fill up my cunt\". She now moved her right hand to her clit and began stroking it in a measured rhythm, matching Brendan's sure strokes.\n\nBrendan was feeling it, too. He could sense another orgasm nearing in his balls. His cock was over-sensetized and on fire from banging into the second Benwa ball for the past five minutes. This served to raise the temperature even higher in his testicles. Brendan began to talk and grunt out loud, as Annie had been doing, \"Oh baby, what if there were two cocks inside your pussy right now, FUCK. What if this were me and Matthew stuffing that pussy?\" Annie picked her head up as he said this and leaned back into him for even deeper penetration; she was liking the thought, \"What if he had his big dick buried in you and I stuffed you with mine at the same time, mmmmmm, what if my cock was rubbing up against his inside of you, do you think I'd cum?\" He was speeding up his thrusting as his orgasm sat on the edge of explosion, \"What if we both came inside of you at the same time and filled you're cunt with quarts of cum?\"\n\nAnnie was swearing along with Brendan now, but only saying words, no sentences, \"fuck, cocks, deeper, cocks, cum, CUM, cum in me, cum on me, fuck my pussy, FUCK ME\". Annie was cumming again and was starting to think it would never end. As she fell face forward into the couch cushion she heard Brendan roar behind her and felt his hot semen fill her pussy once again\n\n\"Yes Yes Yes, Im cumming, He's cumming\" Brendan let loose with a torrent of hot white spew. He fixed his eyes on her opening and continued to pump in and out of her as he came. He saw the sticky whiteness of his cum coating his cock as he pumped in and out of Annie. He saw his cum coat and drip from the edges of Annie's labia lips. He imagined it was Matthew's cum mixed with his. Finally, exhausted, he leaned back and let his cock slip from Annie's reddened snatch. As he did he saw the flash of the string from the Benwa balls appear from within her swollen pussy. He pushed his index finger into her in order to grasp it. Leaning his face down towards her engorged box he positioned his lips below her and slowly pulled the string out. At first, he met some resistance from inside her as the first ball came free. Once loose, it slid into his mouth and a flood of cum followed it, as the ball had prevented it from leaking out of Annie. He continued to lap up the combined juices of himself, Annie and Imaginary Matthew, as the second ball made a satisfying pop, shooting out of Annie and into his waiting mouth. He savored the tart taste of Annie's pussy and his cum and sucked everything he could off of the Benwa balls. Using the ring on the end of the string, he pulled the Benwa balls out through his pursed lips, ensuring that every drop of their combined juices were now drained into his mouth. He savored the taste, before moving up to kiss Annie.\n\nAnnie wanted his mouth, she needed it's contents and she greedily accepted it when, lips locked together, Brendan pushed their cum into her mouth with his tongue. They lingered in that ultimate French kiss for minutes before swallowing away the evidence of their combined cumfest.\n\nThey lay naked and motionless for another ten minutes, before, languidly, Annie purred \"We need Matthew's phone number.\"\n\nHalf asleep now, but keenly aware of exactly what she meant, Brendan replied, \"I've already got it.\"\n\n\u2014\u2014\n\nTo be continued"
    ],
    "authorname": "Hemingwood",
    "tags": [
        "cum eating",
        "anal",
        "benwa balls",
        "bi curious",
        "cum swapping",
        "mmf",
        "ass play",
        "oral",
        "rimming",
        "blowjob"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/annie-and-brendan-getting-closer"
}