{
    "title": "Anal Summer Ch. 07",
    "pages": [
        "This story is a work of fiction even though parts of it were inspired by real-life incidents. Any similarity to real people, living or dead, is coincidental. All the characters are 18 years of age or older. Do not read this story if it is illegal to read about explicit sex where you live.\n\nEdited by H.S.\n\n***** \n\nI followed my usual routine at the gym. During my workout, I couldn't shake off the encounter I'd just had with Kate. She and I met in the hallway of Madison's condo building, and she happened to be Madison's upstairs neighbor. Kate had made it known to me that she could hear Madison and me having sex, which churned up mixed feelings of embarrassment and erotic excitement in me. My new enjoyment of shame was a growing feeling of exhibitionism, and I was both mortified and turned on all at once. \n\nKate had told me intimate details about the dirty talk that Madison and I had engaged in, details that were true. And Kate had indeed heard everything, because Madison hadn't had the chance to tell her. With the millions of dollars spent turning that old industrial building into luxury condos, you'd think that soundproofing would be a given, I mean, how could any contractor overlook such a basic detail? Well, it seemed the newest, swankiest condos in the old neighborhood had a dirty little secret: Sound carried very well-too well!\n\nKate was beautiful and sexy, and she had an incredible body. She was already a desirable element in my proximity, and now she knew I was having sex with her friend and neighbor. She knew we watched porn together; she knew I liked to talk dirty and liked to be talked dirty to; she knew we engaged in fucking, sucking and masturbation. And most of all, she knew Madison took my cock up her ass regularly. I just hoped she didn't know how much I enjoyed Madison's finger up my ass when I came. \n\nPerhaps she was intrigued. Maybe she wanted to join us. Wow! What a thought that was! Imagine, two hot women at once! Kate could sit on my face while Madison rode my rigid prick, and then they could switch! Meanwhile, I was getting an erection, and the loose fitting gym shorts I was wearing wouldn't be much of a help in hiding it. I had to talk myself down and get rid of that erection before anyone saw it.\n\nThe gym was busy, and there was someone waiting to use my bench. Just do another set, and your hard-on will go away, I thought, so I did as my subconscious said. I'd been doing bench presses and was almost done, but doing ten more reps did the trick, and I was able to get my dick to go flaccid.\n\nThen I heard a familiar female voice say, \"I'll bet that was really hard.\" Breathing in, I looked up to see Joanne, a woman I knew, looking down at me. I was hoping she was referring to my bench pressing and not my manhood. \"Yeah, but I got the set done somehow,\" I answered, hoping my fear was just groundless paranoia.\n\nJoanne just stared. \"It was impressive,\" she finally said in her flirtatious way. I wasn't really sure what she was referring to and was afraid to pursue the conversation. It was awkward, first, because Joanne was a friend of my mother's, but mostly because she and I had been secretly fucking for a few months before I met Kerry. Of course, that was a little detail we both hid from my mother. Joanne and my mom worked together as waitresses at \"The Mediterranean,\" a famous restaurant in the old neighborhood. The place was an institution known and loved by tourists and natives alike.\n\nJoanne was a divorced mother of two and didn't do a very good job of hiding the fact that she was lonely and horny as hell. The talk in the old neighborhood was how Joanne had taken to sucking off her male co-workers for fun. I think in truth she had a few one night stands with some of the young, handsome waiters at The Mediterranean. I even heard she'd fucked two guys at once, but I wasn't sure if it was true or just something the rumor mill cranked out. I could easily picture her happily deep throating some guy's tube steak, still dressed in her black waitress uniform, however, and that sexualized her for me. I'd often wished I could be one of those men Joanne used sexually to fill the void in her life. \n\nWhile she was just okay looking as far as her face was concerned, her body more than made up for that. It was built for sex, tall with nice breasts, but my favorite part was her ass, as I'm sure you guessed by now. Seeing Joanne at the gym in skintight Spandex was always a guilty pleasure of mine. There was something dark and sexy about her bolstered by her playful, cock teasing ways. She liked to flirt with me when my mother wasn't around, and at the gym she would say things like, \"Oh, my, you are looking super hunky,\" or \"I wish I was your age,\" while she groped at my chest and arms. She was always touching or caressing my shoulders and neck, giving me long, lustful stares and winks. At first I thought she was just being nice, but it did cause me to think and have fantasies of a forbidden fling between the two of us.\n\nThen Joanne started telling me things like, \"I've been so lonely since the divorce that I can't get to sleep at night.\"\n\nI playfully suggested she get a teddy bear to cuddle up with, but Joanne, never missing a chance to turn the conversation a little bit risque, looked at me with a naughty smile and said, \"Well, I was thinking about getting a toy, but a teddy bear wasn't what I had in mind.\" When she spoke, she drew out her words slowly, animating her lips and tongue in a show of oral control. \n\nI let out a nervous chuckle. Her display had been intentional, to to tease me and make me hard. It worked, and she knew it. Any man in that position would immediately think of those lips and tongue expertly working over his dick. Well, I knew it was no secret that Joanne was very talented when it came to sucking penises, but I kept in mind that was the impression she wanted to give. \n\nAfter that incident and the talk of toys I ran home from the gym to masturbate to the thought of Joanne peeling off her Spandex for me. I would have licked her sweaty cunt and asshole clean, then I would plow her 'til we both came. That fantasy masturbation session produced one of the most amazing heart-stopping orgasms I had ever had and one of the largest wads of come I had ever shot. However I remember the weird, guilty feeling I had when I was done jerking off. I was now ashamed of myself and promised to never jerk off to the thought of Joanne ever again. \n\nIt became clear that going all the way and fucking her should not happen. I knew that even if I got the chance I should pass on it. My instincts told me if I felt guilt jerking off to the thought of her, I would feel even worse if I actually fucked her. After all, she was my mother's friend. That in itself would be strange, not to mention she was a single mother of two. At that point I had never fucked a pussy that had borne children. I wondered if it would feel the same. All of those things put into perspective and all the forethought about Joanne being forbidden fruit didn't stop my lower head from overruling me. Against my better judgment, I had a brief sexual affair with her on the sneak.\n\nThe fact that it was a secret made it all the more fun. I guess it worked for me erotically because, like anal sex, the affair was interdicted. Joanne and I would act as if it was just us flirting and jesting one another but we both secretly were itching to act on all the joke offers and comic innuendos.\n\nIt took a while to come to reality because I still lived at home, and if Joanne and I were together it would be easy for anyone to figure out. So we needed fortuitous circumstances to fall into place. We had teased one another to set up hookup points and even joked of getting a room out of town, but unforeseen obstacles would always jump into the path of our rendezvous, usually Joanne thinking better of it and playing it off as if it were all a flirtatious tomfoolery. \n\nIt seemed we were always just joking, and I wasn't really 100 percent sure if Joanne was serious, but the opportunity finally arose when Joanne was moving. She was a victim of the old neighborhood's change. Some rich new person had bought the building where she was renting. Joanne had to find a new apartment.\n\nWhen it came time to physically move her belongings, my mother, being her friend from work and not at all imagining the idea of anything steamy between Joanne and me, volunteered me. I helped carry mostly boxes of stuff since the furniture was already gone. Once everything had been placed in Joanne's new apartment, she suggested that we have a drink somewhere.\n\nBeing under 21 at the time limited things, of course. Joanne bought us a twelve pack of beer at the liquor store, and we drove in her car to a little place called \"no man's land\" by people in the old neighborhood. It was a deserted dead-end street that bordered an old, abandoned fishing pier on the far end of town, and if anybody kept driving straight they would land in the harbor. No man's land had two things going for it: It was secluded enough to drink a beer or smoke a joint and there was also the harbor view.\n\nWe sat and drank beer and looked at the reflection of the moon shimmering on the waves.\n\nLike most, after a beer or two I had to urinate, so I excused myself I found one of the many dark corners of no man's land to pee in. When I returned to the passenger's side of the front seat, Joanne asked, \"Hey, where did ya go?\"\n\n\"I thought I told you... to pee.\"\n\n\"I know, but you hid in a corner.\"\n\n\"Yeah?\"\n\n\"Well, I thought I was finally going to get a glimpse of your bald-headed warrior.\" She then burst into laughter.\n\n\"Sorry to disappoint you.\"\n\n\"Oh, well...\" she said with fake disappointment.\n\n'We do have more beer, chances are I'll have to go again,\" I teased through a devious smile.\n\n\"Ewww! Do you really think I want to watch you take a piss? Yuck! I was kidding.\"\n\n\"So was I.\"\n\n\"I know. Now, get back in. It's cold.\"\n\n\"Okay.\"\n\n\"My ex and I used to watch porn together, and one time he got this one movie where the performers took turns pissing on each other.\" She made a dissatisfied face and shook her head. \"I'm not judging anyone ... it's just not for me.\" I realized it was a detail that she wished she had kept secret. We talked openly about sex in the past, and she would tell me about her ex, and sometimes would tell me things about their sex life. But this time she was telling me something about her sex life in order to let me know that she wasn't serious about watching me pee just to get a peek at my manhood. She let this bone out of her closet and handed it to me, rather than have me misunderstand her and think she was into something that exotic.\n\nDid that mean she actually cared what I thought about her? Did Joanne seriously want to see me naked, or better yet, did she really want to fuck me?\n\n\"Okay, okay,\" I said, once seated in the passenger seat with the door closed. \"How often did you guys watch dirty movies?\" A true inquiry, I loved porn and wanted to see more of it, and never having been in a long-term relationship and wanting to know the secrets the average couple would keep. What was the norm and what was on the edge, but I also wanted to get sex onto her mind.\n\nI wanted our conversation to be of sexual nature. I enjoyed talking about sex with Joanne.\n\nwe had risque talks in the past and I had always enjoyed them. It was a way for me to get a cheap thrill. Those conversations laced with flirting and innuendo stirred me up. I would always play it cool and be try to appear nonchalant about it, but I really got off on it. Still, there was also the motive in it for me, thinking that if our steamy little chats could lead to Joanne getting as horny as I secretly did during those conversations. That maybe it would lead to something more.\n\nThe desired results were finally achieved, but not before my question took us on a detour down a sad path for her. \"Who? Watch dirty movies with who?... You mean my ex?\"\n\n\"Yeah ... is that something married couples do often?\"\n\n\"Yes, and we did it whenever he wanted to... I did whatever he wanted ...when we were in bed, our finances, about how to raise the girls, I did it all, everything he wanted, because I wanted him to be happy...because I loved him and... and still do.\"\n\nIt sounded like she was fighting back tears, both from the still open wound and from that melancholy feeling that alcohol sometimes brings.\n\nJoanne was getting buzzed from the beer and getting emotional about being divorced and having to move. She leaned into me, wanting some contact. I had hugged her before in support of her emotions, and I guess we had a weird touchy-feely thing going on, but we'd never crossed the line.\n\nI thought it was mostly platonic and acted as if it were, but secretly I think we both loved the feel of each others embrace.\n\nIt may have been her sadness, or she may have just wanted to feel good again that night.\n\nWhatever it was, when I hugged her, we held each other a little longer than usual. My cheek brushed hers. I hesitated. Could it be? I thought.\n\nThis is weird, I thought.\n\nThis is a friend of your mother's; she flirts to be nice; am I getting the wrong impression? I thought. I was frozen for a second. What if I kiss her and I'm wrong? Would she slap me and go tell my mother?\n\nBut then she would have to explain why she was down in no man's land drinking beer and snuggling with her son. Worst case, she would pull away and say no and keep the secret between us. However, the best case might mean I could finally discharge all the come that my testicles had brewed up from her tempting me. So, after all the flirting and touching , the sexually-tinged conversations and her all out cock-teasing, I figured I had earned a pass.\n\nIf I tried to kiss her, she would have to take her own actions into account.\n\nI mustered my courage, leaned over put my mouth to hers, and just like that we started kissing. Still, it was a bit strange. This was a friend and my mom's co-worker. I think she was 38 at the time, close to my mom's age. It felt surreal, and it was surprising. But I guess all the flirting and touching between us made me want her even if I wouldn't admit it to myself.\n\nShe began to nibble my neck as we kissed., and the hot breath and soft mouthing on my neck got the desired result. Joanne then licked and blew in my ear, and it sent me into overdrive and made whatever patience I had disappear. I aggressively ran my hand down to her crotch. I rubbed her vagina through her jeans, and I could feel the ready, swollen lips of her twat and the soft mound of her pubic hair through the fabric.\n\nI also thought perhaps I shouldn't waste time lest Joanne change her mind and not give in to my advances. \n\nI found out she'd caught her husband Ronnie eating out the nanny's pussy on top of the washing machine during the spin cycle. She threw him out. He never begged for forgiveness but just got a place with his \"Swedish nanny whore\" (as Joanne referred to her) and told mutual acquaintances that he and Joanne had separated. \n\nPartly because she was lonely and partly because she wanted some twisted form of revenge-but mostly because she liked to fuck-Joanne wielded her new sexual freedom like a bank robber wielded a gun: Often getting away with what she wanted. It didn't make her a bad person to me, just a loose woman who liked sex and had low inhibitions and even lower standards.\n\nI could see her getting it on with two guys at once. Maybe even three!\n\nHer friendship with my mother was the wall that had impeded this encounter. My mom tried to counsel her to slow down and wait for the right man, but Joanne wasn't having any of that. She wanted revenge and she wanted sex, but most of all she wanted to feel better and move on from her nasty break with her cheating husband.\n\nI moved to unbutton her pants, and she didn't stop me. But then the zipper of her fly got stuck.\n\n\"We should stop,\" she said breathlessly.\n\n\"Really? We've got each other going. We've come this far. Why do you wanna stop?\" I argued with my rock hard member threatening to bust my pants wide open.\n\n\"I know, but...\"\n\n\"But what? Are you afraid of my finger?\" I demanded, implying that heavy petting and fingering her snatch was as far as I would go. But deep down, I knew that if I did a good and thorough job of finger banging her, she would beg for my shlong. I didn't have any self confidence at this point. I didn't see myself as a ladies man or Don Juan; I just knew how incredibly horny and prick hungry she was. I thought of Joanne as a promiscuous slut. After all, she loved to fuck and suck and was almost always horny. \n\n\"This is a sign,\" said Joanne, sounding like someone full of self doubt and cold feet as she struggled with her zipper.\n\n\"No, it's not. Just flatten it out.\" I said, referring to her zipper.\n\n\"No, we should stop,\" she said, looking up to the roof of the car as if gazing right through it straight to the heavens. She was truly doubting herself and her judgment and almost giving in to the thoughts of how inappropriate all this was. \n\nI was starting to lose hope. Disappointment seeped in like cold water. But I pushed back, being already committed to the idea of it and my lust already sparked into an inferno that saturated my balls with piping hot baby batter. I still wanted something, to play with her pussy and maybe a hand job or a blow job. Anything. Something! Please!\n\nPressing the issue, I did my best to convince her: \"You want this. We both want this, please don't leave me hanging,\" I pleaded, not wanting to leave blue balled by a woman yet again. She let out a nervous sigh of resignation and with some effort undid her pants the rest of the way.\n\nI pounced on her like a lion, so worked up and nervous was I that it translated inadvertently into rough play. I slid my hand between her legs and jammed two fingers in her waiting cunt. I forced my tongue into her mouth and kissed her vigorously and hard. The speed and energy that I fingered her twat and rubbed her clit had her gasping for air. Looking back, a more experienced man would have realized that Joanne liked it rough. She was content to be brutally finger fucked because in her mind it somehow made her feel less guilty about fooling around with her friend's son.\n\nI pulled up her sweater and bra, and her right tit sprung free. I sucked on the nipple of her one exposed breast so hard she let out a small yelp as I continued to thrust and withdraw my fingers from her steaming snatch with high speed. I moved from suckling her breast up to her neck and softly whispered to her: \"I wish I could fuck you.\" The words spilled out of my mouth involuntarily, as if what I'd been thinking was broadcast without my permission. I was surprised to hear myself say it! I was afraid I might lose her if I suggested we move to the back seat, given the limited space in her car and my inexperience, so I resigned myself to the idea that maybe just heavy petting would be the extent of this encounter. Still, I guessed it was best for her to know my true desires, and, who knew, maybe we would find a way to go further.\n\n\"I really wish I could fuck you,\" I moaned again, like a tomcat in heat.\n\n\"I would love for you to fuck me,\" Joanne answered to my surprise. \"I want to slide my pussy up and down your body.\" \n\nWell! A full-body pussy massage sounded wonderful and original, the dirty talk heightening an already hot moment. She reached over with her left hand and rubbed my throbbing penis through my pants while pulling me closer to her with her right.\n\n\"I would love to have you inside me, deep in my pussy,\" she said longingly. \n\n\"I'd fuck you very hard,\" I managed, now awakened to my own carnally induced ramblings. Yet I began to feel inhibited, and I was ashamed of my previous dirty talk even though I wanted to express myself. ",
        "Joanne, on the other hand, was speaking freely. \"Yes, yes, you would fuck my pussy good and hard. I wanna fuck you and suck you all night. I've always wanted to fuck you, fuck me good and hard, take you in my mouth, suck on you and see what your come tastes like.\"\n\n\"I guess we have had the same ideas for a while,\" I admitted, thinking out loud.\n\n\"How long do you need to rest after you come before you can, you know, go again?\" Joanne asked.\n\n\"Not long.\"\n\n\"How many times can you fuck me in one night?\"\n\n\"A lot... I guess.\"\n\n\"Just as I thought and wished. You're right, I have been wanting you for a while now.\n\nHow long have you been wanting to fuck me?\"\n\n\"Always, but more so recently.\" I knew from our flirting that Joanne liked to talk about sex.\n\nNow, while my fingers stimulated her swollen clitoris and massaged the inner walls of her vagina, she was still talking, still asking questions, the torrid conversation deepening her pleasure.\n\n\"You're so wet, does talking about sex when I play with your pussy make it better for you?\"\n\nJoanne's eyes closed and her jaw slackened. She inhaled and then let out a soft breath.\n\nMomentarily overtaken by sensation, she didn't answer immediately but regained her faculties and answered, \"\"Mmmm yes, yes it does. Tell me what types of things you would do to me.\"\n\nher enthusiastic reply got me into the idea. The seeds of my love for dirty talk would be firmly sown, fertilized and watered by this experience and the smell of Joanne's steaming love gash.\n\n\"Well, I have a few questions for you, since you like talking and getting finger fucked.\"\n\n\"Mmmmm, what?\"\n\n\"You seem to be a very sexual, very horny woman. How do you, you know, get by?\"\n\n\"I'm lonely and free I have taken some men home from work.\"\n\n\"And fucked them?\"\n\n\"Yes, fucked and sucked them.\"\n\n\"I have to know, Joanne. Did you really fuck two guys at once?\"\n\n\"Does it make your pecker hard to think that I did?\"\n\n\"Yeah!\"\n\n\"Well, then, yes, I did fuck two guys at once.\"\n\n\"Really! How, I mean, how did you work it out?\" I was really inquiring now. This wasn't just fun, dirty flirty talk. I was intrigued and hoping that Joanne would elaborate a hot tale of being double penetrated. That would give me an indication if Joanne was anally inclined.\n\n\"I took one in my pussy and one in my mouth. Then they switched.\"\n\nShocked, I asked, \"Was it fun?\"\n\n\"Mmmmmm what do you think? Of course it was. Two hard cocks are better than one,\" she said in a regular tone as if I had asked her a question about the tax code. I was both turned on and disturbed by this, and I went back to ear blowing and neck nibbling. The tonguing and breathing heavy in her ear powered her to climax . Her eyes shut tight and her teeth clenched together in a grimace of out of control body reflexes as pleasure overtook her. She tensed and nearly convulsed with erotic joy. I could feel her cunt quiver, and the steamy wetness start to pour from her as she came.\n\nThe thing I almost laughed about at the time was she let out a high pitched \"Ooooooooooo\"\n\nthat to me sounded like something from a martial arts karate movie. The confined space of the car's interior was now stuffy and humid, the air heavy with the smell of her wet cunt; the windows, steamed translucent, gave an added feeling of isolation. After a few more seconds of me fingering her, Joanne reached down and gently grasped my wrist and retracted me from her joy pit. My fingers had pruned and wrinkled in her free flowing fountain of twat nectar.\n\n\"Did I make you come?\" I asked, really not knowing due to inexperience.\n\n\"Mmmmmmm, yes, you did. Now it's your turn.\"\n\nJoanne immediately reached over and massaged my fully swollen hog through my pants as if making sure I was erect. As soon as I unbuttoned my pants and started to unzip, my rigid member burst free like a battering ram through a door. I sat back on the passenger side of the car, stretched out in anticipation of what should be an expert hand job. One good hand deserves another, I thought. I had masturbated her to a full orgasm and was ready and willing for the same in return.\n\nA lot of my encounters with women early in my sex career were mostly heavy petting. Fingering and hand jobs were the norm for most in my age group. I had gone \"all the way\" and been sucked off only a handful of times. So where I had not gone past stimulating Joanne's twat with my fingers, I expected only to be jerked off. I thought that would be fair, a hand for hand.\n\nJoanne had other things in mind.\n\n\"So are you ready to have your cock sucked, kid?\" her question was blunt, open and unafraid.\n\nJoanne was wearing the naughty smile of a person indulging in a guilty pleasure. Being sexually aroused had loosened her tongue and whatever trepidations she had were gone. She was the type of woman who got worked up and let it all hang out if you were able to dampen her underwear. Joanne asked (if I was ready to have my cock sucked) already knowing the answer and relishing the shocked, joyful look on my face. She bent at the waist, leaned over, groped my ball sack softly with one hand and teased the head of my prick with the other, barely touching it. Her soft hands felt like they were made to do just this, that is, to caress and fondle hogs.\n\nAfter a few wonderful seconds of light caressing, Joanne drew her fingertip around the edge of the flared fire helmet. Then, with her index she touch the pee hole, pulled it away, slowly drawing a clear string of pre-come from it and smiled.\n\n\"I guess you're ready. You have more pre-come than some guys have come,\" she said, with amusement in her sultry, sexy voice. When Joanne got her hand around the base of my manhood, it only took a millisecond for me to be hit by a surprise, lighting-fast testicular explosion. I came right there in her hands before she even put her mouth on me. Big, hot milky loads shot straight up like missiles. I'm not sure that some didn't hit the roof of Joanne's car. I was speechless at the overpowering orgasm. I was breathless and mute with sensation, drowning in extreme pleasure. She'd tightened her grip and jerked me off good and hard, and now my river of pure white semen ceased shooting out to any distance but continued to ooze out in large, clumsy wads. \n\nBut my feelings of pleasure were mixed with embarrassment for cumming so soon like a virgin and disappointment for missing out on the chance to get in her mouth. I also felt sorry that I wasn't able to let it happen for her, too, because she seemed to really want to give me a blow job for her own enjoyment.\n\nAfter a couple of seconds, I managed to blurt out, \"Oh, I'm sorry! I'm so sorry I came so fast.\"\n\n\"It's okay, honey, just enjoy yourself. Enjoy that wonderful feeling, it's okay,\" Joanne comforted me, feeling my concern and appreciating my thoughtfulness. She went on comforting and jerking me off in what seemed like a ten minute orgasm. \"That's it, that's it, come for me,\" she reassured.\n\n\"Uhnnn\" was my reply, once again losing my ability to speak.\n\n\"Shhhh. It's okay, honey, come, that's it, come. Come nice and hard for me,\" Joanne comforted me, now caressing my leg softly with her other hand, the the one that had cupped my ball bag so tenderly. The mom in her was showing through her tenderness and care. She took my youth and novice standing into account and took pity on me, stroking my ego as she stroked my penis.\n\nWith her expert skills, her hand stroked every last dollop of cream out of me. Once my erection started to deflate, she squeezed and manipulated even more semen out, purging my flaccid member of the last straggling drops. Joanne did this by gently squeezing my hog from the base up like a person would squeeze toothpaste out of a tube. I melted back in my seat in a joy haze. A large amount of my jism now slothfully cascaded down her jerking hand like lava. She carefully let go of my shrinking penis, and licked some of my joy juice off of her hand.\n\n\"You've been drinking beer,\" she said in a nonsexual tone, but sexual in theme.\n\n\"Huh?\"\n\n\"Your spunk. It tastes like you've been drinking beer.\"\n\n\"Well, yes, I have been,\" I responded, still a little dazed.\n\n\"You see, whatever a guy is drinking changes the flavor his come.\"\n\n\"Yeah, right,\" I answered, figuring that Joanne was just kidding around again to lighten the mood and break the post carnality ice.\n\n\"No, really. Beer gives it a bitter taste, but if you drink pineapple or orange juice it tastes really good.\"\n\n\"I'm sorry I came so fast.\"\n\n\"Oh, honey, don't. It's okay, It was good for you, wasn't it?\"\n\n\"Yes, but...\"\n\n\"But nothing. You came, and I came, and it was good, so don't worry.\"\n\n\"Okay.\" I felt nice being cared about, so I took her cue and stopped feeling sorry.\n\n\"Besides, you said that you could go again and again, right?\"\n\n\"Yeah.\"\n\n\"So. let's relax. and maybe in a little while we can try it again.\"\n\nThose words alone started the body's process of refilling my testes with more semen.\n\nJoanne cleaned herself up with some napkins and baby wipes she kept in the glove box.\n\nI enjoyed watching her remove my hot creamy sperm from her hand with the napkins. Then she used the baby wipes to cleanse the petals of her sex flower. The lips of her cunt were still slack from me masturbating her, and they hung open sloppily.\n\nShe finished and handed the remainder of the napkins and the package of wipe, simply saying, \"Here.\" I realized that I had not moved . I was sprawled out with my pants around my ankles. My sleepy cock lay across my lower abdomen limply in a puddle of joy juice. Taking her cue I began to remove the sticky hot evidence of our sinfully sexual encounter. Once finished I rolled down the window and littered the gutter of no man's land with the sticky spew-covered tissues.\n\nI pulled up my pants. We sat and quietly cuddled for a while.\n\nWe talked about how we were both crazy for doing what we had just done but relished having done it. Talked of her new place and how it was out of the way and easier for us to hang out privately. We laughed at ourselves again; then we just sat there enjoying a small silence.\n\nAfter a while Joanne brought our situation up again as if she couldn't get free of it. \"All those times we flirted and had our talks made me dream about this happening,\" I said, thinking that was a good, honest conversation starter.\n\n\"Yeah, I guess I knew what I was doing teasing you, but I never thought I'd allow myself to let this happen.\" Joanne's retort was equally as honest. Right there I learned one of my first lessons of a sexual partnership: A certain truthfulness awakens between the two parties. \n\nI liked the new connection I had with my friend and thought that a bit more honesty would help me let go of some guilt, so I ventured further with my confessions. \"You know, I have,,, ummm...\" The words stuck in my throat like a peanut butter sandwich.\n\n\"You have what?\" Joanne pressed, knowing that a touch of shame had come over me.\n\n\"You know that time when you said you couldn't sleep, and I said to get a teddy bear?\"\n\n\"Not really, why, tell me, what?\"\n\n\"Well, you said that a teddy bear was not the toy you had in mind.\"\n\nJoanne giggled and said, \"Yep, I don't really remember, but that sounds like something I would say.\"\n\n\"You did say it.\"\n\n\"Yeah, so?\"\n\n\"Well, I...\"\n\n\"Well, you what?\"\n\n\"I...\"\n\n\"Just tell me. Did you go home and toss off after thinking about me and my toys?\" Joanne asked flatly, unfazed by my confession. My mind raced! How did she know, I thought. Swallowing hard, I nodded yes.\n\n\"Its okay; its flattering. All guys play with themselves. It's nothing to be ashamed of.\" She pulled me close and hugged me. It felt warm and wonderful, the closeness. Her instinct was to mother me, and that's what she was doing. I needed that, needed to be mothered, to be held, to be told it was okay. a gentle hand to guide me.\n\nFor goodness sake, she was old enough to be my mother! I was a babe in her arms. It felt wonderful and yet weird at the same time. A small panic breezed by as I worried that it might mean I had a Oedipus complex. Pulling myself together, I brushed it off with the thought that it's okay to fuck a mother figure, as long as it wasn't your mother.\n\nI got quiet and lost in thought, feeling a little tired. The brief silence was broken when Joanne asked, \"A penny for your thoughts?\"\n\n\"Oh, nothing, just don't know if I feel better or worse about getting that secret off my chest.\"\n\n\"You worry way too much.\"\n\n\"Yeah, perhaps you could distract me?\" I said as I gently grabbed her hand and placed it on my groin.\n\n\"Ready to go again already?\" Joanne said with a pleased, wide-eyed look of happiness.\n\n\"Aha!\"\n\n\"God, I love young guys!\"\n\nI undid my pants, shamelessly exposing my hardening member. Joanne knelt sideways in her driver's seat and was ready to take me orally. She delayed half a second to swipe her hair from her face gave me a quick, \"Sorry, my hair.\" Without another word, she leaned in and took every inch of my rock hard cock in to her mouth and down her throat. ot expecting it, I marveled at her skill. How deep and wonderful her mouth and throat were, I thought, as I felt the sensations of a blow job; the lips, the tactile feel of her taste bud tickling the ultra sensitive skin of my penis. All that hot wetness with the depth of a pussy. The few blow jobs I had gotten were sloppy and toothy, and the inexperienced girls who did them never went deep enough to hit the sweet spot midway down my penis. I thought of blow jobs as overrated, 'til this point. Joanne's mouth was different and it forever changed my mind about blow jobs, and her expert technique had me instantly ready to come, her full, moist lips wrapped around my throbbing shlong.\n\n\"Oh, my God! Stop! I'm gonna come again already!\" I yelled, shedding my inhibitions involuntarily. Joanne slowly took my cock out of her mouth looked up at me and said, \"You already came once, you won't come that easily the second time around.\"\n\n\"No! I'm gonna come again, fast!\"\n\n\"No, you won't. I won't allow you to come 'til I'm ready to taste you.\"\n\n\"No no no. I can't hold back for long. It feels too good. I'm gonna cum fast.\"\n\nJoanne regarded me with a flat patent stare , she paused took a firm grip of my prick, then assured me, \"You're not gonna come yet; trust me.\"\n\n\"Yes I am!! I don't think you realize just how hot I am right now.\"\n\n\"Larry, did you know that I love to suck cock?\n\n\"I'm... yeah I guess... you may have mentioned it, I'm sure you do.\n\n\"Do you know why I love to suck cock so much?\n\n\"Ah,,, no.\"\n\n\"I have control of a man when I have his dick down my throat, I'm the boss. I call the shots.\n\nHaving that control gives me pleasure and makes my pussy wet. I play with my clit when I've got a nice mouth full of meat ... I love it. But the thing I love most is when the men beg me to let them cum. I'm so good at blow jobs I can make a man cum instantly, or I can drag it out for hours. Whatever I feel like, whenever I feel like...\"\n\n\"I think instantly is what's going to happen here,\" I mumbled through my pleasure.\n\n\"Trust me. I have given a lot of blow jobs in my time. I know how to work a dick. I can tell when you're getting close. I know when to give a little and take a little. I know just when to slow down and speed up. I know when to tease and when to suck, when to nibble and lick, when to tickle the cock head and little hole with the tip of my tongue. You just relax, enjoy, and you will see.\"\n\n\"Really? But I feel as if I could cum right...\"\n\n\" I'm good for football games,\" She cut me off.\n\n\"What?\"\n\n\"You know, Larry. Football. Big, sweaty guys with helmets and shoulder pads?\"\n\n\"Yeah, of course. I played in high school.\"\n\n\"Yes, I know. You remind me all the time. Well, anyway, when I was dating my ex-husband I gave him a blow job for an entire football game.\"\n\n\"Really?\"\n\n\"Yup, he watched and I blew him. Kept him on the edge the whole game, plus overtime.\"\n\nI was stunned to silence, not 100% sure if it was true or just an exaggeration.\n\nJoanne continued: \" I sucked him 'til the home team kicked the winning field goal. Think about that for a second. What better way to heighten the thrill of victory then to come the same second your team wins? I heard the announcer say, 'Here's the snap and the hold.' That was my cue to make him come. A nice little surprise for him.\"\n\n\"I'll bet... But, you see, just hearing that story makes me want to come,\" I said, both turned on and amazed.\n\n\"He proposed to me a week later.\" She broke into laughter at the end of her sentence. \" I've waited a long time to get you to put your cock in my mouth and I want to suck it 'til I get my fill , so I'm not going to allow you to come 'til I've had enough of your cock. Now, just sit back and relax. I'm gonna suck your cock every which way there is... and more.\" And with that she resumed expertly sucking my dick like I had never had before, slow, steady deep draughts of my entire shaft. When she would get a sense I was nearing orgasm, she would slow it down, even stop, with the full length of me down her throat. Joanne would alternate between swallowing me whole to teasing me with her tongue, then licking my ball sack and sucking the balls gently.\n\nI was seated in the passenger's seat. Joanne knelt in the driver's seat, bent over as if to receive doggie style sex from behind, her head down in my crotch. Looking down at the back of her head bobbing rhythmically was a sight. Seeing the rest of her body made me want to touch it while she devoured me. I caressed her lower back, working my way toward her sexy ass. Joanne's pants were still unfastened and down around her knees, so my hand slipped past her waistline. \n\nMy hand cupped the round firmness of her buttocks. I groped and squeezed the soft, smooth skin and then my hand all around from cheek to cheek and slowly caressed and brushed the outer edge of her ass crack. Loving ass the way I do, I had to touch and grope at Joanne's pretty posterior. Joanne's ass was her best feature. It's what got my attention when I first met her.\n\nMy anal fetish was guiding my hand on a tour of Joanne's finest asset, her firm, perky ass.\n\nHer buttocks were solid and firm both from her workout habit and running the floors at The Mediterranean. I spread her ass crack apart. The cleft of her ass was slathered in her vaginal secretions both from when I was finger fucking her previously, and from now as her cunt continued to flow pussy juice. The deluge of sex nectar was due to her genuine excitement of sucking me and controlling me. Joanne did in fact love to give head.\n\nI looked down the length of her sexy body with all of its wonderful curves and lines. Her perky,. rounded ass capped a sexy and beautiful picture. I watched her head bob up and down in my lap. it looked and felt heavenly. It took all I had to reach her pussy as she sucked me, amazed the Joanne could take every inch of my hard cock down her throat. While she continued to suck me, I again fingered her pussy, and I could feel her wetness increase as she became excited by my fingers stimulating her yet again.\n\nJoanne never lost composure no matter how much she was enjoying her pussy and clit being masturbated; she never lost a single style point on her oral technique. That impressive credential was a turn-on. I followed the trench of her moist snapper lips up past her taint, up, up, up 'tll I felt my fingers brush past the ring of her asshole, thinking to myself, well, let's try it. I knew I might be pushing my luck, but I was going for it all. Being sexually brazen had got me this far, why not keep pushing further? \n\nWho knows, I thought, Joanne was a loose, crazy kind of girl, so maybe one of those things she did for her husband was giving up her backdoor to him, and if I don't try I'll never get to my goal of putting my cock in a woman's asshole. Pulling my hand to my face, I could smell her cunt on my hand, it was slick with her natural lubricant. I drew my hand up to my face, took a deep breath, and I spit on my finger tip to help moisten her musky back passage.",
        "Reaching down, I once again used the palm of my hand to grip her buttocks and pry open her crack. Then, by manipulating my saliva and pussy coated finger, I found my target. \n\nBy gently rubbing the saliva around the soft, expanding flesh of her butthole. Joanne's lack of a reaction gave me the guts to push further.\n\nPerhaps she was just okay with an outer anal massage and not up for penetration. I decided that, given Joanne viewed giving me oral pleasure as a mutual experience, the worst thing that could happen was that she would ask me to leave her anus out of it and just go back to blowing me.\n\nPushing my finger tip into Joanne's rectum was pleasantly uneventful. My finger was in her anus, and she went right on sucking me off. She never protested or missed a suck stroke, even with a fingertip in her ass. The new sensation on my finger felt good.. I thought if I paid close attention to the feelings experienced on my finger, I could get a better picture of what anal sex felt like. The smoother, tighter rectal canal felt almost like a pussy but only hotter and tighter. I tried to imagine how that would feel to cock. \n\nMy index finger tip was just starting to slip into Joanne's anal pucker. Now in complete awe of her skill as a cock sucker, I marveled that she never stopped blowing me. As my finger penetrated her deeper and deeper, she let out a low moan of pleasant surprise, muffled by my meat in her mouth. She Took a finger in the ass as if it were expected and never took my manhood from her mouth to complain. She just continued to blow me.\n\nAfter a few seconds, I felt my finger sink deeper as outer the rectal muscles slackened slightly. At that time I didn't know the inner workings of the sphincter yet, so I was working on instinct, feeling that shoving my finger in forcefully might hurt her and end the fun. That instinct served me well as my assumptions were right. Looking back at that now, I guess I was born to make love to female rear ends. Within a minute my index finger was in as far and deep as could be.\n\nJoanne had changed the pace of her oral stroking to super slow motion, coming up to the crown of my penis, then almost off completely, then going downward to take the entire length down her throat all the way , I marveled at how she was not gagging or choking on my hog.\n\nWhen I slid my middle finger in to the pink fruit that was her steaming sex she began to climax again. Having fingers in her asshole and her pussy at the same time sent her into ecstasy.\n\nJoanne took my cock out of her mouth and kissed it as if to say thank you; then pursed her lips and ran them up the underside of my prick. This sensation was amazing. It's the most sensitive area on a cock, and Joanne knew it. Her soft, wet lips pursed and kissed and glided free. It felt so wonderful, and I didn't want it to end.\n\nA sexy thought crossed my mind: I realized that I was triple penetrating her. That realization made me almost blow my load in her mouth right there. She knew it and again engulfed my entire beef pole down her throat as she sucked hard and fast.\n\n\"Do you want to taste my cum?\" I barked, half out of courtesy, half out of the horny kinkiness I would exhibit when near climax.\n\n\"Mmmm!\" was the only sound she made, and it sounded like approval. I was losing my mind and my inhibitions as I got close to coming.\n\n\"Oh, yeah, that's it. Suck me, ssssuck my cock!\"\n\n\"Mmmm!\" she vocalized, like a person would if they were told something delicious was being served for dinner.\n\n\"You want to taste my cum?\"\n\n\"Mmmm!\" \n\nThat wonderful, familiar feeling began to approach, lit on fire by the sensations of being sucked off by a pro while feeling the hot crush of her asshole on my finger. The surge of heart-stopping pleasure ran through my body my, full testicles tightened up and the sensation and my extremities seized. I was coming, and hard. I started pumping my finger in and out of her asshole like a piston while I fired multiple salvos of come rockets into Joanne's willing mouth. She swallowed in time to my pulsations, sucking down every trace of hot juice. \n\nReceiving fellatio from a woman who was good at it was all the difference in the world, and it more than lived up to the hype. She sucked down hard and cleaned the pipe, then licked and sucked off any remaining come from my cock and balls. Joanne sucked 'tll it became too sensitive, and I had to squirm and wiggle my hips to get her to stop. She removed my now laccid penis from her mouth gently and rested her head in my lap. This put blow jobs in a whole new light for me. They are not overrated; they're wonderful, I thought.\n\nAfter a moment, she raised her head turned to me and said, \"You can take your finger out of my ass now, Larry,\" in a tone that was something less than happy, even a little angry. I was so stimulated and relaxed, I forgot myself and hadn't pulled my finger free from her rectum.\n\n\"Are you okay? Are you mad?\" Thinking that I hurt or angered her I worriedly asked. I was also worried that even though she never gave me a sign the digital penetration of her anus was over the line,\n\nshe would be upset and I would be embarrassed . And to make matters worse, my secret fetish for anal was now known by someone other than me.\n\n\" Joanne, what's wrong?\"\n\n\"What do you mean, what's wrong?\n\n\"You just seem angry and detached.\"\n\n\"I'm fine.\" Her answer was short and curt.\n\n\"You don't seem fine. Are you mad that...\"\n\nshe cut me off: \"That you stuck your finger up my ass,\" her words fast and perturbed.\n\n\"Well , um ... err ..yes, are you?\"\n\n\"I said I was fine.\"\n\n\"Well, you don't sound fine.\"\n\n\"Well, it's all sinking in now.\"\n\nIt was then that I saw tears in Joanne's eyes. \"Aww, Joanne, honey, what's wrong? What's sinking in?\"\n\nI asked in the most sympathetic voice I could muster.\n\n\"I just sucked my best friend's son's cock While his finger was up my ass. In a car. On a deserted street. What kind of desperate slut does that?\"\n\nI was dumbstruck. I really didn't know what to do or say.\n\n\"I had to leave my home and find another, and my fucking husband left me for the fucking nanny! Any more fucking questions?\" She broke down further, not able to hold back the flood of tears she was so desperately fighting. I put my arm around her and tried to comfort her. After a few seconds of crying she lamented. \"And now, this!! I'm drowning in sadness and now we can add guilt to the mix.\"\n\nI began to realize that Joanne was trying to drown her sadness in lust to feel better, and it worked, that is, until the sex was over. I tried to hug her, but she shook off my embrace.\n\n\"Then you knew I was weak and venerable, you knew this would happen.\"\n\n\"Look, I thought...\"\n\n\"You thought you'd get a blow job, and you were right, but then you treat me like some, something, like a whore and shove your finger up my asshole without asking if I was okay with that.\"\n\n\"Joanne, I'm sorry you never seemed to indicate that you...\"\n\n\"That what I might need a little human contact and not just be used like an object.\"\n\n\"What?\"\n\n\"I took a risk with you tonight. I risked your mother's friendship, and I needed some tenderness from you, Larry.\"\n\n\"Sorry,\" I offered I still wasn't sure what I had done.\n\n\"But instead of just staying basic and with what I was willing to do you degrade me and treat me like a cheap whore.\"\n\n\"We're only talking about a finger here.\"\n\n\"Yeah, only a finger.\" she mocked. \"You are clearly just obsessed with ass,\" she yelled in a short accusatory tone.\n\n\"What?\" I felt faint, embarrassed, ashamed, guilty and in fear that my fetish secret was so obvious.\n\n\"You stare at my ass all the time! You stare at everyone's ass, and we have talked about sex many times and I can tell by the things you say and hint at. you point out women and say, 'wow, she's got a terrific ass.' Just tonight when I told you that I had sex with two men at once, your question was 'How did you work that out?' (Joanne said this in a mocking husky male voice)\n\n\"You were dying to hear me say that I had one up my ass, weren't you? All that leads me to believe that you are way into ass.\"\n\n\"No I'm not. Don't' get angry, you're overreacting because you're worried about my mother finding out.\"\n\n\"Yeah, that too.\"\n\n\"Look, I'm just as in trouble as you are if she finds out, so your secret's safe with me.\" We just sat there in silence for a minute of two. Feeling the need to explain myself, I continued: \"You had come through your pussy already, and I though that something different might be fun, so I tried playing with your ass.\"\n\nAt this, Joanne exhaled through her nose in a sarcastic snort of disbelief.\n\n\"You never stopped me or said anything. You just let it happen, Had you said no I would have stopped,. I thought you were enjoying it.\"\n\nJoanne's expression softened and she seemed to be okay with my explanation. I continued: \"I value you as a person and friend. I would never degrade you.\" At this, she made eye contact with me as if she was listening and being convinced. \"I want to pleasure you and do whatever to make you happy, too. I would eat your pussy or fuck you, you say you didn't like my finger up your ass, well, I would have eaten out your ass if that's what you wanted. That or whatever, because I do care for you, Joanne. You're are not an object to me. You're my friend.\"\n\nJoanne gave me a long deep kiss. We kissed like lovers, but it still had a hint of weirdness to it. We hugged a long embrace; an embrace of support and understanding.\n\nAfter a short time of quiet Joanne said, \"I'm sorry I overreacted. I was lashing out, and you just happened to be here. I took it out on you, and that was wrong.\"\n\n\"Really, Joanne, its okay.\"\n\n\"I have another confession to make.\"\n\n\"Okay, I'm here for you. We're friends, and you just need to unload and...\"\n\n\"Shut up, Larry.\" Joanne cut me off again. \"You have to learn when a girl just wants you to listen. I really didn't mind you playing with my asshole . It felt really good, good and dirty. I was aroused by how dirty and slutty I was being. But then after you made me climax the second time, I felt that 'down' feeling you get after you finish, and then I felt guilty and regretted it. You're my friend's son. How terrible is that? And, and, when you're worked up and horny you throw caution to the wind. But after you come and that tension is relieved, you feel silly and stupid or ashamed for being so nasty and dirty. Then I was frustrated and mad at myself and I looked for someone to blame... sorry it was you.\"\n\n\"Well, do you feel better now?\"\n\n\"Yes. Just embarrassed for my behavior before, during and after.\"\n\n\"Stop feeling bad. Stop beating on yourself. And fuck Ronnie! He's a real jackoff, and he doesn't deserve you anyway.\"\n\nThat last part about her ex husband Ronnie especially made Joanne smile. After that night, we hooked up again when Joanne's girls went to Ronnie's parent's house for the weekend. We got very oral and had lots of sex, but I didn't dare go near her bunghole, because I wanted to dispel her belief that I was anally obsessed. (Even if it was true.) Eventually, Joanne called a halt to our limited stint as fuck buddies for fear of my mother finding out. So I didn't get the chance to fulfill my dream of anal sex with her.\n\nNevertheless, she would flirt with me, tease me and even get horny and desperate enough to call me when she knew the coast was clear. All of this was the reason for all the awkwardness of my present dilemma. This whole story made my public gym erection that much more difficult to lose right here right now in the present. Joanne-my old fuck buddy who's still my mother's friend- was blatantly looking at my groin area, drawing out my tension and embarrassment.\n\n\"Your muscle gets very big, err, umm, muscles have gotten very big, I mean,\" Joanne said with an exaggerated self-correction and a roll of the eyes. Then she stared at me again with that playful smile.\n\nNow I was convinced she had seen the bulge in my pants and was in full enjoyment of just how much delight she was getting out of it.\n\nI felt like a worm on a hook.\n\nShe continued her tedious pause with a smile and facial expression that conveyed a message without a word, as if, by E.S.P., she told me, \"Yes, I've had that cock, and I can see that it's hard. I bet you would love to fuck me with it again.\"\n\nI thought my best play was to just change the subject and ignore the giant, erect elephant in the room.\n\n\"Oh, hi, Joanne, You look terrific! How are the kids?\" I spat out the words as fast as an AK47 fires bullets, wishing I was somewhere else.\n\n\"Why, thank you, Larry. The kids are great, and they're with their dad this week.\"\n\nI wondered if that was an invitation to go over her place, or if she just enjoyed the flirt-and-tease.\n\nRelishing the thought of giving me back the erection I'd fought so hard to get rid of, and thinking it best to cut this short and get on with my day, I said, \"I'd love to talk, but I gotta be at The Bistro soon.\"\n\n\"Yes, your mother told me you are the executive chef there now... congratulations!\"\n\n\"Thank you, Joanne, I'm really thrilled about it.\"\n\n\"Well, if you ever want to work out that muscle, um, I mean muscles, you know where to find me.\"\n\nBOING!! My prick popped back to its rigid form. I caught her not-so-subtle remark and the words coupled with the memory of the hot, secret nights in Joanne's bed. My manhood responded without my permission.\n\nOnce in a great while, Joanne would call me when that extra glass of wine hit her and she was lonely.\n\nThere was times when the planets would align and she would be off work and her kids would be at her ex-husband's for the week. This was rare, but on those occasions I knew she wanted another hot, sweaty romp with me, but she didn't act on it, guilt taking over her lust. She would call me over only to back out and leave me blue-balled.\n\n\"Well, Joanne, if I don't shower and head over there, I won't be the executive for very long. It was great to see you.\"\n\n. \n\nI showered, changed and headed for The Bistro. I was relieved to be off of Joanne's hook.\n\nI arrived to find Gemma at a table with two guys in suits whom I didn't recognize and a third man I knew to be a city councilman, and Margot at her uptight, mousy best. One of the unknowns was barrel chested man of about sixty with thick, white hair, square-framed glasses and a bushy handlebar mustache.\n\nI later learned his name was Hal Maddox. Maddox was a fast talker with a booming voice. He was all business and seemed to command the room, a powerful man in real-estate law and a senior member on the board of the yacht club.\n\nThe man next to him was a ferret-faced investment banker named Tim Yardley. Yardley was Maddox's lapdog and bobble-head doll. The city councilman was named Ken Maggio and was from the old neighborhood . He had shady dealings with all these \"new people,\" but he swore they were compromises to keep the old neighborhood alive. I didn't know Ken well at all, but I knew of him. He was a classmate of my uncle's but had no idea who I was, and I was okay with that.\n\nMargot never took her eyes off me and actually emitted a smile of recognition. Gemma greeted me with a smile and introduced me to all as \"the star of the show.\" I met all formally, and we discussed the feasibility of some menu items, along with costs and logistics. Gemma also set up a impromptu tasting for all to attend later on that evening. All of them accepted and were happy that it meant that \"Madison could attend.\"\n\n\"Yes, her input is of the utmost importance,\" piped up the uptight little mouse Margot.\n\n\"Agreed,\" barked Hal Maddox in his stern way, looking and sounding like a walrus that had somehow gotten an Ivy League education.\n\nI fought back an internal wave of anger. Again, I was the last to find out, and all this planning was going on without me. Madison never mentioned it to me, yet this all seemed so prearranged.\n\nI shot a look at Gemma. She returned it with a look that said, \"I'm sorry, be patient, I'll explain.\"\n\nI swallowed back my resentments as Gemma and the board of stuffed shirts agreed to have a sample tasting tonight at 7:30.\n\nBefore I knew it, we were in full swing. Diving into my work always made everything feel better.\n\nMy mind occupied, I forgot just how mad I was at everyone for keeping me in the dark. Even if it was an oversight, I was still a bit miffed.\n\nBy the time Gemma told me to put together the tasting menu I had forgotten every thing and concentrated on wowing the clients with my chef skills. The hours flew by, the way they always seem to do in our business, and before you knew it, it was almost 7:00 p.m. I saw Madison walk in and look directly at me. I hid behind my work because I was still too angry with the secretiveness. I was too busy behind the line to see everyone sit down, but Gemma wanted me to leave the kitchen and serve the tasting samples personally and field whatever questions the clients might have. Madison, for her part, was warm and friendly but stopped just short of tipping off our relationship, or whatever it was, to the others.\n\nI had done a good job, and we closed a deal between The Bistro and yacht club. I guess we owed it to Madison for making the connection, but my cooking and Gemma's charm ultimately won us the job.\n\nWe were going to be granted access to the yacht club's kitchen, and they would buy all provisions. We would beat any price offered by anyone else provided that The Bistro got plenty of free advertising and would be listed as one of the event's sponsors.\n\nThe men left, leaving behind Madison and Margot, who were now in to their second bottle of wine.\n\nGemma was also sitting with them, laughing and throwing back wine like a sailor. I went back to the kitchen. Two of the new chefs, Bobby and Alfie, were there and were doing a fine job. As I checked the clock, it was already 10:00, and we were shutting down dinner service. I gave Bobby and Alfie final instructions about closing down and clean up and then retreated to the basement to shower.\n\nWhen I arrived back upstairs Madison and Margot were the only non staff there. With Gemma, of course, leading the band and pouring the wine, laughing and giggling like school girls as I approached the table. They sensed that I was there and fell silent. Then Gemma broke the ice with, \"Well, here he is!!\" Gemma smiled at me with genuine appreciation. She was a little buzzed but also overjoyed that we had landed the catering job. She stood up, motioned me closer, and surprised me with a hug. So surprised was I that I never got my arms up to hug her back.\n\nThe hug was rough and tight. I felt Gemma's ample tits squash up against my chest, my unsuspecting hand brushing her firm, athletic hip. She was so close I could smell the wine on her breath. Gemma released me and gave me another long look. \"You did it, kid!\" she announced not just to me, but to Madison and Margot as well. The two women just looked on. Margot had a smile of inebriation while Madison gave me the sexy stare. I could tell that this success made Madison a little more attracted to me. I was pleased with the happy mood everyone seemed to be in, almost forgetting how mad I was.\n\n\"Bravo, Bravo!\" said Margot. I realized this was the first time I had heard a word from the uptight, mousy, mystery woman.\n\n\"You have impressed me. That Hal Maddox can be such a hard man to please,\" Madison said.\n\n\"And to think I did it on such short notice,\" I said, my motives apparent to all, or so I thought.\n\n\"Well, sit and let's have a toast to you, our man of the hour!\" Margot announced and motioned for me to sit. This was more warmth than I had ever expected to come from this mousy prude of a woman.\n\n\"Of course! How could I not have thought of that?\" Gemma apologized, popping up to fetch me a wine glass from the rack that hung above the wait station a few tables away.",
        "I was seated between Margot and Madison. \"You know, you did such a fine job in selling Hal on your food, he may even invite you to his highly exclusive after party. He hosts it every year,\" said Margot, finishing with a smile.\n\n\"Oh, I have heard about that. I'd love to go,\" Madison interrupted. I found it funny because it was so out of character, both in her excitement and loss of her cool demeanor.\n\n\"Madison, I thought you had attended before?\" Margot asked.\n\n\"No, unfortunately,\" Madison admitted.\n\n\"What did you hear about it?\" Margot asked Madison, as if concerned. In spite of their friendship, I could sense a tenseness in Margot. Margot asked again, staring a drunken stare that gripped its target and promised not to let go till she got her answer. \n\n\"Only that it was by invite only, and you had to be in the 'in' crowd,\" Madison answered. \"Will you make me your date if you get invited, Lawrence?\" A bit of role reversal was in play here, Madison needed me for something other than a granite-hard cock. For the first time, I had something she wished to have.\n\n\"Well, I haven't been invited yet,\" I said through a grin.\n\n\"Oh, you'll be invited ... I'll see to it,\" Margot piped up, then took a sip of wine and pursed her lips.\n\nMargot was a petite if not bony woman, but her mousy features had a cuteness. The wine had done its job and loosened her up to a point where she came across as a pleasant yet shy person. The poor thing, it was clear that she only got comfortable being herself after consuming a bottle of wine. Her glassy, sloe-eyed stares and inebriated motions she made me wonder if she was flirting or only just plain shitfaced. \"I'll see to it that all three of you are invited.\" Margot said this to include Gemma.\n\nGemma was seated directly across the table from me, and her pretty smile was all ablaze with her excitement.\n\nMargot continued: \"I haven't been to the Maddox bash in a few years.. you know since my Lance passed...\" Margot's blue eyes took on a sad, somber look. She paused, wiped her sharp nose and continued talking. \"This year is going to be big, and it's time I get back in to the scene.\"\n\n\"What scene?\" I asked absently.\n\n\"You know, time has passed; I'm a little lonely ...It's time to socialize again.\" Margot hesitated just a millisecond when she said this. It led me to think perhaps she was not telling me the entire truth.\n\n\"Yes, I'm glad to hear that. You owe it to yourself,\" Madison said supportively.\n\n\"Three new, beautiful young people are just the shot in the arm old Hal's party needs,\" Margot said, motioning with her hand. When she was done gesturing she dropped her hand down on to my leg.\n\nMy upper thigh to be exact. Now, Madison was right next to me on my left while her friend Margot sat on my right and had her hand on my lap softly caressing me.\n\nI was shocked both by this stark change in demeanor and the fact that she would touch a part of me that was just adjacent to my dick and balls. Even more shocking was she knew Madison need only look over and she would see her rubbing and working her way to the inner thigh. I certainly didn't want Madison to get angry with me, so I turned my head and looked directly at Madison. Once our eyes met I gave a slight nod and motioned with my eyes to point out what was happening. Madison, without a word, looked over and looked right at Margot's hand groping and caressing my upper inner thigh. In the interim of this Margot's other hand was now touching and rubbing my arm. Madison saw all of this, and a wide, wry Smile engulfed her face. I must have been exhibiting a look of distress on my face, because Madison leaned in and for the first time in public kissed me on the cheek. Madison paused, gave me another comforting smile and whispered, \"It's alright, there's been lots of wine poured.\"\n\nMadison was sure of herself and knew her friend was drunk. She knew that I didn't have any ideas about trying to fuck Margot and knew that these clumsy half-hearted advances her friend made were harmless. Madison hugged my arm and leaned her head on my shoulder. This public showing of affection made me feel good, and I calmed down and just enjoyed both women's touch.\n\n\"My, what big, firm muscles he has, Madison.\" Margot spoke across me directly to Madison as if I wasn't there.\n\n\"Yes, I know...I'm so lucky,\" said Madison, then she pecked my check quickly again, adding \"and he's quite the lover, too.\"\n\nMargot's right hand was now on my chest fondling my pecs , her left still under the table migrating slowly up toward my crotch. \"Yes I have no doubt that he is,\" Margot said, again, as if I weren't there, but looked deeply into my eyes. Margot's stare was halfway sexy, halfway comical. She had the confident look that said, \"If I wanted you, I could have you.\"\n\nMadison piped up: \"I have been sleeping very soundly; he's been using up all my energy.\"\n\n\"You, my dear Madison, you are lucky. He's talented and handsome; he's truly a beautiful boy.\"\n\nI began to feel like a possession, a showpiece. This was aristocratic woman-speak for, \"I have a boy toy and he's under my control, I 'm getting fucked hard over and over every night.\" And the translation from Margot's socialite vernacular was \"Yes, a nice, handsome dummy. I need to get one. I haven't been fucked hard in a while.\"\n\nMargot said, \"Does he open his mind to the world, or is he more of the traditional type?\"\n\n\"He's open minded, alright. He's learned so much so fast,\" answered Madison.\n\n\"Talented, open and beautiful. My, you are lucky, my dear Madison,\" Margot again speaking across me as if I wasn't there, and I wasn't too sure I liked the word \"boy\" being used to describe me.\n\nJust that mindset proved that in many ways I was a boy. All the attention both made me uncomfortable, yet I felt good at the same time. Margot's eyes made contact with mine, and she stared at me with a drunken smile. Her pretty blue eyes and sharp nose looked kind of cute and alluring, and I realized that if things were different, perhaps I wouldn't mind having sex with Margot, despite her bring in her mid to late 40s, possibly a well preserved 50, which to my 19 year-old mind seemed ancient. .\n\nMargot and Madison appeared to be good friends, but friends with a weird, competitive streak. Margot liked to show off her connections and political pull. She wanted feel like she had one-upped the younger Madison, while on the other hand, Madison would bide her time and counter eventually, maybe by using me to make Margot envious.\n\n\"I'll see to it, I shall. More attractive young people is exactly what we need there exactly.\" The wine continued to flow and a short while later we were walking out the door, Madison on one arm and Margot on the other. Gemma was right behind us locking up the door to The Bistro.\n\n\"Hey, are you going to Davy's?\" Gemma inquired.\n\nI answered without words by motioning with my eyes from side to side indicating the drunken woman I had on each arm; a gesture that said \"I have to get these two drunks home.\" It was not meant in a sexual way, and Gemma knew that. I was a gentleman, and I wanted to see them home safely.\n\nGemma nodded and gave a knowing smile and said, \"I'll see you tomorrow.\" Almost instantaneously, it was apparent that Margot was too drunk to drive since she could barely even walk. Madison seemed to sober up as we began to move, but then half way down the street Margot all but passed out.\n\nMadison said, \"We'll have to take her to my condo.\" The disappointment must have shown on my face, because Madison continued, \"Lawrence, the poor thing needs us; she can sleep on the sectional in the living room.\" Well, all I wanted to do was to get rid of Margot so I could play with my new toy. I was addicted to Madison now, and I hated the thought of her drunken friend ruining my chance of getting some sex.\n\nAfter a long and tedious walk down Market Street, we finally made it to Madison's condo. \"She's not going to make the stairs,\" Madison said, referring to Margot, who was almost out at her feet. I scooped up Margot and carried her up the stoop. Madison was amused by this and couldn't hold back her smile, and once she unlocked the door, she held it open so I could get Margot up the stairs. She was completely passed out now with her head on my shoulder, and she was as lightweight as her thin, frail body appeared. I'm not even sure she was over a hundred pounds, so climbing the two flights of stairs while carrying her was no problem at all. Seeing her like this was so different from her normal prudish, proper appearance that I'd seen every other time.\n\nMadison unlocked the door to her place and made room for me to walk in, still carrying Margot in my arms. The clean, crisp smell of dried flowers hit my nose and triggered thoughts of Madison bending over the table spreading her buttocks apart for me: the memory of last night's \"dinner.\".\n\nMadison motioned me over to the living room area and pointed to the longer side of the sectional. I placed Margot down gently as Madison slid a pillow under her head and slipped off her shoes.\n\n\"Such a nice young man, he reminds me of my sweet Lance,\" Margot slurred, then succumbing to the alcohol-infused slumber. Madison left, then momentarily returned with a blanket to cover Margot. We both stood over her for a second like doting parents would stand over their sleeping child.\n\nMadison turned to me and smiled in appreciation. \"Thank you, you're a dear,\" she said.\n\n\"Any time,\" I replied. \"By the way, who is Lance?\"\n\n\"Her late husband.\"\n\nI just smiled back and waited for her to say goodnight. I thought I'd let her off the hook and make my own exit, as I didn't see myself invited to stay the night what with Margot sleeping on the sofa. \"Well, I guess I'll talk to you tomorrow,\" I sighed.\n\n\"Why? Where are you going?\"\n\n\"Home, I guess, your friend is here, and...\"\n\n\"Nonsense. Come here.\" Madison stepped to me and kissed me and wrapped her arm around me in a half embrace. \"I want you to stay,\" she whispered in my ear, her breath tickling my neck. Her free hand groped my crotch, and her soft caress on my ball bag gave me an instant erection. \n\nCaught up in Madison's advances, I forgot Margot was right there. My eyes darted over to make sure she was still asleep.\n\n\"Now come to the bed room, I've been waiting for this all night,\" Madison said as she adjusted her soft grip on my package. She turned and walked past the rest of the living area and foyer toward the hall that led to the bedroom. As we walked, I heard loud laughter coming from beyond the door of the condo. The female's laugh sounded familiar, then there were some indecipherable words back and forth between her and a man. All of this was noise was accompanied by some clumsy footfalls associated with inebriation. \n\nI deduced that it was Kate and a gentleman caller on their way upstairs. \"Is that Kate?\" I asked Madison as I trailed behind her.\n\n\"Of course it is, and it sounds as though she has Roger with her,\" she replied as she walked down the hall to the bedroom.\n\n\"I'll be right in,\" I announced as I made a quick pit stop to urinate in the guest bathroom and then wash my hands. I thought of how washing my hands as if I was scrubbing up for surgery happened unconsciously by way of habit, a habit all good chefs have. I reached out to dry my hands on a towel but none was hanging. I then remembered the rainstorm last night warmly. It was romantic and kinky, but also the reason that there were no towels in the hallway bathroom. Madison primarily used the bathroom off her bedroom and had not restocked the towels in here from last night.\n\nI opened the cabinet doors beneath the sink hoping to find something to dry my hands on, but there were only the usual sundries and what appeared some sort of deflated balloon. It was a kind of rubber bag or sack. Out of one end of the bag was a thin white pipe about eight inches long that flared into a small bulb shaped end. For a moment, I was unaware of what this mystery item was. Then it dawned on me that it was a reusable enema bag. A woman who enjoys anal pleasures, sex and masturbation as well as oral to anal contact needs to maintain her rectum's hygiene vigilantly. All those times that I had made love to Madison's ass, I never once pulled my cock out dirty. No matter how hard I rammed my manhood into her rear end I always took my meat out clean. \n\nI found it exciting, discovering one of her secrets. The vision of Madison on her hands and knees giving herself an enema, the white plastic pipe delivering warm, soapy water to her naughty cave of wonders, it made me horny. Knowing that she probably thoroughly enjoyed this practice made me want to run to her, tackle her, and fuck the bejeezus out of her.\n\nNot finding any towels, I closed the cabinet doors, pulled off my shirt and dried my hands on it. Well, I was going to be naked soon anyway. I walked out of the hallway bath and glanced in on Madison's house guest to make sure she was still asleep. She was, so I moved down the hall to Madison's sex chamber. When I entered the room I found Madison in in her sexy shear black lace robe sitting on the bed, her back almost up against the headboard. . She was smiling, her perfect legs spread eagled in a non-sexual comfort position. Her feet flat were flat on the mattress, pillows propped behind her as if she were going to settle down with a paperback novel. Her amused smile went to a full grin, once Madison became aware I had set foot in the room. She quickly put an extended finger across her lips to preemptively shush me. With her other hand, she patted the bed next to her, a silent invitation. As I nodded to her and made my way over, she pointed up towards the high wooden beamed ceiling.\n\n\"You want a laugh?\" she whispered to me, her beautiful smile beaming. She then told me that we were about to hear Kate and Roger do the nasty. I hadn't known whether or not to tell Madison about Kate revealing to me that she could hear Madison and me having sex, and now it seemed that I would hear some of Kate's secrets. I felt like I was getting even with her in some strange way. It's not that I was angry with Kate for trying to embarrass me, in fact I was kind of turned on by it.\n\n\"You're about to hear Kate and Roger fooling around... or trying to, anyway.\"\n\nI decided then that honesty would be best, so I decided to tell her , I whispered to Madison, \"You know, just this morning Kate said that...\" I was about to relay the story when Madison shushed me and softly elbowed me quiet.\n\nThen I heard a muffled male voice say, \"Okay, I think I'm ready.\" I heard Kate's muffled voice but couldn't make out the words. All I could tell was that she said them in a seductive purr. Then Roger said something inaudible with the word \"read,\" then a lamenting \"Oh, no. I'm sorry, hold on, give me just another second.\"\n\nMadison was trying to contain in a giggle with her hand over her mouth. I heard Kate's mostly inaudible, muffled words but heard her say clearly enough, \"Look at it. It's wet and ready for you. Come on, it's yours to take.\"\n\n\"Maybe you could lick it for me. Maybe then I can do it,\" Roger said, sounding desperate like a man begging a parole board for his freedom. After a few seconds Madison and I both stifled laughter when we heard Roger say, \"Oh, yeah, baby. Daddy's hard and ready to go.\" Then we heard some muffled noises from both of them, then Kate moaning for all of ten seconds followed by Roger apologizing again. This was all followed by the sound of anger from Kate as she stormed out of the room, dissatisfied with Roger's ten seconds of lust.\n\n\"Poor guy. He can barely maintain an erection , and when he does he fucks for two seconds. What a pity,\" Madison whispered.\n\nIt struck me funny, not that I was laughing at that poor bastard Roger; it was funny to see Madison so silly and girly.\n\n\"I can't get over how the sound carries in this building,\" I observed.\n\n\"Yes, and for what I paid for it, I'm dissatisfied with that detail,\" Madison griped.\n\nHere was my cue to talk: \"Well, this morning, I bumped into to Kate as I was leaving, and she made it clear that she could hear us last night.\"\n\n\"I don't understand. You are my guest. Why is she complaining to you?\"\n\n\" That's the thing. She wasn't really complaining as much as she was trying to make me feel embarrassed, but she did it in a joking, comical way. I don't know how to take it.\"\n\nMadison was quiet for a second as if trying to solve the mystery of her friend Kate's motive. \"I hear things all the time from her condo, yet I have never approached Roger about it. I don't think I appreciate her doing that.\"\n\n\"Madison, please don't make a big deal out of this, Now I wish I hadn't mentioned it.\"\n\n\"Okay, but if she wants to listen to something, well, we'll give her something to listen to. Since her partner can't perform, she is going to have to listen to me getting fucked all night long.\" Madison seemed to be talking directly to the ceiling. Her half drunken anger was amusing, and I hoped that the situation would not create a rift between the two women. Inwardly, I was sorry that I had opened my big mouth. I sat up at the foot of the bed; a small anxiety arising inside me.\n\n\"Lawrence, don't lament about this. Our revenge will be the 'blue bean' she has tonight while we treat her to the sounds of our pleasure.\"\n\n\"Blue bean?\" I asked, having never heard the phrase.\n\n\"Yes, dear. It's like blue balls for a woman.\"\n\nIt struck me funny and I smiled.\n\n\"I heard the term back in collage. There was this initiation where the pledges from the sorority would be blindfolded and naked. You would be told by the upper class sorority sister to get on your knees and bend over. Then the boys from the frat house would come over pick girls and fuck them.\" Madison undid the loose knot of her black sheer robe. The robe parted, exposing her gorgeous body. \"The fun was that you as the female pledge didn't get to know what upper classman had his way with you. I chickened out and left, very scared yet very horny. The idea was so erotic, but I didn't feel the need to be made into an object just to join a club. I went back to my dorm, went to bed but couldn't get to sleep. My vagina was wet and swollen and needed to be fucked. It actually ached. When my roommate Tanya came home, she asked what was wrong. I told her about it and she told me that I had been 'blue beaned' and that she was glad that I didn't lower myself to a 'disgusting misogynist tradition.' She explained when sexual frustration builds up and your clitoris swells up like a blue bean. \n\n\"Tanya was a lesbian and offered to help me out. I told her that it was a kind thought but that I was not a lesbian. Tanya then offered to share her bunk with me just to cuddle and give me support. I knew that probably meant an eventual finger in my pussy but I didn't care. I had to come to relive the tension, but, true to her word, Tanya never touched me, and I was a little disappointed and more frustrated sexually. The next morning I had to skip my first class just to get myself off. Looking back, I wish I had gone through with the initiation . I see it now as a missed opportunity of fun. And to not know these years later who was inside me.\"\n\nWhile she told me her sexy tale I wondered if this was at all true or if she just liked to turn me on with her twisted imagination. Either way, she'd shed her robe and spread her beautiful legs, her delicious cunt beckoning me to eat it. \n\nIn a moment of creativity I pulled the belt out of her robe. I ordered, \"Now, pledge, get on your knees and bend over.\"\n\nMadison could not hide her happiness. I had picked up on her story and wanted to act out her missed opportunity. I used the belt of her robe to blindfold her. \"Blocking your vision will heighten your other senses and make you more sensitive to touch. So, be a good little pledge and don't remove your blindfold, or you'll be punished for it.\"",
        "\"Oh, I don't know if I can help it. I'm just so disobedient by nature, and I would just love to see what your raging hard-on looks like.\" \n\n\"I don't know about that. Rules are rules,\" I said, playing along nicely.\n\n\"What types of punishments are we talking about?\"\n\n\"Well, maybe we just spank your lovely butt 'til you can't sit, or shove an object, probably my cock, up your asshole, but most likely we will tie your hands so you can't touch yourself and make you watch all of your pledge sisters getting their hot, wet pussies stuffed with man meat to get you blue beaned again.\"\n\n\"Mmmmm, sounds nice!\"\n\nI took off my pants and crawled to her on the bed. Madison lay there on her back with her legs open, naked except for her robe and her stiletto high-heeled shoes. I mounted her missionary style. She still wore the blindfold as I teased her blue bean with my cockhead. I plodded ahead into our latest sexual romp in slow motion, taking a full fifteen seconds to sink my pole all the way balls deep into her. I put her legs over my shoulders, bending her shapely figure in half so I could slam her slippery twat as hard as I could.\n\nHaving learned to pace myself, I slammed her honey pot hard and then slow, the same way she liked it in the rear. I loved giving her those hard, repetitive thrusts she could not resist. The internal workings of her snatch did their magic as Madison massaged my manhood with her spongy, hot cunt muscles.\n\nI was nearing the high point of pleasure when she asked me through the breathlessness of exertion, \"I want you to come on me.\" Too clouded by the intimacy to answer her in coherent words, a moan was all that I could articulate. \n\nShe paused, then said, \"I said, take out that big fucking cock of yours and come on me. I want you to pull out and jerk off on to my tummy like back in school . I want to pretend we're at pledge initiation, and you're fucking me in the back room of the sorority house.\"\n\n\"Uhhh, okay.\" \n\nI had always wished to role play with my sex partners in the past but they just wanted me to shut up and fuck them. So I was game for this. Madison, my carnal goddess, always granting me, her loyal follower, joy over and over. Playing along and acting out her fantasy, I said, \"Yeah. You're the prettiest cheerleader and valedictorian.\"\n\n\"...and you're the football star with the hot bod and big dick, but I don't know that because I'm blindfolded. All the girls want to fuck you, but you just want to fuck me. You chose me over all the other girls,\" Madison answered.\n\n\"Yes, because you were more than just the prettiest ... you were the sexiest.\"\n\n\"So, do you like my pussy?\"\n\n\"Oh, it feels so good, uhhh ahh, your puss puss is so fucking tight!\"\n\nAs Madison sensed I was close to shooting my wad she asked, \"Pull out your cock. I want to feel the come shoot out. I want to feel the hotness of it on my skin.\"\n\nWhen I pulled it out her pink pit of passion, my cock felt hot and slippery as it throbbed in the palm of my hand. Slathered in in Madison's pungent vaginal juices, the womanly aroma tickled my nose and made my mouth water. The ambient light from the halogen lamps embraced the contours of my towering erection, attaching white light to the sheen of sex in all of its glory. Every bulging vein that wrapped around the girth and length of my sex staff was enhanced; every inch of steel-hard man meat accentuated. \n\nGently, I removed the blindfold from her eyes. I wanted her to see me and my \"beautiful penis\" erect to its full length and girth. Madison lay on her back in bed observing me taking hold of the present, living and loving the moment. Eating me up with her trademark sexy eyes. She was looking on me and enjoying the view. I loved the way she regarded me; the same way I was turned on by her beauty.\n\n\"My, you are a beautiful man, with a strong muscled body and that big, beautiful cock of yours,\" she purred as though just the thought of me pushed her to the climax. I was flattered by her words; the things she said meant the world to me. Having low self esteem, I never viewed myself that way, and it was a surprising joy to hear. She was a vision herself, her beauty multiplied by my growing feelings.\n\nFeeling that I kept secret , Feelings I wish I didn't have, if she knew, she would kick me to the curb so fast...\n\nHer raven hair spilled all around the comely angles and lines of her face in a natural, relaxed way. Her body was painted in that hot, wet perspiration of lovemaking. Those amazing legs spread wide and bent at the knee, the neatly trimmed strip of black pussy hair clung to her dampened skin. The pink and purple petals of her sexual flower hung open like shutters battered by a hurricane. Her honey-engorged clit was swollen with orgasmic anticipation. \n\nMadison's hands were now fondling her round breasts and pinching at the pointed nipples. \"Oh, that big cock look so good! Don't jerk it just yet, rest a second. I want more.\"\n\n\"More what?\"\n\n\"More of your cock.\"\n\n\"What happened to initiation night? I thought I was breaking in a new pledge,\" I asked, half joking and perhaps wanting to continue role-play.\n\n\"We're still at school, and it's still initiation night. We're still young, and I don't want you to get me pregnant, so we will have to use some old-fashioned birth control.\"\n\n\"But I thought you said you were on the pill?\" I said, playing along.\n\n\"We're in college still, and I'm not that kind of girl.\"\n\n\"...that has sex?\"\n\n\"Yes. I was saving myself for marriage, ...hahaha,\" she again laughed at herself.\n\n\"What's 'old fashioned birth control' besides just pulling out?\"\n\n\"You can fuck me up the ass.\"\n\n\"Is that so?\" I answered, unable to conceal my joy. I never ever grew tired of hearing that filthy, dirty vernacular come out of her proper debutant mouth, especially on this subject matter. The shock and joy of Madison verbally granting me access to her rear entrance never got old and never wore off. I was always stunned with glee and could feel my testicles fill and my prostate pulsate as the raunchy words struck my ear drums. Now I felt like a full time resident in my fantasies, and very blessed.\n\n\"Yeah, I hear all of us college girls do it so we don't get pregnant and to save our cherries for marriage.\" She giggled at her own ridiculousness , and her silly, sexy fun role-play game. Then she rolled onto her side, opened the drawer of the night stand and retrieved a tube K-Y Jelly. \n\nI loved seeing her do that.\n\nThen she picked up the belt, blindfolded herself, smoothly wiggled free of her robe and tossed it aside.\n\n\"Now, remember when it's time, pull out your cock and make it come for me, shoot your come on me, squirt it all over my bottom.\" She got on her knees, pointed her perfect round ass in the air and rested her head down. I lubed and stretched the rubbery ring of her bunghole with my finger. Once she was properly readied to fuck I prepared to mount her from behind. Looking down at the inviting, soft flesh of her anus, it was lubed and shiny and looking just delicious. It was all I could do to restrain my sudden urge to plunge my tongue inside her and devour her orally, but I had learned what Madison wanted when she wanted it. Right now, she wanted my cock so that is what she would get. Resting my lubed cock head against her rectal lips, she slowly leaned back into me, and in doing so slowly impaled her rectum onto my erect member, now freezing still and letting her sphincter adjust and open. \n\nI looked down to witness the wonderful sight of the invasion. First, just my cockhead slowly disappeared into the willing, forbidden orifice. Then, slowly and surely seeing more and more going up, up, up inside. I could just hold my position and let Madison do the fucking . Her amazing skill for swallowing up my entire erect penis with her asshole was a phenomenon. A reverse blow job of sorts. She could suck me off with her rear end.\n\nWhen she was half way down the length of my stiff tool, I felt the now familiar and wonderfully tight grip on my shaft .Only when Madison's anal muscles eased their hold and my manhood secured to the maximum depth did I even wish to or try to move. Her rectum became quicksand pulling my down into its deep, dark vortex of pleasure. Once I was as deep as possible the warm moisture of her cunt dampening my scrotum felt exquisite.\n\n\"I've taught you well. You are a very quick study. Not only handsome, you're a talented assfucker, too,\" Madison cooed.\n\nI don't just want to fuck your ass,... I want to make love to it,\" I answered in the sexiest way I could.\n\nI thought about how there was probably an audience upstairs. That doofus Roger, and Kate, probably still angry with his bedroom ineptitude.\n\nMy exhibitionist fetish and want for revenge gave me an added urge to dirty talk. I was glad Madison had vocalized my skills as a backdoor man. I was flattered and turned on by her compliment and glad that Kate may have heard it. Kate would be jealous of us, sitting on her bed unsatisfied and green with envy, her blue bean aching . I had just began to give Madison a few slow, hard pumps when I caught some movement in my peripheral vision. Looking over my shoulder, I saw nothing but felt as if there was someone there.\n\n\"Ohhh, God! I love Your big, thick cock stuffed in my ass!!\" wailed Madison, pulling my mind away from its minor distraction. Slowly withdrawing my penis almost all the way to where just the cock head was in her, I gave her a hard, forward stab of stiff cock that caused her to yelp with pleasure. It made a loud smacking sound when her buttocks and my hips connecting like a punch.\n\nStill feeling like I was being watched, though, I looked around as best I could. I gave myself a start when I glimpsed what I thought was Margot's silhouette in the door of the bed room. I'm seeing things, I thought to myself.\n\nThen I gave the door a better look. Nobody there, but I didn't remember leaving it open. Never mind, I thought, again I was being paranoid. Margot was passed out and not going to stir for hours. Anyway, if that stuck up little prude wants to watch me fuck her friend up the ass, so be it, I thought. I want to be watched anyway, it makes me hot, I admitted to myself.\n\nI felt Madison's hands slip down and touch me, her palm cupped my sperm filled scrotum, one of her fingers tickled my taint and I thought, wow, she has talent, she knows just what to do. One hand continued to caress my ball bag and tickle my taint, the other hand lightly caressed my buttock and ass crack, absorbing the soft tickle that sent cold shivers of pleasure.\n\nOh, the guilt I felt for wanting more. Yes it scared me how much I loved her touching my butt cheeks.\n\nI shuddered with anticipation of her hopefully working her way to my asshole. I loved it when she played with it. Was I gay? What the hell is wrong with you, I asked myself. My sheltered thought process and inhibitions were a product of my upbringing in the old neighborhood, a place that actually frowned upon eating pussy. The small-mindedness of the place believed that it somehow made you effeminate to do so. What would they think about me loving my asshole fingered? Her caress was slowly moving toward that deep, dark secret becoming a reality again, and I couldn't wait. Then, wondering how she was pulling off this act of true contortion. I pried my eyes away from the sight of my cock sliding in and out of Madison's willing sphincter to take a look. Lo and behold, her arms were embracing the pillow she had under her head as she braced herself against my furious back door assault. \n\nThere was within me a shocked feeling almost akin to fear, yet romantically exciting. I turned my head to see that Margot was there behind me. We made eye contact. I was too surprised to speak, frozen in my fear and surprise. Margot's hands were caressing my balls and taint. She drew a finger to her lips and prompted me to stay silent. When I almost uttered a word, Margot's face filled with fear as she vigorously shook her head, mouthing the word \"NO\" in a slow, exaggerated pantomime. This was a wildly erotic situation I was engaged in, an unnatural sex act with a beautiful woman who was unaware that her friend was fondling the balls and buttocks of the man fucking her. \n\nI was feeling a million things all at once.\n\nI loved that Margot was watching me have sex, and I was super aroused that this woman would risk her friendship to play with my balls. I felt guilt that I loved the idea. I felt like if I didn't take a stand and stop Margot, then I was cheating on Madison even though we were not officially a couple. I felt fear that if I did say something that Madison would hold me just as responsible . I felt taken advantage of by Margot's fondling and caress, yet I loved the magic feeling of being touched and fondled. Part of me felt violated by Margot, the other part loved being violated by her.\n\nI was sure that Margot was getting off on the high-risk game she was playing, and so was I. There was something sexy about not getting caught. Her fingers tickled my taint and inched ever closer to my wrinkled, puckered rectum. I made up my mind I was just going to confront Margot and tell her to stop, winning Madison over with my honesty. I took a breath and prepared to speak up when Margot began to massage my rectum with a lubed fingertip, swirling it circular strokes clockwise then going counter clockwise, then straight up and down . My plan to end Margot's participation was dashed, pleasure had rendered me mute. I was ashamed of myself for being in complete ecstasy. I couldn't turn back now; my inner desires had overruled my loyalty to Madison. I wanted Margot to slide her lubed finger in my asshole. What the fuck is wrong with me, I thought.\n\nMadison was still unaware of Margot's presence, too wrapped up in enjoyment and too blind to notice.\n\nMadison's moans grew louder. I knew she would soon be reaching down to play with her pussy. What if she accidentally touched Margot's hand? She would be mad at me. Madison would know that I knew Margot was in the room. I knew what would happen next. Madison would dump me out like trash even though I had done nothing wrong.\n\n\"I love having your cock up my fucking ass!!\"\n\n\"I love fucking you in your tight, hot shithole.\"\n\n\"Oh that's it... you know what I want, keep fucking my ass hard and slow.\"\n\nI complied, and that's when it happened. Margot's bony little finger breached whatever little resistance my rectum had in it, and slid in deep. I felt that wonderful \"pleasure pain.\" I loved the sensations, all of them, the tight, hot hold of Madison's anal muscles on my hog, while getting a taste of what sensations Madison was enjoying anally. The thought was erotic enough on its own , a pleasure loop of sorts, that I was giving, coupled with the feeling of giving that same type of pleasure. The feeling of fullness and the cold shivers of joy that my rectal nerve endings were transmitting to my brain.\n\nThe pressure that Margot's finger put on my prostate increased the pleasure and intensified my urge to come. My heartbeat and breathing stopped and stepped aside, as if out of respect to the thunderous pleasure that cascaded through my entire body. My natural reflexes took over, and my hips instinctively humped and pounded Madison's yielding bottom. I slammed her hard and fast, losing control of my body. Her buttocks were slackend and relaxed, mirroring the behavior of her gaping anus. The onset was so hard and sudden that I had forgotten Madison's request for slow, hard humps. I was fucking her hard and fast, powerless to my own body's reaction.\n\nAs salvos of hot sperm sprang from my balls, I felt my anus squeezeng down on Margot's slender finger in time to my come shots. It wasn't until my second pulse of come that I remembered that Madison wanted me to come on her butt cheeks externally. She wanted to have the tactile feel of the hot, gooey substance on her lovely bottom.\n\n\"Don't just fill up my ass, squirt some on my cheeks,\" Madison said as she felt the semen enema beginning to spray the walls of her rectal canal. I was able to pull out of her asshole and jerk my cock for the next seven or eight pumps it took to paint her beautiful ass with the entire amount I had left.\n\nEach contraction of come shot seem to pleasure harder and shoot further because of the sinfully wonderful pressure Margot put on my anus and prostate. I felt my sphincter clutch and grip Margot's finger. My buttocks clenched Margot's hand as if it were some kind of flesh and muscle bear trap.\n\nAnd after I had fired the last drop of jizz from my penis, Margot fingered my rectum with faster, harder reciprocations. I realized that the sensitive feelings that came over my cock and balls post orgasm didn't affect the anal pleasure I was getting from Margot penetrating me.\n\nUnlike the penis or vagina where the post orgasm sensitivity has a person recoil from any further stimuli, the rectum wants more. The sensations were amazing and felt good, that thick, savory feeling of fullness Madison described was welcome in contrast to the \"get the fuck away from me\" feeling I had in my cock. \n\nMargot slowly slid her finger from inside me. I had been groaning with delight but continued to do so loudly to provide cover noise for Margot to sneak away with. I looked at Madison, still blindfold, still clueless about Margot's silent participation in our intimacy.\n\nI lay on the bed next to Madison, who remained motionless, her comely ass still pointed up, her butt crack and cheeks frosted with milky white goo. I caught my breath and started to feel that post climax downer that Joanne had spoken about during our brief turn as fuck buddies. I felt foolish for being so open and letting our upstairs listeners hear everything. I felt worried about the way I craved being filled and enjoying my ass being violated and played with. I feared that I was somehow less a man for giving in to my forbidden desires; guilt for the indulgence of my debauchery. Dammit, was I gay? Also, scared that Madison would find out about what Margot had done to me while I was fucking her butt.\n\nBut most of all, the guilt I felt for letting it happen and betraying Madison. To top it all off, I was falling for a woman and a lifestyle I couldn't dream of keeping up with."
    ],
    "authorname": "erotica881988",
    "tags": [
        "anal sex",
        "blind fold",
        "oral sex",
        "role play",
        "public sex",
        "eves dropping",
        "older woman",
        "exibitionisim",
        "trio"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/anal-summer-ch-07"
}