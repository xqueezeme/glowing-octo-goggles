{
    "title": "Getting Over Edie Ch. 06",
    "pages": [
        "Author's Note: Sorry to keep you waiting. Life plus insane writer's block equals me never getting anything done. Your patience, threats, kind words, etc. were much appreciated. ~n4m\n\n********\n\n\"So are you ever going to reveal this new girl?\"\n\nGrady glanced up from his computer screen. He was putting the finishing touches on his latest blog entry when Gia's voice interrupted his productivity. He frowned slightly. Her question was the one on everyone's mind. His recent entries in his breakup series chronicled the new stage in his life. \n\nHe described his adventures with Arden to highlight his progress in the breakup/recovery process. Grady made sure to keep her identity a secret. He wasn't ready for the world to make assumptions, but mostly he enjoyed having those moments to himself. \n\nTwo weeks. Two whole weeks of solid hangout time was enough to convince him that moving on was the right decision. But he wasn't about to tell Gia's nosy ass any of that. \n\n\"Something I can help you with, Gia?\" Grady chewed thoughtfully on his pen cap as Gia shot him a look. \n\n\"Oh come on, Grady. You know we're going to eventually find out who it is. Just save everyone in the office the trouble and just tell us who she is already.\"\n\n\"A journalist reserves the right to protect his sources, Amato. Besides, you and the rest of the Gossip Mafia need to focus on your own work instead of hounding me about my life.\"\n\nGia rolled her eyes and snapped her gum. \n\n\"Alright, alright\" she conceded. \"I'll ease up. For now.\" She made to head back to her cubicle but stopped suddenly, turning to face him once more. \"Whoever she is, she deserves a gold medal. I can't remember the last time I've seen you look so enthusiastic about anything.\"\n\nGrady was touched by her compliment. Gia was a strange creature; sure she was loud and bossy. She had a tendency to stick her nose in everyone's business and was known as \"The Mouth\" for a variety of undoubtedly scandalous reasons, but beneath the ridiculously tight sweaters and impossibly bright red lipstick...she was actually kind of sweet. \n\n\"Thanks, Gia. That's really sweet of you.\"\n\nShe smiled. \"I can be a decent human being once in a while. Also, Nell wanted you to stop by her office before you leave today.\"\n\n\"I can only imagine what she has to say.\"\n\n\"Good luck.\" She paused for a minute, her sassy demeanor replaced by a slightly uncomfortable air. \"Grady?\"\n\n\"Uh, yeah?\"\n\n\"Is Benny seeing someone? I feel like an asshole asking you about it, but he hasn't exactly been around for me to question him.\"\n\nThat wasn't the question he was expecting. The naked hope in her eyes made him tell the truth. \n\n\"Yeah, I think so Gia.\"\n\nHe could tell she was crushed, but she kept her emotions in check long enough to squeak out a half-hearted chuckle. \"Oh well. Another one bites the dust.\" \n\nGrady played along with her, the awkwardness of the situation a little too much for the both of them. \"Listen, Amato I'm sorry\u2014\"\n\n\"No it's okay,\" she said brightly. A little too brightly. She was faking it, but he wasn't going to call her out. \"I gotta go. If Nell asks, just tell her I wasn't feeling well. I'm leaving a little early.\"\n\n\"Will do.\" He watched as she practically fled from his cubicle. Grady felt a little sorry for her. Benny was kind of a dick for stringing the girl along. Sure, she could be slightly clingy. But she didn't deserve to be crushed like that. Grady made a mental note to talk this shit out with his best friend. He didn't want things to get weird at work. \n\nTurning back to his computer, Grady fell headlong into his work. It wasn't until his phone vibrated for the fifth time did he stop. \"Hello\" he answered distractedly. \n\n\"I was beginning to think you were ignoring me,\" Tony said. \n\n\"I've just been doing some layout work for my blog, man. What's up?\" \n\n\"Well I'm free tonight. We've being trapped in the studio all week with Love in Chains, putting the finishing touches on the EP. It's due out in a few days. Everyone's kind of antsy, so we're kicking back tonight.\"\n\n\"Sounds good. What's the plan?\"\n\n\"Well Gem's doing Friday night dinner at her place. Real small. Just a few people trying to relax. Are you up for it?\"\n\n\"Yeah, man. Doesn't Gem live outside the city?\"\n\n\"She does. Benny's driving us up there.\"\n\n\"Alright. Well I'm still at work but I'm leaving in a minute. Just have a quick meeting with Nell. I should be home in the next half hour or so.\"\n\n\"Okay, dude. It's like four-thirty right now. We'll pick you up around six. Sound good?\"\n\n\"Yeah. See you later.\" Grady ended the call and started to gather his things. He was about to head for the elevator when he remembered Gia's message. He looped back around and walked towards Nell's door. \n\nGrady was about to knock when the door flew open and Nell nearly collided with him. \"Shit!\" he exclaimed. \"Sorry Nell.\"\n\nNell's calm demeanor never faltered, although Grady could see a hint of a smile on her lips. \n\n\"Never mind that,\" she said, waving away his apology with a flick of her wrist. \"I'm just glad you ran into me now. I was about to leave for the evening.\"\n\n\"Oh. Well I'll walk with you to the elevator.\" Grady gestured politely for her to lead, and he quickly followed behind her. \"So what's up? Gia said you wanted to see me?\"\n\n\"Yes.\" Nell pressed the down button before fixing her gaze back to Grady. \"I received a call earlier from ChatTV. Dahlia Monroe wants to interview you.\"\n\nGrady was shocked. \"Wait, what? Are you serious?\"\n\nNell adjusted her white framed glasses and shot Grady a look. \"Yes, Mr. Kade. I am quite serious.\" The elevator opened and they both stepped inside. \n\n\"Nell...that's freaking awesome. Dahlia Monroe's show is kind of a big deal.\"\n\n\"It's more than 'kind of'. This kind of exposure is beneficial for you and the magazine. I sincerely hope you take advantage of this opportunity.\"\n\n\"Absolutely,\" Grady said. \n\nNell shot him a rare smile and the elevator signaled their stop. \"Good. I'll see to setting up a meeting with you and Dahlia. Have a good evening.\"\n\nShe breezed out of the elevator, her commanding presence practically forcing people in the lobby to jump out of her way. \n\n********\n\n\"So I got some interesting news today,\" Grady announced. He was in the backseat of Benny's SUV as they headed out of the city to Gemma's Long Island abode. \n\nTony, who was sitting in the passenger seat shot him a curious look. \"What's up, man?\"\n\n\"Dahlia Monroe wants to interview me.\"\n\nBenny chuckled. \"Get the fuck out! She's so hot.\"\n\n\"What? That's awesome. Is this about the blog?\"\n\nBenny shot Tony a look. \"What else could they possibly talk about? Hair care tips?\"\n\n\"Shut up,\" Grady muttered. \"Yeah Tone, it's about the blog. Nell told me she's interested in getting to know me.\"\n\nGrady didn't even have to look up to see the leer on Benny's face. \"Uh-huh. One of the most popular web radio hosts in New York is just dying to get to know you, and you're just sitting there playing it cool?\" Benny scoffed. \"I would be fucking pumped. Dahlia Monroe is so unbelievably hot!\"\n\n\"I'm pretty sure she's a lesbian,\" Tony chimed in. \n\nBenny rolled his eyes. \"Who the hell told you that?'\n\n\"It's just one of those rumors you hear a lot in the industry.\"\n\n\"The industry? Listen to this guy. Whatever. I'm sure your facts are wrong, as usual. So are you going to do it?\"\n\nGrady nodded. \"Of course. It's good for the magazine and my career. I guess I'm just a little nervous. Talking about Edie in front of people is going to be a little hard.\"\n\n\"Why?\" Tony asked. \"You seem to be doing quite well.\"\n\nHe was silent for a moment. It was true; he was doing much better. He slept soundly through the night and didn't wake with his head pounding and his chest aching. It was a good feeling. Plus, there was Arden; but his friends didn't know about that. \n\n\"I am,\" he replied sincerely. \"Things are good.\"\n\n\"Then concentrate on that part. All the other \n\nstuff is extra.\"\n\nGrady nodded. Tony was speaking a fair amount of truth. He didn't need to rehash and worry about trivial matters, but focus on the future. An interview with Dahlia Monroe was a great opportunity. He couldn't let thoughts of what Edie might think get in his way. Besides, wasn't he past feeling like this?\n\n\"You're right, man. I'm definitely going to do it.\"\n\n\"Yes!\" Benny exclaimed. \"I need to go with you to her studio. I would love to meet Dahlia.\"\n\n\"Whoa there meathead,\" Tony said. \"Aren't you dating someone?\"\n\nBenny rolled his eyes. \"Calm it down, old lady. Stevie and I aren't 'going steady'. We have a mutual understanding. What we have isn't exclusive.\"\n\nTony snorted. \"Two weeks ago you couldn't admit you were sleeping with her, now suddenly you have a 'mutual understanding'? Benny you're so full of shit, it's practically seeping out of your pores.\"\n\nGrady chuckled as the two bickered back and forth. His mind drifted to thoughts of Arden. He couldn't wait to see her tonight. It'd been a few days since their last hangout session. He'd been busy with piecing together his latest article, and she'd been swamped with a new class schedule. Her dance semester was super packed with several classes. She'd been running a little ragged, but wasn't too tired to grab a quick meal or a cup of coffee with him. \n\nSince that night at her apartment, there were plenty of kisses and touches, but nothing further. It didn't bother him; in fact, he was quite comfortable with the pace. Sure, he wanted her, but he didn't want to rush and potentially ruin the camaraderie he enjoyed. She was practically the only real female friend he ever felt truly comfortable around, and that made her special. \n\nAnd to be honest, he was also a little concerned about the rest of the group. He was beginning to understand why Benny and Stevie were sneaking around. He wasn't worried about them giving him shit, but more concerned about what telling them meant. It was giving life to whatever was brewing between the two of them. Right now it was in that dream state, where everything and nothing felt real. Announcing it to the world would force him to define things. \n\nHis heart beat faster as they pulled into the driveway of a modest brick house. The quickened pace continued even as they made their way up to the front door. Before Tony could knock, the door flew open, revealing a breathless Gemma. \n\n\"There you are!\" she exclaimed happily. \"We've been waiting for you.\" The petite woman stepped aside, as the men lumbered in. \n\n\"Sorry we're so late, baby\" Tony replied, planting a sweet kiss on her cheek. \"Benny here drives like an old ass lady.\"\n\n\"My car is my baby. I'm not about to get into an accident.\"\n\n\"Gem, please no. I'm not trying to hear another bickering session between these two,\" Grady said. \n\n\"I had enough of it in the car.\"\n\nGemma chuckled as they followed her down a hallway. Her house was a decent size and unlike the vibrant colors of Arden's apartment, the d\u00e9cor was decidedly muted. It was tasteful, modern, and chic. They made their way to a dining room with a large circular table. \n\nDax, Stevie's bandmate was already seated at the table, sipping a beer and checking his phone. For a brief panicky moment Grady was paranoid that Dylan and Edie would be there as well, but he forced those thoughts out of his head. No way would his boys let him be ambushed like that. \n\nThe guys greeted Dax and sat down. Few minutes went by before Stevie huffed into the dining room and plopped between Benny and Dax. \n\n\"Fucking ridiculous,\" she muttered. \n\n\"They kicked you out, huh?\" Dax asked, his green eyes full of amusement. \n\nStevie scoffed, irritation marring her darkly gorgeous face. \"You drop ONE plate and suddenly it's a fucking federal crime.\"\n\nGrady hid a grin behind his hand as Benny awkwardly patted Stevie's shoulder. \n\n\"Poor Stevie. She's not the domestic type at all.\" Dax turned to Benny. \"Good luck with getting her to cook you a meal, bro. I've experienced Stevie Knox's cooking skills firsthand. She'd probably poison you.\"\n\nTony and Grady cackled as Stevie shot Dax a murderous look. \"Fuck you, Jones. I've had to put up with shit from the Domestic Goddesses in the kitchen. I'm not about to hear it from you.\"\n\n\"You just keep your ass away from Gemma's good plates,\" Arden said as she breezed into the dining room. She was carrying a large platter full of garlic bread. As she set the platter on the table, her eyes met Grady's. She smiled broadly before ducking her head. Grady returned the grin. \"Hey boys,\" she said. \"Can I get you some beers?\"\n\n\"Sure,\" Grady said with a nod. His eyes immediately zeroed in on her outfit. She was wearing a festive African-print dress in vibrant hues of gold, umber, and green. The dress stopped about mid-thigh, showing off her gloriously long legs. The sweetheart neckline showcased her cleavage and when she leaned over the table, Grady was treated to a lovely sight. \n\nHe grinned when she caught him looking and mouthed 'later' before heading back into the kitchen. It was only a couple minutes later that Arden returned with beers for the boys and a bottle of wine. She sat down next to Grady just as Gemma brought out a large serving dish full of some sort of pasta. \n\nDinner was relatively nice; the conversations and drinks flowed easily as everyone enjoyed the meal. Gemma was a skilled cook, and her Cajun chicken pasta was delicious. \"Dammit Gem, Grady and I are gonna need to hit the gym extra hard after food like this,\" Benny said. \n\nGrady nodded. \"But it's worth it. I haven't had a home-cooked meal in forever.\"\n\n\"Well whenever you feel like you need a break from takeout, I'll cook for you anytime,\" Gemma said with a smile. \n\n\"You hear that Tone?\" Benny asked. \"Your girl's gonna cook for us.\"\n\nTony shrugged. \"She cooks for me all the time.\" His smile was smug as he laid a sweet kiss on Gemma's cheek. \n\n\"Ugh,\" Stevie said with a shudder. \"Get a room.\"\n\n\"We're in my house,\" Gemma shot back. \"All these rooms are mine.\"\n\nGrady snorted as Arden shook with silent laughter. It was nice to kick back and enjoy the company, especially with a certain person in particular. \n\nHis eyes kept meeting hers and he was fighting hard to keep a stupid grin off his face. Reel it in, Kade he warned. \n\nThe guys were on clean-up duty, much to Benny's consternation. It was only until Gemma threatened to never cook for him again did he shut the hell up and scrubbed the pots. Grady, Tony, and Dax had to laugh at the giant temper tantrum he was throwing about washing dishes. \n\nAfter the kitchen was spotless they all gathered in Gemma's tastefully decorated living room. Benny settled into the recliner while Stevie surprised the hell out of everyone by sitting on his lap. \n\nThe look she shot the group forced them to stifle their laughter. \n\n\"Hey Gem, where's the little guy tonight?\" Grady asked. He and Arden sat on the sofa, careful not to appear too close.\n\nGemma cuddled close to Tony on the loveseat. \n\n\"Milo's with his dad tonight. It's his week to \n\nhave him.\"\n\nDax looked around the room. \"Whoa, why do I suddenly feel like a seventh wheel?\"\n\nArden laughed easily. \"Well if you would stop being so difficult, with those impossibly high standards, maybe you could actually find a girlfriend.\"\n\nDax rolled his eyes before shooting Arden a smile. \"It's not being difficult if I want a girl I can actually have a real conversation with that doesn't involve referencing a Kardashian.\"\n\n\"Sounds fair to me,\" Tony interjected. \n\n\"Besides dude,\" Benny offered. \"Grady and Arden aren't paired up. Relax.\"\n\nGrady could feel five pairs of eyes watching him and Arden on the couch. He huffed. \"You guys are nosy as hell.\"\n\nArden chuckled. \"Whatever. I'm probably the only woman in New York who isn't infatuated with the famous Grady Kade.\" Her smile was small and sly. \n\nGrady ducked his head to hide his laughter. \"I'm sure women aren't infatuated with me.\"\n\n\"Right, because Dahlia Monroe wants you on her show just for shits and giggles,\" Tony said. \n\n\"What?\" Arden exclaimed. \"Grady that's so cool! I love her show.\"\n\n\"Yeah,\" he said, nodding his head. \"Just heard the news today. We have to work out a few things with her people, but as of right now, it's a go.\"\n\n\"That's so awesome. Congrats!\" \n\nHis face lit up at her wide, genuine grin and the brightness of her fawn-like eyes. \"Thanks,\" he said. A strong urge to grasp her hand overtook him, but he bit down that thought. They were still hanging out with their friends and he wasn't about to go down that road, at least not with an audience. \n\nThey sat around, shooting the breeze and watching some random action movie on cable. An hour later Stevie announced that she and Dax had to leave. \n\n\"We're laying down the last two tracks for the EP.\" She turned to Tony. \"Are you working with us tonight?\"\n\nTony shook his head, wrapping his arm tighter around Gemma. \"No, Gizmo's covering the boards now. You'll be fine. Just call me if there are any problems.\"\n\n\"I should probably get going too,\" Arden said. \n\n\"I've got an early dance class.\" \n\nStevie nodded. \"Cool. Benny will give us a ride back into the city.\"\n\n\"I will?\" he shot her a quizzical look, but quickly changed his tune when he saw her eyebrows furrow. \"I mean, yeah no problem.\" Benny turned to Grady. \"You ready to go, man?\"\n\nGrady fought to hide his laughter. \"Yeah, I'm ready.\" He kissed Gemma goodbye and thanked her for dinner before promising Tony that he'd call him tomorrow. \n\nThe car ride back to Brooklyn was mainly filled with a hilarious argument between Benny and Stevie about the realistic aspect of the action movie they watched earlier. Grady was glad his friends were pre-occupied, because it gave him a chance to have his own private conversation with Arden. \n\nHis eyes drifted to Benny and Stevie in the front seats, voices raised before his hand snaked out and grasped Arden's fingers, giving them a gentle squeeze. Her gaze met his and she smiled. \"Hey,\" she said softly.\n\n\"Hey.\" Grady couldn't help the warm feeling in the pit of his stomach at the sight of her shy grin. \"Sorry you have an early class. I thought we would hang out, since I'm off tomorrow.\"\n\nHer thumb traced small circles on the top of his hand as she shot him a conspiratorial grin. \n\n\"There is no class. Well, at least not tomorrow. I just wanted to get out of there so we could spend some time together.\"\n\nGrady chuckled, shaking his head. \"Smooth, Finch. Real smooth.\" \n\n\"Smooth is my middle name. So are we going to my place?\"\n\n\"Yeah. But how are we going to pull that off without them noticing?\"\n\nArden waved his question away. \"Don't worry. I've got that covered too.\" She leaned forward, clearing her throat loudly. \"Hey Benny, just drop both of us off at my place.\"\n\nBenny stopped his conversation with Stevie and shot Arden a look in the mirror. \"Okay, I guess. I don't mind taking you all the way home, man.\"\n\nGrady was about to speak up, but Arden stepped in. \"Well that's cool except the other day Grady let me borrow his zip drive so we could swap music, but he's got a presentation tomorrow and his notes are on there.\"\n\nShe winked slyly at him and he couldn't help but admire her skills. The girl really was smooth. \n\nBenny shrugged. \"Whatevs. Less driving I have to do.\" He returned to the conversation with Stevie. \n\nTwenty minutes later, Grady found himself in Arden's apartment. \"Do you really think Stevie went to the studio?\" Arden asked, stepping out of her flats. \n\n\"In my mind, yes\" Grady replied. \"I never want to think about her and Benny engaged in any kind of indecent act.\"\n\nArden chuckled as Grady shuddered. \"Speaking of indecent,\" she said, gently tugged the front of his red thermal Henley, bringing him closer. \n\n\"I've wanted to do this all night.\" \n\nIt was a soft kiss, the passion behind their lips escalating it into a full on make-out session.",
        "His hands cupped her face, drawing her deeper into the kiss. \n\nKissing Arden was quickly becoming one of his new favorite activities Her lips were full and soft and made him a little dizzy. She captured his lower lip between her teeth and gently tugged, nibbling on his flesh and making him groan. All her little tricks, her sighs of satisfaction when his tongue slid inside her willing mouth...it drove him crazy. It was all so new to him, kissing someone who was sexy, fearless, and a little playful. He was definitely digging it. \n\nHis hands traveled from her hips around to the impossibly round curves of her derriere. He lightly squeezed the ample globes and she moaned into his mouth, her tongue exploring his taste. \n\n\"Mmm, are we going to do this all night?\" she murmured against his lips. Her fingers tightly gripped the shirt fabric at his shoulder as he moved his kisses to the curve of her neck. \n\n\"Why do you ask?\" he rumbled into her skin. \n\n\"Ohh,\" she breathed. \"Because we should move to a place where I can sit down. You keep kissing me like that and my knees will give out.\"\n\nGrady smiled, bringing his lips back up to meet hers in a simple peck. \"You okay?\" he asked. \n\n\"Mmm-hmm.\" Her eyes were bright with lust and it made him swell with manly pride. She was so pretty, and those doe eyes of hers would be his undoing. It'd been so long since he felt this stable with someone. He still wasn't sure what they were officially doing, but there was a level of comfortable in their relationship that soothed his spirit and put him at ease. \n\nGrabbing his hand, she led him past the living room and down the hallway into her bedroom. It was dark, save for the tiny twinkling lights above her bed. Coupled with the tree branches that served as the bed posts and the sheer gauzy curtains, it still had that 'fairy forest at midnight appeal'. \n\nArden turned to him, casting a shy smile in his direction. \"Are you okay?\" she asked.\n\nHe nodded. \"Actually, I think I am.\" And he was. His mind was completely clear of anything except for her and this moment. \n\nShe stepped closer to him, sliding his hands around her waist and he let out an audible gulp. Her eyes met his and she smiled. \"We don't have to do anything more than this,\" she husked, lips pressing against his in another gentle kiss. They traveled to the bed, lips still moving together. \n\nGrady sat down, bringing her to rest on his lap. \n\nThere was a familiar burn in his body, a sensation he thought was long gone. He had the urge to do more, to go further in his exploration of her. Unlike the last time they were intimate, the panic of being close to another woman was lessened considerably. Lessened, but not completely gone. \n\nWhen her hands clutched at his dirty blond curls, he had a flash of deja vu. Grady jerked, moving away from her lips. \n\nArden studied him quietly, her eyes filled with concern. \"What's wrong?\" \n\nGrady shook his head. He didn't know what to say or how to explain to her that pulling his hair was a trigger for him. He really didn't want to bring up Edie, especially given his current location. \"It's nothing,\" he replied. \n\nHe saw that look in her eyes, like she didn't believe him at all, and he hoped she wouldn't push the subject further. But then again, this was Arden. \"Did I do something wrong?\" There was a gentle vulnerability in her tone. \n\nGuilt washed over him and he wrapped his arms around her waist, lips brushing softly against hers. \"No,\" he reassured. \"I guess I got a little freaked out when you touched my hair.\"\n\nArden frowned in confusion. \"Your hair? Really?\"\n\nGrady hid his face in the crook of her neck, his blond scruff scratchy against her smooth skin. \n\n\"This is really stupid, and kind of embarrassing...but it just triggered some memories for me.\"\n\n\"Oh,\" she murmured. She still had that same quiet tone to her voice, as if she was walking on eggshells around him. \"Memories, as in stuff about Edie?\"\n\nHis blue eyes met her gaze and he nodded. \"Yeah. Fuck, I'm sorry. Up until that point, I wasn't even studying anything about her. I really wasn't trying to ruin the moment.\"\n\nShe reached out, cupping his face in her hands as her eyes studied him. \"You're not the only one with triggers, Kade.\" Her smile was sad and it clenched his chest something awful. \n\n\"You know...you can open up to me, too\" he said. \"I can't be the only one always swimming in an ocean of feelings.\"\n\nArden smiled, kissing his cheek. \"I know. Thank you for offering.\" Her lips touched his again and she wrapped her arms around his neck. \n\nHe noticed she didn't actually offer any kind of explanation, but he wasn't going to press her on the subject, especially since she was really understanding about this Edie business. Grady tilted backwards, his upper half resting back on the bed, bringing Arden with him. Her strong thighs straddled his hips, gripping him tightly and he groaned. \n\nHer hips shifted a little, the warmth at the apex of her thighs coming into contact with his growing erection. Her dressed was bunched around her hips and the heat coming from her pussy made him ache. \n\nGrady's hand gripped her thigh tightly as his other hand traveled to the warmth between her legs. Fanning out his fingers, he cupped her sex, giving her a slight squeeze. \n\n\"Oh,\" Arden moaned, her breath hot and sweet against his skin. \"Do that again.\"\n\nHe obliged, squeezing a bit harder this time and she whimpered. \"You like that sweetheart?\" he cooed, his voice thick with lust. \n\nShe groaned softly, nodding her head. \"Yes,\" she breathed. Her lips crushed against his, their kisses heated and almost messy. Arden pressed her pussy tighter into his hand, practically grinding against his palm. Her breathy whimpers made him shiver. \n\nGrady pressed the heel of his hand against her clit and she cried out. She rode his hand harder as her legs opened slightly to give him access. He was tempted to dip his fingers inside her wetness, but something held him back. Besides, she was so close to her climax just from dry-humping alone. \n\n\"Oh fuck,\" she moaned. Her hands gripped his biceps tightly as her whole body began to tremble. Grady reach up, his teeth nipping gently at her earlobe and she uttered a sharp cry as she hit her peak. He could feel her juices leaking against her panties and his mouth watered for a taste of her. \n\nArden's breathing was steadying as she tried to come down from her orgasm. He peppered her face with gentle kisses as his hand continued to rub and squeeze her pussy through her panties. \n\nShe hid her face in his neck, and he could feel the heated flush of her cheeks. \"Are you okay,\" Grady whispered. His hand moved from her hips to around her waist, gripping her tightly to him. \n\n\"Yeah,\" she replied. She was breathing heavily and he could feel her heart racing. \"I just...that was kind of unexpected.\"\n\nGrady chuckled. \"I'll say. I guess it's just payback from our first encounter.\"\n\nArden grinned as she pressed her lips to his in a soft kiss. \"I guess so. It's just been awhile since...you know...\" her sentence trailed off. \n\n\"Since someone else made you come?\" he supplied, purposefully choosing those words. He got the response he was looking for when a low moan filled his ear. \n\n\"Something like that,\" she said. Her hips gave an involuntary thrust and he closed his eyes against the sensation. \n\nHe was so conflicted; his body was revved up, screaming at him to move forward, but he couldn't seem to dead the lingering doubts. He was starting to suspect his hesitation wasn't about Edie, but with himself. Once he crossed that line with Arden, there'd be no going back. And for once, he was actually enjoying the relationship he had with a woman. There were no expectations, no 'where is this going' feeling. \n\nIt felt really natural, being whatever they were. \n\nAnd it was scaring the hell out of him. \n\nAs if she could feel him tensing underneath her, Arden rolled off him before cuddling to his side. \n\nGrady stroked her hair, placing a gentle kiss on her forehead. \n\nShe closed her eyes, savoring the feeling. \"Are you going to tell me what's wrong?\" she asked; her wide brown eyes filled with concern. \n\nHe shot her a weak smile. \"I think I'm just living too much in my head, you know? I think so much, about every detail of my life, and it's like I'm not giving myself a break at all. Sometimes it's fucking exhausting.\" Grady wrapped his arm around her waist, bringing her closer. \"I like you, Arden. Clearly from this case of blue balls that I'm currently sporting. I'm not sure how to progress things, or if I even want to at all.\"\n\nArden was quiet for a moment. Her slim brown fingers stroked the exposed skin from where his shirt lifted up, tickling the soft dirty blond hairs of his happy trail. \"I know what you mean,\" she finally said. \"I like you too, Grady. Probably more than I should, given your situation. But I guess I just see how much we have in common and it speaks to me. We've both been hurt, and that hurt is still fresh.\"\n\nHer eyes met his and he could tell she was almost at the point of tears. But she quickly shook her head and continued on. \"I'm not asking for any more than what you're willing to give. And I'm hoping you feel the same.\"\n\nIn lieu of answering, his lips captured hers in a deep kiss. Their tongues danced playfully, teeth nipping, lips sucking. It was overwhelming but felt so right and when her hands moved lower, sliding inside his jeans and boxer briefs to fist his cock, he moaned into her mouth. \"Arden,\" he bit out as his eyes rolled back. \"You don't have to do that.\"\n\nShe smiled, running her fingers down the length of his smooth shaft. He was so hot and heavy in her hand and she gripped him with the right amount of pressure. It'd been a long time since he had a woman's touch on his body. Grady inhaled sharply when she started to stroke him faster. \n\nHer kisses moved to his neck, biting and lapping at the sensitive skin under his jawline, her smooth cheeks rubbing roughly against his scruff. Grady unbuttoned his jeans and pushed them off his hips a little, giving her more room. He brought her closer to him, palming her ass with one large hand, moaning at the sensations of her softness gripping his cock, and the wet heat of her panty-clad pussy rubbing against his leg. \n\n\"Fuck, baby yes,\" he growled. \"Harder. Yeah, just like that. Mmm.\" He couldn't hold back. It felt so fucking good. Brief images flashed in his mind of him fucking her from the back, his pale hands rubbing the luscious curve of her ass before giving a hard slap to each cheek. His mouth watered as he imagined tasting her pussy, licking her cream from her thighs as she cried out his name. \n\nGrady's breathing grew heavier as her hand moved faster and he came with a deep grunt, coating her hand and a bit of his stomach with his essence. He grabbed her chin, lifting her face to his for a kiss that made his toes curl. \n\nArden moaned, pulling away for a moment, only to bringing her hand to her lips. Her pink tongue snaked out, licking her fingers clean. \"Sweet,\" she said in an almost reverent tone. \"Like strawberries and pineapples.\"\n\nA low growl rose in his throat as his dick jumped at her words. \"Baby, I can't think straight when you say shit like that.\"\n\nShe smiled. \"Sorry. But you taste amazing. Must be all that healthy food you're eating.\"\n\nGrady chuckled as his heartbeat finally returned to normal. He accepted her lips once more, his tongue swirling gently with hers. His hand kneaded the soft flesh of her ass, while the other cupped her face. \n\n\"Jesus,\" she whimpered. She was still straddling his leg, grinding against the corded muscle of his thigh. \"I feel like a goddamn horny teenager.\"\n\nHe grinned, sucking on the tender skin below her ear. \"I know what you mean,\" he rumbled, his voice vibrating low in her ear. \"You keep rubbing against me like that, and I'm about ready to bust again.\"\n\nShe let out a loud laugh. \"Aww, poor baby.\" She placed a soft kiss on his chin. \"You're just so big and cuddly. Like a giant blonde bear.\"\n\n\"I'm gonna take that as a compliment,\" he said. \n\n\"With you, I can never tell.\"\n\n\"Oh it's definitely a compliment.\" Arden nuzzled his neck, taking in the woodsy scent of his cologne. \"You look really good, all big and burly like a lumberjack. The shirt helps too.\" She fingered the soft material of his black and blue plaid shirt. \n\n\"You're not too bad yourself, Finch. This ass...\" \n\nHe slapped it for emphasis, enjoying the small hitch in her breathing. \"I especially like watching you dance.\"\n\n\"Really?\" the look in her eyes was one of uncertainty, and he was puzzled. \n\n\"Of course; now I'm not an expert on dancing, but you are fucking stellar. You might be brash, sarcastic, and unfailingly obnoxious...\"\n\n\"Jeez,\" Arden interrupted. \"Don't hold back on my account.\" She poked him in the stomach. \n\nGrady smiled. \"But there's no denying how amazing of a dancer you are.\" The look on her face confused him; she seemed unsure of herself, and he wondered why. \"You don't seem to believe me.\"\n\n\"No, it's not that\" she said, shooting him a weak smile. \"I know that I'm a good dancer. It's just strange hearing those words from someone other than my girls or my peers. He thought dancing was a waste of time.\" The last part was said so softly, Grady wasn't sure he heard her correctly. \n\n\"He?\" he asked \"Who's 'he'?\"\n\nArden looked taken aback, and Grady assumed she thought he didn't hear her. \"What?\" \n\n\"You said 'he' thought dancing was a waste of time, and I asked who 'he' was.\"\n\n\"It...it's nothing,\" Her full lips set into a firm line. \n\nGrady studied her for a moment, picking up on the defensiveness in her tone and the way her body slightly shifted away from his. \"It's clearly far from nothing,\" he stated.\n\nShe shot him a look, before sighing heavily. \"He was my Edie. And he was an asshole.\" There was an undercurrent of bitterness in her words which shocked him. He'd never heard her sound so...broken. \n\nHe was silent, waiting for her to continue. \n\n\"We dated for nearly three years. He hated dancing; said it was a foolish hobby that wouldn't amount to much in the end. He was constantly discouraging my dreams and trying to force me to find a 'worthwhile career'.\" Her voice was hard and she chuckled bitterly. \n\n\"Dancing isn't a career for me; it's my fucking passion. The one thing I wake up in the morning for. But he was too focused on building the perfect life and grooming some sad, desperate woman into a future housewife. Dancing didn't fit into that life.\"\n\n\"What happened?\" Grady whispered, even though he knew what was coming. \n\n\"While he was busy grooming me, he was fucking another woman. Guess she already fit the mold.\" Her eyes were glassy, and he cuddled her closer to him. \n\n\"I'm sorry, sweetheart\" he said softly, kissing the top of her head. \n\nHe heard her sniffling into his chest, and he tilted her face to his. \"It's been over a year since it happened,\" she said, giving him a watery smile. \"He's married to her. They have twin boys. \n\nGuess I really fucked up those chances.\"\n\nGrady frowned. \"Do you regret not taking him back?\"\n\nArden was quiet for a moment, her plump bottom lip caught between her teeth as she pondered his question. She let out a small sigh. \"No. I think in the long run, we would have been absolutely miserable together. But sometimes it's easier to accept the misery than to face the unknown. At least that's what I thought back then. I'd like to believe I know better now.\"\n\nShe glanced up at Grady. \"So you see, Kade...I know exactly how you feel. We're both on the Island of Relationship Misfits.\"\n\nHe chuckled at her dark humor. \"It would seem so.\" He brought his lips to hers, pressing them together in a soft kiss filled with understanding and all the emotions and sympathy he was too afraid to say. \"Thank you for sharing your story with me,\" he said, his voice gravelly. \n\nArden smiled, kissing him again. \"Thank you for being so understanding. Us rejects have to stick together.\"\n\n********\n\nGrady awoke to the sounds of music playing faintly somewhere in the distance. He lifted his head from the pillow, which smelled of night jasmine and honeysuckle, slightly opening one cerulean-colored eye. \n\nThere was a brief moment of 'where the fuck am I?' before the last night came back to him in a wave of flashback. Kissing, touching, rubbing. \n\nArden. \n\nHe was at Arden's place. \n\nRolling over onto his back, he realized he was alone in the bed. Grady sat up, rubbing the brownish-blond scruff on his face. He shirtless and pants-less, clad in nothing but red boxer briefs. Swinging his legs around the side of the bed, he rose and followed the sounds of music. It was coming from the kitchen. \n\nGrady padded down the hallway and peeked his head into the brightly colored kitchen. She was wearing his plaid shirt, and as far as he could tell, nothing else. \"Well at least I know where my shirt went,\" he said, his voice still rough with sleep.\n\nArden, who'd been at the stove stirring something in a pan, jumped at the sound of his voice. \n\n\"Jesus!\" she exclaimed, pressing a hand over her heart. \"You scared the hell outta me.\"\n\n\"Sorry,\" he said sheepishly. \"I kinda woke up in a daze. I don't even remember falling asleep last night.\"\n\nShe smiled, and he couldn't help the flutter in his stomach. Her face was completely scrubbed of makeup, her smooth dark brown skin practically glowing. Her loose curls were piled on the top of her head in a sloppy bun. And she was wearing the hell out of his shirt. She was so damn pretty. \n\n\"Well, it was really late for you to head out, so I suggested you stay the night.\"\n\nGrady nodded. \"Oh yeah, it's coming back to me now. I was a bit knackered out from all out extra activity last night.\" He grinned madly at her and she ducked to hide her own wide smile. They'd spent another two hours talking about any and everything. Between stories there were fervent make-out sessions and a whole lot of rubbing and grinding. \n\nHe felt like a damn teenager, with all the fingering and handjobs, but it was thrilling at the same time. Arden walked over, planting a kiss on his lips. She attempted to turn back to the stove, but he grabbed her arm. Grady's lips slanted over hers, his tongue licking her plush lips, seeking entry. \"You taste so good,\" he murmured. \n\nArden chuckled, her hands pressed against his bare chest as she pushed him away. \"And you taste like morning breath,\" she joked. \"I have a couple of spare toothbrushes in the bathroom cabinet. Make friends with one of them.\"\n\nGrady rolled his eyes. \"Ouch, Finch. That hurts. But as you wish.\" Giving her a sharp slap on her ass, he headed towards the bathroom. \n\nAfter quickly brushing his teeth, Grady caught a glimpse of himself in the mirror. What a difference a few months make, he thought to himself. His body, while not as muscular as before, was solid and burly but in shape. His arms had definition and the spare tire around his stomach was almost gone. \n\nHe felt like a new man. \n\nAlmost. \n\nGrady frowned. Something was holding him back. He could feel it. Something was in the way of his progress. His eyes focused on his reflection as realization hit him like a freight train. \n\nThe hair. \n\nHe reached up, fingering the shaggy, corkscrew curls. His hair wasn't the end-all source of his misery, but it was the last leftover relic from his time with Edie. It was her favorite thing about him, the one thing he hadn't changed. Maybe that was it; the reason things couldn't move forward. He hadn't rid himself of everything, not yet.\n\nWhen he left the bathroom, he found Arden seated in the living room watching television, two plates of food on the coffee table. \n\n\"There you are,\" she said. \"I thought you were taking a dump.\"\n\nHe rolled his eyes before plopping down next to her on the couch. \"You are such a classy broad.\"",
        "She shrugged. \"I do what I can. I made you breakfast.\" She pointed to the plate consisting of sausage, egg, and cheese on a toasted bagel. \n\n\"I see that,\" he said, grabbing the plate. Grady gave her a quick kiss before shooting her a crooked smile. \"Thank you.\"\n\nArden ducked her head. \"You're welcome.\"\n\nThey ate in comfortable silence while watching Firefly on TV. Grady set the empty plate back down on the coffee table and glanced over at \n\nArden. \"I want to cut my hair.\"\n\nShe shot him a look, attempting to finish chewing before responding. \"Now?\"\n\n\"Today, at least. Figured I'd make an appointment at the shop. Wanna come with?\"\n\nShe took a large swallow of her orange juice. \"No need to make an appointment. I'll do it.\"\n\nGrady cocked an eyebrow in disbelief. \"You?\"\n\n\"Me,\" she replied simply. Arden put her plate on top of his and turned to face him. \"Surprised?\"\n\n\"A little. You cut hair?\"\n\n\"I worked at my aunt's salon all through high school and college. I know all about hair.\"\n\nHis blue eyes studied her. \"You really are something else, Finch.\"\n\n\"I'll take that as a compliment,\" she said. \"So do you want my help or not?\"\n\nIt was Grady's turn to shrug. \"I guess. It'll save me fifty bucks.\"\n\nArden snorted. \"Fifty bucks? For a haircut? Sweetie, someone is gouging you.\"\n\nHis stomach did that funny flip again at the sound of her calling him 'Sweetie'. It was always \n\n'Grady' or 'Kade'. He wasn't sure why, but it kind of made him all warm. \"A good haircut is well worth it.\"\n\n\"Well I won't charge you that much,\" she said. \n\n\"Oh? How much are your service, Miss Finch?\" His grin was flirtatious and he capped it off with a sly wink. \n\nArden bit her lip to keep from smiling. \"You'll just have to wait and see, Mr. Kade. Now go fetch me one of the chairs from the kitchen table. I'll go get my supplies.\" She rose from the couch, giving him a flash of her sweet pussy and Grady couldn't help but groan. \n\nIt made him think of last night, his fingers thrusting deep inside of her wetness, making her come so hard she actually squirted. That caught him off-guard, but he quickly recovered. He tasted her juices, but still hadn't feasted directly from the source. The thought of sucking and licking her juicy snatch made him a bit lightheaded. \n\nBy the time she returned with an armful of stuff, he was sitting comfortably in the straight-back chair. Arden placed a bunch of items on the end table next to the couch and draped a bright yellow towel around his bare shoulders. \"How short are we talking?\" she asked\n\n\"I don't want a military cut,\" he said, running his fingers through his dirty blond curls. They were about midway between his jaw and collarbone and fanned out like a shaggy, surfer halo. \"I'm just over this beach bum look.\"\n\n\"I agree,\" she said. \"But cutting all of this off...are you absolutely sure?\" She titled his chin up, their eyes meeting. \n\nGrady was silent for a moment before nodding. \"I'm sure. Crop it close, but not too close. Short and tight on the sides, and fluffy on top.\"\n\nArden grinned. \"Sounds good.\" She pressed play on the iPod dock in the living room, letting the sounds of Best Coast soothe him into a comfortable state. \n\nShe hummed along quietly with the music; her sweet voice, coupled with the soft snipping sound of the hair shears made him feel completely relaxed. Grady shut his eyes, enjoying the feel of her fingers in his hair. He was jumpy at first, but after a few deep calming breaths and several reminders that she wasn't Edie, he felt at ease. \n\nHe opened his eyes, and noticed the tufts of his former curls on the towel around his shoulders and on the floor. It was weird, but he felt lighter, his head and his heart. He glanced up at her when her heard the buzzing sound of the electric clippers. \n\nArden planted a soft kiss on his forehead. \n\n\"Relax,\" she said. \"I'm an expert.\"\n\nGrady laughed. \"So you say.\" He settled back against the chair, his eyes closing once more. The buzzing and the sensation of the clippers moving around his scalp made him feel kind of sleepy. He listened to her humming and singing until it seemed like no time at all, the noise stopped. \n\nArden set down the clippers and removed the towel from his shoulder, balling it up so the hair wouldn't fall on the floor. \"All finished,\" she sang out. \"Go check it out while I tackle this mess.\"\n\nHe got up from the chair, his head feeling much lighter. It was weird not having his hair in his eyes or ticking his shoulders. Grady flicked on the bathroom light and stepped inside. \"Holy shit!\" he exclaimed. \n\nShe was a fucking genius in the hair department. \n\nIt was exactly what he wanted. The sides were short, and the curls at the top were a little longer and gave him a sort of fluffy faux-hawk look. He ran his hand through his shorn style, admiring it from every angle. \n\nThe guy staring back at him in the mirror...that dude looked awesome. Grady smiled. This...this definitely felt like change and progress. \n\nWhen he came back into the living room, everything was clean again. Grady sat down again in the straight-back chair. \n\nArden appeared, a knowing grin on her pretty face. \"You like?\" \n\nHe nodded. \"Definitely. Thank you, Arden.\"\n\nShe ducked her head, a shy smile ghosting her lips. \"You're welcome, Grady. I just wanted to give you a fresh start. You've gone through so much, and you've been working so hard and making great progress. I could tell that your hair was frustrating you.\" \n\nGrady shook his head. As usual, her scary analysis of his feelings and fears were spot on. \n\n\"I don't know how you do that. Read me so well.\"\n\nShe lifted her shoulders in a careless shrug, her fingers fiddling with the cuffs of his plaid shirt. \"I know what you're feeling, because I have those feelings too.\"\n\nHer words touched something in him. A sharp feeling crept into his chest, making him sigh. He didn't realize he was watching her so intensely, until she stepped forward, her fingers brushing his scalp. Grady sighed once more, leaning into her touch. \n\n\"You're so beautiful,\" she whispered, her fingers grazing his features, tracing his lips, stroking his cheeks, gently trailing over his scruff, before cupping his face. \n\n\"So are you,\" he said, his voice much deeper. He reached out, hands gripping her hips to pull her closer. He opened his legs wider to accommodate her. Grady's hands traveled, cupping her ass and forcing her ever forward. Her hands were back in his hair and Grady leaned in, nuzzling the exposed patch of stomach. She had a dancer's body, all long limbs and tight muscles, but there was a curvy softness to her that was extremely enticing. \n\nHe could smell her arousal, the sweet scent of her pussy calling out to him. He dipped his head lower, lips trailing softly over her silky skin. \n\n\"Arden,\" he said, his voice dangerously low. \n\n\"Grady,\" she breathed, her voice unusually soft. \n\nGrady lifted his eyes to meet hers, even as he moved lower to her pussy. \"Let me taste you?\"\n\nShe nodded, her chest heaving with anticipation as she planted her feet wider. \n\nThat scent called to him, and he was happy to respond. He pressed a gentle kiss to her smooth outer lips, admiring the way her completely bare pussy glistened with her juices. When his tongue darted out for the first taste, she sighed. \n\nHis hands cupped her ass once more as he dove in, his skilled tongue swirling around her clit. He alternated between licking and sucking the little bundle of nerves, a move that had her knees practically buckling. She was so wet and her taste was absolutely unreal. Her nectar was sweeter from the tap and he was feeling drunk from it. \n\nHer hips bucked as she practically humped his tongue. Her cries of pleasure were soft and breathy and when she called out his name, he felt his dick twitch. Grady rubbed himself through his boxer briefs as his tongue fucked her tight little hole. \n\nShe was louder now, her fingers in his hair and he could feel her knees getting weaker. It was a wonder she was even still standing. When he added a single finger, she gave a sharp cry of his name and climaxed, her juices flooding his mouth. \n\nGrady lifted his head, his finger still moving in and out of her wetness. \n\n\"Grady,\" she moaned. Her hands moved to his shoulders for the extra support. \n\n\"C'mere,\" he said. He moved his hand, bringing her down to straddle his lap. Her soaking pussy brushed against his hardness and he groaned. \n\n\"Fuck. You taste so good, Arden. Wanna try?\" \n\nHe brought his finger to her lips and she sucked it slowly, swirling her tongue around the tip before licking her lips. \"Jesus,\" he breathed. \n\nShe crushed her lips to his in a deep kiss full of tongue and fervor. Grady unbuttoned his shirt, pushing the material off her. He gazed at her breasts, admiring their fullness and the twin peaks of her dark nipples. \n\nGrady lowered his head, taking one into his mouth. \"Ohh,\" she cooed, cupping the back of his neck. Her hips thrust tightly against his cock and he bit down gently on her nipple. \"Ahh! Grady.\" \n\nHe continued to suck and tease her nipples, his eyes never leaving hers. He knew she was begging for some kind of release, and he realized he didn't want to torture them both any longer. \n\nApparently Arden had the same idea. She reached between their bodies, into his briefs and pulled out his thick cock. \"Grady, please\" she moaned. \n\nHer soft fingers stroked his shaft and he groaned. \n\n\"You ready, baby?\" he bit out. \n\nShe nodded. \"Yes.\" \n\n\"Put me in,\" he begged. She gripped his dick at the base, lifting her hips slightly. He could feel the heat of her pussy on the tip and it was driving him crazy. \n\nIn one smooth motion, she impaled herself on his cock, and they both cried out. \"Oh my god,\" she moaned as her hips began to gyrate. \n\nGrady's hands gripped her hips, controlling the speed of her movements. Her greedy little pussy was like a vice; she was tight, hot, and so unbelievably wet. She felt like velvet and it was simply amazing. He missed this feeling. \"Goddamn baby,\" he growled. \"This pussy...\"\n\n\"Is it good?\" she teased. \n\n\"Fuck yes,\" he groaned. His hips met hers in hard, powerful thrusts that had them both moaning loudly. \n\nArden tilted back, bracing her hands on his knees as her hips swayed. \n\n\"Ooh, just like that,\" he commanded. \"Dance on that dick, sweetheart. Fuck, you're so good.\" He nibbled on the underside of her breast, eliciting a breathy moan from her. \n\nShe fell forward, their lips meeting in a frenzied kiss. Her hips picked up speed as she bounced and squeezed his dick. His hands went to her ass, alternating slaps on each cheek. \n\n\"Oh, Grady\" she moaned. Her breathing was high and sharp and he could feel her legs beginning to tremble. \n\n\"You almost there, Arden?\" he whispered in her ear. Grady nipped and sucked at her earlobe, smiling when her nails dug into his shoulders. \n\n\"Yeah. Oh I'm gonna...oh fuck.\" She kissed him hard, biting down on his lip as she slammed into her climax. \n\nHer pussy's vice-like grip tightened even more, pushing Grady over the edge of pleasure right with her. He came with a low growl, his hips thrusting hard into hers. \n\nShe was shaking, holding on to him for dear life, her arms wrapped around his neck as she rode out the aftershocks. \n\nThey were both breathing heavy, heartbeats racing. Grady kissed her cheeks as his hands rubbed soothing circles on her back. After a few moments, she kissed him back, her tongue licking at the sore spot she caused when she bit his lip. \n\nArden was the first to break the silence. \"Wow.\"\n\nGrady chuckled, nuzzling his face into her neck. \"Yeah. I blame the new haircut.\"\n\n********\n\nSo much has happened. For the first time Readers...I think I'm finally on the right path. There are still traces of doubts, remnants that will no doubt be here for a while. I'm still traveling on this road to recovery. But now I have someone who's been through this journey and lived to tell the tale. She's strong, and her support...it's just everything.\n\nIt's too soon to say how things will turn out. But this feeling, burning inside of me...it's hope. And it feels really good. \n\nSorry to keep this short, but I'm saving my words of wisdom for my appearance on the Dahlia Monroe web radio show. Be sure to check it out. "
    ],
    "authorname": "nerd4music",
    "tags": [
        "drama"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/getting-over-edie-ch-06"
}