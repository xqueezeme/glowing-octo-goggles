{
    "title": "The Eighth Warden Bk. 04 Ch. 19-20",
    "pages": [
        "Chapter Nineteen\n\nThe western edge of the Terril Forest ended abruptly, the lands beyond having once been cleared for farming. Those fields were overgrown now, with weeds, brush, and small trees that had sprung up after the humans abandoned the area over fifty years earlier, but there was still a stark divide between the former crop lands and the tall tershaya lining the border.\n\nShavala peered up at the sky through the spyglass she'd taken from a dead mercenary at Tir Yadar. The tiny dot above her was certainly no bird, but it was difficult to track a moving target with the glass while simultaneously adjusting the lenses.\n\nThere was a faint brush of a footstep behind her, and she turned to find Dalanis, leader of one of the ranger patrols based at the western border camp.\n\n\"Is that it?\" she asked him, pointing.\n\nHe glanced up. \"Yes, it flies this way a few times each week. Meritia asked me to find you. The group that visited the human village has returned, so the elders are calling everyone together.\"\n\nShavala nodded and followed him back to the large temporary camp that had been assembled under cover of the forest. The conclave had been gathering for two weeks, scouting the western border and discussing the problem in small groups, but this would be the first time they all met together.\n\nShavala herself had only been there for a day. She and Meritia had stopped in Terrillia along the way and waited to escort the final group of druid elders on the journey.\n\nFrom Terrillia, they'd headed west, passing through the western border camp, then continuing on to the border itself. Now, eighty druids had gathered together in one location, including all of the elders who were capable of traveling. Over two hundred rangers had accompanied them, though most had been deployed along the border to watch for the dragon.\n\nBack at the temporary camp, the elders had arranged themselves cross-legged on the ground in a loose circle. Younger druids were farther out and higher up, standing or sitting on rocks or fallen tree trunks so they could see what was happening.\n\nShavala joined them, climbing a tree and sitting on a low branch next to a young man whose name she didn't know. She gave him a quick smile, but before she could introduce herself, Gylvaren started speaking. He wasn't the most senior of the elders, but as the leader of the western border camp, he was the one who'd called the conclave.\n\n\"We all know why we've come together,\" he started. \"Some of you have had the opportunity to view the burned remains of the nearest human settlements. Others have seen the dragon with your own eyes. A threat has come to the Terril Forest, of a sort we haven't seen in many years. The danger is only potential, not yet realized, but the dragon is now flying nearly a hundred miles into our borders on a regular basis. We must decide whether we will take action.\"\n\n\"Has it made any move against the forest?\" Elder Nariela asked, her graying hair tied in dozens of youthful braids.\n\n\"It sometimes lands in a clearing, and twice it's been observed to take an unlucky deer. Usually, it just flies over. The tree canopy seems to prevent further incursion.\"\n\n\"It's a living creature. It's not our place to stop it if it chooses to hunt a few deer. Even humans are allowed to hunt here as long as they stay beyond the outposts.\"\n\n\"The dragon's behavior suggest it's seeking to expand its territory,\" Gylvaren said. \"What if it decides the western forest belongs to it? Already our rangers must keep a careful watch at all times in case it flies overhead. The next time it hunts, it may not be a deer that it takes.\"\n\n\"In Cetos, the people live in balance with dragons,\" said Zhailai, one of the more well-traveled druids, speaking out even though she wasn't an elder. \"Can we not do that here?\"\n\nOld Arvillin, who'd taught Shavala to call fire, made a curt chopping motion with his hand. \"Cetos has beasts of great size for the dragons to hunt,\" he said. \"The dragons are drawn to the regions where those creatures make their homes. The people who live in that area understand the risks.\"\n\n\"We've not all come together to fight back an intruder for hundreds of years,\" said an elder Shavala didn't recognize. \"Not since the last time the humans tried to invade the forest. What we did then, I will always regret. I advise caution in our approach. A measured response.\"\n\n\"But what if it sets fires?\" someone called from the outermost circle, causing a discordant sensation within the tree bond. Up until that point, only the elders and the most senior of druids had spoken. \"We can't allow it to burn the forest.\"\n\n\"It's winter,\" Meritia replied from where she was sitting with several other senior druids just outside the circle of elders. \"The woods are too wet to burn, and we can summon more rain if we need to.\"\n\n\"Can we convince it to leave the area?\" asked another of the elders. \"Or at least return to its original territory?\"\n\n\"We can't speak to dragons,\" Gylvaren reminded the man.\n\n\"No, but perhaps someone from Cetos knows another way to communicate with it. Luring it away, perhaps?\"\n\n\"I doubt luring it away will work if it's expanding its range,\" Gylvaren said. \"It already returns regularly to its lair at the human's trade keep. Where else could we convince it to go?\"\n\nThe elder who'd pushed for caution spoke up again. \"The dragon hasn't attempted to harm the forest or our people. We must allow it to follow its natural law.\"\n\n\"Natural law applies if it's not harming thinking beings or unbalancing an ecosystem,\" one of the senior druids protested. \"What about the humans it's killed in the free lands?\"\n\n\"It's neither our place nor our duty to protect the humans.\"\n\nThe man sitting next to Shavala spoke up. \"What about the elven villages in the free lands?\" he called out. \"Shouldn't we protect them?\"\n\nShavala had learned of the dorvasta settlements outside the forest from a leatherworker in Tyrsall, but judging by the quiet murmuring throughout the younger members of the crowd, it seemed not everyone knew. The elders went stone-faced.\n\n\"They chose to leave the safety of the forest,\" Nariela said. \"They've made it clear they don't want our protection.\"\n\n\"Most are to the south or east, to avoid drawing too much attention,\" said Tovali, another of the elders, directing her comments to those who hadn't been aware of the villages. \"I don't know of any to the west.\"\n\n\"There was one once, but they relocated when the dragon first came to the free lands,\" Gylvaren said in reluctant agreement.\n\nAs the newest full druid, it wasn't Shavala's place to speak up, but her friends were in the free lands already. They would be on their way to Four Roads. Did they know about the dragon yet? Were they in danger?\n\nShe ignored the tree bond's urge to keep quiet. \"Are human villages any less deserving of protection than our own?\" she asked.\n\nThe elders kept their faces expressionless after that remark, but they couldn't mask their unease from the tree bond. There was a moment of silence as uncertainty rippled through the crowd.\n\nBut then the man who'd argued against taking action spoke once more. \"Within the forest, natural law is clear,\" he said. \"Outside the forest, the humans will protect their own kind. They've fought dragons before, and they wouldn't welcome our intrusion into their lands.\"\n\nThat was true enough, and the unease faded as consensus was reached. The discussion continued, with plans to position druids along the border to watch for fires or any sort of attack, but everyone knew a decision had already been made.\n\nGylvaren kept quiet. He watched the proceedings with a look of disapproval, but appeared unwilling to fight against the accord achieved within the tree bond.\n\nWhat would Shavala's friends do when they learned of the dragon? Would they continue on to Four Roads?\n\nWhat should she do?\n\n#\n\n\"We now have two thousand soldiers and fifteen hundred mercenaries deployed to the northern border, Your Majesty,\" Field Marshal Tregood said. \"Those numbers include our standard garrisons as well as the reinforcements. And, of course, there are nearly two hundred knights at Fort Northtower, though they run their own patrols.\"\n\n\"Is there any news out of Blue Vale?\" Rusol asked.\n\n\"Our scouts report that they're still recruiting soldiers, but... it's Blue Vale, Your Majesty. They don't have the numbers to attack south. We can block the pass at Northtower with just the knights and the local garrison, and if they try a different crossing, we'll have time to move our troops around.\"\n\nThat matched Yassi's visions.\n\n\"What do you think they're doing?\"\n\n\"I couldn't say, Sire.\"\n\n\"If you had to guess?\"\n\nTregood pursed his lips. \"With Leonis dead, they might feel they need a stronger military to guard against the barbarian clans. They may not be looking south at all.\"\n\n\"Perhaps you're right, Lord Tregood, but let's leave the reinforcements in place until we're certain.\" That sounded like a sufficiently kingly thing to say.\n\n\"Yes, Sire. Now, along the eastern passes...\"\n\nThe field marshal continued to drone on about troop dispositions, but Rusol had heard it all before. He stared out the window, across the garden, to where stonemasons were working to repair the section of the ramparts that had been destroyed in the lightning blast. Rusol remembered swinging his blade, but he couldn't remember if it had connected before the lighting bolt he'd accidentally called down had struck, hitting both him and Sharra. His divine protective spells had snapped into place just in time, protecting him from his own elder magic as well as from the twenty-foot drop to the gardens below. His mother had been killed instantly.\n\nThe royal guards on duty the day of the coronation were all part of the group that regularly watched over the family's quarters. Over the years, Marten had influenced them to keep quiet about any magic they saw, and Rusol had reestablished his father's fading compulsion spells in the weeks before the coronation. When the men from the nearest guard towers had rushed down to check on what had happened, it had been easy enough to make them forget Rusol had been on the battlements, convincing them his mother had gone up alone. Coming so soon after his father's death, it seemed prudent to avoid any awkward questions that would come up if anyone knew he'd been present when his mother died.\n\nSo far, it was working. Most people seemed to believe Sharra was killed by a sudden and unexpected lightning storm. There was some muttering about bad omens, but no one had suggested the presence of magic--other than Kolvi, of course, who'd sensed the storm forming. Rusol had told her the truth, and Yassi, but he hadn't decided whether to tell Merice. She deserved to know she wasn't responsible for her husband's death, but she'd still been duped into administering the fatal dose. The truth might just make things worse. And Merice wasn't in her right mind; if Rusol told her what had actually happened, he'd have to put her under a compulsion spell to keep her from talking. He couldn't do that to her--she was the last living member of his family.\n\nHis family. His father was dead, and his brother. His brother's mother was half mad with grief. Merice hadn't quite been a second mother to Rusol, but she'd always had sweets for him when he was growing up. There was little left of the woman he remembered.\n\nAnd his own mother. He should have felt grief for her death, but instead there was only a yawning emptiness in his gut when he thought about her betrayal.\n\nThe wardens hadn't killed Rikard. For five years, Rusol had believed the wardens had murdered his brother as a warning--coming so soon, as it had, after the First's threats. But it had been Sharra all along.\n\nDid it change anything, though? The First was a rambling lunatic, attacking Rusol in that strange dream, angered about a demonborn joining the ranks of the wardens. Leonis had been insane too, and mad with power. If his plan had worked, the Church of Pallisur would have ruled supreme throughout all the lands. He'd had to be stopped.\n\nThe wardens were dangerous, wielding too much power without any sort of oversight.\n\nBut they hadn't killed Rikard.\n\nA stray word caught Rusol's attention. \"Wait,\" he told Tregood. \"What did you say about a dragon?\"\n\n\"The dragon in the free lands, Sire, at Matagor's old trade keep. It's attacking farther out than normal. Four Roads sent a formal request for aid, but I turned them down.\"\n\n\"Shouldn't we do something?\" Rusol asked. \"The knights are trained to fight dragons.\" Though it had been over two hundred years since they'd last fought one, so the quality of that training was questionable.\n\n\"Yes, Sire, they are, but Sir Noris has looked over the old records, and he doesn't believe there's any way the creature will reach the kingdom. If it does, it'll hit Fort Hightower first, which has sturdy walls and defenses--an excellent spot from which to face it. Most likely, though, it'll stop somewhere in the hills.\" Tregood smirked. \"That should keep the hillfolk too busy to go on raids.\"\n\n\"And Four Roads?\"\n\nThe field marshal shrugged. \"They chose to live in the free lands. Half of them probably ended up there on the run from the law. I don't see any reason to spend the lives of our men to protect them. I'd advise that we allow Matagor to handle it. Its their keep.\"\n\nRusol frowned. Wouldn't that give Matagor more influence in the region?\n\nThen again, Marten had always stressed that the king's role was to protect Larso and its own citizens, not their neighbors. Currying favor with the free lands was pointless--it was the weakest region in the north, with no government larger than a town council. What could they offer?\n\nRusol nodded. \"Very well. Let Four Roads fend for itself, but check with Sir Noris that the knights at Fort Hightower are making preparations in case the dragon does reach us. Ask him to send a detachment of a hundred knights from Telfort to join them.\"\n\n\"Yes, Sire.\"\n\n\"Do you have any other news for me today?\"\n\n\"No, Sire.\"\n\n\"Then I have one last order for you.\" Rusol laid his hand on the man's shoulders and quickly layered in the levels of the newest hunter compulsion.\n\nRusol had made a mistake before. He'd taken control of every knight at Fort Northtower. Then, after learning that the newest warden had returned to Aravor, he'd created a new unit of hunters among the mercenaries so they'd be ready if he needed them.\n\nBut he'd gone about it all wrong. Even the strongest demonborn faced limitations on the numbers they could influence, and with the priests, the knights, the hunters, the royal guards, and the family's servants, Rusol was rapidly approaching his limit.\n\nControlling the individuals was a waste of power. The way to control the masses was to control the leaders.\n\nField Marshal Tregood was in overall command of Larso's army, and he even had oversight of the mercenary army, though the mercenary commanders also reported directly to Rusol. While the knights and the lords would step in during times of war to coordinate units of soldiers, particularly as the army swelled to include conscripts and the lords' own guardsmen, in peacetime the entire chain of command led to Tregood.\n\nInfluencing him and a few other key officers would give Rusol more complete control over the army than he had even as king.\n\nTregood's eyes flashed red, then returned to their natural color. He shook his head and blinked as the spell took hold. \"Yes, Your Majesty?\"\n\n#\n\nMelithar pushed the stack of papers aside and rubbed his temples. It had been months and he hadn't made any further progress on his investigation into the assassination attempts against the royal family.\n\nRetavin di'Yedda had maintained until the end that he'd worked alone, but the man was too stupid to have masterminded the whole thing. There was a strange dichotomy between the careful planning surrounding the assassination attempts versus the careless execution of those plans. Retavin had been questioned under the truth spell, but Melithar had seen him nearly resist the questioning once. Had he managed to withstand certain questions? Or had Melithar simply asked the wrong ones?\n\nThere was a knock at the door to his suite in the ambassadorial wing of the Glass Palace. Even though he was no longer traveling to foreign nations, he still maintained his masquerade as Ambassador Melithar. It was now one of his longest-lasting identities, if he added up all the different times he'd gone by that name. It was almost starting to feel like his own.\n\nHe opened the door to find one of the queen's personal spies on the other side. The man was young, no more than a hundred fifty years old, and was dressed as a low-ranking representative of the di'Valla trading concerns, but Melithar had observed him several times over the years taking on other identities.\n\n\"Lord Vilar,\" the man said. \"My name is Arisu.\" The spy had been around the palace long enough to know the name Melithar was using. Substituting an older name could only mean he'd realized that Melithar, too, was an agent.\n\nMelithar let him into the room and closed the door before responding. \"Not bad, considering it was before you were born, but Vilar wasn't a lord--he was merely a secretary. You're thinking of Lord Eltaris.\" It was best not to let the spy think about the name Vilar for too long, or what it might mean. Many of the High Councilors had guessed, correctly, that Commandant Jorel was Ellerie's father. Some assumed he was Vilisa's as well. As a minor noble, Jorel was an acceptable choice. Vilar, a commoner who'd become one of Revana's closest confidantes long before she was crowned queen, was not.\n\n\"You played both roles,\" Arisu said. \"At the same time.\"\n\n\"That was a very long time ago, but yes. You've done your research. Or the queen told you.\"\n\nArisu grimaced. \"The sentinels won't allow me in to speak to Her Exalted Majesty. She sent me north to look into something, and I need to give her my report. Can you help?\"\n\n\"Report to me, and I'll see that she gets the message,\" Melithar said. Not that he was permitted to see Revana any longer either, but he was at least allowed into the same room. Her condition had grown worse. She'd ordered a row of dressing panels installed to hide her bed, and only her personal maid was allowed behind the panels to see and care for her decaying body.\n\nThe spy gave a short bow of acknowledgement. \"The man who used to rule Blue Vale, a priest of Pallisur by the name of Leonis, is dead. A group of his underling priests has taken charge of the city, but they answer to a woman.\"\n\nMelithar raised an eyebrow. \"Pallisur doesn't choose female priests. Leonis's wife, perhaps?\"\n\n\"I don't know, though I did see her wearing a sword belt. They've started marshaling an army, but neither she nor the priests would speak to me about it, even after I explained that Terevas would like to open diplomatic relations. Leonis died at Fort Northtower, so I'd guess that may be related.\"\n\n\"How did he die?\" Melithar asked. He'd heard of Leonis before--had even been to Blue Vale once--but he hadn't been paying attention to recent events. There was seldom any interesting news out of the northern plains.\n\nThe spy held his hands out in a wide shrug. \"Nobody seems to know for sure, but the rumor in Blue Vale is that he was killed by soldiers from Larso.\"\n\nMelithar considered that. \"And you think they'll strike back? Blue Vale is stronger than most cities on the plains, but a war against Larso won't go well for them.\"\n\n\"What if they attacked along the border, trying to draw the Larsonian forces north? They could ambush smaller groups and disrupt their supply lines. After the North Border War, the barbarian clans might help.\"",
        "The new kid didn't know everything, it seemed. He was thinking like a dorvasta skirmisher, not a Knight of Pallisur.\n\n\"Whatever we might think of Larso, their generals aren't stupid,\" Melithar said. \"They follow the teachings of the God of War. Their armies will only cross the border if they have enough force to defeat their enemy. And Blue Vale has spent the last few years chasing off the nearest barbarian clans. Common enemy or not, I doubt they'll cooperate.\"\n\nArisu frowned. \"Blue Vale follows the God of War too. Why would they attack if you think they can't win?\"\n\n\"Who says they're actually planning to attack? Blue Vale doesn't amount to much with its leader dead, and the Carved Basin was never much of a nation to begin with. Without Leonis, it'll probably fracture into independent towns again, like the rest of the northern plains... unless the people are given some reason to remain united against a common threat. They might not be planning a war at all; they might just be posturing to keep the region under their control.\"\n\n\"We don't know that for sure.\"\n\n\"No, it'll be something for our military minds to puzzle out. Our role is to report what we observe.\"\n\n\"You'll tell Her Exalted Majesty, then?\"\n\n\"Of course,\" Melithar said, though he had no intention of bothering the queen with news about a conflict happening more than a thousand miles away. He'd tell Vilisa, but Revana had enough to worry about already. \"What about the new king in Larso?\" he continued. \"Rusol? The old king must have died around the same time you were passing through Telfort.\"\n\n\"I took the country roads to get back faster,\" Arisu said. \"I didn't hear the news about King Marten until I'd reached Matagor.\"\n\nMelithar nodded. \"Then I have another task for you,\" he said.\n\nHalf an hour later, he was alone once more and had just returned to looking through his notes when the door flew open and Vilisa stormed in. \"Where is it?\" she demanded.\n\n\"Where is what?\" he asked, quickly standing to show respect. There was no telling what might set her off these days.\n\n\"My spell book!\"\n\n\"What are you talking about?\"\n\n\"The book is missing!\" Vilisa said. \"You took it!\"\n\n\"No, I didn't.\"\n\n\"You're the one who keeps trying to convince me to get rid of it!\"\n\nMelithar looked his daughter directly in the eye. \"I promise you, I had nothing to do with it.\"\n\nShe stared back at him for a moment, and then the fight left her. \"Then who did? Who could have gotten into the palace? Into my chambers? Was it one of our own people? Only the sentinels and my maids are allowed into my rooms.\"\n\n\"Perhaps Retavin's assassins weren't only after your life, but the book as well. We need to find out who was truly behind the attempts. They may have sent another team.\"\n\n\"Another of your conspiracies? Retavin is dead, and there haven't been any other attacks. He was working alone, except for his hirelings.\"\n\n\"Or so he claimed.\"\n\nVilisa waved that off. \"Enough. Unless you have new evidence to present, I'm not going to discuss this with you again--and Mother agrees. You've wasted enough time on it already. You can help me find out who actually took the book instead.\"\n\nMelithar gave a mocking half-bow. \"As you wish, Exalted,\" he said. \"Or perhaps you could consider this a blessing.\"\n\nVilisa sighed. \"Not this again. Mother had that spell book for centuries and it didn't hurt her any.\"\n\n\"Do you really believe that? Think back to what you were like before Ellerie left, or even just a year ago, and compare that to now.\"\n\nShe furrowed her brow. \"What do you mean?\"\n\n\"I'm sure if you think about it, you'll understand. You've changed.\"\n\nShe scowled at him. \"I don't know why my mother tolerates your behavior, but she won't be around forever. Consider carefully whether you wish to continue your role in the future.\"\n\n\"The book is dangerous--it's dark magic.\"\n\n\"There's no such thing,\" Vilisa said. \"Magic is a tool like any other. All that matters is the intention of the person who wields it.\"\n\n\"There's a lot more to the world than you can see here in the palace. I've been a wizard for longer than you've been alive, Exalted, and I'm telling you that there's something wrong with the spells in that book.\"\n\n\"They're just spells.\"\n\n\"Do you want to end up like Revana? Dying slowly and painfully from a wasting disease that no priest can heal? How do you think she got sick?\" That was just a guess on Melithar's part, but he suspected he was right.\n\n\"You go too far!\" Vilisa snapped, but her voice wavered. For a moment, she looked like the child she still was, and Melithar silently cursed Ellerie for leaving her sister behind to deal with everything by herself. If Ellerie had remained in Terevas as the heir, the book would have gone to her, and Vilisa would still be the studious but carefree girl she'd been just a few short years ago.\n\n\"I've known your mother for hundreds of years,\" Melithar said. \"I saw how she changed after she found that book. She didn't believe me at first either, and then later, she didn't care. And now the same thing is happening to you.\"\n\nVilisa was trembling. \"I don't believe you,\" she said.\n\n\"Ask her.\"\n\nShe stalked out of the room, slamming the door behind her.\n\nOnce Melithar was certain she wasn't going to return, he activated the mage lock on the door, then went into the bedroom and knelt down to reach up and under the frame of a wooden wardrobe. From the leather pocket he'd nailed to the underside--out of view of anyone who might be peeking under the furniture--he retrieved Vilisa's spell book.\n\nHe'd expected to be rid of it before she noticed it was missing, but it was warded against both regular and magical fire--a common protection for spell books. A direct magical attack hadn't worked either, and he hadn't been able to tear the pages in half or cut them out of the book with a knife, and those protections were much less common. His attempt to banish the warding spells had been unsuccessful.\n\nAfter considering his options, he dropped the book into the washbasin in the corner of the room. The ambassadorial wing was well appointed, and each suite had an indoor hand pump for water. Melithar filled the basin until the water covered the book, then waited several minutes before retrieving it. There was no damage at all--the ink hadn't run and the pages weren't waterlogged. The spell book was apparently warded against water as well.\n\nHe was running out of ideas, and all the warding-spell experts he knew worked for either the queen herself or one of the other noble houses. He couldn't risk asking them. The book was too dangerous to sell or toss away, and he couldn't bury it or leave it hidden indefinitely. If Vilisa ever convinced Eloina to cast the truth spell on him, he'd end up telling her where to find it.\n\nMelithar still had contacts in the city, though--contacts who weren't above breaking the law. He couldn't tell them the whole truth, but he could put out word that he was looking for someone able to break wards. With luck, that would be enough to find what he needed.\n\nFor now, he'd have to look for a new hiding place and hope Vilisa didn't catch on until after the book had been destroyed.\n\n#\n\nIt was after dark when the group finally arrived in Four Roads. The inns on the east side of town were full, so Corec led his friends to Mama Wenna's boarding house. Along the way, they passed two new large, hastily built structures with thin wooden walls, the lumber not having had time yet to weather. Judging by the silent, dirt-smudged faces of the people huddling near the entrances, the buildings were being used to shelter refugees from the biting winter winds.\n\nThe boarding house was on the outskirts of town. Wenna must have heard the horses and wagons--she rushed out of the house to greet them, wiping her hands against her apron.\n\n\"Corec!\" she said. \"You're back! It's been so long!\"\n\nCorec dismounted and gave the stout woman a quick hug. \"It's good to see you, Mama Wenna. How have you been?\"\n\n\"Oh, it's been so crazy with all the people and the talk about the dragon, and all my rooms are full. I...\" She paused and glanced behind him. Corec and Ellerie had dismissed most of their mage lights so they wouldn't draw attention, but they'd kept a few hidden in lanterns to light their way. It was enough to allow Wenna to see the full size of the group. \"Oh, my,\" she said. \"I don't have enough space. Even your room has an entire family in it. I put your things in the attic.\"\n\n\"It's all right, Wenna. We'll just camp out in your garden plot if you don't mind. We'll pay you for it. You don't have any winter vegetables planted, do you?\"\n\nWenna took a moment, looking from the group to the garden behind her house. \"I suppose that would be all right. There are just some carrots and cabbages, but they're off to the side.\"\n\n\"We'll keep the horses out of them.\"\n\n\"Oh, but Corec, I can't cook for so many people! I can barely keep up with the new boarders as it is!\"\n\n\"We'll take care of our own cooking,\" Corec said. \"We really just need a place to pitch our tents for a few days while we decide what to do next. We'll probably head north soon, but we'll find a stable for the animals tomorrow so you don't have to worry about them mucking up your yard.\"\n\n\"The stables are full, all those poor people coming from down south. Some of them only managed to bring a horse or a few cows, but how are they going to pay the stable fees over the winter?\" Wenna shook her head. \"What am I saying? You surprised me so much I'm forgetting my manners. Why don't you introduce me to your friends?\"\n\n###\n\nChapter Twenty\n\nThe morning after arriving in Four Roads, Treya visited the Three Orders chapter house. She found a familiar figure there in the front courtyard, directing refugees to different spots as a group of men worked at erecting a new shelter.\n\n\"Nallee?\" Treya said to her friend. \"What's going on?\"\n\n\"Treya!\" Nallee said, embracing her. \"The temples have run out of room, and the city council is worried about having younger children in the other shelters, so they're building new ones here for families. There's another out back that was finished yesterday. Oh, you shouldn't be in Four Roads now; everything's gone wrong!\"\n\n\"I heard the dragon came to Springwater. Is everyone all right?\"\n\nNallee sniffled. \"At first, it just flew over us. That scared a lot of people off, but Patrig thought we should stay. He wants to run for mayor next year, and it wouldn't look good if he abandoned the town. So we stayed. But then, just when everyone had gotten used to the dragon flying overhead, it landed right in the middle of town. It's so big! It ate Mr. Jonson's horse, and people started screaming. It turned to chase after them and it crashed into The Lady's temple! It knocked the whole building down. That made it mad, I think. It roared, and then breathed out fire.\" The concubine shivered, rubbing her arms. \"It burned down most of the shops, and then the fire spread and got half the village. We tried to find the priests after, but they were both already dead. And four more people in the fires.\"\n\n\"But you're fine?\" Treya asked. \"And Patrig?\"\n\n\"Yes, we made it out, and Patrig's wife Deni. Our house was in the other direction, and the dragon left right after that. But they say once it shows up, it'll keep coming back, so we convinced everyone else that it was time to go. We packed up what we could, but Patrig had to leave behind everything in the smithy. We're just hoping no one steals it all while we're gone. He's back to working for the blacksmith he was apprenticed to here. When Mother Yewen found out I was in town, she asked me to help with the refugees.\"\n\n\"Can I do anything?\"\n\n\"I've got things handled here. We're just giving people somewhere to wait while the men finish the shelter. Mother Yewen will know what you can...\" Nallee trailed off, looking thoughtful. \"Wait, is it true you're a healing priest?\"\n\n\"Yes. Is someone hurt?\"\n\n\"Not out here, but inside. We turned the Great Hall into an infirmary. It was the only room large enough. The temples are too full of refugees, and the mayor wanted one spot where anyone could go if they were sick or injured, so all the healers are here now.\"\n\n\"I should go in, then,\" Treya said. \"I'll look for you later. The midday meal?\"\n\n\"Sure, though I don't know where it will be, what with the Great Hall full.\" The hall was where the Sisters and students ate their meals.\n\nTreya made her way into the chapter house, stopping to greet a few Sisters she remembered from her time there.\n\nWhen she reached the Great Hall, she stopped and stared. There were dozens of people waiting for help. Some stood in line while others were sitting or lying on spare cots, tables, or piles of blankets on the floor. A few of the patients showed signs of apparent injury, wearing dirty bandages or leaning on crutches, while many others were coughing, evidently from some illness running through the town. Sister Merill, who'd become an herbalist rather than join one of the orders, was walking down the line, offering tea with honey to those who were coughing. Other herbalists roamed the hall, along with several chirurgeons and half a dozen priests. Sister Veda, a midwife, was on the far side of the room, kneeling next to a heavily pregnant woman as two students of the Orders assembled a privacy barrier around them using coat racks and blankets.\n\nTreya stopped a priestess of The Lady, a pinch-faced woman with her gray hair pulled back in a severe braid.\n\n\"I'm a healer. How can I help?\"\n\nThe woman looked her over. \"See what you can do with that group,\" she said, gesturing vaguely to a row of cots. \"If you get tired, stop. And don't waste your power on someone who doesn't need it.\"\n\nTreya nodded and made her way over to the first cot, where a small child was bawling in his mother's arms. She crouched down next to them. \"What happened?\" she asked.\n\n\"I don't know,\" the mother said. \"He just started crying and won't stop.\"\n\nTreya laid a glowing hand on the boy's head. A simple ear infection--she recognized the signs from her time working in different almshouses and healing houses as she'd been traveling. She channeled a bit of energy and the boy's sobs died down. He stared at her, still sniffling. He would have recovered fine on his own, or with willow bark tea, but it had only taken a trickle of power and Treya doubted the mother would have left the hall before her child had been take care of.\n\nThe next injury was worse, a broken leg. Treya needed the help of a hefty chirurgeon to snap the man's bone back into place before she could heal it.\n\nAnd then a woman, unconscious and pale, with a high fever. Her husband showed Treya a deep cut on the woman's arm. \"The wagon seat came loose,\" he said. \"She was helpin' me fix it, but she slipped, and there was a sharp edge on the elbow spring.\"\n\nWhy hadn't anyone seen to the woman yet? The skin around the wound had already turned green. She would die if she wasn't healed. Perhaps, under the circumstances, there was some excuse for the healers to not have noticed Harri's broken arm, but how could they have missed this?\n\n\"I'll take care of her,\" Treya said. She guided healing magic throughout the patient's body to eliminate the infection, then sealed the wound itself.\n\nShe stepped back, the glow fading from her hands. \"She should be fine now, but wait here with her. We'll see if she wakes up on her own.\"\n\nThe man nodded, his eyes wide. \"Th... thank you.\"\n\nTreya found the nearest priestess, a follower of Demesis in a blue and green robe.\n\n\"Why didn't anyone heal that woman?\" Treya asked, her voice pitched low so the husband wouldn't overhear. \"The infection was in her blood!\"\n\nThe young priestess goggled back at her. \"I... Miss? We can only do so much. We've been here for hours.\" The woman's eyes were bloodshot, surrounded by dark circles.\n\nTreya took another look around the Great Hall. None of the priests were using healing magic, either drained for the day or saving it for an emergency. Instead, they were changing bandages, checking on fevers, or aiding the herbalists.\n\nFour Roads was a town which normally only held thirty thousand residents, and even in good times, there weren't enough healers to help everyone. The temples mostly healed those who could pay, doing just enough charity work to alleviate their guilt. There was no way these few priests could keep up with the influx of ten thousand refugees from the south, many of them sick or injured.\n\nThey needed help. Not just another helping hand, but real help.\n\nTreya stepped back and thrust her arms out to her sides, concentrating as she cast the healing spell she'd learned in Tir Yadar.\n\nPulses of light washed over the room, one after another, centered on Treya and echoing outward in concentric circles, each pulse helping to rejuvenate anyone it touched. Everyone stopped what they were doing to stare at her in shock. Each pulse held only a tiny bit of healing magic, but they kept coming, and soon they started to have an effect. The coughing gradually faded, and some of the patients who'd been sitting or lying down now climbed to their feet, startled looks on their faces.\n\nThe pulsing spell wouldn't be enough on its own, though. Treya dismissed it, then strode along the nearest row of makeshift cots, looking for anyone who wasn't showing any signs of improvement. Her healing senses worked best by touch, and as she reached each patient, she laid her hand on their head or shoulder to identify the problem. She healed those that needed it, eliminating sickness and infection, repairing broken bone and torn muscle, knitting flesh back together.\n\nShe made her way through the entire hall, healing one person after another, ending at the pregnant woman. Treya stopped just long enough to confirm that mother and child were both healthy.\n\nWhen she was done, she found all the healers and herbalists still staring at her.\n\nShe had to say something.\n\n\"Sister Merill,\" she called out, \"can you station one of your students by the entrance?\"\n\nThe old woman squinted, taking in Treya's mystic outfit. \"Do I know you?\"\n\n\"I lived here some years ago. Now, one of your students, please? We need to separate out the serious cases as they come in, the way the big healing houses in the city do it.\"\n\n\"Oh, yes, of course. We meant to, but there were just so many people.\"\n\n\"We should have some time now.\" Treya raised her voice so all the healers could hear. \"Are there any other injured at the temples or the shelters?\"\n\n\"Yes,\" said a dark-haired, bearded man wearing the black robes of a priest of Pallisur. \"Most are at the temple of Demesis, or at the big shelter at the south end of town.\"\n\n\"Who is taking care of them?\"\n\n\"The unblessed priests and a few herbalists mostly. We go out to check on them after our shifts are over.\"\n\n\"Any that can be safely moved, start bringing them here in small groups. If there are any that can't be moved, take me to them, the most severely injured first. I don't know how much more I can do today, but let's find out.\"\n\n#\n\nCorec peered into the Great Hall. \"It seems quiet,\" he said. It wasn't like the chaos Treya had described from the day before.\n\n\"We've got things under control at the moment, but we can't keep up with this pace,\" Treya replied. \"There are too many refugees with nowhere else to go. Too many people in town. And nobody's talking about it yet, but food will be a problem if this goes on for too long. Four Roads exports crops; it doesn't import. A lot of the local farming is done to the south, and the shops in town will run low before winter's over. And even if we talk to the trading houses about redirecting shipments, will any caravans be able to make it here if the dragon's getting closer?\"\n\n\"What, exactly, are you asking for?\" Ellerie said.",
        "\"We've got to do something!\"\n\n\"We will,\" Corec said, \"but we can't afford to feed everyone.\" Their short time in Dalewood had been costly, and if they kept on spending the way they had, there wouldn't be any money left to defend against an attack from Prince Rusol. \"And like you said, the problem is more about getting the shipments sent here than about the money.\"\n\nTreya was quiet for a moment, staring off into the distance. \"If you go north, I can't go with you. They need me here.\"\n\n\"I understand, and I'm not sure we should head north right now anyway. Not until we figure out a way to help.\"\n\n\"We just need things to go back to normal,\" Treya said. \"The town can't handle this. If the refugees could return home... most of their homes haven't been destroyed. They're still there, waiting. Everyone had laid in their winter supplies. There are grain silos, cattle ranches, winter crops. We just have to be able to get to them.\"\n\n\"You know there's only one way that's going to happen,\" Ellerie said. \"Someone has to deal with the dragon.\"\n\nCorec nodded. \"We need to find out if there's help on the way, or if the town council is hiring mercenaries. If not, we'll have to hire them ourselves.\" There was more to it, but he wanted to give everyone time to come to the realization on their own.\n\n\"Can we afford that?\" Treya asked.\n\n\"Better than we can afford to feed thousands of refugees for months, but it'll use up most of the coin we were saving to defend ourselves against Rusol. We'll all have to contribute more, and Sarette and I don't have much left.\" Sarette had used much of her share to purchase one of the enchanted staff-spears from Tir Yadar. Corec had bought the other, hoping to deliver it to Snow Crown someday to make up for the sword he'd taken from them.\n\n\"We'll figure that out when the time comes,\" Ellerie said. \"We need to take care of the immediate problem first. Besides, maybe there's help on the way already.\"\n\nAn elderly woman approached from down the hall. \"Treya, are these the friends you told me about?\"\n\n\"Yes, Mother Yewen. This is Corec of House Tarwen--you met him once before, after we hunted down the drake. And this is Lady Ellerie di'Valla of Terevas. Ellerie, Mother Yewen is in charge of the Four Roads chapter house.\"\n\nEllerie raised an eyebrow at the formal titles, but Corec wasn't surprised. Treya had been nudging him to take on more of a leadership role in the region once they found a place to settle down. Publicly proclaiming his relation to a noble house was one way to speed up the process.\n\nHe and Ellerie greeted the woman.\n\n\"I'm afraid you chose a poor time to visit Four Roads,\" Mother Yewen said. \"There's so much chaos. It's normally more peaceful.\"\n\n\"I live here,\" Corec told her. \"Off and on at least, for the last eight years.\" Four Roads was as close to a home as he'd had since leaving Larso.\n\n\"Ahh, then you can see how much things have changed.\"\n\n\"What's the town going to do about it?\" Ellerie asked. \"Have they made any plans to deal with the dragon?\"\n\n\"The mayor has written for help, but right now, we're all just hoping the dragon doesn't make it all the way to Four Roads. Now, Treya tells me you helped out with the refugees in Dalewood?\"\n\n\"We did what we could, but it wasn't much,\" Corec said. \"We were only there for a day. Most of the aid will be coming from the city. What sort of help do you need?\"\n\nBefore the woman could answer, they were interrupted. \"Heya, Mother Yewen. We found more families for you.\" It was a man's voice--one that Corec recognized, though it took him a moment to place it. It had been a long time.\n\nYewen turned to the two armored men. \"You boys are back, I see. I didn't realize you were gone until the cooks told me we had food left over after the meals.\" Despite her stern expression, her tone was fond.\n\nThe men took in the rest of the group and then stopped in shock. \"Corec!\" Kevik exclaimed.\n\n\"Hey, Kev, Trentin.\" Corec wasn't sure what to say after that. The two men had been his friends once, but they were knights of Pallisur and he was a mage. He'd never had a chance to say goodbye to them--the priests had kept the other trainees away from him after the initial accusation, as if magic was somehow contagious.\n\nThey didn't seem to know what to do at first either, but then Kevik laughed and strode forward, clasping Corec's forearm with one hand and clapping his back with the other. Trentin held back.\n\n\"It's been a long time,\" Kevik said. \"What have you been up to?\"\n\n\"Caravan guard for a while,\" Corec said. \"Now, well, whatever needs doing.\" He certainly couldn't mention he was preparing for an attack by the king of Larso.\n\n\"That was stupid, them kicking you out,\" Trentin said, coming forward. \"Hi, Corec.\"\n\n\"Yeah,\" Kevik said. \"Just because you can use magic doesn't mean you would. That cousin of yours, Sir Jesson, tried to get the decision reversed, but nothing ever came of it.\"\n\nCorec shrugged. \"It was probably for the best. I couldn't control it back then, and now, I wouldn't want to change how things turned out. I don't like the idea of the Church telling me what to do.\"\n\nKevik chewed on his lip for a moment. \"I can see that, I suppose. Some of the priests are complete dullards.\" Trentin winced and glanced around, as if worried they'd be overheard.\n\nCorec grinned, then introduced Treya and Ellerie to the two knights, this time leaving off Ellerie's title.\n\n\"A pleasure to meet you both, ladies,\" Kevik said with a smooth bow.\n\n\"A pleasure,\" Trentin repeated.\n\n\"What are you two doing in Four Roads?\" Corec asked.\n\n\"We were patrolling the southeast hills for bandits when the dragon showed up out of nowhere,\" Kevik said. \"We were far enough north that Four Roads was closer than Hightower, so we came here, and now we can't go back that way. We've made five trips to escort refugees in.\"\n\n\"Do you need any help with that?\"\n\n\"I don't think we'll be able to go out again. The dragon followed us for two or three miles this last time.\"\n\nTrentin shook his head. \"I don't know what anyone expects us to do if it actually attacks us along the way, but the people seem happier to have us along. I guess we can keep them from being robbed, at least.\"\n\n\"Are the knights going after the dragon?\" Corec asked.\n\n\"I don't know,\" Kevik said. \"I sent messages, but I haven't heard anything yet.\"\n\nCorec considered that. The biggest problem with the plan to hire mercenaries was that there weren't likely to be enough of them in Four Roads--and certainly not ones who'd trained to fight dragons.\n\n\"How many men do you have here?\" he asked. \"Soldiers and knights?\"\n\n\"Hell, Corec, we were just hunting bandits. We didn't even know the dragon was a problem when we left the fort. I only brought one squad, and there's just the six of us left--I sent Sir Hordin to Telfort in case the pigeon messages don't make it through.\"\n\nNo soldiers, and just one squadron of knights. It wouldn't be enough on its own... but that was six men trained in the use of siege equipment. It was better than nothing.\n\nIt wasn't time to bring that up, though. Not without more information.\n\n\"You made squadron commander already?\" Corec said instead.\n\n\"Squadron commander in the ass end of nowhere,\" Kevik said. \"The senior knights must hate me.\"\n\nTrentin covered up a snicker, suggesting there might be some truth to that statement.\n\n\"Where are you staying?\" Corec asked them.\n\n\"Mother Yewen found rooms for us here.\" Kevik gave an exaggerated wink. \"I think the old woman likes me.\"\n\nHe'd pitched that last part loud enough for Yewen to overhear. She just shook her head and wagged a finger at him.\n\n\"We're not allowed to talk to the girls, though,\" Trentin added. \"As if we could afford concubines.\"\n\n\"That's why you're not allowed to talk to them, young man,\" Yewen said. \"Now, since you boys are back early, you made it in time for this week's council meeting. You should be there.\" She turned to Treya. \"You three as well.\"\n\nKevik nodded. \"It can't hurt to show up,\" he told Corec. \"We'll at least find out how much worse things have gotten over the past week. Mother Yewen or I can get you in.\"\n\n#\n\nThe town council was holding its meetings in, of all places, a converted milch cow barn. The council's normal meeting chamber wasn't large enough for everyone who'd needed to attend since the crisis had begun. The barn's stalls had been removed and the place had been cleaned, but there was still a faint scent of hay and manure.\n\nIt turned out that Mother Yewen held a seat on the council, and she joined the other councilors at a long table on the side of the barn farthest from the wide doors.\n\nTwo dozen mismatched chairs had been set out in neat rows facing the council table, but it wasn't nearly enough for everyone. Most of the crowd remained standing. Kevik introduced Corec and his friends to those he knew. There were shopkeepers and farmers, town guards, priests, and citizens who'd volunteered to help run the shelters. The bulk of the crowd, though, consisted of refugees representing each of the villages that had been evacuated.\n\nCorec and his friends found a spot to stand along the side wall, allowing them to see the council without having their view blocked by the other attendees.\n\nThe mayor stood and called the meeting to order. \"Let's start with an update on the shelters, the evacuees, and supplies,\" he said.\n\nThat led to over twenty minutes of dry numbers being bandied about by Mother Yewen, the priests, and others. By the time it was over, the crowd was shifting restlessly.\n\n\"What about the dragon?\" someone finally called out. \"How close is it?\" Several others shouted in agreement.\n\nSammel held his palms out in front of himself for silence. \"The dragon came to Springwater six days ago, and it's been seen flying over Low Sands and Demon's Crook.\"\n\n\"Two miles north of Demon's Crook!\" Kevik called out. \"We saw it yesterday.\"\n\nJudging by the worried whispers, that came as news to almost everyone in the room.\n\nMayor Sammel waited for the noise to die down. \"Springwater has been evacuated,\" he said, \"along with most farms and ranches west of there, as far as the hills. East of Springwater, many of the homes are abandoned, but the people didn't come here. We can only hope they made it to Dalewood. Sir Kevik, do you have any news on the evacuations?\"\n\n\"We've done what we can,\" Kevik said. \"Anyone north of Low Sands is close enough to make their way here on their own. And some people are refusing to leave their homes. Maybe they'll be lucky.\"\n\n\"What about Four Roads?\" one of the townsfolk asked. \"Is the dragon coming here?\"\n\n\"We don't know,\" the mayor replied. \"We hope it won't.\"\n\nQuietly, so only his friends could hear, Corec said, \"It doesn't matter whether it makes it this far or not. The dragon will avoid the town itself, but that's not going to help if Four Roads is trying to take care of thousands of refugees.\"\n\nKevik nodded. \"And hatchlings are smaller,\" he murmured. \"I don't know if they'd stay out of cities the way a full-size dragon would.\"\n\n\"Are there hatchlings?\"\n\n\"No one's managed to get close enough to see.\"\n\nA woman with a tear-streaked face pushed her way to the front of the crowd. \"What about Larso or Matagor?\" she said. \"Won't they send help?\"\n\n\"I sent pigeons,\" the mayor said. \"Matagor didn't respond. Larso... a reply came from someone called Field Marshal Tregood, saying Larso won't interfere in the sovereignty of the free lands. It was sent under the king's seal. The new king, I suppose.\"\n\n\"Cowards!\" a man yelled, turning toward Kevik and Trentin. And Corec, who was standing right next to them. \"The knights are cowards!\"\n\nThe crowd turned angry eyes on them, but were then distracted when someone shouted out another question for the mayor. \"What about Tyrsall?\"\n\n\"I didn't...\" Sammel started, then thought better of it. \"I can try.\"\n\nBut Corec understood why he hadn't sent a pigeon east. Tyrsall didn't keep troops on the borders the way Larso and Matagor did, and unlike Larso, they didn't have a standing army. The message would have to reach the king, who would have to order the Duke of the West to marshal the western barons' personal guardsmen. Any help would be months away. And that was if Tyrsall was even interested in helping.\n\n\"We've got to do it,\" Treya said, keeping her voice pitched low as the mayor argued with the refugees.\n\n\"Do what?\" Kevik asked.\n\nCorec nodded. \"What do you think?\" he asked Ellerie.\n\n\"We're not just hiring mercenaries, are we?\" she said.\n\n\"And leave them to fend for themselves?\" Corec said, finally admitting what he'd known all along. \"It would be a slaughter if we're not there to help them.\"\n\n\"Can we do it?\"\n\n\"It'll cost a lot, but if there's no help coming, what other choice is there? Evacuate Four Roads itself and leave the free lands to the dragon? Where would everyone go?\"\n\nShe nodded.\n\n\"Will you tell us what you're talking about?\" Kevik said.\n\n\"Do you remember our lessons on dragon-hunting?\" Corec asked the two knights.\n\nKevik gave him a suspicious look. \"I remember that it takes a whole lot more men than we've got here. And a lot more equipment.\"\n\n\"We can afford men and equipment, but I need trained soldiers who know how to fight dragons and how to operate siege weapons.\"\n\n\"You're serious, aren't you?\"\n\n\"Can you work alongside mages?\" Corec said. \"We won't be able to do this without magic.\"\n\n\"The others aren't going to like that,\" Trentin warned. \"Especially if they find out King Rusol turned down the request for aid.\"\n\n\"What about you?\"\n\n\"I don't know, Corec. I could lose my knighthood for this. Do you have any idea how long it took my father to save up enough to get me in?\"\n\n\"We haven't actually received any orders telling us not to help,\" Kevik pointed out. \"And we don't fall under the field marshal's command. Even if they send us orders to return, it wouldn't count as disobeying if we stop along the way to take care of something.\"\n\nTrentin barked a short laugh. \"Take care of something?\"\n\n\"You don't have to go with us, Trentin, but you could help train the men on the equipment,\" Corec said.\n\nTrentin sighed. \"Never mind. I'm in. I'll do it.\"\n\n\"Thank you.\" Corec turned to Kevik. \"What about the rest of your men?\"\n\n\"I don't know. Willem maybe. I'm not sure about the others. They've all heard your name, but they don't know you. To them, you're just the trainee who was exiled after disgracing the Order.\"\n\nCorec tried to not let his reaction show. Was that how the knights thought of him?\n\n\"Three will have to be enough,\" he said.\n\nHe met Treya's and Ellerie's eyes once again. They both nodded.\n\nThere was a lull in the argument between the council and the refugees.\n\n\"We'll handle the dragon!\" Corec called out. He waited until everyone had turned to face him. \"We'll handle the dragon! But we'll need help!\"\n\nMayor Sammel peered their way. \"I recognize you. You're the one who killed those drakes last year. Corec, right?\"\n\n\"Corec Tarwen of House Tarwen, of Larso.\" Corec allowed his voice to ring around the room. Sometimes people just needed to hear a confident tone.\n\n\"You're one of the knights?\"\n\n\"No, but I hope they'll ride with me. And I'll need your help, too.\"\n\nThe mayor exchanged glances with the rest of the council. \"What sort of help?\"\n\n\"I need men and equipment. Ballistae, catapults, and I can show you how to build them. Nets, chains, crossbows, wagons and carts, horses and mules. I'll pay what I can, you pay what you can. And I need trained fighters and soldiers. We'll pay five silver a day until the dragon's dead. If we're successful, a bonus of ten gold to each man!\"\n\nIf that didn't do it, nothing would."
    ],
    "authorname": "Ivy_Veritas",
    "tags": [
        "fantasy",
        "magic",
        "adventure"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/the-eighth-warden-bk-04-ch-19-20"
}