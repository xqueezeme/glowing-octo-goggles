{
    "title": "The Surrogate Ch. 06",
    "pages": [
        "Chapter Six - The Sharing\n\nSarah insisted that Mila tell Peter about their tryst as soon as possible. She did not want Peter and Mila breaking the tenets on the first day that they had been accepted into the church of the Sons of Jehovah. But first she had some pressing religious instruction to provide.\n\nMila invited Sarah to dinner that evening so that she could furnish them both with the order of service for the Sunday observance. Sarah explained that most members of the church attended weekday masses conducted by a Patriarch minister or in some cases an Apostle who has been ordained by the Reverend Ronald Hayes. As is often the case, the higher in the Order one became, the less time was spent in church and more time was spent attending to the church's business.\n\nThis was to be the case with Peter and Mila who would only be expected to attend the Sunday service.\n\n\"Unless you get a taste for it that is?\" Sarah explained.\n\n\"Do you attend the Temple outside of the Sunday service?\" Mila asked.\n\n\"You've read the order of service. Sunday devotion is an all-day event and don't forget that I was raised in the church with daily sermons at school. Once a week is enough for me,\" Sarah smiled.\n\n\"Keep the scripts I have given you and bring them on Sunday, I won't be able to guide you because you will be sitting with the Apostles and I will be sitting with the other spinsters at the back of the church. I will join you both for lunch.\"\n\n\"No ranch duty this weekend?\" Mila couldn't help the biting comment.\n\n\"No Mila. We are on roster of sorts. I go out there about one a month,\" Sarah replied stoically.\n\n\"Now about tomorrow... I will come over early and help you prepare for your communal dinner and sharing. As the Reverend has suggested, it is best that you invite people that you are comfortable with or in your case Peter, couples whose wives you desire.\"\n\nPeter blushed.\n\n\"Peter. You are an Apostle of the Sons of Jehovah, there is no shame in desiring a woman who isn't your wife so long as you do so within the tenets,\" Sarah said.\n\n\"You may take any spinster who catches your eye unless she refuses, which is almost unheard of. Usually you will bring her into your bed or she may invite you into her home or you may use the Lodge, whatever is convenient.\"\n\n\"When you desire another man's wife you simply ask him 'May I share in your bounty?' and he will either say yes or no. It is accepted that you are offering your wife to him in return.\"\n\nPeter and Mila were extremely uncomfortable with the conversation.\n\n\"Being in the highest Order you may ask any man in any Order to share his wife, but the lower Orders may not approach you. Of course, if you mate with a lower Order wife you will offer your wife in return. The lower Orders consider it a privilege to share with Apostles,\" Sarah explained.\n\n\"And I have no say in it?\" Mila asked.\n\n\"No, you may not refuse once a sharing has been agreed to by your husband. He may however share another man's wife but the other man may not wish to mate with you or the other man may take you and Peter might not wish to bed the other man's wife.\" Sarah replied.\n\n\"How often does that happen?\" Mila asked.\n\n\"Rarely,\" Sarah smiled.\n\n\"However given your, shall we say unique attributes, there will undoubtedly be men who do not wish to share with you,\" Sarah said as delicately as she could.\n\n\"Of course there will also be those whose interest is piqued,\" she added.\n\n\"Can I say no?\" Peter asked.\n\n\"Not really Peter, you must realise that the Reverend and the Reverends before him handed us these tenets as a sanctity that bides together the Sons of Jehovah. We share our wealth and we share our pleasure and we share our responsibility to the church and the tenets. That's why we live in Redhaven and exclude non-believers,\" Sarah said with conviction.\n\n\"But some share more than others,\" Mila said, trying to keep the bitterness out of her voice.\n\n\"Of course in any society there is a class structure. I would say that the Sons of Jehovah has the fairest hierarchical spectrum. Look around you; there is no poverty, everyone is cared for, all are wealthy to some degree, all are happy and most are free to leave should they so desire,\" Sarah said with conviction.\n\n\"Except for those who know about what really happens at the ranch,\" Mila said acidly.\n\n\"Peter this is where you would correct your wife using corporal punishment,\" Sarah said gravely.\n\n\"Mila you have been accepted into our church, you must abide by our tenets. You will be forgiven some transgressions but only for a short time, it is expected that you will learn and obey the tenets and be obedient and steadfast to your husband,\" Sarah said calmly but firmly.\n\nMila found it hard to believe that only a few hours ago she and Sarah had been making love and Sarah had told Mila how much she cherished her.\n\n\"Which is probably as good a segue as any for you to tell Peter about what we did this afternoon,\" Sarah said.\n\nMila blushed and looked away but she could feel Sarah glaring at her. \n\nPeter was confused and looked at them both questioningly. \n\nMila couldn't stand the tension, she could feel Sarah's eyes boring into her and she could tell that Peter was baffled and uneasy.\n\n\"Sarah and I made love this afternoon,\" Mila blurted out.\n\nPeter was taken aback at first, then he began to imagine Mila and Sarah on the big bed upstairs going at it.\n\n\"Cool,\" he grinned carnally.\n\n\"Cool! I just told you I have been unfaithful!\" Mila couldn't figure out why she was upset but she just was.\n\n\"What am I allowed to do here Sarah? What are the rules? The tenets?\" Peter asked.\n\n\"You may punish your wife. You may forgive her. You may grant her permission to use me as a spinster, you may do pretty much whatever you want,\" Sarah replied.\n\n\"Thanks Sarah... he may punish me! You didn't tell me that while we were fucking!\" Mila said angrily.\n\n\"We must abide by the tenets. He may punish me too should he see fit,\" Sarah said frankly.\n\n\"Whoa, whoa, whoa, there! There isn't going to any punishing,\" Peter interjected.\n\n\"What I think is going to happen is that I'm going to grant Mila permission to have sex with you Sarah.\"\n\nMila and Sarah were silenced, their anger dissipated and they smiled furtively at each other.\n\n\"But I'm also going to exercise my privilege and ask you Sarah to share my bed,\" Peter smirked.\n\n\"Of course Peter; I would be honoured,\" Sarah replied demurely.\n\nMila actually felt a little jealous but she knew that she shouldn't.\n\n\"Ok ladies enough tuition for one evening. Let's all go to bed,\" Peter grinned at them both and Sarah and Mila smiled at each other conspiratorially. \n\nMila could tell that Peter was warming very quickly to his new role as master of the house so to speak and it was obvious he was hot for Sarah. He had his hand under her skirt all the way up the stairs. \n\nBut Peter wasn't selfish. He took turns kissing and caressing them both as they stripped to their nylons, heels and panties as he demanded they do. He took some tome time to fondle their breasts and had Sarah undress him while he teased Mila, making her hard in her panties.\n\nPeter had Mila and Sarah perform for him, which they were delighted to do, kissing and fondling each other on the big bed while Peter watched. When he was excited to the point that he couldn't keep his hands off the two beautiful women he joined in.\n\nPeter lay on the bed and had Sarah straddle him, lowering her hot, wet, recently-licked cunt onto his turgid manhood. Peter held Sarah still while Mila positioned herself behind her and slid her lubricated cock deep into Sarah's anus.\n\nMila fucked Sarah with long slow thrusts, building the tempo. Peter didn't need to move, he could feel his wife's cock through Sarah's vaginal sheath and Sarah bucked and wriggled as Mila fucked her harder. Peter lay back and watched the women fuck as Sarah's cunt clung to his raging erection, working herself up and down on it while Mila fucked her tight ass.\n\nThey orgasmed almost simultaneously and when they were done Sarah fetched drinks and they partied on the bed for a couple of hours until they were exhausted. They slept together in a tangle of arms, legs and hard cocks.\n\nWhen Peter and Mila awoke the next morning Sarah was gone. They snuggled under the covers grinning like children.\n\n\"I think you have an affinity for this whole Apostle thing,\" Mila teased him.\n\n\"It's the life we have chosen to lead so why not enjoy it?\" Peter kissed her playfully on the tip of her nose.\n\n\"Not that we had a choice,\" Mila replied.\n\n\"I kinda like the sharing Sarah thing, we've had her in our house for so long now that she's like part of the family but I'm not sure I'm going to enjoy being passed around by a bunch of strange men this evening,\" Mila sighed.\n\n\"They're hardly strangers, we are good friends with Brian and Dianne Hislop, Jim and Helen Benson and we know the others well enough,\" Peter reassured Mila and held her close.\n\n\"The Reverend and Sarah have made no secret that some of the men are not being happy with me being transgender so maybe I won't be in high demand?\" Mila posed.\n\n\"You will be the most beautiful woman at the party, any man would be stupid not to desire you,\" Peter responded.\n\n\"You say that like you are looking forward to it; I bet you can't wait to stick your dick into Dianne Hislop, she's had the hots for you since we arrived,\" Mila punched him in the arm.\n\n\"A man's gotta do what a man's gotta do, I suppose,\" Peter grinned.\n\n\"Wanker,\" Mila liked the Brit pejorative.\n\nThe insult led to a little bed wrestling but no sex. They were both satiated from the previous night and needed to conserve their energy to be able to perform again this evening.\n\nWhen Peter and Mila had showered they proceeded downstairs to be greeted by the smell of fresh coffee and to find Sarah busy in the kitchen dressed in her high-hemline, white-trimmed, black dress, and white half-apron, tan hosiery and black low-heels. \n\nMila greeted Sarah and kissed her cheek and Peter kissed her full on the lips.\n\n\"Thank you both for last night,\" Sarah sat across the breakfast bar from the husband and wife.\n\n\"I see that you are both learning how to behave. Whilst we were very intimate together last night, it is good that we conduct ourselves with decorum when we are not sharing together.\" \n\n\"The tenets command that we each be true to our Order in the church,\" Sarah smiled at them both.\n\n\"That said Sarah, there is nothing preventing me from bending you over the breakfast bar and fucking you right now,\" Peter grinned.\n\nMila groaned and punched him in the shoulder.\n\n\"That is your right, as it is your wife's now that you have granted her permission, but practicing restraint when decorum dictates is also a much revered attribute for those of the higher Order,\" Sarah said deftly.\n\n\"While you are at work today Peter, Mila and I will prepare your house for your communal dinner. You have been to many of these in the past, they are really just dinner parties until the evening draws late and the sharing begins. In the past, that was when you were invited to leave if you hadn't done so already. I know that recently you both guessed what happened when you left but tonight you will partake of the sharing.\"\n\nWhen Peter left for work, Mila and Sarah busied themselves preparing for the dinner. Peter and Mila had hosted dinner parties before of course but none so important as this.\n\nMila had a thousand questions about the sharing most of which Sarah declined to answer.\n\n\"It is best that you discover for yourself the delights of the sharing. Remember that in Redhaven the wife about to experience her first sharing is usually newly married and has only recently been deflowered by her husband and experienced the delights of sexual congress.\"\n\n\"You can imagine the trepidation and excitement she is feeling. You are very experienced sexually Mila so although you are feeling uneasy about this evening, just try to relax and let the course of events unfold,\" Sarah reassured her.\n\nMila took extra care with her hair and makeup that evening and slipped into a pair of Wolford pantyhose that were super-sheer. She forwent panties so there would be no visible panty line when she slithered into her red satin evening gown. Her firm breasts did not require a bra to support them. The gown was backless and split on one side from hem to hip and tight as a sheath. Sarah fussed around Mila ensuring that the dress fitted perfectly and then helped Mila accessorise and put on her four-inch, red patent Jimmy Choo's.\n\nThe Hislops had made their maid Angie available for the evening to assist Sarah. \n\n\"Make sure Jim Benson doesn't accidentally fuck her before dinner,\" Mila said sarcastically and Sarah laughed at the joke.\n\nPeter and Mila greeted their guests as the two maids ushered them into the house. Mila was complemented on her dress by both husbands and wives and many of the men openly ogled her. The soft kiss on the cheek she usually received when saying good evening was replaced by a shamelessly passionate smooch in most cases, although some men still brushed her cheek with their lips formally. It was already obvious which of the men desired her which were not armored with her being transgender. \n\nPeter too was experiencing unusually long, hot-blooded kisses from most of the wives. Prior to dinner the couples broke up into groups, drinking cocktails, eating canap\u00e9s and chatting amiably. The Acolytes were far from strangers but there was an unfamiliar but exotic ambience to the evening. \n\nAs Peter and Mila had been recently paired and accepted as Apostles of the church there was no need for the reticence and secrecy that had shrouded similar events they had attended. The women glanced at each other both anxiously and expectantly, the men eyed the women appreciatively and with anticipation, the sense of portend in the room was palpable, there were covet yearning glances between some of the men and women. \n\nAs was the custom, after the meal the party split into two groups, the men and the women. Mila was asked repeatedly if she was excited about her first sharing. Tonight there was little talk of children, family and church matters; the main subject of conversation was sex. The women compared notes on performances of the men and Mila was sure that the men were doing the same about the women.\n\nSarah and Angie worked the room bringing drinks and clearing away used glassware and receptacles as they went. They were both wearing their maid's uniforms and looked sexy, they had received their share of appreciative glances but as far as Mila could tell, neither had been asked to provide sexual services.\n\nThe maids had prepared all three bedrooms in the house, providing them with fresh linen, lighting scented candles and ensuring there were tissues, towels and the requisites one needed for an evening of heavy sex. The dining room, the study upstairs and Peter's office had the furniture rearranged so that fold-away beds could be bought in and Angie made up the convertible couch-bed in the living room. \n\nSharing was not one big orgy as Mila thought it might have been. Sarah explained that whilst group sex did occur in Redhaven, at communal dinners it was customary for husbands and wives to pair off to take their pleasure. She also explained that before the sharing began, those who did not wish to participate would be given the opportunity to leave. There was no stigma attached. A couple may just not be in the mood for whatever reason, may be trying to conceive, or the wife may be in her menses; there were any number of reasons.\n\nAs the sharing was considered a religious rite, spinsters could not participate as they had no spouse, Sarah and Angie would discreetly withdraw but be available to serve in any way necessary. Sarah had taken some time to instruct Peter on the rite of communal sharing and she made her way over to him and took him by the elbow and guided him to the centre of the room and smiled at him.\n\n\"Ok Peter, here you go. I'm sure you will do just fine. Relax and enjoy the evening,\" she whispered in his ear.\n\nPeter clinked his glass with his spoon repeatedly until he had everyone's attention. The wives came back into the living room and joined their husbands, taking station beside them. Mila joined Peter in the centre of the room as she had been instructed. The air of expectation was palpable.\n\nPeter began a little nervously but became bolder as he got into stride.\n\n\"As an ordained Apostle of the Sons of Jehovah I welcome you into my house and offer to you the privilege of our church and encourage you to share in God's bounty. By sharing the gift that is bestowed on man in the form of his wife, we proliferate our devotion to the tenets by spreading our seed.\"\n\nWhen Mila read this passage in the tenets whilst Sarah was providing religious instruction Mila had scoffed at it.\n\n\"This is just an excuse for married men to fuck other women,\" she had proclaimed.\n\nSarah had admonished Mila and reminded her that this was now her life, she must live by the tenets. Adequately chastened, Mila decided right then and there to keep her thoughts about the SOJ tenets to herself.\n\n\"Let us give thanks to Jehovah and the blessing of the tenets he has given us to guide us through life,\" Peter concluded the invocation and the assembled couples, now reduced to seven as three had discreetly departed, mouthed a short prayer.\n\nIn Redhaven if a man wished to make love to another man's wife, he would approach him and ask: 'may I share in your bounty', offering his own wife in return. At communal gatherings such as this where the sharing had been agreed to, the wives simply made their way to a bed and awaited the arrival of a mate. It was considered an audacity for a woman to refuse the man as her husband had already agreed to make her available to all of the assembled men.\n\nAs it was Peter's house, Sarah had been allotted their bedroom and she made her way up the stairs, her legs shaking, her hands trembling as she clutched the balustrade. Sarah had left a tray with an ice bucket, bottle of gin, a bottle of tonic water and crystal glasses and Mila went straight over to it and poured herself a long one.\n\nThe men gathered in the centre of the lounge and discussed who would pair with whom. Sometimes the pairings were pre-arranged during the evening, men taking on women who had drawn their fancy or requesting those women that they had lay with before and had an affinity with. As tonight was Peter's first sharing it was customary for him to choose whomever he wanted to lie with and for all of the men to request to lie with his wife. There were as many women as there were men so no one would miss out and changing of partners multiple times was expected.\n\nMila stood demurely in the centre of the room, her hands in front of her, waiting to see which of the husbands would come to share her first.\n\nIt was Jim Benson and he looked as nervous as she felt. He had no need to be; he was obviously experienced in the sharing. Jim and Peter were good friends and Helen Benson was her friend; they played tennis together and went to each other's houses for coffee. At least if she was to be shared, it was with someone she liked.\n\nHe approached Mila and lifted her face so gaze on her beauty.\n\n\"You are gorgeous,\" he whispered.\n\n\"I desired you the moment I first saw you Mila. The things I wanted to do to you are so carnal that I dare not tell you,\" he stroked her cheek with the back of his hand.\n\nMila didn't know whether to feel flattered or disgusted, but this was her life now. She had chosen it.\n\n\"But... but then... forgive me Mila,\" Jim began to whimper.\n\n\"But then you found out I am transgender,\" Mila sighed.\n\n\"Yes. Don't get me wrong, I still desire you, look the evidence is plain,\" Jim looked down and Mila followed his gaze and saw the erection in his pants.",
        "\"It would be reprehensible of me not to take you, particularly as this is your first communal sharing, and especially as Peter is lying with Helen as we speak.\"\n\nMila felt a flash of anger and jealousy but it dissipated. She and Peter had talked long and hard about this moment and had agreed that as they had no choice but to participate they might as well take pleasure from sharing. Their love for each was strong and rolling around with other men and women now and then would not ruin what they had. They had already invited Sarah into their bed hadn't they?\n\n\"You don't have to do anything with me Jim; I understand,\" Mila stroked his arm affectionately.\n\n\"Oh don't get me wrong Mila. I'm going to take my pleasure with you. I just want you to know that I won't be using... err... won't require... your bottom half, shall we say,\" Jim stammered.\n\n\"Ok Jim. I get it. Why don't we just see where your desire takes us, just do with me as you would any other wife that you fancy, I just won't expect to have to use my bottom half, so to speak,\" Mila smiled.\n\n\"It's just I don't want to see your...\" Jim looked bashful and pointed to her groin.\n\nMila smiled and nodded and Jim pulled her into his arms.\n\nJim was a good kisser and Mila responded accordingly, returning his kisses and pressing her body against him. She felt his hard cock press into her belly. She fully expected her gown to be ruined by the end of the night but she didn't care; she was stinking rich and had wardrobes full of them. Mila freed Jim's cock from his pants and he gasped in her mouth as she rubbed it against the sleek satin.\n\nA globule of transparent pre-ejaculate oozed from Jim's glans and was absorbed into the shiny satin fabric, smearing the front of Mila's dress as she stroked the throbbing flesh.\n\nJim eased the spaghetti-straps of Mila's gown from her shoulders and rucked her dress down around her waist, exposing her firm breasts. He held her at arm's length and gazed at her alabaster flesh.\n\n\"Magnificent,\" he sighed and lowered his face to her bosom.\n\nMila cradled Jim's head while he suckled at her breasts, nipping and lapping at her nipples alternately until they were like hard pink berries. Mila eased Jim back towards the bed and they lay down, Mila's gown still pulled down to her waist and Jim still fondling her breasts, he was fascinated by them. \n\nThey were lying side by side with Jim alternately lapping at Mila's bosom and then rising to kiss her passionately. At least now Mila could get to his cock and she stroked him to full tumescence.\n\n\"Do you mind if I come like this? I love your tits Mila,\" Jim's voice was muffled, his mouth full of Mila's breast.\n\nMila didn't mind one bit and she smeared Jim's shaft with pre-cum, gripped his cock tight and began to stroke it, starting slow and building up speed as she felt it begin to throb in her hand.\n\n\"Oh god yes!\" Jim howled.\n\nHe crushed Mila's lips with his mouth and drove his tongue into her. His whole body began to shudder and then ropes of scalding semen erupted from his cock and splattered over the front of Mila's dress and across her thighs where the split was open. She felt his cock shudder and pulse in her hand as his tongue danced in her mouth.\n\nWhen Jim had finished coming it was almost embarrassing as he disentangled himself from her and climbed off the bed to zip up his fly, he hadn't even taken off his pants. Mila lay on the bed with her dress in disarray, the top of her body exposed and her skirt and legs spattered with cooling semen.\n\n\"I'm sorry Mila. It will be better next time; it's just that you are so beautiful and those tits... I love those tits,\" Jim stammered.\n\nMila lay there bemused, smiling up at Jim who was trying hard not to embarrass himself further. Despite the schoolboy fumbling on the bed Mila had found the experience arousing and was semi-erect and wanted Jim to leave so she could free her penis from where it was tucked uncomfortably between her buttocks.\n\n\"Could you be a gentleman and toss me a face washer from the ensuite please Jim?\" Mila asked, trying not to giggle as Jim fussed around, unsure what to do next.\n\nHe brought a damp face cloth out of the bathroom and handed it Mila who dabbed at the cooling puddles of semen on her dress and thighs. As she predicted her dress was ruined, but who cares, she thought.\n\nThere was a soft rapping on the bedroom door and Jim looked relieved.\n\n\"Oops... your next appointment, so to speak. Thank you Mila, it was lovely,\" Jim said nervously but was obviously glad to leaving.\n\nThe confident powerful man who helped run a huge drug empire and demanded that the Hislop's aupair Angie present herself to him in their garden was nowhere to be seen.\n\nHe came over to the bed and kissed Mila awkwardly and then artlessly stumbled for the door.\n\nMila was still lying on the bed when Brian Hislop entered the room. He was already naked under a silk robe and Mila was unsure whether he had already shared another man's wife or if she was her first for the evening but he was certainly ready if the bulge in the front of his robe was any indication.\n\n\"Hello my delightful young lady,\" Brian beamed at her as he entered and closed the door behind him.\n\nBrian and Dianne Hislop had been the first friends that Peter and Mila had made in Redhaven, it was they who had shown Peter and Mila around the house they now owned. Brian had always been a little cheeky and flirtatious with Mila but it was harmless, while Dianne was like a cougar around Brian.\n\n\"I'm not that young Brian and I don't think I look that delightful lying here with my hair a mess, my makeup ruined and my dress covered in Jim Benson's cum,\" Mila smiled back at him.\n\n\"Well why don't you fix yourself up a little while I fix us both a drink. Lose the dress, keep the heels and get back in here lickety-split,\" Brian turned his back on her to pour drinks.\n\nBrian was the antithesis of Jim Benson. He knew what he wanted and how he wanted it; it helped that he was incredibly handsome. If Mila had to offer herself to a succession of men to abide by the tenets, then they might as well all be like Brian Hislop. \n\nMila slipped out of the satin sheath and kicked it in the corner, she fixed her makeup and hair and sprayed perfume and threw on a wispy, transparent baby-doll neglig\u00e9e and came out of the bathroom to find Brian sitting on the bed waiting for her. He was naked and sipping a drink, he had dimmed the lights to give the room an ambiance. He smiled at Mila and offered her a drink as she sat down beside him.\n\n\"Do you know how long I have dreamed of getting you into bed?\" he smiled at her and raised his glass.\n\n\"About the same amount of time that Dianne has dreamed of hopping on my husband?\" Mila smiled back at him and sipped.\n\n\"Well of course we discuss who we would both like to fuck. Husbands decide who they will ask to share with but it would be a silly spouse who didn't defer to his wife occasionally Mila. You will find out Mila, that yes, we are a patriarchal society but that women still have great influence,\" Brian explained.\n\n\"But to answer your question, I have no doubt that Dianne is outside the next door bedroom waiting for Helen Benson to finish with Peter.\"\n\n\"I take it Jim didn't perform very well?\" Brian sniggered.\n\nMila frowned, was pillow talk allowed between men and women? She knew that the women gossiped.\n\n\"No need to answer. You could see the trepidation on his face when he was offered the privilege to go first, he's made no secret of the fact the he finds you very alluring but can't reconcile to himself that you have a penis.\"\n\n\"Well that was obvious,\" Mila replied.\n\n\"I on the other hand am intrigued and it's something I've always wanted to try and I've had the hots for you ever since I met you,\" Brian took Mila's drink from her and placed it on the bedside table.\n\nHe pulled her down onto the bed with him and kissed her. His hands went to her tender breasts as his tongue explored her mouth, Mila sought his phallus and softly caressed it. They kissed passionately and took their time exploring each other, Mila was rock-hard and her cock bulged the front of her pantyhose. When Brian snaked a hand down there and squeezed, she groaned into his mouth.\n\nBrian stroked and fondled Mila's cock through the gossamer fabric of her pantyhose and she stroked his long thick cock, they moaned into each other's mouths as their passions ignited. \n\nMila wheeled on the bed to that her face was over Brian's groin, her legs straddling his face. Brian looked up Mila's firm thighs and saw her engorged member sheathed in the gusset of her hose. Mila lowered her mouth to Brian's massive organ and look him in her mouth.\n\nBrian sighed as he felt Mila's tongue working on his glans and her lips suckling his shaft. He had recently fucked one of the other wives and Mila could taste the remnants of her cunt juices on Brian's cock. The Cialis he had taken before coming to dinner was doing its job and his cock remained bloated.\n\nBrian lapped at Mila's cock through her pantyhose and elicited a moan from her and a dribble of dewy pre-cum from her cock. He wanted to fully experience his fist time with this beautiful transgender woman and he yanked down the waistband of her hose and took her hard flesh into his mouth.\n\nMila and Brian sucked and slathered on each other's hard cocks, using lips, tongue and teeth to great effect. Mila lapped at Brian's scrotum and suckled his testes. It felt so good that Brian reciprocated. The couple sucked each other until they were both close to extremis and they mutually agreed that they had better stop.\n\nBrian lay on top of Mila and kissed her and she returned his kisses. He broke the kiss and gazed at her beautiful face.\n\n\"You are wonderful,\" he smiled down at her.\n\nMila responded by locking her silken thighs around his his torso and rising to kiss him. Their cocks rubbed together, the fabric of Mila's nylons increasing the pleasure as they frotted, kissed, and fondled.\n\nMila arched her back and lifted her legs high and reached between them and positioned the head of Brian's big cock at her sphincter. Using a fingernail she opened a slit in the gusset of her nylons and Brian's cock nestled in the puckered bud. Mila was prepared and had lubricated her sphincter and inserted gel-caps inside her anus. \n\nBrian pushed and Mila rose to meet him and his hard cock slid inside her all the way. Brian rested when he had Mila fully impaled and he looked down lovingly at her.\n\n\"Nice?\" she smiled up at him.\n\n\"Lovely,\" he replied.\n\nMila put her arms around his neck and pulled his face to hers so she could kiss him, she wriggled her buttocks encouraging Brian to fuck her while she clung to him. Brian could feel her cock pressing against his belly and it felt good; it felt right. As he began to fuck Mila he made sure his hard belly rubbed against her penis. \n\nThey began to rut, fucking each other hard and fast, kissing, scratching, caressing, mouthing tender ripostes and outrageous obscenities as their passion built.\n\nMila could feel her anus stretched to capacity by Brian's huge cock and Brian felt Mila's velvety channel enveloping his throbbing cock, clinging to his sensitive flesh. Mila felt full in wonderful way and waves of deep bliss emanated from her back passage and tingling scintillas of delight radiated from her tender glans.\n\n\"Can I come?\" Brian broke the kiss long enough to gasp.\n\nMila tightened the grip of her legs around his waist and her arms around his neck and nodded. She was close too.\n\nBrian lowered his face and kissed her as he ground his cock deep inside her and ejaculated. He felt the scalding stream of Mila's spawn spatter on his belly as she came and felt her anus contract and palpitate around his convulsing cock.\n\nThey clung to each other, sharing their bliss and contentment as they climaxed together.\n\nBrian collapsed on top of Mila when he was spent and she lowered her legs from his torso and unclasped her arms from around his neck. They both lay there gasping until Brian had the energy to climb off her.\n\n\"Well that was wonderful,\" Brian lay beside her, lazily circling a fingertip around her belly button.\n\n\"Yes it was,\" Mila smiled up at him.\n\nHe handed her the remains of her drink and picked up his own and they both swallowed the liquor.\n\n\"Can I get you another before your next partner arrives?\" Brian asked arising from the bed and slipping into his robe.\n\nMila took the damp towel from the bedside table and used it to tend to the practicalities, tossing it to Brian when she had finished. He dabbed at Mila's come drying on his belly.\n\n\"Next partner? How many am I going to service?\" Mila asked.\n\n\"I'd say most of the men have gone twice by now so they will need time to recover. Cialis works wonders but not miracles,\" he explained pouring them both a fresh gin and tonic. \n\n\"So we have time for a drink and a smoke?\" Mila asked, getting up and adjusting her neglig\u00e9e.\n\n\"You have smokes? Fuck, yes please. Don't tell Dianne though,\" Brian beamed at her.\n\n\"Marlboro menthols in the draw there with the smokeless ashtray, let's go out on the balcony,\" Mila said.\n\nBrian put his arm around Mila affectionately and turned her face to his as they walked through the sheer curtains onto the balcony.\n\n\"Are you ok?\" genuine concern in his voice.\n\n\"I guess so. I'm sure I'll get the hang of sharing, I just hope all the men are like you,\" Mila kissed his cheek.\n\n\"That's the beauty of sharing. After tonight you and Peter only have to share with couples you know will make you happy,\" Brian lit her cigarette and then his own.\n\nThey stood side by side on the balcony, leaning on the balustrade, smoking and enjoying each other's company.\n\nMila serviced two other men that night and was aching and sore but contented when she and Peter said good night to the last of their guests and went to bed.\n\nThey lay blissfully in each other's arms and fell asleep immediately.\n\n*****\n\nAnother British pejorative that Mila liked was bollocks and it was what both she and Peter both thought of the religious beliefs that pillared the tenets of the Sons of Jehovah. They were so obviously concocted to justify a lifestyle of excesses, debauchery and misogyny. They attended the mandatory Sunday observance and suffered through the services and the picnic lunches but it was a small price to pay for the lifestyle they had come to enjoy.\n\nThe couple soon came to realise that adherence to the core religious teachings, cobbled together from select passages of other Christian faiths and skewed to support the SOJ belief system, varied significantly. Some, especially the lower Order Acolytes were zealots, and some, especially the elite Apostles, paid scant regard to religious worship but revelled in the bounty that the church bestowed on them. Peter and Mila fitted firmly into the latter tranche.\n\nPeter and Mila had found a select few husbands and wives who they both liked enough to share with on a regular basis but they were still deeply in love and their marriage was sound. They enjoyed their holiday breaks from Redhaven and travelled extensively, lying on the beach in the Cayman Islands checking up on their bloated bank accounts, skiing in New Zealand and Japan, one Christmas they rented an English manor house and took Sarah with them.\n\nLife was easy and time passed slowly, although Peter did spend a lot of time away conducting business for the church. Mila's circle of friends was confined to a select group; mainly wives of other Apostles. She had spent many an hour explaining to them how she had transformed from Miles to Mila but provided an edited version. Except for a very small circle, they believed that Mila had become Peter's wife through conventional means; they knew nothing of her being a surrogate for her sister.\n\nHer friends were intrigued by how she had taken a man's body and with the assistance of hormones, a little surgery and hours of painstaking practice she had become the woman she was today. Of course the question of her genitalia came up and one afternoon after sipping far too many sangrias by the pool Mila had simply dropped her bikini bottoms and showed them.\n\nMila and Sarah became very close friends and part-time lovers. Mila had forgiven Sarah her transgressions. Understanding how the tenets were ingrained into the Sons of Jehovah, Mila understood that Sarah had no choice but to obey the Reverend when he had ordered her to spy on them. Being part of the select few who knew the real purpose of the ranch was also a special bond. Sarah usually shared Mila's bed while Peter was away but Sarah lived in hope that one day she would be married to a member of the Order but didn't hold out much faith it would happen. Widowers were a scarce commodity in Redhaven and they had their pick of spinsters whom they could marry.\n\n\"Remember when you first came to Redhaven and I explained to you how couples Paired during their time at high school?\" Sarah explained to Mila one day.\n\n\"I told you that a girl must be pure to be Paired but I didn't fully answer your question as to why I wasn't.\"\n\nMila nodded.\n\n\"I was defiled before I could be Paired,\" Sarah said softly.\n\n\"I was nineteen years old and sweet on a Patriarch boy who was sweet on me and I hoped he would Pair with me but I had also come to the attention of the son of an Apostle. Being the daughter of an Acolyte I was prepared to become the wife of the Apostle even though I didn't really like him, just so that I could rise up the social Order.\"\n\n\"What I didn't know was that the Pairing had not been approved by the Council of the Apostles but the boy didn't tell me that. He told me that we were to be married but to keep it a secret until our Pairing was announced at the Sunday service.\"\n\n\"The boy convinced me that as we were soon to be married there was no reason to wait for our wedding night. As you now know, it is a colossal sin for a woman to break the tenets by not saving her virtue for her wedding day,\" Sarah sighed.\n\n\"He deceived you, bedded you and you were disgraced and became a spinster,\" Mila concluded Sarah's story for her.\n\n\"Yes. I was lucky that Reverend Hayes took pity on me and found me a good job working for the Hislops as their housemaid,\" Sarah smiled vainly.\n\n\"Of course he demanded his right to use you when it suited him,\" Mila said solemnly.\n\n\"Don't say it that way, it is written in the tenets. When word got around that Reverend Hayes was using me almost exclusively, I was no longer asked to lie with other men.\"\n\n\"So when he took the almost inconceivable step of bringing Peter Randal to Redhaven to live amongst us, I was the obvious choice to be your maid,\" Sarah explained.\n\n\"And to be his spy,\" Mila smiled.\n\n\"Have things not worked out for the better?\" Sarah asked, taking Mila's hand in hers.\n\n\"I guess they have,\" Mila softly squeezed Sarah's hand.\n\n\"And the Reverend is still sweet on you?\" Mila asked.\n\n\"Yes, but his interest is waning. There are younger prettier girls out there,\" Sarah said simply.\n\n\"And the boy?\" Mila asked.\n\n\"He was excommunicated but given the option to work at the ranch because of who his father was. He works on the legitimate side of the business farming cattle,\" Sarah replied.\n\n\"But when you are required to render service up at the ranch you must run into each other?\" Mila asked, a little alarmed.\n\n\"Yes and I deliberately let him take me. I can see the destitution in his eyes while he fucks me, thinking of the life that he could have had, had he not been so deceitful.\"\n\n\"So the moral of the story is: 'don't fuck with Sarah Jennings',\" Mila squeezed Sarah's hand affectionately.\n\n*****\n\nWhen Mila opened the door that fateful morning she didn't know who was more shocked; her or her sister.\n\n\"Hello sis',\" Mila's sister grinned and barged past Mila into the hallway.",
        "Mila caught a glimpse of a beaten up VW beetle parked in the driveway before she slammed the door closed. The car was incongruous in a place like Redhaven, like an angry pimple on a pretty face.\n\nHer sister looked around the spacious extravagance of the Randal household, walking slowly through the house, touching things, lifting and studying expensive knick-knacks and running her finger across polished surfaces while Mila stood in stunned silence. \n\n\"I'd heard you and Peter had made it good, but shit Miles, this is the fucking bomb,\" Mila's sister's upper-class, Mid-Atlantic accent had transformed into a blend of American street with a slight Australian strine over the years.\n\n\"And look at you brother of mine! You look more like me than me, but I'm reliably informed that you don't have a cunt,\" she smiled evilly.\n\n\"You certainly dress nice, although no one wears nylons anymore unless they're going to a wedding or a funeral.\"\n\nMila was dressed in a Saint Laurent skirt and blazer and Jimmy Choo heels and expensive pantyhose. Her whole outfit cost just south of eight thousand dollars. Her sister was dressed in a denim miniskirt, blue and white horizontal striped long-sleeve blouse, cork wedge sandals and her dirty-blonde hair was piled high on her head. She still affected dramatic eye makeup but she wore pink lip-gloss and her junk-jewellery was cheap and vulgar. The whole ensemble would have cost less than fifty dollars at K-Mart.\n\nThe five years that they had been apart had seen dramatic changes in both of their fortunes.\n\nHer time in Australia had aged Mila's sister, she looked like she hadn't lived well and her tanned skin was ravaged by the sun.\n\n\"Come. Let me look at you,\" her sister took Mila by the hands led her into the lounge.\n\nMila was still astonished and unable to speak; her sister led her around like a dummy.\n\n\"I knew you had a thing for lingerie and nylons Miles, and you really liked dressing in my clothes and passing yourself off as me, but I never thought that you'd be a gender-bender,\" there was sarcasm and contempt in her words.\n\n\"Do you really like taking it up the ass? I find it quite uncomfortable on the rare cases I allow it,\" she whispered in Mila's ear.\n\n\"So... I go on a little overseas holiday and my brother steals my identity. My new name is Rachael Bunning by the way. It was really difficult getting false identity documents; but you wouldn't know about that. Of course yours are all legitimate, but it's as if I don't actually exist. Well I guess I don't really, because you are me and I'm Rachael.\"\n\n\"Are you going to say something, you life-stealing cunt!\" Rachael's voice boomed through the empty house, her face screwed up with hostility and loathing.\n\nThe sudden explosion of anger bought Mila out of her reverie.\n\n\"This could all have been yours Mil... Rachael, but you traded in the opportunity for a yoga instructor and a life-long holiday in the antipodes,\" Mila snapped at her sister.\n\n\"I'm sorry, I still can't get used to looking at you. I keep seeing myself or at least what I should look like. But you're really just some kind of man-woman masquerading as me. I don't know how Peter can stand you!\" Rachael fired back.\n\n\"Peter and I love each other. You drove a wedge deep into your marriage and broke it apart. Peter was no saint either but he changed, just as I did,\" Mila retorted.\n\n\"Hah! You can keep him. Him and his secrets and his coke and his sluts!\" Rachael hissed.\n\n\"That's not him anymore. He's a good man,\" Mila replied.\n\n\"What do you want Rachael? You can't have this life because I'm living it. I am Mila Randal,\" Mila said firmly.\n\n\"You stole my identity, you stole my husband, you stole my life. But that's ok. I don't want it,\" Rachael walked over to the wet bar and poured herself a drink without asking.\n\n\"I thought you had made a life for yourself in Australia with Jeff the yoga guru?\" Mila made her way to the bar and poured her own drink.\n\nThe sisters had finished venting and their anger had cooled. They were no longer shouting at each other.\n\n\"I heard that you split up with your boyfriend but I was told you were backpacking around the country,\" Mila sipped her gin and tonic, letting the alcohol soothe her.\n\n\"Well that's just it isn't it? When I left Peter he was broke and there were some really bad people out to get him and he was hoping that living with these Mormons, or whatever the fuck they are, for two or three or years would set him up,\" Rachael said and Mila declined to correct her about the religious order she belonged to.\n\n\"I got my revenge on him. I didn't think Peter would still be alive. But it turns out that Jeff's promises of living in a mansion in Vaucluse were full of shit. We lived in nice enough places until my money ran out. Do you know how much money a yoga teacher makes?\" Rachael circled a finger indicating zero.\n\n\"After I dumped Jeff I did what I could to survive. There are thousands of illegals who skip their visas and are living in Australia undocumented and when you have this you can make a decent living,\" Rachael indicated her face and figure.\n\n\"But it's not what I wanted. Do you know what my last job was? I was a fucking barmaid in a pub! I was living in a backpacker hostel in Cairns surrounded by oversexed, over exuberant adolescents, for fuck sake!\"\n\n\"Come on honey, you know that's not me.\"\n\n\"I tried to come home, only to find that my brother was now a woman and had stolen my identity. A mutual friend told me all about you. Seems he had a thing for me but made do with fucking a look-alike with a penis,\" Rachael snorted into her scotch.\n\n\"Steven Boutros,\" Mila whispered as the penny dropped.\n\n\"Steven Boutros, exactly. You and Peter pay him hush money, but I proposed a better deal and he took it and helped me get my identity documents. I did exactly what you did. I stole some else's identity,\" Rachael poured more liquor into her glass.\n\n\"So you can keep your shitty life with my husband and your shitty church friends, trapped here in Stepford. I'll make it easy for you,\" Rachael's eyes glimmered with hatred.\n\n\"So it's all about the money,\" Mila countered.\n\n\"Yep. I've no idea how much the two of you are worth, but I know it's a lot. You can keep Peter's money; all you have to do is transfer everything you have in your name into my bank accounts. Steven and I will split it and go gently into that good night as they say,\" Rachael slammed her glass down on the counter to emphasise her point.\n\n\"But you won't though. Your type never do. You always come back for more,\" Sarah appeared through the dining room entry dressed in her maid's uniform.\n\nShe had a pistol in her hand levelled at Rachael.\n\n\"Oh my fucking god you have a French maid! How decadent,\" Rachael scoffed.\n\nThe pistol was fitted with a silencer and when Sarah fired a round between Rachael's feet the report was muffled.\n\nRachael paled. She realised the predicament she was in. This was not how things were supposed to pan out. She was supposed to have the upper hand.\n\n\"The way I see it, if Rachael Bunning was to disappear, no one would notice. Just like no one went looking for Miles Frances,\" Sarah had a smirk on her face.\n\n\"Hey wait a minute,\" Rachael backed up to the breakfast bar.\n\n\"As for Steven Boutros. We know all about him and we have friends who can take care of him and make it look like it was an accident. That was always our intention but Mila had a soft spot for him so we allowed him to take his trickle of cash and keep schtum,\" Sarah elaborated.\n\nShe glanced at Mila who took a sip of her drink and shrugged her shoulders.\n\n\"But I'm your sister Mila! You wouldn't let these crazy people do anything to me!\" Rachael's tone had changed from demanding to pleading.\n\nSarah put another shot just to the right of Rachael's hip which splintered the woodwork.\n\nRachael fell to her knees.\n\n\"I'm sorry! This was stupid! It was all Steven's idea! I'll go away and never come back!\" Rachael begged though sobbing jags.\n\n\"That's an idea. Your sister could disappear and never come back; what do you think Mila?\" Sarah's voice was heavy with sarcasm. \n\n\"No! Not like that! Don't kill me. I promise I won't say anything,\" Rachael pleaded.\n\n\"I think Peter should have a say,\" Mila said coldly.\n\n\"Yes I think you're right Mila. I'll call Officer Friendly and have that piece of shit car in the driveway towed away and disposed of and your sister taken out to the ranch. We have a place there where we can house people securely, you've seen it,\" Sarah said to Mila, cutting Rachael out of the conversation.\n\n\"Yes! Yes! Do that! Keep me somewhere safe until I can talk to Peter. Don't let the crazy maid shoot me!\" Rachael implored her sister.\n\nSarah fired another warning shot, silencing Rachael.\n\n\"Do you think I'm a crazy maid Mila?\" Sarah smiled at Mila.\n\nMila walked over to Sarah and kissed her quickly on the lips.\n\n\"Of course not darling,\" Mila turned and grinned at her sister.\n\n*****\n\nMila and Peter approached the gates to the ranch; Mila was driving her new Bugatti. The guards waved them through and they drove up to the cluster of main buildings and parked next to the Chuck Wagon.\n\nThey walked over towards bunkhouses holding hands and veered towards a smaller one-story town-house comprising four ground-level apartments.\n\nRachael Bunning was sitting outside her apartment in her well-tended garden smoking a cigarette and drinking bourbon. She was dressed in hotpants, a tight satin blouse, sheer tan pantyhose and high heels. Her makeup was heavy but perfect; her once blonde hair was dyed jet black and cut into a severe bob.\n\nThe Council of the Apostles had kept Mila's sister locked up at the ranch for three weeks while they decided what to do with her. Most wanted her to just disappear, it was the safest option. Peter and Mila pleaded her case.\n\nRachael Bunning was a cunning, conniving bitch and when it came to fighting for her life she was willing to do anything. During those three weeks, Mila had visited Rachael and she had told her a little about the Sons of Jehovah and Rachael had latched onto the weekly conjugal visits performed by the spinsters.\n\n\"What if instead of bussing in a posse of hookers every Sunday there was a permanent presence out here? You know, a few of these spinsters rotate through here every week. I could... you know head them up, be the Madame, whatever the fuck you call it,\" Rachael had proposed to Mila. \n\n\"You know you could never leave. We will never trust you. This would be your life,\" Mila mused.\n\n\"Well given the alternative I think I can live with that, if you know, you make sure I'm comfortable,\" Rachael grinned.\n\nAnd so Rachael Bunning lived comfortably out at the ranch, blissfully unaware of the tons of marijuana and methamphetamine being manufactured only a few hundred yards away from where she and three spinsters lived in their opulent apartments, wanting for nothing, but having to service the sexual needs of the ranch staff.\n\nAs Rachael herself had said, given the alternative, it wasn't a bad life.\n\nSteven Boutros had disappeared and the investigation into his disappearance soon became a cold case. A neighbor claimed to have seen Steven getting into a car with two Latino gentlemen but had rescinded his statement soon after.\n\nPeter opened the gate that led into to Rachael's well-tended little garden and stood aside so that Mila could enter first.\n\nRachael looked up at them both and smiled. \n\n\"Hey sis'; sucked any good cocks lately?\" Mila grinned.\n\n\"I could ask you the same thing,\" Rachael returned the grin and hugged her sister.\n\nThe End\n\nAuthor's note: I hope you enjoyed my story; tell me what you think. I had received several pleas for Mila's sister to reappear so I introduced the last few paragraphs to 'put a bow on it', so to speak. Maybe we will visit Mila again later but let's let her enjoy Redhaven for a little longer. \n\nMichele Nylons, author and transvestite playgirl\n\n\ud83d\udc8b\ud83d\udc8b\ud83d\udc8b\ud83d\udc8b"
    ],
    "authorname": "MicheleNylons",
    "tags": [
        "anal",
        "fellatio",
        "gangbang",
        "group",
        "nylons",
        "panties",
        "pantyhose",
        "satin",
        "strockings",
        "transgender"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/the-surrogate-ch-06-1"
}