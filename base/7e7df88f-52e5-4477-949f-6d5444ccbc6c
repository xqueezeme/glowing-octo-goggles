{
    "title": "Proving My Sanity",
    "pages": [
        "Copyright Oggbashan September 2016\n\nThe author asserts the moral right to be identified as the author of this work.\n\nThis is a work of fiction. The events described here are imaginary; the settings and characters are fictitious and are not intended to represent specific places or living persons.\n\nNote: A guinea at the time of this story was a gold coin worth one pound and one shilling (\u00a31.05). An agricultural worker's earnings for a year were about twenty-five guineas in a good year. \n\nI think my staff are holding me prisoner. It could be through love, or for some other reason, but I am unable to escape.\n\nIt started when I was laid low by an odd summer fever. My doctor didn't know what it was, or how to treat it, but he pretended knowledge he didn't have. His instructions on treatment confined me, not just to the within the bounds of my estate, but have literally tied me up, helpless. He ought to know more because medicine has improved during Queen Victoria's reign but he is a country doctor who doesn't keep up to date. I think he is still using 18th Century remedies in 1850.\n\nI know I am aged but until the fever struck I was hale and hearty for my age. During the fever I was unconscious most of the time, and when awake I was raving, making no coherent sense. Now I know who I am, where I am and who my attendants are, but they still treat me as if I am insane.\n\nOne of the complications of the fever that is still with me is sudden uncontrolled thrashing of my arms and legs. The doctor thought I might injure myself during these fits so he ordered that I should be tightly wrapped at all times except for calls of nature. For those, I should be escorted by at least four people to ensure I do not harm myself. But those four people are women, Anglo-Indian women, Sumitra, Asha, Gita and Meena. They have Christian names such as Anne, Mary etc, but we always use their Indian names.\n\nI am, or was, a Nabob. I had made my fortune in India before I returned to England bringing some of my younger female Anglo-Indian servants with me. Servants? I should be honest with myself. They are not my servants. That may be what they do, but they are really my harem of mistresses. All of them are Christians, at least nominally.\n\nI bought a comfortable estate of several thousand acres and a medium size country house which has forty bedrooms and parts of considerable antiquity. The cost of that estate barely dented my wealth and actually increased it because rent from the tenant farmers is profitable, particularly since I invested money in improving the fields they use.\n\nMy wife and new-born son died together several decades ago in India. Since then I have not sought another wife. I had and have many Anglo-Indian mistresses, willing to share my bed whenever I needed them. Now, uninvited, four of them share my bed protecting me from myself.\n\nAfter the fever I found it difficult to swallow my normal food. The doctor suggested milk-based possets or thin gruel. Even the gruel was too much for me and made me vomit uncontrollably. Sumitra, my senior mistress and effectively my housekeeper, found something I could swallow and retain -- breast milk. At any time at least one of the Indian ladies has given birth recently. I should be ashamed that I have so many half-Indian children but I'm not. They are the joys of my elderly existence -- or they were until this fever struck.\n\nSumitra arranged a rota of wet nurses for me. Several times a day a leaking breast is pushed into my mouth and held there until I swallow. My protests are ineffectual, ultimately stifled by soft warm flesh. My bondage prevents anything other than a verbal objection. I suppose I could bite, but I wouldn't. I know it is done as gently as possible and with love and affection. I can't repay that love with a bite.\n\nThat is my real problem. I am bound by love, restrained by loving hands, silenced by warm breasts or lips, cradled in soft bonds that swamp me.\n\nTake my situation now. I am sitting on a chair in front of my dining table. On the table is a glass of water and a few soft biscuits especially prepared for me by the pastry cook. But I can't reach them. Why not?\n\nMy body is inside in a long sleeved nightgown with padded mittens sewn to the end of the sleeves. My legs are bound together with long scarves. My arms are secured to my sides by more long scarves. Around those bonds two sarees are tightly wrapped around me, making me a helpless silk sheathed bundle from beyond my feet up to my neck. That bundle is tied to the chair with more scarves around my ankles, my thighs, my waist, and my chest. Individually the bonds are loose and soft. Together they make me totally confined and restrained no matter how much I struggle. But if I struggle my mistresses will assume I am having a fit. To stop me biting myself they will stuff my mouth with silk before hugging my head between their soft breasts.\n\nIf I protest in words, my voice is stifled first with insistent lips or my mouth filled by a naked breast. If I still try to speak, silk fills my mouth and is held there with another long scarf wrapped round and round my head before my face is dragged deep into a cleavage.\n\nI can't write or even dictate this account. I am keeping it in my memory until there comes a time when I am free to write it in my private diary.\n\nThe only requests my mistresses do listen to is when I want the toilet. I have to give timely warning. They have to remove the bonds attaching me to the chair, carry me to a commode, loosen the saree around my lower parts, clean me up and then return me to my enforced immobilisation.\n\nI'm being unfair. I did ask to go out of the house into the garden. They loaded me into the Bath Chair, tied me to it, and wheeled me around the formal gardens. Even so, they were afraid that my balding head would catch the sun, so I was wearing a capacious bonnet which blinkered me like a nervous horse. At first all I could see was straight ahead -- the tight saree-clad buttocks of the woman pulling the Bath Chair. While a pleasant sight, I asked for the bonds around my head to be loosened so that I could turn it. Reluctantly Sumitra eased the scarf that was fastening my head to the chair. As I expected, the gardens were well kept but I was unable to talk to the gardeners. The women didn't let me. As soon as a gardener came into sight, the chair was wheeled in a different direction.\n\nI have more freedom in bed at night. My massive four-poster bed is occupied by me and four women directed by Sumitra. One of my ankles is tied to hers while she lies on top of me with a woman closely pressed against each side of me. The third woman is propped against the headboard, her legs splayed wide while my head rests on her body below the waist. If I show any signs of a fit, that woman's legs clamp around my head while the other three stifle any thrashing with their naked bodies.\n\nSumitra ensures that I am tired. As soon as the four of them are positioned surrounding me she brings me to an erection, stuffs it inside herself and rides me until I'm exhausted. I'm not a tall man and I have become shorter with age. Sumitra's lips cover mine while she makes love to me. If I cry out in the night, as apparently I used to when in the fever, the woman at the headboard will turn around until her lower lips muffle my outburst, sometimes nearly smothering me as Sumitra presses down on her backside.\n\nI have hope that I may be relieved from my bondage. Ultimately the doctor will return and should listen to my protests that the silken confinement is no longer necessary. But he is not intending to visit me again until next week.\n\nMr Harris, my Steward and only indoor male servant, is away in London negotiating the purchase of some of a deceased neighbour's estate. That land would be a useful addition but the legalities are complex. The trustees of the deceased all have to agree. Mr Harris might be back before the doctor's visit, or perhaps later than that.\n\nMy Indian ladies accept the doctor's edict unreservedly. They would not disobey it and release me unless Sumitra orders them to do so. She won't. She's enjoying having me as her helpless victim.\n\nMy few English maidservants are unlikely to help. They are usually below stairs and even if they came near me, Sumitra is their superior in the servants' hierarchy. They wouldn't defy Sumitra, particularly as Sumitra is not just my Housekeeper. Sumitra has been my mistress for more than two decades. She is treated not just as the Housekeeper but as the Lady of the Estate.\n\nNow Sumitra has become more than my mistress. She is my dominant mistress and my jailer. I can do nothing, not even speak, without her consent. While I know she is doing everything because she loves me, that love is overpowering, enveloping, smothering and imprisoning me. I am totally helpless even when she is making love to me.\n\nI can understand their concern for my welfare. They are all dependent on me. But why are they, and particularly Sumitra, treating me as if I am insane and need constant protection from myself? I can understand them wanting to stop my uncontrolled thrashing but their soft enveloping bondage is too extreme for that. If they want just to limit my movements when necessary, their arms, bodies, and perhaps a few wraps while the fit lasts would be enough. Four women all of similar size to me are ample to restrain me for the now infrequent episodes.\n\nWhen I first came back to awareness of my surroundings I would thrash about several times a day. Now? The frequency has reduced to once or twice a day. Within a few days the occurrence might be zero, but my bondage continues unabated.\n\nThis morning I had an unexpected opportunity to speak to Sumitra alone. The three other bed companions had briefly left the room for their morning ablutions, but not before leaving my ankles tied to Sumitra's, my hands bagged in mittens, my arms secured to my sides. I couldn't release myself but I could speak unless Sumitra stopped me with her lips or a hand over my mouth.\n\n\"Why, Sumitra?\" I asked.\n\nShe moved her head close to mine.\n\n\"Why what, Anthony?\" she whispered in my ear.\n\n\"Why are you keeping me a prisoner? I'm no longer ill. I'm recovering, yet you are still smothering me as if I could harm myself. Why?\"\n\nSumitra's first answer was a long kiss, not the fierce kisses she had given me to stop my words, but a delicate loving one. She pulled back and looked at me.\n\n\"We love you, Anthony. I love you. We were afraid that we might lose you. We wanted to wrap you in our love, to keep you safe. Even wrapping you in scarves and sarees was an expression of our love, hugging you more effectively than our bodies can.\"\n\n\"But it has gone on too long, Sumitra. I could understand it when I was raving, but now? I'm nearly well again. I can eat more than breast milk or gruel. While it is pleasant to meet so many naked breasts, the need has passed.\"\n\n\"Those breasts were showing love and care. They still want to. Not all of us have the words to tell you how we love you, but our breasts and lips can.\"\n\n\"I know I am loved, Sumitra. But making me helpless is going too far. I ask again. Why?\"\n\n\"Why? We are all afraid. If you were to die, what would happen to us? We are far from our home country, women and children in a land that doesn't always value us as you do. We need you. Yet you are old. You won't die this time. Our care made sure you didn't. But eventually we will be left alone. What then? What...\"\n\n\"Sumitra.\" I spoke sharply. \"Of course I know you, all of you, will outlive me. It would be unnatural if you didn't. I have made preparations for that eventuality -- except for one last act that will complete the legalities. Before the fever struck me down I had already started the process for that last thing. It was presumptuous of me, I know, but I had to try. What date is it now?\"\n\nSumitra seemed taken aback by my last question. She answered. That answer doesn't matter. It was a date in the middle of the 19th Century but what I needed to know was how long I had been incapable and imprisoned. The duration from start until this conversation had been four complete weeks and a couple of days.\n\n\"I cannot finish making your future secure while you hold me prisoner. I need to be free, to be dressed as an English gentleman, and to go to the village -- with you. I am sure if we go by carriage I could travel that short distance. Will you let me go?\"\n\n\"If we do, what if you have another fit?\"\n\n\"If I do, which is becoming unlikely, you and the others could just hug me. That would be enough. You don't need to tie and wrap me up. The four of you could easily overpower me. You are younger, stronger and four to my one.\"\n\n\"I'll ask the others. Where do you want to go in the village?\"\n\n\"The vicarage. I need to speak to the Vicar. I need to check that he did what I asked him to do.\"\n\nThe others came back into the bedroom.\n\n\"He wants to go to the vicarage,\" Sumitra announced. \"As himself, unrestrained. Can we permit that?\"\n\n\"I don't see why not,\" Asha said slowly. Gita and Meena nodded.\n\n\"Then we should get him ready. Have you brought his shaving things?\"\n\nThey had, as every morning while I had been restrained. My head was cradled between two soft breasts as Sumitra straddled me. She shaved me as expertly as any barber but my erection acknowledged that she was an attractive and desirable woman.\n\nThey removed my bonds and dressed me even though I could have done that for myself. As I walked, blessed relief, through the various rooms and corridors to the breakfast room the other women servants acknowledged me by dropping curtseys. My legs weren't working as well as they should. I had been restrained or ill too long.\n\nAfter breakfast I asked to go to my study. I removed some papers from a locked drawer before announcing that I was ready to go to the vicarage. I had to wait sometime before Sumitra and the three others dressed themselves as English Ladies.\n\nIn the carriage I was swamped by their massive crinolined skirts. The carriage was driven by one of my younger women who would stay with the horses. At the vicarage Sumitra had to get out first to give me room to descend. I needed her help to climb down from the carriage. The Vicar's maidservant dropped a curtsey and led us to the main living room. She asked whether we wanted refreshment. I declined. She went to tell the Vicar that we were there.\n\nThe Vicar was slightly surprised to meet four Indian women dressed so fashionably but greeted us pleasantly.\n\n\"Has it happened?\" I asked bluntly once the formal introductions had been completed.\n\n\"Yes, Mr Andrews. On the last three Sundays. No one raised a voice against it but there was some headshaking. Are you sure?\"\n\n\"Sure? Of course I'm sure. I wouldn't have asked you otherwise. But...\"\n\nI walked over to Sumitra who was sitting with her skirts spread about her. I dropped to my knees in front of her.\n\n\"Sumitra,\" I said looking up at her puzzled face, \"Will you marry me, please?\"\n\nShe gasped. She looked at the other three women.\n\n\"Mr Andrews!\" She protested, \"Do you know what you are asking?\"\n\n\"Of course I do,\" I replied impatiently. \"I'm asking the woman I love to marry me. Will you?\"\n\n\"What about the others?\" she asked. I could hear the Vicar draw breath sharply. It was common knowledge that I had a harem.\n\n\"I can only marry one,\" I replied. \"I will, or YOU will, look after the others.\"\n\n\"And the children?\"\n\n\"And the children.\" I replied.\n\n\"Then I have to say yes. I will marry you.\"\n\n\"Good. Vicar?\"\n\n\"Yes, Mr Andrews?\" \n\n\"Now?\"\n\n\"NOW?\" he replied.\n\n\"Yes. Now. Why not? The banns have been read. We have three witnesses here, and you. The church is empty. We can marry now.\"\n\nWe did. I was married to Sumitra in an empty church with the other three women as bridesmaids and witnesses. \n\nAfter the wedding we returned to the Vicar's living room. He produced some champagne to toast the Bride and Groom. No doubt he will add it to my account.\n\nI produced the documents I had taken from my study. There was a small problem because I needed witnesses who weren't involved. The Vicar could be one, but we needed another. He sent his maid to fetch the sexton. I could sign my new will, leaving everything to my wife, with provisions for my mistresses and all the illegitimate children. Sumitra was still in a state of shock, twisting her wedding ring on her finger to check it was real.\n\nI had another request for the Vicar that caused him some consternation. I wanted all my illegitimate children to be baptised. I handed him a list of all of them with their dates of birth, the appropriate mother's name, and my name as father for all of them. Officially recognising them in the Parish Register would give each of them some claim on my estate.\n\nBaptisms should be conducted with the Church's congregation present. If that was to be done on a Sunday the length of the baptisms would be difficult. We compromised. They would be baptised at a suitable Wednesday morning service. I told Sumitra to arrange for all the mothers and children to attend.\n\nOnce the Vicar had got over his shock I could see that he was calculating how many fees he could charge for the marriage and baptisms.\n\nI made him even happier. I asked him to see whether any of his poor parishioners would like their children baptised at my expense. If we were to have a bulk baptism, a few more might not make much difference, except to the children and their parents.\n\n\"I have a small problem with that request, Mr Andrews,\" the Vicar said diffidently. \"Some of the children who need baptism have unmarried parents because they can't afford the fee.\"\n\n\"How many?\" I asked.\n\n\"About ten couples, I think. Maybe a dozen.\"\n\n\"Very well, Vicar. I'll pay for a mass marriage service before the baptisms. Would that be acceptable?\"\n\n\"It would be very generous, Mr Andrews. It has been a cause of concern to me for some years.\"\n\n\"Arrange it. I'll pay, and we'll attend, won't we, Mrs Andrews?\"\n\nSumitra blinked. It was the first time I had called her Mrs Andrews.\n\n\"Yes, Anthony - husband,\" she replied. \"We'll be there.\"\n\nThe Vicar was beaming as we left. Several marriages, a mass of baptisms all with the fees guaranteed by me, and the whole of his flock would be legitimately married. Once he had forwarded the records to his Bishop he would avoid the mild criticism he had had from that quarter for his parishioners living in sin -- especially me.\n\nOnce we were a few hundred yards from the Vicarage I spoke seriously to Sumitra.\n\n\"Wife,\" I said, \"I have provided for you, for the other women, and all the children, whether I live or die. But, and this is very important, our marriage, my will and disposition of my estate could be challenged if there is any suggestion that I was not and am not in full possession of all my faculties. Your restraint of me must stop. Now. If not, all I have done could be overturned. Do you understand?\"\n\n\"Yes, husband. I understand. But what if you have a fit?\"\n\n\"I won't, despite that stupid doctor. But if I do, your reaction must be minimal and temporary, lasting only the minutes that are wholly necessary. At all other times I must appear to be my own master.\"\n\n\"Even in bed, Anthony?\"\n\n\"What we do in bed must stay as a bedroom secret. Remember this is important. I must be unrestrained whenever anyone else could see, even a junior maidservant.\"\n\n\"I will try, Anthony.\"\n\n\"You must do more than try. You must let me be my own man, loved by you and the others, as I love you all, but not, never, controlled by you.\"\n\n\"Even if we do it with love, because we love you?\"\n\n\"Even then. You can love me, but not imprison me as you have been doing. If you do, you risk losing everything, not just for you, but for all the women and children.\"\n\nHow can I explain it to Sumitra, my new wife? If I am considered to have been insane at the time of my marriage and the signing of my will, my marriage and bequests could be declared invalid. All my assets would go to my closest relative, a distant cousin, but lawyers would take large fees from my estate whether the cousin is successful or not.",
        "My private life is already thought to be scandalous because I have Indian mistresses. Marrying Sumitra won't make much difference to the public aversion to my m\u00e9nage. That idiot doctor could be easily persuaded to say that the fits I suffered during the fever were evidence of insanity -- particularly if he was offered a substantial sum of money.\n\nI, and we, need to demonstrate that although I am frail because of my age, I am of sound mind and able to make decisions by myself. The vicar could testify that I asked for the banns to be read for my marriage to Sumitra before I had the fever. My solicitors could say that I rewrote my will before the fever, and in anticipation of my marriage. I didn't sign and deliver my testament until after the marriage, but the document had been written months ago.\n\nBut how do I prove that I was and am sane? I reached out to take Sumitra's hand. I brought it to my lips and kissed it. I'll need her help to prove my sanity, and perhaps that of my mistresses as well. How?\n\n+++\n\nBack at the house all five of us sat down in the summer parlour for tea. After the maid had left I looked at the four women dressed in their crinolines.\n\n\"I feel safer while you are dressed as English ladies,\" I said.\n\n\"Why, husband?\" Sumitra said, stumbling over the unfamiliar word husband.\n\n\"When you are wearing your sarees I know you can whip them off and wrap me tightly in seconds. As you are now? You haven't got material to wrap me.\"\n\n\"I think you underestimate us, Anthony. Please stand up, and you English ladies please stand too.\"\n\nSumitra locked the parlour's door. The other three women stood, one behind me, and one each side of me. There is one thing about all four of them being Anglo-Indian, not Indian women. They are taller than Indian women might be. All of them are slightly taller than me. Sumitra stood in front of me. Her crinolined skirt spread around her, the lower frill splayed across the carpet.\n\n\"Ladies?\" Sumitra said.\n\nSix arms grabbed me and pushed me gently downwards. Sumitra bent forward and grasped the front hem of her dress. She pulled it upwards as the three women pushed me forwards under Sumitra's crinoline. She dropped it to the floor. I was enclosed in darkness inside her wide skirt. I tried to lift an edge. I couldn't. The three women were standing on the frill of Sumitra's skirt trapping me. \n\n\"As you can see, Anthony,\" I heard Sumitra say through the muffling layers of skirt and petticoats, \"We don't need sarees. A crinoline and dress is enough. But you know that our naked bodies can restrain you. You are our captive whenever we want.\"\n\nNaked? Sumitra was naked under her crinoline. My face had brushed against a bare leg. What if?\n\nI felt around in the darkness to put my hands on her thighs. I felt her flinch at my touch. I brought my head up between her legs until I felt hair against my face. Between that hair was a warm soft place. I kissed it.\n\n\"Anthony!\" Sumitra squealed. \"You can't! Not here!\"\n\nI could. I did. I kissed. I extended my tongue and licked. My tongue entered between her lower lips and caressed. The crinoline was shaking around me as Sumitra tried to pull away but my hands on her thighs meant I kept tonguing her. She groaned above me. Her cleft became warmer and wetter as I licked, kissed and sucked.\n\nSoon, too soon, her dress and crinoline was lifted. I emerged still kneeling.\n\n\"Why, Anthony, why?\" Sumitra asked.\n\n\"I was showing my wife how much I love her,\" I replied.\n\n\"And us? What about us?\" Meena asked. \n\n\"Lift a skirt, and I'll be there,\" I answered.\n\nThree skirts lifted as one.\n\n\"I can't do all three at the same time,\" I protested. \"Who is first? Wife? Can you choose one for me to start with, please?\"\n\nSumitra pointed at Asha. Two skirts lowered. I crawled under and inside the one still raised. My tongue was exhausted by the time I had produced squeals of delight from all three of them.\n\n+++\n\nAfter I had satisfied all four of them it was time for luncheon. We had moved into the small dining room where a cold collation had been laid out. As often before I thought that we should have luncheon in the large dining room because it became crowded with all my mistresses and their children. I know how many there are, but Sumitra and the three I had taken to the vicarage are currently my principal mistresses -- and wife.\n\nAfter luncheon I asked the four of them to join me back in the summer parlour. We all sat down. I sat on an upright chair facing four ladies with wide spreading skirts.\n\n\"I have a problem,\" I started bluntly. \"I have married Sumitra. I would have married all four of you but English Law doesn't allow that. What I will do is treat you as if I had married all of you and Sumitra is my senior wife. My will sets up a trust for all my assets. My official wife Sumitra is the principal trustee advised by my family lawyers, but you three unofficial wives are also trustees.\"\n\n\"What does that mean?\" Gita asked.\n\n\"Listen, and I'll tell you. The trust provides for my estate to be kept together to provide an income to support all four of you, my other mistresses, my, no, our children and the staff. I am trying to buy more land that will provide a larger income so that all of you will live in comfort. Those who want to marry after I have died will be given a dowry, as will the female children. The boys? The trust will give them support to find a career, buying commissions in the Army for example -- possibly the Army in India because it might be awkward for them in the English Army.\n\nBut... I have to keep saying this. It will only work if there is no doubt that I was and am sane at the time of my marriage to Sumitra, and when I signed my will. There must be no evidence that any of you influenced my decisions. The marriage probably can't be challenged because I asked for the banns to be read before I became ill. My will? My lawyers drafted it a couple of months ago but I only signed it today. If I am successful in buying the other land I will have to alter my will slightly. I can only do that if I am sane.\n\nI'm old. Sometimes I'm physically frail. What we did before luncheon was tiring for me and I will have to have a short sleep this afternoon. My brain still works and I must demonstrate that it does for the next few months. I must be seen to be acting independently and not as the puppet of my wife and mistresses. If I don't? My will could be overturned in favour of a distant cousin and all of you could be homeless and penniless.\n\nSo, Sumitra, Asha, Gita and Meena? I love you all. I know you love me. How are we going to show that Anthony knows what he is doing and doesn't need a wife to tell him what to do, nor women to wrap him up to protect him from himself? Any ideas?\"\n\n\"Cricket.\" Gita stated bluntly.\n\nWe all looked at her blankly. She giggled.\n\n\"I'll explain that. If Anthony needs to demonstrate that he is sane and acting unconstrained then he needs witnesses to his capacity. Agreed?\"\n\nWe nodded, still confused by Gita's mention of cricket.\n\n\"The doctor is incompetent and could be persuaded that Anthony is not sane. The Vicar disapproves of us. Marrying Sumitra has helped but the Vicar knows the rest of us are mistresses and Anthony has many bastards here. So we need other people to be able to say Anthony is sane. If those people have benefitted from Anthony's decisions, then they would have an interest in considering those decisions to have been made by someone in full command of their faculties. Hence -- cricket.\"\n\n\"I still don't follow what you are getting at, Gita,\" I said slowly.\n\n\"Neither do I,\" Asha added.\n\n\"Anthony? You own the meadow between the Church and the river, don't you?\"\n\n\"Yes, Gita. But it is a water meadow. It floods in winter and is only used for summer pasture.\" I said, still confused.\n\n\"And cricket is played only in the summer, when that field isn't flooded. Yes?\"\n\n\"Yes, Gita, but...\"\n\n\"Just listen, Anthony and all of you. If Anthony turns that meadow into a cricket pitch for the village, builds a cricket pavilion on the dry edge close to the road, and gives it to the village...\"\n\n\"I get it,\" Meena said. \"the village will be grateful to Anthony. But if he isn't sane when he does all that, they could lose the field and the pavilion.\"\n\n\"Exactly. And if Anthony starts the cricket by inviting cricket teams to play, and hosts the event, he must be sane. When he presents the winning team with the cup to be played for every year -- he's sane. When he is President of the Cricket Club -- he's sane.\" Gita was getting excited by her own idea. \n\n\"The actual work of getting the meadow turned into a cricket pitch, and the pavilion built? That can be done by the local architect and the village builders. All Anthony would actually have to do is pay the bills and he can easily afford that. That field is worth what? Five shillings a year rent as pasture? That's nothing compared with Anthony's wealth.\"\n\n\"I've thought of something else,\" Asha said. \"When in India Anthony built dams and bridges on the river by his land to cope with water during the monsoon. If we built a couple of dams upstream to hold water back in winter, the field wouldn't flood and could be used all year round for things other than cricket. That might stop some of the village houses flooding as happens some winters.\"\n\n\"OK, Ladies. I've heard enough. Gita's idea is brilliant. The village will have a cricket pitch and Asha's dams. We can develop these ideas further. What else does the village want or need that my money could provide? Even if I spend a couple of thousand pounds it won't make a dent in our fortune.\"\n\n\"Our fortune?\" Sumitra asked.\n\n\"Ours,\" I repeated. \"You don't get it, do you? By marrying you, Sumitra, and writing my will to set up the trust, when you become a widow you four will inherit everything. My fortune will be yours -- if I am sane now. And Cricket could be the deciding factor. I'm sane because of cricket. But now I need a rest. Sumitra? Can you ask the Head Gardener to come to see me at five o'clock, please?\" \n\n\"Yes, husband, I will. Meena will be with you while you rest.\" Sumitra replied.\n\n\"Does Meena have to be with me?\" I asked.\n\n\"You're not fully fit yet, husband. She will be there if you need anything and to look after you. When you wake she'll massage your legs. You've walked further today that you have for weeks.\"\n\n\"Massage?\"\n\n\"Yes, Anthony,\" Meena replied. \"I've been gently massaging your arms and legs every night while you were asleep. We knew, even if that idiot doctor didn't, that restraining you all the time would damage your muscles. So I've been working on them several times a day. If you are awake for the next massage I'll work harder. It might hurt but it will help you to get strength back sooner.\"\n\n\"Very well, Meena, and thank you.\"\n\nMeena, Gita and I went to my bedroom. I was surprised just how tired I was. I didn't object as Meena undressed me. Gita had to help Meena to undress. Victorian ladies' clothes are intended for maids to fasten and unfasten. The wearer cannot dress or undress herself without help. Gita left us. Meena snuggled her naked body next to mine. It was bliss to be completely unrestrained in that bed.\n\nI woke up about an hour later with a twitch in my right leg. Meena's hands stroked it gently until the twitch subsided. I went back to sleep. I woke up again with my head resting on Meena's shoulder and my lips close to her breast. I kissed that breast gently. Meena pulled my face closer. I kissed again.\n\n\"Anthony?\" Meena was awake.\n\n\"Yes, Meena?\"\n\n\"We mistresses are only nominally Christians. You know that?\"\n\n\"Yes.\"\n\n\"If we were Hindu, you could have four wives, couldn't you?\"\n\n\"I suppose so, if we were in India. It wouldn't mean anything in England, Meena. Here I can only have one wife -- Sumitra. I married her today and tonight she must sleep with me alone. The marriage would be incomplete without consummation.\"\n\nMeena laughed.\n\n\"Even though you already have four children by her? English customs are stupid.\"\n\n\"I might agree with you, Meena, but to protect you and the children I must seem to abide by English laws. They will provide for you and our two children.\"\n\n\"Yet I'd like to be a wife too, Anthony, even a subsidiary wife. As Hindus that would be possible.\"\n\nI sat up and looked down at Meena's naked body that I loved so much. She was serious. She wanted to be my wife.\n\n\"If we still lived in India I could marry you and the other two as well as Sumitra. But as soon as we arrived back in England those marriages wouldn't mean anything, Meena.\"\n\n\"It would to me, Anthony. I know you love me but...\"\n\n\"I'll think about it, Meena. It could be dangerous for our campaign to ensure I'm seen as sane. If, and I only say if, Hindu marriages could happen, they would have to remain a secret. I would only do it if I marry all three of you as well as Sumitra.\"\n\n\"Or more than three? Your other mistresses would like the status even if only they knew, Anthony.\"\n\n\"Fifteen wives? The Vicar would have a heart attack if he knew.\"\n\n\"He does know, Anthony. You listed fifteen mothers of children to be baptised with you named as father of them all.\" \n\n\"So he does, Meena. He does. He did turn pale when I handed him the list of children. Oh well. We'll see.\"\n\n\"And now I'll massage your legs, Anthony. Try not to yell too much when I dig my fingers in hard.\"\n\nMeena's massage did hurt. When she helped me to dress my calves were sore. When I started walking I could feel the effect of her massage. I was steadier on my legs as I acted as her lady's maid to dress her. Why not? I have years of experience of undressing and dressing my mistresses.\n\n+++\n\nWhen I met the gardener he wasn't convinced that the meadow was a suitable place for a cricket pitch but his expertise didn't extend to making a cricket pitch. He suggested that I needed specialist advice before even announcing the proposal of a village cricket pitch.\n\nHe knew that Tom Anchor from the village had been a paid cricketer, a player, not a gentleman cricketer. A couple of weeks later Tom, the gardener and Mr Harris my steward had made enquiries and recommended that I employ a professional cricket groundsman to see whether the meadow was suitable. I paid for Tom to travel to the county town to talk to the cricket club staff.\n\n+++\n\nMy steward Mr Harris had returned ten days after I had married Sumitra. He had successfully completed the purchase of the additional land. I had paperwork to sign and a revised will drawn up by my solicitors to take account of my marriage and my enlarged estate. To my surprise he also brought a hastily written letter from my distant cousin James, congratulating me on my marriage to Sumitra. At first I thought the letter was useful. If James had written to congratulate me on my marriage, he couldn't later claim that the marriage was void because of my incapacity. But there was another earlier letter from James, asking if he could come to visit me to discuss unspecified matters. I wrote back extending an invitation for James to come whenever convenient to him.\n\n+++\n\nOver the next few days after my marriage I gradually regained the mobility I had enjoyed before the fever. Meena's daily massage was helping as was my resumed sexual activities with my extensive group of mistresses. Perhaps each particular mistress was more likely to ride me than I to ride her, but even that meant considerable effort from me. Three weeks after my marriage I had spent at least one night with all fifteen of them.\n\nThe Vicar had to delay the marriages and baptisms because some of the potential husbands and fathers needed persuasion to make their situation legal. Although the marriages and baptisms would make the relationships legitimate, it also meant that the men would be legally liable for their wives and children. Eventually I cut the Gordian knot by offering a dowry of ten guineas to each bride and five guineas to each baptised child. The money persuaded the waverers. The marriages would be on a Tuesday morning, the wedding lunches and dancing in the afternoon, and the christenings on Wednesday morning. There would be little work done on my estate or my tenants' farms on either day.\n\n+++\n\nTom Anchor returned with the news that the cricket club's groundsman was willing to come to assess the meadow in return for his travelling expenses of a couple of guineas. I discussed it with Tom, my steward and the Head Gardener. I thought that 'expenses' was not enough for professional advice. I wrote to the groundsman and enclosed a cheque for ten guineas.\n\nAs I had thought, ten guineas produced a faster response. The groundsman, Arthur Green, replied that he would arrive next week. By a coincidence he would be coming to the railway station a few miles away on the same train as my cousin James. I sent the carriage to collect them. Arthur Green would meet Tom Anchor, the head gardener and Mr Harris in the Steward's office, have lunch, and then go to the meadow.\n\nJames would have lunch with Sumitra and me.\n\n+++\n\nThe train was exactly on time. I was surprised that my cousin James was so young, in his early twenties. He seemed a pleasant enough young man even though he could be a threat to my plans for Sumitra, my mistresses and children.\n\nAfter lunch James and I went to my study. We discussed the weather, and my, or rather Gita's, idea for a village cricket pitch. James thought it was a splendid idea. He had played cricket a few times when at Oxford. He had enjoyed it but admitted that he wasn't very good at it, averagely competent for a young gentleman but neither a batsman nor bowler. He told me that the county's grounds man Mr Green had been accompanied by an Indian man, his assistant in training.\n\nHe soon came to the point of his visit.\n\n\"Cousin Anthony,\" he said, \"I am aware that your solicitor considers me to be your next of kin, and might possibly inherit your property if you hadn't made a will. But you HAVE made a will, so I won't inherit. I wouldn't anyway. I'm NOT your nearest relation.\"\n\n\"You're not, James? Then who the d... is?\" I nearly swore, most unlike my normal self.\n\n\"You had an elder half brother John, son of your father's first wife. She died giving birth to him. Your father married your mother ten years later, and you were born two years after that marriage. But you know all that, sir.\"\n\n\"I do. But John would be twelve years older than me, and I'm old. You're not telling me that John is still alive, surely?\"\n\n\"No, Cousin. I'm not. John died eight years ago in Australia where the family sent him after an unspecified scandal. I don't know WHY he was sent to Australia. I only know that he was.\"\n\n\"He was transported to the New South Wales penal colony by order of a court,\" I said. \"He was very lucky to escape hanging. But I've tried to forget John and his misdeeds. Other people were involved and their children are still around. They don't want that scandal aired again.\"\n\n\"That's very well but in later life John married in Australia and produced a son and heir. That son is your nephew, a closer relation to you than I am. I didn't know of his existence until a couple of months ago. I had a letter from him informing me that he was coming to England.\"\n\n\"The deuce he is! Why?\"\n\n\"I understand that it is something to do with the governance of New South Wales. His name is Robert, Robert Andrews of course, and he is an elected member of their local parliament.\"\n\n\"He's what? How can that be? He's the son of a convict!\"\n\n\"Apparently that doesn't matter in New South Wales. He was elected because he is a major landowner. He has a property of about one hundred and fifty thousand acres of pastoral land, much more undeveloped land and several businesses as well.\"\n\n\"So he's a wealthy landowner?\"\n\n\"Yes, Cousin Anthony, and an important person in New South Wales. He is coming to England at the request of the Colonial Office. He would like to meet me, and you, as his closest relations. For all I know he may already be in England. I left a message for him at the Colonial Office telling him that I had come to see you. I think he really wants to meet you since he has heard about your...\"",
        "\"Mistresses?\" I prompted.\n\n\"Household was the word he used in his letter but I think you are right. I confess to a certain curiosity myself, Cousin.\"\n\n\"You'll meet everyone this evening at dinner, the whole brood, mistresses and their children who are old enough to appear in company. Some are still babes in arms. But my main companions?\"\n\nI picked up a hand bell and rang it. Within half a minute Sumitra entered the room. James stood up as she entered. He bowed to her. She curtseyed to him.\n\n\"Mrs Andrews, this is my young cousin, James,\" I said. \"James, this is my wife, Sumitra.\"\n\nJames bowed again. Sumitra curtseyed again. I cut their acknowledgements short.\n\n\"Sumitra, please could you arrange for tea to be served in the drawing room for us, and could the four be present if convenient?\"\n\n\"I'm sure it will be, husband. They would like to meet your cousin.\"\n\n\"And I would be delighted to meet them, Mrs Andrews,\" James said.\n\nSumitra curtseyed and left. James remained standing after bowing to her. He waited to speak until the door had been shut.\n\n\"You use a hand bell to summon your wife?\" James queried.\n\nI laughed.\n\n\"Not normally, James. There are bell pulls in every room to summon servants. The hand bell is a recent innovation since I was laid low with a fever. If it had been rung by any one of my principal ladies, the rest of them would have responded quickly. Now I am much better but still weaker than I'd like to be, I ring it for social matters unlike the bell pulls for domestic affairs. To arrange tea? I could have used the bell pull. To arrange for my four principal ladies to meet you over tea? The hand bell seemed appropriate. My wife will summon a servant to produce the tea.\"\n\nI stood up.\n\n\"I think we will go to the drawing room now. It is some distance away and I'm slower on my feet than I was a few weeks ago.\"\n\nWe walked along the lower corridor and up the principal staircase before turning into the long gallery. At the end, in the South West corner of the house was the drawing room. It had fine views over the estate. As I had expected the four women were already there. James bowed, and they curtseyed, as I introduced them to each other. I sat down while they went through the formal motions.\n\nJames enjoyed meeting them and they were pleased with his company, flirting with him within the bounds of polite convention. I told them that he would like to meet the whole household. Sumitra suggested that instead of at dinner which could be an ordeal, that the others should assemble in the long gallery in an hour's time. I agreed. Gita went off for a few minutes to arrange that.\n\nAsha suggested that James might like to see the estate. We arranged that she and Meena would take James for a walk tomorrow morning. I suggested that James could stay until next weekend. He was dubious at first but Sumitra persuaded him. As my and now her only English relation she wanted him to stay as a guest for a few days.\n\n\"Wednesday is the christening,\" Meena said. \"We'd like you to be there, James.\"\n\n\"The christening?\" James queried.\n\n\"The christening,\" I said. \"I have arranged with the vicar to christen all my children on Wednesday morning. He is also christening a number of the village children as well after their parents' marriages on Tuesday. Both will be major occasions for the village. You might enjoy attending one or both. I'll have to go. I'm paying for all of it.\"\n\n\"How many?\" James blurted out, I think unintentionally.\n\n\"You'll meet Anthony's children shortly,\" Sumitra said. \"At present there are twenty-five but there are several more on the way.\"\n\n\"I'm impressed, Sir,\" James said with a twinkle in his eye. \"I'm sure Robert would be too.\"\n\n+++\n\nThe long gallery was almost pandemonium until I shouted for quiet. My children recognise me and do take notice. I introduced James to the other eleven 'wives' all dressed in their best sarees, and the twenty-five children. The younger children were unimpressed. They wanted to be on the floor playing with their siblings.\n\nJames was a hit. He knelt down on the floor to meet some of the younger children, two or three of whom wanted to ride him. I lost sight of him for a while as he was surrounded by crinolined skirts and swirling sarees. Sumitra stood beside me, her hand tucked into my crooked arm, as we watched James play with the children.\n\n\"James is nice, isn't he?\" Sumitra whispered in my ear. I nodded. I was too stiff and old, long beyond playing on the floor. I liked my children but in small regulated doses and only a few at a time. Fifteen women and twenty five children make a lot of noise when gathered together. I led Sumitra to the side of the long gallery. We sat down on a settee and watched.\n\nI felt a twitch in my calf.\n\n\"Sumitra,\" I whispered, \"My calf is twitching. I think I need to lie down and be massaged by Meena. Can you entertain James for me?\"\n\n\"Of course, Anthony,\" Sumitra replied. \"But I think he is being well entertained already. He seems to enjoy the children and he's very popular with their mothers.\"\n\n\"So he should be,\" I answered. \"He's a very personable young gentleman. Please ensure the women don't go too far. They can kiss and hug him. He might be surprised by that much. He won't exceed the bounds of respectability. They shouldn't -- please?\"\n\n\"Very well, husband. I'll get Meena. While you're gone James will be entertained -- and kissed.\"\n\nSumitra whispered in Meena's ear. Meena came to me and helped me to my feet. Sumitra got down beside James and spoke a few words to him. He replied. Sumitra put an arm around his shoulder and kissed James on the cheek. He stood up. As Meena and I walked out of the long gallery Sumitra was taking James to each wife in turn. They were all kissing him on the cheek, sometimes two of them at once. At the end of the gallery I turned back and waved at James. Only his head was visible above a crowd of women. He had to extricate himself from the latest kiss before he could return the wave. \n\nMeena's massage was effective. I dozed for a while cradled in her arms. I woke up as Sumitra came into the bedroom.\n\n\"Anthony, if you are awake we want to discuss cricket. Mt Green and the others have inspected the meadow and would like to report to you.\"\n\n\"Thank you, Sumitra. I'll come to the study. Can you ask Cousin James, Gita and Asha to join me there. You'll arrange tea and cakes?\"\n\n\"Of course, husband. Meena will help you to the study.\" \n\nSumitra left before I could protest I didn't need Meena's help. She was right. I was wrong. My legs were still stiff and weak. Meena massaged my calves and helped me to stand. She straightened my clothing. I helped to remove the creases in her skirt. I went to the study with my arm around Meena's waist. I was relieved that only Gita and Asha had arrived. Meena helped me to sit behind my desk before she left. Gita and Asha arranged chairs for the men. They remained standing until the men arrived within a few minutes.\n\nMy steward Mr Harris introduced Tom Anchor whom I knew by sight, Mr Green the cricket club's grounds man, and Mr Singh, the grounds man's assistant. The head gardener wasn't with them. Mr Harris explained that the gardener felt he couldn't add to the discussion about a cricket pitch. It was beyond his expertise.\n\nI introduced Gita and Asha. The four men bowed to them as they curtseyed. We all sat down around my large desk. We were about to start the discussion when two maids brought in the tea and cakes. Gita and Asha poured the tea and handed around the cakes. I could sense that the men were relaxing perhaps because the women were acting as they would expect English women to behave in company.\n\nI asked Gita to explain what she wanted for the cricket club. The men seemed to agree with her ideas. Asha added her thoughts on upstream dams to control the flow of the stream and reduce flooding on the meadow. They seemed less convinced by Asha's ideas.\n\nMr Green started the discussion.\n\n\"Mr Andrews, Gita's idea is sound but we are not convinced that the meadow is the best place. It isn't flat enough for cricket, and if we made it flat either we would have to raise it substantially with massive ground works, or it would flood more than it does now, despite the idea of the dams. If we raised it? The village would flood more often. Mr Anchor agrees with me.\"\n\n\"We set up a makeshift wicket and bowled a few balls,\" Tom Anchor said, \"The grass isn't short enough for a proper pitch but that didn't matter. If I hit the ball towards the road or the church it slowed because of the slope. If I hit it towards the stream it kept rolling until it was stopped by the bushes on the stream's bank. The meadow looks flat but the drop from the road to close to the stream across the size of a full cricket oval is ten feet or more.\"\n\n\"That's far too much for proper cricket,\" Mr Green said. \"It might just be feasible for village cricket with absolute beginners but as soon as they improved they'd find it a nuisance.\"\n\n\"We looked further around the estate,\" Mr Harris said. \"Obviously we wanted the pitch as close to the village as possible. The meadow would have been the closest but is unsuitable.\"\n\n\"You have a field with some woodland the other side of the road from the meadow,\" Tom Anchor said. \"We looked at it. The woodland is beside the road. That would prevent cricket balls reaching the road. In the meadow a strong batsman might hit balls onto the road, into the river, or even through the Church's windows. On the other field any stray balls would either go into another field or get stopped by the trees.\"\n\n\"A pavilion could be built close to the trees,\" Mr Green said. \"The field is almost flat enough as it is. If it were to be ploughed, raked and sowed with good quality grass it would make an excellent pitch, as good as our county ground.\"\n\n\"All it needs, Sir,\" Mr Singh said, \"Is a new access for carriages from the road close to the village. That would be simple.\"\n\n\"I think we ought to look at the field,\" Gita said.\n\n\"Why not?\" I said. \"Asha? Could you ask for a couple of carriages to be got ready? In about twenty minutes from now?\"\n\n\"Of course, Anthony,\" Asha replied.\n\nShe left and returned within a few minutes. We were discussing what would need to be done to make a cricket pitch. Apparently a pavilion can be bought as a kit of parts to be erected on site by the suppliers. All I would need to decide is how large a one I should buy. Mr Singh produced a catalogue of cricket pavilions. We crowded around the table to look at it. They also provided village halls and 'tin chapels' -- corrugated iron churches for small non-conformist groups.\n\n\"They don't do churches for me,\" Mr Singh joked. \"They're all Christian and I'm Hindu.\"\n\nAsha looked carefully at him but didn't say a word.\n\nShortly afterwards all of us climbed into the carriages and drove towards the village. We had to leave the carriages in the meadow before crossing the road. Gita and Asha walked beside me, their arms tucked into mine. They were prepared to support me if I needed it. Mr Harris had brought a folding chair for me. Asha stood beside me as I sat on it while the others walked around the field pacing it out and checking for the level. Gita was very animated and involved in the discussion. I watched with some amusement.\n\n\"Anthony,\" Asha said, \"I don't think those temporary buildings would do for a village hall. They need something that will last for a century or more. Cricket? If it becomes popular then a larger pavilion could be built. If it isn't successful a cheap pavilion would last long enough.\"\n\n\"So where would you put a village hall, Asha?\" I asked.\n\n\"On the higher part of the meadow, close to the road. That part never floods. I'd still like the dams upstream even if the cricket pitch is here. The village needs flood protection even more than cricket.\"\n\n\"So, Asha, we need an engineer for the dams, and an architect for the village hall?\"\n\nAsha leant over and kissed my cheek.\n\n\"If you can afford them, yes.\"\n\n\"WE can afford them, Asha. Shall I make you responsible for dams and a village hall? And Gita for the cricket pitch and pavilion?\"\n\n\"Don't tease me, Anthony,\" Asha said.\n\n\"I'm not teasing. I'm serious. YOU will find the engineer. You will find the architect. You will work with them, Mr Harris and the villagers to get the work done. Gita will do the same for the cricket pitch and pavilion, and organise the opening match.\"\n\n\"But...\"\n\n\"But what, Asha? I know you are women and not English, but all of you have intelligence and education.\"\n\n\"Thanks to you, Anthony. You employed tutors in India for all of us.\"\n\n\"And I'll need tutors soon for the children here. Perhaps I'll get Meena to arrange their education.\"\n\n\"The village has a school, Anthony.\"\n\n\"But it's not very good, Asha.\"\n\n\"Then make it good. Pay for competent teachers, Anthony. But...\"\n\nAsha looked around to make sure that the others were out of earshot.\n\n\"Anthony? Why are we creating a cricket pitch?\"\n\n\"You know why, Asha. To prove that I am sane and was sane when I married Sumitra and wrote my will.\"\n\n\"Then you are in danger of making all that useless, Anthony. If you ask women, particularly women from India, to manage the projects... You'll prove you are insane. People won't understand. I know why you want to do it. You trust us. You think we have brains and intelligence. But you're forgetting that this is England. Women are supposed to be in the home raising children and running the household. If Gita and I are commissioning builders, architects and engineers? People will think, no, KNOW, that Anthony is mad. We can't do it. YOU have to be in charge, or at least appear to be in charge. We can help but you have to be seen to be doing it all.\"\n\nAsha's words shocked me. I sat back in my chair, thinking. She was right. I have to be seen to be running the projects, even if actually I'm not. I can't delegate it to women at least not overtly.\n\nI picked up Asha's hand and kissed it.\n\n\"Thank you. You are right. I have to be in charge. Or at least be seen to be in charge. Even if you are actually doing the work my name and person has to be obvious. The reality will have to be secret.\"\n\n\"You underestimate yourself, Anthony. We might be doing the routine work but we'll be asking your advice all the time. We know you. We appreciate your trust in us but we need your direction. We know you are sane even if you startle us from time to time, like marrying Sumitra. That was a shock, a welcome one but a complete surprise. The vicar is still recovering from that list of your children to be christened. He knew you had children by several women. Now he knows that you have twenty-five children by fifteen women. While he might appreciate his fees, he is worried that you are the worst sinner in his parish.\"\n\n\"He may be right, Asha, but I enjoy sinning...\"\n\n\"We know you do, Anthony. We would like you to have more wives than just Sumitra. It wouldn't be sinning if you married all of us but that isn't possible in England.\"\n\n\"It would be dubious even in India, Asha. It was possible for Christians when we left India but laws were being suggested against it. Hindus are allowed more than one wife, but fifteen would be exceptional.\"\n\n\"I wish... But it is impossible here. We can't all marry you. We are already seen as exotic by the locals. Although we dress as English women whenever we leave your estate, the locals know we wear sarees at home. Even you are seen as unusual, not just for your collection of mistresses. We all need to be accepted as useful to the village. Cricket and the dams will help that as well as establish your sanity.\"\n\nAsha suddenly looked beyond me.\n\n\"Talking about exotic, there's a very unusual gentleman approaching from the road.\"\n\nI turned around. A large heavy set man dressed in a brown suit with a broad brimmed hat was walking towards us. Underneath the hat I could see he was very tanned.\n\n\"I think this might be my nephew Robert. Help me to stand up, discreetly if you can.\"\n\nAsha stood behind me. Her hand pushing me up was concealed by my body.\n\nThe man raised his hat to us.\n\n\"Sir? Can you help me? I'm looking for Mr Anthony Andrews.\"\n\nHis accent was certainly not English.\n\n\"I am Anthony Andrews, sir. I think you must be my nephew Robert.\"\n\n\"How did you... Yes. I'm Robert Andrews.\"\n\n\"I am pleased to meet you Anthony. This is one of my ladies, Asha.\"\n\nAnthony executed a creditable bow to Asha. She bobbed a curtsey to him.\n\n\"Do you know anything about cricket, Mr Andrews?\" Asha asked directly.\n\n\"Cricket? What? Why?\"\n\n\"Asha was far too blunt, Anthony. We are here to try to find a suitable site for a cricket pitch. We don't know enough about cricket so we have invited some people who do know more to help.\"\n\n\"We do play cricket in New South Wales. I don't. I haven't got time, or I hadn't. Sorry, I'm not much help about cricket, Anthony and Asha.\"\n\n\"Never mind, Robert. We've nearly finished here and were going back to the house shortly. Do you have any luggage?\"\n\n\"Yes. The chaise is waiting on the road. It brought me from the station but the driver told me you were here, not at home.\"\n\n\"Then we'll join you. The others can come back in our carriage. Asha? Could you tell them and come to join us?\"\n\n\"Of course, Anthony.\"\n\n\"She runs your errands?\"\n\n\"They all do. I'm not as mobile as I used to be. You'll meet them all tonight, Robert, including my new wife Sumitra.\"\n\n\"I will be delighted, Anthony.\"\n\nI could see the trace of a grin on his face.\n\n\"I'm sure you will be, as they will be to see you. My household is well known.\"\n\n\"So well known that I even knew about it in New South Wales, Anthony.\"\n\n\"That did surprise me when James told me.\"\n\n\"James? He's here?\"\n\n\"Yes, Robert. He's the young man at the far end of the field talking to the gentleman in the turban. He'll join us at the house.\"\n\n\"With respect, Anthony, I have come to see James. He's my closest living relation except you. I wanted to see what he's like.\"\n\n\"Your closest? You have no children, Robert?\"\n\n\"Unlike you, Anthony, no. The driver Alfred was very willing to impart all he knew about the Andrews household. Twenty-five children and fifteen wives? I'm impressed.\" Robert laughed. \"Even if officially you have only one wife, the locals seem to think you have fifteen. They're proud of you as a local celebrity. They also seem to like and respect you. Whether that's for your wealth or your household? I think it is both.\"\n\n\"Wealth? I think you are richer than I am, Robert. Is that a gold nugget on your fob chain?\"\n\n\"Yes. I'm probably richer. I don't know. I have a much larger estate than you and unusually for New South Wales I own it outright including the mineral rights. My father was a very astute businessman as long as you didn't enquire too closely about his dealings. Apart from the land I own the three gold mines on it. Last year we produced more gold than ever.\"\n\n\"Gold as well as land? Land I can understand, but gold? That seems like a licence to coin your own money.\"\n\n\"It is. I can't spend it all. I have no children to leave it to, not even...\"\n\n\"Bastards?\"\n\n\"No bastards. Unlike you, I can't father bastards. That's one unfortunate inheritance from my father. I didn't know but he passed on an infection that means I can't have children. Hence my interest in James, my closest young relation.\"\n\n\"You're not?\"\n\n\"I am. If I find him at all acceptable I want to take him to Australia and make him my heir. What do you think of him?\"\n\n\"A pleasant young man. My household are very impressed with him. He seems a sensible young gentleman. I think he wants my financial help with something but we haven't discussed it yet. A couple of my women have given me hints. I suspect he might want to purchase an Army commission.\"",
        "\"The Army? That would be a waste. The Empire could be at war with Russia soon and he could die in action. Then he couldn't inherit from you or from me.\"\n\n\"He won't inherit from me anyway. My will sets up a trust for my wife/wives and children. They'll need support once I've gone.\"\n\n\"That sounds sensible, more sensible than cricket.\"\n\n\"We hope the cricket pitch will benefit the villagers. Asha also wants dams on the river to reduce winter flooding.\"\n\n\"Dams? I have many dams on my property. Any rain we get is welcome but can be too much in a few short hours. I try to keep as much as I can.\"\n\n\"So did I in India. The monsoon was generally predictable but the dams helped keep water from flooding, and provided a supply the whole year around.\"\n\n\"I can't help with cricket but you and I might be able to sort out dams, Anthony.\"\n\n\"That would be useful. You'll stay with us for a few days? We've got a big local event this week.\"\n\n\"An event?\"\n\n\"All my bastards are being christened, as are many of the villagers' children. You'd be welcome to join the ceremony.\"\n\n\"That would be unusual. I'm tempted.\"\n\n\"My ladies might help you to decide. It's important to them.\"\n\n\"I'm sure it is.\"\n\nAt that point Asha returned. The three of us rode back to the house in Robert's hired chaise driven by Alfred. I sat back and closed my eyes as Asha and Robert discussed building dams on the local river. They agreed to go for a walk beside the river later today if Mr Harris would be available to go with them.\n\nAsha introduced Robert to Sumitra. Sumitra took one look at me and asked Meena to take me away for a rest, and massage although she didn't say that aloud. Robert seemed genuinely delighted to meet my wife, and Meena. As I walked slowly away with Meena some more of my women were arriving to meet Robert. I heard Sumitra arrange for tea to be served in my study for Robert. James arrived with Gita. Asha introduced James to Robert. I smiled as I saw the two men assessing each other before they followed Sumitra towards my study.\n\nRobert's luggage was heavy. Alfred had to help to carry it into the hall. Each bag needed two maids to carry it to the room Sumitra had assigned to Robert. \n\nMeena massaged my legs and arms before she undressed me. I had to help her to undress before she joined me on the bed. I went to sleep cradled against her shoulder. The visit to the potential cricket field had tired me more than I had expected.\n\nI woke up half an hour later. It was another ten minutes before Meena and I were dressed. She took my arm as I slowly walked into my study. Robert, James, Gita and Asha were in animated discussion about the projects for the dams and cricket pitches. Sumitra was sitting behind my desk watching them with an amused look on her face. Mr Harris was also amused as he sat on the window seat ready to give advice if it was needed. Mr Green and Mr Singh were sitting close to Mr Harris. I sat next to Sumitra and listened. Meena was standing behind me with her hand resting on my shoulder.\n\nIt became clear that the field was suitable for a cricket pitch and they had moved on to discussing the dams and the water meadow. But they didn't know enough about the river upstream from the meadow. I clapped my hands to attract their attention. The two Mr Andrews, Gita and Asha had been so involved in their discussion that they hadn't noticed me come into the study.\n\n\"Can I assume,\" I said, \"that we are agreed that the field is suitable for a cricket pitch and pavilion? Mr Harris?\"\n\n\"Yes, Mr Andrews. It is.\" He replied.\n\n\"Then can you three and Gita produce proposals for my approval? I assume, Mr Green, that you have to resume your duties soon?\"\n\n\"Yes, Mr Andrews. I should be back by tomorrow evening. We should have an outline of what is needed by then. I would like Mr Singh to stay to oversee the project if that's agreeable to you?\"\n\n\"Sumitra? Can we find somewhere for Mr Singh?\"\n\n\"Already arranged, Anthony.\"\n\nMr Singh nodded.\n\n\"Mr Singh? Are you prepared to work for me for at least the next six months?\"\n\n\"Yes, sir. I have agreed that with your wife and Mr Harris. By next spring you should have a useable cricket pitch.\"\n\n\"Thank you Mr Singh.\"\n\nI turned to the others.\n\n\"You have been discussing dams on the river. But apart from Mr Harris and Asha you haven't seen the river. I suggest you walk over there now. Your discussions would be more productive if you...\"\n\n\"...know what the deuce we are talking about.\" Robert concluded for me. \"I know about dams. I don't know your river.\"\n\n\"Thank you, Robert. James? Do you want to go with them, or talk cricket?\"\n\n\"I don't know enough about cricket, sir, to be any help. I don't know about dams either, but it is clear that Robert and Asha do. I think I will learn something from them.\"\n\n\"Thank you. I suggest this meeting should be adjourned. Mr Green and Mr Singh? Do you need Mr Harris to produce your proposals?\"\n\n\"No, sir,\" Mr Green said. \"Mr Harris has told us all we need to know. We might need to talk further to Gita, possibly tomorrow, but otherwise we can work alone.\"\n\n\"Thank you. Mr Harris, can you take Robert, James and Asha to look at the river?\"\n\n\"Of course, sir.\"\n\n\"Then we will meet again at dinner, or tomorrow. Thank you all.\"\n\nAfter they had left Meena made some more tea for me.\n\n\"That went well, Anthony,\" Sumitra said. \"I think you are proving your sanity effectively.\"\n\n\"Probably. But I don't think I need to. Robert and James are the only people who could challenge any bequest I make. Apparently Robert is far richer than I am, and he is thinking of making James his heir. If he does, neither of them would be interested in my modest means.\"\n\n\"Modest means! You are the richest person in the county, Anthony.\" Meena protested.\n\nI laughed.\n\n\"But nephew Robert owns a larger estate than the size of the whole county, Meena. He also owns three gold mines.\"\n\n\"Gold mines?\" Even Sumitra was startled by that.\n\n+++\n\nThat evening Robert was introduced to the whole family before dinner. He enjoyed meeting them but was more formal than James had been. The dinner was a quiet one by my standards, with three men and four women. After dinner the ladies left the gentlemen to partake of brandy and cigars. We went out onto the terrace in the cool of the evening to smoke the cigars.\n\n\"Why did your government send you to England, Robert?\" I asked.\n\n\"There were a few changes we need to our constitution. We are still technically a penal colony but we have a growing population of free men and women. If news of our gold finds is widely known we could acquire a significant increase in population that are not convicts. Our governance needs to change. The Colonial Office seems to agree. The Treasury is likely to exert pressure on them. I brought our tax contribution for the last few years and deposited it at the Bank of England.\"\n\n\"How much?\" James asked.\n\n\"Half a ton of gold,\" Robert answered. \"I needed an escort of soldiers from the ship to the Bank of England. After that I had arranged for the soldiers to escort me to Coutts Bank for my personal deposit. Their chief cashier seemed reluctant to accept me as a depositor. Apparently colonials aren't gentlemanly enough for Coutts. I asked him whether his scruples would still hold when he knew the size of the deposit I was intending to make. He was still reluctant until he noticed my escort of soldiers. 'Very well, sir,' he said, 'how much would you deposit?'. He accepted me as sufficiently eligible and gentlemanly when I told him I would be depositing my own quarter ton of gold. I didn't tell him that I had five more tons to deposit for other New South Wales gold companies. Some of that gold is also mine. I spread them around various banks in the City of London.\"\n\n\"I assume all the banks now regard Mr Robert Andrews as a gentleman?\" I asked.\n\n\"More than that, Sir. They treat me like a Nabob.\"\n\n\"A hit, a palpable hit, Anthony,\" James said.\n\n\"My fortune seems paltry by comparison, Robert,\" I said.\n\n\"But it is more than enough to support you and your extended family in style, Anthony.\"\n\n\"It is, and it will be in trust for them when I die.\"\n\n\"That sounds like a sensible arrangement, Anthony,\" Robert said.\n\n\"Which reminds me, Robert. James here wanted to discuss something with me. It seems a suitable time when I'm not surrounded by women as I usually am. James?\"\n\nJames looked embarrassed.\n\n\"I do have an idea what you want to ask, James. I wanted you to do it while my nephew Robert is here too. He might have something to say about your request.\"\n\n\"Very well, sir. What I wanted to ask was whether you would sponsor me to be an officer in the Army...\"\n\n\"No!\" Robert said abruptly.\n\n\"No?\" James seemed shocked by such a blunt rejection.\n\n\"No, young James,\" Robert said. \"We may at war with Russia within weeks. Your chances of survival might not be good. If you do survive of course you could be promoted. But I can make a much better offer to you than a career in the Army. That is why Anthony wanted me to hear what you wanted. I want you to come to New South Wales.\"\n\n\"To New South Wales? But that's the other side of the world.\"\n\n\"It is, James, it is. It's a new country. It will be a country, not a penal colony, and it is enormous. I own a large piece of it but on a map of the continent my lands are a mere pinprick. It takes three days to ride from one side of my land to another. It needs managing, developing and improving. I may be much younger than my uncle Anthony, but eventually I will need someone to continue to look after the property. You two are my only relations in the world. I want an Andrews, you James, to be my heir.\"\n\nJames staggered as he absorbed the enormity of what Robert was offering.\n\n\"Your heir, sir?\"\n\n\"Yes, James. My heir. Heir to a large property and three gold mines which might be four by the time I get back to New South Wales. I'm not offering comfort and a gentlemanly existence. I'm offering pioneering in a new country. You will have the benefits of wealth but sometimes you might think being an Army officer would have been easier living. I assume you can ride?\"\n\n\"Of course.\"\n\n\"New South Wales horses are unlike English horses but you can learn. You'll have a lot to learn if you are going to be successful. Will you come with me?\"\n\n\"Yes. But...\"\n\n\"There's a but? Anything serious?\"\n\n\"I wanted to be an Army officer so that I could offer for a young lady, Robert. I want her to be my wife but my fortune and prospects weren't sufficient for me to make that offer.\"\n\n\"As my heir they would be enough for any young lady's father. But do you think she would come with you to New South Wales?\"\n\n\"I don't know. She is a very determined young lady. She might.\"\n\n\"I think you need to ask her, James,\" I said. \"Does she live far from here?\"\n\n\"No, Anthony. I could ride to her parents' house in a couple of hours.\"\n\n\"Then, James, do it -- tomorrow,\" Robert said. He reached into his fob pocket and produced a small item wrapped in soft leather. \"Give her this, even if she says no.\"\n\n\"What is it?\" James asked.\n\nRobert put it into his hand.\n\n\"It's a troy pound ingot of gold from one of my mines. That will prove to her, and to her father, that your prospects are excellent.\"\n\n\"I'm sure it will, Robert,\" I added.\n\nJames cautiously unwrapped the leather to reveal a regular ingot stamped with its purity and origin.\n\n\"Thank you, Robert. I'll come to New South Wales with you, with or without my bride.\"\n\n\"You would be better bringing a bride. We are still short of women out there.\"\n\nWe walked back into the house to rejoin the ladies.\n\n+++\n\nThe next day was a Sunday. Robert, James and I together with eight of my ladies attended Morning Service. Afterwards I introduced my nephew Robert and cousin James to the Vicar. The Vicar was startled by Robert's accent. We stood around just outside the church porch. James left with the ladies. He would be borrowing one of my horses to ride to see his potential fianc\u00e9e Emily. \n\nRobert asked the Vicar about the history of the church. The Vicar replied that although it was of ancient foundation it had been poorly maintained in the 18th Century. The roof needed urgent repairs. The local builders had given an estimate of two hundred and thirty pounds for a proper repair, or forty eight pounds to make it safe. I think the Vicar was expecting a contribution from me as the local squire. He was stunned when Robert produced a Coutts' cheque book and wrote one for the whole two hundred and thirty.\n\nThe Vicar's thanks were effusive.\n\n\"My nephew Robert is far richer than I am,\" I explained.\n\n\"He is?\"\n\n\"Uncle Anthony doesn't own any gold mines,\" Robert said.\n\nI think the Vicar thought that was a joke, a pleasantry.\n\n\"He does own some gold mines, Vicar,\" I told him. \n\nThe Vicar shook his head in disbelief as Robert and I walked away towards the waiting chaise.\n\n\"I wonder what the Vicar would say if he knew where my fortune originated?\" Robert said.\n\n\"He doesn't know. Neither do I, Robert. I don't even have an idea what my brother John did to get transported. I was sent to India to get away from the scandal but what scandal? I was never told.\"\n\n\"How amusing. Well, Anthony, John was transported for taking part in a duel. Duels were illegal but hushed up as long as the participants behaved like gentlemen. This duel wasn't gentlemanly, not at all. It was apparently about someone accusing John of cheating at cards. He probably had been. But his accuser was the husband of John's mistress. The real reason for the duel is that the woman had become pregnant and the husband accused John. According to my father the lady in question didn't actually know which of several men might have been the father but it wasn't John.\n\nThe two men were drunk and in a gaming club. They agreed to fight there and then, drunk as they were, and with swords that were on display on the wall. John ran his opponent through the shoulder, not a serious wound, but the magistrates raided the premises just after the duel ended. John was arrested and eventually transported. But his money?\n\nHe was transported for a two year sentence. After that time he was a free man, but in Sydney. His parents were sending him a remittance as long as he stayed away from England. That remittance was substantial in New South Wales at the time and John set up a business that provided a vital service. He started a brothel employing convict women.\n\nThat brothel gave him opportunities to obtain favours from the men running New South Wales. He was able to buy Crown land at very low prices, especially after he had opened four more brothels still employing convict women. He hired the women from the prison governors who got a cut of the brothels' profits. As the women finished their sentences they tended to marry customers of the brothels. New South Wales was and is very short of women. For some reason John was very popular with his former employees. They provided him with information and contacts and his land empire grew and grew.\n\nHe married one of the former convict women and she gave birth to me. She died from a fever when I was twenty. John died when I was twenty five leaving everything to me. By that time he was apparently a solid respectable citizen no longer running brothels. He was, but through nominees. I really sold them and invested the proceeds in developing the land. I used a geologist who had been a convict for embezzlement from his employers in England. He said that he had been the fall guy for his boss. I could believe it. He was scrupulously honest when working for me and he found the first gold deposit. I made him a partner in developing the first mine. He's not as rich as me but he is rich by New South Wales standards. He lives in a pleasant house in Sydney with a wife and half a dozen children.\n\nBut -- John's wealth was tainted. Now mine isn't. I'm no longer a brothel owner. I'm a married landed gentleman with a couple of gold mines and no heir. James seems ideal for that role. He's intelligent, willing to learn, young and my closest relation. He doesn't really appreciate how much work there will be to run a property the size of mine but he'll have time to learn. If he has a wife to help him? He'll do well.\"\n\n\"I hope so, Robert. But we won't tell the Vicar about my brother John. My household shocks him enough. Wednesday will be an ordeal for him. Tuesday all the unmarried couples in the village are getting married at my expense. Wednesday all my children and all those of the village's just married couples will be christened. It could be interesting.\"\n\nWe climbed into the chaise and set off back towards the house.\n\n\"I could give a christening present to your children, Anthony.\" \n\n\"I had to bribe some of the men to get married and acknowledge their children. They were worried that they would be chased by the Parish for maintenance. I've given a dowry of ten guineas to each bride and five guineas for each child to be christened.\"\n\n\"You have? I think your nephew will have to match that, and provide the same for your twenty five children. I have presents for the women of your household. I was thinking of giving them tomorrow but after the mass christening might be more appropriate. So, I'll give ten guineas for each of your twenty five children, and twenty guineas for each mother. How many village brides?\"\n\n\"Eighteen I think. I have a list back at the house.\"\n\n\"The village children?\"\n\n\"Forty-eight. I know that. Each one is getting an inscribed Bible and I've had to sign them all.\"\n\n\"Then I have enough cash with me to pay the lot. If you have some suitable envelopes I'll add the money for the children to the Bibles.\"\n\n\"I will have in my study.\" \n\nAs we approached the house James rode past us. Robert looked carefully.\n\n\"He seems competent on a horse.\" He said.\n\n\"He must be. My stable staff wouldn't have given him that horse unless they thought he could manage it. It's fairly spritely, nothing like New South Wales horses, of course, but it needs careful handling. I regret I'm past riding. I have to travel on wheels, usually driven by someone else.\"\n\nRobert helped me to climb down from the chaise. We walked into the formal garden.\n\n\"For your age, Anthony, you seem remarkably well.\"\n\n\"If I am, it is because my women look after me. Recently I had a fever and our local doctor was useless. Sumitra and the others cared for me. I had already arranged our marriage without telling her. I also re-wrote my will. If that fever had killed me it could have left them all destitute.\"\n\n\"Surely not, Anthony.\"\n\n\"It could. Until my marriage none of them had a claim on my estate. I thought James might have as my closest relation. But you are, Robert.\"\n\n\"But I wouldn't want to inherit from you, and certainly not at the expense of your household. What would I do with an estate in England?\"\n\n\"I didn't know that. I didn't even know you existed until James told me.\"\n\n\"And now we've met. Neither James nor I are a threat to your fortune. Your household can inherit uncontested.\"\n\n\"I know. There was a risk particularly if I was considered insane when I married and signed my will.\"\n\n\"Insane? You? Nonsense!\"\n\n\"The doctor thought I was when I was raving in the fever. The Vicar disapproves of my household arrangements...\"\n\n\"I'm not surprised. Twenty five children and fifteen wives is enough to give the most tolerant Vicar a bad case of conscience.\"\n\n\"The fees for the marriages and christenings will salve his conscience for a while. If I could, I'd marry all fifteen women.\"\n\n\"That would give him a heart attack, Anthony. Christians only have one wife.\"\n\n\"But although they are nominal Christians they are actually Hindu.\"\n\n\"Are they by... whatever God Hindus have.\"\n\n\"Gods, Robert. Gods.\"\n\n\"So you could marry them in Hindu weddings?\"",
        "\"I could. How do you think the village and society in general would take that?\"\n\n\"The village? They think you already have fifteen wives. Marrying them wouldn't make a difference. They're proud of your unusualness. The Vicar? He knows you are living with fifteen women. Society? The Andrews family has a scandal in its closet already with your brother John. Fifteen wives are a minor event compared with owning Sydney's brothels staffed with convict women. You and I are already beyond society's pale even if I am a member of the New South Wales legislature. My money makes me apparently respectable. So does yours no matter how many wives you have. Anyway, you don't mix in society. Anyone wanting to shun you would have to visit you first.\"\n\n\"So you wouldn't care if I married fourteen more women?\"\n\n\"Care? Of course I would care. I'd be delighted, Anthony. If you want a Best Man fourteen times over your nephew Robert will do it.\"\n\n\"Thank you. I may take you up on that offer. I have some idea about Hindu weddings but not one with fourteen or fifteen brides.\"\n\n\"The cricket man, Mr Singh? He's Hindu, isn't he? He might know a Hindu priest that could marry you.\"\n\n\"Mr Singh? Yes. He's Hindu. He is enjoying the food cooked for the staff. Much of it is familiar to him and he has been living on English cooking for a couple of years.\"\n\n\"Then ask his advice, Anthony.\"\n\n\"Won't I shock him?\"\n\n\"You don't understand, Anthony, do you? Everyone knows you have an establishment of fifteen women. I even knew in New South Wales on the other side of the world. That was because you were part of my family, but in England? They know throughout the whole county. People in society in London know about Anthony and his women. Mr Singh will have known long before you considered making a cricket pitch. You can't hide from the facts. You're famous.\"\n\n\"Or infamous, Robert?\"\n\n\"Many are just jealous. Having met your household I can understand jealousy too. They are all intelligent, articulate and attractive. Many men would be scared of having so many clever women in one place. They'd feel threatened. But you're not, are you?\"\n\n\"Threatened? Of course not. I love them. They love me and they are friends with each other.\"\n\n\"And they respect you too, Anthony. They know you have helped them to become the educated women they are. Go on. Marry them! They'll be happier even if Hindu marriages mean nothing in English law.\"\n\nWe arrived back at the house.\n\n\"I'll see you later, Anthony,\" Robert said. \"I want to talk dams with Asha and Mr Harris. I think you should have a rest before lunch.\"\n\nRobert was right. Sumitra and Meena fussed around me and helped me into my bedroom. Meena massaged my legs again. She sat on the side of the bed. This time I hadn't undressed.\n\n\"I'll rest for a little while, Meena.\" I looked at the clock. \"Could you see if Mr Singh could come to my study at one o'clock?\"\n\n\"Mr Singh? Do you want Mr Harris as well?\"\n\n\"No thank you. Just Mr Singh please.\"\n\nI closed my eyes. I heard Meena leave. I was just aware that she was back within five minutes and sat back on the edge of the bed. I went to sleep.\n\n+++\n\nMeena woke me up by gently stroking my cheek.\n\n\"It's ten to one, Anthony. You've done too much today.\"\n\nI must have done. Normally I wake up when I want to. Tomorrow I will have to rest more.\n\n\"Thank you, Meena.\"\n\nShe helped me to get off the bed, gently brushed my clothes to reduce the creases and supported me as I walked towards the study. \n\n\"Has anyone arranged tea for me and Mr Singh?\" I asked.\n\n\"Yes. Mr Singh likes Darjeeling tea. It will there within five minutes.\"\n\nI sat down behind my desk, or rather Meena helped me to sit down. I was still tired. A few minutes later Mr Singh arrived. I apologised that I couldn't get up.\n\n\"Don't worry, Mr Andrews. I understand. You wanted to see me?\"\n\n\"Yes, Mr Singh, I need some advice, but first some tea is coming.\"\n\nAlmost as I spoke the tea arrived brought by Sumitra. She poured the tea for us, gave me a puzzled look, and left. We sipped the tea.\n\n\"I understand, Mr Singh, that you are Hindu?\"\n\n\"Yes, Mr Andrews, I am.\"\n\n\"This might seem an odd question but do you know any Hindu priests locally?\"\n\nMr Singh smiled broadly.\n\n\"Know any, Mr Andrews? I am one.\"\n\n\"You are?\"\n\n\"Yes. I may be a cricket grounds man in training but I am a Hindu priest. And why do you want a Hindu priest?\"\n\n\"You are aware of my domestic arrangements, Mr Singh?\"\n\nHe smiled again.\n\n\"Almost everyone within a fifty mile radius is aware, Mr Andrews. Many now know that Sumitra is Mrs Andrews.\"\n\n\"And are puzzled about the others?\"\n\n\"Yes. Are you suggesting what I am thinking?\"\n\n\"Probably. As you know, Christians only have one wife...\"\n\n\"But Hindus usually have no more than four, not fifteen, Mr Andrews.\"\n\n\"I know. Hindu marriages have no meaning whatever in English Law, Mr Singh. Whether I have one Hindu wife or fifteen can't change that. But my ladies would like to be wives even if that is meaningless in law.\"\n\n\"It wouldn't really be very meaningful to Hindus either, Mr Andrews, but I understand your dilemma. Shall we say that I'm not a very particular Hindu priest? As a priest I would be prepared to bend our customs a little to regularise the reality of your household. If that's what you want I can perform the basic very simple Hindu wedding. I couldn't use the full marriage service because it wouldn't be appropriate. But the simple wedding recognises partnerships that already exist. That I can do for fifteen wives. If we were in India I might be criticised. In England? No one will care or notice.\"\n\n\"Except my wives.\"\n\n\"Yes. It might mean something for them. That would be my reason for performing the ceremonies. I would do it for them, not for you.\"\n\n\"Thank you. And how long would it take beforehand and for the ceremonies themselves?\"\n\n\"Since they are meaningless in law, no notice is necessary. That would be required in India but not here. I would need a fire that you and the brides could walk around. The service itself? Even for fifteen names instead of one the simplest version would take between a quarter and half an hour.\"\n\n\"For each wife?\"\n\n\"No, Mr Andrews, to marry all fifteen to you.\"\n\n\"Then that's what I would like, Mr Singh.\"\n\nHe laughed.\n\n\"It's not quite that simple, Mr Andrews. You have to ask each one of them to marry you and get their consent first.\"\n\n\"Of course. How silly of me. Assume that I have done that. When could the ceremony take place?\"\n\n\"After their consent? Within the day.\"\n\n\"Thank you. I will see all of them today and ask their consent. Would you be free on Wednesday evening to conduct fifteen marriages?\"\n\n\"I would be delighted and honoured to, Mr Andrews. IF you have fifteen willing wives.\"\n\n\"I'm sure I will have. They have been asking me ever since I married Sumitra.\"\n\n\"Then I wish you the best of fortune with fifteen proposals of marriage, Mr Andrews.\"\n\nHe explained how the ceremony would be conducted. Each bride has to be given away by their notional father -- any man could be that -- and the bride and groom have to walk around the fire seven times making a vow each time. For fifteen of them it could be a long chain. Sometimes the bride will lead, or one of the brides, and sometimes the groom leads. He suggested that we should actually walk around the fire sixteen times so each bride leads once, and the groom once. Once I would lead all fifteen. For the other fifteen circuits I would be last in the line.\n\n\"There is one thing you haven't mentioned, Mr Singh. Your fee for conducting the marriages.\"\n\n\"Fee? I have no idea. I've never performed a marriage in England.\"\n\n\"Shall we say that I should pay you what I paid the Vicar for my marriage to Sumitra?\"\n\n\"That seems reasonable, Mr Andrews.\"\n\n\"Very well.\"\n\nI opened a drawer of my desk and pulled out my cheque book. I wrote the date and the amount.\n\n\"I assume you have a bank account, Mr Singh?\"\n\n\"Yes.\"\n\n\"What name shall I put?\"\n\n\"R Singh is enough. The bank can't spell my first name consistently.\"\n\n\"R Singh it is.\" I signed the cheque, blotted it and handed it across my desk to Mr Singh.\n\n\"That much?\" He was surprised. \"Your Vicar is very expensive.\"\n\n\"But he didn't perform fifteen marriages, only one. That is fifteen times his fee.\"\n\n\"Thank you very much indeed, Mr Andrews. That amount will allow me to send for my wife from India when I have found somewhere to live.\"\n\n\"That won't be difficult, Mr Singh. I want you to be the permanent grounds man for our cricket pitch. There will be a salary for that post and a house for the grounds man to live in. Mr Harris has already allocated a house for you. It is close to where the cricket pitch will be constructed. I understand it has five bedrooms. Is that enough?\"\n\n\"Yes, sir. I only have one wife and as yet no children.\"\n\n\"Unlike me.\"\n\n\"Indeed, Mr Andrews, unlike you. Give me time...\"\n\n\"Thank you, Mr Singh. Will you ask Mrs Andrews to join me, please?\"\n\nAs he left I thought of where the ceremony could take place. The Great Hall still has a central but unused fire pit. A fireplace and chimney was installed hundreds of years ago but a small fire could be lit in the fire pit.\n\n\"What have you been doing, Anthony?\" Sumitra asked before giving me a kiss. \"And why with Mr Singh?\"\n\n\"Mr Singh is a Hindu priest, Sumitra.\"\n\n\"He is?\" Sumitra paused and looked at me carefully. \"You're not? You can't!\"\n\n\"I can and I will, Sumitra. Will you marry me according to a simple Hindu rite?\"\n\n\"Yes, Anthony, of course I will, but is this wise? You could jeopardise your proof of sanity by marrying me as a Hindu.\"\n\nI smiled at her. She sat down suddenly.\n\n\"Anthony! You're not going to?\"\n\n\"I am. I am going to have one Christian and Hindu wife and fourteen more Hindu wives, if they'll have me.\"\n\n\"You ARE insane, Anthony. The village will never accept your sanity if you have fifteen wives.\"\n\n\"I know. I'll explain AFTER the marriages. Trust me, Sumitra. I know exactly what I am doing. I have asked my nephew Robert to be my Best Man. Now that Mr Singh has reminded me what the wedding ceremony will be I think I'll ask Robert to give away the Brides as their notional father, and James can be my Best Man.\"\n\n\"I love you, Anthony. We love you. But you ARE insane. You can't have fifteen wives in England.\"\n\n\"I know Sumitra. But I have a wife and fourteen mistresses. The difference in English Law is nothing. But it will mean something to those I love, won't it?\"\n\n\"Yes, Anthony. They'll love you even more for it.\"\n\n\"And I will have made vows to support them and all our children.\"\n\n\"Which mean nothing in England.\"\n\n\"Those vows will mean something to me. I'm not making them lightly. I am serious about this.\"\n\nSumitra sat on my lap, wound her arms around me, and kissed me again and again.\n\n\"You are insane, Anthony, but I love this insanity.\"\n\nI kissed her.\n\n\"Please can you ask all the fourteen to be in the Long Gallery at three o'clock preferably without any of the children. It shouldn't take long.\"\n\n\"What shouldn't?\"\n\n\"I have to ask all of them to marry me, and they have to agree.\"\n\n\"Fourteen proposals in one day? You are insane.\"\n\n\"Fifteen proposals. You've just accepted, Sumitra.\"\n\n\"OK. Fifteen, you bigamist.\" She laughed.\n\n\"But I'm not and won't be a bigamist in English Law. I have a large number of wives and children. The christenings on Wednesday make me responsible for bringing up and supporting all those children. I will be shown in official records as the father of all of them. That also makes me responsible for their mothers. That is the position in English Law. Whether I marry them by a rite that isn't recognised is irrelevant. They are my responsibility from Wednesday onwards, as they are now by my voluntary consent. After Wednesday? I'll explain at the marriage ceremony.\"\n\n\"Explain? I don't know how you can explain, but I trust you, Anthony. If I am going to get everybody to the Long Gallery by three I'll have to start now.\"\n\nSumitra kissed me and left. I stood up, walked to my study window and looked out. I could see Robert approaching from the direction of the river. I waved to him and beckoned. He lifted his hat to acknowledge my signal. A few minutes later he walked into the study.\n\n\"You wanted me, Uncle? I had to change my boots. They were muddy.\"\n\n\"Thank you for coming, Robert. I wanted to talk to you while James is away. I hope he is successful.\"\n\n\"So do I. It is asking a lot to persuade a young woman to travel to New South Wales.\"\n\n\"I'm sure his prospects from you will persuade her father at least.\"\n\n\"They should. Very few young men in England would be potentially as rich.\"\n\n\"But that's not what I wanted to talk about, Robert. I have spoken to Mr Singh. He IS a Hindu priest so...\"\n\n\"You want him to conduct some marriages?\"\n\n\"Yes. Fifteen of them, on this Wednesday. You offered to be my Best Man but I understand my brides have to be given away by a male relation. Will you act as substitute Brides' father instead?\"\n\n\"Of course. But acquiring fifteen daughters even if I give them away immediately might puzzle my wife.\"\n\n\"If she knows.\"\n\n\"She'll know, Anthony. She'll know but I think she'll forgive me if I bring James and his bride. But yes, I'll do it for my uncle Anthony.\"\n\n\"Thank you. Sumitra has just accepted my proposal. Shortly I have to make fourteen more proposals of marriage and hope I'm accepted fourteen times.\"\n\n\"I'm sure you will be, Anthony. I'll have fifteen aunts by marriage. That's a large increase from an uncle, a recently married aunt and a distant cousin.\"\n\n\"Of course. I hadn't thought of that. Sumitra already is your aunt but the other fourteen will be too.\"\n\n\"And if I am giving away fifteen daughters I ought to provide each with a dowry. Coutts gave me four cheque books. I think I might need them. I was going to give cash to Tuesday's brides and Wednesday's christened children. I don't have enough cash on me for fifteen dowries but I can write fifteen cheques.\"\n\n\"You don't have to, Robert.\"\n\n\"But it means nothing to me. If I spend too much which is very unlikely I can always dig up some more gold. I think one thousand guineas each would be suitable?\"\n\n\"Suitable? That is very generous, Robert.\"\n\n\"I'll enjoy the expression on their faces when their so-called father gives them their dowries. Which reminds me. I must give James an allowance if he is to marry. I'll start him on five thousand guineas a year and ten thousand when he is a married man.\"\n\n\"That would be riches indeed for him. I think James currently lives on about seven hundred guineas a year from his father's investments.\"\n\n\"Very well. I'll tell him this evening that he's getting an allowance and give him six months in advance.\"\n\n\"I don't know much about James' intended Emily but I think her father isn't well off. He's a younger son and Emily is his youngest daughter of five. Her father might struggle to finance Emily's wedding.\"\n\n\"We can't have that, can we? You and I can pay for James' wedding to Emily.\"\n\n\"I think that would be a good idea. But how are the ideas for dams proceeding? Was it worth getting your boots muddy?\"\n\n\"And Asha's skirts. Yes. We have found several places where harder rock causes small rapids. Dams could be built at each of them. Those dams could regulate the flow in winter, and if you wanted could power a water mill or mills.\"\n\n\"Mills? At present we send our grain away but a mill for grinding cattle feed would be useful.\"\n\n\"You need a hydraulic engineer to work out the detail. But Asha seems better informed than I am. I've learned more about dams from her than I found out by trial and error in New South Wales. She's a very talented lady.\"\n\n\"They all are, Robert. But I ought to get ready to make my marriage proposals. I'll see you at dinner.\"\n\n\"Good luck, Anthony. I'm sure you'll be accepted fourteen times.\"\n\n+++\n\nI changed into one of my formal suits. I was pleased that I could do it without help even though it was an effort. I walked into the Long Gallery just before three o'clock. The fifteen women were all talking as I opened the door. I walked to the centre of the gallery in absolute silence. I beckoned to Sumitra to come and stand beside me.\n\n\"Ladies! I have asked you to come here for a particular reason. On Wednesday all our children are being christened. Their baptism certificates will all name me as their father. You might not have known, but their birth registration certificates already do that. I am their father and I am acknowledged as their father in English Law. That means I am responsible for them, and also for their mothers -- you. I cannot escape that responsibility and would not want to.\"\n\nI was getting some puzzled looks and some dawning comprehension.\n\n\"I have married Sumitra by the rites of the Church of England. That makes her my wife, Mrs Andrews. I can only have one wife under English Law and Sumitra is that wife. But...\"\n\nI paused. Almost all of them had realised what was coming.\n\n\"You are all Hindu despite attending our village church. As Hindu, I could marry more than one wife. The usual maximum is four wives, but...\"\n\nI paused again.\n\n\"Sumitra, wife, please can you ask each lady to come forward in order of age?\"\n\n\"Asha?\" Sumitra said.\n\nAsha walked forward and stood before me. I knelt down in front of her, took her hand, and said:\n\n\"Asha, please will you be my wife by a Hindu ceremony?\"\n\nAsha smiled down at me.\n\n\"Yes, Anthony, I will.\"\n\nSumitra gestured for Asha to stand beside her.\n\n\"Gita?\" Sumitra called.\n\nI knelt before Gita and asked her to marry me. She agreed.\n\n\"Meena?\"\n\nI knelt before Meena. She agreed to marry me, and stroked my head gently before she moved aside.\n\nI repeated my proposal eleven more times and was accepted eleven times. As I stood up after the last proposal Sumitra kissed me before passing me on to Asha, Gita and so on to the youngest and fifteenth fianc\u00e9e.\n\nI walked a few paces away from my fianc\u00e9es before addressing them as a group again.\n\n\"Mr Singh is a Hindu priest. He has agreed to marry us in the simplest Hindu ceremony... On Wednesday afternoon.\"\n\nThat produced gasps of astonishment.\n\n\"My nephew Robert has agreed to stand in as your father. He will give you away. He has told me he will also give each of you a small dowry since he is acting as your father. He is pleased to do that but worried that acquiring fifteen aunts in one afternoon is slightly excessive. Yes. All fifteen of you will be Robert's aunt even if some of you are much younger than he is.\"\n\nThat produced some giggling. Being wives they could understand. Becoming aunts to a middle-aged gentleman was a novelty.\n\n\"Thank all of you for accepting me as your fianc\u00e9. But now you have some planning to do. You will need to be mothers of children to be christened on Wednesday morning, and brides on Wednesday afternoon. After we are married we will need a wedding feast. I suggest that it should be a cold buffet in the dining room. It will have to be prepared earlier because our wedding ceremony will be attended, not just by the brides and their children but by all our staff, inside and outside. It will be in the Great Hall which will have a central fire that afternoon. I and Mr Singh will explain to Sumitra how the ceremony will be conducted. It will take about half an hour and start at two o'clock.\"\n\nI sat down, suddenly tired. Meena rushed across to me.\n\n\"Are you unwell, Anthony?\" She asked.\n\n\"No, fianc\u00e9e Meena, just tired. Tired and delighted that all of you want to marry me. Thank you.\"\n\n\"And now you are going back to bed, fianc\u00e9. Come on.\"\n\nMeena led me out of the Long Gallery. As I left I could hear Sumitra organising my fianc\u00e9es, giving them tasks for the wedding repast.\n\nMeena undressed me and with some help from me, herself. She climbed into bed with me and rested my head against her breasts. I relaxed against their softness, satisfied with my actions for today. I was aware of Meena gentling stroking my head as I went to sleep.",
        "I woke up with an erection. Meena noticed that too. She straddled me and eased the erection inside her. \n\n\"I may not be a wife yet, but this is what wives do,\" she announced before bouncing up and down on me. Her hair lashed around, her breasts bounced, and I enjoyed every second of Meena's skilled love-making. I might have fifteen fianc\u00e9es but I knew their lovemaking was different. Meena liked having her breasts squeezed when she was close to orgasm. I watched carefully for the signs that she was close before reaching out with my hands. My left hand missed on the first attempt because she was so active. Once I had a grip with both hands Meena was squealing in delight. \n\nOne advantage of my increased age is that it takes a considerable amount of stimulation before I lose control of my erection. Meena had reached orgasm three times before I came into her. She slumped across my chest. I hugged her warm body as we went back to sleep again.\n\nIt was five o'clock when we woke up again. We used the ewer and washbasin to freshen up before we dressed. As we walked back towards the Long Gallery Sumitra intercepted us.\n\n\"Cousin James had returned and he would like to speak to you and Robert. Shall I send them to your study?\"\n\n\"Yes, thank you, Sumitra. Does James seem happy?\"\n\n\"Happy? He's nearly as happy as your fianc\u00e9es even if he hasn't said a word about it to me.\"\n\n\"Meena? Could you help me to the study? I seem tired again.\"\n\n\"And I know why,\" Sumitra said. \"there are fourteen more who want to do what Meena has just done.\"\n\nShe smiled before turning away to fetch James and Robert. Meena supported me as I walked slowly to the study. She helped me to sit behind my desk.\n\n\"Shall I arrange for tea, Anthony?\" Meena asked.\n\n\"I don't think so, Meena. I think brandy and cigars will probably be more appropriate.\"\n\n\"And you've got those in your left hand drawer, Anthony.\"\n\n\"Have I no secrets. Meena?\" I asked with a grin.\n\n\"In a household of fifteen women? Of course you haven't, Anthony. Don't worry. What we know we keep to ourselves because we love you.\"\n\nMeena kissed me before she left. Robert and James came in. James was smiling.\n\n\"Cousin Anthony,\" he said, \"my suit has been successful.\"\n\n\"Congratulations, James, and congratulations to Emily as well.\"\n\n\"And your proposals, Anthony?\" Robert asked. James looked puzzled.\n\n\"Your cousin Robert has asked fifteen women to be his wives,\" Robert explained. \"This afternoon. Well, Anthony?\"\n\n\"I'm engaged too. Fifteen times over.\"\n\n\"Congratulations, uncle.\"\n\n\"Congratulations, cousin.\"\n\nI opened the left hand drawer, produced the brandy decanter, three glasses and three cigars. I filled the glasses and passed them to Robert and James. I lifted mine in salute.\n\n\"To marriage!\" I said.\n\n\"To marriage!\" They replied.\n\n\"And now to details, gentlemen. I am getting married in a Hindu ceremony on Wednesday afternoon. Robert has a significant role as putative father of fifteen daughters he's giving away. I had asked him to be my Best Man but the role of Brides' father is apparently essential. The Best Man has a minor role in Hindu marriages but I would still like a relative's support. Since Robert can't be Brides' father and Best Man, would you be my Best Man, James?\"\n\n\"I would be delighted, Anthony.\"\n\n\"Thank you. Now your marriage, James. Any idea of a date yet?\"\n\nJames' face dropped.\n\n\"There's a problem. The Bride's father isn't sure he can afford a marriage.\" James said.\n\n\"We suspected that might be the case,\" Robert said. \"Anthony and I have agreed that we will pay for your wedding to Emily. It has to be soon. I'm returning to New South Wales in six weeks' time and I would like the new Bride and Groom to come with me. Is that possible, James?\"\n\n\"I'll have to ask Emily, but if you two are paying, I'm sure her father will be agreeable.\"\n\n\"Then again I say 'To Marriage'\" I said raising my glass.\n\n\"To Marriage!\" They replied.\n\n+++\n\nMonday was a quiet day for me. Sumitra and Meena made sure I rested for much the time. Asha and Gita were busy with plans for dams and cricket. Every other woman, fianc\u00e9es and staff, were in frantic activity preparing for the villagers' wedding tomorrow, the christenings on Wednesday morning and most of all for the mass marriage on Wednesday afternoon.\n\nJames had ridden back to his fianc\u00e9e's house to discuss the wedding arrangements. Robert was helping Asha and Gita in conference with Mr Harris and Mr Singh.\n\nJames was back for dinner. Emily and her parents had accepted our offer to pay for the wedding. They had suggested the local Parish church here and James had already arranged with the Vicar for the banns to be read on the next three Sundays. James and Emily would marry on the Saturday after the third Sunday.\n\nThat night Sumitra was in my bed. She made love to me very gently and carefully. The contrast with Meena's frantic bouncing was pleasant -- different but pleasant. Sumitra could be an active lover but she thought I wasn't wholly fit enough yet. She was right. Although my fits appeared to have ended I still felt weak when I had done too much.\n\n+++\n\nOn Tuesday I went to the church by chaise with Sumitra, Asha, Gita and Meena. Robert and James rode horses. \n\nThe church was crowded. I was glad that our family pew was large enough for the seven of us. The eighteen couples had to be in two lines in front of the altar. Their parents were delighted as their children finally regularised their partnerships. The back of the church was swarming with the happy couples' children.\n\nAfter the service all eighteen brides insisted on kissing me, Robert and James. James was embarrassed because eighteen village maidens had decided he needed a full kiss on the lips, unlike the kisses on the cheeks for Robert and me.\n\nWe all went back into the church where my fianc\u00e9es and staff had spread the wedding breakfast. I presented each bride with a purse, sewn by my ladies, containing ten gold guineas. They had expected that. They were surprised when Robert gave them similar purses also containing ten gold guineas. This time Robert and I were kissed full on the mouth. Their grooms appeared to be delighted too. Why not? Twenty guineas was as much as most of them earned in a year. A couple who had savings of a whole guinea would consider themselves fortunate.\n\nWe left before the proceeding became too much of a riotous celebration. It might not, but the wedding breakfast had included copious quantities of beer and cider.\n\nWe heard later that in fact the villagers had behaved well. Any beer and cider left was put into jugs to be taken home. Perhaps the forthcoming christenings deterred wild celebrations? I don't know.\n\n+++\n\nWednesday morning, after a night in Gita's arms, we went back to the church for the christenings of my twenty-five children and forty-eight village children. The service seemed interminable. I had to stand by the font for all twenty-five of my children. Several of my wives discreetly supported me with a hand or two as the naming ceremonies went on and on. I had to sign twenty-five baptism certificates as the father.\n\nI was pleased that I didn't make a single mistake in the names of my wives and children. Why should I? They were MY family.\n\nThere was yet another feast after the service, again arranged by my fianc\u00e9es and staff. Robert and I handed over forty-eight bags each. Five guineas from me and five guineas from him for each village child. Then we gave my ladies the same for each of my twenty-five children. I had sent Mr Harris to the bank in the market town to get enough gold guineas for the distribution today and yesterday. Some of the larger families now had enough guineas to buy the cottages they lived in, if they wanted to.\n\nI had to rest again once we were back at the house. This time Asha was with me as I slept. At half past two she woke me up, helped me to dress and we went to the Great Hall. There was already a large crowd present. Mr Singh and I lit the fire in the centre of the Hall. It was made of well seasoned wood so there was little smoke. He performed several rituals which turned it from just a fire to a Holy Fire dedicated to the Hindu fire god.\n\nRobert was standing with the fifteen women. Prompted by Mr Singh he walked forward, recited the appropriate words for each woman, and placed her hand in mine one after the other until I had fifteen women standing in a group behind me. Sumitra gently shepherded them into order of age. She stood at the front of a line. I stood at the back. At a signal from Mr Singh she took a hand of the woman behind her who took the hand of the woman behind until I took the hand of the fifteenth woman.\n\nSlowly we walked around the fire as Sumitra recited the vow dictated by Mr Singh. Sumitra then walked to the back of the line, just ahead of me, and we walked around the fire again with Asha making a different vow.\n\nThat continued until we had made seven circuits and seven vows. I took the head of the line and we started seven more circuits. Each time I made a different vow, the same ones as the first seven women had made. \n\nThe next seven women made a circuit and a vow each.\n\nIt should have been a serious ceremony. It wasn't. The presence of twenty-five children made that impossible, as did the giggling of fifteen wives as they tripped over each other on the circuits. Perhaps they shouldn't have worn their largest crinolines? They had difficulty keeping hold of the hand of the woman in front.\n\nMy last and youngest bride did a complete seven circuits and seven vows as leader before I took the front again and made seven more circuits and repeated the seven vows. When I had finished I stopped walking. Some of the wives didn't stop immediately and there was some confusion and giggling in the line. \n\nI looked at Mr Singh.\n\n\"Congratulations, Mr Andrews and all the Mrs Andrews. You are now married according to Hindu custom. You have all made solemn commitments to each other to confirm your partnerships. I would normally say that the groom can kiss his bride, but this time I think I'll say, the brides can kiss the groom.\"\n\nThey did. I was surrounded by my brides all trying to kiss me at once until Sumitra pushed them into some sort of order. The assembled crowd of staff and children were clapping and cheering. Eventually cousin James and nephew Robert were able to shake my hand in congratulation. No sooner had they done that than all my brides wanted to kiss them too among much giggling and laughter.\n\nSlowly we made our way from the Great Hall to the dining room. Once we were all present I clapped my hand for silence. I was gratified that even the children obeyed their father.\n\n\"Mrs Andrews, all of you Mrs Andrews, nephew and Brides' father Robert, cousin and Best Man James, children, staff and friends. I have a statement to make about today.\"\n\nThere was an expectant silence.\n\n\"When I married Sumitra in the Parish Church I also signed my will. When I am no more my money and estate will be in trust for all my wives and children. At the time, as most of you know, I had just recovered from a fever. I was worried that my marriage to Sumitra and my will might be challenged because I was insane at the time. So I wanted to prove to the village and the wider community that I was sane.\n\nBut who might challenge my sanity? At the time I thought my closest relation was my cousin James. I was wrong. My nephew Robert from New South Wales was my closest relation and I didn't even know he existed. I do now and I am grateful for him for adopting, if only for a few minutes, fifteen daughters so that he could give them to me in marriage.\n\nBut nephew Robert is much richer than I am. He doesn't consider me insane.\"\n\nRobert interrupted.\n\n\"No, Uncle. I think you are very sane even if you have just given me fifteen new aunts.\"\n\n\"And cousin James will be his heir. James doesn't want my estate either. His expectations from Robert are more than he could get by challenging my will on the grounds of insanity.\"\n\n\"You're sane, Anthony. Very sane,\" James said.\n\n\"Thank you and Robert for those statements. However we had started to try to prove my sanity. Gita suggested that we should provide the village with a cricket pitch. We will, with Mr Singh's professional help. And Asha proposed that we should build dams on the river to stop winter flooding. We will, with expert assistance. Both projects were designed to prove that Anthony Andrews is sane and was sane when he married Sumitra and when he signed his will. But...\"\n\nI paused and looked around at my brides. I grinned.\n\n\"Although those projects will go ahead, they are useless, completely useless, as ways to prove my sanity. Why?\"\n\nI stopped again. I had puzzled them.\n\n\"They are useless because the whole county, society, and even nephew Robert in far off New South Wales, know... that I am insane. I had fifteen mistresses. Everyone for many miles around knew that. They didn't care. That was because they knew I must be insane to share my life with fifteen women. I couldn't prove that I was sane when everyone knew I wasn't. Now I have married fifteen wives. I am pleased and delighted that they all accepted my proposals and have now married me. Does marrying fifteen wives make me even more insane? No. It can't. I'm already known to be insane. Marrying doesn't change that. It's just one more proof of my insanity. If that is insanity, I'm delighted to be insane. It doesn't matter now. The only people who might benefit from proving my insanity think I'm sane, so in law I am.\"\n\n\"Anthony, can I add something now?\" Robert asked diffidently.\n\nI nodded.\n\n\"Mr Andrews isn't insane but society might think he is. We all know he isn't. He asked me to act as the Brides' father and James to be his Best Man. We were delighted and honoured to help. But because we did help there is no way we can challenge the legality of the marriages today. We helped Anthony to get married. We can't then say the marriage is a sham because we were part of it. Uncle Anthony has been very clever. These marriages may mean nothing in English Law. They are real marriages to him, to his wives, and to us, his closest relations. Anthony's fifteen wives are now our relations too. So are his twenty-five children. James and I are godparents to those twenty-five children. Before I let Anthony continue I have something to say to those who were my fifteen daughters a few minutes ago.\n\nA father's duty to his daughters include giving them away at their marriage. But often he provides them with a dowry. That I will do. Each Mrs Anthony will receive a dowry of one thousand guineas from their new nephew Robert.\"\n\nThere were gasps from the brides.\n\n\"Thank you, Robert,\" I said. \"That is indeed generous from someone who was a father for only a few minutes. I want to say one last thing as a new husband and father of children. As Robert has said these marriages today have little meaning in English Law. They are real to us but not to lawyers. When I married Sumitra and signed my will I wanted to make sure that you, now my wives, and my children had a claim on me. What I had forgotten was that as each child was born it was registered. My name and signature appears on each and every birth certificate, as it now does on every Christening certificate. My signature already meant that I had accepted responsibility for that child and that child's mother. In English Law I was already responsible for you all. My sanity or insanity was irrelevant. I have just made vows to love and support you. I will. Whatever my will says, whether I am sane or insane when I sign it, nothing can change my responsibility for all the women and children I love.\"\n\nAs I stopped speaking the dining room rang with cheers. James had been prepared to make a speech as Best Man. He decided not to.\n\n+++\n\nThe wedding feast was a success. I sat down throughout. One of more of my new wives made sure I was supplied with food and drink. I was married fifteen times over, sane or not. But I knew I was loved.\n\n+++\n\nEpilogue.\n\nJames married Emily and the two of them went with Robert to New South Wales.\n\nThe Vicar was still worried about my household arrangement and slightly embarrassed that I had married fifteen women by irregular means.\n\nThe cricket pitch was made and a village cricket team began to play matches with other villages. From time to time I invited other better teams to show us how cricket should really be played. Mr Singh and his wife, and his children, became popular members of the community.\n\nAsha's dams were built but it was two winters before they were complete and stopping floods. One of them became a local swimming hole.\n\nThe village school had more teachers. They needed them with all my children as pupils.\n\nI continued to be regarded as insane by the wider community but the village was proud of my collection of wives.\n\n+++\n\nI wrote all the above a few years ago. Since then I have some more children, registered and christened. I have become more frail with added years. My wives make love to me now. Sometimes a wife pushes me around my estate in a wheeled chair or I ride in a low-slung donkey cart.\n\nI am going to put my pen down now and end this account. A wife is coming to make love to me in a few minutes.\n\nI could never prove my sanity, but if this is insanity I enjoy it.\n\nThe End."
    ],
    "authorname": "oggbashan",
    "tags": [
        "anthony",
        "sumitra",
        "asha",
        "gita",
        "meena",
        "robert",
        "james",
        "hindu",
        "marriage",
        "christening"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/proving-my-sanity"
}