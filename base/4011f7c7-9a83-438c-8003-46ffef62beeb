{
    "title": "Naked Yoga for Men",
    "pages": [
        "A while back I started to attend the 'Naked Yoga For Men' class in my home city of Amsterdam. Although living with a woman for many years, I had always been drawn to guys in my sexual fantasies. It started off when I was in my university rowing crew; spending hours at a time with beautiful, tall men provided me with the opportunity to explore semi naked bodies, and I liked what I saw.\n\nWhilst firmly in the bisexual camp in my fantasy world, I have always dated girls and enjoy the romance and sexual energy that women bring to a relationship. I was happy with the way I carve things up; whilst I devoted time and emotion to my girlfriend in the real world, watching gay and bisexual porn and performing for guys on cam gave me the outlet I needed to indulge my gay side, albeit that it was never 'in the flesh'.\n\nI'd been taking the same yoga classes for several year when the opportunity for naked yoga presented itself.\n\nI remember the evening well. I was changing for another session of Ashtanga Yoga that was being held in a beautiful studio in the canal belt. I was in the changing rooms when a friend of mine called Dion walked in. We met in class, and I'd got to know each other through initially through yoga socials and then by dinners and trips to the cinema together. He was a great guy to talk to: highly intelligent, with an acerbic and very ironic sense of humour.\n\nDion is gay, and I presented myself as straight, so our relationship was non-sexual in nature. However, there was something about Dion that I found incredibly sexy. He had a nice body, that's for sure, but more than that he had a magnetic personality -- his smile beamed happiness, and whenever he walked into a room, my eyes lit up.\n\nDion used to practice ballet -- not professionally, much to his disappointment, but at school and through university. That meant he was very much in touch with his body -- he could hold himself well, and had strong, lean muscles. He was able to get into Ashtanga poses that I could only dream of, but he was never one to show off about it. Rather, he was much more likely to offer help and encouragement. I found myself secretly checking him out in class. He'd wear a vest top and sports shorts that showed off his strong legs. I generally don't like tattoos but the simple lines that he had on parts of his body followed his natural curves, accentuating his beauty.\n\nDion had been absent for a couple of months, and hadn't been responding to my WhatsApp messages, so I was delighted to see him when he walked in.\n\n\"Hey Dion!\" I called when I saw him.\n\n\"Hey Nicky!\" he called in reply, genuinely pleased to see me, reaching forward to kiss me on my cheek.\n\nThis didn't surprise me at all, he was Flemish and greeting a male friend with one light kiss on the cheek was normal. With the formalities over, we hugged each other tight for a while, reconnecting at a physical level after some time apart. \"Been ages, man. Where've you been?\" I enquired. He said it was a long story but that he'd love to catch up after class. So we entered the studio and got started. I ended up behind him in class, which was perfect for me. I could secretly check him out as he slid elegantly from one pose to another.\n\nAfter class we stopped for tea and he told me about what happened to him and why he disappeared. He'd met a guy on a dating app, and having been to bed together, realised that they had more in common than just sex, so decided to commit to a relationship. This was a big step for Dion, his fianc\u00e9 died in a climbing accident in Yosemite National Park a few years previously and he'd taken a long time to get back on his feet.\n\nHe told me that at first his boyfriend was unbelievably charming but that he became more and more controlling. He cut Dion off from everything that made him special -- his yoga, dance classes, his work colleagues and friends. Then he tried to cut him off from his family. Dion realised how toxic the relationship had become, and having got up the courage, dumped him. He had started to rebuild his life which was why he was back in class.\n\nThat's when he told me about the naked yoga. He had been thinking of signing up to see if he could find someone more suitable to date. I could feel my cock stirring with pleasure when he mentioned the class, but tried to play it cool, ignoring my raging hardness. Having weighed up the possibility, he decided to return to this class, figuring that he wasn't quite ready for naked yoga.\n\nAs soon as I got home, I googled the class. I remember seeing the advert online and fantasising about what it might be like to be naked in front of a room full of guys. In my head the men were all gay and had nice shapely cocks. I started to masturbate myself as I clicked a browsed the site and saw that a beginners' series of 6 classes were starting the following Thursday.\n\nI built the fantasy in my mind where I was in class doing my stuff and then suddenly realise that some of the guys were checking me out. My inner exhibitionist is enjoying the fact that a room full of guys are staring at my naked body. I picture myself nude at the front of the class. My cock stirs to life and I start to feel blood pumping down my shaft.\n\nThis creates a ripple effect, and other members of the class also start to get hard. Suddenly I'm no longer a participant in the class, but rather I'm surrounded by a ring of naked men. And I'm now doing my best to make my yoga as erotic as possible, my erect cock on display. The other guys are trying to follow my moves, but they are distracted by my cock and their own level of arousal.\n\nI am fisting my cock furiously as I live out this fantasy, and click on the 'book now' button, my face red, my body hot. I am about to shoot my load, lifting my t-shirt to prevent it being covered in come. Then I am disturbed by the click of the front door as my girlfriend Astrid arrives home and I have to very quickly tuck my cock away and open the kindle reader on my device.\n\nMy horniness has not been sated by this episode, so when Astrid comes to bed, we have the most amazing sex. She comes several times as I fuck her, unaware that whilst physically present with her, in my mind I am being pleasured by a room full of naked guys whilst I am practising my yoga.\n\nThe next morning, I woke feeling guilty and resolved that I wasn't going to go. I was back on the website, looking for how to cancel, when I got an email confirmation from the instructor saying he was looking forward to seeing me on Thursday.\n\nI checked the photo out that was attached to the email and liked what I saw. Jakob, the instructor, was a dancer, and so had strong, firm thighs and looked hot. I google stalked him as much as I could, finding out as many details of his life as possible. I found this amazing picture of him in tight lycra shorts, his beautifully muscled legs pumped from dancing.\n\nI got hard again thinking about what he might look like with his shorts off. I imagined him kneeling beside me when I was in the 'reclining bound angle' pose, my legs open, my cock and balls on display to him. In my imagination he lifts my hand gently, placing it on his cock, before running his hand from my peritoneum, across my balls, and then to my cock. His gentle hands massage me to full hardness in front of a class of 10 perfect strangers.\n\nJust then I hear Astrid call up to me from the kitchen, telling me that breakfast is ready. Although unsated and with my balls heavy with the promise of some cock action, I put the iPad down, slide on some pyjama shorts and head downstairs. It looks like I'm committed to attending class!\n\nClass 1\n\nI spend the next week obsessively thinking about naked yoga. Although experienced with women, I have never been intimate with a guy, and the thought of me being nude in a room full of men for a couple of hours is a massive turn on. I find myself searching on the internet for gay yoga, looking at every film and image that has been created on the subject.\n\nI arrived feeling unbelievably nervous. Having parked my bike found myself standing in the street with lots of doubts. A big part of me wants to turn round and go home. As I am contemplating this I see a couple of guys walking into the building. They are laughing and chatting as they go and from the looks of things have nice bodies.\n\nThat gives me the confidence to go through with it, so I walk in, heart in mouth, not sure what to expect. What I find straight away is that the guys in the class were very chilled and good company. The people I meet are mainly returnees who have been doing this class for a while and clearly know each other. It has the feel of a social club more than a gym. Inside the building there is a small area for changing and storing bags alongside a kitchen area where you can make your own drinks and sit around a table chatting. The guys arrive early, strip and then sit around a large table wearing a sarong whilst they chat and drink tea.\n\nAs I was getting settled, who should walk in but Dion. I was surprised and delighted in equal measure, supressing a squeak as I called his name. We went through our usual greeting ritual, kissing and hugging each other.\n\nIt has to be said that Dion was more subdued, which got me thinking. I realised why; Dion was there to hook up, and people immediately assumed that we were partners. I was cramping his style. So I made a big point of telling people that Dion and I were just friends, going on to say that I had a girlfriend who I was very happy with, much to the relief of Dion.\n\nAfter a few more minutes of chatting the door to the practice hall opened and our instructor called us into class by ringing a small bell. We wandered through, laying our mats out in the warm, dimly lit room.\n\nI remember how nervous I felt the first time I slid my sarong off, exposing my naked body to the room. There were 10 to 12 of us, and on my this, my first visit, I had allowed most of the people in before me to see how things worked out before finding a space. I didn't want to be at the front -- at 195cm tall, even in the Netherlands I stand out, and was hoping to be on the second row which was also the back row of our small class.\n\nHowever, since I was one of the later arrivals, I ended up at the front. I made a bee-line for the side of the room, but the instructor nodded at me whilst pointing at a space right in front of him in the centre. That left Dion out of sight of me; he had found a space on the back row in the left-hand corner.\n\nBeing at the front made me very nervous, but I had no choice but to go with it. Because Jakob had spent some of his career dancing with a professional troop was very comfortable taking centre stage. He slid off his sarong, standing naked directly in front of me. He welcomed the class and normalised what we were doing by acting very professionally.\n\nWe started with some slow warm up exercises, and I relaxed into it. The focus and concentration of getting the poses right meant that I soon forgot I was standing naked in a room with a dozen other guys. Jakob was gentle with us, doing warm up exercises sitting cross legged. He started by showing us how to move our bodies but after a few minutes stood and walked around the class spotting.\n\nI like instructors who do that -- a skilled teacher can use their hands much more quickly to tell you how to adopt the right position than they can with their voice. I was in a 'downwards facing dog' position, arse up in the air and gazing softly between my legs when I noticed him touching one of the other guys in class.\n\nJan was a regular and had been coming to Jakob's class for a few years, so I was surprised he'd need help with a basic pose. In the subdued lighting it was difficult to see exactly what was happening. But as far as I could tell Jakob put one hand on Jan's back, and the other on his bum. Rather than see the firm, professional touch of a teacher, Jakob slid his hand sensually down Jan's butt, his fingers slipping slowly and deliberately down his bum crack, before moving further down further to massage his leg.\n\nIt wasn't clear what I had seen since it was dark and I was looking out the corner of my eye, but I could have sworn that Jan's cock was growing and twitching as that happened.\n\nWe went through a cycle, saluting the sun before going back to downward facing dog. This time Jakob had hands on another guy, and this time he did the same thing, but used two hands on his butt, rubbing from his lower back, across his bum cheek and down his legs.\n\nI was quietly shocked, not quite believing what I'd seen. I didn't have much time to think since yet again we cycled through the salutation, and then were back in downward dog. Jakob moved to another guy. Whilst it was dingy, I saw a quick flash of Jakob's cock silhouetted by the lamp at the side of the room. It had grown considerably and was perhaps 20cm long and was sticking out horizontally.\n\nI couldn't see directly what happened next -- to do so would have required that I broke the pose and quite blatantly turned around. But I knew exactly what Jakob was up to. The lamp cast a shadow of their bodies across the floor and onto the studio wall. It reminded me of a puppet play I had seen on holiday in Cambodia several years ago. I got to see his almost fully erect cock rub up against the bum of the guy beside me as he lay his hands on him. An almost silent sigh passed the lips of whoever the lucky guy was as Jakob thrust his hips back and forth, grinding his cock into his butt crack.\n\nThe thought that Jakob was hard and humping a guy puppy-dog style in class got me super excited. Whilst trying to focus on my yoga, I was aware that my cock was getting stiff quite rapidly as I processed what I just saw. I wondered what was going to happen next. It was then that Jakob told the class that there was one more cycle of that series.\n\nThen it dawned on me that I was probably next up to be touched. Jakob was out of sight of me, cueing the guys on technique with his voice. The fact I couldn't see him increased my anticipation as I went back into the downward facing dog position, deliberately sliding my feet out a little wider than normal just in case he wanted to touch me. I was expecting a treat, so was disappointed when Jakob slid his hand casually over my butt, assuring me my technique was fine before going onto the next guy.\n\nI have to say that I was rather annoyed about that, particularly when I snuck a peek at what he was doing. As his hands landed on the body of the next guy, Jakob was fully hard. Rather than standing to the side of my classmate to correct his posture, was standing behind him, his hard cock rubbing up and down his crack as he spoke.\n\nI have to say I wondered whether anyone else had seen what Jakob was up to? There appeared to be no collective recognition that Jakob was hard and touching other guys as he ran the session. Rather people kept their focus on their Yoga and appeared oblivious to the fact that their classmates were being touched.\n\nWith the exception of some really quite delicious looking and at times semi hard cocks, the the rest of the class proceeded as normal. It seemed to be accepted that Jakob touched guys as he taught them; maybe that's why the class was full.. I was silently cursing myself for telling people I was dating a woman; it was clearly a mistake.\n\nClass 2\n\nI was feeling much more confident as I turned up for the second class. Usually, at the insistence of my girlfriend, I wear boring black boxers that she bought for me. When we met, she told me my underwear was too flamboyant and made a point of throwing much of the wardrobe I had when we moved in together away. However, at the back of the wardrobe I had squirreled away a beautiful pair of pink CKs with a rainbow waistband. Checking myself out in the mirror, I put on before going out, admiring my bulge and getting horny at the thought of what might happen this week.\n\nWhen I arrived at the studio, I made a point of parading around in them, hoping that the other guys might react in a positive way. As usual, I was chatting with the other participants when the bell rang to signal it was time to go in. This time, I made sure I was one of the first through the door since I wanted to grab a space that let me get a better view of out what Jakob did to the other guys during class. I chose a dimly lit corner on the far right as the place where I could practice my voyeurism, and sliding off my sarong, sat cross legged on the floor waiting for the class to start.\n\nFrom the off, I was watching what everyone else was doing as keenly as I could without alerting Jakob to the fact that I was checking either him or the rest of the class out. What I saw was rather sweet -- many of the guys got boners during the class, their cocks growing before returning to the normal size. This made me relax -- getting the odd boner seemed to be tolerated so wasn't something I should worry about. Then, just when I started to think that I had dreamed the events of last week up, I saw Jakob touching one of the participants again.\n\nAt this point I'm standing in 'Warrior 1' position, one foot forward in a deep lunge with my hands up high looking at the ceiling. When I look down, I see that Jakob is touching the guy in front of me. He has one hand on the guys buttock, the other on his stomach as he tries to adjust his position. The guy smiles as he is touched, and then Jakob goes on his merry way.\n\nWe turn Warrior 1 round the other way, so now I'm facing the wall. Jakob goes to the guy beside me, I'm peeking out the side of my left eye as much as I can. This time, Jakob is more blatant, a hand on his buttock, the other on the guy's cock. He's squeezing and rubbing my classmates penis whilst at the same time retaining his normal relaxed voice as he cues the next move.\n\nWatching someone getting jerked in a public place is getting to me, and look down to see my cock swell with the excitement. I'm proud of my cock -- it is thick and 22cm long when hard, pointing skywards. And whilst a part of me wants others to see my erection, my shy side is a little embarrassed at my wayward cock.\n\nLuckily, we turn back to face the other way, meaning I am at the back and not within line of sight of anyone in the class. We're now called to 'Warrior 2'; one leg forward in a lunge, arms parallel to our legs, pointing forward and back.\n\nThen Jakob moves in again. This time he stands beside Jan, and rubs his semi-hard cock into the small of Jan's back. At the same time, he's repositioning Jan's arms, although from what I can tell, there is little to correct.\n\nWe cycle round the exercise, and Jan does the same thing to the guy standing beside Jan. On the next cycle of Warrior 2, Jakob tries something else. Instead of standing next to the guy, he straddles the attendees back leg, allowing him to and press his cock into him. This is getting ridiculously hot -- my cock is twitching like mad as I see Jakob work on this guy, who is sporting a deliciously fat boner.\n\nWe cycle through a round of poses, returning to Warrior 2 and again Jakob uses this as an opportunity to touch a participant, reaching under someone's thigh and running his hand up towards his bum.\n\nAgain, the focus appears to be on the yoga. Tthe lights are very dim, but surely I can't be the only one to see what is happening?? I have strong voyeuristic tendencies and watching Jakob go to work has made me really hard. My throbbing cock is itching to be touched. I fight off the urge to touch myself and once again fantasise about being touched by Jan.\n\nClass is coming to an end and it appears that I am going to go home disappointed; I stand there wondering why I am on Jan's shit list. Jan is winding up with a few more poses, choosing one of my favourate positions from Ashtanga in his closing sequence.\n\nThe pose is called 'karnapidasana' and it involves lying on your back and throwing your legs over your body until your knees come to rest either side of your head. It's very liberating to have your bum in the air, and to feel your body curl up. And whilst there are many health benefits to doing it, I have a dirty little secret about why it's my favourite pose: the reason that I like it is that when I am hard I can self-suck in this position.",
        "When Jakob calls it, I am the first into the pose, staring up at my cock, wishing it was harder and thus long enough to take in my mouth. It's a good few centimetres off being possible which is frustrating -- I know if I was at home I could grab my cock in this position and with a few jerks would have the satisfaction of tasting my precum.\n\nI notice that Jakob has come over to see what I am up to. It is unusual for someone to be able to get his knees on the floor so easily- unless of course they've practiced this pose a thousand times so that they can self-suck.\n\nFor my trouble I get the briefest confirmatory rub on the butt, before he goes over to Dion to give him some attention. The pose means that it is very difficult to see what's around you -- you're pinned down by your own body, and your ability to look around is strictly limited.\n\nBut from what I can see Dion is in his good books. Jakob is running his hands over Dion's body, sliding two hands delicately up and down his bum and thighs. Dion is moaning softly, and I can imagine that his dick must be growing at all the attention he is getting.\n\nWe then come up to happy baby pose to finish the class, my suspicion that Dion is as hard as fuck is confirmed. What also surprises me is the size of Dion's cock. They say that there is a difference between a 'grower' and a 'shower' and Dion is definitely a 'grower'. Flaccid his cock is insignificant, but I can see quite clearly that even half-hard, he's packing.\n\nClass 3\n\nI decide that class three would be a turning point for me. Either I get some more attention from the instructor, or I stop coming. Whilst I enjoy yoga, I have to be honest that other than the homo-erotic element, I couldn't really see any benefits of practicing nude. Actually, it was becoming a chore to go -- situated on the east side of town, it is a much longer cycle than my normal class, and given that Jakob seemed to have ignored me thus far, I was thinking of quitting.\n\nThe fact that I was having second thoughts about attending meant that I was sloppy with the starting time. By the time I arrived, class was 2 minutes from beginning and I knew that once the doors were shut, there was no getting in. I parked my bike and as I got to the front door heard the lock slide across, signifying I had missed my opportunity to attend. I knocked on the door to see Jakob standing there in his sarong.\n\n\"Oh, I guessed you were giving up?\" asked Jakob. \"You'd better come in.\"\n\n\"Well, if I am honest, I am having second thoughts,\" I replied, \"It's just that I am not getting the attention I need to improve my practice.\"\n\nI slowed my speech on the word 'attention' just slightly, lifting one eyebrow as I did so. I hoped that this was direct enough for Jakob to understand what I meant, yet subtle enough that he didn't take offence.\n\nThis time, as the latest arrival, I had no choice but to stand directly in front of the Jakob on the front row. I smiled at Dion as I walked in, before sliding my sarong off. We did our usual starting sequence, focussing on stretching our limbs and loosening our backs up.\n\nThen Jakob pulls me to the front of the class, spinning me round so that I face everyone. He explains that he wants to teach us how to do the crab pose properly, starting with the basics. The class is smaller than usual since the next day, King's Day, is a public holiday. In addition to me, Jakob and Dion, I see Jan in class and another guy called Paul.\n\nHe starts by having me to lie on my back whilst the rest of the class gather round to watch. He asks me to pull my feet towards my butt. This gets your knees in the air and allows you to push your hips up, lifting your back and bum off the ground, which is how you learn crab pose. At his request, I lift my hips off the ground, keeping my shoulders planted on the mat.\n\nHe is kneeling behind me, making eye contact with the remainder of the class when Jakob touches me. He explains the importance of the position of the bum as he touches my buttocks with the palm of his hand. He explains how you need to clench your butt muscles and push your hips high, and as he does so he pushes up with the hand under my bum. Except his hand is no longer flat, but rather his fingers are between my ass cheeks.\n\n\"You need to clench those butt cheeks,\" he says looking at me and the class. Unknown to the rest of the others, I am clenching my cheeks against his fingers.\n\n\"Feel good?\" Jakob asks me, his professional demeanour remaining intact.\n\nOf course, he knows it is feeling good. I feel his fingers playing with me and can feel my cock growing as he stimulates my sensitive opening.\n\n\"Yes,\" I say as I clench myself against his fingers.\n\n\"And relax,\" instructs Jakob, allowing me to return my body to the mat.\n\nI return to the mat, almost too embarrassed to look down at myself, but hoping that my cock hasn't grown too much. Today the studio is dimmer than ever -- in fact the class is lit by candles. But what I see is that my dick is fat and pretty much fully erect. Jakob has now instructed the other guys to return to their mats to practice, allowing me time to recover myself.\n\nHaving practiced this part, Jakob calls the guys return for the next part of the lesson. To get into crab fully, you need to put your hands either side of your ears, fingers pointing towards your body. As you thrust with your hips you push with your hands, and this raises your body full of the floor into crab. The starting point is the same as before - your knees are high and your shoulders remain on the ground. This slightly elevated position means that my cock, which is still semi-hard, flops downward so it is against my stomach, facing towards my belly button.\n\nJakob makes a point breaking off from of teaching to comment on this. He points at my hard -on, deliberately touching my cock with his fingertip before looking up and telling the class not to worry if this happens, since it is pretty normal. On the one hand my face is flushing with embarrassment, but on the other my voyeuristic side is enjoying the attention.\n\nAt his request, I manoeuvre myself into crab, very conscious that my cock is fully hard and on display. They guys are closing in. Jakob says, \"Impressive, huh?\"\n\nThat comment was deliberately ambiguous. It could equally well refer to my body position -- I am high off the deck, only my hands and feel touching the floor. Or my cock, which is fully erect.\n\nIn case there was any doubt about what Jakob meant, he rests his hands on my cock, and then proceeds to squeeze it. I notice that the circle of guys has drawn closer to me, and that their cocks are stirring into life.\n\n\"Questions?\", asks Jakob, looking around. In the absence of questions, Jakob pairs people up so that everyone can practice, the idea being that when you're attempting the move, your partner helps by providing support around your bum.\n\nI see Dion move towards me, grinning as he lies down, signalling that he wants me to help him. I have seen him do this position in our normal, clothed class, so expect to be a bystander as he moves into crab. I look down and see his impressive cock hard against his body. By now, I am kneeling on my haunches, having successfully managed to tuck my cock between my legs. I'm gazing round the room seeing how everyone is getting on when I hear Dion.\n\n\"So, are you going to help me?\" Dion asks. I am trying to keep eye contact with him, but am aware that his throbbing cock is a real distraction.\n\n\"Sure,\" I reply. \"Let me know what I can do.\"\n\nWith that, Dion takes my hand and puts in on top of his hard cock. I am flabbergasted. This is the first time I have ever touched a cock which isn't mine. My hand stays still. I am not sure what to do -- whether to take my hand away, or to squeeze his cock with it. Dion takes the lead, pushing up with his hips, into the crab position. His cock is pushing against the palm of my hand and I feel it tense and throb as he gets into position.\n\nDion waits there, extending the stretch, before returning to the mat. My hand hasn't moved -- it is still palm down touching his cock shaft. I'm unsure what to do; this is a yoga class after all, but I feel my cock throbbing and my excitement level rises. Dion smiles, overlying his right hand on mine, interlocking our fingers. He then closes his hand, so that my fingers make a fist around his cock, his hand like a glove over the top of my hand.\n\nHis cock is throbbing, and I am again struck by the size of it. He is a bigger than me -- maybe 5cm or so, and comfortably thicker. I look him in the eye as Dion removes his hand from mine, aware that I am continuing to jerk him single-handed. His cock feels warm and weighty in my hand, and I enjoy the way it responds to my touch.\n\nJust as I am getting into some serious cock worship, Jacob calls \"Change!\" and we all swap positions. I go back to lying on the floor, aware that rather than subsiding, my cock is throbbing more than ever. Dion puts a hand under my bum as I go to lift off to the crab position. My bum is high, my neck extended and I am breathing as deeply and trying to keep my focus. That's when I feel Dion's hand on my cock. I feel him pulling back my foreskin, closely followed by his lips as he kisses my cock. I am, understandably, pretty shocked by this, trembly even, but also feeling incredibly free. Blood rushes to my head, my heart pounds as I feel him licking my throbbing cock.\n\nThe strange thing is that I don't feel any resistance to what he is doing -- if anything it feels like an extension of our normal yoga class. I come back to rest on the mat, and look down to see Dion working my dick slowly in his hand. It feels electric; having spent a lifetime watching gay porn online and fantasising about cock, I am living that dream. I'm no longer worried about getting hard, or even looking around to see what is happening. Rather I am in the moment and enjoying feeling my gay best friend workin on my cock. Then Jakob calls 'change' again, and we all return to our own mats to continue.\n\nI remain semi-hard for the rest of the class, processing what I experienced. We finish off the class by lying flat in the 'reclining bound angle' pose, flat on our backs, arms out. Jakob tells us to breathe and relax for ten minutes, a meditation where we focus on our bodies and our inner strength. He turns the lights off and suggests we cover our faces with our sarongs so that we are not disturbed by externalities.\n\nI am lying on my mat, focussing on my breathing, feeling a warmth about me that I've not felt before. I am in a good place, and I find myself smiling. My world has changed; I am starting to recognise that my online enjoyment of my sexual identity is starting to coincide with my life in the real world. I am learning to breathe.\n\nClass 4\n\nAfter the excitement of the previous class, I am really looking forward to this Thursday. I decide that I want to look my best, so spend time before class grooming. My experience in the Netherlands is that pubic hair is rarely seen. So I spend a lot of time making sure that I look good. The excitement of turning up completely hairless is intense -- as I stand in the shower with my razor blade, I have to break off since I keep getting hard and end up fisting myself like crazy. On the one hand I want to come, but on the other, I like the idea of arriving in class with full balls and horny. Eventually, after about an hour of edging and grooming, I am ready to go.\n\nI'm early getting there, and see that Dion is making tea as I walk in. By the time I am wrapped in a sarong, he is sitting round the large table in the area outside the yoga hall. I kiss him on the cheek before sitting down beside him. On the one hand I am trying to play the role of his hetro bestie, whilst on the other I am playing back what I saw last week. I remember the beauty of his cock well. How warm it felt in my hand, how it throbbed like it had a life of its own. My cock is stirring as I relive what it was like to see it, to feel the heat of it. And also to feel him kissing and massaging my cock.\n\n\"Nicky! Nicky! Are you even listening?\"\n\nI realise that Dion has been chatting to me, but sitting there with my hands wrapped round a hot cup of tea, I have been off in my own little dream world. I look up and stammer an apology, asking him to repeat what he just said.\n\nAs I ask, Jan walks into class with a couple of other guys who we swap greetings with. As we do this, I am aware that Dion's leg is now pressed against mine. I feel electricity pass between us and my cock twitching under my sarong. Outwardly I am laughing and smiling at the other participants, but inwardly I am getting really turned on by Dion's touch.\n\nMy hands are still wrapped around my tea when I ask Dion to repeat what he says. He tells me about his employer -- a large Dutch bank -- has agreed to pay for a boat at the gay pride canal parade. He's on the organising committee and is clearly excited at the opportunity it presents.\n\n\"Anyway, Nicky,\" he goes on, \"As an organiser I am allowed to invite a friend onto the boat, and I am wondering if you'd be interested?\"\n\nAs he asks the question, I feel his hand on my leg, causing me to spasm with pleasure briefly.\n\n\"What would it be like -- I mean, I'm not...\" I stammer in reply.\n\n\"Gay?\" says Dion, finishing the sentence for me. As he does that, his hand moves onto my cock and he gives it a firm squeeze. I throb with pleasure of feeling his hands on me and my pulse races as he explores my dick.\n\n\"Umm, yes.\" I manage to stammer back, trying to maintain my cool and failing miserably.\n\n\"Well, you don't have to be gay to come,\" he says teasingly. As he does so, he pulls open my sarong under the table and is now rubbing my cock with his hand. I can't think what to say in return -- not because I can't hold a conversation but more that I am enjoying his touch so much I am getting brain fog. I can feel him gently sliding his index finger and thumb over my glans, the copious quantities of pre-cum I'm leaking being used to great effect as a lubricant.\n\nWe sit in silence for some time whilst he masturbates me under the table. I am pushing my leg up against his, looking for the reassuring touch of his body, feeling his warmth and energy.\n\n\"On the other hand,\" he continues, \"if you're not gay, then we don't have to take it any further.\" As he says that he gives my cock one last squeeze before he withdraws starts to withdraw his hand.\n\nWithout thinking, I shout \"No!\" in reply, before regaining my calm a little and continuing, \"I think it could be fun, let me think about it.\" As I shout, my hand goes under the table, and I grab his wrist, pushing his hand back onto my cock.\n\nHe smiles in return and resumes his work just as Jan and the other guys walk in. I wonder if they can smell sex or precum in the room, but guess the smell of fresh mint tea is probably masking any other odours.\n\nWe spend another few minutes engaged in small talk with the other men, although it has to be said that my contribution to the conversation was limited by my inability to think straight. Dion was working my cock under the table, and his skilled hands were getting me close to coming. I was doing my best to think about anything apart from what was happening to stave off my orgasm, but had this vision of walking into class with a damp sarong and a cock leaking the last of my load.\n\nMuch to my relief, the door to the hall opened and Jakob rang the bell signalling the start of class. I leave it as long as I can before standing up, knowing that I will have to very unsubtly rewrap my sarong round my hips with a full-on boner on display.\n\nThis means I am last into the hall again, so end up right in front of the teacher, whilst Dion is again sneaked into the corner. Tonight, the hall is lit by a single desk lamp at the back of the room. This is a relief to me since I know as I slip my sarong off that I am still semi hard, but the lighting means that my body is in shadow, so my exposure is limited.\n\nWe start our class with our usual sun salutations and once again I see Jakob walking round the room casually touching the other guy's cocks and bums as he speaks. At this point I had resigned myself to not being touched much by Jakob, so decide to focus on my posture, plus some sly peeks at twitching cocks, rather than wait my turn and feel disappointed.\n\nI am in downwards facing dog position when I feel Jakob touch me. His hands are running up and down my bum crack as he speaks, his professional tone belying what he was doing to me. I can feel myself start to grow again as he rubs my bum and I start to buckle a little as he helps himself to my body. And then I felt his cock against me. He's standing behind me and I feel his cock and balls in my bum crack. He clearly wasn't hard, since I almost immediately feel his public hair against me too. But it feels electric nonetheless to be touched that way and I am trying to grind back against his flaccid dick, hoping to stimulate it into life. Just as I start to Jakob peels away, moving onto the next lucky guy as we go into downwards facing dog and cycle through our salutation.\n\nAt this point Jakob signals a change to the usual running order, stating that we'd be doing a few exercises in pairs. I immediately spin to look at Dion, but am caught by Jan who nods, walking over to my mat, claiming me. My eyes meet Dion's, our faces resigned to working with our classmates and not with each other.\n\nThe exercise starts with Jan and I sitting back to back. One of us leans forward, whilst the other leans back, creating a back stetch. It feels nice and connected, and I am enjoying myself -- I spent way too long sitting at my desk writing and so having the chance to open up my spine is just what I need. Then we rotate our bodies against each other, still facing back-to-back, creating a sideways twist stretch. Again, it feels nice to be stretched in this way, and I am enjoying working with Jan.\n\nThe next exercise is a little more risqu\u00e9. We stand back to back, and bend in half, stretching our hamstrings, as we fold double. It feels funny to feel someone else's butt against mine as I bend into the stretch. My hamstring flexibility is poor, an issue I put down to a lifetime spent in a rowing crew. But nonetheless my eyes meet with Jan's as I get into the stretch. We grin stupidly at each other as we get into the stretch.\n\nWe then come up again into the standing position, and are tasked with repeating the stretch, but this time wide legged. The idea is that as we bend, we connect with the arms of our partner. This feels much more homoerotic. I am very aware that my legs are spread wide and my butt is up against someone else. We wobble a little as we go down. I look through my legs and can see two sets of cocks and balls. I reach through my legs to grab Jan's arms and am aware that my arms are very close to both our packages. His balls hang much lower than mine, and are an impressive size. Whilst I have smaller balls which sit close to my body, I cant help but notice that my cock is bigger, although I put that down to the fact that this position is once again getting me aroused.\n\n\"Looking good,\" says Jan suggestively. He smiles and winks as he does it, causing my cock to twitch a little more. He then reaches forward, as if to increase the stretch by grabbing me by my elbows, but then 'accidently' makes contact with my package with his forearm. He makes no attempt to hide his enjoyment at what he's doing and rather than withdraw is arm starts to fondle me.\n\n\"Nicky, you've got a great looking set there,\" he says, as his hand envelopes me; his hand circles my cock and balls and he squeezes. This gets me a lot harder very quickly. Again, the lights are low in class, and people appear to be focussing on their yoga, so I am sure that I can get away with my boner. But then I look over to see that Dion is staring at what is going on, a hint of jealousy in his eye.",
        "I can also see that Jan's cock is stirring into life; like most Europeans he's uncut and as he grows I can see his foreskin start to ease back over his cock head. I'm not sure what to do here -- whether to reciprocate and touch him back, push his hand away, or just enjoy what's happening and smile.\n\nAs I am trying to decide what to do, Jakob calls us into another position. This time sitting opposite each other on a mat, legs spread and feet touching. The idea is that we grab each other's hands and pull forward and back to stretch. I sit, deliberately facing away from the light to hide the fact that I am almost completely erect. The shadow seems to hide my excitement well, but the same cannot be said for Jan who is sporting a hard-on. His cock is one of those that seems to naturally point skywards, so as he sits, I notice that his cock is touching his belly button.\n\nI lean forward first, being pulled into the stretch gently by Jan. As I said previously my hamstring flexibility is poor, so I don't get that far forward. However Jan clearly has great flexibility; with his legs spread he's able to stretch so far that is looks like he'll soon be sucking my cock. I pull on his hands in encouragement, and he leans in some more, his eyes on the prize, which is of course my cock.\n\nHe clearly doesn't need me to help him stretch, so instead releases my hands and wraps his arms around my waist, pulling himself to my cock. In response, I drop my hands down, grabbing my cock shaft. This is done partly to get some relief by wanking myself, but mainly so that I can fold my cock down towards his face. This is a great game, and I am trying my best to get my cock the attention it deserves, but the closest I am able to manage is to get my cock head touching the hair on the top of his head.\n\nWe cycle through this a few times, although Jakob appears to be focussing his attention more on other members of the class, meaning he hasn't noticed the shenanigans we have been up to.\n\nOur last partner pose is then called. We can either chose to continue this stretch, rotating between people, or we can go into 'yab yum' pose. Before I can express a preference, Jan is shuffling towards me. He lifts his legs over the top of mine, sliding further forward until our torsos touch.\n\nThis feels quite forward, and results in me freezing for a few moments. Jan sees this as encouragement and shuffles further forward until our cocks meet. He takes both our cocks in his hands and shuffles forward some more, until our cocks and balls are pressed tight together. This is very unexpected and feels unbelievably hot. Frottage is something I've seen on gay and bi porn, and I've fantasised extensively about having a threesome with my girlfriend where she gives me and another guy a double-barrelled suck and wank job.\n\nIt feels heavenly to have a thick hard cock pressing against me, and I can feel a head rush of adrenalin as he gets as close to me as he can. The idea of this exercise is to exchange energy by hugging. However it appears that Jan didn't get the memo on that one. Whilst I am hugging him, I can feel him urgently wanking our two cocks together.\n\nMy inexperience with guys and the voyeuristic pleasure I am getting from being up close with Jan are starting to overwhelm me. I get tunnel vision and can only focus on the pleasure coming from our bodies. I feel him breathe, smell his scent and am overwhelmed by the throbbing of his cock against mine.\n\nJust then Jakob comes over, which is the one thing that stops me blowing my load since it means that Jan slows down his work on my/ Jakob pushes our heads together, getting our lips so they are almost touching. He asks us to synchronise our breathing so that I am inhaling on Jan's out breath, and vice-versa. It feels electric to be this connected to someone, to feel our bodies meld into one. Jakob is standing beside us, and he is slowly getting closer. I can see his small semi-hard cock gowing and it is coming closer and closer to our faces.\n\nI'm in cock heaven and really want to feel what it's like to have a penis in my mouth for the same time. I look up at him, making eye contact as sensually as I can, before looking directly at his cock. My lips part a little and I move my head forward. My first ever cock is about to go into my mouth, and I am trembling with excitement.\n\n\"And change,\" calls Jakob, teasingly, walking away. The rest of the class is a bit of a blur. I manage to connect eyes with Dion at one point, but he scowls back at me, then makes a point of ignoring me for the rest of the class.\n\nWe finish the class in the usual way, with the light off and us all lying in 'reclining bound angle' pose with our sarongs covering our faces. This time Jakob puts on some quiet music to help our concentration.\n\nI am once again processing what happened, aware that my cock is still noticeably bigger than normal when it happens. I feel what I believe to be a finger lightly brushing my frenulum. It happens again, gently and slowly. The movement becomes more assured, and as the pleasure in my cock increases and I swell, I realise that it is not a finger or a hand, but somebody's tongue. This stimulation has me twitching and throbbing with pleasure. I move my hand up to remove my sarong, wanting to know who it is, but my arm is caught at the wrist, and pushed back down again. As this happens, I feel a hand lift my cock vertical, allowing the mouth to envelope my cock. I am getting some real pleasure here from somebody who is clearly versed in the art of sensual cock sucking.\n\nI feel my balls tighten and am trying my best to shoo away my orgasm. I feel embarrassed at the idea that people may sit up and see my chest and mat covered in man juice. But it feels so good that I am powerless to resist. The hand is squeezing and wanking me expertly, whilst the person's mouth is stimulating me in a way that no woman has ever done.\n\nI can feel my balls tighten and know that I am going to explode. Powerless to stop it, I feel muscle spasms which start at my ankles and work up my legs, across my groin and into my back and arms. I am stifling a scream as I shoot a load of come into the unknown mouth. I feel my cock pulse and quiver and know that I am unleashing an almighty load. I can hear my cock sucker gag and cough a little as he takes my load. But credit where credit is due, he took my whole load without spilling a drop. I feel my cock start to go flaccid and my cock sucker disappears.\n\nI am now hypervigilant for sound, trying to work out where this person has gone and thus who he might be. Over the music, I hear a sound. Based on what I just experienced it must be another man being pleasured. It's almost impossible to locate the direction of the noise, but in just a few minutes I hear a stifled sigh. I assume the person who finished me off is taking a second load down their throat.\n\nJakob rings a gong, the pureness of the note reverberates around my soul as much as it does in the space that I am sharing with these other naked men. I feel a sense of inner calm that I haven't felt for a long time, a sense of wellbeing and completeness.\n\nI look around the room, trying to work out who the cock sucker is, and who else might have been serviced, but to no avail. We finish the evening with a chat and some tea, and I make my way into the Amsterdam night, cycling back to my apartment in Oud West.\n\nClass 5\n\nCycling over for my fifth class in shorts and a T-shirt, I pause to enjoy my city. When I'm planning my route around town, I almost always take a scenic route, unless I am really rushed, in which case I take a direct line. This time I cycle through the Vondelpark and down the Paulus Potterstraat so that I can cycle through the Rijksmuseum tunnel. I love the hundreds of years of history that surround me, cycling slowly and making sure I have time to enjoy the unseasonably warm spring sunshine.\n\nI am excited to get to class and want to experience the delicious feeling of homoeroticism and being in touch with my body. The warmth of the day means that the T-shirt, shorts and flip-flops I'm wearing take seconds to remove, and quickly I am sitting alongside Dion at the table.\n\nHe greets me coolly, our usual ritual of hugs and kisses rather stiff and a little formal. I'm wondering what's up -- I messaged him a couple of times in the week, but he didn't reply so I'm guessing he's done something stupid and is back with his ex, who is once again starting to police the relationships he has with people and is starting to check out his mobile phone messages.\n\n\"Hey, how's you?\" I ask, trying to break the ice.\n\n\"Yeah, good\", he replies, noncommittally.\n\n\"You got my messages?\"\n\n\"Yeah, been busy, you know how it is.\"\n\nThis game of verbal tennis continues. I ask a question, he gives me monosyllabic, closed answers, batting away my questions with a single word or short phrase.\n\nAfter the horniness of last week, the chill responses to my questions are jarring. I was hoping that we could continue our game of flirting, but Dion doesn't want to play.\n\nJust then Jan walks in, and I see Dion's eyes tense unconsciously before his conscious thought process kicks in and he smiles. But he doesn't smile with his eyes, there is no warmth in what he is doing, rather he is trying to act normally. I have just a few more seconds alone with Dion before Jan will be joining us at the table, a sarong wrapped round his waist. I need to connect with Dion, so that he realises that last week doesn't change anything between us.\n\nIt's then that I realise that is precisely what the problem is. In his mind, nothing has changed, nothing will change. He is still the gay friend of a hetro guy who likes being around naked gay guys. He sees me as a friend who has taken a shine to Jan. A friend with whom he has always had, and will continue to have a platonic relationship. And he wants something different, that's why he's playing it cool. Fuck. Obvious when you think about it, how stupid of me. I have to change that up and rapidly, Jan is almost naked and will be over momentarily.\n\nI make my move, turning to face him. I can feel the nervousness take over my body. My stomach is tightening, and I feel nausea overtake me. What if I am wrong? No time to think, make a move.\n\nI turn, I quite deliberately push my knee up against Dion's leg. Making eye contact, I ask him, \"Is everything OK between us, you seem rather cold?\" As I say this, I rub my knee up and down his leg quite deliberately. I'm lifting an eyebrow, my tongue slides along my top lip.\n\n\"Yeah, we're good.\" Dion responds, although the tone of his voice and his body language say otherwise. Jan is now sliding down the bench we are both sitting on, so I turn to greet him.\n\n\"Hey,\" he says, a wide smile on his face, \"how are you?\"\n\nAs he does this he leans forward to kiss me, Flemish style on the cheek. It's not a greeting I am used to and it feels a little awkward, particularly with Dion sitting beside me. Yet not kissing him back would feel rude, so I do so, trying to turn my wince into a smile.\n\nI need Dion to know that I am not comfortable with this, although this is difficult since by turning to face Jan, my knee is no longer connected to his leg. So I decide to do something I've never done before. I reach out with my hand and place it on Dion's thigh.\n\nI can't see his reaction since I am facing Jan, but what I do know is that he didn't push my hand away, which means he must be OK with it. Jan is flirting shamelessly with me; clearly he likes me and wants to get to know me better. I'm not going there, but rather am giving polite and non-committal answers to his questions.\n\nAll the time I am feeling bolder. My hand squeezes Dion's thigh, then my hand moves up his sarong until I meet his cock. It is already semi-hard and as I rub it with my palm, Dion opens his legs to make sure I have full access to his manhood.\n\nThis continues for a while. I am trying to move the conversation with Jan somewhere safe, so now am asking him questions. Where's the best vegan place in Amsterdam, does he know where I can get organic cider. All the time I am playing with Jan. His cock feels warm in my hand, it throbs and grows as I touch it. Then I feel Dion tugging at his sarong, pulling it open to allow me in. I respond, lifting my hand as he pulls the sarong apart, allowing me full access. My head is swimming; this is the first time I've touched cock, and it feels magnificent. He feels meaty and hard in my hand, his dick throbs as I touch it, I feel heat.\n\nThen I feel him reciprocate. My stomach is already jammed up against the table since I am half hard, and worried about exposing myself. I feel Dion's hand pulling my sarong up, his hand exploring under the fabric, his fingers running up my inner thigh.\n\nThe conversation with Jan is difficult to maintain, since I am distracted by my carnal needs. Jan is still flirting like crazy, telling a joke, resting a hand briefly on my chest as he giggles at his own wit. Meanwhile, under my sarong, Dion has a hold of my cock head. He is squeezing it, his ability to touch me constrained by the geometry of the area under the table. My sarong is on the wrong side of my body for either me or Dion to rip it open -- it is tucked in on the left side of my body, inches from where Jan is sitting.\n\nTwo more men arrive and sit on the other side of the table -- Dirk and Erik. The centre of the conversation moves to incorporate the new guys. Dion and I are still touching each other, whilst the newcomers chat about the warmth of the spring day, how they have been swimming in the Amstel River before coming to class. I'm doing my best to concentrate, when I feel another hand on my leg, left side, belonging to Jan. I tense as I feel it touch down on my upper thigh, but before I can push it away, it moves across to touch my genitals. It makes contact with Dion's hand who responds swiftly. I feel his hand on Jan's and look over to see Dion's face grimace, his jaw muscles tensing as he digs his nails firmly into Jan's hand. I look at Jan, who is trying to pull his hand away, but he's caught in Dion's grip.\n\nThe guys opposite are talking about their day, but they have no audience. Jan is in pain, I see it in his face, he's pulling his hand away, but is only successful in having Dion's nails dig in and scratch the top of his hand. I'm trying to act normal and smile, looking at Dirk and Erik and trying to engage them in conversation. But at the same time aware that there is a wrestling match going on over who gets to touch my cock.\n\nJust then the doors to the hall open and we are called in to practice our yoga. It's a small class -- just five of us plus Jakob instructing us. The warm weather probably means that the other participants are out on a terrace somewhere enjoying the first spring day of the year. I look down to make sure that I'm not showing a bulge in my sarong, and notice a small bead of precum has darkened the surface of the material.\n\nWe go through the usual sun salutations to warm up; Dirk and Erik on my left, Dion diagonally in front of me, and Jan skulking in a corner on his own to the right of me. Jakob has noticed that the energy in the room is unbalanced, although he hasn't vocalised that thought. Rather he's wandering around, laying his hands on bodies and feeling, sensing what is going on.\n\nAfter passing the other four of us, I can see out the corner of my eye that he is with Jan. As I gaze through my legs in 'downward facing dog' I notice that Jakob is touching him.\n\n\"Feel the energy, breathe. Deep breath in, and breath out. Hold it there. And breathe in, and out.\" Jakob is cueing our breathing, getting us to focus on connecting our bodies and minds together.\n\n\"Now is the time to release the tension and stresses of the day,\" calls Jakob, as he cycles us through a sun salutation. His hands have hardly left Jan's body, and although he is calling to the whole class, extra emphasis is being placed on Jan to follow his words by the way he is touching him. Jakob is almost willing the stress out of Jan's body, his skilled hands gliding over his body, pressing muscles, pulling limbs out to increase the stretch.\n\nAs we go back into the 'cat/cow' stretch., Jakob is standing behind Jan. He follows Jan's body and so as Jan goes on all fours, bum in the air, Jakob pushes his groin up against Jan's butt, his body bent over, arms wrapped around Jan in a hug. It looks beautiful more than sexual, and I can see that Jan is relaxing into an intimate embrace. I am imagining what it must feel like for Jan to be on all fours, spine low, bum pushed in the air whilst a beautiful dancer is on all fours behind you pushing his semi hard cock into your body.\n\nAs I start to fantasise about that, I notice my cock is hard once again. But then Jakob calls time on the exercise and gets me and Dion into a pair, and does the same with Erik and Dirk. Jakob explains that we are going to do some yoga as couples, focussing on deepening our connection and relationships. He and Jan partner up so he can show us what he wants us to do.\n\nWe start with a simple connection exercise, standing to face each other, breathing in synch. This is nice -- I have grown to enjoy Dion's company and creating additional connection seems like a good idea. Our eyes meet, and as I look at Dion, I see an inner beauty I've not noticed before. I smile, and he smiles back. Our gaze softens, our breath melds into one; we are taking long powerful breaths facing each other.\n\nJakob tells us to move closer to our partner, and to connect with touch, the palm of right hand on our partners, heart. This is easily done; we smile at each other as we step forward. I go first, moving my hand onto Dion's chest. He is really close to me and I sense him, his presence, his power in a way that I've not done before. It feels deeply erotic in a primal way, very gentle and deeply strong. I am feeling warmth now and a connectedness I've not experienced before. My cock hardens, but it no longer worries me; I'm just relaxing into the moment with Dion, feeling his stiffening cock throb against me as I return the favour.\n\nWe then go into 'warrior 1', being instructed to work as a couple to create connection. We face our partners, the idea being that we do the pose as close to each other as possible. Dion and I watch Jakob demonstrate this with Jan. With their bodies almost touching they do the deep lunge needed to get into the warrior pose. I can see that Jan is hard -- having felt his cock last week, I know how warm he is. Jakob is too, his little cock poking out his little bush of pubic hair, 20cm of flesh facing straight forward.\n\nDion and I get the idea straight away and remain connected as we slide into the pose. I feel his warm throbbing cock against my body and know that he will feel mine against his. Our breathing is in synch, and our bodies feel connected in a way I have never experienced before. We cycle through the exercise and then are called to 'Warrior 2'.\n\nJakob cues this exercise, telling us that our bodies should touch. Dion and I are close together, our hard cocks pressed against each other as we lunge into warrior 2, our torsos twisted, and arms out straight. We smile at each other, our noses connecting briefly as I wobble slightly. The band between me and Dion is no longer just platonic -- I feel a deep erotic connection to him, feel his presence with me, and love the sensation of his throbbing cock against my body. It feels like our eye contact has not been broken for several minutes now, and rather than having to focus on creating or keeping a connection, it is clear that a bond s has been created between u that is effortless to maintain.\n\nSimultaneously, and at first almost imperceptibly, our lips move together until they connect. I feel a warmth in my body that is taking over, a togetherness with Dion that is exciting and dangerous. I'm aware only of us as a pair, and nothing else in the room matters. We hold our bodies together for some time, our lips opening slightly, our tongues lightly playing together.",
        "Jakob decides that it's time to call the class back order, aware perhaps that our yoga practice was becoming an exclusive club and was perhaps distracting for others. We move through some other positions for a half hour or so. I feel a sense of loss, that the connection that we and Dion created almost effortlessly between us was now gone, but I also recognised that I needed to think about the others in the room.\n\nJakob decides to finish the class with some more partner yoga and calls us to the 'boat' position. We sit, facing each other, and attempt to get our legs straight and up in the air, our feet touching whilst we hold hands. It looks great online, but I don't have the hamstring flexibility to give this position justice, so we end up sniggering like kids as we try and fail to get into this position. Jakob sees this is an issue for others in the class, so quite quickly abandons this exercise and moves us into 'happy baby'.\n\nIn this position, you lie on your back, bend your legs up so your knees are touching your torso then hold your feet with your hands. It's a fun way to end class and allows you to rock around a little on your back.\n\nJakob comes over to me and says, \"I will show you how to increase hamstring flexibility.\" before kneeling so his thighs touch my bum and upper thigh. He leans forward to press his hands on my thighs, attempting to increase the stretch by pushing my legs down. I immediately feel the stretch but, in this position, feel nd exposed. Given my legs are open and my legs pushed down, I am sure that everyone can see my butt hole as well as my cock and balls. Indeed, the guys have created a tight ring around me to see what is going on.\n\nJan, who is by my side is the first to pipe up, grabbing my ankle, rubbing his hand up my lower leg and asking whether the shins should be at 90 degrees to the ground. Then Dirk, who is on the other side of my body joins in, sliding his hand up my thigh before grabbing my other ankle and making a comment about whether this limb is upright or not.\n\nErik, who is kneeling up by my head shuffles forward so that one knee is either side of my head. He leans forward, butt out, and plants both his palms on my chest below my nipples, asking if my shoulder blades need to be on the ground. I look up to see that his cock is half hard and surprisingly close to my mouth.\n\nSomehow this feeling of vulnerability is taken over by my voyeuristic side, and I am starting to enjoy the attention that these guys are giving me. I feel my cock stirring into life, and, given the position I am in, am unable to hide it.\n\nOn the one hand, Jakob is acting very professionally, engaging with the questions and providing detailed answers. He clearly studied anatomy and physiology as part of his training and is able to name muscle groups as he addresses each person in turn. He then turns to me, explaining that my hamstring muscles are tight, and perhaps need a massage as well as a stretch. His hands are running from my butt towards my knees as he explains he is massaging the deep tissue in the gluteus maximus and hamstrings.\n\nI look around and see five naked guys around me, eight hands on my body. I can feel my cock throb against my stomach, swelling and growing towards my belly button. I'm also feeling a little lost since Dion isn't anywhere to be seen so start to look around -- my head rotating as I scan the room.\n\nJakob can see that I'm looking for Dion, so gets people to partner up again to try this exercise. Dion slides into the gap left by Jakob. He approaches me with his knees spread wide, pushing his thighs against my legs so that my butt is raised. My bum comes to rest against his legs, so that his cock is inches from my butt hole.\n\nJakob is cueing the exercise for the others, explaining that you need to press down on the thighs to create a stretch. My legs are comfortably up in the air so rather than hold them in true 'happy baby' position, I have grounded them alongside my body. Already flushed with adrenalin from my little show, I am feeling bold so reach out and start to pull Dion closer to me as he massages my thighs. His thumbs are working down my hamstrings with some pressure. It is then that I start to feel his cock stirring and as it grows I am aware that it is pushing downwards into my bum crack.\n\nI know from experience that if your cock is stuck facing the wrong direction, it can be quite uncomfortable, so it doesn't surprise me when Jakob takes his cock, removing it from where it got wedged into my crack and then placing it so that it is facing up and forward. It ends up sitting against my butt hole. As he massages, he wriggles closer to me, and as his cock stiffens I feel his length against my bum hole, peritoneum and balls.\n\nMy cock is as hard as hell and leaking precum onto my stomach. It's desperate to be touched, to be squeezed and played with, but this is a yoga class. I am sure now that Jakob is playing with us, teasing us, seeing how far he can push the envelope with his cool professional voice and his wandering hands.\n\nJakob has Jan on his back, legs open and he's massaging his thighs and bum. Jan is hard and is gripping his feet with his hands as Jakob goes to work. I look over to my left and see that Dirk and Erik are both hard. I look right and see that Jakob's beautiful cock is inches from Jan's bum, and that Jan's cock is pointing unashamedly skyward.\n\n\"As you can see, begins Jakob, \"this can be quite an enjoyable exercise.\" He emphasises the work enjoyable deliberately raising his voice and pushing down on Jan's thighs as he explains what is happening.\n\n\"If you look closely then you can see, Jan's cock is erect. And I am sure that if you were at home, then this would lead to foreplay and potentially sex. Now whilst it would be tempting to masturbate your partner in this position, we need to remember that this is a public space...\"\n\nAs he says the word 'masturbate', his hand slides up Jan's bum, across his balls and onto his throbbing cock shaft. He emphasises the word by gripping his cock and masturbating it several times, much to the enjoyment of Jan. My eyes are wide with excitement, and I throb with pleasure as I see Jan's meaty cock being stimulated by Jakob.\n\nHe then finishes the sentence by saying that \"Whilst mutual masturbation would be fun for some, remember not all participants may not enjoy watching or engaging in gay sex. And thus, without the consent of everyone, it's not possible to go any further.\" As he said this Jakob is staring at me. He is making reference to the comment I made in class one when I made a point of telling everyone I was hetro and had a girlfriend. I could feel the stares from others burn into me for ruining their pleasure.\n\nBefore I can say anything, Jakob calls the class to a close and reluctantly, one by one, we pack away our Yoga mats and return to a world without nakedness.\n\nClass 6\n\nAs I cycle across Amsterdam I am aware that this is our last class. What happened last week is still fresh in my mind, indeed I've played it out as a masturbation fantasy several times when I've been alone. I keep going back over the part of class where Jakob is rubbing his hands up Jan's thighs before he starts to jerk him off. In my mind I feel Dion's warm throbbing cock between my legs as a jerk myself to yet another orgasm.\n\nEven when I was fucking my girlfriend Astrid, I was thinking of yoga. When I got back from class last week I took her in missionary position before pushing her legs high in the air so that she was lying more or less in the 'happy baby' position. I let my hard cock rest across her butthole and peritoneum and try to imagine what it would be like to be penetrated in that position. She is very conservative in bed, so whilst I would like to fuck her anally, it's not something she wants, so I take her vaginally leaving thick ropes of cum inside her.\n\nThis sates some of my desire, but I know I need more. Astrid inevitably showers after sex, so whilst she's away I retrieve her vibrator from the nightstand. I'm lying in happy baby again, but this time with my feet up the wall. I fuck myself with her dildo whilst fantasising about being filled up by Dion's nice big dick as the rest of the class watch. I come hard over my chest and have to clean up quickly before Astrid returns to bed.\n\nI'm the first to arrive at class and strip naked in the changing area. There is a mirror in the corner, and I am checking myself out in the mirror. Once again I have shaved myself bald and am enjoying the look of a naked cock and the feeling of my smooth bum. I am horny as hell so have a little rub as I watch myself in the mirror.\n\nI am fully hard and getting into fisting myself in the mirror when I hear the front door open. I quickly wrap my sarong around my waist and as Dion walks in, move swiftly to the kitchen to make tea for everyone. I wave a quick 'hi' over my shoulder as I go, aware that if I turn round to kiss him in greeting, then my hard cock would be blatantly obvious through my sarong.\n\nDion and I chat idly as I make tea and he strips. Every now and then I turn round to secretly check out Dion's body. His cock looks half hard from what I can tell, and he makes little attempt to hide it as we talk about our what we have been up to the previous week.\n\nAs I make tea, I am aware that Dion behind me. It's just a feeling to start with since he arrives silently and doesn't touch me. But I know he's there, call it a sixth sense or whatever you like, I don't know what it is since I've not experienced it before. I continue my work, counting cups and filling the teapot with hot water from the kettle. As I put the kettle down I feel Dion against my body.\n\n\"There must be glasses somewhere?\" says Dion, standing behind me. He reaches forward to an eye-level cupboard just to my right, and as he stretches forward to open it, I feel his warmth against my body, his cock against my bum crack. I'm not at all startled, rather this just feels right, so I relax into it, pushing my bum back just a little to sign that I am enjoying what he's doing. Then I point to the cupboards in front of me and to my left.\n\n\"Have you tried these?\" I ask, making no attempt to look myself.\n\nDion pushes further forward onto me, so that our bodies connect more completely. He slows down his movements, rubbing his groin against my body as he pulls open the second cupboard.\n\n\"Nope, nothing in there.\" He says, before he tries the next. I can feel him against me, and am breathing him in; his scent, his words, his body, his soul are washing over me, creating an electric connection between us. It feels beautifully right to be this close to him so I turn around slowly to greet him.\n\nWe make eye contact and hold it for several seconds. \"Hey!\" I say, simply.\n\n\"Hey!\" he says in reply, holding eye contact.\n\nThen we lean forward, ready to do our usual single cheek kiss in greeting. But it is abundantly clear that this is not going to be enough for either of us. Our bodies are still touching as we kiss. Our lips press together gently. We hold this position for a long time and as the seconds tick by, I feel my connection to Dion growing. I wrap an arm round his back both to hug him and to pull him closer to me. He mirrors my movement, and we stand there in a deep and beautiful embrace in the kitchen, checking in with each other, connecting physically with our lips, hands, bodies and souls.\n\nWe both wrap a second arm around each other. I feel enveloped in his presence and the warmth of his embrace is overpowering. Our cocks are both half hard so that I can simultaneously feel my dick pressing into his body whilst at the same time feel his throbbing warmth against me. I squeeze him harder, wanting to feel him in his entirety. against me. My mouth opens and I slide my tongue out, licking against his lips before probing his mouth, connecting with his tongue. I am deeply aware that whilst this physical intimacy is something beautiful the connection is more than just in the flesh, I feel a sudden rush of love towards him and feel my pulse race as I let these emotions flow over my body.\n\nI'm half notice that the door to the street has opened and that there will be others walking in, but I am in some sort of trance, mesmerised by this moment and by this beautiful man, so make no attempt to break our embrace. After some time, we release each other and then sit as the other class members assemble around the table and make small talk.\n\nThe doors to the studio open, calling us to start the class. I know that I need to be near Dion for this class but am worried that I may end up being partnered up with someone else during our exercises. I need to signal to Dion that I want to be with him and at the same time make it clear to Jakob our teacher that we're going to work together. As we file in, I reach out and take Dion's hand. He understands what I am doing and squeezes my hand back. I make eye contact with Jakob as I file in so that I am sure that he's got the message.\n\n\"Welcome everyone,\" says Jakob. \"This is the last class in the series, so let's make it special one.\"\n\nThe class starts as usual with some sun salutations. I am focussing on my breathing and posture and having attended several classes by now, am able to do this quite naturally since the routine has been built into my muscle memory. The movement is nice -- I spend way too long every day sitting in front of my computer, so this is just the tonic I need. We glide through the exercises, from standing, into upward facing dog and downward facing dog.\n\nJakob is as attentive as ever, moving between participants, correcting posture where necessary and running his hands over our naked bodies. He returns to the front, saying that he wants us to focus on our hamstring flexibility, although he stares at me as he says that. We practice a pose called 'ardha uttanasana' in which we bend forward at the waist and attempt to put our palms on the floor. I am left with my hands just below knee level, which doesn't surprise me. Jakob uses this exercise as an excuse to touch some of the guys in class. He stands behind them as they bend forward, rubbing his groin against their bums. As ever, it's fun to watch, and I get a little aroused seeing him touching the other guys. Watching dicks grow when they get attention is something I could do all day long.\n\nWe then rotate between this exercise and 'ardha chakrasana' which is a standing back stretch where we lift our hands and bend backwards. It is funny to watch the semi-hard dicks around the room as people bend backwards -- Jakob seems to be able to work his magic whilst at the same time keeping the class focussed on yoga. It also makes me realise how much more confident I am about my sexuality and how much I have changed since I started attending class. At one point even the thought of Jakob touching me would get me hard, whereas now I am actually glad he has kept his hands off me since I am more interested in Dion. He seems to have sensed that since he doesn't get that close to me.\n\nJakob then pairs us up for some partner work, at which point Dion and I move close together so we are on the same mat. We stand side by side, our pinky fingers interlocked at our sides as we listen to what we are going to do. Our first exercise involves sitting back to back, and then twisting and stretching our backs by simultaneously reaching round to put a hand on our partner's thighs. It feels nice to be close to Dion, and I love being able to rest my hand on his firm thigh whilst feeling his hand on mine.\n\nWe change sides and repeat the exercise. This time my hand comes to rest closer to the top of Dion's thigh, a move that he copies. We seem to have created a flow between us that makes movement easy. Our bodies seem to be effortlessly synchronised and it feels very natural and Dion's nakedness against my skin is as ever electric.\n\nJabob changes the exercise. Under his instruction I drop myself down from the kneeling position so that my bum is on my feet, my head is on the ground and my arms are outstretched. Dion sits behind me and then lies backwards. Again, I feel the beautiful warmth of his body against mine. We then change and I feel supported and relaxed as I lean back on Dion. Jakob tells us we will cycle through the exercise again, advising us that if we want to we can change the exercise so that the partner on top hugs the guy below him rather than lying back to back.\n\nI get into position and am rewarded by feeling Dion on top of me, hugging his chest against my back. It feels comfortable and natural to be there, and the tight embrace he gives me sends shivers of pleasure over my body. We then change, and I give him the same treatment back, opening my legs and pushing forward to make sure that I am as connected as I can be with him. My hard dick is pushing against him, but more than that I feel a warmth that feels spiritual. Dion's breathing is slowing and I can tell he feels totally relaxed and calm.\n\nJakob calls us to the last position of class. Rather than doing 'reclining bound angle', he gets us lying in a ring formation so that each man has his head resting on the stomach of another. I end up with Dion's head on my stomach and my head rests on Jan. Jakob turns all the lights off in the room, joining us in the ring and signalling that this is a mediation of 10 minutes or so. He says that he wants the class to be still, so rather than explain what he wants us to do, will work on the body of the man on his stomach with the expectation that whatever he does is then copied by the recipient so that it is passed around the circle.\n\nIn the pitch black I focus on my breathing, and also on the warmth of Dion's head on me. Then I feel a hand on my right temple rubbing gently in a circular motion. It feels nice, and as instructed I reach forward to do the same to Dion. After a minute, the hand disappears, and is replaced by a hand on the left temple. I change my hand on Dion's head and relax into the massage.\n\nAfter another minute, we start massaging both temples at the same time. It feels fun to be a part of this, and I am enjoying feeling around in the pitch back darkness of the class. Jan's hand is moving to my forehead, and then my nose, before sliding across my lips and coming to rest on my chest. I pass this movement onto Dion and silence and stillness permeates the room.\n\nThe next thing I know, I feel Dion's hand on my dick. I have been focussing so much on the energy of the ring that I had forgotten I was naked. My cock was evidently half-hard, so it didn't take long to massage me into a full erection. As I was relaxing into being touched, it suddenly struck me that maybe I should be passing this movement up to Jan. It didn't feel right in some ways, since up until that point in time all the movements had been passed in the other direction -- Jakob would touch Dirk who would touch Jan who would touch me then I would touch Dion.\n\nI started to wonder whether I was I expected to touch Jan's dick, or was this Dion doing a bit of freelancing? It wasn't clear to me whether this was part of class or not, so I wasn't sure what to do. What I did know was that I was enjoying being massaged by Dion, so felt it only fair that Jan got to experience the same thing. Tentatively, I reached my hand up in the darkness until it landed on Jan. I found his thigh so slowly, and I hope sensually, slid my finger upwards to his cock. I paused on his balls, giving them a little squeeze before moving further up. His cock was fully hard and rather than hanging down, was pointing towards his navel.\n\nI started to wank him slowly, feeling him grow and throb in the darkness. I could feel him flexing his cock muscles as I went to work and was impressed by both the girth and length of his cock. As it grew, his cock inched closer to my head until in the end his dick was touching my ear. This felt very hot and gave me the encouragement I needed to continue to massage and rub his cock.",
        "At the same time I was enjoying feeling Jan's hands on me. He was clearly skilled and was alternating between wanking my cock and squeezing my balls. I felt precum leak from me as he went to work, and wondered whether this would put Dion off. I then felt his finger on the top of my cock, before his hand was removed. I was sure that I heard a llicking noise, although it was so quiet that I may well have made it up. Either way, his hand returned to my cock and he wanked me some more.\n\nI could also feel Jan's dick had grown so much that it was on my ear now; it felt a little uncomfortable if I am honest/ I went to lift my head to move slightly so that I could wank him unimpeded. It was then that a cheeky thought occurred to me which I played backwards and forwards in my mind. Maybe I could turn my head as I lift it? Then I might be able to see his cock, or at least smell it and be closer to it. I talked myself out of it, and then realised that sometimes my biggest weakness was my intellect; I am PhD educated and have a way of overthinking situations.\n\nSo rather than that, I decided to go with my gut feel. I lifted my head, and twisted it at the same time, landing with my ear on Jan's stomach. This lifted my shoulder, allowing me greater freedom of movement with which to wank him. His cock felt really nice -- thick and meaty. I could feel a vein on the top of his cock, and enjoyed sliding his foreskin back and forward over his dick head. I tried to imagine what it would be like to have it in my mouth. Just then, I felt Dion do what I had done a minute earlier -- in the dark I felt him lift his head, turn it 90 degrees and put it down again on my stomach -- I could feel his ear on my belly button.\n\nI then wondered how far I could lead the class. I was throbbing with pleasure and overwhelmingly turned on; my brain was working less and I was responding to my body. So rather boldly, I stuck a tongue out in the dark, searching for Jan's penis. Sure enough, I landed on the tip, and was rewarded by the sweet taste of his precum. This was the first time in my life I had been that close to a cock, and I felt adrenalin course through my body as I tasted him.\n\nI continued to flick my tongue over his head and wank him when I became aware that this latest message had been passed around the ring. Dion started to lick my cock head in the dark, his tongue circling my glans in a way that I'd never experienced before. I followed Dion's lead, doing the same to Jan. As my tongue swirled around his frenulum I felt his fat cock tense and twitch in response.\n\nI smiled inwardly, this image of a dozen guys secretly jerking and licking each other in the dark fulfilling a fantasy of mine for group sex. I decided to extend the envelope, to see how far I could take things, so slid my head forward to take Jan's cock in my mouth. This was another first for me, so I savoured the moment, feeling his meat slide into me, and enjoying the sent and taste of his precum. I half lifted my head off Jan's lap so I could suck him, pumping my mouth on his cock as I squeezed his balls.\n\nSure enough less than 30 seconds later, I felt Dion doing the same to me. This felt deliciously hot, and I wanted to maximise my pleasure so I thrust my hips in time with Dion. He was massaging my balls and squeezing my cock as I face fucked him in the dark. Then it happened again, less than a minute later Jan starting to face fuck me. His cock is huge, and so whilst I am doing my best to accommodate him I feel like I need more of his cock.\n\nThe sense of urgently to take more of his meat in my mouth means that any remaining sense of decorum has evaporated. I am guessing that the other guys must be enjoying themselves too since the chain of connection hasn't been broken, which would have been the case if one of them had decided to opt out of leave the ring.\n\nSo I decide to go for it. I slowly turn my head and rotate my shoulders so that I can go down on Jan properly. His cock is deep inside my mouth by now and I can feel him gently urging me to take him deeper with gentle pressure on my neck. I am enjoying this so much I almost miss the fact that Dion has rotated too and is now giving me a gold standard blow job.\n\nI am in cock heaven, and rotate even more so that I can give Jan's cock the attention it deserves. I lift Dion's head with one hand so that I can reposition myself on all fours, allowing me free access to Jan's cock with both hands and my mouth. Dion shuffles on his back so that he is positioned under my cock, allowing me to face fuck him.\n\nMeanwhile, Jan is loving my attention. He opens his legs and grabs my head with both hands so he can train me on how to give him the best oral. Then he mirrors the movement that I gave to Dion, lifting my head so that he can get on all fours. I'm now lying under Dion, head on the floor whilst he face fucks me. My hands mirror Dion, and flow freely over Jan's cock and balls. I feel Dion running a wetted finger along my bum crack and do the same to Jan. Dion's hand vanishes briefly before returning slick with spit, and he probes my bum with his finger as he thrusts into my face. I do likewise and feel Jan tense with pleasure as my finger slides into him. He's now leading the rhythm, thrusting forwards into my face, then backwards onto my finger.\n\nI feel Dion sliding a second finger into my bum, and realise that I am very close to coming. I do the same to Jan, sliding a second finger into him and letting him thrust onto them. My balls are tightening, and I can feel the point of no return approaching. I release myself to the pleasures of my body, neither fighting my orgasm nor trying to delay it. My hip thrusting slows and I feel wave after wave of pleasure cascade across my body as the combination of being anally fingered for the first time and being sucked tip me over the edge. I feel my cock and balls pulse as I shoot my seed into Dion's mouth. His hands are on my thighs, and he is pulling me towards him as I come.\n\nMy orgasm is so intense that I miss the fact that Jan is unloading in my mouth. As I start to focus, I feel rope after rope of come hit my tongue and the back of my throat. I know I come a lot, but I am unprepared for the come fountain that Jan gives me. He tastes sweet so I enjoy the feeling of being used as a come dump, recognising that Dion is enjoying the same experience with me.\n\nAlthough I tried to stay silent, I know that I was moaning through my orgasm, and also heard the soft yelps of Jan as he came inside me. This seems to have set off something of a chain reaction as I hear the stifled moans as the other 10 guys in the room unload.\n\nSlowly, we return to our starting positions, lying on each other's stomachs, a position we hold for a good five minutes or so. I then hear a lighter sparking and the flame of a candle which is slid into the centre of the room. Jakob calls us into the seated position and gets us all to shuffle cross legged into tight circle. He tells us to connect with the guys to our left and right, thanking them for our yoga practice. I feel Dion connecting his hand on my inner thigh, and I do the same back to both him and Jan. I run my hand down to Dion's cock to squeeze it, and then do the same with Jan. They mirror my action, and so I end up with two hands rubbing and squeezing my cock and balls.\n\nI turn to Dion to kiss him. I see some spots of come on the edge of his mouth which I lick off, realising that I am licking his face clean of my come. He does the same for me, tasting Jan on my lips. We then kiss open mouthed, tasting come on each other.\n\nI then turn to Jan, and we kiss each other on the lips. Jakob calls the class to focus our attention on him, blowing with a 'Namaste' to complete our practice."
    ],
    "authorname": "rowingbigboy",
    "tags": [
        "yoga",
        "gay romance",
        "gay first time",
        "group sex",
        "gay oral",
        "sport",
        "love",
        "bisesual",
        "bi awakenings"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/naked-yoga-for-men"
}