{
    "title": "Sholan Alliance - AU Bk. 03 Ch. 06",
    "pages": [
        "Billy was rather expecting Dani to need a good hug but once she was holding him he could feel her panic. For several moments it started to impact on him till the doctor gave him an injection. He was about ready to snarl at the man before the doctor spoke. \"It is just to take the edge off and nothing else. She doesn't need you reacting to her emotional high as you were starting to. I have given the same to Lt. Commander Verzilon for the same reason. I will be right outside if you need anything.\" The door opened and then shut as the doctor left the room. \n\nNow that her emotions weren't impacting on him nearly as much he shifted more onto the bed. Once he had a better seat he pulled her into his arms and stroked her hair as he started to speak. \"Oh Baby Girl I can feel just how scared you are and I understand for the most part. Now I need you to talk to me. Right now all I am getting is emotions and nothing else. Talk to me and let me see if I can help you with your fears.\" \n\nAs he was talking to Dani Satasha sat down next to Mizaki though she simply rested a hand on his shoulder. \"Hello Mizaki and it is nice to meet you. I won't bother with any of that 'wish it was under better circumstances' crap.\" She gave him a wry smile when she said that. \"I have come to the conclusion with Yilly and his family there is no such thing.\" Part of that was to tease Billy and Dani but also being very serious. \n\nMizaki had to snort at her for a moment before he dropped his ears again. \"I was hoping to meet all of you at some point as well but...\" He had to shudder as a particularly strong surge of emotions came from Dani. His hands were resting in his lap, totally limp, and he was looking down at them. \"All I had wanted to do was show Dani a nice evening out on town. Anything beyond that would have been enjoyable but...\" He looked at Dani and by the set of his ears and the nictitating membrane around his eyes it was obvious he was upset. \n\nDani was still panicking so her father took a slightly different tact. \"Dani listen to me please kiddo, start taking some slow deep breaths. In through your nose and out through your mouth. This is what Kingie had some of the ladies we rescued do. It is also what I had to learn to do to calm my mind down.\" He pressed her cheeks between his hands and urged her to look him in the eyes. \"Listen to my voice and start with the slow deep breaths. Try not to think of anything other than how the breaths feel, in slowly, hold, and then out slowly.\" \n\nAs he was talking to her he could feel concern from both Satasha as well as Mizaki but he had to ignore them. Right now he was focusing on his youngest girl and try to get her to calm down. As he was talking to her he simply settled for letting her calm herself down. Something Dr. Desjean had said once came back. She was talking to the Sholans who were watching the women. She had told them that some of the worst things you could do when a person was having a panic attack. Some of the big ones was don't tell them to 'calm down', or say 'it's all in your mind' or the worst was 'others have it worse'. \n\nWhen you were having a panic attack all you want to do was to calm down. To have someone tell you to calm down was likely to make it worse. Obviously it was all in your mind since that was where the brain was. In her case it went somewhat beyond that to it was literally in her mind by the addition of a whole new set of memories. As far as the last at the moment you were having a panic attack that was the worst spot for you. It didn't matter if others did have worse things happen, what mattered to you at the moment was now. Several suggestions she had was to try and either distract the person by suggestion an activity that might calm them down. Another suggestion was to talk about it and by talking about it sometimes it would help. \n\nIn this case he was guessing it would be better to talk about it to an extent. Not actual details but the feelings caused by having someone else's memories stuffed into your brain. There was also knowing that all of your memories, feelings, and thoughts were known intimately by the other. From what he understood the link he and Tasha shared was a much closer link than any other Leska link on record. If they took down the filters they would know where the other was, what they were doing, feeling, and so on. \n\nDani resisted moving back from her father but finally did and looked up at him. She could see his concern and yes even feel it which also bothered her. Yes Sally had always been able to feel emotions but Dani hadn't and that was much of the reason she was freaking out. As she looked into her father's eyes and listened to his voice it did give her something to focus on. It also helped that for some reason his emotions seemed to mute down as well. She hadn't been realized he had been given a light dose of a suppressant. \n\nAs he was talking she was starting to take the breaths he was talking about and could slowly feel her body relax. Eventually much of her shaking had passed and now she was simply feeling exhausted. Her shoulders slumped and she leaned against her father and took a ragged breath. \"Oh god daddy I know everything about him.\" She had to shudder slightly when she said that. \"I had wanted to go out and give you and Z'Marl time together. Do a bit of dancing, and maybe get in some cuddling. This I didn't bargain for.\" \n\nTasha was listening to Dani and Billy as they were talking and she could feel Mizaki starting to feel bad. She rested her hand under his chin and lifted it so he was looking at her. *Don't take what she is saying personally Mizaki. Yilly had much the same issues though not as bad since we had already bonded. They don't have any formal belief system in our talents. Let her talk and once calmed down we will go from there.* \n\nHe still looked somewhat upset but he didn't say anything in response. The best he could do was give a jerky nod in response to her sending. He was feeling pretty bad as well but not for the same reason. Yes it was strange having a set of non-Sholan memories and knowing what it was like growing up in a totally different culture. That and frankly her brain almost scared him. He was smart but he hadn't realized just how smart she was. Mizaki was also stressed because he had been simply looking for some company and to get to know her. He hadn't been looking for a permanent relationship with anyone yet. \n\nSatasha wrapped her arms around him and pulled him close and held him. Her eyes met Billy's with concern. *They are going to need a great deal of support and I honestly don't know what is going to be needed for them. Neither was looking for anything other than some company and maybe a good time. Now he is looking at a long term relationship and she will probably be pregnant within the next link day or two. They are going to need a great deal of support.* \n\n~~~ \n\nIke turned and looked at Ceolura. \"Would you mind if we borrowed your bed room so we can talk? I will be available if needed but we need to talk about this now.\" He stood and held his hand out to his wife. Once he had helped her stand up he gently wrapped his arms around her and held her close. When he looked at Ceolura he looked so pleased that Amanda would even consider this. \n\n\"Of course Ike you can use my room and take your time. Since you have been assigned as my contact you being with me would be completely expected. Take as much time as I can give you. I have to contact your governments and the Commander's assistant to see what is needed.\" She turned to Desjean. \"I would like you to stay to deal with the medical reports please. If needed we can send you to the ship or even take the Barque up as well.\" \n\nIke kept his arm around his wife as he gave Ceolura a thankful nod. \"We won't be to long but thanks both of you.\" \n\nAmanda gave both a warm smile as well but didn't say anything. She knew that Ceo would be able to sense what she was feeling and there wasn't much else she could say. They slowly walked into the bed room and closed the door behind them. \n\nCeolura contacted her assistant to come into her suite and they settled down to work. \n\n~~~ Aboard the Rijishi \n\nThe ship was shaping the shortest route to the habitat that had been hit. By now virtually all of their small craft were launched and mopping up the last of the missiles which had been launched. The heavy shuttles were split into several groups, the first and largest was aiming for the habitat. The second was slowly approaching the enemy vessel as well as a number of fighters. The third was performing SAR missions to try and recover as many of the escape pods as possible. They were also tractoring damaged ships back to the mother ship. \n\nBy now the entire system looked like some idiot had kicked a hive of Bajasa. His holodeck had gone from what they had come to consider peace time operations to, well, a mess. All civilian traffic had been recalled to the nearest base so space was cleared. Virtually every system defense boat, light, medium, and heavy combat ships were shaping course to cover vital parts of the system. Fighter carriers had launched virtually their entire compliment of parasite craft. \n\nA large number of ships had requested permission to provide assistance which had been accepted. All ships were being controlled by the Swiss since this was an international issue. As soon as the enemy combatant had been neutralized the Commander had assigned his assistant to liaise with the Swiss for recovery missions. His focus was now on the enemy combatant and how best to intercept and board. Based on how they had fought he had a feeling they would do their best to scuttle the ship if possible. At the same time they would try to take as many as possible of his people with. \n\nSince the warrior leader was on the comms with him they discussed it and the mother ship was going to remain back. Once the initial flights of fighters and heavy troop shuttles had headed out the Commander started recalling his other vessels for reloading, rotation of crew if possible, and sent them back out. A number remained in a holding pattern if they were fighters since they simply weren't of any use in recovery missions. Most of the heavy shuttles were already tasked. \n\nBy the time the recovery operations were underway the enemy vessel had been recovered. That had cost the warriors a number of fighters since the others had refused to surrender. By the time they had finished securing the ship it was almost a useless wreck. He had lost a good thirty crew in the fighting with a number more injured to various degrees. \n\nThe search and rescue missions aboard the habitat were slowly changing to body recovery missions. Based on the reports he was being forwarded from Earth the entire system was in utter and complete shock. Never had there been such a loss of life such as they had in this one single day and the people were panicking. From the polity Ambassador Madlax was from there were comparisons between some battle in a place called Pearl Harbor. The saying 'The day that will live in infamy' or something similar. Across the entire planet similar comparisons were being made. \n\nOnce the Commander finally disconnected from the Holodeck he was feeling utterly beat but this had to be reported. He stepped out of the pit and looked around at his bridge crew. Their expressions ranged from shock, horror, to fury and anger. \"Put me on ship wide broadcast and to all the ships still out.\" Once the comm. officer indicated he was connected he cleared his throat. \"To the ships compliment, warriors, specialists, and flight crews. Today was a day lacking in honor in the way the enemy attacked. However having said that I can only say that I am beyond proud of how each and every man and woman responded. I can't even begin to tell you what it means to me as the Commander. I couldn't have asked for a better crew to have under me in this time of villainous dishonorable attack.\" \n\nHe had to clear his throat again before continuing. \"All I can ask of you right now is to keep doing your job, listen to your senior officers and crew. Show the Terrans that though we haven't finalized the treaties we take our responsibilities seriously. Do your jobs and as soon as we have time I am going to have a meal and rest day called. Again one last time thanks all of you for making our people proud. When you have time take a moment to light incense and send prayers to the gods you pray to.\" He gave the comm. officer a nod to kill the link. \n\nHe looked at his first officer. \"You have the bridge and I will be in my bridge cabin if you need me.\" He turned and slowly walked to the door to his cabin and walked in. Once inside he collapsed in the chair behind his desk. One of the medical staff was there. \"Commander I know you have to get the reports for the high command done. I have a mild stimulant that should keep you going till that is done. After that I have to recommend you get at least six hours of sleep to recover from the Holodeck.\" When he nodded understanding she gave him the injection and silently left the room. A meal was already on his desk for him. \n\nThe Commander quickly but neatly ate the food. It was a good meal and designed to help him recover from the time in the Holodeck. Once he had finished eating he took several minutes to change uniforms and give his fur a good brushing. A shower would have been nice but that would have to wait. He needed to get the report out before anything else. Much of it would be done by his staff but they would need his feelings and opinions on what happened as well. Once he was looking as best possible he went back over to his desk and settled down. \n\nAfter taking several minutes to review the reports that had been submitted he activated his comm. and set it to record. \"Commanders log from the Rijishi dated... As of 0823 local time an intruder into the human system was noted and...\" He continued the report as concisely as possible without leaving anything out. He finished with, \"this is a preliminary report and a formal report will be sent within the next Sholan day. One thing I feel needs to be sent to all ships is the enemy is not an honorable enemy. The moment they realized they weren't going to make it out of the system they chose to attack any target. They appeared to make a point of aiming for targets with the intent to cause as much damage as possible. This especially is true in reference to civilian targets. One other item is when their ship was boarded they fought with an almost pathological rage. Signing off.\" He contacted the comm. officer to have it sent. \n\nOnce he was done with the report he stripped his uniform off and walked over to his bed and curled up. He was quickly asleep though how long he would be would be anyone's guess. \n\n~~~ \n\nIke and Amanda were in the room for only a short time before they came out. \"Amanda is willing to be seen but only after this crisis is over. Till then she will not add any additional burden to the medical facilities aboard the Rijishi.\" Once he had said that he settled down at a small desk made available for his use and started checking on the information coming in. When reports of the damage to the habitat came in as well as the estimate of civilian lives lost he had to gasp. \"Oh my god, who would do such a thing?\" The next words out of his mouth were far less kind. \"Gamo Ton Christo Sou you Poutanas Yie!!\" \n\nAmanda so rarely heard him swear in his native tongue she was shocked. Beyond that she had a general idea of what he had said and it was highly insulting. \n\nCeo looked up at him and raised an eye ridge. \"Do I want to know what you just said Ike?\" \n\nBefore she could ask any more Amanda interrupted. \"No you don't want to know and if he even considers it he will be living in the enlisted quarters for a while.\" She had called up the news feed on her VR glasses and had to close her eyes for a moment. \"I understand Ike but please control your tongue while we are around others.\" God that was horrible. \"I am going to go and talk to the ladies. They will find out and I might as well tell them what happened, well some of it.\" \n\nCeo winced at Amanda's tone and threat. \"Ah, I am sure it is along the lines of a few things I was thinking. I am sure the warriors are saying the same or worse. Go Amanda and take your time. Doctor you go as well just in case.\" This might change things though she wasn't sure since the request by the females was beyond miniscule compared to this. \n\nOnce the two had left the room she turned to Ike. \"I am going to authorize the ladies to go to Shola. I am not going to wait for a bunch of medical reports saying it would be a good idea. If you don't mind would you send a brief message to Ambassador Madlax informing him of this? I will contact the telepath's guild and the accommodation guild so they are ready as well.\" \n\nIke looked up at her and other than a burning rage in his eyes his face was relatively composed. \"I will take care of it immediately and also send a message to the Swiss concerning this as well.\" He turned back to the terminal he was using and went back to work. It was going to be a long day for everyone involved. \n\nEventually he was done with the various messages and he had made sure to send copies to the Sec Def. He figured he wouldn't get a reply for some time since at the moment everyone was focused on the attack. Once he was done he turned to Ceo. \"How do you plan on sending them back? One of the transports from Shola?\" \n\nCeolura leaned back in her chair and stretched before answering. Her muscles were tense and with the anger she was feeling she had turned her personal damper up full. \"To be honest I am not sure. At the moment the shuttles are going to be occupied with getting equipment here to help and possibly taking the worst injured back to Shola if asked. I know that Yilly has asked to have the pirate ship sent to Shola as a test bed. It has been completely stripped of anything from when the pirates were aboard, repainted and sanitized. I sent a message to Amanda to ask the ladies if they would mind going back on her. The ship looks completely different and has even had some upgrades such as the beds, food, and entertainment console.\" \n\nIke winced at that since it almost sounded like a bad idea and to not even ask. \"I am sure you know but that sounds rather wrong. I understand but who will be going with to help them? I know that you are seriously occupied with what has happened here as well as your own search.\" He rubbed his face and groaned. \"Well if nothing else Amanda will be able to tell you if it will work. Once I have that information I will send a message to Billy about them.\" \n\n~~~ \n\nAmanda slowly worked her way to the rooms the four women were occupying. When she arrived she gave the warrior at the door a pleasant smile and nod. \"I need to talk to the ladies about a request they made of the Ambassador.\" \n\nHe twitched his ears and a slow smile crossed his face. \"She has given them permission to go to Shola? If so that is a good idea. If they do go there are several of the warriors from the Sandi who will be going back as well.\" He opened the door after saying that and showed her in. \"Ladies Mrs. Demopolus is here about your request.\" He walked in and settled down on one of the beds. Immediately Savanna came over and settled down in front of him and handed him a brush. \n\n\"Would you mind brushing my hair Shojim?\" It always helped her relax and she was going to need it. Either way, if the Ambassador said yes or no it was going to be a huge change for them. She really didn't want to stay on Earth since even with all the support she kept cringing when most human males came close. \n\nHe leaned forward and wrapped his arms around her and rested his cheek on the top of her head. \"Do you even need to ask? You know that those from the Sandi have long since decided that you are ours to protect and keep safe.\" He sat up and started working on her hair. It had been relatively short and ragged when they had saved her. Now it was longer and luxurious. It was a deep brown with highlights of auburn. ",
        "Bitty had become the spokesperson for the group since she knew Billy. \"Good afternoon Amanda. We are pleased to see you and thank you for coming. So what did the Ambassador decide? Please do all of us a favor and simply tell us. All of us want to know and beating around the bush isn't going to do anything but stress us.\" She was sitting between the other two females as she was talking. \n\nAmanda had carefully settled down in a chair and sighed at the pain from her hip. \"Sorry if I seem tired and grumpy. As you have seen my hip bothers me and stress only makes it worse. I came here for two reasons. First to tell you about the alarm and why it was sounded, the second is about Ceo's decision.\" When Angel went and retrieved a drink for her she gave her a wan smile. \"Thank you Angel.\" \n\nAfter taking a sip she got to the point. \"First Ceo has approved your request and you will be going to Shola. Billy, I mean Ambassador Madlax will be responsible for you and ensure you have what you need. He has been keeping up to date on your status. He has also been reporting that Crystal is doing very well on Shola.\" She gave them a very pleased smile. \"He also informed Ike that Crystal and Kingie are somewhat involved and he has been good for her.\" \n\nBoth statements were received with pleasure based on the women's expressions. Bitty had to close her eyes for a moment. \"Thank god and when you see Ambassador Ceolura please thank her for us. You don't have any idea of how much that means to us.\" She had to close her eyes and take several deep breaths. \"We are all very pleased for Crystal and Kingie. It gives us hope that...\" She had to look away and couldn't finish the statement. The other two wrapped their arms around her and gave her a good hug. \n\nAmanda lightly bit her lower lips since the next piece of information was going to be hard. \"For reasons I will explain momentarily Ceo wanted to know if all of you think you would be able to go to Shola on the former Pirate ship. It has been completely refurbished and I was informed that the warriors who rescued you will be going back with. There are going to be some additional staff going as well for the Embassy. Do you think you could handle that? I want an honest answer.\" \n\nThat caused a silence amongst the women and they were trading looks as they considered it. This time it was Clarice who responded. \"Tell us why before we can answer that. Even with having our warriors come with that is a very terrifying idea.\" Personally she would have to actually look at the ship inside. That and have a lock on the door that only she could use. \n\nAmanda gave her a level look. \"I don't know how much you know as to why the Sholan's are here for but they are searching for an enemy. They don't know much about them at the moment other than they attacked one of their ships and not only destroyed it but killed the entire crew. Well the alert was for an incursion into Terran space by the enemy. Almost the moment they realized they weren't going to escape they decided to attack anything and everything.\" Her eyes showed horror even as her face hardened. \n\n\"They fired missiles at anything that could be a target, military or civilian, and took out a habitat. The current estimate of dead is in the hundreds of thousands. The Sholan's transport ships are all heading this direction with humanitarian supplies and will probably be heading back with casualties that Earth can't help.\" She had to pause and take a ragged breath. \"They did that deliberately and as of now I am sure Earth is on a war footing or will be very shortly. They want the pirate ship sent to Shola so Billy can see how he can help improve the engines.\" She had to stop talking for a moment. Her hands were clutched around the handle of her cane and her knuckles were white due to her grip. \n\nThat received another shocked silence. All the women were looking at her in horror at what she had to say. As they were trying to figure out how to respond Shojim contacted the other warriors and asked them to report to the rooms for support. \"Thank you for the information Ma'am even if it is unwelcome at the moment. I have asked some of the other warriors to come in for support.\" As he was talking he leaned forward and wrapped his arms around Savanna again. \n\nBitty tried to speak and had to clear her throat. \"Oh god, that is horrible and I can understand now why you are asking what you are. We will need to talk about it and think about it before we can say anything. How soon might we be expected to give an answer?\" Her eyes were starting to glimmer with tears. \"Does Billy know about this?\" \n\nAmanda had to clear her throat as well. \"For now I don't think there is going to be any rush since the solar system is dealing with what happened. Think about it and talk to your warriors since they will be going back with you. They have, from what I understand, been training on how to operate the ship. There will be some humans aboard as well to supplement the warriors and yes some will be males. They have all been screened for a reaction to your issues. Across the board they are all horrified and angry about what happened. They will not look down on you and have been given instructions on how best to work with you.\" \n\nAmanda slowly nodded at the question about Billy. \"Ike, my husband, is going to be sending him a message about the four of you and your request. He will let him know that you are going to be coming and what you might need. As far as the attack he will be receiving the message about the same time as the message about your being sent out.\" She wanted to stand but her hip was really starting to hurt. \"Shojim could you give me a hand up? I need to see about some pain meds for my hip.\" \n\nSavanna moved to the side as Shojim stood and moved over to Amanda. \"Most definitely ma'am and do you need a hand to medical? If needed I can contact them and have them send a hover chair for you.\" She was another human female that they had been watching and been very impressed with. They didn't know what had happened but she stood up to her problem without a complaint. \n\nShe had to grit her teeth as she was helped up. \"If you wouldn't mind giving me a hand I should be able to make it. Thank you for the offer though.\" Once she was up she moved her cane to her other hand and wrapped her arm around his and held on. \"If you ladies need anything I am going to see about staying aboard for the time being. Contact me with any request you might have at any time.\" \n\nRight about then the door opened and several of the warriors came in and after greeting Amanda moved to the females. It was rather obvious that they had come to care for them based on their reactions to the stress in the room. Amanda had to smile slightly as they moved out of the room. \"It is good that you have in a way adopted them. Even though you aren't human males it is obvious that you care for them and what happened to them doesn't really matter.\" \n\nShojim chose not to do anything other and twitch his ears at her. The four women left had almost become family and central to the unit. For now Amanda didn't need to know that. \"Once at medical will you want me to remain with you till they are done?\" \n\nAmanda managed not to smile at his ignoring her comment. \"No, I will contact Ike when they are done with me but thank you for the offer. Go back and sit with Savanna and the others.\" The rest of the short walk to medical was silent and once inside he gave her a nod and quietly left the room. \n\n~~~ \n\nOnce Billy had decrypted the messages which had been bundled into a single packet he at first was interested. Shortly after starting to read the messages he started getting angry. By the time he was done he was almost incandescent with rage and he knew that Satasha could feel it. \"Those fuckers don't know who they decided to fuck with.\" He had called Sandi already and when she came in he tried to control his reaction. \"Get me Father Shion, the Engineering Board, and Shola High command. They already know it is urgent but do what you need to get a rep from each here as soon as possible.\" \n\nSandi had to blink and asked what had him so worked up. When he explained it she became almost as enraged as he was. What made it worse for her was she was a red head and had a vile temper when irritated. \"They will be here yesterday if I have any say in it. I will send you updates as I get them.\" She turned and stalked out of the room. \n\n*Satasha I am going to need you here and since Z'Marl is doing the waitress thing contact her and have her report. As of now the Embassy is priority for anything before our personal lives goes. I will talk to Vangie and Kingie and inform them we are going to have a meeting tonight at Vangie's and everyone has to be there. I will talk to Dani personally about this and hopefully she and Mizaki will be able to be there.* Since the day after they had linked both had been very carefully monitored and Dani had been spending a good amount of time with Z'Marl for support. \n\nSatasha didn't even hesitate. *Yes Ambassador, I will take care of it now. I will let you know what is happening and when. Unless it is a problem I am going to request my family as well as Z'Marl's to be there. It is going to impact on them as well.* She still hadn't talked to her father since that initial meeting but it was time to deal with it. \n\n*Do that and contact me telepathically. I am likely to be more than busy for the rest of today and might not be able to get to the comm..* Billy let her go and started working on some breathing exercises to try and control his emotions. If he couldn't they would impact on everyone nearby. While he was doing that Sandi informed him that the Father was there. \"Send him in please.\" He might be pissed beyond all recognition but he was going to be as civil as possible. \n\nWhen the Father walked in he was exuding calmness. \"Ambassador would you allow me to show you some calming exercises? They will help with what you are feeling right now and help calm and relax you.\" He settled down in a chair and waited. \n\nBilly was trying to breathe slowly but his nostrils were white with anger. \"Please Father Shion since right now I am so angry that I almost can't operate. If you can help me to calm down I would greatly appreciate it and then we can talk.\" They did need to about a number of issues. \n\n\"We have used the Litany's of Vartra for generations and especially for potentially rogue talents. I am not saying you are anywhere near that in any way. I am simply saying if we can calm them down we should be able to help you and yours as well. That is one of the reasons I wanted to talk to you. I have heard about the issues your youngest girl has been having and I wanted to offer help for her. Now what you need to do is...\" He started walking Billy through the calming litany for a start. \"Mind you though we are the Brotherhood of Vartra it doesn't mean you are worshiping him. They are simply used as a way to calm down in this case. With some of the others they are used to help you become receptive to contacting the gods.\" \n\n~~~ \n\nBilly had moved over to the other chair in his office and closed his eyes and did as Shion instructed. Suddenly he felt a shift and when he opened his eyes he found he was in a forest somewhere. There was a path leading towards a heavy wooden door that was set into a high stone wall. He had to frown in confusion since he had no idea how he had gotten here. With a slight growl of annoyance he stalked to the gate and examined it. In the center of the gate was emblazoned a symbol that resembled the triad pendant the three of them had been given. \"Now what? I am so not pleased damn it.\" \n\nHe glowered at the gate and after an indeterminate time he spoke. \"If you want me to come in open the damn gate or I will follow the path in the opposite direction. I am not in the mood for any crap at the moment and have things I need to deal with back on Shola.\" His voice was hard, deep, and angry as he spoke. There was no compromise in it at the moment. \n\nAs soon as he had finished speaking the gate opened and inside he could see a forest of gigantic proportions. There was a path leading inside and somewhere in the distance he could hear what sounded like a hammer hitting something metal. \"God damn it I don't want to do this.\" He stepped into the gateway. \n\n***** \n\nA/N: With the Anxiety/Panic attacks I know what I am talking about. When my son went to Afghanistan I ended up with them. They were so bad I could barely leave the house and there were several times my sister or brother had to come and hold me. If you do come across someone who is or has panic attacks don't tell them anything that I mentioned as not to do. Yes it is in our minds (literally) but saying that doesn't help. Support and concern does though. \n\nRead, vote, comment and most importantly enjoy."
    ],
    "authorname": "maxd01",
    "tags": [
        "alien felines",
        "space battles",
        "pregnancy",
        "mental links",
        "politics",
        "relationships",
        "romance"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/sholan-alliance-au-bk-03-ch-06"
}