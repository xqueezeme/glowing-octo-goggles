{
    "title": "Tucker's Studio Ch. 09",
    "pages": [
        "I have a whole series of these stories written. They work pretty well as stand alone stories, all revolving around Tucker Sims and his porn studio, but some things will make more sense if you read them in the order they were posted. I hope you enjoy them. As usual, the people and places are fictional. All characters are over eighteen.\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\nGinger and the Paperboy\n\n\n\n\"Nancy? Can you come over? There's something I need to show you.\"\n\nLinda reached for the keyboard on her laptop as she put her phone down. She clicked the volume key a few times and the sound of sex joined the crisp, high definition video image on the screen...\n\n\"Bad girls need to be fucked!\" the girl sighed. \"Fuck me! Fuck me!\"\n\nAn older man was fucking her hard, his body slap slap slapping against her young ass from behind.\n\n\"Oh yeah! Fuck me! Fuck me!\" she cried. \"Oh God yes!\"\n\n\u2014\n\nTen minutes later Nancy walked across the quiet suburban street, coffee mug in hand, to her best friend's house. She went in through Linda's garage, into the kitchen, like she always did. \n\n\"Hi Lin. What's up?\" she said when she saw Linda sitting at the table. She could hear the sex sounds coming from the computer. It took a moment for it to register, because it was so surprising. \n\n\"What are you doing?\" she asked, looking shocked.\n\n\"I know. This isn't like me, but...well...look at this. Does he look familiar?\"\n\nLinda turned the laptop around so Nancy could see the wild fucking.\n\n\"Lin! What the...!\" Nancy said as she slowly sat down in a chair. \"You watch this stuff?\"\n\n\"Sometimes,\" Linda said sheepishly. \"That's not important. Look at him. His face. Think.\"\n\nNancy watched. Linda watched her eyes dance around the screen, taking in all the wild action.\n\n\"His face Nancy. His face.\"\n\nNancy held her gaze on the man's perspiring face, trying to see what Linda had seen. She shook her head.\n\n\"I don't know. What am I supposed to see? Who is he?\"\n\n\"Think back. From the neighborhood. Who used to deliver our newspaper?\"\n\n\"Our newspaper?\" Nancy said. \"Have you been drinking?\"\n\n\"Forty years ago. When we first moved here.\"\n\n\"David Jenson!\" Nancy said quietly, like she could hardly believe it. \"Oh my God! It can't be...can it?\"\n\nDavid was a good looking boy of about fifteen when he had his paper route. Nancy and Linda were young wives, new to the neighborhood at the time. The two women, both in their twenties, quickly became friends, and often giggled together about the handsome young boy who came into their kitchens when he did his weekly fee collecting. When he turned sixteen he got a better job, but they saw him around quite a bit as his body filled out and he became a man, and they knew his mother.\n\n\"I think it's him,\" Linda said. \"Even the voice fits. Remember what his father sounded like?\"\n\n\"Oh my God!\" Nancy said as she continued to watch the wild action, slowly realizing Linda was right. \"David Jenson! How did you find...what are you, a porn watcher now?\"\n\n\"I guess so,\" Linda said. \"I never thought I'd be admitting that to anybody. You don't?\"\n\n\"No, I don't,\" Nancy said, still watching the action. \"But God almighty, maybe I should! Is there more of him? What is this place?\"\n\n\"It's a website called Tucker's Studio. Lot's of amateur stuff.\"\n\n\"What do you mean? Like homemade? This doesn't look homemade.\"\n\n\"No, like the girls are amateurs. That's what it's supposed to be anyway. I don't know if they really are.\"\n\n\"So he's...a pro? You think? Oh my God. Do you think his mother knows? What's her name...Brenda?\"\n\n\"Yeah, Brenda. I haven't seen her in years, but she still lives over on Maple I think. She's probably in her eighties now, right?\"\n\n\"God, he so...\" Nancy said as she watched him bring the girl to a shattering orgasm. \"Jesus!\"\n\nNancy and Linda fell silent as they watched 'Daddy McQueen' mold the girl into another position and plunge his big cock in for more.\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\nLinda spent the whole afternoon in front of her computer, doing searches, watching porn. The searches were for more Daddy McQueen content, but they came up empty. The two videos at the Tucker's Studio website seemed to be all there was of him. They were both recent, posted within the last month. There was nothing on the website about where Tucker's Studio was located, but there was a 'Contact Us' link. Linda clicked it. A message box appeared to type a question or comment into. She sat and looked at it, blank, with a flashing cursor egging her on.\n\nI'd like to contact Daddy McQueen, she typed, and then she backed up the cursor, deleting what she'd written. She started over. I guess this is fan mail. I was watching Daddy McQueen. Where is he from? she typed. She sat and stared at it for a minute. She had to make up a name for herself. She'd come across an old rerun of Gilligan's Island on TV the other day and was amazed at the sexiness of Ginger. Way back in the day there was the \"Ginger or Mary Ann\" thing. Linda was a Mary Ann, but always wished she was a Ginger. So that was it, she signed her name Ginger, typed in her email address and hit send, quickly, before she overthought it. Her heart pounded as she looked at the screen...\n\nThank you for contacting T.S. Productions. We'll get back to you soon.\n\nT.S. Productions. I could google that, she thought, and she did. There were quite a few hits relating to it, most about some awards won at an adult video awards show. She read one of the articles and was shocked when she learned T.S. Productions was in her city. There was a picture of Tucker Sims, dressed in a nice suit accepting an award. He didn't look sleazy, she thought. A nice looking young man, with a genuine smile. There was another picture of him, and one of Donna Deeper and Dickie Biggers, accepting another award. They look different with clothes on, Linda thought, all dressed for a fancy night out.\n\nSo that was it. As she scanned the google hits for more information she realized that yes, it had to be David Jenson in those videos. He must still be living around the city somewhere, and he was making at least a little porn, right there in her hometown! The revelation drove her heart rate even higher, and she suddenly realized her fingers were inside her stretchy yoga pants, playing with her hairy pussy!\n\n\"God! What is going on?\" she said quietly to herself. \"Get a grip girl!\"\n\n\u2014\n\nThe next morning there was an email in her in-box from T.S. Productions. She didn't click on it. She got up and went to refill her coffee, and then stood next to her chair, nervously wondering what it might say.\n\n\"This is crazy. Open it you old fool!\" she said to herself. She sat down and clicked on it.\n\nThanks for contacting us Ginger, and for your interest in Daddy McQueen. I'm afraid we can't give out personal information about our performers. I'd be happy to discuss you doing a scene with him, if that's something you'd like to consider.\n\nThanks for watching,\n\nTucker Sims \n\nT.S.Productions\n\n\"Good Lord!\" Linda said, loud enough to wake her sleeping cat.\n\nHer coffee had cooled off by the time she stopped staring at the email. She took a deep breath, got up, and started in on her daily chores.\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\nThe next day was Friday. Linda had a standing invitation to Friday dinner at Nancy's house, ever since her husband was killed way back in the Gulf War. She didn't go every week, but she enjoyed Nancy and her husband Bill's conversation, and she felt like she needed to clear her head from all the 'paper boy porn star' thoughts, so she walked over at six o'clock, bottle of wine in hand.\n\n\"Ooo! Big bottle this time!\" Nancy said, smiling as she greeted Linda.\n\n\"It was on sale. You know how I like the cheap stuff,\" Linda laughed.\n\nThe dinner was pleasant. Bill had work to do for a presentation at the office the next morning, so after dessert he went to his study and the girls hit the wine harder than usual. They got giggly talking about paper boys and lawn boys, wondering what they'd do with their lives when they grew up.\n\n\"I still can't believe that's David,\" Nancy said.\n\n\"It is. I'm sure of it,\" Linda said. \"I did a little more sleuthing. It's him.\"\n\n\"It's so crazy, isn't it?\" Nancy said. \"But I guess people do crazy stuff these days. Do you think he's married? I doubt it, if he's doing that.\"\n\n\"Yeah, I don't know. He's awfully good looking, but then he always was,\" Linda said. \"I wonder...do you think he was built like that...you know...when he was doing the paper route?\"\n\n\"You mean when he was way too young for us to be thinking about?\" Nancy laughed.\n\n\"Yeah. I remember...thinking about him. Inappropriately.\"\n\n\"He didn't even have his driving license, so he was probably fifteen! But yeah, I thought about him too. We were so bad! But he was mature looking for his age, and we were young...ish.\"\n\n\"Yeah. And now, he looks so good compared to most of the fat bellies out there.\"\n\n\"There's a fat guy who does porn. I saw a story about him on the TV.\"\n\nThe girls giggled. It was the first time they'd ever talked about porn. Nancy didn't watch it, but Linda did, off and on, ever since she got her laptop a few years ago. She'd always felt really guilty about it, but laughing with Nancy about it helped her to feel more comfortable about her 'bad habit'.\n\nThe conversation shifted to what their friends were up too, and another neighbor's divorce. After they'd both had one too many glasses of wine Linda walked home, glad she didn't have to drive.\n\nIt didn't take long for her to open up her laptop and re-watch the two Daddy McQueen videos. She was breathing hard and was horny as hell when they finished.\n\n\"Good God, what are you up too David Jenson?\" she said, petting the purring cat curled up in her lap.\n\nShe clicked on her email and stared at the one from Tucker. There's no harm in being curious, she thought, and it's not like he knows who 'Ginger' is. She clicked reply and started typing...\n\nDear Mr. Sims,\n\nThank you for getting back to me so quickly. I apologize for asking for personal information. That was stupid of me. It's just that Mr. McQueen caught my interest, and there's just the two videos of him. Does he work regularly for you? You mentioned doing a scene with him. As intriguing as that sounds, I'm sure I couldn't. I'm 63, and I know you have women my age on your site, but as far as me, well, it just seems...well, you know. I'm sure you've heard all the excuses before. Thank you again for replying, and I'm sorry if I'm taking up your time. Give my best to Mr. McQueen. Please tell him he has a fan out in the suburbs.\n\nGinger\n\nLinda read it over ten or more times. Finally, when her mind was completely mixed up with wine and excitement and confusion, she hit the send button. Fifteen minutes later, when she was watching another video on Tucker's website \u2014 a fifty-something woman with Mitch's huge cock in her mouth \u2014 her email in-box chimed. A jolt of adrenaline hit her when she saw it was from Tucker.\n\nHi Ginger,\n\nPlease call me Tucker, Mr. Sims is my father, and he's in a much more boring business. I will absolutely tell Mr. McQueen (we just call him Daddy around here) he has a fan in the 'burbs. I'm always happy to know there's local women watching our content.\n\nAs far as the idea of you joining us to have some amateur fun, yes, I have heard lots of excuses from women and men who couldn't quite get themselves to do it. But I must tell you, in all honesty, the ones who do it have the time of their lives. I'm guessing you can tell that from watching the videos. And your age shouldn't worry you. It certainly wouldn't worry us. Please think about stopping in for a tour. We are in the Warehouse District downtown, and I've been told many times, \"Gee, this place isn't sleazy at all.\" I'd love to show you around.\n\nTake care Ginger,\n\nTucker Sims\n\nLinda was astonished. Crazy, crazy, crazy!, she thought. There she was, listening to the sound of an older woman being fucked by a gorgeous younger man, while she was corresponding with the man who made it happen. Nutty! And he was asking her to be next! As long as there was wine in her she knew she was in grave danger of doing the wrong thing, so she shut her laptop and walked away from it. Twenty minutes later she was back. She re-read the email, four or five times, but fought her instinct to reply. Instead she searched for more amateur porn, finding very little around the web that intrigued her as much as Tucker's. Before she knew it it was three in the morning. She walked groggily to bed and slept soundly.\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\nMorning's were Linda's favorite time of day. Even with too much wine and a short night's sleep she was up early. Newly retired, she loved having her days free to work in the garden, and she was a member of the community garden club as well, helping to maintain a small park, and some flower beds at the entrances to her suburban neighborhood. One of those beds needed weeding, the one up on the main road that she hadn't worked on before, so she put her kneeling pad, some tools and a plastic bin in her car and drove over to it. \n\nIt was a warm, late summer day. Linda wore a t-shirt and stretch-cotton capri pants. They were pants she used to wear to yoga class, but they'd gotten old so she wore them for gardening. In her own semi-private yard she never thought about it too much, but on that day, in the golden morning sunlight, she was amazed by what was happening.\n\nShe was on her hands and knees, pulling weeds with her backside facing a busy four-lane road. A horn honked. And then another. At first she didn't put two and two together, but then a man yelled something out his window as he passed. She couldn't make out what he said, but she looked over her shoulder and knew the look on his face. \n\nMy ass! Oh my god! They're honking at me!\n\nShe blushed and quickly turned, hiding herself as best she could. Her nipples were hard, so she hid those too, even though she was sure no one could see them.\n\n\"What an idiot,\" she muttered to herself. \"I'm daydreaming about making porn and I'm embarrassed fully dressed next to a busy road.\"\n\nShe looked between her legs and realized just how tight and thin the old yoga pants had gotten. You could clearly see the old camel toe, even though Linda didn't know what it was called. Oh my God, she thought to herself, what does it look like from the back when I'm on my knees!\n\nShe thought it through. She could take a few minutes to go home and change, or she could show off. Other women do it, although they're usually younger. The men driving by obviously liked it or they wouldn't have been making spectacles of themselves like they were. It's a long way from making porn, but hey, it's something. And that adrenaline felt kind of good when she saw that guy looking. He was young too! Looking back over her shoulder at him was just what that girl was doing when David was fucking her from behind. More adrenaline coursed through her when that little thought rolled through her brain.\n\nShe stood up and pulled her t-shirt down tight. The thin bra wasn't doing much to hide those big nipples, now that she thought about it. She could never go in the grocery store knowingly looking that way, but maybe she had! It was her favorite bra lately because it was so comfortable. Oh my, time to re-think things!\n\nAnother horn honked, and she was just standing there. Okay, she thought, I'm too old for this to be happening to me. Why am I dressed like this? Was it subconscious, coming up here to the main road like this, because of the whole porn thing? Am I gardening or am I showing off? And what does a sixty-three-year-old woman have to show off anyway?\n\nLinda took a deep breath, got down on her hands and knees and pulled weeds. She couldn't see it, but an extraordinarily well defined camel toe and a beautiful looking ass was greeting all the passing cars. As she worked horns honked and men cat-called. Linda smiled.\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\nTwenty-four hours had gone by since Tuckers last email. It had been a fascinating day for Linda. A morning of showing off by the main road, followed by an afternoon of showing off in her front yard. She had felt so alive after all the ass waging and horn honking, she went home, had some lunch, took off the bra that was under the little t-shirt \u2014 it was making her sweat was the argument she used in her head \u2014 and gardened all afternoon in her front yard, waving at the neighborhood men that passed by. A quiet dinner with a glass of wine, and then another glass of wine, and then the computer was switched on for an hour of porn before bed. David Jenson porn. She couldn't stop herself from watching it.\n\nAfter her newly discovered excitement at showing off all day she was extra horny when she watched David do his thing, and she masturbated. Right there in her comfy living room chair, she rubbed her pussy 'till she came. She moaned and groaned so much it agitated the cat.\n\nDear Tucker,\n\nI've been thinking it over. I'm still far from ready to make a commitment, but I might like to visit your studio, just to satisfy my curiosity. Would that be possible?\n\nGinger\n\nShe sat quietly, reading the little email message over and over before she sent it, the laptop covering the big wet spot on the fresh yoga pants she was wearing. Pressing the send button felt like a big deal, and her mind flip-flopped in ten different directions before she did it. After the message flew off into the cloud she closed the lid and put her porn machine to sleep. Tomorrow was another day.\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n\"I want it shorter, and red. Bright, flashy red, but natural looking. Have you ever seen Gilligan's Island?\"\n\n\"Wow! What's gotten into you!\" the hairdresser said. \"You haven't changed your cut since I've known you, or the color.\"\n\n\"I know,\" Linda said. \"It's been the same since the seventies. I don't want to look like that anymore.\"\n\n\"Good for you,\" the woman said. She handed Linda a book of hairstyles. \"Here, look through this for a few minutes. See if anything jumps out at you.\"\n\nLinda was overwhelmed with all the choices. When her stylist came back she closed the book.\n\n\"Can't you just do what looks good? Shorter, and red?\"\n\n\"How about this,\" the woman said, opening the book to a picture of Jennifer Lawrence. \"It's a long bob, with some soft curl, like sexy bedhead. It's all the rage right now. I think your hair's perfect for it, and in red it'll be killer.\"\n\n\"It's not too young for me?\"\n\n\"Nope. With your body you can definitely pull it off.\"\n\n\"Do it,\" Linda said.\n\nTwo hours later she looked like a new woman, which was just what she wanted. If she turned out to be insane enough to go through with anything at Tucker's Studio, she didn't want to be instantly recognizable as Linda Smithson. She was going to be Ginger, and in Linda's mind Ginger was a perky redhead.\n\n\"Try pink lipstick, and gray eye makeup with those icy blues of yours,\" the stylist said when she was admiring her work in the mirror. \"You'll knock 'em dead.\"\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n\"Come on in Ginger,\" Tucker said through the intercom.\n\nThe big yellow door buzzed and she walked in. Her heart was pounding and she wasn't sure how her feet were working, but she seemed to me moving down the hall.\n\n\"Ginger, hi! I'm Tucker,\" he said, extending his hand as he walked out of his office. \"I'm so glad you decided to come have a look-see. I call this my fantasy factory.\"\n\n\"Well thanks for...inviting me,\" Linda said, her voice slightly shaky from her nerves. \"It seemed like too interesting of an opportunity to pass up. I never would have though you were here, just ten miles from home.\"\n\n\"Yeah, a lot of people say that. We try and keep things under the radar, so if you could do me the favor of not telling too many people I'd appreciate it.\"",
        "\"Oh, sure,\" Linda said.\n\n\"So we just finished up a shoot. The crew is still here so I can introduce you around. That's my cameraman heading for the editing room. \"Jamar,\" Tucker yelled down the hall. \"Come here a minute man, I want you to meet Ginger.\"\n\n\"Ginger!\" Jamar said, smiling as he put his big hand out toward her. \"My, you are a lovely one. I'm available for scenes too you know,\" he said in his rich Caribbean accent. \"Did the boss tell you?\"\n\n\"She'd kind of like to meet Daddy McQueen,\" Tucker said to Jamar. \n\n\"Oh, good! Nice guy, you'll like him,\" Jamar said. \"Good timing too. I just called him to come and look over some edits. He's on his way down.\"\n\nLinda was nearly paralyzed with wildly fluttering nerves. First Jamar, a stunningly beautiful tall black man, offered his...services. And now David Jenson himself was on his way? Good God! She wasn't ready for that! What if he recognized her? She hadn't even thought about what to do if something like that happened. Did she look different enough from her old self? Would she collapse under the nervous strain of it all?\n\n\"Let's head down this way Ginger. I'll show you the main part of the studio,\" Tucker said.\n\nJamar left them and they walked down the hall. A nice looking bedroom loomed ahead, softly lit, like an island in the surrounding darkness. Cameras on heavy tripods were poised and ready, their lenses pointed at the empty bed. Linda could almost hear the dirty talk and moans of all the action that had taken place there. Tucker switched on the overhead lights, breaking the mysterious spell.\n\n\"We keep a permanent bedroom set, and a living room, and then we've got a couple empty sets that we can do other things with. There's quite a bit of room to play if we want to get theatrical. I've got some friends at a local theater, they share costumes and props with us sometimes if we need them. Let's go down this way, I'll introduce you to Marsha. She's my stylist for the women, an expert hair cutter and makeup artist.\"\n\nThey walked down a dim hallway and went in a brightly lit room with a barber chair and sink, just like a salon. \n\n\"Oh my God, that haircut is awesome on you!\" Marsha exclaimed when she saw Linda. \"Who cut it?\"\n\n\"Marsha this is Ginger. I'm giving her the tour,\" Tucker said.\n\n\"Hi Ginger,\" Marsha said.\n\n\"Hi,\" Linda said, a bit overwhelmed, and still feeling funny about using a fake name. \"I, uh, I go to Barbarella's. Barb's been cutting it for ages. We tried something new this time.\"\n\n\"It's perfect,\" Marsha said, running her fingers through it. \"Gosh, it's so sexy on you! You've got the perfect look for it. Do you work out, or did you win the genetic lottery?\"\n\n\"A little. I should do more. I try and keep moving all the time. Sitting's supposed to be the worst, right?\"\n\n\"That's what they say. I sit too much, but my husband seems to like a little extra padding back there,\" Marsha said, turning and looking at her nice round ass. She turned back to Linda and looked her over. \"So I won't have to do a thing to you, if you're thinking of...is that what you're here for? You're thinking?\"\n\nA rush of adrenaline hit Linda like a hammer blow. She blushed bright red.\n\n\"Oh. I, uh...I'm...trying to tell myself I'm just curious,\" she said, suddenly wishing there was an air conditioner she could stand in front of.\n\n\"I hope I don't embarrass you Ginger, but she wrote a little fan mail,\" Tucker said to Marsha. \"She's a Daddy McQueen fan, and I talked her into seeing where the magic happens. Just a little tour.\"\n\n\"Oh...\" Marsha said knowingly. \"Yeah, he's the new man. All the girls have been buzzing about him.\"\n\nLinda's face blushed again. She felt even hotter than before.\n\n\"So we do cuts and makeup,\" Marsha said, changing the subject when she sensed Linda's embarrassment, \"and over here we've got wardrobe closets. Tons of lingerie in all sizes, party dresses, costumes, all kids of stuff. It's all dry cleaned and nice. Tucker's a stickler for keepin' everything nice.\"\n\n\"Let's go down the hall Ginger,\" Tucker said. \"I'll introduce you to Chip, and then we can look in on the editing so you can see how we piece things together.\"\n\n\"Bye Ginger. Nice to meet you,\" Marsha said.\n\n\"Bye,\" Linda said. She wanted to say more, to thank Marsha for the compliments, but her nerves still had her slightly tongue-tied.\n\nAfter meeting Chip, Tucker brought her to the editing room and offered her a chair next to Jamar. He had a glass of red wine next to him on the editing desk, with four monitors in front of him running various angles of a steamy threeway.\n\n\"This nice lady came in and had a fun day,\" Jamar said when he saw Linda's eyes glued to the screens. \"Can I offer you some wine? It's a nice Beaujolais.\"\n\n\"Good idea,\" Tucker said. \"I'm gonna grab a beer. What's your pleasure Ginger?\"\n\n\"Oh...yeah, I guess it's evening, isn't it? I've lost track of...everything. Wine sounds good. Maybe it'll calm my nerves.\"\n\n\"You nervous pretty Ginger?\" Jamar asked. \"No need. None of us bite, unless pretty ladies ask us too.\"\n\nHe smiled his big, beautiful smile. Ginger couldn't help but laugh. It was just a nervous chuckle, but it was a start. She took a deep breath and tried to relax.\n\n\"So how'd you learn about all this?\" she asked Jamar.\n\n\"I went to school for it. Thought I'd work in a TV studio, but this is way more fun. Tucker's a great boss. Treats everybody like family.\"\n\n\"Did I hear my name?\" Tucker asked when he walked in with a beer and a wine glass. He poured Linda a nice full glass.\n\n\"Yeah boss. Your ears burnin'?\" Jamar laughed.\n\n\"Jamar was telling me how much he likes working for you,\" Linda said as she took the glass from Tucker. \"I must say, your whole operation is very impressive.\"\n\n\"Well thank you Ginger. The way I see it, if people are gonna work for you you might as well treat them like friends. Same with the amateurs who grace us with their energy and their...humanity. They're putting a lot on the line, and I want them to feel like we care about them.\"\n\nAs he was talking Linda heard footsteps in the hall. A tall, gray-haired man walked in, with the most radiant blue eyes. Any doubts left in her mind as to who he really was were eradicated. It was David Jenson.\n\n\"Daddy!\" Tucker said, slapping a firm handshake with him. \"Well this is good timing. We've got a fan of your work here, having a little tour of the place. This is Ginger. Ginger, this is Daddy McQueen.\"\n\nLinda was glad she'd downed two big gulps of wine before he showed up. Her freshly blossoming buzz helped her through the terrifying first few minutes.\n\n\"Hi...Daddy. I'm...pleased to meet you.\"\n\nDave looked deep into her eyes. His own big blues were twinkling wildly. He wanted to say something different, but he stuck to the 'Daddy McQueen' thing, which made him a little uncomfortable.\n\n\"Ginger,\" he said. \"It's nice to meet you. I don't know if Tucker told you, I'm new at this, so I guess you're my first fan.\"\n\nLinda was relieved that Dave didn't recognize her. The fact that it had been twenty-five years or so since she'd last seen him driving around the neighborhood, and her new red hair, seemed to be doing the trick.\n\n\"Maybe I should start a club or something,\" she said, laughing nervously again.\n\n\"Or something,\" Dave said seductively.\n\nLinda swallowed hard to try and keep her tightening throat open. It didn't work, so she took a big gulp of wine.\n\n\"Beer my man?\" Tucker asked.\n\n\"Sure. It's been a long day,\" Dave said.\n\n\"Still workin' on the Victorian?\" Tucker asked as he headed for the door.\n\n\"Yeah. It's gettin' there,\" Dave said.\n\n\"So you have a...more normal job, than this?\" Linda asked.\n\n\"I paint houses. Been workin' on a huge Victorian with about eight colors on it. It's been a fun job actually.\"\n\n\"Oh, nice. I love those big ones,\" Linda said. She blushed again and looked shy when she realized what she'd said.\n\n\"Somebody likes big ones? You've come to the right place,\" Tucker said when he returned with Dave's beer. Everyone laughed.\n\nAnother gulp of wine and Linda's glass was empty. Tucker filled it up full. He was right on top of things as usual. In fact, he was right on top of the whole evening, having the whole crew on hand and making sure Dave showed up to meet Linda. Tucker was an honest, good-hearted guy, but he knew how to manipulate things in gentle ways to ease gun-shy amateurs out of their clothes.\n\n\"So Ginger,\" Tucker said, \"is our little fantasy factory anything like what you pictured?\"\n\n\"No, not at all. I thought it'd be worn out, and gritty, and...sticky,\" she smiled. \"I guess I thought everybody here would have gravely voices and mustaches or something.\"\n\n\"I thought the same thing!\" Dave said. \"Yeah, the niceness of it took me by surprise. Big time.\"\n\n\"So what are your amateurs like?\" she asked Tucker. \"What walk of life do they come from?\"\n\n\"Oh, all kinds,\" he said. \"A surprising amount from the suburbs. Just bored I think. Wanna have some fun. They always do,\" he smiled. \"We get some women doing birthday surprises for their husbands, stuff like that.\"\n\n\"Really?\" Linda said, looking surprised. \"Wow, that's...different.\"\n\n\"Yeah, sex is a funny thing. There's so many different takes on it. Some people are really uptight and think doing anything that can be seen is wrong. Other folks thrive on it. I guess everybody who watches porn is a voyeur. Exhibitionism's just another side of it.\"\n\nLinda nodded and took a sip of wine, remembering how she showed off her ass by the main road the other day, in those so-tight-they-look-painted-on stretch pants.\n\n\"That look on your face tells me you get it, at least a little,\" Tucker said.\n\n\"Yeah. I'm surprised that I do, but...I do,\" she said.\n\n\"How about you Daddy?\" Tucker asked. \"What's your take on puttin' it all out there?\"\n\n\"Oh God. It's been probably the most fascinating thing I've ever done. This is gonna sound really clich\u00e9, but since I've been here I feel a whole lot more alive. More like a real man. I guess I'd never really felt like one before.\"\n\n\"I've heard a few of the ladies say something similar,\" Tucker said. \"It's funny, this sex stuff. Showing the world you've got it is a powerful thing.\"\n\n\"Have you ever...?\" Linda asked Tucker.\n\n\"Yeah, a long time ago. And no, I'm not tellin' any of you guys where you can see it!\"\n\n\"Really boss? I didn't know that!\" Jamar said.\n\n\"Nobody's asked before,\" Tucker said. \"I wouldn't get involved that way here though. That'd tangle things up too much. Best to just be the boss, and take care of my family here,\" Tucker said. \"Well, we're keepin' Jamar from his work. Lets go in my office and have another drink. I'm enjoying you guys company tonight.\"\n\nLinda thought about saying she had to leave to go do something made-up, but she didn't. She was enjoying everyone's company too, and spending a little more time with David Jenson was something she didn't want to pass up. Tucker led the way, and Dave did the 'after you' thing. Polite, yes, but he really just wanted to check out Linda's ass as she walked. Her neck and face burned with fire by the time they reached the office. She was sure she could feel Dave's eyes on her. I'm horny! she screamed to herself. Not good! Not good!\n\n\"Let me top that up for you Ginger,\" Tucker said, already pouring. \"I'm gonna go grab a couple beers, I'll be right back. Make yourselves at home.\"\n\nLinda sat on one end of a couch and Dave sat a little sideways on the other end, legs apart, pants just a little too tight.\n\n\"So what do you do Ginger, besides run my fan club,\" Dave asked.\n\n\"Oh God,\" she smiled. \"Am I ever gonna live that down? Tucker's the one who called me a fan, although I guess I did mention your name in the email.\"\n\n\"Oh, so you contacted him? I wondered how that works. I know sometimes he finds people out and about.\"\n\n\"Yeah, I had too much wine that night,\" she said with a sly little smile. \"It does funny things to me sometimes. What do you mean he finds people?\"\n\n\"Oh. Well, you can ask him, but I think it's like if he sees someone who looks like they might be...sexual, you know? He gives them his card. He's pretty selective though, I think. If you've looked at the website there's not a bunch of sleezebags. They're all special people in one way or another. I was talking to one of the girls about it. She sees it too. It's like everyone who walks through the door is destined to be here for one reason or another, and it ends up being magical and awesome.\n\n\"So do you think I'm destined to be here,\" Linda asked. She took a sip of wine, holding her gaze on Dave's eyes the whole time.\n\n\"I do,\" Dave said. \"Absolutely.\"\n\nLinda smiled.\n\nTucker walked in and handed Dave a cold beer. He joined the little party, sitting in the big upholstered chair.\n\n\"I'm goin' by the looks on you guys faces for what I'm gonna say next,\" Tucker said. \"Ginger, we would absolutely love to have you join our family. Everybody we need is here tonight. I'm just gonna throw the idea out there, in case you might have been thinking about it.\"\n\n\"Oh God,\" Linda said quietly.\n\n\"I know, it's big, right?\" Tucker said. \"But at the same time it's small, and intimate, and beautiful. Weird how it's both. That's what makes it so compelling I guess.\"\n\n\"I'm really too old for this,\" she said, bringing a noticeably trembling wine glass to her lips. \"Aren't I?\"\n\n\"Absolutely not!\" Dave said. \"You're every bit as beautiful and sexy as you ever were.\"\n\nA hot flush swamped Linda's head again. Why did he say that! Does he know who I am?!!\n\n\"Look at me. I'm shaking just thinking about it,\" she said.\n\n\"Real emotions are beautiful,\" Tucker said. \"They make it all so much hotter. But it's totally your call Ginger. We're not here to pressure you in any way. It's been a huge pleasure meeting you and showing you around, and we can all call it a night and go home happy.\"\n\n\"No. Not yet,\" Linda said. \"I mean...it's early...right?\"\n\nShe took another sip and a deep breath, trying to get her shaking under control. A quick glance at Dave ended up being a long gaze. \n\nOf course I want him to fuck me, Linda thought, there's no question about that, but here? In front of cameras? In front of these people I just met? They're nice people, but, God almighty! What did I get myself into! Damn his eyes are blue!\n\nTucker and Dave sat quietly, letting Linda think. Dave had a lovely smile on his face, relaxed, the opposite of threatening. Inviting, but in a 'Whatever you decide will be all right' kind of way.\n\nWhy did he have to be so gorgeous, Linda thought. I want him. I shouldn't, God help me, but I want him. That same tingle's got a hold of me, the one I felt by the side of the road showing my ass to traffic. What's that all about? Am I an exhibitionist? Do I want to be one? I'm a freaking old lady for Christ's sake, why am I just realizing this now? Showing off should have been twenty, thirty, forty years ago. And it's Porn! Porn you idiot! I can't make a porn!!\n\n\"You know in the old movies,\" Linda said, quietly breaking her silence, \"when they used those special lenses...on the older actresses, to make their skin look soft and glamorous?\"\n\n\"Oh sure,\" Tucker said. \"Yeah, we got all that. It's all digital these days.\"\n\n\"You probably think I'm silly, worrying about something so trivial,\" Linda said.\n\n\"Our goal isn't to make smut,\" Tucker said. \"Our goal is to make something beautiful, something the participants can look back on and say, 'Yeah, I did that. Look how awesome I was. Look how beautiful.' We work with all the tools we can to bring everyone's vision to light. Some people don't care, but others want to see their fantasy.\"\n\n\"Their fantasy,\" Linda said with a mysterious little smile, glancing at Dave again. Once again their eyes couldn't let go of each other. \"An interesting thing happens when you get older. For me it was just in the last few years. You start to realize your time is short, at least for some things.\" She tore her eyes from Dave's and looked at Tucker. \"Soft light. Lot's of flattering angles. Make me look better than I am. Your crew won't mind staying a while?\"\n\nLinda's heart raced. She was sure the men would see it, and hear it in her voice, her veins throbbing, her chest pounding.\n\n\"Not at all. They're an easy going bunch,\" Tucker said. \"Dave, are you able to stay a while?\" Tucker asked. Dave didn't even notice the slip-up on his name, but Linda did.\n\n\"I'd love to stay,\" he said, locking his big blues on Linda's again.\n\n\"Awesome you guys. Ginger, I'll have Marsha touch you up, but that shouldn't take long, you look incredible right now. I'll need you to sign the usual contract,\" Tucker said, heading for his desk. \"I want you to read it over, but it's pretty simple. If you have any thoughts or concerns we can write them in. I always want everybody to be on the same page.\"\n\nLinda signed, Marsha reapplied her pink lipstick and touched up her eyes. The sexy red 'bedhead' hair was perfect already. They quickly browsed the wardrobe closet, but decided to go with the lingerie Linda had worn \u2014 an attractive but unpretentious bra and panties, sexy in an 'everyday suburban woman' kind of way. Marsha told Chip what they'd decided on, and Chip put Dave in a pair of snug J.C. Penny boxer briefs.\n\nLinda's walk down the hall with Marsha felt other-worldly. She had a fluffy robe on, but the cool air on her body gave her chills. She knew what she was about to do was insane \u2014 totally, off-the-charts nuts \u2014but she was walking with confidence. The lights of the bedroom set loomed ahead. She slowed as they neared it, lagging behind Marsha.\n\n\"You okay honey?\" Marsha asked. \"Got the butterflies?\"\n\n\"Whoa,\" Linda said quietly. \"I'm...feeling a little faint all of the sudden.\"\n\n\"Tucker? She's a little woozy,\" Marsha called out.\n\nDave came to her aid, dressed in his own fluffy robe. She held his arm and they walked to the bed and sat down on the edge of it.\n\n\"Not a very good way to start out,\" Linda said, loud enough for everyone to hear. \n\n\"It's fine honey,\" Tucker said. \"We're in no hurry. Take your time.\"\n\nMarsha gave her a bottle of water and she took a few sips.\n\n\"I was cold, but it's better here,\" Linda said.\n\n\"I'll turn up the heat a little,\" Tucker said.\n\nTucker didn't use the new LED stage lights that were all the vogue. They were better in a lot of ways, but he liked the heat that came off of the old fashioned lights, and he supplemented it with a radiant heat system in the floor on the sets. It was partly because the old studio could get cool, but mostly he liked it because he could turn it up and get his actors sweaty. Something about sweaty sex really brought out the animal in some of the amateurs, especially women who'd never experienced it before. He went to the control panel on the wall and cranked up the thermostat.\n\n\"There you go Ginger, that should warm up in a few minutes,\" he said.\n\n\"Thanks. There's something else though. Can I talk to...Daddy,\" Linda said nervously. \"Can we...have a minute?\"\n\n\"Sure Ginger,\" Tucker said. \"Whatever you need. Take five everybody.\"\n\nA hint of a smile crossed Dave's face. He took her hand and waited as everyone left them alone in the little island of light.\n\n\"I...I need to tell you something,\" Linda said quietly. \"I know who you are. I know you're David Jenson.\"\n\nDave smiled. Linda's heart almost stopped. A voice screamed in her head - Why is he smiling?!!\n\n\"I know. You're Mrs. Smithson, right? Linda, I think? From Woodland Terrace? Let's see, it was a gray house, with white trim, and you and your friend across the street were the youngest, sexiest women on my paper route, by a long shot,\" Dave smiled.\n\nLinda was stunned. She couldn't speak. Her eyes danced back and forth between Dave's sexy blue eyes as he continued.\n\n\"It's okay,\" Dave said. \"This'll be even more fun now that we're both on the same page. You know, I was crazy about you. Fantasized about you a lot! I had a big hard-on in your kitchen one time. You were getting my money together for me and I had to stand behind your kitchen counter so you wouldn't see. Puberty hit me hard and you were like a dream.\"",
        "\"You're joking!\" Linda said quietly, the stunned look still on her face.\n\n\"I wouldn't joke about that,\" Dave said. \"It's is Linda, isn't it?\"\n\n\"Yes. I can't believe you remember me.\"\n\nLinda's nerves were starting to melt. Dave's voice and his gentle ways were getting to her. A feeling of warm rightness was overtaking her, like the universe had a grand plan, and it was for her to someday be fucked by David Jenson. That 'someday' was right then and there.\n\n\"Are you ready Linda?\" Dave said, as he watched the nervousness leave her face. \"Do you still wanna do this?\"\n\n\"Yes,\" she almost whispered. \"If you do.\"\n\n\"Are you kidding? You look every bit as good to me as you did back then. This is a dream come true. Let's show the crew what real fantasies are made of.\"\n\nDave placed Linda's hand on his lap, so she could feel the big erection straining to get out of his tight underwear. Her eyes misted up and her face softened even more.\n\n\"Oh David!\" she said quietly when she felt him.\n\n\"Everything okay Ginger?\" Tucker asked as he walked in out of the shadows.\n\n\"Yes. I'm...we're ready,\" she said, gathering her emotions.\n\nTucker called the crew back. Linda was breathing deeply, looking into Dave's eyes.\n\n\"Roll cameras people,\" Tucker said. \"Ginger and Daddy, you guys just do whatever you wanna do. We'll take breaks when you need 'em.\"\n\nDave's big hand went to Linda's cheek, and he kissed her. Tucker usually didn't like long kisses, but that one was extraordinary. Dave thought so too. He hadn't felt a fantasy come to life like that...ever. Forty years after his masturbatory teenaged crush, he was kissing her! Mrs. Smithson! He kissed her with more passion than he ever knew he was capable of, and she responded the way he used to dream she would. \n\nAs their mouths devoured each other they opened each others robes. Still sitting on the edge of the bed, with a bank of cameras just feet away, Linda was already lost in the moment. There were no cameras. There was nothing. Nothing but David. His hand was gently squeezing her soft breast. Her hand was on his muscular chest, but was drifting down to his underwear. Her head was spinning, slow, like a dream. \n\nHe's a beautiful man! It's been too long, since I've touched a man. Oh God! It's...so hard! What the...! It's huge! God what a lump!\n\nDave moaned into her mouth when he felt her touch. Slide your hand in baby! the voice said in his head. I don't want that fabric between us. I'm so fucking hard for you Mrs. Smithson! Linda! God I'm so fucking hard for you!\n\nDave slipped the robe off Linda's shoulders and opened the clasp on her bra. His hand went back to her front, slipping up under, onto her warm tit.\n\n\"Ohhhh!\" she moaned, finally breaking off the epic kiss.\n\nShe pawed at his tight underwear, anxious to see all of her man \u2014 the fully grown paperboy, and the big cock that'd filled her thoughts for so many days. Dave lifted his ass to help her and his hand worked with hers, sweeping the stretchy little garment down his legs.\n\nLinda let out a breathy gasp when she saw him. Open robe. Flat stomach. Hard cock. Powerful legs.\n\nHer bra was tossed aside, his robe fell to the bed, Linda went down on her back, Dave straddled her small body and kissed her again. Hot. Wet. Another kiss for the highlight reel.\n\n\"Oh God!\" she said quietly, when Dave's kissing mouth made its way down her neck to her breasts.\n\nHer flesh had never felt so alive before, so electric. A nibble on her nipple had never brought her close to an orgasm, but there it was, so close she could almost see it hovering around her, waiting to pounce. When the second nipple was seized she was a goner, floating on a bed-shaped cloud. The orgasm hovered closer. God she was ready!\n\nDown the kisses went, across her tight, nearly spastic belly. Her panties were slipped off as if by magic as Dave's mouth approached. One lap of his tongue through her wet pussy was all it took \u2014 the hovering big 'O' engulfed her, back arched high, mouth open wide in a silent scream. Linda's eyes rolled and the noise finally found it's way out.\n\nIt surprised her. She'd never made much noise in bed, and certainly not a screaming cry of love like that. But God if it didn't feel good! Like that primal scream therapy she'd read about once. When the silence overtook her again, and the swirling orgasm moderated, she laughed. Dave looked up from her delicious, juicy pussy and smiled. Yup, they were gonna have some fun!\n\nTwo hours later Dave was still fucking her. It was an epic session, two sweaty bodies going at it with wild, lusty abandon. The first hour started with exploration \u2014 Linda, fresh from her monster orgasm, devoured Dave's big cock. Never in her life had she sucked cock like a real slut, but there, with her orgasmic scream still ringing in her head, she went full-dirty, like she never had before. Dave's hard, thick mouthful was wet and sloppy, and Linda did her best to jam it down her throat. She liked it best when she was on her hands and knees, and Dave was on his knees leaning over her, playing with her pussy from behind while she sucked and gagged on the big cock, slippery saliva running down her chin, dripping to the bedsheets. It was so visceral and so animal. Sex had never been like that before.\n\nShe felt like an animal again when Dave spun her around, his strong arms molding her into fuckable form, on her knees, ass high, head low. He pushed her knees wide apart. Her spread pussy took his cock in like it needed it, with a sweet friction that nearly ruined her for real life.\n\nIt was at that point \u2014 pussy stuffed full, sweet friction carrying her away \u2014 that she turned her head in Tucker's direction.\n\n\"Oh fuck!\" she said, eyes big, darting around at Tucker and the cameras and the crew.\n\nIt was a good 'Oh fuck', not a worrisome one. Tucker knew the fiery look in her eyes, and the lusty little 'Look at me, I'm doing it!' smile he'd seen so many times before. Yeah look at me! This is fuckin' awesome, and I'm gonna cum, right here in front of you guys! If you'd told me last week I was an exhibitionist I never would have believed you!\n\nThe first hour flew by. Tucker called for a break. Linda lay there, head spinning. She felt wildly alive. Marsha tossed her a robe and she didn't even put it on, just pulled it over herself, barely covering her dirty parts. It felt good to be bad.\n\n\"Ginger, you're somethin' else,\" Tucker said. \"We're all in love with you. You sure you haven't done this before?\"\n\n\"Ha!\" Linda laughed. \"Wake me up, I've gotta be dreaming.\"\n\n\"I'm the one dreaming Linda,\" Dave said. \"Oh, sorry.\"\n\n\"Hey that's cool,\" Tucker said. \"Nobody's their real selves around here. Ginger suits you well though.\"\n\n\"It's the hair,\" Marsha said, bringing them water bottles. \"That's definitely 'Ginger' hair.\"\n\n\"Can I tell them?\" Linda asked Dave.\n\n\"It's up to you,\" he said.\n\n\"Dave was my paperboy, in 1975,\" Linda said with a sly smile.\n\n\"No shit!\" Marsha said. \"Well that explains the fireworks. When did you figure that out?\"\n\n\"I thought it was him when I saw him on the website, but I knew for sure when I met him tonight.\"\n\n\"I figured it out pretty quick after I got here tonight,\" Dave said, \"but I played along. I didn't know if she wanted me to know.\"\n\n\"When I was about ready to faint earlier I told him,\" Linda said. \"It was gonna be hard enough to get out of my clothes. Thinking I was deceiving him was just too much.\"\n\n\"You're a good person Ginger,\" Tucker said. \"I had a feeling you were hiding something, but I also had a feeling you were a straight shooter. Guess I was right on both counts.\"\n\n\"So, you may have noticed there's a little heat here between us,\" Dave said.\n\n\"Really? You could have fooled me!\" Marsha said sarcastically.\n\n\"Linda, er, Ginger was the youngest, hottest housewife in the neighborhood, and I was a post-pubescent boy. I used up quite a few boxes of Kleenex fantasizing about her.\"\n\n\"Really!\" Marsha said. Oh my God, this is just too hot, isn't it? What about you Ginger? How do you remember Dave?\"\n\n\"Super cute. My friend and I used to giggle about him. He was way to young, but he was mature looking. I used to see him driving around in his rusty sports cars for years after that, and then I lost track of him. I nearly freaked when I saw him naked on the internet, with that college girl. I showed Nancy,\" she said, turning to Dave. \"Mrs. Eastwood? Across the street?\"\n\n\"Oh my God!\" Dave said. His face blushed red. \n\n\"Davey! Look at you, blushing!\" Marsha said. \"This is too much fun!\"\n\n\"Does she know you're here?\" Dave asked, nervous that the whole neighborhood might know about his new job.\n\n\"God no! She'd freak out,\" Linda said. \"I don't think she'd understand Ginger. I don't even think I understand Ginger.\"\n\n\"Well I do, and she's awesome,\" Tucker said. \"You guys wanna do some more? I feel like I stopped you before you were finished.\"\n\n\"Can we go all night? I suddenly feel thirty years younger,\" Linda said.\n\n\"Goin' all night people!\" Tucker yelled. Everybody laughed. \"Roll cameras!\"\n\nMarsha took the robe and Linda's face lit-up with excitement at being naked in front of everyone again. She looked like a college girl, ready for anything.\n\n\"You are somethin' else,\" Dave smiled.\n\nHe pushed her legs wide apart and dove in for a tasty feast. Linda's eyes closed and her mouth opened. Round two was underway.\n\nComing clean to everyone about her reasons for being there relaxed her, and the familiarity with the dream-like situation freed her even more. Dave had learned what made her tick, and she let her new, high-flying emotions out vocally as he used his new knowledge.\n\n\"Oh yeah!\" she exclaimed in a lovely, breathy sigh when Dave tickled her clit just right with his tongue. \"Fuck! Oh...you gotta be kidding me!...not so soon...Not so sooooonnn!!!\"\n\nHer body twitched and convulsed, and all the air in her lungs groaned out.\n\n\"Jesus!\" she breathed when it was over.\n\nShe pulled Dave to her, guiding him so she could get at his cock. He swung a leg over, tea-bagged his fat cock down into her mouth, and dropped his head to her still burning pussy. Man on top sixty-nine. Linda nearly choked on the big thing, but she loved it, stroking the hanging cock and balls with her hands as she slipperied it up with her wet saliva again. God he's a man! she said to herself. A real fucking man!\n\nThe second hour flew by. Linda loved the doggie style, with every millimeter of his big meat pounding her deep. She took him that way numerous times, but they tried lots of different positions. She came with ferocious intensity prone, Dave flattening her into that position halfway though their last doggie go-round. It burned so much of the little energy she had left she thought the magic evening might end, but Dave rolled and sat her down on his somehow still hard cock. With his strong hands under her thighs he helped her tired body ride, wanting to see her in all her glory one last time before it was over. As she looked at Tucker and the crew, her shimmering red hair sweaty and stuck to her face, she somehow mustered more energy and started riding in earnest, the sweet friction she loved so much propelling her to a wild, nearly out-of-her-mind finish. Dave flung her off of him and she took his gushing cum in her mouth, her loud, devilish moans drowned out by his grunting yell of release. Tucker and the crew applauded. It was over.\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n\"You've lost your fucking mind!\" Nancy said sternly as she walked into Linda's house. \"Why didn't you tell me you were thinking about doing that? Fucking porn? Are you kidding me?\"\n\n\"So you saw it?\" Linda asked.\n\n\"So I saw it? Yeah I fucking saw it. And a fucking million other people are seeing it too. What the fuck Linda!\"\n\n\"Okay, let's take it down a notch,\" Linda said calmly. \"Sit down, let's talk about this.\"\n\nShe got a coffee mug out of her cupboard and poured Nancy a cup.\n\n\"I just can't believe it,\" Nancy said, shaking her head. \"David Jenson? How did it even happen? Did you call him up or something?\"\n\n\"You fed me too much wine and I emailed the studio,\" Linda said, topping up her own mug. \"I was just curious.\"\n\n\"Don't blame me for this you fucker!\"\n\n\"Why would I blame you? It was kinda fabulous. You watched it right? Did it look like I didn't want to be there?\"\n\n\"No. You fuckin' loved it like a slut.\"\n\n\"Jeez, I haven't heard you swear this much since we were teenagers. When we were both sluts, I'll have you remember.\"\n\n\"Come on Linda. This isn't like you, makin' a porn. Are you okay?\"\n\n\"I'm good,\" she said, wrapping her arms around her old friend. \"Never better. You've got Bill. I haven't had a man in way too long.\"\n\n\"I know honey, but...porn? You know somebody's gonna see it and then...my God, David's mother still lives a half a mile away.\"\n\n\"I'm a sexual woman. So sue me.\"\n\n\"I don't think you've thought this through Linda. Church. Garden Club. This is a gossipy neighborhood. Oh my God...\"\n\n\"So you're not curious about it?\"\n\n\"Oh course I'm curious,\" Nancy said as her face blushed. \"But I'm supposed to get the lecturing part out of the way first, right?\" \n\n\"Consider me lectured.\"\n\n\"So I've got all morning,\" Nancy said, a smirk growing on her face. \"You better tell me everything...\""
    ],
    "authorname": "riverboy",
    "tags": [
        "mature",
        "older woman",
        "older man",
        "porn",
        "cameltoe",
        "paperboy",
        "redhead",
        "red hair"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/tuckers-studio-ch-09"
}