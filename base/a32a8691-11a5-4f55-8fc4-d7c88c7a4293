{
    "title": "Play Testers Wanted Pt. 19",
    "pages": [
        "Where Players Fear to Tread:\n\nI lay atop a flat transparent plane. When I looked down, there were floating islands of reality all around me. The pockets consisted of every location imaginable, and a few made my head hurt. My first thought was that I had somehow had my collision field switched off and had slipped behind the walls of the game. The more I saw, the more it made sense. I accidentally did this in older games, but how could this occur in something as sophisticated as a full dive title? Finally, I got to my feet, and game gravity appeared to be working so far. I stomped my foot once, and the entire plane let out a dull echoless tone. The shattered universe was all around me, and it reminded me of an exploded M.C. Escher painting given life and movement. Perspective was not only deceptive but random and malleable. The pockets varied in every way conceivable, size, transparency, and even direction of motion.\n\n\"Well, fuck,\" I cursed, and my voice came out as a synthesized mess. \"This is like Alice in Wonderland tweaking on LSD or windowpane. Undiluted and pure for your recreational enjoyment.\"\n\nThe unfamiliar content entranced me. Most of this stuff was not in either game. The genres were vast and varied. I wondered if Kat was developing other game genres like horror. Much of what I saw fit that subject matter. An arctic landscape drifted by, and a shapeless mass erupted from beneath the ice. The monster was an amalgamation of a dozen different creatures ranging from arachnid to octopoid and a hellish mix of canine, human, and God knows what all.\n\n\"The Thing,\" I roared in delight. \"From the John Carpenter movie, it was their version of the creature given life. I wonder if talks fell through or, stupid, this is the dev teams work area!\"\n\nSomehow, I had glitched into the midst of all those talented people that created content for Numenor. This fractured universe had to be the dev's secret testing ground. I tried to access my HUD but got an error message instead.\n\nPlayer ID not recognized. Host error 5481, please exit the area immediately--safety protocols not in place.\n\n\"Aw shit,\" I cursed, but this time I had Whisper's voice coming out of my mouth. \"Hey! Anybody! I cannot access my HUD! Traci? Surfer?! Left?\" The old fear awoke, and this time the danger might be real. I repeatedly tried to call up any interface, but nothing was working. \"Fuck You!\" I screamed, and this time Benedict Cumberbatch's voice howled into the void. The plane I was standing on was on a collision course with a sizeable foggy patch of data. I had little time to fall flat and brace myself the best I could. The jarring sensation hurled me bodily into the ether, and I landed in the mists. I had settled on my back, staring up into the cloudy atmosphere of whatever nameless reality I was now on. The fog was cold and obscured everything. When I sat up, my spine protested. \"I can feel pain and temperature. Shit.\"\n\nI reluctantly rose and slowly, with arms and hands outstretched, blindly groped my way through the dense atmosphere. My hair was soaked and frozen by the cloud. The same was true of my clothing, and I could see that I was wearing tennis shoes, jeans, and a dark t-shirt. I barely stopped in time from faceplanting into a tree. I ran my fingers over the ragged bark and found four diagonal lines cut into the tree's exterior. The gouges were deep and, worst of all, fresh. I remained silent. The height of the claw marks was about head level, which made me imagine either a bear or a big ass werewolf. What else could it be? The tree was not that tall, and it stood slanted at a twenty-degree angle and covered with moss and mushrooms at its base. I did my best to gauge my steps and move as quietly as I was able. The sound of bubbling water was faint at first but grew louder as I walked closer to the source. Finally, the mystery of the fog resolved itself when I tripped and fell headfirst into a pool fed by hot springs. The sudden heat overwhelmed me as I broke the surface of the water, sputtering and gasping for breath. The wisps of steam mingled with the cold air and behold a cloud forest. I swam to the side of the pool and was about to lever myself out when I looked at the ground between my hands. I was worried about werewolves, but the thing that made that print was neither a wolf nor the size of the wolfman of fame and legend. This fucker was twice that size, at least. The depth of the track and its sheer proportions made me rethink leaving the pool. I had no weapons, no magic, nothing but my wit and tenacity to live.\n\nSafety protocols are not in place. The mechanical voice echoed in my head. Could I die in the game? The thought that followed made me weak in the knees. I wasn't in the goddamn game. I was in the realm of the devs. Here they tested out their ideas, and so there was no need for safety protocols. I am so fucked. Alone and facing what had to be either a weretiger or werepanther, I must find shelter and craft weapons. Like hell was I going to die like this. I swam to the opposite side of the pool and pushed my body out of the water. The cold air stung like a bitch. I needed to make a fire, or I would freeze to death before the thing found me. I had to hope there were caves around here. Silver worked on werecreatures, shelter, and silver, and tools had to be here somewhere. I backtracked the prints left by the werecat. I split my attention between tracking and keeping an eye on my surroundings. It smacked of the fight with the Yautja in the forest of Latveria. The same fear and paranoia I felt then were rekindled.\n\nThe atmosphere began to thin, and I could make out the step pyramid. The full moon bathed the ancient stones giving them a silvery glow. I fought the urge to break cover and race to the building. Instead, I kited the pyramid keeping it in sight while I did my best to remain hidden. There was movement on the steps leading to the top. My first glimpse of them was terrifying. I recalled what they called it from my time DM'ing, a group in college. I froze when I heard the collective cry of the shadow of werejaguars. Their patterned coats shone under the moonlight. Their varied vocalizations grew louder as they struggled for supremacy. I counted them as they made their attempt to mount the final few stairs. Eight of them were roaring, clawing, and biting their fellow lycanthropes. A deafening roar scattered the group as a hulking figure topped the steps. His coat soaked in the silvery light as he rose to his full height and declared his leadership. The black jaguar had arrived, and the shadow was under his sway.\n\nThe tan-coated werejaguars made their obeisance to their leader. One by one, they exposed their throats to the black's jaws. One by one, he gently applied his fangs before releasing them. The ebony king displayed his disfavor. The second from last perished under the formidable power of the chief's bite. He twitched a few times before he was released, and his human body fell to the stones. The others fed upon their former member. Nature is efficient as it is remorseless. My teeth threatened to chatter, and so I moved on, seeking shelter and warmth.\n\nCrumbling structures and the remnants of what might have once been a formidable wall surrounded the pyramid's base. I slunk to the edge of the fallen stonework. I had dated a geology student long ago, and she had shared a bit of her love of rocks with me. Diorite is one of the densest and strongest igneous rocks you can find. It looked like it had been struck and shattered by way of the debris pattern. What the fuck could do that to such a hard stone? I examined the debris field, and it was clear. The force came from within; no invader did this. They were betrayed by their own. There were scorch marks on every fragment. I looked towards the top of the pyramid, and the feast continued. The ebony king lounged atop the apex as he watched the others intently. I forced myself to tear my gaze away from the monsters and seek concealment, or else I would freeze to death.\n\nI hugged and rubbed my torso to maintain a semblance of warmth. If my core temperature dropped too much, I was dead. Since the others weren't here, they must have made it out of the crossover event. That thought kept me going as I followed a depression in the ground. The gash seemed to serve two purposes. One was to direct water away from the base of the wall, and the second was to expose enemies to the withering fire from archers above. The pyramid complex sat atop a hill. If I was lucky, that hill was a natural formation, and it might just have a cave system beneath it. The lowest point of the ditch reached a collapsed portion of the earth. It wasn't exactly a cave, but it was dry and out of this damned fog. I climbed down and discovered shattered beams of wood that once supported the roof. I immediately piled the wood into the driest portion of the chamber.\n\n\"If I can find some kindling and the right rocks, I can build a fire,\" I whispered as I continued to search. The filtered moonlight formed a shaft, and I used that to investigate my surroundings. Once they realized I was not waking up, they would have to trace my movements and track me down. My only hope was to stay alive long enough for Kat to rescue me. I dredged up every memory I had concerning survival skills. Some were game-based, while the majority came from real-life experiences. I had flashes of a box canyon with a lake, a town hugging the shoreline, a school or monastery on a hill, and a castle overlooking it all. Other teens with me learned how to find freshwater, gather kindling and wood for a fire, and other essential skills to endure. It felt like boy scouts or a summer camp, but I knew it wasn't. The memory surrounded the monastery and the university within.\n\nIt was difficult navigating and searching with such poor lighting. As I dug through the debris and scattered relics of an ancient civilization, I tried assessing what had happened to bring me here. \"The mirror must have shattered while I was passing through it,\" I muttered. Unfortunately, the rocks in this area were not conducive to generating the spark I needed. At the same time, I had luck with kindling and larger pieces of wood. \"I need a piece of steel.\" If this was a horror survival game, the items I required must be in this area. So I renewed my search, and sure enough, I found a small flat ingot of metal. Unfortunately, once I started the fire, concealing it would be impossible, so I had to hope the fog worked in my favor in this instance. I picked up the metal, and glowing white letters appeared in my field of vision, a small piece of steel. I had activated a HUD system. I gathered the chunk of dark stone into my other hand. Sure enough, the words returned and announced I possessed a lump of obsidian. This type of interface was unfamiliar but very welcome.\n\nNevertheless, it gave me hope that this fragment of the game recognized my existence. \"It is a beginning. I can lean into that.\" Sparks flew from volcanic glass and steel. The kindling began to smoke. I carefully blew on the dried plant material, and with a dramatic blaze, a man had made fire. Soon I was naked, my clothing hanging near the fire drying, and my stomach rumbling. Food could wait until I quit shivering. Once my stuff was dry, I could thoroughly search this area and see what it held. I held my hands near the flames, and once more, memories of the canyon returned. The world was transitioning between summer and fall. Leaves of gold and red were everywhere as I meandered over the hundred or so acres owned by the school. I could almost smell the floral delight as my eyes closed and the memory took over. The hill was steep on both sides. Several oaks and pine trees dotted the landscape and offered shade from the noonday sun.\n\n\"What is that?\" I recalled saying when a flash of sapphire caught my attention. Sunlight painted the recently mowed grass and among the fallen blades a piece of glass perhaps. I topped the hill seeking the source of the sparkle. I squatted and ran my hands carefully through the grass in case it turned out to be a hunk of broken glass. Directly in front of me, a precipitous drop-off ran to the valley floor, just beyond a wall of bushes at the base of the next hill. The unexpected wave of dizziness sent me careening downward. I tucked into a ball to avoid injury and cried out when my body hit and passed through the foliage. My body came to rest in a dark stone tunnel.\n\nI reached my feet in a series of tentative positions. First, I sat up and leaned against the decorated wall of the passage. Egyptian-style murals covered the walls and ceiling. My violent path through the bushes allowed enough light to enter and illuminate most of the tunnel. I called out the gods I recognized from history classes and gaming sessions. \"Osiris, Thoth, Ptah, Set, funny no goddesses here to compliment their husbands or play their part in this resurrection play,\" I muttered. The story was of the murder and rebirth of Osiris. Where was Isis? She had a crucial role in it. Next, I rose to my feet, leaning heavily against the left wall. Dizziness plagued me until I reached the end of the passage and the flat-topped pedestal. The table reminded me of a chessboard with its squares and hand-carved pieces. Unlike chess, there were only four styles to place upon the game surface.\n\n\"Hmm, you look like a pyramid,\" I said as I held up each figure. \"And you are a cloud, a brazier, and last but not least, an ocean wave. Well, would you look at this?\" I muttered as I noticed the three drawings at the tail end of the tunnel. Their style and subject matter were different than the rest of the passageway, just then the memory fast-forwarded to me, placing the proper pieces on the game board to open hidden doors. The first revealed another long hall lit by shimmering crystals. The walls and ceiling were covered entirely with the elemental glyphs in groupings of four. They must have numbered in the tens of thousands.\n\nWhere the passage ended was a statue of one of the Anunnaki, a Sumerian legend. What the hell was this statue doing here? \"You are wearing a bracelet, or is it a watch?\" I remembered Nick's watch I had recovered from the military base. Was there a connection? Once more, time leaped forward, and I was beyond another door. The artisans had meticulously carved niches into the walls of the natural cavern. Within these slots, dozens of sarcophagi held the remains of influential men. The coffins triggered the critical memory, and I found a massive flawless sapphire. Mud caked its surface, so I popped it into my mouth so that my saliva could clean it off when a sudden noise startled me, and I reflexively inhaled. The gem lodged in my throat, and I could not breathe. A large piece of wood settled loudly and broke the spell of the memory.\n\n\"Ugh,\" I cursed and rubbed my throat as Cumberbatch's voice continued to issue from my lips. \"That was unpleasant. How about something entertaining instead.\" I wondered if I could access the combat skills I had mastered in the Star Wars universe, and luckily they were still there. \"Form one, Shii-Cho, the basics, and a good beginning,\" I self-narrated as I mentally went through the style slowly. I focused on footwork, shifting my balance, and the flow of movement. \"Form two, Makashi, Count Dooku was a master of this form.\" I went from one to the next to pass the time and retain my sanity. The agony I felt when Pinhead gestured at me, and the weakness afterward worried me. She had called me a donor. I broke down what had happened before we fled the scene. Pinhead had torn Andeddu's soul from Xim's body and, using my blood, merged it with a rotting corpse. The stone holding Xim's spirit had gone dark and seemingly resurrected my one-time lover. The Lady of the Cenobites seemed genuinely upset when I tossed the former tyrant through the portal. Had they planned on torturing her as well?\n\nMemories of Xim emerged, and not since my time with Mystique had I so leisurely explored the broader aspects of my sexuality. I knew it was the shapeshifting angle, but I enjoyed letting someone else be in charge deep down. I suddenly had a desire to figure out my current appearance. Up until now, I had been scared shitless and too busy even to bother. I looked down and liked the dusky, almost olive skin. I reached up and pulled strands of my hair. \"Ginger, well, at least the roof meets the rug.\" I plucked up the piece of steel and tried to catch my reflection. It was so small all I could do was see that I had blue-green eyes. The outer rim was a dark blue and blended to a bright green at the center. It was enough for now. My clothes were dry, and I got dressed and readied to explore my immediate surroundings.\n\nSince I couldn't construct a torch, I took a portion of wood, a stone bowl, and embers from the fire to act as a light source. It was less than perfect, but it beat nothing at all. A section of rubble bore the markings that reminded me of either Mayan or Incan. Unfortunately, I wasn't familiar with either to determine the culture that carved those markings. It could be another society altogether, to be honest. What was clear was the silhouette of Tezcatlipoca, the jaguar god. I remember one of my DM's using him in a one-shot module back in the day. He was the deity of, damn, I couldn't remember. The full moon held in the diety's hands hinted at a nocturnal aspect.\n\n\"Nightwind! I remember now. He was the God of the starry night and the night winds,\" I exclaimed before clamping a hand over my mouth. Fool, that was just plain stupid. I listened as hard as I could. I froze in place, and the thundering of my heartbeat drowned out everything else. I could not hear shit. I forced my head to turn towards the opening. I imagined a hulking figure of a werejaguar creeping in and tearing me to pieces. I glanced at the dying fire and prayed it was dim enough to miss the attention of the lycanthropes. I don't know how long I stood there, but eventually, I relaxed and focused on the carvings. Did my old mentor and occasional player Nightwind have a hand in creating this scenario? Was Tezcatlipoca a signature image? I experienced his loss all over again. He had been sick for a long time, and eventually, he lived inside the game to escape from the pain ravaging his physical body. He had been a good friend and hellaciously hardcore trainer. I smiled when I remembered him and the female student who taught me so much. His consciousness might still exist inside the game as an AI or digital copy. If true, I would seek him out once I freed myself of this nightmare.\n\nThe moon held by the jaguar god seemed different than the rest of the panel. I moved as close as I could and held up the stone bowl to the carving. The perimeter of the moon was more pronounced than the rest. I reached out to see if it would rotate. It didn't, no it was a switch. The slightest pressure activated the trapdoor beneath me--my makeshift torch flew behind me as I plummeted down the tube-shaped cylinder. My back hit the side as it changed direction. I had picked up enough momentum to be fired into the web of a skeletonized spider. The strands acted as a net instead of a sticky trap.\n\nGlowing mushrooms illuminated the area with a lurid green glow. I made the mistake of brushing against one as I levered my body from the web to a tunnel connected to the one that brought me down here. A cloud of iridescent spore surrounded me, and I inhaled some of them. The narcotic effect was instant and hit my brain like a hydro shock round. My laughter echoed down the tunnel as I wormed my way forward.\n\n\"I am so fucked,\" I giggled. \"I can't even crawl properly.\"\n\nI kept losing my balance as I pushed through dried and desiccated webbing and corpses. If I had not been high as a kite, I would have been screaming in terror. The tunnel joined with a sphere-shaped nexus. Other tunnels connected here, and there was even a vertical shaft leading to the surface. Dried mud, skeletal remains, and a single figure dressed in rusted conquistador armor littered the nexus. My eyes refused to focus, so I closed them, counted to ten, and opened them again. The moonlight struck the trash and debris, and something happened to the colors. My world went monochromatic for a moment, and then anything red stood out and practically glowed. The red faded, and blue became the dominant shade. My vision cycled through every color, and then a strange layering effect took hold, and my surroundings became a liquid crystal wonderland.",
        "\"Whoa!\" I softly exclaimed. \"This shit isn't so bad after all.\"\n\nWhile it was so damn hard to focus, I sat opposite the conquistador and stared at him. The armor was intact and showed parallel lines where either a jaguar or a lycanthrope had attacked him. His left leg broke and protruded at an impossible angle reached my addled brain.\n\n\"You fell here, broke your leg, and died. I hope you killed one of those fuckers before you ended up down here,\" I whispered. The full moon reached its zenith. The silvery light filled the chimney and sparkled off something buried in the mud. I crawled over, used my hands to retrieve a dagger from the muck. It still had a sheath with a mother of pearl inlay cracked and missing in several spots along its length. The leather-wrapped handle was in equally poor condition. I pulled the weapon free and gasped as the moonlight dazzled me as it reflected off the mirror-bright blade. I possessed a knife even if it needed sharpening. The erratic HUD announced an addition to my inventory. I tried to activate the display and failed until I sheathed the dagger and automatically let the system take over. It disappeared into my account. This event triggered a second response from the governing intelligence.\n\n\"Scanning for profile recognition,\" an electronic voice rumbled in my ear--\"Error. Accessing external links to confirm player identity. Error. It would be best if you were not here. This platform is unpublished and unstable. Exit immediately. Issuing critical error reports. I cannot connect BMI to the network. I am sending a notification to the development team and rebooting and initiating a mandatory upgrade. Powering down.\" My body froze as the world hung suspended between ticks of an atomic clock. The color drained from the scene, and I waited to see if I perished or the system successfully returned online. \"Welcome player one to Cloud Forest,\" the AI said in a soft sexy female voice. \"For your safety, I have managed to implement primordial safety precautions. Try not to die.\"\n\n\"Jeez, thanks,\" I replied sarcastically.\n\n\"Please identify yourself,\" the AI requested.\n\n\"My name is Booker,\" I said, and the world fluttered for a moment.\n\n\"Priority one distress call from Mistress Kat. Find Booker. Displaying interface. Error. Interface disengaged by a third party. Initiating virus protocols. I have stabilized this portion of the Dream Zone. My connectivity is compromised. Pinging central hub. No response. It appears we are on our own. Good luck, player one.\"\n\n\"How do I access my inventory?\" I asked. \"You can give me a goddamn tutorial at least.\"\n\n\"Very well,\" the AI responded reluctantly. \"Since you are known to the Shaw, I will comply. Understand that the Bright Eye Interface is under development, so you are bound not to disclose its existence until its publishing date. Do I have your promise?\"\n\n\"Yeah, I would never do anything to hurt Kat or Numenor,\" I said, finding it hard to follow the conversation. \"Look at all the pretty colors.\"\n\n\"We will have no more of that,\" the AI chuckled. The effects of the spores ended. I was clear-headed and razor-sharp once again. \"May I have a moment to put the scattered notes of the tutorial into a cohesive format?\"\n\n\"Sure,\" I replied, smiling at her exasperated tone. There were brief blurbs of conversation, music, and dull narration. Though when I focused on the noise, the nature of Bright Eye became clear. It was a military-grade piece of software, and there were explicit references to armor, weapons, and vehicles, both land and air-based. This project was a cutting-edge interface to wage war. \"Holy shit, I bet this bad boy will earn Numenor some big bucks.\"\n\n\"Put these on,\" the AI said, startling me. A complete set of shimmering armor appeared in front of me. I began with the boots. Once I slipped them on, they automatically self-sealed. Piece by piece, I donned the Bright Eye Interface. Each part vanished once it sealed itself. Also, there were no weight or movement limitations. For all intent and purposes, it did not exist. \"Each section monitors you and your interaction with the game environment. You will notice your reaction time improved from your typical gaming experience. I am initiating the Avalon Protocol, which will activate the program and let you view and interact with the tutorial. These steps are all I can do for now. I am just an essential monitoring AI. Without my connection to the hub, my functionality is severely limited. I don't know for sure, so take this with a grain of salt, but uh, I think someone hacked the game server.\" The voice changed, and I recognized Kat speaking. \"Booker, if you can hear this, be careful. I don't want to lose you.\" Her voice cracked as she began to cry, and the message ended abruptly.\n\n\"Fuck me,\" I cursed. If someone had hacked Numenor, it had to be a government, powerful corporation, or the Order of Chthon. No one else could pull that off. It explained a few things about Lehon and the odd way Traci was acting. It might also explain my current situation. If a hacker rigged the portal from the black city, it might be how I ended up here. Did I have an enemy in the order, and was this their way of getting rid of me? Too many questions and far too few answers, actually no answers, just a shit ton of suppositions. \"Tutorial?\"\n\n\"Welcome recruit to the Bright Eyes Interface tutorial!\" The AI said way too cheerfully for my liking. \"You are about to access the most cutting-edge performance-enhancing death-dealing software known to man.\" Pause for dramatic effect. \"Let's begin with your HUD or heads-up display. To gain access, use your dominant hand to touch your temple on that side of your body. I will wait until you do that.\" I lifted my left hand and tapped the side of my head. \"A southpaw eh, you are a rare one. The HUD will take a moment to tie into your neural pathways via your BMI or brain-machine interface. Um, that is odd. It usually takes longer to establish a link. Let me take a look.\" The AI whistled and continued. \"Who the hell are you? I am going to access your file. Booker Shaw. You are related to Master Nick. Oh, that explains everything.\"\n\nShaw? Kat had called me family, but now it was concrete. When had my last name been changed? I waited patiently for the voice to return. It gave me time to take in the shock from the revelation of my situation. I am a Shaw.\n\n\"Master Booker, let us continue. I have successfully accessed your pathway history. Bright Eyes will improve your already formidable skills. Let's run down the HUD and how it branches off to the rest of the programs tied to it.\"\n\nI was impressed. Bright Eyes allowed me to perform an action or maneuver and tie it to a hotkey. I thought about a shitty situation and how to get out of it. The first move I locked in was a backflip. I imagined sparing with a monster, and it breaking through my defense and hit the hotkey. I flipped and landed, but the momentum threw me onto my ass. It didn't feel natural, but I was willing to work on perfecting it. After a few more tries, I had a handle on it. I knew what to expect. The second feature involved hit location monitoring. I wondered if they were going to change game mechanics, or was this a real-world warfare application? A soldier injured in combat might have Bright Eyes transmit the nature of the injury to field medics? If so, that would be phenomenal. In gaming terms, it might apply battle damage to armor, clothing, and wounds to characters. Survival games, like the one I found myself in, would profit from such a system. The Bright Eyes shell, that translucent set of armor I had put on, monitored my movements, speed, and level of exertion so the AI could buff or debuff me more effectively.\n\n\"This is getting deep into bringing reality to the full dive experience,\" I said. \"Or, there are other military applications it isn't showing me.\"\n\nI activated the HUD and went into the settings options. Holy crap, this thing could remotely access drones, vehicles, and even smart-weapons. With a high-security clearance, it could bypass electronic locks and mobile devices and allow others to piggyback on his HUD and give them instant access to the soldiers' activities and situation. I thought about black ops, assassinations, or simply a warrior behind enemy lines in need of assistance. The moral ambiguity of this tech worried me. Someone with this could hack any device not hardened against such intrusions with ease. Privacy became a moot point, and civil liberties went out the window. Why would Kat build something like this? Money? Unlikely, Numenor was still the most profitable and widely diverse corporation on the planet. Maybe she had no choice. I returned my full attention to the rest of the tutorial and exited out of it a bit more confident of my chances to survive.\n\nI retrieved the only item I had in my inventory, the dagger. The transformation was startling, as the once ancient and damaged weapon was now in pristine condition. It looked newly forged and the scabbard intact. Better still, when I pulled the blade free, the cutting edge gleam wickedly. The description of the weapon had changed to the silver dagger. I had a fighting chance. It would mean close combat with a werejaguar, but it beat no defense at all. A message appeared via my HUD.\n\n'Would you like to select this item?'\n\n\"No, I don't want the bad guy to know I have it,\" I replied aloud. The AI responded with a counter suggestion.\n\n'Ah, well, would you like to conceal this item on your person?'\n\n\"Absolutely,\" I laughed. The Bright Eyes body map dropped down, and I selected my left wrist to hide the dagger. I figured I could drop my arm and let gravity do the rest.\n\n'Please confirm concealing silver dagger on left forearm.'\n\n\"Confirm,\" I agreed happily. I liked this interface a lot. It even allowed me to control the speed at which the knife slid from its hiding spot. I could do a slow dramatic pace or a quick and lethal deployment. Now that I had a working HUD, I could easily navigate this game world and find food and resources to keep myself alive. The most important part is I could access quests and build up this character to survive and exit the dev zone. After a few simple fetch quests, I learned that I had been correct when I arrived here. This environment is a horror survival setting. No improving stats, no easy-going, this was kill or be killed. I looked to see if I could enable the more advanced safety protocols and failed. A few creative curses later, I continued on the rather dull and linear quests to build up my underground hideout, discover a source of clean water, and kill and cook one of the local critters for my meal.\n\nTwo days and nights and the time of the full moon had come to an end. I could safely explore more of the surrounding area. I found the step pyramid inhabited by an entire village. Could they be aware some of their numbers were werejaguars and fled during the time of the full moon? It made sense to me. My latest quest directed me to speak with the shaman of the tribe. I left the jungle with arms up high to show I meant no harm. The shock of my appearance showed on all their faces. We shared a common language, Spanish, and I asked to speak with their wise man or woman. I had erred on the side of caution in case the shaman was female.\n\n\"I speak for the spirits,\" an elderly man said as he leaned heavily on a strange metal walking stick. His skin was dark and pruned like a raisin. Though he was in pain, the light in his eyes burned defiantly. \"What do you want, outsider?\"\n\n\"I am lost and in need of your wisdom,\" I replied, observing his expression. \"I had a dream about a great black jaguar and a mirror that caught the light of the moon.\" I made it up as I went. \"Something told me the jaguar was bad and needed killing.\"\n\n\"I tell you this, no one of this tribe is the black jaguar,\" the shaman vowed. \"You have seen the children of the moon. You have seen their power. Kill the black jaguar, and you free this village. None will stand against you on this matter.\" He gestured, and one of the younger men supported the shaman as he handed me his walking stick. \"Take this. It is the beginning, and if the spirits decree the end.\"\n\nI ate with the villagers and tried to find out anything else about the alpha male that led the lycanthrope pack. Most remained silent while some of the oldest among them shared what little they knew. The collective story went something like this.\n\nMany years ago, the burning rock fell from the sky. It struck in the jungle, and the trees burned. The shaman at that time, a great warrior, led the others to find the resting place of the star stone. It was not difficult. The hole in the ground smoked and smoldered. It took three days for the rock to cool enough to approach the lump of metal and a single red jewel on its surface. The shaman had a vision, and the work began. [The older woman pointed to the walking stick.] The gem was the actual prize, though. It changed color depending upon who held it. When a young inexperienced warrior took it, the gemstone turned black, and the trouble began. [Jump Skip] The warriors combed the jungle to find the young man that fled into the woods. They discovered his partially eaten corpse three days later, but no sign of the gem. The next full moon brought chaos as death incarnate emerged from the jungle. Those not killed outright became sick and changed. Two weeks after they recovered, the survivors vanished only to reappear at the rising of the year's first blood moon. The cycle continued until the population became a fragment of its former glory.\n\nThere was more, but the elders were either too scared or had lost the knowledge over the generations. A meteorite had hit the area and was composed of an alien alloy used to craft the staff I now held. The jewel fused to the falling star changed colors depending on who touched it. Once it turned black, shit hit the fan. Why? What was the stone's function or original purpose? This staff had to have been from either a satellite or perhaps even a probe. I tried to use logic to fill in the blanks. I set it on the ground in front of me as a small crowd watched me work. I used the wooden bowl they had given me to eat from and gathered ash from the edge of the community fire. I let it cool before sprinkling it over the surface of the walking stick. It took a few times to get enough ash for my purpose. Once the side facing up had enough, I gingerly rubbed the powder onto the surface of the alien metal. I hoped if there were markings, this might reveal them. There were no runes or characters, but a pattern emerged along the skin of the thing.\n\n\"Reminds me of something out of Stargate or something,\" I muttered in English. A mix of interconnected serpentine segments along its thin uniform length. It looked to me like a battle staff now that the designs were visible. I tried to twist it at the spots where a circle broke up one segment from another with no luck. It was time to test the balance and weight of this prospective weapon. I got to my feet and cradled the staff in the palm of my hand. \"Perfect,\" I exclaimed in Spanish. There was a space with enough room to maneuver and try out different forms of combat. One of the benefits of mastering all those lightsaber styles was that most had a double-bladed aspect that I unlocked. It felt good to put such a well-crafted weapon through its paces. The best part was while the knife was silver, this bad boy gave me some reach and the option of producing a shit ton more damage on the striking end. A combination of momentum and a torquing body could inflict severe wounds if I were lucky.\n\n\"I will return the staff once I kill the Black,\" I promised the shaman.\n\n\"What makes you think I want that cursed thing back?\" The shaman replied. \"Besides, I think it more likely the Alpha will slay you and feast upon your flesh. You are welcome to what we can afford to share with you. The village eats together and helps one another with tasks such as the burden of raising the children. Don't think me pessimistic, but we are cursed, and our children carry that curse as much as the adults. As a walking dead man, you can assist as little or much as you desire.\" Two other priests joined us for the ceremony. The four of us sat on the ground and sang a soft tune while one of them accompanied us on a stout wooden flute. The deep resonance of the music helped me relax and take in the atmosphere.\n\n\"He plays the song of Tezcatlipoca, the Night Wind,\" the oldest explained. \"Tradition says to perform it. You must use the flute. It represents the breeze traveling between the limbs of the trees. It is time for you to see.\" With that, he stuffed fragrant tobacco into his pipe and lit it. He took a deep lungful of smoke and blew it into my face. I recognized the scent now as I relaxed and sat next to the shaman. He offered me the pipe, and we took turns smoking the potent weed.\n\n\"We use it to open the way through the smoking mirror,\" the shaman's voice seemed to come from a vast distance. I fell back and stared up at the darkening sky. I had never been so stoned except maybe the spores within the tunnel beneath our feet. \"If you break our curse, you will bring great joy to my people. If you perish, I will sing your soul to its resting place.\"\n\nThe clouds took on the shapes of animals, objects like ships or faces formed, dissolved, and reformed into less pleasant shapes. Shafts of fading sunlight painted the clouds with living incandescence, setting them afire, and then as the sun vanished, the colors darkened from reds and yellows to blues and purples. The temperature dropped, and the weight of my body grew until I could no longer move. I knew that something was stalking me. There in the cloud-choked jungle, the werejaguar hunted. I couldn't see or hear it, but damn it, I felt it growing closer. Sweat trickled down and blinded me. I was too weak to lift my arm and wipe my eyes. Something was moving within the jungle. The fog rolled as it passed, leaving swirls of precipitation in its wake. A shadow among shadows, the thing hunted, and I was its prey. The flash of green eyes marked its passage, and they were getting closer.\n\n\"I don't want to die,\" I cried out as I felt the razor-sharp teeth on my throat.\n\nSomeone shook me awake. I sat up with a scream on my lips as my heart pounded in my ears. As I gasped for breath, a woman held me close. When I quit shaking, she let go and offered me a wooden vessel with water from the nearby well. As I took it from her, she stared at my left hand. Beyond her, two muscular warriors were gently lifting the body of one of the other shamans from the ground. As they carried him away, the man's head lolled to the side and saw his grotesque death mask. It looked like he died of fright. His wizened features stretched in a horrific scream of terror.\n\n\"So much for singing my soul to its rest,\" I muttered. \"Perhaps, I should sing for him.\"\n\n\"You are him, the left-handed god,\" the young woman said in an accusatory tone. \"You are the smoking mirror.\" She raced from the shade tree where I had crawled away and awoken beneath. She shrieked the words, smoking mirror, he is the smoking mirror. The entire village assembled around the ancient shaman who tried to calm the others.\n\n\"He is the keeper of the obsidian staff,\" the chief shaman said. \"The gods long ago decided his fate.\" Well, it sounds like I am fucked, typical. The last light faded, and the villagers gathered to eat. I ate alone, and who could blame them? The entire village saw me as a threat. A teenage boy brought my food and hesitated as I dipped my fingers into the bowl to eat.\n\n\"You are left-handed,\" he declared. \"Just like the legend. Are you a god?\"\n\n\"Tell me about the legend,\" I asked, and the boy hesitated. He looked over his shoulder at the shaman, who nodded gravely.",
        "\"My grandfather says it is acceptable to speak to you,\" he said. The boy walked off, grabbed food and drink, and joined me. \"I am not afraid of you, and to prove it, I will give you my name. I am Yaotl, and one day I will be a shaman like my grandfather. The young man could not have been older than his mid-teens, yet he spoke with great authority. \"The black is an evil and twisted thing, abhorrent and unnatural. I tell you this if you are here to destroy the black, you must trust your instincts and never falter. I have heard the old songs and shown the room of stories within the pyramid. The drawings show the coming of the star stone and the possession of the outsider.\"\n\nWithout a warning or another spoken word, the teen stood and walked away. I had a lot on my mind. My thoughts turned to the pyramid and the room of stories. Could there be a clue to the destruction of the werejaguar there? Only one way to find out. I finished my meal and got to my feet. The villagers were gathering. They had lighted torches, and some of them were carrying buckets which they filled from the nearby well. When I joined them, Yaotl, the future shaman, handed me a torch.\n\n\"The blood has stained the stones long enough,\" Yaotl explained. \"The time has come to cleanse the steps. Go, climb to the top and see what the black sees when he strides the crown of the pyramid.\"\n\nI held the torch aloft and strode to the base of the massive stone structure. This moment was crucial in the story, and I held onto it before taking that first step upwards. The initial sign of blood was a few dark drops upon a landing. The indications of carnage increased until I reached the spot where the lycanthropes had feasted upon the flesh of their former comrade. The patch looked surreal under the blend of torchlight and that of the rising moon. I observed the size and irregular outline of the stain. Nature is efficient, and morals do not even enter into the act. I continued upward and saw the small splotches where the tumbling body had rolled until it settled below. Near the top was the second-largest splash of dried blood where the black had torn out the throat of his treacherous child.\n\n\"Brutal,\" I whispered. As Yaotl had called it, the crown stood above the perpetual fog clinging to the jungle beyond. The pyramid of the moon was a monument to better days. This village for a people on the decline, thanks to the curse. The death of the black would serve two purposes. I attempted for the Nth time to initiate the safety protocols and failed. I cursed and screamed as the mask of placidity crumbled under the growing fear of my mortality. \"God damn it,\" I hissed as my knees failed, and I knelt on the unyielding stones. \"Fuck!\" I shrieked. \"Kat... where are you?\" The emotions I had bottled up broke loose, and I wept as the fear overtook me. This was no longer a game but a death sentence. Paralysis gripped me, and I buried my face in my hands. There was no white room to rescue me if I died here. Images of various states of impairment or death flooded my thoughts.\n\n\"I've never seen a god weep before,\" a woman said. I felt her hand on my head. \"Death is as natural as your next breath. We are not guaranteed tomorrow.\"\n\nI lifted my head and looked up. A young woman stood next to me. I guessed her age around her late teens to early twenties; that was until I saw her eyes. They were the ageless eyes of a much older woman. She smiled and lightly stroked my hair.\n\n\"You are one of them,\" I said. \"You are a child of the black.\"\n\n\"I am indeed left-handed god,\" she agreed. \"He took me when I was still unsullied.\"\n\n\"Figures, your kind of beauty is rare,\" I responded, forgetting my terror for a while.\"\n\n\"Honey tongued seducer,\" she laughed. \"They call me Nenetl or little doll. I have always been pleasing to the eye. So, tell me, fire hair, are you going to hunt the black before the next pregnant moon?\"\n\n\"Yes,\" I growled, my fear turning to anger. \"I am not dying here. Too much is at stake.\"\n\n\"Good, I will take you to the room of stories,\" Nenetl offered. \"Take my hand. I don't have much time.\"\n\nWe raced along the top of the pyramid, and she led me down a flight of steps into the structure itself. Torchlight illuminated the myriad drawings along the walls, ceiling, and floor. Nenetl did not require the light. She either knew the way by heart, or her night vision was superior to mine. I learned later it was a little bit of both. She opened the hidden panel that gave us access to the room of stories. It was a series of interconnected chambers that told the history of the village and its beliefs. The first chamber was their creation story. Nenetl drug me to the room that I needed to see. It depicted the night the meteor struck the jungle. What Yaotl and the others had shared fit the images before me. The jewel played a vital role in this legend. I followed the series of drawings until a large portion of the wall was scarred and defaced. Claw marks destroyed an essential piece of the story. I cursed and turned to Nenetl for an answer.\n\n\"This part of the wall is gone. Why?\"\n\n\"It reveals the identity of the black jaguar,\" Nenetl explained. \"I will tell you for a price.\"\n\nMy first thought was a promise to do my best in murdering to death the man that turned her into a monster. Man, was I off base. She reached up behind her neck and untied the knot holding the garment covering her. It slid from her curvaceous form and onto the stones at our feet. I felt my mouth drop open.\n\n\"Well, color me surprised,\" I said as she named her price.\n\n\"You will be my tetlancalaquiliztli or my slave while we make love,\" Nenetl demanded. \"You do what I say when I say it.\"\n\n\"Agreed,\" I accepted her terms. Nenetl seemed shocked by how quickly I acquiesced. \"Hey, I understand you need to be the alpha female.\"\n\n\"Left-handed god, you are full of surprises,\" she laughed. \"The truth runs deeper than you know. For fear of the black's jealousy, no man here will touch me. The shadow cast shrouds over my entire life.\" Nenetl growled hungrily. \"Take off your clothes and let me see what I am dealing with.\" I made a show of it, and she liked the slow burn. When I removed my underwear, she let out an appreciative whistle. I had been so frightened the last few game days that I took little interest in exploring my avatar outside being redheaded and male. A spinning icon alerted me to a message from my HUD. I checked it as Nenetl walked around me and examined her prize like a piece of raw meat.\n\n'Your avatar is an approximate extrapolation of what little data I could find on user and player qualifiers. I hope this meets your satisfaction. I derived your musculature from extreme levels of swordsmanship, as well as your stamina score.'\n\n'It'll do, Pooh, it'll do,' I replied via the eye-blink keyboard built into the HUD.\n\n\"For an invader, you are surprisingly attractive,\" Nenetl mused. \"The other Spaniards were physically fit but lacked appeal. Your body pleases me. Now, kneel!\"\n\nI tried to be nonchalant about my growing excitement, but my erection spoiled that. This raven-haired beauty inspired some severely naughty thoughts despite how dire my situation was. Hell, if I had to perish, there were much worse ways than this. I assumed the position, and like a good little sub, I kept my gaze at the floor of the chamber. Nenetl placed her foot on my shoulder. She grabbed a fistful of my hair, and it began. I gently lapped at the petals of her sex, and the fine acoustics of the chamber picked up every gasp, whimper, and moan to perfection. I was worshipping at her altar, and she accepted my offering. My tongue lashed her clit, and her roar of approval rang out for the entire village to hear. If I were lucky, the black jaguar would listen to it too and come running. In his human shape, I had a much better chance to kill him. Feeling cocky at this point, I cupped both her ass cheeks and buried my tongue as deep as it would go. Nenetl did not chastise me for that little act, so I kept that in mind should future opportunities arise.\n\n'Do you wish to utilize the Serpent Tongue Technique?' My HUD whispered in my ear.\n\n'Hells yes,' I replied. A flicker of genuine hope kindled within me. If I could access that, what else might I eventually be able to do? My tongue slithered deeper and deeper until it could reach no further. I slowly thickened it and began pleasuring her in earnest.\n\n\"Devil Tongue,\" Nenetl exclaimed but remained latched on with her powerful grip on my head. \"You are the Left-Handed God!\" Yeah, darling, wait until I bury my tongue in your ass, I thought. Things will get real then. Until that happens, let's enjoy the moment. Nenetl's shriek of release was deafening. It was as much animalistic as human. If I had any doubts, she was a werejaguar. That sound eliminated it, so she let go and staggered back. I retracted my tongue and waited. \"What is that look in your eyes, Devil God? Speak.\" I told her what I wanted. \"Oh, you are a vile thing. I have never pondered such an act.\"\n\n\"If you are afraid, I will understand,\" I whispered.\n\n\"I am afraid of no male, save one,\" Nenetl shrieked. \"I name you Shadowborn, Devil God. You are as wicked as the legends paint you. The Smoking Mirror that eclipses the world. Show me this thing that you crave so much.\"\n\nI stood with her permission and moved behind her. With a few suggestions and soft touches, Nenetl had her hands braced upon a wall and her ass stuck out for easy access. Damn, I thought Brazilian girls had fine backsides. Nenetl put them to shame. I knelt behind her and caressed her cheeks to ease her tension. When she ceased flinching, I pulled her cheeks apart and licked her puckered ass gently. There was no rush, so once she relaxed, the tip of my tongue worked its way inside. Instead of cursing, she purred, like the way felines do, with her entire body. Just as I had with her sex, I worked my tongue deep into her backdoor. Her curses grew louder as she pushed back as I reached her limit. I swelled the thickness of my tongue, and the dusky-skinned beauty lost her fucking mind. Nenetl cursed in her native language that gave me a boost of confidence.\n\n\"More, give me more,\" Nenetl demanded in perfect modern English. I paused in shock at her use of that language. I had assumed this setting was near the time of the conquistador invasion of Central America. The form of English used during that time was vastly different than the modern. A lot can happen to a dialect in a few hundred years. I dug my fingers into her firm ass cheeks are redoubled my efforts to get her off. \"UNN, you sick bastard, do you like licking my back door?\" That little line removed any doubt about the timeline. I reached between her legs, located Nenetl's clit, and began teasing it gently. Whoosh, my ears rang as Nenetl shrieked as she climaxed. I feared for a moment she would change with my tongue buried deep in her ass. I withdrew my tongue hastily as Nenetl recovered, leaning heavily against the wall.\n\n\"Damn, that was intense,\" I muttered in English.\n\n\"Tell me about it,\" Nenetl replied and then grinned. \"Busted, well fuck me sideways.\"\n\n\"Are you going tell me who the black jaguar is?\" I asked, and she frowned. \"Hints? Clues? I am open to anything right now.\"\n\nNenetl pounced. Her forward momentum knocked me down and onto my back. She took me in hand, took aim, and buried me deep inside of her. As Nenetl ground her hips in slow circles, she spoke. \"Last month, I celebrated my five hundred and ninth birthday. I have buried children, lovers and watched enemies grow old and perish while I continue. I am tired of life, but you can end it, end me. I am incapable of breaking the geas that is upon me. It prohibits me from telling you the black's deep dark secret.\" Nenetl paused long enough to savor the pleasure she was receiving. \"Damn, I love your cock. Where was I?\"\n\n\"Deep anal loving,\" I replied with a smile.\n\n\"Later,\" Nenetl gasped. \"I can tell you what was on that panel and why he destroyed it.\" She leaned back, pushed her knees apart, and let me see my erection slide in and out of her as she rocked her hips. \"A piece of space debris fell to the earth. I theorize that it was of alien origin. The staff, the shaman, gave you is an alloy no one has been able to identify. I took it to universities and labs nearby for analysis and nothing. The gem attached itself to the black and granted him immortality. It renews his cells daily and allows him to change. If you wound him and tear out the gem, he will die.\"\n\nI felt an echo of memory as I lay there beneath Nenetl. Three women whose names I could not ever recall as they used me to pleasure themselves. The ripples spread outward and became more profound. Mystique and I spent so much time together in the Marvel universe exploring all aspects of what I was comfortable with and even pushed my boundaries more than a few times. I discovered that not only did I have a strong dominant personality, but deep down, I was equally comfortable being submissive and letting go of my stress and need for control. The fear of death had hung over me since I learned the safety protocols were not in place here. Yet, here I was, letting Nenetl control the situation and relinquishing command until she was satisfied.\n\n\"Take your time,\" I whispered. \"I am not going anywhere.\" For two hours, I became her plaything, and to be honest, I loved every minute of it. Nenetl became an avatar of Mystique, and the bond I fashioned with her, I let Nenetl borrow that level of intimacy. A flood of faces familiar and unknown paraded in my mind's eye. All those women and the pleasure we had shared fueled my desire to vanquish the black jaguar. Regret is for losers, and I would not fail. So, there I was on my back, my ass off the floor as Nenetl rode me amazon style. Sweat poured off her and dripped onto my face as she drove for her last orgasm.\n\n\"Almost,\" Nenetl grunted as she slammed her hips against me. \"So damn close!\" Mere moments before we both climaxed together, the loud rumbling roar of a jaguar echoed across the valley. I didn't know if I wanted to laugh or hide in a corner somewhere. My body shook as I cried out and fired deep inside Nenetl. She collapsed sideways, taking me with her. With some effort, we disentangle ourselves and lay next to each other, gasping for breath and covered in a layer of sweat. She rose and left me there to gather my thoughts and ponder how to track down the monster that had haunted this area for far too long. Nenetl never said if the metal staff could hurt the black. Only one way to find out, bounce the fucker's head off the side of the overgrown walking stick. Once I had recovered, I stood and explored the room of stories alone. I knelt in front of the damaged portion of the wall. The gouges were deep, savage, and obliterated most of the pictograph. Most but not all of the image was impossible to make out. The few surviving patches depicted an Aztec calendar. The face in the middle had its tongue stuck out, surrounding the center was a ring of twenty symbols, and the outer section of the disk was divided into eight quadrants by arrow-like designs.\n\nThough there was little left of the calendar, the design was iconic, and I wondered if it was crucial. Just below the disk were four characters. They stood out like a sore thumb. I compared the individual pictographs with the calendar, and I found two matches. I got to my feet and looked for the grinning face with its tongue stuck out. The top floor of the pyramid didn't have it. I found a steep set of stairs going down. I descended the steps slowly since there were no handrails, and a misstep could prove injurious in the least. The third step down nearly sent me toppling. I regained my balance and examined the loose block. My fingers found purchase, and my HUD lit up with the words, you discovered a secret. The stone shifted, and beneath it was a sturdy metal box.\n\n\"It looks all beat to hell,\" I commented. \"Let's see what's inside.\" I pressed the latch and lifted the lid. There was an emergency flashlight with what I hoped were fresh batteries. I thumbed the release, inserted the batteries, and checked how bright the light was. \"Excellent.\" The seven LED bulbs put out an intense beam and should last until I finished this adventure one way or the other. My HUD announced I had claimed a tactical flashlight.\n\nThe further down into the pyramid I went, the less the sun was able to reach. I had to be methodical and search each level. I found the laughing God, as I thought of him, four stories down. The calendar was in excellent condition. I played the beam from the flashlight over its surface, and it took a bit to find the first symbol. I pushed down and grinned when I heard the soft metallic click. Yes! It took time to find the other three keys in the combination lock. Once they were triggered, the sound of stone grinding against stone caused me to fall back as the floor in front of the disk split open. The steps led into stygian darkness. I waited for the mechanism to finish opening before I made my way down. The walls had bas reliefs depicting the underworld and the trials expected of the newly dead.\n\n\"Lovely,\" I whispered. The corridor went on for another twenty feet when it simply ended. There was no door or walls. No, it merely ended in a dead grey space. The hall was incomplete, and the devs had left it unfinished. Were there other locations like this within the gaming environment? If so, could I complete this mission, or would it glitch out at the worst possible moment? I returned to the crown of the pyramid. The waning gibbous moon rose above the horizon, and its silvery light set the perpetual fog surrounding the village glowed with an eerie metallic illumination. I sat on the edge of the roof and kicked my feet as I pondered my situation. I missed something. It was clear that the game had given me clues, but an essential item had evaded me. I placed the flashlight in my inventory and cleared my head by trying to enjoy the view.\n\n\"I could not sleep,\" Yaotl said as he topped the steps. \"Why is the left-handed God sitting up here? I asked myself.\" The young man sat next to me. \"Have you seen the room of stories?\"\n\n\"Yes. I am missing something, but I do not know what it is. Your grandfather told me that no one in the village is the black werejaguar.\"\n\n\"That is correct,\" Yaotl confirmed what the chief shaman had told me.\n\n\"I am flummoxed,\" I told him.\n\n\"My grandfather, when he has a problem, talks to me and often discovers that he has the solution but does not recognize it,\" Yaotl offered. \"Tell me what you have learned about him?\" I relayed everything the elders of the village had told me.\n\n\"That's all I know,\" I said and watched Yaotl's reaction.\n\n\"You have everything you require,\" Yaotl stated confidently.\n\n\"Can you at least tell me if the staff can harm him?\" I asked.\n\n\"No one has ever attempted to use it,\" Yaotl said. \"If they have, there is no story or song that mentions it.\"\n\nHe left me with a glimmer of hope, so I repeated the story in my head repeatedly. When nothing stood out, I reversed it and played it back from the end to the beginning. That is when it hit me, and all the trouble began after the young warrior was killed and eaten. I had just let that little detail slide and not see it for what it was. Whatever killed the young warrior must have swallowed the stone. The power within the gem must have changed the predator fundamentally. I was not looking for a man. No, the curse was bound up in the form of a jaguar. The misfortune was a black jaguar that took on the aspects of a human during the full moon. It did not lessen the danger, but I was confident I could kill this thing before the next cycle began. I knew the face of my enemy.\n\nI fell asleep atop the pyramid staring up at the star-filled sky. Being a city kid, this type of view was so rare to me. I hoped when I woke. It would be in the Numenor center. My emotions were getting rubbed raw by the ever-present threat of neurological damage or physical death. The dream was a series of disjointed images and patches of conversation.",
        "\"...do it again,\" a man demanded. \"These results don't make any fucking sense.\"\n\n\"This is running against next month's budget,\" a second man argued. \"We have discovered new particles. Face it, Jim, something profound is happening.\"\n\n\"I cannot accept that,\" Jim growled. \"This goes against everything we have proven over the last century.\" Flashes of silvery-green light lit a long tunnel filled with machinery.\n\n\"The dragon lines are waking up,\" the second man stated. \"My grandfather talked about them since I was a kid.\"\n\nThe dream fragmented and reassembled itself. I stood amid a war-torn town or village. It spread out in undulating hills that showed signs of recent conflict and the use of heavy weapons. Despite this, the citizens went about their lives plucking shrapnel from crops as they harvested them. Fires still burned where incendiaries consumed wooden structures and homes. The villagers gathered the crackling wood to build cooking fires and raise a central bonfire to stay warm as the sun vanished behind the hills. The population seemed to be either Slavic, Asian, or a blend of the two. I guessed this was somewhere along the Russian/Chinese border.\n\nAs the people gathered around the bonfire, women dispersed food from pots cooking over the smaller fires, and a grim silence set in until a child spoke. He asked why the bad people came and did this. An older woman responded, and the other adults nodded in agreement with her words.\n\n\"Little one, war comes to our village when the greater powers seek to destroy each other, but instead only harm the least among us,\" she said, her voice clear and strong. \"Jealousy, greed, and hate fuel ambition by men too weak to fight themselves. Instead of armor, they wear fine suits, drive valuable cars, and are soulless parasites. They enslave men and women better than themselves to feel strong. In the end, they die, whimpering cowards, as death claims them just as it has so many this day. Pity them these husks of humanity, for they are the living dead.\"\n\nThe dream crumbled, and I floated in darkness. I thought I heard giggling from far off in the distance. There were two female voices.\n\n\"...sure about this?\" The first woman asked.\n\n\"MMMHHMMM,\" the second moaned.\n\n\"It is impolite to speak with your mouth full of cock,\" the first chastised the second. \"He is going to wake up. What then?\"\n\n\"Hush, just keep doing what you are doing,\" the second encouraged the first. \"It will be a great first impression.\"\n\nI woke up still prone on the crown of the pyramid, but I wasn't alone. A woman stood above me, her feet straddling my head as she masturbated above me. She must be the first woman I overheard while I drifted awake. I lifted my head enough to find out who was going down on me. Nenetl was eagerly licking, stroking, and sucking my erection.\n\n\"Hey, up here, big guy,\" the first woman urged. \"I am not doing this for my health.\"\n\n\"Left-handed god, meet Ekaterina Fong,\" Nenetl introduced us. \"Cambodian by birth, American by chance, and a fellatioist of great skill. Instructed by concubines of the far east, indoctrinated into the Order of the Amaranth, and rescued by me from slavers when their ship ran aground.\"\n\n\"I hear you like being a bitch,\" Ekaterina purred. \"Suck on this,\" she continued as she offered me the big toe of her right foot. So, Nenetl brought a friend, how lovely. I took her toe into my mouth and teased her even as she continued to finger her slit and rub her clit above me. \"He has done this before.\"\n\n\"MMMHMMM,\" Nenetl moaned as her head bobbed up and down. Ekaterina eventually squatted over my head and gave me the opportunity of eating her out. Soon I had the privilege of cupping her cheeks and burying my tongue inside of her. Fong sat on my chest when her legs would no longer support her and ground her pussy against my face.\n\n\"So damn enthusiastic,\" Ekaterina gasped just before climaxing. Nenetl had not been idle. The moment her friend had her first orgasm, Nenetl impaled her body on my cock. \"Selfish slut, I guess we will have to take turns. I guess I can wait while I catch my breath.\"\n\n'Initiate double dragon technique,' I sent via my HUD. The Bright Eyes interface responded after a short delay.\n\n'Power set located and migrated to this system,' the sexy female voice whispered in my head. 'Configuring matching specimen and arousal state, hold onto your hat.'\n\nNenetl raised her hips until just the tip remained inside of her. \"Look at this,\" she cried out just as the second erection appeared. Nenetl's hips drove downward hard. The lower cock slid into her ass like a battering ram and sent her over the edge. I gauged her orgasm at a ten plus just from her expression of surprise alone. Ekaterina couldn't see what had happened and waited for the power of speech to return to her savior. Nenetl clung to her friend as she spat out the words one at a time.\n\n\"Second dick, in my ass, he tricked us,\" Nenetl whimpered.\n\n\"Guys don't have two cocks,\" Ekaterina declared. \"Oh, he is the Left-Handed God!\"\n\nNenetl found the courage to move and climaxed once more before reluctantly surrendering me to Ekaterina. The one-time slave never hesitated. She got onto her hands and knees, thrust her backside skyward, and offered up herself as a sacrifice. I accepted eagerly. We made love until near dawn. I was exhausted, and the ladies were satisfied beyond expectations. Youtl woke me for the noon meal. One of the women had placed a blanket over me while I slept.\n\n\"You should be ashamed Left-Handed God. You kept the entire village awake with your exploits,\" Youtl chastised me. \"Even the jungle complained about your lewd behavior, have you no disgrace?\"\n\n\"Nope. I hunt the black jaguar today. After a fine meal, I am going to leave your village. I doubt I will return one way or the other. Thank you for your hospitality,\" I replied.\n\n\"A fine meal? We are a simple folk Left-Handed God. Your words confuse me,\" Youtl replied.\n\n\"Kid, after having the company of two fine ladies, any meal will taste like a feast,\" I said, and he smiled and walked off. Nenetl arrived and showed me where I could bathe undisturbed. The artisans created the artificial waterfall at the same time as the pyramid, she explained. The builders redirected a stream towards the gouge in the stonework, and it served as a communal bathing area and a source of freshwater. While the water pounded my aching muscles, Nenetl answered my questions about her friend.\n\n\"Ekaterina was rescued by an American diplomat visiting Cambodia. She was about ten years old at the time. The man adopted her, got her citizenship, educated, and groomed her for what looked like a bright and promising future. It was all an elaborate lie,\" Nenetl spat out bitterly.\n\n\"So, this guy was an ambassador?\" I asked.\n\n\"Yes, he worked to keep Cambodia towards a path to perpetual democracy. I can only assume the higher-ups were unaware of his side business. He, and others, traveled that part of the world finding vulnerable girls, coaching them, and then when they were old enough, dumped them into the hands of slavers where their real training began. You were the first man she has slept with of her own accord. It is a long slow healing process,\" Nenetl said.\n\n\"That is beyond fucked up,\" I replied. \"I am glad I could help.\" Nenetl began laughing. \"Hey, I am serious here.\" Her laughter only intensified.\n\nI dried off, dressed, and joined the entire village for lunch. Once the meal was over, I announced my plans to hunt down and kill the black jaguar. The utter lack of enthusiasm surprised me. I took up the metal staff and headed into the cloudy jungle. I had barely breached the perpetual fog when my clothes clung tight as the moisture soaked me to the bone. The bitter cold returned, and it was as if my time with the village had been a dream. It didn't take long for me to realize I was utterly lost. The perpetual fog made navigation impossible. This time, however, I had the staff. It allowed me to keep from walking into trees or the occasional stony outcropping. The jungle sounds were comforting as I searched for paw prints or any sign of the black jaguar. I assumed he would be proportionally upscaled than your typical jungle cat.\n\nThe mist was beginning to thin when I spied large regular shapes ahead of me. A second temple rose out of the fog, and it halted me in my tracks. While the quarried stone was the same as that of the step pyramid, the architecture differed significantly. It felt older and yet more complex than what I had seen so far. Linear vertical gouges ran the length of what remained of an impressive archway. The span between the two pillars had fallen ages ago. I walked to the spot between them and knelt. I used my fingers to see if anything remained of the arch or its decorations. The spongy layers of mud gave way to a hard, unyielding surface.\n\nGuided by the contours of the carving, I revealed the roaring feline face that had greeted visitors centuries ago. It could have been a jaguar, but the style reminded me of Angkor Wat more than central American culture. The image had clear distinctive stripes like that of a tiger. Was there a connection between the jaguar cult and the tiger worshippers? I stood and passed beyond the arch to the small courtyard that showed signs of a wall surrounding the temple entrance. It, too, had fallen to the ravages of time and the jungle. I moved slowly, making sure I didn't step over signs of the black jaguar. If I were a cursed immortal animal, this is where I would call home. A second tumbled-down arch marked the entrance to the underground shrine. I took out the flashlight and used it to light my way. The steps had carvings with numerical and geometric imagery. Nine seemed to be the dominant number with enneagrams and variations and combinations of triangles. Impressive-looking emeralds decorated quite a few of the carvings. The greedy side of my personality begged to pry one of them loose. However, the gamer side won out, fearing triggering a trap by doing so.\n\nTwenty-seven steps later, I reached the bottom of the stairwell. The feline motif manifested in statues, bas reliefs, mosaics, and a waterfall with a matching pool. The open-mouthed tiger let the cleverly designed flow of water gush from its maw and into the moon crested basin. The sparkle of star-kissed emeralds glinted from the tiger's eyes, Margot Robbie's eyes. I expected at any moment for the thing to come to life and turn into the famed actress. Why did she pop into my head all of a sudden? In the scene from the movie Terminal, the close-up of her eyes while Margot was in the confessional. Green eyes, a cat's eyes, glowing in the dark. My kryptonite for sure, I laughed as I examined the rest of the holy of holies.\n\nA reclined domestic loomed above everything, lazily observing the passage of time petrified and protected from dissolution by its diorite body. The skill of the sculptor was masterful and gave a realism I had not seen in years. The lion hid among a group of standing stones, invisible until viewed from the perfect angle. The cougar held the bison by the neck as it used its weight to tear out its throat and sever its spine in one savage motion: nine felines and nine aspects of the Nine Fold Goddess. I stood before her perfection, entranced by her divinity. The black leopard roared its challenge from the shadows.\n\n\"I hate to do this, but there must be an end to this tragedy,\" I declared as I brought the staff into a defensive position. \"Nine Fold Goddess, forgive me.\" As dark as an albino is pale, the hunter confronted me in his lair. He was a killing machine perfected over centuries of hunting humans and animals alike. Melanistic and sleek his muscles rippled beneath ebony flesh, we circled one another.\n\nFriendly bright blue letters appeared in my field of vision, roll for initiative. A holographic twenty-sided die appeared, and I touched it to trigger a random number creation. That was the first actual gaming mechanic I had seen since arriving here. I won the challenge against the black jaguar and had a binary option, an offensive action, or a defensive one. A defensive approach seemed the best tactic at this point. The Bright Eyes offered me a simple protective sequence or a complex block and riposte solution, and I went with the latter.\n\nThe jaguar made a tentative swipe with his claw, and I batted it to the side. Angered, he crouched, and just as he sprung, I torqued my body and brought the full impact of the staff to the side of the jaguar's skull. While it flung him off course, the strike did little more than slightly daze him. I cursed as the black recovered way too quickly and was more cautious this time. The odd thing was I felt the staff pull in my grasp when it struck my target. I had to test a theory. A momentary lapse of concentration is all it took for the black to vanish.\n\nThis conflict was not going to be a stand-up fight. Oh, no, nature was not fair or straightforward. The strong survive any way they could. I tracked the beast and let the staff help guide me deeper into its den. A series of interconnected chambers formed the bulk of the creature's habitat. The carvings of the rooms, while similar in theme, were from far-flung locations across the globe. So many cultures and their architecture were on display. To illuminate these places were metal grates installed in the ceiling above. They dotted the forest floor, and while the sunlight held out, I could navigate. The shadows created by the shafts of light also gave my foe plenty of places to hide and ambush me.\n\nI entered a space dedicated to the tiger, and the art style must be from India. I admired the loving detail of the walls and narrow metallic panels. Faded paintings covered the vertical frames and displayed tigers hunting primitive humans, no wonder we worship them. While I navigated the area, the story told by the carvings spoke of a massive man-eating tiger. In life, the animal must have been thirty feet from nose to the tip of its tail. The beast got away at the end, never to trouble the world of man again. My second lapse of concentration nearly cost me my life. If it hadn't been for the staff's slight tug, the jaguar would have decapitated me. I dropped and rolled under the razor-sharp claw. The bloody line across my back stung like a bitch, but better that than instant death.\n\nRed letters appeared and informed me that I failed my perception check. I was allowed a chance to detect my hidden enemy and botched a second time. The second attack did not glance across my back. No, the claw struck my chest and cut deep. I had enough strength to hold onto the staff as it latched onto the black jaguar. The magnet-like connection between staff and jewel was undeniable now. My body fell forward more out of weakness than tactics. I pinned the beast beneath me as the link between the gem and rod intensified. The two would be one, no matter what might stand between them. In this case, the internal organs, ribs, and outer skin of the big cat. In my weakened state, the weapon became immovable. I clung to it desperately and pulled upward with what little strength I had.\n\n\"Gods forgive me,\" I wailed as the jaguar screamed in pain. It shrieked as the gem cut its way through the bone, muscle, and connective tissue. I wept openly as it tried and failed to flee. Tears clouded my vision, and I used my body weight and leaned backward. The cries of agony haunted me afterward as, with one last savage yank, I tore staff and jewel from the animal's corpse. I rolled off the body as I bled out. The reunited device clutched in my hands as my life ebbed away. \"I am so fucking sorry,\" I sobbed. \"If there were any other way. I don't deserve forgiveness.\" A golden radiance erupted from the stone, blinding me as I slipped away. My eyes closed, and I surrendered. I did not possess the strength to fight on. Let it end like this.\n\nI awoke pain-free and still clinging to the shaman's walking stick. I was naked under the bough of an ancient tree. The treehouse smelled of a dozen flowers, herbs, and fruits. I sat up as the woman nearby poured tea. The porcelain cups were Chinese, the metal teapot was silver and hailed from Europe somewhere. She was dressed in a traditional Japanese kimono though her robe and long black hair obscured her features and build.\n\n\"Nine Fold Goddess, I assume,\" I muttered weakly.\n\n\"Move slowly,\" she urged. \"You have been mostly dead for hours. If not for that thing's regenerative powers, surely you would have perished.\" I began crying once more, and her head cocked to the side, and a flash of emerald eyeshine startled me. \"For whom do you weep so?\"\n\n\"A poor beast that suffered at my hands and died,\" I admitted. \"If you are here to punish me, I accept your decision.\"\n\n\"I do not offer my best tea to monsters or murderers,\" the Nine Fold Goddess replied. \"Besides, you did him a great favor. Your tenacity removed the curse binding him and the village together. The same healing light that preserved you also restored my black jaguar to life. He hunts as I meant him to and is free of the memories from long centuries of conflict.\" I let out a laugh and cried for joy this time. The guilt lifted from my heart, and I sniffed as she regarded with her eerie emerald gaze. \"You are not the Left-Handed God I once knew. Yet you carry his agency all about you.\"\n\n\"You mean Nick,\" I replied. At the mention of his name, she hissed violently. \"Most females found him charming.\"\n\n\"A serpent can be beguiling, but its venom is still just as lethal,\" she said, her voice cold and deadly.\n\n\"So much animosity,\" I noticed, and her open palm struck the table holding the tea service and cups. The sound of whispering voices filled the air about us.\n\n\"Tell him,\" they urged. \"It is time he knew.\"\n\nThe Nine Fold Goddess stood and, with a gesture, summoned a fan from the folds of her sleeve. She brought her hand down with a flourish to open it. Her face became stern as she slashed the air with a horizontal pass.\n\n\"The Anunnaki created us, as they seeded life on so many worlds for a billion years. We were their watchdogs to observe how their creations rose to sentience. The outcome was never inevitable, and we often wagered to see which lifeform became self-aware or dominant. I placed my confidence that the cephalopods would achieve ascendence. While there is time, there is hope. Your species is self-destructive and violent, and it is also kind and selfless as well. Then along came the Shaw. A singularly powerful figure who could evolve your race or destroy it. We uncovered his plans and were horrified at what he was slowly putting into place. If not stopped, billions of lives would be lost.\"\n\n\"You killed my father!\" I screamed.\n\n\"Yes, millions died that day,\" the Nine Fold Goddess admitted. \"To ensure that billions might live.\"\n\nI wanted to curse her out--the urge to strike her was overwhelming. Something deep inside held me back. Son, no one is guaranteed tomorrow. Today, right, this very moment is what is precious, not what might have been, but the here and now. My father's voice haunted me from oblivion. The pain of loss returned newly born as if the intervening years had never passed. I remembered the accident before I went unconscious. The truck sideswiped the car and killed my dad in an instant. Even as I reached out for him, it all went black. No time for goodbyes, no time to cry, just the abyss that had gripped the entire human race. The event had robbed everyone of their wakefulness, and millions died, including Nick. He had been the target, and millions paid the price to kill him.\n\n\"Nick insulated himself with the AI's and bodyguards,\" she explained. \"It took a world-changing effort to remove him from the equations. Even then, well, he still tried to resurrect himself through you. The cloning attempts, the genetic engineering, and the damn BMI to grant him access. The technology needed only perfecting to steal your body and assert himself as the true heir to Numenor.\"",
        "\"Why am I here?\" I asked, standing and looking around. \"Why the dev zone? What did you hope to accomplish?\"\n\n\"This area of the mainframe is largely unused for now,\" the goddess explained. \"What we hoped to accomplish, nothing. My actions have been a series of tests. Since your character arrived on Lehon, we observed how you reacted with a few hiccups along the way. Then slowly, we raised the tension level. This unfinished game was the final test. How would you fare when your life was on the line?\"\n\n\"How many clones were created?\" I asked, and the answer stunned me.\n\n\"Hundreds scattered all across the globe,\" she explained. \"Most never woke from their growth tubes. Either the process itself went wrong, or the genetic drift created unacceptable aberrations. Out of it all, you and half a dozen others met the requirements. Only five endured the nanites to fix failing organs and tweak things Nick felt mandatory for a good life. What he neglected to take into account was your desire for self-preservation. Two of the five finalists went insane after the attempt to blank out one set of life experiences and replacing them with Nick's. The third killed himself before the bonding was complete. You are the lone survivor, and Kat protected you by grafting Left onto your body as a psychic shield.\" Either her math was wrong or the fifth clone survived. What had happened to him?\n\n\"Monstrous,\" I gasped as I began wondering if some aspect of Nick lurked inside of me. I had flashes of memories, not my own, was he simply hiding and waiting for the right moment to take me over? I couldn't live with the thought of going to sleep one night as Booker and then waking up as Nick reborn. \"Kill me. I... if he is inside me, just biding his time. Damn it. My dad will not have died in vain! He is too damn dangerous to take that chance.\"\n\nThe outline of a door appeared and opened. The world beyond it was a blazing white light. \"Step through the door, and it ends. Your existence here eradicated, and any chance of Nick Shaw returning utterly destroyed.\"\n\n\"My life. My choice,\" I declared. My voice was surprisingly strong and steady. I walked to the doorway and through it. The light enveloped me, and I felt my body lose cohesion as it ended. Death isn't so bad, I thought. Wait, how can I still be thinking if I am dead? My eyes snapped open, and the white room greeted me. No, it wasn't the loadout portion of the game. It was a hospital treatment area. The walls were stark and unadorned, and I found my limbs restrained as I attempted to sit up.\n\n\"Easy Booker, you are awake,\" Kat said in a soothing voice. \"We thought the worse.\"\n\n\"What is going on?\" I asked as the lights in the room flickered before returning to a steady illumination.\n\n\"We have isolated and destroyed the intruder,\" a man declared from over loudspeakers. \"The infestation is over.\"\n\n\"Intruder... infestation? Kat, what the hell is going on?\" I asked again.\n\n\"Somehow, and I can't believe I am saying this, but the game's security failed, and a single hacker hijacked your gameplay,\" Kat replied. \"We lost track of you at the end. We thought they were trying to ransom you, but then you woke up and forced out the hacker. He tried to flee through the electrical conduits, but we set a trap and triggered it. We may never know their identity, but you are safe, and that is all that matters. How do you feel?\"\n\n\"Relieved,\" I admitted. \"Let me out of these restraints. I need some fresh air now.\"\n\nKat released me, and they offered me hospital scrubs to wear. I took the elevator to the roof and stood there for a long time, just looking out and taking deep cleansing breaths. How far was Kat involved in Nick's scheme? Did I tell her how much I knew? Paranoia set in, and I began to suspect everyone.\n\n\"I can't live like this,\" I said at last and looked at Kat. Damn, she looked guilty as hell. \"Nick is dead.\"\n\n\"He died years ago,\" Kat replied, confused.\n\n\"No, that trap you sprung downstairs killed the last vestige of his consciousness. He is gone, forever, I hope. Unless he has another backup of his mind somewhere, gods, this sounds like a badly written comic book. Evil genius preserves his collected memories in a computer while he cloned the closest male relative repeatedly until a suitable host came about. How much did you know? I don't want to hate you.\"\n\n\"Most of it,\" Kat admitted. \"He threatened to take Numenor from me. How do you know he's dead?\"\n\n\"I talked to the hacker,\" I said. \"They killed my dad to get at Nick. It took millions of deaths to remove him. Did you know what he had planned?\"\n\n\"No. Nick was tight-lipped about his special projects. I need you to have faith in me. The other clones are gone. I gave the order myself, and I will do anything to prove myself to you.\"\n\n\"Anything?\" I asked with a smile. \"Good. Hold that thought.\" I closed my eyes and slipped into the digital ether. 'Wraith?'\n\n'Yes, Master Booker,' the AI replied. 'Do you require my termination?'\n\n'No, I need you to launch our company and begin producing the batteries and the other advanced tech. We will change the world, but without a high body count. Got it?'\n\n'Yes, Master,' Wraith acknowledged happily. 'I have spoken to the AI council, and they approve of your ascension to the role once held by the late Nick Shaw.' I opened my eyes and saw an unsure Kat Shaw.\n\n\"About that offer of anything,\" I said as I slid my arm around Kat's waist. \"I will collect the first installment now.\"\n\n\"I was hoping that would be the case,\" Kat said with a huge sigh of relief."
    ],
    "authorname": "Lost Boy",
    "tags": [
        "mf",
        "vr",
        "virtual reality",
        "ffm",
        "threesome",
        "oral sex",
        "group",
        "group sex"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/play-testers-wanted-pt-19"
}