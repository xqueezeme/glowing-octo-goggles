{
    "title": "Surefoot 26: Who We Are",
    "pages": [
        "USS Surefoot-A, Deck 3 Mid -- Sickbay Suite:\n\nKitirik flushed a darker than usual green around his mottled skin and throat wattles as he sat on the biobed. \"Well... this is certainly embarrassing.\"\n\nStanding in front of the cadet, passing a sensor wand over the Qarari's head, Doc Masterson grinned. \"It can happen to any of us, pardner.\" But then he amended that to, \"Well, it could, if we're studying mycorrhizal fungi without proper respiratory filters. And also if we're reptoids who are particularly susceptible to mycorrhizal fungal infections.\" He shrugged. \"Okay, so maybe it's just you.\"\n\nBeside the biobed, Delta Squad's Medical cadet Hafsa Al-Samra's almond-coloured eyes widened with chagrin. \"It's my fault, Doctor, I should have gone to get the proper equipment! I could have killed him!\"\n\nMasterson glanced at her with amusement. \"Let's not go that far, little lady. He just suffered some minor neural failure related to his particular biochemistry, that's all, and it's all been cleared up with a shot of chloradizine.\"\n\n\"Still,\" Kit quipped. \"It's humiliating at my age to suffer from... reptile dysfunction.\"\n\nHe looked expectantly to Hafsa, who guffawed with him, both of them laughing until she snorted -- and then they continued laughing.\n\nMasterson grinned and looked to Eydiir, Alpha Squad's Medical cadet, currently assisting him. \"Think we should check for intoxication as well?\"\n\nThe dark-skinned Capellan girl grunted, her face remaining stoic as if in deliberate contrast to the merriment on display. \"They have been suffering from these particularly annoying symptoms for weeks now. And we have been suffering as well.\"\n\nHafsa stopped and beamed unapologetically at her. \"Kit can't help it... he's a fungi.\"\n\nKit got it, and began laughing again, before stopping and regarding his unresponsive squadmate. \"Do you see, Very Good Friend Eydiir? 'Fungi' is a play on 'Fun Guy'-\"\n\n\"Yes, Kit, explain the joke, that will assuredly make it funnier.\"\n\nMasterson was putting away his equipment. \"Alright, you two jackasses, vamoose and pester someone else with your hee-haws. But keep an eye for the next 24 hours for any reoccurrences of symptoms.\"\n\nKit hopped off the biobed, pausing to bow slightly to Masterson and return to his customary etiquette-driven behaviour. \"I thank you sincerely for your assistance, Respected Doctor.\" Then he slipped an arm around Hafsa's, declaring loudly, \"Come, we shall find my Very Good Friend Neraxis! She is more appreciative of our sophisticated humour!\"\n\nAs the couple departed, Masterson chuckled. \"It always amazes me to see folks from such different backgrounds connecting like that.\"\n\nEydiir nodded. \"Yes, friendships can cross many boundaries.\"\n\nHe grinned. \"You think that's just friendship they got there?\"\n\n*\n\nDeck 2 Mid -- Alpha Squad Quarters:\n\nKit and Hafsa entered, their giggling subsiding as he glanced around. \"It appears that we have the place to ourselves.\"\n\n\"Ooh,\" she teased, grinning. \"Bet you planned this all along, hoping to win me over with more fungal puns!\"\n\nHis round bronze eyes widened with humour. \"I fear I might have exhausted those, Very Good Friend Hafsa.\" But then his throat darkened. \"There is not... mushroom in my head for any more.\"\n\nShe stared in astonishment, before laughing again -- and then moving in and kissing him.\n\nHe froze, feeling her lips on his mouth, her hands around his waist, before she drew back, suddenly looking shocked and embarrassed. \"Um... wow. Uh, Kit, I, ah, hope you don't- um, I didn't plan that-\"\n\nHe blinked, smiling -- as his webbed hands reached out and held her by the forearms. \"That was my first kiss. I suspect it would be more intense with lips, but it was still very enjoyable. I believe I am... lichen it.\"\n\nBut instead of appearing amused by his additional pun (the lack of success he assumed was from lichen being not technically a fungus in itself but the result of mutualistic symbiosis between a fungus and an alga or cyanobacteria), she looked alarmed. \"That was very rude of me! I'm sorry! You might have cultural restrictions or something against affection-\"\n\n\"May we do it again, please?\"\n\nAfter a second, she complied -- this time, making sounds as his hands moved up her arms to the back of her head, gently stroking her sable hair, in a way he saw his Very Good Friends Sasha and Giles do when their relationship had intimate physical parameters.\n\nWhen they parted again, they remained closer than before, and he saw the changes to her expression, her pupils, felt her pulse quickening and her hot breath on him as she asked huskily, \"K-Kit... have you had sex with anyone before?\"\n\n\"No. I met a fellow Qarari some months ago, a female and fellow expatriate, who asked for it, but only for the purposes of conception. I refused. May I respectfully ask you if-\"\n\nShe shook her head. \"Never.\" She swallowed. \"But I'd love to remedy that... with you.\"\n\nHe smiled. \"I think that would be most enjoyable.\"\n\nShe grinned -- but then she gasped. \"Oh crap, I don't even know if we're- you know, compatible!\"\n\nKit smiled at her, already knowing the answer from his studies and his observations of his female squadmates, but keeping it to himself as he slipped his hand down into hers. \"Shall we find out?\"\n\nTwelve minutes later, Sasha Hrelle entered the quarters, still licking sticky barbecue sauce from her early lunch as she stopped and checked for messages, before moving to the bedroom, hoping for a quick nap before her next Counseling session with Kami- \"WHOA! SORRY!\"\n\nShe returned to the common room, feeling herself turning seven shades of red.\n\nKit burst in, barely covering his groin with part of his uniform. \"Very Good Friend Sasha! We are most egregiously sorry for not scheduling our coitus more appropriately!\"\n\nShe held up a hand. \"No, no, Kit, it was all my fault- I don't know how, exactly, but I'm sure it was... wow... I cannot unsee that...\"\n\nHafsa entered, also dishevelled, sweaty and barely covering herself with more than a hastily-commandeered pillow and a smile. \"Um... it's not what it looks like?\"\n\n*\n\nDeck 1 Fore -- Command Quarters:\n\nThe door chimed, and a voice replied with, \"Enter!\"\n\nCommander T'Varik entered, hands folded behind her. \"Captain?\"\n\nFrom a doorway in the far end of the quarters, Hrelle's voice echoed, \"In here! Misha got filthy in the Arboretum so I'm giving him a bath!\"\n\nShe approached. \"Apologies for the interruption, Sir, but I thought it would be...\" She paused, at an unaccustomed loss for words.\n\nThe bathroom had been expanded recently to accommodate both the Captain's wife and their cub, and included a bathtub, currently filled to near-overflowing with water, frothy suds and bubbles, colourful floating bath toys... and Hrelle and Misha, the pair of them wearing black tricorner hats with white skull and crossbones symbols on the front. Hrelle was dabbing suds around the infant's chin to give him a foamy beard, before looking up and explaining, \"We're pirates!\"\n\n\"Of course you are.\"\n\n\"You should hop in, it's fun! Kami and I play Pirates in here, too.\" He grinned. \"And afterwards when I want to bury my treasure-\"\n\n\"I believe I get the gist of the innuendo, Sir.\"\n\n\"Aye, and so ya should, ya scurvy dawg!\" Then he began singing a sea shanty to his son. \"Yo Ho Ho, and lots of luck / Taking a bath with our rubber duck / Because my cub got caked in muck / If his Mom finds out then I'll be fu-\"\n\n\"Misha is eating the suds,\" T'Varik informed him.\n\nThe cub was spitting them out now and blowing a raspberry, as Hrelle cleaned him up. \"He needs something to wash down those worms he found in the Arboretum.\"\n\n\"Naturally. Captain, we've received a transmission from Starfleet Command: an urgent holomeeting has been arranged for 1130 Hours Ship Time with Admirals Tattok, Goldstein and Trenagen.\"\n\n\"Trenagen? Oooh, we are honoured!\" Hrelle was pouring cups of water over Misha to wash off the suds, before wiping the water from the cub's eyes and asking him, \"Can you say, 'Admiral Trenagen has a massive, massive stick up his ass about Daddy'?\"\n\nMisha gurgled.\n\n\"My godson is gifted,\" T'Varik conceded, \"But perhaps not that gifted. Captain, the meeting will commence in 8.6 minutes-\"\n\n\"Understood.\" He rose, lifting up Misha in his hands and facing her, both Caitians nude, their fur matted and dripping. Hrelle grinned. \"You can dry him, or you can dry me. Make your choice.\"\n\nShe kept her eyes fixed firmly above Hrelle's waist as she accepted the cub.\n\n\"You... have chosen... wisely,\" he intoned in a deep dramatic baritone -- before shaking the bathwater and suds from his body, making his belly shake, Misha squeal and T'Varik turn away and depart, grabbing a towel along the way.\n\n*\n\nSasha was moving down the corridor distractedly when a familiar voice called after her. \"Hey.\"\n\nShe stopped. \"Kami.\"\n\nThe brown-furred Caitian female drew up to her, smiling -- and then frowning. \"You look like you've seen a ghost, if you believed in them.\"\n\n\"Um, no. Not a ghost.\"\n\nKami regarded her, before leading her inside her office, smiling. \"So, who was it?\"\n\n\"Who was what?\"\n\nKami grinned. \"I know that look. You caught someone having sex! Tell, tell!\"\n\n\"Um, maybe I shouldn't-\"\n\n\"Of course you should! I love gossip, and I'll treat it as Confidential.\" She moved to the replicator and ordered some scented Caitian tea, but withheld Sasha's cup and saucer expectantly. \"Well?\"\n\nSasha blinked, wondering if her face had returned to normal yet. \"It was Kit and Hafsa.\"\n\n\"Really?\" She handed over the tea.\n\n\"Really! They were on the bedroom floor in our quarters! At it like nobody's business!\"\n\nKami laughed, taking a seat on the couch and inviting the girl to join her. \"I recall a few times catching you and Giles in unusual places, when young lust had overtaken you-\"\n\nSasha looked to her as she settled down. \"But that's just it! Kit doesn't get lust! He told us sex for his people is no more a passionate act than his liver filtering his blood! Why would he want to do that?\"\n\nKami shrugged. \"He might not feel the same things males in our races feel when they have sex, but that doesn't mean he can't enjoy the intimacy with Hafsa. He's always been very tactile.\"\n\nSasha rolled her eyes. \"Well, when I walked in on them he was so tactile I thought he was going to pound her down into the lower decks!\"\n\nKami laughed again.\n\n\"It's not funny! He shouldn't- shouldn't be doing that!\"\n\nNow the Counselor sobered again. \"Why not? He's an adult. So is Hafsa. They get along together extremely well.\"\n\n\"Has he talked with you about having sex?\"\n\n\"That's none of your business if he has.\"\n\n\"Yes, but... isn't it deceitful or something? Does Hafsa know he's not feeling what other males feel at the time, that he's just... going through the motions?\"\n\n\"Who says he's doing that? Just because he's not driven to sex like a human or Caitian male doesn't mean he's going through the motions.\" She tilted her head. \"Do you know what your father does for me sometimes?\"\n\nSasha held up a hand, paling. \"I don't want to hear about your Fluttertail adventures, thanks!\"\n\n\"He gives me pedicures. He'll sit there on the floor, take my feet and buff them, doing my claws, removing callus, soaking and massaging. It's incredibly relaxing, especially when I was pregnant with Misha.\" She grinned. \"And, lacking a foot fetish, he gets nothing physically from it, but he does enjoy that I enjoy it. It's a bonding moment, as legitimate in its own way as sex.\" She looked slyly at the younger woman. \"Intimacy can be enjoyed without climax. As my people say, 'Enjoy the prowl as well as the pounce'.\"\n\nSasha grunted.\n\nKami leaned back. \"When we associate with others over a period of time -- family, lovers, friends, colleagues -- we build up a certain profile about them in our minds. We think we know who they are. But they can surprise us with who they really are.\"\n\nSasha grunted again.\n\n\"You're missing having sex with someone else, aren't you?\"\n\n\"Shut up.\"\n\n*\n\nElsewhere:\n\nThe four holograms stood in unreal space, arranged so that three of them -- Hrelle, Tattok and Goldstein -- faced Trenagen, who addressed them as if holding a lecture. \"The Federation Diplomatic Council is in the midst of negotiating a treaty with the government of the Qarari Union, a non-aligned power with whom an alliance would be strategically valuable to us.\"\n\nAt the mention of the name, Hrelle instantly divined the reason for his presence in the lecture, and felt his hackles rise, but let the head of Starfleet Intelligence continue.\n\n\"It has been mostly successful,\" the snowy-haired British man proceeded, \"To the point where both parties have agreed to provisional extradition procedures, to be first applied towards a Qarari fugitive currently serving as a cadet on a Starfleet vessel-\"\n\n\"No,\" Hrelle cut in sharply.\n\n\"A cadet?\" Goldstein echoed. \"Who are you talking about?\"\n\n\"I think Captain Hrelle knows,\" Tattok pointed out, looking to the Caitian. \"Care to fill us in, Esek?\"\n\nHrelle never took his eyes off of Trenagen. \"His name is Kitirik Abyss Zu- um... he has a long, long surname, we just call him Kit. And he's not a fugitive. He's a refugee.\"\n\n\"Continue.\"\n\n\"The Qarari have one female gender but five male ones. The male genders are distinctive, physically, genetically and socially, and their genders define their roles in their society: Warrior, Chancellor, Seeker, Worker and Creator. They live segregated lives, and they never question if they were born into the right roles.\n\nExcept that Kit, and others like him, did question. He was born a Warrior, but had always felt he was a Seeker, someone who studied medicine or the sciences. His society condemned him as Aberrant, and tried to 'cure' him through intimidation... and violence.\n\nKit made contact with a Starfleet captain who granted him sanctuary and transported him off-world. His Refugee status and residency in the Federation was approved, he had corrective transgender surgery and was sponsored into the Academy.\"\n\n\"Kitirik...\" Goldstein said the name to herself. \"Wasn't he one of the cadets wounded in the Vlathi attack?\"\n\n\"Yes, Ma'am, wounded helping to keep my wife and cub alive. But even before that, he has been an exemplary cadet and crewman.\" His expression tightened as he looked back at Trenagen. \"And I'll repeat myself, Admiral: he's not a fugitive.\"\n\n\"How we perceive him is irrelevant,\" Trenagen replied coolly. \"Compared with how the Qarari government does. They are currently at war with a neighbouring planet, a war not unsurprisingly being fought by their Warriors. And though the cadet might have altered his gender, legally the Qarari government still consider him a Warrior, and thus a deserter. They have demanded his return, so that he can perform his duty.\"\n\nHrelle grunted, folding his arms across his chest. \"They can demand all they want, they're not having him.\"\n\nTrenagen eyed him. \"It's not up to you to decide that, Captain.\"\n\n\"No,\" Tattok agreed. \"But he is a refugee, protected under Federation law.\" But then he asked, \"Isn't he, Ian?\"\n\n\"No longer, Tattok. The Qarari government has provided evidence to the Federation Refugel Linn Council that the cadet has been repeatedly visiting his homeworld since first departing it, thus proving that it is in fact safe for him to return and leave, that he is not subject to persecution and thus does not qualify for refugee status.\"\n\nHrelle frowned. \"What? He hasn't been back to Qarar! They beat him there! They beat him, bullied him, pushed him to the brink of suicide! The very thought of the place terrifies him! He's been with me for the last two years!\"\n\n\"The evidence they presented was considerable, Captain.\"\n\n\"Any evidence the Qarari provided will be faked!\"\n\n\"Undoubtedly.\" Tattok looked to him. \"But it seems like a great deal of trouble to go through for one deserter, Captain.\"\n\n\"That's because it's not just about that with them, Sir. Kit's been anonymously publishing accounts of his experiences to public news sites on his homeworld. It's apparently become popular, with many identifying with his plight, and others not realising the extent of suffering people like him undergo.\"\n\nTattok looked mildly alarmed by this. \"You mean he's been violating Starfleet's Non-Interference Policy? How long have you known about these accounts?\"\n\n\"I discovered it several weeks ago, during our Counseling session following the Vlathi attack. I had Commander T'Varik and Craig Whitham, Attach\u00e9 with the Federation Legal Council, investigate. They concluded that his activities didn't violate the Policy.\"\n\nGoldstein nodded at that. \"That Vulcan could find a stray quark down the back of the couch. If there was anything wrong, she would have brought it to light.\"\n\nHrelle grunted. \"The Qarari must have discovered his identity, and now they're dragging him back to serve in their military in order to silence him.\" He looked to Trenagen again. \"Am I right, Admiral?\"\n\n\"I'm hardly in a position to confirm that, Captain.\"\n\n\"It doesn't matter anyway,\" Goldstein said. \"Captain Hrelle will provide proof that Cadet Kitirik has not visited Qarar, we'll speak with the Council and end this matter before it begins.\"\n\nTrenagen looked to her again. \"I'm afraid that it has already begun, Ruth; the decision to revoke the cadet's status and residency has already been reached. The Qarari delegation will arrive at the Surefoot in 3.7 hours to collect him.\"\n\n\"WHAT?\" Hrelle roared.\n\n\"That is completely unacceptable!\" Tattok declared.\n\n\"He's not going anywhere!\" Goldstein snapped. \"I'm not in the business of letting some cockamamie foreign government press-gang one of my cadets!\"\n\n\"He is technically no longer a cadet,\" Trenagen informed her. \"His sponsorship was predicated on his refugee status, and on his having no criminal record. Now he is classed as a military deserter from a power with whom we have established a provisional extradition treaty. However, you can of course still appeal on his behalf, and should it prove successful, he will be returned.\"\n\n\"You really believe that?\" Hrelle growled. \"If they've gone to this much trouble to silence him, they're not going to let him go!\"\n\n\"We have been assured that they have his best interests at heart. Once he is retrieved and restored, he will be reassigned to military duties-\"\n\nHrelle raised a hand to cut him off. \"Wait- what do you mean 'restored'?\"\n\nNow Trenagen looked distinctly uncomfortable. \"As I understand it, the Qarari have plans to... reverse the gender modification Federation doctors applied-\"\n\n\"That's barbaric!\" Goldstein declared.\n\nHrelle bared his teeth and claws, feeling like he was under physical attack. \"These are the people you want us to ally with? What in the Seven Hells is wrong with you?\"\n\nTrenagen shifted, his discomfort now eclipsed by indignation. \"You need to see the larger picture, Captain. This is about more than just one individual. We need the Qarari; they occupy a strategic sector of space among several non-aligned worlds, as well as the Cardassians. In addition to the potential for intelligence gathering, they may become valuable military allies.\"\n\n\"But he has rights!\"\n\n\"As it now stands, Captain, legally he has fewer rights than the millions of Federation citizens who might fight and die should the current cold war with the Dominion turn hot -- and you're as responsible for their welfare as you are for your cadet's.\"\n\n\"Admiral-\"\n\nBut now it was Trenagen cutting him off. \"A diplomatic courier, the USS Coventry, is en route with the Qarari party, along with Galactic High Commissioner Franklin Burnsworth, overseeing the transfer; he will be acting with the full authority of the Federation Council. Captain Hrelle, you are formally ordered to maintain your present position and provide your full cooperation in handing over Cadet Kitirik to them. And you will do so without delay; the Qarari are apparently very sensitive about precision and protocol-\"",
        "\"When was the decision made?\" Hrelle asked suddenly.\n\nTrenagen paused before replying. \"Stardate 49460.8. Does it matter?\"\n\n\"Yes. Because I think you planned it like this.\" When all attention returned to him, Hrelle elaborated. \"49460.8 was ten days ago. You've known about this since then if not before. But you're only telling us this now, just before they arrive, so we wouldn't have had time to protest and possibly spoil things! Isn't that right, you bastard?\"\n\n\"Captain...\" Tattok warned.\n\nTrenagen glared now with open contempt. \"Others may find your rudeness refreshingly charming, Captain. I do not. You are a soldier, and your purpose is to follow orders... and nothing more. I will have your orders transmitted to the Surefoot. Any deviation from them will incur serious consequences, no matter how many allies you think you might have.\"\n\nTrenagen vanished.\n\nGoldstein harrumphed. \"He remains as charming as a colonic. Captain Hrelle? Have T'Varik coordinate with my office, send us all the necessary evidence. I'll be in contact with the Commander-in-Chief and the Refugee Commission, and at the very least see about getting a temporary injunction to stop this mishegas.\"\n\n\"Yes, Ma'am.\"\n\nShe vanished too.\n\nThe two remaining holographic figures looked at each other. \"That could have gone more smoothly, Captain. And without the attitude from you.\"\n\n\"With respect, Sir, I didn't start this-\"\n\n\"'Start this'? Are we on the playground here? Trenagen isn't someone to be trifled with; he has more connections than you can know. And if the head of Starfleet Intelligence is involved in this, there'll be much more at stake than just ratifying some treaty with a minor foreign power.\"\n\nHrelle grunted. \"If he had his way, he'd throw Kit to the Qarari without a second thought.\"\n\n\"And there are many in Starfleet Command who would do the same.\"\n\nThe Caitian frowned. \"You can't be serious.\"\n\nThe Roylan breathed in. \"The Dominion is proving to be powerful, insidious, dangerous, perhaps even more so than the Borg. Their Founders can appear like any of us, infiltrate anywhere, cause sabotage, unrest. And their Jem'Hadar troops are relentless. The destruction of the Odyssey, the Battle of the Omarian Nebula, the unrest stirred up among the Romulans, the Cardassians, the Tzenkethi...\n\nIf we end up going to war with them, we can't guarantee victory. Many are scared. I can't say I blame them.\" He paused, and then concluded, \"I will see what can be done through Starfleet Command about your cadet. Give my best to your wife and children, Esek.\"\n\nThen Tattok vanished.\n\n*\n\nIn Kami's office, the Counselor was finishing up with Sasha when both their combadges chirped, and the Captain's voice echoed between them. \"Counselor Hrelle, Ensign Hrelle, report to my Ready Room.\"\n\nKami smiled, tapping her badge to reply, \"We're on our way, Sexytail. Shall we bring you some lunch or-\"\n\n\"Just get here.\"\n\nKami noted the tone of his voice, matching it. \"We're on our way. Counselor out.\" She looked to Sasha. \"Wonder what's up?\"\n\n*\n\nTen minutes later, Sasha was pacing the room like a caged animal. \"This is BULLSHIT!\" She paused and glared at T'Varik. \"And with all due respect, Commander, please don't remind me that 'bovine faeces is not present'.\"\n\nThe Vulcan was standing apart, reading the transmitted orders from Trenagen on a PADD. \"I would not, Ensign -- as the correct phrase should be 'taurian faeces'.\"\n\nSasha growled, looking to her stepfather. \"You can't let this happen! You have to do something!\"\n\nHrelle was leaning against the front of his desk, arms folded across his chest. \"I am. So are Admirals Tattok and Goldstein. But Sash, you have to be ready for the possibility that our efforts might not be enough, or in time to stop him from being taken away and...\" He couldn't finish the rest.\n\nSasha paled, looking back at T'Varik. \"Commander?\"\n\nThe First Officer frowned, as much as any Vulcan could frown. \"The evidence presented by the Qarari government to the Council is included with the orders: visual records and genetic ID confirmation from their Border Control security records, indicative of Kitirik visiting Qarar on four separate occasions in the last three years.\"\n\n\"Faked!\" Sasha declared.\n\n\"Undoubtedly. We can provide corroborative evidence from the Surefoot and Academy logs about his presence elsewhere. As for the genetic ID evidence, I believe I might have identified a flaw further disproving their claims.\n\nHowever, the terms of the extradition treaty currently in place are explicit; they have the right to apprehend him upon their arrival, and detain him unless and until our appeal is accepted, heard and agreed upon. And as the Coventry is technically Qarari territory because of its diplomatic status, once he is onboard, he will be... unreachable by us.\"\n\n\"NO! This is not happening! We're not letting them take him! We're not- Goddammit! Dad, you can't-\"\n\nNearby, Kami drew closer, putting a hand on the younger girl's arm. \"Sasha, we don't want this happening any more than you do. Let your father and T'Varik get on with the appeal; we have to focus on supporting Kit. Get the rest of Alpha Squad together and inform them of what's happening, while I bring Kit back here to tell him.\"\n\nSasha nodded, wiping her face but sparing Hrelle a final pleading glance. \"Please... do something.\"\n\nHrelle said nothing as the girl departed, before he looked to T'Varik. \"Coordinate your efforts with the Superintendent's office. Do I need to order you to do whatever is necessary to make this happen?\"\n\n\"No, Sir.\" Then she followed Sasha out of the room.\n\nAlone with his wife, Hrelle asked, \"Can Kit survive going back to them? Even for a short time?\"\n\nThe Counselor's tail kept twitching with anxiety. \"He's stronger now than when I first met him two years ago. His self-confidence and maturity has grown. But Esek... he'll be one alone against a planet of people, out to beat everything that makes him who he is!\n\nAnd even beyond the horror of being forced into gender modification, their medical technology can't be at the level of ours! They could end up mutilating him, if not killing him outright! That might be their intention all along, silencing him by any means necessary!\"\n\n\"I know.\"\n\nHer anger raced alongside her outrage. \"You've listened to his story in your Suicide Survivor's Group! You know what he went through back there!\"\n\n\"I know.\"\n\n\"He helped save our cub's life! My life!\"\n\n\"I know.\"\n\n\"Is that all you have to say?\" she barked.\n\n\"No.\" He breathed out. \"I'll also say he's not going with them. That's not an empty boast. That's a fact.\"\n\nThat made her start. \"What?\"\n\nHe let his arms drop, his hands resting on the edge of his desk. \"I will do everything in my power to legally stop this from happening. But if that fails... he's still not going. I'll defy Starfleet orders and keep him out of their hands until saner heads prevail.\n\nBut I won't let them take him. I promise you. I promise him. I promise myself.\"\n\nShe drew closer, wary. \"Esek, are you sure about this?\"\n\n\"Trenagen said I was just a soldier, and my purpose here was to follow orders, and nothing more. But that's not who I am. There are more important things to me than that. He might have the pull to kick me out of Starfleet when it's done, but right now... I don't want to be part of an organisation that would be willing to do something like this.\"\n\nKami frowned. \"Then why didn't you reassure Sasha about that? Why make her think Kit might go?\"\n\n\"Because under Starfleet General Order 26, if anyone knows I intend to defy orders, and they don't report it and it comes out in the inevitable investigation, then they become complicit in it. As my partner, you can know, as you can't be compelled to testify against me.\n\nBut Sasha, T'Varik, all the others here wouldn't have that protection. They can still have long, successful careers after this. Better if Trenagen focuses his wrath solely on me.\" He frowned. \"I'm sorry, Kami. I've made this decision without consulting you first, and my actions will affect you and Misha-\"\n\nShe rushed in and embraced him tightly, rubbing the side of her muzzle against his. \"Shut up, you stupid kussik. I'm married to you, not this job. Your cub and I couldn't be more proud of you. And this is a big, big Galaxy, full of potential. For all of us.\" She made a sound. \"We could go back to Cait, join the Militia. We could even end up serving on my mother's ship.\" She smiled against him. \"You won't be Captain, of course, but I'm sure she'll find some place for you. Maybe you could work in the galley?\"\n\n\"You trust me in the galley all day?\" He hugged her back.\n\nThen T'Varik's voice interrupted the moment. \"Captain, please come to the Bridge.\"\n\nHe drew back. \"Get Kit, bring him here.\"\n\nHe stepped out to see T'Varik and Lt Neheru flanking Lt C'Rash, seated at Tactical, her black-furred tail sticking through the hole in the back of the chair and twitching. T'Varik reported, \"I have attempted to raise a Priority One channel to Starfleet Academy. But our security codes are not being recognised by the subspace relays.\"\n\n\"They were recognised before!\" C'Rash growled. \"Not an hour ago! Something's malfunctioned!\"\n\n\"A diagnostic was run only yesterday,\" Neheru reminded the young Caitian. \"Perhaps a local malfunction of one of the relays?\"\n\n\"They are designed to automatically bypass any subspace signals to the nearest available relay in the event of malfunction,\" T'Varik pointed out. \"Sector 001 is at the proverbial heart of the Federation, with many redundant relays. Too many to not expect a bypass.\"\n\n\"It's sabotage,\" Hrelle declared.\n\nC'Rash looked up. \"Sabotage? From whom? The Cardassians? The Bel-Zon?\"\n\n\"Never mind. What about local communications?\"\n\n\"There's no problem with sector-wide subspace traffic, Sir,\" Neheru confirmed. \"We have real-time contact with the Shi Shen, the Hyperion, the Starsong-\"\n\nHrelle held up a hand. \"Hail the Starsong, Priority One, patch it through to my Ready Room.\"\n\n\"What's going on, Sir?\" C'Rash asked, perplexed.\n\nHrelle glanced at T'Varik. \"Bring the senior officers up to speed, they may as well know, you'll need their help, but otherwise keep what's happening within our group.\" Then he departed.\n\nMoments later, a familiar Roylan face appeared on his desktop display. \"Well, well, it's Baron Munchables-\" Then he frowned at Hrelle's expression. \"What's going on, Esek? Is Kami and the kids okay, or-?\"\n\nHrelle held up a hand. \"The family's fine, Wey-ney, thanks... but one of my cadets is in serious trouble. He's being used as a pawn by people well above our pay grades, and his life is at stake-\" He paused and breathed out. \"I need to relay some urgent communication between us and Starfleet Command, the Academy, the Federation Council, Admiral Tattok-\"\n\n\"My father?\"\n\n\"The same; he knows what's going on. We'd do it directly, but someone's interfered with our security clearances for the subspace relays.\"\n\n\"Really?\"\n\n\"Really.\"\n\n\"You've definitely pissed off someone high up. Hope this cadet of yours is worth it.\"\n\nHrelle's face went taut. \"He helped save Kami and Misha from the Vlathi.\"\n\nWeynik paused for only a second, before tapping his combadge. \"Bridge! Full stop! Raise a Priority One channel to the Columbia and every other Starfleet vessel in this sector and tell them to stand by! We're running a Subspace Signal Bucket Brigade!\" He focused on Hrelle again. \"Okay, Wide Load, who's on first?\"\n\n\"Listen, Short Round, I could end up out of a job after this. If you don't want to get involved now, I'll understand.\"\n\nHis fellow Captain smirked. \"As I'm not covered in melted cheese and spicy shuris mince, you're obviously not giving me your full attention. I said Who's On First?\"\n\nHrelle smiled.\n\n*\n\nDeck 3 Fore -- Cadets Mess Hall:\n\nNeraxis Nemm leaned Misha back until the Caitian infant's head rested on her shoulder, and patted his back, cooing, \"Come on, Furball, I know you got it in you. Come on-\"\n\nMisha was staring and smiling at some cadets at a neighbouring table, when he let loose a burp that was amazingly loud and deep and resonant for his size, and the Bolian girl set him down sitting on her lap, beaming. \"That's it, Ickle Baby!\" Then she reached for a spoon of her chilli kippers vindaloo. \"Here you go, your reward...\"\n\nBeside her, Jonas Ostrow reached out and took the spoon away with a look of alarm on his face. \"What are you doing, trying to feed something like that to him? He doesn't have your Bolian stomach lining!\"\n\nNeraxis grinned. \"I know, Scrappy; I just wanted to see the look on your face. You're gonna make a lovely father someday.\" She leaned in and kissed her boyfriend on the cheek.\n\nMisha blew a raspberry between them.\n\nAcross the table, Meow Rrori chuckled. \"I quite agree, Cub. We have more important matters to discuss.\" Then he returned his attention to Kit, sitting at the head of the table with a bowl of grilled Hupryian beetles. \"Continue, my friend. What were her nethers like? Furred or shorn?\"\n\nOn his other side, Eydiir scowled and smacked the back of the white-furred Caitian's head. He growled and snapped at her. \"What did you do that for?\"\n\n\"Because Sasha wasn't here to do it herself. That was a rude question.\"\n\n\"It was a legitimate question! It was our friend Kit's first time! We must help him with understanding the Ins and Outs of sex.\" He looked back at the Qarari. \"And what parts of her did you get in and out with-\"\n\nEydiir smacked him again. \"You're being disrespectful! To women and to Kit! He does not need to discuss his experiences with you or anyone else!\"\n\n\"Please, Very Good Friends, do not pummel each other!\" He pushed his half-finished bowl forward. \"I am socially cognisant enough to maintain discretion about my activities with Intimate Friend Hafsa.\" He folded his hands on the table and smiled. \"I will say that I regret the interruption from our Respected Squad Leader, and look forward to another opportunity.\"\n\n\"Next time, pick a better spot than where you were,\" Neraxis suggested, tickling behind one of Misha's pointed ears. \"Our bedroom is only good for solo efforts -- as Meow will confirm-\"\n\n\"Kit?\"\n\nAll looked up to see Sasha standing there, Eydiir instantly standing on seeing the expression on her best friend's face. \"What's wrong?\"\n\nSasha ignored her as she focused on Kit, visibly struggling to keep her composure. \"Kit, go find Kami. She and the Captain need to see you, right now.\"\n\nHe rose now, round eyes widening. \"Is something amiss, Respected Squad Leader? Was it my activity with Intimate Friend Hafsa?\"\n\n\"No! No, Kit, you've not done anything wrong.\" She drew closer. \"In fact... it's been an honour having you as a Squad member... and as a friend.\" She embraced him tightly, but then pulled back, almost pleading him as she said, \"Go!\"\n\nKit, looking thoroughly mystified, nodded and acknowledged the rest of the squad as he left the Mess Hall. Then she almost cracked, prompting Misha to mewl for her and the others to rise and surround her, Eydiir repeating, \"What's wrong?\"\n\nAs Sasha retrieved her little brother, other cadets rose and approached, having watched the scene, Beta Squad's Giles Arrington asking, \"Yeah, Sash, what was that all about? Is Kit okay?\"\n\nShe clutched the cub tightly, shaking her head. \"No. No, he's not.\"\n\nAnd she told everyone everything she knew.\n\nAfterwards, Jonas was pale, shaking his head, stunned. \"They- They can't just take him like that! He- He saved my life- when I tried to kill myself-\"\n\n\"He's saved a lot of us,\" Neraxis added through gritted teeth. \"We can't just let them get away with it!\"\n\n\"We will not,\" Eydiir declared defiantly.\n\n\"Captain Hrelle and Commander T'Varik are making their appeals,\" Gamma Squad Leader Falok noted. \"They are most thorough and tenacious, and have the appropriate connections.\"\n\n\"Don't hold your breath on a quick response,\" Squad Leader Naavos groused, the Bajoran looking saturnine. \"It took weeks for my family to get refugee status from the Council, and it's not like the Galaxy didn't know what had happened to my people.\"\n\nGiles folded his arms across his chest, his expression creased in thought. \"You know... it'd be a shame if they showed up, and he wasn't here.\"\n\nSasha and the others looked to him, Sasha asking, \"What are you thinking?\"\n\nHe shrugged. \"I don't know. Maybe he's gone off in a shuttle to a nearby planet to work on a science paper?\"\n\n\"They would just recall him,\" Nancy Yeager grumbled.\n\n\"Not if his shuttle's communications malfunctioned,\" Jonas opined. \"Somehow.\"\n\n\"And if it was piloted by someone who was brilliant with evasive and stealth tactics,\" Sasha added, looking to Rrori.\n\nThe Caitian regarded the surrounding attention on him and admitted, \"I am brilliant.\" Then he looked to Isabelle Zhou, Delta Squad Leader and his current girlfriend. \"Sorry.\"\n\nBut she just smiled with amusement. \"As it's a good cause, for once I'll let you stroke your ego.\"\n\n\"And maybe we can adjust the shuttle's shield harmonics to mask the energy signatures to further keep it untrackable?\" Jonas considered.\n\n\"Not that I mind, but you all realise that we're definitely breaking regulations by doing this?\" Neraxis indicated.\n\n\"No, we're not,\" Sasha corrected. \"I am. I'm the only one that officially knows what's going on.\"\n\n\"If I might point out,\" Falok interjected. \"That a shuttle departure will need to be cleared from the Bridge, requiring a flight plan and security clearance to be logged with the Duty Officer.\" He paused and added, \"Gamma Squad is about to assume Bridge duty. I can file the necessary documents and inform the Duty Officer... later.\"\n\nEydiir looked to her Vulcan boyfriend with surprise... and admiration. \"You are surprisingly devious.\"\n\nHe raised an arched eyebrow. \"It is probably the company I have been keeping of late.\"\n\nBut Sasha just shook her head. \"No. I can't let you all get into trouble doing this.\"\n\n\"It is too late,\" Eydiir informed her, with a slight knowing smile. \"Besides, you can't get any of this done without our help.\"\n\nSasha breathed out, nuzzling against Misha. \"I know. But this is the sort of thing that can get us kicked out of the Academy, and end our careers before they begin.\"\n\nGiles grinned. \"True. But on the plus side, we won't have to worry about taking the finals.\"\n\n*\n\nHrelle watched Kit as he stood at attention there, listening, reacting, shaking a little, his leathery skin paling, his long, slender webbed fingers flexing at his sides.\n\nBut then, when Hrelle was done, the young man seemed to relax and compose himself. \"I understand, Most Respected Captain. I will pack my belongings and make my farewells within an acceptable timeframe.\"\n\nKami stood near him, but now drew closer, putting a hand on his forearm. \"Kit, it might not come down to that. You have people on your side, working behind the scenes to get this stopped.\"\n\nHe nodded politely to her. \"And I thank them all for their efforts, Most Respected Counselor. But I must be prepared if they are not successful, or not successful in time-\"\n\n\"I'm not turning you over to them, Kit,\" Hrelle promised.\n\nThe cadet looked back at him, his expression thoughtful. \"With respect, Sir, your tone suggests you are intending to employ illegal action. I cannot allow this.\"\n\n\"Maybe you should leave that decision to me, Cadet?\"\n\n\"And maybe you should leave my decision to me, Sir?\"\n\nKami squeezed his arm. \"Kit, it's okay, my husband and I talked it over about what might happen if he defies Starfleet orders. We both agree that it would be worth it, to save you.\"\n\nNow he looked at her again. \"And I must respectfully disagree. Both of you have achieved inestimable good in your respective roles. Your absences would be most keenly felt, by yourselves, by my fellow cadets. By Starfleet.\"",
        "\"Kit-\" Hrelle butted in.\n\nBut the Qarari raised a hand. \"You... are inspirational, Sir. You have taught me many, many things, more than I can say now, or ever. One of those things was courage: the courage to face an enemy in order to help and protect others. It was that lesson which helped spur me towards speaking out about my experiences, to inspire those back home who might feel as I did, who felt like they were alone, without allies or option... or hope.\n\nNow perhaps I realise that it is not enough for me to be here, in safety, preaching to others who cannot escape their oppression as I have. Perhaps I need to return and be more than just words, more than just a voice?\"\n\n\"Assuming they let you?\" Kami pointed out.\n\n\"Kit,\" Hrelle cut in, more loudly. \"You're not going anywhere! I don't care what you want, I won't allow it.\"\n\n\"Then, Sir, with the greatest of respect... how will you be any different from those who have come to take me against my will?\"\n\nHrelle frowned. \"Because I have your best interests in mind! They don't!\"\n\n\"They think they do too, Sir.\" He turned to leave.\n\n\"Kit,\" Kami almost pleaded, \"Please...\"\n\nHe stopped and regarded her, smiling. \"Qarari females do not live in clutches with males; males meet with them only for conception, they produce eggs, hatch them, and give the hatchlings to the males to raise separately. I never knew my mother. But had my society been different, and my mother had been a part of my life... then I like to imagine she would be very much like you.\" Then he drew back. \"I need to prepare. Please excuse me.\"\n\n\"Kit-\" Hrelle repeated.\n\nBut the cadet finally departed with uncharacteristic incivility.\n\nHrelle looked to his wife. \"I didn't expect that.\"\n\nKami nodded. \"It's a facade. He's afraid.\"\n\n\"Can't blame him.\"\n\n\"Do you want me to stay with him? Keep trying to convince him he doesn't have to be brave and stupid, like you?\"\n\nHrelle eyed her as she smirked. Then he shrugged. \"He'll be okay; Sasha and his other friends will be with him. I have some more calls to make... And so do you. I'm hitting some bureaucratic walls, and I could use your charm.\"\n\n\"How true.\"\n\n*\n\nKit was striding back towards his quarters when he stopped at the voice. \"Kit!\"\n\nHe stopped, surprised by the bittersweet feelings the voice brought in him. \"Intimate Friend Hafsa, it is pleasing to see you again-\"\n\nHe stopped as she practically meteored into his arms, clutching him tightly. \"I just heard, Kit! I'm sorry, I'm so sorry! They can't do this to you!\"\n\nKit struggled as much with his own emotions as with the effort to breathe in her grip. \"It's- it's okay-\"\n\nBut then she pulled back, her upset eclipsed by her anger. \"No! No, it isn't! It's damned wrong! My father's First Officer on the Potemkin, I've already sent him an urgent message about it! And there are others doing the same!\"\n\n\"Others?\"\n\nShe nodded, taking his hand in hers and smiling slightly. \"Your friends. Come on.\"\n\n\"No, please, I need to pack-\"\n\n\"No, you don't. Come on!\"\n\nShe led him below deck, ignoring his attempts to stop and speak, until they entered the Shuttlebay, and he saw Alpha Squad and many other cadets milling about the shuttle Sureswift. \"Very Good Friends, I-\"\n\nSasha was coordinating something with Rrori, Jonas and Neraxis, but now she strode up to him. \"Kit, it's all been worked out! No need to worry!\"\n\n\"Worry, Respected Squad Leader?\"\n\nShe nodded. \"We know. We all know. And we're doing something about it.\" She led him closer to the shuttle. \"Jonas has disabled the onboard comm system and transponder and altered shield harmonics to mask the energy signature, Neraxis and Thykrill have configured the microprobes to emit false signals in different directions, and Rrori has volunteered to pilot you to Ceti Delta III.\"\n\n\"Ceti Delta III? But why?\"\n\nHafsa grinned. \"To get you away from your people, of course! But officially, we'll be on a scientific expedition!\"\n\n\"We?\"\n\n\"Yes, Kit, we. I'm coming along with you for company.\" She grinned. \"Unless you're sick of me after our one time together?\"\n\n\"Not at all! Indeed, I would be eager for uninterrupted coitus with you at the earliest opportunity.\"\n\n\"What a sweet talker,\" Neraxis quipped.\n\n\"But wait- you, all of you, you can't do this-\"\n\n\"Yes we can, Kit,\" Sasha confirmed. \"And if the worst comes to the worst and they're still after you, then we'll get you to Deep Space Nine. I've heard of a Ferengi there who might be able to get you some fake IDs. And we have some gold pressed latinum strips to pay for them, and maybe even passage to a non-aligned world.\"\n\nKit looked around him in disbelief. \"My Very Good Friends, you should not be doing this! You are risking your careers!\"\n\nEydiir clasped him by the shoulder. \"It would not be much of a career were we to allow you to be treated like this.\"\n\n\"Indeed,\" Rrori agreed, \"If I did nothing, I would not be able to look at myself in the mirror. And I like doing that a lot.\"\n\nSasha grinned. \"We're not doing anything wrong, Kit! No one's ordered us not to help you, after all!\"\n\n\"No one should have to,\" chided a new voice.\n\nAll eyes turned to Neheru, the tall, spindly Kelpien seemingly stepping out of nowhere as he walked up to the group. \"I doubt if a Starfleet Board of Inquiry will appreciate your verbal legerdemain, Ensign Hrelle.\"\n\nSasha stepped forward. \"Lieutenant, we were just preparing some drills-\"\n\nHe held up a hand. \"Save your lies, Ensign. I know that you are aware of Cadet Kitirik's imminent departure, I have noted the huge increase in urgent communications requests from the cadets to their families and friends, the lack of off-duty cadets in the Rec Lounge and Mess Hall, and the flight logs and security clearances Ensign Falok just attempted to secretly enter into the ship's records without my knowledge. I may not be the brightest star in the constellation, but one does not have to be a Sherlock Houses to work out your intentions.\" He looked around at the cadets. \"No shuttles will be leaving today. Cease this activity and leave the Shuttlebay at once, and I will forget any of this occurred.\"\n\nSasha glanced at those around her, before stepping forward, coming to attention and announcing, \"Sir, with all due respect... I will not be leaving.\"\n\nJonas stepped up now. \"Sir, with all due respect... I will not be leaving.\"\n\nEydiir joined them. \"Sir, with all due respect... I will not be leaving.\"\n\nAnd others stepped up, all declaring the same thing, ensuring Kit remained protected behind them.\n\nNeheru stayed silent, taking it all in, until the assembled protestors had made their stand. Then he tapped his combadge. \"Lt Neheru to Commander T'Varik: if you are available, please come to the Shuttlebay. Immediately.\"\n\n*\n\nUSS Starsong, Deck 1 Fore -- Captain's Ready Room:\n\n\"Captain, we have a secure incoming transmission.\"\n\nWhile his Bridge crew busied themselves with the impromptu assignment given them, Weynik secretly monitored the content of some of the transmissions, identified the cadet Hrelle had mentioned, learned more about him and read between the lines of the various communiques. And the more Weynik learned, the angrier he grew.\n\nSo he knew his response to the interruption was sharper than perhaps it should have been. \"I would hope so, Commander! I ordered you to do nothing for the last three hours but to ensure the transmissions to and from the Surefoot get through without problems or delays!\"\n\n\"No, Sir, this one is directed at you, from Admiral Trenagen at Starfleet Intelligence HQ.\"\n\nWeynik sat up, setting aside his PADD. \"Onscreen.\" As the white-haired, broad-nosed, elderly human male appeared on his desktop screen, he nodded to it. \"Admiral, to what do I owe the honour?\"\n\n\"Captain Weynik, it has come to the attention of my offices that you are delivering communications to and from the USS Surefoot.\"\n\nWeynik forced down his anger to reply curtly, \"Yes, Sir.\"\n\nTrenagen paused, clearly expecting more, before finally asking, \"And why are you doing this?\"\n\n\"The Surefoot is experiencing technical problems. They have urgent communications to be relayed. They asked for assistance. We're providing it.\"\n\n\"I see. Just yourselves?\"\n\nAs if you didn't know, Weynik thought. \"No, Admiral. The Valiant, the Columbia, the Si Shen, the Hyperion, the Damascus and others. We're all assisting.\"\n\n\"I see. How spirited of you all.\"\n\nWeynik shook his head. \"Spirit has nothing to do with it, Admiral. General Order 5 requires us to come to the aid of other Starfleet vessels and crews in distress.\"\n\n\"Indeed -- though perhaps not at the expense of the greater good.\"\n\n\"You're right, Admiral. Maybe instead we should all focus on who or what has limited the Surefoot's communications ability, at a time when they need it the most? Perhaps someone in Starfleet Intelligence might have the answer to that?\"\n\nTrenagen's brow furrowed. \"You and the other ships in your sector have existing missions that are now being interrupted, all for the sake of one individual.\"\n\nWeynik folded his hands on his chest. \"One individual, being targeted by his people. What they believe, what they want to do, is barbaric.\"\n\nTrenagen stared hard at him. \"One could say the same about aspects of the Klingon Empire, and yet they remain valued allies. Tolerance for other cultures should be a cornerstone of a Starfleet officers mindset -- especially a culture which can benefit with greater contact from outside sources like the Federation.\"\n\n\"And very especially if they have something to offer us, right? And reading between the lines, by your reckoning, that's more important than this Cadet Kitirik's rights.\"\n\n\"It is most unfortunate about the cadet, but we have greater responsibilities. As the Vulcans say, 'The needs of the Many outweigh the needs of the Few, or the One'.\"\n\nWeynik grunted. \"People like referencing that. But they never use the full quote: 'The needs of the Many outweigh the needs of the Few, or the One -- but the only truly ethical choice can be made by the Few, or the One.' The Vulcans never intended for it to be used to justify minority persecution.\" His expression hardened. \"Or base treachery.\"\n\nThe Admiral's expression narrowed. \"Clearly your friendship with Hrelle is having a perilous effect on you.\"\n\n\"If you are referring to Captain Hrelle, the only time I'm in peril with him is when I get in his way when he's racing to the buffet table. Admiral, we're both busy men, so let's cut to the chase: are you ordering me not to assist in saving an innocent young man, a decorated fellow member of Starfleet, from conscription, persecution, mutilation, by a foreign government trying to claim him?\"\n\n\"No, Captain. Of course not.\"\n\n\"Good. Because when I defy an Admiral's orders, I prefer it to be my father's; I like to keep it in the family. Starsong out.\"\n\n*\n\nUSS Surefoot-A, Deck 4 Fore -- Shuttlebay:\n\nCommander T'Varik entered, immediately counting the number of cadets present, noting that it had increased since Lt Neheru's report, and now included Gamma Squad, who were meant to be on duty on the Bridge at this time.\n\nShe also noted the phaser sidearms in holsters on the Security cadets, obviously obtained from the weapons lockers onboard the shuttles. Not drawn, but still present, implying the strength of the resolve behind the cadets' actions.\n\nShe ignored the Second Officer to stride up to the obvious leader of the rebellion. \"Ensign Hrelle, you will cease this activity immediately.\"\n\nSasha stood to attention. \"I must respectfully decline, Ma'am.\"\n\n\"You are deliberately defying a direct order from a superior officer?\"\n\nAfter a reluctant pause, Sasha replied, \"Reluctantly, yes, Ma'am.\"\n\nT'Varik paused, relaxing her stance as she saw Kit standing in the back, close beside Cadet Al-Samra. \"Sasha, I am not unmindful of the reasons for these actions, nor am I unsympathetic. The Captain, the Counselor and myself have been in communication with a number of different avenues of appeal. These have been transmitted, and their eventual success will be assured.\"\n\nSasha visibly reacted, before asking, \"But will a response be received before the Qarari come to take Kit?\"\n\n\"That... cannot be guaranteed.\"\n\n\"Then, with respect, until the safety and security of my crewman can be guaranteed, we will be remaining here.\"\n\nT'Varik stared hard at her, before looking to the others, first the other Squad Leaders, then the rest of the cadets. \"I am ordering you to return to your duties, or to your quarters. Failure to obey will result in charges of insubordination being filed against all involved. I should not have to elucidate the effects of such charges on your burgeoning careers. Depart now, and nothing further will be said of it.\"\n\nShe watched them glance at each other, shift in place, heard them murmuring. But no one moved.\n\nT'Varik reached up and tapped her combadge. \"Security Alert: Lieutenant C'Rash, report to the Shuttlebay with a Security team immediately.\"\n\nThat triggered a reaction among them, and with Lt Neheru. \"Commander! Do you really think that's necessary? Their reasons are-\"\n\n\"-Not the issue,\" she finished for him, as she continued to stare at Sasha, who had stiffened on hearing the call for Security, but otherwise kept her composure.\n\nThe Vulcan listened to the doors sliding open behind her, and four pairs of footfalls, one of them she recognised as the Chief of Security, her sibilant Caitian tone curious as she drew up, regarding the cadets and asking, \"Commander?\"\n\nT'Varik folded her hands behind her back. \"I have ordered these cadets to disperse. They have refused. I am charging them with gross insubordination. They need to be confined to the Brig.\"\n\nVoices ran through the cadets.\n\nC'Rash looked to the First Officer. \"Commander, if we put thirty cadets in our Brig they'd be packed in there like Gideonites.\"\n\n\"I see. Then the best alternative is have them confined here indefinitely, pending my investigation.\" She took a microsecond to gauge -- and secretly enjoy -- the reaction on Sasha's face, before continuing. \"They may utilise the facilities on the shuttles for food and hygiene. But none of them are permitted to leave... or to be taken from here... without my clearance. This includes Cadet Kitirik. Is that understood?\"\n\nC'Rash smiled. \"Yes, Commander.\"\n\nT'Varik focused on Sasha, who looked visibly relieved. \"Do not relax just yet, Ensign. My orders may still be countermanded upon the arrival of the Qarari delegation. As you will not be distracted by trivialities such as ship duty and final exams, I suggest you use the opportunity to devise alternative delaying tactics.\"\n\nIn the rear of the group, Hafsa clung onto Kit's arm, grinning. \"That was close!\"\n\nKit was pale. \"Yes.\"\n\nShe looked to him, before tugging on his arm and leading him away, into the open doorway of the Sureswift, and then into the sleeping quarters. Kit glanced around. \"Intimate Friend Hafsa, despite my earlier proclamation about resuming coitus with you, I do not believe it is appropriate at this time-\"\n\nShe raised a hand to his mouth. \"I didn't bring you in here for that. I want to know why you're looking so glum, when we're all working hard for you?\"\n\nThe Qarari's throat fluttered, and he slumped down onto one of the bunks, staring across at the blank wall opposite. \"You are all working hard for me. The Most Respected Senior Officers are all working hard for me. But no one is listening to me.\"\n\n\"Listening to you? Of course we are, Kit-\"\n\n\"NO!\" Now he faced her. \"You are not! You are all risking so much, when I am prepared to return and present my case to my people in person!\"\n\n\"But you'd do the same for any of us, silly!\"\n\n\"Forgive my rudeness, Hafsa, but we are not in that situation, we are in this one! And I...\"\n\nShe took his hands in her own, squeezing. \"What is it? You don't have to brave about all this-\"\n\n\"I'M NOT!\" Tears welled up around the lower half of his round, bronze-black eyes. \"That's just it! I have tried to be brave! I have tried to be noble! I have tried to insist that all of you should not be doing this for me, that I was ready to return and face my people again.\" His voice cracked. \"But I'm... I'm not. I'm... terrified.\"\n\nHafsa's own eyes welled up now. \"Of course you are, Kit. Who wouldn't be?\"\n\nHis throat fluttered. \"I knew I was different from when I was just a hatchling. I would secretly read science and medical texts. I would pretend to be a doctor or scientist. I would ask questions of others about it -- until I learned not to.\n\nI knew from such a very young age that what I felt about myself went against our Behest, the teaching of our Gods, and against our laws. And it upset and angered my clutch. All of them- no. Not all. I had an older brother, Arishkigel. He loved me, regardless. He didn't understand how I could feel this way. But he at least tried.\n\nBut the others? My fathers and other brothers? They would have preferred if I'd been dropped when I was still in the egg.\n\nAnd I felt guilty over the trouble I was causing. I hated myself for being like that. I... tried to kill myself because of it.\n\nAnd... if they take me, change me back into what I was... I fear I will do it again...\n\nI don't want to go. I need you. I need all of you. I am so weak-\"\n\nHe broke down, Hafsa holding onto him tightly as she told him softly, \"No. You're not weak. You're strong. Asking for help from those around you doesn't mean you're weak. It means that you just want to stay strong.\n\nAnd you will...\"\n\n*\n\nDeck 2 Fore -- Bridge:\n\nHrelle stopped as he entered, finding Lt Neheru -- alone. \"What's going on?\"\n\nThe young Kelpien rose from the chair and faced him. \"Sir! The, ah, the cadets have, ah... taken over the Shuttlebay. They are protecting Cadet Kitirik, and refuse to leave or let him leave. We still have a skeleton crew manning essential stations; as we are at full stop here and not on Red Alert, I can manage here alone for the interim.\"\n\nHe blinked. \"And let me guess: is the leader of this mutiny my daughter?\"\n\n\"Yes, Sir. I made Commander T'Varik aware of the situation; she has officially confined them to that area pending disciplinary procedures, and has assigned a Security team to guard them- I mean, guard over them, of course.\" He tried his best to conceal his amusement. He failed. \"Sir, any word about-\"\n\n\"I've contacted everyone I can, and now we play the Waiting Game.\" He looked at the main viewscreen. \"Which, based on your announcement that called me here, is about to end.\"\n\n\"Yes, Sir. The USS Coventry has arrived.\" He glanced down at a signal on the arm of the command chair. \"And they are signalling us. Audio only.\"\n\nHrelle looked up again at the small, sleek, modular Aerie-class vessel, noting from the tactical data that it was proverbially flying diplomatic colours - meaning they were untouchable. No matter how much Hrelle wanted to touch them. \"Let's hear them.\"\n\nSeconds later, a young, brash male voice made his ears twitch. \"Surefoot, this is Galactic High Commissioner Franklin Burnsworth.\" He spoke every syllable of his title and name with gravitas. \"We are here to collect your prisoner. Beam him over immediately.\"\n\n\"Commissioner Burnsworth, this is Captain Hrelle. Complications have arisen, and we are unable to comply.\"\n\n\"Complications? What are you talking about? Do your job, Hrelle, and send the prisoner to us!\"\n\nNeheru glanced up at Hrelle, clearly as nonplussed as he was over the rudeness. Hrelle bit back his initial response to explain, \"As I said, Sir, complications have arisen, but I think it would be best if we discussed it face to face. Perhaps I should beam over and-\"",
        "\"No, Hrelle. We'll beam over. Admiral Trenagen warned me you wouldn't make this easy for us.\"\n\nHrelle let his claws pop out as he kept his hands behind his back. \"As you wish, Commissioner. Please have the Coventry crew coordinate with mine. I will meet you in our Transporter Room in thirty minutes.\"\n\n\"Five, Hrelle.\"\n\nThrough bared teeth, Hrelle relented. \"Five, then. Surefoot out.\" As the channel closed, he nodded to Neheru. \"Transporter Room 1, Lieutenant.\"\n\n\"Sir, Transporter Room 3 is closest to the Shuttlebay. Transport Room 1 is the farthest from it.\"\n\n\"True, but as you heard, he was warned I wouldn't make this easy for him. I'd hate to be a disappointment.\" He paused and asked, \"I was hoping to have heard something back from Out There. When -- if -- they do, patch it through to me right away. I'm hoping for a Last Minute Save.\"\n\n*\n\nThere was no one manning the Transporter Room, nor any reason to, as Neheru took control from the Bridge, linking with the Coventry's own and helping bring into existence six figures. One was a pale-skinned human male perhaps less than half Hrelle's age, with swept-back mahogany hair, sharp nose, a wispy moustache and narrow chin, and wearing a plain dark blue two-piece civilian suit with silver trim and the emblem of the Federation Council on the breast pocket -- and he carried a swagger stick in both hands like a character from another era.\n\nThe five figures behind him were reptoids, who looked and smelled a little like Kit. Four of them were obviously from the Warrior male gender: bulkier, with copper-coloured torsos beneath ceremonial armour plating and horns running from the top of their heads and down their backs; one taller reptoid, an obvious member of the ruling Chancellor gender, possessed a rounder, wider, more human-like head and rich, colourful robes. Hrelle drew up to them. \"Welcome onboard the Surefoot, gentlemen.\"\n\nThe human stepped down from the pad, regarding Hrelle like the Captain was some raw recruit. \"Galactic High Commissioner Burnsworth.\" He indicated the Qarari with the robes. \"This is Ambassador Kashtiliashu of the Qarari Diplomatic Clutch.\" The Qarari nodded, Hrelle echoed it, while Burnsworth continued. \"I was assigned by the Council to facilitate the transfer of the fugitive Kitirik to them and escort them back to Qarari space. I promised them we would maintain a punctual schedule.\" He reached out and tapped Hrelle on the chest with the tip of his stick. \"Care to explain why I'm not keeping that promise, Hrelle?\"\n\nThe Caitian's hackles rose, but he ignored it to focus on maintaining his composure. \"As I explained, a complication has arisen with the cadet. I was hoping we could discuss this in my Conference Room.\"\n\nBurnsworth frowned. \"What's there to discuss? The fugitive has been remanded to a duly-authorised representative of the Qarari government. Turn him over. Now.\"\n\nHe looked to the Qarari. \"But you've had such a long journey, maybe you'd like a tour, or maybe some replicated honey-coated bugs in our Mess Hall? Insectivores have praised them.\"\n\nBurnsworth raised the stick to the tip of Hrelle's snout. \"You've wasted more than enough of our time, Hrelle. Let's get moving.\"\n\nHrelle stared at it, picturing ramming it up the Commissioner's ass, sideways, before replying, \"Of course. Follow me.\"\n\nAs they walked, Hrelle and Burnsworth leading the way, the Commissioner noticed Hrelle still glancing at his stick, and made a satisfied sound. \"I see you're admiring this.\"\n\n\"I wouldn't exactly call it admiration.\"\n\nBurnsworth held it out for Hrelle to inspect. \"It was a gift from a Klingon delegate following a successful negotiation on Albus IV. It's made from genuine sorHap wood; she had it carved especially for me.\"\n\nHrelle looked at it, reading the inscription; his knowledge of Old Klingon was rough, but it came out as something like The bearer of this stick is a spineless little- He looked up and asked, \"You haven't had this translated, have you?\"\n\nBurnsworth frowned and retrieved his stick. \"There's no need; I know how she felt about me. Just how far away is your Brig, Hrelle?\"\n\nHrelle kept his eyes ahead. \"Kit is not in the Brig, Commissioner.\"\n\n\"Why not?\"\n\nHrelle shrugged. \"Maybe because he hasn't done anything wrong?\"\n\n\"What? Didn't you even read the briefing?\"\n\nHrelle stopped, turned and faced Burnsworth. \"Having the desire to be who you are is not a crime, Commissioner.\" He spared a glance at the Ambassador, adding, \"At least, not in the Federation.\"\n\nThe Qarari leader looked up at Hrelle and smiled diplomatically. \"Respected Captain, it must seem perplexing to you that we would be so strident in this task, and I am certain that you and your people had the best of intentions in enabling and encouraging the delusions of the Aberrant-\"\n\n\"His name's Kit,\" Hrelle informed him sharply. \"Not Aberrant. And let's not pretend that you're here to 'help' him. You learned he was the author of the accounts being published on your world, and you want to silence him.\"\n\nAn angry -- and anxious-looking -- Burnsworth tapped Hrelle's arm again with his stick. \"Enough time wasting, Hrelle. Take us to the fugitive!\"\n\nThey entered the Shuttlebay, and Hrelle noted how the cadets had been joined by what looked like nearly other member of the crew: Chief Grev and his Engineering staff; Doctor Masterson and his medical staff; Lieutenant C'Rash and her Security staff; Lieutenant Velkovsky and her Flight Ops and Support staff -- even Kami and Misha, standing beside Kit, T'Varik and Sasha.\n\nBurnsworth stopped and stared in confusion. \"What's going on here?\"\n\n\"A good question, Commissioner.\" He led the way forward, asking, \"Well, T'Varik?\"\n\nHis First Officer folded her arms behind her. \"The cadets, led by Ensign Hrelle, have refused to allow Cadet Kitirik to be handed over to the Qarari party. They're being held here pending an Academy investigation to be conducted by myself.\"\n\n\"I see. And my crew?\"\n\nT'Vark glanced at then, as if noticing them for the first time. \"They are... off duty. What the crew do in their off-duty hours is up to them.\"\n\n\"WHAT?\" Burnsworth pushed past Hrelle to stride up to T'Varik, pointing his stick at her. \"I am Galactic High Commissioner Franklin Burnsworth! On that authority, I demand that you surrender the fugitive!\"\n\nT'Varik regarded the tip of the stick with cool derision. \"Your authority is not valid here. As per Starfleet Academy Regulation 105.6: 'Principle authority over cadets while on Starfleet Academy property rests with their Academy Liaison': myself.\"\n\n\"This is not the Academy, Commander!\"\n\nNow Sasha spoke up. \"With respect, Sir, as the cadets are being trained and educated here, it is de facto Academy property. You can of course file a complaint to the Academy Superintendent, Admiral Ruth Goldstein.\"\n\nBurnsworth glared at her. \"Who the hell are you?\"\n\n\"Ensign Sasha Hrelle, Sir.\"\n\n\"Hrelle?\" He looked to the Captain, clearing not able to make a connection between the Human girl and the Caitian man. \"She's related to you?\"\n\nHrelle nodded. \"My stepdaughter. And my wife's the Counselor, my cub's godmother is my First Officer, my Chief of Security is my niece-\"\n\n\"We're a family business,\" Sasha quipped.\n\nBurnsworth focused on her again, drawing up aggressively close to her -- only stopping when Misha, in Kami's arms standing beside Sasha, bared his teeth and growled at him. Then the Commissioner regained his bearing. \"Young lady, I don't know what you think you're doing here, but I'll have this Academy nonsense thrown out immediately-\"\n\nSasha nodded. \"After which, Sir, I will invoke Starfleet General Order 17: 'Command-Level Officers of Starfleet vessels and installations are to consider the lives of their crew members and civilians as sacred. In any potentially hostile situation-'\"\n\n\"What? You're not a Command-Level Officer! You're just a snotnose little brat that needs to be taught a lesson!\" He stuck his stick in her face for emphasis.\n\nNow Misha let off a roar -- albeit a tiny one -- as he struggled to get out of his mother's arms to swipe at Burnsworth with the claws on his stubby hands, as T'Varik interjected, \"In fact, Ensign Hrelle and the other Cadet Squad Leaders are registered as Command-Level Officers onboard the Surefoot. Ensign Hrelle herself has officially logged over 452 hours in operational command of this vessel, as well as having earned two Starfleet Medals of Commendation for Exceptional Valour, among other accolades.\n\nAnd though she would hopefully agree that she still has much to learn, she can hardly be classed as 'just a snotnose little brat'.\"\n\nBurnsworth glared at the Vulcan, before turning back to Hrelle, striding up and raising his stick to him again. \"I'll contact your superiors-\"\n\nHrelle snatched the stick from him, somehow resisting the urge to snap it in two. \"You'll get this back when you're ready to leave.\" He looked up to his crew. \"Anyone else have anything to add?\"\n\nDoc Masterson smiled. \"Actually, Captain, I've been treating Cadet Kitirik for a fungal infection that is particularly nasty to reptoid species; I couldn't turn him over to a vulnerable race like the Qarari without a full quarantine period.\"\n\n\"And after that,\" C'Rash continued, \"I'll have to conduct a security investigation. If Kit is a fugitive as the Qarari say, he's had access to sensitive information. I'll have to review all of his activities over the past two years, and interview him and his friends.\"\n\n\"As Ship's Counselor,\" Kami offered, rocking a still-snarling Misha, \"It's my medical duty to provide a pre-transfer psychiatric evaluation to determine his fitness for travel. Might need to call in for a second opinion. Maybe even a third.\"\n\n\"And I'm pretty sure I detected a corbormite leak in this Shuttlebay!\" Grev announced gruffly. \"Nobody goes until every micron of this place is scanned and scrubbed!\"\n\nBurnsworth stared in abject disbelief. \"What is the point of delaying the inevitable, Hrelle? It's madness!\"\n\n\"Not madness, Commissioner,\" T'Varik corrected. \"We are delaying the inevitable because we know that the Qarari's claim on Cadet Kitirik is based on falsified evidence.\"\n\nHe looked at her, aghast. \"Falsified?\"\n\n\"Yes. We've provided Admiral Goldstein with verified evidence that, during the times the Qarari say Kit was visiting his homeworld, he was in fact on documented missions onboard the Surefoot. In addition, the genetic identification they used, although based on Kit's original DNA patterns from before he departed, is outdated.\"\n\n\"Normally you can't tell someone's age from their genetic patterns,\" Doc Masterson explained. \"But our little green fella here had genetic modification as part of his transgender treatments, and there are markers in there that act as time signatures.\"\n\n\"But- But this is preposterous!\" Burnsworth stammered. \"They would have known they couldn't get away with it indefinitely!\"\n\n\"No, not indefinitely,\" Hrelle admitted. \"Just long enough to get Kit onboard the Coventry. Once there, we couldn't get him back without causing an interstellar incident.\"\n\nBurnsworth shook his head. \"This is absurd!\" He turned to Kashtiliashu. \"Ambassador, deny their allegations! I'll support you in any complaint you wish to make about this man and his crew-\"\n\n\"We do not deny it.\"\n\nThat made Burnsworth's jaw drop. \"You- You don't?\"\n\n\"No. It was deemed a necessary tactic by our government, to facilitate taking the Aberrant into custody.\" He shook his head in bemusement as he regarded the Surefoot crew. \"I see this... menagerie of aliens, and do not understand them. For some reason, they choose to enable the Aberrant's delusions-\"\n\n\"I have a name, Respected Ambassador.\" Kit worked his way through the people surrounding and protecting him, coming to the forefront to stand between Sasha and Kami. \"I am Kitirik. My friends here call me Kit.\"\n\nHrelle felt the revulsion from the Ambassador and several of his entourage on seeing Kit in his altered form, approximating a Seeker's body -- but there was one Warrior in the back who reacted more profoundly. And not negatively.\n\nBut Kashtiliashu was speaking again before he could contemplate it further. \"I respectfully observe that if they are your friends, you would be concerned for the careers they are putting at risk for your sake.\"\n\n\"I am, Respected Ambassador. And for a time, I tried to dissuade them from helping me. I thought I had to be strong, and face you unaccompanied. But I have since learned that there is a strength in being able to ask for help. Not because I am weak, but because I wish to remain strong.\"\n\n\"You are weak,\" Kashtiliashu sneered. \"Weak and Aberrant. You refused the help your own people offered you. You let these aliens enable your delusions. You shame the Gods.\"\n\n\"My people did not offer help,\" Kit replied calmly. \"They offered reinforcement of their own agenda about what is normal and right for me. The identity that nature assigned me at conception was the delusion; what you see now is a reflection of the true Me. And if our Gods exist, then They made me who I am. Any shame They have over Their creation would be more a reflection on Them than me.\"\n\n\"You speak Blasphemy!\"\n\nKit nodded. \"Yes, it is an Optional course at Starfleet Academy.\"\n\nKashtiliashu bristled. \"You can be flippant about this?\"\n\nKit stared back hard. \"My people's actions have driven me to terror, despair... suicide. But at this point I refuse to let them have anything more from me than humour... and defiance.\"\n\n\"Stubbyclaw...\" said a voice from the rear.\n\nKit started, his mouth opening but lacking any words.\n\nFrom the back of the Qarari entourage, a Warrior stepped around into view. To Hrelle, he looked almost indistinguishable from the rest -- except for his body language, lacking arrogance and disdain as he stepped cautiously forward.\n\nOf greater interest was Kit's response. \"Arishkigel?\"\n\nThe Warrior nodded. \"You remember me, Brother. I'm glad. I remember you, of course.\"\n\nKit almost shook. \"What- What are you doing here?\"\n\n\"I volunteered. I thought, as your brother, I might be able to make the extradition easier on you.\" He held up a huge, clawed hand, holding it out towards Kit. \"You've changed, much, since I last saw you. But I hear the same Kitirik, the same little Stubbyclaw I'd pick up when he fell during the Games and tried not to cry in front of our brothers and fathers.\"\n\nKit's throat fluttered. \"Ari... I- I am glad that your war has not claimed you.\"\n\nHe lowered his arm again. \"Our war, Kit. It is yours too. You are still Qarari. Your people need you. Our fathers still speak of you.\"\n\nKit's eyes darkened. \"My people call me Aberrant. They persecuted me. They sent me to a camp to beat what they considered the truth into me. And now they seek to take me back against my will and reverse all I have done to make me Who I Am. Do you truly expect me to feel allegiance for them now? As for our fathers, tell me, Brother, have our fathers rescinded their disownership of me?\"\n\n\"Our fathers... they were only trying to help you... they believe they failed as parents for not changing you.\"\n\nKit shook his head. \"On this ship of mine, I have seen how parents should think and feel and act with their children. Ari... ours did not fail as parents for not changing me... they failed for trying to change me.\"\n\nArishkigel was as huge as the other Warriors -- but now he seemed, at least to Hrelle, fragile, vulnerable. \"We- I didn't want to hurt you...\"\n\nKit nodded now. \"I know. Of them all, you genuinely tried to help, to understand. You saw. Do you remember how I was on our world? I was miserable.\n\nAri... Dear Brother... I am not miserable anymore. I have found myself. I have found friends. Family. A lifepath. I am happy now. I wish... I wish you and all our people could understand-\"\n\n\"Enough!\" Kashtiliashu suddenly barked, all pretence at protocol momentarily dropped. \"We have wasted enough time! Just take him!\"\n\nTwo of the Warriors stepped forward towards Kit, drawing weapons.\n\nAlpha Squad pulled Kit back and swarmed around him, Sasha declaring, \"You want him, you'll have to go through me!\"\n\n\"And me!\" Jonas added.\n\n\"And me!\" Eydiir joined.\n\n\"And me!\" Rrori growled, claws bared.\n\n\"And me!\" Neraxis sneered, her hand resting on the top of the phaser on her belt.\n\nAnd the rest of the cadets stepped up and declared the same, the air filling with verbal solidarity.\n\nAnd when they were done, T'Varik moved between the cadets and the visitors, joined by Kami, C'Rash, Masterson, Grev and others, the First Officer calmly announcing, \"And if you wish any of these cadets, you will need to go through us.\"\n\nThe rest of the crew swarmed around on both sides.\n\nFinally Hrelle stepped up, indicating his family, his cadets, his crew. \"And if you want any of them, you'll have to go through me.\n\nSpoiler Alert: you won't get through me.\n\nI have a Beast at my beck and call, ready to take you all on.\n\nYou don't understand us, Ambassador? This is who we are: a menagerie of aliens, who by all rights shouldn't be able to work together. But we do. Who shouldn't care about each other. But we do. Who probably shouldn't be able to stand against the threats we face. But we do.\n\nYou're not taking Kit. And by the time you make your protests, the Council will have seen the proof of your deception, and withdrawn any claim you might have over him.\"\n\nThe Ambassador glared at Hrelle, before finally raising his hands in surrender, turning to Kit. \"Stay with these mongrels. Your existence is an offence to us. You will be banished for life from Qarar. And we will take measures to prevent you from spreading any more of your lies.\"\n\nKit nodded. \"I'm... sorry.\"\n\n\"It is too late for your apologies-\"\n\n\"No, Respected Ambassador. I do not apologise. I am sorry for you. Sorry that you choose Hate over Love. That you are prepared to shun your family members, your friends, because of something they have no control over. It is such a waste.\n\nEspecially since shunning us will not make us go away.\n\nWe are many. We are proud. And we don't give a damn if you're offended by us.\"\n\nThe Ambassador looked stunned by the response.\n\nFortunately, Hrelle's combadge chirped. \"Captain, we've just receive word from the Federation Council: the extradition order for Cadet Kitirik has been rescinded following new evidence received, and Commissioner Burnsworth is ordered to escort the Qarari Ambassador and his party out of Federation space effective immediately. Identical orders have apparently been transmitted to the Coventry.\"\n\n\"Thanks, Lieutenant. Stand ready to beam back the Commissioner and his party. Hrelle out.\" He smirked. \"Well, a little late, but at least it's official.\" He looked to Burnsworth. \"Unless you still wish to have us arrested?\"\n\nA profoundly chastened-looking Burnsworth flushed. \"I, ah, I think I'll be too busy with the Qarari. Could you- Could you please have someone escort us to your Transporter Room?\"\n\n\"Of course.\" After a thought, he handed back the stick. \"Seriously, get someone to translate that for you.\" Then he motioned to C'Rash. \"Lieutenant, if you would?\"\n\nThe black-furred Caitian female drew up, motioning to the Shuttlebay doors. Burnsworth and the Qarari started away -- but one Qarari, Kit's brother, remained, silent and staring.\n\nAnd now approaching.\n\nHrelle, Sasha and several others tensed, as if the Qarari might attack Kit or do something else desperate.\n\nInstead, Arishkigel embraced him tightly.\n\nWhen he finally pulled back, the Warrior's eyes were filled with tears as he looked at Kit one final time. \"Stay happy, Stubbyclaw. And know there will always be someone back home who loves you. Whoever you are.\"",
        "The tears flowed down Kit's face unabashed as he watched his brother and the other depart, leaning on Sasha and Jonas for support. Hrelle reached out and patted him on the shoulder, before moving to his wife and holding out his hands for Misha. \"Let me take the Warrior Prince for his supper while you help Kit.\"\n\nKami nodded and passed him the cub, who had fallen asleep from exhaustion following his epic battle against the man who had threatened his big sister, as Kami noted proudly, \"Did you hear that little roar he gave? That was the cutest thing!\"\n\n\"I know! I wish we'd recorded it for his grandparents.\" He cradled Misha as he drew up to T'Varik. \"Commander, I believe we're done. Unless you intend to file charges of mutiny and insubordination against anyone here?\"\n\n\"As such an act would ultimately reflect upon my position as First Officer and Academy Liaison, I will not. This time.\"\n\n*\n\n\"USS Surefoot-A, Captain's Log, Stardate 54985.39, Captain Esek Hrelle, Commanding: The USS Coventry has departed, and Kit's legal status has been reinstated. And, with numerous sponsors onboard, he has applied for full Federation citizenship, to prevent a repeat of what happened.\n\nOur problems with communications and accessing the subspace relay network have vanished as quickly and mysteriously as they appeared. I am arranging for bottles of Caitian whiskey to be sent to the captains of the local Fleet who assisted us -- except for Captain Weynik, to whom I'm sending melted cheese and spicy shuris mince, with instructions to cover himself with them the next time we talk.\n\nI still worry about Kit. Regardless of what he said, it will still be devastating to be formally and permanently excluded from his people. But then, I thought my own disgraced status on the Caitian Clan Registry, an act of petty vengeance from my late birth-father, would be with me for the rest of my life. Who knows what tomorrow brings us?\"\n\n*\n\nFrom the bathtub, Kami raised a furry leg and watched the water drip down the length of it. \"Hey, Sexytail, stop the poetry, come on in and play Pirates with me.\"\n\nHrelle grinned and shut off his logbook, listening and confirming that Misha was still snoring in his crib as he began undressing-\n\nThe intercom chirped. \"Captain, am I disturbing you?\"\n\nFrom the bathroom, Kami listened to the interruption and laughed. Hrelle ground his teeth. \"What is it, Commander?\"\n\n\"There is an incoming transmission, Code 47: For Captain's Eyes Only.\"\n\nHrelle stopped, returning to the desk and ignoring his twitching tail behind him. \"Source?\"\n\nThere was an uncharacteristic uncertainty in the Vulcan's voice. \"The source is... not available. This should not be possible, Captain. All transmissions are-\"\n\n\"Never mind, Commander. Pipe it through.\"\n\nHis desktop screen went from black to the image of Admiral Trenagen. \"Captain Hrelle. Are you alone?\"\n\nHe looked up; Kami had emerged from the bath and had a towel wrapped around her, watching and listening from the doorway. \"My cub is here, and I regret that he doesn't have proper security clearance; shall I wake him and have him placed in the Brig for the duration of this call?\"\n\nThe Admiral smiled. \"I'm sure that won't be necessary, Captain.\"\n\n\"So, what's up? Are you arranging for my court martial?\"\n\n\"No, Captain. As a matter of fact, I wanted to congratulate you on your success with saving Cadet Kitirik. You have proved to be both tenacious and resourceful.\"\n\nHrelle grunted, surprised at that but determined not to show it. \"My people did most of the work. I just stand around and act rude to Admirals and Commissioners. I hear it's considered refreshingly charming.\"\n\nNow Trenagen offered a polite laugh. \"I understand the young cadet is applying for citizenship. I will do anything I can do to assist in that endeavour.\"\n\n\"That's generous of you, Sir. Not 24 hours ago, you will willing to hand him over to the Qarari to achieve your ends.\"\n\n\"Captain,\" Trenagen assured Hrelle. \"You have no idea what my ends are.\" He steepled his hands before him. \"The Qarari will eventually ally themselves with the Federation; they're savvy enough to know an alliance will benefit them more than it will us. And exposure to our principles will benefit their people in the long run, continuing the valiant work of Cadet Kitirik. Whether he was handed over to them or not was ultimately irrelevant to me.\n\nBut I didn't call about the Qarari. I've called about you. About offering you a unique opportunity, to do what you do best, but on a galactic scale, helping save untold billions-\"\n\nHrelle held up a hand to stop him. \"Thank you, Admiral, but as I told you before, I'm not interested in joining Starfleet Intelligence.\"\n\n\"I never said it would be Starfleet Intelligence.\"\n\nHrelle blinked, lowering his hand again, his hackles rising. \"What... exactly would I be joining?\"\n\nTrenagen leaned in closer to the screen, as if he might whisper. \"What if I told you that there was an organisation that has existed since the dawn of the Federation, dedicated to its protection at all costs, without being officially recognised?\"\n\nHrelle forced himself to remain calm, measured in his stance, his voice. \"I... would say that it sounded very much like a legend I once heard. A legend about something called Section 31.\"\n\n\"Indeed? I've heard such legends myself.\"\n\nHrelle grunted. Trenagen was right, the stories of Section 31, a cabal of operatives not sanctioned or even acknowledged by either Starfleet or the Federation, had been around since the days of Warp 1 vessels. Hrelle assumed that they were apocryphal, like the stories of subspace gremlins or the Douwd. He wanted to dismiss them.\n\nAnd he recognised why he wanted to dismiss them: because he wanted to cling onto the belief that the Federation was different from other powers. The Romulans had their Tal Shiar, the Klingons Imperial Intelligence, the Cardassians the Obsidian Order: agencies that operated above their respective governments, agencies that were feared by their people.\n\nBut he wanted to believe that the Federation had higher principles, than to allow such an agency to exist. \"And what else have you heard about them, Admiral?\"\n\nTrenagen smiled knowingly. \"I have heard that they have access to technology far in advance of even the most cutting-edge Starfleet vessels. That they have operatives in many places, in seemingly ordinary jobs. And, like you, they believe in doing what's right, by any means necessary.\"\n\nHrelle's stomach twisted as he listened, before finally speaking up. \"No. I don't believe in that, Admiral. By Any Means Necessary is a dangerous quartet of words to live by. I prefer the rule of law. I might bend it, but-\"\n\n\"Come, come, Captain. This is just two of us speaking privately -- well, the two of us, and your charming wife listening nearby.\"\n\nHrelle tried to control his reaction, failed, and finally looked up at a startled-looking Kami, but asking Trenagen. \"Are you monitoring us, Admiral?\"\n\n\"How could I possibly do that, Captain? That would require technology far in advance of even the most cutting-edge Starfleet vessels. No, I just assumed that she was there, being your wife and this conversation being held from your end in your quarters.\n\n<br >Now, where was I? Oh, yes: you. Today you were willing to bend, even break the rules, in order to help one of your cadets. I respect that. As a member of Section 31 -- if such an organisation existed of course -- you could do far greater good, and with a minimum of accountability.\"\n\n\"And why would I value a minimum of accountability, Admiral? Why would I wish that for anyone? Had you chosen to court-martial, I would have faced it. Accountability keeps us in check -- and if it doesn't, it ensures we're dealt with properly for our actions.\"\n\nTrenagen smiled. \"Oh, please, Captain, there's no need to take the moral high ground with me, for the sake of your wife's presence. I know your record. I know what you've done. You've burned men alive. You've ripped into their flesh.\n\nAnd in your ordinary capacity as a starship Captain, you've sent hundreds of crew of enemy vessels to their deaths -- and sent members of your own crew to their deaths. And everything you've done, you've done to help the Federation and its citizens-\"\n\nHrelle felt sick to his stomach with the course of this conversation. \"Admiral, if I took the moral high ground just because my wife was in the room listening, I'd be on very shaky foundations. And yes, I did all those things -- but, as you pointed out, everything I've done is on record. I'm answerable to people, who are answerable to other people. And it's all out in the open, which is more than Section 31 can say -- if they exist, of course.\n\nTell me, Admiral: did Section 31 sabotage the Surefoot's communications to try and prevent us from lodging an appeal for Kit? What if something had happened that could have cost lives because of that sabotage? Would those responsible face punishment? Or would it all be swept under the carpet for the sake of maintaining all the precious little secrets that organisations like that hoard?\"\n\n\"Captain-\"\n\nHrelle leaned forward. \"For that matter: how did the Qarari government learn Kit was the one posting accounts of his experiences? They're mostly isolationist, they wouldn't have the contacts or the resources to trace it back to a Starfleet vessel. Were they told it by someone in Section 31, perhaps as a show of good faith, or as a spur to get them to try and extradite him? Was Kit nothing more than a pawn? Was I?\"\n\n\"Captain,\" Trenagen repeated, more forcefully.\n\nBut Hrelle refused to give him a chance. \"I'm glad that Section 31 doesn't exist, Admiral, and that this is all just hypothetical. Because if it existed, and I was being recruited, I'd tell their recruiter to kiss my furry ass. I don't like secrets; they give me a belly ache, and I'd rather get one of those from a hot stack of fried chicken and waffles. Still, thanks for the conversation, be sure to call back sometime when you can't talk so long.\"\n\nHe switched off the display. Seconds later, a chirp returned, and for a fearful moment, he thought that it was Trenagen, somehow co-opting their systems. But instead it was T'Varik. \"Sir, we were running a diagnostic on that transmission... when the recording, and all data concerning it, erased itself from our computers.\"\n\nHrelle looked up at Kami, who was approaching him, as he replied to his XO, \"Yes. Disregard it.\"\n\n\"Sir?\"\n\n\"Forget there ever was a transmission. We'll talk more about it tomorrow. Hrelle out.\" He reached out and took his wife's hand. \"Seven Hells...\"\n\n\"He couldn't have been serious,\" Kami asked. \"A secret organisation within Starfleet, the Federation?\"\n\nHe shrugged, welcoming her touch, her scent. \"Nothing's ever been confirmed, of course. That's part of its power, its mystique. And its threat.\"\n\n\"But is it possible? For something like that to exist, without word getting out about it?\"\n\n\"Sure it can -- just the idea of its existence gives power. And maybe there's even a justification to having it, working outside of law and convention to protect us. Maybe I shouldn't be so self-righteous about joining them? If Tattok's right, we could be facing some dark times ahead of us with the Dominion. I've done some... questionable things... to save myself and others... is the line between what I'm willing to do and what they're willing to do really that distinct?\"\n\n\"Yes. Because at least you're clear about what you're willing to do. Section 31 doesn't even have the balls to come out and admit that they exist, much less what they're willing to do.\"\n\n<br >Kami moved around and straddled his lap, wrapping her arms around his neck and her tail around one of his legs. \"I don't want a husband who can't tell me about his day when I see him. I don't want him to lie and hide and obfuscate. I don't want him to do that to my cub when he's old enough to ask his father about the work he does. I don't want you to be ashamed of your job. Or worse, I don't want you to grow inured to the shame behind your job.\"\n\nAs she spoke, Hrelle moved his arms around her, tugging open the towel wrapped around her, stroking her furred back, moving down to her rear and the base of her tail. \"That's a lot of things you don't want,\" he purred against her ear. \"Is there anything you do want?\"\n\nShe smiled and purred back against him as she felt his growing interest. \"As a matter of fact...\"\n\n*\n\nDeck 3 Fore -- Alpha Squad Quarters:\n\nNeraxis slipped into her best jacket and ran her hand over her bald blue head. \"Right, I'm ready to party!\"\n\nJonas lifted up all the PADDs from the table, as no one else was retrieving them. \"Seriously, I keep telling you it's not going to be that kind of party! It's a Study Party! No entertainment, no alcohol, no sex.\"\n\n\"We'll see about that, Scrappy; I like a challenge.\"\n\nBeside them, Sasha grunted. \"T'Varik will be chaperoning, so good luck. Come on, Kit, you too.\"\n\nHe sat at the desk, pensive. \"I will be along directly, Best Friends.\"\n\n\"You had better, or Rrori might make a move on Hafsa.\" Sasha motioned for the others to follow her out.\n\nAlone, Kit breathed in once, twice, and then started the recorder. \"This may be my last message to you all. The authorities on our world are aware of my identity and location, and while they have no power to silence me, they are making efforts to cut off my avenues of communication to you. And I fear they will succeed.\n\nIf it happens, I will be sad, because the responses I have received to my words, not just from people like me but those who thought they knew and understood people like me, has been heartening, encouraging.\n\nBut if it does happen, do not feel sorrow for me. I am very, very fortunate. I have a good, fulfilling life, and friends who have become a family, a family that supports and cherishes me unconditionally. And I have control over my own body, and how the Universe sees me.\n\nAnd if this is my last message, that is acceptable. I started this to be heard. And you heard. I started this to let you know that You Are Not Alone. And you know. And you can be heard too, and let others know that They Are Not Alone either. They cannot silence us all.\n\nAll of you, all of us, deserve to be heard. We deserve to be listened to. We deserve to be valued. We deserved to be respected, and loved, and treated as equals, not Aberrants. The Gods were not imperfect or irrational in creating us. They were inspired. How bland and lacklustre the Universe would be if we all looked the same, thought and felt and acted the same!\n\nAnd I speak, not just to those of us branded as Aberrant, but those who see us suffering under this hate, who know it's wrong, and know that they should do something.\n\nI say Do Something. All of you.\n\nNo matter how old you are, the real first day of your life will be the day you decide that your life is your own, belonging to no one else. This decision is a precious gift you can give yourself at any time.\n\nYou do not have to follow my path. Make your own. You can do anything: write, speak, shout, preach, protest, run, stand, fight, love, support. Just Do Something. I cannot guarantee you success, but I can guarantee that it will be the first step of an amazing journey, and you alone will be responsible for the direction and quality it takes.\n\nHold your head up high and be proud of who you are. There is nothing wrong with you; it is the world which is wrong. But it is not beyond healing, or improvement. It can get better, and it will get better.\n\nIn fact, it has already started. With you, reading these words...\"\n\nTHE ADVENTURES OF THE SUREFOOT WILL CONTINUE..."
    ],
    "authorname": "Surefoot",
    "tags": [
        "fan fiction",
        "star trek",
        "star trek fan fiction",
        "star trek fanfic",
        "caitian",
        "surefoot",
        "alien",
        "federation",
        "starfleet",
        "starfleet academy"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/surefoot-26-who-we-are"
}