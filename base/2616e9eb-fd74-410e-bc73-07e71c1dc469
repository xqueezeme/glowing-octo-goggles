{
    "title": "Let Him Cry Pt. 02",
    "pages": [
        " Note: The first part has published, and I can see a difference in how Literotica's Preview handles formatting vs. how the production process does. Something in the latter converts an en dash into a pair of hyphens even though it's a standard character. I'm sorry about that. I hope you can overlook the awkwardness. I'll see if I can do something to avoid it in this and the following parts.\n\nAnyway, here's part 2 of the story about Matt's measured journey&nbsp;... and I still promise that there will eventually be a romance in it to justify the category. As you might expect, if you haven't read the first part, this one won't make much sense. \n\nThanks to V. who had me think about Matt and Caitlyn quite a bit. I don't recognize the characters from the first draft anymore.\n\n\u2014C\n\n<center>CHAPTER III</center>\n\nTuesday wasn't as bad as I expected. I had envisioned all kinds of embarrassing silences and looks caught from the corners of my eyes. Or worse, pointed questions about \"What happened?\" and \"Are you all right now?\"\n\nInstead, Ruth gave me an approving little nod and then treated me like she had every other day. The Guy Code meant that John just asked a gruff, \"You good?\" before turning to the day's work as if nothing had happened.\n\nCaitlyn wasn't quite so willing to gloss over things but contented herself with, \"I'm glad you came. I think this is the best thing for you right now. Next time, if there is a next time, don't run off. We're here to listen.\" My response was a noncommittal grunt and we got to work.\n\nEarly in the afternoon, Bela showed up. She tracked me down to where I was installing some high-hat lights and pulled an insulated cup out of a bag. \"I overheard you complain about your coffee last week.\"\n\n\"You have a coffee shop,\" I said, remembering.\n\n\"I do.\" \n\nAs I slid the lid open and took a whiff, she said, \"I took you for a dark roast kind of guy, and\"&nbsp;\u2014 she pulled a tiny container out of the bag&nbsp;\u2014 \"cream, if needed, and sugar.\" \n\nI shook my head. \"Black's good.\" I took a sip. \"Mm, now that's a cup of coffee.\"\n\n\"And, fortunately, it's right on your way here.\"\n\n\"Huh? How do you know where I live?\"\n\n\"Oh, I don't. But now that you've tasted my coffee, I'm sure it will be right on your way.\" \n\nI laughed and peered at the side of the cup: El Grano de Caf\u00e9. I looked a question at her.\n\n\"The Coffee Bean. My family's from Spain.\" She turned to go. At the door, she looked back, \"On Fairview right across from the sushi place. New customers welcome. We open at six thirty.\" With a wink, she was gone. I appreciated the fact that, even though she must have heard about it, she didn't mention Saturday.\n\n\"Matt.\"\n\nI turned from getting in my car at the end of the day to see Caitlyn walking over. The sun was behind her and caught her hair again, turning it into a fiery nimbus and lending a warmth to the chiaroscuro of her body.\n\n\"I owe you for that ride. How about I buy you dinner?\"\n\n\"You don't owe me anything.\"\n\n\"Then let's just have dinner together anyway. You have to eat, right? I know a good mom and pop Italian place.\" \n\n\"My friend will be making dinner.\"\n\n\"You can call, right? Or, since we both should clean up, tell her when you get home. Come on.\" She took my shrug as settling matters, gave me brisk directions for how to find the place, and ended with, \"It's four thirty now. Let's meet at six.\"\n\n\"We'll hold off on drinks,\" Caitlyn told the waiter before I could respond.\n\nLooking back, I was an idiot. I figured she wanted to nag me about some other aspect of my life&nbsp;... or maybe about one that she was already tackling but didn't think I was making enough progress on. \n\nHoping to head some of it off at the pass, I said, \"I've cut back on the bourbon, and I'm walking more, and Abode gets me out to see people.\"\n\nShe cocked her head, reading the context. She had a faint smile on her face as she said, \"Is the prospect of a meal with me that daunting?\"\n\n\"No,\" I lied. Well, semi-lied. Well, actually, the prospect of a meal with her was rather intriguing. It was the prospect of being managed that was unpleasant. \n\n\"Liar. So&nbsp;...\" Here it comes, I thought during her brief pause. \"...&nbsp;how the heck do you know so much about construction?\"\n\nHer smirk said she knew she'd caught me flat-footed. By the time I'd told her something of my life history, heard a little of hers&nbsp;\u2014 childhood and nursing stories, no reference to a former spouse&nbsp;\u2014 and finished a reasonably good chicken piccata, I was enjoying myself.\n\n\"Dutch,\" I insisted when the check came. \"All I did was give you a ride.\" Disregarding her protest since two could play that game, I handed my card to the waiter. \"Split it between the two, please.\" To Caitlyn, \"I told you it was just a ride.\"\n\n\"Then I still owe you.\" \n\nAn astonishing ability to ignore answers, I reflected. As we stepped out onto the sidewalk, she paused and set her hand on my arm. I was in a good mood and stifled my response.\n\n\"My place is just a block that way. Come in for a glass of wine?\" I looked at her in surprise. \"I'm not anti-drinking, just anti-drinking too much\"&nbsp;\u2014 a momentary vision of gray eyes accompanied by a silent murmur of agreement&nbsp;\u2014 \"and one glass might be nice,\" she said, her blue eyes twinkling with amusement.\n\nWe sat on opposite ends of the couch, talking about this and that. I probably didn't carry my share of the conversation, but she didn't seem to mind. Part of it was nerves at being on what I finally realized was a date. Like I said: idiot. \n\nA second part was that it was clear that more than just negative emotions like anger and depression were returning to my life. Libido was definitely entering stage right. I'm not totally crass, and my eyes were where they should be, but that didn't stop my peripheral vision from tracing a few curves along the snug capris or where the neckline of her blouse revealed a hint of cleavage.\n\nWe'd lingered over the well-filled wine glasses and the talk turned to the volunteering.\n\n\"I was surprised, but really glad, that you dove into it. You seem to enjoy it.\"\n\n\"I do. I like building things and, well, I guess it just makes me feel good.\"\n\nShe smiled warmly. \"I thought it might. You just needed a push. But, as I said, you surprised me&nbsp;\u2014 in a good way&nbsp;\u2014 by becoming a regular. I know John is thanking his lucky stars and us girls are glad too.\"\n\n\"Why?\"\n\n\"We only sorta know what we're doing, enough to follow instructions. But there are so many kids showing up lately who want something to look good on college applications that John gets overwhelmed trying to keep them in line.\" She snorted. \"And you've seen how worthless some of the other adults are.\"\n\nThinking about Tweedledum and Tweedledee, my snort echoed hers.\n\n\"There used to be another Abode guy, but he hasn't been there for months. The company has been starving John for real help. He's mentioned it several times. So, it's nice to have someone else around who knows what they're doing. It makes a difference&nbsp;... you're making a difference. Bela's been pretty worried that the house wouldn't be ready by the time the snow set in.\"\n\n\"We're fine,\" I said dismissively.\n\nShe gave me a look that conveyed how clueless I was. \"We had to rebuild that front porch to make it safe. We worked on it for two whole Saturdays, and John still had to finish some of it himself during the week. You showed up and the extension was framed in a day; sheathed, roofed and sided by the end of the week. Not to mention the wiring.\n\n\"Besides&nbsp;...\" She paused and gave me a naughty grin. \"Compared to most of the geezers who show up to help, the scenery is much better.\" \n\nAs I flushed, she laughed. \"Come on! You've met Ruth; you have to be used to it by now,\" she teased. To cover my embarrassment, I finished the last swallow and made to rise. \"I should go.\"\n\nShe nodded and rose with me. \"Are you okay to drive?\"\n\nThere was a pleasant warmth, but I was fine. As we reached her door, she asked with no warning, \"What might a girl say in order to get a kiss?\"\n\nIt was one of those moments that everyone has had once in a while, where you knew that time had to be slowing down because too much was happening simultaneously for its normal flow. Wheels losing grip on icy pavement, the moment you step off on a bungee line, a bus about to hit you&nbsp;... a question like that. \n\nOne part of my brain was suddenly focused two feet away on a pair of lips that were just barely parted, below a set of eyes locked onto mine with a welcoming expression. And I wasn't blind to what the very slight lean in my direction did to that hint of cleavage. \n\nA second part was repeating a guilty admonition consisting of the name of my wife iterated over and over in a jumble of redundancy. \n\nA third was braying a DEFCON 3 panic alarm formed of some incoherent mishmash involving \"over a year since&nbsp;...\" and \"what if&nbsp;...\"\n\nOnly an instant in real time. An eternity of that suspended time. Caitlyn waited patiently to see which way I'd jump. I made my choice.\n\nI heard the faint echo of Liv's words in my mind, \"I will be well and truly pissed off if&nbsp;...\" and remembered that flash of gray eyes when Caitlyn invited me for the drink. They'd been far less disapproving than I was used to lately.\n\n\"She'd be okay with it,\" I told that second part of my brain.\n\n\"Shut up,\" I told the third.\n\nThe flinch at contact with a woman was still there, but I ignored it, concentrating on the luscious sensation of warm lips, followed by the tingle that might have been my imagination, or might have been another's tongue lightly brushing my lips for the briefest fraction of a moment.\n\nShe pulled back, gave me a warm smile, and opened the door for me to head out. \"See you on the weekend. I have to work the next few days.\"\n\n<center>\u2022 \u2022 \u2022</center>\n\n\"Seriously?\" Ruth asked. When I nodded, she continued. \"Okay, she is hot. And, yeah, she gets guys coming on to her. Trust me, she's got more stories than the rest of the women here put together. 'Cept me, of course.\" \n\nSomehow, Ruth had divined that something had happened and, with her usual blunt-force-trauma approach to things, demanded, \"So, what happened? You get laid or something?\" \n\nNow she was responding to a rambling question that boiled down to \"Why me?\"\n\n\"But most times it's some two-bit Romeo in the supermarket or the bank. God help her if she dares go out for a drink with the girls.\" She leaned back against the side of the house. \"And I know zippitydoodah about this Tinder thing, but she makes a face when she talks about it.\n\n\"But who does she meet day to day? Patients. Sometimes doctors. The patients are mostly women or guys who make me look young. The doctors are either happily married, engaged to be married, or married scumbags who play around, according to her.\n\n\"You, on the other hand, are neither geriatric nor a doctor. And\"&nbsp;\u2014 I saw the twinkle and knew it was hopeless to expect more than a couple of serious sentences in a row&nbsp;\u2014 \"you've been housebroken.\"\n\nI ignored memory and settled for a sardonic, \"Thanks. I love being compared to a puppy.\" \n\nThere was a flash of seriousness in her expression. \"More like a wounded stray.\" I swayed to the side and the punch failed to connect, bringing a chuckle from her and, \"You're learning.\" \n\nShe pushed back upright and picked up the bag of trash we'd collected, heading for the dumpster, pausing to say over her shoulder, \"More than one of the girls has eyed you. Caitlyn just got out of the gate first.\" She shook her head in mock irritation. \"Damn her! I had my sights on you.\" \n\nOne of us thought that was uproarious.\n\nTerrell and Nia were drawing pictures at the table when I came in.\n\n\"We just got back. The pediatrician was running late,\" Tatyanna said, coming out from the back.\n\n\"How about pizza?\" I asked, bringing cheers from the kids.\n\nI answered the door to find a girl I vaguely recognized as one of the local college students standing there holding a box and a large bag. I waved toward the table. \"Just put it there,\" I said and moved to the counter for my wallet. \n\n\"Keep the change\" earned me a big smile that came with cute dimples and, following her to the door, I tried not to feel too pervy noticing that neither the skinny jeans nor the snug polo with \"Ricciardi's Pizza\" scrawled across the back did much to hide her figure. \n\nTen years too young for you, Matt, I chided myself, both amused and faintly relieved that the accompanying guilt flash was only at the slightly inappropriate thoughts&nbsp;\u2014 I'd never actually do anything about them&nbsp;\u2014 and not at a memory.\n\n<center>\u2022 \u2022 \u2022</center>\n\nFriday morning, I found myself circling a particular block, looking for a place called Grano de Caf\u00e9. I was tired of not-so-good coffee on my way to the site. Ten minutes later, I was seated at a small table with a macchiato and a pecan Danish, and Bela glancing over periodically.\n\nAfter about fifteen minutes, she dropped into the chair opposite me, setting down a fresh cup for me and one for herself. \"Hopefully Malibu Ken,\" she nodded at the guy behind the counter, \"can handle it for a short while.\" I must have looked puzzled because she added, \"He's a hunky blond teenager who wears board shorts, calls people 'dude', and his name's Ken. What do you expect his nickname to be?\"\n\nA few minutes later, a young boy wandered up and Bela said, \"This is Rafi. Say hello to Mr. Brennan.\" He was shy and barely managed to squeak out a greeting before scampering to the back of the shop. Then the bell on the front door jangled and a group came in. I saw Ken shoot a glance at Bela. She must have seen it too, because she stood with a grimace, \"Duty calls. Sorry.\"\n\nI watched the two of them deal with the rush, sipping my second cup. A thought occurred to me. I waited for the next lull and then wandered over, \"Are you short-staffed?\"\n\nShe looked surprised at the question. \"Well, yes. This is always a bad time. College kids are heading back to school, but the high school kids aren't quite ready to start earning gas money yet.\"\n\n\"Would you hire someone older?\"\n\nShe looked me up and down. \"I thought you were taking half a year off.\"\n\n\"Not me.\"\n\nShe caught on almost instantly. \"Are you talking about the woman staying with you?\"\n\n\"Yes.\" I wondered how she knew about Tatyanna. I guess girls' time at the site. I wondered even more how she knew Tatyanna wasn't just a friend visiting temporarily. Women's Mafia, I thought.\n\n\"Matt, I doubt I pay what she's making at wherever she's working.\"\n\nI shrugged. \"Maybe. I don't think she makes that much at a nail salon. But I can tell you that she probably has less take-home there than she'd have here if you factor in daycare.\"\n\nAgain, she was quick. \"You want me to let her bring her kids here, also?\" I could see that unnerved her.\n\nI shrugged again. \"What would it matter? They're about the same age as Rafi and it would give him playmates. It costs you nothing and you'd get an employee who wasn't distracted by\"&nbsp;\u2014 I smiled as I repeated her words&nbsp;\u2014 \"the latest social media blowup or a boyfriend coming into the shop.\"\n\n\"How do you know she doesn't have a boyfriend?\"\n\n\"She doesn't, just trust me on that one.\"\n\nI could see the indecision. \"Matt, I don't know. I mean, hiring someone who's living on the streets&nbsp;...\"\n\n\"She doesn't look like she's living on the streets and, actually, she's never lived on them, just shelters. She's responsible about her kids. She seems honest.\" I shrugged and finished, \"You could try it for a day. If she doesn't work out, don't hire her.\"\n\nShe didn't answer right away. I didn't press it, just waited. Finally, she said, \"I notice you didn't say, 'Hey, Bela, you've got people helping you with your life.'\"\n\n\"Making someone feel guilty's not my way. If you're not willing, just say so and I'll drop it.\"\n\nShe studied my face. \"Monday, 8 a.m., if she wants.\"\n\n<center>\u2022 \u2022 \u2022</center>\n\nI told John I needed to head out a little early since Tatyanna and I had been invited upstairs for dinner. When I came in the door, the Bluetooth speaker was blasting out something I didn't recognize. I'm kind of a classic rock guy and this was hip-hop. I headed back along the hallway to grab a much-needed shower.\n\nThe guest room door was standing open five or six inches and, through it, I saw Tatyanna bouncing along to the beat as she dug in a drawer. A lot of Tatyanna&nbsp;\u2014 as in panties and nothing else. I checked involuntarily for a brief second in surprise.\n\nThe movement must have caught her eye in the mirror above the dresser because she straightened abruptly, and her eyes met mine in the reflection. There was a frozen moment, but before she could turn, I pulled the door shut, trying not to think about the image of hips and breasts keeping time with the bass line.\n\nHer door was still closed when I came out. I figured the best thing to do was just to pretend it hadn't happened. She didn't meet my eyes when she emerged, and we were a silent pair as we walked up the stairs to Matt and Angela's with the kids trailing behind.\n\nIt was a fun evening: nothing remarkable, just four people sitting around enjoying each other's company while the kids conked out. Well, make that two people and two halves. Tatyanna was engaged in the conversations, and an occasional flash of her sarcastic brand of humor would crack us up, but I noticed she was quieter than she normally was. I knew the reason and figured things would be fine by morning. \n\nFor my part, I still wasn't totally comfortable with the casual affection Matt and Angela displayed with each other&nbsp;... recent lustful thoughts notwithstanding. More than once, I found myself averting my eyes at a quick kiss or a gentle stroke across a partner's arm. Let's not even mention the pat on the ass that had Angela squealing and then snapping a kitchen towel at her spouse with a giggle.\n\nAs we were leaving, Matt clapped me on the shoulder. \"I'm glad we were able to do this again. I missed it.\"\n\n\"Sorry.\"\n\nHe shook his head and leaned in for a quiet word. \"If I lost Angie, I wouldn't be any different. Worse probably. You have nothing to apologize for&nbsp;... grouchy,\" he finished with a smirk.\n\nThings still didn't seem back to normal when I came into the kitchen the next morning. I took the bull by the horns. \"What's up? It was embarrassing, yeah, but this seems a long time to be blushing over a little skin.\"\n\n\"Nothing.\"\n\nThat meant it was something. \"Please tell me what I did wrong.\"\n\n\"You didn't do anything.\"\n\nI shrugged, a little frustrated. Obviously, I must have, I thought. People don't say, \"Nothing,\" when it's nothing.\n\nFinally, she glanced down the hall to make sure the kids were still out of the room and earshot. \"I was nervous there was going to be a knock on my door later. Please don't be angry. It was my insecurity, nothing you did.\"\n\nAt first, I didn't understand. Then I did.\n\n\"Please don't be angry,\" she repeated.\n\n\"I thought I made it clear I wouldn't do that.\"\n\n\"You did, but&nbsp;...\" I waited. \"You did, and you've given me no reason to doubt you.\"\n\n\"Then why?\"\n\n\"I just stood there. I wondered if you thought that was a come on.\"\n\n\"I assumed you were caught by surprise.\"\n\n\"I was. But you've been in a better mood since&nbsp;... since, you know&nbsp;... and I saw you check out the pizza delivery girl the other night.\" My face got hot. \"I wondered if maybe a year without&nbsp;...\" Her voice trailed off in embarrassment.\n\nI tried to keep my voice matter of fact. \"Tatyanna, look. I think you're fun to be with, and smart, and quite pretty. In another time and place, maybe I would see if you were interested yourself.\" \n\nI paused to gather my next thought and she cut in to supply, \"But I'm not in the market for a guy, and you're not ready.\"",
        "I shook my head. \"No. I wouldn't say that was true anymore.\" Her eyes widened. \"But!\" I said quickly before she could get apprehensive again. \"But you were pretty clear on the rules, and I promised. Don't worry; you are thoroughly friend-zoned.\"\n\nI felt like I could see each car in the train of thoughts that went through her mind: is he bullshitting me?&nbsp;... no, I don't think he is&nbsp;... does he not find me attractive?&nbsp;... no, he was definitely looking for that scant second&nbsp;... then why?&nbsp;... 'cause he promised, I guess. \n\nShe smiled. \"It's a good place to be.\"\n\nWe sat there, silent, both still a little awkward. Finally, to break the moment, I asked, \"Was I that obvious with the pizza girl?\"\n\nShe shook her head. \"No. But I watch men's eyes a lot. It's survival in some of the situations I've been in.\"\n\n\"Sorry.\"\n\nShe dismissed it with a shrug. \"You weren't a jerk and she wasn't a kid. I bet she knows those clothes get her better tips from guys.\"\n\n\"Meow.\"\n\nShe grinned, back to her usual self. She arched an eyebrow. \"Yeah? And exactly how big was the tip you gave her?\"\n\nI took the mature route and threw a piece of cereal at her. I got the same \"Is that the way you were raised?\" look Terrell or Nia would have. She shook her head and went to make sure the kids were moving, turning back to say, \"It's Taty. That's what my friends call me.\"\n\nThat evening, over our drink, \"I know someone who owns a coffee shop. She's looking for help. The pay is only a buck or two above minimum wage, but there'll be tips and you wouldn't have to pay for daycare anymore. Interested?\" \n\nTaty looked at me in shock. \"What?\"\n\nI explained about the job, Bela, Rafi, and the play area. I mentioned that Rafi would be in the same grade as Nia. \"Maybe the two of you could arrange some kind of shared pick-up thing. Think about it and let me know. I should probably let her know tomorrow if you don't want it.\"\n\nRight before we called it an evening, she said, \"I'll try it for a day to see how we feel. What time do I need to be there?\"\n\n\"Eight a.m.\"\n\nShe nodded. \"Okay.\" She stood to take the empties into the kitchen, then turned back. \"Hey, Matt?\"\n\n\"Yeah?\"\n\n\"Maybe next time&nbsp;\u2014 not that I expect there'll be a next time&nbsp;\u2014 check with me first before talking with someone about me taking a job? Not that I don't appreciate it,\" she added hurriedly, \"but&nbsp;...\" She shrugged.\n\nI realized that maybe there was some pride involved here. \"Of course. I'm sorry.\"\n\n\"No problem.\"\n\n<center>\u2022 \u2022 \u2022</center>\n\nThis time I wasn't clueless. Saturday evening was a date.\n\nWithin the first hour at the site that morning, a message had spread through the women. I didn't see anything obvious; maybe it was pheromonal or something like a dog whistle that only a female could hear. But, somehow, the indulgent looks from some of the women made it clear that some communication had gone around.\n\nAt lunchtime, Ruth came out with her usual simpering-plus-batted-eyes, \"Would you like to sit with the girls, Matt?\" \n\nI replied with my usual refusal-plus-eye-roll and headed for my usual Saturday lunchtime walk.\n\n\"Matt.\"\n\nI turned to find Caitlyn following me down the driveway. \"You'll miss girls' time,\" I said.\n\nShe frowned. She still didn't find much humor in that particular sparring. I did, but I relented. \"Sorry.\"\n\n\"I wonder if I could take you out tonight.\" After a pause, \"Or you could take me out. Either way's fine with me; I'm not sexist. Just no Dutch.\"\n\nHonestly, it was a foregone conclusion. More than one night this week had been interrupted by an X-rated fantasy that featured a redhead. Other than some brief thoughts, my mind hadn't gone there in a while, nothing explicit since Liv got too sick to&nbsp;\u2014 My mind shied abruptly away from going there. Not since a long time ago. Now, evidently, that was back in my life also. \n\n\"I'll buy dinner,\" I answered. \"You bring the wine. We can go to a place I like that's BYOB.\"\n\nShe shook her head. \"Not with dinner. A glass later at my place.\"\n\nI considered arguing; I liked wine with my meal. But I decided it wasn't a battle worth fighting.\n\nAn hour later, I finally turned to Ruth as I held one end of a piece of casement trim in place, \"Okay, just say it. Get it over with.\"\n\nShe didn't respond, flashing me a \"Who me?\" before setting the nose of the gun in place and carefully fastening the wood. She worked her way along to where I could let go. \"I got it from here. Cut the next one. Oh,\" she added as if an afterthought, \"and don't forget a toothbrush.\" \n\nCackle.\n\n<center>\u2022 \u2022 \u2022</center>\n\nThe meal was unmemorable. I'm sure the food was good. Caitlyn made noises of appreciation. I'd enjoyed it every other time I'd been here, as had my customers. \n\nHowever, Caitlyn had clearly dressed to impress, and I duly was. She knew what her assets were and the v-neckline on her dress hinted at some of them. Some of the others were hidden under the tablecloth, but I'd seen the flash of leg when I helped her into the car. \n\nAnd those lips, I thought. They always seem like they've just been licked, but I never see her do it. \n\nYeah, I couldn't remember the food beyond \"it was beef.\"\n\nThe conversation stayed far away from past relationships or any hint of bad times. More surprisingly, it stayed away from advice. The closest she got was poking some gentle fun at cranky patients while giving me a \"strike a chord?\" look. Instead, it was light-hearted and inconsequential and, if she did perhaps have to do a bit more than her share of the work, still I was able to join in with a story or two of my own and laugh at appropriate moments without faking it. \n\nI wonder what she's thinking, and whether she's looking forward to that drink later. And maybe a little more of what came after last time? Those musings sent a little shiver through me.\n\nI noticed her questioning expression and quickly rewound the mental tape to listen to what she had asked. \"No, no dessert for me, but go ahead. I don't mind,\" I answered.\n\n\"No. How about we go and have that drink?\"\n\nThis time, one glass turned into two&nbsp;\u2014 \"I'm cutting us both off there\"&nbsp;\u2014 as we sat on the couch again. Her heels were kicked off, and her legs were curled up underneath her.\n\nI was finishing a slightly involved story about falling into a locked room while retrofitting Wi-Fi into an old building when I noticed that she had gone quiet and was just watching me with an expression I didn't recognize on her face.\n\n\"What? Am I boring you? Sorry. I\u2014\"\n\nShe leaned over and put her finger over my mouth. She shook her head and closed the distance. This time there was no doubt as, after a brief touch, then a second, I felt her lips part and her tongue trace along my lips. Her hand, the one without the glass, slid to the back of my neck, while mine settled on her hip.\n\nAfter a long mutual exploration, she pulled back slightly. \"Even at the end of dinner, I wasn't sure what I planned. Maybe another date would be a good idea? But&nbsp;...\" She settled back and took another sip, eyes cast down as if thoughts had turned inward for a second. She looked back up at me. \"Stay tonight?\"\n\nIt was surreal: I was twenty-one years old the last time I had sex with someone for the first time. That was more than a third of my life ago.\n\nOur kisses turned more demanding, the faint scent and taste of cabernet playing high notes on top of a fragrance I didn't recognize. Her hand returned to my neck, then slid up to run through my hair. Mine caressed the small of her back, drawing her closer so that she bowed back into an arc: lips against mine, chest lightly brushing me, legs stretching back along the couch. \n\nShe pulled her mouth away&nbsp;\u2014 \"Uncomfortable,\" she murmured&nbsp;\u2014 and squirmed her hips around. She placed her glass on the console table behind the couch and, pulling my closer leg up onto the seat, settled onto it. She wrapped both arms around my neck and then leaned in to resume what we were doing. \n\nOnly to pull back again. She took my glass from my hand and set it beside her own. \"I expect you to need those hands about now,\" she said gravely, dancing eyes belying the serious tone.\n\nI took that as an invitation and, as her lips closed back on mine, my hand filled with the luscious weight of a breast. She made a faint sound of pleasure as I cupped it, wriggling a little as I traced over the curve. I could feel the uneven texture of lace under my hand, but the sharp spike of hardened nipple tracing a line across my palm told me that it was woman underneath.\n\nIt was my turn to need to shift my hips, my incipient erection uncomfortably caught in the folds of my pants. She glanced down as I did, all smile gone, replaced by a look of desire. As I reached to adjust, she brushed my hand aside and cupped me, feeling the straining movement under her hand. Quelling my faint complaint with a kiss, she fumbled blindly with my belt and then the button and zipper.\n\nI gasped as she wrapped her hand around me, then again when she let go. She reached for the buttons of my shirt. As I reached for her dress, she blocked me. \"No! Ladies first. I get to unwrap my present before you do.\" Pulling the shirttails out, she drew it off my shoulders, then skimmed her hands over my chest. Sliding off the couch to her knees, my shoes followed, then my socks. \"Lift!\" Already-opened pants slithered down.\n\nSlowing her feverish actions, she scooted closer and put both hands in the waistband of my underwear. She raised her eyes to mine and lifted the elastic away from my body, a little half-smile on her face indicating her enjoyment of my anticipation as she drew out the moment. Turning her attention downward, she slid off the last piece of clothing.\n\nWithout looking up, she placed one palm flat on my thigh and wrapped the other around the length. Then her mouth descended to engulf me.\n\nI didn't last much longer than a minute. I managed to warn her moments before all ability to speak temporarily deserted me, and I felt the warm wetness against my abdomen as she raised her head to watch my face, her hand stroking rapidly and rhythmically. \n\nWhen my paroxysmal breathing finally calmed, I opened my eyes to find her still watching me. I felt a smile breaking out. Hers answered. She glanced down. \"You're a mess,\" she giggled.\n\nA small laugh burst out of me. \"Whose fault is that?\"\n\nShe giggled again and stood. Stepping to the passthrough to the kitchen area, she grabbed a kitchen towel. The moment of shared humor was still reflected on her face, but the flush on her cheeks&nbsp;\u2014 that complexion couldn't hide anything&nbsp;\u2014 and the elevated breathing told me that the excitement was still there. \"My turn,\" I said.\n\n\"You want to unwrap your present now?\" she teased.\n\nI shook my head. \"I want you to take off your dress standing right there.\"\n\nHer eyebrows went up.\n\n\"Take it off,\" I repeated, smiling but firm. She wasn't the only one who could be a trifle assertive in foreplay.\n\nThe humorous expression faded; the look of desire resurfaced. She made a production of it. It wasn't a striptease, but it was unhurried and deliberate. The buttons parted down the front to reveal the scarlet lace cups beneath. Halfway down, her hands moved to undo the dress's belt, letting it fall, then back to undo two more buttons. She paused&nbsp;\u2014 the flush spreading down her collarbone said she was savoring the moment as much as I&nbsp;\u2014 then reached to slide off one shoulder, then the other, letting the garment slither to a pool at her feet.\n\n\"Let your hair down.\" I gestured to the simple low-bun-ish thing. I didn't know what to call it; I was a guy.\n\nShe reached up and drew a couple of pins, fully aware that I appreciated what reaching up and back did for her figure. She lowered her head forward and gave it a shake, settling back to slightly, and delightfully, disheveled. \n\n\"Now&nbsp;...\" I nodded at her chest.\n\nFront-closure, off in a second without contortion. Overflowing handfuls dropped free to sway with her movements, capped with pink. \n\nJesus! That's a centerfold there in front of me. I laughed at my sophomoric thoughts, bringing a questioning look from her. I shook my head. Never mind.\n\nHer fingers strayed to the waist of the matching bottoms. \n\n\"No. I get to do that part.\" \n\nShe stopped.\n\n\"My very first real girlfriend taught me a thing.\"\n\n\"What was that?\"\n\n\"When you get one, you give one.\" I waited for a second for the little flare in the eyes that showed understanding&nbsp;... and anticipation. \n\nI put out my hand and she walked forward to take it. Leaning forward, I planted a kiss through her panties directly between her legs. Hooking the edges of the leg openings with thumbs and forefingers, I drew them down slowly.\n\nThe carpet matches the drapes, I thought, placing another kiss on the closely trimmed curls as the lace cleared them, and she's ready for this.\n\nAs she lifted her second leg out, I slid one hand against the inside of her knee pushing outward, while the other reached around to cup a cheek, drawing her the extra step forward, her legs parting around my knees.\n\nTugging suddenly, I pulled her off balance, her knees hitting the cushion, hands thrusting forward to catch herself on the back of the couch. As she gave a startled yelp, I slid down quickly and grasped her ass with both hands to hold her against my face. A long slow lick elicited a breathless \"Oh\" followed by a quieter \"Oh yeah.\"\n\nHalfway through, she dropped from hands to forearms, her forehead sagging down to rest on her wrists. Without stopping, I peered up along the length of her body, momentarily pausing at the swaying motion above me&nbsp;\u2014 later, boy!&nbsp;\u2014 to her face. Her eyes were closed. Her mouth was hanging wide open to allow the panting breaths that were coming more rapidly with each passing moment.\n\n\"Faster,\" she begged.\n\nI obliged. Suddenly, her knees clamped inwards. The hard, forward thrust of mons stilled my tongue and lips as she rocked herself against me in tiny, rapid motions. The long groan must have filled the room given how loud it sounded through thighs muffling my ears.\n\nShe finally sank back and down to rest on my stomach. Looking at the damp spot on my sternum, I asked, \"Now who's a mess?\"\n\nShe started giggling again. Reaching up, she swiped a finger along my chin. \"You!\"\n\nI grinned in return and used the towel.\n\n\"Your girlfriend was wise beyond her years.\"\n\nI didn't reply. By the end of what we had just done, little Matt was coming back to life and, momentary humor aside, I had other plans. I took hold of her hips and made a lifting tug. After a second of confusion&nbsp;\u2014 \"Am I too heavy?\"&nbsp;\u2014 she understood. With a quick look over her shoulder, she complied. She was so wet that it was an effortless plunge to the hilt.\n\nFresh from a blowjob, I lasted. A second time, later in the wee hours before dawn broke, completed the night.\n\n<center>\u2022 \u2022 \u2022</center>\n\nTaty didn't smirk when I walked in the door the next morning.\n\n\"You okay?\"\n\nI nodded, understanding that tilt of the head. She wasn't asking if I was okay after some accident or other misfortune that kept me out all night. She was asking if I was okay with what had obviously happened. Not a strange question, I thought, given how peculiar and erratic my emotional state has been since I met her.\n\nI was oddly unembarrassed at what, effectively, was a walk of shame. Something about the events of the last few days had turned her into a friend, even though I'd known her for only a few weeks.\n\nAs I headed toward the back, she asked, \"Are you going to be at home all day?\"\n\n\"Yeah. Why?\"\n\nShe hesitated. \"I need to go in. I switched with another girl so that I could take tomorrow for the coffee shop.\"\n\nI realized what she hesitated to say. \"And you want me to keep an eye on the kids?\"\n\n\"They'd play quietly in the room. They wouldn't bother you. If it's an imposition, I can catch the early bus and take them to the sitter.\"\n\n\"It's fine. And, no bus. I'll drive you.\"\n\nAfter dropping her off, I spent a couple of seconds asking myself, \"Now what the hell do I do with those two in the back seat?\" I hadn't thought things through before I opened my mouth with the offer.\n\n\"What do you guys want to do?\"\n\n\"We could go play video games,\" was Terrell's suggestion.\n\nSince one of the few things Taty had said to me was, \"No video games. He gets too many at the sitter anyway,\" that was a non-starter.\n\n\"I don't have any.\" That brought a look of astonishment as he tried to fathom how that was possible.\n\n\"We could go to the playground and play on the slide.\" That came from Nia.\n\nTerrell's expression of disgust in the mirror saved me from having to find a nice way to phrase: or I could just hit myself in the head with a hammer. I'm sure it would be different if they were my kids but\u2014 \n\nI shied away from going there. I had a role to play here, and navel-gazing while ignoring the ensuing argument consisting of \"That's stupid!\"&nbsp;\u2014 \"Is not!\"&nbsp;\u2014 \"Is too!\" wouldn't cut it. Besides, I was in a good mood and wanted to keep it that way.\n\n\"We could go get hot chocolate and pieces of cake or maybe cookies,\" I offered. Score! Check the box on mastering basic kid manipulation.\n\n\"Two hot chocolates, a macchiato, two pieces of chocolate cake, and one carrot cake,\" I told Malibu Ken. \n\nBela used a small break in the customer flow to stop at our table in the back. She surveyed the carnage. \"Chocolate with chocolate for brunch?\"\n\n\"I'm sugaring them up for when their mother comes home.\" \n\n\"You are an evil, evil man.\" She was smiling as she said it. \"Rafi's not here today. Too bad.\"\n\nI watched her walk back toward the front of the shop. The open back of her apron framed the motion of a rather nice rear end. \n\nJesus, Matt! \n\nI was momentarily sheepish about Caitlyn, that pizza girl, and now Bela. And, if I'm counting, a mental image I'd had when Angela met her husband's tease about dessert calories with, \"Who just said the other evening that my high school cheerleader uniform still looked\u2014\" She never finished the sentence, dissolving in laughter at Matt's hand-over-eyes, faux-kill-me-now expression.\n\nOkay, I confess: and add a flashback or two of how Taty had looked in the mirror. \n\nA brief mental squabble ensued.\n\nAre you now gonna letch all the time? \n\nOh, just effing relax! \n\nBut\u2014 \n\nIt's been a year. You're allowed to notice girls again.\n\nSo I did. Relax, that was. And noticed that Bela's figure reminded me of Liv. This time I didn't shy away from that. I tentatively poked at the bad tooth to see how sore it was.\n\nThere was sadness and loss, to be sure, but it wasn't crippling. There was some anger, also. I put a name to it. I was angry at life that Liv been taken from me. It was made worse by almost two months of emotional misery, apparently to pander to her vanity. \n\nI had thought about tracking her down. Private investigators. Lawsuits to pry out information. Even a wild plan one drunken, sodden evening of claiming a stolen car to enlist the police. I did none of it. The memory of that begging tone when she said, \"PLEASE!\" stayed my hand, but it was a close thing many times. \n\nIt's hard to excuse that, I thought. But even if some anger was unavoidable, it was certainly time to stop feeling guilty for being angry. Maybe the tooth wasn't as sore as I feared.\n\nThe memory swam up of that first glimpse across the party of a booty and long legs in black tights rocking away to some song, and the sudden determination to meet that particular girl that night. When I'd confessed it after a couple of months of dating, Liv had stared at me in mock horror, \"You asked me out just because of my ass?\" \n\nMy deadpan, \"No, tits too,\" earned me a pillow upside the head. That turned into a playful tussle. That turned into a far more adult wrestling match which ended with me declaring&nbsp;\u2014 after close examination of the evidence&nbsp;\u2014 \"but they're such wonderful ass and tits!\"",
        "\"Men! Pigs. Every single one of them,\" Liv had said, but she'd been laughing.\n\nUnbidden, the rest of that evening long ago flooded back: snuggled together under a blanket in a dorm room that couldn't quite cope with the evening's chill, her back pressed into my chest, Casablanca playing on the iPad propped across from us. I'd watched my favorite movie with my nose pressed into her hair, drinking in the scent that was lavender and rosemary and something that was uniquely Liv, a scent I'd loved, that I would never again be able to\u2014 \n\nNo! I pulled my mind away. Nothing good lay that direction. Instead, I forced myself to think about Caitlyn's hair&nbsp;\u2014 vanilla I think&nbsp;\u2014 and the feel of her body against mine. More draped over than nestled into. More cushiony.\n\nI pulled out my phone and texted.\n\n\u226b Hi. Can I call or are you with your patient?\n\n\u226a Hey. Yes I am but you can call. She's sleeping right now.\n\n\"I had a great time last night,\" I said when she answered.\n\n\"Me too. Thank you for dinner.\"\n\n\"I was wondering if you'd like to go out again next weekend. Maybe we could check out whatever band is playing at Maxwell's.\"\n\n\"That would be great.\"\n\n<center>\u2022 \u2022 \u2022</center>\n\nOf course, that Tuesday it took about two-point-nuthin' seconds for Ruth to size me up, break into a just-ate-the-canary grin, and give me a huge wink.\n\nJohn caught her expression but misunderstood. \"Stop flirting with every pair of pants, Ruth.\"\n\nShe mimed contrition but, after he wandered off shaking his head, she murmured, \"I doubt pants were involved at all.\"\n\nI dodged the shoulder-blow reflexively. \"Go nail something, you old bat.\" The second the words left my mouth, I heard what I'd said. I threw my hands over my ears. \"No. Not a single word.\"\n\nCackle.\n\nThat Friday, about an hour after we'd abandoned the band&nbsp;\u2014 what do you expect from something named Blooming Lotus?&nbsp;\u2014 and twenty minutes after we ended up in bed, Caitlyn jerked back from where my hand had wandered. \"Nuh-uh, no butts!\"\n\n\"Not a fan?\"\n\n\"I tried it once with Gregg and&nbsp;... just no.\"\n\n\"Okay,\" I said amiably, and we got back to the business at hand.\n\nAt our break to recover, she laid her head on my shoulder, one leg thrown over mine, her hands tucked up into her chin. \"Gregg was your husband?\" I asked.\n\n\"Yeah.\"\n\n\"You haven't mentioned him much.\"\n\n\"No.\"\n\nI didn't know how to take the reticence, so I let it drop. I guess she realized how I might be interpreting things because she answered a question I hadn't asked. \"Not like that. I loved him and he loved me. It was good.\"\n\n\"What did he look like? I haven't seen any pictures around the apartment.\"\n\n\"I only kept one.\" After a second, she sat up and reached for her phone. \"This is him.\"\n\nShe lay back down, resting on an elbow so she could look me in the face. She laid her other hand on my chest. I think she'd deduced by now that I had some tactile defensiveness when it came to being touched in any way except active sex, but sometimes she forgot. I let it rest there because I was hoping that we'd be getting back to the active sex thing in short order.\n\nWhile I looked at the selfie of a guy in cammies leaning against a younger version of the woman next to me, she continued. \"I don't dwell on him. It was good while I had it, but he died in Afghanistan. Thinking about it just creates unhappiness, so I don't. It's a part of my life that's over.\"\n\nHer voice was earnest. \"I think you understand what I'm talking about. You loved Olivia; anyone can see that. But now you're in a healing process. Just like with your head and the scar, there'll come a point where the best thing for you is to let things be what they are and move on with your life. It might take a while to get there; you can't rush it. But it's for the best.\n\n\"And, I admit, it's hard. My advice, when it happens, is to call someone in your family. My sister stayed with me for a couple of weeks and helped me put that part of my life aside. If none of them are close enough, I'll help you.\"\n\nShe smiled affectionately. \"In the meantime, I volunteer to keep you cheery.\" The smile turned mischievous as her hand slid down across my stomach and kept going. \"Would this maybe help keep things cheery?\"\n\nI nodded. It would.\n\nShe scooted down. \"Just remember that first girlfriend's rule.\"\n\nI chuckled and nodded again.\n\nAround ten o'clock, she gave me a kiss that had me questioning out loud whether I needed to leave just yet. She had to be at a client very early the next morning, so this wasn't an overnighter. She made shooing motions. \"Scoot. Next week.\"\n\nAs I turned the car toward home, my thoughts returned to that short conversation. I hadn't paid much attention at the time because my mind was completely occupied with carnal considerations. Now I did. The prospect of letting Liv go in order to move on with my life perturbed me. I mean, it made sense that you couldn't cling to the past, but something about the advice was troubling.\n\n<center>\u2022 \u2022 \u2022</center>\n\n\"Do you think much about your husband?\" I asked Ruth.\n\nShe looked at me in surprise at the unexpected question. I momentarily feared some smart-alecky response starting, \"Why would I think about him when&nbsp;...\" but she didn't go there. She set down her brush and leaned up against the wall.\n\n\"It depends on what you mean by much. I think of him from time to time, mostly when I hear certain songs. Sometimes when I see some young, good-looking guy who resembles him.\"\n\nI waited for the inevitable salacious eyeing or the double entendre, but she surprised me by remaining serious. \n\n\"He was a good thing in my life. Why wouldn't I?\" That resonated and I almost missed what she said next. \"But that was over fifty years ago and lasted only a short while, so I probably don't think about him as much as I do others. Especially the guy I've been with for\u2014\" She broke off, clearly calculating. \"Wow! I've been with him longer than I was even alive back then.\"\n\nI looked at her in shock. \"You have a boyfriend?\"\n\nThe grin was back. \"Yeah. A woman has needs, you know.\" She pushed back upright. \"A young 'un 'cause I like 'em studly.\" She winked. \"He's sixty-four.\"\n\nShe laughed at my disbelief. \n\n\"Don't worry. He knows me, and he knows that when it comes to the boys, I'm all talk. These panties are glued on except for him.\" She picked up her brush and turned to the next window. \"If I was wearing any panties, that is.\"\n\nI couldn't help myself. I glanced at her butt, relieved to see faint lines through the worn khakis. \n\nWithout turning around, she declared, \"Made you look!\"\n\n<center>CHAPTER IV</center>\n\n\"So, how'd it go solo?\" I asked Taty as the three members of the Rogers family climbed into the car.\n\nA week ago, Taty had come home from her first day at the coffee shop a little flustered at the hour. She'd said, \"Sorry. Let me get dinner started.\"\n\n\"Don't worry about it. I've got ziti in the oven.\" I raised my eyebrows in a question.\n\n\"I go back tomorrow. I'm going to quit the nail salon. She'd like me to work seven to four. That's early, I know, and I can take the bus when\u2014\"\n\n\"Enough with the bus already!\"\n\nI saw a flash of the stubbornness cross her face, but her response was softer than it had been in previous disagreements. Instead of a pointed, \"I said I'll take the bus,\" she smiled and reached to touch my arm, checking herself when she remembered her promise. \"Thanks. But it would make me feel better to do it my way.\"\n\nOh. Got it. \"That's early for the kids to go to school,\" I said tentatively.\n\nIt was her turn to think a moment. \"Are you offering to drop them on your way? Bela and I are working on some kind of joint pick up thing.\"\n\n\"Of course.\"\n\nNow, a week later, it had been her first day where Bela left early. \n\n\"A little nervous with just me and a teenager, but it went fine,\" she replied.\n\nThat made me chuckle inside. Bela had been absent from the site for a week while she was training Taty. When she'd appeared after lunch today, I'd asked how things were going.\n\n\"I get a little nervous when the only adult is new and the other's a teen, but it's fine.\" \n\nNow, Taty's echo of Bela was funny, but I kept it off my face. I'd screwed up a tiny bit when I started this whole thing; I didn't want her to think I was checking up.\n\nThat Thursday, Caitlyn and I were busy painting upstairs. She'd started coming an odd day here and there when she didn't have a patient. Painting was one of my least favorite jobs, but it was made slightly more palatable by the kiss I stole every time our paths crossed in the room.\n\nWe heard a car door slam. Caitlyn peered out the window. \"It's Bela.\"\n\n\"That's four days in a row. I thought that was a problem for her.\"\n\n\"She's really unhappy that she won't get her hours in before this place is done.\"\n\n\"How close is she?\" I asked.\n\nCaitlyn shrugged.\n\nLater, I went to get my lunch out of the car. On my way back, Bela was sitting on outside steps, pulling a small packet of food out of her purse. \n\n\"I didn't think you'd be here today,\" I said. \"I thought your sister worked six days on, three off. Rafi with your parents?\"\n\n\"Taty's keeping an eye. She said that watching three was no worse than watching two and that I'd helped her out, so she was glad to return the favor.\"\n\nI couldn't keep the surprise off my face.\n\nShe flushed a little before continuing. \"I know; I know. But it didn't take me long to notice that her children never showed up dirty or inappropriately dressed, that they played well with Rafi, that they didn't hurt anything. Heck, that they had better manners than Rafi. \n\n\"I also noticed that, however much Terrell might be eight and a boy, he still did his homework without complaining and then read to Nia. He even goes around and cleans off the tables sometimes without being asked.\n\n\"I realized that maybe, instead of worrying about her working in my shop, I should worry about me not looking bad.\" She smiled ruefully. \"So much for my preconceptions!\"\n\n\"Well, we're all human.\"\n\n\"She's one of the better decisions anyone ever twisted my arm into making. And it lets me knock off my hours here faster.\" \n\n\"I'm glad that it all worked.\"\n\nShe looked up at me, startled. \"Did you plan this?\"\n\nI didn't respond to that beyond a smile; I just got up and headed back inside.\n\n\"Do I take that as a yes?\"\n\nI kept walking, shrugging. \n\n\"Matt!\"\n\nI jumped slightly in surprise when the wadded paper bag hit my back, but I refused to turn and acknowledge the giggle that followed, or the laughing, \"Be a jerk then, payaso.\" \n\nPlan it? Nope. Consider it a possibility? Yes, actually I had. Their needs were so obviously complementary, how not? So, even though I had no idea what she'd just called me, I assumed it was in fun and kept walking.\n\n\"What was that about?\" Caitlyn asked when I dropped down beside her to eat.\n\n\"Oh, nothing. A friend of mine works for her and we were just joking around.\"\n\n\"Mmm.\" \n\n<center>\u2022 \u2022 \u2022</center>\n\nDisaster struck at the build that weekend. Some idiot left stuff perched on the edge of a scaffold. John bumped the uprights moving some materials and a cordless drill from six feet up caught him squarely on the head. He went down like a rock.\n\n\"Get Caitlyn now!\" I ordered a frozen teenager. \"Don't touch him!\" I instructed another who was reaching. \"We don't know what's up with his neck.\" She looked startled and backed away. I pulled out my phone and dialed 911 while kneeling to make sure blood wasn't gushing. It wasn't, but it was oozing steadily. I was glad when Caitlyn came up at a run.\n\nTwenty minutes later, I watched the ambulance pull out of the driveway. Caitlyn went with it. \"Call me when you know anything,\" I had told her.\n\nI looked around at the uncertain faces. \"Ruth. How about you take the inside people and keep going on the painting?\" She nodded. \n\nI turned to one of the other guys. \"Think you can poly a floor?\" It was what I had been doing. He looked uncertain. \"Paint roller, dip in tray, roll, repeat until everything's shiny. I've already done the edges. Just don't paint yourself into a corner,\" I said, smiling. He smiled back and nodded.\n\n\"Okay, outside people\"&nbsp;\u2014 John had been wrangling them&nbsp;\u2014 \"let's go finish the damn siding and trim.\" \n\nI turned to the person I suspected had left the stuff up there. \"Could you make a quick check to get everything loose off the scaffolds, please?\"\n\nWhen Bela showed up later, I heard her getting the scoop from one of the others. She came over to where I was working. \n\n\"I feel terrible,\" she said. \"It's my house.\"\n\n\"He'll be fine.\"\n\n\"I hope! Anyway\"&nbsp;\u2014 she snapped a salute&nbsp;\u2014 \"reporting for duty, jefe.\"\n\n\"So now I'm the chief, huh, not an old man?\"\n\n\"Never hurts to flatter the male ego.\"\n\nI sighed dramatically, ignored the smirk, and gave her an assignment.\n\nCaitlyn phoned just before we called it a day. \"He's okay. A concussion. I don't have to explain what that means to you. His wife's here and will get him home. Are you home yet?\"\n\n\"No. We kept working. Winter is coming.\" She groaned, and I laughed at her. She'd already told me how addicted she had been to the show. \"Seriously though, people gave up their Saturday. It seemed stupid to have that be for nothing. Bela needs her hours; kids need their community service credits; we need to get the exterior done. So, I just shuffled things along.\"\n\nSunday afternoon, I wondered how John was faring. I'm sure his wife is taking good care of him, I thought. I'll call tomorrow to see if we're on for Tuesday.\n\nAt the next timeout, I listened to the voice that had been distracting me.\n\n\"He's your friend now, Matt,\" it said. I barely had time to pull my attention away from the commentator's voice when it continued. \"Just sayin'.\"\n\nI thought about that. He was. Then I thought about the friends who I couldn't even tell you what they were doing now because I'd lost touch. I pulled out my phone.\n\n\"It's Matt.\"\n\n\"What's up?\" \n\nWell, I didn't even have to ask. The mournful tone of his voice said it all. \"Am I interrupting?\"\n\n\"No. My wife took the kid over to her parents' so I'd have some quiet. Just watching the game.\"\n\n\"Hey! Didn't they warn you about TV?\" \n\n\"Caitlyn said the very same thing when she called.\"\n\n\"I'm sure she did,\" I said with a laugh, remembering my own frustration with her proactive approach to advice. \"I didn't listen either. Look, I know you can't have a beer&nbsp;\u2014 sucks to be you&nbsp;\u2014 but want some company for the game?\"\n\n\"Hell yeah!\"\n\n\"So, I'm off the work site for a few weeks,\" he said at halftime. There was a world of meaning in the tone of his voice.\n\n\"And&nbsp;...?\"\n\n\"And I know Bela's already fretting.\"\n\n\"We can continue working.\"\n\nHe was shaking his head&nbsp;\u2014 gingerly, he was learning just like I had&nbsp;\u2014 before I finished the sentence. \"Nope. Insurance won't allow it. An Abode person has to be there. It's a thing.\"\n\nSomething about the way he said it led me to believe he had more than just Bela's disappointment on his mind. I waited. When he didn't go on, I raised an eyebrow, but he still didn't say anything. Finally, I prompted, \"And&nbsp;...?\"\n\nHe looked over at me and shrugged. \"Workers' comp is only sixty-seven percent of wages in this state. Madison's pregnant with our second.\"\n\n\"And she's not on maternity leave, I take it?\"\n\n\"She's been a stay-at-home mom since our first was born.\"\n\n\"Shit!\" I got up to get another beer for me and a V8&nbsp;\u2014 \"some Worcestershire and heavy on the Tabasco\"&nbsp;\u2014 for him. When I came back, I picked up the remote and muted the TV. \"Have you told work about this, yet?\"\n\nHe shook his head again. \"No. I'll call tomorrow.\"\n\n\"Don't tell them until the medical bills arrive. You're not required to file a comp claim immediately.\" I smiled at his puzzled expression. \"Just show up Tuesday.\" \n\nI held up a hand as he started to protest. \"I know all about concussions, remember? Show up and park yourself in a chair. Bring that nasty stuff you're drinking and watch Netflix all day or just nap. Nothing is going on that I can't handle.\"\n\nHe stared, speechless, for a second. \n\nThe John of the second half was a lot more relaxed, though he still winced every time he forgot himself and cheered.\n\n<center>\u2022 \u2022 \u2022</center>\n\n\"Can I stay?\"\n\n\"There are kids just down the hall. Why don't we go to your place?\"\n\nCaitlyn had invited herself over to dinner. It started with her smart-ass \"another helpless male in the kitchen.\" Okay, so I let some grilled cheese get a tiny bit overdone. Come on, I was distracted.\n\n\"Besides,\" I had added, \"these cheap aluminum pans you have&nbsp;... how about some good cookware?\"\n\n\"Oh, so now it's the pan's fault that you can't cook?\"\n\n\"I can cook. I'll have you know there are plenty of things.\"\n\n\"Name one!\"\n\n\"Chicken Marengo.\"\n\n\"I don't know what that is, but\"&nbsp;\u2014 she talked right over my attempt to explain&nbsp;\u2014 \"I'll be over Friday to try it out.\" \n\n\"My place isn't exactly ideal for an intimate evening. Kids and&nbsp;...\" I said after a second, trailing off with a \"you know\" shrug.\n\n\"Not every time we get together has to be to satisfy your lust. Six o'clock. I'll bring wine. White okay?\"\n\nNow, apparently, we had a bit of a pot versus kettle situation. \"Whose lust were you talking about the other day?\" I asked.\n\nShe ignored the gibe. \"The kids will be in bed soon. I'll leave early in the morning before they get up. Tatyanna's a big girl and can deal.\"\n\n\"Mmm.\" I gathered up her wine glass. \"More?\" At her nod, I walked over to the kitchen and poured us both another. Handing her hers, I said, \"You're right; she's a big girl. But I need to check about the kids for my peace of mind.\" I walked to the back where Taty had discreetly vanished.\n\n\"It's your place, Matt,\" Taty said.\n\n\"With kids living in it,\" I answered firmly. \"Level with me. Caitlyn has a place of her own if this is a concern.\"\n\nThe head tipped. \"They'll be fine. They won't think anything of it.\"\n\n\"Keep thinking that about Terrell, Ms. Na\u00efve,\" I teased.\n\n\"He's eight!\"\n\n\"Exactly.\" I relented at the look on her face. \"I'm just teasing, but probably not by more than a year or two.\" At her wide eyes, \"Remind me to tell you about third grade someday.\"\n\nI turned to leave and then swung back. \"You two didn't seem to hit it off,\" I said, lowering my voice. I had caught the brittle edge that crept in throughout dinner. \"Did she say something that upset you?\"\n\nHer voice quieted to the same level as mine. \"You should go pay attention to her. I think she has a problem with me.\"\n\nI frowned. \"I don't&nbsp;... I don't think she's that way, Taty.\"\n\nShe burst out laughing. \"No, you idiot, not my skin color. My gender. She's not happy you're living with another woman.\"\n\nI couldn't resist. It was so seldom that I got an opening for a little payback with Taty. \"I bet especially one I've seen naked.\"\n\nShe froze in surprise. I saw the faintest darkening, which I took to be a blush. I grinned. \"She probably wonders,\" I continued, \"who I think looks better. That's an interesting question&nbsp;...\" I said as I turned and left. That I got out of the room and was able to shut the door behind me without a peep, I counted as a major victory.\n\n\"Okay,\" I told Caitlyn when I rejoined her in the living room. She smiled complacently and patted the sofa next to her.\n\nSometime later, she observed, \"That's a nice picture of Olivia.\" \n\nI glanced at it. For almost a year I hadn't been able to do that. Now, it wasn't quite as bad, though I still avoided it. \"Mmm. Yeah.\"\n\n\"You have another on the nightstand on the other side from where you sleep.\"\n\nI looked at her in surprise. \n\n\"I was here for a couple of days as your nurse. Remember? And I was in your room a few times those nights, checking on you.\"",
        "\"Oh.\"\n\n\"Was that your side of the bed originally?\"\n\nI nodded.\n\n\"I thought so.\" She leaned in and kissed me gently. \"Hanging on doesn't work after a while. Life needs to be what it is.\" I'm sure she could see that bothered me, because she said tenderly, \"It's just a suggestion, but I've been down this road myself, and I've been down it again with several of the women.\" \n\nShe nodded at the picture on the wall. \"Of the two, I'd keep that one. It's nice. Put it somewhere you can see it when you want, but where it doesn't catch your eye all the time. Maybe in your room where you can say, 'Night, Liv'\u2014\" \n\nMy breath sucked in and I went stiff. \n\nShe read the expression on my face, accurately it turned out. \"I'm sorry, that was presumptuous. You can say, 'Night, Olivia' when you go to sleep. Then hang something that makes you happy out here.\" I relaxed.\n\nI wasn't exactly upset, but I was somber. Caitlyn let me be that way, leaning against my shoulder as we sipped the wine and listened to some music. When our glasses emptied for the second time, she took mine and got up off the couch.\n\n\"I'll get us one more. Meet you in the bedroom?\" she asked.\n\nShe wore me out, then woke me from my drowsing and had me lead her down that path again with mouth and fingers. \"Just because you need a break doesn't mean I do,\" she'd laughed. \n\nLong after midnight, I found myself sitting up against the headboard sipping on the glass of wine that had been forgotten on the nightstand. Caitlyn was against my side, half-drowsing in turn. I felt warm and cozy, drugged on the opiate of wine, full breasts and willing hips.\n\nAs I turned to set the glass down, she stirred. \"Let me have some.\" I held the glass to her mouth, and she sipped. Holding my wrist so I didn't move it away, she tipped the glass for a second mouthful. She smiled and I set the glass down on the nightstand. \n\nAs I turned back, she took my hair and drew me down, rising to meet my lips. She hadn't swallowed. Holding me from a startled jerk, she kissed me, sharing the wine between us.\n\nA small bit escaped and ran down my chin to drop on my chest. Giggling, she leaned over and licked it. Then her lips caught a small rivulet that had run lower. She didn't stop when she ran out of drips, moving half under the covers to kiss my belly button, then lower still for my abdomen, before placing a kiss at the base of my cock and running a trail of tiny pecks along its length.\n\n\"Just lie back and enjoy,\" she instructed.\n\nI did. I let my head fall back against the wall and reveled in the velvety sensation of lips and tongue and hand wrapped around me. I closed my eyes to the sight of a bobbing sheet and tuned out the faint noises of the outside world. I spread my legs wide to avoid the rhythmic pressure of her forearm, and my arms fell limp to my sides. My mind fell into a state where there was only the sensation in my groin. \n\nTime passed. I felt the pressure building and neither encouraged it nor fought it. Then the tipping point, the familiar scant seconds of notice that it was about to become inevitable before my conscious brain shut off and dopamine flooded into me.\n\nI felt Caitlyn pull her mouth away and the pace of her hand grew frantic on me. Finally, I came back to awareness.\n\n\"Bleh,\" she said, her expression simultaneously amused and sour, \"you didn't warn me.\" Making little spitting noises, she picked up the glass of wine and swished her mouth as I laughed out loud. She wasn't mad. \"When you get one, you give one,\" she parroted, smiling.\n\n<center>\u2022 \u2022 \u2022</center>\n\nI spent most of the week in a Groundhog Day existence: take Terrell and Nia to school; stop at Grano for coffee; check progress with John; spar with Ruth; play mentor or babysitter at the site, depending on who was there; spar with Ruth some more; meet Caitlyn for food; drag her or be dragged by her into the bedroom; home. \n\nRepeat.\n\nExcept Friday evening had a hiccup. I was growing tetchy the last couple of days when my mind wasn't occupied. I knew why, but there was nothing I could do about it, so I did my best not to take it out on anyone else, especially her. And the best way to do that was to stay distracted.\n\nMy suggestion of a film festival in the city was met with, \"That'll run late, and I have to work tomorrow.\" That was okay. I knew her hours were occasionally brutal, especially because she didn't always get a full night's sleep. \"Dinner and check out a band? We can leave whenever.\"\n\nThat met with approval so, after trying out a Turkish place, we found ourselves in our regular haunt, Maxwell's, listening to a new band.\n\nCaitlyn's taste in music was several decades later than mine, and she was enjoying the '90s sound they were rocking. It didn't cause me to want to run screaming the way some music did, and they mixed in an updated version of something older once in a while. So, I was willing to just let it flow around me and enjoy my bourbon and look at her.\n\nThen a one-two combination landed. \n\nThe left jab to the face was a cover of \"Wherever You Will Go.\" Despite being '90s music, it was a song that I liked, and I tuned in to listen. As it ended, I was feeling slightly melancholy, almost hearing a quiet voice talking to me as I contemplated the lyrics:\n\n<blockquote>Who will be there to take my place?<br>When I'm gone, you'll need love<br>To light the shadows on your face.</blockquote>\n\n\"That song is\u2014\" I started to say. The right cross to the chin came out of nowhere&nbsp;\u2014 no Astaire chords hinting at the melody, no Sinatra syncopated horns to clue me in, just a single lead note and then:\n\n<blockquote>Some day, when I'm awfully low,<br>When the world\u2014</blockquote>\n\nIt took a second because the tempo was different, faster, but it got no farther than that before I felt the shockwave course through me. Our song, our first dance as man and wife.\n\nLiv had played Frank's version during that car ride down Route 1, blasting it out through the car speakers, her feet up on the dash. When it ended, she heaved a melodramatic sigh. \"It's too bad he's dead. He'd be on my Free Pass list,\" she'd lamented. \"Those eyes, that voice&nbsp;...\"\n\n\"You don't get a Free Pass list.\"\n\n\"Everybody knows you get one. It's the law,\" she'd giggled. \"Right now, it's David Beckham and Jake Gyllenhaal.\"\n\n\"Then I get Adriana Lima and Jessica Alba. Oh, and Elisha Cuthbert.\"\n\n\"Three? Greedy boy. Deal!\"\n\nSix years later, she'd whispered in my ear as we twirled across the floor in front of family and friends, \"I tore up my list. No one but you.\"\n\nNow, Caitlyn's hand landed on my arm and I flinched back automatically, muscles tensing, turning to meet her eyes staring at my face. She studied me for a second.\n\n\"Let's go,\" she said.\n\nI started to protest. She shook her head and rose, taking my arm again and pulling me up. I was quiet most of the ride and the walk up to her place.\n\n\"Come on,\" she said, drawing me toward the back, \"I'll help you until you forget until that song is nothing but a memory.\"\n\nHours later, I was on my side up on one elbow, looking down at the sleeping woman next to me. Lifting the covers slightly, I studied the gorgeous form: the full breasts, slender waist, and flaring hips of a true hourglass figure. I focused on the patch of red curls at the center. \n\nSuddenly, I wanted to forget again. \n\nNot forget the song, that reaction would have passed in a minute or two even if we'd stayed. But fighting Caitlyn took effort and I hadn't cared about the music enough to spend it. And, on the flip side, I did care about getting laid, so arguing seemed ill-advised.\n\nIt was the rest of the evening. The upset about Liv kept alive by Caitlyn's comment. A little frustration that a rare night out was cut short. It seemed that all Caitlyn and I did was eat, drink, and have sex. \n\nIt was also impatience with the reassurances Caitlyn whispered&nbsp;... reassurances I finally cut short by letting her know what I wanted. She'd obliged, raising back up when I warned her, to kiss me hard.\n\nNow, I wanted not to dwell on those feelings again, and I could think of one good way to distract myself. I pulled the covers back, causing her to stir. Sliding down, I planted a kiss on those curls and then pushed between her legs to plant one farther down as she roused.\n\n<center>\u2022 \u2022 \u2022</center>\n\nForty-eight hours later I lay in bed again, contemplating a day that I'd refused to contemplate for months, wishing I could fall back asleep.\n\nI was surprised at about eight o'clock by a knock on the bedroom door.\n\n\"Matt, please get up,\" Taty said through the wood.\n\nI was puzzled. She didn't work on Mondays. \"Did you get called in?\" I called. \"If\u2014\"\n\n\"Please get up and come out,\" she repeated. I heard her move away.\n\nPulling on gym shorts and a T-shirt I walked out to ask, \"What's the matter?\"\n\nShe nodded toward the far end of the living area. Turning, I saw Caitlyn and Ruth sitting on my couch.\n\n\"It's an Abode day,\" Caitlyn said. As I started to point out that it was Monday, she insisted, \"Today of all days. I called John, and he says he'll show up and do nothing.\" She smiled.\n\nI looked back and forth between the three of them. \n\n\"It's not hard to google 'Olivia Brennan' and find out the date, Matt,\" Caitlyn said quietly. \"We've known for a while.\"\n\nRuth's face had one of its rare softer expressions. \"Distraction, like I said.\"\n\nMy thoughts were in a jumble. I was angry at the interference, relieved at the diversion, dumbfounded that they'd sought out the date of Liv's death, scared of breaking down again in front of them.\n\n\"Hey!\" Ruth got up from the couch and walked over, saying, \"Put on some clothes unless you want us girls trying to sneak a peek up the leg of those shorts. And brush your teeth. You've got morning breath.\" Leaning in, she whispered, \"Don't fight her on this one.\" \n\nTaty said, \"There was a suggestion that we might have some folks over for potluck later. Angela and Matt, some others from the building. Caitlyn said some from Abode would come&nbsp;...\" She trailed off, waiting to see how I reacted to this further managing of my day.\n\nWhen I didn't respond immediately, she nodded her head as if that settled things. \"Okay, don't stress. Go back to bed and\u2014\"\n\nAt the same time, Caitlyn started in, \"Matt, just listen, this will help\u2014\"\n\n\"Fine!\" I cut them both off abruptly and turned back to the bedroom.\n\nI pulled off my shorts and tee and brushed my teeth. My mind was still roiling between upset and relief. I jerked on a pair of jeans to cover my nakedness and opened the bedroom door. \"Taty, can you come here for a second?\"\n\nHer eyebrows went up at me standing there bare-chested. I ignored that. \"Who else have you told?\" A few nights ago, the significance of today had slipped out in our evening chat, and I felt betrayed.\n\n\"I didn't tell anyone, including them. Caitlyn was the one who looked it up and spread the word. But, from the way that Angela and Matt talk, I'm pretty sure most of the building knows that it's around this time. They all knew her and remember.\"\n\n\"Have you already invited everyone?\"\n\n\"Do I strike you as the type to invite people without asking you first?\" \n\nAfter a moment's reflection, I shook my head, my upset with her fading away. \n\n\"I'm talking to you now before saying, 'Yes, ma'am,' to Caitlyn's instructions. And if you say no, then it's no.\"\n\nShe waited to see if I would say no. When I didn't, she started to back out of the room, smirking. \"Hey, Matt?\"\n\n\"What?\"\n\n\"I told you I don't mind white boys, so maybe have mercy on a woman who hasn't been on a date with a man in over a year&nbsp;... and zip up.\" \n\nI glanced down and flushed. As she meant me to&nbsp;\u2014 I had learned the hard way that gentle mockery was her way of defusing things.\n\nAs I followed the other two out of the front door, I said, \"Okay,\" quietly to Taty.\n\n\"Okay,\" Caitlyn said when we arrived. She looked at the other women who had shown up. \"I see John's car here, so let's get busy.\"\n\n\"Okay?\" asked Ruth when we had a moment alone.\n\n\"I guess. How long have you been discussing this?\"\n\nShe shook her head. \"I didn't. I was informed last week that it was in the works. I thought it might be a good idea but only if you were on board. It's why I came along this morning: in case you weren't.\"\n\n\"To twist my arm?\"\n\nFor the first time ever, Ruth looked offended. \"No, you asshat, hers.\"\n\nI felt bad. \"Sorry.\"\n\nShe punched me in the arm. Then she shocked the hell out of me by giving me a quick hug.\n\nBela arrived not long after. \"Malibu Ken's got it,\" she said in response to my questioning look. She took in the mood of the room. It was pretty clear I was in charge of construction; John was still hurting. It was even clearer that Caitlyn was really in charge of the day.\n\n\"This dinner thing, do you want us all there?\" Bela asked.\n\n\"I guess.\"\n\n\"Are you sure? You don't particularly sound like it.\"\n\n\"I'm feeling pushed at by everyone. I know people are trying to help, but today&nbsp;...\" I trailed off.\n\n\"If it gets to be too much, take a break and walk away for a while.\" The smile wasn't her usual puckish tease. This one was warmer, something that commiserated without pitying. \n\n\"Hey,\" she bumped my shoulder, \"some of us realize that, under that occasionally grouchy exterior, there's a guy trying to figure out life again. And sometimes\"&nbsp;\u2014 her eyes shifted away from mine, inward&nbsp;\u2014 \"a body just needs to get away for a bit.\"\n\nAs we finished lunch, I told everyone, \"Just keep at what you're doing. I'll be back in an hour or so. Ask Ruth if you get stuck. Let John nap.\" \n\nBela smiled and gave me a quick nod.\n\nCaitlyn followed me as I walked toward my car. \"Where are you going?\"\n\n\"Cemetery.\"\n\nShe put her hand on my arm to stop me. I didn't bother to suppress the reaction and pulled my arm free. Not rudely, but I didn't want to be touched. \n\n\"Matt, listen. Maybe go when you can just be there. Pick some other day when you can remember the good and not be consumed by the bad.\"\n\nThat did it. I saw the glances our way at my raised voice. \"I'll be damned if I'm going to reduce a decade of loving someone to 'some other day.' Okay? Good!\" I stomped to my car.\n\nI hadn't visited Liv's grave in a long while. Most of her ashes were scattered in the woods as she'd wanted, but I'd had a few buried in my family's plot so that there would be a marker. That first month or so, I had come by every day. Then, something had switched off in me, and I couldn't bear to come at all. \n\nNow, I added the flowers I'd bought on the way to those already there, probably left by her sister. I sat on the grass for a long time. My anger at Caitlyn had faded in the face of sad memories and flashes of upset at what life had dealt out. Eventually, I talked to Liv for the first time since those initial rants of a year ago about her leaving me. After telling her that I still loved her, I admitted:\n\n\"I'm still angry at you. I wish you had let me be with you to the end. But I don't want to fight with you. I just miss you. I'm feeling lonely right now.\n\n\"I don't know what's going on in my life, Liv. I've tried to move on. I've made a little progress. Not a huge amount.\"\n\nAfter a while, \"I slept with someone. I didn't think you'd be upset.\" \n\nSome part of my mind, way back in the dim recesses, wondered if there'd be one of those storybook moments where the departed gave some sign of their blessing. Of course not. This was reality. Then again, I noted with a certain grim humor, neither would there be a sign that they objected. \n\nDriving back to the site, my thoughts were conflicting. I felt better&nbsp;... as if I had done the right thing. I felt worse&nbsp;... alone in a way I hadn't felt in a while.\n\nI did something I hadn't done in a long time. I hit the first preset on the car's radio. One to four had been hers, five to eight were mine. Michael Bubl\u00e9's voice filled the car. Liv's love of jazz songs had been a topic of much of my teasing, paid back by her ribbing of my love of older movies. A back-and-forth that was all banter, real only in the sense that it was one way we said, \"I love you.\" \n\nI could almost see the bare feet tapping time against the windshield, a habit I could never get her to stop. My protests were invariably met with an atrocious Brando accent, \"I'm gonna make you an offer you can't you refuse,\" a smooch that landed somewhere between lips and cheek as I tried not to lose sight of the road, a giggle, \"There you go!\" and the beat would resume.\n\nIt took a while, but Frank came on. It wasn't \"The Way You Look Tonight,\" but it carried me back to the other evening. I contemplated what had gone on, the undercurrents of the conversations. \n\nNo, I thought, I'm not giving Liv up. Yes, I'm still angry at her. Yes, I hurt. But I won't forget her.\n\n<center>\u2022 \u2022 \u2022</center>\n\nThe potluck dinner was not horrible. A lot of my neighbors came, those who had lived there long enough to have known Liv. From the construction crew, everyone who'd been there that morning showed. John was driven by his very-pregnant Madison. She gave me a hug and a sincere, \"Thank you.\" I tried to accept both with good grace; the second was easier than the first.\n\nCaitlyn maneuvered me alone in a corner. \"I'm sorry.\"\n\n\"So am I.\" In my mind, that was ambiguous enough; she could read whatever she wanted into it. Evidently, she didn't read it as conciliatory.\n\n\"Matt, I'm trying to help.\"\n\n\"I get that.\"\n\n\"What do you want from me?\" she asked, her voice sharpening.\n\n\"What do you want from me?\"\n\nGlancing at the others in the room, she pulled me toward the balcony, even though it was chilly evening outside. \"What I want from you is a companion,\" she said quite succinctly. \"Someone to share my life.\"\n\n\"And I'm not one?\" \n\n\"I don't know. That's why I asked you what you want from me. Am I just sex to you?\"\n\n\"No! I don't know how you can say that.\" I was getting a little heated. \"I'm the one who's always suggesting we go out and do things together. Have a life. You're the one who always says no.\"\n\nShe nodded at that, but she didn't say anything.\n\nFrustration mounted, and my tongue started running away from me. \"Just because I like sex doesn't mean I'm in it only for the sex. You seem to like the sex. Are you just in it for that? Or are you faking it?\" Yeah, there was a little hurt pride in that last jab.\n\nShe shook her head, not taking offense at the suggestion. \"No, I'm not faking it. Whether you like sex doesn't have much to do with the question I asked you, if you think about it.\"\n\nIt was my turn to remain silent. How do you convince someone of a negative?\n\nEventually, she tried again. \"Matt, I understand how it can help you forget. After&nbsp;...\" She paused for a second and, for one brief moment, I think she took the lid off that box she had put around her past because I thought I saw a flicker of something that looked like distress cross her face. \"After Gregg died, I took up with someone. Then, one day, after making love into the wee hours of the night, I woke up and realized that I had no real idea of how he felt about me. It wasn't because I thought he was lying to me. He had done nothing to make me doubt anything. \n\n\"It was because our relationship was all about him taking my pain away. I was wrong: I hadn't been making love with him. I had been using him as a stand-in for Gregg. That's when I realized I had to do something. It took a while, but I did, and now I'm happy again.\"\n\n\"And yet I notice that you're not with that guy. Or are you juggling two of us?\" Unfair. I knew it as soon as I said it; I didn't need to see the angry expression on her face. \"I'm sorry.\"\n\n\"No, I'm not still with him. I had to figure things out on my own, and I made a mess of it. But you don't have to figure it out by yourself.\" She put her hand on my arm and I flinched. I could see it hurt her and felt bad. \"You had a horrible period in your life. So did I. So did a quarter of the people in this room. What I want is for you to be able to come to terms with it as we have.\"",
        "\"By terms, you mean just let it fade away into almost nothing?\"\n\n\"Yes!\" As soon as she said it, she could see it was the wrong thing to say. Or, more accurately, she probably still thought it was the right thing to say; I was just giving the wrong reaction.\n\n\"I didn't mean forget her completely,\" she said quickly. \"Just let it become something that's not a 'thing' in your life, even though it was before. You know, like that kid you were friends with in third grade that you don't think about that much anymore.\"\n\n\"What kid? What are you talking about?\"\n\n\"I don't know if there was a kid!\" Her exasperation morphed into irritation. \"It was a metaphor.\"\n\nSimile, I thought snottily, not metaphor&nbsp;... because my exasperation had morphed too. I didn't respond, just took another swallow of my drink.\n\n\"Dammit, Matt. I'm just trying to help you. I know what I'm talking about.\"\n\nEnough. \n\n\"I'm sure you know what you're talking about. For you. And maybe,\" I said before she could interject, \"it worked for some of the other women in your group. But it won't work for me.\"\n\n\"Why not?\"\n\n\"Because I don't want it to! I don't want Liv to be a faint memory that I barely, if ever, think about. I want her always to be a 'thing'&nbsp;... maybe not a painful one, but I want to remember her until the day I die.\" With that, I turned away and made my way back inside to the cluster by the kitchen that included Taty, Matt, and Angela.\n\nMatt's expression was impassive. Taty's was concerned. Angela's was upset, but it didn't seem directed at me. I realized why.\n\n\"You heard?\"\n\n\"I think everyone in the room heard,\" Angela replied.\n\nA startled glance around showed everyone not looking at me or Caitlyn. I flushed in embarrassment. \n\nTaty's laugh was a little strained but there was an undercurrent of real humor, \"Quiet's not your strong suit. I think I've mentioned that?\"\n\n\"Jesus!\" I escaped into the kitchen. Taty joined me a few minutes later.\n\n\"A little ohmygod, but nothing nasty,\" she answered my question about what was going on out there. \"I hear you were a little loud earlier today also.\"\n\nI sighed. Apparently, it was my day to make an asshole out of myself. I said as much.\n\n\"Why? Because you said you loved your wife? That doesn't sound particularly like an asshole to me. Nor others who know you. Angela just took the hide off someone who said maybe you were overreacting.\"\n\n\"Angela?\" I asked in surprise.\n\n\"Don't let that exterior fool you,\" she snickered. \"She lit them up big time. Matt practically had a seizure trying not to laugh.\"\n\nI let \"Yikes!\" show on my face and went back to rinsing stuff. Taty started loading the dishwasher.\n\n\"Remember you asked me if Caitlyn said something when she came to dinner?\" she asked after a minute.\n\n\"You never answered.\"\n\n\"Well, while you were in the kitchen, she talked to me. After prying around to make sure I wasn't your secret fuckbuddy\"&nbsp;\u2014 her eyes danced as she said that&nbsp;\u2014 \"she told me that I should help her help you forget Olivia.\"\n\n\"What did you say?\"\n\n\"I said no. I wasn't going to conspire behind your back and was kind of unhappy she'd asked. Besides, even if I agreed, which I don't, it wouldn't work. From what little I know of you, I don't think there's a snowball's chance in hell of you ever turning Olivia into a faded photograph on a shelf somewhere.\"\n\n\"Now, that's a metaphor.\"\n\n\"What?\"\n\n\"Never mind.\"\n\nEventually, the evening ended. The men all shook my hand. I endured the hugs from each of the women, even Caitlyn's slightly rigid one. Evidently, a protocol had been agreed upon behind my back because no one told me they were sorry for my loss.\n\nBela was one of the last to leave. Ruth was still there. So was Angela, Matt having called it a night because of work the next day.\n\nAs I walked her to the elevator, Bela turned to me, \"Thank you for the wonderful dinner.\"\n\n\"I didn't make any of it.\"\n\n\"I know. I just said it was wonderful, didn't I?\" she said with a straight face. She winked at my \"ha-ha\" response. As the bell dinged and the doors opened, she asked, \"Are you and Caitlyn over?\"\n\n\"I'm not sure.\"\n\nShe nodded. \"Good night, Matt.\" She leaned forward for a brief hug and an air kiss, then pulled back and let the doors close.\n\nRuth and Angela were saying goodbye to Taty when I walked back in. Ruth turned and hugged me. \"Good job today,\" she whispered in my ear.\n\nAs she let go, Angela stepped up for her turn. I must not have hidden it perfectly; the transition from Ruth to her was so quick. I tensed. She pulled back and looked at me, upset forming on her face. I couldn't just pretend I didn't notice; it wasn't fair to her. \n\n\"It's not you,\" I explained even though she hadn't spoken. \"Being touched by women&nbsp;\u2014 women my age&nbsp;\u2014 makes me think of Liv.\"\n\nI saw understanding immediately. It wasn't the first time I'd thought about the astute side of her. \"But, Mattoo, Caitlyn&nbsp;...\"\n\n\"Even her,\" I assured her.\n\nShe thought for a second, then grinned. \"But it's a small price to pay for those boobies, right?\" \n\nMy mouth literally fell open. I'd never heard Angela say the slightest thing off-color. She winked and stepped back. Taty and Ruth were openly laughing.\n\n<center>\u2022 \u2022 \u2022</center>\n\nMy life was filled with women.\n\nTaty and Bela hit it off and, after carefully checking with me first, Taty started inviting Bela over once in a while. She'd show up with Rafi, and the kids would scurry into the guest room to do whatever kids that age do, while the two of them would sit and have a glass of wine at the table. I was never excluded, but I felt like I was intruding and, as often as not, would head into my room to watch a video.\n\nAngela started inviting me to join Matt and her in a movie here, a walk there. I begged off, afraid their casual affection for each other would spoil my mood. But we'd talk in the hallway more than we did the past year. I found she had a dirty little sense of humor that I'd never suspected in the three years I'd known her. Now, I guess she figured&nbsp;\u2014 convinced that I'd already seen her dark side&nbsp;\u2014 what the heck.\n\nCaitlyn made up with me and, after a brief affirmation of the concept of makeup sex, proceeded to demonstrate. To be honest, I loved it. When a woman you find attractive indicates that she'd like to spend whatever part of twenty-four-seven can be managed naked with you, it's hard not to love it. I existed in a haze of satiation that I hadn't felt since the galloping hornies of college years.\n\nAt the same time, a little thought wriggled in and wouldn't dislodge. It was so siren-like. Was she fucking me into forgiving or fucking me into forgetting?\n\nAn ill-timed comment by Bela brought things to a head. She was over to visit Taty, sitting at the table while Taty was in the kitchen opening a bottle of wine.\n\n\"I'm heading out,\" I said through the doorway to Taty.\n\n\"Caitlyn's?\" Taty asked.\n\nI nodded. Her nod in return seemed off somehow. \"Is something wrong?\" I asked.\n\n\"No. Have fun.\"\n\nI nodded. \"Bye, Bela.\"\n\n\"Bye.\"\n\nAs I closed the door behind me, I stopped to text Caitlyn that I was on my way. In the silence, I could hear Bela's voice through the door, calling out to her friend.\n\n\"You could have told Matt what you were thinking.\"\n\nWhat? This suddenly seemed something worth hearing. Screw good manners about eavesdropping. I stepped closer to the door since Taty's voice was muffled from the kitchen.\n\n\"What am I going to do, ask him if he's sure he wants to go have sex?\" \n\n\"I think that would be good.\"\n\n\"I know you do,\" Taty responded. One of them laughed, I couldn't tell who or why, and Taty's next words were too muffled to hear.\n\nBela answered, \"You sure? You were there the other night.\"\n\nTaty's voice got clearer as, I assumed, she rejoined Bela. \"I guess they made up.\"\n\n\"I guess,\" Bela agreed. \"Whatever. Can't really blame him. Guys drool over her.\"\n\nAfter I got over the minor annoyance of being talked about, I thought about what I'd heard during the drive across town. I knew Taty wasn't a huge admirer of Caitlyn's ever since that night over dinner. I didn't know my relationship was a topic of conversation and I didn't particularly like what I read into what was said: was I just drooling? I remembered my thought that all we did was eat, drink, and have sex.\n\n\"I used to like to go up and see the foliage in Vermont. Want to?\" I asked Caitlyn a little later.\n\nShe didn't answer immediately. When she did, her voice was light, \"Did you and Olivia use to do that?\"\n\n\"Yeah.\"\n\n\"Hmm. Maybe. Let me think about it. In the meantime\u2014\"\n\nI interrupted. \"Is the fact that I did it with Liv a problem?\"\n\n\"No. Of course not!\"\n\n\"I can't live my life not doing anything I ever did with Liv. There wouldn't be a ton of stuff left.\"\n\n\"I'm not saying that.\"\n\n\"Then what are you saying?\"\n\nShe sighed. \"You know what I think, Matt. If going up to Vermont is a way of not letting her go, I think it's a bad idea. If you just really like orange leaves and want to go spend a romantic weekend in some bed and breakfast, I could be talked into it. Especially if we went to some other place. Maybe New Hampshire.\"\n\n\"There's a lot of territory between remembering the good and not letting go.\"\n\nShe shook her head. \"No. Trust me. There's not.\"\n\nI was proud of the fact that I didn't respond to that.\n\nShe lowered her head in thought. \"Look,\" she said, \"it's been a long week for both of us. Let's table this for now.\"\n\nI knew what I needed to do. \"If you'd like to have a drink, order some takeout, or whatever, I'm okay with that. But I'm not going to change my mind on this. Period. And I don't want to table it&nbsp;... I want it to be a closed subject.\" \n\nI was lying. The truth was, I had no desire to have a drink, or order takeout, or cuddle, or screw. But walking out on a date wasn't what Mama Brennan taught me. \n\nThen I saw how stiffly Caitlyn was standing and the tight expression, and I knew I wouldn't have to walk out even before she spoke. \n\n\"It's been a long week,\" she repeated. \"Maybe tonight's not such a good idea.\"\n\nAll five of the people around my dining room table were deep in chicken tikka as I came back in. They looked up in surprise.\n\n\"Want some?\"\n\n<center>\u2022 \u2022 \u2022</center>\n\nI got a call the next morning from Caitlyn. \"I won't be at the site today.\"\n\n\"Okay.\"\n\n\"There's something else. I've been thinking about last night. I like you, Matt, quite a lot. And I enjoy our time together. And I want to help you. But I don't think we're on the same wavelength. If you think that might change, I'd like to keep seeing you. But yesterday you said you didn't want to change, and that's a problem for me.\"\n\nThat wasn't what I said at all. Not even close. I almost opened my mouth to point that out. But I didn't. Instead, a part of my brain that wasn't constantly holding debates with itself about the mess of my life took over and cut the Gordian knot.\n\nThat part said, \"I'm not going to give up Liv. I'm sorry. I just won't.\"\n\n\"I see. Well&nbsp;...\" She was silent for a long moment. \"I can't say I'm overjoyed to hear that. But I'm not looking to be the substitute for another woman.\"\n\nI hadn't said that either. Why did love have to be zero-sum? But, again, I kept my mouth shut rather than correct her.\n\n\"I think maybe we should take a break,\" she finished.\n\nOf course, the minute I disconnected, my mind conjured an image of Caitlyn naked and said, \"What the fucking hell are you doing?\"\n\nThe part that didn't engage in debates, the part that had run my mouth, answered for once, \"Thinking with the big head.\"\n\nOf course I wasn't overjoyed. Nobody likes to be dumped, even if some subconscious part of you is thinking about it yourself. It would have been nice to have Ruth's abuse to distract me, but she didn't show that day. Bela did that afternoon.\n\n\"We're almost done,\" she observed.\n\n\"Yeah. Excited?\"\n\n\"Yeah. My first house. But a little cranky that I didn't get my four hundred hours in. I guess I'll have to find time to help with another project.\"\n\n\"Is that so bad?\"\n\n\"Not by itself. It's just there's work, Rafi, a new house to decorate and furnish. I don't even have any furniture of my own; it's all my parents'. I guess sleep will be optional. Are you going to keep doing this?\" she asked.\n\n\"I think so. I like it.\"\n\n\"Maybe all of us can pick one together.\"\n\n\"Mmm,\" I replied, thinking that Caitlyn would probably consider it a bad idea. At Bela's reaction to my less-than-enthusiasm, I said quickly, \"Oh, no, sorry. I was just thinking some may not want to.\" \n\nHer expression cleared. \"Good. I'd hate to think what would happen if you meant you couldn't stand the thought of working with us.\"\n\n\"What would happen?\"\n\n\"Your coffee. Just imagine. It's utterly gross. I can't bear to think about it.\"\n\nI was being teased. That was okay. \"I can't either.\" I shuddered. \"So, I'll talk to Ruth. She probably knows the drill for signing up.\"\n\nI broached it to Ruth the next time I saw her. \n\n\"Sounds good. I do this all year. I don't need to work, and it keeps me from getting old.\"\n\n\"Rich, huh?\" I teased.\n\n\"A bit,\" she said, surprising me. She settled down on top of a shop vac. \"You and Caitlyn?\"\n\n\"She said she wanted a break.\"\n\n\"And how are you with that?\"\n\n\"My ego's a bit bent, but&nbsp;...\" I shrugged. \"Who knows, maybe I'll be fine in a day or two, or maybe I'll wake up one day and realize I want to shoot myself.\"\n\nShe looked at me searchingly. \"I get that. If I were a guy, I'd probably think she was the perfect cure for a cold bed. But I told you that some need to be driven and some not. She needs the first&nbsp;... or, more accurately, she wants it. You're the second; I don't have too many doubts about that anymore.\" \n\nShe shook her head. \"She's a good woman, Matt, and it would upset me if you thought otherwise.\"\n\n\"I think she's a good person too, but&nbsp;...\"\n\nWhen I didn't complete the sentence, Ruth supplied, \"But she pushes at you?\"\n\n\"Yeah.\"\n\nLeaning back against the wall, she patted the floor next to her. When I settled in, she said, \"I've known Caitlyn for a while now. I didn't know her when her husband was killed, but a few tidbits have spilled here and there through the years. And her sister came and helped on a build once, and she and I talked some.\n\n\"Everyone reacts to that kind of loss in their own way. For me, it was drugs and sleeping around. For you, I've gathered it was alcohol and not sleeping around.\" \n\nI didn't take offense at that; she wasn't being snarky, just stating a reality. \n\n\"For Caitlyn, it was burying herself in her nursing work. And, when that didn't fill enough hours in the day, she found other places where she could bury herself. Leading support groups at first. This\"&nbsp;\u2014 she gestured around us&nbsp;\u2014 \"became her process after a while.\n\n\"Somewhere along the way, it became who she is. Yes, she has a one-size-fits-all approach to loss. Yes, she's persistent as all hell. But she's doing it because she thinks it helps.\"\n\n\"She won't back off. I've flat out told her, but she won't.\"\n\nRuth nodded, a trifle sadly I thought. \"I'm not surprised. You, my young friend, are catching it double-barreled because she likes you. And because she likes you, she wants to force you to fit into her world. But even with others&nbsp;... we've had a few people stop coming because she wouldn't let it go. Even those who stayed have had issues. Bela and this other woman, Hailey I think her name was, both of them flat out told Caitlyn to drop it. Bela added 'or go somewhere else' when it didn't stick the first time or the second.\"\n\n\"I don't know that I can fit into her world.\"\n\nShe nodded. \"Only you can decide that. Just remember that she's a nice woman. But\"&nbsp;\u2014 it wasn't a punch, just a gentle push with her fist against my shoulder&nbsp;\u2014 \"that doesn't mean she's the right woman.\"\n\nAfter a moment to let that sink in, she asked, \"You want some absolutely ridiculous advice from an old lady that will probably make you squirm? You can ignore it and I won't mind.\"\n\n\"Umm.\"\n\n\"She cut you loose. So, if you end up getting a little nookie somewhere else, maybe think about how you feel after. If you wake up next to that girl feeling about the way you did when you woke up with Caitlyn, then Caitlyn probably wasn't much more than attraction. If you think, 'Oh my god, I want to shoot myself,' then go see if you can put things back together somehow.\"\n\nSex advice from grandma. She was right, I squirmed inside a little.\n\nI stood to go. Turning back, I asked. \"Do you think she's in love with me?\"\n\n\"Honestly? No. I think she likes you and is interested in mending you.\" She ignored my sour expression. \"And she enjoys some sex.\" She ignored my squirm. \"I could be wrong. I'm just an old lady. But I think she hasn't gotten to love yet.\"\n\n<center>\u2022 \u2022 \u2022</center>\n\nI decided I liked my newly found not-celibacy. I decided that I wanted a date. The trouble was the last time I went looking was at a frat mixer.\n\n\"Taty,\" I said over our glass of wine, \"if I wanted a date, what\u2014\"\n\n\"Please tell me you're kidding!\" Taty broke in. It was all I could do not to burst out laughing at the expression on her face.\n\n\"How many times do we have to have this conversation? I'm not asking you for a date. I'm asking you if you know if there's some thirty-something dating scene, or whatever.\"\n\nHer face cleared and I saw that rush of color that was so hard to detect on her skin. \"Sorry,\" she said sheepishly.\n\nI shook my head at her in semi-disgust and went to refill. This might be a two-drink conversation.\n\n\"I don't really know. I've been out of the man-market for a long time. But,\" she said, \"hang on.\" \n\nOne speakerphone call later to someone she jokingly described as \"my slut friend\" and I had a ten-minute whirlwind tour that overwhelmed me with the fine points of Tinder, Bumble, OkCupid, Match and about five others I never heard of, ending with, \"Or, if you just want to take your chances, try Piccolo's over on Glendale. That's an older crowd.\" \n\nOlder? I didn't say anything but Taty caught it anyway. \"She's twenty-six,\" she mouthed silently and rolled her eyes.\n\nTaty and I spent the rest of the evening crafting a profile for me that she said, \"Doesn't seem like a total serial killer.\"\n\nAnd yet, come the weekend, I still hadn't put it into play. Something about the app scene just felt wrong to me. I found myself in my best suit, sitting in my car outside a garish \"Piccolo's\" sign, complete with a logo of the instrument that didn't look too phallic.\n\nDo they know what piccolo means in the original? I asked myself with a grin.\n\nAnd again yet, I hesitated. Instead, I found myself ensconced at the bar down the street. \"Maker's&nbsp;...\" I started to say, then a bottle caught my eye. \"No, make that a Whistlepig.\" I hadn't had a rye in ages, and I felt like mixing it up tonight.\n\nThe bartender smiled, either at the choice or the name, I wasn't sure. As she was pouring, I listened for that voice, the one I'd heard the last time I visited a bar. I didn't hear it.\n\n\"Do they ticket on the street?\" I asked the bartender. \n\n\"Depends on where.\"\n\n\"I'm right there,\" I said, pointing out the window.\n\n\"Nope, but I hope you locked it. Some of the crowd from\"&nbsp;\u2014 she nodded towards Piccolo's&nbsp;\u2014 \"are a little sketchy, and that's a nice car.\"\n\nI thumbed the fob and was reassured by the flash of taillights telling me it was locked. I settled back to enjoy the pleasant warmth of the whiskey, content to do nothing but relax. The bar was virtually empty, just one lone figure at the other end who had \"regular\" written all over him.\n\n\"Another, Matt?\" \n\nShe'd gotten my name when I handed her a credit card for a tab. I'd corrected her, \"Matt. Matthew was my father yada yada&nbsp;...\"",
        "\"Sure, Lauren,\" I answered. \"Another would be good.\"\n\nThree hours later, she slid bonelessly down beside me with a contented sigh, one arm draped lazily across my chest. \"I make a mean breakfast?\" Her tone made it a question.\n\nI looked over at her.\n\nShe shook her head. \"Don't worry. I'm not some psycho bitch who's already trying on your last name for size. It's just a hookup. But a warm body for the night would be nice.\"\n\n\"Sounds good.\"\n\n\"Can I snuggle?\"\n\nAt my nod, she settled closer, one leg bent up and over mine so that I felt shaven&nbsp;\u2014 a first for me&nbsp;\u2014 warmth against my upper thigh. \"If anything comes up tonight,\" she said with a straight face, \"wake me.\"\n\nIn the morning, I woke up long before she was stirring. Construction hours and bar hours are radically different schedules. I nudged her awake gently. \n\n\"All right,\" she said drowsily, rolling to face me. I felt her legs part.\n\n\"Hey. You're really sleepy.\"\n\n\"It's early,\" she mumbled with a smile. \"It's okay though. I said you could wake me.\"\n\n\"How about you sleep, and I skip breakfast?\"\n\nShe came more awake at that. At her questioning expression, I shook my head. \"No. I'm not trying to bail. I'm just wide awake and I think you'd like to sleep. When do you normally get up?\" \n\n\"Nine.\"\n\n\"It's not even seven.\"\n\nShe groaned and rolled back. Turning her head, she searched my face for a second. Then she nodded. \"Okay. Thanks.\"\n\n\"Thank you.\"\n\nHer mouth puckered. \"Want a blowjob before you go?\"\n\nI slid out of bed. \"Yes, but I'll let you sleep instead.\"\n\nThat earned me a chuckle. \"You have a nice butt,\" she said as I grabbed my clothes and headed for the living room.\n\n\"So do you,\" I said over my shoulder.\n\n\"It's skinny.\"\n\n\"It's biteable.\"\n\nShe laughed outright. \"Stop in again some night.\"\n\nI took Ruth's advice on the way home. I discounted their differences: they looked nothing alike, talked nothing alike, tested the waters about my interest differently. Even Lauren's uninhibited enjoyment of some good old-fashioned screwing contrasted with Caitlyn's more constrained attitude. I discounted Lauren's invitation that was neither meant to be nor understood to be a big deal. I discounted the advice-dynamic that had colored my relationship with Caitlyn.\n\nPutting all that aside, what did I have left?\n\nI had a pleasant post-getting-laid contentment and a desire for some strong coffee, exactly what I'd felt the last few weeks. \n\nI thought back to a blustery April morning a decade ago, walking across the quad, knowing there was absolutely nothing I wanted more than for classes to end that day so I could go back to Liv. Yeah, because I wanted to sleep with her again, but even more because of the warm feeling of just wanting to be with her.\n\n\"I want that,\" I said out loud to nobody.\n\n<center>\u2500\u2500\u2500 End Part Two \u2500\u2500\u2500</center>"
    ],
    "authorname": "chasten",
    "tags": [
        "construction",
        "heartbreak",
        "nurse",
        "redhead",
        "romance",
        "single mother",
        "spanish",
        "widower"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/let-him-cry-pt-02"
}