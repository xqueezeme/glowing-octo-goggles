{
    "title": "A Surprising Sunday Service",
    "pages": [
        "He looked down on the congregation from his vantage above them. They were all listening intently to pastor Rob. He seemed to have their attention, but Mike found he tuned out as soon as he heard the voice. Organized religion just didn't do it for him. \n\nHe could make out Carol's profile from here, her rapt expression told him that she was buying whatever Rob was selling. The guy was young and energetic, but that did nothing to sway Mike's stance on religion, no matter how much Carol insisted it could, if only he would listen. But, he loved Carol, and marriage is about compromise, so he attend church with her because it made her happy. \n\nHe could see his daughter, Sara, sitting with the choir. She seemed to be listening too. Thank God Tobey was such a little shit. It gave Mike an excuse to take his screaming son out of the church and to the outside annex where they kept the kids under 10 occupied with Sunday school. \n\nTobey had seemed quite happy there. They were letting them kick soccer balls and eat cookies. The lady in charge there had taken Mike's number and told him to go back in for the service, \"We find it better if the parents don't hang around. The kids act up less.\" \n\nThat was beyond fine for Mike and, best of all he did not have to go back in and listen to pastor Rob drone on for another, he looked at his watch. Shit, there was still an hour to go. \n\nAfter leaving Tobey he had wandered around outside for a while, before coming across a small outside staircase that led up to the organ balcony at the back of the church. Curious, and not finding any signs or locked doors to bar his progress, he wandered up. From up there he could look down on the whole congregation. There were enough recesses and dark shadows that he knew he could stay up there completely unseen. \n\nHe sniffed the musty air. Since pastor Rob had come along this part of the church was hardly used any more. Rob had brought in a band. He also sang and played lead guitar and everyone sang soft rock Christian songs instead of traditional hymns. So there was hardly a need for the old organ. Carol called Rob 'progressive'. Mike, having heard the band, called him a talentless wannabe who now had a captive audience. \n\nMike had enjoyed the choir, at least. That was one concession to tradition Rob allowed. And watching Sara's face light up when she sang was thrilling. Their soloist, too, was a pleasure to watch. \n\nBecca? Was that her name? She was gorgeous and, if Sara was to be believed, a genius too. \n\nMike sniffed again. That was not the musty smell of old church. That was something he remembered all too well from his college days. \n\nWho was smoking weed in a church? \n\nIt took him a while to trace it but, eventually, he spotted a small door that lead out onto a balcony on the outside of the church. \n\nThere was a girl out there, dressed in choir robes. She was sitting, back to the wall, staring through the balcony bars at a small courtyard Mike had not been aware was even there. Her robe was pulled up to her thighs, revealing long, pale legs. He saw then the casual flick of a thumbnail to dislodge the ash from her spliff. \n\nMike wasn't sure why he did it. He had been feeling belligerent all morning since being dragged to church, when he could have been at home watching the game. He slid through the partially open glass door and asked, \"Nice spot you have here. Mind if I take a hit?\" \n\nThe girl looked up, clearly surprised. He had not seen her face, a curtain of dark brown hair had hid the side closest to him. But, as she turned, Mike winced when he recognized Becca. Her face was flushed red with embarrassment. \n\nMike gave his best 'I'm not here to bust you' smile. Becca seemed to calm when he she realized he was not shouting at her. \n\nBecca was not a friend of Sara's, precisely. Becca was two years older for one thing. But, she was something of a mentor to Sara at school and a youth leader in the church. She was that kid everyone always compared their own kids to. Beautiful, straight A's, always busy doing community service and already accepted into half a dozen top colleges. \n\nMike was shocked to see her smoking weed, in church no less. In a weird way he felt like she had caught him doing something bad. \n\nHe sighed and dropped his head. \"Relax, I am not going to say anything. Shit, I was going to ask you for some until I saw who you were.\" \n\nShe looked up at him warily, \"you're Sara's dad, right?\" \n\n\"Guilty,\" he answered. \n\n\"She's a sweet kid. I like her.\" \n\nMike laughed, \"Kid? You're hardly older than her.\" \n\nBecca shrugged, \"I feel a lot older.\" Without looking at him she held up the spliff, \"Here, still want some?\" \n\n\"Fuck, yes,\" Mike answered. \"It's the only way I'll make it through this.\" He took it from her and inhaled, tentatively, not wanting to make an ass of himself and cough everywhere. \n\nBecca laughed, it was a beautiful thing to watch. Her grey eyes danced with amusement, \"You're a pretty cool guy, Sara's dad.\" \n\nSmoke escaped his mouth and nose, in what was meant to be scoffing laugh, but sounded more like a splutter, \"Try telling my teenager daughter that.\" He fought back the tickling cough, trying to maintain any semblance of coolness he could. \"Call, me Mike, by the way.\" \n\n\"Becca.\" \n\n\"Yeah, I know. I saw your solo today. You have a beautiful voice.\" \n\n\"Thank you.\" Her young eyes crinkled with genuine appreciation for the compliment. \n\nMike recalled how she had looked, standing at the front of the choir, her pure, clear voice resonating through the church. He was glad his wife couldn't read his thoughts, because he had been secretly been fantasizing about pushing his cock between those pouty pink lips. She looked so innocent in her full choir vestment, he ached to rip it off her. Somehow, being in church only made his dark fantasies even darker. He had to remind himself that she was little older than his daughter. \n\n\"Mike,\" Becca suddenly addressed him, as if she had come to some sort of conclusion, \"You can't really say anything about me smoking weed out here, can you? Seeing as you did it too, right?\" \n\n\"I guess so, Becca. But I wouldn't say anything anyway. I was young once too, and I can see you have a lot of shit going on in your life. You strike me as someone who has a lot of pressure on them. You probably need a break every once in a while.\" \n\nShe smiled a wonderfully warm smile at him then, \"Thank you, I think that is the nicest thing anyone has said to me. It has been,\" she trailed off, \"a tough week. A tough couple of years, really.\" \n\nMike shrugged and took another puff. He was starting to feel the warm fuzzy haze wrapping his consciousness. \n\n\"My parents have pretty much every second of my day worked out. This is the one moment I have to myself, between AP classes, social work, clubs, singing. That doesn't even include school and extra credit.\" \n\nMike gave a sympathetic snort, not sure of what to add. \n\n\"So,\" Becca, bit her bottom lip, \"I can say pretty much anything to you out here and you can't do anything about it, can you? I mean, it would look worse for you to be found out here with a young girl smoking weed than it would for me, right?\" She widened her eyes and batted her lashes theatrically, \"What with me being so young and innocent.\" \n\nMike was, again, unsure of what to say. He shrugged one shoulder and looked out over the courtyard. It looked disused, the plants were brown and scraggly, the fountain dry. He looked at her out of the corner of an eye. She was biting her bottom lip again, nervously. He was going to get hard just watching her do that. \n\n\"I am going to level with you, Mike. I am crazy horny. I normally come out here, once I've done my solo, and rub one out after I get a little buzzed. Having all those people I know just meters away, being out here in the open, yet where no one can see me, it makes me come so fucking horny I am surprised I don't scream loud enough to halt the service.\" \n\nMike inhaled the entire spliff, then coughed and spluttered as it burned the inside of his lips and left ash on his tongue. He spat it out and watched it tumble down to the courtyard below. \n\nBecca laughed so hard she had to hold her sides, \"Your face!\" Was all she could get out between the laughter. \n\nMike felt his face grow hot. He turned as if to leave. This sobered Becca. She grabbed his hand and held him back. \n\n\"Wait, wait.\" There was still laughter in her voice, \"I am actually being serious.\" \n\nShe sighed and grew sombre, \"Look, you caught me here at a time where I am reconsidering some shit in my life. No one really knows me. I'm a good girl, I do everything right. But, just once I want to admit to someone that I have dark shit going on in my head. Just once I want to do something just because I feel like it. If people only know the dirty thoughts I have going on inside me they would probably lock me up. \n\nShe stared out at the courtyard a moment before continuing, \"And here you come, Mike. It feel like it's fate, or some crap like that.\" She gave him a level look, \"I've always had a thing for older guys, Mike.\"\n\nMike suddenly felt nervous, half expecting his wife to come looking for him any second. He wanted to leave. \"Look, I'd better get back. I won't say anything about\", he stammered, \"about any of this.\" \n\nBecca grabbed his hand before he could back away. There was a fiery intensity in her eyes when she spoke to him, \"I know you won't, don't you see? That's the point!\" \n\nShe continued in a burst, as if she wanted to get it out before she changed her mind, \"I am so fucking horny, Mike. You interrupted my one moment of peace all week. Now you owe me.\" \n\nShe pulled herself up by his hand. Mike was frozen. She carried on the motion until she had pulled herself flat against him. He could feel the soft press of her breasts on his chest. Her breathing was hot in his ear. \n\n\"After I finish my solo I am supposed to go and help in the Sunday school,\" she whispered in his ear. \"But, instead, You know what I do? I strip naked in the vestry and put my robe back on. I walk around the church while everyone is inside there praying. Do you know how good it is to feel the cool air moving over my bare pussy?\" \n\nMike's cock had grown agonizingly hard. He was too scared to move it, even though it pushed uncomfortably against his trousers. \n\n\"Then,\" she continued, \"I like to come out here and rub my little clit until I come.\" She nibbled his earlobe. \"I can do it, see, because pastor Rob and my parents think I am running a Sunday school group. Desiree, at the Sunday school, thinks I am helping Mildred with the guest tea for after the service and, Mildred thinks I stay in the stalls with the rest of the choir.\" \n\nShe gently placed her elegantly tapered fingers on Mike's chest, toying with his top button. \n\n\"So I have this one perfect moment worked out, where no one bothers me. And now, I have you to share it with me.\" \n\nWithout him being fully aware, she had slowly been using Mike's hand to hike up her robes while she spoke. He was powerless to resist her. He gasped when he felt the bare skin of her thigh under his fingers. \n\nHer voice was hoarse in his ear. \"Want to feel how wet I am?\" \n\nMike did, more than he had ever wanted anything before. His marriage and family suddenly paled in comparison to his need to slide his hands up inside her robes and see if she was telling the truth about being completely naked under there. \n\nHe did not fight her when she took his other hand and, holding it lightly, helped him to lift her robe up over her hips. \n\nHe strained painfully in his suit pants as he continued to feel only bare skin, all the way up, until his fingers were sinking into the resilient flesh of her tight little ass. \n\nA moan escaped his lips. Becca leaned back and grinned at him. \n\n\"There's no turning back, Mike. Not now that you've had your big, manly hands on my teenage ass.\" \n\nMike didn't say it, but he knew there was no turning back, and it had nothing to do with the threat of a fall from grace. He needed to see and feel the rest of Becca the way he needed air to breathe. \n\nWhile his hands had paused, squeezing her pliant flesh of her pert little backside, hers continued upwards, raising the robe, revealing more and more naked flesh. His height, and her proximity, made it impossible for him to see her naked sex, but he could see the flat plane of her belly and the gentle rise of her shaved mons. \n\nShe drew in her breath as she raised the robe, swelling her chest and drawing her stomach in, her ribs becoming more pronounced beneath her skin. The robe met brief resistance at her breasts, lifting them up, before letting them tumbled out heavily and bounce in a most pleasing manner. The nipples, centered in her large pink areolas, were fiercely erect. He had only a moment to take in her perfection before she pressed her body hard against him. He could feel her warm skin through his shirt, her hard nipples were like pebbles against his chest. He felt he might spurt come into his pants. \n\nShe pressed her lips into his. Mike was still frozen, his lips pinched in surprise at this turn of events. Her wet tongue forced their way between them, however, and he succumbed, entirely lost in the young, supple body wrapped around him. \n\nHe dug his hands deeper into her flesh, spreading her bare ass apart, and opened his mouth fully to her kiss. She sucked at his tongue hungrily. \n\nThen she broke away and pulled the robe over her head, standing naked before him. He could see the modesty in her awkward pose, her toes turned inwards, her hands clasped together fighting then urge to cover herself. She had nothing to be modest about, his eyes ran ravenously over her perfect teenage body. \n\nShe caught him staring at her hairless pussy and smiled. \"I shaved it this morning. It tingles when I walk around with nothing but the robe to cover me. It makes me so horny I can barely make out here in time. Do you like it, Mike?\" \n\n\"It's the sexiest fucking thing I've ever seen,\" he wheezed out through a tight chest. \n\nClearly happy with his response, she turned and pressed her back to him, taking his hands once more and guiding them up to her breasts. Her body was bared to the empty courtyard, warmed by the morning sun. Mike couldn't help himself. His hands cupped her proud breasts as she leaned back against him and twisted her head to kiss at his cheek and neck. She lifted her arms up and arched her back so she could dig her hands into his hair and bring his head down until he was biting tenderly into her slender neck. \n\nHe weighed her breasts, pulled them apart and then squeezed them together. \"God,\" he thought' \"there was nothing like the elasticity of young skin.\" His eager fingers found her nipples and began to tease them with brushes and gentle pinches. He was rewarded by her making little squealing noises in her throat, and grinding her plump backside against his bulging erection. \n\n\"I can't wait any more,\" she groaned. She took his right hand and drew three fingers into her mouth. She sucked on them wetly, letting her saliva run over his fingers. Then she pulled his hand down desperately, like they were needed to staunch a wound, and a second's further hesitation might mean death. \n\nShe buried his fingers deep in her cleft and let a sigh of satisfaction escape. He folded his fingers over her mound and felt moisture running over his fingers. \n\n\"Jesus, she is so wet!\" He thought. \n\nOne of his fingers dipped inside her. She was tight. Virgin tight. His finger could not get past the second knuckle. She rolled her hips against him, then lifted them forwards and upwards. The action forced his finger out of her. She seized it in her hand and pressed it hard into the little hood at the top of her cleft until he felt the swell of her engorged clitoris. \n\n\"Make me come,\" she begged. \n\nMike was happy to oblige. More than that, he was desperate to please her. Making her little body quiver in ecstasy suddenly became the culmination of his existence. \n\nHe used his fingers to circle her little bud of a clit. It was so swollen it was almost laughably easy to stimulate. there was no need for subtlety or careful manipulation. She was primed and ready for orgasm, he just had to turn the ignition. In 20 years of marriage Carol had never been this inflamed for him. \n\nHe slid his fingers up and down the cleft, using her puffy lips to guide his fingers over the little bump of her clitoris. She mewled and writhed against him. He stroked her with the pace he might use on himself, if he wanted to prolong a long, slow masturbation. \n\nShe whimpered and begged him to finish her off. \"I can't wait any more. I'll burst.\" \n\n\"What's in it for me?\" He growled. \n\nWho was this man inhabiting his body? Mike was stand up citizen, a member of the PTA. Here he was, fingerfucking a teenage girl, and now he was bargaining for more. Worst of all, his wife and children were probably within 30 meters of him. \n\n\"I'll let you fuck me.\" \n\n\"Shit, are you serious?\" He was hoping for a hand job, but this was beyond expectation. \n\n\"Uh huh,\" her voice was breathy and he could feel her panting breaths against his neck. \"But, despite what you may think, I really am a good girl.\" \n\n\"I am sure you are,\" Mike spoke into her soft hair. \n\n\"I'm still a virgin.\" \n\nMike let out air like he had been punched in the solar plexus. \n\n\" And I am saving myself for marriage...\" She trailed off as his fingers brushed a particularly sensitive spot. \"You'll... you'll have to fuck my ass. Is that okay?\" \n\nHe just held back the ring of pleasure that shot up his cock and nearly caused it to burst in premature orgasm. Not once had Carol even let him consider her ass. This was all too much. Caught in this moment, with the promise of what lay ahead, Mike was unsure if he could have stopped himself even if his wife and kids walked in right that second. \n\n\"It, it will have to do,\" His voice came out slightly choked with emotion. \n\nHe massaged her deep and hard. His free arm was pressing down hard on her soft breasts, pulling her in as close to him as he could. He could feel her chest rising and falling in shorter, sharper gasps of air. Her lips were open and pressing into his neck, but he could feel her teeth were clenched together tightly. \n\nFeeling himself embody his new, sexually aggressive role, he leaned back so that her legs lifted off the ground. She was so tiny compared to him. She held her legs straight out and he was able to hook them over the balcony railing. Her ass was now suspended in the air, her legs spread wide, exposing her unguarded naked body to the empty courtyard. In the background he could still hear the droning of pastor Rob. \n\nHe held her chest tight. She had all of her weight against him now, all of her energy was concentrated on the tiny little spot his fingers were winding up. He worked at it furiously until he felt her tipping over the edge, then he slowed up to an agonizing pace. She whimpered at his cruelty, but he held her there suspended, literally and metaphorically. But she was too far gone, and the merest feather-light brush of his fingers unraveled her. He had to fight to stop himself overbalancing. She shook uncontrollably, her legs rattling the iron railing of the balcony, as she shuddered out the orgasm she had so longed for. \n\nHe was lost in it too, sliding his hand deeper and pressing around her entrance to feel her continuing muscular spasms. He had made Carol come before more times than he could count, but never like this. He felt like he had melted Becca. She turned liquid in his arms, and slid off him onto the balcony, still twitching with the residues of pleasure. \n\n\"Oh Mike.\" was all she said, \"Oh Mike, Mike, Mike. You have no idea how good that felt. I have never come like that before. Your hands, your body, the people so close to us. It was so bad. So wrong. Oh God, it's turning me on again just thinking about it.\" ",
        "Her hand shot out from where she knelt on the balcony and gripped his belt. He thought she might be trying too unbuckle it, but she merely used it to haul herself up to her knees. Then she was grabbing with eagerness, and adorable inexperience, at his fly. He had to help her find it in the folds of his pants. Together they managed it, and the button on his boxers. His dick, once given an opening, however, needed no help. It burst out of his trousers, which earned him a giggled of surprise from Becca, and brought out her dimples. \n\nShe was just looking at his swollen length, a hint of uncertainty in her eyes. \"I have never actually...\" She began, but he had no patience left. He pressed the head of his cock against her plump lips. He felt himself hit her teeth, and watched the surprise pass over her face, before her eyelids grew hooded and her lips encircled his girth. \n\nShe was clearly new to this, but Mike didn't care. He couldn't remember the last time Carol had sucked his dick. Becca's little mouth was so wet and warm, it hardly mattered that she clearly to have no idea what to do with her tongue. He was a beast off his leash, he took the pleasure he wanted from her, fucking her mouth as hard as he dared. \n\nThen she pulled away, releasing his cock with a flood of saliva that left several trails back to her gasping mouth. Mike swore. \n\n\"Wait,\" She said, forcefully, swiping a forearm over her sticky mouth. \"I have something better in mind.\" She grabbed his dick in one hand and strode, still stark naked, back into the church. He had no choice but to follow, though he resisted this new and horrifying turn of events. \n\n\"No! Stop!\" He hissed, as she dragged him to the balcony. \"Shit, what the fuck was she doing?\" He thought. \n\nShe moved him to where he could just see over the balcony into the congregation below. He knew they had to be recessed in shadow, they were behind the lights, but still he felt like someone, most probably Carol, could look up at any second and see him. \n\nBecca held a finger to her lips and gave a smile and a wink. He was going to pull away, to tell her she was crazy, but then she swallowed his cock again, and his mind detached from his body. \n\nHis shaft was buried four inches inside the mouth of the most beautiful girl he had ever seen. She was young enough to be his daughter, and she was sucking on his cock like it had a coat of paint on it she wanted removed. \n\nAs her head bobbed up and down, Mike looked down on the people seated below. He could see friends, neighbors, his fucking wife! They were all staring ahead contemplating the afterlife, completely oblivious to his own private heaven just meters away. \n\nIt made him want to come so hard. Becca must have sensed it. She rocked back on her heels and released him again. He very nearly cried out in frustration. \n\nHe mouthed the words, \"What the fuck?\" \n\nFor an answer, she stood, and stepped over to the balcony. She calmly surveyed all the people below before, in a gesture she somehow made to seem almost demure, she spread her ass cheeks for him. \n\nMike gaped. Her little pussy was still dripping wet, and her tiny asshole was ripe and puckered like a berry. He wanted to lap at it. She beckoned him closer. He leaned over her so that he too was staring down into the central aisle of the church. \n\nShit! He could see Carol. She was so close he could have probably got her attention with a loud cough. He felt pre-come surge out the tip of his cock at the thought. It coated Becca's tight little asshole as he brushed his tip against her. \n\nHe had his head pressed next to hers as he stood over her. She turned her head and whispered, barely moving her lips, \"I want to feel you inside me. You'll be my first.\" \n\nHe felt his chest constrict painfully. \n\n\"Are you sure?\" He was very conscious that this was a very unusual chain of events. There had to be a catch. \n\n\"Yes, I am so fucking turned on right now that if I don't feel your dick inside me I think I might just scream.\" \n\nMike looked down at all the people again. He swallowed hard. \n\n\"It may hurt.\" \n\n\"I know, I've been preparing.\" \n\nShe caught the flicker of his curious gaze. \n\n\"What?\" her voice was barely audible, \"I have several large dildos at home. You should see me come when I have one of those buried deep in my ass.\" \n\nIt was all he needed. He stood back and took a moment to stare at her finely sculpted backside. He dipped a finger into her liquid sex and used the moisture to lube up her anus. It felt as tight as it looked. He was dubious as to how he would fit. But still, he was not one to pass up probably his only chance at anal sex with a goddess. \n\nHis cock was still roped with her saliva. He pressed at her little button of an asshole, feeling a powerful resistance. He saw the tension build in her shoulder muscles. \n\nHe pressed harder. His cock bent under the strain. He was about to give up, to beg her to finish off the blowjob, when she reached back with one hand and held his shaft tightly in position. Then, she eased herself back onto him. She gasped audibly as he pierced that unrelenting sphincter. \n\nHe could have cared less, however, if the whole congregation had heard. Her tight little bowels encompassed him so completely he wanted to yell out her name. As it was, he came close to biting his tongue as he fought the urge. \n\nShe began to roll her hips hypnotically, slowly sinking back onto him inch by inch until he was buried to the hilt. The pressure around his cock was crushing. He could barely thrust. He had to rely on her using the balcony railing to pull herself back and forth on his shaft. \n\nHe knew he couldn't last long like this. He had to find away to distract himself. He looked down at Carol. But, seeing he there, completely unaware that her husband was ass fucking a girl more than half her age just pushed him closer to the edge. \n\nWhat the fuck was wrong with him? \n\nInstead, he tried to tune his ears to focus in on pastor Rob. He could bore Mike in seconds flat. Ah, there, he could just make out his boring rant about spirituality in the age of Twitter, or some shit like that. \"Fuck, yes,\" Mike thought, \"That is keeping the wolf from the door.\" He smiled and closed his eyes, enjoying beyond measure the way Becca's tight young body fitted around him. \n\nShe was clearly enjoying herself too. Her fingers were dipping into her cleft with each rock of her hips. She was staring fixedly at the crowd. Mike knew that, somewhere down there, were her very proud parents. What would they think if they knew their perfect, straight A, virginal princess of a daughter was up here getting her ass fucked by a man their own age? \n\nHe looked down with satisfaction at his cock. Had it always been this big? Or did it just seem that way in comparison to Becca's slight figure. He was plunging in and out of her, their bodies seemingly merged. He knew he was going to come inside her in moments. He could sense his stomach muscles being locked down into a hard plate of tension, and little shivers of pre-orgasm where twisting his hips wildly. \n\nShe was close too. He could feel the sheath of her ass clenching and relaxing in a pulsating rhythm. Her hand movements had grown staccato as she verged the point of no return. \n\nSomewhere, distant in his hazy mind something tugged at his attention. \n\nWhat had pastor Rob just said? He strained his hearing. Tearing his attention away from his approaching climax was like tearing off a piece of his own flesh. \n\n\"... I know we haven't made use of the organ these past few months,\" Pastor Rob said, \"But we are lucky to have with us Bucky Mortlock, who many of you will remember used to play the organ here before he retired and moved to Florida.\" \n\nMike slid deep into Becca, and felt her shudder. He nearly drifted away from his tenuous grip on pastor Rob's voice. \n\n\"But Bucky is back with us, out visiting his daughter, who many of you know has just had her third child.\" \n\nThere was a loud round of applause. Becca used the opportunity to let out a throaty wail. Even over the noise Mike was worried someone might hear it. \n\n\"His family have asked if he can once more tickle the ivories, for old time's sake. I thought it would be the perfect way to end our worship today.\" \n\nSomething snapped inside Mike's fogged mind. Becca was clearly not listening, lost as she was in her climb to the peak of her climax. He shot a glance to the organ. It was only meters away. The congregation might not be able to see them, but anyone who came up here certainly would. He looked at the balcony. It was no good either, they would still be visible, and there was no where to hide on the tiny platform. He panicked. \n\nHe grabbed Becca by the waist and pulled her back. He remained firmly inserted in her ass, but she had her head alongside his. He placed a hand over her mouth. His other hand was over her belly, and he could already feel her muscles tensing deliciously for her forthcoming orgasm. \n\n\"Someone,\" He hissed in her ear, \"Is coming up here to play the fucking organ.\" \n\nShe laughed a first, clearly still lost in the sexual abandon. \n\n\"No one comes up here, Mike. Not since Rob started his shitty little band. Fuck me harder!\" \n\nHe dropped his hand and gripped her neck instead, hissing, \"I am being serious! What the fuck are we going to do?\" \n\n\"But, No one ever uses that old thing,\" She said uncertainly, slowly returning to reality. \n\n\"Well, I just heard pastor Rob say someone was definitely is. Is there somewhere to hide? Is there another staircase?\" \n\n\"No, there's only one staircase.\" \n\nMike cursed, they were completely trapped. He felt the panic rising in him. She thought for a moment, then gasped in awareness. \n\n\"The organ,\" was all she said. \n\n\"Yes,\" Mike was angry at her dullness, \"That is the fucking problem.\" \n\n\"No,\" she answered, \"Behind the organ, there is a small room. A corridor, really. They use it when they need to do repairs. No one goes in there.\" \n\n\"Can the organist see in there?\" \n\n\"No, it's completely hidden. I used to hide in there and jerk off before I found the balcony really set my fuse. Come on.\" \n\nShe moved as if to slide off him, but he had neither the time or the patience. Someone, his wife most likely, could look up at any time and see them if they were walking past the organ. He gripped Becca's ass and lifted her legs in the air. Then he ran, with Becca still impaled on his cock bouncing up and down on his shaft with every stride, all the way to the organ. \n\nBefore he got there Becca slapped at him with her hand and indicated a recessed door. He fumbled with the latch and then, together, they tumbled into the cramped room. She fell onto all fours, and Mike came down on top of her, still buried deep in her anus. He just had time to kick back with his foot to close the door before he heard footsteps on the wooden boards just on the other side of the organ pipes. He hoped no one had heard the door shut. \n\nThere was a shuffle of papers and a clearing of the throat, done in the way only an old man can do. then there was more clapping. Bucky must have just been pointed out by Rob. Everyone was probably now staring up in their direction. \n\nSuddenly Mike felt little shudders coming from Becca. He looked down and saw she was laughing. Her hand covered her mouth in a way that made her seem even more innocent and girlish. Suddenly he was grinning too. The whole situation was just so preposterous. He looked around him. It was a long narrow space. It was wood on one side, and the other was dominated by the huge organ pipes. \n\n\"Shit,\" Mike thought, \"It was about to get very loud.\" \n\nHe was not wrong. Bucky wasted no time. Once he sat down he began to hit keys like he had to make up for the months, or years, he had been away. \n\nThe small space shivered with the thundering sound. It was a wall of sound, Mike could feel it physically shuddering through him. It shocked him into a stupor at first, but then he began to feel the benefits. It felt like his entire body was vibrating. He gave a testing shove into Becca's backside. \n\nBecca looked back, surprised, then grinned wickedly. She began to move too. She arched her back and began to rise to meet his every thrust. The sound seemed to encapsulate them. Their very vision was blurry from the surging noise. Mike found himself pounding into Becca, no longer worrying about hurting her. She was meeting him with equal savagery, her hand a blur once more on her clitoris. He could feel their climaxes approaching again with even more force. This time nothing was going to stop them, short of the church collapsing around hem. Which it felt like it might actually do, from where they were. He was screaming at the top of his lungs now and, from the shape of her mouth, he thought Becca must be too. It was nothing compared to the colossal noise around them. \n\nBucky was building up to his crescendo, Mike could feel it in the increased pace and complexity of the music. Bucky was really quite a skilled old codger. \n\nMike, in one final push of strength, grabbed Becca around the waist and lifted her. She was confused at first, but went with him, she was close to the final plunge. He turned her to the organ pipes and shoved her against the largest one. She gripped it with her thighs and let her head fall back against him. \n\nMike slammed harder and harder into her, driving her into the pipe. She twisted and writhed, turning her head to nip at him. \n\nThe moment came as if it had been divinely orchestrated. Mike slid the full length of his cock up inside Becca, and held it there, feeling the orgasm inside him boiling like water trying to tip off a pot lid. He pressed her hard from the back so that her splayed sex was smeared against the cold metal of the organ. He held her there for what felt like an eternity. \n\nBucky, wonderful Bucky, ended his performance, by striking down and holding a single, prolonged note. That key released a stream of compressed air that travelled through a pipe and vibrated it with sound. That pipe was wrapped tightly between the legs of Becca and she, in turn, was impaled on Mike's cock. \n\nWhen the first vibrations started in the in the pipe they passed over Becca's exposed clitoris in waves, shaking every molecule of her body and traveling through to Mike along his deeply buried shaft. \n\nIt shook them until Mike thought it would shake the flesh from their bones. It vibrated both of them into a shared orgasm that nearly swallowed them in its intensity. For that single brief time they were both a single vibrating orb of pure energy. They could have put the Sun to shame. \n\nMike screamed until his lungs burned, as he felt spray after hot spray of come shoot into Becca's pulsating ass. She was so awash in sensation, with semen flooding her back passage, and a thundering vibrator as tall as a building pounding her clit, it must have felt like every neuron in her body was firing at once. Her orgasm rolled and tumbled and multiplied for every long second that Bucky held that note. \n\nWhen it finally faded away, and they were left in the hissing silence of the temporarily deafened, Mike saw Becca had tears of exertion streaming from her eyes. He was worried at first, and awkwardly slopped out of her ass, sending a stream of his seed pouring onto the wooden floor. \n\nBut she spun and grabbed him, devouring him in a hungry animalistic kiss. He sucked her in deeply. \n\nAll the while the congregation applauded, and Mike felt it was for them. \n\n************************************************************************************ \n\nThey managed to slip out later. Mike went out first and checked the coast was clear, he still had his clothes on. He fetched Becca's robe and brought it back to her. She threw it on and they had time for one last, deep kiss, before she grinned the smile of the truly satisfied and ran off down the stairs. \n\nMike felt utterly drained. He made it back down on wobbly legs and got to the Sunday school annex just as Carol and Sara arrived. \n\n\"Oh hey,\" He felt his face flush. \n\nHe saw their mouths move, but their voices sounded distant. \n\n\"What was that?\" He asked. \n\n\"Honestly, Mike, when will you get your ears checked? I tell you, you are going deaf.\" Carol berated him. \n\nMike was still floating on his cloud of weed and complete post-coital satisfaction, and barely noticed his wife's nagging. \n\n\"God, mom. Going deaf is just something old people do. Accept it.\" Sara piped in. \n\nMike didn't even mind his cheeky daughter joining in. \n\n\"Where's Tobey?\" Carol asked. \n\n\"Hmm?\" Mike spoke from high up on his cloud. \n\n\"Tobey? You were here with him, weren't you?\" \n\n\"Yes,\" The words were starting to make sense to Mike now, \"He, uh, just went back inside to thank the teacher. I definitely stayed here the whole time.\" \n\n\"Hey, Sara!\" A female voice drew Mike's attention, partly because it was so recently familiar, and partly because it was overly loud, in a way someone with recently acquired partial hearing loss might speak. \n\nHe turned to see Becca walking towards him, smiling at Sara. He felt a flash of panic, but couldn't help feeling flash of proprietorial pride. \"Did I really just fuck her?\" His mind asked itself. \n\n\"Oh, hey Becca!\" Sara was obviously surprised to be singled out by the older, more popular girl. But, from the way her face lit up when she saw who it was, it had clearly made her day. \n\nBecca greeted Carol next, and gave Mike a shy smile that gave every indication that, had he not seen those very lips wrapped around his cock only minutes before, they were meeting for the first time. \n\nCarol congratulate Becca on her performance earlier in the service. Mike was tempted to congratulate her for her other performance, a bit later in the service. \n\n\"Wasn't it a beautiful sermon today, Becca?\" Carol asked. \n\n\"I loved every minute of it.\" She wickedly turned her gaze so that her eyes were fixed on Mike when she said this. \"I think my favorite part was the organ, though.\" She made the double meaning clear by letting her gaze drop momentarily to Mike's crotch. He felt himself swell to semi-hardness from that alone. \n\n\"Oh, yes. That Bucky is a dear, isn't he? Can you believe he is 84?\" \n\n\"I'm not surprised. Older men have all sorts of hidden talents.\" Mike nearly burst into a coughing fit at this. \n\nBecca sighed, \"I really hope to have a repeat performance.\" Her eyes flicked back to Mike again, embedding the meaning. \"Will we see you back here next week?\" \n\nCarol patted Mike's shoulder, \"That all depends on if I can convince this old bear. He does make such a fuss about attending church. I have to keep telling him that it is good for him.\" \n\n\"Oh, I don't know,\" Mike said thoughtfully, \"I rather enjoyed it today. Perhaps I will come again next week.\" \n\nCarol and Sara weren't listening, though. Tobey had come out of the annex, carrying a drawing he had obviously completed in Sunday school and Carol and Sara were pretending to admire its artistic virtues. \n\nWhile the other were turned away, Becca looked directly at Mike with hungry eyes and said, \"Oh, I can guarantee that.\""
    ],
    "authorname": "QSQuinn",
    "tags": [
        "anal",
        "teen",
        "older",
        "public",
        "exhibitionism",
        "church",
        "organ",
        "masturbation",
        "blowjob",
        "daddy"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/a-surprising-sunday-service"
}