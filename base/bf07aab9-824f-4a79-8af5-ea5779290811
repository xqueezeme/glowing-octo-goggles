{
    "title": "The Porch Wolf Ch. 01-10",
    "pages": [
        "Author's Note: This story contains no explicit sexual content. \n\nMiesville, Minnesota \n\nDecember 17, 2019 \n\nThe light snow crunched under my boots as I stepped out of my truck outside the brown single-story building. \"Wiederholt's Supper Club\" was in big letters on the left side of the bump-out entrance, \"Bar-Lounge-Liquor\" on the right. I slammed the door closed as traffic passed on Highway 61. Miesville wasn't even a one-stoplight town; all you got was a short 30-mile-an-hour zone as you passed. On my side to the west was the old Catholic church, graveyard, and an amateur baseball stadium for the Miesville Mudhens. Across the two-lane highway, there was an antique store, a combined gas station and feed store, and a bar called King's Place with the best burgers in the state. \n\nTomorrow night I'd be there, but Tuesdays were Prime Rib Nights at Wiederholt's. The best prime rib in the state. \n\nI hadn't skipped a Tuesday here in over three years. \n\nI walked towards the entrance as the ten-degree cold blew across my beard. The snow wasn't a problem now, but it was supposed to start coming down faster later tonight, and by tomorrow morning, the winds would be blowing it around. Christmas lights surrounded the entrance, and I stomped on the mat to get the snow off in the vestibule. \n\nThe smell of the food hit me as I opened the second door, causing my wolf to stir a little. I rarely hunted anymore, my wolf didn't feel like chasing rabbits or squirrels, and for me to take down a deer would waste a lot of good meat. No, I preferred my meat to be seasoned to perfection, roasted not beyond medium-rare, and served on a platter with a side of ground horseradish and au jus. \"LEO!\" \n\n\"Merry Christmas, Mike,\" I responded. He was one of the owners and the bartender tonight. His bar was long, running a good forty feet with a wide selection of liquor behind it. Mike and I had a close relationship. I needed to drink, and he served the best. \n\nI'd barely made it five feet before Olivia appeared before me. \"Welcome to Wiederholt's, Mr. Volkov,\" she said with a smile. Liv was my favorite waitress. Hell, she was my ONLY waitress. It ruined my night if she called in sick, and I had to deal with someone else. \n\n\"Can't you call me Leo,\" I asked, just as I did every time I came in. \n\n\"You're almost my Grandmother's age, Mr. Volkov, and you're my customer. Come with me, your table is ready, and your food will be out in two minutes.\" Liv was young, her dark-brown hair gathered back into a ponytail, with the face and body of a Greek goddess. If I was twenty years younger and unmated, I'd be joining the line of men seeking her favor. \n\nInstead, I was widowed and reminded Liv of her grandfather. It was just as well; I couldn't bear to be with another after losing my beloved Catherine. \n\nShe pulled the \"Reserved\" sign off the small table, just around the corner from the bar tables but still within sight of the television. I dropped my coat on the chair, then took a seat with my back to the wall. \n\nOld habits die hard, and I was now a creature of habit. \n\nLiv grabbed my bottle of Sam Adams from Mike at the bar, setting it on the coaster with a smile. \"I'll be right back with your food.\" \n\nIt was less than two minutes. The piece of prime rib was perfection, covering almost the entire plate. The special was for the regular cut, but I paid extra for the large. It was over two inches thick, easily a pound and a half, and covered with mushrooms. Two cups held my ground horseradish, raw, and the au jus. Liv set a salad to the right and a baked potato with sour cream and bacon on the left. I reached for the A-1 to pour over the top. \"Thank you, Liv. Perfect as always.\" \n\nShe gave me that smile that lit up the room. \"Let me know if you need anything else, Mr. Volkov.\" She went off to serve her other tables while I dug into my dinner. I kept an eye on her as I ate alone; I tried not to be creepy about it, but she was one of the few friends I had left. It wasn't that after a lifetime spent in this area I didn't KNOW people, but most were acquaintances. Werewolves living among humans couldn't get too close to them, so most rated a smile and a \"How ya' doin?\" My true friends, the members of my old Pack, were all lost to me now. \n\nI had finished the Prime Rib and was working on the potato when I smelled other werewolves coming in. Bob and Leanne Parker were here with their son Chris and daughter Lisa. Leanne was from a Pack in Montana, and they had been mated for maybe ten years now. Bob still worked at Volkov Construction Company as an electrician, while Leanne stayed home with their children. \n\nI could see Bob's nose tilt up to take a sniff before he saw me. He ushered his family past me quickly, asking the hostess if they could be seated on the other side of the room and around the corner. In my mind, I'd accepted they were no longer part of my life. My heart and my wolf still felt hurt by the rejection. I'd held his mating celebration in my back yard. I'd held his children in the hospital room after their births. I'd watched as they learned to shift before running about in the woods behind my house. \n\nNow he couldn't meet my eyes. I looked away from the family and went back to my salad. I reminded myself that it wasn't personal; they were all under Alpha Command. No person from my old Pack was allowed to talk to or acknowledge me in any way. Banishment from a Pack meant total separation. If I trespassed on their lands, it was immediate death. \n\nI touched the scar on my left cheek, left with a silver knife as a mark of my status. No other Pack would touch me with a ten-foot pole. \n\nMy wolf, already in pain from the loss of his mate, was slowly fading away as the enforced isolation robbed him of the bonds he craved. Four years was a long time to be without a Pack. I probably had another year, maybe two, before my wolf gave up. We would finally join my mate and her wolf in Luna's embrace. \n\n\"Another Sam Adams, Mr. Volkov?\" Olivia was standing next to me, reaching down to take my meat plate. \n\nI jumped a little, embarrassed at being so wound up in my thoughts that a human had come next to me without me realizing it. \"Yes, please.\" She set a new bottle down, taking my old one. \"Thank you, Liv.\" \n\nI watched her as she walked away; we'd known each other for years, but I didn't know that much about her. I knew she lived in Hastings, a town of 30,000 about eight miles north of here. She was twenty-three years old and was a single mother to Vicki, who would turn five in late March. Sometimes when things slowed down in the evening, she'd spend a few minutes with me and show me photos of her. \n\nI read my newspaper and watched the news coverage as I finished my dinner; I always ate the salad and bread last as they didn't have to be hot. The winter storm was the main topic; the radar showed the heavy snow bands moving in by ten. \n\nLiv removed my dinner plates and brought me my turtle cheesecake. \"The storm is scaring people off, so Mike is cutting me loose early,\" she said. \"Do you need anything else tonight?\" \n\n\"I'm fine, Liv. The food was excellent as always.\" \n\n\"Thank you, Mr. Volkov. I'll leave your bill.\" She left the bill on the corner of the table, not that I needed to pick it up. Every Tuesday was the same. I pulled three twenty-dollar bills out of my wallet and put it with the bill, leaving it on the edge of the table for her. The turtle cheesecake was my favorite dessert of the whole week, so I took my time with it. Liv stopped by a few minutes later. \"Any change, sir?\" \n\n\"The rest is for you, Liv. Have fun with Vicki.\" She thanked me again as she left, heading for the office to get her stuff. \n\nI finished the cheesecake, noticing the restaurant had almost emptied in the two hours I had been here. I visited the restroom and was coming back to the main hall when Liv came running back in. She looked like she was about to break down in tears. \"Liv? Are you all right?\" \n\n\"My car won't start,\" she said. \n\n\"I've got cables in my truck. Are you parked in the back of the lot?\" She nodded. \"Go back out there, and I'll pull around.\" \n\n\"Are you sure? I can get one of the managers.\" \n\n\"Liv, please. I'm heading out anyway, and I get so few opportunities to rescue a damsel in distress these days.\" She snorted but nodded. \"I'll be right there.\" \n\nI fired up the truck and drove around to the back lot, finding her car with the hood open. Parking in front of it, I grabbed jumper cables from the toolbox behind the seat and popped my hood. \"Have you ever done this before,\" I asked. \n\n\"No,\" she replied. \n\n\"OK, go sit in the car and wait for me to tell you before you try to start it.\" I connected the cables between my battery and hers, the old Ford Taurus having seen better days. The battery terminals had heavy corrosion, and I could smell scorched oil in the engine compartment. I shook my head; the car would need a lot of work to be reliable, and I was sure she didn't have it. \"Start it,\" I said. \n\nThe engine cranked for about fifteen seconds before it fired up, sending smoke out the tailpipe. I disconnected the cables and put them away before going to stand by her driver's side window. \"Thank you SO much, Leo,\" she said with a relieved smile. \n\nI smiled; at least off-duty, Liv would use my name. \"It's not a problem. I don't know if it is your battery or your alternator; if your car isn't charging, it could die on the way home. I'd feel better if I followed you and made sure you got home safely.\" \n\n\"I don't want to be any trouble,\" she said. \n\n\"Trust me, Liv, I have nothing better to do. The old man will sleep better after getting you home to your daughter.\" \n\nI could see her shoulders relax. \"All right. It's up Highway 61 towards Hastings, turning left just after 190th.\" I backed the truck up to let her out, then followed her onto the road. She drove the speed limit as the snow was coming down a little harder now. It took ten minutes before we pulled into the parking lot of a fourplex. She pulled into the spot marked \"3\" while I took a guest spot; she came to my window as I lowered it. \"Thank you so much, Leo,\" she said. \n\n\"You should clean the battery terminals and have your battery checked,\" I said. \"It's just going to get colder.\" \n\n\"I know,\" she said as her shoulders slumped. \"You should get home before the roads get worse.\" \n\n\"I'll see you next Tuesday, Liv. You're working Christmas eve?\" \n\nShe nodded. \"I take all the hours I can get while Grandma watches Vicki.\" \n\n\"Then, I'll see you next week.\" She walked off, and I drove out of the lot and back home. Heading back to Miesville, I went south on County 91 past Gopher Hills Golf Course, crossing the Miesville Ravine and finally turning into my driveway. I parked the truck in the garage and went inside, grabbing a fresh bottle of Jack Daniel's out of one of the cases by the door. I left that on the kitchen table as I pulled off my clothes and laid them over a chair. \n\nIt was a good night to run for two reasons. Deer hunting season was over, so there wouldn't be a bunch of people with guns out there. The snow was my friend tonight, as any footprints would be covered up minutes later. Once naked, I grabbed the red collar with the dog tag saying \"MAX\" and my address, plus a rabies tag. It was a necessary disguise; it might give a hunter or farmer pause before he took a shot at me. Putting it over my head, I shifted into my large wolf and shook my fur out. Walking to the kitchen door that headed out to the expansive deck, I used a paw to press a hidden switch that opened it up. The motor closed it behind me as I moved out into the darkness. \n\nMy wolf vision was much better at night than in my human form, but there was little color sensitivity. It didn't matter tonight; I knew the trail by heart after all these years. I worked my way along the edge of the ravine, working to where it connected to the Cannon River basin. Sitting on a rock above the cliff face, I let the wind and snow blow into my fur as I looked over the valley. Catherine and I had found this spot on one of our midnight runs, making love in wolf form under a full moon. It was the reason we had purchased the land and built the home we did, so we could come here and lose ourselves in our wolves, yet be on the edge of a major metropolitan area for my work. \n\nI sat for an hour, thinking of all the happy times I'd had here. Wolves can't cry, but we can howl. I pointed my nose to the sky and let my sorrow travel up to the moon. \n\nCh. 2 \n\nI trotted back to the house a little after midnight, following the trail by scent as much as sight with the snow coming down hard now. I flipped the gate open that led to the pool, which I hadn't filled since Catherine got her diagnosis. It was another of a long list of things I had ignored since she found out she had cancer. \n\nThe snow was four inches deep as I went up the stairs to the deck overlooking the back yard. I pressed the hidden panel with a paw, shaking the snow off my thick fur as the door opened. As soon as I was inside, I shifted back to my human form and dried off with a towel from the stack. I tossed that in a pile behind the door, then pulled on a pair of athletic shorts. \n\nMy wolf and I both suffered from the loss of our mate. It was like the Goddess reached in and tore my soul in half, a wound that would never stop bleeding. I grabbed the bottle of Jack Daniels from the table and went into the large living room, starting a fire in the fireplace to warm up while I got good and drunk. When the firewood was catching, I closed the screen and got up. \n\nI turned on the television and put the videotape into the VCR. Tuesday nights was when I'd watch our mating ceremony. My father, Alpha Maksim Volkov, had officiated at his home in Welch, about five miles farther down the Cannon River from our current home. Our Pack had never isolated themselves from humans; we lived and worked among them, coming together to run and celebrate, and helping each other out. The Pack owned land that allowed us to let our wolves out and run, hundreds of acres of rolling hills in rural Goodhue County. \n\nI'd attended the Winona Pack held a coming-of-age ceremony for their second daughter with my father and brother. I was twenty-two at the time, popular with the ladies, and had no interest in settling down. All of that changed when Catherine and her mother reached the stairway that led down to the room where her guests were waiting. \n\nI forgot to breathe. Catherine was a living goddess, the most beautiful woman I had ever seen. \n\nDark brown hair tumbled in waves to the middle of her back. Her face, so enchanting, a narrow nose and prominent cheekbones, below hazel-colored eyes that I soon lost myself in. Her 18-year-old body displayed to perfection in a green ball gown. Her scent reached me, and I was lost. \n\nMales moved to the bottom of the stairs to wait for her, and my wolf let out a ferocious growl. \"MINE,\" he said as I moved to intercept her. Those eyes got big, then she took a sniff, and a feral smile spread over her face. \"MINE,\" she said \n\nThe smart males quickly got out of the way, the not-so-smart ones I knocked out of my way as I ran across the room to her. \n\nI jumped to the stair just below her, my nose going to her neck as my arms went around her. The scent had my wolf howling in glee, my jaw shifting in preparation. She tore my shirt aside so she could put her nose into my neck. Her wolf was just as ready as mine. \"Claim me,\" she growled. She moved her head to the side, exposing the skin on her neck and shoulder, and I bit down to claim her right before she bit my shoulder in return. \n\nMy head was swimming as our souls twined together. My parents had told me what it felt like to claim a mate, but that was just words compared to the real thing. She was everything I could want, and everything I didn't think to ask for. I could feel her emotions. I could talk to her mind-to-mind. \n\nI released her shoulder, licking the bite to help it heal. Bringing my hands up to her face, I cupped it while I rested my forehead on hers. Nothing else existed but us; I didn't hear the people in the room or the shouts of congratulations. My head was reeling with the experience of melding with her. \n\nShe held me close, her heartbeat racing just like mine. \n\nHer eyes, wide in wonder, pulling me into her very soul. \n\nWhen I could think straight again, I pulled back my head but left my hands on her cheeks. \"I'm Leo... Leo Volkov, your mate,\" I said. \n\n\"Catherine,\" she said. Her lips parted, her tongue darting out to wet them just before I pressed my own to hers. The kiss was beyond description, but our wolves wanted more. Leaning down, I swept her into my arms and started carrying her back up the stairs. Her mother went ahead of us, opening the door to her room. \n\nWe didn't come out until the next morning, fully mated as was our way. Our parents took us to the County Courthouse to apply for a marriage license and scheduled our mating ceremony for the next Friday night. We had to deal with the five-day waiting period for the civil ceremony; it also gave time for family and friends to be invited and attend. \n\nI hit PLAY, and the big screen came to life with the recording. After being used to HDTV, the old format was almost painful to watch, especially with the degradation of the tape after all these years. \n\nThe video opened with me standing in the large living room of my house, the room emptied of furniture except for folding chairs and a small raised stage. My father stood at the center, I was to his left, my younger brother Ivan on my other side as best man. The room was filled with not just werewolves but humans; friends, coworkers and people from school. The service served a civil purpose only, helping us blend in with the humans around us, and giving us the legal protections of a marriage bond. Under Werewolf traditions, we were already as bonded as we could be. \n\nMusic started to play, and Catherine appeared at the door. I paused the video, my fingers tracing over the outline of her face. I remembered the feel of her hair, the softness of her body, and the sound of her voice. I must have stopped the video a dozen times before it was over. \n\nAnd then I drank until I stopped feeling anything. \n\nWhen I woke, it was almost noon. The fire was out, the room cold. I closed the flue and went to the bathroom to do my business. The hangovers were as bad as the blackouts. Brushing my teeth to get the taste out, I took a few Tylenol and went to the kitchen. I drank a few glasses of water and juice with the scrambled eggs and toast I made. I was minimally competent in the kitchen, the main reason I ate out every night. When the dishes were in the sink, I shifted and then hit the button to go outside. I ran on my property for twenty minutes, checking the fences and refreshing the scents on the posts and trees around it. \n\nWhen I'd finished running the perimeter, I went back to the house and laid down on the porch that went from the garage wall to the front door. The stamped concrete was cold, but I had a thick mat near the steps. The walls and shrubs guarded me against the winter winds. Flopping down, I put my head on my paws and stared out at my yard and the road and trees beyond. \n\nAfter our mating, with our father still Alpha, the two of us began to look for a place of our own. I had started a general contracting company a few years earlier, drawing workers from among my Pack and friends from high school. Volkov Construction was growing steadily, and our parents helped us with the money to purchase the land. Eighty acres bordering the Miesville Ravine Park Preserve along one side, the rest a mix of farmland and orchard. \n\nI built the garage first, needing the space enclosed for a workshop, and the floor above for a two-bedroom apartment. We lived in that little space for two years while construction of our dream home continued around paying jobs. Our dwelling was a big one, over five thousand square feet; not only did Catherine and I want a large family, but we needed space for Pack functions when I took over from my father. ",
        "My parents never saw us move in. A drunk driver took them, and our Beta pair away from us as they returned from a meeting in northern Minnesota. The State Patrol delivered the news, but my wolf already knew my father was gone. He'd felt the mantle of the Alpha shift from my father to me. The will gave their house to my younger brother, and I received a larger share of the money from their estate. \n\nOur lives were never the same after that day. I rushed our home to completion while we dealt with all that came with running a Pack. My brother Ivan became my Beta, and between him and Catherine, we made it work. It was hard, we rarely slept a whole night, but we were happy. \n\nI stayed outside until the sunset, then went back in to take a shower and change. Tonight was dinner at King's Place. \n\nI thought about taking the truck, then changed my mind and dressed for cold weather instead. I headed out to the garage. The four-car garage had my motorcycle and snowmobile in the second bay, beyond my truck. The third bay had my Jeep, the fourth bay Catherine's silver Lexus SUV. We'd bought it a few months before her diagnosis, and I kept up the maintenance on it as if she would return to use it again. \n\nIt reminded me that I needed to start divesting myself of things soon. I had to put my estate in order before my wolf died, and Catherine's possessions were a good start. \n\nTomorrow. I couldn't handle it tonight. \n\nI zipped up my snowmobile suit before opening the door. With all the snow, it was the perfect time to take a ride on the trails that passed behind my home. \n\nAs I straddled the Polaris and started it up, I imagined for a moment a weight settling into the seat behind me, arms wrapping around my waist and holding on. I shook my head, pulling out and watching the door close behind me. Those days were over. She was gone, and if not for a promise to her, I would be gone too. \n\nRacing through the snow along the ditches towards Miesville, I put all that behind me. I would eat my fill, have a beer or two, then return home and grab another bottle. I would let the whiskey blot her out of my dreams and memories for a few hours, then start another day. Tomorrow would be at Las Margaritas for Mexican food, Friday at Dugarel's, Saturday at the St. James, Sunday at the Smoking Oak, Monday at the Chinese Buffet. \n\nAnd then back to Wiederholt's on Tuesday for more Prime Rib, and a chance to see Liv again. \n\nAs I got off my snowmobile in the lot, my eyes went across the road and spotted Liv's car in the back of that lot. For a minute, I considered going there instead, before deciding against it. A half-pound burger and waffle fries awaited. As I sat at the end of the bar, the place packed with snowmobilers, I jotted down a few ideas. If I did it right, everything would be ready by spring. \n\nCh. 3 \n\nArriving home, I changed things up. For the first time in months, I had something to do that my wolf and I were excited about doing. \n\nTurning up the heat in the garage, I started by cleaning out the Lexus. It wasn't easy; I'd find her sunglasses, and remember when we went skiing. I'd find a bottle of her perfume, and remember that night we went dancing in Minneapolis. The blanket that we'd picnicked on during our drive up the North Shore. It took two hours to get to the point I could vacuum and wipe down everything, with a dozen or more pauses and breakdowns along the way. \n\nAnother hour of work and the car was clean on the inside. I had called from the bar to make an appointment with a garage in town to get the oil changed and a checkup, so I'd do that after I woke up on Thursday. Looking at the pile of stuff I'd removed from the car, I got some boxes and started putting together things to donate to Hastings Family Service. Other things, like her sunglasses and the perfume, I'd bring in with the rest of my mementos. \n\nI set them on top of the dresser, mixed with the photos and reminders of our life together. On the wall above it was a 24x36\" photograph of the two of us in wolf form, running through the woods. Taken the day after our mating ceremony, it showed the promise of a long life together and the joy of finding each other. I reached out, my fingers tracing the line of her neck. \"Not much longer, my love,\" I whispered to her. I dropped my hand down to the urn that contained her ashes; I'd found the maker online, a local woodworker who would do custom work. The cherry box had a laser-etched photograph of her face on the top with her name above it, and \"Beloved Wife\" below with the dates \"1972-2015.\" Trees and running wolves filled the sides, the laser-etched pattern forming a continuous run. \n\nTears ran down my cheeks as I talked to her. \"I'm sorry, my love,\" I began. \"I never let you go. I never moved on like you hoped I would. How can I keep going without you?\" \n\nShe didn't answer. \n\n\"I can feel my wolf fading. We both miss you so much. There's not much time left before we die, maybe by summer?\" I'd already outlived the only example I'd seen of a widowed wolf. He made it three years before putting a bullet in his brain to stop the pain. I'd made it four. \"My life is empty without you. I don't know why the Goddess hasn't taken me yet. I wish you hadn't made me make that promise to you to keep living. Life without you in it is tedium, broken by drunkenness. I have nothing to look forward to, only the place I eat separates the days anymore.\" \n\nI picked up the photograph of the two of us by the pool, surrounded by the Welch Pack at a summer Full Moon party. \"The isolation is the worst part of it all. I'd give anything just to run with the Pack again.\" Putting it down, I wiped my tears. \"I decided to go through your things and give them away. I know you're laughing at me, wondering why I still have your clothes after so long, but I couldn't bear to lose anything with your scent. Now everything is faded. There are people out there who can use your things, charities, even friends. It's time I cleared out things from the house, but I will never clear your memory away, my love. You will always be here for me.\" \n\nI took a shower and went to bed. Just before I fell asleep, a thought came to my mind. \n\nFor the first time in a long time, I hadn't gotten blackout drunk. That was ONE. \n\nThe next morning, I felt better than I had in years. \"Because you didn't drink a whole bottle of whiskey,\" my wolf noted for me. \n\nThere was that. \n\nI drove the Lexus into Hastings, stopping at McDonald's to get some breakfast before dropping it at the shop. It didn't take long; the car was in excellent shape, with less than ten thousand miles on it despite being five years old. I had one more stop, this time to visit my lawyer. I pulled into the parking lot of the office building and climbed the stairs. \"Welcome to Burnley-Loesch, Mr. Volkov,\" the receptionist said with a smile as she took my coat. \"Mr. Burnley will be right with you.\" \n\nI hadn't sat down before Jacob Burnley came into the office. \"Leo, good to see you again,\" he said as he shook my hand. \n\n\"Likewise.\" Leading me back to his small office, I sat at the chair in front of his desk as he sat down. \n\n\"What can I do for you today,\" he asked. \n\n\"I need some help with estate planning,\" I said. \n\n\"I would agree, you haven't updated your will since the passing of your wife,\" he said as he pulled up the last one on his computer. \"It will still be valid, of course, there were contingencies built-in should she precede you in death, or you die together. but you should write a new one to ensure your estate goes where you want it.\" He read through the terms. \"As it exists now, your entire estate would pass to your brother Ivan.\" \n\nThat wouldn't work for me. \"Including the value of my property and investments, I estimate the estate to be worth just under three million dollars,\" I said. \"What are the tax implications of that passing to my brother, or others I might designate?\" \n\n\"It's not a problem for that size estate,\" he said. \"The exemption for the federal Estate Tax is $11.4 million as of last year, so the estate itself will not be taxed. There is no Federal or State inheritance tax, so the beneficiaries of your estate will not have the amount treated as taxable income. The only tax one would worry about would be capital gains on your property. If your home appraises at a million dollars on the day of the inheritance, and it is sold six months later for $1.1 million, that extra hundred thousand would be subject to capital gains taxes.\" \n\n\"So, I don't need to set up charitable trusts or other devices?\" I'd heard about people doing that to protect their children. \n\n\"For an estate of your size, it would not accomplish anything. Now, ten years ago, when the deduction was a million dollars, we might have done something. You could designate all or nothing to charity, and it will not affect the tax treatment.\" He paused to let me think. \"How much of your estate is in liquid assets, things like stocks, bonds, and cash?\" \n\n\"Everything except my home and its contents,\" I said. \n\n\"Then all you need to do is work with me to designate who you want to be beneficiaries of your estate, and in what percentages. You can choose items, too; if you want your car to go to a particular person, we list that by asset and name.\" It took less than an hour of his time to create a new will, one that reflected better my treatment since Catherine's death. \n\nThose who abandoned me would get nothing. \n\nI stopped at the U-haul store, picking up twenty boxes and six garment boxes, then at the grocery store to get more food from the deli. I only bought foods that I could heat and serve, the cooking gene having skipped me. The last stop was the gas station, filling the tank and purchasing some gift cards. \n\nReturning home, I started the process of sorting Catherine's closet. Stepping in, I took a deep sniff, but her scent was long gone. We weren't fancy, country-club people; she had dresses and shoes, but most of the time, she dressed in jeans. I filled three boxes with shoes, then started to move the clothes on hangers into the garment boxes. By the time I had them all down in the garage, it was time to head out. \n\nThe rest of the week was productive for a change. I finished the closet, the master bath, and her office. I made a dozen trips in the truck to the Salvation Army or Hastings Family Services, boxes filled with stuff I hadn't been able to let go of for four years. \n\nAfter years of living day by day, I was looking forward to Prime Rib Night. I prepared everything I needed, driving the Lexus into the parking lot in the back lot of Wiederholt's just after three in the afternoon. The owner, Mike, met me outside. \"You're doing a good thing here, Leo,\" he said as he waved me to his truck. \"She's going to flip.\" \n\n\"She's a good kid, and I know my wife would appreciate her old car going to someone like her,\" I said. He drove me back to my house so I could grab my truck. Before I got out, I handed him a manila envelope. \"I wanted to do something for your employees. It's some gift cards for the gas station. Can you make sure every one of them gets one, but don't tell them it was from me?\" \n\nHe took the envelope. \"I can say it was from a customer if that's all right. You don't have to do this, but they will appreciate it.\" \n\n\"That's fine. I'll see you at seven.\" He waved and pulled out of my driveway, back at work before anyone would notice he was gone. I put the gift together. It was a small box containing the car's title, registration, two keys, and $4,000 in cash. I watched the news, finally leaving the house in time to be there at my usual time. \n\nThe place was packed, but Liv and the hostess greeted me with big smiles. \"Merry Christmas, Leo,\" she said as she brought me to my table. I smiled; finally, she was calling me Leo. \n\n\"Merry Christmas to you, Liv. Is Vicki ready for Christmas morning?\" \n\nShe laughed. \"She talks about nothing except what she asked Santa for, and she'll probably try to stay up until he comes. I'll be right back with your food.\" \n\nWith it being Christmas eve, the place was packed well into the night. I finished my meal and picked up the bill, putting my usual $60 in the folder and placing the wrapped box on top. Liv froze when she saw it. \"Leo?\" \n\n\"Merry Christmas, Liv. Don't open it until just before you leave tonight.\" \n\nI stood up, and tears came into her eyes as she moved forward and hugged me around the waist. \"Thank you,\" she said. \n\nShe had to run off to her other tables, so I took a spot at the end of the bar. Mike came over and set a Sam Adams in front of me. \"There's a lot of happy employees tonight.\" \n\nI nodded. \"It's a hundred dollars they can spend on their families instead of gas,\" I said as I raised my glass. \"Merry Christmas, Mike.\" \n\nThe dining hall started to wind down by ten, and the wait staff was released as the tables cleared out. Mike came back to the bar, smiling like the cat who caught the canary. \"It won't be long now,\" he said. \n\nI heard a high-pitched scream from the hallway leading to the bathrooms, soon followed by two other girlish screams. A few seconds later, Liv came running into the bar area, her uniform replaced by jeans and a sweatshirt. She spotted me and ran up, crashing into my side as I opened my arms for her. \"Leo?\" \n\n\"It's a car, Liv. I wanted you to have something reliable, and it wasn't like Catherine needed it anymore.\" \n\n\"OHMYGOD OHMYGOD OHMYGOD,\" she said. \"And the money?\" \n\n\"You'll have to pay sales tax on it when you register, and you'll need better insurance. You'll also have to claim the value above twelve thousand as taxable income. I had my lawyer figure out what it would all come to, and gave you enough cash to cover it all. It's all in the letter with the title.\" \n\n\"Thank you,\" she said as she squeezed me tight. Mike and some of the other employees had gathered around, and they all congratulated her like she just won the lottery. \"Where is it?\" \n\n\"Out in the back lot. Come on,\" I said as I grabbed my coat. \n\nShe hit the OPEN button on the remote as soon as she was out the door, and the lights on the Lexus flashed in response. \"OH MY GOD!\" She walked towards it over the frozen ground, just a few spots down from where her old car was. Opening the door, she started it up. \n\nI got in the passenger seat, giving her a quick orientation to where everything was. \"You should get what you need out of your old car, especially the booster seat,\" I said. \n\nShe didn't grab much, and I put the booster in while she was grabbing what she needed. When done, she pulled me into another hug. \"Thank you, Leo. This is the best Christmas present EVER,\" she said. \n\n\"You're welcome, Liv.\" \n\n\"Leo? What are you doing tomorrow?\" \n\nI shrugged my shoulders. \"I don't know. King's Place is closed on Christmas.\" \n\n\"Come over for Christmas dinner? It's not much, but I'm making turkey and the works. I'd like you to meet my Grandmother and Vicki.\" \n\n\"It would be my honor,\" I said. \"Can I bring anything?\" \n\n\"You've brought enough,\" she said with a smile. \"Show up by noon.\" She leaned in and kissed my cheek, then slid down into the driver's seat. She waved to everyone watching as she pulled out into the cold night. \n\nI looked at the group that had gathered to watch. \"I'll see you next Tuesday, Mike,\" I said with a grin before I walked around to my truck. \n\nI felt good about myself for the first time in years. \n\nCh. 4 \n\nI'd barely opened the door to my truck before it hit me. \n\nI was going to her home for Christmas, and I had nothing for her grandmother or daughter. Heck, I didn't even know what to get Vicki; she'd never shared much about the young girl beyond her pictures. \n\n\"Wait up,\" I said to the group that was heading in. \"I can't show up at a girl's house on Christmas with nothing for her, but I have no idea what a five-year-old girl wants these days.\" \n\n\"A phone,\" one of the girls said. \n\n\"I can see how that would go over,\" I said. \n\n\"I don't know, dolls? Barbie stuff? You could ask her,\" another replied. \n\n\"Vicki likes sharks,\" Mike said. \"When Shark Week comes around, Olivia has to record EVERYTHING. She watches them over and over,\" he said. \n\nPerfect. I could work with that. \"Thanks, everyone. Merry Christmas.\" Instead of going home, I headed to Wal-Mart, the only place I was confident would still be open at 10 pm on Christmas eve. I didn't even know her grandmother's name, but I wasn't going to leave her out either. I found a bouquet of wildflowers and put them in the cart, heading back to the toy section. \n\nThe next hour proved to me how out of my comfort zone I was with shopping for girls, something Catherine had always done. I walked like a zombie through the toy aisles, looking for something to please a kindergarten-age female Selachimorphaphile. That is what Siri on my phone told me was the term for a shark enthusiast. I must have looked lost because one of the associates took pity on me and asked if he could help me find something. I explained my situation, and he scratched his chin. \"I don't know, bro, but let me ask my friends.\" He sent out a text, then started reading off the ideas he got back. \"Here ya go, boomer! SeaWorld at the Mall of America. They have wicked big sharks, and Barry says you can get memberships. If you can get her into Sharks After Dark, that would be way cool.\" \n\n\"What's that?\" \n\n\"We did it with Cub Scouts. You sleep overnight in the tunnel at the bottom of the shark exhibit, tiger sharks swimming over your head as you sleep. It was cool!\" I pulled up the website, then went to the front. It was a much better gift than a Barbie. \n\nI picked up some cards and checked out, then headed home. I bought memberships for the three of them, so they could go as often as they wanted, then added one for myself in case they asked me to come too. I found out that the overnight was now called Sleep Under The Sharks, and was for groups of fifteen or more. \n\nDang. Then I remembered that Vicki's birthday was coming up on Valentine's Day; Liv had joked about how she got the love of her life on February 14<sup>th</sup>. As much as her mother was struggling, I doubt they'd ever had much of a birthday party. I made the reservation for that Friday night, and after paying, printed out the annual passes and the overnight. I put a season pass in each of their cards, then put the tickets for the party in Liv's card and the example invitation in Vicki's. \n\nI got home, walking past the cases of Jack into the house and right to the bathroom to get ready for bed. I was excited now about a day that I'd dreaded the previous years. Christmas in the Pack meant getting together to eat, watch football, and go on a long Pack run together before heading off into the woods in pairs. \n\nI fell asleep thinking of the children we never had. \n\nI woke at ten, turning on the television as I walked to the bathroom. It was going to be a warm and cloudy day, with temperatures right around freezing. I had a couple of mini-donuts and a glass of orange juice, not wanting to spoil my appetite for later. I found a nice crystal vase for the flowers and set it with the gifts. Liv had said to arrive by noon, but I didn't want to be there TOO early, so I took a little time to pick up the house and start a load of laundry. Finally, at 11:30, I was driving my truck towards town. \n\nI pulled into the parking lot of her fourplex and parked in a visitor's spot. The door to Number Three opened when I was ten feet away. \"MERRY CHRISTMAS, LEO!\" Liv and her mini-me Vicki were standing at the door, both wearing jeans and Christmas sweaters. I kept the gifts and flowers behind my back as I got to the door and was engulfed in hugs. Liv pulled me down and kissed my cheek again before stepping back. \n\n\"For the table,\" I said as I brought the flowers around. ",
        "\"They're beautiful, thank you,\" she said. \n\nI stepped in enough they could close the door, then knelt down by the young girl with the matching brown hair. \"You must be Vicki,\" I said. My wolf sat up, taking a deeper scent. Something was going on; she smelled like a werewolf. An ALPHA wolf. I took one more sniff and verified it was her, not a smell stuck to her clothes. \n\n\"You're da car guy?\" \n\nI smiled. \"It's Mommy's car now. You're cuter than your pictures,\" I said. \n\n\"I'm almost FIVE,\" she said as she bounced. \n\n\"I know! Can you put these under the tree for me?\" I took the envelopes out of my coat pocket; she squealed as she carried them over to the four-foot artificial tree in the corner of the living room. I shook my head as I stood up. The LAST thing I expected to find was a werewolf in Liv's home. Did she know? Was she part of the Welch Pack now? And if so, why was Liv allowed to have anything to do with me? I put the thoughts aside as Liv came back from the table. \n\n\"You didn't have to do anything,\" Liv said as she took my coat. \"You've done so much already.\" \n\n\"It's you who is doing something for me,\" I said. \"Without you, I'd be heating up fried chicken and potatoes in the microwave while watching a Die Hard marathon.\" \n\nShe laughed as I took off my boots. \"You might regret that decision after being with three women all afternoon. Come meet my mom.\" She took my hand and pulled me into the kitchen, where a woman with brown and grey hair to her shoulders was mashing potatoes. \"Mom, this is my friend Leo Volkov. Leo, my mother, Natalie Andersen.\" \n\nShe turned to me, the potato masher still in her hand and now pointing at me. \"I don't know what game you're playing, Mr. Volkov, but my Liv is not a person you can buy with expensive gifts, use up and leave behind,\" she said. \"Hurt her, and I'll use this on your nuts.\" \n\n\"MOM! God, Mom, he's almost YOUR age. Ew. Maybe I should be warning HIM about retired cougars prowling around looking for a rich boy-toy to take them to the casino!\" \n\nI looked between the two as they glared at each other before I busted out laughing. I held out my left hand for Natalie to see. It still had my wedding band on it. \"I think I'm in that comfort zone where I'm too old for Liv and too set in my ways for Natalie.\" I twisted the ring. \"I was married for twenty-five years before I lost my wife to cancer. I'm not over her, and I'm not looking for anyone. Catherine's car was sitting in my garage; we couldn't have children, and it's too small for me. I decided my favorite waitress could use a car that wouldn't die on her by the side of the road. I didn't ask for or expect anything in return.\" \n\nIt was like a balloon deflating, as the tension in the room started melting away. \"Liv has been my waitress every Tuesday night for over three years. No matter how bad I felt, she would greet me with a smile and make my day brighter for an hour or two. She's a good kid, and it was worth it just to see her face.\" \n\nNatalie put the masher back in the pot, then pulled me down and kissed my cheek. \"She told me the same story. It was a very nice thing to do for her. Merry Christmas, Leo.\" \n\n\"Merry Christmas to you, Natalie. It smells wonderful,\" I said. \"I'd offer to help, but my culinary skills involve boiling water and running a microwave.\" \n\nNatalie laughed as she put butter and cream cheese into the potatoes. \"Go sit with Vicki, we'll be ready to eat in fifteen minutes.\" \n\nI exited the kitchen quickly, leaving the two women to talk about me, and found Vicki sitting on the couch with a stuffed shark. \"I got dis for Christmas,\" she said as she held it out to me. \n\n\"Very nice,\" I said. \"What kind of shark is that?\" \n\n\"Gweat white. My favorite.\" I sat next to her as she played, trying to figure it all out. Our kind was physically identical to humans; the witchcraft that cursed us and blended our souls with those of wolves wouldn't show up in DNA. It was a blood curse, passed on from either or both parents. Having a child with a human was discouraged unless you were going to mate and change the parent too. The bite and change is a painful experience, one that is fatal more often than not. No one knew why some humans survived, and others didn't. There was only one way to find out. \n\nIt was better to stick with our own kind. \n\nLeaving a child with humans was unthinkable. Our kind could shift shortly after birth, with the child following the form of its mother. As they grew, their wolves became more independent, allowing them to change at will by the time they were four or so. To prevent a child from shifting at school or in public, they needed to be part of a Pack; the Alpha would command their wolf to only shift when he or their parents get permission. It was the only way to keep us all safe. \n\nVicki crawled onto my lap as she told me what she knew about Great White Sharks, which was a lot. I listened as my wolf sought out hers. She was there, alone and buried, but wanting to get out. I could sense her coming forward and needed to stop it and fast. Looking into her eyes, I let my Alpha wolf come forward. She stared into my eyes for ten seconds, her wolf showing herself in her eyes, finally looking away as she submitted. \"Not alone now. MY PUP, MY PACK,\" my wolf told me to my shock. I felt our wolves link, making her eyes go wide. \n\nHe claimed her as his own, right before Liv told us to go wash up for dinner. \"Come on,\" Vicki said as she jumped off. She brought me to the bathroom, where she stood on a step stool to wash her hands. My wolf was communicating directly with hers, placing the order on her to never shift unless I told her it was all right. I washed my hands after she left, wondering how I could even broach the subject of her father. Somewhere an Alpha left a child behind with a human, and that child had the Alpha mantle and all it entails. \n\nThey sat me at the head of the table, with Liv to my left, Vicki to my right. Natalie carried in the turkey, setting it next to me. \"Can you carve this while I bring the rest of the food in,\" she asked. \n\n\"Knives I'm good with,\" I said. It only took a few minutes to cut enough turkey off the twelve-pound bird for us and place it on a plate before returning the rest of the bird to the kitchen. The food was passed around, and my plate soon filled with turkey, mashed potatoes, stuffing, green beans, and gravy. \n\n\"Let us pray,\" Natalie said as she held out her hands to the girls. I took Liv's and Vicki's hands in mine as we bowed our heads. \"Father, we thank you for this food and the blessings of this year as we celebrate the birth of your son. We also thank you for bringing a new friend to our table today, in Jesus' name, Amen.\" \n\nThe meal was full of interrogation masked by smiles and polite conversation, but it went both ways. I told them about my Catherine and her battle with leukemia, and how lost I had been since then. I found out Natalie was a retired Hastings district schoolteacher, and that Olivia had done a year at Marquette University in Madison before coming to live here and have Vicki. There was more to the story than they told, but I didn't pry; I could read between the lines. Marquette was a Catholic university, and it wasn't cheap. Her parents must have sent her away when she turned up pregnant and unmarried. \n\nLiv was enrolled part-time in community college while Vicki was in school, and worked five nights a week at Wiederholt's. \"That's a lot to do, are you getting any assistance?\" \n\n\"Not much,\" she said with a look towards her Mom. \"I get some aid from the state to help with Vicki, but I don't qualify for financial aid.\" Ah. The only way she wouldn't qualify is because her parents make too much money; since she never brought her parents up, they probably weren't talking or helping. I couldn't understand why the father wasn't in the picture. A werewolf male would NEVER leave a pup on its own, so he must not know about her. It was all giving me a headache. \n\nI finished my plate and half of another, enjoying the food and the company. Dessert was Natalie's homemade apple pie and French Vanilla ice cream. \"That was fantastic,\" I said as I finished. \n\nLiv stood to start clearing the table. \"Can you watch Vicki for a few minutes while we clean up?\" \n\n\"Of course. Come on, shark bait,\" I said as I helped the little girl up. We sat in the living room until they finished, talking about her school and her plans for Christmas vacation. She didn't have many, but she wanted to go sledding and build a snowman. \n\nI wanted so much more for her. Now that my wolf had claimed her, I needed to be in her life, and that meant I had to get closer to both Vicki and Natalie. I didn't like her being so exposed; it was a miracle no other werewolf hadn't found her. She would have been taken or killed immediately, and Liv had no idea of the danger she was in. \n\n\"MOMMA PRESENTS,\" Vicki yelled as the two came into the room. She jumped up and went to the tree, bringing back the envelopes that I'd given her earlier. \"Can we open them?\" \n\n\"Of course,\" Liv said. Vicki handed them out. \n\n\"You should open them at the same time,\" I said. \n\n\"On the count of three,\" Liv said. \"One, two, THREE!\" \n\n\"SEA LIFE,\" Vicki yelled as the membership card fell out. \"Momma, SHARKS!\" \n\n\"Leo,\" Liv said as she saw what was in hers. \n\n\"I thought Shark Bait here would like a membership; you three can go as many times as you want for a year. The overnight I figured she could invite some friends on, maybe for a birthday party? It sounded so cool I had to get it for her.\" \n\n\"Sweeping under da sharks? YAAAH,\" she squealed as she jumped on the couch and hugged me. \n\n\"You bring your blanket and pillow and sleep in the tube with the sharks swimming over your head,\" I said. \n\n\"Will you sweep with us too?\" \n\n\"If you want me there, I'll be there,\" I said. The food and the lack of sleep caught up with Vicki a half-hour later, which is how I ended up asleep on their couch with a five-year-old sleeping on my chest. \n\nIt had been years since my wolf was so content. \n\nCh. 5 \n\n\"I can't believe she's taken to him that fast,\" a voice said as I started coming out of my slumber. \"Vicki's usually so nervous around new people. Are you sure they've never met before today?\" \n\n\"No, Grandma, they haven't. I've told him a little about my girl, but I've never brought her to work on Tuesdays when he comes in.\" That was Liv, the first voice was Natalie. \"It's been more than two hours. I should get her up, or she won't sleep tonight.\" \n\n\"You should take a picture, they look so peaceful that way.\" I sensed Natalie leaning over, rubbing Vicki's back. \"If you didn't know better, you'd think they were related. Something just doesn't add up, Olivia. He's not after your money, so he has to be trying to get into your pants. Why else would he do all this for you?\" \n\n\"Grandma! He's never once behaved in that manner towards me. He's a gentleman, a regular customer who lost his wife and is lonely. I don't know why he decided to do all this for me, but he's never once shown interest in dating me or any of the other girls at work. Even the divorcees gave up on him years ago, and they'll go after anything with a pulse! He's not the kind of man who uses women.\" \n\n\"And I won't,\" I said as I opened my eyes. Their eyes got wide as I looked over towards them. \"You should be proud of the woman your granddaughter has become. No matter how bad a day I was having, I could count on her to smile and make me feel better. She works her butt off, she's raised a beautiful daughter and is the kind of daughter I wish Catherine and I had been able to have. If you want to know what I think of her, that's it. She's the daughter I wish I had.\" \n\nI looked at Liv, who had tears running down her cheeks. She flushed red, then ran out of the room; I heard the bedroom door closing. Looking back at Natalie, she was shocked as well. She sat down on the chair, staring at me. \"I'm sorry, maybe I shouldn't have said that.\" \n\n\"No, it's not what you said about how you felt that caused her to run off. It's more that you said it instead of the two who should be telling her that themselves. I'll go talk to her, why don't you wake Vicki up and keep her busy until we come out.\" She got up and headed down the hall, knocking on the door. \n\nI twisted my body, sitting up while keeping an arm around Vicki. She stirred, opening her eyes. \"Tired, Leo,\" she said as one fist rubbed an eye. \n\n\"Well, if we sleep any longer, I'll miss the rest of Christmas,\" I said. \"What do you do after presents and dinner?\" \n\n\"Watch shows and drink cocoa,\" she said. \"Go see sharks now?\" I had to laugh as she gave me her best 'please' face. \n\n\"They aren't open today, Vicki, it's Christmas.\" \n\n\"Sharks ALL alone?\" \n\nI laughed. \"The sharks have each other to play with, and I'm sure they left someone to babysit. You'll have to ask Mom when you can go.\" \n\n\"No school. Sharks!\" \n\n\"Maybe on vacation,\" I said. \"Do you want to see what it's like?\" She nodded. I pulled out my phone and brought up some Youtube videos of the aquarium. We were watching sharks swimming around when the ladies came back out. \"I had to tell her the aquarium was closed, so we're watching videos of it,\" I said. \n\nLiv leaned over the end of the couch, watching for a few seconds with her daughter before she kissed her head. Her eyes were still puffy and red, but she'd washed the tear tracks off. \"Who wants cocoa,\" she asked. \n\n\"ME! Marshmallow, please,\" Vicki said. \n\n\"Vicki said your cocoa is the best, so I have to try it too,\" I said. It was as good as advertised, made with heated milk and cocoa powder, with a bit of peppermint extract. The rest of the evening flew by; we watched animated Christmas programs, drank cocoa, played Uno, and snacked on leftovers until it was time for Vicki to go to bed. \n\n\"Goodnight unky Leo,\" she said as she climbed in my lap to hug me around the neck. She'd picked up on something Natalie had said, that I was like an uncle because I was Liv's friend. \n\n\"Goodnight, Vicki.\" Natalie took her back to her small bedroom, leaving me with Olivia. \"You have questions,\" I said. \n\n\"Many. Grandma has a lot more than me,\" she said with a laugh. \n\n\"I'll save the interrogation for later, then. In the meantime, I have a few questions for you. What can you tell me about Vicki's father?\" \n\n\"He's not in the picture,\" she responded defensively. \"I don't see how it matters.\" \n\n\"It's important. I'll explain why later, but if you can humor me and tell me what you know.\" \n\nShe looked down the hall to verify the door was closed, then nodded. \"I was a good Catholic girl; my parents were strict about boys, not letting me date in high school. They sent me to Marquette, thinking a Jesuit university would keep me on the straight and narrow, but they had NO idea how wild those dorms were. I lost my virginity the first night there and had a lot of sex the rest of my freshman year. My roommate lived up by the Wisconsin Dells, and she invited me to stay with her over the Fourth of July back in 2014. My parents agreed, and I drove down to her house. We didn't tell anyone her parents were in California at the time.\" \n\n\"The father?\" \n\n\"We were partying with a group of her friends at the river, and one of them knew a guy with a houseboat. He said we could watch the fireworks from the Wisconsin River and hang out. John seemed cool. He was older, in his late thirties, but he was a good-looking guy. We met up with him after dinner, and he took us out on his houseboat. We went upriver and beached it on a sandbar for the night. The place was wild; kids drinking and partying, swimming, water skiing, and having sex in the water. My roommate and her boyfriend were busy, and I was the only one who wasn't paired up with someone else. As night fell, I went back to the boat and hung out with John. He made some margaritas, pulled me into his chair to watch the fireworks, and started running his hands over my body. Pretty soon, my bikini was untied, and his hands were running free. I wasn't fighting it; like I said, he was good looking, and I was having fun. After the fireworks ended, he took me to his bedroom. We had sex a few times, quite good sex actually.\" \n\n\"You didn't use protection?\" \n\n\"I was on the pill, but I'd forgotten to bring it, and I missed a few days. I didn't think it would matter, but six weeks later, I found out that it did. I was crushed; the fall semester was starting soon, and my parents weren't going to take this well. I called my roommate in a panic, and she was able to get me John's phone number.\" \n\n\"How did he take it when you called and told him?\" \n\nShe looked down at her hands. \"John's WIFE answered the phone. I couldn't tell her; my life was ruined, and I couldn't ruin his marriage too. I pretended I was selling magazines, and she hung up on me.\" She wiped away a tear. \"I called back the next day and told him. After challenging whether the baby was his, he told me that having the baby was out of the question. I was to get an abortion immediately, and he would send me money for it. I refused both offers.\" \n\n\"I can't imagine how you felt,\" I said. \n\n\"My parents found out, and that's when everything else fell apart. I'd rebelled against them and everything they taught me. They couldn't accept the harlot their daughter had turned into, not in their home or their lives. They kicked me out, withdrew me from school, and sent me here to live with Grandma so the scandal of my pregnancy wouldn't reach them.\" \n\n\"You haven't reconciled?\" \n\n\"The last time I talked to them was after Vicki was born. My mother called me her biggest disappointment and told me neither I nor my bastard daughter, would be allowed in their home.\" \n\nWith this, she broke down, and I reached a hand across to her. \"You're strong, Liv. You're raising a special girl, a blessing.\" \n\n\"I know.\" \n\n\"Have you made contact with the father since then?\" \n\n\"No. I did look John up on the Internet once; his wedding photos were in the paper. Would you believe he'd been married for a MONTH, yet he was sleeping with a drunk college student on the river? No, I listed the father as unknown, and moved on with my life.\" \n\n\"What was his name?\" I couldn't wait to look this bastard up myself; who would impregnate a human with their pup, and abandon her. Who would give up on an ALPHA pup at that? \n\n\"John Peterson. He lives up in northern Wisconsin, a place called Marengo Lakes.\" \n\nThe name hit me like a punch to the gut. \n\nJohn Peterson was the name my younger brother took when he left to marry the heir of the Marengo Lakes Pack. He mated their only daughter, Brenda, in 2014. \n\nThis was bad. \n\nI didn't get to ask more, as Natalie came back out. She sat at the table with us, an expectant look on her face. \"You want to know what is going on between your Vicki, Liv, and I,\" I said. \n\n\"I don't want my family being hurt,\" she replied. \"She's not a toy for a horny old man.\" \n\nI pushed down the anger at her implication. \"Before I answer your questions, I'd like to ask a few more questions about Vicki.\" I had many questions for her AND my brother. \"Has she ever told you that she hears a voice in her head?\" \n\nThe two looked at each other, then Liv nodded. \"I asked my pediatrician about it, and he didn't think it was a problem. Children have vivid imaginations, and it's not like the voice is telling her to harm herself. It's like an imaginary friend. She spends a lot of time alone; she doesn't always play well with others her age.\" \n\n\"These play problems; are they because she is aggressive? Maybe acts out physically?\" \n\n\"Yes, how did you know?\" \n\n\"I know because she and I share a common heritage; it's why I feel a pull to protect her, and why she feels so comfortable with me so quickly.\" \n\n\"Heritage?\" \n\n\"It's not something I can comfortably discuss until I know more details. I need to make some calls and do some research, and I'll need a day or two to do this. Vicki mentioned she wanted to go sledding; would you consider visiting my home? There are some good hills there, and if you'd allow her to go on a snowmobile, we could give her a little adventure on her school break.\" ",
        "\"I haven't been on a snowmobile in years,\" Liv said. \"Neither of us own the gear for it.\" \n\n\"That will be my problem,\" I replied. \"Would Friday be all right? I can't cook, but I could pick you up at eleven and take you to lunch in town, then out to my property for the afternoon. I will answer all of your questions then.\" \n\n\"Not tonight?\" Natalie looked disappointed. \n\n\"Friday, I will explain everything if that is all right.\" \n\nThe two looked at each other, then Liv nodded to me. \"I will see you Friday at eleven,\" she said. \n\n\"You kids have fun, I'm too old to be on a snowmobile,\" Natalie said. \n\nI couldn't stay around, not with the thoughts bouncing around in my head. \"I must be going,\" I said. \"Thank you for a lovely evening.\" It took twenty more minutes to complete the Minnesota Long Goodbye, and I ended up taking a plate of leftovers and some pie with me, but I made it home by seven. \n\nI had to make some phone calls before this situation blew up. \n\nCh. 6 \n\nI didn't even wait until I was back on the main road before I made my call. \n\nIt wasn't a call to my younger brother, Ivan. It was to the parents of my late wife, the only ones who talked to me after I was exiled from my Pack. Larry and Donna Winters had retired as Alphas of the Winona Pack ten years ago, turning it over to their oldest son. They practically lived with me as they watched their daughter fade away from cancer that ravaged her body. I called his cell. \"Larry, it's Leo. Merry Christmas.\" \n\n\"Merry Christmas to you, son. What's going on? You haven't called in months.\" \n\n\"I know. I found a reason to start going through some of Catherine's things; I've been donating them to charity and helping people. It's time to let go.\" \n\n\"It's about time. I'm happy you've found the strength to tackle it at last.\" I knew the decline of my wolf and my health had been watched by them, and that was one of the reasons I stopped meeting them in person. I couldn't take the pain in their eyes as they saw what was happening to me. \"Do you need our help?\" \n\n\"I do, but not in that,\" I said. \"I would like to meet with you and go over a few things. I found something in my travels I didn't ever expect to find, and I don't know all the implications of it.\" \n\n\"What was it,\" Larry said. \n\n\"I'd rather explain in person. I'll bring along Catherine's jewelry box; Donna can look through it and take back any family heirlooms.\" \n\nHe covered the phone for a few minutes. \"We'll be in Red Wing tomorrow to meet some friends for lunch at the St. James. Why don't you meet us at ten at the Caribou Coffee there? We can grab one of the rooms they use for meetings.\" I loved that place, it was built into a historical building and was unlike any other store in the franchise. \n\n\"That sounds perfect,\" I said. \"Thank you.\" \n\nThe phone got handed over, and Donna picked up. \"Leo? This reason you mentioned; have you found someone? Are you finally ready to move on?\" \n\n\"I found someone, but not to replace Catherine in my life. That hole in my heart will never be filled,\" I said. \n\n\"She wanted you to live a full life, Leo. It's all right to find love again if the right woman comes along.\" \n\n\"I know that in my head, Mom, but my heart is still broken. Is it enough for my wolf to find a reason to keep living?\" \n\n\"That Alpha... I still can't look at the Welch Pack Alpha pair without wanting to smack the shit out of them. They should have been the ones to help you through your grief, not rip you from everyone you loved.\" \n\n\"Water under the bridge, Mom. I'm still here. We'll talk tomorrow.\" I hung up and continued the drive, parking in the garage. I passed the cases of Jack Daniels by the door, reaching for one out of habit. I looked at the bottle and put it back. I'd told my mother-in-law I was bringing jewelry to look at, and I needed to get that ready. It also wouldn't help to show up at ten in the morning smelling of whiskey. \n\nI grabbed a Coke out of the fridge and brought it into the bedroom. She had a jewelry case in her dressing area, with four drawers and hooks for her necklaces to hang. Werewolves had slightly different tastes in jewelry due to our shifting. Most didn't wear many rings other than wedding rings, as the paws wouldn't hold them after a shift. Wedding rings could be quickly removed and left with clothing, or attached to a clip on a necklace. The same issue arose during the shift with bracelets and watches. \n\nNecklaces were like collars and could survive the shift, provided they were loose enough around the neck for the extra size and fur. A 'choker' style necklace would do just that to your wolf. Earrings survived the shift just fine, and some of the younger wolves had piercings. If we knew we were going to shift, we'd take it all off. The women, especially those working and interacting with humans, wore jewelry to blend in. \n\nI had it easy. I never wore a watch, and I only had my wedding band. I'd pull that off and put it in a pocket before shifting. \n\nI opened the first drawer, which was filled with pins and brooches. Jewelry on our clothes worked better than on our bodies, and Catherine had accumulated quite a few of them. Some had hidden meanings; the old mill, with blue gems forming the river and rubies the wheel, was a symbol of the Welch Pack. I started sorting them, leaving the ones I had purchased for her, and setting the others aside on the counter. If I didn't remember, I set it aside. \n\nWhen I was done an hour later, I went back to the kitchen and grabbed a bunch of ziplock bags. The snack-sized bags worked well for the smaller stuff; I used a bread tie to hook all the necklaces together before placing them in a quart-sized bag. I put the small bags into a gallon-sized bag, and that into a shopping bag with a zippered top. \n\nThe next morning, I drove into Red Wing and got to Caribou well before ten. I ordered a muffin and a large coffee, and arranged for a small room we could use upstairs. Larry and Donna arrived with their coffees just before ten. \"Leo,\" Donna said with a smile as I stood up. \"You look... better.\" \n\nI kissed her cheek, then shook Larry's hand. \"I've made some changes in my life,\" I said. \"Please, sit. I'll explain while you sort through that stuff. Anything you want for you or your daughters just set to the side.\" I passed the bag to Donna, who laid the bags on the table. \n\n\"Who is she, Leo?\" Larry didn't mess around. Only a female could cause my wolf to return. \n\n\"In my travels, I met a child. Almost five years old, living with her human mother. She's a werewolf, Larry, and she has the Alpha mantle on her.\" \n\nThe resulting spit-take and coughing fit took a minute to recover from and clean up. I was glad all the jewelry was in bags. \"Let me get this straight, Leo,\" Donna said as she cleaned coffee off the table. \"There's a girl out there with humans, and she's the firstborn of an Alpha.\" \n\n\"There's no mistake on either one,\" I said. \n\n\"You have to tell her father immediately,\" Larry said. \"That's his first-born, and you know how dangerous it is to have a pup being raised away from other wolves and an Alpha. She could shift at any time, and do it among humans.\" \n\n\"I can't tell her father,\" I replied. \"The father cheated on his mate with the human mother, leaving her pregnant, and offered to pay for an abortion. She didn't accept, obviously.\" \n\n\"He's going to figure it out,\" Donna said. \"The child is four, so this happened around 2014?\" I nodded. \"He's a current Alpha?\" \n\n\"He is.\" \n\n\"Oh, his wife is going to serve up his nuts with barbecue sauce and cornbread,\" Donna said. \"Do they have children?\" \n\nI nodded. \"Two.\" \n\nShe just shook her head sadly. \"Then they already know his child is out there somewhere. The Alpha mantle goes to the firstborn child 95% of the time, male or female. In every instance where the firstborn does not get it, the second does. Since the father can only pass the mantle to one of his children, they have to know there is another out there.\" \n\nLarry leaned forward. \"The child is in great danger, Leo. This only goes one of three ways. One, the father claims the child, allows her to grow with his family in the Pack, and turns the Pack over to her when they retire.\" \n\nI snorted. \"Yeah, like the Luna is going to let the bastard daughter take her family's Pack,\" I said. \n\n\"He is Alpha of a Pack where he mated into the position? It wasn't his Alpha mantle, but hers that he passed on?\" \n\n\"Correct. The father mated the only daughter of an Alpha.\" \n\nLarry shook his head. \"You probably didn't pay attention to this, since you were born with the Alpha mantle, but it's different when the Alpha mantle goes to a female. When she mates, the Alpha mantle extends to him too. The firstborn of either will get it. Now, obviously, their child will not be a problem, but if he knocks up another wolf first, the first-born gets it. I suppose if they found the girl, they could let her inherit the pack, but I wouldn't count on it. The mantle will stay with this child unless she is killed. If that happens, and the father is Alpha, and still in power, the mantle would shift to the second-born child.\" \n\n\"The one that is HER son or daughter,\" Donna added. \"The one who is supposed to inherit the Pack.\" \n\n\"Given the choice, they will kill her in a heartbeat,\" I said. \"That's the danger she is in if they find her.\" \n\n\"And her mother might be killed as well, to cover the whole sordid affair up in werewolf and human worlds,\" Donna said. \"The longer this goes on, the more pressure there will be to eliminate her. The lack of a mantle can't be hidden from the Pack, and they will talk. If it gets out, it will show weakness to other Alphas. Then there is the risk to the Pack if something happens to their current Alphas. Your parents are an example of how quickly things can change, Leo. If this Alpha pair died today, their Pack would have no true Alpha heir. It would be like the Welch Pack now; a Beta playing Alpha, but always vulnerable to takeover.\" \n\n\"Your own Beta never would have defeated you if your wolf hadn't given up,\" Larry said. \"An Alpha wolf with the Mantle doesn't lose to a Beta unless he wants to.\" \n\n\"You know what happened, Dad.\" \n\n\"I do. It was a mistake, but it's done now. The question is what to do with this girl. Since you didn't call the father and you're asking our advice, I assume you want to help her.\" \n\n\"It's like I NEED to help her, Larry. Our wolves, they've bonded. Four years of fading away, and suddenly my wolf perks up and claims her as his own pup.\" \n\n\"You're shitting me,\" he said. \n\n\"Nope. At first, I didn't know what to think. When I looked into her eyes, her wolf submitted to mine. 'MY PUP, MY PACK,' is what he told me. So, yeah, I need to help her.\" \n\nDonna was shaking her head. \"That's crazy. I've heard of that happening with a mate, but never with a pup.\" \n\n\"She's not a second-chance mate; it's not that at all. My wolf sees her as his daughter.\" My human side did too; she needed protection, and I wanted to be there to protect her. \n\n\"What about the human mother,\" Donna asked. \"Is it possible she is your mate?\" \n\n\"She's less than half my age, Mom, and I've never seen her that way. My wolf is not interested in her, and I'm not interested in anyone else.\" \n\nShe put her hand over mine. \"This is an answer to my prayers, then. Not the answer I thought I would get, but an answer none the less.\" I raised an eyebrow at her. \"I've been praying for a woman to come along and rescue you and your wolf from the trail to death you've been walking. This girl will be your salvation, Leo. Love and protect her with all that you are, and who knows? Maybe someday you'll find a woman to run at your side again.\" \n\n\"No woman wants a fifty-one-year-old former Alpha who's been banished,\" I said. \n\n\"I see an Alpha and his heir, ready to make their own Pack a reality,\" she responded. \"Keep her hidden; if a Pack wolf smells her and word gets out, either she's killed, or someone force mates her to bring the Alpha mantle into a Pack that doesn't have one.\" \n\n\"Option three,\" I said as I shook my head. \n\nLarry looked me in the eyes, his wolf staring mine down. \"There is an Option Four, where she becomes Alpha of the Pack she chooses. If you don't want to be Alpha to a Pack, prepare her to run her own. Train her to be a good Alpha. It's her birthright, Leo.\" \n\n\"What about her family? Her human family?\" \n\n\"I can't tell you what to do there, son. You know the rules. You also know the risks of a werewolf child among humans. They are helpless and clueless against the danger she is in, just because she exists. If you can't remove them from the situation, you'll have to convince them to let you help.\" \n\nI took a sip of my coffee as I thought, the temperature now low enough to drink. \"I'll just have to find a way to convince Liv.\" \n\nDonna had only taken a few pieces out, and she returned the rest to me. \"Your daughter should inherit Catherine's jewelry,\" she said. \"We have to leave, but we're a phone call away, Leo.\" We stood up, and she kissed my cheek. \"You and your wolf are going to live and love again. I can feel it.\" \n\nI watched them walk out and sat back to think. I had to be close, and for that, Liv and Natalie needed to trust me. \n\nTrust isn't easy to establish or maintain. \n\nI was going to have to show them. \n\nCh. 7 \n\nI arrived at Liv's house at eleven in the morning on Friday. \"Unky LEO!\" Vicki raced at the door, reaching up for me while I was still walking up the sidewalk. \n\n\"Where is your jacket, young lady?\" \n\n\"In dere,\" she said. \"Sharks! Unky Leo, we saw sharks!\" \n\nI stepped inside the door, where Liv was waiting with Vicki's jacket. \"She didn't want to wait, so we went to SeaLife yesterday when they opened. I had to drag her out of there,\" she said with a laugh. \n\n\"HUUUUUGE sharks, Unky Leo! Ovah my head!\" \n\n\"Wow, it sounds like you had fun,\" I said. \"Are you ready to have fun today?\" She nodded as Mom zipped her jacket up. I looked around and didn't see Natalie. \"Is your grandmother coming?\" \n\n\"No, she's not up for it.\" \n\nI led them out to my truck, where I'd purchased a booster seat for Vicki that I installed in back. \"Snowmobiling is fun, but you have to have the right equipment or you freeze. We're going to get lunch, and then we'll go shopping.\" \n\n\"You don't have to buy stuff, Leo,\" Liv started to say. \n\n\"I'm hoping this will be something you want to do again, and I don't compromise on safety. Now, do you two like chicken strips?\" They did, so we drove to Raising Cane's in Apple Valley and ate lunch before heading to Lakeville and the power sports dealers. It took almost an hour to get both of them set up with snowmobile gear and helmets before we were heading back east to my home. \n\nThe garage had radiant floor heat installed, so as soon as I parked, we were able to get out and start dressing in their equipment. I'd purchased matching suits for them, in black and hot pink with the Polaris logo. Snowmobile pants when on first, and I helped them adjust the straps over their shoulders as they extended well above their waists. I held open Vicki's new boots as she put her feet into them, then zipped them up and pulled the pant legs down over them. The jackets went on next, the racing neck tight, then the helmets. It took a while to get everything adjusted, but once we had it, they would go on a lot faster. Last on was the gloves. I took a photo with my phone of them in their matching Polaris-logo suits; they looked amazing. I quickly pulled my gear on, then opened the garage door in front of the snowmobile. \n\nVicki was bouncing as I brought the big sled out and started it up. It was a snug fit on the long seat, with Liv behind me, and Vicki in front, but I didn't mind a bit. Since Vicki had never been on one, I started slow. The little girl wasn't impressed as we puttered around my land. \"Faster, Unky Leo! Faster!\" \n\n\"We have to go to the trails then,\" I said. \"I want you to hang on, and lean the way I do,\" I said as I went out to the road. We had to drive along the ditch until I could join the trails that cut across miles of open farmland. Going a little faster, they liked that and the motion of going up and down the slope as I avoided power poles and drove over driveways. We caught up to a trail crossing a mile down the road. Turning on to it, there was almost a mile of flat farmland ahead of us with a fifty-mile-an-hour speed limit. \"Hang on,\" I said. I opened up the throttle, and both girls started to scream as the engine accelerated us down the trail. \n\nI immediately slowed to a stop, thinking I'd scared them. I was wrong. Vicki turned in the seat and looked at me with her gloves on her hips. \"No! We go FASTER, Unky Leo!\" \n\nI turned around to check with Liv, who was laughing. \"You heard the girl,\" she said. \"We feel the need...\" \n\n\"THE NEED FOR SPEED,\" I finished as I turned back and gunned the throttle. I don't know who had more fun on the trails, but it was the most fun I'd had in years. We stayed out for another hour before the sunset, and by the time we got home, it was completely dark. I'd scheduled a pizza delivery for six, and we pulled into the garage at five-forty. \n\nVicki gave me a big thank-you hug after I helped her get her helmet off. \"Go again? I want to go AGAIN!\" \n\n\"Another day,\" I said. \"I'm hungry, and dinner will be here soon. Put your helmet on that shelf, then I'll help you with the rest of your stuff.\" Liv helped her with the helmet, then we hung up the suits and put the boots and gloves on a dryer. \"You can take the gear home if you want,\" I said. \n\n\"I think she'll want to ride again,\" Liv said as Vicki agreed. \"You have a beautiful home,\" Liv said as she looked around the big kitchen and the open main floor plan. \n\n\"Catherine and I built it expecting we'd have a big family, but it didn't happen that way,\" I said. \"It's more than I need, but I can't sell it because she was so much a part of building it. It feels like a museum sometimes.\" \n\nShe looked at a photo on the wall of Catherine and me on our wedding day. \"She was beautiful,\" Liv said. \n\n\"Inside and out, the best person I've ever known. We had twenty-five great years together,\" I said. I heard the driveway motion alarm and looked out to see the driver was here. Liv and Vicki set the table while I took care of the driver, then we had our pizzas. Liv and I both knew that after dinner, we were going to talk, and both of us were afraid of what might be said. You could tell how nervous we were by how we picked at our food while Vicki inhaled piece after piece. \n\nI'd promised to explain everything today, and so far, I hadn't told them a thing. I was praying that Liv would listen long enough for me to explain everything. I asked her to help Vicki wash up, then meet me in the living room. I was hoping that being away from knives would give me the advantage. \n\nI went back to my bedroom and stripped, pulling on a terrycloth robe. When I came out, the two were sitting on the couch. Liv's eyes got wide when she saw what I was wearing, and I know she was wondering if she'd made a mistake in coming here. I sat down in a chair across from them. \"Vicki, have you been talking with that voice in your head,\" I asked. \n\n\"Uh-huh. She likes you,\" she said. \n\n\"What does she tell you about me?\" \n\n\"Twust you. Unky is like us, he will help.\" \n\nLiv had wide eyes and looked ready to snatch her up and run all the way home. \"Just relax, Liv. I'm not going to hurt either of you, but I told you I would explain things to you. The explanation isn't something I can just do with words. I have to show you.\" \n\n\"Show me what? Why are you in a bathrobe?\" \n\n\"You might be frightened, you might even scream, but know that nothing that happens here tonight will hurt you. I promise you that you are both safe here in my home.\" I stood up, pulling my arms out of the bathrobe before getting on my hands and knees in front of the couch. Liv's mouth was open as I let the robe hung down, still covering me, then I shifted. ",
        "There were two screams as the change completed, and the robe fell off. \n\nVicki screamed, \"PUPPY!\" \n\nLiv screamed, \"OH, FUCK!\" \n\nThen Liv grabbed Vicki and disappeared out of the room in a flash. I heard a door slam as the bathroom door locked. \n\nWell, that could have gone better. I shifted back, pulling on my robe and tying it as I listened to Vicki asking to see the puppy again, while Liv was cursing that her phone was in her purse, hanging from the chair at the kitchen table. I walked over to the door, glad that she wasn't calling 911 right now. I knocked, and it got quiet in there. \"Liv?\" \n\n\"What the hell, Leo?\" \n\n\"I'm a werewolf, Liv.\" \n\n\"That's impossible. Werewolves are fantasy, fictional creatures that cannot exist.\" \n\nI chuckled; she couldn't accept what she couldn't understand. \"Vicky, what did I change into?\" \n\n\"BIG PUPPY! Momma, I wanna play wit da PUPPY!\" \n\n\"I told you I wouldn't hurt you or Vicky, Olivia. I don't want you to be afraid of me, but you wouldn't believe me if I didn't show you,\" I explained. \n\n\"You showed me, and I still don't believe you,\" I said. \n\n\"Take a little time to think about what you saw, Liv. It's important you know the truth, because you two are in danger, and you won't see it coming. I'll be waiting in the living room for you to decide. If you want to go home, I'll take you. If you never want to see me again, I'll leave you alone. If you want to talk, we'll talk. If you want to sit and play with the wolf in the room, we'll play. Don't be afraid of me; my wolf and I don't like it when you are afraid.\" I walked away, going back into the living room. Tossing the robe aside, I shifted and curled up on the rug in front of the couch, my head placed so I could see around the end of the sofa and down the hall. \n\nIt took ten minutes before I heard the bathroom door unlock, then it slowly opened. Liv poked her head out, looking at me. I rolled over onto my back, my tail whapping against the rug as they came into view. \"Nice doggie,\" she said. Vicki was being held in her hand, an open bottle of rubbing alcohol in the other. \"Don't make me use this,\" she said. \n\nI guess the medicine cabinet didn't have many weapon options; I was glad she didn't think of breaking the mirror. I tried to make myself as non-threatening as possible; rolling onto my stomach as they came closer, I put my head on my paws while my tail kept wagging. \"Tell Mom that you are like me,\" I sent to Vicki's wolf. \n\nVicki brought her other hand to her ear, trying to figure out where my voice came from. \"Mommy, I heard Unky Leo talking in my head,\" she said. \n\n\"What?\" She had moved them until one of the love seats was between me on the rug and the two of them near the kitchen. \n\n\"He said to tell you that I am like him.\" \n\n\"No.\" \n\n\"Tell Mom that I really am your uncle. It was my younger brother,\" I sent to her. Well, either they would grab my keys and steal my truck to get away, or I'd get them to sit down and talk to me. \n\n\"Momma, Unky Leo said he is my real unky. It was his wittle brother.\" \n\nHer eyes got wide. \"No. It can't be.\" \n\n\"Show Mommy the pictures in the hallway.\" Please, Luna, let her have the courage to know the truth, I prayed. \n\n\"Mommy, Unky Leo wants you to look at da pictures.\" She pulled Liv towards the hallway, and she turned on the light. The walls were filled with photos of my life. Everything from my family as I grew, to my mating, my time with Catherine, and my brother Ivan's mating ceremony. The ceremony at Marengo Lakes, where he mated the only daughter of the Alpha shortly before he died. \n\n\"Oh, God... Oh, God... It's him,\" she said as her fingers reached towards the photo. She let go of Vicki, allowing my niece to run back down the hall and plop down next to me. I kept my eyes on her mother as she tried to catch her breath and wrap her head around what she was seeing. \n\nI loved the feeling of her little hands running through my fur as she explored my wolf form. Liv came down the hall, dropping onto the love seat as she watched her daughter play with the massive wolf on the floor. \"You're real,\" she said. \"You're a werewolf. He was like you?\" \n\nI nodded my head yes before I licked up Vicki's face, making her squeal. \"Dog swobber,\" she giggled. \n\n\"We need to talk,\" she said. \n\nI slowly moved to my feet, towering over Vicki. I stood over three feet tall at the shoulders, and my two hundred pounds was the same in both forms. I sniffed Vicki's neck, the cold nose making her squeal, then trotted down the hallway to my room. I reached up a paw and opened the lever door handle, pushing my way in. Shifting, I pulled on my clothes and walked back out. \"You did a good job telling your Mom,\" I said to Vicki, who was now sitting in her Mom's lap. \n\n\"You said you would explain it all,\" she said. \"Start talking.\" \n\nCh. 8 \n\nIvan Volkov's POV \n\nValentine's Day, 2014 \n\n\"Quit whining and get in there,\" my older brother and Alpha said as we approached the large Pack House. The 2014 National Alpha Summit was being hosted by the Gray's Peak Pack, a prosperous pack west of Denver. The place was packed, over two hundred Alphas in attendance, most with their Lunas. I had taken notes and networked during the daytime meetings, but now was the thing I dreaded most. \n\nThe meat market. \n\nA cocktail party where unmated men and women of breeding were shoved together in the hopes of finding their mates. I didn't like what they represented, and I already knew I wasn't going to find a mate there. \"I'd rather take a run after being cooped up all day,\" I said. \n\n\"It's the rules. All unmated Betas and Alphas and their children of age are required to attend, and no one can leave for at least an hour unless their mate is with them,\" Leo said. \"Catherine and I are meeting with some friends from the Iron Range. Don't wait up for us.\" \n\n\"Don't wait up for me, I'll be back when the moon sets and my run is done.\" Leaving them behind, I joined the line of men heading for the east entrance to the ballroom. At precisely seven PM, the doors opened, and the men started to file in. I was about halfway back in the line, and this wasn't my first time at one of these. It was a bit more organized than others, a long reception line of ladies in dresses wound back and forth inside the room. Each male would greet a female, lift her hand to his nose and sniff. If there was no match, he would smile and move on. When a destined pair found each other, the hosts and their security members would quickly remove them from the room before they started screwing on the floor. \n\nThe show must go on, after all. \n\nThis was my third one of these, eighteen being the minimum age. I had found my mate in the second; when I scented her, my eyes got wide, and I froze. She smelled my neck, shaking her head in disappointment. \"No Alpha mantle on you,\" she said to me. \n\n\"Second son of the Welch Pack Alphas in Minnesota. My brother is the heir.\" \n\n\"Not interested second child of the Provo Pack here,\" she replied. \"I have better offers than you already. I reject you,\" she looked down at my nametag, \"Ivan Volkov. Have a nice life.\" \n\n\"I reject you as well, Tonya Skyles, you heartless bitch,\" I said back. I continued with the meetup as if nothing had happened. \n\nTonya's mating to an Alpha in Idaho was announced that night with dozens of other pairings, as I sat at the bar and drank myself into oblivion. \n\nTonight would end up the same way. I started the motions of introducing myself to the ladies. I did have a plan. I'd get through the line, hang out at the bar with the other disillusioned, and find a willing female to share a night of meaningless but athletic sex. I was looking for those who were just as tired of this charade as I was, and I had invited a half-dozen ladies to join me at the bar by the time I exited the line. Making my way to the bar, I bought two bottles of tequila and asked for a bunch of glasses. Pouring seven, I downed the first and refilled it before my first lady arrived. \"Ivan, did you save one for me,\" the blonde she-wolf said. \n\n\"If you'd like to join me on a trip to oblivion, I'm your man,\" I said. \"Here you go, Lynn.\" \n\n\"To another year of freedom,\" she said as she raised her glass. \n\n\"Freedom.\" We tossed the shots back, and I poured more as other ladies arrived. Brenda, Lori, Dawn, Charlotte, and Gina stopped by to say hello and have a shot. Over the next twenty minutes, all but Lynn and Brenda moved on to other males. The bar was crowded and loud; I grabbed what remained in the second bottle and stood up. \"I need to get out of here. I don't want to hear another word about mates and how wonderful they are tonight,\" I said. Lynn wanted to stay, but Brenda asked me to walk her to her room. \n\nI was a little confused, as Brenda wasn't giving off signals she was interested. Still, I offered her my arm and escorted her out of the room. \"Why are you so jaded about the whole mate thing, Ivan,\" she asked as we got outside. \n\n\"I found mine last year; she was upset that I didn't have what you have, an Alpha mantle. She rejected me before she knew anything else. Hell, she had to read my nametag so she could finish her rejection,\" I said with a sneer. \"I don't know or care what Luna thought she was doing. Half of all human marriages end in divorce; I don't think Luna is any better at the game. For every disgustingly in love and devoted pair, there's probably another who don't belong together.\" \n\n\"And yet our culture and traditions insist on it,\" she said. \"You're lucky; you get a choice in the matter. My father is not allowing me the same.\" \n\n\"He cannot force you to mate someone. That is against our laws!\" \n\n\"True. My father cannot force me to mate a particular male, but applying pressure to take a mate is a different thing.\" We reached her room; she opened it and invited me in. The portable housing was cozy, to say the least. The room contained a full-sized bed, a dresser, television, and a tiny bathroom with a shower. She sat on the bed and patted the space next to her. I pulled an empty drawer out of the dresser, setting it on edge as a table, and set the bottle and the shot glasses on top of it before sitting down. \"Can I speak frankly, Ivan? Can you hold what I tell you in strict confidence?\" \n\n\"I would be disappointed if you did not, Brenda.\" I poured us each a shot. \n\n\"My father is not well,\" she said. \"My mother passed away last year, and he won't be far behind. I am the heir to the Pack, and I need a mate to run it properly.\" \n\n\"There are plenty of males here who would love to take you on just for the Alpha position, not just because you are a desirable young woman,\" I said. \"If the word gets out, they will be hounding you.\" Of course, she hadn't found her mate tonight. \"Are you disappointed you didn't find your mate here?\" I raised my drink to my lips. \n\n\"I knew I would not,\" she said. \"I'm gay.\" \n\nThat was enough to cause me to choke on my tequila. \"What?\" \n\n\"I'm a lesbian. I have no mate because I have no interest in men, I never have.\" \n\n\"I bet that went over well with Daddy.\" Werewolves, especially Alpha males, were tradition-bound and patriarchal. Homosexuality might be tolerated in the lower ranks, but there were no openly gay Alphas of either sex. A male might never take a mate and hide his true affections, but a female Alpha could not. I could see the truth in her face. \"He doesn't know.\" \n\n\"No one does,\" she said. \"My lovers have been few, human, and distant. I know what will happen if the Alpha position transfers to me while I'm unmated, or if I was to come out. My Pack and I will be looked at as weak, a tempting target for anyone who fancied a challenge. I wouldn't last a year before it was taken from me.\" She tossed a shot back and poured another. \"What I'm looking for is a partner, not a mate.\" \n\nI could see where the conversation was going. \"You think I could be that partner?\" \n\n\"You do not believe in or expect a mating to result in anything mystical like true love. You are smart, strong, and ready to lead a Pack by my side. A partnership would get you out of your brother's shadow, and my Pack would gain a strong defender. I would not prevent you from seeking your pleasure in others, just as you would not prevent me from my own liaisons. Both of us would use discretion, of course. We must maintain appearances.\" \n\n\"Of course,\" I said. It wasn't that mated pairs couldn't cheat, they just couldn't do it without the other feeling it. It didn't cause pain, but there was no mistaking when your mate was having sex with another. \"You can't fake the mating claim, Brenda. I would have to bite you and mate you, and you would have to bite me back.\" \n\n\"You wouldn't be my first man; in my youth, I slept with a man before accepting my true orientation. I would be expected to bear an heir, so sex between us will be required to achieve that. In the Pack's eyes, we need to be a stable and loving Alpha pair. You should not expect it to occur more often than required, though. I'm sure you can find your release elsewhere.\" \n\nI leaned back against the headboard, considering what she was offering. The chance to become an Alpha did not come along often. My only other path to the job would be if my brother and his mate passed without an heir, the Alpha mantle dying with him. Having the Alpha Mantle was important; with it, your wolf was stronger, and your command over a Pack was more complete. If I mated with Brenda, the mantle she received from her father at birth would be shared with me. My son or daughter would carry it after I was gone. \"So to summarize your offer. We agree to begin a courtship leading to us mating and leading your Pack together, presenting the image of a loving Alpha pair. Both of us may seek our sexual satisfaction, discreetly and freely, preferably far from our home.\" \n\n\"It's not the mating either of us thought we would get as pups, but both of us would benefit, as would our Pack,\" Brenda said. \"I don't need a commitment to our deal tonight, but I would like to set the groundwork if you are agreeable.\" \n\n\"What kind of groundwork?\" \n\n\"We clearly aren't fated mates, but we do need to show interest in each other among the others. You stay here tonight, sleeping in my bed, so our scents mingle. We eat our meals together, we take walks while holding hands, and are seen kissing. I introduce you to my father, and you introduce me to your brother and his mate.\" \n\n\"And after this summit?\" \n\n\"We date for a few months, each of us traveling to the other's Pack. Along the way, if we both agree to proceed, we set a date for the mating ceremony.\" \n\n\"And then we join together,\" I said. \n\n\"Exactly.\" She poured us each another shot. \"That is tomorrow. For tonight, I want to get gloriously drunk and forget about the shit-storm that my life has become. I'd like you to join me.\" \n\nI raised my glass in a toast to her. \"It would be my honor, Alpha-Heir Brenda Petersen.\" We clicked our glasses together and drank. \n\nThe hangover promised to be epic. \n\nCh. 9 \n\nLeo Volkov's POV \n\nPresent Day \n\nAfter the excitement of the day and evening, Shark Bait was fading fast. Vicki begged me to shift back into Wolfy, but I had too much to explain to Liv. If I couldn't convince her that I needed to be in their lives, that they all were in danger, I could lose her. \n\nThe evening had gone reasonably well; I had explained to them what werewolves were, how we lived, and what Vicki would become. \"Werewolf children normally shift before they can crawl; they will follow whatever form their mother is in. By the time they reach ten years of age, their wolf becomes more independent; they will shift on their own unless their Alpha commands them not to. There is always a risk of having juveniles out amongst humans. Young werewolves might shift if frightened, or respond with more aggression than another child would because of their wolf.\" \n\n\"Like Vicki at daycare,\" she said. \"She was getting in trouble for biting other children.\" \n\n\"Yes. Since you are fully human, Vicki's wolf has grown without guidance from her mother or Pack. It will push forward, perhaps at an inopportune time. You can't think of her wolf as being separate from her; they are together and have been that way since birth. Her wolf will want to express herself, and she needs a safe place to do that. This is why we normally homeschool our children or form private schools that are under Pack control. It is safer for them to remain among us until they learn to control their wolves, usually around high school age.\" \n\n\"You would teach her?\" \n\nI nodded. \"The first shift is painful, but after you've done it once, it is as simple and painless as telling your body to change shapes. Vicki is way behind on the training any other pup would have by this point.\" \n\n\"PUP!\" Vicki raised tired eyes towards her mother. \"I gonna be PUPPY.\" \n\n\"That's our secret,\" I told her. \"Only your mother and I can know about that,\" I said. \"If the wrong people find out, they might hurt you, or take you away from Mommy. I will teach you how, and keep you safe while you learn,\" I promised. \n\n\"Okay.\" She snuggled back into Liv's arms, her eyes going closed again. As long as she got to be a puppy, she wasn't going to care about the other stuff. She fell asleep shortly after. \n\nLiv sat on the couch with Vicki's head in her lap while I told her 'the rest of the story.' My younger brother was Vicki's father, and by now, he knew that she hadn't aborted the child as he asked. I explained the Alpha Mantle and what it meant for her to have it. \"So she can grow up to run her own Pack, but it's more likely someone would try to kill her so it can go back to your brother's children with his mate,\" she said. \n\n\"Yes. That's the greatest danger. The other is that Vicki isn't part of a Pack. Her wolf scent clings to her now; you wouldn't notice it walking by, but if a werewolf got close enough, they would pick up on it. As her wolf emerges, and after her first shift, you can't hide that puppy anymore. Werewolves will know as soon as she walks into the room. Wolves are territorial, and as a 'lone' wolf in their territory, she would be taken from you. For her own good, of course. An untrained Alpha heir female is a valuable commodity in a world where many Packs do not have Alphas with that mantle.\" \n\n\"What would they do to me?\" \n\n\"At best, disable you while they take her. At worst, they would kill you because you might know about us, and you're human.\" \n\nShe shook her head as she ran her fingers through Vicki's hair. \"I didn't ask for any of this, you know. I was just a college kid who wanted to get laid.\" \n\n\"And my brother should have known better than to have unprotected sex. He will be desperate to find and kill her, because only then can he bring the mantle back to his new Pack.\" I shook my head at how screwed up this all was. \"Vicki is my niece, and my wolf already claimed her as his. He and I will gladly train her, and we would die to protect her. For the first time in years, I'm waking up with a reason to get through the day. I have to live and be strong to protect her.\" \n\n\"Making it to Prime Rib Tuesday wasn't doing it?\" She sometimes teased me about my eating habits. \"You were always nice to me, but I could see your fading. I'm glad you're better now.\" She got a text; looking at her phone, she noted the time. \"Grandma is wondering where we are, and I have to work the next four nights. Can you take us home?\" \n\n\"Of course,\" I said. \"May I pick Vicki up?\" \n\n\"Please, she's getting so big now,\" Liv said. I put her on my shoulder, and on the way out, Liv grabbed her shoes and jacket. I was pleased they both left their snowmobile gear with mine in the garage, but I didn't say anything. \n\nVicki didn't stir as I put her in the booster seat, and we were on our way. \"I know I've given you a lot to think about tonight,\" I started. ",
        "\"That's an understatement. My head hasn't spun like this since I found out I was pregnant.\" \n\n\"I can only imagine. There are a few things I'd like to ask of you and Vicki.\" \n\nShe looked back at her girl, then at me as I reached the road. \"Like what?\" \n\n\"For now, don't tell your grandmother about the werewolf thing. It's fine to say that you found out my younger brother is her father, and I'm her real uncle. That might ease her worries about why I want to be around her, and you.\" \n\n\"I could have told you his name, but you couldn't tell for sure without me looking at a photo of him from back then,\" she reasoned. \"I can do that, but I can't promise Vicki will keep a secret.\" \n\n\"Your grandmother may not believe her if she says I turn into a big wolf. You can tell her if you must. At some point, she will need to know the truth just as I've had to tell you.\" \n\n\"What else?\" \n\n\"As I said, the more her wolf pushes forward, the stronger her scent becomes, and the more likely she is to shift. If you are taking her out in public, I would like to go with you. I can be there to scent for other wolves, and if they smell me with her, an Alpha wolf, they'll leave us alone. You're also not going to accidentally wander over a Pack boundary and cause an incident.\" \n\n\"She wants to do a lot, especially now,\" Liv said. \n\n\"I don't mind. The three of you are always welcome in my home because you are my family. I'm retired, and I don't mind having Shark Bait pull me around to look at stuff. I even have my own membership to SeaLife.\" \n\n\"She loved that yesterday,\" Liv said. \"I practically had to drag her out of the tubes in the shark cove.\" \n\n\"It's all up to you, Liv. I would hope that you would become comfortable enough to let me watch her, maybe while you work. I need you around to help her as she learns about her wolf side.\" We had reached Miesville, and I turned west on Highway 61. I only had seven minutes until we got to her house to talk. \"I'm sure she'll be asking you tomorrow when we can go snowmobiling again, especially since we're supposed to get a few inches overnight.\" \n\n\"She will want to do it all,\" Liv agreed. \"I'm curious about a few things. You said Vicki is a werewolf because her father was, that one parent is enough. What about when she grows up? Will she have to mate a werewolf, or can she have a human life with human children?\" \n\nI tapped the steering wheel. \"She could marry a human, but her children will be werewolves. You can look at is as a dominant trait, it will always come out. With her wolf, she's more likely to be attracted to other werewolves, and them to her. An Alpha Mantle female with no Pack is desirable; she could start her own Pack, or strengthen another.\" I paused for a second. \"It's our job to make sure she grows up and gets that choice.\" \n\n\"That brings up the next question. Can you make me a werewolf too? If I need to do that to protect her, I will.\" \n\n\"Can it be done? Yes, humans can be turned. It's a prolonged, painful change, and many do not make it. No one knows why some do and some don't; it's not always the best conditioned or the ones who want it the most. I think the Moon Goddess gifts a wolf to those she wants to have one, and the others die.\" I looked over at her in the glow of the dash lights. \"I don't want to risk your life too. I can train you in self-defense; we can get you a permit to carry a firearm, and I can teach you to shoot. I'll help you learn to protect her, Liv.\" \n\nIt was quiet as we drove the last mile, finally turning into her fourplex lot. I parked in the visitor's spot. \"Can you bring her in,\" Liv asked. \n\n\"Of course.\" I got her out and onto my shoulder, following Liv into their home. \n\n\"Sorry we were out so late, Grandma,\" Liv said as she took off her boots. \n\n\"Oh, look at that girl, she's tuckered out,\" Natalie said as she came over. \"Hand her over, I'll take her to get ready for bed. Did you kids have fun?\" I kissed Vicki's forehead as I gave her over; she stirred, and I told her good night. \n\n\"We really like snowmobiling,\" Liv said. \"Thank you, Leo, for a wonderful day. I'll call you when I'm ready to talk more about it all.\" \n\n\"Any time, day or night,\" I said. I leaned down and gave her a quick hug. \"It's going to work out.\" \n\n\"Goodnight, Leo.\" I walked out, and she closed and locked the door behind me. \n\nDriving home, it was my head that was spinning. I was totally dependent on how much trust I could build up with Natalie and Liv in a short time. Being Vicki's uncle helped explain my need to be in her life, but what if Liv couldn't trust me because of my brother? Would she think I would help him save his mating and his Pack by turning her over? \n\nThe thought of being frozen out of her life now had my wolf ready to bust out. I made it home, parking and stripping in the garage before shifting and going outside. I ran hard through the dark night, the clouds covering the moon. I ended up on our spot, looking down at the Cannon River Valley in the darkness, my head on my paws. \n\nIf I was to protect her, I needed to be ready. \n\nI had to be strong, fast, and deadly again. \n\nNo more boozing it up. \n\nEat right and get my life on a regular schedule. \n\nWork out every day, in both forms. \n\nImprove the security of my house and land, and see what I could do for Liv's place. \n\nMost of all, I needed to step up and be an Alpha again. \n\nI trotted back home, shifting and going back inside. I showered and got ready for bed, thinking over how I could make this work. For a Pack to be recognized, you needed an Alpha and at least four other members. If I got the word out that I was back, I knew some would seek me out to join me, banishment, or not. \n\nAs I laid down to sleep, I vowed to build a Pack that Vicki would be proud to take over when she was of age. She would be my heir; the daughter my brother rejected, would be the daughter my mate and I prayed for. \n\nI fell asleep with a smile on my face for the first time in years. \n\nCh. 10 \n\nFebruary 2005 \n\n\"Something is wrong, Leo. I have no energy, and getting more rest isn't helping. If I had the flu, it would be getting better by now,\" Catherine said as she walked into the kitchen. \n\nI checked her forehead with the back of my hand; she was still running a low fever. \"Sit down and try to eat some cereal while I see if I can get an appointment for you.\" The flu bug had hit Minnesota hard this February, and they said to bring her to urgent care because no appointments were available. I helped her get dressed, then carried her out to the truck. \n\nWe had to wait an hour to get back there. Catherine was down eight pounds from her last appointment, and her fever was 100.2 degrees. \"I haven't felt right for weeks,\" she said. \n\n\"Any nausea? Vomiting?\" \n\n\"No, but I don't feel like eating. I have had chills, and my joints ache.\" The nurse wrote the information on the chart, then left while we waited for the doctor. \"I'm sorry, Leo. Are you missing anything at work?\" \n\n\"Todd can handle the crews,\" I said. \"I'm where I need to be.\" Todd Miller was my new Beta, having taken over from my younger brother Ivan when he left to mate Brenda Petersen in Marengo Lakes. He also took over as foreman for Volkov Construction, the company I'd built up over the last twenty-five years to be one of the largest in Goodhue County. My company was the largest employer for my Pack members, but I was the majority owner. \n\nThe doctor came in a few minutes later; she was Canadian, having gone to school in Minnesota and falling in love with her husband. She talked about the history, then had Catherine sit on the exam table. \"Your glands are swollen,\" she said. \"Any pain when swallowing?\" \n\n\"No.\" She checked her lungs were clear, then asked about the joint pain. Finally, she typed out an order. \"I'm not convinced this is influenza; it's more like a low-grade infection. Are you active outdoors? Any tick bites last year?\" \n\n\"Very, we hike all the time when the weather is nice,\" she said. Lyme's disease? \n\n\"Take this down to the lab. They will draw your blood and get the results back to me. You can wait here until I return,\" the Doctor said. \n\nWe waited for over two hours, the nurse checking on us occasionally to make sure we hadn't left. \n\nShe was grim-faced when she came back, and she had another doctor with her, a man in his fifties with Einstein-like wild grey hair, partially tamed in a ponytail. \"This is Doctor McKnight; he's the Oncologist at the hospital. I've asked him to look at your results and examine you,\" she said. \n\nMy heart dropped into my stomach as she introduced him. Oncologist meant cancer. \"What's going on, Doc?\" \n\n\"The blood test showed a very high white count and the presence of malignant hematopoletic cells, commonly called leukemic cells or 'blasts.' These occur when your body's normal production of blood cells is deranged; instead of the healthy cells, immature myeloid blasts are formed. You have cancer, Mrs. Volkov. Specifically, you have acute myeloid leukemia, the most common form of adult leukemia.\" \n\nCatherine squeezed my hand hard as she tried to absorb it. \"How bad is it?\" \n\n\"We are going to find out,\" Dr. McKnight said. \"I need to admit you to the hospital immediately, both to stabilize your condition and perform the tests we need to determine the course of treatment.\" \n\n\"What kind of tests?\" \n\n\"We need to perform a bone marrow biopsy to identify the specific type of leukemia. The results will help us understand the proper treatment regimen. We also need to treat you with broad-spectrum antibiotics, as the infection your body is fighting now is winning. The white cells you are producing don't work.\" \n\nThe next two days went by in a blur. Catherine was wheeled from one room to another, then back to sleep until the next test was ready. The fever was going away, thanks to the antibiotics, but the fatigue was no better. When four doctors showed up with Doctor McKnight, we knew it couldn't be good news. \"We received the biopsy results and the DNA tests of your blood marrow,\" he said as he started. \"It's not what we had hoped for. The cancer is advanced and aggressive. The treatment is going to be difficult, and will require you to remain hospitalized.\" \n\n\"What kind of treatment? And for how long?\" My wolf and I were howling inside, wanting to take the pain from our mate so she wouldn't suffer. \n\n\"We would begin an intensive chemotherapy regiment tomorrow. The first course, called the induction phase, is administered daily over the next six days. It is a strong drug, designed to clear your blood of leukemia cells and reduce the number of blasts in your bone marrow to normal levels. You will remain here, both because of the severity of the side effects, and your susceptibility to infection during the treatment.\" \n\n\"All my white blood cells will be gone, so I can't fight anything off,\" Catherine said. \n\n\"Yes. After six days, we let your body recover and start to produce blood cells again. We will then take another bone marrow biopsy to verify the treatment killed the leukemia cells. If it looks good, you will be released to return home. You will still be susceptible to illness and infection, so you need to limit exposure.\" \n\n\"But I can be home,\" she said. \n\n\"Yes. After that, we start consolidation courses of chemotherapy. These are given over five days, with about four weeks between treatments. Consolidation chemotherapy is meant to kill the small number of leukemia cells that are still around, but can't be seen in blood samples. When that is all done, we sample your bone marrow again with another biopsy to verify the cancer is in remission.\" \n\n\"This sounds difficult,\" I told him. \n\n\"I can't sugar-coat it; the regimen is difficult, and the side effects can be serious. It is necessary if you are to have a good outcome.\" \n\nHe wasn't kidding. Chemotherapy was a shitstorm, a clusterfuck of symptoms, a virtual parade of indignities, torments, and problems. I held Catherine's hair as she threw up, and then her hair fell out, so I held her head. Open sores in her mouth, rashes on her body, extreme fatigue, loss of appetite, weight loss, loss of her ability to taste things, headaches... it just went on and on. The doctors continually adjusted medications to address the side effects, but it was like the old cartoon of the leaky dam; they'd find a drug that helped the rash, and she'd develop the sore on the inside of her cheek. \n\nI ignored the Pack and the company as I did what I could to help her. I would spend all day with her at the hospital, then drive home, shower and sleep, and start it again the next day. Visitors were restricted to her immediate family due to her susceptibility to infection. Larry and Donna moved in with me, helping as best they could. Catherine didn't have the energy to talk on the phone or greet people anyway. I would read her the text messages, send email updates, and keep her going as best I could. \n\nCatherine was a fighter; she wasn't going to give in to her diagnosis. \"I'm going to fight this shit,\" she had told me before they put the needle in for her first course of chemotherapy. It became our rally cry; it was what I told her before every chemo course started, and what I told her every night before I left. \n\nI stopped at Emily's Bakery and bought a cake for when the first course was done, with balloons and flowers. \"What do you want on it,\" the girl asked me. \n\n\"Can you put 'Fight That Shit' on it?\" She looked at me like I was nuts. \"My wife has cancer. She's fighting that shit.\" \n\n\"I'll be right back with that,\" she said. The \"Fight That Shit\" cake was a hit at the hospital. Her older brother ordered \"Fight That Shit\" t-shirts, we had \"Fight That Shit\" water bottles, and \"Fight That Shit\" floral arrangements. \n\nCatherine didn't leave the hospital for sixteen days. When I brought her home, she rarely left the bedroom for the next few months. Her mother and I made sure Catherine kept on track with her many medications. She would sleep a lot, especially after her days receiving chemo. Finally, in May, she had her second biopsy. \n\nShe broke down as I held her when the doctor called with the results. She railed against Luna, cancer, and the unfairness of it all. Her cancer had survived. \n\nWe did it again, with slightly different drugs, and by September, that course of treatment had failed as well. The cancer was too advanced and too resistant to the therapy. \"I can't do it anymore,\" she told me after we returned home. \"I don't want to spend the rest of our time together on round three.\" \n\nTears soaked my face as I kissed her forehead. \"We'll make the most of the time we have left,\" I told her. The doctors said there was less than a one percent chance of remission now, and gave her two to four months to live. \n\nShe made it to Thanksgiving. As I fed her mashed potatoes, she made me promise I would not follow her when she was gone. \"I want you to live a full life, Leo,\" she told me. \"We have eternity together in the Moon's embrace, no matter how long you take to get there. I want you to have stories for me.\" \n\nI promised her I would not kill myself. It was a promise I would later regret. \n\nOn Black Friday, surrounded by her family, Catherine Volkov rose to the moon at 8:22 pm. \n\nHer body was cremated, and the Pack celebrated her life with a Pack run on Tuesday night. I led the wolves through the woods, unable to cry in that form. We reached the point over the Cannon River Valley that was our spot, and I let out a mournful howl. \n\nIt was the last time I led my Pack in anything. \n\nMy love, my light, my reason to live was gone, and I didn't know what to do now. \n\nI didn't have anything to live for, and I didn't care."
    ],
    "authorname": "partwolf",
    "tags": [
        "alpha",
        "luna",
        "mates",
        "pack",
        "werewolf",
        "non-human",
        "nonhuman"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/the-porch-wolf-ch-01-10"
}