{
    "title": "Danica Pt. 16",
    "pages": [
        "Author's Notes:\nThis story is erotic fantasy, set in a world of magic.  I reserve the right to be listed as the author of this work, wherever it is posted.  If found posted anywhere except Literotica.com with this note attached, this story is posted without my permission.  &copy; Darkniciad 2000-2007\n\nThe sexual situations in this story will be far ranging, and may prove disturbing to some readers.  Please be warned that the villains of the story are really evil, and the things they do are not glossed over, or toned down.\n\nI make use of modern weights and measures quite often in my work, because those are the weights and measures of my fantasy world.  I know many fantasy readers prefer more archaic terms, and I hope those readers can overlook my use of miles, feet, and other such measures.\n\nYou really need to read the previous parts of the story to know the characters and the storyline.  This tale follows Danica in her day-to-day adventures, with the greater plot emerging slowly at first.  Think of it more as a serial than a novel, and you'll be in the right mindset.\n\nThis is an edited version of this tale, making use of what I've learned since starting to post at Literotica, and the services of my tireless editor, Roust Writer.\n\n\n{*****~~o~~0~~o~~*****}\n\nDanica heard the chime the next morning that signaled someone arriving at the teleportation pattern.  Although happy to see Celes, Danica was nowhere near as joyful to see who accompanied her \u2013 the thief Telanor.\n\nDanica's scowl must have spoken volumes, because Telanor put his hands up defensively in front of him and said, \"Hey \u2013 I'm here on orders, and you're going to need me.\"\n\nDanica snorted derisively at that, but Celes countered her notion.  \"He's right by me thinkin', Dearie.  T' cutpurse'll be able ta see t' traps we're probably gonna be trippin' over where we're goin'.\"\n\n\"We could deal with it with magic,\" Danica argued.\n\n\"We'll be havin' our hands full, Dearie.  We better be talkin' 'bout this somewhere t' walls ain't got ears.\"\n\nDanica nodded.  \"I'll introduce you to the servants then, and we'll go to my room.  I've spent a lot of time making it private, and that should work.\"  Turning to Telanor she said, \"You can stay in here \u2013 and for your own good you'd better not harass the servants.  If you steal anything, Zoraster will be short a thief.\"\n\n\"Like I'd be foolish enough to steal anything from here.  I haven't lived this long on the dodgy path by being stupid.\"\n\n\"Don't start now then,\" Danica responded and led Celes out of the main bedroom.  Tari, Rehkmire, and the older woman Yensanamun were waiting.\n\nAs Danica introduced them, she heard the mental gasp from Celes and knew it was directed at Tari, who was wearing a new linen gown that displayed her attributes to a very arousing degree.  Danica chuckled silently and then absently named Telanor before leading Celes to her room.\n\nDanica touched a rune along the frame of the doorway once she was inside, and then turned back to Celes.  \"We can talk safely now.  It would take strong magic to break through the wards against scrying and the sound dampening magic of the runes.\u201d\n\nCeles blew out a surprised whistle while looking at the complex rune structures.  \u201cYou certainly haven't been neglecting your studies.  This must have taken forever to carve.\"\n\nDanica smiled.  \"Not exactly \u2013 I'll get into that later.\"\n\nCeles looked around then and Danica could tell she had slipped into the second sight.  \"Gods, Danica \u2013 complex rune structures and a spell weave that looks like a tapestry.  The speed you master magic is beyond anything I've ever seen.\"\n\nDanica blushed and smiled.  \"We can talk about that later, and I can show you more.  Let's talk about the task.  It's always better to give prying eyes less time to break through the protective magic.\"\n\n\"I know that, sassy,\" Celes said with a smile.  \"The reason I said we needed to get away from eavesdroppers is because we're supposed to rob a tomb.\"\n\nDanica's eyes went wide.  \"Here, of all places, he wants us to rob a tomb?\"\n\n\"Not only that, but a tomb that was sealed by the greatest priests of the Necropolis, with as much emphasis on keeping something inside as keeping people out.\"\n\nDanica put her hands over her eyes for a moment.  \"That explains why you said we'd be too busy to look for mundane traps.  I guess we will need Telanor.\"\n\n\"He doesn't seem that bad to me.  He has more manners than most of Zoraster's flunkies.\"\n\n\"He didn't threaten to cut your tits off, either.\"\n\n\"I guess I haven't seen his bad side, and I've seen too much of it in Zoraster's other servants,\" Celes explained with a shrug.\n\n\"If he's acting civilized, he's probably trying to rob you.  Okay, what do we know then?\"\n\n\"I can show you the area where the tomb is buried,\" Celes said while walking toward Danica's large mirror.\n\nCeles cast the spell, and Danica noticed Celes had not neglected her studies either.  She used the battle mage technique to cast the spell quickly.\n\nLooking at the image in the mirror when it emerged, Danica saw only a natural rock wall and sand.  As Celes moved the focus of the mirror, Danica saw a pair of priests sheltered in a nearby cave.  The clerics were certainly close enough to see the first location that the mirror had shown \u2013 and to get there quickly.\n\n\"Not much to see.  Once they sealed the tomb with magic, they buried the entrance in sand and rubble and set guards on it.  It has been guarded constantly for over six hundred years, if our information is correct,\" Celes said, dismissing the magical image in the mirror.\n\n\"What exactly are they protecting?\"\n\n\"Themselves, if what Zoraster has learned is correct.  The man buried there is supposed to have been a great wizard who was willingly sacrificed and mummified in a forbidden ritual, in order to maintain his power indefinitely.  When he rose, the priests who had mummified him were killed and mummified except for the high priest.  When they rose, they killed the high priest and the soldiers who guarded the tomb, mummifying them as well.  They are likely all the living dead within the tomb still, unless the priests destroyed any before sealing the tomb.  Considering how closely they guard the place, I'd say they are trying to keep them in.  They're probably still stalking the place,\" Celes explained.\n\n\"Doesn't Zoraster have any dark clerics to deal with the undead for him?\"  Danica grumbled and sighed.\n\n\"They could deal with the undead, but it's probably going to take all our magic and Telanor's eyes just to get into the place alive and unnoticed.\"\n\n\"What are we after?  This certainly isn't a normal treasure hunt.\"\n\n\"An obsidian obelisk.  We'll know it when we find it, because it will throb with dark magic,\" Celes informed her.\n\n\"Do we know anything else?\"  Danica inquired.\n\n\"Not even the wizard's name.  These people obliterate any evidence of offensive people and put them out of their memory.  It's supposed to prevent them from reaching their place in the afterlife if they\u2019re forgotten.\"\n\n\"We can't teleport, because we can't see where we're going.  We can't use the passwall spell, because it won't work on the sand,\" Danica said ticking off ways to enter in her mind.\n\n\"Odds are we won't be able to use the phasing spell either, because I can't imagine them not warding the place against ghosts and intangible creatures,\" Celes added.\n\n\"We're going to have to uncover the entrance then.  This is insane.  There's no way we can do this without getting caught, and I don't want to think what will happen to us if we're caught breaking into a tomb in this land,\" Danica said and punctuated it by throwing up her hands and angrily sighing.\n\n\"We'll have to find a way.  The madman may not be concerned with how quick we get this bobble, but he's damn sure determined that we get it.  I'm afraid if we don't, we won't be the only ones to suffer for our failure this time.  There's something different \u2013 something I can't explain \u2013 in the way he gave me the orders for this,\" Celes warned.\n\n\"Let's go see if you can enter the inner library at the temple of Sekmamun.  We might be able to find something there, and it will be a lot easier if we both can get in to look.\"\n\nAs soon as Danica finished speaking out loud, she sent her thoughts to Celes, We might be able to talk about other things there too.  I don't think Zoraster will be able to watch us there.\n\nCeles thought back, Good \u2013 there are things I want to talk to you about too.\n\nThe two women heard someone exclaim, \"What the?\" from the doorway to the room at that moment.  Danica walked over and opened the door.\n\nThere, in front of the door hung Telanor, suspended in a magical web.  Danica laughed and dismissed the ward by touching a rune on the wall.  \"You know, eavesdropping and sneaking into a lady's room are both very rude,\" Danica said as Telanor dropped to the floor, landing perfectly balanced on his feet.\n\nThe thief picked at strands of web that weren't there, still feeling them even though the magic threads were gone.  \"How the hell did you trap me?  Zoraster's charms should have protected me.\"\n\nDanica laughed again.  \"That will teach you to trust Zoraster's protections too much.  You're lucky it wasn't a killing magic I had on this door.\"\n\nTelanor stiffened for a moment.  \"I know you're mocking me, but you're probably right.  I just said I didn't live this long by being stupid, and a few minutes later I do something stupid that could have got me killed.\"\n\nDanica shrugged.  \"Maybe I shouldn't have offered the advice.\"\n\n\"Can't we just let the past be the past?  We're on the same side now.\"\n\nDanica scowled.  \"We're not on the same side.  I'm stuck with you \u2013 it doesn't mean I have to like it.\"\n\n\"One little misunderstanding and you get all bitchy.  Oh well, at least I got a poke at you first,\" Telanor said with a lecherous smile.\n\nHis smile vanished a moment later, as he started furiously scratching his crotch.\n\nDanica looked over at Celes, who touched her earring a second time.  \"Ye'd best be mindin' yer manners, lil' cutpurse, or I'll make ye scratch yer pole clean off next time.\"\n\nTelanor scowled and turned, muttering, \"Damn witches,\" as he walked off.\n\nDanica felt a wave of something come from Celes at that moment.  It was a mixture of embarrassment, anger \u2013 and something else.  It was so confusing that Danica couldn't make sense of it.  The sensations dissipated as fast as they hit her, and Celes interrupted her thoughts when she spoke a moment later.\n\n\"Well, show me to this temple then, and ye can explain things 'long the way.\"\n\n\"We should get you something more suitable to wear.  My magic is what keeps this place livable, and it will be hotter than a devil's breath as soon as we leave,\" Danica suggested.\n\n\"Oh bother \u2013 let's just go.  It won't kill me, an' I've added a bit o' new magic to me robes.  I kin keep meself cool 'nuff, I'm fer thinkin'.\"\n\nYensanamun approached Danica as she and Celes entered the main room.  \"I've prepared food and drink for you and your guests, Danica.\"\n\n\"Okay, me belly is rumblin'.  We'll get a bite 'fore we go.  Thank ye, lass.\"\n\nThe woman laughed a bit at Celes calling her lass, then nodded and went to fetch what she had prepared.\n\n{*****~~o~~0~~o~~*****}\n\nZoraster reappeared in his inner sanctum, a wide smile of satisfaction adorning his face.  He crossed the room toward his scrying mirrors, but sat in the chair before them without bringing their magic to life.  Instead, he gestured and a table adorned with a map rose slowly from the floor in front of the chair.\n\nPointing to a spot on the map he said, \"Beniopolis,\" and a red dot appeared on the map where he pointed.  \"An outpost has been established, and contact with the temples of Quadesis and Set has proven fruitful.  First contact with what passes for the thieves\u2019 guild has also yielded satisfactory results.\"\n\nPointing to an island on the opposite side of the same continent Zoraster again recorded his progress to the magical map.  \"Toshima \u2013 outpost established and agents inserted within the upper echelon of the thieves\u2019 guild.  Expendable pawns within the palace have also been contracted and will facilitate the insertion of agents within the government structure.\"\n\nZoraster's finger moved yet again to point at the upper peninsula of a large island, \"Stentoft \u2013 Audun is within my complete control and has seized the throne.  The fleets of the barbarian raiders are mine to direct as I see fit.\"\n\nAnother gesture caused the table to lower back into the floor and vanish.  A hum from one of the mirrors drew Zoraster's gaze to it and he brought its magic to life.\n\nThe cadaverous Necromancer bowed upon seeing Zoraster through the mirror's magic.  \"Master Zoraster, we have replaced the first of the whores in the second brothel.  It will be some time before we can replace another without more corpses.\"\n\n\"I will see that more cadavers become available immediately,\" Zoraster replied.\n\nThe Necromancer nodded and Zoraster banished the magic of the mirror.\n\nZoraster sat back in his chair for moment, raised one eyebrow, and smiled.  Calling upon the magic of another mirror, an unkempt face appeared within its frame.  The man in the image started, and then bowed awkwardly to the image of Zoraster hovering before him.\n\n\"There is a nunnery near your camp at the southern edge of the forest \u2013 a large one \u2013 is there not?\"  Zoraster asked.\n\n\"Yeah, big place full of orphans and bitches.  Nothing worth stealing though, and it's too damn close to the damn city to make it worthwhile,\" the man replied.\n\n\"It is worth it to me.  I will ensure the men at arms are sufficiently distracted.  I want every woman taken.  I care not what you do with the old or the brats.  Collect any bodies of young women killed as well,\" Zoraster ordered.\n\nThe man in the mirror frowned and said, \"They'll come hunting us like rats.\"\n\n\"Not before tomorrow morning, I assure you.  That should be sufficient time to take them and entertain your men with them.  I will send someone to collect the bodies and aid you in relocating at first light tomorrow.  Have your men suffocate the women when they are done with them and keep the bodies as intact as possible.\"\n\nThe filthy bandit smiled, \"What do we get other than sport with the bitches?  There's nothing to loot.\"\n\nZoraster smiled and said, \"You will be compensated, I assure you.  Do hurry \u2013 I wouldn't want anyone to miss out on a second turn before my agent arrives for the bodies.\"\n\n\"Shouldn't take long to get there,\" the man mused.\n\n\"Sufficient portions of the city should be well aflame by then to distract any who might come to the Nunnery's aid.\"\n\nWith that, Zoraster dismissed the mirror's magic and activated another to set his distraction in motion.\n\nLess than an hour later, a city was in flames and bandits poured into the Nunnery.  Zoraster relaxed with a glass of fine wine and enjoyed the chaos of the capture and killing, as well as the delightful music of the Nuns screaming as the bandits repeatedly violated them not long after.\n\n{*****~~o~~0~~o~~*****}\n\nDespite Celes' initial push toward haste, she seemed to relax as they ate and talked about where their studies had taken them.  They talked for around an hour, and then made their way to the temple of Sekmamun.  Harkhuf was there to greet them, and to shake his head in astonishment as Celes was also allowed access to the inner library.  Harkhuf sensed that the two women needed privacy, and did not intrude when they entered the library.\n\nCeles wandered around marveling at the magic within, just as Danica had.  \"Gods, Danica \u2013 much of this magic is unique, and there are some very powerful spells here.\"\n\n\"There's something even better.  Zoraster can't steal any of it away from us either.  The god protects the knowledge, and anybody he doesn't want getting the magic can't even see it.  I'm willing to bet that somebody watching you casting the spell wouldn't give them the necessary words or gestures either.\"\n\nCeles laughed, \"Oh, that's wonderful.  How did he react?\"\n\n\"He actually didn't seem too concerned.  He's been distracted lately, not that I mind that,\" Danica replied.\n\nCeles nodded.  \"Aye, and that's what I wanted to talk to you about.  You think he can't spy on us here?\"\n\n\"I doubt it.  Did you feel that odd sensation when you passed through the doorway?\"\n\nAgain, Celes nodded.  \"It was almost like walking into the range of a dispell, but somewhat different.\"\n\n\"I haven't learned the spell yet, but it's a ward against scrying that I doubt can possibly be broken or penetrated from afar.  It's one of many I've had the scribes here copy and send to me.\"\n\n\"Okay then, let me show you something,\" Celes said and spread out a map of the world on a nearby table.\n\nRunning her fingers over the map, Celes said, \"You remember most of your first tasks were close to Zoraster's home base.  Almost all of them were within the country of Ferrartene.  Most of mine were the same in the beginning.  I think he was consolidating his power in the area.  Did you know that the King died and has been succeeded by his daughter, the princess Zoraster had you spy upon?\"\n\nDanica shook her head.  \"No \u2013 when did this happen?\"\n\n\"A few weeks ago.  I think she killed her father to take the throne, and what's more, I think she did it under Zoraster's influence.  She's taken a consort I'm almost positive is an agent of Zoraster's.\"\n\n\"If you're right, he now controls the whole of the country, from the Throne room to the rudest hut,\" Danica reasoned.\n\n\"Ferrartene is a power.  They have more men at arms than most of the nations in the region.  The new Queen has ordered new conscripts as well.  She's building a conquering army, and I have no doubt it will be at Zoraster's beck and call,\" Celes added.\n\nDanica pointed at the map and moved her finger over an area, \"He's also been trying to gain control of trade, in everything, reaching out even farther.  He's even taking control of the prostitutes.  He had me organize the House of Women at the Forge under his control.\"\n\n\"He's got another ready made army at his disposal too.  I heard somebody talking, saying that he's gotten control of Norshelt somehow,\" Celes said, pointing at an island on the map.\n\n\"That means he has a formidable navy at his command,\" Danica said, remembering what she knew about that land.\n\nCeles nodded gravely and further noted, \"And the berserkers, anyone who has faced one of our berserkers knows to fear their battle rage.\"\n\nDanica tilted her head a bit and smiled.  \"I never knew you were from Norshelt.\"\n\n\"I don't like to talk about it,\" Celes mumbled.\n\nDanica lay her hand on Celes' arm and said, \"It's okay, I won't pry.\"\n\nCeles nodded and smiled.  \"Now, he's got you ranging far and wide, opening doorways for him here on this continent.  Marlena has been sent frequently to the North and to Agreseus, and he seems to have a lot of influence there too.  He's had me skulking about in Egoria and Freeland.\"\n\nDanica blew out a low whistle.  \"That's why he's distracted.  He's venturing into dangerous territory there.  He\u2019s known in Egoria and Freeland, and not well liked.\"\n\n\"That could change.  He's got a lot of agents there.  Some places are watched, while others appear to still be secret.  I think he's using the well known ones to distract from the hidden ones that are doing his real work.\"\n\nDanica remembered something that had seemed meaningless at the time, but now felt ominous in light of their conversation.  \"I think I've seen people in Draxnog livery in the complex.\"\n\nCeles nodded.  \"Me too.  He's surrounding Freeland and Egoria, and trying to infiltrate from within.  He's planning to gain control over the entire continent.\"\n\nDanica tapped the map over the continent of Nipairo where they were now.  \"The world it seems.\"",
        "\"Something is building, and it's not going to be good.\"\n\nDanica sighed, \"And we're helping him.\"\n\n\"We don't have much choice,\" Celes observed.\n\n\"What hold does he have over you?  He's threatened to kill my family if I disobey him.\"\n\nCeles' eyes welled up, but she wiped them dry and took a deep breath while she composed herself.  \"He has my love's soul.  The knife his bastard assassin used to kill her trapped it.  He can, and has, tortured her and let me hear her screams.  If I don't obey, he causes her unspeakable agony.\"\n\nDanica wrapped Celes up in her arms.  \"That's terrible.  I'm so sorry.\"\n\nCeles melted into Danica's arms for a few moments, and Danica could feel the waves of sadness pouring out of her as the woman choked off a sob.\n\nWhen they broke from the hug, Celes said, \"My love tells me not to obey him for her sake.  She does it every time, even though he just tortures her worse for it.  I just can't bring myself to disobey him and cause her more pain.\"\n\n\"I swear I'm going to find a way to kill him one day.  He's too twisted and evil to live.  I've had something happen to me, and I've been able to learn true runes with almost no study ever since.  There's also the magic here in the library he can't steal and my psionic abilities.  Maybe we can find some way to destroy him he can't counter.\"\n\nCeles looked doubtful.  \"Maybe, but for now let's concentrate on what we're here for.  I'm willing to bet the longer we stay in here the greater the chance bad things are going to happen because we hid from him.\"\n\nDanica nodded and went to areas of the shelves she had never looked at before.  Celes went to another part of the room to look as well.  Around an hour later, Celes walked back to a table with a scroll.  \"Danica, come look at this.\"\n\nDanica walked over and looked at the scroll, which detailed a spell called Hellgate.\n\n\"Have you ever heard of it?\"  Celes asked.\n\nDanica shook her head in the negative.\n\n\"I've seen people use it, so I know Zoraster has it, but it's not anywhere we can reach it.  Only his inner circle seems to have access.\"\n\n\"It's some sort of teleportation spell, right?\"  Danica asked.\n\nCeles read through the description of the spell and summarized it, \"A very complicated and dangerous one.  It opens a portal into a pocket dimension that is on the fringes of the lower planes.  You can pass through it like a rift to nearly anywhere you know and leave it open so others can follow you.  You can also stop in the pocket dimension and use the window of the portal to scry areas you don't know and emerge there as well.  That's the dangerous part.  Beings of the lower planes inhabit the pocket dimension, which is unique to every spell caster.  They take on forms and obey the caster, but try to tempt them and corrupt them at the same time.  It's very subtle, and the longer you remain there the more dangerous it is.\"\n\nMoving her finger down the spell description, Celes continued, \"It's also impossible to detect someone scrying from within the spell's dimension, and time seems to move differently there.  You could spend years there and emerge from the portal seconds later back into our world.\"\n\n\"I can see why Zoraster has kept it away from us,\" Danica said and chuckled.\n\n\"Aye \u2013 and it's perfect for what we need to do now.  We can move the scrying portal from within and find the tomb below the sand without moving all of that windblown grit.  It won't drain us as much as teleporting when we have to take Telanor with us either.  He can just walk through behind us.\"\n\nDanica looked over the spell formula.  \"If we can learn it.  This is complicated.  It's making my head swim.\"\n\nCeles tapped the scroll.  \"We should try.  This spell has too many uses.\"\n\n\"I agree, and we might be able to use it against Zoraster too.\"\n\nCeles asked about something Danica had mentioned earlier then, \"You said you'd begun learning runes from something that happened to you \u2013 what was it?\"\n\n\"A table in the basement of a house in Montbank.  It was covered in True Runes, and when I touched it, they just snapped into focus in my head.  Ever since then, I've been able to learn others with very little trouble,\" Danica replied.\n\n\"Did Zoraster question you about it?\"\n\nDanica nodded and said, \"Yes, and he used a truth spell.  I managed to dance around the issue and not reveal anything about the table.\"\n\n\"He used the truth spell because he can't read your mind.  He can control you to some extent with magic, and I suspect he uses drugs to make even that possible.  It's the same with me, although I think your psionic abilities are why he can't sift through your mind.\"\n\n\"What about these?\"  Danica said holding up the amulet around her neck.\n\n\"They can store what we see and what we feel, but I don't think they can steal our thoughts,\" Celes guessed.\n\n\"Another weapon to use against him,\" Danica said with a crooked smile.\n\nCeles pursed her lips and said, \"I fear it's not enough, Dearie, but it's still good to know our minds are closed to him.  It's a good thing he fears psionics, because I wouldn't trust my defenses against a strong Psi.  You're a different story, though.\"\n\nDanica leaned back in her chair and mused, \"I don't understand it.  I was never really good at much of anything before I came here, and now I'm discovering I have all these abilities \u2013 all this power.\"\n\nCeles lay her hand on Danica's, patting it and saying, \"I don't understand it either, but my mother always said that there's a reason for everything.  You'll find out some day.\"\n\nDanica laughed, \"My mom always said that too.\"\n\n\"Let's see if we can learn this convoluted spell.\"\n\nDanica nodded and they sat down to study.\n\n{*****~~o~~0~~o~~*****}\n\nZoraster squinted and tried to make out something of the image in the mirror.  It was hazy, and he could see no details of the room \u2013 only that two figures were there.  He could make out sounds of speech, but they sounded like mumbling muffled in a pillow, making it impossible to decipher even one word.  Zoraster banished the image in the mirror with a snarl.  He was beginning to wonder at the wisdom of sending Danica and Celes to this place, now that they had found that cursed temple.\n\nHe paced for a moment, and then pushed the thoughts aside.  In truth, he held little fear of the pair despite their power and whatever secrets they held.  His twisted web of lies within lies and threats kept them in check, and he knew he possessed the power to destroy them if necessary.\n\nAny who stood against him would be destroyed, be they man or god.  All would be remade, brought to glorious perfection in the crucible of his will and power.  Every day his power and influence grew, the threats to his designs growing feebler by comparison.  The time was coming, so close he could almost taste it, yet still just out of his reach.\n\nLeaving the room, he walked into the hallway beyond and found Camilla walking toward him.  She bowed upon reaching him.\n\n\"Master, Marlena is back.  She succeeded in luring most of the soldiers away.\"\n\nZoraster curled his lip, \"Most?\"\n\nCamilla smiled, \"A few saw through her pretty little pictures.  They returned and saw your agents at work.  Most of them were killed quickly, but at least one appears to have escaped.  They said he had been driven mad by a spell, but nobody could find him after he ran.\"\n\nZoraster growled, \"The task was simple, and her power should have been strong enough.  Why did she fail?\"\n\n\"It seems she was a bit distracted.  A few of the men took liberties with the women of the village while the others went about their work, and it bothered her I guess.  Allow me to punish her, Master,\" Camilla purred.\n\n\"Garthak will administer her punishment.  Find that fool who escaped and kill him.\"\n\nCamilla pouted, \"That's work for one of your trained monkeys \u2013 send Danica.\"\n\n\"I can't afford to waste her skills on this.  Do as I command.\"\n\nWith that, Zoraster passed by Camilla into the private areas of his Inner Sanctum.\n\nCamilla raged, spitting out the words from between clenched teeth, \"You will die, bitch.  I will burn you,\" before vanishing with a snarl.\n\n{*****~~o~~0~~o~~*****}\n\nDanica sat studying the scroll, trying to get the words and gestures to congeal in her mind properly.  She and Celes had both locked their thoughts on the scrolls for several hours, unaware of anything else going on around them.  Two priests, including Harkhuf, had wandered in and out of the library without either woman noticing.  Danica was starting to feel the rhythm of the spell in her mind, and she thought she might just have it before the day was done.\n\nCeles' laughter broke Danica's concentration.  Danica turned toward her and Celes said, \"I've got it!\"\n\n\"Already?\"  Danica said with surprise.\n\n\"I've always had a knack for teleportation spells.\"\n\n\"I'm sort of close, but not that close.  Only one of us really needs to know the spell, so I can finish studying it later.  Let's see if it will do the trick.\"\n\nCeles nodded and moved her hands through the required gestures as she spoke the words of the spell.  When she intoned the last words of the spell and spread her hands wide, a shimmering disk of light appeared.  The disk was about six feet wide, a perfect circle of opaque light.  Danica could see nothing on the other side of the portal.\n\nCeles turned and took Danica's hand.  \"This shouldn't be necessary, but I'd feel better if we were in physical contact the first time we try this.\"\n\nDanica nodded and then pushed gently on Celes' hand, indicating she was ready to go.  They then stepped through the portal into another place.\n\nCeles looked around, drinking in the sights of the place.  The space within the portal appeared as a cavern with a beautiful glade enclosed within it.  Soft light shone from between the trees, coming from no visible source.  The walls of the place were plainly visible on all sides between the trunks of the trees, and the waterfall that fell into the pool directly in front of them just appeared out of nowhere from above.\n\nDanica wasn't paying attention to the scenery at all \u2013 she was looking at Celes.  Danica's breath caught in her throat and she stood in wonder, still holding on to Celes' hand.\n\nCeles turned with a curious smile and saw the stunned look on Danica's face, almost entangled in her turn by Danica's tight grip on her hand.  \"What's wrong?  Are you alright?\"\n\nDanica released Celes' hand and slowly raised her own toward the other woman's face, a face that appeared as it should be without Zoraster's curse.  Within this place, Celes was again young and stunningly beautiful.\n\nIt was only then that Celes realized what had happened to her.  She looked down at her hands, again smooth and young.  Reaching up to her head on the side opposite Danica's hand, she pulled a lock of hair before her eyes.  No longer was it the iron grey of age, her raven black hair shined with the glow of youth.\n\nReaching down, Celes tore open her robe and saw that her breasts were likewise firm and smooth.  She cupped them in her hands and felt Danica's hands rest atop the firm globes as she did so.  She looked up at Danica, and saw that the tears welling up in her eyes were matched in Danica's.\n\nDanica leaned in to kiss her, and Celes shuddered with an almost violent intensity.  Her juices flowed in a torrent, and she reached down to knead Danica's buttocks as they kissed.\n\nWhen they broke the kiss, Danica started to fumble with her linen robe, trying to get out of it while never letting her eyes leave Celes.\n\nCeles again shuddered, and then noticed something moving at the edge of her vision.  The movement broke her out of the state of bliss she had come under upon realizing that she was young again.  \"Danica, stop.  This isn't right.  It's the spell.  It's the demons,\" Celes said, looking in the direction of where she had noticed movement.\n\nDanica turned in the direction Celes was facing and they both saw the creature emerge from its hiding place at the same time.  It was a beautiful young woman, blonde haired, tight bodied, and completely unclothed.  She strutted toward them and they saw others appear at the edge of the place.  All were beautiful young women, and all were smiling brightly as they approached.\n\n\"Don't let us interrupt you.  We could bring you soft blankets to lie upon as you make love.  We could join you if you would like,\" the first woman Celes had noticed said as she reached them.\n\nCeles growled and pulled her robe closed.  \"That'll be enough of that, demon.  I know your tricks and I'm not falling for them.\"\n\nThe blonde creature pouted.  \"No tricks.  We just want you to be happy.  You seemed so happy in her arms with your breasts pressed so tightly together, your hands full of her soft flesh.\"\n\nCeles raised her hands and shouted, \"Get back, the lot of you!\"\n\nThe creatures cowered and stepped back, away from Danica and Celes.\n\n\"Is it an illusion then?\"  Danica asked, still having difficulty tearing her vision away from Celes.\t\n\nCeles shook her head.  \"No, it's real enough.  I can feel the difference now that I'm paying attention.  I truly am young again here.  I don't feel the pains and weakness, my body is firm and young.  I should have thought of this and been prepared for it.  It's an obvious temptation.\"\n\n\"For me too, and I'm not sure I want to resist it.\"\n\n\"Get dressed, Dearie.  These things would love it if we lost control and gave in to the temptation.  We would be absorbed in each other and the foul magic of this place would seep into our bones.  We would be almost devils in our own right by the time we stepped back out of this place \u2013 if we ever left at all,\" Celes said as she cinched her robe up tight.\n\nDanica nodded gravely and tore her gaze away from Celes to straighten her linen robe.\n\n\"You lot can fetch us a couple of bloody chairs is what you can do, and put on some clothes.  You can tempt me, but I can hurt you if I wish \u2013 I know that.\"\n\nThe women cringed and stepped backward, bowing.  As they bowed, gossamer wraps of cloth surrounded their bodies.\n\n\"That's not enough, you stinking scum.  Cover up your fake bodies or I'll...\"  Celes said, raising her hand.\n\nAgain, the creatures cringed and robes much like Danica's appeared on their bodies.\n\n\"Good enough.  Now get us a couple of chairs.\"\n\nThe creatures complied, manifesting the chairs.  Danica and Celes sat down in them, facing the pool.\n\n\"Now get out of my sight,\" Celes growled to the beautiful demons.\n\nDanica laid her hand on Celes'.  \"I want you so badly.\"\n\nCeles sighed.  \"I know \u2013 I want you too.  We need to concentrate on why we're here and get the hell out quickly, before we surrender to the temptation.\"\n\nCeles gestured, and the shimmering disk of light appeared again directly in front of them.  Celes moved her right hand in a slow circle, and the light spiraled in response.\n\nAn image slowly coalesced from the disk of light, and both women gasped.  Lying directly in front of them was Andrea, the toy Danica had made for her buried inside her, her back arched as she gasped in pleasure from an orgasm.\n\nCeles clenched her fist and screams erupted around her.  Celes opened her hand and said, \"If you do that again, I'll not relent so quickly.\"\n\nThe image vanished and Danica asked, \"Another illusion?\"\n\nCeles shook her head.  \"No, they just moved the focus of the portal.  It was real.  They were trying to tempt me again.\"\n\n\"Tempt us both.\"\n\n\"We've got to be careful using this spell.  It's more dangerous than I thought.\"\n\nDanica nodded and gestured toward the portal.\n\nCeles smiled and again raised her hand to make the lights in the portal swirl.\n\nThis time the image of sand and desolation they had seen earlier while scrying came into focus.  Celes concentrated and moved the focus of the portal downward to the ground.  For a few moments, all was black as the focus fell beneath the sand.  Celes concentrated and moved the viewing portal around, searching for the tomb beneath the shifting sands.\n\nAt last, a faint glimmer of light appeared as the portal found the tomb.  Danica and Celes looked around, but could see nothing save faint light coming from magical torches along the walls.  As their eyes adjusted, they could just make out the features of the room.\n\n\"That looks like some sort of offering nave,\" Danica observed.\n\nCeles nodded her agreement and added, \"A place for the family and priests to bring offerings for the deceased in the afterlife.  It's as good a place as any to enter, and I can find it instantly next time.  We can be in within moments and we won't have to stop here next time.\"\n\n\"Let's go get prepared,\" Danica said, rising from her chair.\n\n\"Aye, we need to get out of here before I bury my head between your legs,\" Celes said with a note of wistful longing.\n\n\"That's not a good argument to leave,\" Danica countered with a crooked smile.\n\nCeles sighed.  \"I know, but we have to do it anyway.\"\n\nCeles stood up and waved her hand before the portal.  The image shifted to show the library in the temple of Sekmamun, and she stepped through it with Danica right behind her.\n\nCeles looked down and sighed at her old body.  Danica put her hand on Celes' cheek and then kissed it as well.\n\n\"Let's go get what we need and pick up the cutpurse,\" Danica suggested.\n\n{*****~~o~~0~~o~~*****}\n\nDanica quickly gathered up the magic items she thought she would need for her and Celes.  She had constructed a false window in her room of the new outpost and carved runes on it allowing her to use it as a rift to nearly any location she knew well.  This was something she planned to do in her other houses scattered through the world when she found the time.\n\nShe and Celes then sat on the bed, with Telanor sitting in a chair across the room from them.  \"Your job is to keep your eyes open for common traps.  We'll watch for the magical ones that are sure to be there,\" Danica said staring at Telanor.\n\n\"I know what I'm here for.  You just keep the fireballs off my ass.\"\n\nCeles said, \"An' we're likely ta be facin' a gaggle o' mummies.  If'n I'm for bein' right, they'll be hurlin' spells and prayer magic at us too.  They'll be hurtin' from some fire, but I'm fer thinkin' t' priests an' t' wizard is gonna be protected from that a bit.\"\n\n\"We have no idea how strong they'll be, so we have to be prepared for powerful magic.  These things have been down there for hundreds of years, and the people here are afraid of them.  We better assume they haven't wasted those years and have been studying.\"\n\n\"Ye can be holdin' yer own a bit if'n ya need can't ye?\"  Celes asked Telanor.\n\n\"I've got Zoraster's charms to protect me from magic, I'm quick, and I don't think they'll like this much.\"  Telanor unsheathed a dagger and a short sword, both of which burst into magical flame.\n\nDanica rolled her eyes.  \"Okay, let's get this over with so we can get him out of here.  I don't want his stink fouling my room.\"\n\nCeles chuckled and cast the Hellgate spell.  She turned to Telanor and said, \"Yer prolly gonna be a bit shooked up when ye come through.  Just be walkin' through, don't be jumpin' or runnin'.  Stop soons as yer through ta get yer wits back about ye.\"\n\nWith that, Celes stepped through the portal.  Danica and Telanor followed right on her heels.  The group emerged on the other side of the portal and Celes immediately closed it.  Looking around, Danica realized they were indeed inside an offering nave \u2013 a place for the family to leave offerings that was not actually connected to the tomb.  A false door revealed the location of the actual tomb, however.\n\nDanica whispered, \"We can passwall through this, but let's see what's on the other side first.\"  She then whispered the words of her clairvoyance spell.  The false door shimmered in her vision as the magic revealed what was beyond.  Unfortunately, all Danica could see was a long sloping passageway that opened into a room at the bottom.",
        "\"Did ye feel that?\"  Celes quietly asked.\n\nDanica shivered from the touch of the magical probe that had touched them.  \"Yes.  Something knows we're here.  The magic alerted it.  Quickly, do you see any traps?\"\n\n\"Nothing magical, no runes,\" Celes answered.\n\n\"Nothing that I can see, if your magic is working right,\" Telanor agreed while drawing his weapons.\n\nDanica waved her hand and banished the clairvoyance spell, \"Let's go.  This narrow passage will funnel anything that comes after us.\"\n\nCeles reached out and the other two took her hand.  Concentrating on a ring she wore, she moved all of them through the false door.\n\n\"Warding runes, at the end of the hall,\" Danica revealed.\n\n\"Stay off the diamond shaped stones.  There are several near the door I can see now,\" Telanor warned.\n\nSounds emerged from below.  \"Get ready, something's coming,\" Danica said and raised her wand of fire.  Celes did the same, but Telanor had already dropped into a crouch with his weapons at the ready.\n\nTwo forms appeared in the room below, backlit by the magical torches.  As the shadowy forms moved forward into the doorway, the torches revealed them as mummified men wielding swords and dressed in hardened leather armor.\n\nAll three expected the appearance of the mummies, but none of them expected what happened next.  The mummies suddenly leapt forward at a run, moving with great agility toward the three intruders with weapons at the ready.  Celes and Danica both fired their wands, and the one on Danica's side actually dodged the flaming bolt that erupted from it.  The mummy Celes fired at hurtled backwards in the passageway and caught on fire.\n\nThe creature Danica had missed reached them in moments.  Telanor lashed out with his blazing sword at the same moment Danica discharged the wand again.  The creature erupted in flame the same as the one Celes had blasted.\n\n\"What the fuck?  I thought the walking dead were supposed to be slow.  What in the hells is this bullshit?\"  Telanor cursed.\n\nDanica noticed a faintly shimmering aura appearing above the two mummies, which had ceased their twitching and now lay still.  In a few moments, the shades took on a vaguely manlike shape.\n\n\"Oh no,\" Danica cried out and immediately cast a spell.  A burst of spray erupted from Danica's fingertips and extinguished the burning mummies.\n\n\"What the hell did you do that for?\"  Telanor asked.\n\n\"Don't destroy the bodies.  Use the positive forcebolt wand Celes.  Telanor, try not to set them on fire.  Their Ka spirits were coming to avenge the desecration of the bodies.  We aren't ready to deal with intangible enemies at the moment.  The Ka is very powerful.  We're going to have to give the corpses a proper burial when this is all over.\"\n\nThe mummies straightened as the magic animating them seeped away, the corpses taking on the natural shape the mummification should have left them in without the dark magic that animated them.\n\n\"Great, more complications,\" Telanor grumbled as Danica and Celes changed wands.  Hearing nothing for the moment, the group advanced down the hallway toward the room at its end.  \"Don't forget the stones,\" Telanor hissed.\n\nThe three slowly moved down the corridor, carefully listening for more of the tomb's guardians.  When they neared the doorway, Danica and Celes both cast spells to counteract the runes of warding so they could safely pass through the doorway.  \n\nWhile the women worked their magic, Telanor spread some sort of paste in the joints between the diamond shaped floor stones and the stones surrounding them.  As he finished sealing each stone, he tapped the paste with a tiny wand of bone, causing the paste to harden.  Checking his location and that of the women each time, he pressed on each stone, slowly and steadily putting his full weight on it.  Each held, proving that the traps were disabled.  Only one remained when the two women finished rendering the runes harmless.\n\nCeles looked down to see what Telanor was doing and he said, \"Little present from the boss.  This stuff seals up the trigger stones so they can't set off whatever nasty things would come out of those holes in the walls.  You never know when we may have to be running back this way.\"\n\nSuddenly Telanor spit out a curse and brought his weapon in line with the door.  Celes only had time to turn and see another mummified warrior as it completed a leap toward them.  Danica raised her wand, but not quickly enough.\n\nThe creature parried Telanor's strike on its curved sword, and the action brought its weapon in too close to Celes for her comfort.  She sidestepped and realized her mistake just a fraction of a second too late.\n\nAs Telanor brought his weapon in line for a strike and Danica aimed her wand, Celes' foot came down on the diamond shaped trigger stone.\n\nTelanor's flaming weapon forced the creature to parry, the last action it would take, because Danica's wand discharged and the mummy instantly slumped to the ground.  Wooden spears erupted from the holes in the walls and Celes screamed, bringing her hands up in front of her in a defensive gesture.\n\nThe sound of clattering greeted Celes\u2019 ears as the wooden spears dropped harmlessly to the floor somewhere in the room beyond the hall.  Celes stood with her arms still raised, looking at her hands as if they had betrayed her.\n\n\"That was too close.  Let's get out into the next room where we have more room to maneuver,\" Danica suggested.\n\nCeles lowered her hands, looking down at them one last time.  \"We should put up missile shields,\" she said without her put upon brogue.\n\nDanica nodded her agreement and the two women cast the spell.  Telanor alternated between looking at the stiffening mummy and Celes with equal curiosity.\n\nThe three moved out into the room, seeing every inch of the walls covered with paintings and inscriptions.  The roof was covered in carved stars from one end to the other.  \"They're spells and rituals to help the deceased enter the afterlife.  Why would they expend the effort when they intended to become walking dead?\"  Danica said while examining a painting of soldiers standing before a god.\n\n\"Ain't no assurance 'twas gonna work, or keep ta workin'.  Makin' sure they was covered if'n anythin' went wrong.\"\n\n\"That accent comes and goes, doesn't it?\"  Telanor said with a chuckle.\n\nCeles turned and stared at Telanor with a look that could have melted stone.\n\nTelanor backed up a step and said, \"Hey, just an observation.  I'm supposed to be keeping my eyes and ears open, remember?\"\n\nDanica pointed toward a rectangular spot that was a slightly different color from the rest of the Eastern wall.  \"There are wards on that sealed door over there.\"\n\n\"This could be bad.  There are ways to hide traps in the plaster of sealed doors like that.  They are hard to find, and even harder to disable,\" Telanor grumbled.\n\n\"There could be warding charms embedded in the plaster that would be hard to see as well,\" Celes added.\n\nDanica thought for a moment and then said, \"I don't think that just shielding ourselves and blasting it is a good idea.  I really think we're going to need this tomb as intact as possible when we're done if we don't want to fight the Ka.\"\n\n\"Isn't this just a perfect little crawl,\" Telanor sighed sarcastically.\n\nDanica raised her eyebrows and stared hard at the doorway.  \"Wait a minute, why would it be sealed?\"\n\nTelanor laughed and said, \"Stinking illusion, I see it now.  Damn good one though.  Tripwire at the bottom of the door.\"\n\n\"I'll get the wards.  Keep your eyes open for company, Danica.  I don't want them sneaking around the corner on me again.\"\n\nCeles cast the spells to remove the wards while Danica cast a spell of clairvoyance to keep an eye out around the corner.  \"More warrior mummies, but they're just standing there stiff as boards in a room connected to the one beyond the doorway,\" Danica warned the others.\n\nCeles finished disarming the wards.  \"What about now?\"\n\nDanica shook her head.  \"Nothing, they may as well be statues.\"\n\nTelanor bent down and carefully disabled the tripwire trap.  \"I don't know what this was going to trigger, but I can tell you it was probably nasty.  This is the biggest tripwire I've ever seen.  Without the illusion it would have been so obvious as to be useless.\"\n\nCeles approached, wand ready in her hand.  \"Why disable it then?\"\n\nTelanor rolled his eyes and snorted, \"Same reason as the last bunch, just in case we have to run back this way.  Never leave a working trap behind you.\"\n\nCeles nodded, understanding the logic.  \"The warrior mummies must have been animated for nothing except guarding.  They probably don't move until you move into the zone they're warding.  They may as well be golems.\"\n\n\"Turn right when we enter and they\u2019re straight ahead.  I see two, but there could be more.  Let's try to take down the first two before they get a chance to move.\"\n\nCeles raised her wand to indicate she was ready, and both women stepped out into the room beyond.  They turned and fired on the two mummies, dropping them before the creatures had a chance to do more than twitch.\n\nTelanor entered behind the women, scanning the room.  \"Now this is more like it.\"\n\nThe room was filled with funerary goods.  Danica saw the glint of gold and gemstones everywhere she looked.  Every stick of furniture was covered in gold leaf.  Small statues made of pure gold sat in niches in the wall.  Gem encrusted ceremonial staves stood in racks.  The room held a king's ransom in gold and precious gems.\n\nDanica turned toward Telanor.  \"I said the tomb needs to remain intact, and that includes all this.\"\n\n\"Seems a damn waste to leave all this down here with moldering corpses,\" Telanor snorted as he continued to drink in the sight with obvious avarice.\n\n\"Tell Zoraster to send you back to get it then.  You can fight the Ka for it,\" Danica snapped.\n\nTelanor snorted and changed the focus of his observations, looking for traps and their triggers.\n\n\"There are wards all over this stuff.  It would take us days to disable them all and get this stuff out if we even wanted to,\" Celes revealed while scanning the room.\n\nDanica looked toward the doorway where the mummies had stood guard.  \"Wards on the doorway again, with a hallway beyond.\"\n\n\"There are physical traps on most of this stuff too, and stay off the square stones near the doorway.  They're smoother than the ones around it, but you'll have a hard time seeing them unless you're careful.\"\n\nDanica cast the first of the spells to disable the wards.  \"This is going to take forever if we have to stop and disable wards on every door.\"\n\n\"Especially if we just keep coming to treasure troves.  We need to find the actual crypts,\" Celes agreed and then stiffened.\n\nTelanor noticed Celes' reaction, \"What's your problem?\"\n\n\"I'm not sure, but stay behind us.\"\n\nCeles cast an elemental shielding spell between the three of them and the door, holding back from finishing the spell until Danica completed her spell casting.\n\nAs soon as Danica completed her spell, Celes completed hers.  Magic immediately assaulted the shield, but it held firm against the onslaught.\n\nThe mummified priests appeared, seven carefully wrapped corpses in all their holy regalia, continuing to hurl dark spells at Celes' shield.  Danica aimed her wand and the mummies started to drop.  Celes, finding that she had little trouble maintaining her shield, did the same.  Within a minute, all the corpses lay still upon the floor.\n\nDanica lowered her wand when no more enemies approached.  \"Something is seriously wrong here.  Why would the priests of the Necropolis waste so many resources to seal this place if this is as dangerous as the mummies are?\"\n\n\"I doubt we\u2019ve faced the high priest yet, or the wizard for whom they were all sacrificed,\" Celes noted as she lowered her wand as well.\n\n\"Don't look a gift horse in the mouth,\" Telanor grunted as he moved to disarm the traps.\n\nTelanor had nearly finished sealing the trapped stones in the floor when the hair on his body stood on end.  He rolled away from the door, hearing the two women begin to chant at the same time.\n\nA lightning bolt crashed into the shield summoned by Danica and Celes, scattering into tendrils around its protective globe.  The high priest, wearing an ornate funerary mask decorated with gold and precious metals and wielding a serpent tipped staff, stepped into their view, beseeching his dark god in a hollow tone once more.\n\nCeles aimed her wand, but the serpent staff the mummy held flashed and her spell's ray scattered into motes against its protective magic.\n\nDanica raised her wand, but dropped it quickly to chant and bring a globe of invulnerability in place around herself, Telanor, and Celes.  The mummy had summoned a poison cloud, and the existing magical protections would have allowed it to seep around the edges to affect those the shields protected.\n\nCeles ceased chanting the spell she had begun to cast, her eyes widening with surprise as she considered the speed with which Danica had summoned the powerful globe of invulnerability.  \"We've got problems.  I don't know what kind of magic that staff has on it, but it's protecting him without intervention.\"\n\n\"We're also stuck in here until that poison cloud dissipates.  We can't even attack through this shield,\" Danica said and stomped as she tried to study the mummy through the green fog outside the globe.\n\nA voice arose in Danica's mind.  What about getting that staff away from him with your mind?\n\nDanica thought back, I can't see well enough through this mess, and I'm not sure it's a good idea with him here.  Her emphasis on the word him carried with it images of Telanor, leaving Celes little room for doubt.\n\nI wasn't thinking.  You're right.\n\nAn idea occurred to Danica then.  Maybe he can be the solution rather than the problem, though, she thought to Celes.\n\n\"Have you taken steps to resist poison, Telanor?\"  Danica asked aloud.\n\n\"Hazard in my line of work \u2013 so yeah, I've built up immunity.\"\n\n\"How about magical poison?\"  Danica continued.\n\n\"I've got some protection from Zoraster too,\" Telanor replied.\n\n\"Think you can get that staff away from our adversary?\"  Danica asked him.\n\n\"Probably, if I survive getting there.\"\n\nCeles stepped forward, peering through the poison fog, \"I can see the thing well enough to teleport him there, and the wards here shouldn't prevent it.\"\n\n\"But you don't have his immunity,\" Danica said and then stiffened as another lightning bolt slammed into her magical shield.\n\n\"I don't need to go with him.  I can teleport him there alone if I can see where I'm sending him,\" Celes explained.\n\nDanica looked at Celes with obvious surprise.  \"I didn't know you could do that.\"\n\nCeles shrugged.  \"I'm good with teleports, just not much use for doing this usually.\"\n\nDanica turned back to Telanor and asked, \"Can you handle a teleport right on top of it?\"\n\n\"No problem.  Just get me the fuck back here as soon as I get it away.  I'm not really keen on testing Zoraster's charms against dusty there for long,\" Telanor requested.\n\nDanica asked him, \"Ready then?\"\n\nTelanor nodded and Celes chanted.  Telanor vanished and Danica heard the sounds of metal clashing.  Both women peered through the poisonous cloud, trying to see what was going on.  They could make out the two combatants, but not much else.\n\nCeles heard Telanor scream, \u201cGet me the fuck outta here!\"  She concentrated on Telanor to teleport him back inside Danica's invulnerability globe as soon as she heard him request it.\n\nWhen Telanor reappeared, he was wearing a wide smile, holding his sword in one hand and the staff in the other.  He laughed and said, \"Dusty obviously never trained much in weapons.  I managed to knock it out of his hand and catch it before it hit the floor.\"\n\nDanica shrugged off a fireball exploding against her protective magic.  \"Its keeping that poison cloud in place.  It realizes it has us pinned down, and its obviously protecting the crypts.\"\n\nGet ready to drop the globe of invulnerability and strengthen the shield spell, I'm going to conjure up a wind wall, Celes thought to Danica.\n\nDanica smiled and thought back, It's too bad he doesn't breathe.  I'll blast him as soon as I can see him.\n\nCeles turned to Telanor, \"Get behind me.\"\n\n\"Whatever you say,\" he replied and moved as she had indicated.  He examined the serpentine staff as he did so.\n\nDanica listened carefully to Celes' chant; ready to drop the globe of invulnerability the moment Celes completed her spell.  She also held her wand at the ready.\n\nCeles completed her spell, Danica dropped the globe, and the cloud sped away, borne on the gust of wind from Celes' spell.  Danica concentrated and poured more power into her shielding spell, just in time to block a ray of energy hurled at it by the mummy.\n\nThe cloud soon blew away and scattered enough for Danica to see her adversary.  Aiming her wand, she discharged it.  The mummy collapsed to the ground and stiffened.\n\nTelanor moved forward to disarm the traps near the doorway.  \"If it weren't for all the traps, we could have already been out of here.  I think these things\u2019 powers are as dried up as their bodies.\"\n\nDanica examined the wards on the door in preparation to remove them.  \"They're using strong magic, but it hardly seems powerful enough to warrant all the precautions the Necropolis priests have taken.\"\n\nCeles noted, \"I'm willing to bet the care is mainly due to the wizard who is responsible for all this, and the thing we've been sent to steal.\"\n\n\"Wonderful \u2013 we're probably handing a madman another deadly weapon.  I hate this,\" Danica said before beginning the chant to disarm the wards.\n\nTelanor looked at Danica curiously.  \"You don't work for Zoraster?\"\n\nCeles turned to scowl at him.  \"Not willingly \u2013 not that it's any of your business.\"\n\nTelanor chuckled and finished disarming the last of the traps in the floor.  \"Sure can't tell from where I'm sitting.  That's what happens when you get attached to people, they get used against you.\"\n\nCeles was not amused that Telanor had read them both so well.  She scowled at the thief, and he chuckled once more before moving off to a corner of the room to examine the serpentine staff.\n\nDanica rendered the wards powerless a moment later, and she entered the hallway beyond with Celes right behind her.  Danica saw no more wards here, and knew that this was the crypt they sought.\n\nTelanor announced there were no mundane traps on the doors or inside that he could spot.  He then went back to fiddling with the serpentine staff.  The two women examined the crypts, determining that they were those of the priests and the warrior mummies.  A larger crypt was obviously that of the high priest, having its own offering nave and treasure trove.\n\n\"We've missed something, obviously,\" Celes noted when they didn't find the wizard or the prize they sought.\n\n\"Probably another sealed door covered in illusions back in the first room,\" Danica agreed.\n\nTelanor let out an explosive laugh and the women turned to see him holding out the staff proudly.  The device had collapsed into a small rod about the length of his forearm.  \"I knew this damn thing was too unwieldy to drag around like that most of the time.\"\n\nDanica walked back toward the doorway of the crypts.  \"Let's go back to the first room and find the rest of this tomb so we can get out of here.\"\n\nTelanor slipped the rod into his belt with a wide smile and followed the two women back to the central room.\n\n{*****~~o~~0~~o~~*****}\n\nZoraster paced, somewhat frustrated that he was unable to track the progress of his pawns in the tomb.  The magic that sealed the crypt also blocked his ability to scry within.  Celes had also learned the Hellgate spell, something he had quite specifically withheld from her and Danica.  There were too many probabilities with that spell for him to conscience allowing them to learn it.  Now, that decision was taken from him.",
        "The obelisk was critical to his plan.  He had obtained all else that he needed save the obelisk and the stone.  Once they were in his possession, none could stand against him.\n\nTurning to another mirror, he activated its magic and peered within.  The bearded face of Darkniciad turned almost immediately in his direction, seeking the intrusion he sensed in his inner sanctum.\n\nZoraster banished the magic of the mirror with a thought and a curse.  Can I spy on nothing this day?\n\nStill cursing, he swept out of the room in search of a way to vent his anger.\n\n{*****~~o~~0~~o~~*****}\n\nCeles reached into a bag at her side and pulled out something familiar to Danica, one of the charms she had made during their time at the Forge that enabled them to ignore illusions.  Celes winked at Danica and slipped it around her neck.  She instantly saw the door directly across the hall from where they had just come.  \"Right there, directly in front of us.\"\n\nDanica looked, and knowing where the illusion was, she could now easily see it as well.  \"Time to see if we can see anything without walking into his vision.\"\n\nA few quick gestures summoned up Danica's spell, but she grabbed her head and yelped when something broke the magic almost instantly.\n\n\"Wards?\"  Celes asked, coming to steady Danica.\n\nDanica shook her head.  \"No, He broke my spell.  I could feel the direct attack on the magic, and feel the malevolence behind it.  This wizard has centuries of bottled up hate and he's waiting to take it out on us.\"\n\n\"Wonderful,\" Telanor said with obvious sarcasm.\n\nA loud, rattling laugh startled them all, emerging from somewhere beyond the doorway.  This was followed by a voice that could have only come from beyond the grave, \"Come, thieves, I would speak with you before you die.\"\n\n\"Yeah, we'll come in and have a cup of tea and discuss the manner of our dismemberment.  Somebody thinks our brains are as dusty and dead as his,\" Telanor whispered.\n\nAgain the haunting laugh sounded.  \"Come now, no harm shall befall you until you cross my seal in the room beyond.  I would hear of the world above before your avarice overcomes you.  Centuries have passed since last I beheld the sacred sun.\"\n\nDanica signaled for her companions to lean in close and whispered, \"It's obvious he knows we're here, and he's ready for us.  We may as well prepare and just walk out there.  If he is telling the truth, all the better, we'll know more about what we face.\"\n\n\"I don't have any better ideas,\" Celes noted with a shrug.\n\nTelanor just shook his head and checked all the rings, charms, and other magical protections on his person.\n\nDanica and Celes armed every protection spell they could think of, pouring as much power into them as they could while maintaining the integrity of all the spells.  They too checked their magical protection items, and then strode forward together into the room.\n\nDanica could see no obvious wards here, just thousands of carved inscriptions on every wall.  To the left, she saw their adversary standing just beyond a doorway, surrounded by the glint of gold.\n\nThe mummy was dressed in a fine robe, trimmed with gold.  Only the creature\u2019s desiccated hands were visible, everything else hidden by the robe and the cowl.\n\n\"I do hope you can resist your urge to face me and die \u2013 for a time,\" the mummy said and laughed.\n\n\"We don't have any urge to die at all,\" Danica said in an attempt to draw out the conversation and give them time to learn more about the creature if possible.\n\n\"You will come in time.  No mortal can resist the splendor of my treasure.  Then shall I slay you and drink your life essence.  What of the world above \u2013 do the fools of the Necropolis stand guard over my prison still?\"\n\n\"They're there, and it made it quite difficult to get in here,\" Danica answered.\n\nThe creature spoke again, \"So, you do not come at their behest \u2013 such a pity.  I have not fed upon the sweet nectar of life since they sealed me here with their accursed powers.  They could not destroy me, so they entrapped me.\"\n\n\"You must have been much feared,\" Danica led.\n\n\"I am power beyond any which has ever walked the world.  The gods themselves tremble in awe of my might, thus they have sent their lackeys to seal me here.\"\n\n\"Should've spared some power for your buddies, they fell easily enough,\" Telanor said beneath his breath.\n\nThe creature apparently heard the thief and turned toward him saying, \"You are powerful to have defeated my guardians, but even their great power was but a grain of sand compared to my power.\"\n\nDanica thought to Celes, I get the feeling this may not be as difficult as we thought.  Perhaps magic has advanced much in the time he has been sealed here.  They obviously feared and could not defeat his servants either, and we had little trouble, really.\n\nJust keep him talking, see what more we can learn, Celes thought back.  \"I imagine you have more than gold amongst your treasure,\" Celes then said aloud.\n\nThe mummy's hollow laugh echoed through the tomb once more.  \"So, it is my great magic you seek, not my gold.  A pity your greed already begins to overcome you.\"\n\n\"Perhaps something greater even than the trappings of your Art...\"  Danica led.\n\n\"You seek the obelisk?  Foolish mortals, it will not abide your living touch,\" the creature informed them.\n\n\"So that's why you gave up your life, to possess it?\"  Danica asked.\n\n\"The Godsbane possessed me!  Forced me to become the walking...\" the creature stiffened and began to tremble.\n\n\"Think you hit a tender spot,\" Telanor mumbled as he moved to further interpose the women's bodies between him and the mummy.\n\nThe creature began to chant and Danica said, \"So much for bargains,\" as she raised her wand simultaneously with Celes.\n\nBoth wands and the wizard mummy's spell came to life at the same time.  A fireball exploded against Danica and Celes' shields.  In the explosion of flame, Danica could not see if they had hit the mummy.\n\nWhen the roar of the flames died down, Danica could again hear chanting.  This time, Celes fired before the mummy could complete its spell.  When the ray from the wand reached the mummy, it dissolved into motes of energy, runes flaring to angry red life on the arms of the mummy, and from beneath its cowl.\n\n\"Bloody hell \u2013 it has rune tattoos protecting it!\"  Celes spat as a chain lightning spell crackled around her shield.\n\n\"Be ready to use the Hellgate.  Don't exhaust your power, Celes.  We'll have to fight it with offensive magic and try to overcome its defenses.  If the Ka comes to attack, we'll have to escape and find the means to combat it.  I have a suspicion we won't have to, though.\"\n\nCeles offered a curious look to Danica, but saw her friend was already chanting a spell.  Celes then started her own chant as well.\n\nDanica's fireball dissolved before the power of the mummy's runes, as did Celes' lightning bolt.  The acidic spray and crushing fist spells that followed were no more effective.  All the while, the magic of their adversary \u2013 fireballs and lightning bolts \u2013 crashed against their shield.\n\n\"He does seem rather limited,\" Celes observed as she considered what spell to hurl next.\n\n\"If it wasn't for those damn runes protecting him from magic, I think we could have felled him by now,\" Danica said as she drew forth a different wand.\n\nDanica heard a whistling sound pass by her ear and saw a dagger bounce point first away from the neck of the mummy.\n\n\"Steel doesn't seem to work either,\" Telanor noted while putting away a second dagger he was about to hurl.\n\nA thought occurred to Danica, \"Celes, keep us protected.  I have an idea.  I need time to construct a window rift.\"\n\n\"Hurry, the thing doesn't seem to have much in the way of variety, but it's relentless, that's for sure.\"\n\nCeles turned all her attention to maintaining the shielding spells while Danica hurried back to the doorway.  As quickly as possible, Danica pulled forth the items she needed and cast her spell.\n\nWhen the rift opened, Danica directed it to a low shelf in her lab.  She reached through and retrieved several vials of Heraklan blessed holy wine.  Once she had all four vials situated in a makeshift basket made of one of her robes, she returned to the others.\n\n\"Telanor, go back into the other room.  Keep an eye out, because I think I heard something stirring.  We may not have found all the mummies.  Yell if you see anything,\" Danica instructed.\n\nTelanor nodded and hurried back into the previous room.  Celes turned to Danica and raised an eyebrow.\n\nI just don't want him to see this, Danica thought to Celes.  She then concentrated and caused all five vials of blessed wine to hover in the air with her mental powers.  She stared hard at the attacking mummy, and when it began to chant the words of another spell, she sent the vials hurtling toward the creature.\n\nAs the vials reached the mummy, Danica sent a burst of power at them and shattered the vials.  The blessed liquid within bathed the mummy, and it moaned in rage.  Smoke drifted from beneath the creature\u2019s robes as it writhed and tore at the cloth.\n\nDanica then raised her wand and blasted the creature with its magic.  The runes did not flare to life this time, and the mummy toppled to the ground.\n\nDanica waited for a moment, and then cautiously crept forward.  Both women raised their wands when the mummy twitched, but relaxed when they realized it was only stiffening back into the natural configuration the mummification of its body caused.\n\nCeles had guessed what happened and asked, \"The holy water broke the rune structure?\"\n\nDanica nodded.  \"I was aiming for the chest and head, guessing that would be where the heart of the structure would be.\"\n\n\"Things are awful quiet in here,\" the women heard from behind them.  They turned to see Telanor looking into the room.\n\nDanica waved Telanor toward them.  \"It\u2019s down.  Come make sure you don't see any traps.\"\n\nAfter a thorough examination, the three found no traps or wards in the area, save upon the treasures stored within the tomb.  Celes found the obelisk behind the wizard mummy\u2019s sarcophagus.\n\nTelanor took one look at the object and backed away.  \"Hey, this is your deal.  That damn thing is making my insides squirm.  I'll be out there admiring all the stuff we'll be leaving down here to rot.\"\n\nCeles whispered, \"Can you feel it, Danica?\"\n\nDanica shivered and nodded.  \"It's sentient in some way, and screaming for blood.\"\n\nCeles warned, \"We shouldn't touch it.  If Zoraster wants to fight it, fine with me, but I'm not battling for control of my own mind with it.\"\n\nDanica walked toward the doorway to cast her window rift spell again.  \"I have a lead lined box in my lab that it should fit in.  We'll try that.\"\n\n\"Not a bad idea.  I have a gold lined one if that doesn't work,\" Celes offered.\n\nDanica cast her spell and retrieved the box.  She sat it down on the sarcophagus and opened it.  Then with Celes watching at the doorway for Telanor, Danica used the power of her mind to place the obelisk in the box and shut the lid.\n\nCeles smiled and said, \"That did it \u2013 I can't feel the thing.  It was giving me goose bumps from across the room.\"\n\nDanica slipped the box into her bag of holding.  \"We should get the mummies into their resting places.  The Ka will become more active as it gets close to night, and I'd prefer the bodies were properly laid to rest by then.  Even without the bodies being desecrated, they still might attack, and they aren't confined to the tomb like the bodies.\"\n\n\"Wouldn't hurt to leave an offering either, I suppose.  Give them a reason not to chase us around,\" Celes suggested and jingled a purse on her belt.\n\nTelanor complained the entire time they were depositing the bodies into the crypts, even though Danica and Celes used their magic to make the bodies weightless and all he had to do was guide them in place.  Danica used a spell to copy the scrolls of magic and research within the tomb, and then returned the scrolls to their places.  Celes left a few coins with each body as an offering, and then cast the Hellgate to return them to the city.\n\nThe thief almost immediately used his teleportation orb to leave, knowing his presence was not welcome, and not caring at all for the climate of the area.  Celes and Danica settled into baths to wash away the grit and sweat on their bodies.\n\n{*****~~o~~0~~o~~*****}\n\nZoraster appeared at Telanor's side almost the moment the thief materialized in his quarters.  The Archmage asked, \"Did they retrieve the obelisk?\u201d\n\n\"Yeah, they got the thing.  Any chance of getting back in there to loot that place?  It's packed from one wall to the other with gold and gems.\"\n\n\"For what reason did you not plunder the riches already?\"  Zoraster inquired.\n\n\"Something about Ka coming to spook us if we did.  All that stuff is protected by traps and magic too,\" Telanor explained and then shrugged.\n\nZoraster mused, \"The Ka could be dangerous foes, but I think it was as much Danica's softhearted nature as anything.  Were all the creatures destroyed?\"\n\n\"Knocked down, that's it.  Then she insisted we shelve them up in their boxes before we left.\"\n\nZoraster chuckled.  \"Ever considerate, my little rose.  You can remember a location within the tomb well?  Somewhere you can picture with perfect clarity?\"\n\n\"Oh yeah, there's a damn pretty sword that's all gold and gems.  I can remember that spot like I was looking at it now.\"\n\n\"I will determine whether it is possible to retrieve the treasure and inform you if I believe it is worth the effort.\"\n\n\"Oh yeah, I grabbed this up from one of the walking cadavers,\" Telanor said while handing over the serpentine staff, still in its rod form.\n\nZoraster examined the item and then handed it back to Telanor, \"Interesting.  I have little use for it, but you should maintain it.  It will absorb nearly any hostile magic directed against you, and can release that power to cancel magic as well.  You would be wise to utilize its second ability with regularity, because the release of energy prevents its final enchantment from activating.  Should the eyes ever glow red, I would suggest you divest yourself of it immediately, preferably in the direction of a foe, and flee by the swiftest means possible.\"\n\n\"I'll keep that in mind,\" Telanor said as he tucked the wand back in his belt.\n\n\"Now, I believe I have something to retrieve from your unwilling companions.\"  With that, the Archmage vanished from Telanor's quarters.\n\n{*****~~o~~0~~o~~*****}\n\nDanica heard the chime announcing a visitor immediately upon stepping from her bath.  She quickly dried with a towel and pulled on fresh clothing just as Zoraster appeared in her doorway.\n\nIt took a great deal of self-control not to show evidence of her surprise when the Archmage paused with a look of irritation at the doorway to her room, pulling an ornate wand of ivory from somewhere within his robes before proceeding.\n\n\"I will have the obelisk now,\" he said to her.\n\nDanica gestured to where the box containing the item rested on a dressing table.\n\n\"A lead lined box.  I trust you found my prize disturbing?\"\n\n\"It's sentient, and none too friendly.  We didn't feel like waging a war for our souls with it,\" Danica explained.\n\n\"A wise caution,\" Zoraster admitted as he picked up the box and opened it.  \"Well, my little trinket, you do seem a bit angry, don't you?\"\n\n\"What now?  Shall we go desecrate a temple and tempt our fate further?\"  Danica asked with a little of her fire rising up within her.\n\n\"Your freedom is granted, and I have no need for your services at this time.  Inform Celes the same applies to her,\" Zoraster said absently, and then vanished with the box.\n\nDanica raised her eyebrows in surprise.  She had never seen her tormentor so absorbed with anything before.\n\nCeles walked into her room, \"Did I hear Zoraster?\"\n\n\"He's gone already.  Our freedoms are granted and it seems our time is our own.\"\n\n\"As much as it can be,\" Celes said with a sigh.\n\n\"Well, now that we're clean and the heat of the day is cooling, let's get something to eat and I'll show you around the city.  The artwork and statues here are breathtaking.\"\n\nThe two friends ate a light meal, Celes forced to avert her eyes from Hathortari often because of the painful feelings the woman sparked within her.  Danica could feel the desire and pain coming from Celes in waves, and quickly led her from the house once they had eaten.\n\nOnce outside, Danica brought the subject up, \"I'm sorry Tari pains you so much.  Maybe we should just go, once we take a look around.\"\n\nCeles shook her head.  \"No, I'll be fine.  It just takes time for me to control myself around someone new.  I've been able to sit and talk to Andrea for hours of late.  We seem to share some similar interests.  I've been able to fight past my attraction to her and concentrate on our friendship like I do with you.\"\n\nA bright smile spread across Danica's face.  \"That's wonderful.  We should have her over to my rooms as soon as we return.  I've never had the chance to cook for her, and odds are I'll need to recharge her ring if she has been seeing her man as often as she had been last time we talked.\"\n\n\"And Marlena \u2013 the poor girl needs friends, and we're about all she has.  She isn't coping with her new life as well as we are.\"\n\n\"I think we cope too well sometimes,\" Danica said aloud, and then spoke into Celes' mind, I need to tell you something else, but we should go to the temple to speak of it.\n\nCeles acknowledged the mind contact with a sort of mental nod that made Danica smile wide and laugh.  Danica noticed something just in front of Celes then and cried out, \"Look out, scorpion!\"\n\nCeles was just about to step on the creature when Danica's cry alerted her to it.  She yelped in surprise and sidestepped, pushing her hands forward in an instinctive warding gesture toward the creature.\n\nDanica's mouth popped wide open when the scorpion vanished and instantly reappeared several feet away.\n\nWe need to go to the temple \u2013 now, Celes thought, the contact filled with a mixture of pain and anger.\n\nDanica acknowledged the thought, and the pair immediately proceeded to the temple of Sekmamun.\n\n{*****~~o~~0~~o~~*****}\n\nZoraster sat on a plain wooden chair, before a plain wooden table, in a small, featureless room.  On the table before him sat the box he had retrieved only moments earlier from Danica.  His heart beat quickly in anticipation, and his mouth watered.\n\nOpening the box, he stared at the obelisk and shivered as he felt the waves of malevolent desire rolling from it, enticing him to pick it up and promising to suck his very life from him at the same time.\n\nHe stared at the object, steeling his will against its intrusions into his mind.  Almost instantly, he felt the aura retreat, and he smiled.  Continuing to bear down with his will, he ensured he was in complete control of the situation \u2013 and of himself.\n\nAt last, he reached toward the box.  \"You will be mine, and through you all shall  be within my grasp.\"\n\nZoraster grasped the obelisk and stiffened as the violent mental battle began \u2013 practiced and powerful Archmage against ancient evil artifact.\n\n{*****~~o~~0~~o~~*****}\n\nCeles sat down heavily in a chair, and Danica sat down opposite her.  \"How did you do that?\"  Danica asked.\n\nCeles sighed, and then grit her teeth.  \"I'm a witch.  That is my power, I can move things \u2013 teleport them with a wave of my hand.  I thought I was rid of it forever.\"\n\nDanica\u2019s expression betrayed her confusion as she said, \"I don't understand.  I thought witches needed potions and crystals and such to work magic.  And why would you want to be rid of your power?\"\n\nCeles threw up her hands, and clenched her fists.  A second later, a look crossed her face suggesting that she was worried about having made the gesture.  \"Mother always said I had a special destiny \u2013 that our line was destined for some grand task.  She was a witch as well, though her powers were mental, like your psionic abilities.  She was killed by a demon and I swore I was done with my destiny and being a witch altogether.  My grandmother died the same way, and probably every other female member of my family.\"",
        "\"So you just stopped using your power?\"\n\nCeles shook her head and told her, \"It wasn't that simple, as you can tell now that it has been forced back on me.  The power is tied to my emotions, and anything can set it off.  Moving my hands always seems to be part of it.  Mother always squinted when she used her powers.  My lover was a witch as well, and I convinced her to seal my powers using my mother's grimoire.  She didn't like it, and tried to talk me out of it, but I insisted.  In the end, she relented, with the condition that my powers would return if they were ever the only means to save my life.\"\n\n\"The trap in the tomb?\"  Danica guessed.\n\n\"Yes, I should be dead, and instead I'm stuck with these accursed powers again,\" Celes answered, punctuating it with a sigh.\n\n\"Maybe your mother was right.  Maybe it is your destiny and you can't escape it.\"\n\n\"And my fate?\"  Celes spat out angrily.\n\n\"As if we aren't already trapped in a nightmare...\"  Danica mumbled.\n\nCeles opened her mouth to speak again, but stopped and thought about what Danica had said.  \"I suppose you're right.  There isn't much a demon could do to me that would be worse than what Zoraster has already done.  I don't have much choice anyhow, because without my mother's grimoire and another witch to help, I can't seal my powers again, anyway.  Are you alright?  What is it you wanted to talk to me about?\"\n\n\"Have you ever heard of the Awakening?\"  Danica asked her.\n\n\"Yes, it's an Eroti...  Oh, Danica, it has been done to you hasn't it?\"\n\nDanica nodded to indicate Celes was right and said, \"I discovered it while I was here.  We probably have no idea what has been done to us.  What we do know may only be a tiny part of it.\"\n\n\"And yet you cope with the results of a powerful magic put upon you by a god, while I complain about having power I don't want,\" Celes said and let her chin drop toward her chest.\n\n\"Can you control your power?\"  Danica questioned.\n\n\"I could when I was little.  Mother was teaching me before she died, because she said if I didn't control it, I could hurt people with it.  She said my powers would grow in time too.  I guess I'm going to have to learn to deal with it.\"\n\n\"We'll have to hide it from Zoraster, like my mental abilities,\" Danica reasoned.\n\n\"I don't think so.  I believe he knows what I am.  He calls me witch often enough, and this body he gave me is exactly what most people think of a witch as looking like.  No, he knows I'm a witch, knows I hate it, and uses it as another weapon against me,\" Celes disagreed.\n\n\"Then turn that weapon against him,\" Danica said with a smile.  \"Embrace your power and let it grow.  I suppose I've done the same thing, because I'm used to my desires now, and I actually enjoy them and the results sometimes.\"\n\nCeles smiled weakly.  \"I suppose you're right, but don't blame me when demons start falling on our heads coming after me.  It seems to be the fate of every woman in my family.  If we have a destiny, it seems somebody on the other side doesn't want to see it happen.\"\n\n\"And maybe they're not ready for a witch who is also a powerful wizard, with a friend who can use the power of her mind, as well as magic,\" Danica said, reaching out to touch her friend\u2019s arm.\n\nCeles' smile broadened and she said, \"You should learn the Hellgate.  Zoraster kept it from us for a reason, and anything he doesn't want us to have can't be a bad thing.\"\n\n\"I'll fetch the scroll,\" Danica said and turned toward the proper bookshelf.\n\n\"And I shall fetch you both something to drink and eat while you work.\"  The pair turned to see Harkhuf standing in the doorway of the library.  \"Fear not, all your secrets are safe within these walls.  I shall reveal nothing of which you speak while within these sacred spaces.\"\n\n\"Thank you, Harkhuf,\" Danica said and smiled.\n\nHe winked and gestured, causing the scroll Danica sought to hover free of its niche in the wall and unroll on the table before her.\n\nOnce again, Danica turned to the task of learning the difficult, but useful spell.\n\n{*****~~o~~0~~o~~*****}\n\nOnly the passage of time, had they been conscious of it, would have alerted them it was well into night as they studied in the windowless inner library within the temple.  Both women were deeply involved in their studies, paying no attention to the world around them save to nibble on a bit of fruit or sip a drink on occasion.\n\nDanica silently pronounced the last word of the Hellgate spell in her mind, and felt an intense burning sensation spread throughout her body.  She stiffened, and knew the spell was hers.\n\nCeles noticed her reaction, \"Did you get it right?\"\n\nDanica wrapped her arms around her for a moment.  \"Yes.  That was a little disconcerting.  It almost felt like it was burning \u2013 really burning.  I usually get a similar sensation when I master a spell, but this was just...\"\n\n\"The spell has some connection to dark magic.  Not enough that I'm all worried about it, but it's there.  So long as you control the magic, and don't let it control you, it can be useful,\" Celes offered as an explanation for the unusual sensation Danica had experienced.\n\n\"Have you learned spells like this before?\"  Danica asked with a shiver.\n\n\"I know a couple of necromantic spells \u2013 blood magic, and the like.  Nothing too ghastly, but there are some times when you just have to use whatever tools are available,\" Celes answered.\n\n\"I don't know if I'm ready to try that,\" Danica said with a note of trepidation in her voice.\n\n\"Well, are you ready to try casting the Hellgate?\"  Celes asked.\n\nDanica considered for a moment and said, \"Now is as good a time as any, I suppose.\"\n\nDanica stood and began the complicated gestures and accompanying chant, bringing the magical portal of the Hellgate into being.\n\nCeles took Danica's hand in hers, \"Just like we did before, we go through together.  Remember, those things in there are going to feed on your greatest desires and try to corrupt you through them,\" Celes cautioned her.\n\nDanica nodded her understanding and they stepped through the portal.\n\nThe landscape was a wooded glade at the bottom of a high cliff.  A waterfall cascaded into a deep, crystal clear pool of water.  Both women caught glimpses of something moving in the underbrush and behind the boles of trees.\n\nDanica turned to Celes to find her smiling, appearing young and vibrant as she had when they had last used the Hellgate spell in this way.\n\nCeles squeezed Danica's hand.  \"It means a lot to me that one of your deepest desires is for me to be myself again.  Now, what is with you?\"\n\nDanica looked down at herself and realized there was something different, \"I wish I had a mirror.\"\n\nA magnificent full-length mirror, the likes of which might be found in a Queen's dressing chamber, appeared in front of Danica as she spoke.\n\nDanica looked around warily, \"Did they do that?\"\n\nCeles shook her head.  \"Only after a fashion.  You control the environment here, and you'll get better at it in time.  It's powered by the things, but you control it either consciously or unconsciously.  But, you're stalling.  Look in the mirror.\"\n\nDanica then looked in the mirror and raised her eyebrow in surprise.  She was taller, her legs far longer than they should be.  Her waist was trimmer, her hips narrower, and her breasts were slightly smaller \u2013 and a great deal perkier.  Her hair was more red than auburn, and her facial features were more classically defined.\n\nIn short, she looked a great deal like her sister, Devan.\n\nCeles observed, \"Well, we know where you think your flaws are.  So what do you think?\"\n\nDanica looked at the image staring back in the mirror, and with sudden clarity realized that she really didn't like how she always thought she should look.  Almost instantly, the image changed back to her normal appearance.\n\nCeles chuckled and said, \"You see, even dark magic can be used to good ends.  That had to be an eye opening experience.  I prefer you as you are as well.\"\n\n\"I guess you're right.  It looks like I just learned the same lesson you did when Zoraster cursed you,\" Danica reasoned.\n\nCeles grinned and patted Danica's arm.  \"Exactly \u2013 be happy with what you have.\"\n\nCeles' beauty entrapped Danica as the other woman smiled at her.  \"Are you sure that it would be a bad thing for us to...\u201d she said, reaching toward Celes.\n\nCeles slapped her playfully on the wrist.  \"Yes, and quit tempting me.  You'd better reign in the natives.\"\n\nLooking around, Danica agreed it was time to reign in the disguised demons that populated her little alternate reality.  Stunningly beautiful women and handsome, muscled men approached from their places in hiding.  All were nude, and all were endowed in the most interesting places to eye-popping degrees.\n\nStaring them down, Danica said, \"Put some clothes on and get back in the bushes until I tell you to come out.\"\n\nThe creatures hesitated at first, the males posing to show off their muscles and the females sauntering closer while licking their lips.  Danica furled her brow, concentrated, and the creatures immediately cringed.  All dropped to their knees, instantly clothed, and scurried off into the underbrush.\n\n\"That will learn them,\" Celes said and laughed at the scrambling demons.\n\n\"That wasn't so difficult.\"\n\n\"You have an advantage.  You already have mental powers, and this is much the same.  The process felt like when I've used charming spells.\"\n\nDanica banished the mirror she had manifested with a thought and smiled at the ease with which she controlled this strange little conjured world.  \"You said time doesn't move the same here as it does outside?\"\n\n\"You pretty much have control over that as well, but like I said, the longer you stay here the more dangerous it becomes.  Those things will corrupt you.  What do you have in mind?\"\n\nDanica shrugged.  \"I'm not entirely sure yet.  I just look for anything that might give us an advantage over Zoraster.\"\n\nCeles took in a deep breath of the floral scented air.  \"It's a damn shame this place is made of pure evil, because it's beautiful.  I should probably get back and start trying to deal with my power.  I'll probably be cloistered away for a while, because I need to be able to master my emotions if I want to have any hope of succeeding.\"\n\n\"If you need anything, just come see me.  I'll miss you, and don't forget we have a date to spend time with Marlena and Andrea,\" Danica said and opened the portal back into the temple of Sekmamun.\n\nThey both stepped through the portal and Celes sighed, hefting her sagging breasts.  \"I think I'll use a normal teleport to return.\"\n\nDanica hugged her friend and gave her a kiss on the forehead.  \"Don't lock yourself away too long.\"\n\nCeles smiled, cast the common spell of teleportation, and vanished.\n\nWhen Danica turned to leave the temple, she found Harkhuf standing in the doorway, looking concerned.\n\n\"What's wrong, Harkhuf?\"\n\n\"I wished to warn you to tread lightly.  Five sons of the great Pharaoh have come to our city.\"\n\nDanica raised her eyebrows and smiled.  \"Five sons?  He must be a very busy man.\"\n\n\"They are but the youngest of thirty.  Pharaoh remains vigorous despite his age, and has many concubines.  These are far removed from the divine throne, but are still Sons of the Living God.\"\n\n\"It may be a good time to lock myself up in the house until I'm ready to leave,\" Danica mused.\n\nHarkhuf nodded his agreement.  \"That may indeed be a wise course of action.  I shall have scribes continue to copy the spells within these walls and have them sent to you.\"\n\n\"Tari can keep them for me if I'm away and I'll pick them up the next time I pass through.\"  Danica felt a familiar sensation bubbling up within her, the building pressure of her desire, denied for too long.  \"Maybe I could hide away here for a few hours,\" she purred and ran a finger along his bare chest.\n\nHarkhuf stiffened and closed his eyes for a moment.  \"Would that I could accommodate you, but I must purify my body and soul for a sacred ceremony.\"\n\nDanica pouted prettily for a moment, but shook it off and said, \"Perhaps the next time I\u2019m here then?\"\n\n\"I would be most pleased to share my bed with you again.\"\n\nShe blew him a kiss and exited the library then, returning to the outpost and her own room.  A sigh escaped her as she realized the sun was near to rising.  She lay down in her bed and used her toy to relieve the ache between her legs before drifting off to sleep.\n\n{*****~~o~~0~~o~~*****}\n\nThe sun had set, risen, and now dropped toward the horizon once more.  Zoraster remained in the same position he had assumed upon grasping the obelisk.  His eyes were wide open, bloodshot, and saw nothing.  Tears streamed down from his eyes to lips set in a snarl over tightly clenched teeth.  The tears mingled with rivulets of sweat escaping from every pore of his body, and a constant trembling shook his robed form.\n\nThe artifact began to tremble and hum in his tightly clenched fist.  A nightblue aura of light pulsed around the artifact, growing brighter.  The light intensified, and so did the trembling and sweating of the man who clutched it.\n\nJust as it seemed their shaking would tear them both apart, the Archmage let out a snarl of rage that changed to a scream of triumph as he raised the obelisk high and its glow vanished.\n\nZoraster laughed weakly in victory, staring at the artifact.  \"You are mine!\"  Bracing his body with a hand on the table before him, he rose unsteadily to his feet.  A thought brought his staff to him, a staff imbued with so much magic that any common wizard could not have even held in his hand.\n\nThat symbol of his power now served to aid his steps as he hobbled out of the room where he had defeated the obelisk, clutching it tightly in his hand.  Leaning against the doorway, the Archmage pulled forth a small vial and brought it to his lips with a trembling hand.\n\nAs the rejuvenate potion coursed through his blood, his strength somewhat returned.  It would take far more than a simple potion to renew the physical and mental strength lost in the battle he had just won, and he intended to have that now.\n\nConcentrating, he activated a power within his staff that he rarely used, preferring to rely upon his own power for such spells.  The teleportation magic carried him to his personal dungeon.\n\nMoving with more strength now, he passed the cells of unfortunates that had transgressed against him.  None would be missed in the world beyond, he was careful to ensure that, and one in particular was of no more use to him whatsoever.\n\nArriving at her cell, he looked in upon her.  Once she had been beautiful, but lack of food and rest \u2013 coupled with torture \u2013 had taken its toll.  She was gaunt, bones easily visible beneath her pale skin, and her head was bare from tearing out her own hair.\n\nHe removed the magical barrier that held her captive and stepped inside.  Weakly, the woman tried to move away from the approaching Archmage, but she had little strength and soon collapsed to the floor.\n\n\"Perhaps you are now willing to tell me what I wish to know?\"  Zoraster asked, knowing the answer he would receive.  He had tried all means of torture and magic to discern the secrets he wished from her, to no avail.  The woman would go to her grave with the secrets of psionic defense she possessed.\n\n\"Never,\" the woman hoarsely replied.\n\nZoraster smiled.  Her body was weak, but her spirit was still strong.  Her defiance presented Zoraster with another means to serve him now.  Calling upon the powers of his staff, he lifted her body and slammed it against the wall.  When she struck, manacles of magic closed around her wrists and ankles, pulling and holding her spread out wide before him.\n\n\"Take...  Body...  Still...\"  The woman weakly attempted to taunt him.\n\nHe knew what she meant to say, as she had said it each time he had ordered her sexually assaulted, or had done so himself.  \"You misunderstand, to some extent.  I am indeed here for your body, but not in such a manner as you believe.\"\n\nPulling the obelisk from his robes, he walked in front of her.  Concentrating for a moment, he stared at the obelisk.  The artifact changed into a serrated dagger of deepest black, surrounded by an aura of darkness.  Stepping forward, he moved the tip of the knife toward her breast, just touching the blade to her nipple.\n\nThe woman moaned in terror as she felt her very life sucked from her.  Zoraster, in turn, shuddered as he felt that strength transferred to him.  Pulling the dagger away, he pressed it against her other breast, closer to her heart.  She did not moan this time.  Her head, which had been raised in defiance, dropped limp to her chest.\n\nPulling the dagger away again, he licked his lips and reveled in the feeling of her lifeforce surging through his body, rejuvenating him.  He pulled her head upward just enough that she could see what he was doing, making sure her eyes were open.  He leaned down and looked into her eyes with a wide smile, drinking in the terror within her bloodshot orbs.\n\nHe then thrust the dagger between her legs and into her depths to the hilt, violating her one last time even as she died.\n\nHer lifeforce surged through the dagger into Zoraster's body, restoring his strength, and even increasing it.  The woman's thoughts and memories leeched from her as well, imprisoned within the knife for the Archmage to glean at will.  In the end, Zoraster stood straight and confident, tightly gripping the dagger buried in the dry husk of the woman\u2019s body.\n\nPulling the dagger free, he smiled at the sound, similar to sheaves of dry parchment tearing.  He then concentrated again, and the dagger changed back into its familiar obelisk form.\n\nSlipping the obelisk back in his robes, Zoraster clenched his fists and felt the power flowing through him.  He reached up to the neck of the withered corpse above him and gripped it.  The flesh collapsed against the bone, flakes and dust filtering down to the floor.  With a jerk, he pulled the corpse forward and hurled it toward the floor.\n\nSharp cracks sounded as the hands and feet of the corpse snapped off where they were held by the manacles.  A cloud of dust arose when the rest of the corpse hit the floor with great force.  Bones and bits of leathery flesh scattered everywhere.\n\nSlapping his hands together to brush the dust off of them, Zoraster smiled and walked over the dusty remnants of the woman's corpse out of the cell.  \"Farewell, my dear.  We could have had an arrangement, but alas that is now just \u2013 dust in the wind.\"\n\nLoud mocking laughter echoed through the corridors as the Archmage walked away.\n\n{*****~~o~~0~~o~~*****}\n\nDanica spent the day in study once she had awakened, and thus she started when Tari called to her from the doorway of her room.  Danica had not even noticed the woman approaching.\n\n\"Danica, a messenger has arrived for you from the palace.\"\n\nTari\u2019s discomfort was obvious, and that did not bode well in Danica's mind.  She rose immediately and exited her room, telling Tari she could go back to her room if she wanted to.  Tari breathed a sigh of relief at this news, and Danica gave her a little kiss on the forehead before sending her on her way.\n\nWalking into the common room, Danica found an unfamiliar man waiting for her.  It took only a moment of observation to determine he was connected with people of high rank.  He had on gold bracelets, gold earrings, and even his fine linen kilt was trimmed with gold.  \"I\u2019m Danica,\" she informed him.\n\nBowing his head to her, the messenger said, \"Khepri, Son of the Living God, Pharaoh Sheshonq, requests that you dance for him in the palace when the Sun God sleeps.\"\n\nSo much for laying low, Danica thought, and then answered, \"I would be honored to dance for the Son of Pharaoh.  Please tell him that I will come.\"",
        "The messenger bowed again, and Danica showed him to the door.  Looking out the door as she let him out, Danica realized she didn't have long to prepare if she wanted to reach the palace in time.\n\nShe hurried to her bath, asking Tari to prepare something specific \u2013 very revealing and easily shed \u2013 for her to dance in.  Once she finished bathing, Danica put on the clothing Tari had laid out for her.  The linen top hung from her shoulders by thin straps and just covered her breasts, leaving her midriff bare.  In truth, it did little to cover her since it was so sheer as to appear almost completely transparent.\n\nHer pleated skirt was made of the same material, but hid more of her because of the pleats.  The way the pleats were fashioned, Danica knew that concealing element would vanish quickly if she spun even slightly as she danced.\n\nShe put on the bracelets and anklets with the bells that sounded like cymbals, and added a beaded rope belt having more of the same bells attached to it.  She slipped on a pair of sandals, but these were simply to protect her feet on the journey to the palace.  She would take them \u2013 and the linen robe she put on last \u2013 off before she danced.\n\nOnce she was prepared, Danica stepped outside and discovered that at least the trip to the palace would not prove troublesome.  The palace had sent a curtained sedan chair for her, borne upon long poles by a dozen strong men.  The messenger who had informed her of the Prince's desire to see her dance gestured to the conveyance when Danica emerged from the house.\n\nDanica pulled the curtains when she sat down, feeling self-conscious about people carrying her around like royalty.  She found the curtains were sheer enough that she could easily see through them.  The cushions were soft and comfortable, and the bearers well trained.  The ride was swift and pleasant, and she soon recognized the interior of the palace.  The bearers only sat the chair down when they had arrived within the audience hall where she had danced before.\n\nDanica stepped from inside the curtains to see that only the sons of the King were present in the hall, along with a troupe of musicians.  The bearers and the messenger who had delivered her left the room as soon as she exited the conveyance.\n\nDanica stepped forward and curtsied, saying, \"I am honored that you would seek me out and request that I dance for you.\"\n\nThe young man, whom Danica determined must be the oldest since he sat on the throne, flanked by his younger brothers, replied, \"These halls echo with praises for your dance, and we would see such wonders ourselves.\"\n\nThe men were obviously brothers, and all very close in age.  Unless Danica missed her guess, some of them had different mothers, because she doubted from looking at them that there was enough difference in their ages to have allowed one woman to bear them all.\n\nAll had dark hair, worn long, and skin tone that was dusky but looked more like a tan than the darker skin of the commoners.  They were all powerfully built, and quite handsome.  Danica felt a tingle run through her breasts and between her legs as she looked on them.\n\nDanica smiled and said, \"Allow me a moment to speak with the musicians and I will be pleased to dance for you.\"\n\nShe did just that, telling the musicians to strike up the same music from her last dance.  She planned to do the same routine, only slightly modified for the different audience.\n\nUpon informing the musicians of the music and cues, Danica returned to her spot before the throne, removing her sandals and robe.  Smiles crept onto the faces of the brothers as she revealed her body to them.\n\nDanica lifted her arms above her head, signaling for the music to begin.  Her dance was once again flawless, and this time she took pains to make intimate eye contact with each of the brothers, as she had with the governor before.  The evidence of the men\u2019s arousal was evident shortly after Danica began her dance, kilts rising into tents from their laps.\n\nWhen Danica ended her dance, kneeling at the foot of the throne, she could see the root of the eldest brother's cock beneath the raised hem of his kilt.  She licked her lips seeing the thickness of his organ, and the length was obvious from the peak of the kilt.  As she rose, she noticed identical peaks from all the brothers.\n\nThe stamping applause began as soon as she rose to her feet, and Danica had to cut off a moan of arousal as the erections in front of her danced with the stomping feet.  She had already started getting damp during her dance, but she was now truly wet thinking about what lay beneath those kilts.\n\nThe eldest spoke again once the stomping applause ended.  \"Those who spoke of your dance spoke true.  You are truly blessed of Tayatet.  Your dance is truly a wonder to behold, as is your body while you do it.\"\n\nDanica let a crooked smile creep onto her face and glanced again at the tent in the lap of the eldest son.  \"So I see.\"  She then glanced at the brothers as well.  \"It seems Pharaoh's godly traits breed true in all his noble sons.\"\n\nA pair of the brothers looked slightly embarrassed for a moment, but all smiled at the statement.  One brother leaned over to whisper to another, and then sat back up and spoke, \"Were you to choose one of us, whose seed would you nurture in your womb as son of the Living God?\"\n\nDanica licked her lips slowly and sensually before she spoke, \"My field lies barren, I'm afraid, but I could not possibly choose from just looking.\"\n\nThe eldest looked to all his brothers with a wide knowing smile, and then turned back to Danica.  \"And what would be necessary to enable you to choose?\"\n\nDanica stepped closer to the brothers.  \"If I were to choose, I would need to know who could make me flow like your blessed river.  Who could take me to a pinnacle higher than the tallest pyramid.  Who could make my body shake as if an earthquake was centered in my womb.\"\n\nThe eldest looked at her with unabashed lust.  \"This sounds like a fine challenge for sons of the Living God.\"\n\n\"I could make no promises, but I would certainly consider each of you carefully.\"\n\n\"Do your loins burn in anticipation of such a choosing?\"  One brother said while trying to stare through the concealing cloth.\n\nDanica offered him an unobstructed view when she hiked up the skirt and dipped two fingers inside her.  She brought them to her mouth and sucked the abundant juices from them with a smile.\n\nThe eldest spoke again, \"It is not often we experience the joy of releasing our seed within.  Our position requires that we may only impregnate a woman when the proper signs are in order.\"\n\nDanica stepped forward again, now inches away from the eldest of the brothers.  The sight of five hard cocks aching to slip inside her was too much to resist.  \"I can offer you that joy without fear of offending the gods,\" she said in a husky voice.\n\nThe eldest waved to the musicians, \"You are dismissed.\"\n\nThe musicians filed out quickly, and as soon as the door closed behind them, the man before Danica stood.  His hard cock, pointing straight out, was so close to touching her that she likely could not have slipped a sheet of paper between it and her body.\n\nDanica reached down and pulled up on his kilt.  The cloth only had to move a short distance to reveal his manhood.  Danica moaned, noticing that the head of his thick, uncut cock flared wider than any she had seen before.  She had seen men as thick as he, but never with such a large head.\n\nReaching down to wrap her hand around it, she shuddered and thought how incredible it would feel pressing against her walls and pulling at her labia as he took her.  \"Take me and sow your seed deep inside me, noble son,\" Danica purred while stroking her finger over that huge helmet.\n\nLooking up into his eyes, she pulled the straps of her top off her shoulders.  He pulled down on the cloth and it slid off her breasts to her waist.  Another tug of his hands sent it and her skirt to the floor.\n\nDanica stepped around him and bent over, putting her hands on the throne.  As soon as she assumed the position, she wondered whether it might be some sort of affront to the throne.  She had simply felt too aroused to care.  Either there was no breach of etiquette or he didn't care either, because she felt his hands on her hips almost instantly.\n\nOne hand left her to guide his cock inside her, and Danica felt the big tip press against her lips.  She groaned in bliss as the wide flare of his head, and then his thick shaft, easily slid into her wet depths.\n\nHer lips were pulled inward as he buried his full length inside her.  Danica's body tingled as his girth stretched her.  She gasped when the flared head of his cock rubbed against the bundle of nerves behind her mound as he penetrated her, and then moaned when it came to rest against her cervix.\n\nA jolt of pleasure shot up her spine as he withdrew, once again rubbing against that special spot inside her.  He withdrew almost completely, pulling her lips slightly outward, leaving only the very tip still between her lips.\n\nHe then thrust back inside her, more quickly than his initial insertion, assuming a quick, steady rhythm of thrusts.  Every time his flared glans pushed or pulled her lips, it sent a flash of heat all through her sex.  This was immediately punctuated by a sharp jolt like electricity as it rubbed with strong pressure against her special spot.  Soon, the heat was a constant glow and the jolts became a current running up and down her spine.\n\nHer breasts swinging like pendulums from his thrusts, Danica could do nothing but gasp as her senses were overwhelmed by the unique sensation his cock was giving her.  Her muscles tensed and she quivered, her teeth clenched tightly together.  Then she felt as if her mind and body both went numb.  She dimly noted his thrusting shaft penetrating her a dozen or more times as she continued to quake with her eyes tightly closed.\n\nWhen sensation returned, it was an explosion of chilling electricity erupting from deep within her and quickly filling her entire body.  Danica screamed as her climax saturated every inch of her body with energy.  Despite the heat that had coated her body in a thin sheen of sweat, she broke out into gooseflesh.  Every thrust of his thick member inside her brought on another scream, and her orgasm continued.\n\nHis grip on her hips tightened, and Danica felt him slam home with great force, jarring her forward and off balance.  She quickly edged a hand forward to keep from hitting her head, and at the same moment heard him scream in release.\n\nThe feeling of his hot cream filling her took the icy bite off her orgasm, and Danica moaned in ecstasy.  She reached back with one hand to rub her clit, and after a few strokes, she came again.  This time it was with a swelling of heat that spread from the warm pool of his semen inside her.\n\nDanica moved her arms together and lay them down on the throne, allowing her head to fall on top of her hands as she continued to quiver.  Behind her, the prince gasped and groaned from her muscles squeezing him tight.\n\nWhen he withdrew, it was with a growling scream that Danica echoed.  She moaned as her aftershocks then settled into afterglow.\n\nShe heard something behind her and turned to see one of the other brothers rising up from a kneeling position.  Looking down she saw a bowl that was of a type she recognized.  It was an offering bowl dedicated to Quadesis.\n\n\"Will you offer the fruits of your coupling to the goddess?\"  He asked her.\n\nDanica moaned and rose back up on her hands again.  She contracted her muscles, slowly pushing his semen from inside her.  When she felt the sticky bubble reaching her lips, she reached back and parted them wide, allowing the ropes of mingled cum to drop from her into the bowl below.  She looked over and saw that the eldest brother who had just filled her had collapsed into a chair, breathing heavily, his still half-hard cock twitching with every other heartbeat.\n\nWhen she ceased to drip, Danica let her head sink down to the throne again.  She felt a hand on her upraised ass and turned back to see one of the other brothers behind her, looking down and requesting permission from her with his eyes.  He had removed his kilt and Danica could see that his cock was a twin to that of the eldest brother.\n\nDanica moaned, shivered, and then raised back up to support her upper body on her hands again.  \"Take me,\" she gasped.\n\nEach of the brothers took her in turn, their near identical cocks giving her the same unique sensation and powerful orgasm as had the first.  It was not so overwhelming now that she had experienced it once, and that only made her release all the more pleasurable.  The brother who was a priest of Quadesis caught the mingled juices in the bowl after each coupling, and he was the last to fill her.\n\nThe eldest brother ordered cushions brought and piled in the floor at some point, though Danica only vaguely recalled it happening.  One of the brothers led her on wobbling knees to the cushions once she ceased to drip the priest's own offering into the bowl.\n\nDanica felt little twinges of pain from inside her, and she knew she had overdone it.  Five times with such large cocks in such rapid succession was causing her body to protest.  The priestly brother recovered quickly, even showing signs of growing hard again as he knelt down next to her.\n\n\"I will ask the goddess to offer us a blessing of healing and virility,\" he told her.\n\nThe priest chanted over the bowl, and Danica could see a faint rosy glow emerge from the bottom of the bowl as he chanted.  When he completed his prayer, he dipped his finger into the bowl and drew a sigil on Danica's right breast.  He repeated it on her left, and then on her mound.  The faintly glowing cum felt extremely warm on Danica's skin.  \n\nWhen the last sigil was complete, Danica felt healing energy wash through her.  The pain in her depths vanished, and she felt instantly refreshed.  She also felt abundant wetness gathering between her legs, the priests spell obviously inflaming her passions once more.\n\nHe dipped his finger in the bowl again and pooled the cum within on his fingers.  It hung in short tendrils from his fingers as he brought it near Danica's lips.  Danica pulled his hand downward and sucked his fingers clean.\n\nThe cream tasted sweet, like wine, and was just as intoxicating.  Danica continued to suck on his fingers long after every bit of the sticky semen was gone.  He brought the bowl near her, and tipped it toward her slightly.  \"Drink,\" he requested.\n\nThe taste from his fingers gave her good reason to.  She sat upright and took the bowl, tipping it and drinking down the contents.  It tasted exactly as it had on his fingers, and she pooled what would not drip from the bowl on her fingers to get all she could from the bowl.\n\nHer arousal spiked even higher, and she felt as if she had awakened from a restful sleep full of wonderful dreams.  She moaned and tilted her head back, closing her eyes and letting the euphoria wash over her for a moment.\n\nWhen she sat the bowl down, the priestly brother pulled her hand to him, wrapping it around his half-hard cock.  He shuddered and gasped, and instantly swelled to hardness.\n\nHe gestured to his brothers, and they approached to stand around her in a circle.  The priest guided her to touch each of them in turn, and their cocks swelled in her hand as well.\n\nDanica\u2019s juices flowed from her in a torrent, far more than was natural she knew.  One of the brothers instructed her to lie back, and did so without hesitation.  He parted her legs and lapped up the flowing juices.  Every part of Danica's folds felt hyper sensitive, and she erupted into orgasm after only a few moments, washing his face in a flood of wetness.\n\nHe rose from between her thighs as her orgasm died down, saying, \"Your nectar will give us strength to continue to pleasure you for many hours.\"\n\nThe next brother approached and lapped her to another orgasm just as quickly as the first.  Each brother in turn drank up her juices and was revitalized.\n\nAs Danica recovered from the fifth orgasm, she said, \"Take me.  Fill me everywhere \u2013 my mouth, my ass, my pussy...\"\n\nThe priestly brother was the first to react, dipping his cock into her saturated sex and giving a couple of half strokes before withdrawing.  He lifted her and moved beneath her, sliding his cock into her ass.\n\nThe eldest brother then knelt in front of her and filled her pussy as the priest slowly stroked his thick cock in her ass.  Danica moaned and her eyes rolled up in her head for a minute as she felt their cocks seemingly meeting through her walls inside her.  Her magically enhanced wetness remained slick in her bottom, allowing the one brother to continue thrusting without any additional lubrication.\n\nShe looked up at another brother and flicked her tongue toward him.  He smiled, and stepped forward to have his cock engulfed in her mouth.  Danica came before she had sucked the cock in her mouth twice.  She squealed around his shaft as he started to thrust into her mouth.  The remaining brothers each moved to one side of her to tease her bouncing nipples with their fingers.\n\nDanica discovered that the magic seemed to dull her gag reflex, and she encouraged the brother stroking her mouth on to greater efforts.  He was soon hitting her throat with every thrust and loudly groaning in pleasure.  Danica moaned around his cock, forced to release it to scream in orgasm once again a few moments later.\n\nFirst her pussy, then her mouth, and finally her ass were filled with cum when she reached a third peak only a couple of minutes later.  Her desires had not dulled in the slightest, and she told the men to change positions.  None of them had lost their steel either, despite having filled her with cum only seconds before.  The oldest brother claimed her tight ass this time, while the two brothers who had teased her nipples filled her pussy and mouth.  The other two brothers who had already ejaculated lay down and suckled her nipples.\n\nDanica came again only a couple of minutes later.\n\n{*****~~o~~0~~o~~*****}\n\nBefore she finally left, well into the next afternoon, each of the brothers had emptied his seed into her six more times.  Danica had felt as if she were in one unending orgasm throughout the entire time.  The magic of the priest ensured she had the energy to do it, and she felt neither pain nor fatigue when she at last rose to return to Zoraster's house in the city.\n\nThe frenzied coupling had only ceased because the eldest brother admitted with a sigh that they were delaying the day's business by occupying the audience hall.  The brothers had all offered her boons, but she had simply whispered in turn to each that she would remember, and ask if she ever needed anything.  She also told them that she certainly was not adverse to dancing for them or coupling with them again.\n\nOne brother naturally asked the question that had sparked the marathon session of lovemaking, \"Could you choose between us now?\"\n\nDanica laughed.  \"I'll have to think about it.  We might just have to try this again before I could really be sure.\"\n\n\"I can accept that,\" he replied, causing Danica to laugh.\n\nShe kissed each of them goodbye then, put on her clothes and took her leave.\n\nDanica practically floated back to the house.  She had been offered another ride in the divan couch, but simply had too much energy to remain confined to the chair, choosing to walk instead.  She was engulfed in a deep, warm afterglow the likes of which she had never felt before.\n\nShe was also still aroused, and almost immediately pulled Rehkmire and Tari into her bed upon arriving home.  It seemed the magic to grant stamina to those who tasted her remained effective, because both Tari and Rehkmire showed equal passion and endurance to her as they coupled.",
        "Danica cast her spell on Tari and determined the woman could not become pregnant at this time.  Thus, she was able to experience Rehkmire exploding deep inside her while Danica rubbed her bud.  Danica then lapped the woman clean and implored Rehkmire to fill her.\n\nHe exploded inside them both twice, remarking with wonder that the third had been possible, and completely beside himself that he had achieved the fourth erection.  He had just as much semen to offer each time as his first ejaculation within Tari.\n\nThe energy of the priest's magic at last faded, and the three lovers lay together in the bed a couple of hours later.  Danica was startled out of a half doze by Celes' voice.  \"Danica, can you hear me?\"\n\nDanica sat up and wiped the sleep out of her eyes, seeing an image of Celes hovering in front of the bed.  \"Yes \u2013 I can hear you, Celes.\"\n\n\"Could you please come back here?  It's Marlena...\"\n\n\"What's wrong?\"  Danica asked sleepily.\n\n\"Just come, please,\" Celes answered, looking very concerned.\n\n\"I'll be there as soon as I'm dressed Celes.\"\n\nThe magical communication then faded, and Danica hurried to return to Zoraster's complex with a sense of deep foreboding gnawing away at the afterglow that Celes' message had interrupted.\n\n{*****~~o~~0~~o~~*****}\n\nDevan sat in a cushioned chair, well into her cups and relaxing in Vladamir's suite.  This was one of the few places she had ever found she could truly relax.  There was something about the Heraklan that had always put her at ease.  He said it was the blessing of his god upon his home, but Devan more or less shrugged that off with a roll of her eyes.  She couldn't deny that the calm that washed over her here was almost unnatural, however.\n\nShe was very worried about Danica.  Her sister had still not visited their mother's grave, and the feeling that she was in danger gnawed at Devan\u2019s gut.  It had subsided somewhat now, but it was still there.\n\nVladamir\u2019s boyish face \u2013 always decorated with a smile \u2013 and his quick laugh had helped to dull her worry.  The wine, Boldheart Red, was grown and bottled only a short walk away, and was doing its fair share as well.\n\nAs Devan grew more inebriated, she also grew aroused.  She had coupled with Vladamir once or twice, and knew he could make her come nice and hard.  She started to flip her long red hair and bat her eyelashes at him.\n\nDevan could read in his bright blue eyes that he was catching those signals.  She let them grow more overt as the minutes stretched on, and moved her chair closer to him.  Every once in a while, she toyed with his brown hair or touched his muscled arm as she talked and flirted.  The effect it was having on him was obvious, as the Heraklan was utterly unashamed of his bulging erection.\n\nDevan was just on the verge of sending the final signal to get him between her legs when the door opened and a blonde woman walked in.\n\nAroused as she already was, she instantly noticed how shapely the woman was, and how firm her breasts were as the woman approached.  Devan licked her lips and thought that maybe she would have more than Vladamir between her thighs before this was all over.  If the woman was a Heraklan, the odds favored her being no stranger to licking pussy.\n\nThe woman caught Devan's eye just as the redhead licked her lips, and smiled knowingly before turning to Vladamir.\n\n\"How was your trip, Cheron?  Everything alright at the Forge?\"  Vladamir asked her.\n\n\"It was a wonderful trip.  I'll tell you all about it later.\"  She winked at him after saying that, and then raised an eyebrow, tilting her head toward Devan.  \"Are you going to introduce me, or do I have to do it myself?\"\n\nVladamir laughed.  \"I'm sorry, Cheron \u2013 this is Devan.  I've told you about her.\"\n\n\"That's right,\" Cheron said while sitting down in his lap, \"Her name always sounded so familiar to me for some reason.  Pleased to meet you \u2013 I'm Cheron,\" she said while looking over to Devan.\n\n\"Pleased to meet you as well.  My name is pretty common where I'm from, so you probably know someone from there.  Are you a Heraklan?\"\n\nAgain, a knowing smile crept onto Cheron's face as she nodded.  Devan let her see an identical smile, showing that they were both following the same path of thought.\n\nVladamir beamed, \"She is the finest example of our god's servants.  She had attained the rank of Thunder Bringer before she turned twenty.  I praise Heraklan every day for bringing her strength in Heraklan and strength of arm to serve from my humble temple.\"\n\nThe blonde wiggled her bottom in his lap.  \"You seem to like some other things too.\"\n\nVladamir laughed and said, \"Indeed, I do.  You seem to like something as well,\" he said, gesturing toward Devan.\n\n\"So do you, if what I'm sitting on is any indication.\"\n\nVladamir's booming laughter echoed throughout the room.  \"Please, Cheron \u2013 Devan has already been teasing me mercilessly for quite some time.  Don't make me go through it all again.  Let's just skip to the good part.\"\n\nDevan and Cheron both moaned, and then looked at each other.  A spark of recognition emerged in Cheron's face as she looked at Devan.  Cheron continued to look intently at Devan, finally saying, \"Come to think of it, you remind me of Danica a little.  Something in your eyes, I think.\"\n\nDevan's eyes popped wide open and she gasped out, \"Did you say Danica?\"\n\n{*****~~o~~0~~o~~*****}\n\nI hope you liked this tale, and will continue to read Danica's ongoing story.  Please take a moment to vote, and perhaps comment.  Feel free to comment on every chapter, nobody is stopping you! *laugh*  That's the only payment a free author gets, and every bit of feedback is most appreciated!\n\nYou may find later chapters have some flubs and grammar issues, until I finish posting all the edits.  Look for the note at the beginning of each chapter about my editor, Roust, and that will let you know whether the chapter is newly edited."
    ],
    "authorname": "Darkniciad",
    "tags": [
        "lesbian kiss",
        "creampie",
        "multiple partners",
        "gangbang",
        "magic",
        "redhead",
        "big tits",
        "witch"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/danica-pt-16"
}