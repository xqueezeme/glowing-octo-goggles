{
    "title": "Lulabelle in the West Bk. 01",
    "pages": [
        "Friends, this is something a little different. I enjoy experimenting with different styles and genres, so I wrote a Western for you. It's a very long story but the sections are numbered to make it easier for you to read bit by bit if you wish. It uses the sexual parlance of the day; words and phrases like pussy, blowjob and sixty-nine weren't yet in use in 1875, but a little research showed me that the language of the day was just as colorful, maybe even more so, much to my happy surprise. I may write more stories featuring Lulabelle, so I'm calling this Book 1.\n\nThis is a fantasy Western, and in this first book at least, there are precious few guns and bad guys. It's designed to evoke a feeling, an Old West that I wouldn't have minded being a part of...\n\n\u2014\n\nChapter 1\n\nMay 17, 1875\n\nArizona Territory\n\nThe three sons of Edwin Perry \u2014 Boone, Wesley, and Elijah \u2014 sat on the front porch of an Arizona whorehouse, one in a rocking chair, one slouched in a straight chair, and one leaning back into the arms of Lulabelle Flowers. The early morning sun, golden and pure, rose slowly in the sky, the fresh air and quiet of the new day not yet spoiled by the dust and clatter of horses, wagons and townsfolk. \n\n\"You boys better get back to the ranch,\" Lulabelle said. \"Thaddeus will tar and feather you if you're late again.\"\n\n\"I've never met a more ornery boss than that man,\" Elijah said. \"Lula's right. We best get a move on.\"\n\n\"We'll be back tonight Lula,\" Boone said. \"Keep yourself ready for us.\"\n\n\"I'm always ready for you boys. You're my handsome favorites.\"\n\nThe boys all smiled, stood up, and stretched the morning stiffness out of their muscles. They walked down the unpainted wooden steps and were mounting their horses when a man approached. Dressed nicely, he waved a white envelope in his hand. \"Got a letter here addressed to you Perry brothers. It come all the way from Virginia.\"\n\n\"Virginia?\" Lulabelle said. \"Who do you boys know who's all fancy in Virginia?\"\n\n\"Heck if I know,\" Wesley said, looking at the envelope he held as the man walked away.\n\n\"You don't have to read it here if you don't want me in your private business,\" Lulabelle said.\n\n\"No, we don't mind,\" he said. He handed it to the oldest brother, Boone, and Boone read it aloud...\n\n\"Dear boys. This letter comes to you from your loving stepmother, Henrietta Perry. It is with sadness that I inform you of your father's death. Edwin Perry left this world on October the last, and the final words he spoke were these \u2014 tell my boys I'm proud of them. He meant it, very sincerely. He spoke often of the three of you, and he hoped to one day be reunited as a family. He had a dream that seemed impracticable to me, a dream to create his own town called Perryville, out in the wilds of Colorado. He planned on finding you boys when he had enough of it built to entice you to stay. It was a dream that seemed impossible, but you know how powerful dreams can be. Your father dreamed big.\n\n\"He acquired the land in a poker game, which won't surprise you boys, but the rest of the story might. He and I traveled to Colorado, and he hired some hands along the way. A tent was erected on the valley floor, next to a river, with snowcapped mountains and forested woods a short ride away. Trees were felled and a bunkhouse was built, one with an indoor kitchen. A small blacksmith shop was constructed. There are three barns, and two corrals to hold cattle and horses. Perryville is a fine place, and Three Sons River, which your father named, sparkles with clean, drinkable water. All of it is yours, boys. All of it is yours.\n\n\"As you can probably tell already, your father's fortunes changed for the better not long after you left. He made some risky investments that paid off, so there is money to buy cattle to start a proper ranch of your own. If you would like to see what your father built for you, I have enclosed a map. Send a letter back to me at this address and I will meet you in Perryville, to deliver the financial part of your inheritance. All you have to do is be there, to claim as yours everything that was your father's. I look forward to hearing from you. Your loving stepmother, Hetty.\"\n\nLulabelle looked into the faces of the disbelieving Perry brothers, her own face just as surprised. \"Do you think it's real?\" she asked.\n\n\"Sounds like something he might do, if he had the money,\" Boone said. \n\nTears welled in Elijah's eyes. \"Father's dead,\" he said.\n\nWesley wiped away some tears of his own. \"I knew we should have gone back. What's it been, four years since we've seen him?\"\n\n\"Four years,\" Elijah said. \"I wonder how he died.\"\n\n\"Hetty can tell you,\" Lulabelle said. \"You're going, aren't you? Will you take me with you?\"\n\nThe boys all looked at each other and nodded. \"We won't leave you here,\" Boone said.\n\nLulabelle smiled brightly. \"I can cook, you know. And I'll pleasure all you boys until you can't take it anymore.\"\n\n\"If we put all our money together we probably have enough to head out tomorrow,\" Boone said. \"We'll need a good horse for Lula. Do you have any riding clothes?\"\n\nLula shook her head. \"Virgil makes sure we don't have any plain clothes. He'll shoot you, you know, if he catches you taking me away.\"\n\n\"Nobody in the world's gonna know where we're going, right boys?\" Boone said. \"If we all keep our mouths shut nobody'll know. That goes for you, too, Lula. You can't even tell your friends.\"\n\n\"I'll be as quiet as a church mouse,\" she said.\n\n\"You'll have to wear our clothes and dress like a man until we get clear of town, and then we can stop and get you dressed better. Can you tie up all that hair and fit it under a hat?\"\n\nLulabelle nodded, her eyes bright with excitement. \"You should write back to Hetty right away.\"\n\nBoone looked at the map Hetty had enclosed. \"I'd say it might take us two and a half or three weeks on the trail. Perryville. Good God, brothers! We've got our own namesake valley!\"\n\nThe brothers whooped and hollered with mixed emotions. It no doubt woke up a few folks in the still quiet town. Lulabelle smiled.\n\n\u2014\n\nChapter 2\n\nJune 12, 1875\n\nColorado Territory\n\nThe ride had been long and dusty, but not without its pleasures. Virgil Cotter, the owner of the whoring establishment and Lulabelle's former boss, didn't take kindly to her disappearance. The other girls were questioned and slapped around, but Lula had taken Boone's suggestion to heart and she hadn't said a word about her departure or where she was going. Virgil sent out a rag-tag posse, but they reported back to him empty handed, and drunk. He pounded his fist on the table, but Lulabelle was gone.\n\nShe'd been one of his favorite girls, as fine a whore as he'd ever owned, red haired, bright in the eyes and bright in the mind, with a twenty-four inch waist when she was cinched in a corset, and a firm but jiggly thirty-six inch bosom when she wasn't. Her heart-shaped behind was as nice as they come. Girls like Lulabelle don't grow on trees, and Virgil Cotter knew it.\n\nShe didn't hate the job of a whore the way some of the girls did, but being free and heading for a new life felt like being drunk on good wine. The first day on the trail \u2014 dressed in Wesley's clothes, riding at a fast clip and covering their tracks as best they could \u2014 exhilarated her to the point of giddiness. When she and the brothers made camp that first night they had sex like animals in the dirt, Lulabelle taking on the three hard cocks like a wild west thoroughbred. It set the tone for the first few nights, but then things settled and she bedded down with one brother per night, on a rotating schedule. She felt like the most loved woman in all the land.\n\nOn the twenty-sixth day she woke up snuggled against Elijah's warm body. The month of June, nearly half over, still harbored cold mornings. Lula's dusty, dirty body needed a stream to bathe in but there was none that day. For the past three days the boys had wanted to press on even when they passed a bathing stream, stopping just long enough to water the horses. Lula would strip off her pants as quick as she could and splash water on her crotch and her bottom to wash things up a bit, but she still felt crusty all over, from the dust, and the boys' semen, and the sweat.\n\nOn that twenty-sixth morning, Elijah was still sleeping. She pulled his arm around her and soaked in as much of his heat as she could. Boone was up, in the light of the dawn, stirring up the campfire with the toe of his boot. He set a pot on the hot coals, poured water into it, and tossed in some ground-up coffee.\n\nWesley sat up and stretched. He looked happy even though he was tired. It was a big day. According to the map and Boone's calculations, they might ride into Perryville that evening. Wesley's stomach growled. The four had survived on hard tack and salt-cured sowbelly for the last week or so, but the sowbelly was gone.\n\n\"I surely hope stepmother Henrietta has a big pot of hot stew on the stove when we get there,\" he said.\n\nHe pulled on his boots and stood up and stretched some more. Elijah woke up. He nuzzled on Lula's neck and she smiled.\n\n\"We need to be careful,\" Boone said, swirling the coffee around in the pot with a spoon. \"About Lula, I mean. It's not Christian, the way we've been traveling with her, and Henrietta won't like it.\"\n\n\"We can be careful,\" Lula said. \"She won't be staying too long, will she? Just until we can get her to another train, I'd imagine.\"\n\n\"Most likely you're right,\" Boone said. \"But let's all just keep it in mind. Lula's a friend, nothing more. It should only be that way for a few days, like Lula said.\"\n\n\"That means Elijah drew the lucky straw,\" Wesley said. \"He got to spend the last night with her.\"\n\n\"Awe, you're sweet, honey,\" Lula said. \"Just for that I'll let you dress me this morning.\" She threw back the blanket and showed her naked self to the world, her skin goosebumpy and her big breasts pointy from the cold morning air. She leaned back against Elijah and raised her legs toward Wesley. \"Put those breeches on me,\" she said. \n\nWesley picked them up but instead of helping her into them he spread her pretty legs wide, buried his face in her crotch and took a few licks. She smelled dirty and womanly, and he loved it.\n\n\"Careful, honey, you'll get me all wet with tail-juice!\" she said. \"I don't like to be wet with it when I'm riding.\"\n\n\"Sorry,\" Wesley said. He withdrew and ran his hands along Lula's slender legs, down to her ankles, and he guided her little feet into her breeches.\n\n\"Don't be sorry,\" she said, smiling at the boyish look on his face. \"Never be sorry for giving a woman pleasure.\"\n\nBreeches, the first layer of a woman's underwear, are crotchless, to make it easier when nature calls. Lula didn't mind her boys seeing her wearing nothing but the most unmentionable of women's unmentionables. She stood up and stretched, her arms up high toward the sky, pulling the most perfect breasts the boys had ever seen up higher on her chest. She did it every morning, and they never tired of the sight. \n\n\"You know what's next, right? You've watched me enough times.\"\n\nWesley nodded and reached for her cincher, a waist-trimming garment with hook-and-eye fasteners in the front and laces in the back. It is in essence the lower two-thirds of a corset, one that leaves the breasts uncovered but somewhat supported from below. Lulabelle kept her arms up and let Wesley get it in place around her slender waist. She tugged at it to get it up under the sizable heft of her bare bosom just so, and she let Wesley fasten the hooks on the front of it. When he was done he went around behind her to adjust the laces that tightened it.\n\n\"No, honey,\" she said, \"it's fine like this. I like to be comfortable when I ride.\"\n\n\"Why do you wear all this stuff?\"\n\n\"It holds my boom-booms up,\" she said. \"Keeps 'em from bouncing too much on the trail. And around town it just makes me look more like a woman. Don't you boys like 'em when they're up like this, above a slender waist?\" she asked, cradling her big naked breasts with her hands. The boys all agreed that they did.\n\nElijah stood up and he put on his brown canvas pants and his dirty blue shirt. A bandana tied around his neck remained in place, having been there for days. \"I'll surely be glad when we can wash these clothes,\" he said.\n\nLula wiggled her breasts with her hands to get them to lie on top of the cincher the way she wanted them. \"My teats are as cold as ice,\" she said, holding her fingers over her hardened nipples.\n\nWesley helped her into a camisole to cover the cincher, and a man's canvas shirt to cover that. The camisole, or a similar layer called a bodice, was usually worn under a cincher, but she liked it on top more often than not; it stemmed from her whoring days when a cincher was often worn alone. Wesley handed her her canvas pants and she put them on, and then she pulled a knee-length split skirt on over them, one designed so she could ride in a saddle the way a man does. All her clothes were dirty and in need of repair. She draped the dusty blanket over her shoulders for extra protection from the morning chill, and she took the cup of hot coffee Boone handed her.\n\n\"So what's stepmother Henrietta like?\" she asked. \"I like that she calls herself Hetty. That's a sign that she's not as old fashioned as some.\"\n\n\"She's as nice as can be, as far as I remember. A good Christian, I think,\" Boone said. \"It's mighty nice of her to deliver our inheritance in person.\"\n\n\"I was wondering about that,\" Lula said. \"Do you think she's counting on anything? Maybe getting something in return?\"\n\n\"We'll find out soon enough,\" Boone said.\n\nAs the oldest brother, and the one with the most financial sense, he was already mulling over the different possibilities. Had Hetty already received her share, he wondered? Was she interested in the property in the valley in some way? Time would tell, and the day was upon them when they would get some questions answered.\n\nWith everyone eager and the horses in good spirits, Boone pushed the pace on the trail. Arriving from the south meant the last three hours were trail-less, following a creek of snowmelt partway up a mountain, cresting a ridge, and hoping for the best. If luck was on their side the descent would bring them to their valley. Perryville. The place all of them had dreamed of for nearly a month.\n\nThe mountaintop was snow covered, blindingly white in the bright June sun, and as pure and clean as anything Lulabelle had ever seen. She wanted to stop and roll around in it, to clean her body and her clothes, but the valley floor was visible from the ridge and a small settlement lay in the middle of it. Five buildings, just as Hetty had described it. A lone horse grazed in its corral, and a buckboard wagon sat at the ready next to one of the barns. It was all still a long way in the distance, but the valley was beautiful and to the travelers Perryville looked like utopia.\n\nThe buckboard belonged to Henrietta, and she didn't arrive on it alone. She made the ten hour journey with her sister, Augusta, the day after they'd arrived in the Colorado Territory by train from Virginia. They'd had a busy afternoon after disembarking the train. A good looking horse and the buckboard were procured. Hetty asked for the axles to be greased while she and Augusta went to the supply houses where she ordered the things she wanted to pick up the next morning. She knew there was a chicken coop attached to the big barn, so she bought six laying hens, a rooster and a dozen chicks, and she bought dried beef and salted sowbelly. Flour, cornmeal and sugar were purchased, along with potatoes, coffee and tea, yeast powder to make bread, salt for curing and lard for cooking. She bought as much dried fruit as she could afford, and bathing soap for cleaning up. They were simple rations, but they would do until the boys arrived.\n\nAugusta wasn't happy with the ten hour journey on the wooden seat of the buckboard, but she was impressed with Hetty's pioneer-woman ways. Upon arrival at Perryville, the bunkhouse was aired out and the women walked around checking the barns. Everything was intact. If anyone had been there in the eight months since Hetty had left, there was no sign of it. Either the place had been untouched or the visitors were respectful guests.\n\nThe next day, Hetty surprised her sister Gussie with a hot bath. Down near the riverbank, not far from the house, a copper water tank sat on two cribs of rocks, with a fire pit underneath it. A wooden trough transferred hot water to a metal soaking tub. Hetty had used it often the previous summer. She filled the tank with buckets of water from the crystal clear river and she lit a fire underneath it. When the water was steaming she doused the fire, and she went and got Gussie. The God-fearing Bible-toting woman was appreciative, but it took some convincing to get her to strip off her clothes in the great outdoors, in the middle of a wide-open valley with mile-long views across the prairie. An unmarried forty-two year old spinster, Gussie wasn't one to have less than five layers of clothes on unless she was alone and behind closed doors. When she finally did render herself naked she scrambled for the tub and quickly sunk herself under the water, right up to her chin.\n\n\"You're a fine looking woman, Gussie,\" Hetty said. \"You've held up well. Far better than so many of your friends.\"\n\nWhile Gussie washed herself she and Hetty talked of breads and other things they could prepare in the kitchen with the staples they had on hand. When Gussie was close to finished with her bath, Hetty went to the house and walked back out to the tub stark naked.\n\n\"Hetty! What if someone sees you!\"\n\n\"Would they find me ugly?\"\n\n\"No, they would not,\" Gussie said, her soft, southern accent a bit richer than Hetty's. \"You're the spitting image of our mother, God rest her soul.\"\n\n\"We're lucky to be the daughters of a beautiful woman,\" Hetty said. \"I'll be fifty in a few years, but I don't feel it. There are men who still gaze on us approvingly. I saw it with my own eyes on the train.\"\n\n\"How can you stand there so comfortably without a stitch on!\"\n\n\"I showed myself to my dear husband,\" Hetty said. \"You'll get used to it, too, when you have a man. You'll be surprised at the things you'll do, dear sister, when the flesh becomes your playground.\"\n\n\"Do you forget the Bible in the pocket of my dress?\" Gussie said. \"Should I have brought it into the tub with me?\"\n\nHetty smiled and looked up at the sky. \"God is smiling at us. I feel so alive!\"\n\nAugusta watched as her naked sister pirouetted with arms out wide at her sides, hands up like a ballerina's. Hetty danced her way to the river's edge and dipped her toes in the ice cold water. \"What I wouldn't give for a man right now, or two men, one for each of us.\"\n\n\"The dreams of old women are rarely listened to,\" Gussie said. She lifted herself from the still-hot water, and the sun sparkled on the shine of her wet skin. \"The towel, dear sister. Quickly. I don't care to show the world things no one should see.\"\n\nHetty handed Gussie the piece of soft cotton cloth they used for a towel. \"Don't run off,\" Hetty said. \"Let the sun dry your skin. There are no eyes here but mine.\" Hetty stepped into the bath as soon as it was vacant, moaning as she sunk herself down in the warm water, all the way to the tip of her chin. \"How wonderful. A hot bath in paradise.\"\n\nThe tub had been used twice more by the sisters in the days leading up to the brother's arrival, but it was empty when the Perry boys and Lulabelle rode down the side of the mountain onto the prairie that belonged to them. Lula was bringing up the rear, enjoying the scent of the late-spring wild flowers. When they reached the corral nearest the big barn, they were surprised to see two women exit the bunkhouse, both of them wearing long dresses. One woman smiled brightly and waved at the weary travelers with both her arms high above her head, and the other stood stoically, silently thanking God that she wasn't naked in the tub at that very minute.",
        "\"Stepmother Henrietta!\" Wesley yelled.\n\nHetty ran to them and hugged all the boys, but she was confused by the sight of the dirty but beautiful young woman who had ridden in by their side.\n\n\"This is our friend, Miss Lulabelle Flowers,\" Boone said. \"She'll be staying with us for the time being.\"\n\n\"Yes, of course,\" Hetty said.\n\nLula smiled beautifully, the way she always does. \"I'm very pleased to meet you, Hetty,\" she said. \"The boys have told me how very nice you are.\"\n\n\"Oh. Well thank you,\" Hetty said, sounding a little befuddled. \"I'm very pleased to meet you, too. I brought a traveler with me, as well. I'd like you all to meet my sister, Miss Augusta Weatherford. She very kindly accompanied me, and...I do believe she likes it here.\"\n\n\"But who wouldn't?\" Boone said. He stepped over to Gussie and took her hand. \"Augusta?\"\n\n\"Gussie,\" she said in her softly southern accent, blushing at being so informal with a tall, good-looking cowboy. Hetty had told her that the stepsons were aged twenty-eight, thirty, and thirty-three, but she was taken aback by the handsome maturity of them.\n\n\"I'm Boone Perry, and these are my brothers, Wesley and Elijah. And this is Miss Lulabelle Flowers.\"\n\n\"Call me Lula, please,\" Lulabelle said, smiling.\n\n\"You all must be hungry, and need washing up,\" Hetty said. \"I wasn't sure when you'd arrive, but we can put together some hearty food in a hurry. Come, Gussie, let's set the table.\"\n\nWhen Hetty and Gussie had arrived at the closed-up homestead one of the first things Hetty did was check on the stores in the root cellar. She found Edwin's stash of whiskey, some hard cheese and jars of molasses, and a few salt-cured hams packed in a barrel. Mice had gnawed at the containers, but they hadn't made it through. All the food was intact and edible; with boiled potatoes and fresh bread and sweet dried fruit, it made quite a feast for the trail-weary travelers. \n\nThe boys were amazed at what their father had built. As they filled their hungry stomachs at the big table, their eyes never stopped taking it all in.\n\n\"How'd he get glass windows way out here?\" Elijah asked.\n\n\"We had an Irish carpenter amongst the hands,\" Hetty said. \"A fine young man with green eyes. He built the windows and the doors and some of the other more detailed things.\"\n\nLula smiled. \"Green eyes? Did you take a shine to him, Hetty?\"\n\nHetty smiled shyly, and she blushed a little. She didn't answer Lula's question.\n\nGussie didn't say much at the dinner table. She was busy trying to suss out personalities, and she was interested to see the three sons' similarities to their deceased father. She'd only met Edwin a few times, but she'd liked him and she understood why her sister had been attracted to him. Boone had many of the same qualities, and the younger brothers were reminiscent as well. Lulabelle Flowers was the wildcard that Gussie couldn't figure out. None of them appeared to be boyfriend and girlfriend, or husband and wife, and yet the boys were all tall and handsome and Lula was strikingly pretty and possessing of the most feminine body Gussie had seen in a while. The daughter of Gussie's banker in Virginia was a similarly eye-catching young woman, and that girl had so many suitors her father kept a shotgun by the door.\n\nGussie was also starting to worry about the sleeping arrangement. The bunkhouse was just that, one big wide-open room, with a corner kitchen, a big dining table with lots of chairs, and ten single beds, enough to sleep all the hired hands Edwin had expected he'd need to run the ranch. His plan for the next phase of the project was the building of a house that he and Hetty would have lived in, but he died before a single piece of wood was cut for it.\n\nGussie had anticipated the problem, of course, and had already strung up a curtain made of horse blankets she'd found in the barn, wool ones that were unfortunately moth-eaten. It had taken her days to sew patches over all the holes, a job that she was glad she'd finished before the brothers' arrival. But the arrangement still left her stomach churning with nerves. Sleeping in the same room with young men seemed fundamentally wrong to her, not Christian at all. And then there was the problem of Lulabelle. Gussie's colorfully patched wool blanket curtain only enclosed two beds. There would have to be a re-working of the hanging, right away, right after dinner, and she was nervous about how it would work out. Was there even enough of the heavy wool to shield three helpless women from the prying eyes of three virile young men?\n\nIt turned out there was, just barely. Hetty and Gussie and Lulabelle had to push their beds closer together, but it was enough. Gussie walked around the room surveying all the angles. She reluctantly proclaimed it workable, but she didn't look forward to darkness and undressing for the night's sleep.\n\nThe evening featured some whiskey drinking, but not too much. Hetty gave the boys their inheritance \u2014 the deed to the acreage that included Perryville Valley, and nearly nine thousand dollars in gold-certified United States one-hundred-dollar bills.\n\n\"Nine thousand dollars?\" Boone said, his eyes wide with disbelief at the unexpected fortune. \"Hetty, I hope you took a share. As father's wife you deserve to be included.\"\n\n\"I don't need it. Your father and I never had a need to dip into my dowry, so I'll be fine. I'm just happy you boys will be able to make something of this place. You can buy a herd of cattle, and build a proper town if you want. Just be careful with it. Your father would be disappointed if this place doesn't work out the way he dreamed.\"\n\nThe boys celebrated with another glass of whiskey. Lula and Hetty joined in, but Gussie was reserved and mostly silent. The celebration, and the life Hetty had been a part of, wasn't hers. Her stomach was still churning. Getting undressed that evening was the most nerve-wracking thing she'd ever done. She took her Bible to bed with her.\n\n\u2014\n\nChapter 3\n\nThree days passed, and much work was done around the ranch: mending fences, chopping firewood for the stove and the coming winter, fixing a leak in the bunkhouse roof, and shoring up a part of the foundation that had heaved in the frosts of previous winters.\n\nHetty kept busy, of course, but she also kept her eyes open. At various times, she saw Lula kissing each of the brothers, sometimes when another brother was with them. She saw Lula go into the barn with each of the boys, spending time there that didn't involve any chores that Hetty was aware of. She spoke of it to Gussie. The implications disgusted Gussie and she prayed for the boys' salvation. Hetty didn't pray with her.\n\nHetty observed more than just Lula's secretive meetings with the boys. She was getting a feel for Lula's character, and genuinely starting to like the young woman. Lula seemed to be honest, and quite obviously full of life, with a delightful youthful spirit. Hetty hoped to draw those characteristics out of her in a way that would spill over onto Gussie. It was on their fourth day together that it came to pass, washing day, when all three women were doing laundry in the river, nearly side by side under the vast blue Colorado sky. Hetty got to thinking about Lula's obvious experience with men, and she decided to take a chance and ask her a delicate question, even though she knew it would upset Gussie.\n\n\"The boys' father was a virile man, but he also enjoyed...observance. I've often wondered if he was unusual. Have you ever come across a man like that?\"\n\nLula smiled in a small but noticeable way. \"Do you mean a man who likes to watch fornication?\"\n\n\"Yes,\" Hetty said, feeling the heat of a nervous blush.\n\n\"Hetty, that's more common than you might think.\"\n\nHetty held tightly to the man's shirt that was trying to float away in the river's current. She scrubbed it with her hands to loosen the dirt. \"I've noticed you with the boys, the way you are with each of them. Are you their concubine?\"\n\nLula knew Hetty had seen her with at least two of the brothers, so she decided to tell the truth. \"No, Hetty, I'm not their concubine. I'm their lover. I love them and they love me. It's been that way since winter, but our month on the trail to reach this magical place did help to clarify it. When we were together all of those weeks it made us realize the depth of our love.\"\n\nThe charming young redhead's honesty enthralled Hetty, and as Hetty had predicted, it shocked Gussie. But it also interested her. Gussie was convinced that Lula's lifestyle was whorish, but more and more she was fascinated by her.\n\n\"I've seen you kissing each of them, while the others are within sight of it,\" Hetty said. \"There's no...jealousy?\"\n\n\"Not a bit. The Perry boys are different that way. I am, as well.\"\n\nHetty thought about it all and wondered what she should say. She decided to tell the truth, the way Lula had done. \"Edwin was that way. It seems to be a family trait,\" she said, smiling shyly. \"When the hired hands were here last year, building the bunkhouse and the barns, it was a long, hot summer. I was the only woman, for miles around.\"\n\nWhen Hetty paused, Gussie's heart started to pound so hard she could barely draw a breath.\n\n\"Did you all live together in the bunkhouse?\" Lula asked.\n\n\"Yes,\" Hetty said. \"In a big tent at first, and then in the bunkhouse. Everything was quite...communal.\"\n\nLula's lips curled into a little smile. \"Everything?\" she asked.\n\nHetty nodded, her face red with the heat of confession.\n\n\"Hetty!\" Gussie gasped. \n\n\"It was Edwin's idea for me to try it,\" Hetty said, \"but he left it up to me to decide. I must admit I liked it. I liked it very much.\"\n\nGussie sighed and sat back hard on the pebbly riverbank. Looking like she was about to keel over, she fanned her face with her hand.\n\n\"Now that the honesty has come forth, I must confess even more,\" Hetty continued. \"I came back to this valley with lust in my heart. The most powerful lust. It's been a lonely, lonely winter and spring. This place, this magical, wonderful valley, was on my mind every day. The memories are strong.\" \n\n\"Come to the house and pray with me, Hetty!\" Gussie pleaded, nearly in tears. \"Come to the house and pray!\"\n\n\"I brought you here, Gussie, because you're an unmarried woman. I want you to experience the glories of the other side.\"\n\n\"The glories? Of the Devil? There's no such thing, Hetty! Have you lost your mind?\"\n\n\"Maybe,\" Hetty said. \"Maybe I have. Last summer was powerful. More powerful than any church.\"\n\n\"How many hands were there, Hetty?\" Lula asked.\n\n\"Three. Three fine, strapping young men, all of them able to put in a solid day's work. I cooked for them, of course, and they ate like there was no tomorrow. They gave everything their all.\"\n\n\"Where are they now?\"\n\n\"I asked after them when we passed through town last week. They've all scattered, as far as I know.\"\n\n\"It's all making sense now,\" Lula said. \"Now I know why you were so surprised to see me arrive with the boys; why you seemed disappointed that I was here.\"\n\n\"It was a shock, I'll admit it,\" Hetty said. \"I'm still trying to sort through my feelings. It seems like I was pulled here by thoughts not my own. Drawn back to this place, this valley. I'm afraid I can't explain it.\"\n\n\"It's the Devil,\" Gussie said, still sitting on wet pebbles at the very edge of the water. She could feel it soaking through her dress, but she was powerless to move.\n\n\"What you feel is desire, Hetty,\" Lula said. \"There's nothing wrong with it. It's a woman's prerogative, in this day and age. It's eighteen seventy five! We're women! We should have a say in our desires, and how we quench them!\"\n\n\"If only that were so,\" Hetty said, sounding dejected. \"The year doesn't matter. Nothing ever changes.\"\n\n\"But this is Perryville!\" Lula said, trying to cheer her up. \"You and Edwin made it in your own vision. It is what it is!\"\n\nGussie looked on in disbelief at the conversation. She wondered if her sister had brought her directly into the Devil's lair.\n\nHetty looked unsure about Lula's proclamation. \"It is what it is? But what is it? A valley so beautiful it brings tears to my eyes? Yes, it is that. The ground where my dear husband is buried? Yes, it is that. But what more? I must admit I'm less lonely. Seeing the boys is a great comfort, every day.\"\n\n\"Is seeing them wash in the river a great comfort?\" Lula asked, with a mischievous smile. \"I've seen you, Hetty. Two days ago, I watched you watching them. I don't say this to shame you. I say it to help you. We're women! We should have a say!\"\n\nHetty smiled nervously. \"Should we?\"\n\n\"Yes! Men have always done it, watched women bathe in rivers and ponds. They peek through cracks in doors and walls to watch women bathe indoors. Why should we not empower ourselves to do the same?\"\n\nGussie raised her hand, the one that usually had a Bible in it. \"Because it's wrong!\" she said. \"Evil has a way of creeping up on you! If you let it, you'll be dragged down to the gates of hell!\"\n\n\"The gates of hell,\" Lula smirked, \"have been greatly exaggerated.\"\n\nHetty chuckled, and it felt good. \n\n\"The boys know nothing of your interest, by the way,\" Lula said. \"And I won't tell them, unless you want me to. There is something else to think of, though. Why do you think they bathe in the stretch of river so near the house? Do you not think they realize they're within the view of both you and Gussie? There is a powerful force at work here, and it's not the Devil. It's God's work. Only God can make things that are as beautiful as this valley, and as beautiful as the naked bodies of strong young men. Even you, Gussie, must believe that.\"\n\nHetty smiled at Lula. \"You preach the gospel of love. You're a smarter girl than I thought you'd be.\"\n\nGussie spoke up. \"If you think gazing upon the naked flesh of a man who is not your husband is a smart thing to do, I shall find some passages of the Bible for you to study. But I can not disagree with one thing \u2014 only God can make things that are as beautiful as this place. I felt the power of this valley as soon as Hetty drove our buggy over the ridge and down into it. There's a spirit here that makes me feel so much more alive than I felt back home in Virginia. I'd be grateful if you didn't desecrate it with talk of the evils of the flesh.\"\n\n\"What of God creating man?\" Lula asked. \"Is man not beautiful, too?\"\n\n\"A clothed man can be handsome,\" Gussie admitted. \"Of course I believe that to be true.\"\n\n\"But the clothes are an invention of us, of humans,\" Lula said. \"God delivered us naked. It's only us, women I would guess, who decided clothes should be worn. God made our bodies the same as he made a horse's, or a wild cat's, or a bird's.\"\n\n\"But they have feathers and fur to cover them!\" Gussie insisted. \"We had to make our own!\"\n\n\"An animals private parts are in the open, as I'm sure you've seen,\" Lula said. \"A horse's cock is something to behold! Our men, when they do their bathing, are simply out in the open the way nature intended. Their charms are great, as Hetty has seen. Hetty, did the boys get their hammers from their father? Was Edwin's a big as a pump handle?\"\n\nGussie protested with a harrumph, but she didn't get up and leave, as she easily could have. She sat and listened.\n\n\"Yes, a pump handle is about right,\" Hetty said, smiling shyly. \"One of our hands had an even larger hammer. When he had a horn it was more than impressive. Donkey-hung, with large plums.\"\n\n\"Do you enjoy the ball-bags?\" Lula asked. \"I find them fascinating.\"\n\nGussie's heart was pounding to the point of cutting off her breath again.\n\n\"So soft and delicate,\" Hetty said. \"I love that every big strong man has such a softness.\"\n\n\"The power is ours when they're in our hands,\" Lula said. \"A good squeeze of the plums will bring the strongest man to his knees.\"\n\nHetty chuckled nervously. She was enjoying talking to Lula about men. The two women splashed more pieces of dirty clothing into the gin-clear river, slapping them on the nearest rock. Gussie breathed deep, trying to steady her heart. After a few quiet moments, with no sound but the gurgling of river water and the slapping and squeezing of wet clothes, Hetty spoke...\n\n\"They're not my sons. The boys were born to another mother.\"\n\n\"Yes, I'm aware,\" Lula said. \n\n\"My sister seems to think otherwise, even though she knows the truth.\"\n\n\"I know the truth, and I don't think otherwise,\" Gussie said. \"You are not their mother, but you are also not their wife. You are nearly the age of their mother. Have you not thought of that? Are thoughts of the sins of the flesh altering your mind? I declare, Hetty, sometimes I just don't recognize the sister I once knew.\"\n\n\"And yet you say you love this valley,\" Hetty said. \"You feel its power and its spirit. What you feel is the spirit of the flesh. You've known all winter, haven't you, what went on here last summer. You gleaned it from my silence, and from the words I carefully chose to keep it all to myself. You read me like a book, and now you are here, here in this very valley where the flesh reigns supreme. I could ask you why, dear Gussie, but I know. I know why you're here.\"\n\nGussie turned her red blushing face away from her sister. She squeezed the rinse water out of a pair of men's trousers, twisting them hard in her white-knuckled fists. She was embarrassed; her innermost thoughts were being outed in front of Lula. \"So, what of it?\" she said, twisting the pant leg tight again. \"Am I a sinner now? Is Virginia a better place for me? Back amongst the men in suits and ties, men who, to the last one of them, decided I was already too old to be desirable? God loves me. His love is all I need.\"\n\n\"Yes, he does love you,\" Hetty said. \"And he brought you here, for a reason. I just hope you're open to it, if and when it presents itself. It's God's beauty, Gussie. Believe me when I tell you. It's God's beauty.\"\n\nHetty knew she'd gone too far, spoken much to openly. There was nothing for her sister to be ready for, just crazy dreams in Hetty's own head. She felt a mixture of emotions after the impromptu confession on the river's pebbly bank \u2014 nervousness about the way her sister took her honest admissions, and exhilaration from the way Lula took them.\n\n-\n\nThat night, Hetty got up to go to the privy. It was an every night occurrence, and she always made it a point to walk past all the sleeping brothers in the dark silvery moonlight. On previous nights she'd seen bare chests and bare backs, and handsome male faces softened with the relaxation of dreams. On that night, during a dream, perhaps, Wesley's blanket had been pushed down, all the way to his thighs. His lean, muscular body lay naked, his cock nearly fully hard. His motionless hand held it, his fingers gently cupping his soft ball-bag, with the long, solid meat of his manhood extending between his thumb and forefinger, resting on his belly. The sight of it stopped Hetty in her tracks, next to his bed. She breathed softly and stood still. She'd seen him naked before, from a distance, bathing in the river, but up close, sleeping, with the hot blood of a sexual dream in him, his quiet masculinity was magnificent.\n\nIn the morning, Hetty and Lula walked toward the barn, both of them silent, taking in the splendor of a new day in the valley. They brought with them some crumbs for the chickens, and a jug of drinking water for the brothers. Boone had decided the day's work would be getting the barn cleaned up and ready to house some milking goats. When Hetty and Lula approached, they heard the brother's voices inside the open door. Wesley was speaking...\n\n\"I woke last night when Hetty got up out of bed for her privy walk. She always walks right past me on her way, but last night she saw all of me.\"\n\n\"I heard her and saw her,\" Boone said. \"She stood there for the longest time.\"",
        "\"She did. I tried to look like I was sleeping.\"\n\n\"She believed it,\" Boone said. \"But what if you'd surprised her and opened your eyes? Maybe she would have mouthfucked you, in the quiet, in the dark.\"\n\n\"I wouldn't have minded,\" Wesley said. \"When I woke I was dreaming of Lula, but Hetty...what do you think of her and Gussie?\"\n\n\"I've been wanting to ask you two the same,\" Boone said.\n\nHetty looked stunned by the overheard conversation, so Lula took charge, pulling her down to a sitting position next to the chicken coop, where they could clearly hear the brothers' voices without being seen.\n\n\"You tell us first,\" Wesley said to Boone. \"You're closest to their age. What do you think of them?\"\n\n\"I've wondered how old they are,\" Boone said. \"I think Gussie may be ten years older than me, and Hetty fifteen. I don't know math, but that's less than a generation. For you two they may work out to be more motherly in age. Does that bother you?\"\n\n\"Bother me?\"\n\n\"If she had mouthfucked you. A woman her age.\"\n\n\"I already said, I wouldn't have minded.\"\n\n\"Do you think they bathe when we're out surveying the land?\" Elijah asked.\n\nBoone chuckled. \"So they've caught our little brother's eye, too. I guess I shouldn't be surprised. Your cock horned for Lula's friend Kitty at the house, and she was Hetty's age. They all have a right fine bosom, and slender waists to hold onto.\"\n\n\"Does it matter that Hetty was Father's wife?\" Wesley asked.\n\n\"Not to me it doesn't. She's not my mother,\" Boone said. \"If I found her alone and she wanted me, I'd mount her like the fine filly that she is. Father always had good taste in women. Our mother was as beautiful as I've ever seen.\"\n\n\"Was she?\" Elijah asked.\n\n\"Of course! I've told you,\" Boone said. \n\n\"Gussie looks at me with interesting eyes sometimes,\" Wesley said, \"and Hetty saw me naked in my bed. What should we make of it all? Is it just the horns that Lula gives us that mix up our thoughts?\"\n\n\"Hetty didn't just see you, she devoured you, standing there as long as she did,\" Boone said. \"And why do you think they're here? There's been no talk of them leaving. Not a single word. Think about this \u2014 they didn't expect Lula to be here. They came here, the two of them, knowing they'd be alone with us in this valley. A full day's ride from another human soul. In a bunkhouse where we all share our sleeping. Bathing in the open. Just their two nicely bosomed selves and we three brothers.\"\n\n\"They're nicely bottomed, too,\" Wesley said.\n\n\"Yes. Bigger and rounder than Lula's small bottom,\" Boone said. \"Picture yourselves dog-fashion behind those sisters' round bums, with nothing on their bodies but cinchers. They'd look like proper whores, don't you think?\"\n\nWesley's eyes widened when he heard his older brother's words. Elijah sat down on a crate. The conversation was getting serious.\n\n\"Do you think they hope to marry two of us, or...?\" he asked.\n\n\"My best guess?\" Boone said. \"Gussie wants marriage, but not to someone as young as you two, and not to someone who doesn't hold a Bible in his hand. Hetty is a different kind of fish. It was her idea to come here, and it was her eyes on your horned cock last night.\"\n\n\"You had a horn?\" Elijah said. \"You let her look at it?\"\n\n\"I woke with it,\" Wesley said, smirking. \"You know how it is. And her looking made it harder.\"\n\n\"You know the fun we have with Lula,\" Boone said. \"We all love her, and she does her best for us, but there's only one of her, and three of us. We can't gang up on her anymore, with prying eyes watching. I feel the need for another woman, or maybe two.\"\n\n\"But would it be right?\" Elijah said. \"We're not outlaws.\"\n\n\"This is Perryville,\" Boone said. \"We make our own laws here. Laws are voted by a council, and the three of us are it. I vote to make fornication legal without marriage, and to make age nothing that matters, and to make a father's second wife nothing more than a woman who loves the horn. We'll leave it up to Hetty and Gussie to decide if they want to be included or not. We need to be respectful of their wishes.\"\n\nWesley smiled. \"You have my vote.\"\n\n\"And mine,\" Elijah said.\n\nOutside the rough-hewn barn wall, Hetty was overwhelmed by raw emotion. Her eyes were wildly alive and glassy. Lula took her hand and quietly led her away, down to the riverbank. \n\n\"Are you as pleased by this as I think you are?\" Lula asked.\n\nHetty nodded. \"Yes...Are you?\"\n\n\"Of course. I think it's perfect news,\" Lula said. \"What about Gussie? If the onslaught comes, will she be accepting of it?\"\n\n\"I fear she won't,\" Gussie said. \"It's still too soon. I've been planting some seeds, but I don't yet know if they've taken root, or if they ever will. Now that I know of the boys interest \u2014 oh my, my heart is pounding \u2014 I'll work harder on her. You must think I'm a crazy, desperate old woman, but I see this as an opportunity I can not pass up. A man who sees a gold nugget in a stream wouldn't walk away.\"\n\n\"No, he wouldn't, and from the sounds of it our boys have realized they've struck gold, right here in Perryville. What did you make of the talk of marriage? Was that on your mind when you made the journey here?\"\n\n\"No, I can honestly say it wasn't, and I'm sure it wasn't on Gussie's mind. I came here looking to re-live the best summer of my life, the summer I told you about, with Edwin and the hired hands. I stand here in disbelief realizing this magical place might have more in store for me, and for my dear sister, as well.\"\n\n\u2014\n\nChapter 4\n\nThree more days went by. They were not without interest. Hetty made it a point to plan work chores that the three women shared so she and Lula could talk openly about men. Gussie knew what her sister was up to, and she thought she had her defenses firmly in place, but the new things she was learning were more exciting than anything she'd ever imagined. Among the other revelations, Lula confessed that she'd worked in houses of ill repute, and that she'd met the brothers under those circumstances. She recounted the experience of their rescue of her from the outlaw-owned place \u2014 wearing Wesley's clothes, tying her hair up to look like a man, riding fast along treacherous trails, listening for snapping twigs at night until they were three days away, well on their way to their new life in Perryville.\n\nHetty loved the fact that Lula had been a real live whore, and Gussie was disgusted at herself for being interested. The language Lula brought with her was brand new to Gussie, and it was rich with visual meaning. Lula had fascinating words for everything, sometimes four, five or six different words for the same thing. Breasts, boobies, boom-booms and teats were the top parts of a woman, but the more interesting words were reserved for the part down below. Gussie had been taught to call it a vagina, but even that was frowned upon in her world. \"Your lady area\" was more widely accepted. Lula, though, brought forth a veritable basketful of new terminology \u2014 snatch-box, clam, holster, tunnel, bore, cunt, cock-trap, and jam-pot. The terms were sweetened with words like fur, cunt-lips, cunt-wig, and, one that made Hetty laugh: tail-juice.\n\n\"What on earth is that?\" Gussie asked. As soon as the question was out in the open she scolded herself for asking it.\n\n\"It's your lubrication, Gussie,\" Hetty told her. \"God designed we women to be fucked, and to get a big hammer-sized cock into us two things need to happen \u2014 the man needs to have a well-hardened horn, and we need to have a slippery cunt. I'm sure you've noticed your own tail-juice from time to time. I can feel mine moistening whenever I meet a handsome man.\"\n\n\"Why would you want to?\" Gussie asked, embarrassedly.\n\n\"What, Gussie? Meet a handsome man?\"\n\n\"No. The big...I mean, the...hammer sized.\"\n\n\"Ohhh,\" Hetty said. \"Well, now we're getting somewhere.\" The women were in the kitchen making bread, so Hetty reached for the whiskey bottle and poured three small glasses.\n\n\"You know I don't drink,\" Gussie said.\n\n\"Try it for me,\" Hetty said lovingly, \"and we'll talk about men and their horns.\"\n\nThe women placed kitchen towels over the three loaves they'd just finished kneading, and they sat down at the table for a short break from their chores. Their hands were white with flour and little bits of sticky dough. They all took a sip of whiskey; Hetty smiled at Gussie's grimace.\n\n\"You'll get used to the taste of it,\" Hetty said. \"Just enjoy the warmth that it gives you.\"\n\n\"It's similar, in a way, to what we were talking about, isn't it,\" Lula said, savoring her sip.\n\nHetty cocked her head with curiosity.\n\n\"I mean,\" Lula continued, \"we were going to talk about men with big hammers, right? That warm, interesting feel of good whiskey hitting your blood is similar to that wonderfully warm feeling of a big hard hammer slipping inside you. That's what the tail-juice does, Gussie. It lets the man slide in. Take another sip of your drink, a little bigger one.\"\n\nGussie put the glass to her lips, took some of the golden liquid into her mouth and swallowed it down her throat. It was indeed a bigger sip, and the feeling of warmth was powerful. There was something more to it as well, an inner rush of a kind of euphoria that was brand new to her.\n\n\"Imagine that feeling...here,\" Lula said, reaching for her own crotch, squeezing it with her hand, through her skirt. \"It's a place right in the middle of you. God put it there so the feelings can reach every bit of you, from your finger tips to your toes. They don't call good sex toe-curling for nothing.\"\n\n\"But I still wonder,\" Gussie said quietly. \"I've heard whispers over the years about...size. All the words you use, they often reference it.\"\n\n\"Big hammers? Is that what you mean?\" Hetty asked.\n\n\"Donkey-hung,\" Lula smiled. \"Maybe you've heard pump handle, or big as a fencepost.\"\n\n\"Yes,\" Gussie said. \"But why?\"\n\n\"Why would a woman want that?\" Hetty said. \"Is that what you mean?\"\n\nGussie nodded, and she took another sip of her whiskey.\n\n\"It goes back to the warmth,\" Lula said. \"A bigger cock makes me warmer. More of those mysterious feelings. Everything feels... more.\"\n\n\"We talked the other day of the boys' bodily charms, and how they match their dear departed father,\" Hetty said. \"Lula, do fathers and sons often match in that regard?\"\n\n\"Cock size and ball bags? From what I've seen they do.\"\n\n\"As you can imagine, I saw Edwin with a horn many a day and night,\" Hetty said, \"but I must confess to you, dear sister; I saw his son Wesley with a horn just four days ago.\"\n\nGussie's eyes were wide open with intrigue. \"How is that possible?\"\n\n\"I know you've watched the boys bathe in the river...no...don't deny it...but seeing them flaccid is only half the story,\" Hetty said. \"I wish you could see the tender giants that those cocks are when they're hard.\"\n\nGussie's face was as red as a beet. Her embarrassment felt warmer than the whiskey, but she was strangely glad that her spying on the bathing men was out in the open; she'd been feeling the need to confess.\n\n\"Have you been lucky enough to see Wesley uncovered at night, when you go for your privy walk?\" Hetty asked her.\n\nGussie shook her head. She had looked at the boys once or twice when they slept, but they'd always been mostly covered. A fairly close-up look at their bare chests had been her most exciting discovery, and it was indeed very exciting.\n\n\"Men have a peculiar trait,\" Hetty said. \"Their cocks are often hard as a horn when they sleep. Do you think it's their dreams that do it, Lula?\"\n\n\"Yes, that's what I've always thought.\"\n\n\"So, dear sister, be on the lookout for lumpy blankets, or, as I found four nights ago, blankets that have been cast off. Wesley must have been warm, because he was uncovered nearly to his kneecaps, and he was dreaming, and his big pump-handle of a horn was in his hand.\"\n\n\"In his hand?\" Gussie said. Her eyes were wide and she was riveted to the exciting conversation. She took another sip of whiskey.\n\n\"In his hand,\" Hetty said.\n\n\"That happens a lot, too,\" Lula said. \"They like to hold them.\"\n\n\"They do?\" Gussie said.\n\n\"They're amazing pieces of anatomy,\" Hetty said. \"The skin that covers them is made of the same thing as the inside of our cunts,\" Hetty said. \"What feels so amazing to us feels just as much so to them.\"\n\n\"They only have the feeling in them when they're hard, or so I've been told,\" Lula said.\n\n\"Oh! Interesting!\" Hetty said. \"I've wondered about that.\"\n\n\"So Wesley was...like that?\" Gussie asked. \"Right in our room?\"\n\n\"Yes. A beautiful young man,\" Hetty said.\n\nThe women were startled by someone coming in through the open doorway. Gussie leapt to her feet, nervously straightening her dress and her flour-soiled apron.\n\n\"Don't mind me, ladies,\" Boone said. He went to his duffel bag and pulled out his knife. \"Something smells good.\"\n\n\"It's just bread dough,\" Hetty said. \"It'll be baked and warm for dinner.\"\n\nThe three women watched him leave.\n\n\"Big hammers isn't the only thing I like about the Perry boys,\" Lula said. \"Three men with behinds like that has got to be some kind of a jackpot.\"\n\nHetty chuckled, and Gussie chuckled, too.\n\n\u2014\n\nChapter 5\n\nThe women chatted about sexy things for at least a few minutes numerous times a day. Hetty loved picking Lula's brain about the finer points, and Gussie had even started asking Hetty questions on her own, all of which made Hetty smile. There was still no talk of her and Gussie leaving the valley \u2014 nobody seemed to want them to \u2014 so Hetty was feeling good about things. The boys' conversation in the barn, the one that she and Lula had overheard, stayed on her mind. She knew the stage was set for bigger things to happen, the very things she'd dreamt about for months, but getting the fuse lit was tricky business. Two nights later, Hetty found her opening.\n\nIn the darkness, while the house slept, Hetty's gentle hand awakened Gussie. Hetty had her fingers to her own lips, silently asking Gussie to keep quiet. Gussie's heart raced \u2014 she wondered if there was an intruder or something else to be afraid of, but Hetty's face looked calm and happy. \n\n\"It's Wesley,\" Hetty whispered nearly silently, directly in Gussie's ear. \"Come and look.\"\n\nGussie knew immediately what her sister was up to. It should have been shocking, but it wasn't. She shouldn't have gotten out of bed, but she did. She should have kept the Bible in her hand, the well-worn black one that she slept with every night, but she left it on her warm bed and she flipped her blanket over it, hiding it from view.\n\nThe two women had their nightgowns on; heavy, long-sleeved cotton garments that buttoned all the way to their necks and nearly touched the floor. The sisters made their way between the hanging horse-blanket curtains and Lula's bed, creeping as silently as they could, toward Wesley's bed just ten or twelve feet away. Gussie's heart thumped so loudly she could hear it inside her head.\n\nThe moon wasn't full and the big room was very dark, but Gussie's eyes could see. Maybe it was her curiosity that brightened the visuals. For whatever reason, Wesley's naked manhood, pump handle big and horn hard, seemed to Gussie to be lit with an inner light. Wesley's hand was on it, the way Hetty had said it was the week before. The entire scene that spread out before her overwhelmed Gussie. Three sleeping, masculine men, two with bare chests and one with his hard cock in his hand. She nearly fainted.\n\nHetty put her lips right against Gussie's ear and whispered, nearly silently. \"Go back behind the curtains and watch me through the opening.\"\n\nThe barely-there whisper reminded Gussie of her childhood with Hetty, when the two of them played simple games. Gussie backed away, back toward the curtain, feeling as if she was walking on someone else's legs. Leaving Hetty behind with a naked man felt reckless, but it all happened quickly, with her mind still in the fog of sleep.\n\nBack behind the curtains, Gussie moved the opening slightly, letting Hetty know she was watching. Hetty had already gone down on her knees, and Gussie tried to come to grips with what was happening. She glanced over at Lulabelle, sleeping soundly, her big breasts nearly spilling out of the half unbuttoned camisole that she always wore to bed. When Gussie looked back at Hetty she could hardly believe her eyes. Hetty had Wesley's cock in her hand, with her kissing lips on the odd looking end of it. The boy moaned softly as if he was dreaming, and then Hetty's head plunged downward and Wesley's horny cock all but disappeared in her mouth. Wesley, newly awakened, lifted his head to watch. Hetty's head rose and the big cock was visible again, and then she plunged downward again. Up and down her head moved, over and over, with Wesley softly sighing. Gussie's eyes were as big as an owl's. It was a mouthfuck! Right there in the open!\n\nLess than a minute later it ended. Wesley's hands held onto Hetty's head and his body tensed and showed all its strong muscles, his breath escaped him in a new and different way, and then Hetty scurried back behind the curtain. She sat on the side of Gussie's bed with her. \n\n\"Do you want to taste him in my mouth,\" she whispered in Gussie's ear. \"His spunk is plentiful.\"\n\nGussie shook her head, looking a little frightened. The episode had indeed been reckless, and Gussie worried about what would happen next. My sister the whore, she said to herself, looking into Hetty's excited eyes.\n\n\"Go to sleep,\" Gussie whispered in her older sister's ear. \"We don't want the others to wake.\"\n\n\u2014\n\nChapter 6\n\nIn the morning, no one spoke a word about the nocturnal tryst. The conversation at the breakfast table was the same as usual \u2014 guesses about the coming weather, plans for the day's work, and ideas for future projects. When the men scattered, the women cleaned up the dishes. Afterward, Gussie went for her daily walk in the meadow, amongst the wildflowers, with her Bible in her hand.\n\nHetty was alone in the house when Lula ran in. She grabbed Hetty's hand and dragged her out the door, heading toward the barn at a fast clip. With the men inside, talking, Lula and Hetty settled in like spies, next to the chicken coop, listening through the opening. Hetty's heart was pounding.\n\n\"What did it feel like?\" Boone asked. \"Is she skilled?\"\n\n\"It was quick, but that's because it was good,\" Wesley said. \"She swallowed my spunk.\" \n\n\"I saw,\" Boone said.\n\n\"She swallowed?,\" Elijah said. \"I thought just the girls from the houses did that.\"\n\n\"Not if you're lucky,\" Boone said. \"But even a mouthfuck is a lucky thing in the real world.\"\n\n\"Maybe she's a whore,\" Elijah said. \"Maybe father met her in a house and fell in love with her, like we did with Lula.\n\n\"It's possible, but I don't think so,\" Boone said. \"She's educated, from back East. Father told us he met her in a small town were she taught school. I don't think he lied to us. I think her appetites are due to Father. Think about it \u2014 every time we meet someone who knew him we're told how much like him we are. That means the opposite is true. He must have loved being with women as much as we do, and Hetty must have learned well.\"\n\n\"How did she mouthfuck so quietly?\" Elijah said. \"Why didn't you wake me?\"\n\n\"How would I have done that?\" Boone said. \"I didn't want her to know I was watching. We don't know how fearless she is. Maybe it's just Wesley that has her eye. Maybe it will never happen again. We don't know. I do know I'd love to see her out of that nightgown she wears. Don't you wish she and Gussie would dress for bed like Lula does? Maybe we should try harder to catch them bathing.\"\n\n\"But I still don't understand why a woman of her age would act like a horn-loving girl,\" Elijah said. \"It's not common, is it?\"\n",
        "\"I've heard tell of the appetites of widows,\" Boone said, \"and I've experienced it once or twice. When they mourn, their desires cease, and then the weeks and months pass and their cravings grow again. It makes sense, doesn't it? Father died eight months ago. Her cravings must be sizable. What she did last night proves it.\"\n\n\"But what of Gussie?\" Wesley asked. \"She's never been married, and she's nearly as old. Do you think...she's still a virgin?\"\n\n\"I'm sure of it,\" Boone said. \"But her actions have changed since we've been here, have you noticed? She's befriended Lula, and Lula's not hiding her true self. Gussie seems more open to worldly things than some of the Bible-toters. There's still a mystery about her, though. She drank whiskey, during the daytime. I saw her do it.\"\n\nWesley looked surprised. \"Gussie? You must have been the drunk one. She would never.\"\n\n\"Her eyes are below our belts when she thinks we don't see,\" Elijah said.\n\n\"Yes,\" Boone said. \"She's a woman.\"\n\n\"She spoke long and pleasurably to me, two days ago,\" Wesley said. \"She asked about our education and our upbringing. She seemed pleased that we were schooled so well back East.\"\n\n\"Did you tell her how many fights we've been in because of it?\" Boone chuckled. \"She's lucky to be in this valley. The coarser men of Arizona would open her eyes.\"\n\n\"So what of Hetty and Gussie?\" Elijah asked, trying to sort things out in his mind. \"Where does it go? And what of Lula? Do we still hide with her, in the barn, when Hetty and Gussie aren't looking?\"\n\nBoone nodded. \"I think we do. We're a family now, we can't just act like savages and scare Gussie back to Virginia. I, for one, would miss her. No, there's too much unknown. Let's let Hetty play her cards.\"\n\nLula tugged at Hetty's hand and the two women moved silently down the pathway to the riverbank.\n\n\"Tell me what happened!\" Lula asked, her eyes wild with excitement. \"You mouthfucked Wesley in the night?\"\n\nA flush of heat nearly boiled Hetty's blood. \"I did. It was impulsive. I know he's yours; I should have asked your permission.\"\n\n\"My permission?\" Lula said. \"Hetty! You know you have it! The boys are ours, not mine!\"\n\nHetty was breathlessly excited, and her hot blood was pumping. She rattled off her wishes. \"I want him to fuck me tonight. Don't tell Gussie, I want to surprise her. Do you think he'll want me?\"\n\n\"Hetty!\" Lula said, smiling, with her eyes wide. \"I love your devious nature! Of course he'll want you!\"\n\n\"You won't tell the boys?\"\n\n\"Are you kidding?\" Lula said. \"This is fun! What did you mean about surprising Gussie?\"\n\n\"She watched me last night.\"\n\nLula looked even more happily shocked. \"She didn't! You with a mouthful of cock?\"\n\n\"It was her first look at a man with a horn. I woke her and stood with her, next to Wesley's bed. He was hard again, from his dreaming.\"\n\n\"How did she take the sight? Was she shocked?\"\n\n\"Not that she showed. I haven't questioned her about it. I want to keep showing her things. She'll come to her own opinion, the way she always does.\"\n\n\"Was she standing there when you mouthfucked him?\"\n\n\"No, behind the curtains, watching. When I retreated I offered her a taste of him from my mouth, but it was all too much for her. I wonder if she slept.\"\n\n\"How did you learn to take spunk in your mouth? Edwin? The hired hands?\"\n\n\"Yes, it was here. In this very bunkhouse, on the same kind of dark night. Two of the hands were gone for a few days, off over the mountain to buy supplies. The third hand stayed behind. He was a bearded young man named Cornelius. Handsome and tall, with dark eyes. I guess you could say that night was the dawn of my awakening. On a few occasions Edwin and I had made humorous talk of me whoring it up with the hands, but until that night it was just talk. I'm not sure if he expected that I would truly follow through, but after some whiskey with Cornelius they sat me down on my bed and I lowered both their trousers. I'd mouthfucked Edwin, many times, but never 'till he shot his roe. When Cornelius was in my mouth Edwin implored me to finish him, to drink him like undercooked pudding.\"\n\n\"Was his spunk plentiful?\"\n\n\"Oh, my! It ran down my chin! I knew what to expect of its texture, warm and smooth, but the taste and the way it felt on my tongue surprised me. I'm afraid I became a spunk whore; I drained the men regularly.\"\n\n\"I don't blame you. And Edwin was pleased? Why aren't there more husbands like him.\"\n\n\"He was! It surprised me so, his pleasure, but he took pride in being husband and master of a woman the men all loved. That's why I have such understanding for you, dear Lula. Our boys all love you. I know how it can be.\"\n\n\"They'll all be loving you, soon enough,\" Lula said.\n\n\"I dream of such a day,\" Hetty said, \"but I fear it won't happen unless Gussie has some acceptance. I can not leave her behind, the only one of us unhappy. That's why I want, tonight, to show her more. To show her the ease and beauty of a quick fuck in the dark. I fear she has visions that are ugly. I remember my own visions, before I knew reality.\"\n\n\"Oh, I know,\" Lula said. \"Yes, as a girl I was frightened by what little I knew of fucking. It all sounded so awful. I think Gussie is on the right path. She has a loving teacher in you. So, will you be naked tonight? I wonder if that would be too much for her.\"\n\n\"Yes, my nightgown will cover things. Seeing a hammer the size of Wesley's enter me might sicken her. One has to build a tolerance. First she must see the pleasure on my face and on Wesley's, and watch the movements. Do you find the rhythmic movements of fornication as beautiful as I do?\"\n\n\"Yes, very much so,\" Lula said. \"May I watch you tonight? I can stand with Gussie if you don't think she'll mind. I miss watching the other girls at the house. I'll be wishing to see Wesley's hammer slipping into your bore, slick and shiny with your tail-juice, but I'll be patient and hope to see that another day.\"\n\nHetty's face was red, and she fanned it with her hand. \"My Lord in heaven, I think I might faint from the thought of it!\"\n\nLula chuckled. \"You might, from the looks of you.\"\n\n\u2014\n\nOut in the meadow, Gussie walked. She loved the rolling knolls and swales of the floor of the valley, and the way the warm winds moved the prairie grasses and the flowers. She observed it all as she walked, the way she always did, but on that morning her mind was on Wesley Perry's virile young body. He was ten or more years younger than her, the age that some of the boys she used to babysit would have grown to. No matter how many interesting flowers and insects she saw on her walk that morning, the picture of him in her mind kept coming back to her \u2014 Wesley on his back in the silvery darkness; his midsection flat and taut with muscle; his manly chest moving with each of his shallow breaths. The size of his cock in its hard state was the revelation of years of mystery. Gussie knew they hardened, and she'd even had an inkling that they grew, but seeing it in three dimensions and in flesh and blood proved that a real life man was so much more than her craziest thoughts had ever imagined. She struggled, as she thought about it, to decide what to call the big thing. Cock, hammer and horn all seemed crude, but Hetty and Lula seemed fond of those terms. Gussie liked the pump handle analogy, especially after seeing Hetty's small hand on Wesley's hard shaft. As she walked amongst the flowers she formed her right hand into the shape Hetty's had been in when Hetty was holding the big thing upright, right before she put her lips to its tip. Gussie stopped walking and looked at her hand, adjusting her grip on the imaginary cock to various sizes, wondering just how big a man can get.\n\n\u2014\n\nChapter 7\n\nAfter dinner, cards were dealt around the table and a few hands of poker were played. Gussie was a beginner. She'd always thought of poker as the Devil's game, designed to ruin the lives of otherwise upstanding men by stripping them of their hard-earned fortunes, but in the friendly confines of the candlelit bunkhouse it seemed harmless enough. The cards and poker chips were left over from the previous summer, when, unbeknownst to Gussie, the game was used to gamble for Hetty's sexual favors, with the payout given on the nearest bed, just eight feet away from the table, with the other players all watching. That excitement came just before the end, in the final weeks before Edwin's untimely death.\n\nThere was no gambling for anything of value in the game Gussie was playing. Just a simple game played for chips, with small glasses of whiskey to sip on and much good cheer. \n\nHetty eyed Wesley over her fanned-out hand of cards. \"Did you sleep well, Wesley?\" she asked. \"I heard you in the night. It sounded like you were having a good dream.\"\n\n\"I did sleep well. It was a very good dream.\"\n\n\"We all sleep so soundly after our busy days,\" Boone said. \"The beds are comfortable, aren't they? Are you women secure and untroubled behind your curtain?\"\n\n\"Yes, I am,\" Hetty said. \"Are you more relaxed now, Gussie, now that you've gotten to know Edwin's boys?\"\n\n\"I am,\" Gussie said. \"If I'm to be honest I'll admit it worried me. Much about coming here worried me.\"\n\n\"So why did you come, Gussie?\" Elijah asked. \n\n\"Only God knows, perhaps. I felt a pull. It was, and still is, new and different. The West had never interested me before, and my mind had never pictured a valley like this. It's charms unfold like a flower. Each day I feel a little closer to God.\"\n\n\"How do you worship, Gussie?\" Boone asked. \"Do you miss going to a church?\"\n\n\"I do. But my morning walks bring me just as close to God and the wisdom we all seek. This very morning He filled my head with revelations about life. Have you ever thought deeply about how beautiful life is? Its flora and its fauna, the shape of things. The beauty God made is all around us.\"\n\n\"If you speak of you and your sister and Lula, we three brothers heartily agree,\" Boone said. \"I've seen you walk amongst the flowers, Gussie, and it always stirs me. God is indeed a skilled artist.\"\n\nGussie looked speechless and a bit overwhelmed by Boone's sweet words. Lula smiled. She wanted to tell Gussie that stirring a man can often separate his cream, but that would have been much too crude of a thing to say at that moment. \n\nBed time came for the women and the work-weary brothers. \"We'll all sleep soundly tonight,\" Boone said, hoping to entice Hetty to secretly practice her mouthfucking skills again. \"The whiskey makes us sleep like the dead.\"\n\n\"My dear husband kept some by the bed, for just such a purpose,\" Hetty said. \"It helps with the dreaming, too.\"\n\n\"Yes,\" Boone said. \"The dreams of a tired man can be vivid, almost like life.\"\n\nThe women sequestered themselves behind the wool curtain and the undressing commenced. It felt different on that night, to all except Lula. She was used to the thought of naked Perry brothers, but Hetty and Gussie were not. Until the night before, Gussie never would have guessed that Wesley didn't wear bedclothes, and she couldn't help but wonder if Boone and Elijah were similarly unclothed in the night. \n\nWith candlelight still burning by everyone's bedside, Gussie took off her Virginia-bought dress. While Hetty was helping her remove her corset cover and her corset, Gussie's ears were tuned-in to the sound of the men undressing. She wondered if they undressed standing up, showing themselves naked before getting into bed, or if they were more modest and stripped off their last bits of clothing under the covers. The thought of them all standing naked in the very room she was in was almost too much for her heart to take. She quickly put on her nightgown over her bloomers and her bodice, and then she helped remove Hetty's corset. She climbed into bed and was shocked by the next thing she saw. Hetty stripped herself completely naked! Right there, with three men just ten or twelve feet away! Hetty put a nightgown on, directly over her bare skin, and climbed into bed. Gussie would have scolded her, but the others would have heard. Even the most basic parts of everyday life seemed be changing, seemingly every day, and Gussie's mind reeled from it all. The whiskey-fueled feelings inside her were confusing. She truly didn't know what to think anymore.\n\nThe brothers had been listening, too, of course. They were well aware of the sounds and the procedures of women's clothing and undergarments, and the nightly rustling behind the curtains was always titillating. They still hadn't caught a glimpse of Hetty or Gussie bathing, but their collective imaginations were vivid, especially after the nocturnal oral sex the night before.\n\nWith candles snuffed out, the bunkhouse was cast in silvery darkness again. Sleep came fairly quickly for everyone, even Hetty and Gussie with their restless minds.\n\nDeep in the night, Hetty woke for her privy walk. Her movement woke Gussie, and then Lula stirred in her bed. \"Watch me, when I return,\" Hetty whispered in her sister's ear.\n\nShe scurried away silently in the moonlit darkness. Gussie heard the door to the outdoors quietly open, and then there was no sound but the chorus of crickets in the meadow. The three brothers had heard the sound of the door, too. They stayed still, wondering how the next few minutes would play out.\n\nLula went to Gussie's bed. She crouched on her hands and knees next to Gussie's blanket covered body, whispering almost silently in her ear. \"What did she say to you?\"\n\n\"She said to watch her when she returns,\" Gussie whispered, wide-eyed and wide awake. She sat up and looked at the Bible on her bedside table. She didn't sleep with it anymore.\n\nThe two women sat quietly, awaiting Hetty's return. They heard the door move again, and then it closed, shutting out the outdoors, and the silence deepened. Gussie's heart pounded in her chest. She and Lula moved to the end of Lula's bed, and they opened a narrow gap between curtains.\n\nThey watched Hetty, on her knees again next to Wesley's bed. She took hold of his cock and stroked it gently, up and down. It wasn't as big as the night before, but it quickly grew. Lula put her lips to Gussie's ear and spoke in the smallest of whispers. \"She's preparing him. Making him harder. Men go from soft to hard at different rates. The young ones harden up quickly.\"\n\nGussie's heart pounded even louder. She could feel her chest thumping and hear it inside her head. She expected to witness a mouthfuck again, and she'd taken a deep breath and made herself ready for the sight as best as she could, but Hetty surprised her. There, in the silvery darkness, Hetty stood, pulled the low hem of her nightgown up to her thighs, got up onto Wesley's bed and mounted him, squatting down on his horned-up hammer of a cock in the position she'd be in if she was pissing in a chamberpot. \n\n\"She's going to fuck him,\" Lula whispered.\n\nGussie wanted to yell \"I Know!\" into the thrilling silence. Lips open and mouth dry, her wide eyes stayed riveted to the carnal scene.\n\nLula, with her mouth against Gussie's ear, educated her on the goings-on. \"Do you see how slowly she moves? She's working him in, just a little at a time. His hammer is very big, so it takes some effort, but it's pleasurable work. Her tail-juice will be plentiful. I'm sure it started to wet her even before she reached his bed, and wet her even more when she had her hand on him. Feeling the heat of a man's horn has that effect on us.\"\n\nGussie understood. She felt her own wetness at that very moment, and she was twelve feet away! She thought about what Hetty had told her about a woman's tail-juice \u2014 that it was one of God's magical inventions, His way of making a woman fuckable.\n\nGussie watched Hetty's small up and down movements, and then they stopped. Hetty seemed to be just sitting there.\n\n\"All of him's inside her now,\" Lula whispered. \"Look at the joy on both their faces!\"\n\nGussie wondered if that was the end of it, if it was all over, and then Hetty started the most sensual movements Gussie had ever seen. She looked like some kind of a dancer, a ballerina maybe, rising and falling in smooth, wave-like movements. It was as if she was riding a horse, but so much more dreamlike.\n\n\"They're fucking now,\" Lula whispered. \"She can feel his cock way up inside her, with all the warmth of God's love. Isn't it beautiful?\"\n\nGussie had to admit, it was. She'd never seen her sister, or any woman, move in such a way. And she'd never seen two people with those looks on their faces. She watched Hetty pull up her nightgown, and for a moment she thought her sister was going to take it all the way off and render herself naked right there in the open. Hetty's big breasts came into view, and Wesley's hands went to them. Hetty let go of the hem of the gown and the back of it draped partway down, to her waist. The things Gussie's eyes wanted to see were out in the open \u2014 Hetty's round bum, rising and falling on the pump-handle-sized cock, and Wesley's hands on the soft flesh of naked breasts. It was a dimly lit picture Gussie would never forget.\n\n\u2014\n\nA few hours later, in the light of morning, Lula felt the time was right to alter her fashion. Gussie was shocked and confused when she saw the young redhead walk out from behind the curtains dressed the way she was. \"Lula! You're in your underclothes! What are those pants?\"\n\n\"They're a pair of Wesley's trousers. Your dear sister helped fit them to my woman's shape.\"\n\n\"The top of you is indecent! It's short of sleeves and...much too thin to wear alone. You need to put a dress on over that!\"\n\n\"Gussie, think of it as a shirt and a pair of pants. I have my cincher on for shape and a bit of support. If you'd like I'll button up all the way, but the heat of the day will force me to open it later.\"\n\nLula made good on her offer, buttoning the white cotton camisole all the way to the top, but Gussie remained shocked at the sight of her: a well endowed woman wearing nothing but an underwear top, with breasts able to move and jiggle.\n\nGussie assumed Lula's improper attire was the reason for breakfast at the big table being quieter that usual, but it wasn't that at all. Hetty and Gussie were fully dressed, but Boone and Elijah were imagining Hetty's breasts the way they'd seen them just hours ago, milky white under Wesley's work-stained fingers, and it only made sense to imagine that her younger sister's nice big boom-booms would look similarly lovely if they were in their natural state. The young men all did their best to maintain their composure; they assumed Gussie was clueless about the nightly goings on between Hetty and Wesley, and they didn't want to spoil the delicate balance of things.\n\nAfter breakfast the day's chores took everyone in different directions, so there was no opportunity for Hetty and Lula to eavesdrop on the brothers. Gussie was quiet and not acting like herself when the women cleaned up the kitchen after the morning meal. Hetty knew why, but she didn't want to have an important discussion about sex where they could be overheard, so she and Lula accompanied Gussie on her morning walk out on the prairie.\n\nThe walk had a quiet beginning, three women strolling through meadow grass, with a fresh breeze tousling their hair. The bright sun, chasing away the morning chill, lit the day golden. An eagle soared over the valley, and from a knoll the women watched Wesley riding off to check some traps he'd set the day before, after he'd discovered them in the loft of the small barn.\n\n\"He'll be tired today,\" Lula said. \"You rode him a good long while last night, Hetty.\"\n\nHetty smiled and blushed, still feeling the magic of it in her blood. \"He surprised me with his endurance,\" she said. \"Did you see how it went? After only a minute he lost his spunk. I felt it nearing and lifted off of him. He was a mess of it, all over his lovely chest and even his face, but we continued, nearly without losing the rhythm, and he stayed so wonderfully hard. I'd nearly forgotten how a good man makes me feel.\"",
        "\"We missed that in the darkness!\" Lula said, her eyes happy with excitement. \"His mess-making is because he was thrilled by you! I wish we had seen it; I could have told Gussie how it goes.\"\n\n\"We must return to Virginia,\" Gussie said, sounding distressed and emphatic. \"I can be ready within the hour, if you agree.\"\n\n\"If one is to return it shall be you and you alone, Gussie, but I hope you reconsider,\" Hetty said. \"There is so much more life for you to live here. Are you forgetting the Virginian men who ignore you because you are a woman of forty-two?\"\n\nGussie looked unfazed and determined. \"Are you forgetting our church, where God's love kept us pure?\" she asked. \"Hetty, I think you've lost you mind! You've given yourself, completely, to a man outside of marriage! And he's your step-son! Your dear husband's middle boy!\"\n\n\"My dear husband is dead, Augusta. But even if he wasn't, he encouraged me to be free with my corporeal self. I know you cannot understand this, but I feel as if I'm honoring him in a way, honoring his desires, and doing it with his own flesh and blood offspring just makes the connection deeper. You, my dear sister, understand the spiritual as much or more than anyone I know. It is Edwin's spirit that brought us here. Me, and yes, you as well.\"\n\n\"If you think your dead husband wants me to...Hetty, you must be mad!\"\n\n\"It's not he who wants you to. It's you, Gussie! You have followed this path. You asked to join me on this journey, this adventure. You are a woman starved for life, and I, for one, hope you get to feast on it.\"\n\n\"But...they are Edwin's sons! I am his sister-in-law! You can not tell me he would not be shocked by all this!\"\n\n\"I can, and I will. You know me well, my sister. You know I am not a liar. Believe me when I tell you, Edwin would have loved all this. He would have celebrated it. This is exactly what he wished Perryville to be. The Devil is not here, Gussie. I see purple flowers, and yellow. With a quick glance over your shoulder I see two beautiful butterflies. I see grasses swaying in warm wind, and I see blue sky. This is not Hell, Gussie. This is Heaven!\"\n\n\"The Perry brothers are good and honest,\" Lula interjected. \"They're as far from evil as any men I've known.\"\n\nGussie was silent. She looked at the glow of euphoria that still clung to Hetty's face, hours after the true euphoria had taken her in the darkness of the night. She looked at the flowers, and the swaying grasses, and she looked at Wesley on his horse, far away, a small speck of a man in a valley that took her breath away with its beauty.\n\n\"Last night...was that...the usual way?\" she asked, surprising herself with her unholy curiosity. \"I always pictured...something different.\"\n\n\"There are lots of ways, Gussie,\" Lula said. \"Hetty, do you call what you did riding, as I do?\"\n\n\"Mmm hmm,\" Hetty nodded, smiling shyly. \"Wesley is a wonderful mount. Are the other brothers...as big?\"\n\n\"Their hammers?\" Lula asked. \"Yes. Elijah may be an inch longer, and Boone slightly less but an inch wider. They'll all fill you properly.\"\n\nThe thought made Hetty lightheaded, so she sat down on the top of the knoll where they stood. \"What did you picture, dear sister? Tell us.\"\n\nGussie sat down and so did Lula. Gussie seemed reluctant to answer.\n\n\"Were you thinking it would be...lying on your back and having a man on top of you?\" Hetty asked.\n\nGussie nodded.\n\n\"They call that the missionary position,\" Lula said. \"It's basic, and can feel very nice. If a man stays deep and moves in a certain way it can induce the rapture, which is wonderful. Few men know the way, though.\"\n\n\"Do my dear husband's sons know the way?\" Hetty asked, blushing again.\n\nLula nodded. \"I taught them, yes. I've shown them many of the special ways a woman likes. If you enjoy the rapture as much as I do, I'm sure they'll be happy to oblige.\"\n\n\"I do,\" Hetty said. \"Enjoy it, I mean. My Edwin enjoyed watching me being overtaken by it. Last night, in the interest of silence, I slowed many times, so as not to let those feelings take me.\"\n\n\"I was thinking you slowed, and had control,\" Lula said. \"From our angle you looked so lovely and skilled. When you're not courting silence, do you normally let your voice free, when those feelings take you?\"\n\nHetty nodded. Her face still warm, she assumed her blush was as pink as the nearby flowers.\n\n\"So it's not always silent, like last night?\" Gussie asked.\n\n\"No,\" Lula said. \"It's even more fun when it's not. Silence can be a challenge at times.\"\n\nGussie thought about it all for a moment. \"Boone and Elijah slept soundly,\" she said.\n\n\"Yes,\" Hetty said, even though she didn't know it to be true. She felt bad about lying, after telling her sister she didn't lie, but the delicate balance of things seemed to depend on it. \n\n\"Has Wesley...spoken to you?\" Gussie asked.\n\n\"About our twice in the dark liaison, do you mean? No, he hasn't. There's a code of ethics. Good men, which the boys certainly are, won't embarrass a woman. Wesley has sensed my desire for quiet encounters in the dark hours and he has remained silent. The others would do the same, I'm sure.\"\n\n\"Do men not gossip, the way we've been doing?\" Gussie asked.\n\n\"We're not gossiping; we've been explaining,\" Hetty said. \"Teaching you, I guess you could say.\"\n\nGussie smiled a smirking smile, the first happiness on her face all morning. \"So, Lula telling you the sizes of my step-nephews' hammers was not gossip? And why would you need to know those facts if Wesley is your chosen one?\"\n\nHetty smiled. \"Did I choose well? Which of the brothers would you choose, if you were in a daydream?\"\n\n\"I will not tell you!\" Gussie said, her embarrassed smile beaming bright. \n\n\"They all have eyes for you, Gussie,\" Lula said. \"Will you reconsider our idea of bathing in the open? Treating men's eyes to our charms and pretending we're unaware is truly exciting.\"\n\n\"You must crave a hot bath, dear,\" Hetty said. \"You've seen Lula and me use the tub with no embarrassment, when the boys are away working.\"\n\n\"I do crave it,\" Gussie said. \"Washing myself with a cloth is less than satisfactory.\"\n\n\"We'll make a fire and heat the tub after lunch, after the boys leave for the wood cutting.\"\n\n\"I'll do it, if I'm sure they've left. I'll bathe, but the showing of charms can only be done by beautiful women like you who have them.\"\n\n\"Augusta, you're five years my younger! You're charms are considerable, let me tell you!\"\n\n\"I agree, Gussie,\" Lula said. \"In your daily dresses you look as lovely and womanly as any of my friends.\"\n\n\"You flatter me, but forty-two years old is forty-two years old.\"\n\n\"A horned man doesn't care about age,\" Lula said. \"You saw it last night. Hetty is your senior and Wesley, a man of thirty, fucked her with great happiness. He suckled at her teats, and it was not the suckle of a child and his mother, let me tell you.\"\n\n\"The sight of it surprised me,\" Gussie said. \"Should it have?\"\n\n\"It's very common, Gussie,\" Lula said. \"It comes from pure instinct, I think.\"\n\n\"The man's, or the woman's?\"\n\n\"Both, I would think,\" Lula said. \"It's very pleasurable. I love having my breasts fondled, and my teats \u2014 every woman's, I think \u2014 are pleasurable to touch. Having a man's mouth on them is divine. Just having them out in the open is wonderful. Truthfully, even today, having them covered with just this one thin layer of this camisole feels very nice. Since we're alone, maybe I'll...\"\n\nLula proceeded to unbutton her less-than-white cotton camisole, to an extent that shocked Gussie.\n\n\"You're taking it off?\" Gussie said. \"We stand on top of a knoll! With sight from all around the prairie!\"\n\nLula smiled. The camisole slipped down her arms and was in her hand, and her milky white breasts sat big, naked and proud on the shelf-like top of her cincher, her nipples aroused hard from the excitement. She looked like a right proper whore, with long red hair lit by the sun, looking like it was flaming.\n\n\"What did you wear last summer, Hetty, when the hired hands were here?\" Lula asked.\n\n\"It changed as the weeks went by. I started in city-made dresses, like Gussie's,\" she said, \"but I must confess that what you wear now is not far from how it ended.\"\n\n\"Hetty!\" Gussie gasped. \"You shock me at every turn! You showed yourself in the daytime?\"\n\n\"It was a form of freedom that I'd never known, and haven't known since. It was the purest form of humanity.\"\n\n\"That's a nice way of putting it, Hetty,\" Lula said. \"Did you ride your horse with your breasts naked and bouncing? I love riding that way on a warm day.\"\n\nHetty nodded, her softly smiling face blushing pink again. Gussie's face was whiter, but the look of surprise on it appeared softer than it had been the day before, and the day before that. Hetty's plan was working. Gussie was getting used to things.\n\n\u2014\n\nChapter 8\n\nThe brothers returned to the homestead just before lunch, and they loaded up the buckboard with saws and axes for the afternoon's woodcutting. Elijah and Boone brought freshly caught trout with them, from their morning fishing, and Wesley had two squirrels and a rabbit from the traps.\n\n\"Fish for lunch and stew for dinner,\" Hetty said, looking over the bounty. \"You boys do the cleaning and butchering right now, while we women set the table and get lunch started.\"\n\n\"The fish are easy to catch down river a ways,\" Elijah said. \"It slows and meanders like our bathing spot, but for a longer distance.\"\n\n\"Your father fished there,\" Hetty said. \"Always came home with a meal or two.\"\n\n\"Do we have enough salt to cure a larger kill?\" Wesley asked. \"I saw three deer that would have been easy to take down.\"\n\n\"We do,\" Boone said, \"but we'll need another barrel when we go to town to see about the goats and cattle. Choose a small deer and we can feast on it lunch and dinner, and cure the rest.\"\n\nPan-fried trout and fresh bread made for a delicious lunch. Afterward, the brothers hitched Boone's horse to the buckboard, and they headed to the stand of hardwoods at the base of the southern mountain, trees that Lula and the boys had ridden past when they'd first arrived in the valley. Some had already been cut, but there was always more work to do, cutting and splitting firewood for the cookstove and the coming winter. After they'd started their afternoon's work at the edge of the deep woods, Elijah noticed smoke rising into the sky, in the direction of the house and barns.\n\nFearing the worst, they quickly unhitched Boone's horse from the buckboard. They all mounted up, Boone bareback and the others in their saddles. The three rode fast toward the homestead. At the halfway point they crested a knoll and Boone raised his hand. The brothers' horses all came to a sudden stop. All were relieved to see the house and the barns intact\u2014 the large plume of smoke had come from the dousing of the bathtub fire. Boone and his brothers all dismounted.\n\n\"We don't want them to see us,\" he said, quickly walking his horse down off the knoll. They all remounted on lower ground and they rode, slowly and quietly, toward the house. \"We'll need to be quiet,\" he said, dismounting again. They left the horses behind, grazing contentedly, and the brothers moved stealthily, making their way quickly to the top of a knoll directly across the river from the house, crouching, moving like soldiers evading the enemy. They ended their forward march on their stomachs, hidden from view by the meadow grass.\n\nHetty stood by the tub, as naked as the day she was born. Gussie was with her, still fully clothed in her dark red Virginia-made dress. The boys watched as Lula exited the house at a full trot, naked, her big breasts wobbling in an energetic way. She looked her usual confident self, but even from a distance the brothers could tell Gussie was nervous. She moved stiffly, and her eyes scanned the horizon. The brothers feared they'd be seen.\n\n\"They're undressing her!\" Elijah said.\n\nHis eyes were wide, as were those of his brothers. They watched Lula and Hetty lift Gussie's dress off of her, up over her head. She was all white underneath \u2014 two ruffled petticoats down to her ankles, bloomers and stockings under them, a chemise covering the rest. When the chemise was removed there was a tightly laced corset around Gussie's top half, with a white cotton bodice under it. Before those were removed she crouched and unlaced her shoes and took them off. When she stood again, Lula worked at unhooking the corset. When it was off it was handed to Hetty, and Hetty draped it over a nearby hitching post with the rest of the garments.\n\n\"She wears all the layers, even on these warm days,\" Wesley said.\n\nHetty and Lula worked in tandem, stripping off Gussie's bloomers, stockings and bodice. Lula pulled the breeches down her legs and the unveiling was complete. Gussie was naked. The brothers were speechless for a few moments, watching as Hetty and Lula held her arms while she climbed into the tub and sunk her body down under the warm water.\n\n\"Gussie and Hetty are near twins,\" Elijah said. \"Their shapes are so alike.\"\n\n\"Round bums and full breasts. Her teats show on her breasts just like Hetty's, even from this distance,\" Boone said. \"Sisters are a gift from God. I'll bet their mother was beautiful.\"\n\n\"They're washing her!\" Elijah said. \"This is the best thing I've ever seen!\"\n\n\"It is,\" Boone said. \"A fine sight.\"\n\nThe brothers remained there, on their stomachs, with hard lumps in their pants pressed against the ground, silently watching the women wash each other's bodies and each other's hair. When the lovely show was over they retreated and rode back to their work, cutting much less wood than they'd planned.\n\n\"We were chased off by a bear, and had to wait it out,\" Boone lied, when Hetty looked surprised at the small amount of firewood they'd returned with at dinnertime.\n\nThe stew had been on the stove all afternoon, perfuming the whole of the homestead with its appetizing scent. The brothers sat at the table while the women put the finishing touches on the meal. Boone's eyes were on the back of Gussie, taking in the fair curve of her corseted waist and the roundness of her behind in her dark red dress. He pictured her naked, underneath all her layers, and the thought twinkled his eyes. When the food was brought to the table Gussie served him first, and she smiled at the happy look on his face.\n\nWhile they were eating, Hetty suggested a trip to the fishing hole. \"We could all go tomorrow, and make a day of it. It would be a nice break from the chores. We can bring lunch, and some whiskey. Last summer we used to swim there. The shallow side of one of the pools is warmed by the sun.\"\n\nIt was a bold move on Hetty's part. Swimming would mean stripping off all clothing, or at least most of it. She wondered if Gussie was ready to go along with such an idea.\n\n\"I'll be needing to stay behind, Hetty,\" Boone said. \"My horse threw a shoe today, so I need to get Father's smithy shop up and running. I'll light the forge in the morning.\"\n\n\"Isn't that dangerous, working with fire and hot metal?\" Gussie asked him.\n\n\"Not really,\" he said. \"I know the ways. I worked as a smithy's apprentice as a boy, when I wasn't schooling.\"\n\n\"Still, you should not be alone. I'll stay behind, to watch for your safety.\"\n\n\"Your hair shines beautifully, Gussie,\" he said. \"All of you ladies look freshly scrubbed.\"\n\nGussie blushed at the sudden attention, and Hetty smiled. Her plan had worked even better than she'd hoped. Gussie and Boone would have some alone time to bond, and she and Lula would have a whole day to go as wild as they wanted to with Wesley and Elijah, without worrying about distressing Gussie.\n\nA few hands of poker passed the time after dinner, and then the nighttime brought its quiet, unspoken excitement \u2014 the rustling of clothing removal, the imagining of naked bodies beyond the wool curtain. Candles were snuffed out and the bunkhouse fell silent again, with nothing but the sound of crickets. Everyone, and especially Wesley, wondered if Hetty would be on the prowl again.\n\nIn the deepest darkest part of the night, Hetty crouched at Gussie's bedside, whispering in her ear, waking her. \"I'll show you something new,\" Hetty said.\n\nGussie wanted to stop her, to tell her that she shouldn't, but it was too late. By the time Gussie's sleep addled brain was fully conscious, Hetty was gone.\n\nGussie sat up. She moved to Lula's bed, put her hand on the sleeping redhead's shoulder and Lula's eyes opened. \"She's at it again,\" Gussie whispered.\n\nBoone and Elijah nearly missed the fun, waking just in time to see Hetty lift her nightgown over her head and toss it on the end of Wesley's bed. Gussie, watching from a narrow opening between the curtains, couldn't believe her eyes. Her sister was naked! Completely!\n\nHetty's milky white body could be seen quite easily in the dark silvery light. She pulled Wesley's blanket completely off of him. He was naked, too, with his hand on his cock, the impressive length of it already hard and ready for her. She took it in her own hand, and she took it into her mouth, and her head moved up and down on it a few times, slowly and sensually.\n\nGussie assumed the \"something new\" part was Hetty's blatant total nudity, but she was wrong. She watched as Hetty mounted the young man, but it was all wrong in Gussie's mind. The joining of bodies was bewildering. \n\n\"That's the over-and-under,\" Lula whispered nearly silently in her ear.\n\nGussie was confused, so she whispered back, \"What is it? Something new?\" Gussie got part of her answer as to how it worked when she saw Wesley's big cock disappear in Hetty's mouth again, but the rest of it was more than a little odd. Hetty appeared to be riding Wesley's head!\n\n\"No, not new. Old, I would imagine,\" Lula whispered. \"You can do it this way, or your man can be on top of you if you like it that way. It's sort of a double mouthfuck. You both mouthfuck each other at the same time. We can't see it, but he has his mouth on Hetty's cunt. He's licking the inside of it. It's one of my favorite things.\"\n\nGussie had trouble breathing again, partly because of what she was witnessing and partly because of the brand new knowledge that a man can mouthfuck a woman. She'd never thought of that before, and it scrambled her brain. All of her simple church-girl thoughts of how a man and a woman have sex were obliterated. This thing, this \"over-and-under\" that she was witnessing, it was a brave new world.\n\nHetty was delighted with Wesley's skills. She hadn't discussed the over-and-under with Lula, but she'd assumed the red-headed former whore would have showed the boys that position, and all the other positions, too. As soon as Hetty had mounted him Wesley had latched onto her wet cunt with his warm mouth. He was licking her deeply with his tongue and she could feel the pressure of it on her most sensitive spot. She had to muster all of her willpower to stay silent with such an oral onslaught on her hot wet crotch. She played with Wesley's cock, stroking it with her hand, watching the foreskin move, engulfing the length of him with her hungry mouth every once in a while. \n\nHetty was lost in the euphoria of the moment when the rapture overtook her. She would have stopped before it hit if she could have, pulled away to cool her hot mind and her sweetly tingling jam-pot, but Wesley had his muscular arms wrapped tightly around her thighs and he was on a mission. And so it hit her. The rapture. She stuffed her mouth full of cock and she squealed and writhed like a stuck pig. It was muffled noise, but in the minds of all those listening it seemed loud enough to echo. Wesley's hips jerked and Hetty's muffled squeal became a different kind of sound \u2014 the passionately moaning gurgling of a mouth being filled, a mouth swallowing; the sound of a woman in the throws of a rapture, quietly desperate to keep from gagging.",
        "\"Good Lord!\" Gussie whispered. \"Is she all right?\"\n\nLula nodded and put her lips to Gussie's ear. \"She let the rapture take her. She's lost in a beautiful dream.\"\n\nHetty lay there on top of Wesley for a good long while, luxuriating in the feel of his kissing mouth and softly licking tongue on her nether region. It was hard for her to end such a blissful coming together, but she knew she had to. The brothers had been watching, she knew it, but she hoped Gussie was still clueless about that part of the goings-on. She made her way to her feet, picked up her nightgown, and walked back behind the curtain.\n\nGussie watched her slip into her nightgown, looking at the dark patch of bushy hair between her sister's legs before it disappeared from view. Gussie wondered, why would a man want to put his mouth there? Having hair in one's mouth was the most unappealing thing she could imagine, but the room was silent again, and it wasn't the time to ask questions or to scold Hetty for being so reckless. Everyone's heart-rate gradually slowed, and sleep came to the lot of them.\n\n\u2014\n\nChapter 9\n\nThe morning didn't give the women any privacy to talk freely, so they remained mostly silent while they cooked a nice breakfast of eggs and ham. When everyone gathered at the table, Hetty sat down last. She looked at Wesley and a sudden heat flushed through her bloodstream. Her pretty face went from normal flesh color to pink to beet red in just a few seconds time. A flashback to the rapture had overcome her, and her whole body tingled and nearly trembled. Her breathing showed the signs of it, and it was all she could do to gather herself back in and hold things together. It was a powerful moment, and she wished she could sing the praises of it to her lover.\n\n\"We'll have a feast of trout tonight,\" she said, trying to get her mind on another track. \"Boone, do you have all the supplies you need for your shoeing?\"\n\n\"Yes, Father had the shop stocked nicely. There's plentiful iron, and some coal. I'll mix some wood with the coal to make it last longer. The anvil is a fine beast of a thing. It must have taken some work to bring something that heavy out here into the wilds.\"\n\n\"One of the hands was as big as a bear, and as strong as one,\" Hetty said. \"Obediah Sykes is his name. I do hope he's well.\"\n\nLula flashed a smirking smile. \"Just how big is he, Hetty?\" she asked, wondering if he was the donkey-hung man Hetty had mentioned, the one with the large plums and the impressive horn. \"Is he the one you spoke of the other day?\"\n\n\"It may have been him,\" Hetty said, blushing again.\n\n\u2014\n\nA little while later, after the fishing party had left, Boone and Gussie were alone at the homestead. Gussie made herself busy in the kitchen, making molasses cookies to serve with the nice lunch she was planning to make for Boone. She knew he liked sweet things, and so far the molasses had only been used to make brown bread. She was sure some cookies would make him smile.\n\nOut in the blacksmith shop, Boone tried to remember the skills he'd learned as a youth. The forge fire glowed hot, a mixture of chunks of coal and hard oak. Boone placed a bar of iron in the fire and pumped the big bellows with the foot pedal; the fire glowed brighter and sounded like a hurricane wind. There were more sparks than Boone remembered. He recalled some advice told to him by the master smithy he'd worked for, about the care needed when mixing wood with coal. Just as he was thinking about it the bellows collapsed. The rope that controlled it had been nearly chewed through by mice, and the leather that made up the sides and formed the hinge was dry and rotten; the whole thing came apart, blowing a great whoosh of air through the hot fire, engulfing Boone in a cloud of acrid smoke and red-hot embers. Gussie heard him yell and she ran from the bunkhouse to the shop. She arrived to the sight of Boone scrambling out of his smoking, smoldering clothes.\n\n\"The boots! Help me with my boots!\" he yelled, desperate to get his pants off before the smoldering canvas caught fire.\n\nWith Gussie's help he managed it, but his skin was pocked with red and in the worse spots burning hot embers stuck to him like stinging bees. \n\n\"We need to cool these burns!\" She grabbed Boone's discarded shirt, took his hand and pulled him quickly toward the river. She splashed into the shallow water with him and pushed him down in it, submerging his body. The water was icy cold so she pulled him up again and she used his shirt to sponge cool water over his burns, as gently as she could.\n\n\"It's a good thing I was here,\" she said, her eyes showing her worry. \"Your clothes would have caught fire.\"\n\nShe continued her gentle work, dipping the shirt in the clear water and daubing it on Boone's bare skin. She watched the water flow down his torso and the realization of just how naked he was seeped into her like the warmth of strong whiskey. Boone stood silently, his heart pounding, not from the calamity but from Gussie's nearness and her tender touch. Even with the cold water on him his inner heat was overwhelming. His cock plumped and lengthened, and it started to lift.\n\nGussie let it happen. She kept up her quiet work, hoping Boone wouldn't notice the pounding heart in her chest and her irregular breathing. He did notice, and it fueled his building desire. His cock grew fully long, and fully thick, and lifted to an angle that pointed nearly straight out in front of him.\n\n\"Ohhh my!\" Gussie sighed, looking at it close-up. \"How can it be this way? Aren't you in pain?\"\n\n\"It's you Gussie. I feel no pain when you touch me.\"\n\nGussie had a look of pure amazement on her face when she took Boone's hard cock in her hand, encircling it with her fingers. She remembered what Lula had told her: feeling the hard heat of a man's horn brings forth a woman's tail-juice. Gussie could tell it was happening; she felt the tell-tale signs in her nether region \u2014 a moistening and a new kind of life in her tenderest flesh. But it wasn't just confined to her nether region; the new life in her flesh overtook every inch of her. She watched with a curious mind as her hand moved on Boone's big cock, back and forth movements, just as she's seen Hetty do in the dark. Boone moaned and his head tipped back and he looked at the sky. Gussie's attention was acute \u2014 the tiniest of sounds were audible to her, and her eyes took in everything, right down to the very texture of the skin of a handsome man's hardened cock. It felt so much heavier and warmer in her hand than she'd expected, and so much softer, even though it was solidly hard.\n\n\"We should put some lard on those burns,\" she said softly, with her hand still stroking the first cock she'd ever touched.\n\n\"Not yet, Gussie,\" Boone said. \"Not yet.\"\n\nHis soft, breathy voice and his desire for the moment to continue made Gussie swoon. All reason disappeared from her mind, and her head and her mouth moved toward the tip and the foreskin of the big hammer in her hand. Boone moaned again when he saw her tender lips kiss it, and his moan was deep and earthy when he felt the warmth of her mouth envelop some of his hard cock's inches.\n\n\"Ohhh, Gussie,\" he sighed. \"I've dreamed of this.\"\n\nGussie withdrew her mouth and looked up into Boone's eyes. \"I know not how,\" she said, speaking words she thought she'd never get to say. \"Will you teach me?\"\n\nBoone reached for her arm and pulled her up. She never let loose her grip on his hard cock when he held her head in his hands and kissed her. It wasn't Gussie's first kiss \u2014 that came long ago, when she was in her early twenties \u2014 but it was by far the best. She felt so buoyant and so alive, she wondered if she'd already been overtaken by the rapture Lula and Hetty had spoken of.\n\n\"Will the lard help the pain?\" he asked, his face taut and uncomfortable looking.\n\n\"Oh my good Lord!\" Gussie said, angry at herself for getting carried away and neglecting Boone's wounds. \"Yes, come with me.\"\n\nShe led him by the hand to the bunkhouse and had him sit on his bed. She scurried over to the kitchen area and returned with a container of lard and a clean kitchen towel. Boone lay on his back, his naked body stretching the whole length of the bed. His cock had shrunk some, but it was still engorged with the hot blood of their first encounter. She let her eyes linger on him for a few seconds, the most perfect male specimen she could imagine.\n\n\"This isn't ideal, but it will do,\" she said. \"We really should buy some proper first-aide supplies when someone goes to town.\"\n\nShe started dabbing lard on the red spots on Boone's skin. He watched her work, and his cock started to harden again.\n\n\"I'll be ready for cooking when you're done,\" he smiled. \"Will the mice come and lick me tonight?\"\n\nGussie looked mortified at the thought. \"Good Lord, I hope not!\"\n\n\"Will you?\" he asked, with lust in his eyes.\n\nGussie didn't answer. She could barely draw a breath. Her eyes twinkled at the thought of a nighttime lick or two. She continued dabbing lard on him, working her way down his torso. \"I should let you do this; your hands aren't injured.\"\n\nGussie's eyes showed her shyness as she neared his darkly hairy crotch and his big cock. It had hardened enough to lift from the space between his thighs, moving subtly with his heartbeat, and then, without warning, it swiveled around like the hand of a clock to a position on his muscular belly.\n\n\"Good Loordd!\" Gussie said quietly, watching the life in it.\n\n\"I'm afraid I can't help my arousal with you so near.\"\n\n\"Is...it normal for it to move on its own? Are you...able to control it?\"\n\nBoone smiled at the look of amazement on Gussie's face. \"To point it like a finger, you mean? No, nothing like that. I'm just aroused by the thought of what you said.\"\n\nGussie larded a few more spots. \"What did I say?\"\n\n\"You asked me to teach you. But now that the excitement of the moment has passed, maybe you've changed your mind.\"\n\nGussie smiled a smirking smile and shook her head. \"I haven't. I'm not completely without knowledge. I know some of the words.\"\n\nBoone smiled. \"Do you? What words?\"\n\nShe wrapped her fingers gently around Boone's hard cock and spoke in the sexiest voice that had ever emanated from her. \"This is your hammer. Your pump handle. Your cock. Your horn. And this...,\" she said, touching and holding it for the first time, \"...is your ball bag. Your plums.\"\n\nBoone's smile, and his sparkling eyes, made Gussie swoon again. The warm, otherworldly softness of his ball bag made her want to fondle it, so she did. Boone's eyes closed and he moaned. The moment was powerful, a true realization of what her touch could do to a man. She put down the lard that was in her other hand, scooped up the big hard cock and put her mouth on it again, taking the first few inches in, tasting it against her tongue.\n\n\"Ohhh, Gussie,\" Boone sighed. \"You've taken away my pain again.\"\n\nThe feel and taste of him in her mouth thrilled Gussie. She tried to remember how Hetty had mouthfucked Wesley, and slowly her head started the up and down movements Hetty had made. Boone moaned deeply, and Gussie did, too. She felt his body moving, matching her slow, sensual movements, and she felt the rush of the thrill of doing it. It was happening! A real mouthfuck with a happy man!\n\n\"Oh Gussie!\" Boone moaned. His hips were moving more, with an unstoppable energy. \"I can't help myself! Are you ready for me?\"\n\nGussie nodded, her mouth still full of smoothly thrusting cock. She had a pretty good idea of what she'd said yes to \u2014 a man's spunk in her mouth, and a swallow, just like her older sister had done. It must be the way of the world, she thought, and I need to master it.\n\nShe held her head mostly still and let Boone's hips do the work, fucking her mouth with rhythmic upthrusts as deep as she'd let him go. And then it happened \u2014 a manly groan from Boone's open mouth and a gush of hot spunk from his cock, oozing out from Gussie's lips, running down the thrusting shaft, making everything slippery. It tasted unlike anything she'd ever known, with a comforting warmth in her mouth. Boone appeared to be in a state of bliss, so she was sure she'd done something right. She swallowed what hadn't leaked past her lips, and then, out of an instinct to clean things up, she licked and mouthed the messy cock. \n\nBoone was breathless. \"You lied to me about needing instruction, Gussie.\"\n\n\"I didn't lie,\" she said. \"You are my first.\"\n\nBoone looked at the lust in her eyes, and at the slippery spunk on her lips. \"Will you undress for me,\" he asked, \"or is that too much for you?\"\n\n\"I will,\" Gussie said. Her eyes twinkled and she smiled. \"The bottom of my clothing is wet from the river. I'll use that as my excuse.\"\n\nBoone smiled. \"You'll catch your death if you don't get out of those things and let me warm you.\"\n\n\"I'll not let you watch me,\" she said. \"Wait here.\"\n\n\"But I want to watch you. I want to help you.\"\n\n\"Help me undress?\"\n\n\"Yes,\" Boone said. \"Let me.\"\n\nHe got up off the bed and Gussie swooned again at the tall musculature of him, and at the raw, sticky hunk of cock hanging between his thighs. She stood in front of him and turned her back, and Boone started to unfasten her dress. When he lifted it off over her head her skin erupted in tingles. She was still covered in many layers, but a man had never seen her like that, in her undergarments, at least as far as she knew. Boone removed them one at a time, unlacing, untying, unbuttoning, until just three pieces were left and the rest were piled on Wesley's bed. Bodice and bloomers still covered her, with breeches underneath, the final defenses of her privates.\n\nBoone knew she was nervous, so he paused the undressing and embraced her from behind. He could feel her womanly curves through the last bits of cotton fabric, and Gussie moaned. \n\nShe turned and kissed her naked man. Suddenly she wanted to be naked, too, and in just a few moments time she was. Stripped bare. Kissing a man. With his hard cock against her skin and his big, sandpaper-rough hands fondling every inch of her nakedness. The two of them melted onto the bed, Boone stretched out on his back, and with Hetty's teachings in mind, Gussie mounted him like a rider. Her plentiful tail-juice let Boone's big thick cock work its way into her without too much trouble, stinging her with quick, sharp pain when he broke through her hymen, and then thrilling her more and more as each inch filled her. When she started to move like her sister, fucking him properly, she felt euphoria the likes of which she'd never imagined. She rode, and she rode, and the euphoria continued to grow. It was pure magic and she felt like she was flying, and then her eyes started to flutter, and then they rolled back in her head, and then...the rapture overtook her.\n\nBoone watched it happen. He had his hands on her waist, and his whole body moved fluidly as he fucked her from below. His hands slid up to her breasts while her mind was gone, and he held them when she came back to earth, pulling her down so he could suckle them, with his big cock still slithering in and out of her velvety insides. They say one's first time will never be forgotten. For Gussie, it felt like the beginning of a brand new life.\n\n\u2014\n\nOutdoors, the day was a fine one \u2014 blue of sky and with the merest breath of a warm breeze. The good fishing holes and the warmer water for swimming were two miles or so downstream from the homestead, almost directly east. The fishermen and women headed there right after breakfast \u2014 Wesley and Elijah on their horses and Hetty and Lula driving the buckboard wagon that was loaded up on the back with the day's supplies. There were rolled up blankets from their beds; a basket filled with bread, cheese, dried fruit and a bottle of whiskey; four crude fishing poles; and a container of big healthy crickets and wriggling nightcrawlers gathered the night before, to use as bait.\n\nAs soon as they arrived Hetty spread a blanket on the ground at the edge of the water and sat there with her pole in her hand and her line in the water, and she silently wondered how her sister was getting along. She knew there was a spark between Gussie and Boone; it had been obvious on quite a few occasions. She also knew Boone was a gentleman, but she secretly wished he wouldn't be one on that day, all alone with Gussie.\n\nA hook baited with a cricket caught the first fish, soon after the fishing party had dropped their lines in the water. \"I got one!\" Hetty yelled.\n\n\"Drag it up slow, they like to fight,\" Wesley said.\n\nHe helped when it was close to the riverbank, pulling the line in by hand. The brightly colored yellowfin cutthroat trout flopped back and forth on the grass when it was landed.\n\n\"Nice one,\" he said. \"I'll start a stringer and keep 'em in the water so they stay fresh.\"\n\nHetty smiled. \"We're a good team,\" she said. \"I haven't caught a big one since last summer.\"\n\nBefore Wesley could react she pulled him to her and kissed him. Their lips had been on other parts of each other's bodies, but it was their first kiss, and it was a long, lingering, romantic one. When it was over, Wesley didn't say anything.\n\n\"You look surprised,\" Hetty said. \"Would you rather just fish today?\"\n\n\"No! It's just...\"\n\n\"Are you shy in front of Lula and your brother? They both know of our nightly fun.\"\n\nWesley looked surprised. \"Lula knows?\"\n\n\"Everyone knows,\" Lula yelled, from farther down the bank.\n\n\"Not Gussie,\" Wesley said, sure that the most religious one among them wouldn't be accepting of such a thing.\n\n\"Yes, Gussie too,\" Hetty said. \"But don't tell her you know. Let's keep up the pretending for a while, until she gets used to things. You'd best string that fish, before it dies.\"\n\nWesley wasn't sure what to say, so he took care of the fish. It astonished him that everyone in the house knew of Hetty's dark-of-night visits to his bed. After the fish was back in the water, strung through the mouth and gill on a thin line of twine, he asked her about what she'd said. \"When you say Gussie knows, what do you mean?\"\n\n\"She watches. Just as your brothers do.\"\n\nWesley wanted to laugh. \"You know? You know my brothers watch you and you do it anyway?\"\n\nHetty smiled a shy, impish smile. \"I like it, Wesley. It excites me.\"\n\nWesley couldn't believe that she'd do something as deeply unchristian as the over-and-under with people watching. With Gussie watching. Gussie, with her ever-present bible, and her neck-high dresses in the daytime, and her bloomers and cotton stockings under her long sleeved nightgown at night.\n\nHetty loved the look of confusion on his face, and she was more than ready to take things to the next level. Wesley watched her walk alongside the riverbank to where Lula was fishing. He saw the two of them speak for a moment, and then he watched Lula assist in the removal of Hetty's dress. It wasn't surprising, because they'd all planned to swim later on, but it seemed odd to see her dressing down to just her swimming clothes so early in the day. Lula, wearing nicely altered men's pants and a cincher with a camisole over it, helped Hetty strip down to a similar level, wearing just breeches, bloomers and cotton stockings on her legs, and nothing but a bodice on her top.\n\nElijah, fishing even farther downriver, was intrigued. When Hetty and Lula walked to the wagon to discard the unused clothing and re-bait their hooks, he wandered back, trying to act casual by asking about Hetty's first fish of the day.\n\n\"That looked like a mighty big trout,\" he said, eyeing Hetty's thinly clad breasts.\n\nWesley was there, too, both the young men drawn to the scantily clad woman as if they were hooked by a fishing line themselves. \n\nHetty couldn't help but notice their eyes taking her in. \"You boys scrutinize me much to closely. I can tell you right now I do not stand up to comparison with Lula. My face is creased, my breasts hang lower and my waist will not be as small no matter how tightly my laces are pulled.\""
    ],
    "authorname": "riverboy",
    "tags": [
        "horses",
        "nineteenth century",
        "old west",
        "open marriage",
        "redhead",
        "strip poker",
        "swingers",
        "virgin",
        "western"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/lulabelle-in-the-west-bk-01"
}