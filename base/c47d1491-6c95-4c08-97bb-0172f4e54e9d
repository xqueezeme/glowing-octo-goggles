{
    "title": "Fantasy Man Ch. 10",
    "pages": [
        "Terri stood in the mirror, checking her makeup once again. She smoothed down a couple of stray eyebrow hairs and cursed herself for not getting them touched up. This was the day that she had been dreading for the past few weeks. \n\n\"Terri, come on. Get out of there. I'm sure you look beautiful, so stop worrying,\" Zack called through the bathroom door. \n\nTerri felt the corners of her mouth turning downward. It was just like Zack to minimize a situation that felt momentous in Terri's mind. It would be the first time she and Zack made an appearance together as a couple in the high society circles that his mother ran in. Tonight was the annual charity ball and Terri knew that she had to make a good impression, at least for Melinda's sake if nothing else. \n\n\"Zack, get the hell away from the door or when I do come out, you'll be sorry.\" \n\nZack sighed and walked back towards the couch. He wished Terri wouldn't stress out about the dance. It was, after all, just a dance. Terri had blown it all out of proportion, talking about how she had to make a good impression. He wished that she realized that it didn't matter what anyone else thought about them, his parents had already given their blessing and there was nothing that was going to stop him from marrying her. She was the woman that he planned on spending the rest of his life with. \n\nBut it was impossible to get her to change her mind about what tonight meant. As far as he was concerned, it was a chance for them to get out, see some of his old friends and have a good time. He supposed that once she was there, she'd calm down. If he had time, he'd throw her onto the bed and have his way with her, then she would be too exhausted to worry about what was going to happen. It had worked most days that week, but there just wasn't enough time, especially considering how long it was taking her to get ready. She would probably try to kill him if he messed up her hair, since she had spent hours at the beauty shop getting it done. \n\nWhen Terri finally emerged from the safety of the bathroom, Zack felt a wave of awe sweep over him. She seemed to glow in her gown, which molded to her large breasts and thin waist, then flared out as it got closer to the floor. The light blue dress had sequined designs that caught the light and made her look like an angel, an angel that he had no problem trying to corrupt. \n\n\"Baby, you look beautiful. Absolutely amazing,\" Zack breathed. \n\nTerri gave him a saucy smile. \" Did you ever doubt it?\" \n\nZack laughed, realizing that he had once again been holding his breath while taking in Terri's visage. Then thinking about tonight, he frowned. How long would he be able to last before he took Terri somewhere and ravished her? His eyes roamed the planes of her body again. Not very long, not long at all. ***\n\nTerri's eyes widened as she scanned her surroundings. This place was gorgeous. A row of large columns stood before her. She gaped as she passed between them and into the entrance of the hall, which was filled with crystal, marble and lace. Her heels clicked against the rose and white marble floor as she walked in. Rows of crystal chandeliers hung from the ceiling and candelabras on the walls provided delicate lighting that helped set the mood. \n\nTerri walked into the ballroom and sighed. She was starting to feel like Cinderella, out of place, but glad to be there. The tables around the perimeter of the dance floor were draped in white tablecloths and golden dyed flowers in thin glass vases sat atop them, serving as centerpieces. \n\nWhile Terri was busy taking in her surroundings, Zack scanned the hall for people he knew and people he wanted to stay away from. While looking, he spotted his parents across the room. He watched as his father rose from his seat and made his way toward the bar that was stationed in the corner. Zack guided Terri over to the table where his mother was perched, looking very much like a queen herself. \n\nWhen Melinda saw the couple approaching, she rose, her face showing her joy at their arrival. Terri couldn't help but return the smile. Melinda was one of the easiest women to get along with and that was good, especially if Terri gave in and married Zack. She wouldn't have to worry about the mother-in-law drama that she had heard so much about.\n\nMelinda was wearing a gown that even J-Lo would be envious of. The dark blue dress had a deep V, reaching downwards to her navel. It was pulled together below her breasts by a delicate diamond design that reminded Terri of flower petals, reaching all the way around the dress. Melinda sported shoes that were lined in stones that matched her dress and Terri wouldn't be surprised if they were diamonds too. \n\nMelinda gathered them both up in a hug. \"I'm so glad that you two could make it.\"\n\n\"Well, it was tough getting Terri out of the bathroom, but I guess it takes time to look as beautiful as she does,\" Zack teased. \n\nTerri rolled her eyes. \"I had to hide myself until the last possible minute so Zack wouldn't try anything. I know you tried to teach him how to be a gentleman, Melinda, but your son can be a total caveman sometimes.\" \n\nMelinda laughed. \"I think he gets that from his father. I'm surprised I even made it here tonight.\" \n\nZack grimaced. \"Whoa there, Mom. I refuse to think about you and Dad doing anything other than playing bridge together. Stop before you make me puke at your fancy party.\" \n\nMelinda just shook her head. \"Terri, come and let me introduce you to some friends of mine. Zack, you can come along if you promise to behave yourself.\" \n\n\"I'll be on my best behavior if it means I can accompany the two most stunning women here. Hey, I'll even promise not to say anything smart-assed to your friend Pamela.\"\n\n\"Pamela? Ha. What I would give to be able to take that woman out back and throttle her. You can say whatever the hell you want to her, just don't let me hear it or I'll be forced to apologize to that filthy whore.\" And with that, Melinda took Terri's hand and walked off, leaving Zack to trail behind the two. \n\nBefore he could join them, his father rested a hand on his shoulder. Zack turned to regard him. \"Dad?\" \n\nFred gave Zack a rueful smile. \"Your mother is on a rampage tonight. Don't get caught in the crossfire or you'll be sorry.\" \n\nZack shook his head. \"What did you do?\" \n\nFred Smith shot his son a chagrined look before he laughed. Zack knew his mother too well. \"I had the audacity to be hit on while talking to Donald Hemmingway. I was just finishing up pitching my idea of a merger between our two companies and Pam slips in, trying her hardest to keep her tits in that scrap of fabric that she's passing off as a dress. I'm thinking that she's there for Donnie, so I step back to leave them to it and the next thing I know she's pressing herself into me. Before I could even think about separating myself, there's your mother, staring at us, looking like she's about to blow.\" \n\n\"I'm surprised you can still see out of both of your eyes, Dad.\" \n\n\"So am I. I pushed Pam away and explained that I was happily married to a woman that could seduce me with a mere look and no amount of cleavage was going to get me to even think about doing anything with anybody else. And when Linda made her way over to us, Donnie was there to stand up for me. But, don't let your mom's behavior fool you. I'm in the doghouse and I'll be hearing about it when we get home.\"\n\nZack chuckled and patted his dad on the back. \"Good luck with that.\" \n\nIt was Fred's turn to hake his head. \"Smartass. Just you wait until your Terri sinks her claws into you and rips you a new one. Then it'll be my turn to laugh and you will get no sympathy from me at all. Now go catch up with your mother and try to keep her out of trouble.\" \n\nWhen Zack caught up with his mother and Terri, they were surrounded by a group of women, oohing and ahhing over their dresses and making introductions. He slid behind Terri, resting his hand on the curve of her hip. Zack listened to the women prattle on for a while before deciding that he had enough.\n\n\"Ladies, I hate to do this, but this is our song and I just have to dance with Terri to it,\" Zack explained as he offered the crook of his arm to Terri. When she took it, he smiled, making his apologies again as they made their way to the dance floor. \n\nHe pulled Terri into his body when they reached a moderately open spot on the floor, relishing the feel of her pressed against him. He knew that she could feel his manhood grinding into her and he wished that they were at home so that he could bury himself inside of her. He had just started taking his fantasy farther when Terri looked up at him. \n\n\"Down, boy,\" Terri murmured. \n\nZack chuckled. \"See what you do to me? And then you tease me. You're such a cruel lady. I don't know how I even put up with the abuse.\"\n\nTerri rolled her eyes. \"You seem to be holding your own just fine, Zack.\" \n\nA deep laugh escaped before he dipped his head to plant a soft kiss on Terri's lips. He lingered for a moment before pulling back. \"You know, I don't think you actually know what you do to me, Terri Hunter. I think I may be addicted to you.\" \n\n\"Well, good, because you're going to be hard pressed to get rid of me.\" \n\n\"As if I would ever want to do that, Buttercup. That would be like wanting to get rid of my dick and heavens knows I'd do anything to keep that.\" \n\nTerri laughed. \"So now I'm comparable to your penis. Thanks, Zack, thanks.\" \n\n\"Hey, a man's cock is important to him. And I especially want to hold on to mine. I mean, how are we supposed to have kids if I'm without a dick?\"\n\nTerri smiled at the thought of having kids with Zack. It was something that often crossed her mind, especially after the night when he finally told her that he loved her. But then she realized that they were in public, discussing Zack's cock. Terri immediately felt her face heat and she looked around for anyone who might have been close enough to hear. It was then that she finally saw him, standing over in a corner of the room with a perky brunette on his arm. It was him, Tyrell. \n\nZack felt Terri stiffen in his arms. \"What's going on, Buttercup? Did I scare you with my baby talk? I didn't mean that we had to have kids right...\" \n\nTerri pressed a finger to Zack's mouth. \"No, no. It's not that. Of course I want to have kids with you. It's just...Ty is here.\"\n\n\"Where?\" \n\nZack looked in the direction that Terri had discreetly pointed. His gaze fell upon a tall man whose skin tone reminded him of caramel. His head was shaved bald and Zack could tell that his eyes were hazel or at least a very light brown from across the room. He was dressed to match his date, with a vest that complimented the unusual red of her dress. Zack could see why Terri had gone out with him. His shoulders were broad and Zack could tell that Ty was muscular, the type of guy that Terri seemed to like best.\n\nZack could feel the anger starting to boil inside of him. Not because Tyrell was there, but more because he had caused Terri pain. It took all he had not to just walk over and deck the guy. Good thing he had some self-restraint, seeing as he had gotten his mother's quick temper. Tyrell had hurt someone precious to him. It had taken Zack a while before he could see the total trust in Terri's eyes when they started dating, and now that he had it, he knew how precious a thing it was. Zack couldn't understand how Tyrell could just throw away a gift like that. \n\n***\n\nAcross the room, Tyrell found himself asking a similar question. He had noticed Terri from the moment that she set foot in the room. His eyes had traveled from her dainty feet, up her curves, to settle on her lips. Those soft lips that were slightly parted as Terri took in her surroundings brought back more than a few memories and a flurry of carnal thoughts. Terri looked nothing short of radiant. Ty, fool that he may have been, was not stupid and knew that he had lost a good one when Terri walked out of his life. He was just thankful that he got another chance to find happiness with someone new. \n\nHis gaze traveled to his current girlfriend, Heather. She was dressed to kill tonight in a gown that screamed sin as it clung to her 5'7\" frame. Her dark hair was pinned up, with a few stray, curly ringlets falling into her pixyish face. Her emerald green eyes sparkled with amusement as she listened to one of her \"friends\" talk about some new type of lip gloss or something else like that. \n\nTy knew Heather was just being nice because she didn't want her socialite circle to think badly of her or her family, but she should really draw the line somewhere. He'd hate for her to become shallow and vapid like the rest of the girls and he feared that they were killing her brain cells slowly with their mindless talk. Soon he would be subjected to her talking to him about her latest nail polish color instead of politics or education. It was her brain that attracted him to her the most, so Ty wanted it intact. \n\nSeeing Terri really took him back. Though it had been a while since they split, even the thought of that look that Terri gave him when she saw him with Simone, the way her eyes spoke of utter betrayal, still made his gut wrench. Of all the things he could have done...Terri didn't deserve it and Ty knew that he got just what he was asking for when she maced him all those months ago. \n\nSimone had sauntered into his life at a time when he was at his weakest. He was an intern at an upscale sports medicine clinic and while he enjoyed what he did, he was required to work some long hours. He barely saw Terri and when he did, it seemed that all they did was fight. He could admit, now, that he started most of the arguments and all of them seemed silly now. \n\nThe day Simone came into the clinic with her aging father and his newest trophy wife, he and Terri had traded some particularly harsh words, fueled by his sexual frustration. Terri had a good point, how was she supposed to satisfy him when he was always working, but he wasn't going to admit it. His anger, in the end, had become his weakness. Simone had simply sauntered up to him, flipped her lengthy blond hair over her shoulder, and smiled. \n\n\"Hi there, Doctor. I'm Simone Harrison,\" she purred softly. While making her introduction, she had leaned forward, making sure that she was flashing copious amounts of cleavage, barely contained by the too small shirt she was wearing. Her icy blue eyes seemed to bore into him as he tried hard not to stare down her shirt. \n\nBut, the smile that she gave him as he greeted the rest of her family spoke volumes. It told him that she was available, that she was interested in him, and that she was ready, willing and able to take anything that he could give her. While he thought of Terri as his china doll, something fragile to be treasured and treated well, this girl that stood in front of him was begging to be taken any and every which way, the dirtier, the better. \n\n\"I'm just an intern, but my name is Tyrell Butler.\" \n\n\"Well, Mr. Butler, it is quite lovely to meet you. I hope to be able to see a lot more of you in these coming weeks. My father is going to have to have quite a bit of therapy.\" She gave him that smile again and paired it with a wink. \n\nTyrell's supervisor, Dr. Thomas, escorted the family into one of the rooms to show them the various machines and devices that he would utilize during the course of Mr. Harrison's therapy. Simone made sure to hang back so she could walk next to Ty. He looked over at her as he followed along, only to be greeted by flashes of her creamy breast as she tugged her shirt down for his benefit. She followed that up with slowly licking her lips and somehow \"accidentally\" brushing up against his crotch. \n\nTyrell couldn't help himself, the long hiatus from having sex with Terri paired with an attractive woman going out of her way to offer her body to him caused his dick to begin to plump up in his pants. As he took his regular seat to observe the beginning of the treatment, Tyrell could only seem to think about all the things he'd like to do to Simone when he should have been concentrating on his supervisor. He tried to focus in on his supervisor's technique as he slowly massaged Mr. Harrison's arm and shoulder, but he couldn't stop thinking about rubbing his dick all over Simone's tits. When he tried to push the image out of his mind, more graphic ones popped up in its place. In the end, he had excused himself from her father's physical therapy session and gone to the bathroom, where Simone promptly joined him and gave him the blowjob his body had been craving for over a week. \n\nFrom that day on, whenever Simone came in with her dad, she made sure to lave Ty's cock with her tongue and massage his balls until he damn near blew his head off. Simone was also willing to spread her legs for him when he asked, wherever they were. They did not get together outside of the clinic too often, because Ty didn't want Terri finding out about his affair, but when they did, Simone made sure that he was well taken care of. It was thrilling. But, at home, Ty found himself starting even more fights with Terri. He told himself then that it was because she was always nagging him, but deep down he knew it was because he was feeling so guilty.\n\nThe day that his straying bit him in the ass began like any other day that Simone's father had therapy. Ty sat at his desk at half-mast most of the morning, waiting for Mr. Harrison's appointment time. He had been sleeping with Simone for almost two months and he was trying to convince her to let him put it in her ass. Anal sex was something that he wanted to try, but didn't want to do with Terri. It seemed almost too dirty for his sweet china doll. \n\nThat fateful day, Simone had walked in wearing a candy apple red, skintight dress, one that left little to the imagination and matched her lipstick and her nails. After her father was shown to the therapy room, Ty gave her a predatory smile and beckoned her over with a flick of his index finger. She came to him and wrapped her arms around him, whispering the words he had been waiting to hear, \"My ass is yours, lover. Why don't you come over tonight and claim it?\" \n\nTy thought he would cream his pants. Instead, he pulled her closer and planted a kiss on her lips, one that would let her know just what was in store for her later. When he pulled himself away, his eyes fell on the form of one destroyed girlfriend and he knew that he had messed up. Ty pulled away from Simone and chased after Terri, only to receive a slap in the face. She told him that she had come to apologize for being so cold to him, only to see him in the arms of another woman. Terri was crushed and though he would do anything to take back that moment and even those months, there was nothing he could do, the damage was done. He had to go back to work, but he knew that when he went home, things were not going to be the same. \n\nTy found all of his things in a pile outside the apartment door when he arrived home that night. He noticed the little pieces of plastic that littered the clothes in one of the baskets Terri had set out. She had cut up their credit cards. Shit. Ty sighed, trying to fit his key into the door. When it wouldn't go in all the way, Tyrell knew that Terri was serious. She even took the time to have the locks changed. He wondered if there was anyway to reconcile. It seemed impossible, but he was willing to try. \"Terri, baby, please open the door.\" \n\nHis pleas were met with silence. \"We need to talk. I can explain. I won't insult you by telling you that it wasn't what you thought, but it's different...I'm not saying I wasn't wrong, but I need you. You're my doll, she's nothing to me.\" \n\nHe tried a different approach. \"Terri, I was wrong. I cheated, the one thing that I know you can't stand. But, we've been fighting all the time and I was frustrated. I was weak. I admit that. But, baby, I need you. I love...being with you. I don't know what I'll do without you in my life. I always came home to you. No matter what, I've come home to you every night. Doesn't that count for something?\" Ty couldn't believe how close he was to saying that he loved her. Well, he did, but he wasn't IN love with her, which is what those three little words would imply. He couldn't lie to her now, when she was so angry and he had spent months deceiving her.",
        "Tyrell couldn't remember how long he stood outside the door, wishing that he hadn't cheated, that she hadn't caught him, pleading with her to open the door and hear him out. Finally, he had given up and gone to a friend's place to spend the night. He came back the next morning, hoping that she wasn't as angry, only to be maced and kneed in the balls for his trouble. \n\nTy shook his head in disgust as he remembered how he had decided to try a real relationship with Simone. He had made an effort to see more of her, trying to ask her out on real dates instead of calling her up to hook up in the back of his truck or in the park outside her penthouse apartment. Unfortunately, when she realized that he was no longer attached and looking to get serious, she kicked him to the curb with a quickness. \n\nIt was another week after that before he could bring himself to show up at Terri's to try to ask for forgiveness again. His knocks went unnoticed, or perhaps she simply was ignoring them. The next day, he walked by and spied the flowers he left on Terri's doorstep in the garbage can, along with the note he had tied to it, which was unopened. \n\nIt had taken Ty a while to get it, that Terri had moved on. But, he got the picture loud and clear when he ended up in the back of a police cruiser. Of course, he shouldn't have shown up drunk, but he didn't think she would call the police. Ty thought she would just ignore him like she usually did. The incident caused him to take a long, hard look at himself and fix the things that needed to be fixed, so that the next time he was in a relationship, he could be in it whole-heartedly. \n\nThe trip down memory lane brought him to the point where he had met his Heather. Ty smiled as he thought of how he came across her at a conference that he was attending with his supervisor. She was there with her father, who was a big name in the physical therapy world. His company was responsible for many of the newest equipment that therapists used. \n\nTy had gone to the hotel's bar to relax after a long day of tedious talks and demonstrations and there she was, Heather, perched on a bar stool, sipping some kind of fruity drink. The way her lips were pursed together as she took a drink made his cock stir. Her long dark hair was swept over one shoulder, just as her bangs fell across one eye. When he approached her and sat next to her, she glanced over in his direction and smiled. That was all it took. He introduced himself and the conversation seemed to flow. She was highly intelligent as well as beautiful, and that was something that Ty valued highly, especially now that he was done looking for booty in all the wrong places. They had begun dating soon after and Ty could only thank the Lord for giving him a second chance at love. \n\n***\n\n\"Do you want me to get rid of him? I do have that kind of sway, you know. I'm a pretty big deal,\" Zack asked Terri, half joking, but fully willing to have Tyrell escorted out of the building. \n\nTerri laughed. \"Ok, there, Mr. Big Deal. Don't get too carried away. He can stay.\"\n\n\"You sure, Buttercup?\" \n\nTerri gazed up and got lost in the blue of Zack's eyes. My, he was gorgeous. \"Yes I'm sure. He's no longer a concern of mine. I was just surprised to see him here. Who do you think he's with? I hope he's not here with that blond he stepped out on me with. Not because I care, but because that shit is disrespectful.\" \n\nA chuckle rumbled in Zack's chest. \"Disrespectful, eh? Are you sure you don't care? Because it seems like you're a little worked up over this.\" \n\nTerri growled. \"Shut up.\" \n\nZack couldn't help the laugh that spilled from his lips. \"I love you, Buttercup. And I really love the way you get riled up so easily.\" \n\nZack turned his head back in the direction of Tyrell. \"He's here with the lovely Heather Heartly-Bennett. Her dad is big in the physical therapy world, it's how her family made their money. She seemed like a nice girl when I met her and, hey, here's a plus, she's not blond.\" \n\n\"Ha ha, Zack. You know, I don't know why I even talk to you sometimes.\" Terri turned her attention back to dancing...and the feel of Zack's body as it slowly moved with hers. \n\nZack leaned over, nuzzling Terri's neck with his nose. \"I love you, Terri. I will never deliberately hurt you like that. You're mine and I'm going to make sure I never give you a reason to leave me.\"\n\nTerri sighed. \"I hope not. I kind of like being with you, even when you're sitting on your ass, eating bonbons and shit.\"\n\nZack scowled. \"I do not eat bonbons. And you know you love my ass, I've seen the way you stare at it.\"\n\nTerri laughed while Zack spun her. She loved the way he twirled her around, taking charge and making her feel like the belle of the ball. He dipped her, a hand quickly snaking up her belly to brush across her breast before he returned her to her upright position. Zack couldn't help himself, she was just so delicious looking in her dress. \n\n\"Hey, Buttercup, you want to go find somewhere to make out? I want to spend some time reacquainting myself with your lips and perhaps some other parts of your anatomy.\" \n\nIt was Terri's turn to scowl then. \"Don't you think of anything else, you perv?\" \n\n\"I did before I started dating you.\" \n\n\"I'm going to the bathroom. I'll let you get yourself under control. Your mom will probably appreciate it if we don't rip each other's clothes off here, which is what will happen if we go somewhere to make out. I know you, Zachary Smith, and you are up to no good.\" \n\nThe look that Zack gave her was downright devious. He gathered her close and whispered softly into her ear, \"I'll let you go for now. I should probably check in with Mom anyway. But, you hurry back. I've got about another half an hour in me. But, after that I am taking you home, ripping this dress off and taking you on the kitchen counter. From there, we're going on a tour of the apartment. So, prepare yourself.\" \n\nTerri felt her pussy jump at the thought. Oh, so Zack was feeling that way tonight. Terri smiled as her panties became damp. That half an hour was going to go so slow, now that she was looking forward to returning to the apartment. With a stifled moan, Terri pulled away from Zack and walked toward the bathroom. \n\nZack watched her go. Man, he loved Terri Hunter...and the way her ass swayed as she walked. He adjusted himself discreetly and began to look for his mother. A swish of midnight blue fabric disappearing down the corridor that led to the patio had Zack heading in that direction. He planned on checking in with his mom, just to let her know that he and Terri were going to be leaving soon, and then finding Terri. He wanted her back in his arms, where she belonged. \n\nAs Zack made his way through the hallway, he was greeted with the sight of Amanda and another blond heading toward him. He fought the urge to turn and walk the other way, determined not to let Amanda have any sort of control over him, and continued on his path toward the patio.\n\nZack could tell the moment that Amanda spotted him. Her entire demeanor changed and from that, he knew things were about to get interesting. It was then that he realized who was accompanying Amanda, it was none other than Simone Harrison. She was a well-known whore. Zack wondered when Amanda started hanging out with her, though maybe their friendship could explain Amanda's constant sleeping around. \n\nAmanda gave him a slight wave and slinked towards him. Zack supposed that she was trying to look sexy, but after being with Terri, who didn't even have to try, it was useless. She stopped within a few feet of him and smiled. \n\n\"Zack, hi! I see you've finally ditched your little...friend,\" she said, her distaste for Terri evident in her voice.\n\n\"Well, if it isn't Tramp One and Tramp Two. I didn't know you traveled in packs. Doesn't that cut down on your success at screwing unsuspecting guys or do you two have some kind of two-for-one sale?\" Zack retorted. \n\nBoth women looked indignant at his comments and Zack could tell that things were about to get ugly. 'Why didn't I keep my big mouth shut?' he thought to himself before mentally preparing himself for the onslaught. \n\nSimone stomped off in a huff, but Amanda stood poised to go to war. \"You know, I've been nothing but nice to you and your black whore and this is how you treat me?\" \n\nAmanda watched as her words struck a chord in Zack. His entire body seemed to stiffen. \n\n\"Amanda, I'm warning you now. Don't you dare call Terri out of her name again,\" Zack growled. \n\n\"Terri? That no good, gold-digging hood rat? I have many words to describe her and none of them are her name.\" \n\nZack decided to be the better person and walk away, especially since he was starting to see what Terri meant by wanting to slap the taste out of someone's mouth. He was always kind of baffled by the phrase, kind of like he didn't get 'falling out', which was apparently the same as fainting, but now, now he got it. \n\nAs he shoved past Amanda, she spun around and unleashed as much ugliness as she could, calling Terri all sorts of names. Zack stopped in his tracks and turned slowly, willing himself not to hit Amanda. He was a gentleman and real men didn't hit women, but oh, he was sorely tempted. He glowered at Amanda, while her face contorted into a mask of rage and jealousy.\n\nJust as Zack opened him mouth to give Amanda piece of his mind, his brain registered the sound of a hand connecting with flesh. He watched as Amanda's head twisted sharply to the side and he could see the handprint starting to form on her face. He looked to the side, expecting Terri to be there, looking like an avenging angel, ready to unleash hell. \n\n\"Mom?\" Zack couldn't believe his eyes. \n\n\"Zachary, were you really going to stand there and let this girl spew that filth?\" Melinda had drawn herself up to her full height and stood staring down at Amanda, who was holding her face gingerly. \n\nMelinda stepped closer to Amanda, watching as she cowered in her presence. \"Listen here, girl. If you ever say another ill word about MY future daughter-in-law in my presence, I swear to God I will try my best to knock some of your teeth out. Maybe that will teach you to keep your damn mouth shut.\"\n\nZack tried to hold his laughter in as he watched Amanda scurry away, stunned that Melinda had actually laid a hand on her. \"Way to go, Mom.\" \n\nMelinda harrumphed as she watched Amanda rushing across the floor towards the exit. \"That conniving little slut...I'm tired of these half dressed floozies thinking that they can just waltz over to any man and take him. I won't have her disrespecting Terri any more than she already has. Amana needed to be taught a lesson and I would like to think she's learned it.\" \n\nZack could only stare at his mother in awe. She was so amazing and he was damn sure proud to be her son. \"So...future daughter-in-law, huh?\" \n\nMelinda shot him a look. \"You aren't thinking of letting her get away, are you?\" \n\n\"Hell no, but aren't you jumping the gun a bit?\" \n\n\"Zack, you better have ring picked out and on that girl's finger soon. I'd hate to see her snatched up by some other handsome guy and if you wait too long, she will be.\" \n\nHis heart seized at the thought. \"She's mine and she knows it. I'm the only one for her and she's my heart. She knows how I feel.\" \n\n\"Does she?\"\n\nZack answered with an emphatic, \"Yes.\" \n\n\"Well, I'm glad you're not a complete idiot,\" Melinda said as she brushed an errant tuft of hair off of Zack's forehead. \n\n\"I was worried about you, but you've finally grown up and become the man that I knew you could be. Continue to make me proud...and in a few years, do you think you can work on making me some grandchildren?\" \n\nZack laughed. \"I'll try. Speaking of making grandkids, Terri and I are out of here in a bit.\" \n\nMelinda just shook her head, her son was just like his father in that way. Always thinking about sex and the quickest way to get it from the women they loved. As if he heard her thoughts, Fred walked up behind her and wrapped his long arms around her and planted a kiss on her neck. \n\n\"Causing trouble in here, minx?\" Fred questioned, his voice muffled by Melinda's neck.\n\nZack regarded his parents with a look of disgust. \"Eww, Dad, save it for the bedroom. Don't scar me at such a young and sensitive age.\" \n\nFred glared at his son. \"Go find your own woman and leave me to mine. You're old enough now to handle it and if you're not, tough.\" \n\nZack threw up his hands in exasperation. \"Fine, fine. I'm out of here. Far be it for me to try to spend time with my parents. I'll see you guys next week for dinner.\" \n\nZack briefly thought about waiting for a reply, but his parents were far too busy devouring each other with their eyes to pay any attention to him. He ventured back out onto the dance floor and looked for Terri around the room. He saw her sitting at a table, nursing a glass of water. She was lovely, even when she sulked. \n\nTerri turned just in time to see Zack walking toward her. His tux fit him perfectly, highlighting all the right places, like his crotch and his muscular arms. Yum. She was one lucky girl to be able to go home with such a handsome man. \n\n\"Buttercup, you'll never guess what just happened. I'll tell you in the car. Get your stuff, it's time to go.\" \n\nZack ignored her skeptical look and continued on. \"Our half-hour is up. Where's your scarf or whatever that thing is called?\" \n\nTerri just stared at him. What in the world had lit the fire under his butt? It hadn't been anywhere close to thirty minutes. \"Zack, we have to say goodbye to your parents first.\" \n\n\"Already done. Besides, those two wouldn't hear us anyway. They're too busy eye-fucking each other to pay us any mind. So, you ready?\" \n\nTerri could only nod and gather her things. While she was picking up her purse, Zack leaned over her and whispered, \"I've changed my mind. Panties off, dress on.\" \n\nWith the amount of moisture that Terri felt pooling in her underwear, they wouldn't be doing her any good anyway. Zack knew how to push all her buttons in just the right way. \n\nAs they were leaving the party, Terri felt a hand on her shoulder. She turned around to see who it was, totally prepared to defend herself in the case of Amanda, but was surprised to see Tyrell standing there. She was caught so off-guard that she didn't hear what he said at first. \n\n\"I'm sorry, what?\" \n\n\"Terri, I'm sorry. I was a fool for hurting you the way I did. I've learned my lesson, thought it took a can of mace and a ride in a police car to get it. Thank you for that, for showing me how wrong I was. I hope that I am as happy as you are in the future.\" He smiled down at Heather, who stood proudly by his side. \n\nTerri looked up at him and took a deep breath. As she let it out, she felt a sense of peace roll over her. Closure. She hadn't realized that she needed it, but apparently she did and she was thankful that Tyrell was offering it to her freely. She suspected that he needed it as much as she. \n\n\"You're welcome. And thank you.\" She gave him a genuinely bright smile. \"Be happy, Tyrell. I wish you much success in the future.\"\n\nAnd with that Terri returned to Zack. Zack nodded his head in Tyrell and Heather's direction before leading Terri out into the night. "
    ],
    "authorname": "angelicsounds",
    "tags": [
        "interracial drama",
        "interracial romance",
        "interracial novella",
        "romance novella",
        "drama"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/fantasy-man-ch-10"
}