{
    "title": "The Big Brother Hole Ch. 04",
    "pages": [
        "No sex in this bit - they're too busy...\n\nI asked Emma to strip-wash or masturbate herself by the pool again, as there was a job that needed doing with no one watching. Now it was all we had to drink, we could no longer swim or bathe in it.\n\nAfter our lunchtime cuddle she headed for the pool and stripped. The weather was freezing so I had to keep my work to a minimum, but it worked. As she had all those weeks ago, every single camera turned towards her, and dressed completely in the 'real tree' camouflage I crawled to where I wanted to. I made sure I avoided the obvious cameras and was able to do what I needed.\n\nI crawled back again, and changed out of the camo and climbed out of our tent stretching. I walked across to the pond and there she was, with her trousers around her ankles she was fingering herself and I sat knelt between her thighs and helped finish her off. We went back to the tent, both feeling the cold and the damp now.\n\nI didn't tell Emma of my plans, I wanted her to be as natural as possible, and as the air cooled I piled wood on the fire and on her return we sat snuggly around it, warming Em after her cold masturbation and our faces were illuminated by the fire light, I figured that I didn't need to ration the wood any more after all - tonight it was all or nothing.\n\n\"Darling Em,\" I whispered in her ear, \"do you trust me?\"\n\n\"Yes,\" she said looking slightly perturbed.\n\n\"I've got an idea. Just go with me, and be prepared to run!\"\n\nShe smiled as hopefully as she could manage.\n\n\"OK Harry, I promise I'll keep up when I have to - I was always taught that, sometimes, a good priest needs faith and fast feet!\"\n\n\"Right!\" I kissed her, \"when I mention Sean start slagging him off, I'll join in.\"\n\n\"OK!\" she grinned.\n\n\"And then into the tent so we can make love,\" I said, \"or at least pretend to.\"\n\n\"That I can live with,\" she grinned back at me.\n\nI left it as late as I could, I needed the moonlight yes, but I needed Viktor pissed or out even more. As Emma started to nod against me I opened our box and we finished the last of the cooked rabbit I'd saved; we'd been too ill to shag and not been fed of course. I broke out the dwindling boiled sweets in my tin and we had a couple each, at least there was a bit of a sugar rush we might get. I made some camomile tea, and I started to talk about the dead woman and whether her corpse was affecting the water now we'd had all the rain, and the river must have been blocked downstream.\n\n\"Talking of dead people, tell me about the late Sean,\" I said carrying on with presumed dead people.\n\n\"Sean?\" She looked at my face and cottoned on, \"Oh, he was a bit odd. I hope he is dead, he was creepy.\" She shivered, \"he used to go on and on about being in the Army reserve and training with the SAS. I wasn't convinced.\"\n\n\"Perhaps his SAS training got him out of the hole?\"\n\n\"SAS?\" she sniffed contemptuously, \"he wasn't that fucking clever.\"\n\n\"Yeah, well SAS training in the reserve means something totally different,\" I laughed, \"It means 'Saturdays and Sundays'!\" She laughed uproariously, \"The bastard tried to rape you didn't he?\"\n\n\"Yeah!\" she added a snide laugh. \"Arrogant little fuckwit thought he was all that, swift kick in the bollocks taught him all he needed to know.\" She sat up straight, \"he had a feeble little penknife and thought he was some kind of Knight in shining armour.\" She laughed. I grinned to her, \"I expect he had a tiny cock as well.\"\n\nWe both laughed.\n\n\"Yeah, like to see the little cunt come back and try and beat you up now. I was a real soldier, I'd eat the spineless weekend warrior for breakfast and throw him in the pit with all the other shit, fucking weekend warriors.\"\n\n\"Oh Harry, you're such a big brave boy!\" She waggled across to me on her knees and put her arms around my neck and kissed me.\n\n\"Tell me you want anal sex...\" I whispered, \"The final nail in the coffin.\"\n\nShe stopped her kissing of me, took just enough time to get it in her head and then hissed 'OK' into my mouth and then, as if resolved to something,\n\n\"Harry,\" she said, \"Would you... I mean... you see... I've never had a cock... like... in my other hole. You know?\"\n\n\"What,\" I gulped, \"you mean... anal?\"\n\n\"Yeah!\" she said wrinkling her nose for added effect, \"I'm a virgin back there Harry and I want you to have that one seeing as you never got my pussy virginity.\"\n\n\"Oh yeah!\" I said, \"I'll tell you what, I'll do it tomorrow, that nice moisturiser in your handbag, that will do nicely as a lubricant, but I think it's in your handbag, which is in my car, to dark to go get it now.\"\n\n\"OK Harry, you can just fuck me normally then...\" she said and we kissed some more\n\nShe turned on to her hands and knees and I just pulled her sweatpants down to rest midway down her thighs. \n\nI slipped my long fingers into her cunt and pumped them at the same time scrubbing at her G-spot and she came in rents. Worst case scenario, at least we'd get fed.\n\n\"I'm ready Harry,\" she looked over her shoulder, \"take me in the tent Darling,\" she cooed. \n\nPerfect.\n\nWe got into the tent and pulled down the flap.\n\nShe lay down and I lay next to her, with my shoes just protruding under the tent.\n\n\"Oh Harry!\" she cried out, \"Oh Harry, you're so big, Oh darling, you're a real man!\"\n\nI moved the tarp sheet a bit to make it look like we were hard at it.\n\nI grunted away like the worse kind of porn star until I suggested an almighty orgasm. We lay still for five or six minutes with the oxygen mask between us. I moved the tent slightly so I could see the mirror hidden in the wood pile.\n\nI smelled that brief hit of the gas I'd smelled before, obviously what was left in the pipes, and we both took a breath from our dwindling oxygen supply. We lay quietly for a few moments in the darkness, illuminated only by the fading moonlight and our fire. We looked at each other, both holding our breath. \n\nOn a previous go at this I'd got too cocky and put the mask down to quick and woke up thirty minutes later with the oxygen mask pressing into my face. Fortunately it was a demand feed and I didn't lose all my remaining oxygen.\n\n\"I'll check,\" she whispered and took a deep breath.\n\n\"Em No!\" I hissed back, but it was too late.\n\n\"Makes more sense that I do it Harry,\" she hissed. I watched.\n\nShe was fine; my fast and almost blind work had been successful and the gas pipes were empty - part one of Operation 'Get the Fuck out' was successful. I looked down the tent to where Emma's old black shoes were poking out of the tent, just how my feet had appeared. The trap was set.\n\nFive minutes passed and the noise of the cage shattered the night.\n\n\"Stay fast asleep Darling,\" I said, don't get up until I tell you.\" I pulled her trousers down exposing her bottom as if I'd just screwed it and the noise stopped. I threw my camouflage jacket to one side of her.\n\nShe lay there waiting flat on her face and heard the stamping and growling as the now fuming Sean stormed across the Big Brother Hole intent on his revenge - probably on my face and Emma's arse.\n\nIt was dark and the oxygen tank he carried was clanking. He threw back the tent flap and there was Emma's lovely bottom still on display in the moonlight and I could see his grin. The fact that I wasn't laying on top of her seemed to pass him by. Fired but also blinded by lust he undid his trousers and I could see he had a tube of some kind with him. His trousers hit the floor, next he was on his knees and as he sat back on his heels and uncovered his erection I pushed the barrel of my safely hidden second shotgun at the back of his ear - Emma's afternoon wank had done the job and I'd got it out, put it together, and put 100 cartridges in the camo jacket I'd worn. The shotgun had slid safely into our tent under the leaves and branches that raised us from the floor.\n\n\"You should have searched the car better Sean,\" I said, \"you missed this one...\" he looked to his left at the single barrel of my black Winchester semi-automatic loaded and ready.\n\nI noticed that his erection had disappeared. He made to raise his hands.\n\n\"Don't give me a reason to blow your head off Sean,\" I said stepping into the firelight, \"after a month down here eating only fish, rabbit, dandelions leaves and mushrooms, I'm minded to do all sorts of nasty bloody things to you. Slide out carefully Baby.\" I said to Emma.\n\nOur entrapment of him made him angry and he snarled and made to turn his head, I jabbed the back of his head with the barrel of the gun and he hissed. \"Look down Sean, hands between your arse and your thighs there's a good lad.\"\n\nEmma had rolled onto her front and had pulled her legs from under his bunched up trousers. Soon she was rolling out of the other side of the tent.\n\n\"You cunts,\" snarled Sean, \"Viktor is just up there and you ain't fuckin' going nowhere.\" I jabbed him with the gun barrel again making his ear lobe bleed.\n\n\"Yes, and if you so much as sneeze a little loudly I blow your fucking head off, how's that?\" Sean snorted and laughed.\n\n\"Fuck... You...\" he snarled again.\n\n\"Listen cuntface,\" I snarled back, \"what you forget is that the lovely Emma and I have disappeared off of the face of the earth, no one knows we're here. I'm currently working on whether I cut your throat and leave you to bleed out and then do the same to Viktor in his anti-freeze Vodka induced coma up there, or string you both up from your own crane for the Mad Professor to find, what you reckon? You've done such a splendid job in hiding out, who'll know? I can't see your friends from the Russian mafia calling the police to report two dead fuck-ups, can you? Me and Emma go home and tell our families about our lovely holiday in Italy and how we met and fell in love.\"\n\nEmma was out of the tent and stood by me,\n\n\"Well done Harry,\" she tiptoed up and kissed my cheek.\n\nShe was pulling up her trousers, and gave Sean a smile,\n\n\"Hi Sean, long time no see?\"\n\n\"Bitch!\" In a flash he'd pushed the barrel of my gun away and pulled his knife, I guessed from his sock. He struck out at Emma catching her left side and she cried out, falling back. I managed to snatch the trigger somehow and the blast echoed around the hole, the shot hitting the wall of the hole. I swung the butt of the gun around and hit him on the side of the face knocking him flat. I laid into him with the gun stock and my feet such was my rage. \n\n\"Harry,\" Em said weakly, \"I think...\"\n\nI spun, and saw that my previously grey hoodie had a growing red patch on the left side, the bastard had stabbed her! \n\nI'd gotten too cocky and took my eye of the ball such was my smugness. He was well fed and in better condition than me, and I let my anger out into his face. He fell unconscious and I took the bandage I'd selected from my pocket and tied his hands.\n\nI grabbed my medical kit and was straight into paramedic mode and bandaged her side. It appeared to be quite superficial but I knew it would need hospital attention; that was the plan considerably fucked up already.\n\nShit; mind you as Field Marshal Montgomery had so wisely said, 'no plan survives the first encounter with the enemy.' That was bloody true. BUT there was still no sign of Viktor.\n\n\"Come on baby, let's get you out of here.\" I walked her across to the yellow cage and there was the remote control plugged in. I sat her down in it and decided I would go and get my bag, my shotgun slung around my neck. \n\n\"SEAN! SEAN! Wad de fuck,\" I could hear slurred words, Viktor must have been awake! I had to keep him away from the controls for the cage.\n\n\"Down here,\" I said quietly, \"Help me...\" I hissed. Viktor's head appeared at the edge of the hole.\n\n\"Sean?\" \n\nNo way was I going to come this far and lose. I hid behind the cage and he leaned over the edge further.\n\n\"Viktor,\" I hissed and he leaned out too far and wobbled, so I pulled the trigger twice more and comically the heavily pissed Viktor tried to dodge the blast and escape the shots and overbalanced head first sliding helplessly down the steep slope on the earth bank landing heavily and badly in the loose and soft dark soil he'd brought down with him. He was unconscious - pissed and unconscious to be exact.\n\nI went over to check him and found he had cable tie hand cuffs on his belt. So in another straight act of revenge I pulled his hands behind his back and cuffed him. For badness, I did his feet as well, connecting all four of them in the small of his back. I looked on his belt, the Taser wasn't there. Probably up top.\n\nI took the last cable tie cuffs and cuffed Sean hands and feet, pulling his lifeless body towards the lift, where Emma was now sat, looking pale but still smiling. I didn't know where we were or what was what and I might need this nasty little bastard - even if I had to torture information out of him. He'd already shown that he had no care or concern for Emma and I; best I reciprocated.\n\n\"Let's go baby.\" I said and with a few initial fumblings with the basic controls on the remote we were soon rising out of the Big Brother Hole, hopefully for the last time. I needed both hands to drive the crane and Emma held my gun by the stock.\n\nAs we came out of the hole, the last rays of the moonlight beamed down and I looked and saw several buildings, piles of junk and a tarmacked roadway leading away. I landed the basket where it must have normally rested and helped Emma from the cage to sit her on of all things a park bench outside of what looked like old military buildings. \n\nThere was a chink of light coming from the nearest and I made my way to it, entering it at speed, shotgun first through several layers of blackout curtains in case someone was in there waiting for me. No one was. The room lighting was subdued and it glowed with a green tinge from the masses of computer screens. On the counter was my smartphone, plugged into a charger and I picked it up. Such is the way that us twenty-first century people are programmed, I checked the messages.\n\nThere were several from friends trying to contact me, no signal of course, although the Wi-fi was strong. I came to my senses and decided we needed to get out of here before I contacted the world again.\n\nIn this room was all of the video equipment they had used to watch us, and mightily clever it looked. I could see how we must have appeared to them and our other viewers. I there was a 'pan, tilt and zoom' controller like on many of the CCTV systems we'd used in guardrooms across the country and on one camera I saw that Viktor was still lying in the mud, a seraphic, pissed look to his ugly face. I switched on the camera on my phone and started to film.\n\nOn another of the bank of monitors I also saw that Sean was up, and half crawling half hopping but gradually making his way across the compound towards Emma, his hands cuffed behind his back and his feet together. I ran outside and punched him square in his unprotected face before he could even get close.\n\n\"Going somewhere Sean?\" He rolled on his back his face a bloody mess and silently cursing his situation. I gave Em my phone and asked she started to photograph and film stuff, people would never believe us after all, and the flash illuminated the early morning.\n\nI looked across the compound and saw the other building. It had to be a guardroom; I'd been to so many army camps in my career and it looked just the same as all of the others I'd been to.\n\n\"OK Sean, think you should do a little jail time,\" I kicked him hard in his right thigh, and dragged him by the same foot, hopefully that would have taken the scrap out of that particularly leg. I bumped him up two steps and pushed the door open. I hit the lights and was temporarily blinded but as my eyes adjusted I could see that the place had been used for staff accommodation. There was a kitchen, an office, a large room that would have accommodated the guard each night and there they were. The cells, each had its door and securing handle and there were four of them. Two of the cells were obviously bedrooms now.\n\nI dragged him past these and into the first empty one, stepped over him and slammed the door shut.\n\n\"Cunt!\" he screamed after me. I turned the handle and locked the door. I pulled the flap down.\n\n\"Bye Sean, take care now.\"\n\n\"WANKER!!\" he screamed, desperately scrabbling to his feet in helpless fury. He shouldered the door in his impotent rage.\n\nI ran outside to where Emma was still sat on her bench, the pain showing in her face.\n\n\"OK baby, let's find a way to get out of here.\" \n\nThere were no cars in the compound and I guessed that we'd have heard if there had been.\n\nI followed the track somewhat and came across two cars, an old Ford Fiesta and Blue Toyota - with no visible keys in either. I ran back to control room and checked.\n\nI guessed that Viktor would have had a car and that his keys were in his pocket at the bottom of the hole. I went back into the cell block, and checked the three bedrooms - nothing.\n\n\"Car keys Sean,\" I said through the gap.\n\n\"FUCK... YOU!\" he screamed, FUCK YOU AND YOUR FAT FUCKIN' WHOR...\" I slammed his door flap closed against his ranting.\n\n\"Don't make me come in there you sad little psycho.\"\n\n\"COME ON THEN!\" he raged from the floor, kicking out at the bed that had been nailed to the floor, probably since World War two.\n\nI figured I'd leave him to wear himself out before I fought through his pockets. Shit, we were out of the hole and just as stuck as before. I had a further search but still nothing.\n\nThe sun was just appearing and I figured that the Professor would soon be along for his daily work, we could have his car. Unless he brought half a dozen Russians with of course.\n\nStill not trying not to think about that aspect until I had to, I stepped outside the guardroom and there he was, the same man that was sat next to me so innocently in that Yorkshire caf\u00e9 all those weeks ago. Emma's face was paralysed with terror, and he was gently speaking to her and encouraging her to stand, ignoring her pain, weakness, bloodstained hand and clothing.\n\n\"No dear,\" I could hear his patronising tone, \"you must go back into the laboratory, no... no... I hear what you are saying dear but you absolutely must... no... I'm sorry that you got hurt but if you'd damn well stayed put...\"\n\nI slipped two more shells into my shotgun and he turned around at the sound. He looked at me; I took a deep breath and stretched to my full six foot four - tall, armed and fucking angry.\n\n\"Put my girlfriend down,\" I growled.\n\n\"Aah Harry,\" he said taking a step towards me his hands on hips trying the schoolmaster 'do as you're told' approach, \"as I was just explaining to Emma here, you must go back down into the laboratory, we still have much to do. What have you done to her, have you hurt her?\"\n\n\"That was Sean when I wouldn't let him rape her.\"\n\nHe shook his head in disappointment,\n\n\"Sean,\" he hissed, \"always Sean... Well,\" he said perking up, \"you are a medical chap, when go back down into the laboratory, you can 'patch her' up as you medics have it.\" He gave a half smile that showed both his annoyance and his indifference.\n\n\"Laboratory?\" I snarled, \"Don't you mean the perverts palace? Or should I change that to torture chamber?\"\n\nHe sighed and looked at me like I was a fucking idiot.\n\n\"OK,\" he said, \"as a medic I hoped you might at least understand the bare basics of what we are trying to achieve here,\" he stepped closer to me, but I swung my shiny black shotgun up pointing straight at his chest.\n\n\"Stay back!\" I shouted, my training returning. He moved closer to Em so I moved around to try and put myself between him and her. He noticed and tried to keep pace with me. The bastard wanted to play mind games did he? I could do that.\n\n\"You have another gun, hmm;\" he said to himself almost absent-mindedly, \"Sean lets me down again.\" I guessed he was making mental notes, probably for next time he kidnapped someone. This was soon confirmed. \"Can I ask how you got out?\"",
        "\"Emma's prayers were finally answered, and the Lord God appeared in his fiery chariot and raised us high among the righteous; Viktor was cast down, and Sean was smote - smote like a fucking good'un.\"\n\n\"Really,\" he said folding his arms, and taking a quick step to the left.\n\n\"Really; please don't try and be clever Professor,\" I said, \"you do anything to threaten me or Emma and I will have no hesitation to start blowing pieces off of you.\"\n\n\"Oh, really,\" he said and took a bold step between me and Emma, and I was ready. I blasted a cartridge just to the right of his head and he must have felt the heat and the blast. I pushed another cartridge into the magazine tube to keep my three shell limit up.\n\n\"Next time it'll be some other part of you. Now step back.\"\n\nHe looked like he wanted to push his luck, but was lacking the last bit of confidence to do so.\n\n\"Please go back into the laboratory;\" he sighed and folded his arms, staring up into space, he looked like he was about to lose his temper. I put another pace closer to Emma. \"GO BACK IN THE HO... in the laboratory!\" I couldn't guess whether he was going to lose his temper or cry now.\n\n\"How about 'NO',\" I said.\n\n\"VIKTOR!\" he shouted with a hint of smile, looking towards the control room I'd just come from; I didn't turn of course. I knew exactly where Viktor was. He heard nothing back, so tried again, \"VIKTOR! WHERE ARE YOU, YOU DAMNED BUFFOON!\"\n\n\"Nope,\" I said, \"but do try for the other member of the Brains Trust.\"\n\n\"SEAN!?!\"\n\nThere was a mumbled shout from the guardroom, a kind of \"amfookinineeeeer!\" sort of noise.\n\n\"He's fuckin' in there Professor, and I suggest you go join him,\" I said.\n\nHe folded his arms petulantly,\n\n\"No!\" he snapped like a spoilt ten year old, \"seeing as we are all using that word today.\"\n\n\"I'll take one of your kneecaps Professor,\" I said, \"I've already had the discussion with the boy genius in there, I'm minded to chuck you all in the Big Brother Hole and leave you there to rot, same as you did for us.\"\n\n\"We did not leave you to rot,\" he took a pace towards me in temper, \"you had running water and access to different types of food that you could...\"\n\n\"Yeah and you only fed us when we had sex, I did notice that.\"\n\n\"You didn't seem to mind at the time,\" he gave a mirthless laugh.\n\n\"What about the water?\"\n\n\"We lost our mains power,\" he said, \"the generators are only strong enough for the IT equipment and building lights...\"\n\n\"That's how you got dysentery Em,\" I said, \"Seem's you can die of dehydration so long as the Mad Professor here can film it.\"\n\n\"We were trying to pay the bill, it was a computer error.\" He shook his head as if this was none of our business.\n\n\"In the fucking guard room Professor, NOW!\" I snapped at him, bored of his games.\n\n\"But the experiment!\" he pleaded, \"There's months of data in there, another few weeks of observations, please.\"\n\n\"In the winter? Tell you what Professor, you go down and we'll observe you, show us how easy it is, how well we are looked after. Go on,\" I indicated to the yellow cage, \"in you go, I'll drop you down. It's OK Viktor is already down there, he'll look after you I'm sure.\"\n\n\"No...\" he stuttered, \"no... no... I'm the only one that really understands the concept, pleeeeease!\" he turned to Emma in desperation, \"You're a Christian, make him see Emma, please make him see!\" He clasped his hands in front of him edging closer to her again, \"we're soooooo close Emma, this close!\" he whispered and pinched his fingers together. \n\nI stepped between him and Emma pushing him back several paces with the barrel in his ribs. He raised both hands in supplication, \"I'll...\" he'd obviously had a great idea, \"I'll let you both out in time for Christmas!\" he said as if it was a great treat, \"Yes! Back to your families in time for Christmas!\" He burst out, as if was going to join in the party himself. \"Your parents and sister...\" He put his hand to his mouth.\n\nEmma's face creased at their mention.\n\n\"You knew about my family?\"\n\n\"Sean,\" he stuttered, \"Sean saw that people were looking for you and we...\"\n\n\"No thanks Professor,\" she said, \"I'll just go home if you don't mind.\"\n\n\"I thought...\" he snapped, his hopes dashed by her personal betrayal of him, \"I thought an intelligent woman like you, a graduate from Oxford no less, would see the societal value of this work! The huge social...\"\n\nEmma stood up, a look of hatred on her face that I'd never seen before.\n\n\"Societal value you cunt?!\" she snarled at him, specks of angry spit flying from her lips, \"prostituting us before the world for the gratification of sick perverts like you and that bastard Sean in there? I'd rather die like Tina did, with honour! You bastard! You think you're an intellectual but you're just another pervert fuck-up like your boy in there.\" She took a pained breath and sat back down again. \"You either know or have forgotten that the Russians run things now, and as soon as Harry and I can no longer perform, they'll kill us both, or you don't care?\" he was trying not to make eye contact with her. \"You don't do you. DO YOU!\" she screamed at him, and he still looked down, knowing his indifference could get him killed now, \"No, you'll just grab another couple of poor unfortunate bastards to screw on camera until they starve to death...\" he folded his arms, trying to give just enough indifference without me killing him.\n\nHe stared at the ground like a school boy caught breaking the rules. She shook her head in disgust again, \"Ooh just shoot him Harry, then we can go home.\" She spat at him. This he seemed to fear her more than all of my threats with a gun.\n\nHe backed away from her - scared now. My turn to play mind games I thought.\n\n\"Turn around Professor, back of the skull, two shots, you won't feel a thing.\" All I actually wanted was for him to turn around so I could club him and then tie him up.\n\n\"No!\" he said, \"no, my work, it'll all be wasted, I'm the only one that can draw it all together. You say you suffered in my laboratory, well do you want your suffering to be wasted? Let me finish my work please...\"\n\n\"HELLO?\" came a rather slurred call; It was Viktor.\n\n\"Viktor!\" shouted the Professor moving towards the edge of the hole, \"get up here!\"\n\n\"How de fuck do I do that!\" he shouted back. \n\n\"Stay...\" I shouted at the Professor but he had moved closer to the edge and lay down, \"Viktor, my boy what has he done to you?\" His compassion for his Russian strong arm employee was short lived and in a flash the Professor was back up on his feet and pointing Viktor's Taser at me.\n\n\"Now,\" he said triumphantly, \"YOU go back in the cage and go down into the laboratory with Viktor.\" He grinned, his face losing all its previous concern as if he now had the answer to his problems. \n\n\"No chance,\" I said watching his face and the muscles in his hand for the first hint of flexation. I sighted the gun to his head.\n\n\"We can do this the hard way or the easy way Harry,\" said the Professor with a cool smile I was just dying to wipe off of his face.\n\n\"I never graduated from Oxford Professor,\" I said, \"I was in the infantry; hard way all the way. Now put the Taser down before I make you.\" I put finger into the trigger guard - shots were now a real likelihood.\n\n\"Drop the gun before I make you,\" he said, but turned as Emma stood, waving Sean's knife around, I didn't even know she'd picked it up!\n\nI smiled at her, she grinned back.\n\n\"We appear to have reached a bit of an impasse Professor...\"\n\nI saw his arm muscles flex and moved deftly to one side as he tried to keep a bead on me. I reacted on instinct and blasted at the gun in his hand and it flew from him, the two yellow cables part of the red mist, hopelessly damaged, as was his hand now.\n\nHe dropped to his knees staring at his wrecked hand, \n\n\"My...\"\n\nI stepped closer to him and pushed him down to the floor face down. I knelt on his back and I patted him down and found some car keys in his trouser pocket. Result.\n\n\"Where are Emma's glasses,\" I snapped at the Professor as I stood up.\n\n\"I'm not sure,\" he said rolling over and still staring at his wrecked hand and the tendrils of flesh that hung from it.\n\n\"Tell me fuck head or so help me I'll blow the other hand off.\"\n\n\"For pity's sa...\" I'd had enough of his stalling now and lashed out with my foot and caught his wounded hand and he screamed.\n\n\"Glasses you fucking psycho.\"\n\n\"On the table!\" he howled nodding his head towards the jail room, \"in the guardroom, with Sean's things.\" \n\nI kicked him sharply in the stomach and he curled on the floor, I ran into the room and there was a large in-tray style basket on a wheeled table. There was an SAS survival guide, some of the snare wire, a couple of candles, a match box, and there was a pair of glasses; and still Sean was growling from his cage.\n\n\"Set me free you cunt!\" He yelled, \"I'm as much a prisoner as you are! Set me free!\"\n\n\"As soon as the police get here, they'll let you out,\" I ran out of the room to where the Professor was laying on the floor clutching his hand as the feeling returned after the shock and adrenalin wore off. \"Get in there,\" I said pointing my shotgun at him.\n\n\"You savage,\" he snarled at me, \"You've ruined years of research, put social psychology back into the dark ages,\" he tried to roll onto his hips, using his one good hand to prop himself. I took a step back from him. He got to his knees and started to drag himself into the guardroom.\n\n\"I'm a savage, you're the one that killed a young woman and locked up another for a fucking sick experiment that turned into on-line porn.\"\n\n\"IT IS NOT ONLINE PORN!\" he shouted, \"The Russians are merely making the research available to...\"\n\n\"To any fucker out there with broadband and a credit card... you murdering bastard.\" I snarled.\n\n\"And Tina killed herself,\" he snapped, \"it was totally unforeseeable but we've learned so much from it, her death was not...\" He looked behind and saw his on-coming incarceration, \"No!\" said, \"The Russians! They'll...\"\n\n\"The Russians will do what Professor? Surely they are just your friends that are making your research more widely available?\"\n\n\"They enabled us to improve our research methods, it was necessary to humour them.\" He hissed, realising now that he was in the shit and no mistake.\n\n\"Shame they didn't arrive sooner, Tina might still have been alive.\"\n\n\"Her death...\" he said looking around at the falling walls of his own personal Jericho.\n\n\"Her death was in vain you fucking idiot, what have you learned huh? That if you stick a young girl in a hole in the ground with water and inedible food she might kill herself eventually? Rah-fucking-rah you idiot, I could have told you that!\"\n\nHe stood in the doorway of the last cell, Sean started calling him again.\n\n\"But it was for science!\" he screamed as if it was the answer to everything. In fury I punched him square in the face and he flew back into the jail cell, and I slammed the door shut on him. \"NOOO!\" he roared.\n\nI stepped out into the control room and walked to Emma, still sat on the chair holding her side shaking now. I slipped the glasses on her nose, and she looked up and blinked while her eyes refocussed.\n\n\"Harry!\" she beamed at me. \"Hi!\"\n\n\"Let's go baby,\" I said, \"Before the Russian Mafioso in the hole finds a way out.\" \n\nI locked the door on the main room and threw my medic bag over my shoulder. I did think of doing something to the Professors wounded hand but then figured, 'fuck 'im, he'll learn a valuable social lesson from it. He was wounded for science after all.\n\nThe car key I'd taken from him suggested a Citroen. I took Emma's hand and walked her through large earth bunds that must have been there to keep the noise out, and they had done a good job. There was a red soft top Berlingo and it opened to the blipper on the key. I helped Emma into the passenger seat, I asked her to keep taking photographs and film as we left. \n\nThe track was very long and I began to worry that I'd gone the wrong way. But there was no other way so I just kept on driving. \n\nEventually we got to large metal gate, I desperately hoped it wasn't locked or that the key was on the ring we had. I stopped some distance away from it and taking my shotgun, walked towards it. I walked backwards just in case someone had followed us out. The gate was padlocked shut but the Professor had the key on his bunch and I unlocked and open the gate.\n\nI drove the car out, for the first time noticing a gate house almost completely hidden by foliage, I knew that no one could be in there at least. For some reason I went back and locked the place shut again. All the time Emma was filming. \n\nThe entrance gates had a sign, 'strictly private - no entry under any circumstances' with an added 'no parking - no stopping - no turning' There was even a couple of those hardware store 'I'm on guard here' and 'German Shepherd Dog on patrol' signs with cartoon snarly canines on them.\n\nI got back in the car to see Emma with tears pouring down her face,\n\n\"Get me away Harry, please,\" she mumbled, \"just drive.\"\n\n\"Give me my phone,\" I said, \"I'll...\"\n\n\"Just fucking drive!\" she screamed. I did.\n\nWithin minutes I was on an A road with the familiar green signs, and I saw one for Stowmarket. \n\nStowmarket? Fucking STOWMARKET? That was in Suffolk, how the fuck had we ended up in fucking Suffolk from the Yorkshire Dales? \n\n\"We're in Suffolk honey,\" I said, \"We've been moved some bloody distance and no mistake.\"\n\nThere was another sign for Stowmarket, so I headed there. As we entered the town I pulled over to where there was the first fluorescent yellow clad road sweeper of the day.\n\n\"Nearest hospital mate,\" I shouted to him.\n\n\"That way,\" he said, seeing Emma's bloodstained hand, \"drive to the roundabout, it's signposted. There's no A and E but they have ambulances there.\"\n\n\"Thanks Mate,\" I shouted and pulled out, there was almost no traffic that time of day.\n\nI drove like I was in my paramedic car and eventually pulled into the grounds and drove up to the two bright yellow ambulances parked there.\n\nI flashed my headlights as I approached, and they crews got out. I explained what had happened and this was backed up by our grubby clothes and the pale thin look to our faces. I'd not noticed until I first saw my reflection in the rear view mirror.\n\nI called the police from my phone and explained to the 999 operator where I was and what had happened. She sounded startled and gave me a simple, \"Stay there, I'll get a team out to you.\"\n\nThey did, and the five seconds after she'd said it I heard the whoop of a siren. I had already told the ambulance men I was one of their own and my use of their language about Emma's stab wound and what I had done to it helped to reinforce it and they seemed quite impressed.\n\nThe Police arrived and approached me slowly but my shotgun was now unloaded and on the back seat. I held my hands up so they could see that I wasn't armed,\n\n\"OK mate, if we're to believe everything we've heard, you've got a bit of a story to tell us.\"\n\n\"Everything you've heard? Check the video,\" I handed over my phone and pressed the necessary buttons for them. \"I don't know where we were or how I got here but you might recognise something on the route we took.\n\nThe two officers stared at it in shock as Emma had filmed our home for the last month and our escape. I could hear familiar shouts and a few shots.\n\n\"Christ...\" said the first.\n\n\"What the fuck?\" said the second.\n\n\"That's the old RAF Littlehurst site,\" said the first, \"used to play in there when I was a kid. Was sold off back in the spring, they're gonna build a TV studio there.\"\n\n\"Yeah,\" I added, \"that bloke there,\" I pointed at the screen, \"He kind of did and Reverend Emma Rogers in the ambulance there has been imprisoned in it since late June. Me since mid-September.\" They both looked shocked.\n\nThe ambulance man said that we really needed to go to the hospital now. He looked me up and down.\n\n\"And if you'll take my advice mate, you should get checked over too.\"\n\nI jumped in the back of the ambulance and said that I'd be at the hospital. They followed and called up for more support including some armed response and I sat in the speeding ambulance holding Emma's hand until we reached the accident and emergency department some distance away.\n\nOnce there, I walked alongside Emma's trolley, still holding her hand. Her gorgeous face looked happy under her oxygen mask but she was also fighting to stay conscious. We were taken straight through and a nurse looked at me, my pale shocked face and sat me down. I ceased to be the rescuer and became another patient. \n\nSome Doctors appeared and demanded to know what we'd been up to. I told them; the kidnappings, the imprisonment, the poor diet, the cold, the damp, her upset stomach and finally being stabbed as we escaped. I even mentioned the Russian mafia. We showed them the pictures on my phone and were taken to a private room. The one policeman had been joined by two more, one of them a sergeant and they all made frantic notes and recorded our details, stepping outside of the cubicle to talk into radios.\n\nThe walk to the private room really seemed to take it out of me, and I was helped from my seat and on to another trolley and my adrenaline and strength finally gave out. When my head touched the pillow, the rest of me gave up and I slipped into unconsciousness. While I was out they took my blood pressure, took a blood test, swabbed, swiped and one of those tiny wrist band put on - I was well taken care of.\n\nWhile I slept and Emma was prepared for surgery, several armed response teams prepared to enter the Big Brother Hole, guided by a remotely operated drone. They entered the site in their cars where they found the Mad Professor, Sean and Viktor just where we'd left them. An ambulance was called for the Mad Professor, and more police officers, including an assistant chief constable. All before nine thirty.\n\nIt turned out that the Mad Professor was one Doctor Jeremy Peskett-Jones, who was a Doctor by virtue of his PhD in social psychology but little else. He had been left lots of money by his late mother, a consultant psychiatrist from a very well to do family. She had written several books on the subject and was one of the most highly respected specialists in her field. She had been the Home Office specialist psychiatrist working on some very high profile cases before trials and then within prisons and young Jeremy felt he should take up his mother's fallen mantle and continue her work with the incarcerated.\n\nIt was later speculated that 'Mother' might have done some experiments on him as he was definitely odd. His masters at Eton, his college lecturers and his tutor had all commented on his 'distraction' and how this strange loner was totally focussed on himself and his own needs rather than the rest of the world. His first couple of PhD thesis suggestions had been a bit worrying, they said, if not actually illegal.\n\nHe stayed in education for as long as he could and right up to his eventual, and to his advanced thinking 'grossly watered down to the point of meaninglessness', PhD.\n\nHe could not get a teaching position or Professorship at any college in Cambridge; he even tried the poorer cousins down in Oxford but the age of the slightly potty career academic was almost over, even for Oxbridge. An old friend had suggested checking in the Times Educational supplement for teaching jobs, but he said he'd rather wash up in a back street kitchen than teach in a 'Red Brick'.\n\nDenied the opportunity to spread his wisdom through education he decided he would make his mark and carry on his mother's work; but not having her education, qualifications, contacts or charm he'd been turned down by the prison service - even the private ones - and then the NHS and felt belittled. He'd show them.",
        "He'd come up with a plan to look at the human mind under the pressure of loneliness, something he was quite familiar with, and began to conjure up scenarios he'd considered and had thrown back in his face three years ago and of how he could create the exact conditions he needed for his experiment. When the police raided his London flat or his 'rooms' as he alluded to them, they found pages of plans. \n\nAs a one-time Cambridge Student, he figured that the fens would be ideal for his experiment but try as he might he couldn't secure enough land at the right price for his purpose. He headed further south into Suffolk and found some former Ministry of Defence land which was ideal for his purpose. \n\nThe land contained some original buildings with original fittings. He had bunkers, a guardroom with cells, a medical building, and an operations room. He rented the place unseen.\n\nHe moved in the day he paid the first instalment on the lease saying he was in the television industry making a new reality TV game show. The estate agent was only too pleased to get shot of this white elephant of a site and he managed to get this very pale looking chap to sign a lease for two years, and it was watertight; this was a coup and he couldn't wait to tell his boss he shifted 'that bloody place' with its buildings lagged and lined with asbestos and all sorted of nasty things possibly buried there.\n\nThe large bunkers he had removed at great expense, employing contractors from many miles away, paying cash with no paperwork just in case his leased World War Two/Cold War complex had listed building status; he didn't know, he didn't care, he had a mission. Much as he thought the bunkers might have made a good labyrinth he just could not envisage his captives believing what he needed them to believe for the validity of his experiment.\n\nOnce removed he found he was left with a large hole, and it was perfect beyond his dreams of high fences. His contractors totally believed that he was going to be filming a game show there, and built the site to his very definite specifications, the signed a non-disclosure agreement he found on the internet and all was set. They imported tonnes of soil and packed and supported it as he wanted it. The installed the stream with a silent pump, filter and solar purifier with an option to release small to medium size fish into it at a certain point. Across the site, dozens of cameras went into the trees and a system that meant they could turn on smoke as and when they wanted it. This was also adaptable for anaesthetic gas which would be a major part of his plan. \n\nHis mother had died quite suddenly and when he checked her office and her papers he found some interesting websites, order forms and paper work. Switching on her computer he found the websites she had ordered supplies from and using her credit card, he was able to order virtually anything else. Her prescription pad was also quite useful.\n\nThere first experiment with the gas resulted in their first prisoner suffocating in her sleep as the gas was too heavy and they used too much. She was one Mary Connor and had been lured from a local Irish traveller site by Sean with the promise of untold riches in the Mad Professor's house that she could steal. The old boy was nutty as a fruitcake and she could virtually help herself once she was through the door.\n\nShe'd been drugged with Rohipnol in her Vodka the same evening and then dropped in the hole. She woke with a headache the next morning and wandered around the Big Brother Hole calling out all day. The Professor was keen to see what she would do with a rabbit and prepared to put a couple in with her. The Professor had worked extremely hard on a way to put fish in the stream but hadn't for the rabbits. \n\n\"Gas 'er,\" said Sean simply. Sadly she died the first time they tried the anaesthetic and was buried by Sean in the massive woods surrounding the Hole.\n\nSean had worked on site from the beginning and just wouldn't go away. He hung around even though the Professor had asked him not to. But soon it became evident that he had just the right attitude. He would do precisely what the Professor wanted for precisely the right amount of money. He was enough of a sadist to revel in watching the prisoners, especially the female ones, suffering without wanting to report it, and would spend all of his waking hours sat in front of the video screens following them around and catching that suffering from different angles.\n\nTina, full name Tina Chappell, a poor unfortunate 21 year old kidnapped from her work as a cleaner in a Norwich office block by Sean who followed her in one morning and started to clean just as she was. He made her a coffee, and that was that.\n\nShe was dropped into the hole via the crane. Fish were released and rabbits stuffed into the snares but poor Tina was a twenty first century girl and had no clue on what to do with this kind of food. She cried when she found the rabbits, and stroked them thinking of the chinchilla she had at home and her year old daughter she'd bought it for. She wept, more and using her hands buried what was her sustenance for two days.\n\nThe Professor watched with interest as she personified her food source, he stood in his silent control room making notes on the amount of time Tina would scream herself hoarse begging for release from the nightmare. The earth bunds to absorb noise from inside as well as out were perfect.\n\nShe'd dug at the walls and they just fell in on her. She was totally unsuitable for the research and the Professor struggled with how they might train her and not lose the integrity of his research.\n\nSean suggested that perhaps they should drop her off some matches and a knife and this made sense to him. She had never lit a fire in her life and other than some charred logs the matches were all used trying to get some heat in her cold springtime home. Crying herself to sleep she prayed long and loudly for rescue, shivering in the damp April chill.\n\nThe Professor was intrigued and thought how sad it was that contemporary humans were unable to survive and do the simplest tasks and turned to a God none of them truly believed in almost instantly. He noted in his diary that she was had the knife and was cutting up the next rabbit Sean had put in the snare for her, and he guessed that she would eat it raw. She had been in the hole for eleven days by now.\n\nIt wasn't until mid-morning the next day that he noticed that she hadn't moved. What he'd taken for the rabbit being cut was actually her slitting her wrists and she must have bled out sometime in the freezing night, hugging the soft cold rabbit to her as comfort as her life ebbed from her.\n\nThe Professor was most annoyed at this girl's cowardice and how his work was set back AGAIN, and blamed Sean's interference for this setback in the research. The body was brought out and the damage to the walls repaired and Tina placed into the cold room in the medical centre.\n\nHe decided that soft Home Counties women were not cut out for his experiment and he should pick stronger women for his subject altogether. His tiny mind picked on northern, specifically Yorkshire women after watching how strong they were in some of his mother's favourite DVD's on her shelves - 'Emmerdale', 'Last of the summer wine' and 'All creatures great and small'. \n\nIf the TV and popular culture were to be believed Yorkshire women would be more hardy against the cold and able to light fires, deal with the animals he'd purchased for food and generally have the frame of mind to survive the ordeal.\n\nHe and Sean travelled up the M1 and A1 seeing a stocky no-nonsense looking woman on her own in a petrol station. She made things easy for them had put cash into the coffee machine in the petrol station entrance and again Sean made use of Rohipnol as the Professor bumped into her making her drop the birthday card she'd just bought. The Professor chatted with her and saw her to her car and she got further and further down her coffee cup and within twenty minutes they were driving their car and hers back down the motorway. Her car had been hidden under a blue plastic tarpaulin in the yard had I only searched a little harder the day we escaped.\n\nShe was kept out cold while the Professor and Sean lowered her into the hole. To the Professors disgust it turned out that this wasn't a tough Yorkshire woman like on TV but was an imported bloody priest from the South of England. \n\nAgain he cursed Sean, they had gone to a ton of trouble and he was disgusted that bumpkin Sean didn't know a Yorkshire accent from a southern one and all that effort was wasted. \n\nSean said he would go down into the hole and kill her and they could go back to Yorkshire and get another one. The Professor was enough of a Christian to know that this was wrong and baulked at this idea and said that Sean would jolly well go down into the hole and teach this priest what to do to stay alive. Sean took a crash course with his SAS survival manual and two nights later the gas was released and the Professor lowered the crane into the hole with Sean's motorbike.\n\nHe met up with the pretty priest and said that he'd lost control of his motorbike and woke up in the hole. She was friendly and really pleased to see him. He seemed not to want to escape, and convinced her there was no way out. She asked him how he knew that. He snarled and hit her for the first time. The sadist wasn't going to take that from a priest.\n\nHe set the snares from wire 'he happened to have in his pocket' and built fish traps to stop the farmed trout they bought and released into the stream. He started the fire and showed her how it was to be kept going. He walked her around and told her what green leaves she could eat then built a shelter and invited the priest into it and she thanked him. He cooked a rabbit for her and later that night felt she should reciprocate physically. \n\nNot having any experience with women he tried to bring the conversation around to sex. She didn't respond and started to feel a little nervous about this strange man who seemed to know just too much about this place and survival. After two nights of patiently waiting for her to put out (at least he felt he'd been patient) and ended up attacking her and she kicked him squarely in the testicles and he beat her for it. The Professor, watching the whole thing on the cameras, flooded the hole with gas and they both passed out.\n\nSean came round first and took Emma's glasses out of spite having seen how short sighted she was when he showed her how to light a fire with them. He knew that the Professor was annoyed with him and left him there to teach him a lesson, so he just hung around the Hole tormenting her and looking for a time when he could have his revenge. Two nights later he was lifted out - by the new management of the hole.\n\nHe had purchased the Rohipnol through local drug dealers and they had taken a liking to this strange show-off giving him access to one of their slave girl prostitutes and their locally brewed vodka. The more pissed he got and the more women around him bolstered his self-esteem and much as he knew it had to be secret, he gradually told them the Professor's plan. \n\nThey weren't just ordinary drug dealers of course, they were hard faced Russian mafia who saw the financial benefits of the project, namely selling the video of what was going on in the hole and exploiting this pair of lunatics in the way that the Mafia always had.\n\nThey'd followed Sean who'd already briefed them about the Mad Professor and they played along, talking about his ground-breaking concept and the value it would show to the wider world. The Professor was charmed by them and agreed, especially when they reached for their cheque books. He was gradually running out of Mummy's money and his project was in danger of closing down. They were using the anaesthetic gas at almost two canisters a week and no small practice or even dentist used gas to that extent.\n\nThey provided better recording and IT equipment for the scheme and initially the Professor was pleased with the increased financing of something he still considered a science experiment as his mother's money had almost all gone. Their new kit was broadcast quality and beamed the images to a satellite they'd rented to send pictures to the sociology department in Moscow - this was going to be a bargain and make him internationally famous. But he couldn't find them name of the university it was supposed to be going to; but it was all aiding his scientific research and would put him up there with his mother - higher even!\n\nThe Russians told Sean to 'help the fat incumbent of the hole to lose weight' and Emma's strange diet began. She would go days without food, and she noticed that her periods had stopped.\n\nOnce she had slimmed down the Russians suggested that a man should be thrown in to liven up the viewing experience. The Professor argued that it wasn't about the viewers but the social psychology.\n\n\"Yeah right,\" said the Mafia, and promptly ignored him. Two weeks later a young man from Lowestoft was kidnapped off of the street by the Russians and brought to the site. The Professor knew nothing about it, and argued that he would remember being kidnapped and would tell the woman and the whole precept of the woman not knowing what was going on would be lost. \n\nSean explained it to them using smaller words; aah... the Russians hadn't thought of that so to get back on track, the young man was smothered in the boot of the car he'd been brought in, taken back to Lowestoft and dumped in the sea wrapped in an old carpet.\n\nSean realised things were too big now and tried to escape and was caught and brought back and threatened with dire warnings should he run again. Mind you, the Russian Mafioso soon had the measure of Sean and he quickly won his loyalty through the increase in wages. He convinced the Russians to let him and the Professor seek the next victim. The Russians liked this, the less input they had the better it was, so far nothing in the UK had any connection to them. Sean would have to be quick though, the Russians wanted some return on their investment. \n\nFive weeks later the Professor jumped in his mother's red Citroen and they headed back to Yorkshire, the Professor still wanted some tough northerners in the experiment. I was kidnapped from another Yorkshire Service station and dropped in the hole with my car and my nightmare began.\n\nI woke up from it two hours later on my hospital trolley, lost for a moment and a smiling nurse came over and asked if I was OK. I shook my head and tried to work out where I was, and for a moment wondered why I, the ambulance man was on the bed this time. The nurse put a hand on mine asked if I was hungry. I admitted that I was and she smiled, went off and returned with a white china mug and a triangular package. So I had my first sandwich and a cup of tea. The sandwich was an ordinary, boring, coronation chicken sandwich that I'd taken for granted for so many years.\n\nIt was heaven and the nurse giggled as I crooned over it. My taste buds had tasted nothing this interesting in over a month and I explained that. The nurse was so impressed that she went to her locker and came back with a large bag of cheese and onion crisps. I asked her to marry me, only once I'd seen that she had a thick wedding band on.\n\nThirty minutes later I was taken to sleeping Emma's bedside by a very twitchy police officer and then told we both needed to be careful as this was the Russian Mafia we had upset. I asked if I could stay by Emma's bed that night, knowing what she would be like if she woke suddenly. \n\nThe room was warm, I'd had several cups of tea and that point could have slept through an air raid. A doctor had suggested that I needed a night's sleep myself and that the police would put me up in a nearby hotel. I said no, sat in the comfy chair by the side of her bed while she recovered from her surgery. A nurse put a blanket across me, at some stage and there was a mug of tea.\n\nIt was shortly after four in the morning when I was woken by the nurse, \n\n\"This is Harry,\" whispered the nurse and I heard a cup being put on the table by Emma's bed, \"you just have to meet him...\"\n\nNext there was a hand on my shoulder and another on my cheek.\n\n\"Harry?\" whispered another female voice, and through half opened eyes I looked at a face that could have been Emma. This was her Mum who along with her Dad had driven through the night to be at her side.\n\nI tried to stand, but was 'shushed' back into my seat by her Dad. I sipped my tea and spoke quietly with them and brought them up to date with what I knew and they told me about their side of the hunt for their daughter.\n\nEmma had been reported as missing all of those months ago and was last seen on some rather grainy CCTV at the petrol station with a big smile on her face and buying the birthday card she was on her way to deliver.\n\nTo confuse things Sean had covered her number plates with those from his broken down car at the yard. His was a Ford XR2 while hers was a Focus. Nothing peculiar for the motorway cameras to see. \n\nThe Police missing person report had not been taken that seriously at first; she was a rather bookish, prim, wrong-side-of-29 year old that might just have decided that being a spinster vicar in Yorkshire wasn't for her and could just have driven somewhere for the high life.\n\nHer mobile phone went unanswered, it was switched off and in her car where she'd put it down while she sipped her coffee chatting with the rather nice older chap that had seen her to her car after almost knocking her over in the service station.\n\nMum Charlotte, Dad Tom and Sister Ann had started an on-line search for her bringing in support from the church at all levels, everyone knew Emma and knew that she was far from the kind of person that would just take off and disappear from the face of the earth.\n\nOnly one person made a connection. He'd read of the still missing priest from Yorkshire and seen her photo in the e-newsletter he'd read. Later that night, he'd seen a short video clip of a naked red haired girl with the self-same smile giving a tall man a blow job as he stood against a car on its side and thought how much she looked like the priest. \n\nThe girl giving the blow job looked much too happy doing what she was doing so he never contacted anyone. Besides, there was no way he could explain to the rest of the world why he was watching pay per view porn adverts on his home laptop. He sent an anonymous email two days before we escaped.\n\nStowmarket Police had never had one as weird as this and even off duty detectives came in to see what was going on. One of them googled 'Reverend Emma Rogers' and was taken straight to the website. He phoned the mobile number they'd bought especially and spoke to her Mum and Dad and told them that Emma was alive, wounded but the surgeon said she would make a full recovery and advised both of the Wiltshire GP's stay at home for that evening and come bright and early the next morning when Emma would be in a much better condition to welcome them herself.\n\nThey tried to do that, but at a little after midnight and both wide awake jumped in their car and drove to Ipswich. \n\nDespite their insistence I stood and welcomed them. The nurse took us to a small family room and made tea for all three of us. They had already been told by the police what had happened to their daughter.\n\n\"You brought her out,\" said Tom, with a choke in his voice.\n\n\"Both of us sir,\" I said, \"Team effort all the way, I couldn't have done it without her\". I'm not sure why I called him 'sir' but it seemed like the right thing to do. I knew I wanted to remain in her life, being friends with her parents couldn't do any harm. And after all, I had just spent the best part of a month living with and making love to their daughter. I think her Mum might have guessed though; when I spoke of 'Em' she beamed at me, and however much I tried to hide it, it must have been obvious to her what we had been to each other.",
        "We sat in Emma's room just watching. I told them about myself, and being a paramedic. This seemed to impress them... well her at least. Every now and again I noticed that Tom was staring at me, and he'd look away as soon as he saw that I'd noticed. This went on, so I decided I wasn't going to tell them about our month long relationship, at least not until she was awake enough to confirm what I was saying. \n\nWe went for breakfast at 6.30 and I had the full English I'd been dreaming of for a month. The only disappointing thing was I wasn't having it with the woman I'd promised to share it with. OK her parents were there, but it wasn't the same; but I was hungry enough to eat a horse. Tom continued to stare at me.\n\nAs we walked back to the ward I was approached by two men in suits who introduced themselves as police officers and asked to have 'a chat with me'. \n\nTom looked at me, almost with the strangest look in his eyes - almost pleased.\n\n\"We'll get back to Emma Darling,\" he said to his wife, \"we'll leave Harry to his business with the police.\"\n\nIt was one of those 'helping the police with their enquiries' moments, and taken to Stowmarket police station regarding my 'assault' on the Professor. Although I wasn't arrested, I was conscious that one of the policemen was resting his hand on my elbow - OK I hadn't been arrested but I got the feeling that if I so much as sneezed aggressively I'd end up on my face with handcuffs in the small of my back - all in front of my girlfriends parents.\n\nShit, what next?"
    ],
    "authorname": "Androgynousother",
    "tags": [
        "escape",
        "being watched",
        "masturbation"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/the-big-brother-hole-ch-04"
}