{
    "title": "Cumkiss Ch. 02",
    "pages": [
        "Will looked at his beautiful girlfriend sheepishly. \"Did I just swallow my own cum?!?!\" He thought to himself. \"And my dick is hard again already?\" He didn't know what to think.\n\n\"I'm not gay,\" he told himself. Just to be sure, he thought about a few guys he knew and made sure he felt nothing sexual. He most certainly did not. \"Thank God!\" he thought. \n\n\"'Not that there's anything wrong with that,'\" Will quoted Seinfeld internally and chuckled to himself.\n\nHaley squinted at Will, maintaining that devilish look in her eyes. \"What are you laughing about?\"\n\nWill recovered quickly, \"Just at the audacity of what just happened - what I just did - what WE just did. Never saw that coming. No pun intended.\"\n\nHaley giggled. \"It's a bit shocking to me, too. Yesterday I shied away from kissing you after swallowing and today I shared your cum with you. I even had you lick some pre-cum off of my tits. And I'm getting wet again just thinking about it! I get the idea you liked it, too,\" she said, looking at Will's hard cock.\n\n\"Yeah . . . I guess I must have liked something there. I've never really been that kinky before. I started the dirty talk months agai because I could tell you liked it, but apparently I must have some fetishes of my own. But no matter what we just did, I am NOT gay!\"\n\n\"Oh Sweetie, I know that,\" said Haley. \"We may have done something unconventional, even dirty, but there's nothing gay about tasting yourself. You've made the joke that you'd blow yourself if you were limber enough, do you think that would make you gay?\" \n\n\"Of course not! Just lucky!\" Will replied. \"Still, even if I could, it'd be nowhere as good as what you do with that slutty mouth of yours.\" \n\n\"Like give you a cumkiss? Or was that a snowball? What's the difference?\" Haley asked.\n\n\"I have no idea,\" said Will. \"And I really don't care.\" And Will realized he didn't care. If kissing a beautiful woman after she blew him excited him, then he accepted that. No, that's not right. It was kissing THIS beautiful woman, kissing Haley, that he liked. It felt so intimate in the moment that he found himself wanting it again. He loved feeling so close to his girlfriend, and showing her how much he appreciated her. \n\n\"Well, talking about this makes my pussy wet,\" Haley said. \"Ready to take care of that?\" She asked, pointing at Will's erection. \"I have some ideas on where we go from here.\"\n\nWill's dick bobbed yes for him, excited at what was to come. Seeing this, Haley grabbed Will's member and lead him to the bedroom. \"Lay down on the bed, my little cumslut. Feel free to rub you cock as you watch me walk away. I want it to stay hard as I grab a couple of things.\"\n\nWill was only too happy to oblige, laying with his head on a pillow, his dick in his hand, and watching the pleasant wiggle of Haley's ass as she went into the closet. He played with himself as he watched, adoring her form and anticipating what was next. He wondered what Haley had planned. \n\nSoon Haley returned with a few of Will's older neckties in hand. \"I think you are smart enough to know what these are for, my little slut. \n\n\"And can I tell you how much I like being the one to say that for a change? Calling you MY slut? Now put your hands up near the headboard.\"\n\nWill did as instructed, allowing her to tie him securely to the headboard. She did the same with his feet and the footboard. Will was now Haley's to control. And his dick was still rock hard. \"My erection suggests I like this change of pace, too.\"\n\n\"I've never thought much about this, do we need a safe word?\" Haley asked.\n\n\"I don't know. Do you plan to hurt me? I don't think I'd be into pain.\"\n\n\"No, I couldn't do that,\" Haley replied.\n\n\"I think we'll be fine without it then, Haley.\" Will said.\n\n\"But what about that, my little cumlsut? If I'm calling you my slut, then you need to call me something else.\"\n\n\"You like it when I call you 'slut,'\" Will suggested, knowing full well that was not the right word to use in this situation.\n\nHaley scoffed, \"That won't work! I think you need to call me . . . 'Mistress.'\"\n\n\"Yes, Mistress.\" Will said, falling into character. He thought that was what she would want, he just wanted her to suggest it. He could see the satisfaction in her eyes when he used the new title.\n\n\"What should I do with my little slut? I know!\" Haley said, reaching into her nightstand drawer and grabbing her vibrator.\n\n\"Umm . . . Mistress? What are you planning to do with that?\" Will asked, a little hesitant.\n\n\"It's for me, you silly little slut. At least mostly it is,\" Haley said, with that devilish grin back. \"But first . . .\"\n\nHaley turned the vibrator on its lowest setting and rubbed it around Will's dick and scrotum. Will started at the sensation at first, but then realized it felt nice, really nice. He could get used to this treatment. Haley massaged Will all around his cock and balls. In no time at all, there was a copious amount of pre-cum on Will's dick.\n\nBut Haley stopped after a short time, and rubbed the tip of the vibrator in the pre-cum that had oozed out of Will's cock. She looked at it with a look of consternation and said, \"That's not nearly wet enough for my pussy yet. Guess we'll have to lubricate it the old-fashioned way.\" With that, she took the vibrator and its pre-cum covered tip and brought it to Will's mouth. \"Open up, slut.\"\n\n\"Yes, Mistress,\" Will replied, forming an \"O\" for the vibrator.\n\n\"No, no, slut. You have to lick it first. And be sure to look me in the eyes with a smile as you do. I need to know that you like tasting MY pre-cum, after all.\"\n\nWill was impressed. Haley was pretty good at this roleplaying. He gave her a genuine smile and gently licked the vibrator, mimicking how Haley would do the same thing when blowing him. Although he looked her in the eyes, Will could sense that Haley's hand was working her pussy already. She really got off on this. Soon she had the vibrator working Will's mouth as she fingered herself. And Will had to admit, this was hot, especially when he could taste himself on the fake cock in his mouth.\n\nHaley removed the vibrator from Will's mouth. \"You did really well there, slut. I think you deserve a reward,\" Haley said. \n\nHaley then stuck the vibrator in her pussy and fucked herself with it as Will watched. \"Was this the reward?\" Will wondered. Watching Haley masturbate was awesome, especially when she started rubbing her tits as she used the vibrator. He had to crane his neck, but he could see Haley work the vibrator in her snatch with one hand. With the other she slowly rubbed her tits, running her nails along her breasts, gently hefting them at times, and every now and the pinching her nipples. And when she didn't have her eyes closed in pleasure, she was looking at Will with lust. Still, Will definitely hoped for something more than just a show, no matter how hot that show was. \n\nWill sensed Haley was approaching an orgasm when she abruptly stopped with a regretful sigh. \"Why did you stop? . . . uh, Mistress?\" Will asked, almost forgetting Haley's title. \"You were almost there.\"\n\n\"Oh, I wanted to finish, my little slut, but sometimes it's better to tease yourself, right?\" Haley responded. She then rubbed the vibrator in Will's ever-present pre-cum, and brought it to his mouth. \"Your reward is ready. You get to taste my juices mixed with yours. Now lick it nicely like I taught you.\" Will did. \"That's it, such a good cumslut. Now suck my juices off of it.\"\n\nAs Haley pushed the vibrator in Will's mouth, she also climbed aboard Will's cock. Will was in heaven. Haley's pussy was so hot right now. And she was squeezing his cock with her muscles even as she fed him the fake one. She slowly bounced up and down on his cock, concentrating on long, even strokes as she watched Will lick their combined juices off of her toy.\n\n\"That's it, baby, work that cock with your mouth. Can you taste what my pussy must taste like right now, with your cock inside it, covered in pre-cum? You can taste our fucking, you little slut. And you love it, don't you? You love tasting our juices together. It's almost as if your tongue was in my pussy with your cock, isn't it. Oooh, I can tell you like the thought of that. I could feel you twitch inside me when I said it.\" Haley removed the vibrator and set it aside. \"Tell me you love the taste of our fucking.\"\n\n\"I love it, Mistress,\" Will said.\n\n\"What do you love, cumslut? Tell me what you love.\"\n\n\"I love the taste of our juices mingled when we fuck, Mistress. My pre-cum mixed with your pussy juice. I can still taste it now and it makes me want to cum, I can barely control myself buried deep inside you,\" Will said.\n\n\"You can still taste it?\" Haley said. \"Really?\" Will nodded. \"I want to taste it, too, slut,\" she said, as she leaned forward, burying her tongue in Will's mouth. Will could feel her searching his mouth, trying to get the full flavor. She really was as into it as he was. \n\nAnd as Haley probed Will's mouth, she humped his dick harder and faster. Will tried to fight off his impending orgasm. Haley hadn't cum yet, and he wanted her to cum on his cock. \n\nBut Haley must have sensed Will's struggle and must have wanted him to cum now. She pulled away from Will's face, and smiled evilly again. \"You're going to cum in my pussy, cumslut.\" It was not a request. \"And you're going to do it before I cum. That doesn't seem right, does it? A Mistress should get to cum. So you know what will happen after you cum? I'm going to move my cum-filled pussy up to your mouth. You're tied to the bed and can't stop me, can you? And I'm going to ride your tongue and face until you clean every last drop of cum from my pussy. And, of course, I'll fuck your face until I cum as well.\n\n\"You'll do that for me, won't you, CUMslut? You'll eat your cum out of my pussy?\"\n\nWill nodded.\n\nHaley stopped moving. \"I need to hear it, slut.\"\n\n\"Mistress, I will cum in your pussy and then eat all of my cum out of your pussy so you can cum, too. You deserve an orgasm. I'll eat every last drop of my seed from your pussy because I am your cumslut. And I'll enjoy it - because I AM a cumslut. Please, Mistress, let me eat my cum from your wet pussy? Please?\" Will begged, and he meant every word. He wanted to please Haley so very much.\n\nHaley smiled, and started humping Will's dick once again. \"I believe you, slut. I believe every word. And because you've been such a good slut for me today, I'll give you what you want. But you have to promise me one thing.\"\n\n\"Anything, Mistress.\" Will was approaching the point of no return. Haley's pussy was magical around his cock. \"Just name it!\"\n\n\"I want you to swallow our juices, but keep some in your mouth, too. It's only fair that you share the taste of our fucking with me. I want to taste your cum and mine, too. Can you do that?\"\n\n\"Yes!\" Will exclaimed as he let loose in Haley's pussy. He imagined what it would be like to eat his cum from Haley's well-used snatch, and it spurred his orgasm on. He thrashed underneath her with a violent orgasm. He bucked and moaned, repeatedly releasing jets of cum into his Mistress, cum he knew he would be eating very soon. When he was done, the fact that he was tied to the bed was the only thing that kept Will from curling into a ball as he caught his breath. \n\nIt's also what allowed Haley to climb up Will's body while he was still recovering, not that he would object. Will watched as Haley smile above him disappeared behind her perky tits, and those were quickly lost to sight as Will saw Haley's cum-soaked pussy enter his field of vision. Then Haley leaned back a little so she could look Will in the eyes. \"Now smile as you lick the cum off my labia, then clean my whole pussy as instructed. But remember, when you're done, I want a taste.\"\n\nWill did as instructed. He licked Haley's shaved pussy with a smile on his face - and his smile was genuine. The taste of Haley's juices mixed with his cum was enchanting. He felt so dirty doing this, but it tasted so sexy. And it felt intimate; doing this made Will feel so much closer to his girlfriend.\n\nAlthough he started out gently, licking and savoring the juices on Haley's wet lips, it wasn't long before Will was feverishly sticking his tongue deep in Haley's snatch. He sucked and licked and probed even as Haley rubbed herself on Will's face. She was literally fucking his face, making it hard to breathe, but Will kept at it, wanting to please his Mistress, wanting to clean her thoroughly. He licked all around her pussy, inside and out. When he could, he teased her clit with his tongue. He was thoroughly enjoying every minute of this lewd act. \n\nAfter only a couple of minutes of this, Will felt Haley convulse with an orgasm, a strong one. He thought he had trouble breathing before, but this tested his limits as she ground herself on his face. Will also thought he had managed to clean all of his cum from Haley, but her orgasm must have loosened something, because more was dripping out and he quickly lapped It into his mouth. It was a good thing, too, because he had forgotten to save some for her. \n\nWhen Haley moved off of Will's face, she lay down next to him. She kissed his cheeks, his forehead, and then, gently, his lips. Will opened his mouth for a deeper kiss and they kissed passionately, sharing the leftover juices in Will's mouth. Haley moaned as she tasted them, stopping the kiss to smile for a second, then resumed. When she pulled away, she said, \"That was delicious. Thank you for being my little slut tonight.\"\n\nHaley gently untied Will and asked him if he enjoyed his creampie dessert. Will chuckled. He had heard that term before, but never thought he'd eat one, much less enjoy it.\n\n\"So really, did you enjoy that?\" Haley asked.\n\n\"Yes, I did. I really did. I see why you like to feel like a slut. It's a big turn-on. Plus, it makes me feel closer to you when I can please you in that way,\" Will replied.\n\nHaley smiled. \"Yes it is all of that,\" she agreed. \"I guess we're both just a couple of sluts, at least for each other.\""
    ],
    "authorname": "WCTDP",
    "tags": [
        "blowjob",
        "creampie",
        "cum eating",
        "cum swallowing",
        "eroctic couplings",
        "femdom",
        "fetish",
        "oral",
        "oral sex"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/cumkiss-ch-02"
}