{
    "title": "The Naked Weapon Pt. 11",
    "pages": [
        "A storm was brewing on the horizon. Vast clouds of roiling black clouds, shot through with lightning and spreading a shimmering haze of blazing hot rainfall. I had a sinking feeling that even a torrential downpour wouldn't do much to the muggy heat of Doyen Prime. However, that whole storm had nothing on the glare that was coming my way from Lt. Amelia. \n\nAmelia had been the first person I had ever met when I had arrived at PsiCom. She was a nice person, and I had just...kind of put her into a really shitty position. My guts knotted with guilt and I looked down and away from her, rubbing the back of my neck. This was somewhat tricky, because Ali was currently kissing and nuzzling against me with a boundless excitement, her hands caressing me all over. She murmured. \"You're alive, you're alive! You're alive.\" \n\nI laughed. \"Technically.\" \n\nAmelia snapped her fingers. \"Squaddie Hatem, explain to me right now what the flying fuck is going on.\" \n\nI nodded. \"Right.\" \n\nThe rain was sleeting over us - bubbling and hissing as it struck against the telekinetic field that most of the psions were able to throw up - by the time I was finished. \"So, basically, I realized we had a shot at winning the war. Like, forever. Every minute we spend giving the Doyen and Dr. Jerkfuckface to rebuild is another minute for him to, oh, I don't know, point them towards Earth. We have to finish this. And we have to finish this now.\" I looked at Amelia. She looked thoughtful. But she also shot a glance at Sergeant Barry, who lifted his head and pointed his finger at me. \n\n\"Two tiny problems with your plan, Hatem,\" Barry said. \"One: You didn't have Supergirl here bring the nukes. Without heavy ordinance, we're going to be fighting out of our weight. Two: Even if we take out the Doyen's high royalty and Doctor Oblivion, that doesn't make the rest of the Doyen Empire vanish.\" \n\n\"No,\" Ali said, sliding away from me. \"But if I'm holding Doyen Prime, I can begin to offer places for younger nobles to come, to hide, to join our side.\" She nodded. \n\n\"And with the League's help, we can start hitting any major Doyen forces that reestablish themselves. And protect the Earth with more than just stealth,\" I said, nodding. Amelia and Barry looked at Paragon. Paragon frowned slightly, her finger going to her collar. \n\n\"Omniack, what do you think?\" \n\n\"I think we're out of range, aren't-\" Amelia started. \n\n\"I think he has a point,\" Omniack's voice came from her collar. \"But it's still a risky as all hells plan. Admiral Delacroix, what do you think?\" \n\n\"Hatem,\" Commander Delacroix said, her voice pure ice. \"I commend you. You have managed to both earn a medal of honor posthumously and a date with a military tribunal within five hours of each other. That's a first.\" \n\nI grinned. \"Firstly. Cool!\" I said, nodding to Paragon. \"Quantum?\" \n\nHer broad brows furrowed. \"Your throat com!\" I said. \"Is it quantum entanglement?\" \n\n\"Technically, it's a form of renewing connective strata using shinimantic-\" Omniack started. Paragon flicked the mute switch on her collar. \n\n\"Yes,\" she said. \n\n\"Secondly,\" I said. \"Do medals of honor cancel out dishonorable discharges?\" \n\n\"Nope!\" Amelia said, slapping my back. \n\nI gulped. \"Commander, I...\" \n\nThe thunder rumbled and I trailed off, not really having a great way to defend myself. But my gut said that this had been the right decision. Delacroix sighed, dramatically. \"Well, as we are set, then we shall make the move. Lt. Amelia, you're in command of on planet operations. Princess Tzali, I want you to make contact with any subversive elements on Doyen Prime. How long do you think your strike force can go undetected?\" \n\n\"Between six hours and ten weeks,\" Ali said, nodding. \"It all depends on if a noble decides to use the stargate and finds out what Rinny and us have done.\" \n\nI looked at Rinny. The tough looking gold-skinned Doyen was looking around herself with an expression somewhere between 'oh god, what have I done' and 'oh god, I may actually have a shot at something I've dreamed of doing for years.' It was an expression very similar to anyone who had broken a ten year gambling-free streak by buying a lotto ticket and got five cherries in a row and was just about to unscratch the last of the scratch hole. That was how lotto tickets worked, right? She saw me looking and pursed her lips slightly. \n\n\"Then we'll have to move fast,\" Delacroix said. \"We'll put ourselves into orbit once you give the signal. I want scouts to identify the best positions for HQ to drop in. Then, we'll engage in operations. Good luck. Also, Lt. Amelia...if Abby Hatem steps one inch out of lines and away from your orders, you have my permission to shoot him dead. Understood?\" \n\nHer voice clicked off. \n\nParagon grinned at me. \"So, if you survive this, what are your plans for retirement? Teasing dinosaurs while being dressed in nothing but steaks?\" \n\n\"You guys have dinosaurs?\" I asked. \n\n\"Not...with us,\" she said, shaking her head. \"They're extinct.\" \n\n\"On your planet too?\" I asked. \n\n\"Yeah,\" she said. \"You know most species go extinct, right? Like, more species have gone extinct than current exist in the whole galaxy.\" \n\nI blinked. Then, slowly, I turned to Amelia, who was regarding me skeptically. Ali then stepped between her and me, snarling. \"If you dare touch Abby,\" she said. \n\n\"I'm not going to shoot Abby!\" Amelia exclaimed. \"God. I'm not some blinking commissar!\" \n\n\"Or, if she is, she's more like Gaunt,\" I said, nodding. \n\n\"She's not that skinny,\" Ali muttered. \n\n\"No, Ibram Gaunt-\" \n\n\"Hatem!\" Barry snapped. \"Shut up!\" \n\n\"Sorry, Sergeant,\" I said, coughing. \"Stupid obscure sci-fi references are how I break the tension.\" \n\nBarry stepped up close to me. His eyes narrowed. \"Dan Abnett is not obscure,\" he growled. I blinked. And, on cue, each of us laughed. As the tension bled from my spine, Ali crossed her arms over her chest and frowned at the lot of us, laughing and giggling. Amelia, seeing her look, nodded. \n\n\"Right. Lets get to work.\" \n\n*** \n\nVicky, Ali, Rinny and I all arrived at the outskirts of Doyen Prime's capital. I adjusted the glittering crystalline armor that I wore and wondered if all Doyen armor was this uncomfortable, or if it was just nervousness. Vicky had shifted herself to her big badass spider form (that is, her horse big, not house big spider form) and Rinny strode before Ali like she was her guardian and protector. All in all, with me to the side, Rinny at the front, and Vicky at the back, we looked like a proper procession of Doyen bigwigs. Well, Doyen bigwig and her slaves and paladin guards. Same difference. \n\n\"So, Tzali,\" Rinny muttered. \"Why did we bring your boyfriend? Beyond another way to increase the chances of us getting caught?\" \n\n\"He's a warper and, thus, the best way for us to get out of here once we're done,\" Ali said, sniffing. \"And because he has precognative powers.\" She smiled ever so slightly at me. This was an expression that would have worried me - I mean, what better way to get caught, right? - save that Ali's psychic expressions remained as locked and controlled as ever. Doyen didn't even look at faces, most of the time, so I risked a smile right back at her. \n\n\"Oh,\" Rinny said, slowly. \"Well, which noble estate should we try first?\" \n\nI tore my eyes from Ali and looked around the capital. One downside of being dumped places via teleportating warp gates created by gorgeous naked psychic ladies? You rarely got to get a good look at a place before you were in it. And being surrounded by the entirety of the capital was enough to give me eye-strain. Every single building was constructed from the raw psychic energy of the Doyen households living there. Crackling walls of blue force, swirling greenish nimbuses of anti-gravity fields, flames fifty feet high that wound around purple pillars of solidified light. And those were the less ostentatious houses. The fanciest house I saw looked like the Doyen in question had siphoned (or maybe I should say psyphoned) off a chunk of stellar matter, contained it in a bubble of black light, and set it above his house. The gravitational field of that stellar matter dragged chunks of the ground upwards and into orbits around the thudding heart of fusion-fire, and several of those chunks had been carved into esoteric landscapes, decorated with greenery and shrubs from dozens of worlds. \n\nAt least, that was how it looked. For all I knew, the whole 'gravitokinetic field of stellar matter' thing was just some fancy illusion. But as I looked at those swirling bits of greenery, my gut told me... \n\n\"That one,\" I said. \n\n\"Ah,\" Rinny said. \"Go to House Taven, one of the most loyal retainers of Ali's father. That's genius.\" \n\n\"Well, duh, of course they'd be the ones most likely to betray him,\" I said. \"Classic Ned Starke. I presume.\" \n\n\"Who?\" Rinny asked. \n\n\"I don't know, I never read Game of Thrones,\" I said. \n\nRinny's brow furrowed even more. Ali shook her head slightly and whispered. \"Don't ask.\" \n\nOur group worked our way down the broad thoroughfare and I got more chances to observe the Doyen on their capital planet, in their capital city. And the thing that struck me as the most obvious weird thing? It wasn't the buildings made of psychic energy, or even the clear signs of enslavement on many of the aliens walking by. That shit was pretty standard Doyen bullshit. No. It was the fact that each building was built so far away from every other. Each building also had defenses. Like, up close, I could see where paladins could set up shop, where war-forms could fight without putting their house at risk. I could see phalanxes of Doyen who weren't in warforms, waiting for anyone to start some shit. \n\n\"I feel really bad for you people, you know?\" I asked. \n\nAli nodded. \n\nWe came to the swirling bubble-gravity house. The front 'door' was actually a Doyen Paladin. Demonstrating the pastel spread of Doyen ethnographics, this girl was bright pink. And she clearly both knew the stereotypical view of pink in human society and fought against that stereotype, because her armor was five times spikier than any other Doyen armor I had seen. She had painted it dark black, and her cheeks had been decorated with swirls of black war paint. She snarled and thrust a spiky finger at Ali. \n\n\"What do you want, stranger?\" \n\nAli scoffed. \"I am an emissary of House Gaunt,\" she said - her eyes betraying the shifty glance she sent my way as she quickly made up a fake noble house. \"We're a minor house at the edge of the Empire, and we seek to meet with the scions of House Taven.\" \n\nThe pink paladin pursed pretty...lips and cocked her head. \"House Gaunt. Never heard of you.\" \n\n\"It has to do with the engagement that recently took place against the humans,\" Ali said, her voice soft as she leaned forward. \n\n\"You've heard news of it?\" the pink paladin asked. \n\nAli nodded. \"And I believe Gaunt and Taven could...take advantage of it.\" \n\nThe pink paladin frowned. \"One of your retainers goes in. The other two stay out here.\" \n\n\"Rinny, you're with me,\" Ali said, without hesitation. My gut said this was the right move. My head said this was the right move. My dick and my heart and my soul all started a vicious letter writing campaign and started airing attack ads on TV: Is the brain really an enemy agent? It's not slander, you can't sue us, we're just asking questions! The two Doyen headed inside. Vicky and I remained standing. I crossed my arms over my chest and wished I had something to lean against. Vicky sat back on her spinnerets. The pink paladin kept looking at us, like she expected us to start attacking her at any second. \n\n\"Sup?\" I asked. \n\n\"Not much,\" she said, shrugging. \"Kinda pissed off we didn't get a shot at the humans.\" \n\n\"You, uh, hate humans?\" I asked. \n\n\"Nah,\" she said. \"I just like fighting. And a chance to get some land grants.\" She grinned. \"And I hear fighting humans is the best test that a paladin can face.\" \n\n\"It's a fantastic way to get killed,\" Vicky said, her voice soft. \n\n\"Well, hey, what else am I gonna do with my life?\" she asked, looking honestly curious. \n\nI tapped my foot. \"You could...knit?\" \n\n\"What's knit?\" Her brow furrowed. \n\nI coughed. \"So, uh, is it hard to work at a house whose centerpiece is a chunk of star?\" \n\nThe pink paladin scoffed and waved her hand. \"Maybe for a pussy. Like you.\" \n\nI arched an eyebrow. \n\nThe pink paladin's eyes narrowed ever so slightly. \"Hurm...\" she murmured. \n\nVicky slowly bumped me with one of her furred legs. A Doyen Paladin would never let a challenge like that stand. \n\nI blinked. \"Right!\" I said. \n\n\"What?\" the pink paladin asked. \n\n\"I challenge you!\" I said, thrusting my finger at her. \"For insulting me.\" \n\nThe pink paladin smirked. \"You're not Doyen, are you?\" \n\nI quickly jerked my head around suspiciously. No one was looking our way. In fact, the street seemed to be mostly empty, save for the paladins at the front doors of the distance houses. Doyen paranoia had come to my rescue! I looked back at the pink paladin, who looked like she was waiting for me to respond. A moment later, it clicked: She wasn't looking at my face and my frantic looking. She was waiting for my psychic emotions to give her away. And I was keeping my shields up and hard-core encoded. She smirked, opening her mouth. \n\n\"Grab her!\" I shouted. \n\nVicky leaped. \n\n*** \n\n\"That was your plan!?\" Ali snarled. \"Grab her!?\" \n\n\"I panicked!\" I hissed. \n\nThe four of us - five, if you counted the bound and gagged and psychically shielded pink paladin - were crammed into the antechamber of the stellar house. Each of those rock chunks was actually a psychically charged portal that headed to an enclosed area that could have been anywhere on the planet. Vicky and I had grabbed and dragged the pink paladin into one of those homes, protected by some quick warping by me. Basically, I had just...warped light past us for a few steps, so no light would bounce back to any watching Doyen's eyes. It had been tiring, but since we hadn't immediately been attacked by dozens of pissed off psychic warriors, I figured it had at least partially worked. \n\nAli groaned. \"Well, fortunately, Rinny and I got to meet with the youngest children of House Taven...\" She frowned down at the paladin. \"They're willing to join us in the attack on the old guard. Hey, you!\" She nudged at the pink paladin with her toe. \"Pinkie!\" \n\n\"Mmph!\" the pink paladin said. \n\n\"How are you for hitting the dickheads who have been running this empire into the ground for the past two millenium in the...dick?\" Ali asked. Either she was too exasperated to use diplomacy, or she rightly realized that this was diplomacy for the pugnacious paladin. \n\nThe pink paladin slowly cocked her head. Then she shrugged. \n\n\"Mmphh,\" she said. \n\nAli scowled. \"Land grants!?\" \n\n\"Mmmhh!\" \n\n\"Fine!\" Ali said, waving her hand. \n\n\"How can you understand her? She's gagged and psy-shielded,\" Vicky said, frowning. She had resumed her sexy Sarah Kerrigan looking form due to the simple fact that sticking a horse-sized spider into what seemed to be the Doyen version of a sitting room was not exactly comfortable for anyone involved. \n\nAli shrugged. \"That's what all paladins want.\" \n\nRinny opened her mouth, as if she was about to complain. Then she sighed and shrugged. \n\nI grinned. \n\nWhen we had emerged from the sitting room, four Paladins in similarly overly spiked armor were there to meet us. Well, not meet us exactly. They had gone to the post the pink paladin had taken and were looking around. She, being degagged now, called out to them: \"Hey, can't a girl take a break every once and a while?\" \n\n\"No,\" one of them said, smirking at her. \"We detected a faint residue of fear here-\" \n\n\"Have you seen the spider?\" she asked, jerking her thumb at Vicky, who had resumed her horse-sized spider form. The paladins eyed her, and then started to nod. \n\nAs we walked away, Ali grinned to me. \"Nice instincts, precog.\" \n\nI winked at her. \n\n*** \n\nThe small camp-sight that PsiCom had set up in the jungle was looking a hell of a lot more camouflaged when we happy three emerged from the warp and looked around ourselves. Biokinetics had resculpted tree branches and leaves to create a semi-solid canopy, while telekinetics and Paragon had righted and set up the mecha. Those were being loaded and armored and readied by every hand not currently out scouting. Amelia was in the center of it all, scratching out orbital diagrams in the dirt with a stick. Since this required her to bend forward, it meant that her ass was thrust towards us and I could see every bit of her delicious, delicate looking pussy. \n\n\"Will you try and seduce her too?\" Ali asked, chuckling. \n\n\"No, she...was definitely a gold star lesbian last time I checked,\" I said, nodding. \n\n\"A most excellent lesbian?\" Ali asked, her brow furrowed. \"How does one have objective metrics for sapphism?\" \n\n\"Don't ask me,\" I said, laughing. \"I'm supremely unqualified to pass judgment on any forms of lesbian culture. I don't even speak lesbianese!\" \n\nAli nodded, then smirked. \"Ah, I see.\" She stepped around to stand before me, her finger going to my chest. \"And yet, you've told me several times that you wouldn't mind trying being a girl for a bit using biokinesis.\" She grinned. \"Ergo, you must speak at least some lesbianese!\" \n\n\"To be fair, lesbianese isn't a real language, so...\" \n\n\"I know it's not real!\" Ali said, rolling her eyes. \"It's just a charming metaphor!\" \n\n\"Yes. Charming.\" Vicky said, slowly. \n\nAmelia chose that moment to stand up and look over at us. Seeing her expectant head-jerk-motion thing (you know, the kind that requires the use of your whole chin), I jogged over. I saluted, then took a moment to look at the orbital diagram. She had scrawled out the moon and Doyen Prime, and placed several dots and lines around it. The scouts - people from Gamma and Delta squad - were both waiting for her to pass judgment on their reports. They'd have to wait a bit longer, because Amelia asked: \"What's the report on Doyen subversives?\" \n\n\"House Taven's scions have contacts in four other noble houses that all...express dissatisfaction with the current regime,\" Ali said. \"If we hit during the celebration parade that's happening today...\" She grinned. \"They'll switch sides.\" \n\n\"Celebration parade?\" Amelia asked. I looked just as surprised. \"They just got their bums kicked!\" \n\nAli sighed. \"Apparently, my father is gathering up all the Doyen survivors from his attack and he's going to fly them over the capital. Here's my thinking...\" She sighed. \"Nothing brings out wanna-be traitors faster than a historic defeat. And this?\" She gestured around us at all the gleaming mecha and heavy ordinance. \"This was a big ass defeat.\" \n\n\"I can really tell that you've learned English primarily from Hatem,\" Amelia said, shaking her head. \n\n\"So, he needs to show he's still in control and bring out any traitors while he still has Doctor Oblivion on his side,\" she said. \"Oblivion is his ace in the hole. The supervillain can toast anyone in a solo fight, or even a five on one fight.\" \n\nSo, to really underline the disparity in power levels involved here, Paragon was about a mile away, at the far, far, far, far end of the camp. She had been busy in using her laser-eye vision to spot weld some fresh armor onto one of Gamma Squad's mecha. The instant that Ali said the word 'Oblivion', she had blinked from there to right beside me. Like, between blinks, she had flown over. And it was a flight thing, not a teleportation thing, because I kinda saw her movement a few seconds later when my brain had time to adjust to just how fast she was. Then the fright impulse hit and I leaped away from her with a strangle 'muahah!' ",
        "\"I'll tell you right now,\" Paragon said. \"Oblivion is controlling your father. Not the other way around.\" \n\n\"Noted,\" Amelia said. \"How many paladins are going to be on our side?\" \n\n\"Five noble houses and their retainers?\" Ali asked. \"Maybe two hundred.\" \n\n\"So, a hundred mecha, a superhero team, two hundred traitors and PsiCom HQ versus...\" Amelia paused. \n\n\"Six hundred loyalist and Doctor Oblivion,\" Ali said, her voice grave. \n\n\"Not the best odds...\" Amelia murmured, rubbing her chin. \"Is there a way we can make things more stupidly lopsided in our favor?\" She grinned. \"Cause right now, that's sounding about even and in war the last thing you want is a fair fight.\" \n\nI blinked. \n\n\"I have an...idea,\" I admitted. \n\nAmelia turned to face me. \"That tone of voice already tells me a lot about it.\" \n\n\"We can double the size, strength, and speed of every single one our warforms.\" I crossed my arms over my chest. \"We'll have to alter the armor, but the increase in faculties will be more than worth it. Furthermore...each one of us will have a direct link to Doyen strategies, allowing us all to formulate immediate responses to any surprises they pull out of the bag.\" \n\nAmelia narrowed her eyes. \"That sounds too good to be true.\" \n\nI grinned, slowly. \"Welllll, did you ever read my report after I returned with Ali? From my first mission?\" \n\nAmelia shook her head. Barry arched an eyebrow as well. Vicky looked on curiously. Even Paragon was leaning in. Suddenly, I felt just like I had back when I had made that report to Commander Delacroix and Lt. Kerensky. It had been back when I had been a fresh faced, brand new recruit into the PsiCom. And I hadn't even been comfortable swinging dick! I had still been shy and self-conscious about nudity. Well, now, all that old embaressment came back as I stammered: \"B-Basically, I, uh, and Ali crash landed after her forces ambushed PsiCom HQ. We both landed on a hostile planet with psyvore predators - so, we had to stick together to survive.\" \n\nAmelia nodded. \n\n\"So, we pulled an Enemy Mine and we fucked like jackrabbits,\" I said, my voice squeaking. \n\n\"That didn't happen in Enemy Mine,\" Barry said, flatly. \n\n\"Then how did the weird lizard dude get preggo? Huh? Answer me that with your precious science,\" I said, wiggling my fingers in exaggerated finger-quotes. The tension didn't leave my gut and the embarrassed burn on my face. I shook my head. \"T-The important thing is, uh, if you're...\" My fingers meshed. \"Together. And you, uh...war form it up...\" \n\nAmelia's eyes widened. \"You have got to be kidding.\" \n\nI shook my head. \n\nParagon slowly put her hands over her face. \"And I thought Dabbler was the worst superhero I had to work with.\" \n\n\"I have many questions!\" I exclaimed. \n\nAmelia made a chopping gesture with her hand. \"I cannot ask my entire attack force to fuck on command. There's a limit to what any officer can ask of her men and her women.\" She paused. \"But...I can bring it up. And we can see about how we might...take advantage of this new...\" She searched for a word. \n\n\"Titacal opportunity?\" I asked before I could rip off my own jaw and club myself to death for saying something so stupid. \n\nAmelia glared daggers at me. \n\n*** \n\n\"...so that's the strategic and tactical picture,\" Amelia said. \"I won't ask anyone to do anything that they're uncomfortable with.\" She crossed her arms over her breasts, frowning slightly. I looked from her to the rest of the members of PsyCom. My squad were looking contemplative. Beli looked like seventeen different Christmases had come true at the same time and Santa Clause was a ripped body builder with a cock the size of a baby's arm. Diamond looked as enthused as Tasmin. And Tasmin was asexual. \n\n\"Well,\" the leader of Beta Squad said, standing up. \"I'm down for alien poontang.\" \n\nThis startled a laugh from a bunch of people. \n\nTasmin stood. \"I'm asexual,\" she said. \"I'm as interested in sexual activities as I am in geology.\" She shook her head. \"Less, actually.\" She sighed. \"But I also know when we need every edge we can get.\" She pointed at Vicky. \"Victory Smith is an expert biomancer. Can you provide some...\" She paused. \"Pheremonial encouragement?\" \n\nParagon was floating near me. That was how I could hear her muttered 'oh for fuck's sake.' \n\nVicky looked thoughtful. \"I...could.\" \n\n\"We'll put it to a private vote,\" Amelia said, nodding. \"Everyone, ping me your answer.\" She closed her eyes, prepping herself to receive the telepathic messages. I glanced at Ali. She gave me two big huge thumbs up. But we had it easy. We'd be nailing each other. \n\nAmelia's head remained leaned forward for another few minutes. Then, slowly, she nodded. \"The votes are in,\" she said, quietly. \"I, uh, guessed that being naked most of the time would make a lot of us shameless. I just didn't...expect it to be so many.\" She blushed. \"Paragon, can I borrow your QE coms? I need to talk to my girlfriend real quick.\" \n\nParagon flew forward and I grinned, pumping my fist. \n\nA few minutes of awkward conversation and shuffling as people talked to one another to wait for the next foot to drop followed. Once she was done on the com, Amelia walked over to me and whispered. \"Hatem, I need to ask you to...take a minor...uh...\" \n\nI blinked at her. \"What?\" \n\n\"I need to shag your girlfriend,\" Amelia said, her adorable British accent making even that kind of unexpected lewdness sound just...so freaking adorable. I repressed the urge to pinch her cheeks and instead said: \"...whut?\" \n\nYes. With a U. \n\n\"I'm going to be in charge of this mission. I need high level s-strategic information, which she has!\" she stammered. \n\nI blinked at her, slowly. \"I...\" I looked at Ali. Ali was looking thoughtful. \"I...I guess that's...sure?\" \n\nAmelia turned so red that her freckles almost vanished. \"R-Right then!\" \n\nAli smiled. \"Well, let me send a message...\" Then she paused. \"Wait! I gotta go check everyone's preferences!\" She started to walk off. A shockingly short time later, a hundred or so Doyen Paladins arrived. They came in the air, they came through warps, and they came by simply running through the trees. Their warforms shimmered away and they strode into the camp, looking about themselves nervously. The mixture of men to women was about on par with our spread - variations based on preference had evened out. Rinny met with them, shaking hands, speaking telepathically. \n\n\"Now this is a surreal sight,\" I muttered. \n\n\"Yeah,\" Barry said, causing me to almost launch my bones out of my ass in pure startlement. He had crept up behind me in that uncanny way of older non-commissioned officers. He shook his head. \"I have absolutely no idea how we're going to put any of this in the history books.\" \n\nThe Doyen eyed us. \n\nWe eyed the Doyen. \n\n\"Anyone else getting prom night flashbacks?\" I asked, grinning nervously. A few men chuckled. \n\n\"Nah,\" Barry said, brazenly confident. He stepped past me. \"I fucked the prom queen, Hatem.\" \n\nThe pink paladin that I had been manhandling just a few hours before stepped away from her line too, sneering slightly. \"You all scared? Just cause these are humans?\" she asked, snorting. She eyed Barry. Her eyes drifted down to his cock and she cooed happily. \"Nice.\" She licked her lips. Barry coughed and, in the awkward silence of the encampment, we could all hear him. \n\n\"No hard feelings about-\" \n\n\"What?\" the pink paladin asked. \"The fact you kicked the hand picked brown nosers of House Prime's asses?\" She shook her head. \"You don't get it do you? That's a reason to fuck you, not the other way around.\" She smirked, her finger caressing Barry's chest. \"The rest of these paladins are just fucking cowards who are afraid of showing a second's weakness.\" \n\nThat pushed a few paladins into stepping forward. \n\nI glanced at Vicky. She was standing beside Amelia, who was standing next to Rinny. Subtly, Rinny nodded to Amelia. Subtly, Amelia nodded to Vicky. Subtly, Vicky's hair shivered in a slow, clicking wave. My nose tingled and I licked my lips slowly. My cock started to harden slowly as the pink paladin leaned up on her toes and kissed Barry on his lips. I breathed in and felt my nose actually burn slightly. It was the kind of burning you got when you breathed in on a crisp Autumn's day, or when you accidentally inhaled some pepper. But rather than leading to lots of swearing, this just sent a wave of heat along my spine and right to my cock. Quietly, I could hear Tasmin starting to breath faster and faster. She was standing near me, next to Beli. I looking at the two indian girls, I saw Tasmin start to caress between her thighs. \n\n\"S-So that's what it feels like,\" she said quietly. \n\nBeli slipped up behind Tasmin. She nuzzled the other girl's dark brown neck, nuzzling and nipping at her. That...was fucking hot. But...I managed to remember my job. I gently grabbed onto both girls and felt the sizzling heat of their skin. Touching them filled me with the mental image of just how perfect it would be to slide my cock between their caramel breasts, to see Tasmin lick and nuzzle at my cock and suck me into her eager, wanton throat. I took those images - and the girls - and shoved them towards the Doyen. Tasmin staggered into a purple skinned Doyen male with a ridged cock that was getting harder and harder by the moment. She gaped at him, then slowly reached down. She caressed him, while Beli simply kissed her partner - a Doyen female with nearly the same skin tone as Diamond - on the lips. \n\nI nodded. \n\nGood job, Abby! My somewhat foggy brain mumbled around the pillow that my cock was pressing to its face, desperately trying to smother it while he chanted: Fuck! Fuck! Fuck! Fuck! Fuck! \n\nThat was when an arm of glittering gold and pure muscle wrapped around my throat and dragged me against an impressive double combo of curvaceous breasts and glorious girl abs. My cock twitched in the warm, moist air of the jungle and I grunted as Rinny snarled in my ear. \"Time for some revenge, pretty boy.\" Her hand closed around my dick and she started to gently pump my shaft. Her breath caught as she crooned. \"It's even warmer than I thought.\" \n\nI closed my eyes, grinning slightly. \"You have a funny idea about revenge, goldy...\" \n\n\"Shut up.\" Rinny growled. \n\nThe orgy was really kicking off. Do you know how hard it is to take in a two hundred some odd person orgy in a single moment? Let alone when half the group are pastel colored rebel psychic aliens. Add to that the intense distraction of having a bright gold muscle-girl give you a handjob. But I'll do my best to give you a sketch of what was happening. I could see Barry and the pink paladin - who my drug addled brain immediately christened Pinkie Pie, despite her having literally nothing in common with the exhuberently colored bearer of the element of laughter. Yes, it was because she was pink. I guess I was the real racist. The two were kissing and Barry looked like he was learning all about Doyen tongues. Ali was nuzzling against Amelia, who was leaning against a tree, one leg cocked upwards to give Ali plenty of room to lick and kiss at her sex. Then Ali's tongue plunged into Amelia's sex the same way Pinkie Pie's tongue was unfurling down Barry's throat. I could see one of the men from Beta Squad slamming into a green Doyen's ass, his balls slapping her gushing ass as she gasped and cried out in pure bliss. Moans and gasps and croons filled the air. \n\nRinny's hand pumped me faster and faster and faster as she snarled in my ear. \"Fucking cum already.\" \n\n\"Is this revenge?\" I asked, focusing and barely managing to keep my orgasm at bay by cheating and biokinetically suppressing it. But I knew that the instant my focus managed to break, I'd be cumming and cumming hard. And focus is hard to keep up, even with such a minor power, when a gorgeous gold chick is giving you a handjob while you watch the biggest, most erotic orgy in the galaxy. \n\n\"If you cum before I do, it's a mark of weakness,\" Rinny said, chuckling. \n\n\"Oh!\" \n\nI focused. \n\nI focused on the way Barry had pushed Pinkie Pie to her knees - and she had wrapped her tongue around his cock as many times as it could go. Her eyes glowed with delight as she looked up at him. I focused on the way that Tasmin was on her back, her thighs spread as Beli sat on her face. Beli was kissing her Doyen partner, her own dark fingers vanishing into the alien girl's midnight black sex. Tasmin was being fucked and fucked hard by the Doyen male she had paired off with. If Tasmin had been a virgin, not only was she not one now, she was also taking dick like a pro. I focused on Diamond, who had managed to get herself pressed up against a cute Asian chick. The two of them were kissing, even as Doyen men fucked them both. That was a pose that looked made for porn, but it turned out if you whammied an entire mob of athletic psychics with lust pheromones...well... \n\nMiracles could happen. \n\nI took all that collected eroticism. \n\nAnd I smashed it into Rinny's brain like a flower pot on the head of an castle guard with a remarkably thin helmet. \n\nThere was no grace, no subtlety in my biokinetic and telepathic attack. But I didn't need any. I just needed a reaction. And I got one. If my dick had had a bone, Rinny might have shattered it. I did let out a loud ohhhfffhh as she tightened her grip and screamed. She screamed so loud that at least twenty people fucking wildly broke off from their kissing, nuzzling, sucking, groaning, grinding and bumping to look at us in shock. Rinny's whole body convulsed and I felt her collapse behind me, dragging me down with a squack. \n\nAli drew her mouth away from Amelia's sopping wet pussy, her long tongue dripping with another girl's juices. \"Don't hurt my boyfriend!\" she shouted over the moans. \n\nI lifted a single arm. I made the Terminator 2 thumbs up. Most people wrongly assumed that this meant I was okay. But I meant it in the manner of 'I am currently being dunked in lava, please help me.' I slowly rolled onto my side, trying to fight past the hollowed out feeling that severe genital trauma could impart. I carefully breathed some biokinetic life back into my junk, hissing as Rinny twitched and quivered on the ground. Her eyes were unfocused, her lips split into a wide, wide grin. Her voice slurred as she mumbled. \"I can see time...\" \n\nI grinned. \n\nThe pain was gone. The memory of it was fleeting. \n\nAnd the pheremones were doing their job, stoking the temporarily quashed fire. My achingly hard cock thrust into the air and I reached down. I tried a little something: I added ridges along the underside, flared out the tip of my dick slightly - thinking about the way that Ali moved and ground against me. I added a tiny flange-bit that I thought would bump up against a clitty. Then I grinned and shifted a bit more, to alter the texture just so. Once I was done, Rinny had dropped from hyperventilating to breathing normally. \n\nI pounced. \n\nMy hands grabbed onto her wrists, shoved them above her head, and my altered cock slammed home. Rinny was tight as a vice and slick and wet as anything - but the noise she made as my cock ground against her G-spot and hit every single pleasure center in her body at once...well...it was something. Her thighs spread and one of her legs kicked spasmodically as she came and came and came. I started to slam into her, jerking my head up to look across the field. \n\nAmelia and Ali were grinding their sexes together. Their legs interlocked and their breasts bounced as they rocked their hips. Ali's face was ashen, flushed and glittering, while Amelia's freckled breasts bounced deliciously. Her brown hair hung in bedraggled, sweat soaked spikes around her head. Beli was getting it doggy style now, right next to Tasmin. The two managed to hold hands, even as Doyen fucked them roughly. Diamond was being fucked against a tree. I blinked, then swung my eyes back to Beli. Yes, she was being fucked by the same, female Doyen she had been paired with. The woman had actually created a telekinetic dildo and slipped it into her sex. \n\nSince, well... \n\nDoyen weren't that great with biokinesis, over all. \n\n\"Everyone!\" Amelia cried out, her voice hoarse from her many orgasmic cries of pleasure. \"Focus!\" \n\nI closed my eyes, feeling the crackling surge of telepathic energy snarling around the place. That feeling made me look up and around. I could see Paragon. She was seated in a tree and her hand had dipped between her thighs. I could see a tent being made by her fingers against her skintight jumpsuit - a tent that rose and fell, rose and fell as she watched, her nipples peeking out against her outfit. I closed my eyes again, gritting my teeth. I could feel Rinny beginning to focus as well.  \n\nConnection. It sparked. As bright and as hot as a plasma torch , and as deeply perfect as anything I had felt. It wasn't the same as being with Ali, but it was born of the same gloriousness. I cried out - and my voice was joined by hundreds of others. Trees cracked, grumbled, and fell with roars and crashes as I stood and stretched my arms. My eyes looked out through my warmform's head and I roared. It was a primal sound, ancient and buried deep inside me. A raw power crackled through my limbs. And then I looked down at myself, unwilling to see anyone else before...this. \n\nRinny's mind and mine were so closely connected that I could feel her impressed coo. \n\nMy normally blue warform had shifted to a shimmering silver - blue and gold? - and rather than a muscular, masculine chest, I had the same full, perky breasts as Rinny. Silvery lightning crackled and I realized that I had four arms, though. Each one was heavily muscled. And since the tent-canopy had been sculpted to keep plenty of cover for mecha and my head and shoulders had punched through it, I figured that...maybe I was at least fifty percent bigger than I used to me. My lower hands slipped along my belly and I found I still had a big old swinging dick. \n\nThis is...unique, Rinny's thoughts echoed in my head. It's hard to describe how much closer this kind of communication was. Like, it was as instant as thinking to yourself. But instead of thinking to yourself, you were talking to another, full person. I shook my head, then looked over at Amelia/Ali. The two had fused into a bright blue woman. She had two arms, but her head lacked a mouth and her hair was long strands of crackling lightning, and a pair of glittering lattice-like wings spread behind her. Other warforms were standing, each one a unique fusion of male and female, male and male, female and female. Colors were mixed to create a new prismatic hue. \n\nSlowly, too, I realized...the powers and personalities were expressed. Barry and Pinkie Pie had fused into a dark gray-green futanari who was already surrounded by immense, crackling fields of telekietic force. Her knuckles were hard and tipped with five foot long spikes. \n\nTasmin/Random Doyen? They were teal and had four arms, like me. But rather than being sheathed in crackling lightning, they looked as if they were surrounded by black-light. Shadow seemed to pool and warp around them. And Diamond/Doyen lacked legs. Instead, their lower torso blurred away into an indistinct shimmer, like a genie from A Thousand and One Nights. However, surrounding her were at least fifteen spheres of inky blackness. They warped space around them and were flecked with stars. ",
        "I grinned, slowly, as Paragon flew to hover before my head. She looked tiny - but still managed to radiate a kind of pure dangerous menace that could only come from someone on par with Superman. \n\n\"You okay in there, Abby?\" she asked. \n\n\"We are fine,\" I said, my voice booming. \"Rinny says hi, Abby says hi.\" \n\n\"Whose...in charge?\" she asked. \n\nThere was a long pause. I and Rinny shared a kind of weird mingled quasi-discussion. It was all so fast that I have a hard time parsing out individual sentences. Eventually, I finally said: \"That's...a meaningless question. Ali's the one whose in charge.\" I grinned. \"She is my girlfriend, after all.\" \n\nAmelia/Ali clapped her hands. A sonic boom echoed out. \n\n\"Suiting up montage!\" she said - showing that Ali had a bit of an influence there. \"Paragon, can you handle this?\" \n\nParagon sighed. \n\nMontage was the right word for it. Paragon moved with brutal speed and careless efficiency. She didn't care about keeping the armor in one matched set, or in the idea of bringing them back together in one piece once it was all over. She just focused on spreading it out based off her grasp of our abilities. Those with natural defenses - like Barry/Pinkie - got only a bit of armoring around their chest, spot-welded together by flashes of her laser eyes. Those who looked more frail got shoulder pauldrons, bracers, and more. Weapons were tossed out and soon, I was holding a GAU in one hand and had manifested a pair of crackling psi-swords in my other hands. My free hand slapped a boxy ammo container into the GAU and I grinned. \n\n\"Put on a Cruel Angel's Thesis...\" I said. \"And lets blow this popsicle stand.\" \n\n*** \n\nThe Doyen military parade was a thing of grotesque beauty. Hundreds of warforms marched down the broad main street of the city towards a palace that hadn't been there the last time I had looked around. Ali's father had clearly gotten it built in a hurry, and he stood on a balcony, looking down at the parade in honor of his defeat. Next to him stood Doctor Oblivion, looking quite mysterious in his black robes. The Doyen Paladins marching by had psi-weapons at the ready and strode past the civilians who were watching with wide eyes and opened gapes. \n\nThe first sign that they were under attack was a cascading ripple of pops. Tiny spheres of black light consumed every single civilian, swirling around them, then vanishing. They left behind glowing craters in the pavement that Doyen crafted for their streets. Those civilians were now two continents away, and would miss one of the biggest shows the galaxy had ever seen. \n\nThe Paladins had enough time to look confused. \n\nThen the warps opened. \n\nDiamond and several other skilled warpers opened holes in reality - swirling and flaring. And through it came us. \n\nMissiles and gunfire seared through the sky. To their credit, the Doyen reacted immediately. Psi-shields snapped up and interlocked with one another. Bullets hammered into them. Many reflected, smashing into the buildings. Dust and bits of crackling psionic debris flew into the air. Then I landed on the ground before three Doyen, unable to focus on anything but their attack. They slashed at me and I parried with two crossed blades - using my lower arms. My upper arms swung the GAU around and blew them in half. AS their warforms collapsed to the ground, I swung my head around. \n\nDiamond was floating in the air, her hands pressed together as tiny black dots opened around her, loosing streams of sun-fire through her warps. These created bisecting fields of laser-like beams, which sliced and cut into Doyen. One managed to bring up a shield, which the beams struck and started to bore into. Tasmin and Barry both charged into a massed formation of shields, their shoulders smashing him. Lightning and flames exploded. \n\nThen a Doyen charged into me and, again, my focus narrowed. I parried a flurry of strikes so fast and so skillful that I actually had to let my mind go blank and let Rinny take full control. Psi-sword and psi-sword danced, filling the air with car-sized sparks. I parried, swung, ducked, rolled. My warform was bigger, but it was also faster. However, the Doyen fought with a wild, almost insane level of bravery, flinging himself at my weapons again and again. More, several of his friends started to hound me, the Doyen trying to take advantage of their numbers. \n\nTo call the noise that slammed into my eardrums 'loud' was an insult to the noise. It implied that there were other things that might, one day, match it for sheer eardrum smashing oblivion inducing soul crushing sound. It was like sledgehammers wielded by giants hopped up on PCP and with a grudge against Mozart. It was like the end of the world. \n\nIt was Paragon punching someone. \n\nReally really hard. \n\nI looked up and saw the after-effects in the air. Clouds were split. The palace was shattering like blown glass, Ali's father flying away in his warform. And Doctor Oblivion floated in the air, his arms crossed, his force field shuddering with the ripples of her impact. His blue skin glittered with sweat, and his grin was fierce and demonic as he looked at his nemesis. Paragon's cape flapped and her eyes flared with a killing red light. So, I've mentioned that she has eye-lasers. But I meant they were lasers. As in, they were invisible. And even with the amount of dust that this battle was kicking up, none of us could see them. We could see the points where they touched Oblivions' shield, which started to glow brighter and brighter and brighter. Then flames roared to life, crackling and burning in the air. \n\nShe was setting the atmosphere on fire. \n\nFOCUS. \n\nRinny slash the more sensible part of my brain jerked my attention back just in time to see the massive psi-lance, being manifested and weilded by three paladins at once, rushing towards my gut. I twisted to the side, trying to bring my GAU up, but the lance caught my dependable fuck-you gun and impaled it like I preferred to do to my girlfriend. As the chunks of molten gun rained on the debris strewn pavement, I grabbed onto the lance with all four of my arms, lifting it up and shaking it. The paladins who had held to it were scattered and the lance lost cohesion a moment later, buzzing out of existence. \n\nThat gave me enough time to manifest a psi-sword in each hand before the Doyen returned to the fray. \n\nI parried, struck, kicked, spun, twisted. Two Doyen fell dead. And above me, I could hear Paragon's roar of pure and utter fury. I looked up and saw that Doctor Oblivion was fleeing, running after Ali's father. \n\nParagon started to rush after them. \n\n\"Fuck shit fuck!\" I swore, leaping into the air. The telekinetic counter-pressure of my body caused the ground under me to bell downwards, like concrete had become a sailcloth. The resulting fracture pattern kicked up dust in a huge choking cloud, but I left that far behind, shooting after Paragon, Ali's father, and Doctor Oblivion. We moved at a remarkable pace. I wasn't even close to keeping up to Paragon - she gained on me bit by bit. Way to rub it into my nose, Para! \n\nAnd just as last time, Doctor Oblivion twisted around. \n\n\"You really are so predictable, Pargon,\" he said. \n\nOr at least, I presumed he said that. He was that kind of pure dillhead. I reached out with my telekinetic force, grabbed onto Paragon's cape, and yanked as hard as I could. Fortunately, her super-suit wasn't latex. The cape jerked her throat hard and she was caught up short and fell fifty feet, flailing, squawking. I would have been worried about snapping her neck like Gwen Stacy, but she was also Superman, so...you know, she could deal with a bruised throat better than she could deal with- \n\nDoctor Oblivion's beam split the sky. I twisted to the side and the Rinny part of me tossed a telekinetic blast at him. The blast struck his shield and jarred his arm upwards. The shockwave of pure heat sent me rolling and spinning in the air. By the time I righted myself, I could see that there was not a cloud in the sky, and that a slash of pure white light could still be seen in the heavens. It bisected the orbiting moon of Doyen Prime - visible in the light of the day, the same way Earth's moon could be. Exactly one and a half seconds later... \n\nThe moon split. The movement was slow and graceful and terrible for all that. Molten red light fanned outwards from the whip-line that Oblivion had put through it, and soundless chunks of moon-rock the size of continents flew outwards and away from the orbiting satellite. Oblivion and I watched, my mouth open in shock as the moon pulverized itself, ripping and splitting apart. The destruction would take hours, I was sure, but even the initial stages were gut-punch terrifying. Slowly, I turned to face Doctor Oblivion. \n\n\"Huh,\" he said. \n\n\"You fucking asshole!\" I shouted. \"What the fuck were you doing!?\" \n\n\"Trying to kill the most powerful Spark in the galaxy, what does it look like I was doing?\" he asked, scowling at me. \n\n\"Have you even READ Seveneves!?\" I shouted, gesturing to the slowly exploding moon. \"WHAT THE FUCK IS WRONG WITH YOU!? What if you had HIT THE GROUND?\" \n\n\"You'd have died,\" he said, casually. \"And I'd need to recruit Doyen from different planets.\" \n\nI gaped at him. It was really beginning to click just what breadth of pure and utter callousness it took to be a supervillain. I slowly floated to the left, ready to dodge at any moment if he lifted that gauntlet. Behind him, Ali's father started to float back, his massive warform glittering with a shimmering light. \n\n\"W-What have you done, Oblivio-' He started, before Oblivion casually lifted his palm and vaporized him. \n\n\"...I'd be offended, but...we all kinda knew that was going to happen...\" I said, slowly. \"But...I...seriously...what the fuck?\" \n\nOblivion rolled his eyes. \"Quit your grandstanding, Doyen. Your kind have destroyed worlds for less reasons.\" He sneered slightly. \"My goal is altruistic. Imagine, if you can imagine anything in that myopic brain of yours, a galaxy free from hunger. From want. From chaos.\" He licked his lips. \"A galaxy where we have obliterated all that stand between the sapience and savagery. Freedom. Individuality. Not following my orders.\" He shrugged. \"I need a more...pithy way to phrase that last bit.\" \n\n\"Independence?\" I suggested. \n\n\"Yes! Independence,\" Oblivion said, chuckling. \"I built this.\" He tapped his gauntlet. \"The power to destroy worlds. Imagine what I could so with sixteen trillion bodies with which to work.\" His eyes glowed. \"What glories I could build.\" \n\nI crossed all four of my arms over my chest. \"That's it? That's your megalomaniac scheme?\" \n\n\"What?\" he looked confused. \n\n\"You're just pulling a Lex Luthor,\" I said, shaking my head. \"I kinda expected something a bit more original from a freaking blue neanderthal from space.\" \n\nDoctor Oblivion's eyes narrowed slowly. Then, he smirked. \"And I expected you to remain dead, Abadai Hatem...\" He grinned, slightly. \"How did you do it? Last second teleportation? Was the body you used a fake? A clone?\" \n\nI chuckled. \"I think I prefer the idea of you dying without ever learning one way or t'other, you murderous psychopath.\" \n\nHe snorted. \"If you were as smart as me-\" \n\n\"Oh bullshit,\" I said, shaking my head. \"I'm not even a billionth as intelligent as you - I can't build sun-blasting gauntlet doom fists, and I can't make warp portals with technology. But you know what I do know?\" I asked, smirking. \n\nParagon flew up behind Doctor Oblivion. She was close enough to breathe in his hair. \n\nI had gotten to the last breath of the single syllable word \"I\" in the sentence \"I know when to not monologue like a dime store cartoon character\" before Paragon punched Doctor Oblivion in the head. He whipped through the air, spinning head over heels. She blurred around to meet him in the air, then smacked him downwards with a double handed strike - her fists clenched together. The impact rippled outwards in a tree-shattering concussive wave as I started the \"N\" sound in \"Know.\" She had landed, grabbed him by his fringe of hair, dragged him to his feet, and punched him five times in the face before I had gotten to the W. The last blow came as she opened her palm, and sent him flipping upwards into the air. He met her foot - and her foot met his spine as I started the 'weh' in 'when.' \n\nDoctor Oblivion hit the dirt and I blinked, stopping at 'en.' \n\n\"Holy shit, you're scary,\" I said, slowly. \n\nParagon panted, then landed. She grabbed onto Doctor Oblivion's corpse. \n\n\"You're under arrest,\" she snarled. \n\n\"What!?\" I exclaimed. \n\nDoctor Oblivion groaned and spat out a single bloody tooth as Paragon slapped thick cuffs around his wrist, yanking and gauntlet off with her other hand. \n\n\"WHAT!?\" I shouted. \n\nShe looked up at me as I slowly flew down, landing before her. I found that, with a quick twist of my mind, I could actually remain merged with Rinny and still shrink down, so that I was only twice as tall as Paragon, rather than fifty times taller. At this level, I could see that Oblivion looked like a mass of bruises, and he was missing one tooth, but he didn't even look like he had any bones broken. I looked at him, then at Paragon, then at him, then at Paragon again. \n\n\"What!?\" I said for a third time. \n\nParagon smiled, wryly. \"Unlike you,\" she said. \"We're not savages.\" \n\nDoctor Oblivion groaned. \"Could...have fooled me.\" \n\nParagon shook him gently. \"Shut up.\" \n\nI breathed a slow sigh. \"Well, at least I can gloat some more.\" I grinned at Oblivion. \"I guess you should have checked to make sure I was more dead before getting all smug-boots about it.\" \n\nOblivion blinked at me around a rapidly swelling pair of black eyes. \"What?\" he asked. \n\n\"Okay, is what the catchphrase for today?\" I asked. \"At the Doyen ship, after we kicked your asses the first time, you bragged about how killing me meant that your plans were still going perfectly.\" I grinned. \"And, I mean, you would have been right. Without me, you-\" \n\n\"Oh that!\" Oblivion laughed as Paragon started to float upwards. \"I was bullshitting.\" \n\nI bit back a what and instead thought through what he could have meant. It was suddenly stupidly obvious. What had the Doyen parade been about? My palm mashed to my face and I groaned. \"You were saving face. By acting like your plan was going perfectly you kept your patsy...\" I muttered. \n\nOblivion laughed as Paragon started to fly back towards the capital. Somehow, he still managed to sound maniacal. \n\n*** \n\nI leaned on the sill of the window on the observation deck of PsiCom HQ and watched as Doyen Prime burned. Even with Paragon and a bunch of super-charged psychics, the math was brutally simple: You cannot break apart 1.51e+23 kilogram sized chunk of silicates and heavy ore in orbit around a planet without fucking that planet up hardcore. The propagation and collapse had been even faster than if Earth's moon had been blown up in the same way - the Doyen's moon was not only bigger, it orbited closer to their planet. \n\nThe end result? \n\nA rain of stone equal to about two and a half Earths, all of it streaking through the atmosphere at the same time. The friction alone would have been bad enough. As it was, the surface was a glittering star-field of blue-white explosions. Nuclear-scale fireballs and waves of continent shattering concussive force exploded outwards, while the atmosphere itself was consumed in waves of oxygen-fires. The PsiCom HQ was sitting about fifteen million kilometers away, and even that felt too close for something like this. \n\n\"Sucks, doesn't it?\" Ali asked, leaning to the rail next to me. \n\nI nodded. \"It...was your homeworld...\" I said, slowly. \n\n\"It wasn't my homeworld,\" Ali whispered, softly. \"I was born in space, while my father traveled from system to system, to find new people to enslave.\" \n\nI nodded again, then slid my arm around her shoulders, drawing her close. She pressed her face to my chest. Squeezing me. Together, we watched the burning, blazing planet. \n\nDoctor Oblivion was taken back to his homeworld. Every psychic on the ship had searched him and scanned his mind. Omniack had taken a crack as well. In the end, three of his bones had turned out to be fakes, filled with components for construction. Removing and replacing those with biokinetics had, according to Paragon, increased the chances of him staying in jail by a factor of two. I had asked about the chances of him getting the death penalty and Paragon had looked at me as if I was a barely literate barbarian. \n\nThe Doyen rebels fanned outwards, to bring news of the destruction of Doyen Prime and of the foundation of a new Doyen Republic. They carried with them tablet computers bearing the pre-recorded message from various human leaders, offering them a way to make peace with the race that had been a thorn in their sides for centuries. \n\nAcross the Doyen Empire, slave revolts started as rumors about what happened at Doyen Prime spread. Many were brutally crushed and PsiCom was kept busy for weeks and weeks, flying from planet to planet, to stop hideous genocides enacted by Doyen Nobility who believed they could still get away with that kind of bullshit. With our ability to fuse with Doyen warriors, we didn't really face a whole lot of trouble. Despite that, it was a grinding few months, with a great deal of heart ache. We didn't lose anyone...but it's hard to arrive at a world to find that you were too late for tens of thousands of slaves - put to death by old vampires who didn't know that their time had come. \n\nAfter the last hot-spots died down and PsiCom started to shift from a full and total warfare stance, Bravo Squad...started to slide apart, like stars winking out one by one. \n\nVicky left first. \n\n\"I have my people to look too,\" she said, simply. Then, quietly, she had taken my shoulder and squeezed it. \"Thank you Abadai Hatem. Without you, we would never be free.\" She smiled. \"And...thanks for the name. Victory Smith. It is far better than what I first bore.\" \n\n\"What...is your real name?\" I asked, grinning at her - trying to feel happy for her despite knowing I'd miss her fiercely. \n\nVicky chuckled. \"I said that you could not pronounce it with your tongue. But...\" She coughed, shifting her mouth parts. A hideous gargling screech escaped her lips, making my ears ache and my teeth buzz. After five minutes of screaming and screeching at me, she at last finished, inclining her at me. I blinked at her. \n\n\"...see you around, Vicky,\" I said, at last - and she laughed. \n\nTasmin and Beli both left a few days later. \n\n\"India needs psychics at home,\" Beli said, cheerfully. \"We're going to be working on some movies.\" \n\n\"Really?\" I asked. \n\n\"That's the cover story at least,\" Tasmin said, her voice flat. Then, blushing, she glanced aside. Without looking at me, she kissed my cheek, then turned and walked off, leaving me blinking there. Beli gasped, her eyes wide. \n\n\"That means she likes you!\" Beli whispered. Her 'kiss' goodbye was a lot more involved. And involved me fucking her brains out against a bulkhead, my hand clapped over her mouth to make sure no one overheard us. \n\nDiamond went a day layer and I fully expected it. She punched my shoulder, smiled, and said: \"I'm retiring. I wanna see what warping gets me. Maybe I can work for Amazon.\" She rubbed her chin. \"Or maybe I can teleport Jeff Bezos to Mars and see how he likes having to piss in a bottle between work shifts.\" ",
        "I had snorted, hugged her, kissed her cheek. \n\nUnlike Beli, we did not fuck against a wall. \n\nThen it was just me and Ali. By then, PsiCom headquarters had set up shop around the Neanderthal homeworld. Spark scientists - including that fucking sketchy as balls dude that had given us our upgraded guns - were working with human engineers to upgrade and upgun the ship. Ali and I were sitting at the observation deck, just as we had while watching Doyen Prime burn. \n\n\"Wanna retire?\" she asked. \n\n\"Fuck yes,\" I said, immediately. \n\n\"Good!\" Ali said, grinning at me. \"By the way, I was elected High President of the Doyen Republic.\" \n\nI felt a punch to my gut. A sudden crushing weight seemed to descend on my shoulders, pressing down like a smothering cloak. I could see it ahead of us. Years and years of dickering, bickering, doing the heavy legwork of rebuilding a galactic civilization, to turn it from something hideous and grotesque to something new and hopeful. It was a good, honest job to have. But...I was barely out of high school. The idea of surviving all this craziness and having to march immediately into that nest of vipers was so horrifying that...that... \n\nAli was laughing. Her head rolled back as her shoulders shook. \"Y-Your face!\" \n\nI slowly scowled. \"You weren't elected were you?\" \n\n\"I didn't even run!\" she giggled, wiping at her eyes with her thumbs. \n\nI grabbed her and started to give her a vicious and yet highly respectful boyfriend noogie. \n\nThe two of us came to the gateroom, smiling as we did so. Lt. Commander Amelia nodded to us, grinning as she looked us up and down. \"Mustering out too?\" she asked, clicking her tongue. \"You know, we do need to keep some skilled psychics. What if an army of brain devouring space spiders attack?\" \n\nI grinned. \"You have all of our numbers,\" I said, cheerfully. \n\nShe punched my shoulder, then reached out and touched the star-gate. The psychic field warped, puckered, and the two of us stepped through onto Earth. Ali and I stood next to one another in the room that I had been in beneath the Cheyenne Mountain Missile Complex. This was...not the place where this had all begun. But it was close. The place where it had all begun had, really, been a tiny room where I had managed to draw the attention of PsiCom. I had hacked into government files while the internet in my neighborhood had been down. Latent cyberpathic powers. \n\n\"And I never even used by cyberpathic powers!\" I said, shaking my head. \n\n\"Hmm?\" Ali asked. She frowned. \"Where is the door?\" \n\n\"Oh, it's this way,\" I said, pointing. \"But...\" I realized how long it had been since I had seen my parents. And...it wasn't like we were still in the military, right? I just had to muster out. It suddenly seemed like an awful lot of work, considering... \n\nI took Ali's hand, smirking. \n\nI stepped forward and bridged the points between the base and my home. We stood before the door and I grinned at Ali. \"So, here's my house. And my parents are-\" \n\nThe door opened and my mother stepped out, carrying a newspaper to put in the recycle out front. She stopped dead, looking at me. I grinned at her. \"Hey, Mom, I-\" I started. \n\nMom started to scream. \n\nAs I remembered I wasn't exactly Abadai Hatem anymore. \n\nI was a naked weapon. \n\nThe naked weapon. \n\nDerp. \n\nTHE END"
    ],
    "authorname": "DragonCobolt",
    "tags": [
        "orgy",
        "alien girl",
        "big dick",
        "public sex",
        "gangbang",
        "group sex",
        "mecha"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/the-naked-weapon-pt-11"
}