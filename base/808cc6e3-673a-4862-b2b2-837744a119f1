{
    "title": "An Almost Normal Life Ch. 01",
    "pages": [
        "William Carter leant back in his chair and stretched him arms up over his head, letting out a long sigh. It had been a long week, and yet here he was still sat at his desk when he should have been long gone.\n\n\"You still here, Carter?\" he craned his neck to see his boss Maurice approaching along the row of desks. Around ten years Will's senior, he got on well with Maurice, and had even been around his house for drinks the previous summer.\n\n\"You know me, Skip. Do anything for the team.\"\n\nMaurice laughed, coming to a stop at his desk. With his coat buttoned up and bag slung across his shoulder, his boss was clearly on his way out to start his weekend.\n\n\"What would we do without you, oh doyen.\" He grinned, \"Seriously though, it's six o'clock on a Friday, and I know you've been here since before eight.\"\n\n\"I know, I know.\"\n\n\"If you keep leaving that gorgeous girlfriend of yours alone her eyes might wander.\" Maurice gestured to the photo on Will's desk. His girlfriend, Natasha, taken over the Christmas holiday when they had gone out walking in the snow. Even wrapped head to toe in warm clothes, her beauty shone like a beacon, her bright green eyes glowing and her big smile making his heart quicken even then.\n\n\"If I go home on time I'm on my own for hours anyway. She's been working late all this week.\"\n\n\"So that's why you're mister team man.\" Maurice chuckled, \"Still, you've got to watch out for the late nights, especially with a girl like that.\"\n\nWill frowned at that. What was he implying?\n\nSeemingly picking up on Will's change of demeanour, Maurice raised his hands apologetically.\n\n\"Shit, sorry mate, I didn't mean it like that. Natasha is nothing like that, I know,\" his boss explained, \"It's just...well, she's stunning. Like, seriously. She's got to have guys swarming all over her.\"\n\nIt was true enough. Natasha was beautiful, and it wasn't just in his eyes. Everyone agreed. The guys at work - people who had only met her once or twice - gossiped about her, people stopped and gawped in the street when they were out, she was endlessly complaining about guys hitting on her. \n\nWill was decent enough looking himself, but standing side by side with his girlfriend he always felt completely outmatched. She was Hollywood A-List, and he was bit part in Emmerdale.\n\nBut he never doubted her. She was as good a person as he had ever known, and he trusted her with his life. If anything, she was far more nervous about him straying than the reverse.\n\nBut then she had specific insecurities around that.\n\n\"It's cool, I get it, but we're good.\" he said calmly, \"she's on a big project right now. She's been basically live updating me on her calls all afternoon.\"\n\nNatasha worked as a project manager for a major telecoms company, and her most recent project was coming into a crunch period. With so many people involved, she'd been late almost every night for weeks, mired in endless conference calls, meetings and firefighting sessions. She had a habit, when bored on a call, of texting him over and over with pained commentary.\n\n\"That's good to hear.\" Maurice said with a nod, \"You need to keep a hold of that one, Carter.\"\n\n\"Don't I know it!\" He laughed.\n\nThey chatted amiably about plans for the weekend - his boss was taking the kids to the village faire - before Maurice left. Not long after, feeling lonely in the office almost alone, Will packed up his own things to leave.\n\nThe spring sun of the early evening put him in good spirits as he travelled home, and the miles flew by. Before he knew it, he was pulling into the drive of their small detached property, whistling to himself as he went inside.\n\nBoth he and Natasha earned good wages, and though it had seemed a big step to move into together after only four months dating, it had turned out even better that he had hoped. Natasha was a delight to live with; as warm, fun and lovely as she had ever been, but now all day long. They rarely fought, and never heatedly, usually over some trivial matter that could quickly be worked out.\n\nOf the two, he was the stickler for cleanliness, although she never shirked her responsibilities. They shared most everything, from cleaning to cooking to paperwork, and it seemed to mesh perfectly.\n\nEverywhere he looked around the place he could see signs of her; a painting of a snowy country scene she had found at a car boot sale hung up in the hallway, a heavy stuffed elephant doorstop in the lounge, the bright display of artificial sunflowers sitting in the conservatory, a note she had left pinned to the fridge door warning him to leave her Greek yoghurt alone in mock stern tones, complete with a frowny face. \n\nIt was a place filled with her, and Will had never felt more at home.\n\nHe had only spent a few minutes in front of the television, weekend reward beer in hand, when he heard the sound of Natasha's car pulling into the drive. Smiling, he got up to greet her.\n\nStanding in the doorway into the main hall, Will raised a hand in greeting as his girlfriend nudged the door open.\n\nAfter the gruelling fortnight she had been through at work, Natasha looked a little worn down, but still cheerful. She was dressed in jeans and a grey sweater - her office, like his own, dressed down each Friday - and her knee length cream coloured coat. Her face lit up when she saw him, her big green eyes sparkling.\n\n\"Welcome home,\" he said warmly, \"how did everything go in the end?\"\n\nNatasha grinned, flashing him a victory sign as she shrugged her laptop bag off and lowered it to the floor.\n\n\"All good, everything is on track,\" she said, \"I get to leave my computer turned off this weekend.\"\n\n\"Great work,\" he said earnestly. He'd been involved in enough big projects in his own line of work to know how things got around crunch time. \n\nHumming an acknowledgement, Natasha stepped close to him, arms outstretched, and he drew her into a hug.\n\nNatasha was a few inches shorter than him - Will wasn't a tall man, but nor was he particularly short - and seemed to fit perfectly in his arms. She squeezed him gently for a few moments, her large chest mashing pleasantly against his while he breathed in the scent of her hair.\n\n\"What a week,\" she said wearily, \"This is what I needed.\"\n\n\"Glad to be of service,\" he chuckled, patting her on the back, \"Energy transfer initiated.\"\n\nNatasha giggled into the crook of his neck, squeezing tighter.\n\n\"I've ordered the holiday money now,\" she said after a short silence.\n\n\"Oh, really?\" Will perked up. They were due to be flying out to Greece the following weekend, but with Natasha's work they'd been worried it might need to be postponed. \n\n\"Yep, we're going. No more messing around.\" Pulling back a little, Natasha grinned up at him. Her bright green eyes shone with warmth and happiness, \"I spoke with Miranda, and she's basically said I'm out the door on Friday come what may.\"\n\n\"Er, Miranda...?\" Will was sure he'd heard the name before, but it could be a little hard to keep track of everyone Natasha worked with.\n\n\"The big boss, operations director.\" Natasha made a face, \"You know, the Dragon of Filsbury Data Centre.\"\n\n\"Hey, it's your office, not mine,\" Will laughed, \"but it does sound familiar. That's great news.\"\n\nWith a cheerful hum Natasha tugged on his shoulders, and he obliged in leaning down for a kiss. Once more, like every day, he was reminded at just how soft and sweet his girlfriends lips were, and how good it felt to hold her. \n\nThe kiss was short and chaste, and his girlfriend drew back, bouncing on her heels as she did so.\n\n\"So, what's for dinner tonight? I'm starving.\" Her eyes brightened, \"Oh, can we get takeaway?\"\n\n\"I was thinking pasta,\" Will stepped away towards the dining room, \"I want to keep at least some of the gut off for the beach.\"\n\n\"Boo.\" Natasha pouted.\n\n\"Not all of us can look like movie stars,\" he said airily, \"anyway, what's wrong with my cooking?\"\n\n\"Oh ha ha. You look great, drama queen.\" Natasha laughed, \"But I'm not leaving you to cook unsupervised. What are we making, then?\"\n\nOnce Natasha had put away her office bag - firmly slamming the under-stair cupboard door as she did so - they moved to the kitchen together. Cooking was one of the things they enjoyed doing together, and Will had always found it a nice way to bond with her. Natasha was an enthusiastic cook, always keen to try new recipes or emulate something she had seen on Masterchef or similar. Usually her ambition got a little ahead of her experience, but they always had fun time trying to make it work, even if they ended up with the odd souffl\u00e9 looking like a biscuit dropped in a ramekin full of gravy. Will was happy to do the donkey work, honing the tried and trusted meals to make sure they always had something good to eat at the end of the day.\n\nThey worked in perfect synch in the kitchen, chatting as they danced around one another. Natasha prepared the tomato sauce whilst he diced and fried some chicken breast with a little paprika and garlic. Once he was ready to hand the meat off to stir into the sauce, she had set the pan to boil the pasta. Side by side at the hob, she stirred in the chicken to her sauce, whilst he measured out the wholemeal penne to go along with it.\n\nIt was so easy and natural, Will's heart swelled when they both stepped back at the same time, her eyes seeking out his and her trademark happy grin emerging. Smiling back, he swept her up into a hug, swinging her around the kitchen as she beat playfully at his shoulders, giggling.\n\n\"See, this is better than a takeaway.\"\n\n\"Just you wait; I wasn't stingy on the chilli this time.\"\n\nWill kept an eye on the pasta and stirred the sauce whilst Natasha went to freshen up - and no doubt surreptitiously check her emails. By the time she returned he was ready to serve, and she captured him in a hug from behind as he did so, resting her chin on his shoulder to watch.\n\n\"I'm hungry,\" she commented as he moved to set the leftovers aside. With exaggerated care, he served another heaped spoonful onto her plate. Natasha hummed her approval, kissing him on the cheek.\n\n\"Shall we open a bottle of wine?\" he asked as he picked up both plates.\n\n\"Just try and stop me.\" Natasha giggled, releasing him and skipping across the kitchen to their small wire-frame wine rack. Will was more of a beer man himself, but it was nice to share a bottle with his girlfriend over an evening meal. Natasha was no great connoisseur either, and was just as happy with cider, beer or cocktails depending on her mood.\n\n\"Do you remember which one we had when Dan and Evie were over?\" Natasha called as he carried their food through to the dining room.\n\n\"It was Australian, I think,\" he replied, \"with a blue label.\"\n\n\"Ooh, the Cabinet Servingnon.\" Natasha said, deliberately butchering the pronunciation, \"I guess that's one I like?\"\n\n\"Well, we liked it before.\"\n\nHe dealt with the cork and she poured them both a glass, settling them down on the dining room table beside the food. Placing the bottle on the table, Natasha stood for a moment, hands on hips, looking satisfied.\n\n\"Aren't we looking classy tonight?\" she said cheerily.\n\n\"We're classy every night.\" Will said, taking his seat.\n\n\"Last night we had pot noodles and Ribena in front of the telly.\"\n\n\"Ribena is classy. It could have been supermarket own brand squash.\"\n\n\"Classy for certain definitions of classy,\" she grinned.\n\n\"Exactly.\"\n\nThey chatted while they ate, flitting aimlessly between topics, any talk of work behind them. The pasta was good, if a little spicier than Will was typically used to, and the wine was perfectly serviceable. \n\n\"So, I was thinking we could drop by my parent's house on Sunday.\" Will said, once he'd finished, stretching an arm over his head. Natasha made a quizzical sound, muffled by the mouth full of food she still had. \"Mum said they have loads of sun cream left over from their holiday. It would save one job.\"\n\nNatasha rocked from side to side for a moment, still chewing, before she could reply.\n\n\"Your mum buys, like, factor six stuff.\"\n\n\"It's fine if you're just going to sit under a tree reading all day.\" Natasha made a face at him, \"Anyway, dad uses a stronger one, so it should be fine.\"\n\nNatasha shrugged.\n\n\"Sure, makes sense then. Can we stay for dinner too, or just a flying visit to clear ransack the holiday wardrobe?\"\n\n\"We'll stay for dinner, I'm not sure mum would let us leave anyway,\" they had a more or less open invite to drop in on his parents whenever. They loved Natasha almost as much as he did, and his mum was only too happy to cook for everyone, \"I think Elly is home from uni for the weekend, too.\" \n\n\"Oh, that'll be nice - this is sounding more like a get together than a sun cream raid.\" Natasha smiled, \"She must be coming up to exam season, right?\"\n\n\"Yeah, she's stressing out a bit - I think that's why she's come back.\" Will shrugged, \"She worries too much. She's smart, and she studies more than I ever did.\" \n\n\"Maybe she wants to do better than a dirty old two-one.\" Natasha stuck her tongue out.\n\n\"You wound me, woman.\" He put a hand to his heart, \"Anyway, everyone knows that Business Management isn't a real degree.\"\n\n\"Oh really?\" Pushing back her chair, Natasha skipped around the table. Will raise his hands, laughing, as she approached. Evading his guard, she poked him in the side twice, making him laugh even harder. \"You take that back, Billy Boy.\"\n\n\"Sure, sure, I submit.\" Will swatted half-heartedly at her jabbing hands, still laughing, \"Have mercy.\"\n\nStepping back, Natasha rested her hands on her hips, grinning broadly. After the tiring few weeks she had gone through, Will was glad to see her in such good spirits.\n\n\"So...\" he said after a moment, before reaching over the table with his fork, \"You gonna finish this?\"\n\nNatasha let out a yelp, rushing back to her chair as he snagged a piece of her pasta.\n\nAfter they had finished eating Natasha vanished upstairs whilst Will cleared the plates and moved to the living room. Sitting down on the settee, he turned the television on to start browsing through the films saved on their set-top box.\n\nAfter a few minutes Natasha returned, wine bottle in hand, wearing her blue checked pyjamas and her hair tied up in a loose ponytail. Even in such casual nightwear she looked gorgeous, the mostly loose fabric taut around her large bust, a hint of cleavage showing through.\n\nPlopping down next to him, Natasha leant over, resting her head on his shoulder.\n\n\"Have you found anything to watch?\" she asked.\n\n\"I've got a few ideas, but do you have anything in mind? Comedy, action...\"\n\nNatasha tapped one finger against her chin, staring up at the corner of the room where the ceiling met the wall. \n\n\"Oh, how about a thriller? Something with spies.\"\n\nAfter a little more searching they settled on a John le Carre adaption Natasha had recorded the previous week and settled in. Lying lengthways along the sofa, he hugged her closely to him as she snuggled up against him, innocently pressing her pert behind against him. Will wasn't sure how well he was going to be able to follow an intricate espionage plot.\n\nThe film was interesting, if a little heavy going for him after a long week of work. Natasha was enraptured as usual; she loved mystery and intrigue more than anything.\n\nAfter around an hour Will paused the film to visit the toilet and, having finished the bottle of wine, to get a couple of bottles of beer. When he returned he was amused to find his girlfriend had managed to snag a tube of Pringles and steal his seat while he was away.\n\nUnconcerned, he settled down on the sofa, allowing Natasha to be the big spoon, after he'd ensured she could see over him. He handed Natasha her drink then leant back against her, her soft body providing a perfect pillow for to enjoy the film with.\n\nFor a while they continued to watch, Natasha cuddled up tightly against him, still enraptured. It was a familiar situation, and Will was fairly certain he knew what would be coming before the film finished.\n\nWhen he had first started dating Natasha, he had not been able to believe his luck. They had met at some social gathering or other, she a friend of an acquaintance. He had become familiar with the way she lit up a room over time, but on that day he had been completely awestruck by her beauty and bowled over by her warmth and charm. Much to his delight, they had hit it off immediately and, by the end of the night, had swapped phone numbers with the vague promise to meet up again.\n\nWill had been victim of the fake number brush off once or twice before, but thankfully it had not been the case that night, and they had soon arranged to meet up again.\n\nThen had come the real bombshell. After only a couple of weeks and a handful of enjoyable pseudo-dates, Will had mustered up the courage to ask Natasha out for real. At that point, she had let him know her secret.\n\nHis perfect, beautiful, smart and sweet potential girlfriend had a cock.\n\nWill liked to think of himself as an open, modern man, but that revelation had left him dumbstruck. It didn't seem possible; she was easily the prettiest girl he had ever met, and nothing even hinted at anything else.\n\nAlong with everything else, he also realised in that moment that, whatever else he was feeling, the worst thing was to see Natasha looking sad. Her nervous, crestfallen expression at his gormless reaction had spurred him back into life. However confusing the situation was, he never wanted to see her upset.\n\nSo, despite everything, he had cast his doubts aside on the spot, and they had started dating. It was the best decision he had ever made.\n\nThe revelations didn't just stop there, much to his general befuddlement. Having a cock was one thing, but she soon revealed that she was bigger than him; substantially so. It had been somewhat emasculating, but also not. It was just Natasha, his girlfriend. He could share anything with her.\n\nWhen their relationship progressed further she dropped her next big bomb - she liked to be on top. She was gunning for his butt with her big...gun, and it was another decision he had to make. For their first time she wanted to take him - she had been burned too many times dating guys who made promises but wouldn't reciprocate in the end.\n\nShe had turned on the wheedling charm he had come to know well since, and by this point he was too smitten with her to back out, despite the implications.\n\nSomehow he'd survived that first night, and Natasha had been so happy it was hard to even complain, however sore he might have been. It had never even crossed his mind as something he would ever do, but somehow having the most beautiful woman in the world gaze down at him while she fucked his ass made it that little more bearable.\n\nThe intervening months had taught him more of her little tricks, and he was surprised at how quickly they had settled back into a normal rhythm despite the unorthodox facet of their relationship. And now, snuggled up against her on the settee, he could guess what was to come.\n\nHis suspicions were confirmed towards the end of the film, when she started to fidget and squirm behind him. He could feel her shifting her weight, pressing against him and withdrawing slightly, her hands still clasping him tightly. When she finally settled again he could feel it; her thick length pressed firmly up against his ass.\n\nSmiling to himself, Will resolved to ignore it for now and continue watching. He had learnt a long time ago that if he allowed himself to be distracted every time Natasha got a hard on they wouldn't get through to the end of the film.\n\nNatasha continued to fidget as they watched, surreptitiously grinding her crotch against him, as though he wouldn't notice. She was clearly a little hornier than usual; it had been hard to find time together in the week, with the long nights working.",
        "Fortunately, the film was pretty good, and the closing sequences held his attention despite temptations from elsewhere. From Natasha's little gasps and chuckles, she was still following along too, which wasn't always the case when she started messing around.\n\nEventually it drew to a close - an action filled set piece ending - and Will craned his neck to look over his shoulder at Nat.\n\n\"That one was pretty good.\"\n\n\"Yeah, you're right.\" She smiled, \"I had no idea who the double agent was.\"\n\n\"Really?\" He raised an eyebrow, \"Well, you did seem a bit distracted towards the end there.\"\n\nNatasha blushed prettily, knowing that she had been busted.\n\n\"I can't help that.\" She mumbled, \"If you press your cute butt against me of course I'm going to get hard.\"\n\nWill grinned and rubbed her thigh affectionately, then sat up. After a moment, Natasha scooted along the sofa before sitting up next to him. Glancing over, her could see the noticeable tent in her pyjama bottoms.\n\n\"So, what do you want to do now?\" He asked, nudging shoulders with her, \"Another film? Or some TV?\"\n\nNatasha was quiet for a moment, leaning into him. It was still fairly early, but he had a good idea what she was contemplating.\n\n\"I'm pretty tired, you know?\" She said at last.\n\n\"Early night, then? I'm down for that.\"\n\nNatasha nodded, but didn't make any move to stand up. Then, she took his hand, and drew in down into her crotch.\n\nWill wasn't sure if he would ever get used to just how big Natasha's cock actually was. Years of jerking off his by all accounts above average dick had given him an intimate feel for it, and yet hers was in another league. Over nine inches, he was sure, and substantially thicker, Natasha's dick felt intimidating in his hand, heavy and warm to the touch.\n\n\"Not that tired, then,\" he said with a smirk. With his left hand he gently pumped up and down her length through the fabric of her bottoms.\n\n\"I'm tired and I'm horny,\" she said quietly, \"It's been really busy...\"\n\nNatasha's gruelling work schedule had been disrupting their sex life for over a week and, honestly, Will was probably itching for release just as much as she was. \n\nGiving her a firm squeeze, which induced a breathy gasp, Will drew his girlfriend into a long kiss. It was relatively chaste, just the gentle movement of her lips against his, but his heart filled with warmth once again. \n\nWhen the kiss finally broke and he drew back a few inches to take her in, he could see the glow of passion in her eyes. Her fire was well and truly lit, and he would surely be feeling the consequences.\n\n\"Come on.\" Natasha said, standing and tugging him to his feet. Once hand immediately went to his ass, squeezing firmly. Will didn't really feel qualified to say what made a guys ass desirable, but his was certainly a favourite of Natasha.\n\nAllowing himself to be led, William trailed his beautiful girlfriend to the bedroom. She had an excited bounce in her step, her own pert, perfect ass serving as a siren call for him to follow. \n\nOnce they were inside he caught her arm, sweeping her into another kiss, twirling as they crossed the room. Her meaty erection pressed firmly against him now, insistently making it's presence known between them. Natasha clung tightly to him, one arm tight against his back whilst the other tousled his hair.\n\nThey connected with the side of the bed as they span, tipping over arm in arm and thudding into the mattress side by side, finally breaking their kiss. Natasha's eyes sparkled as she met his, and she burst into infectious laughter. He chuckled along, running a hand up and down her arm as he did so.\n\n\"Dork.\" Will said fondly.\n\n\"Your dork,\" she countered.\n\n\"My precious, irreplaceable queen of the dorks.\" \n\nWith a happy squeal Natasha rolled on top of him, turning him onto his back as she did so. For a moment she just stared down at him, eyes as warm as his heart felt.\n\n\"Damn, I'm so hard right now,\" she mumbled, glancing down as though embarrassed.\n\n\"I'm glad you're not bored of me yet,\" he joked.\n\n\"Hmmm, you say that,\" slowly and deliberately, Natasha pressed her hips against his, grinding firmly. Will let out a soft gasp as her heavy cock squeezed tantalisingly against his own raging erection, \"but maybe you need to show me some fun.\"\n\n\"If it's fun my girl wants,\" Will slipped his hand between their bodies, and under the elasticated waistband of her pyjamas, \"then that can be arranged.\"\n\nNatasha moaned softly as he took a grip of her cock, feeling the warm, bare skin for the first time in days. He couldn't quite close his grasp, such was her thickness, but it still felt strangely natural in his hand.\n\nWith a couple of slow pumps of his fist she was like putty. Letting out a long, satisfied breath, she clung to him, burying her face against in the crook of his neck. \n\nAfter a spending a few moments apparently satisfied with his attentions, Natasha's hands began to roam to, fumbling first with the buttons of his shirt, and then trying to reach his belt, but the awkward positioning made it difficult. Will smiled indulgently as she squirmed, happy to keep stroking her healthy manhood.\n\n\"Oh, damnit,\" she grumbled, \"why do you still have clothes on? Why do I still have clothes on?\"\n\nGiving her one final squeeze, Will withdrew his hand before pushing himself up on his elbows.\n\n\"Why do we fix that?\"\n\nIn an excitable rush, Natasha pulled him to his feet. Her pyjama bottoms, usually fairly loose and baggy, had taken an almost comical air, the tent she was pitching very much in the big-top territory.\n\n\"You starting up a circus down there?\" he said, amused.\n\nNatasha glanced down a blushed prettily.\n\n\"You're the one who's been snake charming.\"\n\nNatasha quickly and enthusiastically helped him out of his clothes, fingers working at his shirt buttons while he kicked off his jeans. He let out an approving him as she paused to squeeze his cock through his boxes, before she tugged them down too.\n\nTurning his attention to Natasha, Will lifted her pyjama top up over her head and tossed it aside, eyes greedily taking in her body. \n\nShe wasn't wearing a bra, but her large breasts sat high and proud on her chest nonetheless, rising a falling with her excited breathing. Her pink, slightly upturned nipples were a little on the small side, but he felt his fingers twitch at the sight.\n\nNoticing him staring, Natasha took a step back and tilted her hips, fixing him with a seductive smile. Hooking her thumbs into the waistline of her pyjama bottoms, she slowly drew them downwards, swaying her hips as she did so.\n\nLicking his suddenly dry lips, Will couldn't help but have his attention drawn away from her magnificent chest. \n\nThe elasticated band caught around her cock for a few seconds, dragging the hard, heavy length downward as she went. Finally, it sprang free, the thick pale pole launching up from between her legs like catapult. The sweet flesh slapped meatily against her belly, still swaying along with the continued toss of Natasha's hips.\n\n\"Goddamn,\" he said softly, \"you are the sexiest woman in fucking world.\"\n\nNatasha let her bottoms drop to the floor and stepped out of them, now completely naked. Two deities in one; the beauty of female perfection with a masculine power he could only dream of.\n\n\"I've waited all week for this.\"\n\nWith that, Natasha threw herself into his arms, and he caught her barrelled into him. They toppled backwards onto the bed together, Natasha giggling as they did so. She landed flush on top of him, and Will immediately drew her into a kiss and she clutched tightly against him. Her silken skin felt warm against him, and her hard length pressed insistently into his hip.\n\nFor a time they simply enjoyed holding one another. Their tongues and lips danced lazily but insistently, whilst Will allowed his hands to roam free along his girlfriends back, savouring the soft contours of her body and lingering on the delightful swell of her hips and ass. Natasha rocked gently against him as they kissed, one hand tousled in his hair whilst the other wandered.\n\nWill was used to letting her lead in the bedroom, and it was no surprise when she drew back slightly and shifted across towards the side of the bed, her eyes seeking out his eagerly. He grinned up at her as she reached over to the bedside cabinet, snagging the small bottle that was a near permanent fixture.\n\nA few moments later, her hand snaked down between his legs and he felt the cool slickness of the oil. With a practice technique, Natasha's slender fingers quickly found his hole, and she started probing.\n\nKnowing she had her bearings, Will pulled her back into another kiss, running his fingertips up her side and eliciting a gasp as he cupped one of her full, firm breasts. Natasha had always been sensitive there, and Will was only too happy to take advantage. As almost a counter stroke as he rolled her stiff nipple between two fingers, her own finger popped through his defences, and they both let out small squeaks in unison.\n\nCatching her eye, Will grinned, and Natasha giggled.\n\nSeemingly satisfied with her work, his girlfriend withdrew her wandering hand, and a few moments later he heard the tell-tale squelching sound of her attending to her own preparation. On his back as he was with her leaning over him he couldn't see, but he knew from experience that Natasha lubing herself up was a mighty impressive - and no small part scary - sight.\n\n\"Are you ready for me?\" she breathed softly, her lips inches from his ear.\n\n\"Yes,\" he replied huskily, \"don't keep me waiting, love.\"\n\nEyes flashing brightly, Natasha tossed the bottle of oil aside and scooted back slightly, lifting herself over him to kneel between his legs. As she backed away her cock came into sight again, huge, hard and swaying like a pendulum as she moved, glistening in the low light of the bedroom. He had long since stopped worrying about her obvious superiority in that most masculine of qualities, but he still couldn't help but compare as she knelt over him. Jutting out like an obelisk, her cock looked even bigger on her much smaller body, and despite his own erection he was clearly well beaten.\n\n\"Someone looks excited.\"\n\nNatasha, he knew, never gave much thought to their relative sizes, besides being somewhat proud of her own gifts. The worst he ever got was the occasional playful teasing, but he knew it was just that. Given Natasha's preferences in the bedroom, it really wasn't a big deal between the two of them.\n\nTaking her cock in one hand, her fingers even less able to reach around the full thickness than his, Natasha tapped her length roughly against his. It wasn't quite a display of dominance, and Will enjoyed the shot of pleasure he felt from her fat python bumping and stroking up against his cock. After a few moments of rubbing, she shuffled forward again on her knees, forcing his legs wider to accommodate her.\n\nCompletely exposed, Will could only gaze up at his beautiful girlfriend as her attention turned southward once more. \n\nHumming cheerfully, Natasha directed her rigid cock, and suddenly Will felt it nudging against him, parting his cheeks and nudging up against his core. Apparently satisfied, Natasha looked up again, flashing another of her brilliant smiles.\n\n\"Relax for me, my love.\"\n\nWill took a long, slow breath, which turned into a gasp as Natasha edged her hips forward. Prepared as they both were, Natasha's cock slipped inside without too much effort, but it still took his breath away.\n\nThere was always pain at first, however many times they did it. Will wasn't sure he would ever be fully comfortable with her sheer size, but he knew it would pass. For a long minute he stared up at her, smiling encouragingly, as his ass adjusted to her thick cock nestled just inside him.\n\nDespite all the times they had fucked before, Natasha always treated him like a precious, fragile thing when she first entered him. He knew she had a real fear of hurting him with her size, and was always so careful to ease him in every time. Her eyes searched his for affirmation, a heady mix of anxiety, excitement and lust.\n\n\"It's good, Nat,\" he breathed as the pain began to fade.\n\nNatasha nodded.\n\n\"Okay.\" She said softly, \"I...I love you, Will.\"\n\nBefore he could reply she started leaning into him, feeding more of her cock into his ass. He let out a quiet groan as she burrowed deeper, finding that sweet switch inside him that always made his body sing. She watched him intently the whole way, anxious for his obvious approval.\n\n\"Oh god, Nat.\" He gasped, \"Feels so big...so good.\"\n\nNatasha gave a small smile.\n\n\"It's good for me too,\" she said softly.\n\nWith each inch he felt more and more full and, in a way, more complete, as though this was the way it was always meant to be. His toes curled and he clutched at the bed sheets, letting out a long, satisfied hiss. When her hips finally bumped against his, her heavy balls tapping against him, he looked up at her and smiled wickedly.\n\n\"Fuck me, Nat, you beautiful woman.\"\n\nWith Natasha being on top, he knew she would be setting the pace of their passion. Sometimes that meant she would pound him hard, slamming each gasping breath out of him with the force of her thrusts. Other times, she would make love to him slowly, with long, languid strokes and frequent pauses just to enjoy the feeling of being coupled together.\n\nThis time it appeared to be the latter. With a soft sigh, she leaned forward, pressing a short kiss to his lips, before slowly pulling back one, three, six inches of tortuous pleasure. She held there for a moment, the remaining third of her dick still straining against him, and then eased back in again. He let out a slow breath as she did so, feeling the wind truly knocked out of him as she bottomed out, her cock reaching into the very deepest parts of his ass.\n\nShe quickly built up a familiar rhythm of slow, easy strokes, and soon all sense of pain had vanished and he was left with only the glorious satisfaction of her dick playing it's symphony inside him. The fullness, the ecstasy, the indescribable and unquantifiable joy of looking up at the beautiful woman he loved kneeling over him, taking him and making love to him. She held his hips gently as she worked, warm eyes clouded with her own heightening pleasure. Lying on his back, he had the perfect view of her stunning form, her warm beauty and tousled hair, her large breasts jiggling with each thrust.\n\n\"It's so good, Nat.\" He breathed, \"Aaaaah, right there.\"\n\n\"I love you honey,\" she replied warmly, \"It feels so good inside you.\"\n\n\"I love you too, Natasha.\" With one shaky hand he reached out to cup her cheek, and she leant into it with a small smile, \"I love you, and I love it when you fuck me.\"\n\nNatasha bit her lip, grinning, her cheeks flushing prettily. \n\n\"Then I'll make you feel good.\" She murmured, and with another swift roll of her hips, she stole any further words out of his mouth.\n\nFor a time there was only the soft sound of their love making to fill the room. His arching breaths and shameless girlish moans; her soft pants and little gasps of pleasure; the rhythmic slap of body on body each time she thrust into him; the creak of the wooden bedframe, rocking with their motion. Will's whole world attuned to the pace of her fucking; his breaths and gasps, the curling of his fingers and toes, the throbbing twitch of his own cock as the pleasure fountained within him with every stroke.\n\nHe could feel the familiar pressure building as she fucked him. Her massive cock pressed and abused his prostate with each stroke, stoking him towards the crescendo he had grown to crave. The flares of pleasure merged and extended with each passing moment, with each delicious thrust, drowning out any residual pain her size delivered. Staring up into her shining, beautiful eyes he could see her own pleasure heightening to match his.\n\n\"Fu-uck.\" He gasped desperately. He was close, he knew. \n\nReaching up, he cupped her breast, squeezing gently, savouring the firm yet yielding touch and the satin smoothness of her skin. Latching on to her nipple, he rolled it between finger and thumb as he knew she enjoyed. Natasha's eyes fluttered as he did so, and she gave him a warm, encouraging smile, like he were a child who had just done a good deed. He wanted them to come together, and he knew it wouldn't be long.\n\n\"I'm...ah...\" Natasha moaned, \"I'm going to...inside you.\"\n\n\"Do it.\" He replied breathlessly, \"Fill me up, make me yours.\"\n\nThe ecstasy was writ large in her expression now, and finally her steady strokes started to break down. Hands grasping tightly at his hips, she drilled him harder, with short sharp bursts, her body slamming against him each time. Her impossibly hard cock seemed to almost pulse inside him, driving his roiling sensations towards and beyond the event horizon. Overwhelmed, his allowed his hand to drop away from her chest, instead bringing his legs around to wrap tightly around her waist, doing what he could to desperately hold her inside him. In the moment, he needed her more than anything else in the world.\n\n\"Oh god, I want it Nat. Give it to me, please.\" He gasped, \"Oh god, it's so...aaah.\"\n\n\"I'm gonna...I'm gonna...oh Will, I love you!\"\n\nAs though her words were a trigger, his orgasm crashed in, the unstoppable tsunami Natasha had stoked finally rolling over him. Untouched, his hard cock began to spasm, shooting his pent up tension across his own bare torso. Will let out a silent cry, unable to articulate even a gasp as the heat and pleasure coursed through him. In that singular moment it wasn't just his cock, or his ass or the precious buttons inside him that Natasha played like a maestro; his whole body sang, his very nerves alight with the warmth she brought.\n\nLetting out a small, girlish gasp of her own, Natasha thrust into him one final time, her powerful cock once again reaching his very deepest places, heavy balls nestling between his cheeks. Even as he rode his own wave he felt it, the spasm of her thick length and the tell-tale warmth as her cum started to flood in. At his most full, with all nine inches of her glorious tool buried inside him, she sought that final space to fill with her hot, creamy load. Even as she came, her eyes found his, and he did all he could to project his own love and joy to her in response.\n\n\"Ooooh, fuck Will,\" she moaned, her fingers flexing their grip as she crested her own high, \"it's so good.\"\n\nFeeling his own orgasm starting to subside, Will reached up and grabbed Natasha, pulling her down onto him. She let out a small squeal of surprise, but melted into his arms as he kissed her firmly even as she still twitched and spurted inside him.\n\nIn a few short months, this had become his world and his heaven. His beautiful girlfriend in his arms, her full breasts mashed up against his chest, a long, lingering kiss in the throws of passion. Her dick hilted balls deep inside him, filling him with her love as he meandered into a post-orgasmic haze. The last was something he'd never known he wanted, but Will knew for sure that he wouldn't swap it for anything.\n\nHe felt her relax into him as they kissed, as her own orgasm finally started to cool. Knowing Natasha, he was full to the brim and beyond, but for now she kept it all plugged up inside him. The liquid warmth accompanying her thickness was a strange but not unpleasant sensation.\n\nWhen she broke the kiss, Natasha nuzzled into his shoulder, panting softly, out of breath from her exertions. He would give her that; Natasha put a lot more effort into their lovemaking that he did.\n\nHumming idly, Will ran a hand up and down the smooth, sweat sheened skin of her back, drawing mindless patterns as he did so.\n\n\"You good?\" he asked.\n\nNatasha nodded in reply, still nuzzled against him. She was starting to soften inside him, as the pressure slowly began to ease.",
        "Content, Will just held her against him for a time, staring a idly at the ceiling and listening to their breathing, quietly in synch.\n\nEventually, Natasha drew back, and Will had the strange sensation of being emptied. Even partially soft she was still thick, and the removal from his ass left him wide and exposed. Almost immediately he felt her warm cum start to leak from his now cleared passage. It was not an unfamiliar feeling, after months together, but still an odd one.\n\nWith Natasha no longer between his legs Will finally was able to readjust, feeling his hips thighs ache a little as he and Natasha made a little dance around each other. Soon, he was on his side, eye to eye with his love, arms resting comfortably around her waist.\n\n\"You really did a number on me there,\" he said fondly, stroking a lock of dark her from her still somewhat flushed face.\n\n\"Did...did I hurt you?\" she asked quietly.\n\n\"Of course not,\" he kissed her brow, \"you just reminded me of another reason why you're the only girl for me.\"\n\nDespite everything, all the time they had spent together, he knew Natasha sometimes got insecure about sex. Not the act itself; he had no doubts she knew exactly what she was doing each time she screwed a sickeningly intense orgasm out of him.\n\nShe worried about him, about his acceptance of her. As though she wasn't way out of his league under ordinary circumstances, and her uniqueness only made it more unbalanced in his eyes. \n\n\"There's lots of girls who wouldn't...wouldn't...\"\n\n\"Natasha,\" he said calmly, hugging her tightly, \"I love it when you make love to me, I don't want it any other way.\"\n\n\"But...\"\n\n\"I love you, Natasha. Everything about you, okay?\" he gave her another squeeze, \"I'm a big boy. If we ever did anything I didn't like, you'd know about it. So don't worry.\"\n\nNatasha's eyes searched his for a moment, as though seeking the truth they both already knew. Then she gave him a weak smile, her moments insecurity overcome.\n\n\"Right. You're a big boy. Just,\" her smile turned into a smirk, \"not as big as me.\"\n\n\"Oh I see how it is.\" He laughed, \"Play the demure angel and then lord it over me? You're lucky you're such a good lover, Nat.\"\n\nNatasha blushed, but looked happy.\n\nFeeling on firmer ground, Will let his hand wander, dropping down to her cock once again. She was now mostly soft, but the warm, cum and lube slick length was still large in his hand. Enjoying the touch, he gave her a light stroke, allowing her to rest in his hand as he did so more so than grip her.\n\n\"A-ah,\" she murmured, her eyes scrunching up briefly. Smirking to himself, Will continued to run his fingers gently along her soft length. Biting her lip, Natasha looked up, glowering at him, \"if you keep that up you're gonna get me in the mood again.\"\n\n\"Maybe that's what I want,\" he said mildly, \"it's been a long week.\"\n\nTo emphasise his words, Will took a more firm grip of her cock, giving it a slow pump. Natasha gasped and for a moment he thought she was still too sensitive. Then, tellingly, he felt her hardening at his touch.\n\n\"Aren't you...sore?\" she said breathily.\n\n\"I'm fine,\" he said, using his free hand to brush a strand of hair from her face. Gazed at him owlishly, and he leaned in to kiss her forehead, \"I'm kind of warmed up.\"\n\n\"Oh,\" she mumbled in acknowledgement, then let out another soft moan.\n\nHer cock was now growing quickly in his grip, returning to its steely prime. Will loved the feeling of running his hands along the smooth, warm meat, the skin sliding back and forth over the iron like thickness beneath.\n\n\"Aaaah...\" she breathed, bringing her own hand down to stall him, \"roll onto your front.\"\n\nGiving her another quick kiss on the forehead, Will complied, resting his chin on his arms as he did so.\n\nHe heard the creak of the mattress as she moved up onto her knees and started shuffling around behind him. \n\n\"You've got the sexiest ass, Will.\" She said quietly, \"I just wanna...\"\n\n\"Be my guest.\" He looked over his shoulder to where she was now kneeling.\n\nBiting her lip, Natasha leant forward, bringing her hands down either side of him to support her weight. As she did so, her cock bumped up against him, nestling lengthways between his ass cheeks.\n\nSeemingly happy with her positioning, Natasha lowered herself on top of him, letting him take her full weight. Will relaxed into the bed as she did so, letting the feeling of her body against his envelop him. She started peppering the base of his neck with kisses as she slowly ground against him, her breasts mashing pleasantly against his back whilst her dick parted his cheeks like an oversized sausage in a bun.\n\n\"You want it?\" she murmured into his ear, sliding her hips forward.\n\n\"Don't tease me, Nat,\" he said quietly in reply.\n\nShe bounced against him, her cock sliding deliciously in his crack. In response, he pushed his hips back a little off the bed, pressing against her.\n\nHe felt her draw back slightly, and then the tell-tale pressure as she lined up her head with his still loose and moist hole. Without ceremony, she collapsed back against him, burying her length in one smooth stoke.\n\n\"Aaaah,\" he let out a satisfied gasp as she filled him once more, her body pressing flush against him again. \n\n\"Mmmmm,\" Natasha hummed against his neck, her warmth breath tickling slightly, \"you've gotten so good at taking me.\"\n\nFor a time they just lay there, as joined and close as could be. Will was happy just to relax and enjoy the tingling pleasure Natasha drew out as she gently rocked against him, her cock filling him completely, with just the slightest of movements enough to set him off. He would never trade the intimacy of being fucked in the missionary position for anything; the joy of staring up at his girlfriend as she took him, seeing the love and happiness in her eyes was beyond quantifying. But there was different delight when she held him from behind. The feeling of her whole body assailing him, from her lips kissing at the back of his neck and ears, to her tits flush against him, to her heavy balls resting up against his, was special thing all of it's own. That his legs weren't splayed out to accommodate her made a nice change too.\n\n\"I love being inside you,\" Natasha murmured softly, \"I could stay like this forever.\"\n\n\"I might get sore...\" \n\n\"Mhmmm,\" she kissed his neck again, \"just a little longer, then. Then I'll fuck you for real.\"\n\nAs they lay in comfortable silence, Will found himself drifting, carried away in the warm contentment that surrounded him. It wouldn't be the first time he had fallen asleep with Natasha inside him; they had once slept for hours in the same position, until they had both woken when he'd tried to roll over in his sleep. It had been a funny experience, but he'd felt weird and sore all day afterwards, and wasn't overly keen to repeat it.\n\nHe was brought back to his senses when Natasha's slow, rhythmic humping stepped up a notch. Will let out a surprised gasp as she raised her hips up and crashed back into him.\n\n\"Wakey wakey,\" she said cheerfully.\n\n\"This is a wake-up call I could get used to.\"\n\nGiggling, Natasha picked up the pace, setting into a steady rhythm. With her body still pressed tightly against him, she worked her hips back and forth as far as she could manage, driving into him with a satisfying slap each time. Reaching out with one hand, she interleaved her fingers with his, smiling sweetly when he cast her a curious glance.\n\nThe low-level pleasure he had been experiencing started to swell rapidly in time with her renewed aggression. Each time her cock drove into him, that now familiar fire burnt a little brighter as she stoked the burning embers. The cum she already left inside him churned and squelched with her strokes, adding another layer of lewdness to their coupling.\n\n\"How does it feel?\" she whispered huskily in his ear, \"Your ass is so good around my cock.\"\n\n\"Amazing,\" he blurted weakly, \"Keep going.\"\n\nHer gasped in time with her excited breaths, holding her hand tightly as she pounded him. Each time she buried herself inside him his own cock pressed up against bed, and already he could feel the inevitable building.\n\n\"Will,\" she murmured, \"squeeze me, please. I'm close.\"\n\nWanting nothing more than to please, Will squeezed her hand encouragingly, and squeezed her cock to the best of his ability in his abused and diminished state. His sore ass protested, but he wanted her to feel as good as she was making it for him.\n\nCraning his neck, he captured her lips in one final kiss. Considering their position, it was surprisingly chaste, as their lips moved slowly against one another. In his worn out state, with Natasha dominating all his senses, it felt like perfection.\n\n\"I'm...I'm...\" Natasha's voice dissolved into a soft moan, and he felt her explode within him once more. As though his body had been waiting for a sign, that last little twitching burst to nudge at his deepest places, Will came right along with her.\n\nLeaving herself fully hilted, she clutched him tightly, her twitching cock twanging at his nerves as she emptied another impressive load inside him. Will just wanted to savour the moment, of her body pressed against the length of his, her love filling his ass, her lips dancing with his, and his own orgasm ringing through him like electricity. His whole body tingled with a throbbing warmth that emanated from his girlfriend's amazing dick, as though it was a rod of pure pleasure driven into his very core.\n\nOnce his neck began to ache he allowed his head to flop back down onto his forearm. Overstimulated and exhausted, he closed his eyes and just focussed on his breathing.\n\nFor a time the only sound was of their breathing, slowly descending from tired gasping to something more regular. His nerves tingled with the afterglow, and his ass started to throb with a combination of refractory over stimulation and soreness from Natasha's relentless battering.\n\nEventually she withdrew, her semi-hard cock sucking wetly at his insides and dragging another gasp from him. Her cum bubbled up along with it, and he knew he would really need to clean himself up. With a soft grunt, she rolled off of him and onto her back on the bed beside him. Will cracked open an eye to watch her, as beautiful as ever with her post-sex glow. By comparison, he probably looked completely haggard, like a man tossed through a hedgerow in a storm.\n\n\"God I needed that.\" Natasha said to the ceiling, before his way and offer a bright smile.\n\n\"Me too,\" he returned her smile, \"It's been a hard week.\"\n\n\"Yeah, it has.\" \n\nRolling onto his side, Will reached out and took Natasha's hand in his, slowly drawing circles on the back of her hand with his thumb.\n\n\"Hey,\" he said quietly, \"you know you're the best, right?\"\n\nNatasha blushed, but smiled.\n\n\"No,\" she replied just as quietly, \"that's you, Will. I really am the luckiest girl in the world.\"\n\nAs they lay together, hand in hand, Will considered that maybe there was some truth in that. Maybe Natasha wasn't just an impossibly beautiful fantasy, so far above his level as to be unbelievable. They worked together, inside and outside the bedroom and, really, what more did either of them need? He may never match her in looks, but he would give his all to make sure she never got anything less than the happiness she deserved.\n\nAs her eyelids began to flutter sleepily, he reached out and brushed another lock of hair from her face. \n\n\"I love you, Natasha.\" He whispered, but she had already dropped off to sleep.\n\nAs he gazed at quiet form, his mind went to the small bag bundled up in the bottom of his gym bag, with the small box within. Once the idea had come to him, he had never given it a second thought. It was so right. He had spent far longer trawling the various jewellery stores than any agonising.\n\nSoon. Just another week and they would be jetting off. Just another week, and he would be ready.\n\nNatasha truly was the woman he wanted to spend the rest of his life with, and he couldn't wait to let her know that too."
    ],
    "authorname": "PenguinEmperor",
    "tags": [
        "anal",
        "reversal",
        "futa on male",
        "huge cock",
        "romance"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/an-almost-normal-life-ch-01"
}