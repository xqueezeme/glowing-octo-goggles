{
    "title": "Western Skies Ch. 04",
    "pages": [
        "Western Skies - Chapter 4: Homecoming (Part Two)\n\nSorry for the wait folks! This installment is a very slow burn. It's also the longest so far, and was far more challenging for me to write than originally anticipated. I could keep tweaking it for another week, but there's a point when you have to just go for it...\n\nNotice: This story contains male/male sexual activity between consenting individuals who are over age 18. If this is not something you are looking for, leave now! Always practice safe sex (even if not depicted in this work of fiction).\n\n-D.\n\n\u00a92020 Zorse_D\n\n***\n\nDisjointed, malformed visions raced through my head. Unbidden dreams came to me as my subconscious mind sifted though its memory vault, trying to make sense of the last few weeks. First came fragments of my new life in Montana; images paraded haphazardly beneath my eyelids, clear as daylight but just out of reach. I was driving the splendid Beartooth Highway with my dad, the day before I moved into the dorm...then it was my first day at school...and then Luke looking at me over his shoulder, blushing...\n\nThe scene shifted again and my blood thickened. I was horseback, on a trail cut into a towering mountain. Below me, an enormous valley lay upon the land, boxed in by distant peaks for as far the eye could see. The valley floor was spotted green and gold, bisected by the shimmering blue of a river that serpentined off to infinity. \n\nA crisp, refreshing breeze rustled over my neck, cooling the exposed skin between my shirt collar and hat. Next to me was Luke, looking serene and beautiful astride his own horse. He grinned, melting my insides with his charming smile and kind, honest eyes. Riding over to me, he leaned across, his lips moving ever closer to mine...\n\nMy eyes snapped open. An angry buzz was droning from the alarm clock next to my bed. With a groan, I sat up, whacked the clock, and stretched. Across the room, Evan stirred weakly before turning over to face the wall. As a morning person, waking up at the first sound of the alarm didn't seem like a monumental challenge. Evan, respectfully, would disagree. I chucked my pillow at him, earning an angry glare accompanied by a few choice expletives.\n\n\"Come on, dude,\" I said reproachfully. \"You always tell me not to let you oversleep.\"\n\nEvan rumbled about hating the world, but slid out of bed to dress. Before long, we were walking out of the dorm and into Friday. Game day. Overhead, turbulent iron-colored clouds coiled round one another as they tried to hold back the struggling sun. It was an ominous sign. My insides seemed to be of the same mind as the sky, coiling and churning low in my gut: tense anticipation for the coming game had finally hit me.\n\nWe walked groggily to the cafeteria, procured coffee and waffles, then huffed loudly as we sat down next to Danny and Mason. \"Weather looks awfully Canadian this morning, doesn't it?\" joked Danny. \"Hope we don't get rained out tonight.\"\n\nI grunted in agreement and scanned the cafeteria, watching students trickle in two or three at a time. There was no sign of Luke yet, but Logan was marching straight towards our table with his tray. He looked uncharacteristically alert this morning, and he actually ruffled my hair before sitting down.\n\n\"Ready to run like a champ later, Kaden? It's game day!\" It usually took all of first period for Logan to fully wake up in the morning, but today he was practically bouncing off the walls.\n\n\"How much coffee have you already had, dude!\" I laughed, returning my attention to the waffles in front of me.\n\n\"None at all!\" he quipped. \"Morning Luke!\"\n\nMy eyes snapped back up, watching Luke quietly pick his way between tables as he walked towards us. It took a moment for me to notice Tristan strolling over alongside him. Tristan must've noticed me staring at Luke, because a small, knowing smile slowly tugged at his mouth. My eyes narrowed and I stared back, daring him to say something. He sat down across from me, next to Luke, only dropping his smug grin when he began to chat animatedly with Danny.\n\nLuke himself looked as good as ever this morning, gray eyes soft but alert, his golden-brown hair casually swept over his forehead and tucked behind his ears. Like the rest of us football players, Luke was wearing one of his practice jerseys and a pair of ass-hugging khakis that, in my biased opinion, broadcast his lean, toned physique for all the world to see.\n\nLike moths to flame, more identically-dressed football players meandered over to our table, standing around to trade comments and jokes with Luke and Logan, the stars of the team. It was a long-standing tradition that we all dressed up on game days, boosting camaraderie ahead of day's on-field competition. We bantered, excitedly talking through our plays and the relative merits of the team we were set to go up against that night. \n\nThe shrill buzz of the warning ball interrupted the thrum of our conversation. Tristan stretched and fixed me with another smirk as we all stood up to leave. \n\n\"Well gents, I'll see you guys tonight.\" He leaned towards me and lowered his voice so only I could hear. \"Eyes on the ball and not the quarterback, dude.\"\n\nMy cheeks instantly burned. I glanced left and right, but no one else heard, not even Luke. Tristan snickered loudly and walked off, leaving me flustered.\n\nI headed off towards class, wondering for just how much longer Luke and I's secret could stay safe.\n\n***\n\nThe day passed in a blur. I walked outside after the final bell and was instantly blinded: bright, dazzling sunlight forced me to look down and blink until my pupils adjusted to the sudden change. It was a pleasant surprise after the morning's foreboding clouds and light raindrops. The air was warm but not hot, and slightly moist; breathing deeply, I felt a pang of nostalgia for humid Texas days. Back home it was a discomfort, but up here, the hint of moisture was a refreshing break from the constant dryness. \n\nWhen the sun angled down towards the mountains in the distant west, Danny and I left the dorm and headed towards the athletic center. A gaggle of giggling junior girls passed us along the way, flashing us admiring smiles as they went. Their wishes of good luck followed us along the path, putting a bounce into our step.\n\nA quick team dinner faded into an hour long coaching session in the locker room. The coaches waxed on and on about the other team's talent and their playbook from last year. For what felt like forever, we reviewed plays, field conditions, and some last minute film. When it was finally time to dress and warm up, my heart began to beat faster and my muscles began to tense. Excited chatter buzzed throughout the locker room. It was time.\n\nWalking out onto the field, my mind cleared. The sun was just above the horizon, though the lights had already come on, drowning out the lengthening shadows with their austere white brilliance. Breathing in deeply, I could smell grass and pine needles. The bleachers were still mostly empty, and the air was quiet and cool. I stood for a moment, surveying the field, as my excited teammates bounded out around me. Noah the linebacker interrupted the moment, slapping my back with a massive hand as he jogged by, chortling, \"Run fast, dude, and watch out for their secondary!\"\n\nLaughing, I followed behind him as we ran out into the middle of the field to begin stretching.\n\n***\n\nThe other team wasn't bad, but we were pretty good. Luke put on an impressive show \u2014 a performance worthy of the team star. As the third quarter faded into the fourth, he'd racked up two touchdown receptions and more yards than I could count. We were up 20-17 with a minute to go, our offense in possession on our own 40 yard line. The sideline was tittering, all of us hoping that we could hold out.\n\nWith thirty-five seconds on the clock, I watched in abject horror while one of our team's other running backs got hammered by a lineman. The ball popped out in a slow arc, bounced a few haphazard feet along the ground...and ran right into the waiting hands of an opposing linebacker. He scooped up the ball and chugged down the sideline unmolested, passing into our end zone accompanied by the vigorous cheers of the opposing fan section. \n\nSilence emanated from our sideline and from our fans. The cheers from the visiting spectators continued on, echoing garishly into the night. Dread began to well up within me. When they made the extra point, a hard pit formed in my stomach. There would be no option to tie with a field goal...we would need a touchdown to win.\n\nThere were twenty-two seconds on the clock when they kicked the ball. Luke was on the kick return, bringing it out to our thirty yard line before getting shoved out of bounds. \n\nSeventeen seconds on the clock. I was in, our other starting halfback having been relegated to the bench, where he sat stony-faced ever since the fumble. Logan completed a beautiful pass to Tristan for his first play, who managed to snag eleven yards before he deftly stepped out of bounds, stopping the clock with fourteen seconds and a first down for us.\n\nHuddling up, Logan spoke. \"Okay, running play. I've thrown it to Luke a lot so that's probably what they're thinking we'll do right now. If this doesn't work, it's gonna be back to that. Kaden, their line has been dragging ass on the left side and I think you can push through. If you don't see clear lane, run it out so we have time for a couple throws.\" He called for a left slant and the huddle broke.\n\nMy heart was pounding, adrenaline surging through me as we lined up. A second later I got the handoff, ducked hard left, and quickly outstripped the defensive end and linebacker close behind him. Mentally screaming, I shot forward, angling towards the sideline like the devil himself was hot on my heels. I felt hands on my waist that soon fell away. Ten yards flew by, and I dodged around a cornerback. Twenty yards. Chugging ahead like a thoroughbred at the Kentucky Derby, I saw the only remaining obstacle between me and victory: a safety, angling himself right into my path. He ducked low for the tackle, and my instincts took over. Leaping as high as my legs would allow, my toes brushed his back...and miraculously cleared him. When I landed, the ground hit me with a jarring thud, causing me to stumble. For a brief moment, I felt my panic surging, afraid that I'd fall. My balance stabilized, and my feet kept pounding. Through gritted teeth I pushed myself as hard as humanly possible. My watering eyes glanced away from the rapidly approaching pylon, cautiously scanning for anyone quicker than me who might be right on my tail...\n\nThere wasn't anyone close enough to stop me.\n\nLifting my head, I charged the remaining dozen yards into the end zone, dropping the ball and raising my hands. I had barely slowed down to catch my breath, the deafening cheers of the crowd filling my ears, when a crushing pressure rammed into my side and the world spun upside-down.\n\nTwisting, I hit the ground \u2014 hard. An intense pain radiated through my left wrist as my arm was pinned beneath my helmet. Air was driven from my lungs and my mouth opened in a noiseless yelp, unable to utter a sound. Before I could comprehend what was going on, the weight of the bulky body that had rammed me disappeared, and my breathing began to return in short, choppy gasps. \n\nI sat up quickly, dazed. Logan and Tristan were running over, followed closely by a couple of our coaches. I focused on my breathing, slowly regaining control over my lungs. In and out. In and out. As awareness returned, my attention snapped back to the sharp pain in my wrist. I tried to move it but was stopped by a hot bolt of pain that made my eyes water. It was stiff and already swelling up like a walnut.\n\nMy ears could make out yells and obscenities being hurled back-and-forth. There seemed to be a commotion about twenty yards away, where most of my teammates stood, facing down a growing group of the opposing team. Coaches and referees were rushing to break players apart before the scuffle grew more serious. Two penalty flags had already been thrown.\n\n\"Kaden! You alright?\" Coach T was staring at me, ignoring the noise. When I nodded, he smiled. \"That was a hell of a run, Kaden, you should be proud of yourself. There's a few seconds left on the clock so we'll kick off and then put this game in the bag.\" Coach helped me to my feet and we started back towards the bench. By now, the team doctor \u2014 a local volunteer\u2014 had made it down from the stands. After a brief examination, he recommended a visit to urgent care for a wrist x-ray and to make sure I didn't have a concussion.\n\nMy dad was standing behind the bench, his facial expression conveying a conflicted storm of emotions: an amused smile was the most noticeable, but his eyebrows were drawn together in concern. Head spinning, I started over towards him. Before I could make it all the way, a mob of my teammates descended around me to see if I was alright \u2014 Luke in front.\n\nHis lips were pressed tight in concern, his face pale. A small cut on his lower lip was beginning to ooze blood, but he didn't seem to care. \"You alright, Kaden? That bastard knew you were way in but didn't stop, he lowered his helmet and everything...fucking piece of shit...\" Luke was practically spitting fire, seething like I'd never seen him before. I was beginning to suspect who'd started the fight with the other team.\n\nAmidst an onslaught of teammates offering congratulations and checking to see if I was alright, my dad pushed through, hooking an arm around my back. He smiled, \"Come on. Let's go get that x-rayed.\"\n\nLuke gave me another squeeze on the shoulder before I turned to leave, the rest of the team dispersing to refocus on the handful of seconds left in the game.\n\nWith a sigh, I turned and made my way out to the parking lot with my dad, trying to ignore the fire throbbing within my wrist. This was definitely not how I'd pictured the night going. As I opened the car door with my good hand, a cheer went up from our side of the bleachers. A grin spread across my face...there was a silver lining, after all. We were 1-0.\n\n***\n\nAn hour later, I stepped out of the shower at my dad's house and attempted to dry off without using my left hand. We'd spent barely forty minutes at urgent care, which was thankfully empty when we arrived. The verdict was a hairline fracture near my wrist...which meant no football for the next six weeks. That put me in a bad mood the entire way home, which only got worse when I realized how annoying it was to baby my left arm.\n\nSlipping on the splint they'd given me, I wandered out of the bathroom and to my room. It was basically a guest room at this point...I'd only spent a few days in my dad's house before moving into the dorm, and the only personal touch in the room was my pile of abandoned football pads in the corner.\n\nMy dad knocked on the doorjamb, drawing my attention.\n\n\"How's it feeling? Any better?\" he asked.\n\n\"Yeah, think so,\" I mumbled. They'd given me a bottle of prescription-strength Advil, which I gratefully put to use almost immediately. \"It's kind of a dull ache now. Could've been worse.\"\n\nHe smiled. \"Good. I was thinking, how about we go out and get some coffee in the morning?\"\n\n\"Sure, dad, that'd be nice.\" I yawned.\n\n\"Alright then. Goodnight, 'Kade.\" He shut my door and a moment later, the hall light flicked off. I thought about watching some Netflix but felt too sluggish to even move. My eyes slowly drifted shut, sleep threatening to take me into its warm embrace...\n\nA loud ding came from my phone. Annoyed, my eyes flicked open wide. I reached over to silence the cursed device, but froze when I saw it was a text from Luke: \"I'm at your house. Open your window.\"\n\nSpringing out of bed, I flipped on my bedside lamp and threw open the curtain. A moment later, a familiar, smirking face appeared outside. It took a minute for me to fiddle with the window latch and pop the screen off. Deft as a cat, Luke clambered into the bedroom.\n\n\"I thought I might get shot if I just guessed which room was yours and knocked on the window,\" he whispered breathlessly, reaching behind me to grab my ass. \"Besides, you've already gone through enough today. I could've put on a Scream mask or something and had some real fun.\"\n\n\"Okay, psycho,\" I laughed. \"We have a front door. And a back door, too. I could've come let you in. How'd you know the address, anyway?\"\n\nLuke shrugged, still grinning. \"Evan. You'd given him the address. I asked if he had it; I said I was gonna swing by in the morning to check on you.\" He hesitated. \"I was actually gonna do that, but I decided you needed company tonight.\"\n\n\"Impulsive, are you?\" I teased. I walked over to lock the bedroom door before turning off my lamp and settling back on the bed. Without invitation, Luke stripped off his clothes and hopped in next to me.\n\n\"Only when it comes to you,\" he whispered into my neck, his voice soft as silk. My dick began to harden at his touch. Where things were going tonight, I didn't know...but a small voice in the back of my mind warned me that my father was home. Another small voice reminded me that his room was at the other end of the house...\n\n\"Careful,\" I warned, when he bumped into my arm, causing a shooting pain to snake through the bone. \"Gentle on the wrist.\"\n\n\"As long as I don't have to be gentle anywhere else,\" Luke growled, pressing his lips to mine with sudden vigor. My mouth parted in welcome, picking up our familiar dance where we'd last left off. His tongue flicked off mine and ran along the edge of my teeth. I could feel one of his hands slowly pushing my bad wrist towards the edge of the bed, away from danger, while the other rose to my head. Luke's fingers fanned into my black hair, his thumb brushing a lock off my forehead when he backed off to stare down on me. Or, at least that's what it felt like. The room was pitch black, so my other senses shifted into overdrive to compensate for lack of sight. I could feel Luke's nose gently brush against mine, and each time he exhaled it was warm on my cheek. My ears caught his deep breathing, matching it in time with the feel against my skin. He smelled clean, freshly showered and masculine. The scent of his woody, spicy cologne tickled my nose gently, blending smoothly into him to create the smell that was uniquely, fully, and nothing but Luke. Breathing him in deeply, I went on to indulge my final sense: pressing my mouth back to his, I savored the taste as our tongues spiraled together into oblivion. \n\nTime stood still while his hands stroked my arms and sides, our hearts echoing once more off of each other's chests. Down below, I began to grind my throbbing cock into him, feeling the comfortable squeeze of Luke's larger shaft twisting against mine through our briefs. As pressure began to build in my cock, I fumbled with my right hand to reach around the back of his ass. Luke's fingers clenched around the crook of my back, his breathing coming sharper as my lithe fingers swam closer to his pucker. I slipped beneath the elastic waistband and pressed forward. A tremor racked Luke's lean frame when my middle finger crossed the event horizon, plunging home into his hole.\n\nA millisecond later, Luke stiffened like a board and quickly propped himself up off me. \"TOMORROW!\" he hissed, whisper-yelling through clenched teeth.\n\nYanking my hand away in shock, I growled back at him, \"The fuck is with you and blue balls?! You started it, anyway.\" Annoyed, I wedged my shoulder against him, squirming to turn over and look away.\n\nBarely a moment passed before his arm curled reassuringly over me and his sweaty palm pressed firmly against my sternum. Luke's lips tickled my ear and I heard his voice, gentle with reproach. \"Sorry, babe. I know...tomorrow...\"\n\n\"You want whatever you have planned for tomorrow to be special, I know...\" I sighed. On the inside, I wondered why we couldn't have fun two nights in a row...but Luke seemed to be dedicated to whatever vision he had for after the homecoming dance.",
        "\"It will be special,\" he said, a bit more forcefully than necessary. Then, his voice softened, \"I promise it'll be worth it, okay? It's tough holding back for me too.\"\n\n\"Fine,\" I whined, clearly indicating that it was not fine, though it seemed to me we were done with the topic.\n\n\"Hey,\" Luke began, his voice still soft. \"You're too special to just fuck around with, okay? Remember that. I really did come over here tonight to just check on you.\"\n\n\"Please,\" I retorted, snorting. \"I texted you on the way back from the doctor that everything was fine. You came here cause you wanted to spend the night wrapped up with me.\"\n\n\"So what if I did,\" he teased. \"Guilty as charged.\"\n\nBreaking down, I smiled and reached up to place my left hand over his, pressing his palm into my chest. My thoughts wandered for a few minutes as we laid there, content in our shared company. \n\nSuddenly, I remembered the fight that had taken place after I had gotten run over in the end zone. \"Luke, what happened out on the field after the late hit on me?\"\n\nHe fidgeted. \"I may have grabbed that asshole by his facemask and pulled him off you.\"\n\nI raised an eyebrow, sensing his attempt to deflect. \"That's it?\"\n\nLuke shifted again, clearly thinking through what he was going to say. \"It was going to be, but I heard him mutter something about a 'slippery little bitch' as he was walking away and I assumed he was talking about your running abilities rather than giving a female dog a bath. So I may have punched him...then yeah, you saw the rest I'm guessing.\"\n\nI probably shouldn't have, but I let out an incredulous cackle. Between the two of us, I secretly thought I was more stereotypically masculine than Luke. He was definitely the romantic one, not to mention insecure. Only a surplus of passion could have driven him to attack someone like that. My cheeks burned, knowing well it was his feelings for me that guided his fist.\n\n\"This is where I'm supposed to tell you that you shouldn't have done that,\" I admitted, \"but honestly, it's a touching gesture. How much trouble are you in?\"\n\n\"Not too much, just a one-game suspension,\" Luke laughed, burying his head against my upper back. \"I think the refs missed the first punch, they only saw the two of us at the center of it all. For the record, stepping up for you is totally worth sitting out a game.\"\n\nWe broke down into an echoing fits of giggles, doing our best to muffle our mirth. With a grin on my lips, I soon fell into a peaceful sleep.\n\n***\n\nA loud knock rudely interrupted my dreamless slumber, tearing me back to a world of uncomfortably bright light shining in round the edges of the window curtain. Panic surged within me as another knock sounded on my bedroom door, accompanied by my father's voice.\n\n\"Kaden? You up? Let's leave for coffee in thirty minutes, okay?\"\n\nI kept my voice level as possible when I spoke up. \"Sure, Dad!\"\n\nLowering my voice, I hissed at Luke, \"We didn't think this through, did we?\"\n\nHe stretched and fixed me with a doleful look, peering through his tangled hair. As if on cue, his glistening puppy-dog eyes melted my heart just enough to wipe my panic away. \"I thought it through, some. I parked down the street.\" His lips parted in a wicked grin and his eyes narrowed, the burning ice of his gray orbs glinting mischievously. Luke's eyes always seemed to give away his intentions a split second before he sprang into action. At the look, butterflies erupted in my stomach.\n\n\"What are you grinning about \u2014\" I began cautiously, but stopped when Luke pounced. He dropped his beautiful head under the covers and lightly kissed my flaccid cock where it curved lazily against my thigh. Gasping, my body stiffened almost as fast as my dick, the blood rushing south in a torrent as my senses responded instinctually to Luke's beguiling touch.\n\nFrozen, I breathed heavily, gripping my bedsheets hard enough that my knuckles grew white. Luke peeled down my underwear and laid a long, languid lick from under my balls up the underside of my shaft. He paused at the slit, his hot tongue barely tickling my tip as he lapped up the drop of precum he'd coaxed out.\n\nThrough the brain fog I felt Luke's head draw back and my comforter pull down. With ninja-like quietness, Luke extricated himself from my sheets and sprang to the floor. He bent over to plant a solitary, firm kiss on my lips before beginning to dress.\n\n\"We'll pick up there tonight,\" he murmured, his back to me.\n\nStill reeling, I laid there without making a sound. Luke walked to the window, flashing me the same seductive grin he'd given earlier. \"Soccer game's at one, right?\" he asked.\n\n\"Yeah,\" I replied with difficulty. \"Coming to watch?\"\n\n\"Think so,\" Luke shrugged. \"See you there.\" He grinned, popped out the screen, and ducked outside. Smiling to myself, I closed the window and began to dress.\n\n***\n\nStaring out the window of the coffee shop in downtown Bozeman, my eyes tracked car after car trundling down the street. It was a strange town, the more I thought about it. At the traffic light a dozen yards beyond the glass, I saw a Subaru waiting in front of a massive diesel truck pulling a horse trailer. A town of contradictions. \n\nInside the coffee shop, I quietly watched a group of yuppie-looking college kids laughing over foamy drinks I probably couldn't name. The table next to them was occupied by two grizzled ranchers, the dried mud stains splattered over them like some yeehaw Jackson Pollock painting.\n\nI chuckled inwardly, taking a sip of my lukewarm coffee just as my father returned from the bathroom. \n\n\"Hey,\" I remembered, looking at my dad, \"did I tell you I'm going up to Luke's family's ranch after the dance tonight? Be back tomorrow night.\"\n\n\"I caught it mentioned during dinner on Thursday, but thanks for the reminder.\" He shifted in his seat and gave me a pointed look, his eyebrows coming together. \"On the topic of Luke. I swore I saw him walking down our street this morning. Did you notice?\"\n\nMy dad's dark brown eyes were glinting fiercely. I swallowed and felt a wave of heat roil through my body. Taking another sip of coffee, I prayed for my hammering heart to subside, hoping he couldn't see the sheen of sweat I was sure had just appeared on my forehead.\n\n\"Yeah, he actually swung by really quick on his way out to check his horses. He wanted to see how I was doing.\" The lie came awkwardly to my lips; in my alarm, part of me figured that some element of the truth was better than whole denial.\n\n\"Funny, I didn't hear the door.\" My dad's stare still hadn't faltered.\n\n\"I...he texted me before he came by...he just walked over to my window to talk for a second,\" I stammered, before finishing meekly, \"He was barely here a minute.\" Even as the words escaped my mouth, I knew it was a pathetic lie. A normal human would've just rang the doorbell. \n\nFuck, Kaden, do better, I told myself.\n\nWhatever was going through my father's mind, he clearly wasn't interested in sharing it. He finally broke off his piercing gaze, instead gazing out the window as I had done a minute before.\n\nAn awkward moment passed before my dad spoke again. \"That's nice of him. You guys are really becoming good friends. Luke's family is absolutely wonderful...and the opportunity the congressman has given me to manage his legal affairs is a big deal. Whatever adventures you and Luke go on, make sure they reflect well on the both of you, and by extension your families.\" \n\n\"Yes, dad.\" Contradicting emotions of guilt and resentment welled up inside me. I was in too deep step back from Luke now. And besides, it was our life. Not my dad's. Shoving back my chair, I pushed the feelings out of mind. Today was enough to deal with on its own.\n\n***\n\nAs the minutes ticked by, anticipation for the coming night grew inside me. Between my anxiety at the prospect of a night in Nora's company, followed by whatever Luke had schemed up, my insides were practically squirming during the afternoon soccer match. \n\nWedged in the bleachers between Luke and Danny, I watched Evan, Mason, Cole, and the other soccer players eke out a close win. Afterwards, Evan and I made our way back to the dorm for an hour or two of studying before the homecoming festivities began. After twenty minutes of a fitful attempt to do calculus study problems, I gave it up as impossible. My thoughts kept flashing hot at the thought of Luke, followed by cold whenever my fear of Nora cut in like an icy sword.\n\n\"I'm gonna go for a run,\" I said to Evan.\n\n\"See you in a bit,\" he mumbled, looking up from his phone.\n\nI stripped off my jeans, button-up, and sweater, throwing on some sweats and a sweatshirt to replace them. Outside, I took a perverse comfort in each plodding step I took around the running track, my broken wrist throbbing through the Advil with the jarring from each footfall. The few other students I ran into greeted me with smiles and shouted congratulations on winning the game. Between the good vibes, aching wrist, and my burning lungs, I found some measure of distraction from my trepidation over the coming night.\n\nBy the time I got back, it was approaching five-thirty. We were all meeting in front of the senior dorm at six-fifteen, so I figured it was time to start getting ready. While waiting for Evan to finish up in the bathroom, I threw together a duffle bag for my overnight trip to Luke's. Evan seemed to be in no hurry, so at quarter to six I pounded on the door and yelled for him to hurry his ass up. A minute later he slipped out and I raced into the shower. I spent extra time shaving and getting the mop of black hair on the top of my head to fall forward just right, held in place with some pomade. Nora had sent my a picture of the dress she was going to wear, so I picked out the closest matching button-up I had \u2014 a deep red shirt in a small geometric print. Tucking it into the same khaki pants I wore before the football game, I stood in front of the mirror to evaluate my efforts. \n\n\"You look fine, dork,\" Evan called over, smirking as he made for the door to the hallway. \"See you in front.\" He was right. It was what it was. Grabbing my phone and wallet, I followed after him.\n\nWalking outside into the falling night, I saw dozens of students milling about. Most guys were dressed similar to me, with nice pants and button-ups. Some wore ties, and a handful donned sport coats. From the top of the steps, my eyes found our group down below. I should've been staring at Nora, who looked like a model in a designer red dress; her blond hair fell in graceful waves round her shoulders, glimmering like starlight in the reflected gleam of the outside lights. If I was watching her more closely, I may have noticed the small, knowing smile that was spreading over her pretty face. Instead, I saw Luke.\n\nIn a crowd of khaki and navy slacks he stood out like a beacon to me, wearing a pair of dark jeans limned with white contrast stitching. The jeans cascaded down over a pair of well-oiled boots I hadn't seen him in before, boots that matched the brown leather of an ornate belt fastened with a buckle bearing the brand of his family's ranch. Over his torso rested a pressed pearl-snap shirt in a deep green paisley print. Luke had parted his golden-brown hair tonight, the left side tucked behind the ear while the rest of his mop swirled up and over the top.\n\nTo add to the picture, Luke's gray eyes roved over the crowd and found mine. His mouth broke into a wide smile, displaying a row of straight, white teeth. \"Here's Kaden,\" he said to the group as I slowly walked down the steps and over to my friends.\n\nLogan roared and slapped my back. His date Kellie flinched at her partner's exuberance before putting on a resigned smile, as if questioning her decision to go to the dance with the loud and massive Logan. \n\nTristan was more reserved, instead shaking my hand. \"Hey, Kaden. This is Kelsey.\" While introducing me to his date, Tristan's eyes flicked between me and Luke while a sly smile twitched at the corners of his lips. Ignoring the gesture, I greeted Danny, Evan, and Evan's soccer friend Mason, all who were without dates. I could only joke with them for a moment before manners dictated I move on to Nora.\n\n\"Hey, Luke, Allie,\" I nodded towards the couple as I walked over to my date. My nose caught the subtle scent of Luke's cologne as I passed, and it took all of my self control to not stop and kiss him. I tried to not look at Allie and think about how pretty she was, with her dark green dress, deep brown eyes and long black hair. My hand reach up in an involuntary motion, rubbing the back of my head where it rose just above my neck, feeling my close-cropped hair that I knew was a similar shade of jet black. Snorting to myself, I thought Luke was nothing if not consistent in his choice of partners.\n\nFinally standing next to Nora, I steeled myself and looked her straight in the eyes. She was maybe an inch shorter than me in her low heels. I thanked her inside my head, glad that she hadn't tried to tower over me. Wordlessly, she reached out her arm. I entwined my elbow in hers and we began walking with the group towards the parking lot. \"You look beautiful, Nora,\" I said, breaking the silence and hoping my tingling nerves wouldn't show.\n\n\"You clean up well yourself.\" Her dark gray eyes glinted when she glanced over at me. \"We'll have a fun night.\" Nora's tone was calm and confident. At least one of us seemed to be relaxed.\n\nNora and I joined Allie and Luke in climbing into his pickup. I wedged my duffel bag under the back seat and took my place next to Nora on the short drive over to the restaurant, an upscale place downtown.\n\nDinner found our group arrayed along a large cloth-covered table. Despite my nerves, and somehow ending up ensconced between Luke on my left and Nora on my right, I couldn't help but enjoy myself as dinner progressed. It took almost half an hour to exhaust the topic of the previous night's football game, with Logan providing a second-by-second recap of my winning run and the ensuing melee. Luke earned himself fits of laughter and loud applause in congratulations for making a stand against the bitter bastard who'd blindsided me. \n\nIt seemed impossibly difficult to sit next to Luke and not touch him, to avoid shooting him furtive glances and grins. Instead I kept my head turned slightly towards Nora, attempting to converse with her as much as possible. Fortunately for me, she was surprisingly easy to visit with. I discovered she enjoyed riding like Luke, though she seemed less obsessed with horses than him. She ran cross country with our friend Will, and played soccer in the spring. Her dream was to be a doctor and eventually work in medical research.\n\nAs Nora talked, I realized just how much I still didn't know about Luke. Our relationship was real enough, built on shared interests and personalities that fit together like lock-and-key...but we had hardly had many deep conversations, other than to ruminate on our shared fear of discovery. At some point we'd have to talk about the future, even if it was a million times easier to just get lost in the moment, whenever we were together.\n\nEventually dinner was done and we sat there languorously, waiting for our bills in the glorious haze of our food-comas. I was so zoned out that I almost jumped when I felt something slide into my lap. It was a hand, and it deftly crept forward between the crook of my legs. I twitched. Fingers curled around my hardening shaft, caressing my cock under a light, warm touch.\n\nWithout turning my head, my eyes bugged out and slid all the way to the left. Luke was absentmindedly chatting with Mason, seemingly unaware that the fingertips of his right hand were gliding up and down my cock. Our chairs were pushed snug up to the table and the tablecloth hung draped into our laps, preventing any prying eyes from seeing what he was up to. I stealthily reached under to grab his wrist, intending to move it away from my rod before he pushed me too far along to remain inconspicuous. Unfortunately, my hand had a mind of its own and decided to gently stroke Luke's wrist instead, egging him on...\n\n\"How was the trout, Kaden?\" Luke asked, finally turning his head towards me. A small smirk was parked beneath his deceptively level and innocent gaze. His hand kept up its gentle motions under the table.\n\n\"Very good,\" I muttered. \"Logan was right about this place. Good choice for tonight.\"\n\nLuke's smile widened. The dinner bill arrived a moment later and the pressure on my cock disappeared, Luke removing his hand to take out his wallet. As the guys act the table worked to divvy up the bill, I did my best to slide my erection up under my belt, lest anyone discover my untimely arousal.\n\nWhile we walked out of the restaurant, only I knew that Luke's sonorous laugh had nothing to do with the mediocre joke Tristan had just told.\n\n***\n\nNone of us expected the homecoming dance to reach anywhere near the level of effort expended on prom, but I was still impressed by the lengths to which our private school went on the event.\n\nMy eyed widened as I walked into the gym arm-in-arm with Nora. Concert speakers and lighting ringed the vast room, radiating out from the raised stage set at the far end. A local DJ was nestled behind a set of turntables, bobbing his head in time with the popular rap song he was pumping out. Large swags in the school colors hung over the walls and collapsed bleachers, looming large over the assortment of small cloth-covered tables set around the perimeter. Near the back, a collection of school staff and local parent volunteers guarded a few tables covered in snacks, drinks, and a mouth-watering array of baked desserts.\n\nOur dates laughed as the group of athletes began lumbering as one, making a beeline towards the food.\n\n\"You just ate dinner,\" Kellie muttered to Logan, an exasperated look on her face. He smiled back apologetically and gestured towards the dessert table. \"Don't judge, it's all from that bakery everyone loves.\" The big guy grabbed a monster chocolate chip cookie and began to eat it with a tender, loving expression, drawing more giggles from the group and a head shake from Kellie.\n\nI perused the drink table, snorting at the selection of Fiji waters and LaCroix cans, grabbing a Dr. Pepper like any true Texan would. I took a sip and scanned the room, feeling a twinge of annoyance when I saw that Allie had pulled Luke away from the group to the dance floor. She tucked herself into him, moving his hands to her stomach as they began to sway to the music.\n\n\"Come on.\" Nora was looking at my face, tracking my gaze to the other couple. She took me by the hand and guided me to the other side of the gym. She wrapped me around her and we began to dance, gyrating as one underneath the flashing lights. We stayed that way for several songs, and sweat began to bead up on my forehead. Amidst the throng of pressing bodies, the gym seemed to be growing stiflingly warm. I caught a glimpse of Luke and Allie every now and then, but whenever I imagined my feet pushing us in their direction, Nora seemed to press my hips the other way. Eventually the DJ began to play some slower songs. It was a relief to spin Nora around and dance face-to-face, resting one hand on her shoulder and the other on her narrow waist.\n\nShe gave my injured wrist a brief glance as she took my hand. \"Let me know if it hurts and you want to switch arms.\"\n\n\"Sounds good.\"\n\n\" 'Don't Stop Believin' \" pounded steadily from the speakers as we spun around in a small circle. Over Nora's shoulder my eyes again lingered on Luke's back, watching him slowly revolve around Allie. When he turned towards me, his eyed immediately locked into mine, sending a jolt up from the base of my balls, through my stomach, and into my skull. \n\nFrom across the room his gray eyes seemed to glisten with hidden pain, burning into me with fierce longing. I hoped he could see every emotion I saw in him reflected straight back, our wordless exchange relaying what neither of us were ready to show in public. Cold fire burned in my belly, a torment born of equal parts desire, frustration, and fear.",
        "Then the moment was gone. Luke spun around and Allie looked straight at me. She glanced up at Luke's face and then back to me, looking confused.\n\nHeart hammering, I quickly averted my gaze. Nora's hands gently spun me around, forcing me to turn my back on the other couple. Her touch was light, but it may well have been the grasp of steel handcuffs that kept me away from Luke.\n\nWhen I focused my attention back on her, I felt the cold fire in my stomach transform into a hard knot of fear. Nora was staring at my face. She looked over her shoulder at Luke then back to me, smiling. As we continued to twist and turn to the beat of the music, my panic subsided, replaced by growing suspicion.\n\nAt some point the music stopped, the DJ announcing that the was going to take a short break. Threading our way through the crowd, Nora and I joined the rest of our wayward group to crowd around the drink table. Evan was the only one missing. With a snort, I noticed him at a table in the corner of the gym, his lips firmly glued to some junior girl I vaguely recognized. Already one of the teachers chaperoning the dance had spotted them and was stalking towards their little public display with hands on her hips.\n\nI grabbed a couple bottles of water and passed one to Nora. She accepted it gratefully and took a swig as I turned, meaning to talk to Luke. Allie had pulled him away to one of the side tables and had wrapped her arms behind him. She was giving him a soppy look, oblivious to the fact her date had gone rigid as a board. Luke shook his head slowly and started to say something to her when she stood up on her toes and planted a kiss on his lips. A ripple of anger tore through me.\n\nI touched Nora on the shoulder. \"I need to use the bathroom,\" I said flatly, \"I'll be back in a few.\" My feet flew, guiding me towards the outside door at a fast walk, dodging around the dozens of milling people. A few classmates noticed me and raised hands in greeting, calling out congratulations for winning the football game. Ignoring them, my feet kept moving towards the door before my brain could catch up.\n\nOutside, I followed the sidewalk around the outer edge of the building, wandering to where a small stone wall blocked me from going any further. A single overhead light shined down from a lamppost overhead. The gym sat atop a small hill, and before me I could see the twinkling lights of Bozeman stretching out into the shadowy outlines of the Bridger mountains to the northeast. My breath caught in the cold air; September at home in Texas was mild, but here, the temperature must've been close to freezing. Sweaty as I was, the outdoor air was a refreshing break from the sweltering dance. For a minute I stood alone, mesmerized by the sparking lights that extended out into the distance. Cold anger still clung to me, hardening my heart as I leaned forward on the low wall.\n\nThere was nobody to be mad at. Not Allie. I couldn't fault her for trying to make a move on Luke. I wasn't mad at him, either \u2014 it was obvious he was just as shocked as I was.\n\nNo, I was angry at the way things were for Luke and I. Nothing more, and nothing less. Slowly, the anger faded, seeping out of me and into the chill air. Resignation set in as my thoughts drifted, still colored by my churning emotions and attraction to Luke, but now absent the delirium induced by cold fury. Living some sort of secret life was getting to be exhausting, but it wasn't something I could give up. Exasperated, I sighed, wondering how long I could stay outside before people would start looking for me.\n\n\"Not enjoying the dance?\"\n\nI spun on the spot and froze. A feeling like ice water cascaded down my spine. Nora was walking straight towards me. Fear welled back up in my stomach, surprise putting me on guard while I tried to deduce her intentions. As my sudden rush of panic subsided into wariness, I straightened up to my full\u2014and admittedly limited\u2014height. \n\n\"Oh. Hey. Just needed some fresh air.\" It was a mindless, trite comment, but honest nonetheless.\n\n\"Uh huh,\" she replied, raising her eyebrows.\n\nShe was looking at me with an understanding, almost benevolent smile.\n\nMy voice was stuck in my throat, uncertain of what to say. Instead, I waited, watching. Nora stepped up next to me and rested her hands on the stone wall, staring out towards the shimmering city lights that had captivated me a minute before.\n\n\"You know, at first I was concerned. For him. That he would be throwing away whatever happiness he had, coming out for someone who didn't give a fuck about him.\" Nora looked at me expectantly, a glimmer of amusement appearing in her dark gray eyes. \"Luke really cares about you. I've never seen him like this before.\"\n\n\"You...you do know,\" I gasped, adrenaline flooding my veins. It seemed my suspicions were well-founded.\n\n\"Of course. He's my brother. And he finally came out to me a year ago, though I kind of suspected for a while. How many popular guys his age avoid girls like he does?\"\n\n\"You don't really date, either,\" I observed, weakly attempting to wrest control of the conversation. My mind was numb from her revelation and I felt the ground threaten to buckle underneath me.\n\n\"No, I don't, it's true. Mostly because I'm not a fan of most guys who'd want to date me. Selfish assholes.\" Nora walked closer, standing inches away from me. Her hands reached out to rest lightly on my waist. \"I've seen enough. You look at him the same way he looks at you. You're sweet, humble...\" Her voice trailed off and she glanced away. A single tear rolled down her cheek, sparkling like a diamond in the half-light. \"Promise me you won't hurt him, okay?\"\n\nEmotion hung like a lump deep within my throat. Swallowing, I stammered, \"I promise...I...I really care about him, too...\"\n\nNora nodded, a quick little bob of her head. \"I know.\" Then she tilted her chin up and kissed me softly on the lips. Stunned, I couldn't move. I was frozen \u2014 glued to the spot. Before I could process what was going on, Nora pulled back and looked me square in the eye.\n\n\"There. A kiss you didn't ask for. Just like him,\" she muttered, stepping away and lowering her gaze.\n\nShe flashed me another quick glance. \"Yeah, I can't blame Luke at all...be good to him, Kaden.\" Nora turned on her heels and walked back towards the door to the gym, leaving me alone and surrounded by the cold, black night. Overhead, the lamp shined down on me, illuminating the spot where I stood as if I were an actor on stage.\n\nStill dumbfounded, I reached up to rub my mouth. The adrenaline that had wound through my body was slowly draining away, leaving me feeling tired and tingly. Relief crept into my limbs, wrapping around me like a soothing blanket.\n\nSmiling, I stepped out of the light and walked slowly back towards the gym.\n\n***\n\nInside, the music had restarted, but I saw Luke standing alone, leaning up against the wall and surveying the room.\n\nI sidled up next to him and mirrored his pose, rubbing my hands together to work out the cold.\n\n\"Hey,\" he said, quietly.\n\n\"Hey, Luke.\"\n\n\"Are you okay?\" he inquired, looking at me bluntly. \"I looked and you were gone, Nora just walked by and said you were getting some fresh air...\"\n\n\"I was.\"\n\nLuke shifted uncomfortably. \"Look, I'm sorry about Allie...I made it clear I only wanted to be friends, but you saw how that went...damn, I hate living like this...\"\n\n\"It's fine, Luke,\" I interrupted. He looked taken aback, so I smiled and lowered my voice. \"No, really. I'm not upset. We won't always have to do it like this. One day it won't matter who knows. One day.\"\n\n\"One day,\" he repeated softly, staring at me through wide puppy-dog eyes.\n\nI averted my sight before Luke's gaze drew me in. To me, his magnetic allure was almost strong enough that I'd kiss him then and there, consequences be damned. We had to leave before that happened.\n\n\"You want to get out of here?\" I inquired. \"I'm kind of over this dance.Whatever surprise you had for tonight, I think it's time.\"\n\nHe lit up like a firework, beaming. The rapid change in Luke's demeanor almost made me blush. I still fucking melted whenever I was around him, no matter how often we were together.\n\n\"I'm more than ready to go,\" he said enthusiastically. \"Allie got all offended and said she was gonna go spend the rest of the dance with her friends, anyway. Let's go find Nora.\"\n\nIt was only about ten, but Nora didn't seem upset when we said we wanted to forego the last hour of the dance. \"I want to go say goodbye to Allie, she's probably still suffering from the pain of rejection.\" Nora rolled her eyes. \"Meet you guys out at the car.\"\n\nLuke and I wove our way through the crowd, telling Danny and Logan to let the others know we were heading out. We were almost to the door when we ran into Tristan and Will, returning from the outside.\n\n\"Oh, hey guys. Where were you off to?\" Luke asked.\n\nFor once, Tristan seemed to be lost for words. I looked at him quizzically, mystified. He was always teasing or joking around, but right now he looked almost nervous. My eyes moved over to Will. He was a couple inches shorter than Tristan and lean like a fox, courtesy of the miles he ran on the cross country team. In contrast to Tristan's dark brown hair and larger physique, Will almost looked angelic \u2014 his hair was like starlight, and there wasn't a shadow of a beard to be found on his graceful face.\n\nBoth of the boys were flushed. I furrowed my brow. Recent personal experience planted a small seed of suspicion inside me, where it began to nag at the back of my mind.\n\n\"We ran out to the car to drink,\" Will stammered.\n\n\"Yeah,\" quipped Tristan, visibly relaxing. \"Nothing says senior year like sneaking tequila shots in the parking lot. We would've invited you but everyone was kind of scattered. Want to run back out for some?\"\n\nLuke looked dubious. \"Gotcha. Nah, we're good, thanks. We're actually headed out, it's almost forty-five minutes back to the ranch so Nora and I are leaving a little early. Kaden's coming out too.\"\n\nA spark danced in Tristan's eyes and the corners of his mouth tugged up in a small smile. \"Have fun,\" he said. He paused, looking like he wanted to say something more.\n\n\"See you in the dorm tomorrow night, Tristan,\" Luke interjected, jumping in before Tristan had the chance to add anything else. \"We'd better go.\"\n\nI waited till we were walking through the deserted parking lot before speaking, curious to see if Luke shared my suspicions. \"You don't think...Tristan and Will...\" my voice trailed off.\n\n\"I don't know. Who cares.\" He shrugged, then grinned at me as we reached his pickup. \"So. Almost time for the surprise.\"\n\n\"Is it?\" I smirked, looking around to make sure we were definitely alone. Then, I pushed Luke against the side of his truck, kissing him violently to release all my pent-up tension. After several hours of waiting, the invisible barrier we'd put up between us disappeared. Luke reacted instantly, his arms drawing me closer into him while he invaded my mouth. His tongue looped spirals around mine while he hugged me tight, holding me as I wished he could've during the dance.\n\n\"Am I interrupting something?\"\n\nLuke and I separated quickly, jumping apart in surprise. To my relief it was just Nora. She grinned sheepishly and crossed her arms. I saw Luke relax and I laughed, earning myself a questioning look from him.\n\n\"By the way, no more secrets,\" I said sternly, looking at Luke but unable to hold back a twisted grin. I tapped him on the chest to reinforce my words when I replied, \"Yeah, I know Nora knows. We talked during the dance, dumbass.\"\n\nLuke's look of surprise shifted to guilt. \"I'm sorry. To be fair, I didn't tell her we were together. She figured it out and asked me about you. I should've told you but was worried, after what happened with Tristan.\"\n\n\"If you know what to look for it's easy to see that you guys are more than friends,\" Nora quipped, rolling her eyes. \"You told Tristan?\"\n\n\"Not exactly. It's a story for another time,\" I said quickly, noticing Luke purse his lips and shake his head. \"Let's go.\" With that, we loaded up and left town. Soon, we were well beyond Bozeman, heading southwest on a lonely two-lane road through the dark Montana night.\n\n***\n\nIt was three minutes past eleven when Luke turned off the highway, heading east. A soft crunching noise rumbled up from the ground as the pickup rolled down the dirt road. In the moonlight, I could make out the dark facade of the Madison Range, the mountains looming like rugged sentinels ahead of us. After a few minutes, Luke turned again, this time passing beneath an ornate overhead sign that I couldn't read. He waited for an automatic gate to open before we journeyed onward. Eventually, Luke drove around a small hill, and the shadowy outline of a large house, barns, and several outbuildings slid into view. Yellow light from a handful of outdoor lamps cut through the gloom, seeming pathetically inadequate against the tenebrous darkness of the night. The pickup stopped in the semi-circle drive by the house. Nora wished us a good night and jumped out first, marching towards a side door.\n\n\"Hang tight, I'm just gonna grab some stuff and be right back,\" Luke murmured. He jumped out and followed his sister in the same door, leaving me alone in the running truck. A minute later, he was back, flinging a couple sleeping bags into the bed of the truck. He hopped back in the driver's seat and drove onward. We crossed two cattle guards and a rickety wooden bridge, winding closer and closer to the towering peaks. When I was beginning to wonder how far we were going to go, he stopped next to a stand of pine trees at the base of the foothills.\n\nI hopped out into the cold night air, brittle fall grass crunching faintly underfoot. A rush of stimuli accosted my senses. The indistinct gurgle of running water tickled my ears, signaling the presence of a nearby stream. Breathing deeply, the scent of moist earth and pine needles filled my nostrils while my eyes focused on the murky silhouettes of the surrounding pine trees, rising like ghosts out of the colorless ground. Mostly, my skin felt the chill in the air, and goosebumps covered my skin almost instantly. \"Damn, you actually like camping outside when it feels like this?\" I muttered, longing for the mild, lazy fall nights back in Texas.\n\nLuke smirked. \"This is nothing, you Texans have thin skin. Wait till January. Besides, we'll keep each other warm...okay? Out here, it's just us. Hope you like camping.\"\n\nShivering, I flashed him a knowing smile before grabbing a coat from my duffle bag. I slipped it on and wandered away from the truck to relieve myself. The crescent moon had emerged from behind the clouds, but it was doing a poor job of illuminating more than the basic shapes of the trees and mountains. As I stood, struggling to unbutton my pants with my uninjured arm, it seemed eerily quiet. Besides the hushed noise from the creek, the only other sound was the faint, mournful whisper of wind twisting through the pines.\n\nA flicker of reflected moonlight drew my attention to a spot about fifty yards away. Squinting, I peered ahead, trying by the faint moonlight to see what had caught my eye. At the edge of my vision, a large four-legged shape slunk behind a downed tree.\n\nYelping, I shoved my tool back into my pants and high-tailed it back to the pickup, hopping into the bed. Luke looked up, his headlamp shining on me from where he was zipping the two sleeping bags into one.\n\nHe raised an eyebrow, smirking. \"Porcupine skewer your dick or something?\"\n\nI glared at him, bemused. \"I thought I saw a wolf.\"\n\n\"You probably did. There are wild animals in in the mountains up here, y'know,\" Luke said with an arrogant smirk. \"Just stick close to the pickup.\" He slipped an arm around my waist and yanked me closer to him, whispering in a comically seductive voice, \"I'll protect you.\"\n\nPunching him playfully, I joked, \"Please. Like I need you to protect me, it's just a shock to see. In Texas it's the armadillos that come out at night, not wolves.\" Still, I snuggled closer to him, tucking my head into the crook of his neck. For a minute we stayed that way \u2014 arms around each other's waists and my head against his.\n\n\"Look up,\" Luke whispered, turning off his headlamp and tossing it to the side.\n\nMy eyes shifted up. The clouds that had suffocated us since we left town were beginning to break apart. Innumerable stars now dotted the heavens \u2014 tiny pinpricks of light floating against an endless black void, like so many celestial candles burning across the eons. Out here, away from city lights, the sheer quantity of visible stars was nigh on incomprehensible. The disk of the Milky Way streaked across the sky in a wide arch, glowing faintly brighter than the surrounding blackness.\n\nIn that moment, it dawned on me how small I actually was. Loves, worries, and fears seemed like petty concerns: fleeting thoughts in the mind of an insignificant blip. Even the world itself was nothing more than a speck, floating inconsequentially through eternity. \n\nThe feeling of a warm palm against my thigh interrupted my rumination, a gentle reminder that there were things on this planet that mattered.\n\n\"What're you thinking about?\" Luke asked, his fingers dancing lightly across my upper leg.\n\n\"Can the answer be everything and nothing, at the same time?\" I replied.\n\nLuke chuckled, leaning forward to plant a soft kiss on my forehead. The spot where his lips touched me smoldered, his kiss burning like a hot brand against my skin. \"The more you think, the crazier the world will seem,\" he said. \"Everything and nothing are a lot to consider. We might be here for a long time.\"\n\nA smile tugged at my lips. \"We have all night, don't we?\" Luke's hand was dangerously close to my crotch, and his fingers rubbed softly through the fabric of my pants. He was staring at me, and even though I could only see the outline of his face, the faint glimmer of the moon was visible in the reflection of his eyes. My insides began to tingle \u2014 the heavy, hot feeling of longing rising from the depths of my being. I became painfully aware of my breathing, of how my lungs were pumping in shallow, quick bursts. Tense anticipation was welling up, coaxing me to satiate the hunger only Luke could satisfy.\n\nMy self-control evaporated and I leaned in, pressing my mouth to Luke's with a moan. His full, warm lips smiled into me, his tongue darting forward against my teeth. Liquid comfort rushed through my veins, every last worry melting away while the animal inside me roared with delight. The tips of our tongues met, gently greeting one another before embarking upon a tangled frolic across our mouths. We may not have been able to dance together at homecoming, but we were making up for it right now. My good hand reached into the crook of Luke's legs as our heads tilted left and right, seeking new angles and adventures in our lip-locked tango. \n\nKissing someone who electrifies every nerve in your body is almost indescribable. Sensation is unconscious, automatic...the product of billions of neurons firing in rapid succession, responding to the thousand fragments of one moment in time. Untold decades passed while Luke and I's mouths clashed in the battle of the century, neither one of us willing to back down or admit the need for rest. The world could wither and stars burn out to cold embers, for all I cared. I could stay here forever with Luke, lost in the moment.\n\nA gust of icy wind rustled through the nearby trees before cascading over us. Goosebumps pricked up on the back of my exposed neck while an involuntary shiver ran through me. Luke broke the kiss, leaving me feeling dazed.\n\n\"Come on, into the sleeping bag, you,\" he commanded, quickly stripping off his clothes. I did the same, teeth chattering. Goosebumps exploded down my back the moment my bare skin was exposed to the air. With a loud huff I dropped into the now oversized sleeping bag, latching onto Luke with both arms and legs. I tucked my head around his shoulder, feeling his longer hair brush over my ear and neck. Warmth slowly spread back through my limbs as I leached off his profuse body heat.",
        "\"Maybe I should grow my hair out,\" I suggested. \"That way it'll keep my ears warm up here in winter.\"\n\nLuke adjusted himself, snuggling even deeper into me. \"I like the way you have it now, really short on the sides and longer on the top. But you'd be beautiful no matter what you do.\"\n\n\"Man bun?\"\n\n\"I stand by what I said, but you'll get yourself kicked out of Montana if you do that\" Luke snorted. \"If you grow your hair out, though, maybe I'll grow a beard. To keep my face warm.\"\n\nI choked on a laugh. \"Luke, can you even grow a full beard?\" My fingers ran across his smooth arm, where only a hint of honey-colored hair dusted his skin.\n\n\"If I give it enough time, jerk,\" he retorted playfully. \"It's not my fault you're way hairier than me.\" I felt his gentle fingertips brush the layer of dark fuzz on the back of my thighs. The contact was enough for my blood to start flowing south, stiffening my cock back up to full mast.\n\n\"Just genetics,\" I chuckled, \"or maybe it's just 'cause I'm so manly.\"\n\n\"Yeah, I can tell you're a man,\" Luke joked. His hand had snaked forward, palm out, beginning to stroke slowly up and down over my briefs, following the rigid outline of my cock. My breathing deepened, savoring Luke's sublime touch. Our lips came together once more. This time the kiss was slow and romantic: a simple, unhurried gesture of affection. Luke appeared to be in no hurry tonight, content to make things last as long as possible. That was fine by me, but his hand was already stroking my cock close to the point of no return. My hips were thrusting against him, and I hooked my hands into the waistband of my briefs, beginning to pull them down. Soon, I'd be liable to fuck him then and there, romance and self-control be damned.\n\nReading me like the open book I was, Luke chuckled and removed his hand to the curve of my back. \"Easy, slugger.\"A glint of moonlit teeth told me Luke was smiling. He rubbed his thick steel rod up against mine, driving a quiet moan to escape from my lips. \n\nHe chuckled again then stopped, linking his fingers behind my back and giving me a squeeze. For a minute we laid there in silence, floating contentedly in our nearness. Aroused as I was, laying there with Luke was a comforting agony \u2014 anticipation remained bottled up inside me, threatening to burst forth, even as my heart sang its joy to be wrapped in Luke's arms.\n\nMemories of the past week drifted lethargically through my mind, and a long-simmering question began to coalesce around the periphery of my languid thoughts. I hesitated for a moment, debating whether to ask Luke what was on the tip of my tongue. Curiosity willed it out before long.\n\n\"Luke, why me?\" I asked, tentative. I knew he'd understand the question.\n\nHe shifted his weight and drew back his head. Seconds passed before he responded. \"I could ask you the same thing.\"\n\n\"True, but I asked first.\"\n\nLuke sighed, then fidgeted some more. I was glad he couldn't see me roll my eyes; I'd learned that he always followed the same little routine when confronting an uncomfortable topic. Patiently, I waited for him to get over himself and speak.\n\n\"It's gonna sound cheesy,\" he mumbled.\n\n\"It can't be cheesier than the stupid Brokeback Mountain comment you made the first night we were together,\" I countered. \"Come on.\"\n\n\"Well, you're about be the jury,\" Luke laughed. \"Okay. So you remember the first day of football camp, before tryouts?\"\n\n\"Yeah, of course. I hadn't even moved into the dorm yet, I'd only been here like three days and was still at my dad's place. That was when I met you and everyone else. Then you kind of avoided me afterwards, unless you had to talk to me during practice. Until last Friday.\"\n\n\"Right. That's when I met you. You walked out onto the field, started introducing yourself to everyone...then you got to me. When you shook my hand and looked into my eyes, something inside me broke. I can't explain it. It was magnetic, instant...the most attracted I'd ever felt to anyone. All I could do was imagine your lips on mine. Or around my cock. I can't believe you didn't notice me turning red. After that I kept my distance, not wanting to make a fool of myself. You're one of the few people here that isn't some immature, spoiled asshole, Kaden.\" Luke's voice rose, like he wanted me to understand the point he was making. \"Then there was everything else. The way you talk to the teachers, all 'yes sir' and 'no ma'am.' The way you helped Danny before the first bio test. How you always try so hard on the field. Last Friday I gave in...I told myself what the hell and went for it. Went for you. It was a small chance of success, but...\" He left the thought hanging and instead kissed me benignly.\n\nThe tips of my ears burned like coals and my face felt warm. \"It's almost like you know me better than I know myself,\" I wondered aloud, amazed. \"I didn't know that I wanted...this...till you came along.\"\n\n\"Your moment came when it did. Lucky for me, I guess.\" Luke sniggered. \"I figured it out in the locker room during the eighth grade.\"\n\nI hesitated, feeling that my own explanation for wanting Luke was inadequate when compared to his long oration. \"I guess I was always...curious? Deep down. And then you gave me an open door, and it just felt right to step through it.\"\n\nHis hands slid down my back, finding my ass. Our close embrace was innocent enough a moment ago, but the second his fingers spread wide to wrap around me, my pupils dilated and my breathing grew shallow. Like clockwork, my arms went on autopilot, worming behind him to reciprocate his touch.\n\n\"Are you ready to step through another door tonight?\" he asked.\n\nMy breath caught and my heart beat an even quicker tempo. \"I've never done this before Luke, but I want to,\" I whispered, anxiety hanging onto my every word. Luke gave me another short kiss. I could feel his heartbeat against me, like I had several times before. But this...this was going to be different. \n\n\"Me neither, 'Kade,\" he whispered, his voice small and burdened with an equal measure of trepidation. \"And I don't want to push you. But if you're ready, I know I want you...all of you...inside me.\"\n\nHearing him speak so honestly ignited the fire that burned away my fear. Once again, I realized how special it was to see Luke let his guard down, to see him shrug off the mantle that rested upon his shoulders \u2014 athlete, star, son of a congressman \u2014and open up to me. \n\n\"I'm ready,\" I said, my voice steady and true.\n\nLuke kissed me again, letting his tongue flash over my mine before he spoke.\n\n\"Good,\" he giggled, \" 'Cause remember I'm a wide receiver. And tonight you get to play quarterback.\"\n\nI cringed. \"Holy fuck. You need to make a list of things to never to say again, and add that to it.\"\n\nHe laughed like a hyena for a few long seconds. \"Sorry, dear.\"\n\n\"Fuck you,\" I laughed, giving him a squeeze.\n\n\"Yes, please.\"\n\n\"Oh my God, Luke.\" Exasperated, I did what I knew would shut him up. My mouth descended to his and our tongues resumed their perennial frolic.\n\nIt took only a moment for Luke's hands to slip inside my briefs and tug them down. My hands did the same to his, and after a moment our rigid cocks pressed against one another. I gasped and ground into him, savoring the feeling of closeness as my smaller rod rubbed alongside Luke's. Our breathing grew deeper and our kisses sloppier. Barely a few minutes passed before the urge to push ahead became overwhelming, and I slipped two fingers into Luke's hole. He whimpered and squirmed, and I felt his thin, slick precum begin to leak out between my thigh and cock, mixing with the juices weeping from my own manhood. My mind grew fuzzy, as my body became a slave to the hormones raging within me.\n\nSomehow, Luke managed to extricate an arm from around me and yank a bottle of lube from his bag beside us. He brought the cold bottle into the sleeping bag, flipping the cap and pressing it into my hand.\n\n\"Lube...in ass...and on your dick,\" he mumbled while twisting onto his side, all the while raining kisses down my neck. I did as I was told, squirting the lube into my hand and then fingering it into him. The second I did, Luke flinched and bit my shoulder a bit harder than necessary.\n\n\"Fuck that's cold,\" he groaned as his muscles clenched up around my fingers.\n\n\"Sorry,\" I muttered, warming the next bit of lube in my palm before pressing it into him. Luke adjusted himself down onto his back, wrapping his legs behind me. I rubbed a final squirt onto my quivering shaft and bent over him, resting on my forearms. Looking down, I could see the glint of moonlight reflecting in Luke's eyes as he stared silently up at me, unblinking. I stared back, tense, my abs burning from holding position above him. This was it.\n\nI heard the muffled hoot of an owl in the distance. We were alone, save for the wind, animals, and mountains; here, we were unshackled from the pressures of the world. We had ventured forth into the wild, and now nothing could hold us back...here, we were free.\n\nThe tip of my weeping cock touched his tense pucker with a soft, loving gentleness. My breath caught in my lungs, and for a moment the hazy clouds surrounding my mind parted. In that brief moment of clarity, an impending sense of finality touched my mind as I realized what was about to happen. One week ago Luke and I had snagged a ride on a twisting tornado of emotions, shrugging off fears and risks to plunge headfirst into a new relationship. In that week, the lines between us had blurred, an unknown force of unflagging strength driving us closer and closer together. Now, we were on the brink of a cliff with a thousand-foot drop on the other side...and there was no going back.\n\nLuke trembled against me and spoke, his deep voice having devolved into a a hoarse whisper, dripping with equal parts lust and submission. \"Kaden...do it...please...\"\n\nMy pupils dilated and the animal inside me took control, brushing aside capricious thought. Blood pounded through my veins and my muscles tensed, self-control giving away to the savage instincts of my loins. With a guttural roar, I thrust an inch forward into Luke's ass, feeling the slick lube displace around my swollen cock. \n\nHe yelped and I felt his fingernails bite sharply into the sides of my thighs. Luke's taut muscles released for a moment, accepting another inch of me into his volcanic chute. I could feel his searing fire surround me, claim me, begging me to press further. With each push, Luke released a strained gasp, tinted with the sound of a pained whimper.\n\n\"Are you alright?\" I managed to mutter, concern edging in around the flashing heat of my pleasure.\n\n\"Just...go slow,\" he gasped, \"It hurts so fucking good.\" A full-on whimper escaped from his lips as I worked my way in deeper. I shifted his hips up an inch as I slid halfway into him. Luke shuddered and breathed out heavily. \"Fucking hell...right there, babe...\" he cried, tensing up against me. His tunnel clenched around me like a vise, forcing me to gasp at the feeling. It was otherworldly \u2014 indescribable.\n\nA few cautious pushes later I was tucked in to the hilt, my balls resting gently against the crook of his legs while Luke's larger jewels pressed agains my trimmed pubes. Bending forward, I leaned my body fully against him. My mouth strained forward to find his and I shot my tongue out, seeking to connect us as deeply up top as we were down below. It was sloppy, wet...an unfocused kiss, burdened by the distraction of the connection we had just made. Luke's firm, massive cock was smearing precum into my abs and his hands now caressed my ass cheeks in a weak grip. \n\nStill bent over against him, I ground into Luke's hole, exhaling sharply at the incredible sensation. Where we were joined felt scalding hot; tingling, almost. My right hand reached around to cup Luke's shoulders from behind while I took his earlobe between my lips. His breathing intensified at the contact, while the tightness surrounding my cock abated. As my lips nibbled and lapped at his ear and traced down to his prominent collarbone, the iron bands within Luke's ass loosened, becoming more and more elastic as his body relaxed.\n\nSlowly, I pulled back an inch and then thrust forward. Luke arched his back and cried out. My teeth clenched and I exhaled sharply at the feeling. Fuck, it was amazing. I did it again, and this time he moaned my name quietly. I did it once more, to the same result. Then again. And again. Over and over I bucked my hips, growing more confident with each thrust. An inch became two, and soon Luke's chute permitted me to slide over halfway out before hammering back in. Through haggard breaths I took Luke's virginity, and he took mine. My thoughts were growing as swollen as my cock, and only the occasional spasm of excitement cut through my growing stupor whenever I rubbed just right against Luke's prostate, drawing a shivering gasp from deep within him. Finding my rhythm, I ground into him so each thrust would elicit the same shiver. Luke thrashed in time to my pumps, breathing loudly and periodically loosing a groan or an expletive.\n\nMy brain flitted from sensation to sensation as I slid back-and-forth, unable to focus on anything, fighting for control against the tide of blank, formless pleasure that was threatening to wash over my consciousness. It was like trying to hold back the wind with a net.\n\n\"I'm gonna come...babe...\" I gasped, the insatiable itch starting to take shape inside the base of my cock. As the pressure grew, I thrust more and more erratically, dropping my head to sink my upper teeth into Luke's shoulder. My injured left arm descended from where I'd rested it alongside Luke's head, weaving my fingers roughly into his hair.\n\nAgainst my chest, I could feel Luke's heart hammering even harder than mine, each breath he drew coming sharper and shallower. \"Already there, 'Kade,\" he growled. Two of his fingers pressed suddenly into my asshole, without warning or gentleness. I felt the tips prod and tickle my dense clump of nerves, setting off a ringing, explosive sensation that raced through my body.\n\nLuke's balls drew up and he bucked his hips up into me, his chute spasming violently around my cock. With that, I gave myself away to feeling. My mind went blank, time froze, and the dam broke.\n\nMilky cum erupted from my cock and filled Luke's hole. A rough, drawn-out grunt fell from my lips while Luke cried out my name for the umpteenth time. Pulse after pulse of liquid fire coated his insides while he shot jet after jet of his own sticky seed between our thrashing bodies. Our open mouths barely touched at the lips, lost as we were in the crescendo of pleasure. \n\nFor uncounted seconds we floated among the sunlit peaks of distant mountaintops, ephemeral waves of ecstasy rushing between us. When my tank ran dry and I collapsed on top of Luke, I could feel him trembling with the aftershocks of his fierce climax. Our lips locked briefly for a tender, exhausted kiss.\n\nThere were no words worth speaking right then. Everything that could have been said would have been insufficient again the backdrop of the barrier we'd just shattered. Before, we were two...and now, we were one.\n\nI pulled out and flopped over onto my back. Together we laid there, basking in our descent from the apex of pleasure. I could feel Luke's outstretched hand work its way into mine, and I clasped his fingers tightly with my own. My body felt like it was glowing, as if happiness was a physical condition rather than just a fleeting emotion.\n\nNestled alongside the forest, in the shadow of the mountains, everything was perfect. My eyes rose to the twinkling stars strewn through the inky blackness, enthralled by the beauty of the vast western skies. \n\nLuke nuzzled the side of my neck, scooting over to spoon me. I smiled, deep emotion filling my heart and binding me even more to the incredible person I was fortunate enough to be falling for.\n\nAnd above us the constellations spun in their perpetual dance across the heavens as night wore on towards dawn.\n\n*****\n\nThis concludes the first arc of Western Skies, showing how, over the course of one fateful week, Kaden and Luke discover who they are and the feelings they share.\n\nAt least another four-part arc would be needed to take us to graduation and resolve some of the outstanding plot lines. Life changes (all good) are starting to get in the way of when I usually find time to write. So, I'm not sure what my upcoming timeline looks like for more chapters.\n\nSo, for now, let me say thank you, thank you, thank you for the unwavering support since this story was first begun!"
    ],
    "authorname": "Zorse_D",
    "tags": [
        "athlete",
        "coming of age",
        "cowboys",
        "first time",
        "football",
        "gay",
        "high school",
        "romance",
        "teen",
        "virginity"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/western-skies-ch-04"
}