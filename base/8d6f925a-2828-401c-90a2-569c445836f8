{
    "title": "There and Back Again Ch. 039-040",
    "pages": [
        "Chapter Thirty-Nine: Choices\n\nWith Wynne, Morrigan, and Zevran all exhausted and Leliana still asleep, we decided to delay travel for another day to allow for recovery. I climbed into our tent, grimacing at the two new holes in the canvas. Aedan, Alistair, Sten, and Shale set up some sort of watch schedule, and after a few minutes to fix trampled tents and settle in, every quieted down and slept. I cuddled into my bedroll and was asleep in moments despite being alone in the tent.\n\nWhen I woke, the sun was shining fully down on the canvas, and the air inside the tent was stiflingly warm. Sitting up and scooping my tangled brown hair into a quick pony tail, I crawled out of the tent in my night dress, too worried to care who saw me. Alistair was sitting right outside, and he smiled sweetly at me as I emerged. A quick look around showed Morrigan sitting by the fire making poultices, Aedan and Zevran leaning casually back against a fallen tree trunk talking quietly, and Sten and Shale, still vigilant, watching the woods suspiciously. The mage was awake, huddled in a ball near Morrigan, with Prince still staring at him balefully. Of Leliana and Wynne, there was no sign.\n\nI plopped down beside Alistair, leaning in to rest my head on his shoulder. He handed me a hunk each of bread and jerky, and I took them gratefully.\n\n\"You okay? You look tired. You should have woken me.\"\n\n\"I'm fine, love. Just sick of worrying. We need to figure out what to do with him.\" He nodded in the direction of the young elf cowering by the fire. \"You should have seen his face when he realised both of us were templars. I thought he'd soil himself.\"\n\nI allowed myself a brief moment of satisfaction, and almost immediately felt guilty. I shrugged and changed the subject.\n\n\"Wynne? Leli?\"\n\n\"Wynne was out a few minutes ago. She told me she's keeping Leliana asleep to help her recover. She went back in there just before you came out.\"\n\nI sighed with relief. \"Thank God. If she...if we hadn't...\" I was unable to voice the terrible thought of a world without Leliana. Alistair wrapped his arm around me and squeezed slightly.\n\n\"I know. We all love her too. But she's going to be fine. And by the way, that thing you did last night was amazing. I'm impressed.\"\n\nI heard a rustle, and Aedan and Zevran appeared, settling in beside us. Aedan squeezed my hand. \"Me too, little sister. You're amazing.\"\n\nI blushed crimson, stuttering, trying to demur. \"I didn't...it's not...Look, any of us would have done it if they knew how.\"\n\n\"Yep. But no one else did, did they? I'm assuming that's how you saved Theron and Tomas?\" Aedan squeezed again.\n\nI nodded, and Alistair kissed the top of my head. The blush just wouldn't go away. I was embarrassed by their praise, embarrassed to be embarrassed, which just made it worse. I ducked my head and tried to interrupt the vicious cycle of blushiness.\n\nZevran spoke up. \"How did you even know we were under attack, cara mia? Even our lovely Orlesian Bard did not realise until it was too late.\"\n\nI giggled. \"It's your fault, really, Zev. I woke up and had this itchy feeling down my spine...sort of like when Aedan makes you follow me, or when you try to play pranks on me while I'm meditating. Apparently living with a Crow has given me a sixth sense about these things.\"\n\nI grinned as Zevran puffed out his chest. \"Excellent! Then I shall claim the victory as my own, yes? Without me, you never would have known what that sensation was.\"\n\nWe all laughed, but I could see the underlying insecurity in Zev's smile. He was feeling responsible for Leliana's injury, thinking that as an assassin, he should have known we were about to be ambushed. I wanted to hug him and tell him it wasn't his fault, but I knew acknowledging it would only make things worse. Alistair, in his own endearing fashion, solved the dilemma for me. He held his hand out to Zevran, and when the surprised assassin took it, Alistair pumped it enthusiastically.\n\n\"You can claim any victory you want. Last night you saved Leliana's life and nearly ran yourself to death doing it. You have our gratitude, and my respect. Thank you, Zev. Truly.\"\n\nThe shock on Zevran's face was priceless, and I wished I had a camera. Aedan grinned at Alistair, pleased, and I chuckled softly, nuzzling my face into the brawny shoulder of the man I loved. I was impressed; in the game, it hadn't seemed like Alistair had the maturity to recognise Zevran's worth underneath all the Antivan's bluster, and I was amazed at this more confident Alistair. Duncan's death damaged him so deeply -- I didn't realise exactly how deeply until now. I shuffled to my knees, leaning over to draw Alistair into a soft, loving kiss, then pulling away and climbing to my feet.\n\n\"I'm going to go check on Wynne and Leli.\"\n\nThe three men smiled and nodded, and I padded over to the tent the two women shared. Passing Morrigan, I smiled brightly at her and she nodded back, a small smile of her own looking so uncomfortable on her serious face. I called out quietly, and then entered when Wynne invited me in. Leliana was still asleep in her bedroll, but she'd recovered her colour and looked comfortably normal. I smiled at Wynne and sat beside her; the mage returned my smile. When she spoke, it was soft, but she didn't whisper, and I inferred that we wouldn't disturb Leli with a conversation.\n\n\"How is she?\"\n\n\"She is fine, actually. I was just thinking about dispelling the sleep spell. She should be fully recovered, though she'll need a bit of extra rest for the next few days.\"\n\nI nodded. \"How are you feeling?\"\n\n\"I'm fine. Just needed a bit of time for my mana to recover. I suppose most of us needed some time after last night.\"\n\nTurning to Leliana, the mage muttered an incantation under her breath and I felt the brief flare of magic I'd become accustomed to. She placed her hand on the bard's forehead, and Leliana's eyes shot open with a gasp. Her eyes were wild, until her gaze settled on Wynne's motherly face, and she relaxed.\n\n\"What happened?\" Her voice was gravelly, and I handed her a water skin which she drank from gratefully.\n\nWynne and I took turns telling her what had transpired since the attack. She was visibly shaken by learning how sick she had been; despite this, she gave me a dirty look for getting Zevran to threaten the little mage. I just shook my head -- she was too forgiving, by half.\n\nWynne helped her to sit, and she pushed the covers back to gaze sadly at the ugly puckered scar on her thigh. I was sympathetic, but she was quick to dismiss that and assure me she wasn't bothered by it. I decided it was a good thing Fereldans didn't wear mini-skirts, Morrigan aside.\n\nWynne and I helped Leliana dress. Her armour was damaged from both the arrow and the subsequent cutting to expose the wound, and we bound the pants together with strips of cloth as best we could. Finally ready, the three of us emerged from the tent, and I realised all eyes were on us. The elf mage hastily looked away when he saw me, and I grimaced. Alistair held his hand out to me, and I went to him, snuggling as much as I could into his armoured chest.\n\nFinally the group of us gathered around the fire with the mage who Aedan called Dariel across from me and Alistair. I tried to look non-threatening; by the pale complexion on the elf's face, I didn't succeed very well. Before Aedan could start talking, I spoke up, and Dariel flinched at the sound of my voice.\n\n\"Look, Dariel? I want to apologise for threatening you. We needed to know what that poison was, but...I shouldn't have. I'm sorry.\" He refused to make eye contact, and I sighed and tried again. \"You should know I'm not a real templar. Neither is Alistair. We're not associated with the Chantry or the Circle. I'm just a girl with a few weird tricks up my sleeve. I wouldn't have actually hurt you, I swear. I just wanted to make sure you weren't hiding anything. It was a nasty thing to do and I really am sorry.\"\n\nThe elf risked a quick glance at me, and I tried to smile at him. He nodded, slightly, and looked away again, but he sat up straighter, his expression more confident. He still looked scared -- unsurprising, really -- but he didn't look like he was about to wet himself any more.\n\nAedan took over, introducing each of us in turn. The elf looked with interest at Morrigan, and with poorly disguised pity at Wynne, to my surprise. Once that was done, Aedan asked Dariel to tell the rest of us his story.\n\n\"Start from the beginning, okay?\" He smiled reassuringly, and Dariel nodded.\n\n\"I was born in the Alienage in Amaranthine.\" He had a surprisingly low baritone for such a small, young-looking boy, and I blinked in surprise. \"It was...not a nice place to live. My mother worked when she could as a servant in some of the shops and things, and my father was a drunk. There was never enough coin to support all of us. I had an older brother and a younger sister, and most weeks, we were very close to starvation. Even the other elves looked at us with pity. Half the time we lived on the street, begging to survive.\"\n\nI was surprised at the completely flat tone he maintained during his entire speech. Uncomfortable as the subject matter had to be, I expected more squirming or stuttering. More emotion. Then again, maybe he'd had to learn to suppress those emotions.\n\n\"When I was seven, I was trying to earn some coin by doing odd jobs -- cleaning out the mabari kennels, or sweeping floors, that sort of thing. If I got lucky, I'd get a few coppers for my efforts, which I used to buy food for my little sister. My brother tried to work too, for a while, but eventually got mixed up with a group of thugs. We didn't see him much after that -- he went to live with them, wherever it was that they lived. One day, in the kennels, one of the kennel masters saw me cleaning up, and lost his temper. He had always been scary, and I usually avoided going there when he was working, but we hadn't eaten in two days and I was desperate. The kennel master got angry, and started hitting me, and calling me names, and I just...lost it. I don't know exactly what happened, but the next thing I knew, the kennel was on fire, and his clothes caught...he dropped me and I tried to run, but I just couldn't stand the thought of the dogs burning. I released as many as I could reach, but one of them had been burned and couldn't walk. I half dragged, half carried the poor beast out, and when I put my hand over his burn, it just...healed.\n\n\"Someone else saw it, and started screaming that I was an apostate. I panicked, and ran back to the Alienage. I'd heard stories about templars, and I didn't want to be caught. But when I got home, and told my parents what had happened, my father was so angry...Mother tried to calm him, but he walked out. He came back a few minutes later with a human, a big, scary looking, dirty, smelly human. Father told me I was to show him what I had done to the dog. He hit my sister, who was only four, hard enough that her cheek split open; to give me a patient to work on, I suppose. When she cried out, I ran to her, and somehow, I guess, I healed her. The big man grabbed me by the arm, gave my father a bag of coin, and took me. I couldn't stop him, he was too strong, and he just carried me away, crying. Later he told me my father sold me to him for two sovereigns and a promise never to reveal where I came from, to protect them from the templars.\n\n\"I've been with them ever since. They kept me chained for the first few weeks, until I was too exhausted and frightened to run away. They spent every evening telling me how if I escaped, the templars would get me, or they'd go back and hurt my sister for revenge. I finally gave up on any hope of freedom, and just did what they said. They had an older mage with them, a drunk who'd escaped the Circle in his youth, but he taught me some healing and about herbs, as well as how to read, a little. I never learned any real damaging spells, on purpose, so they couldn't use me as a weapon, but I was good at healing them after fights so they kept me. We've been travelling around Ferelden ever since, taking on mercenary jobs or turning to banditry when no jobs were available. This job was supposed to be the easiest -- keep an eye out for a group of travelers heading into Denerim, we were given a sketch of you-\" he pointed at Aedan, \"and then ambush you in your sleep. Bring you to Denerim and get some sort of reward. You weren't supposed to hear us coming. They almost didn't even bring me, thinking you wouldn't be able to put up any sort of fight. Nobody told us you had templars, or I definitely wouldn't have come.\"\n\nAs his story went on, I felt worse and worse about what I'd done. The poor kid had been sold into slavery, and I set Zevran on him and then threatened him myself. When Dariel finished his story, he stood and walked a short distance away, his eyes suspiciously bright. We all sat and stared at each other around the fire, pity on most of the group's faces, guilt written clearly on mine.\n\nAedan gestured us all a little closer so we could quietly discuss his story. No one seemed to disbelieve him -- his distress certainly seemed real to me -- and it would explain why he had not tried to cast a spell after I drained his mana, and why the thugs started with arrows, not a fireball. Much to my relief, no one looked even vaguely like we should be discussing executing him, even Sten, whose prejudice against mages, I'd noticed, was declining a bit over time. I briefly wondered why -- he had never softened in game, that I was aware of -- but put it off to think about another time.\n\n\"The way I see it, we have four options.\" I summarised my thoughts. \"The first option would be take him to the Circle. Personally, I'm not keen on that one.\"\n\nWynne nodded agreement, to my surprise. \"They would assume he was a blood mage, regardless of what we, or he, said. Greagoir might not be the fanatic that some Knight-Commanders are, but even he would either make him Tranquil or just execute him.\"\n\n\"And the way he looks at templars, he might just kill himself before we got him there. Or get killed trying to escape.\" Aedan looked sick thinking about it.\n\n\"Agreed. And if we aren't taking him to the Circle, he needs to find protection from templars. I don't think he'll survive on his own. We could just take him with us,\" I continued. \"Another healer wouldn't be a bad thing. I worry about him being an apostate, though.\"\n\n\"I am also an apostate, if you recall.\" Morrigan's tone was acidic.\n\n\"Yeah, but you're unlikely to panic and try to run at the first sight of a templar. And if we do get attacked, you can shapechange into a bird and escape. He'd be caught,\" I explained, and Morrigan's frown eased. \"Besides, most templars are men. They'd all be too busy staring at you, drooling, to really try to capture you.\" Morrigan smirked at my teasing, and I grinned.\n\n\"We could recruit him to the Wardens, get him out of the Chantry's jurisdiction.\" Alistair piped up.\n\n\"Yep. That's option number three. The downside is that we'd need to get him to Redcliffe, to wait for his Joining, and I don't fancy walking all the way back there. Plus he'd need serious training. And then there's the whole...Joining thing.\" Alistair, Aedan and I exchanged glances, and I could see they were also concerned about his ability to survive. The rest of the group looked mildly confused, but no one asked.\n\n\"What about the Dalish? They know how to hide their mages from templars. And Lanaya said they were desperately short on healers -- she was talking about having to find a way to trade another clan for someone to be her apprentice.\" Aedan picked at the long grass poking up from around the rock he was sitting on, his face pensive.\n\n\"And that's option number four. It's still a bit of a trip, but not as far as Redcliffe or the Circle, and it should be safe.\"\n\nWynne scolded us. \"Don't you think he should have some say in his fate? You're all discussing him like he's some sort of imbecile or child. Maybe he's had enough decisions made for him?\"\n\nI could feel my face reddening with guilt as I realised we had indeed been talking about him as though he didn't really exist. Looking around, I could see Aedan and Alistair also looking embarrassed, none of us wanting to make eye contact. I'm acting like I'm still playing the game. What an ass! I sighed.\n\n\"I'm going to go talk to him. I need to make amends anyway, might as well be at the same time as I ask his opinion of his options.\"\n\n\"You want me to come with you?\" Alistair's face was concerned.\n\n\"No, I'm good. I've got this.\"\n\nAlistair kissed my forehead softly and Aedan pecked my cheek. Still wearing just a shift for sleeping, and carrying no weapons, I approached Dariel slowly.\n\n\"Dariel? Can we talk?\"\n\nHe stiffened at my voice and whirled to face me, hands up defensively. I sat down on a nearby stump, hands held out, making no sudden moves. He watched my face, and I kept my gaze on his, hoping to project openness and calmness. After a few silent moments, he relaxed just enough to crouch nearby, out of arm's reach but close enough not to have to raise my voice. Good enough. I cleared my throat.\n\n\"What do you want of me?\" I could hear something unspoken at the end of the sentence, whether it was 'shemlen' or 'templar' I wasn't sure, but the tone made it obvious it was meant as an insult. At least it remained unspoken. I'm going to assume that's a good sign.\n\n\"Your opinion, actually.\" I had to strain to keep my voice soft and civil. \"I was wondering what you would do now, given the choice.\"\n\n\"It's not really up to me, now is it?\" He couldn't keep the fear from his voice, and I felt ashamed all over again.\n\n\"But if it were?\" He stared at me, mute, and I continued. \"The way I see it, you'd actually have five options. One would be to leave us behind and strike out on your own. Try to find some way to survive.\"\n\n\"Like you would all just let a filthy knife-ear walk away after attacking you, and injuring a human.\"\n\n\"Listen, could we leave the name-calling out of it? There's an elf I consider family over there somewhere, and I'll thank you not to insult his race.\" His eyes widened somewhat and I smiled. \"Anyway, as far as leaving is concerned...they would, honestly. Let you leave. If you walked away right now, none of us would stop you as long as you headed away from Denerim. We'd probably even give you supplies.\"\n\nStill staring at me with an unfathomable expression, he finally nodded.\n\n\"So that's option one. Two would be to go the Circle, throw yourself on their mercy, and hope for the best. I wouldn't recommend that one, personally. They do owe us a favour, but real templars are a bit, well, rigid.\" I thought I glimpsed a slight smirk, and felt a little bit of hope. \"Three would be to stay with us as you are, and hope we don't get accosted by real templars. Four would be to join the Grey Wardens.\"\n\nHis mouth fell open in surprise, and I almost laughed. \"I won't lie; joining the Wardens is dangerous. But it does put you outside of the Chantry's influence. The last option would be to go to the Dalish and ask to join them. They know how to avoid templars.\"\n\nHe scoffed. \"The Dalish would never take me.\"\n\n\"Normally I'd agree with you, but we know a clan who also owes us a few favours. And they are short on mages. Actually, they're just short on people, honestly. It wouldn't be easy -- I'm sure there'd be many who would treat you badly because of where you're from, and you'd have to work twice as hard as anyone else to be respected, but I think they'd take you.\"\n\nHe looked skeptical. \"And you'd spend your favours on me? I doubt it.\"\n\n\"Why not? Look. We believe you. You've consistently drawn the short stick at every turn. You didn't choose to attack us, and in fact, you actually didn't. You were a slave, and if your masters happened to be mercenaries who took the wrong contract, that's not really your fault, is it? We're willing to help you, if you'll let us.\"",
        "I smiled at him, trying to draw him out, even a little. \"So the question remains. What would you like to do now?\"\n\nChapter Forty: Dazed and Confused\n\nI agreed to give Dariel some time to think about his options, and headed back to the fire. Alistair tried to hold me in his lap, but plate isn't very comfortable for sitting on, and my butt was soon numb. Despite that, I could feel myself drifting off to sleep with every lull in the conversation, and even Alistair looked a bit droopy. Zevran and Leliana had gone back to sleep in their respective tents, and I talked Alistair into joining me in ours for a nap. He reluctantly removed his armour -- he looked like he'd decided never to take it off again after being caught in an ambush in just clothes, but I whined until he complied -- and we curled up on our adjoining bedrolls, Alistair spooned behind me, holding me with his chest pressed up against my back.\n\nHis breathing smoothed out to a soft, regular rhythm as he fell asleep, but despite my exhaustion, I found my mind spinning. Between wondering what other ugly surprises we were in for in Denerim, wondering what Dariel would decide, and the butterflies in my stomach from sleeping in the arms of the most gorgeous man in all of two worlds, it took me a while to drift off. When I finally did, I was plagued by guilt-ridden dreams of standing over Dariel's corpse, bloody knife in my hand, with all of my friends staring at me in horror, and all I could say was 'I didn't really mean it...'\n\nI woke to Alistair crushing me to his chest, stroking my hair with one hand, shushing me. I gasped as the dream faded, and then settled down to sob for a couple of minutes until the horror subsided as well. When I explained my dream, he pulled me closer again and kissed my forehead. Somehow I'd been turned the opposite way so I was facing him, and I marveled at his strength again. He didn't tell me it wasn't my fault, didn't try to tease me about it; he just held me until I cried myself out. Once the shuddering stopped, he leaned in and kissed me; it wasn't passionate, like in the night, but just warm and loving and comforting.\n\n\"You're really quite perfect, do you know that?\" I smiled at him as he hovered over me, stroking my face with his fingers.\n\n\"You're biased.\" He grinned at me. \"But I don't mind.\"\n\n\"What time is it, do you suppose?\"\n\nA sudden, loud growling noise took me off guard, but Alistair laughed and patted his stomach. \"Dinner time, I'm guessing.\"\n\nI giggled and sat up, looking around the tent for some clothing that was a little bit more appropriate than the nightgown I'd wandered around in all morning. Alistair was strapping on his armour, and I grinned but avoided teasing him. I figured it would take him a while to relax and drop his guard again, though that was probably a good thing. It's not paranoia if they really are out to get you. I sighed and hauled over my own armour, shooing Alistair out of the tent so I could change.\n\nWhen I emerged, everyone was gathered around the fire. Alistair was already wolfing down a bowl of what I assumed would be soup of some sort, and Leliana handed me my own bowl as I settled beside him on the ground. Dariel was sitting with Aedan and Zevran, eating as well, and I wondered if sitting with the only other elf in the party made him feel less frightened. Not that Zevran was like the rest of the elves I'd met, overall. Which was a good thing -- the servile attitude from most of the elves in Redcliffe and Ostagar made me distinctly uncomfortable. I smiled warmly at him; his expression, while still cool, was definitely less aloof than before.\n\nOnce everyone had eaten, we all sat back to chat and tease each other like we always did in the evenings. Dariel's eyes seemed to follow the conversations curiously, though he never spoke; I wondered what evenings had been like with the band of mercenaries. They probably tortured bunnies for fun, in front of him. That image made me feel ill, and when I shook myself to try to clear it, Alistair leaned in.\n\n\"You okay?\"\n\n\"I'm fine. Just way too active an imagination.\"\n\nHe looked at me curiously, but then we all got distracted as Aedan stood and cleared his throat.\n\n\"Tomorrow we head to Denerim. We will camp outside the gates tomorrow night, once we've ascertained what the situation is getting into the city. Wynne, Leliana, Alistair, Zevran, Sierra and I will be going into Denerim.\" Prince whined, and Aedan laughed as he stroked his ears affectionately. \"And Prince, of course. Shale, Sten, and Morrigan will stay camped outside. Dariel -- you have a choice. I think Sierra went over your options with you, and you have some time to decide if you want. All we need for now is to know whether you will be accompanying us into Denerim, staying outside at camp, or leaving us altogether. Any plans?\"\n\nDariel nervously cleared his throat. \"I don't think me going into Denerim is a good idea. I could be recognised, and word would get around that we failed. I think...if it's alright with you, that perhaps I will stay at camp. And then I can make my decision while you're away.\"\n\nAedan nodded, and pretty much everyone around the fire directed a smile, a nod, or some other friendly gesture his way. Sten and Shale were the exceptions -- and I couldn't even start to figure out what a friendly gesture would look like from Shale, so maybe I had just missed it. Sten wasn't openly hostile, which was probably the best we could expect. I did notice some interesting glances being exchanged between Dariel and Morrigan, and tried not to shudder as I considered that concept. Morrigan was becoming my friend, and I really didn't want to think about her like that. Ugh. Wonder why it doesn't bother me with Zev and Aedan? Huh.\n\nAfter a bit more chatter, everyone started heading to bed. Alistair and I, both entirely awkward, took turns changing into sleep clothes while the other waited outside. Zevran was openly laughing at me as I stood outside in my nightgown after I finished changing, and I had to acknowledge the idiocy of two people sleeping together but being unable to get changed in front of each other. To avoid further ridicule, I ducked back into the tent more quickly than I might have otherwise, and I forgot to knock. Or whatever you do on a tent.\n\nWhen I looked up, I froze. Alistair was kneeling on his bedroll, without a shirt, eyebrows raised. I stared at him, struck yet again by how incredibly well built he was. After carrying me halfway across Thedas I shouldn't have been surprised; his abdominal muscles stood out in a six-pack, his pecs bulged like a body-builder's would, his shoulders were broad and rippling as he reached for his simple tunic, and the tan lines on his arms emphasized the obvious strength in his biceps. I swallowed, mouth dry and hanging open, caressing his impressive physique with my eyes. When I was able to return my gaze to his face, he was smirking slightly despite the deep blush. He abandoned the shirt, lying down on his bedroll and holding his arms out expectantly.\n\n\"Warm night, don't you think?\" His grin was sly and I rolled my eyes as I crawled over beside him and got pulled into an embrace. The skin of his chest was soft against my cheek, and the smell of campfire and sweat that I had become used to since first coming to Thedas flooded my senses. I stroked my hand through the soft fuzz decorating his chest, and he smiled at me.\n\n\"I never thought in a million years I would be lying here with a beautiful woman in my arms....\"\n\nI laughed and interrupted. \"...While not wearing a shirt?\"\n\nHis blush intensified, and I had to wonder how he stayed conscious when all of his blood had rushed to his skin. Which brought to mind an image of all of his blood rushing somewhere else, and suddenly my complexion matched his. I struggled to keep the dirty thought from bursting out of my mouth without permission.\n\n\"Have I told you today how incredibly handsome you are?\" I snuggled into his chest, determined just to relax and go to sleep. Which was harder than expected, given the proximity of the sexy, half-naked demi-God I shared a tent with. He kissed my forehead, and then settled in.\n\nAfter several minutes of clenching my jaw and trying not to fidget, I finally sat up, startling Alistair who was half asleep. I reached over him, grabbed the shirt, dropped it on him, and waited until he put it on. I refused to rise to his bait as he smirked at me unabashedly, finally settling back down into his now clothed arms. It was probably good for his self-esteem, I decided, though it was doing nothing to improve my blush. Despite the shirt, I spent a good portion of the night lying awake in Alistair's arms, convincing myself over and over that I wasn't going to be the one to start anything.\n\nI finally fell deeply asleep right before it was time to get up for the day. Typical. I hazily enjoyed a scorching kiss from Alistair before he scrambled from the tent, leaving me to get my armour on. Once changed, I ate a few bites of breakfast, and then dozed against Alistair's shoulder after he emerged in his armour. He finished my breakfast as well as his own, as usual. Alistair looked very smug whenever he caught me yawning, and both Zev and Leli gave us amused looks. I had to be chivvied into helping pack, and then got basically dragged along by the hand as we started walking.\n\nThe day passed in a blur, literally, since I could barely keep my eyes open. I stumbled along, clinging to Alistair's hand, hoping he'd guide me over any obstacles because I really wasn't paying that much attention. Lunch on my feet was aggravating, because I couldn't eat and be dragged along by the hand at the same time, so I had to concentrate on my surroundings for a while. I even accepted a cup of wretched Ferelden tea warmed by Wynne's magic, hoping to God there was enough caffeine in it to justify the vile taste. I felt enough better afterwards to actually wonder if she'd spiked it with something, or hit me with a rejuvenation spell while I wasn't looking. I wasn't about to complain.\n\nThe afternoon was an unsurprisingly better experience because of it, and I was finally feeling back to myself enough to smile and joke with Aedan and Leli while striding along beside Alistair. Alistair and I took some gentle teasing for the fog we'd both been wandering in all morning, though neither of us was willing to admit to the reason. 'I couldn't sleep because it suddenly occurred to me that he's naked under his clothes' doesn't sound like much of an excuse.\n\nShale and Sten walked together quietly, as usual, while Zevran often ranged ahead of us, scouting for bandits and the like which should have been more common the closer we got to Denerim. Dariel and Morrigan were also together, heads down, talking quietly, and when I looked around I realised I wasn't the only one who was disturbed by it. Alistair and Aedan both looked vaguely grossed out, and again I wondered why it was so much worse for everyone imagining the two apostates together than it was to picture Zev and Aedan (or me and Alistair, for that matter).\n\nIt occurred to me suddenly that allowing Dariel to be recruited into the Grey Wardens might be a bad idea -- it would take away any control Aedan had over Morrigan's ritual, if she could perform it with a completely unsuspecting Dariel who was sleeping with her anyway. I decided to mention it sometime in Denerim, when neither mage was nearby, so I didn't have to worry about being overheard. I'm so getting yelled at by Aedan for not telling him about her ritual sooner.\n\nI sighed, just shaking my head with a wry smile when Alistair shot a curious look my way. We made it to Aedan's chosen destination slightly before nightfall, just outside Denerim but far enough from the gates not to be spotted, and hidden in a forested valley. There was a little lake a ways away, where Sten, Morrigan, and Dariel would be able to replenish their water while we were in Denerim. No one felt like sparring, so we set up camp and Aedan sent Morrigan off in bird form to check on the situation at the gates. She was under strict orders not to enter the city itself, but just to survey the gates and return. Sitting together around the fire waiting for her, I was all edgy nerves and anxiety, and I wasn't the only one looking a little tense. Alistair held my hand, his calloused thumb rubbing reassuring circles on the back, but his own jaw was clenched, and I guessed his outward calm was all illusion. I snuggled a little closer, hoping that just being there could offer some comfort.\n\nAfter a bit, Leliana asked if I'd walk around camp a bit with her; sensing she must want to talk to me about something, I agreed and hauled my tired butt off the ground to follow her. We didn't go far before she found us somewhere to sit, and we settled in. I waited to see what she wanted to discuss. I'd assumed it was Marjolaine. I was wrong.\n\n\"So...you and Alistair.\"\n\nI blinked, surprised. And then giggled. I'm such a girl! \"Um, yes...?\"\n\n\"You are aware that he is very inexperienced, yes?\"\n\n\"Uh, yeah. So he said. Dare I ask where you're going with this?\"\n\n\"I just...I suspect you also do not have much experience, no?\"\n\n\"Leli, what on earth...?\"\n\n\"I...worry. That you two will perhaps not have such a pleasant experience, when you finally get to that stage.\"\n\n\"Seriously? Here I figured you wanted to talk about Marjolaine or something, and what you want to discuss is Alistair and I having sex?\"\n\n\"I'm feeling quite serene about Marjolaine, actually, thanks to you. I thought about what you said at length, about how she will not stop until I make her, and I realised...you are right. Someone must prevent her from hurting anyone else. I will kill her. I won't feel guilty about that. And it does not make me a bad person. I am fine, actually.\"\n\nI smiled, happy that I could help her pre-empt her crisis of conscience. Shaking her head, she returned to her previous investigation, and I blushed.\n\n\"You are avoiding talking about it, Sierra.\"\n\n\"I...yeah, I am. Look, this is awkward. I'm...I have next to no real experience, Leli. But we're not going to injure ourselves or something, you know. We will figure it out.\"\n\n\"Real experience? What does that mean?\"\n\nMy blush deepened, and she looked at me curiously. \"I...well, let's just say that information is a lot more universally available, where I'm from.\"\n\nShe looked confused and made a 'give me more' gesture with her fingers.\n\nI sighed. Using the thumb and first finger of my right hand, I pinched the bridge of my nose, struggling to contain my embarrassment. \"It means that there are plenty of books and things easily available. Instruction manuals, fictional accounts...recordings of other people having sex. Not that I spent a lot of time watching them, or anything, but...let's just say I'm familiar with the mechanics of sex, at least. I haven't done it much, but I think I can figure it out. Especially if I don't have to talk about it!\"\n\nShe grinned, her expression delighted. \"Books? Like the ones Wynne reads?\"\n\n\"Well, yeah, those, but more. Like serious step-by-step 'how-to' instructions. Or detailed descriptive accounts of sex itself. It's called erotica. There's a lot of it. So I'm not quite as clueless as you might think.\"\n\n\"I was thinking I might have to give you some pointers.\"\n\n\"We're not even there yet, anyway. It's a bit premature, don't you think?\"\n\n\"You share a tent with the man, and you think that contemplating your first time together is too soon?\"\n\nI grimaced. She has a point. \"I just...he hasn't really made any moves, yet. I'm thinking he isn't ready.\"\n\n\"And does it not occur to you he might be waiting for you to make a move?\"\n\n\"Well, sure, but I'm not going to.\"\n\n\"Why ever not?\" She looked irritated, and I shrugged.\n\n\"It's...I...it's complicated, Leli.\"\n\n\"Oh, by the Maker you two do make it hard on yourselves, yes? Alright, well...can I at least suggest you tempt him a little? Make sure he knows you will not say no?\"\n\n\"He bloody well knows that by now!\"\n\n\"No, dearest, he does not. Trust someone with a bit more experience with clueless men. The only reason he has not yet ravaged you is because he thinks, deep down inside, that you don't want him to.\"\n\n\"After last night, if he doesn't know, he's an idiot.\"\n\n\"Oh? Tell me!\" She clapped her hands in glee.\n\nI sighed again. I told her about the fiasco with his tunic, and she was in hysterics by the time I was done.\n\n\"That's why you were so dazed this morning? You could not sleep because he took his shirt off?\" Her laughter was gaining in volume, and I hushed her to avoid having to explain the joke when we went back.\n\n\"Yeah, yeah, laugh it up. You're just saying that because you've never seen him with his shirt off.\"\n\nShe grinned wickedly, a curious gleam in her eye that reminded me of Zevran in his more blatant moments. \"That good?\"\n\n\"Uh, yeah. Better. Don't you even think about trying to get a look!\"\n\nShe pouted cutely, and I laughed. \"I still doubt Alistair has thought about what your response means, really. If anything, he would probably take it as a rejection.\"\n\nI groaned. \"So what do you expect me to do? I want it to be his idea. It needs to be, really, for a variety of reasons. I can't just go say 'Hey, Alistair, wanna fuck?' I can't do it.\"\n\n\"No, no. Maker! You are hopeless!\"\n\n\"I'm aware.\" I stuck my tongue out, my wry smile escaping, and Leliana laughed.\n\n\"Okay this is easy. You just need to tempt him. Do something that says, obviously and unavoidably, that you are available.\"\n\nWe spent a few minutes scheming, and by the time Morrigan returned, I figured we had a working plan. It was going to be the hardest thing I'd ever done, but I was committed. Or perhaps I need to be committed. I'm not sure which.\n\nWe headed back to camp when Prince's barking heralded Morrigan's return, and I avoided eye contact with Alistair, trying desperately not to blush. He looked at me curiously, and I frantically sought to concentrate on what Morrigan's news could be, distracting myself from my embarrassment. I didn't have to wait long.\n\nMorrigan's news was a relief, but also seriously concerning, all at the same time. Apparently the gates were entirely unguarded. She spent several minutes watching, and besides a large number of heavily armed mercenary groups moving through, noted nothing interesting. No one watching, definitely no one stopping even the least reputable from passing through. Assuming the more-well-known of our group -- Aedan, Alistair, and Leliana, primarily - wore helmets, there was probably no one who would care who we were or what we were doing in Denerim.\n\nAedan and Alistair were intensely concerned what it could mean. The city could be teeming with mercenaries who would turn the Grey Wardens in for coin, though blending in might be easy. We wondered what exactly was wrong, and what must have happened for Loghain to have abandoned the gates. We discussed it for a while, every imagined scenario worse than the last, when finally Aedan interrupted our idle speculation.\n\n\"We won't be able to figure it out until we get there, so we might as well make a plan to get started with. It seems like we might be able to just wander in to the city as we are. As long as we're all armed and armoured, and wearing helmets, it sounds like we will fit right in.\" Morrigan nodded agreement, so Aedan continued. \"We will go to the market first, and those who need can get measured to have armour made or repaired before rumours spread of our existence. Sierra tells me she knows of a good armourer. We can then find somewhere to stay, hole up in an inn somewhere. We need to find somewhere we can be inconspicuous. Or at least buy privacy.\"\n",
        "Zevran and I spoke simultaneously, then turned and grinned at each other. \"The Pearl.\"\n\nOh God, I can't wait to see Alistair in a brothel."
    ],
    "authorname": "ElyssaCousland",
    "tags": [
        "fantasy",
        "fanfiction",
        "dragon age",
        "modern girl in thedas",
        "romance"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/there-and-back-again-ch-39-40"
}