{
    "title": "Poison Ivy Ch. 06",
    "pages": [
        "ETA: This is the revised version of Chapter 6. A few minor details have been altered, so if you read ahead before the next chapters are revised, just be aware that some small things might not line up. I will post an ETA for each chapter as they get updated. The final chapter is written and will be posted shortly in two parts, as well as a teaser for Aella and Trevino's story. Thanks for your patience! \n\nHi folks! Thanks for sticking with me! Now that the holidays are all over, I hope to be writing more often. I have some awesome things planned for this story, so I hope you're enjoying it and continue to. As I said before, I'd like to give credit to the songs I listen to while I write these chapters, so below are a few I particularly enjoyed during this one. \n\nLet me know what you think! (Not of the songs, I already know they're awesome. The chapter.)\n\nLoaded Gun, Bella Mar, from album Loaded Gun\n\nZOO, by Jetta, from album ZOO\n\nStep inside, the Violence, by Red, from album Gone (Deluxe Edition)\n\nNot Human, by elegant slims, from Album Not Human\n\nTurncoat, by Matthew Mayfield, from album Recoil\n\nThe Promise, by Window to the Abbey, from album The Promise\n\nThanks! Enjoy!\n\n......................\n\nTrevor's hands gripped the tablet so tightly, he thought the screen might crack. He sucked in a shaky breath and focused on letting it out slowly, the image in front of him blurring in the red haze clouding his vision.\n\nHow the fuck did this happen? \n\n\"Sir?\" His fucking dumb-as-shit assistant, Parsons, was standing by the door, an uncertain and uneasy look on his blotchy, sallow face. \"Is... everything all right?\"\n\nNo. No, everything was certainly not fucking all right.\n\nHe brought his smokey gaze back to the picture General Maverick had sent to him. The man had some personal vendetta against the little Omega staring back at him defiantly, her very existence a threat to his status as the second-in-command of the entire fucking country. How the General had found her, he didn't know and, quite frankly, didn't care. The fact was, the little bitch had to be dealt with, and fast.\n\nThere were very few people who knew that he hadn't always been Vice President Ethan Hickson. Even fewer knew about his colorful past. Maverick had some fucking balls, he'd give him that. The perverted, pretty-boy general very well might regret his decision to bring Ivy to his attention, depending on how this conversation went.\n\nElection season was coming up, and the only thing that could possibly put his political career in serious jeopardy was currently stationed in Torrin, pair-bonded to that thorn in his side, Lt. General Hunter.\n\nHe shook his head as if to clear it. How was this even fucking possible? He had burned the house down, with both her and her mother in it. He'd paid a shit-ton of money for someone who should have made the whole messy situation disappear. Fuck, he'd even changed his name, paid another someone another shit-ton of money to create a new identity and background for him while Trevor Tivan was buried beneath a pile of smokescreens and dead-ends. He'd climbed to the top, slowly eliminating all competitors, one way or another. Sometimes he'd gotten his hands dirty. Sometimes he paid someone else to get their hands dirty. He'd thought the ugly incident was completely behind him, completely hidden and buried in his shadowed past.\n\nApparently, he had thought fucking wrong.\n\n\"Get Maverick on the line,\" he barked to the blundering Parsons, inept but loyal to a fault. The idiot was blind to the reality of his truer nature, and Trevor preferred it that way. He enjoyed surrounding himself with nitwits and fools. It made manipulating them so much easier. The tall, stringy man with thick-rimmed glasses would do anything Trevor wanted; fill any role required; without asking a single question.\n\nBefore long, the smirking blond General was displayed on the screen in front of him, the mahogany office in the background gleaming with golden trinkets and an obnoxiously large shadow box. The man strutted about like a fucking peacock. It was disgusting, but he was just another tool, easily controlled and manipulated.\n\n\"Tell me you've got this under control,\" the Alpha growled threateningly, a snarl lifting the corner of his thin, cruel lips. Ivy had inherited her emerald eyes from her bitch of a mother, and Trevor's own black glare gleamed with malice.\n\n\"She's not going anywhere, sir,\" Maverick drawled, all but polishing his nails against his chest. Fucking peacock.\n\n\"And her mate?\" he ground out from behind gritted teeth. The Lt. General had caused him enough trouble as it was, even before he had decided to claim his fucking long lost daughter. God, he hated an incorruptible Officer. The reports of Nelson's death had thrown him into a rage, resulting in more than a few shattered priceless antiques. As if the situation in Torrin hadn't been causing him enough of a headache, now his little Omega bitch of a daughter had come back from the dead.\n\nThat motherfucking Beta fuck. Vincent Emmerson had been the one to keep her hidden away, he was sure of it. He was the only one ballsy enough to try to defy him, his pathetic love affair with Aurora likely guilting him into raising the bitch as his own. Then, just as the problem was getting ready to resolve itself, with the girl on the verge of her first estrous in the middle of a base full of Beta grunts, fucking Hunter had swooped in like some tedious superhero and had whisked her back to safety.\n\nIt was goddamned disgusting.\n\nTrevor had two options. He could take the Omega back, claiming her as his long-lost daughter. It would take quite a bit of fabrication and would mean shelling out another small fortune for someone to create a plausible backstory, but the press would have a field day with that one. A family reunion of the most tragic type. Nothing beats the shock of a suddenly single father. The popularity points alone might be worth keeping the little deviant alive. Of course, her savior would have to go, adding an even more heartbreaking layer to the sad, sad story.\n\nOr, he could kill the wayward couple and be done with it.\n\nDecisions, decisions.\n\n\"Bring her to me,\" he snapped at the peacock's gleaming, tan face.\n\n\"And her mate? Hunter will certainly be a force to be reckoned with. Especially considering the fresh pair-bond. He will fight to his death to protect the little trouble-maker.\"\n\n\"Then fucking kill him!\" Trevor roared, disbelief poisoning the sharp edge of his words. Was the man a complete moron? \"You have weapons there, I assume? You have an entire fucking army at your disposable, do you not? Or are you really that fucking inept?\"\n\nMaverick bristled and cleared his throat. \"Most of the Officers on base are... quite loyal to the Lt. General.\"\n\n\"What are you telling me, Maverick? Get to the fucking point,\" Trevor snapped. He was at the end of his rope with this piece of shit, and he had a long list of corrupt officers on his payroll who would be happy to take his place within days.\n\n\"I want the girl.\"\n\nSurprised, Trevor looked up. \"Unless my memory has failed me, I seem to recall that you have an Omega already. A pregnant one. That you insisted on dragging to Torrin with you.\"\n\nMaverick's mud-brown eyes gleamed greedily. \"I never claimed her, sir. And quite frankly, she... bores me.\" He hesitates. \"Ivy has a bit more... fight in her.\"\n\nAh. Now he understood. He was aware of the rumors of Maverick's bedroom antics, although he couldn't give two shits about which of his men were sadists and perverts. People often told him things he didn't really care to know. He had a trusting face, apparently. But he had found that information could be as powerful and valuable as currency, and he stored it away in his brain like cash in a bank.\n\nHe paused before answering, considering. A pair-bond was an irritatingly mysterious link between an Alpha and Omega. Most pairs were arranged, as Omegas were thought of as rewards for top military officials and political figures. Some, like himself and Maverick, did not always choose to solidify the bond by claiming the Omega gifted to them as mates. Those who did, shared life-long connections, some even strong enough to occasionally pass intense emotions through the bond.\n\nVery rarely, a fated pair-bond would occur. He had heard others refer to these as soul-bonds, although Trevor had always scoffed at the term. As far as he knew, these so-called fated bonds seemed, for whatever reason, to be far stronger than your regular, run-of-the-mill pair-bonds. There was no textbook or scientific literature on this type of thing. No one really knew how a fated mate was recognized, although there was some speculation over especially compatible scents. Nevertheless, when a fated pair-bond lost a mate, the only way the widowed partner could survive was to be mated with another, as a surrogacy of sorts.\n\nFrom what he had just read on his daughter's file, it seemed Hunter had claimed her as his fated mate. What did it matter to him if Maverick decided to step in as her surrogate Alpha, once Hunter had been disposed of?\n\nActually, the more he thought about it, the better this option sounded. Maverick would help him control the girl. Break her into submission, even. After their little reunion, he would make a grand show of bestowing a very capablesurrogate upon the poor, grieving thing. He would need to keep her heavily sedated, anyway, to prevent her from disclosing any traumaticexperiences she might recall. Pharmaceuticals these days could do wonders for the understandably severe mental condition brought about by her tragic past. Forced into the army by the overbearing man who had kidnapped her at such a tender age, raised among crass and treacherous Beta soldiers. Then rescued by a fated mate, only to have him torn from her arms before his claiming mark had even fully healed. So sad. She might have developed all manner of debilitating psychological disorders. PTSD, psychosis, traumatic amnesia. Nothing a regular diet of barbiturates and benzodiazepines wouldn't be able to fix.\n\nNothing his competitor, Senator Byron, could do would even come close to the widely circulated drama that would take place in the wake of her discovery.\n\n\"Fine. Anything else?\"\n\nDeciding not to wait for an answer, a heavy hand came down on the videoconference control, effectively severing the link between his office and Torrin's commanding General. He leaned back in the luxurious leather seat; a throne built for a king. That's what he was, or soon would be. An elected King, with a plan in motion to secure Lostra's place, and as such, his own, as ruler of the free word. And now the little, foolish girl he had thought long dead would help ensure he reached new, previously unattainable heights.\n\nLounged comfortably in the massive chair, he let his thoughts drift to that night all those years ago, when he had caught Aurora trying to leave and had come clean about that Beta fuck who had promised to take her away from all the abuse, boo-hoo, who had been planning to give her and their daughter a new life, a life without fear or violence or threats. \"I'm leaving,\" she had told him, her pathetic little suitcase barely clasped with a flowery blouse trailing behind like a dog with its tail tucked between its legs. That ungrateful little bitch. And the terrified little girl who would grow up to be an Omega in disguise, who had been glaring at him as she clutched the hard wood of the staircase banister, ready to bolt at any sign of trouble. Her mother had coached her well.\n\n\"You're not going fucking anywhere,\" Trevor had roared, tearing the little grey suede suitcase from her delicate grasp and flinging it across the hallway and into the very banister his daughter clutched so desperately. The girl had yelped and scrambled out of the way, just barely in time to avoid being thrown down two stories.\n\nIt had taken only a single, severe hit to the face and her cunt of her mother had collapsed, bleeding and writhing on the floor at his feet. Disobedience would not be tolerated, and daring to leave him for another, a fucking Beta, was a death sentence as far as he was concerned.\n\nThe girl behind him was wailing for her mother, and suddenly, he had felt the sting of a sharp blade sink into his side. He staggered into the wall, clutching the handle of a sharpened kitchen knife the little tyke must have grabbed before they had tried to make their escape. Blood seeped from between his fingers as he yanked the blade out and rounded on the little quivering thing, her bravery crumbling now under the violence of the angry Alpha. He still remembered how her delicate little neck had felt in his grip, how she had uselessly clawed at his hands and forearms as her butterfly pulse ever so slowly fluttered to a stop. He'd taken a tank of gasoline around the bottom level of their three-story house and had gleefully thrown a lit match over his shoulder as he walked out the front door.\n\nWhat a brave little survivor, his daughter.\n\nNo bodies were recovered from the ashes of their home, but it was suspected that all three loving family members had perished in the angry flames. Trevor had melted into the cold, winter night, calling up contacts and trading in favors until he had secured a new identity: Ethan Hickson, a private man, a champion of the people, who fought for populist views and gained incredible support in a very short amount of time. And so here he was, on the cusp of ultimate power, a wrench in the form of a tiny, insignificant Omega about to be thrown into the cogs of his carefully laid plans.\n\nHe'd take the wrench, and he'd turn her into a pawn. A chess piece, to be played by his masterful hand.\n\nFucking hell, how he loved to play this game. And he was so. Fucking. Good at it.\n\n.......................................\n\nIvy stood in front of the full-length, gold framed mirror tucked neatly in the back of the ridiculously large dressing room, staring quizzically at a girl she did not recognize. Weeks without her daily runs had softened her normally boy-ish frame. The two hours she spent every day doing body weight exercises while she was relegated to the gilded cage of her living quarters in the Alpha barracks had mostly balanced the decadent meals she was now eating. Even still, the slightest hint of an hourglass figure now graced the soft lines of her silhouette.\n\nHer hair, normally braided and worn up in a messy bun, held together by about a dozen or so elastic hair ties, now hung in a cascade of gentle waves. Her full lips, no longer chapped and colorless, now pursed in a silken pink pout. Even the severe emerald color of her eyes appeared to have melted into more of a sea-glass green.\n\nHe was tenderizing her. Once deceptively small, yet wickedly tough, she now appeared delicate and ethereal. More like the fragile, submissive Omega she was supposed to be. The thought made her put her hands on her hips and roll her eyes.\n\nShe glanced down at the simple white dress he had selected for her. He preferred her in white, appreciating the way the tan color of her skin contrasted with bright garments. Strapless, the luxurious material clung to her in all the right places until it hit her hips, where it flowed out into an excess of material that twirled and swirled around her when she moved. Ivy thought it ridiculous, but at least it gave her the freedom to move, unlike the first stupidly tight outfit he had picked out, which she had immediately rejected.\n\nThe long-awaited ceremonial dinner, where she was supposed to be presented as Hunter's newly claimed Omega, was unfortunately rapidly approaching. The dreaded affair had been postponed after the disastrously attempted base takeover, and then again for the arrival of that asshole Maverick-dude and his wayward pregnant Omega, Aella. Poor girl. She actually wanted to be pair-bonded to that piece of shit, abusive dickface. And not just that... He had brainwashed her into thinking she wasn't deserving of it! Her eyes were drawn to the hideous, swollen claiming marks Hunter had made during her first estrous, when his teeth had bit through skin and sinew to leave marks that would scar and forever brand her as his.\n\nHer hand flew to the hated place just below her sternum where the pair-bond thrummed pleasantly, reminding her how lucky she was to be mated to such a strong and capable Alpha, one who had gone to such great lengths to make her his own.\n\nTotal. Fucking. Bullshit. More than anything, she wished she could go back to her days as an Army medic, back in her little shabby med tent on Chid Forward Operating Base. Back when Kentucky had been her best friend instead of a lying, traitorous little shit, and she had been the reluctant supervisor of her eight unruly, but loyal, Beta boys.\n\nWell, seven, she guessed, if you left out Kentucky.\n\nA pang of guilt inexplicably churned in her gut. She wasn't completely ungrateful, even though she had certainly been acting like it. Sort of. And she wasn't completely stupid, either. If Hunter hadn't been there back in Chid, when those Torrin Alphas had had her surrounded, she would have been a flayed piece of rotting dead meat right about now. And if he hadn't taken her away from her Betas before the heat suppressants she had unknowingly been taking since adolescence had worn off and she had fallen into estrous, she would have, most likely, been torn to shreds by the men and boys she'd considered family. She was begrudgingly indebted to the brute for saving her from certain, horrible destruction.\n\nStill. She now faced a bleak future of subservience, and she wasn't yet convinced that she was any better off.\n\nAnd yet... If she were being completely honest with herself, Officer Muscles had, despite her greatest efforts, started to grow on her. More like, he was slowly burrowing his way under her skin. She liked the way he looked at her, like she was the most important thing in the entire world. Even though she was sure that, deep down, he must be disappointed that he had claimed her before learning just how difficult she could be. She liked the way he purred for her, liked the way he touched her. Even when she hated him for stealing her away from the life she had loved, for keeping her locked away like some delicate bird, for forcing a pair-bond on her without even allowing her to get to know him, she didn't really hate him, hate him. Just... you know... hated him.\n\n\"Ivy.\" Her Alpha's deep voice resonated from across the room, and resigned, she sighed and spun on her heel to go parade herself in front of his critical, storm-cloud eyes. They gleamed with appreciation as his piercing, lust-filled gaze raked her from head to toe. She could smell his arousal, the scent distinctly masculine, distinctly Alpha, but also completely unique to Hunter and irritatingly irresistible. Without realizing it, she had taken a step closer to him.\n\nThe beast sat up from his perch on the side of the massive, four-poster bed that dominated this side of the room, reaching her in two of his giant strides. His hand came up to cup her jaw and lifted her gaze up to his as his thumb grazed her lower lip. She parted them slightly, her tongue darting out to swirl around the thick pad. Heat pooled in her core and her nipples tightened. His arms came around her, lifting her to carry the writhing ball of sex-mush he always turned her into and laying her out beneath him on the comically large bed they now shared.\n\nHis forearms framed her head, supporting his weight, as his knees easily parted her thighs and he settled himself between her legs. Ivy's eyes fluttered closed as a thick finger stroked her pantiles pussy, skimming her slick folds, his thumb finding the small, sensitive pearl at the apex of her sex. \"Eyes, little Poison,\" he growled, the dominating sound sending a little thrill through her core. Not for the first time, she cursed her biology as her gaze obediently found the dark pools of his expanding pupils. Not realizing that he had already freed himself from the smooth fabric of his black dress uniform, she gasped as he buried himself completely inside of her in one powerful thrust.",
        "Her hands came up to grip his shoulders as his fell to her hips, his calloused fingertips digging into her flesh to hold her in place as he rutted between her legs. Tension coiled deep in her core and she bit her lip to keep from crying out. His arm slipped beneath her knee and lifted, and she groaned as his thrusts deepened, the tip of his cock grazing her cervix with every deliberate stroke. Blinding white light flashed before her eyes as she reached the peak of a powerful orgasm, but he was relentless. Hooking her leg over his shoulder so he could plunge even deeper, he reached between them and found her clit, drawing mewls and moans from her lips as another climax swept her away, shattering her into a million pieces.\n\nThis was always how it was with him, now. There were times she hated it, a deep-seated resentment filling her with impotent rage when she thought of how skilled he was at manipulating her. The way her body never failed to respond to him, regardless of what she was thinking or feeling. Even worse, and even more difficult to admit, was the fact that his inarguable command of her body's reactions provided her with a measure of relief. As much as she hated him for taking away the choice she should have been allowed in her claiming, there was a sick part of her that didn't want the choice. Reacting to his dominance with the full force of millennia of evolution seriously limited her role in this new life he'd dragged her into, kicking and screaming. And without the responsibility of being an active player in this game, she was free to accept the pleasure he offered up without despising herself for giving in.\n\nBecause, in truth, she had never given in. At every turn, she had resisted and fought him, and it changed nothing. There was no shame in enjoying Hunter's total mastery of her pleasure, because she had nothing to do with it. There was a terrible kind of freedom in her loss of control.\n\nThe Alpha threw his head back and roared, the sound reverberating off the navy-blue walls of her beautiful cage, eliciting little sparks of electricity to dance across her skin in response to her mate's pleasure. Hot waves of come pumped into her as his knot expanded, locking her into place beneath him.\n\nLike he always did, he spun them around until he lay supine, Ivy sprawled on top of him with her ear pressed against the scratchy uniform of his chest. Practically vibrating with involuntary contentment, she closed her eyes and waited for his purr to carry her to sleep, the thick fingers gently massaging her scalp a complete contrast to the rough way he had just fucked her. Just before she slipped under, her gut churned with unease, a single thought circling the shallows of her conscious mind like a bloodthirsty shark. She'd been feeling it since breakfast this morning with her new, over-the-top but entirely kind and sincere Omegan companion. There was nothing solid she could point at, no specific behavior or event that could possibly explain the undercurrent of nervous energy she'd felt while watching Aella pick at her egg-white spinach omelet (blech), but the ominous feeling of foreboding remained all the same.\n\nSomething was very wrong.\n\n.......................\n\nShe awoke with a jolt, springing from where he had tucked her under the covers, her eyes frantically looking around for her weapons.\n\nOh that's right. She had no fucking weapons. She rolled her eyes dramatically. Like she could really do any real harm with a teeny-tiny hand gun, given the fucking wall of personal guards that'd been plastered to her and Aella since their casual foray into main medical.\n\nExcept... She'd been able to pull off multiple escapes armed with nothing more than a dull butter knife and dinner tray in the past. There was at least a little bit of harm she could do with a weapon that was actually meant to be a weapon.\n\nOkay fine, real harm would be an inevitability if she ever got her hands on a gun.\n\nShe growled angrily, stalking the room, hunting for something she could use to defend herself, without pausing to think about why she might need to launch such a defense. Some sinister thing from her subconscious was wrapping cold fingers around her throat, and she found herself struggling to breathe.\n\nHUNTER! \n\nShe screamed his name in her mind, silently imploring him to return to her. Something was wrong. Something was fucking wrong, and she needed her mate close. He would protect her.\n\nShe froze in her tracks, struck dumb at the thought that had just flashed through her head. FUCK! What the fuck was happening to her?!\n\nBefore she had a chance to follow that particularly shitty thought to its unsettling conclusion, a frantic knock came from the other side of the door to Aella's adjoining room. Ivy rushed to it as she heard Aella's voice, weak with pain, call her name from the other side. Bile tried to climb its way up her throat, and she was covered in a cold, dread-induced sweat. Her hand gripped the handle and pulled hard against an un-budging door.\n\nShit.\n\n\"Aella!\" she screamed, pounding her fists against the thick wood. \"Aella, open the door!\"\n\nShe heard the Omega on the other side fumble with the locks, and then a small, impossibly pale face was in front of her. Beads of sweat and tears ran down her cheeks in rivulets. Hair the color of the sun was plastered to her forehead, and the girl was bent over, gasping for breath. \"Ivy!\" she breathed. \"I think something's wrong with the ba-\"\n\nBefore she could finish the sentence, Aella fell to the floor, unconscious. \"FUCK!\" Ivy crouched down, hooking her hands underneath the blonde Omega's thin arms and dragging her further into the adjoining room. Once close enough to the hallway door, she pressed her fingers to the clammy skin of Aella's neck, momentarily relieved to feel a weak, fluttering pulse. She looked down at the girl's limp body, a cold shudder moving through her as she took in the blood that saturated the inside of the Omega's thighs. \"FUCK!\" she screamed again.\n\nIvy's knowledge of pregnancy related emergencies was limited. She had learned about them in training, but as there was very little need to practice obstetric skills in a combat field as the Battalion's only female, she considered herself rusty at best, useless at worst. Cursing under her breath, she moved to sit herself between the girl's legs and yanked up on the knee length cocktail dress now streaked and wet with blood. She pulled violently on Aella's lacy underwear, grateful for once for the flimsy garments' ability to tear easily.\n\nNo. No no no! \n\nAll blood drained from her face at the sight that met her. A word echoed in her brain, pulled somewhere from the depths of her catalogued training. Abruption. Somehow, she knew that's exactly what was happening. Aella needed a surgeon. She needed blood. She needed a cesarean section. And she needed it right. Fucking. Now.\n\nIvy jumped to her feet and ran to the hallway door, fists stained red pounding against the ungiving wood. She knew Beta guards were in the hallway, tasked with watching over the two rooms. Aella's for protection, and Ivy's because of her frequent escape attempts. Sure enough, she heard bootsteps coming down the hall and rushed back to the unconscious girl, her palm tapping Aella's cheek in gentle slaps.\n\n\"Wake up, girl. Come on, Aella, wake up. WAKE UP!\" She dug her knuckles into the Omega's sternum and rubbed, elated when delicate lashes fluttered open. \"That's it, look at me. Look at me, Aella. Focus. I need you to stay awake, okay?\"\n\n\"What's going on?\" she heard a voice ask nervously behind her. She spun around, glaring at the pale Beta guard standing with his hand on the knob.\n\n\"What the fuck does it look like, genius?! If you don't get this girl to medical in the next five fucking minutes, both she and the baby are going to die. You get me?\"\n\nThe guard nodded rapidly, his fingers fumbling with the radio at his shoulder. \"I need a stretcher team to Alpha Barracks room 4, stat!\"\n\nThe next half hour passed in a blur, and Ivy found herself outside the operating room doors, a surgical mask hanging from her neck, blood drenching a pair of hastily thrown on scrubs. Tears streaked down her face, and she swiped at them angrily, smearing crimson across her cheeks.\n\nAt first, she had refused to be excluded from Aella's medical team. Her knuckles would bruise from punching the jackass Beta who had tried to shove her back in his fucking face, and her shoulder ached from where she had driven it into his stomach. After that, someone had quickly handed her the light blue scrubs, and she had followed Aella into the OR without a word from anyone else. It wasn't until they had pulled a limp and ashen baby from the incision in her stomach that Ivy had backed away from her side, opting instead to reach for the tiny creature and help resuscitate the precious thing.\n\nIvy looked down at the too-small infant nestled into the crook of her arm, pink now and bundled in a warm, blue towel. The girl was four weeks early and couldn't weigh more than five pounds, but she was alive. Aella was still lying cut open on the table, a full team of surgeons and medics working frantically to stop the hemorrhage that had caused her vitals to go haywire shortly after the cord had been cut from the failed placenta. No one had come to collect the infant, and knowing the thought was illogical, Ivy had taken her out of the room, not wanting her to be present while her mother lay there dying.\n\nThe pair-bond thrummed suddenly with an intensity that took her breath away. She turned at the sound of pounding bootsteps, not surprised to find Hunter stalking down the hall toward her, his features twisted with concerned anger.\n\n\"Hunter!\" she cried, both in relief and frustration. She choked back a strangled sob as he took her in: Her blood-stained scrubs, her pale face, the infant wrapped in her arms. Where had he been?! Why had it taken him so long to get to her? She tried to be angry. Anger pushed back the rest of the dangerous emotions threatening to break through to the surface. Fear. Despair. Helplessness.\n\nHunter wrapped his thick arms around her. She was pressed against his rigid chest, the giant squeezing her so hard it was almost painful. Almost, but not quite. More than anything, it was comforting, and Ivy felt herself relax into him, the coiled tension in her muscles slowly melting away. Hunter would take care of this. He would take care of her.\n\nWhere the fuck were these thoughts coming from?!\n\nShe heard a commotion, the sounds of many boots pounding down the hallway and stopping when they reached the OR doors. Hunter pulled away and turned, using his big body to shield her from whatever was behind them. Ivy peaked out from under his arm, noticing how his hand was gripping the gun at his side, and held the infant closer to her at the sight of Maverick-dude and a small unit of Beta MPs surrounding him.\n\nHunter growled threateningly, the sound sending shivers up and down her spine. For a moment, Ivy was confused. Despite being an abusive asshole, Maverick-dude was still Aella's.... boyfriend? Alpha? Partner? Whatever. And the father of the child she held in her arms. And Hunter's direct superior. So why was Hunter acting like they were under attack?\n\nThen she saw the look on Maverick-dude's face, and her blood ran cold.\n\n\"Hunter,\" the older Alpha drawled, apparently unfazed by the rumbling, warning growl coming from her Alpha. \"Hand them over, and I promise, I won't hurt the girl. Much,\" he finished with a low chuckle.\n\nHer mind stuck on one word. Them. Fire replaced the ice in her veins, and her hands itched for a weapon. He wanted to take her away from Hunter. Why? What did he want with her? Did he think that this was somehow her fault? The pair-bond assured her it wouldn't happen, that her Alpha would protect her and keep her safe. Still, a little ammunition wouldn't hurt.\n\nHunter's growl deepened, and Ivy subconsciously took a step back. \"If you so much as lay a finger on her, Maverick, I will tear you apart with my bare hands.\" His voice was low and calm, but it sent chills through to her core, just the same.\n\nMaverick-dude cocked his head to the side, a smug smile on his disgustingly handsome face. \"I really don't think that's going to happen. Go ahead, Logan. Try to stop me. I'd love an excuse to take you out.\" The older General sneered, and she could feel Hunter tense, every ridiculously huge muscle in his body readying for battle. \"One way or another, the bitch is coming with me.\"\n\nHunter roared, the sound shaking Ivy to her bones. It was the most terrifying sound she had ever heard, and she found herself cringing back, holding the baby protectively in her arms, despite knowing the threatening sound wasn't meant for her. Hunter leapt forward, ramming his powerful body into Maverick's smaller frame. She heard the sound of a strong fist hitting flesh, the awful crunch of some broken bone. Maverick screamed, the high-pitched wail almost making her laugh.\n\nAdrenaline coursed through her veins. A familiar feeling spread through her like a slow-moving fire, and time slowed. She shifted the infant so that it was nestled securely into the crook of one arm, and rushed toward the closest Beta guard, kneeing him in the groin and using her free hand to wrap around his holstered side-arm.\n\nShe turned, aiming the gun at the guards who were closing in on them from all sides. \"Back the fuck up,\" she growled, and the Betas stilled, looking to one another as if unsure about what to do next.\n\nThat's right, motherfuckers. \n\nThe sound of gunshots echoed through the otherwise empty halls, and Ivy gasped, nearly dropping the baby. Without looking, she knew that Hunter had been shot. She had felt it. Her stomach dropped sickeningly, and she turned instinctively, running toward her mate.\n\n\"HUNTER!\" she screamed, watching in terror as the Alpha continued to advance on Maverick-dude, despite the blood slowly spreading across the chest of his uniform. Another shot rang out, and Hunter staggered, falling to his knees. Ivy ran toward him, the Betas clearing the way for her despite the fact that her gun was no longer aimed at them. If she had spared any attention to them at all, she would have seen looks of distress and hesitation. Hunter was a popular Alpha among the Betas, having made some recent changes that had benefited all enlisted soldiers on base, such as the newly commissioned mess hall and higher-quality food. The Betas were loyal to the Lt. General, and although they were just following orders, they had not expected the violence that had just erupted.\n\nDropping the gun hastily, Ivy reached her Alpha just as he collapsed to his side. Frantic, she pushed him onto his back, taking inventory of his injuries. Three bullet wounds. One in his shoulder, one in his chest, and one in his abdomen. He was bleeding buckets of blood.\n\nFuck. FUCK!\n\nIvy's free hand trembled as she held it over his chest, trying to determine which wound was more serious, which one she needed to put pressure on in order to staunch the bleeding. She pushed her palm against the wound on his chest, pressing down hard. Hunter grunted. His thick fingers wrapped around her wrist. Wild, storm-cloud eyes held hers, and her chest heaved in frantic breaths at the sight of his pale face.\n\n\"Run, Ivy,\" he rasped. He coughed then, and icy dread settled in her gut at the sight of the blood filling his mouth. She shook her head, barely noticing the tears running down her face. There was no fucking way she was leaving him here.\n\n\"I need a medic!\" she screamed, turning briefly to look at the startled and stricken guards. \"Get a fucking medic!\"\n\nA hand on her cheek brought her attention back to Hunter. She looked down at her palm, pressing into the wound on his chest. Blood was seeping between her fingers and spreading slowly across his uniform. He would bleed out soon if someone didn't come soon. The thought made her sick to her stomach, and her eyes burned. Hunter's grip on her jaw tightened, his fingers digging into her cheeks painfully. He lifted her head to face him, his grey, tempest eyes once more locked on hers.\n\n\"RUN!\" he roared and pushed her back, away from him. The pair-bond sliced into her painfully, urging her to get to her feet and follow his order. Ivy choked on a sob. She didn't want to leave him! He was bleeding and hurt and might die, and it wasn't fair! His command left no room for disobedience, and her legs, of their own accord, lifted her from the floor. She looked up, furious to find Maverick-dude sneering down at them. Murderous rage flooded all other thoughts from her head. She wanted to kill him, slowly and painfully. Hunter's command to run overruled her bloodlust, however, and she turned, unwillingly following his order to flee.\n\nShe got as far as the end of the hallway, the babe still clutched in her arms, sleeping soundly despite the chaos erupting around them. A chillingly-familiar figure stepped out from around the corner, stopping Ivy mid-stride.\n\nHis frame had shrunk a little. His normally tan skin had paled after weeks of being kept in a dark room. But his amber eyes had the same deceptive warmth as before, and familiar lips curled up into an unsettling smile.\n\nKentucky.\n\nUnable to stop in time, she crashed into him. He gripped her arms, steadying her before she fell. She felt a hand close over her mouth and there was a sudden prick of pain in her neck.\n\nWell, shit.\n\n\"So nice to see you again, Poison,\" Kentucky said softly as the world tilted and blurred. Her limbs grew heavy, and she didn't struggle when someone reached out and plucked the infant from her arms. Her knees buckled. The hand covering her mouth fell away as she crumpled to the floor.\n\nDarkness crawled in around the edges of the world. Her thinking slowed, her mind going blissfully blank. The last coherent thought she had before the darkness swallowed her up was of Hunter. He had to live. She would come back and save him, because he couldn't die.\n\nDon't die. Please, Hunter, don't...\n\nShe sank below the surface, drowning in darkness.\n\n.....................\n\nShe awoke suddenly, almost violently, and jackknifed into a sitting position with a gasp. Quickly, she took note of her surroundings and did a mental inventory of her injuries. She was in a small but luxurious bedroom. She was tucked beneath the dark grey sheets of an unfamiliar bed, covered with a heavy, off-white comforter. The walls were... odd. Dark wood cut between sections of cushioned paneling. Two lamps let off a soft, yellow glow on either side of the bed. The wall behind her curved up to the white ceiling in a concave shape.\n\nHer head felt fuzzy. Her mouth was impossibly dry. Her shoulder ached, and she remembered ramming into the Beta who had tried to keep her away from Aella. The knuckles on one hand were bruised and sore, and there was an ache in the side of her neck. She nearly shrieked when she realized that her bloody scrubs had been replaced with a pair of skimpy white silk pajama shorts with a lace hem and a tiny matching camisole.\n\nShe'd had it through the fucking roof with people undressing her in her sleep. That shit had to stop.\n\nShe swung her legs over the side of the bed, took two steps, and collapsed on the finely carpeted floor. Cream colored, she noted dazedly.\n\nWell, shit.\n\nShe heard the click of a door opening, and two shiny black boots stepped into her line of sight. She turned her head to look up at the Alpha glowering down at her.\n\n\"Hello, fuck-face,\" she greeted the General towering over her as she pushed herself up to a sitting position against the bed. He grinned, and a flash of anger hit her so hard it made her dizzy enough to pass out. It was either that, or the drugs in her system. Or both. \"What the fuck did you give me, asshole?\"",
        "Maverick-dude chuckled softly. \"You know,\" he said, in what she had come to recognize as his trademark, lazy drawl, \"you might want to start reeling in your attitude toward me, little poison.\"\n\nIvy flinched at his use of Hunter's moniker for her. It sounded dirty coming from his lips. \"Oh yeah? And why is that, big asshole?\"\n\nMaverick crouched in front of her. His hand struck out, quicker than she could react with her reflexes dampened and dulled, and closed around her throat. Her head was forced back against the frame of the bed. Her heart hammered frantically in her chest as her hands came up to grip his wrist, although she had no chance of tearing his hand away. He smirked, and as his grip tightened, closing her airway, it took everything in her to focus on keeping her panic at bay and her narrowed eyes on his.\n\nHe leaned in closer, the rough stubble of his jaw rubbing against her cheek. His breath was hot on her ear. \"Your dead Alpha may not have disciplined you,\" he dropped his voice to a whisper. \"But you're mine now. And I will.\"\n\nHer blood ran cold, the contents of her stomach threatening to reintroduce themselves. She tried to focus. Hysteria was steadily clawing its way in. She couldn't breathe; she couldn't think. Hunter wasn't dead. He couldn't be dead. She would know! Wouldn't she be able to feel it? Wouldn't she know? She tried to feel for the pair-bond but could do little more than thrash and bite at the Alpha still gripping her by the throat. Sweat dampened her forehead. Fuck! This couldn't be happening.\n\nDark spots swam in her vision, and her arms slowly dropped to her side. The moment she stopped fighting and went limp, Maverick released his grip and she fell to her side, sucking in deep lungful's of air. She could feel him watching her. She wanted to scratch his eyes out, to scream and cry and kick him in his fucking face until he was unrecognizable. Instead, when she had caught her breath, she painstakingly sat back up and met his glare with a fierce one of her own.\n\n\"Hunter's not dead,\" she said softly, pleased at the flash of fury she saw in his shit-brown eyes. \"He'll come for me.\" She didn't realize how true her words were until she said them out loud. Hope flared up like an impossibly bright flame, spreading warmth through her chest. He really was alive, she knew it. And he would come for her.\n\nNot that she would wait for him to get the party started.\n\n\"If he doesn't kill you,\" she smirked, \"then I will.\"\n\nShe braced herself for the blow she knew was coming. Predictably, his arm shot out as he backhanded her, and her head cracked against the wooden frame of the bed. She turned back to him, smiling as she licked the blood from where her lip had been split. She could see his eyes darkening with anger as he barked an order to an invisible someone on the other side of the sleek white door. The thing behind that anger, though, was what made her smile widen.\n\nFear.\n\nThey both looked up as the door opened and a Beta stepped inside. It took a few seconds before her blurry vision and clouded mind cleared enough to realize who it was. Maverick smirked knowingly and stood up, leaving her alone with her old pal with an ominous click of the shutting door.\n\nKentucky walked forward and got to his knees in front of her, dropping a small medic bag to the floor next to him. His amber eyes searched her face, taking in her split, swollen lip and what would undoubtedly become an ugly bruise across her cheek bone.\n\n\"Are you okay?\" he asked quietly.\n\nThe question made her laugh. \"Am I okay? Seriously? Fuck you, Kentucky.\" She hissed as the back of his fingers came up to graze over the raised mark on her cheek. He didn't fight her when she shoved his hand away, although the effort made her dizzy. Instead, he reached into the bag and took out a bottle of water and unscrewed the cap, handing it to her. He was silent as she drank half of it without pausing, watching her closely. Instead of giving it back to him when she was done, she held it tightly to her chest, as if he would try to take it away from her.\n\nShe glanced up, noticing for the first time the constant whirring noise that seemed to vibrate up through the floors. A small window she hadn't seen before showcased a bright blue sky and picturesque fluffy clouds. Clouds that were rushing past them.\n\nPlane. We're on a plane.\n\n\"Yes, we're heading back to Lostra.\" Startled, she looked up at Kentucky, who was still watching her with those clear, amber eyes, his expression unreadable. She must have said that out loud.\n\n\"Just do whatever it is you're going to do, Brad.\" She tried to hold on to her anger, but she was so tired. Kentucky working for Maverick-dude didn't exactly surprise her, for some reason, but her mind was too unfocused to figure it all out. If he was going to give her more drugs to knock her out, she wished he would just do it, so she didn't have to look at him anymore.\n\nConfirming her suspicions, Kentucky reached into the bag to pull out a small, pre-filled syringe and uncapped it. She stared at the single drop of clear liquid at the very tip of the needle.\n\nI'm coming for you.\n\nShe startled and looked up, her eyes darting around the room. Was she going crazy? She looked hard at Kentucky, her eyes narrowed.\n\n\"What?\" he asked, looking around the room just as she had done. \"What is it?\"\n\nI'm coming for you. \n\nShe heard the voice again, and this time, there was no doubt. It was Hunter, and it was as clear as if he stood in the room with her. She looked around again, half-expecting to see him standing there. The low, barely-there rumble of the jet engine changed into something else, and she could have sworn it was his purr she was hearing. A deep sense of calm seeped into her.\n\n\"I'm sorry,\" Kentucky said, bringing her attention back to the Beta traitor and the needle he held out in front of her. He took her hand, pulling her arm out between them, and cleaned off the inside of her elbow with an alcohol wipe. Finding a thick vein with a glove-covered finger, he sank the syringe into her arm. The viscous fluid burned as it pushed into her bloodstream, but she didn't flinch.\n\n\"No, you're not,\" she said, her head already lolling to the side from the effects of the second dose of whatever the hell it was they were giving her. She sighed and closed her eyes. \"But you will be.\""
    ],
    "authorname": "ReckingBall",
    "tags": [
        "alpha",
        "omega",
        "omegaverse",
        "military",
        "non-con",
        "noncon"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/poison-ivy-ch-06-1"
}