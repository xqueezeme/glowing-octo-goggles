{
    "title": "Four Nights Pt. 01",
    "pages": [
        "\"I'll do that,\" Tela answered with a sincere facial expression trying to hold back an army of tears that she knew were marching forward behind her warm brown eyes.\n\n\"I'm not asking you to try anything you don't want to, just to try something new. I want our intimacy back,\" Mick responded. The couple had been married for fifteen years, dated for a couple of years beforehand and had two gorgeous kids. Both bright, athletic, mature and in their teens. While neither Tela or Mick could realistically visualize the impact of divorce on the kids, Mick knew he was not ready to hang up his sex life.\n\nTela enjoyed sex, but between her business, the kids' activities and providing food and support for her family she was often tired and just wanted to collapse in bed at days end. When the two did have a free hour or two, she felt like they had to get busy quickly least there be an interruption, and to allow for her to tend to other chores. Her version of a quickie was interpreted by Mick as a fast fuck with pressure on him to perform rapidly. He yearned for the days when the day was spent fucking, with periodic breaks for meals, teasing and occasionally displaying their friskiness publicly.\n\nThe two had enjoyed sex in an elevator, Tela wasn't always bashful and had flashed her near perfect tits at truckers and college kids while riding along in a car with her husband. Usually he'd have a small vibrator planted deliciously next to her clit as she took pleasure in the thrill of exposure. Afterwards the two would recount the event, and often add a few what-ifs to the conversation. But these outings faded. Instead of once a week, it became once a year and then just a memory. Life interfered.\n\nTela and Mick had a good marriage. They rarely fought, equally approached household chores and exercised regularly. Both admitted when they did have sex it was enjoyable, but Mick wanted it more often and loved how it bonded them afterwards. The following day was always better and created a team feel. Several times they'd discussed the dwindling sex topic, vowing to change things. Instead, it seemed to make things worse. Sex went from twice a week to twice a month. More talking resulted and with similar results. Ultimately, Mick felt their relationship was depriving him of a sex life. It was a concession he was unwilling to take without combat.\n\nOn a Sunday afternoon, with both teens out for an arranged stay with other kids, Mick prepared an early afternoon dinner for his wife. Her favorite\u2014lobster, potatoes and bubbles. Tela was surprised and pleased with the attention. She suggested maybe they should twist in a quickie before the kids returned, and had no idea the pain it caused her husband. Inside, Mick thought to himself, \"Why can't she just seduce me? Without saying a word.\"\n\nWhen he replied with, \"Maybe later. First, I want to talk,\" he too had no notion of the sting she felt. Once engaged, sex came easily for Tela and often she wanted lots more, but until she opened to it there was an inner fear. She'd never admitted to Mick any of her fantasies. He'd told her several of his sexual based dreams, while she claimed to have none.\n\n\"Babe, we've talked about our dwindling sex life, and tried different things, but I feel like it has essentially departed from our relationship. The last time we had sex was 38 days ago,\" Mick stated tenderly while holding his wife's hand.\n\n\"Why do you always keep count?\" Tesa responded with a hurt voice.\n\n\"I don't. Instead, over and over I go to bed horny, wake up horny and know the day is so busy that we won't have a minute together. I'm sick of jacking off. I want to be held and drooled over. Other items in our life have much greater priorities, but, but I'm not willing to sacrifice sex to insure the kids get to practice on time, dinner is cooked and we attend all their sporting events. When we got married it was because of us, not to reproduce then leave us behind.\"\n\n\"Are you saying you want a divorce,\" Tela asked with quivering lips.\n\n\"No. I can't imagine that. What I'm saying is I'm not willing to give up sex because we place it so low in the priority list. I don't know if this means we need to hire someone, have an open marriage or something else. I just know something has to be done.\"\n\n\"Jesus Mick. An open marriage? Seriously? How do you think I'd feel knowing you're fucking someone else?\" Tela asked in an angry voice.\n\n\"That is why I wanted to talk. How do you think I feel having my sex life ended because it is valued so low in our marriage? Did you ever think about asking how, nevermind. I, I, I don't want us to end. I love you Tela.\" Mick reached across and gave his wife a peck on the lips. She kissed him back with passion, then stood. \"Where are you going?\"\n\nTela didn't answer him, but instead started to slowly unbutton her top, tossing it off and her jeans promptly followed the flight path of her blouse. As did her bra and panties. Once naked she sat back down on the couch and slowly answered, \"They say you should argue naked. It felt like we could be approaching a disagreement, so I made a preemptive strike.\"\n\n\"I've read so many articles, talked to friends and I've been to a couple of different counselors.\"\n\n\"Honey, why didn't you tell me?\" demanded Tela with a look of deep concern.\n\n\"I thought I had, but when I talked with others I realized I hadn't told you how its ripping up my heart, and balls. And I wanted to have some way to fix us and not just complain. You know how I am.\" He was being honest, but had to admit her tits were distracting.\n\n\"Did people say we should get divorced?\" Tela asked in a worried tone.\n\n\"No. They said we had a problem. A decent problem, that needed to be solved. And there was some useful information in the articles.\"\n\n\"Do you want to tell me, or should I read them?\" Tela asked.\n\n\"Probably both. You know how I've shared my fantasies with you?\" Tela nodded affirmatively, so Mick kept going. \"The articles state that everyone has fantasies. Usually several and they change over time.\" Tela responded to this by pulling her knees up to her chest, and draping her arms over them. \"The articles or research note it's important for couples to be open and honest about this topic.\" Mick could see a repressed fear in his wife's eyes, but kept moving ahead. \"It doesn't mean couples have to enact the fantasies, but let their spouse know what things turns them on, and use it to add spice. They also note it's important not to get into a routine. I think we're in a deep rut.\"\n\nWith a cold seriousness, Tela responded, \"Do you think we have to live our fantasies to get out?\"\n\n\"I don't know. I just know we need to get out. Everything I read, and most of the counselors I spoke with, agreed a big dose of change was needed or our foundation would be cracked in multiple places.\"\n\n\"But not all of them agreed with this assessment?\"\n\n\"That's correct. One suggested we have a sexless marriage and instead look to religion to supplant our lost lust.\" To this comment, Tela did laugh.\n\n\"What did you do?\" she asked with a smile as she was realizing her husband was deadly serious about change, but was also desperate for a partner to change with him. Her anger was gone, and she realized how his opening up to her was rather endearing. Unconsciously, she'd raised her arms above her head and parted her legs a touch.\n\n\"I got up and walked out,\" Mick answered.\n\n\"Good for you,\" Tela smiled as Mick's eyes quickly wandered up and down her body. The looks didn't go unnoticed. \"What other options were suggested to you?\"\n\n\"One advised divorce.\"\n\n\"Did you walk out too?\"\n\n\"Kind of, except I told her that I sought professional help to find a solution for us, so thought it was best to move on.\"\n\n\"How many counselors did you see?\"\n\n\"Five that I talked with for more than an hour. They are like any other service. Its best to shop around, then when you find a good one, hold on.\"\n\n\"So, what do you think we should do?\" asked Tela.\n\n\"First, let me ask you that.\"\n\n\"I don't know. We obviously need to make more time for us. But, I know, we've said that several times before. Your thoughts?\"\n\n\"Ninety percent of the time, sex involves a quickie in the bedroom. Maybe, some toys to warm you up, we copulate and then shower. No second go. We've never had sex on the kitchen table. Its five years old. We've never had sex in our backyard. We bought the house eight years ago. I think we need to really shake up when, where and how we have sex. And I want to know your fantasies.\"\n\n\"Yes. I think you're right, we do need to shake things up. Do you still find me attractive?\" Tela asked.\n\nMick smiled broadly, then reached over and traced the tip of one finger lightly up and down his wife's outer pussy lips. His finger drew slow circles around her swelling lips then raised up to her hardening nipples. \"Yes. Very much so.\"\n\n\"And what do you think the solution is?\" Tela asked as she parted her thighs a bit more. Sitting in their living room, in the broad daylight, with her clothes shed, did add a charge she'd forgotten about. There was something exhilarating about the possibility of being caught or knowing someone was watching you be naughty. She recalled showing off her body to random truck drivers, and how she use to think of what they'd do to her, if given an opportunity. The brief thought sent a tingle to her pussy. She couldn't imagine ever revealing this thought to anyone.\n\n\"We need to create an environment that charges our sex life for the both of us. I think figuring this out will require some experimentation, and forcing ourselves to engage in adult fun outside of our rut.\"\n\n\"How do you propose we go about this? Have the counselor prescribe something?\"\n\n\"No. This is about us. We have to figure it out. Will you give me four nights?\" Mick asked.\n\n\"For what?\"\n\n\"Sex. Four nights to plan an evening of sexual entertainment, adventure and more. Sex outside of our usual romps, and something different each night. Tuesday, Thursday, Friday and Saturday night. The kids have practices on the first two nights, and my brother will pick them up and watch them til we get home. Friday the kids are staying home with your sister, and Saturday they are away at overnight games. I've got everything covered.\"\n\nAfter the agreement, Mick removed his shirt and crawled up between his wife's legs. \"You look hot. Can you feel how hard my cock is through my jeans?\"\n\n\"Yes.\" With that he kissed her full lips, and delicately teased her tongue with his, while grinding his erection into her mound.\n\n\"What do you want me to do?\"\n\n\"Take your pants off, and make love to me?\" Mick removed his jeans, but kept his underwear on. Tela could now feel his cock digging into her. So close to her entrance. She couldn't resist, and aggressively raised up her ass to press her mound into him.\n\n\"Tell me what you want me to do with my cock.\"\n\n\"Put it in me,\" Tela answered.\n\n\"Sometimes I want you to be crude. It can be a turn on.\" Mick asked again, \"Tell me what you want me to do with my cock.\"\n\n\"Screw me wild,\" Tela replied as she started to press her hips up harder.\n\n\"Tell me what you want to me to do to you, I think the magic word begins with an F.\" With these words floating out, Mick brought his lips to hers and kissed her for a prolonged period as the two savagely ground their groins together. It was almost, as if, they'd never sexed before, except he knew how kissing turned her on.\n\nBriefly, their lips parted, and Tela solemnly whispered to her lover, \"Please, fuck me.\"\n\n\"I'll reward that with a removal of my briefs.\" Mick replied, stood and stripped naked. When he returned to the sofa, Tela had pulled back her knees to present her sex to him, but he wasn't ready. Instead, he pressed his shaft against her slick opening and asked, \"What do you want me to do now?\"\n\n\"Fuck me.\"\n\n\"What turns you on?\"\n\n\"You, please. I'm so horny.\"\n\n\"Do you remember how hot you'd get when you'd flash your titties as we speed past those truckers?\"\n\n\"That was a long time ago. Put it in,\" Tela replied as she moved her hand down and tried to work Mick's head into her opening. He responded by pushing her thighs further apart and laying on top of her, so his cock remained pressed against her pussy, but with its head safely away from her entrance.\n\n\"Remember when we were in Napa, and late in the afternoon we chatted with the older couple. Think we were all tipsy from tasting, then you straddled the older guy we just met?\"\n\n\"Why are you bringing that up now?\"\n\n\"Because it was hot. It surprised me. You were wearing that mini-dress so when you straddled him he had a clear view of your panties. Were they shear?\"\n\n\"I don't know. I was drunk. Put it in. Fuck me like I asked,\" Tela whinned as Mick rubbed his against her vagina.\n\n\"I want us to be comfortable talking about our desires. Look at us just from this smidgen of sex talk. Imagine if he'd reached down, pulled your panties aside and started fingering you. I bet you wouldn't have stopped him.\" Tela responded by shoving up even harder and letting out a soft moan. Mick easily read the signs of her sexual inebriation, so continued. \"Remember the truckers you would flash when we were younger?\"\n\n\"Yeah, that was fun. Please. We can talk later. I promise.\"\n\n\"Did you ever think about stopping and having an unknown trucker fuck you? Or maybe two of them as one could have been sleeping in the back.\" Tela didn't respond, but also couldn't keep her bottom on the sofa. It felt like he was reading her mind. She was embarrassed at her wantonness, but the suggestions Mick was making had her craving sex. Her heavy breaths surprised Mick, and let him know he was tapping into an undisclosed fantasy. Slowly, he slid his shaft up and down between her wet lips, firmly rubbing her clit.\n\nMick kissed her deeply for a bit, then pulled his lips to Tela's ear and whispered. \"And we never talked about the New Year's party three years ago, when the Jones, Roberts and we played that dare game. After several rounds Phil and you had to make out, after stripping down to your underwear. All of us could tell his cock was hard as his briefs were tenting out. When the two of you started kissing I couldn't believe how you started to raise your ass up off the carpet and grind into him. What surprised me were two things\u2014one that I wasn't jealous at all and two that I wanted Phil to screw the hell out of you in front of everyone. Would you have liked that?\"\n\nTela had thought about that night several times and wished the evening had progressed differently. Instead, the other couple had halted the game and let all know the party was over. It was the Roberts' house, so all agreed. Separately, Tela had talked with Ms. Jones who was fine with the game, and disappointed the evening ended so soon. From this she gathered, there were no hurt feelings, but was too shy to request a second round. This didn't stop her from occasionally playing with herself and imagining things had gone much further. With Mick's seductive whispering, his rubbing of her genitalia and her thirst for sex she answered without thought, \"Ohh, yesss. I've wanted that for a while.\" Momentarily, a splinter of regret pierced her brain. \"I'm, I am just ...\" but that is all that flowed out as Mick adjusted the tip of his cock and slammed into her wet opening. \"Ohhh goawwdd,\" Tela's voice quivered.\n\nMick pushed his cock deep into her, pulled back and repeated the process slowly. He knew his wife loved it deep, hard and slow. \"Your pussy hasn't been this wet for some time. I love it. I love it when you get really horny. Do you like to fuck?\"\n\n\"Yesss,\" Tela moaned back. With that answer out, Mick pulled off of his wife and sat up erect.\n\n\"What are you doing?\" cried out Tela.\n\n\"I want you to straddle me.\"\n\n\"The window is open, people could see us.\"\n\n\"I don't care. Do you?\"\n\n\"No,\" Tela answered with a smile as she rose up, placed her knees outside of Mick's thighs and lowered her hips down until her bum was touching his thighs. Slow, she started to ride him. Her thrusting and moans gradually increased.\n\n\"This is what you wanted to do with the guy at the winery isn't it?\" Mick asked. Tela didn't respond, but instead closed her eyes and leaned back so she could use one hand to rub her pearl. \"Have sex, in front of others. And be on display just like you are now.\" \"Fuck me like I was Mr. Jones,\" he added after a bit. \"Go ahead.\"\n\nShe galloped away, but didn't last long. \"Ohhh, ohhhhh, augghhhhh. I'm going to cumm,\" Tela announced as her hips rapidly bounced up and down, while her nipples grew rock hard. Mick knew this was a sure sign her orgasm was moments away.\n\n\"You still want to fuck him don't you?\" Mick asked as he reached up and firmly squeezed both of her breasts.\n\n\"Ahhhh, yesss, yessss, cummminnngggg!\" Tela bolted out. When she was finished, Mick flipped her around, pushed her knees up towards her head and savagely screwed her. After he came, the couple laid next to each other and chatted. \"That was fun, but you know it is just talk.\"\n\n\"Well no, actually it was talk and sex,\" Mick replied.\n\n\"You're impossible,\" Tela spit back while shaking her head negatively.\n\n\"And you've only had a single orgasm. Mind if I give you a little massage?\"\n\n\"Do you want me to rinse off first? It's kind of messy down there.\"\n\n\"That from the woman that used to request I pull out and cum on her tits? Nope. I view it as wetter.\" With those words out, he teased his fingertips downward, slowly, making their way to her sex. As his fingers progressed downwards, he started to kiss his wife again. A well-known \"weakness\" of hers that rapidly fired the flames of her libido.\n\nThe kissing was relaxed, slow and intimate. When their tongues started to play, Mick eased apart her petals and eased two fingers into her. While pushing his digits in and out, he used his thumb to rub the regions on either side of her clit as he continued to kiss her. The second time, Tela usually came much quicker, so Mick wasn't surprised when she pulled her head away from his.\n\nHe kneeled between her thighs which gave him complete access to her vagina. A third finger was pushed up into her. \"Do you want me to add another one?\" \n\n\"Please, but go slow.\" A decade ago she'd occasionally ask to be taken with a dildo and cock in her, but over the years the requests had stopped, as time shrunk their lives. With four fingers in her, he was able to rub her clit. Slow and hard. It brought forth a series of loud moans.\n\n\"How does that feel?\" Mick asked as pushed four digits deep into her while increasing the speed of her clit manipulations.\n\n\"Oh God. That's nice,\" Tela replied as she reached out and clamped her own hand onto her right breast.\n\n\"I think our talk made you horny because it excites you to think about someone else fucking you.\"\n\n\"Don't stop,\" Tela moaned in reply.\n\nMick wasn't sure if Tela meant his talking or fingering or both, but he kept going. \"If Mr. Jones was here, and I asked him to fuck you, would you allow it?\"\n\n\"Shit. Don't say that now. Ohhhhh, fuck.\"\n\n\"Would you let his cock fuck your little pussy like my hand is right now. Pounding in and out. Ready to mix his cum with your cum?\"\n\n\"Ohhh, ohhhhhhh, I'm going to cum again.\" Just then, Mick stopped all of his movement. \"No, don't stop. Please. Do itt!!\" Tela begged.\n\n\"Answer my question and I'll keep going.\"\n\n\"Yesss!\" Tela replied which caused Mick to push his fingers deep inside while he used his free hand to give undevoted attention to his wife.\n\n\"Would you suck his cock, and fuck him until he came deep inside you?\"\n\n\"Ohhh, gawwddd. Yesssss. I'm cummmingggg!! Ohhhhh, ohhhhhhhhh.\" Tela moaned. It was the loudest she'd been in some time. Afterwards the couple hugged, snuggled and kissed then rose to shower as they knew the kids would arrive soon. In the shower, the intensity of Tela's orgasm was discussed, and she admitted it was a fantasy of her's to fuck Mr. Jones. Her disclosure ripped blood through Mick's penis yielding a new hard-on that Tela took care of with her mouth and gladly had her husband cum across her tits.",
        "# # #\n\nDuring most of Tuesday, Tela kept thinking about the approaching night given the sex Mick and she enjoyed on Sunday and her admission of desiring to fuck another man. She couldn't stop thinking about what might happen that evening, and how she'd react if Mr. Jones showed up. It caused her stomach to twist, and her pussy to dampen. When she drove home, she felt like a wreck and was unsure what to expect or how she should react.\n\nThe truth was out now, but Mick hadn't seemed phased by her admission of desiring sex with another person. She wondered if Mr. Jones would be at the house, and if tonight she would have sex with another person. It had been years since she'd had sex with someone other than Mick. And when the possibility of having sex with both of them popped into her head, it was almost overwhelming. She swallowed hard, and felt her nipples tighten. Multiple questions sang through her mind.\n\nWould they take turns screwing her? Did they both plan on taking her together? Would his wife be there too? What if Mick and Ms. Jones started to fuck? How many times would she be able to satisfy them? She knew Mick could play for a long spell, so two men screwing her could go on for some time. The thoughts terrified her, yet her body felt like it was on fire. Just the thoughts made her anxious.\n\nWhen Tela pulled into the driveway, she was disappointed that there were no other vehicles. Maybe the guest or guests would arrive later. Maybe, she contemplated, she was diving into her fantasy too deep. Once she parked, she paused to collect herself. She had been on the verge of throwing up, but also knew her vagina was swollen and if someone had touched her down below she would not have resisted. Just before she opened the door, she heard a vehicle approach and turned around swiftly. She was sure it was someone she was expecting and realized her own disappointment when the car speed on by. \"Jesus,\" she thought, \"I feel like I'm in heat. This is bad.\" She walked inside, with her face flushed.\n\n\"Hey love. Are you ready for some fun tonight? I made us some soup and salad to tie us over, and set up the living room,\" Mick yelled from the kitchen. The living room had been rearranged. A mattress was in the middle of the floor, and in front of it was their large screen television connected to Mick's laptop. Tela walked in and wrapped her arms around her husband.\n\n\"What do you have planned honey? I thought we'd be going out or something else. Do I get a massage tonight,\" she teased. Mick was drawn to the 'something else' language, but later he planned on exploring the 'something elses' that his wife was willing to explore.\n\n\"Hope I'm not disappointing you, but I thought we'd have some us time. Just a simple meal, and then maybe watch some flicks.\"\n\n\"What type of flicks?\" Tela asked quickly.\n\n\"I thought I'd pick a porn flick of something I thought might turn you on, and then let you do the same. An easy way to explore or learn what things turn either of us on.\" \n\n\"Ok, let me get out of my work clothes and change into something comfortable.\"\n\n\"I'll dish us up while you change. Love you!\" Mick answered.\n\n\"Love you too. Back in a minute.\" Tela dashed upstairs, while Mick plated the soup and salad. When she returned, it was with black high heels (the blessed fuck me pumps), one of his white dress button-ups with one button fastened and a sheer white micro thong. The two sat down, and slowly ate their meal and finished a bottle of wine. During the meal, Mick explained his plans. He'd signed up for a couple of porn websites that were pulled up on his laptop, along with a free one and they were to take turn picking videos, but could not repeat the category. So, if he selected a straight male-female video then she would have to select some other type when it was her turn, but there was a broad selection of choices.\n\nOnce the meal was finished, Tela put their plates into the dishwasher and seductively walked out to the living room carrying a second bottle of wine. Mick grinned as he followed her out. In reality, he wanted to fuck her immediately and further discuss how badly she wanted to fuck those men she'd mentioned the previous afternoon, but he hoped that by watching some videos he'd learn more about her nondisclosed desires.\n\nHe stripped off his clothes and laid down next to his wife. With a remote he fired up the television, and punched a few keys on his laptop. On the large screen, a young couple appeared walking down the beach. They played tag with one another, then fell onto the sand and slowly progressed to having sex. It was a typical scene in that half the flick covered the lady giving her guy a blow job, complete with some gagging and then transitioned to the guy taking his lover doggie style and ultimately cumming across her face.\n\nOnce the ten-minute film was finished, Tela turned to her husband, \"That was not erotic, at all. Let me see your computer.\" She spent about five minutes, then pointed to a video and asked Mick to get it playing on the television. He pressed a few buttons, and on the screen appeared a young lady laying on a table with two male hands giving her a massage. The hands moved slowly, but eventually curved down to her sex, opened her petals and started to tease her parts. Over the span of five minutes, the hands teased the lady's clit as fingers penetrated her pussy. By the end, the model was moaning and wiggling about until an orgasm flushed through her body.\n\nThe clip had gotten Mick's attention, and when he peeked over at his wife she was lightly massaging her own pussy. When the flick ended, he asked Tela, \"Would you like a massage like that?\"\n\n\"Is that an offer?\"\n\n\"Maybe, but what if it was delivered by another person?\"\n\n\"Who?\"\n\n\"An unknown stranger. Could be a guy or gal.\"\n\n\"I think I'd try that. What would you be doing?\"\n\n\"Watching you and how excited you'd be getting.\"\n\n\"Would you be playing with your cock?\"\n\n\"Probably,\" Mick answered.\n\n\"That clip was sexy. Your turn.\" Mick had formed a long list of movies he wanted to watch with his wife, but knew there was insufficient time or that he'd be able to refrain from attacking her. His cock had gone completely rigid when Tela stated she would try an erotic massage. This time he put on a video of a threesome involving two men and a female.\n\nAfter it started, he again peeked at his wife. She was watching intently, but he couldn't judge whether it was with interest or disgust. Internally, Tela was aware that her heart beat had increased, and she was nervous. It wasn't long ago that she was sitting in her car imagining sex with two men. There was no way she'd be able to disclose such lust to her husband. She jumped when she felt his fingers circling one of her breasts, but couldn't pull her eyes from the screen. During the clip, she started to imagine how it would feel to have a cock in one's mouth and pussy; how different penises would feel entering her and whether she'd try to take two cocks at once as the lady on the screen was doing.\n\nWhen the actress came hard, she decided it was something she might try, and just as this decision was made Mick's fingers pushed into her. When she looked down she was surprised to see that voluntarily she'd spread her legs wide. \"Wow, you're super wet. You liked that video?\"\n\n\"It was something different,\" Tela stated in a barely audible voice, then let out a moan when Mick pushed a second finger into her. She responded to this by reaching out and grabbing his erect cock. \"Did it excite you?\"\n\n\"It was ok. It's much more exciting watching you get excited. I could tell you were thinking about what it would be like to fuck two guys at once.\" Tela didn't deny this, but instead rolled over towards her husband and started to passionately kiss him. During their lip lock, Mick pulled out a large dildo from under one of the pillows and brought it down between his wife's thighs. With his fingers he opened up his wife and pushed the toy into her.\n\nThe invasion was unexpected, but satisfying. Tela parted her legs even further to allow Mick to push the toy further. Once her body had adjusted, and Mick was gliding the dildo back and forth, she pulled back from her husband's lips. \"I want to suck your cock, while you screw me with the toy.\" Mick spun around so Tela could blow him. The two worked each other into a frenzy. From under the pillow, Mick pulled out another toy, this one a small powerful vibrator. When Mick applied the new stimuli to her clitoral region, Tela's loins jutted upwards. He knew she was close to cumming, and when his cock popped free of her mouth it confirmed his guess.\n\n\"Ohhh fuckkk! Jesus, Mick that's that's, ohhhhh, God, aurghhhh, shittt, I'm cummminnngg,\" Tela sighed. Mick responded by pushing the dildo deep into her while pressing the buzzing toy firmly onto her clit. A long moment later, Tela pulled her pussy away from the toys, and knowing her sensitivity, Mick withdrew the artificial cock. But was surprised, when Tela whipped her head around and placed her lips around Mick's cock. It wasn't just to plant an affectionate kiss on his head. Quickly she was sucking forcefully on his organ, taking his full length into her mouth, then snaking her tongue over the sensitive parts of his head. It felt magical.\n\n\"Shit, honey. If you keep that up I'm going to cum,\" as Mick stated this as he brought his hands to Tela's head and grabbed a handful of her dark brown curls. He couldn't help but use her hair to force his dick deeper into her mouth. \"Ok, I'm going to cum. Shittt!\"\n\nRapidly, Tela pulled her mouth free of her husband's cock to state, \"I want you to cum in my mouth,\" then gobbled up his cock. The stimuli was too much. He tightened his hold on Tela's hair and thrust forward forcefully just as his orgasm exploded resulting in thick streams of cum blasting out of his dick and into his wife's mouth.\n\nWhen he was finished, Tela sweetly licked his cock clean then moved around so she could sit on top of him with her pussy resting directly on top of his dick. \"My turn, right?\"\n\n\"Yes,\" Mick answered, while trying to hide his surprise about his wife's election to watch more porn.\n\n\"If I choose another threesome video, but with two ladies and a guy is that the same or a different category?\" Tela asked.\n\n\"I'd vote negatively.\"\n\n\"Good. While I find one, turn sideways so you can see the screen. I'd like to watch in this position.\" Tela grabbed the computer and looked through the websites, and ultimately picked a video with two young women and an older man. Once the video started, Tela moved back so she was straddling her husband with her mound pressed directly on top of her husband's flaccid cock.\n\nThe first portion of the video depicted two beautiful ladies laughing, teasing, flirting and slowly spinning it into touches and kisses. For an extended portion of the video, the ladies seductively kissed one another as their hands softly roamed about each other's bodies and slowly undressed the other. Mick thought the scene was hot, but the obvious excitement shown by his wife in watching the ladies romance was much hotter. Tela's eyes were wide open, locked on the screen, as her own fingers played with her nipples similarly to the touches that she was witnessing. When the actors started to play with one another's pussies, Tela started to glide her vagina against her husband's unit. The ladies play progressed until one of the ladies slowly wiggled down between the other ladies' legs.\n\nMick thought this might turn his wife off, but instead it seemed to entrap her. Absent mindedly, she brought a finger down to tease the area around her clit. Mick felt his cock returning to life, and shifted his focus from the screen to his wife. He placed his hands around her ass, and pulled her up until her pussy was just above his face. Eagerly, he began exploring his wife's twat with his lips and tongue. Despite his position, he could still view his wife's face and saw that her eyes remained glued to the screen.\n\nTela was shocked to discover how erotic it was viewing two women making love. Seeing the ladies eat out one another brought up a possibility that she'd never considered, and when her husband's tongue swept through her pussy it created a desire. On the screen, each of the ladies brought one another to an orgasm before a gentleman appeared. Quietly, he stripped naked, walked up to the enjoined couple and eased his large cock into the lady whose tongue was buried in her friend's pussy. Tela starred in disbelief at the size of his cock, and how easily both women accepted his presence. When the lady being eaten had another orgasm, the other gal moved up so they could kiss. The guy pulled his dick free, and positioned himself to screw the other lady. After alternating back and forth he finally came forcefully, and the scene ended with one girl cleaning up the leaking semen from the other's vagina.\n\nAt this point, Tela was moaning and enjoyed another orgasm curtesy of her husband's tongue. Afterwards, she laid next to Mick and the two shared a long slow kiss. \"That was so exciting. I'm surprised how beautiful and stimulating the sex between the two women was,\" Tesa advised.\n\n\"Would you try that?\"\n\n\"Maybe. Would you?\"\n\n\"I'd be crazy not to,\" Mick stated.\n\n\"What would you do while I was with another woman?\"\n\n\"If it was solely up to me, I'd fuck her while she ate your sweet pussy.\"\n\n\"Men, so predictable,\" Tela responded.\n\n\"What would you have me do?\"\n\n\"Watch. And then fuck us both.\" With the words out, Tela climbed on top of her husband and guided his cock back into her pussy. She rode him deliberately, dictating the pace and teased him.\n\n\"Are you doing this, so you can fuck other people?\"\n\n\"I wouldn't complain about such, but mostly I'm doing this to see you like this again,\" Mick answered as he shoved up firmly into her while grabbing her ass. \"I want my wife back that loves to fuck and be naughty.\"\n\n\"Did you see anything tonight that you wouldn't try?\" Tesa asked.\n\n\"Not that I can think of,\" Mick answered as his thrusting efforts escalated.\n\n\"If everything was right, with the ideal people, and I'm not saying I would do it, but if the stars align would you be fine with me being with another woman?\"\n\n\"Yesss. I'd love to see it.\"\n\n\"What about sex with a male stranger?\"\n\n\"I'm ok with that.\" This caused both of them to start fucking one another harder.\n\n\"What if I was fucked by two men and a woman while you were being screwed by a hot lady and watching,\" Tela asked between soft moans.\n\n\"Would the two men fuck you at the same time?\" was Mick's response. Before Tela answered he pushed a finger into her pussy, pulled it out and started to push it into her ass.\n\n\"Ohhh shittt. Yesss, Fucckkkkk. Ohhh, don't stop,\" Tela pleaded. And he didn't. Mick pounded his cock up into her as far as possible, while pushing his finger in and out of her tight little ass. The two enjoyed a loud mutual orgasm, then collapsed sideways onto the mattress.\n\n\"Honey, I'd like to keep this up, but the kids are scheduled to be home in 10 minutes,\" Mick advised his wife. It was like a fire alarm going off. She bounced up and started putting away the pillows, blankets, toys and other items. Mick returned the mattress to their bed and put back the television, then cleared his computer and returned it to his office. He wiped himself clean, and dressed. As he did this, Tela released her bladder and ran into Mick in their large closet.\n\n\"Shit, that was a blast,\" Tela announced as Mick pulled her in for a hug and kiss.\n\n\"I agree. Overdue and I'm going to put it on the repeat list.\" With these words out of his mouth, Mick gave his wife another kiss, but this one wasn't just a peck. He opened his lips, and slid his tongue into Tela's mouth, while pulling her firmly into him. The kiss lingered on longer than Tela expected, and unexpectedly re-sparked her arousal causing her to push her hips into his. Mick responded to this by dropping his hand down to her mound and easing two fingers into her wetness.\n\n\"Ohhh, I can't believe I'm still horny,\" Tela whispered. Mick spun his wife around and leaned her back against the wall of their closet, so her hips protruded forward. He proceeded to push his fingers deep into her, once in, he pistoned them in and out of her several times before withdrawing them and teasing her clit by rapidly palpitating it with two of his fingers. The attention quickly had Tela breathing hard. She responded by pulling her husband in for another kiss, and pulling her knee up so she was left standing on one foot. In this position, her sex was open.\n\nAfter rubbing her swollen lips and clit, Mick eased three fingers deep into her. Slowly, he pushed them in and out. \"Your so wet. Do you like thinking about loosening up our sex life?\"\n\n\"Ohhh, that's nice. Put all of your fingers in me.\"\n\nMick did as she asked, and as he pushed four fingers into her he asked, \"Do you like getting your pussy stretched?\" As he asked this, he used his other hand to flick and rub the area all around her clit.\n\n\"Yessss,\" Tela hissed. \"You're going to make me cum again.\" Hearing this, Mick rapidly moved his hand in and out of Tela's vagina. Her eyes closed, and heavy moans poured out.\n\n\"Are you thinking of other people fucking you?\"\n\n\"Um-hmm,\" Tela honestly answered. In her mind, Mick's fingers were the cock of an unknown man, while the friction applied to her clit was from the lavish tongue of a beautiful lady. She felt a special unknown freedom in revealing this information to him. Just then they heard the door slam, and knew their kids were home.\n\n\"Shit,\" Mick softly complained.\n\n\"Don't stop, don't stop! I'm almost there.\" Mick, upped the tempo of his probing hand, and used his fingers to vibrate Tela's clit. It worked. \"Fuckkkkkk,\" his wife moaned out as she clasped his shoulders with her hands. \"Ohhhhh, fucckkkkk.\"\n\n\"And your cumming turns-on the guy fucking you so much, he senses his own orgasm moments away.\" Mick pushed deeper into her, and managed to get his thumb in her too, causing a second orgasmic wave to sweep through her. Once it passed, he freed his hand and placed his fingers into her mouth to suck clean. She sucked firmly on them, causing her husband's shaft to harden. \"I'll go check on the kids while you get your PJs on.\" And he was off.\n\nTela wasn't sure what overcame her. It had been years since she'd enjoyed three rounds, and the last words out of Mick's mouth had sent a zing through her body. It seemed as though the more she was fucked, the more she wanted to be fucked. She had to compose herself. It seemed that Mick was gone for a spell, and during this time her mind wandered back to her fantasies. Fucking other men, and making love to a woman. When Mick returned, all she'd managed to do was place on a large puffy robe. She didn't know how long she was trapped in her day dream, but did know her fingers were wet.\n\n\"How are the kids,\" Tela asked a touched embarrassed. Usually, she was the super attentive parent.\n\n\"Good, but tired. Your son is already in the shower, and asked us for a favor. And your daughter is in bed. Why don't you check on her and say good night then pop back over.\"\n\n\"What favor?\"\n\n\"Go say good night, and I'll let you know.\"\n\nTela returned ten minutes later, curious about the favor and at ease that her kids were safe, sound and in bed. \"Someone was almost asleep when I checked on her. Guess they played hard at the beach.\"\n\n\"So, it appears. Your son looked like he was wearing five layers of dirt.\"\n\n\"He yelled out goodnight from the restroom. I don't get why he's become so private around me.\"\n\n\"Honey, he's a male teenager. The time of almost constant erections, and about the most embarrassing thing that could happen to him is for you to witness him in such a state.\"\n\n\"I changed his diaper for years. It's nothing I haven't seen before.\"",
        "\"He doesn't remember that and surely has blocked out any type of memory of such,\" Mick advised. This got a laugh out of his wife. There kids were good. Athletic, high marks and fun to be around, most of the time.\n\n\"And what is this favor request? A bowl of ice cream and pint of milk delivered to his room?\"\n\n\"Ha, good guess, but incorrect. He's doing a team science project and his friend needs wood, thin tin sheets and spray paint that's in the garage, so his friend's Dad is stopping by in twenty minutes to pick up the goods.\"\n\n\"What Dad,\" Tela asked.\n\n\"Mr. Jones. Isn't he your friend too?\"\n\n\"Shit!\" Tela responded. \"Can you deal with it?\"\n\n\"We both will. I'll get you dressed appropriately.\"\n\n\"What do you mean?\" Instead of responding, Mick walked to their dresser and opened her PJ drawer. He dug through it, and emerged with two items. \"How's this?\" It was a sheer white negligee that only came to the top of her ass.\n\n\"No! I might as well be naked. He'll think I'm trying to fuck him.\"\n\nMick walked over to her, opened her robe, and asked, \"Well, haven't you been thinking about fucking him? Imaging how it felt when he touched you right here?\" Mick brought his fingers up to his wife's pussy and lightly rubbed it.\n\n\"I don't think his wife would like it,\" Tela answered, but didn't move the probing fingers away.\n\n\"I think she'd still be ok with it. Maybe demand some attention from me, or you. Would you like to kiss her?\" Before Tela could answer, Mick pulled her in for a wet kiss as he continued to fondle her. \"Jesus honey, your wetter than when I left you to get dressed. Distracted? Does thinking of fucking others make you horny?\"\n\n\"Yes. Shit Mick, I feel like I'm obsessed with it.\"\n\n\"Would you like to fuck Mr. Jones?\"\n\n\"I already told you my answer. And why aren't you just calling him Phil?\"\n\n\"I like the sound of Mr. Jones fucking my wife. Just think, in fifteen minutes you could have his cock sliding in and out of you, rocking you to another orgasm.\" As these words popped out, his fingers popped into his wife.\n\n\"Not like this. His wife would have to know first. Stop it. You're driving me crazy. And the kids are here.\" Despite her request, she pressed up close to her husband.\n\n\"We could start the washing machine. It's pretty noisy. Have you bend over, present yourself to him and while he's fucking you, I'd feed my cock into your mouth. Both of us pulling on your nipples.\"\n\n\"Ohh, stop it. I can't wear the negligee.\"\n\nMick pulled away, even as Tela grabbed a hold of his arm to keep him in place. \"Yeah, maybe it is a bit too much. I'll compromise. Wear this instead?\"\n\n\"Ok,\" Tela agreed. He handed her a white cotton ladies pj-pullover. It was thin, so did nothing to hide a woman's nipples and had a deep V-cut. But it wasn't sheer and at least covered her bottom. On the front, in cursive writing, it read \"Dream me.\" If she bent over it rode up, so she'd have to be careful. She dropped her robe, twirled around sexily a few times for her husband and pulled the night shirt. \"Can you hand me a white thong, please?\"\n\n\"Nope. You're fine. Let me get a few toys and we'll move down to the kitchen so we can see him pull up.\"\n\n\"What do you need the toys for,\" Tela asked nervously.\n\n\"When Phil gets here, I'll greet him and go into the garage with him. I'll have trouble finding something, and call for your assistance. When helping us search, you can lean over to give him a peek of your sweet tits, and later bend over so he can see how swollen and wet you are. I bet that image will be burned into his brain for years.\"\n\n\"I can't do that,\" Tela protested.\n\n\"Sure, you can. You've made out with him, rubbed your pussy against his hand, ground it against his shaft and been dreaming of sex with him. It will be like when you used to flash the truckers. I bet it will make you horny.\" Once these words were out, he grabbed the toys from their closet, and returned to grab his wife's hand. It was obvious she was still thinking about the proposal. Quietly, he led her downstairs, and into the new kitchen addition that overlooked the driveway. He kept the lights off, and opened one set of blinds.\n\n\"Shit. This is crazy. I think I better go upstairs. I'm sorry. I can't honey.\"\n\nMick ignored this and directed his wife to sit on the table. He pulled out a chair and sat directly in front of her, and pushed her legs apart.\n\n\"What are you doing?\"\n\n\"Going to play with your pussy until Mr. Jones arrives, so it looks like it's hungry for sex when you show it off to him,\" Mick told her.\n\n\"No. It's too soon.\" Then the vibrator was turned on and pressed up against her. Mick started to run its head along the sides of her gland, slowly moving it, but without direct cliteral contact. Not much later, Tela was considering going forward with the show. She was horny, and did love to show off. When Mick pulled out the largest of their dildos, a 12\" thick black silicon cock she moved her ass to edge of the table and held her own legs apart. Gradually, he feed it into her as she focused on keeping her moans quiet. Once it was deep in her, Mick started to slide it back and forth, and applied the vibrating head to her clit.\n\n\"I want him to see how beautiful your pussy looks when your lips are swollen and it's soaking wet.\"\n\n\"That's big. It's hard to focus. The vibrator is strong. Ohmmm, shit.\"\n\n\"Do you like this?\"\n\n\"Honey. Ohhh, you should stop. Ohhh, goodness.\"\n\n\"If we had more time, I'd slide you off the table and onto my cock, so you could feel what it's like to have two cocks in you at the same time. Have you been thinking about that?\" Mick was now screwing his wife with the dildo at a decent tempo. She responded by pulling her heels up on the table to further open herself up, and was now squeezing one of her own breasts.\n\n\"Yesss. I can't stop thinking ... about sex.\"\n\n\"Is it going to turn you on showing Phil your pussy?\"\n\n\"Yes, but please stay in there with me. Ohhh, I'm really close.\" It had been years since Mick had seen his wife have multiple orgasms. Years ago, she'd periodically delve into the double digits, but that was far in the past. \n\n\"Are you afraid he'd try to fuck you if I leave, and you wouldn't be able to say no?\"\n\n\"Maybe, ohhh, yeah. Maybe.\"\n\n\"Are you thinking of Mr. Jones taking you right now?\"\n\n\"Yessss, ohhh, shittt.\" And just as her orgasm was about to launch, the doorbell rang. Mick, pulled the toys away, and instructed his wife to stay put until he called for her, then rushed off before the bell was rung again. Tela heard Mr. Jones enter, exchange greetings and walk into the garage. She grew fearful, and wanted to retreat upstairs. Instead, her fingers went down to her shiny folds to caress her sex. It wasn't long, until she heard her husband's voice calling for her.\n\nShe thought about bolting upstairs yet couldn't. When Tela entered the garage, Mr. Jones' said hello and gave her a hug. Her nipples were sticking out. Mick told her they couldn't find the spray paint that she'd last used and also hadn't located the tin sheets. She thought they might be on a bottom shelf so bent over to look behind a few items, while Mick wondered away to search in another location for the tin. When she bent over, her top fell away making it easy for Mr. Jones to see both of her breasts, and erect nipples. She searched for a bit to ensure he was treated to a proper view, then raised up and witnesses Mr. Jones' eyes locked like lasers to her tits.\n\nThe voyeurism sent a zap between her legs, just like in the past, but this time it was more intense. Maybe because she knew the person she was teasing. She knew her pussy was soaked, but seeing the reaction on Mr. Jones' face sent a new wave of fluid to her vagina, some of which leaked out and started to trickle down her thigh.\n\n\"No luck,\" she called out to Mick in a crackly voice.\n\n\"Look on the same level, but about six feet behind you. The cans might be in a closed box, but be carefully pulling it out as there are some fragile items in front of it,\" Mick hollered from across the garage. \"And Phil, you might want to get down and look just where Tela was searching, as the sheets could have been pushed far back.\"\n\n\"Ok,\" he replied. Tela turned around, bent down on her knees, with her face almost at ground level and started to move things around with her right arm. In this position, her ass was up in the air with the bottom of the pajama top just barely covering her ass. When Phil bent over right behind her to look for the tin he had an unobstructed view of her pussy. Tela heard him gasp, when he realized his fortune. Purposely, she pulled on her pjs, causing the bottom to ride up over her ass and slowly she parted her knees. In this position, she was sure Phil could see her ripeness, perky rear star and how swollen she was. God, she wanted to touch herself.\n\n\"You know, I may have used the tin for part of a light fixture. Let me run and check. I'll be right back.\"\n\nThis caused Tela to stand upright, and her faced looked shocked. \"Do you need help?\"\n\n\"No, I'm good. Why don't you two keep looking. I'm sure those cans are just where you were looking,\" Mick advised as he walked out of the garage. \"Or they might be above the dryer in that built in high shelf. Maybe Phil can hold you while you feel back for them. It's hard to access alone. Be back in a few minutes,\" Mick told the couple as he walked out. His footsteps could easily be heard ascending the stairs inside.\n\nHe returned several minutes later, and found his wife sitting up on the washing machine with Mr. Jones standing between her thighs. Intentionally, he dropped the tin sheets he received and bent over to retrieve them. The loud clang let them both know he was back but bent over looking at the floor just at the doors entrance. This provided Mr. Jones the opportunity to pull away and for his wife to crisscross her legs. \"I found the sheets. Any luck with the spray paint?\"\n\n\"Yeah, we found it,\" Tela answered in an odd voice.\n\n\"So, guess I have all that I came for. I better head out. And talk with you guys later, we should plan a dinner party soon?\" Phil stated. He gave Tela a hug goodbye, and gave Mick a pat on the back, then left.\n\nOnce he was gone, Mick spoke up, \"You look guilty as sin. Open up your legs and show me your pussy.\" Slowly, Tela complied. \"Damn, you pussy looks like a mess. Tell me what happened.\"\n\n\"Can we go upstairs, and then I'll tell you everything. Ok?\"\n\n\"Sounds good,\" Mick replied as he helped his wife off the washing machine and walked upstairs with her. Once there, Tela stripped him down, sank to her knees and sucked on his cock until he was rock hard.\n\n\"Lay down on the bed,\" she stated. Once Mick did, she grabbed a small vibrator from the closet, and returned to the bed. She straddled her husband, completely swallowing his cock with her pussy in the process. \"When we were bent over looking, his face was just inches from my pussy. I could hear him breathing rapidly. And, I don't know, I just could not stop myself. I reached down and ran a finger through my pussy right in front of him.\"\n\n\"What did he do?\"\n\n\"A moment later, I felt his fingers next to mine, rubbing all around and pushing into me. He'd found the spray cans right after you left, just where you told him to look the first time. We played for a bit, then both stood up and started kissing. His hands were all over me. Squeezing my ass and tits and dipping into me. He told me how bad he wanted me after that New Year's Eve party, and I told him the same. We kissed more, and I fished his dick out of his pants and stroked it several times before he reached around me, and grabbed my ass with two hands. Slowly, he lifted me up and I wrapped my legs around his waist. Then he walked us over to the washing machine, and during the walk his cock slipped into me. I was so wet.\"\n\n\"You fucked him?\"\n\n\"Well kind of, but he didn't cum. I told him I wanted him, but he said he wanted to make sure his wife was ok with it before we actually went ahead with things, except his cock was already in me and he was starting to thrust it in and out. Plus, I was pulling him in with my feet. And I told him that we had talked about it, and you were probably fine if he wanted to finish. We kissed, and he kept on fucking me. I started thinking that maybe you'd walk in and both of you would have me.\"\n\n\"You wanted to suck my cock?\"\n\n\"No, I wanted one of you in each of my holes. When I thought about that, and with Mr. Jones fucking me, I had another orgasm. God, all I want is sex now. Take the vibrator and slowly push into me, then turn it on.\"\n\nMick did as asked, and kept asking questions while thrusting up into his wife. \"Did you like having Mr. Jones dick deep in you?\"\n\n\"Yesss. Oh, gawd, that feels good. This is so naughty,\" Tela whispered as she started to pull on her own nipples.\n\n\"Do you wish Mr. Jones was here fucking your ass right now?\"\n\n\"Yesss, ohhh yesssss,\" Tela buzzed as Mick activated the vibrator and started to push it back and forth in his wife's ass. The vibrations were powerful, and rubbed right up against his cock quickly causing him to cum.\n\n\"Are you going to fuck lots of different people now?\"\n\n\"Whatever you want, my love. Oohhhhhh, shittttt!\" Tela moaned out. She couldn't remember the last time she had cum so much. The thought of two cocks insider her were causing wicked notions to float through her mind. Her husband came shortly after she did, then the two cuddled and chatted about the evening. Moments later, Mick was asleep and snoring. Tela quietly exited the bed, retrieved a toy and enjoyed two significant orgasms in their restroom. She couldn't remember ever feeling so desirous of sex.\n\nThe next morning, Mick awoke first, and his brain was popping. After last night, he was sure his wife was ready to engage in sex with others, so he debated skipping ahead. He knew Tela and Phil had a thing for one another, but was surprised how quickly the two engaged in sex. If he knew Phil and his wife better, he'd love to invite them over this morning for some adult fun. His cock was rock hard at six a.m., and he was sure his friend was in a similar state, especially after being unable to finish. It was kind of funny. These thoughts caused him to wrap his arms around his wife, who was sleeping on her side, and nest his cock between her bare ass cheeks.\n\nTela felt her husband behind her, but wanted to sleep a touch more, before her alarm went off. She moved her head away from his, which had the unintentional effect of pushing her bottom up against his stiffness. Mick took this as a hint, and pulled up on one of her cheeks, which allowed his cock to slide between her thighs and up against her sex. His rigidness surprised her, and the evenings activities slammed into the puritanical side of her brain.\n\nSoftly, Tela whispered out, \"Ohh no!\" Her stomach flipped flopped and the thought of divorce dashed through her brain as a consequence of her infidelity. Mick heard his wife make a soft \"ohh\" and mistook it for a moan. With one hand, he reached down and placed his head at her entrance, then pushed the tip of his cock into her. He was surprised at the degree of her wetness, unaware she hadn't cleaned up after her self play.\n\nMick slowly pushed himself completely into his wife, using one hand to grab her hip and pull her closer, while with the other he firmly squeezed her naked breast. \"You're so wet babe. That's hot,\" he mumbled as his hips started to slowly move back and forth. \"What were you thinking that made you moist?\" he asked a few minutes later.\n\nTela was still mentally wrestling with what she'd done, but now the pleasures of her husband's cock were becoming a distraction. Without any thought she raised up one knee, allowing Mick's thigh to slide between hers and for deeper penetration. Despite the erotic feelings washing over her she was determined to bring up the events of last night. \"I'm sorry, honey. Will you forgive me?\" she asked trying to ignore the building sensations.\n\nHer husband repositioned as he tossed off the blankets and arranged himself, so their legs were linked like interlocking scissors. This position allowed for great penetration and was one of her favorite. And it allowed for Mick to tease her clit while using his other hand to squeeze and pull on her tits.\n\n\"Forgive you for what? Were you dreaming about fucking Phil or something?\"\n\n\"No,\" Tela quipped. \"For the sex with him last night.\"\n\n\"Don't be sorry. I kind of arranged it, and I think your pussy is still wet from probably thinking about it. Wouldn't you like him here right now? Fucking you like he's dreamed about for so long, and maybe his wife would let you taste her sweet little pussy,\" Mick suggested as he worked himself up. The notions pulled Tela away from her forgiveness concerns and returned her to the doorsteps of lust. \"Would you fuck the two of them if they were here now?\"\n\nInstead of answering, Tela climaxed hard while thinking of doing just as her husband suggested. Her release triggered Mick's, and afterwards the two cuddled before rising to face the world. Tela showered first, followed by Mick, while she prepped for the day and drug the kids from their cocoons. The reprieve from the tentacles of sexual desire allowed her time to think.\n\nShe was grateful for the uptick in their sexual adventures, but was nervous about proceeding further. What if others learned about her wantonness or sexual activities outside of their marriage? And with such play, there was always a risk of disclosure, which meant the kids could be horribly embarrassed or stigmatized. Despite the pleasures, she had to stop this sexual vacation before it was too late. Once the kids were off for school, she returned to the bedroom and cornered Mick in their closet where he was getting dressed.\n\n\"Do you have a minute honey?\" Tela asked.\n\n\"Sure. What's up? Was that a perfect start to the morning or what? It's been awhile since I've started to play with you and found your pussy already nice and soaked. Are you going to tell me what you were fantasizing about before I snuggled up to you?\" Mick teased as he delivered a peck to his wife's lips.\n\nTela slightly blushed. The last few days, it seemed that Mick somehow had an open window in the part of her mind that feed her wanton desires. \"I'm worried where our play is headed, and the impact it could have on our family.\"\n\n\"I think it will impact us too,\" Mick replied as he walked up to his wife, stood before her and started to kiss her passionately. Usually, the morning was a rush. Shower, dress, get the kids rolling and dash off to work with maybe a peck and smile exchanged. Now, Mick was standing before her with just his boxers and a button-up on. As he kissed her he pressed his groin into her hips. She felt fluster returning, but didn't move away.\n\nShe was breathing from the base of her chest, when Mick pulled his lips away, but kept his face inches from hers as his hand caressed her cheek. \"You are so beautiful, and when excited your beauty just radiates.\" With this statement out, Mick starred into her eyes as his hand trickled down from her cheek to her chest, then lower. Pushing apart her robe, so his digits could descend into her panties. Once there, he started to kiss her again.\n\nShe pulled away briefly to protest, and placed a hand around his wrist. \"You shouldn't. I don't need to be anymore worked up and we have to get to work.\" Notably, she did not try to remove Mick's exploring fingers. He responded by continuing their kiss.\n\nShe welcomed it with open lips. As their tongues swirled, his fingers splashed into her vagina. Diving upwards to thump her G spot, emerging to tease her upper sensitive bits then re-entering her. He pulled his lips away, and whispered into his wife's ear, \"It is going to impact us. This sweet little pussy is going to enjoy so many orgasms. Some from a beautiful ladies' tongue, others from dicks of all different sizes and shapes.\" When he said the word \"dicks\" he jammed three fingers up deep inside her.",
        "\"Ohhh, Mick. Shit. No,\" Tela responded. Her pussy and brain torn in conflict.\n\n\"What made your pussy so wet this morning, babe?\"\n\n\"You, honey. Ohhh, goodness,\" she answered as her hand snaked into her husband's briefs to rub his pre-cum across the head of his dick.\n\n\"And why was it so wet before I touched you? Who were you thinking of fucking? Were you imaging them taking you?\" Now, he was softly plowing circles around her clit.\n\n\"Yessss,\" Tela simply answered. Conceding she had fantasized about sex with another person, yet shielding last night's post-coital romp with the toys. \"Wait stop. Honey, I can't fuck someone else. It could end up with horrible results, I just can't risk hurting us or our family.\"\n\n\"Have I asked you to fuck anyone else?\"\n\n\"No, not really.\" As Tela answered, Mick slid off her robe, and pulled down her panties leaving her nude.\n\n\"That is your choice. Only you can make that decision,\" Mick stated as he stood up, pressed his manhood against her and again they made out. This time when he pulled away, Tela had pushed down his briefs to free his cock. \"Go open the blinds, and stand in front of the French doors.\"\n\n\"Why?\"\n\n\"Because I want to feel your pussy wrapped around my cock, and we don't have much time before both of us have to get to work.\"\n\n\"But people could see us,\" Tela whispered. The back of their house overlooked public lands, through which a running trail ran. The trail curved right by their home, just 30 feet from their back deck, which the French doors opened up on.\n\n\"The light is off. Put your hands on up high on the glass, butt out and stand with your legs shoulder width apart.\" Tela had submissive qualities, and got off on being told what to do in the bedroom, especially when it involved a touch of voyeurism. Swiftly, she complied.\n\n\"I'm ready,\" she whispered out. A week ago, she would have protested. Now, she was half contemplating calling in sick, and spending the day making delicious sweet love with her husband. Mick walked out with his cock bouncing from side to side. First, he walked over to the doorway and turned on the bright overhead lights. He saw his wife flinch, but she held her position. Second, he walked up behind her, slapped her ass firmly then guided his cock deep into her slippery folds. Third, he didn't waste any time, and started to fuck her hard.\n\n\"Do you like having all this sex?\"\n\n\"Yes honey, you feel so good inside me. Ohh, harder.\"\n\n\"Do you keep thinking about Mr. Jones fucking you? I don't think you can get it out of your head. Am I right?\"\n\nTela didn't answer immediately, but after several slow, deep and hard thrusts she mumbled out, \"yesss. I keep thinking about it.\"\n\n\"Why are you scared?\"\n\n\"Because, because I don't want to hurt you or us or our family?\"\n\n\"But you want it so bad, your masturbating and dreaming of fucking him, and I want to watch him fuck you. I want to see his cock sliding in and out of your pussy. What happens when you imagine him fucking you?\"\n\n\"Ohhh shit, honey. I shouldn't say. Ohhhh, god careful. My clit's so sensitive,\" Tela added as Mick had pulled one hand from her hip and used it to diddle her clit. \"He sneaks in after I'm done running and walks in while I'm showering.\"\n\n\"What do you do?\"\n\n\"At first, try to cover up, but then he tells me to put my hands down and get out of the shower. He has me blow him, then bends me over and starts to fuck me like you are right now.\"\n\n\"Like this?\" Mick asked as he rammed his cock up deep.\n\n\"Ohhh, again please.\"\n\n\"Arghhh, you'd like him here right now? Both of us fucking you?\"\n\n\"Ohhhmmmm.\"\n\n\"Does he fuck you fast, then leave?\"\n\n\"No, his wife catches us and joins us. Making me please her.\"\n\n\"Does she make you eat her pussy?\"\n\n\"Yes, while he fucks me and they both cum on me.\" Tela's arms had slipped from the window pain, so her face and breasts were now pressed up against the window. Mick had noticed a tall thin runner moving up the trail, but didn't think they'd been spotted until the runner halted, and stood there watching them from about 40 feet away. He kept Tela distracted by asking her for additional details about her fantasy, then pulled out to grab one of her favorite vibrators. As he did this, she kept her eyes on him. When he returned he re-entered her in one thrust, and brought the buzzing head of the toy to her upper pussy.\n\n\"Ohhh, honey. You're going to make me cum again,\" Tela moaned.\n\n\"Did you see the tall runner watching us? She just started to rub herself. I think she's enjoying watching you.\"\n\n\"Ohhhh gawwddd,\" Tela answered, but made no attempt to hide herself.\n\n\"Look at her. She'd probably love it if you invited her in,\" Mick huffed out as he too was now breathing heavily and had pulled away the vibrator. \"Would you like to play with her?\"\n\n\"Ohww, hon, honeeyyyy. This is crazy.\"\n\n\"Would you like to like to play with her pussy with your tongue?\" As the question was asked, Mick returned the vibrating head to his wife's pussy.\n\n\"Ohhhhh, fuckkkk. Yessssss. I'm cummingggg, I'mmm ... cummmminnngggg!\" Tela moaned out. Mick responded by thrusting even harder, driving his dick deep into her and released a second morning load. Before they last few days, they hadn't enjoyed multiple orgasms in one day, or in a week, for several years.\n\n\"Me toooo! Argghhhhhh,\" Mick yelled out. Just as they disengaged, another runner appeared on the trail. The observing one startled, then took off away from the house.\n\n\"We better shower quickly,\" Tela advised her husband as her quim was already leaking.\n\n\"No. I want you to go to work like that, with just a thin sheer thong on. I packed some clothes for later tonight. It should be fun.\"\n\n\"Ok, but remember if it involves other people, it is my choice,\" replied Tela.\n\n\"Of course, it is,\" Mick laughed in response. \"Good thing I didn't ask for your choice on whether we should invite the runner in. Otherwise, right now instead of getting dressed you'd be calling in sick so you could stay home and fuck all day.\"\n\nTela turned away and softly answered, \"You wish.\" Inside, she again felt like he was reading her brain. And just the notion of playing with the tall elegant stranger gave her tingles. Somehow, she had to gain control of her libido. Twenty minutes later, the two of them were sitting in their offices, daydreaming about the mornings events. Mick imagining watching others use his wife for their pleasure, while Tela thought of serving as a sex toy then having the ability to erase the participants memories afterwards. Neither, were overly productive.\n\nAt 6 p.m., Mick picked up his wife from her office. He was parked on the street, half a block away. There he had his wife change into a white mini-dress. She hesitated initially, but undertook the task which provided a view of her tits to a few people walking by. The bottom of the dress didn't quite make it to mid-thigh, and the spaghetti-strap top revealed significant cleavage and her braless state.\n\n\"What's the plan?\" Tela asked once she was dressed.\n\n\"Dinner first,\" Mick replied. He pulled out, and headed east to an upscale seafood joint. Lobster for her, and king crab for himself. Both complimented with a bottle of bubbles. Midway through the meal, Mick moved from the opposite side of the table over to the other side, so he was sitting next to his wife. When the waiter came by to check in on the food, Mick purposely pulled down his wife's dress to provide a better view of her upper assets. Tela retaliated by placing a hand on her husband's unit and softly commenting on his firmness when the sommelier refiled their flutes. She was fit, and athletic, and Tela knew Mick had been scooping out her curves.\n\nWhen their waiter returned for the fifth time, Mick tugged on the midsection of his wife's dress with a rapid jerky move. Unintentionally, it yielded an unexpected result, which caused Tela's left breast to be exposed. She didn't notice it immediately, and when she did, simply smiled, and pulled her top up, to cover herself. She followed this with an eyeroll towards her husband, \"He thinks it's funny, but I try to reserve such views to cool people. Are you cool?\"\n\nThe waiter responded with a smile, and quickly walked away unsure of how to respond.\n\n\"Maybe he'd be more talkative if he saw something else,\" Mick's voice flowed into his wife's ear as he hiked up the hem of her dress and pressed his fingers underneath the side of her panties.\n\n\"Careful, more than one can take a sporting position,\" Tela answered as she unzipped her husband's fly, twisted the opening of his briefs which allowed his cock to pop free. Mick eased his napkin over his cock to keep it and his wife's stroking hidden. Tela smiled fiercely at him, then emptied her glass. As expected, the sommelier promptly reappeared to refill her glass, and Tela accidentally knocked the napkin away exposing her husband's shaft.\n\n\"It looks like my glass isn't quite full. Do you mind retrieving another pour for us?.\"\n\nThe sommelier had her eyes fixed on Mick's stiff dick, but with Tela's last statement she simply smiled, and replied, \"Be right back, and enjoy your fun, but be careful.\"\n\n\"I think that's enough flashing for this spot? How about we move after we finish the next glass?\" Tela agreed, so once their glasses were empty, and last bites eaten, Mick settled the bill and the two headed out.\n\nOnce they were in the car, Tela asked, \"Where are we headed to next?\"\n\n\"A surprise.\"\n\n\"Remember, it's my choice. I enjoy being naughty with you, have some interesting fantasies, but that doesn't mean I'm necessarily comfortable having sex with anyone else.\"\n\n\"I know, it's your choice. Just taking you somewhere that might provide you with a little temptation.\"\n\n\"Please don't ask me to have sex with someone in front of them, that could be embarrassing for all of us. Promise me that?\" Tela asked.\n\n\"Not a problem. I remember, it is your choice.\"\n\n\"That's right! My choice.\"\n\n\"Yep. I remember. In the garage, it was your choice to let Mr. Jones penetrate your wettness with his cock. Shoving it deep into you. And your choice to complain when he didn't finish, and your choice to wish he'd come over and fuck you every day since then,\" Mick teased.\n\n\"Michael! That's not a very nice thing to say to me,\" Tela belted out, however, when Mick moved his hand between her legs she voluntarily parted them for him.\n\n\"It's the truth, isn't it?\"\n\n\"Well more or less, but the way you phrased it wasn't so nice.\"\n\n\"Honey, your nipples are getting hard just talking about it again.\" The words were true, Tela's dress covered up her breasts, but the protruding gumdrops gave her away.\n\n\"It's from the chill in the air,\" she answered, but now her husband's fingers were pinching her outer lips together.\n\n\"When I push my fingers into you, do you think I'll find your pussy dry or moist?\"\n\n\"Probably wet,\" Tela answered honestly. She'd been honest about her fantasy involving both Mr. and Mrs. Jones, and after the bubbles, flashing and her husband's teasing she could tell her sexual appetite was elevating.\n\n\"Wet because your keep thinking about having his cock in you and licking his wife's pussy?\"\n\n\"Yes, you know I can't stop thinking about it, and you're not much help.\"\n\n\"Choices, my love, choices.\" Mick quickly pulled his hand away and took off. He drove a few miles then pulled into a half-empty parking lot. \"We're here,\" he announced.\n\n\"You're such a tease, and I will pay you back somehow. Where are we?\"\n\n\"It's a little strip club. One of our tenants works here. Invited us to come watch a few months ago, and specifically noted she's more comfortable with couples than just a guy given she rents from us.\"\n\n\"Really? Which building, and what does she look like?\"\n\n\"The apartment above the warehouse. Long black hair, light blue eyes and, well, a nice body which one would probably assume given her work.\"\n\n\"I swear you were going to pop over to the Jones' house. This will be fun, we haven't been to a strip club together in years.\"\n\n\"Sorry to disappoint you about the Jones. Do you want me to drive there now?\" Mick inquired.\n\n\"No! Come on, let's go. It's cold.\"\n\n\"Hold on. You have a smudge on your lips, let me fix it.\" Tela walked over and Mick rubbed an imaginary smudge from outside her bottom lip, then wrapped one arm around her bare shoulders and pulled her in for a deep kiss. Midway through, his hand returned to her crotch. Two fingers were pushed up into her, wiggled about and withdrawn to perform a rain dance over her clit. \"Your pussy is wet. Maybe we should drive over to their house. You could really experience his cock throbbing inside you.\"\n\n\"No. Let's go,\" Tela laughed as she grabbed her husband's damp hand and lead him toward the entrance. He knew how to push her buttons, and if she'd been entirely truthful they'd be driving to the Jones' house right now. Instead, her pussy was wetter, and she was officially hungry, but also safe from fearful risks.\n\nThe club was dark, except for a main stage, lite up with bright lights. Once their eyes adjusted, they saw there were several booths circling the stage, behind the booths a full bar and on the far wall several long curtains. The couple selected an empty booth, and watched two performers before a waitress asked about a drink order. Mick asked for a negroni, and ordered a martini for his wife. Tela thought most of the dancers were beautiful and was surprised her husband didn't seem interested in any, especially given their sexy outfits.\n\n\"Why are you looking so grumpy at the strippers?\"\n\n\"I'm not, but look at their faces. Most of them look lost or unhappy to be here. A smile or two would help,\" he complained.\n\n\"Picky, picky. I'll be right back, need to use the facilities,\" Tela advised. She returned a few minutes later, with a beaming red-head in tow. \"This is my husband. He needs some cheering up, would you mind giving him a dance?\"\n\n\"Sure. It'll be $20 dollars,\" the dancer advised. When the next song started, the lady wedged Mick's legs apart and drug her cleavage across his face. Midway through the song, she lost her top, and started to grind her thong covered bottom up against his manhood. And then the song ended. \"Would you like another one?\" the stripper inquired.\n\n\"Maybe later,\" Mick answered as he twisted his head to see behind her. Onto the main stage, his tenant walked. When the next song started she began to dance seductively, gyrating her hips, slowly licking her lips and swatting her bottom. \"That's the lady that we rent too,\" he whispered into his wife's ear.\n\n\"Wow, she is beautiful. And what a body.\"\n\n\"I thought she might capture your eye. Take this twenty-dollar bill and place it on stage. It'll entice her to visit after she's finished on the main stage.\" Tela sauntered up to the stage, and when she had the dancer's eye, she carefully set down the Jackson on the edge. The dancer smiled, and winked at Tela, then spun around and tossed off her top. Tela was impressed with the ladies' breasts. All real, and beautiful. She made her way back to the booth, and was looking forward to interacting with her.\n\n\"She's hot,\" was all Tela told Mick, before sitting next to him and watching the main stage. On the second dance, all her clothes were tossed off which allowed the couple to have a clear view of the area between her legs. She appeared to be waxed, one curtain stuck out a bit more than the other and a fabulous bottom. Both imagined how it would feel to touch her near perfect curves and explore her sex.\n\nThe song ended, and the dancer disappeared after collecting her tips. Some time passed, enough to cause Tela to think the dancer had left the building, especially when the waitress stopped in to take a second drink order. Mick wasn't finished, so advised he'd continue sipping on his beverage, while Tela ordered a second martini. Just as the drinks arrived, their tenant did also. \"Hi, I'm Azure. Thanks for the tip. Do you mind if I visit?\"\n\n\"Sure,\" Tela stated, then triggered to figure out whether to move or stay put.\n\n\"How about if I sit between the two of you?\" Azure asked.\n\n\"Ok,\" Tela answered.\n\n\"My real name is Ann. Your husband knows because he gets my rent checks, but while working we are supposed to use our stage name. I've talked with Mick a few times, but I've never had the honor of meeting you.\"\n\n\"Hi, I'm Tela. Mick's wife. I should be better about staying more involved in our rental stuff.\"\n\n\"He never let me know he had a model as a wife.\"\n\n\"Careful, flattery could get you everywhere with this one,\" Mick added.\n\n\"Men,\" Tela let out as she shook her head back and forth. The three visited for a period before the topic turned to Azure's work. She admitted she loved her job. The hours, the large weekend tips, time off and that it allowed her to travel for months at a time. In addition, she'd always been an exhibitionist and thought being sexy was stimulating.\n\nTela listened to each word, and wanted to ask if it resulted in a crazy sex life, but wouldn't dare ask the question out of embarrassment. Her attention was diverted when Azure softly ask her if either would enjoy a dance.\n\nTela replied swiftly, \"Yes.\"\n\n\"One or both?\" Azure asked.\n\n\"Both please,\" Tela answered.\n\n\"And who would like to go first?\"\n\n\"Him,\" replied Tela.\n\nThe dance started much as the one before, except right from the start Azure lost her top. And shortly after her top came off, she started teasing Mick mercilessly. Dragging her fingernails down his chest, placing her face directly above his crotch, so that her hair hid her actions. Mick closed his eyes when he felt Azure tease the outline of his cock with her teeth and followed this up with several hand strokes. Slowly, she moved back up and as she did, she slid her pebble-like nipples across his cheeks and lips. Next, she spun around, and ground her ass into his crotch. When she stood up, she bent at the waist and let Mick admire her ass. Teasingly, she pulled aside the small patch of material covering her pussy and gave him a quick view. The song was winding down, so she turned to face him, climbed onto the bench and straddled him, grinding her mound firmly against his hardening cock. While doing this she whispered softly into his ear, \"In case you didn't know, I've had the hots for you. I can't believe it took you so long to come in.\" She gave him a kiss on his cheek and popped off.\n\n\"No need to put my top back on. Are you ready?\" Azure asked Tela.\n\n\"I think so,\" she replied. She was a bit stunned by the blatant sexuality of the lap dance. Just watching the performance made her wetter, and she was tempted to pull out her husband's cock, so Azure could use it for their mutual pleasures. However, as the dance ended a panoply of butterflies were felt in her belly. Before the song started, Azure positioned herself between Tela's thighs, and pulled her down so her butt was hanging half off the bench. When the music started, Azure slowly started to dance, as though she was hypnotically weaving her body back and forth to hypnotize her prey.\n\nAn eternity later, Azure took both hands and used her finger tips to launch a cascade of touches down Tela's neck, and onto her shoulders. Ever so slowly, she pushed off the straps holding up Tela's dress and pushed it down to expose her tits. Barely sensible touches were applied to her breasts and nipples, and gradually grew firmer until Azure pinched both nipples and pulled them out forcefully causing Tela to exhale with a moan. The waterfall of fingertips continued their downward trend, to her hips, outer thighs, knees and then along the inside of Tela's thighs. She couldn't help herself and further parted her legs.\n\nTela's eyes took a momentary break from Azure to look around. Abruptly, she realized she was exposed, not just her breasts, but her pussy also. She'd forgotten Mick had removed her panties during dinner. And over half a dozen men had turned towards her or walked up to watch the show. Each of them could see her tits and pussy depending on Azure's movements.",
        "The view of her lower privates was blocked when Azure placed her head atop Tela's crotch then gathered and released her hair to block the view off all. Tela saw how Mick had reacted to the same treatment and held her breath in anticipation of what was to come. First, there was a warm breath, directly onto her pussy. This was followed up with the slightest touch of fingernails, and then a soft touch of an exploratory probing finger. It didn't last long, as Azure pulled her face upwards and elevated it until her lips were in front of Tela's nipples. While staring into Tela's eyes, Azure took one of her nipples into her mouth and tenderly sucked on it. There was something about a lady's innate knowledge, as the suckling was divine.\n\nWhen Azure pulled away, Tela was famished. Azure paid her other nipple equal attention and returned her face to Tela's bare crotch. This time, there was no teasing. Fingers penetrated her opening, pulled out and parted her lips to expose her clit. Gently, Azure's tongue started to flick it, before drawing it into her mouth and sucking on it like a lollipop. The sensation was exquisite. Tela couldn't help but place a palm on the back of Azure's head and push on it. The tactic backfired, as Azure abruptly pulled back, rose up and brought her face to her guests. \"Did you like that?\" she asked, before darting her tongue into Tela's mouth to give her a taste of herself, just as the song ended.\n\nOnce the music stopped, Azure retrieved her top and placed it back on. She returned to her spot between the two and casually asked if they'd like another dance. \"Oh my God, what would a year of free rent get us?\" Tela asked.\n\n\"She's never one to hide her emotions,\" responded Mick.\n\n\"Maybe the back room would be fun,\" suggested Azure. Mick was familiar with \"back rooms\" and generally treated the suggestion as akin to one of 'why don't you open up your wallet and let me take every cent from you.' Alas, this was the first Tela had ever heard of a 'back room.'\n\n\"Can we just go back there and have some more, or special lap dance fun?\" Tela asked excitedly.\n\n\"You're wonderful. The back rooms are for special customers. And special means, lots of clams in this place. We're supposed to ask for $300 for fifteen minutes, but I can cut you a deal. It is not a deal on me, just the best I can arrange. One-hundred for the same time, and you have to agree to buy a bottle. The cheapest is champagne. Shitty bubbles, jacked up ten times. So, for $150 we can have a little private time in the back, if no other couples are there, and every so often a bouncer will check in on us.\n\n\"That's perfect,\" spoke up Mick. He knew the deal, and appreciated Azure's offer. While it didn't seem like a great discount, it wasn't bad as he knew the house generally took 80% of all the girls took in, except for the cash tips. \"Should we go now, or wait a bit?\"\n\n\"Just follow me, and right before we go through the curtain to the back room make a dash to the restroom. I can use the time to extend our time,\" Azure advised. Alas, she didn't anticipate that the two of them would take a pottie break. When they turned, she had them ushered into a far corner room, several spots behind the curtain, and now short of time. The thirty dollars she planned on earning, went to the usher, she didn't mind as it seemed like she might be able to obtain a taste of something long desired.\n\nThe three settled down and chit-chatted briefly, before Azure suggested the fun should start. She stood up, stripped naked, and started a seductive dance that showed off all of her assets. At the end she asked, \"Who would like the first private dance?\"\n\nWithout any thought, Tela popped off, \"Me.\" Azure didn't disappoint.\n\nShe wiggled herself between Tela's legs, and pressed her right thigh firmly against Tela's mound. Teasingly, she used it to rub Tela's sex, before leaning over and softly asking, \"Do you always go commando? It's so sexy and, I think I feel some moisture on my leg.\" Azure didn't wait for a response, but instead pushed down the spaghetti straps for the second time, softly massaged Tela's breasts, bent down and started to suck on her nipples. Tela was impressed. No man had ever made her nipples generate such waves of pleasure. When Azure started to suck on Tela's second nipple, she also brought her fingers down to Tela's pussy. Her fingers shyly teased open Tela's petals, and eased a finger into her nectar.\n\n\"Ohhh, that feels good,\" Tela cooed.\n\n\"Do you enjoy having sex with women?\"\n\n\"I really haven't, just a few kisses. You're so good with your fingers.\"\n\n\"Ohh my poor dear. Maybe we can tempt you closer to the line.\" She pulled away and moved over between Mick's legs. Leaving Tela a bit frustrated as she thought something else was about to happen.\n\nAzure danced suggestively before Mick, before straddling his lap. She tossed her hair over his head to hide his face and slipped him a wet kiss while pulling up his hands and placing them on her breasts. \"Do you like them?\"\n\n\"Yes. Nice and real,\" Mick answered as he fondled her chest. As he played with them, Azure lowered her hand down, scooted back and unzipped his fly.\n\n\"What's in here?\" she asked as she fished his hard cock out of his briefs. Mick didn't say a word. \"Hands on your side, we don't want to be asked to leave,\" Azure whispered to him as she slowly stroked his shaft. She turned towards Tela, making sure she was watching and stated, \"You're a lucky woman.\"\n\nTela didn't know how she'd react if she was to watch her husband have sex with another woman. And she never anticipated the feelings pulsing through her brain. She wanted Azure to seduce her husband until couldn't help himself, and watching the erotic proceedings was making her incredibly horny. Azure pushed her snatch up against Mick's shaft and slowly ground her sex up and down, while feeding her nipples in and out of Mick's mouth. Tela unconsciously brought a hand down and started to play with her sex. When Azure pushed herself closer to Mick, Tela's view was blocked, and she didn't know whether or not the two were joined.\n\nBut Mick knew. He felt her pussy lips gliding up and down his shaft, then raising up just enough so his cock could move away from his belly. Once that movement took place, Azure lowered herself down causing his cock to glide up into her slit. Gently, she bounced up and down, careful not to be too noticeable. She tilted her head to his ear, and moaned into it while nibbling on his ear lobe. \"Tomorrow, it's possible for you to have all of me. Any way you like.\" She pulled her head away from his ear, and kissed him, French style. While their lips tangled, she aggressive humped his cock. Most would have known, they were copulating. When their kiss ended, she stopped moving.\n\nBreathing hard, and with her face glistening, she turned to Tela and asked, \"We've only a few minutes left, and they set up limits on how much time we can spend back in the private rooms, but during my off days I run a tantric massage spa. I think the two of you would enjoy a session. Any interest?\" Slowly, she continued to move her loins up and down. Mick couldn't believe the warmth, wetness and excitement encircling his cock. He'd jacked off multiple times, thinking of this woman and her wild sex appeal.\n\n\"What is a tantric massage?\" Tela asked suddenly self-conscious of what her fingers were doing, pulling them away and fixing her dress.\n\n\"It's a body massage. A full body massage. All parts, from head to toe,\" Azure advised as she continued her slow bounce. \"I can do both of you, or have an assistant help.\"\n\n\"Wow, that sounds amazing. Could we get one tonight?\" Tela asked.\n\nAzure turned to Mick and asked, \"Are you interested?\"\n\n\"Yes. I think we both are,\" he nervously answered while trying to keep from thrusting up hard into his joyful dancer.\n\n\"I can't tonight, but I have tomorrow off. I could probably squeeze the two of you in around seven. Does that work?\"\n\n\"Yes,\" Tela answered instantly.\n\nAzure turned to Mick and kissed him again. She next turned towards Tela, and whispered loud enough for her to hear, \"I'm saving the last few minutes for you, but let me put your husband's cock away in case anyone walks in.\" She stood up, bent down onto her knees and grabbed Mick's penis. She pulled her hair back, and slowly lowered her mouth over his cock while looking directly into Tela's eyes. She repeated this twice, then tucked his unit back into his jeans.\n\nThe dancer moved between Tela's thighs, pushed them apart and dropped down to her knees. \"We're not supposed to do this, but a virgin is a special occasion and the path is clear,\" She blew warm moist air directly onto Tela's open pussy. Then looked up at her and asked, \"Did you like watching me play with your husband's cock?\"\n\n\"Yessss. It's made me so horny.\"\n\nAzure planted kisses around Tela's mound, teasing and raising Tela's level of excitement, then started to lick the swollen outer lips. Tela responded by tossing her head back, and grasping the silky black strands of Azure's hair to push her lips closer to Tela's lips. Finally, Azure pushed her tongue into the woman before her, teased her clit and slowly brought Tela's clit into her lips to suckle on it. The treatment had Tela moaning loudly. Azure had to give her a quiet gesture, then returned to sucking and fondling Tela's pussy. Moments later, Tela came forcefully. Azure licked at her juices, stood up and climbed up so her feet were on either side of her guest, and her pussy was inches from Tela's face. She pulled apart her lips, and slowly pressed her pussy to Tela's mouth.\n\nTela wasn't sure what to do, but knew she wanted to taste this exotic woman's sex. Initially, she licked at the inner lips, and tenderly moved upwards to Azure's clit. When she felt Azure's hands on the back of her head, pushing on her she switched to using her lips to suck Azure's clit into her mouth. The group heard footsteps approaching, and Azure jumped away and grabbed her garments. A bouncer entered with a large group of six men and two dancers.\n\nCalmly, Azure redressed and thanked the couple for the private visit. In a low voice, she whispered to the couple, \"See you two tomorrow evening. I hope you enjoyed the show.\" The threesome stood and walked out together, and once in the main room Azure excused herself to adjust her make up. Mick and Tela sat down together in an open booth.\n\n\"Ready to leave?\" asked Mick.\n\n\"Oh God honey. I feel like, I've never felt like this. I need sex. Like, now. How about if I call our friends the Joneses?\"\n\n\"Your choice, but let's get out of here.\"\n\n\"Ok, and I'm going to put a show on for you on the way there. You're going to be so turned on you might just pull over and take me on the side of the road,\" Tela teased. This was the wild sexual side of his wife, it had gone missing for too long. The two walked out of the club, and shuffled to their car. Once in the car, Tela moved over and straddled her husband. \"It was so hot watching her rub your cock. I wanted you to fuck her hard. It was so exotic and wanton.\" She pulled her knees up and pushed them apart. \"Feel how wet I am. It's dripping down my thighs.\"\n\nMick did just that, and as he fingered his wife the two started to kiss. It was not soft or sweet. Rather, open mouths were pressed together as tongues swirled about, while Mick forcefully pushed three digits into his wife's opening. The penetration prompted Tela to unzip Mick's pants and retrieve his hard cock just as the stripper had done moments ago.\n\n\"That was so hot, what she did to you. I can't wait for tomorrow night,\" Tela spoke out between sighs. Once Mick's unit was out she raised upwards, moved her husband's hand away and impaled herself on his cock. \"Ohhh that feels so good. I just want to have sex all night honey. I think I might be going crazy. It's all I can think about anymore,\" Tela told her husband as she started to thrust up and down. She pulled her phone out of her purse and called Ms. Jones. When there was no answer, Tela let out a frustrated sigh, and started to ride her man even harder.\n\nThe car was obviously rocking, when Tela screamed out, \"Ouchh. Fuckkk,\" as the top of her head crashed into the roof.\n\n\"Are you ok?\"\n\n\"Shit, that hurt. Let's move to the back seat,\" suggested Tela.\n\n\"How about outside, on the hood?\"\n\n\"Ohh fuck. That's tempting, but, well we could get ... never mind. Let's do it,\" Tela decided as she opened the door and pulled herself off and hopped out. She grabbed her husband's hand and pulled him outside. Next, she closed the car door, walked up to the driver side wheel and bent over the hood while hiking up her dress. Looking over her shoulder with a smile, she teased, \"Would you like some?\"\n\nMick didn't need the invitation, he unfastened his pants, pulled down his briefs and walked up to his wife's bare bottom. With his fingers he played with her opening, then pulled her wetness open and pushed his manhood deep into her female hole. Forcefully, he pounded himself in her, foundling her nipples and pulling on a handful of her hair forcing her head back. \"Do you like getting fucked hard like this?\"\n\n\"Ohhh, yes. I love it!\" Tela moaned back.\n\n\"Are you going to let Ann or Azure fuck you tomorrow night?\"\n\n\"Yesss. Your cock feels so good. Fuck me harder.\"\n\n\"Are you ready for others to fuck you?\"\n\n\"Yesss honey, ohhh shit. Yesss, I want it.\"\n\nMick pulled out, and issued an order, \"Sit on the hood and spread your legs. Show me with your hands how Azure was playing with your pussy.\" Without any protest, Tela jumped up on the hood and opened her legs. While looking into her husband's eyes. She started to play. Teasing her clit, inserting fingers into herself and pulling aggressively on one of her nipples. \"Did you like the way her pussy tasted?\"\n\n\"Yes. I want more.\"\n\n\"Would you eat her out after I fucked her?\"\n\n\"Yes. I want to try everything. Please fuck me.\" Mick walked up, grabbed her thighs and hooked them around his shoulder and slammed his dick into her. Her moans were unrestrained. It wasn't long before she was there. \"Shit, honey. I'm going to cum. Ohhhh gaawwdddd. I'm cummminnngggg! Ohhhhh.\" Mick slowed his thrusts, to allow Tela a brief recovery as he knew her vagina was overly sensitive immediately after she came.\n\nHe was holding her tightly, ready to find his own relief, when his wife stiffened and yelled out, \"Oh my god. Fuck!\"\n\n\"We're sorry, we're sorry,\" a voice nervously spoke out from behind him. Mick turned to find a couple on the other side of the vehicle next to theirs standing and watching. \"This is our car and we decided to leave, walked out and, ahm, you guys were right there, you know, doing it.\" The gentleman talking looked to be in his mid-40s, while his wife appeared a decade, or more, younger. She had short blond hair, black dress slacks and a white dress shirt. It gave her a professional appearance, but her heels added a special dash of sex appeal. Her fellow had short salt and pepper hair, light eyes and was wearing a dark gray suit, sans the tie. He was the one talking. \"We didn't know what to do, and well, shit it was sexy.\"\n\nMick pulled out of his wife, and with a red face worked on pulling up his pants and tucking in his cock. It was obvious to all that they had a perfect view of his glistening manhood. \"Sorry about that. We kinda got carried away,\" he offered.\n\n\"Don't apologize. That was an exquisite show, and you do have a nice cock,\" the blonde gal offered. Tela had closed her legs and was in the process of pulling up her straps to conceal her tits.\n\n\"And you've an amazing body. Really, the two of you make for a damn sexy couple,\" the gentleman added.\n\n\"Ohh, this is embarrassing. It's my fault. I was just. Well, I was just really horny,\" Tela offered as she hoped off the car. \"Hi, I'm Tela,\" she added at the end.\n\n\"Hello. Nice shoes. I'm Jennifer, and this one with his eyes popping out is Larry. I think he finds you attractive judging from the tent in his trousers.\"\n\n\"Yeah, well, if that doesn't make a guy's unit spring forth something is seriously wrong with the guy. Beautiful smile, beautiful body and well, she's right you're beautiful.\" It was clear he was nervous.\n\nMick started to laugh. \"Actually, this is pretty funny. Can't say we've meet too many people under these circumstances. I'm Mick. Pardon our friskiness.\"\n\n\"No need for a pardon. It was rather refreshing. We've been working on getting our libido back on track, and that sure did a lot more for us than any dancer we saw inside,\" Jennifer stated.\n\n\"We had a private dance. It worked. We've been working on our libido too, but it has kind of put me in a hyper sexual mode,\" Tela advised.\n\n\"It is odd. There aren't classes about a couple going out and flirting with another couple, and just enjoying it for the fun or friendship and nothing more. Well, except that they want it to make them feel sexy and create an uptick in their romping. Touch awkward. To be honest, this is the only conversation we've even had, on this topic, with another couple,\" Larry clarified.\n\n\"What did you two do to get on the hyper train?\" Jennifer asked.\n\n\"I had her dress risqu\u00e9, flash some strangers and we discussed fantasies,\" Mick told the couple. \"And from there we decided to play with having a fantasy or part of a fantasy come true.\"\n\n\"But how do you get started?\" Larry inquired with a serious look on his face. \"I'm not well versed in bringing up such subjects, especially with people you don't know and even worse with those that you do know.\"\n\n\"It's like swimming. In a way, you have to jump in as one can't swim if they're not even in the water,\" Tela clarified. \"Since you're at a strip club, I'm assuming both of you aren't against either of you flirting with others. So, you do that. You flirt. If words are hard to find play truth or dare, or something like that.\"\n\n\"But what if I or we make a fool of ourselves?\" Larry asked.\n\n\"Nothing ventured, nothing gained. And besides, you can embarrass yourself in so many other ways. Stepping in gum, a chunk of spinach stuck in a tooth during a speech or a misstatement to an official,\" Tela explained.\n\n\"Were you shocked to discover us, ohmm, mating?\" Mick asked.\n\n\"It was a surprise. I was going to leave, but Larry insisted we watch,\" Jennifer clarified.\n\n\"Did you enjoy watching?\" Tela asked swiftly.\n\n\"It was. It was stimulating, I guess is a good word. If you hadn't seen us who knows what we may have done,\" Jennifer answered. It was at this point Mick noticed Jennifer's slacks were unfastened and she was using one hand to hold them together and her blouse had the top buttons undone.\n\nLarry saw Mick's eyes, and spoke up, \"I really couldn't help myself. The passion between you two was electric, and my hands sort of went crazy playing with her.\"\n\n\"I tried to push them away, but gave up. And it was erotic. It seems strange talking about it with you. Like the couple we watched having sex were different people,\" Jennifer offered. Mick noticed that the discussion had caused her nipples to protrude.\n\n\"Maybe we should have just waived you over,\" Mick added with a laugh. In response, Jennifer's face turned red.\n\n\"Oh god. I don't know what we would have done,\" Jennifer stated, aware that her nipples were sticking out.\n\n\"Might you have joined us?\" Tela asked in a slow sexy voice. Mick witnessed the change in her demeanor and realized she was in her seductive mode. When asking the question, her eyes first fell on Larry, but they ended up on Jennifer and looked as if she was drinking her in.\n\nThe air was silent for a period, when Mick's voice piped up, \"Would you like to kiss Tela. To celebrate a new friendship?\" Tela was surprised her husband had volunteered her, but it sent a zing through her. She didn't object, and now her eyes searched both faces for a response. Larry looked down at his feet, then up at Tela as he rubbed his face, and finally to his wife. She wasn't looking at him.",
        "\"I would,\" spoke up Jennifer. \"What the hell. We did go out tonight to try and light a fire. It can't hurt right?\" She stepped over to Tela, so their hips were inches apart and slowly the women's hands wrapped around each other. This was followed by smiles and a moment of eye glazing, and ever so slowly their lips came together. Gentle pecks were exchanged, followed by a kiss in which their lips remained together for a period. They pulled apart, exchanged smiles and again kissed. This time the kiss persisted.\n\nLips parted, and tongues danced together. Jennifer's pants slid down a bit, reveal the top of her bottom and that she wore a thong. Tela's hands lazily slid down to squeeze her cheeks, and Jennifer returned the gesture, but raised up Tela's dress to expose her lower half. Mick had to admit the kiss was damn hot. When he glanced over at Larry, he saw that his new friend was inadvertently stroking his cock through the fabric of his trousers. Apparently, he thought it was hot too.\n\nThe women parted to catch their breath and exchange more smiles, \"Wow, I never thought it would be so hot and different.\" Jennifer stated to Tela.\n\n\"I know. Isn't it great?\" She didn't wait for an answer, but instead pulled Jennifer's face back to her own. This time there was no peck, but instead two lust loaded individuals. Tela's hands managed to entirely unbutton Jennifer's blouse, pushed up her bra and exposed her breasts. She momentarily broke their kiss to suckle her nipples, but just briefly, then resumed their make out session. Jennifer's left hand had moved from Tela's ass around to the front side. Based on the whimpers escaping from Tela's mouth, it was clear Jennifer was playing with her crotch. This continued for another minute before the two parted, both with red faces and surprised at their passion.\n\n\"Did you want to kiss her too?\" Jennifer asked Larry, after taking a step away.\n\n\"Sure, if that's ok with everyone?\" He looked around at the other three adults and was greeted with smiles, so stepped towards Tela.\n\nJennifer walked up to Mick, turned around and pressed her back up against him. She turned her face towards him and advised, \"I'll give you a kiss too, if you don't mind, but I first want to watch for a bit.\" She followed this up by grabbing Mick's hands and wrapping them around her front.\n\nLarry walked up to Tela, and placed his hands on her hips, moved his head forward and the two kissed briefly. It didn't start with a peck like the women's had, but went directly into overdrive. Their bodies pressed together, and Larry placed his hands on her naked rear to pull her closer.\n\nAs he did this, Jennifer pushed her bottom firmly into Mick's crotch, enjoying the feel of his hard cock through his pants. \"It is unbelievably hot. Can you unclasp my bra? I saw you looking at them.\" Without answering, Mick unhooked her bra, she managed to wiggle out of it and toss it onto the hood of their car.\n\n\"Would you mind if I kissed you while you are on the hood, like you were when we saw you?\" Larry asked Tela during a kissing break. \"It looked hot as hell. Like a scene out of a movie.\"\n\n\"Sure,\" Tela answered. She backed up to the car's hood and jumped up, so she was sitting on it with her knees facing forward. Larry approached, and reached out to again wrap her up. Tela responded in kind, but when he approached her knees parted so he was now standing between her thighs. Mick knew Larry now had an unobstructed view and access to his wife's pussy. Given the other couples position, he didn't have a problem pulling his own hands up and cupping Jennifer's tits.\n\nTela was surprised that she'd willingly opened her thighs, especially given her lack of panties. As they passionately kissed, she could feel his hard cock pressing into her mound. The first kissing session had almost melted her, and now her longing was getting worse. Briefly they parted their lips, allowing for each to suck in mouthfuls of air. They glazed at one another, but said nothing. Instead, Larry fondled her tits, and dropped one hand down to her crotch. He moved his hips back to make room and started to play with her pussy.\n\n\"Ohhhh,\" Tela moaned softly, trying to hide it. \"I think we've moved past kissing.\"\n\n\"Yes. We better kiss some more then,\" responded Larry.\n\n\"Ok,\" Tela simply answered. The two resumed their open-mouthed lip lock, except Larry's fingers pushed into Tela, and she responded by putting her own hand down and sliding it beneath his slacks. There she discovered a long hard cock, its tip well-coated in precum. She wanted to see it. Two hands were brought down to Larry's waist, and used to open his trousers and pull free his unit. She was impressed. It was longer than her husbands, but thinner. However, the tip had a bulbous head, easily twice as wide as the rest of his cock. His head was the size of a lemon. Tela cupped it with her palm, coating the large head in precum. When she looked up she saw Mick and Jennifer were watching them, and then Larry was kissing her again.\n\nMick was shocked by his wife's lust. It appeared, she wanted Larry to take her. It was obvious they were playing with one another's privates which prompted Mick to slide his hand under Jennifer's panties to tease her slit. The attention yielded a sigh from Jennifer. \"Oh god. If she's not careful he might try to put in her,\" she stated absently. She pulled Mick's hands from her and turned around to face him. \"Kiss me! And tell me what they're doing?\" She brought her lips up to kiss and punched her tongue deep into his mouth. He was surprised how quickly things were progressing, well ahead of his plan.\n\nTela kissed Larry back with equal fierceness, but she kept thinking of his fat cockhead and how it would feel. These thoughts forced her to pull her face away from his, to again look at his cock. She wanted it. Slowly, she pulled up her knees, while keeping them wide which caused her entrance to align perfectly with his head. She grasped his shaft and guided the tip of his dick to her entrance, then looked up into Larry's eyes.\n\n\"Do you want me to fuck you?\" Larry whispered to her. She answered by curling a hand around his neck and bringing her lips to his, while using her other hand to pull his dick towards her. Larry wasn't stupid. He placed his hands on her back side, and began pushing his penis into her. It took some work. Several thrusts later his head still had not cleared her opening.\n\n\"Goodness. Your head. It's wide,\" Tela sighed and then with another forceful thrust it was past her entrance. Larry's cock was fully embedded. Slowly, he started to gyrate his hips back and forth. \"Ohhhh, fuck. This is crazy.\" Tela couldn't believe a stranger was fucking her, but she wanted it bad, and it felt so good.\n\nJennifer heard the couple behind her moaning, so pulled her lips from Mick's to ask what the two were doing. \"They are fucking,\" Mick replied honestly.\n\n\"Oh shit,\" Jennifer responded as she turned around. She watched for several seconds, before again turning to Mick. Without saying a word, she pushed down her slacks and thong, leaving them on the ground. Next, she squatted down and lowered Mick's pants until his cock sprang free. She licked his head a few times, before taking it in her mouth and blowing him. He felt high. Watching his wife, and getting a blowjob from a gorgeous hot blonde was something he'd only dreamed of before. He could feel tingles in his Johnson all ready, and she must have sensed this too. Jennifer rose up, and asked, \"Would you fancy a go with me. Next to them?\"\n\n\"I can't think of anything I'd rather do right now,\" he answered. Jennifer walked over to the front of the hood, and bent over. Her butt was poised, and legs in an upside-down V shape. She positioned herself, so she could easily reach out and touch either Tela or Larry. Mick walked up behind her, played with her opening and used her juices to lubricate his cock then pushed into her. She looked to be in her early thirties, and had a vagina with a much different feel than his wife's. It was smaller, and wrapped tightly around his shaft.\n\nEach time Mick thrust into Jennifer she let out a whelp. Larry's eyes grew wide when he witnessed the willingness of his wife to engage in the romp. His thrusts were drawing a steady stream of moans from Tela, and when she leaned over sideways to share a few kisses with his wife it pushed him near the edge. The two wives shared a long kiss, and during it Jennifer placed a hand on Tela's upper mound to play with her sensitive spot. It brought forth, a long series of moans from Tela, and ended with her pulling on her own nipples while grunting out, \"I'mmm cummmiinnngggg.\"\n\n\"Ahhh fuckkk. Me too,\" hissed out Larry as he thrust himself forcefully into Tela's body. Afterwards, he disengaged, and stood back to watch his wife. Tela slid over so she could more easily kiss her new friend, while Mick continued to screw her. A moment later, he pulled out, and asked for Jennifer to lay on her back. When she did, he hooked her legs over his shoulders and plowed back into her.\n\n\"Is this what you imagined doing while you were watching us?\" Mick asked between breaths.\n\n\"This is crazy,\" was Jennifer's only response. Tela was squeezing and kissing on her nipples and slowly kissing her way downwards. When she got to Jennifer's waist, Mick pulled out and guided his cock into his wife's mouth. She sucked on it briefly, but moved down for another reason. When just above Jennifer's vagina, she positioned the tip of her husband's cock at Jennifer's entrance, and started to flick her tongue across the young ladies' clit. While she was doing this, Mick pushed his cock back into Jennifer and gradually returned to fucking her.\n\nThe joint effort yielded a sweet reward. Jennifer's body writhed back and forth, as her whelps grew louder and louder. Seconds later, she clenched her fists firmly, forced her head back as far as possible, as she grimaced. \"She's cumming. And hard,\" announced her husband who was standing next to the car and using his phone to film his wife's explosion. \"Keep fucking her,\" he cheerfully encouraged. \"She'll cum more.\"\n\nHe was correct. She exploded again a short period later, and after that Mick let his wife have unhampered access to her pussy. Tela used her tongue to unfold another orgasm. When Jennifer relaxed, Mick roughly slammed his cock back into her. Fucking her hard, until his own body started to shake. Jennifer noticed this, raised her head up and pleaded, \"Cum in my pussy. Let it go.\" Mick obliged and released three blasts of semen. When he eased his cock out, the four adults stood up.\n\n\"Well, that was an interesting first kiss. Maybe we should get together, and see how a second kiss or more feels,\" suggested Tela with a laugh.\n\n\"Holy Cow, that was amazing. I never dreamed anything like this would happen to us. I'll get our cards. I think a repeat get together is a must,\" Larry excitedly advised. He searched for his keys, and then entered his car to find their cards. Jennifer and Tela shared a long kiss, which involved some additional fondling.\n\nWhen they pulled apart, Tela offered to help Larry find his cards. It seemed to take a bit of time, involved both in the back seat, but gave Jennifer and Mick a few minutes alone. \"Thank you,\" Jennifer spoke to him, before placing her arms around him and pulling him in for a long kiss. Their hands teased each other, and when she softly stroked his shaft, Mick didn't hesitate to press two digits into her. The attention surprised her. \"You don't have to touch me down there. Some people think its gross now,\" she stated while trying to hold still.\n\n\"Not me. I just wish I had the stamina to have a few more rounds with you.\"\n\n\"You better stop. I could go off again. Shit!\" Jennifer sighed. Just as she made the request, Mick pulled his fingers out of her and used them rub her clit. This didn't help her concern. \"Fuck. It's happened.\" This time she grabbed his rubbing hand and squeezed his wrist hard, while leaning her forehead on his shoulder and muttering short bursts of, \"fuck, fuck, fuck\" repeatedly. When her body unleashed, Mick again surprised her by returning his fingers to her pussy.\n\n\"I think we do need to get together again. There is lots of fun to be had with someone like you,\" Mick informed the blonde.\n\n\"God, how I'd love to steal you for a day and use you over and over. We better get going or other people are going to discover us.\" He gave her one last passionate kiss, and pulled his fingers out. Jennifer responded by pulling his fingers to her mouth and sucking them clean. \"I hope you guys don't have too many plans in the next few days.\" With the hint put out, she pulled away, grabbed her pants and bra to quickly redress. The timing was good as Tela and Larry were climbing out of the back seat.\n\n\"Our information is all exchanged, so let's text tomorrow about how everyone feels, and maybe pick a date to enjoy some private time together,\" Tela suggested. The foursome agreed, and made their goodbyes.\n\nThe car ride home was filled with lots of questions, laughs and can-you-believes. Tela recounted how Larry's bulbous cock head stretched her wide, and how comfortable she was with the situation, being unplanned it seemed spontaneous and fun. When the two finally got under the covers, they enjoyed snuggling with one another before drifting off for a long night of sleep.\n\n###"
    ],
    "authorname": "wetwordmixer",
    "tags": [
        "group sex",
        "voyeurism",
        "threesome",
        "stripper",
        "swapping",
        "threeway",
        "group"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/four-nights-pt-01"
}