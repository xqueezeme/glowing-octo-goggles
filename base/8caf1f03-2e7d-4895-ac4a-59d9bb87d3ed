{
    "title": "Silver Ch. 08",
    "pages": [
        "Pelaam\u00a9 June 2008.\n\nCh 08: Nemesis\n\nThe luxury car was opened by an immaculately uniformed doorman for the smartly dressed executive. He slid comfortably inside, his emerald-green eyes running appreciatively over the car's interior. The seats were leather and roomy and, if needed, could be slipped into a fully reclined position. There was a laptop computer for work and a store of DVDs for entertainment. A small fridge held cold drinks and snack food and there was a matching cabinet holding glasses and drinks that did not require chilling. \n\nHe ran a hand through thick, silver hair as he smiled at himself in a reflective surface. The negotiations had gone well. He now faced a couple of hours drive to reach a tiny airport and from there to a space-port. The world only boasted a few small space-ports, but as its status increased, so would its number of ports. \n\nImmersed in his reports, and taking advantage of the drink provided, it was an hour later that he realised that his car was taking a tortuous route to the airport. They had left the main road and were currently travelling at speed towards the desert in a circuitous direction to his destination. He rapped on the glass behind his chauffeur. \n\n\"I have no desire to take the scenic route,\" he barked angrily. His voice had a dry, rasping quality yet possessed power and impatience. It was the voice of a man clearly used to the obedience of those around him.\n\n\"Sit back and enjoy the ride, Jabez. You're taking a little detour.\"\n\nBefore a darkened screen blocked off Jabez's view of his driver, he caught a glance of him in the vehicle's mirrors.\n\n\"Tristam!\" he exclaimed. He tried to use the vehicle's communications and then his own only to find nothing working. His eyes narrowed, becoming as hard and cold as the gem whose colour they bore. Then he shrugged, poured a generous measure of amber liqueur and sat back, lifting his glass in an ironic toast to the now invisible back of his driver.\n\n****\n\nJabez glanced around, his face carved into an expression of boredom. The car was out in the desert. All that could be seen was red rock and orange sand and overhead the sky was a cloudless turquoise as the two saffron suns each reached their zenith. \n\n\"Out of the car, Jabez,\" Tristam's voice commanded.\n\n\"And if I don't?\" Jabez retorted, not even bothering to turn to face the man now standing at the door.\n\n\"Then you stay there.\"\n\nJabez watched as Tristam walked over to sit in the shade of an outcrop of rock. He noted the cool-box from which the blond took a bottle of water. He had been quite certain the other man would not be alone. He idly wondered who else would be watching from the cover of the desert rocks. He also wondered just how long Tristam was prepared to wait. He poured himself another drink. Five minutes passed, then ten...fifteen. Jabez frowned. \n\nTristam was paying neither him nor the car any obvious attention. He purposely waited another fifteen minutes, but Tristam simply looked as though he was drowsing in the desert heat. Scowling, Jabez re-filled his glass and began a slow, deliberate saunter to the seated man. \n\nAs he closed the distance, he begrudgingly admired Tristam's obvious, latent power. The blond sat loose-limbed, a dusting of golden fur visible where he had unzipped his chauffeur's uniform. Tristam oozed male, sexual charisma. Jabez gave a wry smile as found his eyes riveted to the other man's movements as Tristam sat up slowly and raised a fresh water bottle to his lips. \n\nJabez watched the bobbing motion of Tristam's Adam's apple and coveted the droplet that escaped to slide down the skin of the blond's throat. He bedded both sexes with equal fervour and appetite. Although he preferred beautiful, malleable and accommodating bed-mates he would be more than happy, at that moment, to have the powerful blond on his knees as he slaked his carnal appetite. The surge at his crotch told him his cock was in full accord with that idea. At that moment, sapphire met emerald and Jabez smirked at the disgust in Tristam's cerulean depths.\n\nHe stopped as Tristam stood up. The two men were almost equal in height and breadth and each regarded the other as though something dangerous and volatile.\n\n\"So, Tristam,\" Jabez let his voice become a low purr. \"What brings you to this little nowhere rock? Were you missing me? I've never been kidnapped before. It's a nice isolated area. Are you going to have you wicked way with me? Is it my face you picture when you orgasm inside pretty Rayner?\"\n\nTristam's stomach rolled in disgust at Jabez's words. Almost immediately he relaxed as a gentle caress flitted through his mind. His beautiful husband might not know the reason for his mate's distress, but the loving touch instantly defused Tristam's anger. Instead a slow, scornful smile spread across his face.\n\n\"Such a vivid imagination, Jabez,\" he drawled laconically. \"Perhaps it's more the case of you dreaming of being taken by me. Sorry, but I don't cheat on my husband. I've no need and you pale into nothing alongside Rayner.\" He gave a mental smile at the darkening of Jabez's face. The blond knew from personal experience that conceit and arrogance were two of Jabez's weak spots. \n\n\"Wasn't it enough that you all but destroyed my employer's long-established business, Tristam? Are you looking to destroy me, too? Perhaps I should consider a charge of harassment.\"\n\n\"Hiram Enterprises was investigated by multiple teams of Elite across several worlds,\" Tristam said slowly, as though addressing a child. \"My team investigated your domain and found exactly the same as the others. Hiram Enterprises was employing unethical, inhumane and illegal methods. It was only Hiram's reputation, almost limitless access to funds and an extremely well-skilled legal team that stopped him...and the likes of you...from being incarcerated as was deserved.\"\n\n\"We lost every contract to supply and develop weaponry for the advanced worlds. It cost us billions in credit. We can only supply hick planets like this with basic stuff sold cheaply until we can rebuild our reputation,\" Jabez hissed.\n\n\"You deserved worse. Quite frankly I would happily see you and Hiram behind bars for a good many years,\" Tristam growled. \"That you're free to trade at all is a miscarriage of justice. But that's not why we're here.\"\n\n\"No?\" Jabez sneered. \"Then what?\"\n\n\"Hiram hasn't been seen in public for many years, but you are his eyes and ears. So I want you to deliver a personal message to him. Tell him I know, my family knows. Bloodfeud has been called by Willis, sire of Uist. Wherever Hiram hides, we will find him and be avenged.\"\n\n\"Is that all?\" Hiram asked mockingly.\n\n\"I think that's more than enough,\" Tristam said, his voice cold and menacing. He had seen the shift in the hard, green eyes and had scented Jabez's surge of anxiety. The man was clearly well-aware of what Tristam alluded to. \"But if not, tell him this. Bloodfeud extends beyond PrideHome. Phixia has joined its call as has one of the Aantnaa worlds. Sholto has some good insectile friends.\" \n\nTristam felt grim satisfaction wash over him as Jabez's anxiety increased. The insect-evolved races were renowned for their well-structured society and lawlessness was unknown amongst those dwelling on their homeworlds. Sholto's friends had reacted with fury and a desire for vengeance on hearing of his abduction and treatment as well as what had happened to the others of his family.\n\n\"What are you expecting from him?\" Jabez asked.\n\n\"The opportunity to give himself up. To stand trial rather than be dug out from whichever hole he's taken refuge in, confessing his guilt in regards what has happened to me and those I love. Have no doubts, Jabez,\" Tristam said, his voice dropping to a deadly whisper. \"He will be found and those who have had a part in this will also be dealt with.\" \n\nHe scented Jabez's spike of fear knowing he had struck home. \n\n\"Just the belief you know something is enough for me to kill you. But, this time, you go free. Make sure he understands, Jabez and make sure you understand that if I find you were involved there will be no place of safety for you.\"\n\nJabez stared at Tristam's retreating back, a mix of anger and fear coursing through his veins.\n\n\"Another car will come for you in an hour,\" came the parting words, the blond not even bothering to turn back.\n\n****\n\nIn their quarters aboard 'Silver' Rayner sat astride his husband's thighs. He gently undulated his body, letting their swollen shafts rub erotically. Tristam's hands slid along his thighs, over his pregnant swell and up to tease at the peaked nubs at his breast. A moan slid from his parted lips and he gazed down at his mate, smiling at the love he saw there and knowing it reflected the look in his own cinnamon orbs. His smile widened as their minds added subtle caresses to incrementally increase their arousal. \n\n\"Better?\" he asked, knowing how his lover had felt whilst facing Jabez.\n\n\"Much,\" the blond sighed contentedly. He had debriefed those of his family unable to accompany him, taken a hot shower with his beloved mate and finally felt clean and calm. For several long minutes the couple had simply enjoyed skin-to-skin contact but he could feel the need for more growing. He watched Rayner as the younger man begin to rub with a little more urgency. \"Let me make love with you, angel?\" he asked, suddenly desperate to join with his mate.\n\nWith tender care, he laid Rayner on his side, spooning tightly behind him. Coating a single finger with oil, he rubbed over the hidden entrance to his lover's body, pressing kisses to the bare shoulder in front of him. He nuzzled into Rayner as he slid the digit into molten heat, both men moaning at the intimate act. He reached under and around his lover's waist to stroke slowly at slick, erect flesh, relishing the way his mate eagerly responded. The lithe body pushing back and rocking forward as soft cries of pleasure escaped Rayner's lips.\n\n\"Love you so much,\" Tristam whispered.\n\n\"Love you, want you,\" Rayner murmured, trying to increase the tempo of their lovemaking.\n\n\"Gently, love,\" Tristam soothed. \"Let me do all the work.\" He slid a second oil-drenched finger to begin a caress of Rayner's jewel. Reluctantly he removed his fingers. It was too uncomfortable for his husband to take more than just Tristam's fingers. Although he missed the ultimate physical intimacy, Tristam would do nothing that caused Rayner the least discomfort during his pregnancy.\n\nSpooning closer Tristam pushed his aching shaft between Rayner's smooth thighs. He started with a slow rhythm, his rod continually weeping its desire and sliding easily back and forth. Incrementally he increased the pace, listening assiduously to the panting breaths and mewls of delight. His hand began a twist and flick at the top-stroke of his movement at the head of his mate's engorged penis, causing Rayner to groan and buck as much as his position would allow.\n\n\"Come for me, angel,\" Tristam husked. \"Take me with you.\"\n\nAt the words spoken with such raw need, the heat that had been centred low in Rayner's belly began to expand outwards with searing intensity. Rayner's breath came in shallow pants as he felt every cell and synapse melting from the heat of his imminent climax. It was impossible for him to tell if the pleasure he felt was just his or entwined with his lover's as they mentally shared their race to release. He cried out his lover's name as his orgasm detonated and his seed fountained over Tristam's hand. \n\n\"Love you, I love you,\" Tristam groaned. The waves of pleasure in his mind combined with the feel of his lover's passion pushed him beyond his limits of endurance. He came hard, shuddering with the powerful release and anointing his lover's honeyed skin with his come. \n\nHe licked at his hand, relishing the flavour of his mate's precious cream. He carefully rolled Rayner onto his back, licking the smooth thighs clean, before nuzzling at Rayner's depleted sac and lapping the softening, spent flesh. He bent over the supine form to mate their mouths, their tongues languidly dancing in the satiated afterglow. \n\n\"I love you,\" Rayner smiled, seemingly glowing with joy. He nestled comfortably against his bigger mate and gave a sated sigh. He snuggled impossibly closer as Tristam's arm wrapped protectively around him and the two men traded soft kisses and declarations of love.\n\n****\n\nOn the main deck of 'Silver', Uist sat in the command chair, Sholto curled drowsily in his lap. Although the ship's AI was on full alert, they no longer felt safe enough without someone on deck. Uist wanted to let his precious mate sleep more comfortably, but knew Tristam and Rayner needed time to reconnect and it was too close to Theophilus' birthing for the blond to be an active part of the team. \n\nIt was difficult for the PrideHomer to allow any of the pregnant males to be too far from his protection and he was relieved that they took his protectiveness with good grace. He smoothed some of his lover's curls from the beloved face, smiling as Sholto murmured wordlessly and snuggled closer.\n\nUist knew Theophilus and Xavier would be in the ship's pool where the Dregan could move most easily, the water supporting his heavily pregnant body. The blond was now at his most vulnerable. He could not be left alone as he was nesting for his imminent birth. Once the instinct kicked in, he became oblivious of anything other than making somewhere safe and comfortable to have his child. \n\nUist's smile grew as he remembered some of the places the blond had selected. One nest was at the foot of the bed he shared with Sholto, another was in Tristam and Rayner's room. Whilst they were acceptable, another behind a section of piping in engineering was not. The cat-man shook his head, still finding it hard to believe the blond had negotiated his body in and around the metal tubing. Unsuitable nests were quickly removed and Xavier informed. Uist knew his lizard brother would make certain that Theophilus was left with only those nests the reptilian considered appropriate...and safe.\n\nThe knowledge that Theophilus, Rayner and Sholto were not free to have their children openly and in safety had the big male growling angrily. He wanted to crush their nemesis' larynx, tear out his spine, rip his intestines from the still living body and he had no cares as to how primitive or bloodthirsty those thoughts were. His mate and child had been threatened as had those he loved and protected. Any PrideHomer, aware of the invoked Bloodfeud, who came across Hiram would run him down and rend him apart. \n\nHe pushed the thoughts from his mind as Sholto shifted restlessly as if aware of the direction of Uist's thoughts. He nuzzled lovingly, purring to settle his mate. He lifted the hand Sholto had possessively on his breast and kissed the palm before replacing it. He smiled as Sholto settled. He let his own hand cover his lover's pregnant swell, grinning as his child seemed to know and moved beneath it. There were few placed he felt truly safe but at that moment, his lover in his arms and his child shifting beneath his hand, he was at peace.\n\n****\n\nOn a nest of thick towels and sumptuous pillows, Theophilus lay on his back as Xavier pleasured him. The reptilian's long tongue slithered over his swell, along his sensitive inner thighs, over his sac and from root to tip and back along his erection. The tip of his husband's tail teased along his shadowed declivity but did not try and penetrate. \n\n\"Close, my husband, so close,\" he moaned softly, reaching to caress his lover's lilac frill.\n\nA gentle pinch to a swollen pink bud as Xavier's tongue probed at his slit and Theophilus cried out his mate's name as he reached his zenith.\n\nXavier was not surprised that despite his climax, Theophilus did not ejaculate. His precious mate was too close to birthing. It would only be after his body had recovered that he would start producing his seed once again. The lizard was filled with a mix of anticipation and apprehension. Although they had a name, their adversary was still an unknown quantity. \n\nHe moved to kiss his lover as Theophilus finally recovered from his climax. His tongue flicked in and out of Theophilus willing mouth, the blond stroking at Xavier's smooth skin. \n\n\"Thank you,\" Theophilus whispered, already he was finding it difficult to keep awake. As much as he loved carrying Xavier's child, he hated the debilitation that pregnancy brought with it.\n\nThe lizard gazed tenderly at his beloved. Theophilus tried so hard to keep going even when his body protested. The Dregan had been particularly active in helping to nurse Alden following the beast-man's bouts of surgery. Xavier had deemed it less stressful to let his mate be a participant in Alden's care than for the blond to be worried. \n\nTo everyone's delight Alden had come through his initial recovery from injury exceptionally well and through a couple of further bouts of surgery intended to work on replacing his destroyed eye and facilitate better speech. \n\n\"Sleep, my heart,\" Xavier whispered. \"I will be here to watch over you.\" \n\nHe tenderly covered the already drowsing blond with a large, soft sheet and sat at his mate's side. He was worried, as were Uist and Tristam. He was also angry that the happiest time of their lives was being tainted. He felt Hiram knew too much about Tristam, even for a man of his wealth. He prayed that their defences were sufficient to protect their vulnerable ones from him. \n\nA noise had him instantly on his feet. He relaxed as he saw Rayner, wearing just a loose shift, with Tristam behind him.\n\n\"May I stay with you and Theophilus?\" the brunette asked. \"Tristam wants to relieve Uist and I'm too tired to sit up with him.\"\n\n\"Rayner?\" Theophilus opened sleepy, golden orbs and then raised an arm in invitation. \n\nWith a little assistance, Rayner was manoeuvred to lie alongside the blond, both younger males asleep in seconds.\n\n\"He will be fine here, my brother,\" Xavier assured.\n\n****\n\nUist was grateful to Tristam for giving him time to be alone with his mate. Sholto was now lying on their bed, his legs spread wide, his erection hard and leaking. Uist knelt alongside the supine form, his tongue licking every precious inch of his mate's skin. Uist's lips mated with his lover's, no longer gentle and tender, but searing and passionate. Uist then moved his kisses down Sholto's jaw and to his neck, sucking and biting lightly. As he traversed his lover's skin, he heard Sholto cry out softly at a harder bite between his neck and collarbone, but Uist soothed away the hurt with a laving tongue and a swirling lick. \n\n\"Mine,\" the cat-man growled, needing to mark his mate.\n\n\"Yours, Uist, yours, yours,\" Sholto moaned. \n\nUist moved on to the furred chest, pressing moist kisses across Sholto's breast. He suddenly sucked a nipple into his mouth, his tongue playing over the peak.\n\n\"Oh, please,\" Sholto gasped, hips jerking up involuntarily. White-hot fire shot straight to his groin, his already rock-hard erection oozing tear after tear of need. In response the big male bathed his nipple in small kitten licks, his fingers pinching and tweaking the other one making Sholto twitch and moan. Sholto's hands ran through Uist's hair, feeling its texture and petting his lover as well as holding him to his chest. Uist knew how sensitive his nipples were. \n\nSholto let his eyes fall shut as Uist switched to the other nub, suckling it as his fingers teased the one previously in his mouth. Sholto was certain he was on fire. Uist's licks and nips were slowly and incrementally stoking the inferno of love and desire that was consuming him. His shaft was begging for contact, silver trails glistened in the thick pelt of pubic hair and his lightly furred abdomen. Sholto let his hips rise and fall, whimpering softy, and rocked his head from side to side. ",
        "Uist revelled in making his mate come undone at his touches. He lapped at Sholto's heated skin, its fine sheen of perspiration adding an extra saltiness to the taste. He laved the cinnamon nubs into hard peaks, nipping carefully to mewls of delight. He could scent Sholto's increasing arousal and the glittering silver contrasting with crisp, dark hair, beckoned silently. He licked around the base of Sholto's engorged flesh and the decorated abdomen.\n\nCertain his mate was at the limit of his endurance, he engulfed the straining penis to the root and pressed the tip of his finger against his lover's tightly furled flesh. A wail of completion accompanied the outpouring of Sholto's nectar and Uist drank greedily, massaging the younger man's sac to milk him fully. As he swallowed the last drop of the salty-sweet elixir, Uist knelt up, pumping roughly at his own damson-hued flesh. He roared his release, anointing Sholto's still flushed chest. Breathing harshly in the aftermath, Uist rubbed his cr\u00e8me into his mate's skin and inhaled deeply. A heady scent of satiation, sweat and their joint releases washed over him and he purred contentedly.\n\n\"Possessive, love?\" Sholto muttered drowsily, knowing the answer already.\n\n\"Of you? Always, my own,\" Uist replied honestly. He stretched lazily to lie alongside his lover, running a finger over the furred chest and circling the dusky nipples. He captured Sholto's reddened lips with his own and let his tongue sweep imperiously into the willing mouth. As he pulled back he tenderly stroked Sholto's face, the younger man angling into the loving caress. \"You need to sleep,\" Uist rumbled, seeing the smudges under Sholto's eyes. \"Would you be willing to join Rayner with Theophilus and Xavier?\"\n\n\"You wanna sit with Tristam?\" Sholto murmured, post-orgasmic lethargy enveloping him.\n\n\"I do not want any one of our family alone at present, even here on 'Silver'.\"\n\n\"I understand, lover,\" Sholto replied, nuzzling into his big mate.\n\n****\n\nXavier glanced up to see Uist striding towards him, a sleeping Sholto in his arms. The reptilian smiled and pulled back the sheet on the free side of his young husband.\n\nAs Uist lay his precious bundle down, Theophilus instinctively encircled the darker male with an arm and Sholto burrowed as close as he could get. The cat-man smiled tenderly at the three sleeping men.\n\n\"They are so fragile, so vulnerable and yet so strong and so brave,\" he said to Xavier. \"His time is very near,\" he added as he touched Theophilus' hair with a barely-there caress.\n\n\"I can do little to help him in the actual birthing,\" Xavier sighed. Nanobots would try and stop his body performing as it needs, but I can step in once our child is delivered and ensure that for the next time I can help more.\"\n\n\"We will all help him when his time comes,\" Uist said determinedly as he stood. \"I will sit with Tristam. If you need anything, call us.\"\n\n****\n\nThe six men headed from 'Silver' to the house of Jameson and Aurora. It saddened them to see the level of security at the place they regarded as their home. A mixture of electronic systems as well as personnel made it seem cold and impersonal rather than inviting and homely. They were met at the door by the older couple, Aurora whisking away her 'boys' to settle and fuss over, whilst Jameson indicated Tristam, Xavier and Uist should accompany him into his den.\n\n\"Willis has been in touch,\" he said. \"It seems Tristam's little chat has caused long-reaching ripples. It's still very low-key, but it's there.\"\n\nThey looked up as another PrideHomer entered and instantly Uist strode over to him, the two males rubbing their faces in greeting.\n\n\"This is Denys,\" Uist said, initialling the formal greeting. \"He is my sire's younger sibling.\"\n\n\"He has offered to be part of your personal security, boys,\" Jameson explained\n\n\"I have brought my sons, Jaymz and Dayd,\" the big male rasped. Taller and broader than Uist with caramel fur, he stepped up to personally greet Tristam and Xavier. After rubbing faces he clasped Xavier's shoulder. \"The Pride looks forward to their newest member's safe deliverance and I to my first great nephew.\"\n\n\"Thank you, Denys,\" Xavier nodded his gratitude. \"I cannot express how grateful I am to all who have stepped forward to help protect us or find our nemesis.\"\n\n\"He will soon be no threat. I swear it,\" Denys growled.\n\n****\n\nTristam accompanied Uist and Jameson to Elite HQ wanting to personally review all the information they had. Jameson's internal security investigation had uncovered only two rogue Elite personnel, which included Theophilus' abductor. Tristam intended to go through everything Jameson had. A couple of hours of intense study later and Tristam needed to take a break. \n\nHe stared at his reflection in the washroom, seeing the toll that the recent events had taken on him. He gave a mental sigh. Soon it would be over. He glanced up at the overall-encased engineer who nodded at him as he headed to a cubicle. \n\nAs Tristam moved to leave, the engineer raised his hand, discharging a small needle from the device on his wrist. He grinned coldly at the fallen blond. Stepping past the unconscious man, he pulled the specially-modified trolley into the room and removed a shallow shelf of tools. It concealed a large empty space that he carelessly bundled Tristam into. Whistling jauntily, he replaced the false top and wheeled his prize away.\n\n****\n\nTristam woke, letting himself come to full consciousness slowly. He listened carefully and scented as unobtrusively as possible. Neither sense told him anything much. The room smelt of antiseptic and there was no one else in there. He slitted an eye open and used his enhanced vision to scan the room. It was empty and sterile. From his perspective he could see the chemical toilet and washbasin. He had been stripped and dressed in a mid-thigh shift that was cold and stiff against his skin and could feel a metallic collar around his neck.\n\nThere was nothing more he could tell and he gave a mental shrug. He stretched theatrically, noting that there were no windows in the room. The door was clearly electronic and slid open and shut leaving only a tell-tale line down what would otherwise appear to be a wall. Once demonstrating awareness, he was sure he would not have long to wait for attention.\n\n\"How nice to see you again, Tristam,\" Jabez smiled maliciously from just inside the door that slid silently open and closed. \"If you're contemplating escape, don't bother. The doors all operate on biochip technology. No chip, no open.\"\n\n\"I understand,\" Tristam said. At that moment, escape was not his concern. He had the feeling that Jabez was more involved than they had first surmised, but of paramount importance was finding the man responsible for their recent trials. He stood and took a step towards his smirking captor before his body was suddenly flooded with excruciating pain. He dropped to his knees trying to breathe around the waves of agony.\n\n\"Just a taste, Tristam,\" Jabez said. He caught a handful of the blond's hair and pulled the other man's head back, slowly rubbing his clothed erection across Tristam's face. \"The only reason I haven't already taken you is that my scientists need a base-line before they begin testing you in earnest. Once the drugs are fully out of your system and they complete their first run of sampling, I will have you.\"\n\nTristam did not waste energy responding to the threat. The pain had come as a shock to his system and now he knew exactly the function of the collar he wore. Although it symbolised Jabez's dominance over him, it was also the way in which his punishment was administered. He could still feel the tingle around his throat as he got slowly to his feet. As bad as it had been, he let Jabez think him more shaken than he was. \n\nAt that moment, it was possibly the only physical advantage he had. Keeping his head bowed, he used the periphery of his vision to regard the man who leant carelessly against the wall, a small device glinting in one hand whilst the other traced the outline of his straining shaft. \n\nHe mentally prepared himself as Jabez casually pushed away from the wall and over to him. He kept his face neutral as he was backed against a wall. He made no attempt to resist or avoid unwanted touches as Jabez's free hand slid beneath the shift to pinch at his nipples, feel his disinterested sex and then begin a slow squeeze of his sac. He gave a grunt of pain at a hard squeeze that coincided with Jabez's mouth closing over his. He held himself rigid as an unwelcome tongue snaked into his mouth. The display of power seemed to appease the silver-haired man and Tristam glowered menacingly after him as he sauntered towards the door.\n\n\"I think I will have your nipples pierced,\" Jabez said laconically. \"I can hang weights from them when I bend you forward and take you from behind. I'm looking forward to all the things I can do to you,\" he added in a menacing tone. \"This way.\"\n\nTristam was ushered ahead and guided down a windowless corridor. He could feel Jabez's eyes on him, but refused to allow himself to become unnerved. They had known the danger of retaliation when they had openly challenged Hiram. He was alive, well, about to meet their nemesis and, for the moment, that was the most he could have hoped for. \n\nA door opened ahead and he walked inside. It was a Spartan room with sterile white walls. The only furniture was a table and a couple of large, heavily padded chairs in the same chilled white. One wall was covered with a white blind, drawn against the view of the outside world. Tristam stopped, waiting for Jabez as the smirking man strode past heading towards the blind.\n\n\"Come here,\" he commanded arrogantly.\n\nTristam ambled slowly towards him as, with a theatrical flourish, Jabez changed the blind from opaque to transparent. Tristam stared at the vista before him. \n\n\"That's right, Tristam,\" Jabez's voice came from behind him. \"It's a sight you know so well. We're no more than fifteen minutes away from Elite HQ, across the park. Someone once said the best place to hide something was in full view. You know this as the Pharmaceutical Development Corporation that works hand-in-glove with both the Military and the Elite. Of course, my more...alternative...uses for it are conducted well below ground level. Now for the next part of your surprise.\"\n\nTristam watched as Jabez moved closer to the left-hand wall and waved his hand to open another door. He vanished inside, only to emerge after a moment guiding an electronic wheelchair in which sat a frail, aged figure.\n\n\"You wanted Hiram, Tristam,\" Jabez said mockingly. \"So here he is. Hiram III, third generation clone. What the original Hiram couldn't know was that by taking cells from each successive clone was the equivalent of old-fashioned photocopying. Any imperfections in the original are magnified in the copy. Hiram had congenital eye defects and muscle wastage which became apparent and debilitating earlier with each copy. It's not worth using nanobots on him, they have to work round the clock and he no longer goes out in public. My father effectively ran the company during the latter years of Hiram II and now it's my turn.\"\n\n\"How aware is he?\" Tristam asked.\n\n\"Who cares?\" Jabez laughed. \"I make the credits and any illegal activity uncovered sits on his shoulders. The perfect arrangement. You brought your own damnation down on your head after you closed down so much of the company. I looked at everything to do with you to get my revenge.\" \n\nWatching the silver-haired man, Tristam realised that as physically deficient as Hiram was, Jabez's mind was equally unstable. He had singled out Tristam for all his hatred. At the very least it was likely that Jabez was psychotic. For the blond that meant he was more dangerous than anticipated. There was no way of knowing just how far Jabez would go and it was obvious he was completely fixated on his revenge.\n\n\"Some information was easy to come by,\" Jabez continued. \"Some took cunning and great amounts of credits. Imagine my delight to eventually find that you were one of the Corporation's early experiments. Sight and hearing successfully enhanced through genetic engineering with PrideHomer DNA and the only survivor not psychotic like Regina became or reduced to a vegetative state. Your lab was intended to create the perfect covert, surveillance operative. Just like the Beast was designed to be the perfect foot soldier. The experiment was deemed a failure after your Lab was found and closed down. There was never any indication your genetic advantage had remained. However, we will gain much from studying you.\" \n\nHe laughed. The sound was cold and menacing. \n\n\"Hiram was never your nemesis. It was always me.\"\n\nSwallowing past a dry throat, Tristam could scarcely believe what he was hearing. This was the origin of his existence. He pushed it aside. It did not matter. He had become who and what he was due to the love and care of Aurora and Jameson and his beloved Rayner. \n\n\"You,\" Tristam growled, forcing himself to remain calm. This was still not the time to react. \"You were on the space station that held Uist, Sholto and Theophilus? You were the one who terrorised two pregnant members of my family.\"\n\n\"Fortunately not.\" Jabez shuddered as he remembered the destruction of his station. \"The images were being broadcast to me. It was not a place I chose to visit in person. Once they had birthed, I would have had Theophilus and Sholto moved. Uist would have remained to supply me with PrideHomer DNA. I will still have the Dregan,\" Jabez continued, his voice dropping in timbre. \n\n\"Never,\" Tristam hissed. The feral smile and less-than-sane glint in Jabez eyes had a cold fission tingle down his spine.\n\n\"I will let the lizard live with the loss of his husband and child, that will be sufficient suffering for him. Rayner and your child can also live. After all, you will be more pliant if they remain free, their freedom for your submission. Although who knows what I may gain from studying your offspring? That may be something for the future,\" Jabez said, almost rambling now he was putting his thoughts into words. \"I still want Sholto and his child, a natural human-PrideHomer hybrid, although I will probably need to kill Uist to have him. And of course, the Dregan will refuse me nothing for the sake of his 'family' and his baby; he will be the perfect, malleable bed-mate for me.\"\n\nTristam looked at Jabez barely able to believe what the man was saying. Even if Bloodfeud had not been invoked, there would be no way Tristam would let him live after voicing his depraved desires. When he had begun speaking of Theophilus, Tristam's nostrils had been assailed by the stench of the silver-haired man's lust. His eyes narrowed. Jabez was a walking, talking, dead man.\n\n\"Anyway, enough for now. Enjoy some time with the man on whom you invoked Bloodfeud. He may even be coherent for a few minutes,\" Jabez added with a cruel laugh.\n\nTristam looked at the man in the chair who peered myopically at him. He was not even sure Hiram understood what was happening in the room, much less any wider issues. He sighed. Hiram was probably more of a prisoner that he was. It was with some surprise that he realised the older man was motioning him to come closer. He moved to kneel at the side of the chair.\n\n\"You need this.\" The voice was barely above a dry husk and a bony, shaking finger tapped at a small chip visible under the translucent skin of Hiram's right wrist. \"No use to me,\" he continued. \"I can open the door but then what? Jabez stopped the elevator coming to this floor and I can't crawl down the stairs.\"\n\n\"You seem very lucid,\" Tristam observed, looking into the rheumy, grey eyes behind thick lenses.\n\n\"I'm not as mentally impaired as I let Jabez think. I share my originator's desire to live, even in this state. By the time I realised my physical predicament it was already too late. Poetic justice, don't you think? I front the legitimate side of an organisation that, behind closed doors, seeks to manipulate genetics. For all the technology available, it can do nothing to help me. My body dies a little each day for all the credits in the bank and all the scientists at Jabez's disposal.\"\n\n\"You were never involved yourself?\" Tristam clarified.\n\n\"Jabez only enlightened me after the court trial. My memory chip only contains memories of the charitable work the organisation does. Or at least used to do. Offsetting profits made selling defence and military armaments against subsidising wells and irrigation systems and such like. We're wasting time. In the bathroom is a supply of nanobots. Guide me over and let's get this chip out.\"\n\n****\n\nJabez returned to see both men sitting silently, side-by-side staring at the view from the window. He gave a cold smile of satisfaction. Firstly Tristam, then the Dregan and his child and finally Sholto and his, his plans were still on track and he would bend Tristam to his will. \n\n\"Time's up, Tristam,\" he said. \"Back to your room.\"\n\nTristam obeyed wordlessly. Once back in his cell, Jabez halted him with a hand on his shoulder.\n\n\"Touch me,\" he growled.\n\nTristam locked eyes with Jabez as his hand slid over the unmistakable bulge at the other man's groin. Then he squeezed hard. The waves of agony crashing over him within seconds were expected and deemed worthwhile.\n\n\"I'm glad to see you still have some fight left in you, Tristam,\" Jabez said in a strained voice, his hand gripping the device that activated the blond's obedience collar so hard that his knuckles were white. \"You'll pay for that little display later.\"\n\nTristam crawled to the bed and pulled himself onto it. Hiding his face in the crook of his elbow, the blond smiled, clenching a fist tightly around the small chip. Even without the means of escaping the cell, Tristam would still smile. Since he had first awakened, he had felt the comforting touch of his husband's mind. His kidnapping was not only expected, but hoped for. Things would happen very quickly. Jabez was going down. \n\nHard.\n\n****\n\nIt seemed like no time at all before Tristam surged to his feet and opened the door to race into the corridor. He could feel Rayner was still a distance away, but closer, and gave a grim smile, knowing his husband would have refused to stay at home. Neither Sholto nor Theophilus would be present and he was grateful his lover was not going to actually enter the premises. \n\nRemembering the atrocities described to him by Uist that he, Sholto and Theophilus had witnessed, he wanted to spare Rayner any chance of being exposed to anything similar Jabez might have lurking in the deeper parts of the building. Before he could reach Hiram's suite, Xavier and Uist appeared. Tristam gave a curt nod at the raised eyebrow of the cat-man.\n\n\"I'm fine. Our nemesis is Jabez not Hiram. I'll explain as we go.\"\n\nThe fighting was minimal, Elite forces storming the building in numbers and securing it swiftly with no loss of life on their side. However, Tristam, Uist and Xavier began to get more agitated as no sign of Jabez was uncovered. Tristam suddenly came to abrupt halt, his eyes focused on a distance none but he could see. With horrified eyes, he turned to the other men.\n\n\"Theophilus,\" he whispered.\n\n****\n\nThe uniformed Elite officer strode purposefully into the home of Jameson and Aurora, using an electronic card to enter the grounds. He presented the card inside the house and whispered into the ear of one of the other Elite present. The newcomer gave a curt nod at the reply and headed to the rear of the house. Glancing around, he opened the specified door closing it behind him.\n\nTheophilus and Sholto looked over in surprise. They were sharing a sumptuous, red, two-seater sofa in Jameson's library. Theophilus' head rested on Sholto's shoulder as the younger man read aloud from a large book.",
        "\"Is something wrong?\" Theophilus asked.\n\n\"Not at all, pretty Dregan.\"\n\nAt the sound of the voice, Theophilus sat up quickly, staring at the man before them. He felt Sholto stiffen, both recognising the detested tones.\n\n\"You,\" the auburn-haired man whispered. \"From the space-station.\"\n\n\"No talking,\" was the terse response as a gun was pulled out. He removed his headgear, letting the young males see his silver hair and grinned at their wide-eyed looks of shock. \"This is a disruptor. It doesn't normally kill, but I'm sure neither of you would like to find out firsthand what happens if it discharges close to your precious babies.\" Jabez's grin widened at the twin gasps of fear. \"I'm only sorry I can take just one of you with me and, of course, that will be you, pretty Dregan.\"\n\n\"You will not harm Sholto?\" Theophilus queried, moving slowly at the insistent motion of Jabez's gun.\n\n\"I want him to tell everyone just who has taken you. As long as he stays quiet and you docile, there will be no problem. If he tries to raise the alarm or you resist, I'll send a full discharge into your belly,\" Jabez said threateningly.\n\nTheophilus moved slowly to reach Jabez, ignoring the look of triumph in the hard green eyes. As he came to stand by the white-haired man, the sound of an unearthly shriek seemed to vibrate the air around them. The noise startled Jabez and Theophilus moved swiftly. He caught the wrist holding the disruptor and twisted with all his considerable strength. The sound of bone snapping coincided with a bellow of pain and the gun dropping to the floor. \n\nSimultaneously the door flew open. Theophilus was suddenly enveloped in strong PrideHomer arms and carried rapidly from the room. Glancing up from the chest of Denys, he saw Sholto in Willis' embrace and sagged with relief. He tried to ignore the screaming from the library, burying his face back into Denys' chest, grateful for the deep reverberating purrs that helped drown out the other sounds.\n\nA moment later a familiar figure limped from the library as Theophilus and Sholto were carefully lowered to stand shakily amongst their extended family.\n\n\"He will trouble us no more,\" came the rasping voice.\n\n\"You have our thanks, Alden,\" Willis said, looking from his son's pale-faced, young husband to the other male and then to Theophilus. \n\nAlden moved to gently touch each of the pregnant men, as if making sure for himself they were safe.\n\n\"We are well,\" Theophilus confirmed. \"You felt me?\" he asked, tilting his head.\n\n\"Yes. Fear, shock, and a cry for help,\" Alden nodded. \"The link strengthens.\"\n\nTheophilus and Sholto were guided into Jameson's den. Denys' son Dayd, a PrideHome physician, adamantly insisted on checking each in turn to ensure they had suffered no ill effects. At the conclusion of his examination, Aurora appeared with steaming mugs of hot chocolate, a craving that all had developed in the last stages of their pregnancies. The two men looked up at the sounds of activity outside the den.\n\nUist and Xavier raced into the house, looking around as if expecting to see bedlam and bloodshed. They relaxed a little at the sight of Willis, smiling as he approached them.\n\n\"Tristam and Rayner follow,\" Uist said tersely. \"They have said everything is now well?\" Uist could not help but turn the statement into a question.\n\n\"All is well,\" Willis confirmed. \"Alden understood Theophilus' call for help and has taken care of the one who would harm them.\" Willis' eyebrows rose at the savage snarl from his son. \"He was the one we sought?\" the older PrideHomer asked.\n\n\"Perhaps it is fitting that Jabez was killed by one of those he created,\" Uist growled, warring with himself over relief Jabez was no longer a threat and regret he was not able to kill the man personally. \"Our husbands?\" he asked his sire, deciding relief was the victor. He just wanted to have his mate in his arms.\n\n\"This way,\" Willis said.\n\nBy the time Tristam and Rayner made their way into the house, Uist and Xavier were each looking after their mates and other family members milled around, fussing over the small group.\n\n\"You felt me, too?\" Theophilus asked, his voice almost child-like with awe, from the shelter of Xavier's embrace.\n\n\"We did, beautiful,\" Tristam smiled. \"Both of us picked up your fear and subsequent relief. Tymon's lessons have paid dividends with your nascent psychic abilities. Hiram was not the one we sought,\" he affirmed. \"Jabez was the orchestrator of our troubles. I understand from Denys that Alden has taken care of the danger.\"\n\n\"He heard my call for help,\" Theophilus nodded. \"We are safe now?\" he asked, his voice tinged with hope.\n\n\"Let us complete the clean-up operation, beautiful,\" Tristam smiled. \"I want to make completely certain.\"\n\n****\n\nTristam lay on his side on the bed, his lover facing towards him. He gave a soft moan as Rayner nursed first one then the other nipple into peaked, fiery nubs. The moan deepened in timbre as open-mouthed kisses bathed his chest and abdomen. Soft lips encircled his aching shaft and he gave a guttural groan as his straining erection was enveloped in wet heat and insistent suction. \n\nA talented tongue lovingly lapped at the head of his penis, worshipping it with tiny kitten licks before he was taken deeper once more. A gentle hand found his sac, rolling the precious orbs inside, whilst the other worked his shaft in tandem with unrelenting sucking and waves of mental pleasure that ebbed and flowed. He gave a soft whine of disappointment as his erection was released.\n\n\"I want you in me,\" Rayner husked.\n\nThe sound of his mate's voice and the pheromones pouring off the younger man left Tristam in no doubt of Rayner's sincerity. He knew it was what he wanted...needed, but was afraid of hurting his lover. It had been some time since Rayner could comfortably accept him and his pregnancy was even more advanced.\n\n\"Rayner...\" he began, but was silenced by soft lips on his.\n\n\"We both need this and I know you won't hurt me.\" With slow, careful moves, Rayner turned to press his buttocks against Tristam's hard flesh. \"If it becomes too uncomfortable you will know,\" Rayner assured. \"Trust your instincts the way I do, love,\" he added.\n\nTristam fussed with the pillows and smiled as he nuzzled Rayner and then spooned up behind him. He picked up their oil, anointing his fingers to movie them with care inside his lover as he sucked and nipped lightly at Rayner's earlobe. His husband's shaft hardened rapidly at the way Tristam masterfully played with his body, hitting all his young lover's hot spots. Then Tristam was ready to enter his mate's glistening portal.\n\n\"If it becomes too much, tell me,\" he growled. \"You won't be able to hide it and I want to give you only pleasure.\"\n\n\"In me. Now,\" Rayner demanded softly. Tristam's hard flesh pushed into him with an aching slowness. He moaned again, collapsing back against his lover, letting his pleasure flow into his mate's mind, spiraling them both towards a shared zenith. He felt more full than ever before, but the pleasure was all-encompassing, chasing away anything other than the perfection of their union. \n\n\"That's it, angel, let me take care of you. I've got you and I'm never letting you go.\" Tristam penetrated as deep as he could due to his mate's condition and he murmured his loving words into a small ear, chasing them with his tongue.\n\nRayner shuddered at the deep, almost guttural sound of Tristam's voice and then moaned softly at the slick muscle that slid in his ear, sliding around before teeth once more nibbled at his lobe. Rayner's hand clenched Tristam's hip tightly. He could not speak, he was too aroused. Instead he focused on flooding Tristam's mind with the joy and delights the lovemaking engendered. In response his lover began to move slowly and gently, thrusting shallowly in and out at a leisurely pace. \n\n\"You feel so good,\" Tristam groaned. \"So perfect, Rayner, so very, very beautiful.\"\n\nRayner felt the strain in his lover's body as Tristam refused to speed up or push deeper. Then Tristam's hand wrapped around his throbbing shaft and Rayner lost his tenuous control in three, almost-too-soft caresses. He cried out his climax, his release pouring into Tristam's care. \n\nTristam rotated his hips, giving a final thrust and spilled his seed, filling Rayner with his come. He gave a muted shout of his husband's name before burying his face in Rayner's soft, sweet-smelling tresses. \n\nThe blond kissed the nape of his lover's neck, nipping and sucking as he recovered from his high. He tended to his mate as soon as possible, sliding an arm under Rayner's head as support and the other possessively around his waist to rest on the brunette's swell. Smiling with the same contentment that he could feel from the precious man in his arms, Tristam nuzzled affectionately, kissing the bare shoulder and neck, scenting and tasting joy, satiation and completion. \n\n****\n\nXavier hid a sigh, knowing that the pinkish tinge to his frill was a giveaway to his true feelings. He stood in the sitting room of Jameson's house and looked around at his extended and diverse family. His husband sat huddled close to Uist, the cat-man holding tightly with one arm to the blond and with the other to his mate on the large settee. Tristam and Rayner sat nearby with Jameson and Aurora hovering beside them. \n\nHis parents, Laban and Vira and brothers Ivo, Asa and Yve were now present, due to Theophilus' imminent birthing. His cousin Meta stood with Alden. The genetically created man had made his home on Phixia and Xavier was pleased to see them so openly a couple. Willis and Steffen stood by Uist and beside them Denys, his wife Jaen as well as sons Jaymz and Dayd. \n\nFurther back were the Aantnaa friends of Sholto, consisting of two workers and two soldiers, the insectile types as different from each other as human was to PrideHomer. Darius was also there, both as friend and as Elite security. Tymon stood in the furthest corner, his cloak wrapped around him like a shield. \n\n\"My family, my friends,\" Xavier finally spoke, drawing all eyes to him. \"I am pleased to see you all here and sorry that the news I have for you is not what I would have wished it to be.\" He glanced briefly at Jameson, Tristam and Uist. Only the four of them knew what he was going to say and he could see them tensing. \"In deference to a request by Jameson, I undertook to perform the autopsy on Jabez. I regret to inform you that Alden destroyed a clone.\"\n\nA cacophony of sound broke loose; yowls of anger from PrideHomers, howls from Phixians, an ululating shriek from Alden, buzzes from the insect race and cries from humans. Xavier waited a moment watching sadly as Theophilus shrunk closer to Uist. His beloved husband was too attuned to Xavier not to have known he was bearing bad news. The reptilian fully intended to comfort his mate at the earliest opportunity.\n\n\"The clone's memory chip had significant episodes missing that meant it was not the orchestrator of any of our recent trials. The real Jabez used one of the hidden exits from the building when we stormed it, activating the clone with the sole purpose of trying to snatch Theophilus. Jabez then went straight to the space port. The memory chip recorded that the clone had just twenty minutes to get Theophilus to the space port to travel with the real Jabez or the clone would have to secure another ship. Jabez was more interested in saving himself, but clearly would not let pass an opportunity to strike at us even as we thought we had brought his danger to an end.\"\n\n\"From my time with him, I believe Jabez to be psychotic and psychopathic. His revenge is constantly in the forefront of his mind,\" Tristam said quietly. \"He is a very dangerous individual who will clearly stop at nothing to attain what he wants. We will need to be vigilant until we can track him down and eliminate the threat he poses.\"\n\n\"He will not hide from us,\" Willis growled, the sound menacing and deadly. \"He will be found and Bloodfeud will ensure he does not escape justice.\"\n\n\"I have some investigations that I think will soon bear fruit,\" the mental voice resonated in everyone's mind as Tymon strode to stand alongside Xavier. \"There are many, gifted to greater or lesser extents, that live anonymously within the larger universe on whom I have called for help.\"\n\n\"My own enquiries did not stop with the name of Hiram,\" Willis rumbled. \"I will still work in harmony with Laban and Jameson. There will be no place he can hide.\"\n\nXavier moved to envelop his husband in a tight embrace. He was aware of Rayner and Tristam coming to join them as well as Uist and Sholto, the six combining as one. The rest of their family moved to surround them. To the reptilian, the love and protectiveness he could feel was solid, strengthening, an almost physical entity. \n\nHe nuzzled at Theophilus as his husband pressed a loving kiss to his frill. Love and faith shone in the golden orbs and Xavier knew he, like all his extended and diverse family, would do anything to protect Theophilus and the others.\n\nJabez would be found, of that the Phixian had no doubts, and the danger he represented would be eliminated.\n\nThere could be no peace for them until it was."
    ],
    "authorname": "Pelaam",
    "tags": [
        "drama"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/silver-ch-08"
}