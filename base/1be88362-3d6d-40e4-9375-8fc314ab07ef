{
    "title": "More Than Friendship Material Pt. 07",
    "pages": [
        "Todd scooted his butt out of Liz's room, so that she could get ready for their first official date. Now, he wished he had actually planned a little further ahead. Where were they going to go? Things had gone pretty well so far with Liz, even if they were both moving into uncharted waters. But, there was some unfinished business Todd wasn't looking forward to. He still needed to talk to Hollie. Todd had figured to go out with the cute cheerleader a couple of times just for fun and be done with it. Instead, in a very short time she had become a part of their close knit group, Liz's good friend, and something more than friends with Todd.\n\nHer intuition and sacrifice had led him to face feelings he didn't really understand and to take this new step with Liz. Hollie had done this for them, no matter the possible cost to her own feelings. \n\nFeeling a twinge of guilt and his stomach tighten, Todd took out his cell phone and dialed.\n\nHollie picked up on the second ring. \"Hey Todd. Everything OK?\"\n\n\"So far,\" he replied. \"But, we need to talk.\"\n\n\"Well that's almost never a good way to start a conversation,\" Hollie answered. \"I assume its about the stuff from last night, and I understand why you may have not wanted to go into it with so many witnesses.\"\n\n\"Well, some of its about that. The rest is about me and you...and Liz.\"\n\n\"You want to have a threesome? She must be taking things very well,\" Hollie giggled.\n\n\"NO! I mean, not that that wouldn't be amazing...er..I mean, no that wasn't what I was saying,\" Todd stammered.\n\n\"Easy there tiger. I was just teasing to try to lighten the mood. Let me make things easier for you. You're calling to break up with me because you're with Liz now, right?\"\n\n\"Well, I'm not really with Liz, but after last night I realized that maybe I should be, you know? Wait. Of course you know. You knew before I did. That was sneaky, by the way, but really well done\"\n\n\"Thanks, I think\" Hollie replied. \"I had help, but it wasn't easy and I felt a little guilty tricking both of you, then kissing Liz...you sure you don't want that threeway?\"\n\n\"Not as sure now,\" Todd sighed. \"You know I thought this was going to be harder on you to talk about.\"\n\n\"AWWW, poor baby,\" she laughed. \"Well, if it makes you feel better, I had pretty much figured that this was what was going to happen, so I dealt with a lot of the mixed emotions already. If you two have the love of the ages, it would have been pretty selfish to stand in the way. Should I ask how the magical first night was, or is that none of my business.\"\n\n\"Well since you played Cupid and all,\" Todd answered,\" I don't mind telling you that there was no magical first night. I was completely zonked. No kissing, no making out, and we both slept in our own beds, alone. Allen got his good night kiss, though.\"\n\n\"I need to buy more apples.\" Hollie grumbled.\n\n\"What?\"\n\n\"Never mind. Have you guys even discussed it then?\"\n\n'Some this morning.\" Todd described the ring and the prior conversation with Liz, as Hollie sighed at the romantic scene. \"Now, \" he finished, \"I want to start things out slow and official. She's getting ready now.\"\n\n\"Where are you taking her,\" Hollie asked.\n\n'Well, that's the thing, \" Todd said. \"I'm the party guy, not the romantic guy, and I hadn't thought out all the plans. I hate to ask, but do you have any suggestions.\"\n\nHollie hesitated before responding. \"I do, but I'm not going to tell them to you. It's not because I'm jealous either. It's because things that would be special to me may not fit what you two have. You need to pick something that has meaning for at least her, and hopefully for both of you. I know you can do it. You are that romantic guy. That thing with your granddad's ring, the way you told me about \"your favorite kiss,\" that was you getting in touch with your inner Prince Charming. The right plan will come to you.\"\n\nTodd relaxed at Hollie's heartfelt advice. \"OK. I think maybe you dodged a bullet, Hollie. Liz has been stuck with me forever, so she hasn't got a choice. But you were probably too good for me.\"\n\n\"Damn straight I was,\" she laughed, \"but I'll keep you on my list of references, and if things don't work out with you and Liz....\"\n\n\"I'd be honored if you'd lower yourself to go out with me again,\" Todd laughed.\n\n\"Who said I was thinking about you? Liz already knows how good I am.\" Hollie said slyly. \"Good luck, loverboy.\"\n\nHollie hung up and Todd shook his head, wondering at how he had been fortunate enough to involve himself with such incredible women. \n\n***\n\nLiz tried not to rush, but she didn't want to keep Todd waiting too long, either. Taking a quick shower, she shaved and washed her hair, then took a little extra time applying her makeup and straining her hair so that it lay sleek and soft over her shoulders and down her back. She wondered what she should wear. He looked handsome in his dress clothes, so she figured she had to at least match him.\n\nWith a towel wrapped around her body, she snuck back into her room and turned the radio a bit louder, looking through her things. She really had to get more color! She finally settled on a blue cotton dress that was casual, but dressy enough for a date. The thin straps showed off the smooth skin of her shoulders and arms, with a hint of cleavage were the bodice hugged her, and the skirt flared out from her hips gently and ended at her knees. Slipping on a pair of navy flats, she dabbed on a hint of perfume and then studied herself in the mirror.\n\nNerves made her stomach flutter and she fiddled with her hair a minute more, before slowly making her way out. Todd was on the phone, standing on the small apartment patio with his back to her. She figured it had to be important, so she slipped into the kitchen to grab a bottle of water and wait. It wasn't long before he finished up, shaking his head before he spotted her and re-entered the apartment.\n\n\"Hi.\" She smiled, feeling rather self conscious now that this was supposed to be all 'official'. \"Everything okay?\"\n\nHe pocketed his cell and smiled, \"Yeah, I just thought I should talk to Hollie and well, clear the air I guess.\"\n\nLiz sipped on her water, nodded. \"Yeah. She's great. I can't believe she went through all that trouble.\" Setting her drink down, she walked to him and grabbed his tie playfully tugging him. A soft flirty smile played on her lips, but her eyes and the slight tremble in her hands gave away her nervousness. \"So, what's the plan? I'm not sure how good I am with this dating stuff.\"\n\n\"Oh I don't know. I think Allen had a good time and a good...kiss.\"\n\nHer eyes widened a fraction and she grinned. \"Well, I think he deserved it. After all, he saved our asses, took me on a date and then practically carried your butt to the car. Plus, you were too tired to kiss me, so....\" She giggled and kissed his cheek, moving away with a playful swish of her hips.\n\n\"Maybe I don't kiss on the first date,\" Todd said with a grin.\n\n\"And maybe monkeys will come flying out of my butt,\" Liz retorted.\n\n\"They make a medicated powder for that these days, Red.\" he laughed. Then a thoughtful look came over Todd's face. \"OK,\" he continued, \"come on. You've already had the magnificent Farmer brunch, so I'm assuming you can hold off on food for a while?\"\n\n\"We'll see. So where are we going?\"\n\n\"It's a grand adventure. Do you want the blindfold or not,\" Todd asked.\n\nLiz frowned. \"That's scary. Do I need one?\"\n\n\"Your call, Princess!\" Another evil laugh filtered the air and he waggled his brows.\n\n\"Nah! I'll risk it. I'm the kind of girl that likes to live on the edge,\" she said with a grin. The nervousness was still there, but the return to the playfulness that marked their relationship was a good sign.\n\n\"Famous last words,\" Todd said with a wink, opening the door before taking Liz's arm in the crook of his, and leading her out of the apartment on the first stage of this new experiment in their lives.\n\nAn hour later, after a car ride that consisted of the newly minted couple singing along with the radio at the top of their voices, Todd pulled the car onto the Interstate exit ramp and into the line of cars waiting to enter the Atlanta Zoological Park.\n\nTurning to Liz, he proudly announced, \"Milady, for our first \"official\" date, welcome to the site of our \"unofficial\" first date back in third grade. I hope you'll hold my hand again.\"\n\nLiz's eyes teared up and she was sure that her heart had melted. She was having a hard time drawing a full breath. When had he gotten so romantic? Even while dating other girls, she couldn't recall Todd actually being romantic. Sweet, fun, funny, but not romantic.\n\nShe blinked her eyes quickly and sniffed, \"Ugh...allergies.\" She lied and smiled. \"I would be happy to hold your hand. At least this time it won't be all sticky.\"\n\n\"You never know, could be.\" He shot back and grinned, telling her to stay put while he jumped out of the car and jogged around it, opening her door. Liz stepped out, smiling and blushing. With their things in order, she took his hand and together they walked into the Park.\n\nTodd paid the admission, and the happy pair strolled into the park. He had always loved animals, and Hollie had been right. When he stopped worrying about what to do, it had just come to him. When he and Liz were in third grade, there was a class field trip to the Atlanta Zoo that spring. Todd was used to hanging out with Aaron and Pete, two of his friends, or as teachers usually referred to them, the Three Stooges. But, the bus seats were only for two. The boys were basically harmless, but still energetic. To minimize potential chaos on the trip, the chaperone had made sure that the boys sat in the front of the bus, and they had to board in alphabetical order. So, Aaron and Pete found themselves in the left hand seat, with Todd across the aisle to their right. Through no intention of her own, quiet, bookish Liz found herself sharing that bus seat with a boisterous boy she had nothing in common with.\n\nDuring the ride to the zoo, Todd barely noticed Liz was even there, and Liz didn't do anything to change that happy fact. But, the fates conspired to bring the mismatched pair together, once the bus pulled to a stop in front of the zoo entrance. \"Alright children,\" their teacher Mrs. Buchanan announced, \"this isn't just a fun trip, it's a learning experience. You are to explore the zoo with the person sitting in the seat next to you, and when we return, you will work together to make a report on one of the animals. It has to be an animal that starts with the same letter as one of your names.\"\n\nLiz reflected back and inwardly smiled. She had been so shy and everyone had known Todd. He was a popular kid, usually laughing and joking around with his buds and she was almost mortified to be stuck with him on the trip. But she had tried to act as though she wasn't in the least bothered. Instead, when he had let out a bit of a whiny groan, she'd shot him a glare and shrugged.\n\nLifting her chin, she'd practically scooted him off the seat and followed the others off the bus. \"Now children, we don't want to get lost! Be sure to stay with your partners and hold hands so no one gets left behind.\"\n\nThis time they had both groaned. Todd has stuck his hand out and she'd sighed, holding onto his sticky, slightly sweaty hand in her own and feeling generally grossed out. Who would have guessed that they would have become thick as thieves after that one day.\n\n***\n\nIn many ways, as they wandered the zoo, Todd and Liz were venturing on a road not traveled. When they were thrust together as 9 year olds, the thoughts of a romantic relationship were (and should have been) the farthest things from their minds. But, the day set the tone for how they saw each other. Todd was a mediocre student that had no sisters and didn't understand girls. Liz was a serious, only child, who was often the target of bullies of both sexes. That day, they each found the other side of the coin that neither child knew was needed.\n\nOf course, having names that started with T and L gave the pair a lot of choices as to what animal to pick. Todd started off with Tiger, but Liz was adamant that it would be picked by someone else. Liz offered lion, but Todd rightly disagreed on the same principle. Lizards were too basic. Tortoises seemed too boring. Nothing seemed right. But, eventually, as they were coming to the end of their day, just the right creature revealed itself. In the present, as Todd and Liz strode arm in arm up to that exhibit the same thought hit them. \"Hey!\" they exclaimed together, \"It's the lemurs!\"\n\n\"Remember the Lemurs?\" Liz asked him as they strolled. \"L for lemur.\"\n\nHe chuckled, \"I do remember and what was it - T for tarantula?\"\n\n\"Ick. No spiders. Then or now,\" she giggled, \"That was a fun field trip. Who would have thought we'd still be together after all this time...at least as friends, never mind anything more.\"\n\n\"Looking back, I'm really surprised we didn't do anything before now. I never really gave it serious thought, but now that I'm thinking...\"\n\n\"Mmmmm...\" She gazed at a brightly feathered bird and nodded, \"Yeah...you were my first kiss and the first boy I showed my boobs to.\" She giggled, remembering that she had done it on a dare. \n\nA huge grin split his face as he recalled. \"Oh yes, the \"I'll show you mine if you show me yours.\" Worked like a charm.\"\n\nShe punched his arm playfully and gave him another mock glare. \"Whatever. Wasn't very fair considering I thought you meant...you know...your thing, not your own chest!\" Giggles bubbled up her throat and spilled out as she remembered the way his jaw had sort of hung open for a while, transfixed until she shoved her shirt back down. \"But it was worth the look on your face.\"\n\n\"If stupid looks were all it took to see your boobs, I wish you'd said something sooner,\" Todd said, as he affected a cross-eyed, tongue out expression.\n\n\"Forget that. You still owe me. The closest I've come to seeing Little Todd is the hammock,\" Liz said saucily.\n\n\n\"Get a room,\" a teenager walking by added. Todd and Liz laughed for minutes.\n\nThey continued touring the zoo, noticing that while there had been some exhibits added, much of the park was just as it had been when they were kids. The day was surprisingly warm for October. Taking a break, Todd sprung for some ice cream and the couple leaned against one another comfortably on a bench. \"You know what the best part of that day was back then?\" Todd asked.\n\n\"No, what?\" \n\n\"You didn't treat me like I was dumb. I know I was stupid and loud and had sticky hands and all. Plus, I didn't have a clue how to communicate with you. You were smart, quiet...a girl for God's sake. I knew nothing about girls, except they played with dolls and had tea parties and sappy stuff like that. But you weren't like that.\"\n\n\"If you say I was just like a guy, you're never seeing these boobs again,\" Liz warned teasingly.\n\n\"No, that's not what I meant. I meant that you listened to me. You treated me like a person, not the troublemaker, and it got me to see you as a person. I could have let you take over the whole assignment,but you asked what I thought and actually listened to what I said. The grade I got on that report was the best I had ever had. My mom had it on the refrigerator for a year. I realized that I could have fun and still do OK in school.\"\n\n\"You were always smart, but your friends were too stupid to see that. Excluding me of course.* She smiled warmly at him, turning her look at him. A smudge of chocolate ice cream lingered on his bottom lip as he licked at his cone and she grinned. \"Um...Todd?\"\n\n\"Mmmmm?\" His gaze slid hers and she pointed to her own lips, trying to give him the hint. \"What? Nothing is there.\"\n\nShe rolled her eyes and giggled, \"No you goof.\" On impulse she leaned further in and turned his face to hers. \"Come here.\"\n\nShe kissed his bottom lip and then let her tongue sneak out to lick the sweet ice cream off him, making another group of kids go eeeeewwww. Pulling away, she turned back to the sights and licked the dripping strawberry ice cream off her hand. \"I think I'm the one with sticky fingers today.\"\n\n\"Well I think that officially puts this official first date as better than the unofficial one,\" Todd grinned. \"and I guess I do kiss on the first date. I already knew you did. But hands off of Allen now, Red.\"\n\nThe rest of the day was part reminiscing, part acclimating to their new status, and part just goofing off like kids again. All of the stress, drama, and weirdness of the past couple of weeks faded away. Liz liked the zoo train ride where they cuddled in the last car. Todd liked tickling Liz in the dark reptile and insect exhibit. As the sun started to go down, the happy couple made their way to the last exhibit of the day: the orangutans. There was a family group, with a nursing mother and a younger male. The dominant male though was what caught their attention. The large hairy red ape swung easily from rope and tire swings before landing right in front of Liz.\n\n\"Looks like you have competition,\" Liz giggled.\n\n\"That's because you're flirting, have the same hair color, and a red monkey butt.\" Todd retorted. \"Wow, you really have caught his eye or something at least.\"\n\nTodd pointed and Liz turned to see the ape sporting a massive erection. She yelped and turned as red as her hair. \"Maybe this is proof I should bow out gracefully and leave you two to some privacy,\" Todd laughed.\n\nLiz punched him in the arm, but Todd just took her hand in his again and they walked to the exit. Just before they left, Todd hesitated. \"I have to go to the little boy's room. Can you take the keys and start the car?\"\n\n'Sure. Hope everything comes out all right.\"\n\nShe followed the mass of people heading to the parking lot, but the car wasn't too difficult to locate. Turning on the car, the AC, and the radio in that order, Liz reclined the seat and closed her eyes, fingering the ring dangling on her chest and smiling. A few minutes later, Todd knocked on the window for her to unlock the door. When she did, Todd tossed a large stuffed orangutan onto her. \"I didn't want you to have any regrets, like you said with Allen. If things don't work out with me, there's always Monkeyboy for you.\"\n\nLiz threw her head back and laughed, squeezing the large stuffed animal close and grinning. \"I suppose he is humpable. If my batteries die, he could do the trick.\" She wiggled her brows and fell into fits of giggles as he shook his head and did his best to look disturbed, but in all actuality, Liz and humping only seemed to fuel his imagination.\n\n\"By the way, you sure have mentioned Allen a lot.\" She continued, eying him curiously. \"Do I detect a note of jealousy, Mr. Farmer?\"\n\n\"No. Just precaution, Ms. Mason.\" Todd winked. \"Allen seems to have a way with the ladies that I never would have guessed about, and I tend to be wary about nice guys who could beat the crap out of me if they so chose.\"\n\n\"Tell you what,\" Liz offered. \"No other people involved unless the both of us are there too. We can call it the Ben and Mary rule.\"\n\n\"Fair enough, but don't tell Mary. She'll take that as an offer to join us.\" Todd pulled out of the parking lot and drove back to the interstate. \"Now I hope you're hungry, \" he said, \" because I sure am. Any particular type of food you're in the mood for?\"\n\nShe decided the bite back the innuendo that tickled the tip of her tongue and smiled. \"Mmmm, Mexican is my favorite. Cheap and good food.\"\n\nHe nodded in agreement. \"I can't argue with cheap, good food.\"\n\nThe redhead giggled, feeling blissfully content for the first time in a while now. She had always been reasonably happy, but this seemed to be the perfect day together. And it had been a while since they had spent any quality time alone.\n\n***",
        "Todd drove them to one of their favorite spots and helped Liz out of the car. She smiled, holding his hand again as they walked into the restaurant. \"Two, senor?\" The pretty little waitress asked, smiling sweetly. Todd nodded.\n\n\"Yes...non-smoking please.\"\n\nThe waitress situated them in a small corner booth. Facing each other, she smiled over her menu, their feet touching as they selected something to eat.\n\nThe waitress returned with bowls of chips and fresh salsa. \"Are you ready to order, senor y senorita?\" she asked. \n\n\"Si,\" Todd answered. \"Una margarita col sal para la senorita con pelo rojo, y una Coca Cola para mi. Entonces, fajitas con pollo para dos, picoso. Gracias.\"\n\n\"The waitress smiled. \"Muy bien, senior.\"\n\nLiz looked at Todd like he was a pod person. \"You ordered for me, and you speak Spanish!\" \n\n\"Un poco.,\" Todd replied. \"It's mostly Espanol de los Restaurantes, but I did get an A. You're getting my date night A game, Lizzy. Prepare to be dazzled.\"\n\nThe waitress returned with the drinks. Liz sipped her margarita, still amazed at this new version of her longtime friend. He was the same and different all at once. \"So what did you order food wise? I think I understood fajitas.\"\n\n\"Chicken fajitas for 2, extra spicy, for the spicy redhead. Hope you like them, \" Todd said with a wink.\n\nLiz blushed and let him grasp her hand that lay on the table, threading their fingers together and giving it a squeeze. She grinned and dipped a chip into some salsa and fed it to him.\n\n\"Mmmmmm, nothing like restaurant chips.\"\n\n\"Amen to that.\" \n\nHe returned the favor and she wondered how many people they were making sick right about now. Gushy displays, the stuff of romance novels. But she found it fun and cute. He certainly was showing her a softer side.\n\nA little while later, the waitress brought the sizzling platter of fajitas, along with the accoutrements to build them. \"Necesitan algo mas?\" she asked Todd\n\n\"Si. Mas Coke y mas tortillas por favor,\" Todd replied.\n\n\"Bien.\" The server returned to the kitchen.\n\n\"That one I understood,\" Liz said. \"Are you that hungry or are you trying to fatten me up?\"\n\n'Yes, no, and another reason,\" Todd answered with a smile. \"Hold off on eating till she gets back.\"\n\n\"Why?\"\n\n\"Trust me.\"\n\n\"Implicitly.\"\n\nTodd smiled at that, and the waitress returned to the table with the refill and the extra tortillas. He opened the foil, tore them to shreds, laid the pieces on the open foil and moved the foil to the center of the table.\n\n\"OK, now you can eat, milady.\"\n\n\"Good, 'cause I'm starving,\" she laughed. Both of them built a fajita and took a bite. Liz's face lit up.\n\n\"Oh my god, that's hot!\" She reached for her glass, but Todd stopped her and handed her a tortilla shred.\n\n\"Try that. Don't drink.\"\n\nLiz took a bite of the tortilla, and the heat in her mouth subsided. \"Much better. Thanks,\" she said.\n\n\"I know how to slay a dragon too,\" Todd said with a wink.\n\n\"Well, I'm glad you know how to put out fires.\" She purred out and then giggled, blushing at her own come on. She was used to smart ass tongue-in-cheek remarks, but when she actually meant them, it was a totally different ball game.\n\nHe wiggled his eyebrows suggestively and watched her turn an even brighter shade of pink. Together they ate their meal, swapping familiar stories and sipping their drinks until they were both full and feeling good. \"That was amazing. Why don't we eat here more often?\"\n\nTodd pulled her out of her seat, letting Liz lean up against his side, her arm wrapping around his lean waist. \"Why haven't we done a lot of things, Lizzie?\"\n\nShe said nothing, but waited for him to pay the bill before they walked out to the car. \"Why thank you, kind sir.\" she smiled and slipped into her seat, buckling up as he jogged back around to join her, much like Allen had done the previous night.\n\nAs they headed back toward the apartment, the conversation slowed somewhat. Part of that had to do with the mountain of food they'd had, Todd's still not complete recovery, and Liz's lightweight status as a drinker. Still, the silence was not uncomfortable. Liz dozed a little, and Todd found a sports radio station to check football scores on. It was nothing different in practice than a thousand other car rides they'd had together. However, there was something different in theory, and Todd thought about it as he drove.\n\nThe day had gone fabulously well, both as an outing with one of his favorite people, and as a first date. But, at this point on most dates, he'd be taking the girl home and wondering just how far to press his luck once he got there. This time, her home was his home, and he wasn't sure what was going to happen when they got back. The comic flirtiness that they had enjoyed for years had moved seamlessly into actual romantic foreplay. They had almost done things before. They had seen each other at least mostly naked. Now, he knew that they both wanted to take that next step. Was it too fast though? Should they jump each other like horny weasels when they closed the apartment door, just because they could? On the other hand, taking things slow allowed time for second thoughts, and they had both been bad about over analyzing their relationship with one another.\n\nNormally, this would be the time he'd call Ben for advice or just as a sounding board. Further complicating things was that, technically, he wasn't supposed to have sex for another three days. Turning to look at Liz as she slept, Todd decided on a plan of action. He just hoped it was OK with her.\n\n***\n\nLiz thoroughly enjoyed her cat nap. It wasn't uncommon for her to doze during a car ride. It had become a bit of a teasing point with the two of them whenever they took a trip home to their parents or went on any sort of trip. Todd always packed a wealth of music to entertain himself, knowing that within the hour she would be dead to the world. \n\nStretching, Liz yawned and blinked. Todd looked over at her and remarked, \"I'm going to take it personally that you keep falling asleep on me in the car. I can't be that boring.\"\n\nShe grinned and rolled her shoulders. \"Not at all, I feel so safe with you driving that I just can't help myself.\" A few minutes from their home, Liz turned slightly and regarded him. He looked a bit tired himself. \"Thank you, for today. I think for our 'first date' we didn't do too badly.\"\n\n\"No we didn't,\" a smiling Todd replied. \"Now are you going to sleep on me again? You may want to rest up for later.\"\n\n\n\"Oh really?\" Liz asked slyly. \"Are you propositioning me.\"\n\n\"You'll see. Suffice it to say that this date is going to get even better than it's been so far.\"\n\n\"Color me intrigued, then. Wake me when we get there.\" Liz grinned and curled back up and into her cat nap.\n\nTodd smiled to himself. \"Yes,\" he thought, 'this ought to be fun.\"\n\nLiz slept like a baby for the rest of the drive, other than briefly stirring while Todd stopped for gas and went inside to pay. True to form, he came back with a bag of stuff he didn't need.\n\nAs Todd got back in, he set a bag in the rear seat, and put a bottle of root beer in the cup holder. \"One has to have the staples of life,\" he said. \"We'll be back to the complex in ten minutes or so.\"\n\nLiz smiled sleepily and reached for his hand. \"This couldn't be a better night.\"\n\n\"Wanna bet?,\" Todd said with a leer.\n\nA few minutes later, Todd turned into the parking lot, with Liz already dozing again. Pulling into an available space, he got out the stuff out of the back and took it inside, turning on the TV and lights as he did. He laid everything out on the coffee table and opened drinks for both him and Liz. He lit a candle, put a disc in the machine, and the music began to play. Everything was perfect. Then he went back to get Sleeping Beauty. Todd opened the car, kissed her on the cheek and said softly, \"Wake up Princess.\"\n\nLiz opened her eyes, and without a word, Todd reached for her hand and helped her out of the car. Taking his arm in hers, he drew her close and led her up the sidewalk. Liz nestled against him and didn't notice as they passed the door to their apartment. She didn't even really notice where they were going, until he opened the door of their destination and proudly announced, \"First Date, Stage 2.\"\n\nThere, in front of the giant screen TV in the complex's rec center, was a candlelit display of bottled beer, both plain and root; a bowl of plain M&Ms; and two XBOX controllers. The music from a video game echoed softly around the room. Todd turned to Liz, and said. \"Now, if I remember correctly, someone answered that everything can be made better with beer, chocolate, nudity, and killer robots. Here, we have all four, So, milady, welcome to our first game of Strip Salvation Point Alpha.\"\n\nLiz laughed, playfully pushing him aside. \"You're on buddy! Lets go.\"\n\nSituating herself on the couch, she grabbed her own controller and popped a small handful of M&M's into her mouth with a soft moan of pleasure as the chocolate melted onto her mouth.\n\nTodd settled himself next to her and she gave him a nudge with her own shoulder. \"So big boy, what are the rules?\"\n\n\"Nice confidence there, Red,\" Todd said.\"OK, since I play this more than you, I'll give you a head start. Ten minute intervals, but I'll give you five minutes to play before I come in. Whoever has the lowest score after each ten minute period loses some clothes. Also, whoever kills a stage boss gets to choose an item of clothes for the other to take off. Sound fair.\"\n\n\"Yep. Prepare for total domination! Fire it up.\"\n\nAfter the first few minutes, Todd was beginning to eat his words. He should have known that Liz would have picked up quickly. She didn't play often, but she had already mastered a few skills and was giggling as he groaned next to her. When he jumped in, she nudged his knee and laughed, \"Hey, I gotta make sure I win. I'm wearing less than you!\"\n\nPromptly after that, she won the first ten minute round and Todd kicked off his shoes and socks. Liz laughed and rolled her eyes. \"That's weak!\"\n\n\"Game's still early,\" Todd growled in mock irritation. \"Get ready to flash skin, baby.\"\n\nMany a robot bit the dust, and the next 10 minute session was close, but Todd pulled ahead near the end of the period. Unfortunately for him, while his score was higher, Liz hit the killing shot on the level boss. She kicked off her shoes playfully, then winked.\n\n\"Snack and Potty break while I decide what comes off,\" she said with a grin. \"I'm starting to see why you like this game so much.\"\n\nTodd laughed and took a swig of root beer, as Liz went off to the lady's room, smiling. This is going well.\n\nIn the ladies room, Liz found her cheeks were hurting from smiling so much. She contemplated what she wanted him to take off while she refreshed herself a little and washed her hands. \n\nShe hadn't expected him to be so sentimental and sweet, tugging at her heart strings even more. If she had thought she loved him then, it was clear now that she was treading extremely deep waters. It gave her a rush with a twinge of fear that things wouldn't work out, but after everything they had shared, she knew that some way, somehow, things would work out for the best.\n\nTaking a deep breath, Liz returned to him, giving him a little sashay and laughed. \"Okay pretty boy, take off your shirt.\" Oh yes, she had always loved his shoulders and chest and wanted them bare to her eyes and touch.\n\nSince he was all dressed up, Todd made a show out of removing the shirt. He loosened the tie, then flipped up the collar. He slowly unbuttoned every button, including the ones on the sleeves. He untucked the tails from his pants, then pulled off the white shirt leaving the tie dangling from his neck. The multicolored garment looked silly against his hairy, muscular chest, and Liz giggled at the image.\n\n\"What?\" he asked. \"The tie's still in play, and if I'm getting hustled I might need it.\"\n\n\"Damn straight, you will,\" Liz teased.\n\nThe next round commenced, and as the game got a little more difficult, Todd's experience began to catch up to Liz's natural ability. This time around, he was the victor and gave a happy cry as the clock ticked down. They did not get to the level boss this time, so it was Liz's choice as to what she took off. \n\n\"What's it gonna be, Princess?\" Todd asked with a mock leer. Liz just smiled,reached behind her back, and made a few slight wiggle. Then reaching through the sleeve of her dress, she pulled out her bra from the hole and threw it at him.\n\n\nTodd stared a little longer this time. Suddenly, the game was stepping up a notch. \"You just gonna sit there?\" Liz asked. \"Works for me. I'm happy to let you while I kill some more robots.\"\n\nThe game was on and Liz bit down on the tip of her tongue as she concentrated. Todd growled and she laughed victoriously as she made progress. \"Haha! Eat it!\" she yelled, and giggled as he leaned forward and cursed. \"Woooo!\" She yelled and giggled as he lost. \n\nSetting her controller down she turned and wiggled her brows, watching as he took off his tie and threw it her. She caught it and grinned wickedly, slipping it over her own neck and poking out her tongue. \"Ready? Think you can take me?\" she teased.\n\n\"OK sweetheart, from what I can tell we both have two things left on,\" Todd said slyly. The next boss will be coming up this round. If one of us wins and kills him, it's game over. You ready for that?\"\n\n\"Born ready,\" Liz replied, sticking her tongue out at him.\n\n\"Me too. Game on!\"\n\nAs Liz started dismantling robots left and right during her head start, Todd watched admiringly. She had really picked the game up quickly, and she'd make a fine addition to the squad if she wanted to join him and Ben later. He had originally planned to take it easy on her and had sandbagged a little at first. But, her obvious knack for the game kept him from doing that again. The head start was enough. Five minutes ticked away, and he picked up the controller for the next five. The battle raged, robots exploded, and finally a huge lumbering battle mech entered the screen to signal the end of the stage. The couple and their avatars whooped and laid into the ominous hunk of metal. Just before the timer clicked, the battle mech disintegrated into shrapnel and parts. The action had been fast and furious, but the final blow was Todd's. It wasn't by much, but he had the high score, the kill shot and the game. He sat the controller down, turned to Liz and said with a grin. \"Nice game, Red. Ready to pay up?\"\n\nShe chuckled and threw down her remote, \"I think you cheated, but I can't prove it, so...I suppose fair is fair.\"\n\nStanding up, she faced him squarely, blushing slightly, but ready. He looked yummy, sitting there in only his dress pants with his chest and shoulders bare. Her fingers itched to caress his pecs and play with his chest hair. He had just enough to make it look sexy and not like a walking carpet.\n\nHe looked very pensive and she shifted from one foot to the next, \"Come on buddy, panties or dress...unless you count the tie I'm now wearing.\" she teased. Suddenly the idea of her in nothing but a pair of silky panties and a tie straddling his body seemed too sexy for words. She wondered if 'lil' Todd would appreciate that sight.\n\nTodd slowly stood to his full height, his eyes warm and darker than they usually were, looking down at Liz. \"Oh no, little girl. Someone's forgetting the rules. The tie doesn't count since you put it on after we started, and you only had two things on. It's dress and panties, sweetie. Unless you're...oh what's the word? Oh yeah...chicken!\" Todd started strutting and imitating a rooster all around Liz. \"Oh wait, I guess you do have an out though. If you want you can count the chain with the ring as an item of clothing. My choice is dress. I'll let you make the decision on panties versus chain.\"\n\nLiz blushed a little, but smiled and danced as sexily as she could to bumper music from the video game. Just as Todd had done when taking off the shirt, she made the disrobing a show. She unzipped the dress holding it to her chest as she pulled each arm out. Finally she let it slip ever so gently to the floor. Todd had seen her breasts in all their glory before, but still his breath caught in his throat. This time seeing them was markedly different, and he noticed that the blush continued down her chest, coloring the swells of her cleavage. The chain with his grandfather's ring nestled between them, the light occasionally glinting from the gold and drawing his attention to her pink nipples. An unintended \"mmmmmmmm\" escaped his lips.\n\nShe smiled as she moved to take off the item she had chosen. This was what Liz had been secretly hoping for. The chance to stun him into silence, only a tiny moan of appreciation passing his lips as he took in her near nude body. She basked in her womanly power over him, feeling sexier than she ever had in her life. She watched as his eyes did a slow trail from the tips of her boobs, gliding down slowly and when he reached her hips, she did a little wiggle and slipped her fingers into the sides of her panties.\n\nHe actually licked his lips, making her insides quiver as she ever so slowly pushed the flimsy material off and playfully kicked them at him. He caught the fabric without blinking, his eyes settling on smooth bare flesh of her mound and when he pressed her panties boldly to his nose and inhaled, she gasped, moaning softly as she breathed out his name.\n\n***\n\nThe cool air of the rec room made her already hot body shiver. Biting her lower lip, she extended a hand out to him and smiled shyly, \"You going to make stand here all night?\"\n\n\"No.\" Todd replied. \"We're done in here. Time to go somewhere more private.\" He picked his suit coat up from the chair where he had hung it, opening it and moving slowly behind Liz. He wrapped it around her, grazing her breasts as she put her arms through the sleeves. He kissed her neck and buttoned the coat and turned her to face him. The coat covered everything it should to allow her to walk back to the apartment, but still showed enough glimpses of flesh to entice a dead man. He leaned in and whispered. \"Now it's time for what I've been waiting for. I'll walk you back, then come back for this stuff. Wait for me in my room.\"\n\nLiz nodded and he took her hand, walking her back to the apartment. His lips kissed the tips of her fingers, his breath warm on her skin, his gaze promising things that made her insides clench. With a swoop of his arm, he ushered her inside, taking in her pretty smile as she passed him by and walked to his room.\n\nHer pulse hammered like crazy, her fingers tingly after his sweet, soft kisses. There was no telling what he had planned for her. All she knew was that so far, this had been the best night of her life yet. Smiling, she slipped into Todd's room and sat on the edge of his bed, fingering her hair into place and reaching down to fiddle with the gold ring that lay between her breasts. \n\nBefore long, she heard him return to the apartment, shutting and locking the door behind as he returned everything to it's rightful place and then entered the room. He motioned for her to stand and she did, gazing up into his handsome face. \"We have one tiny problem here, but I think I have it all figured out.\"\n\n\"Oh?\" She responded softly and watched him nod. His fingers unbuttoned the jacket and slid the material off her bare shoulders and body, tossing it aside. Her breath hitched as his hands slid along her bare arms and his mouth dipped to nuzzle her neck again. \n\n\"Lay down.\" He murmured, inhaling her scent and moaning softly.\n\nSliding up on the bed, she lay back, giving him a full view of her lush curves and intimate places. Her breathing was a little off as she watched him join her, still practically clothed. \"This isn't very fair,\" she complained lightly, as his face hovered over her own. \"You still have pants on.\"",
        "He flashed her a grin and then did what she'd waited for all night. Dipping his head down, he kissed her soft lips. Softly at first, one kiss, two, three and by the fourth his tongue came into play and they both moaned, arms sliding around to pull each other closer.\n\nThey kissed like that for a while, exploring and tasting, getting used to one another in a new way. A few minutes later, Todd came up for air and smiled down at Liz. \"Oh, by the way, the pants are staying on. Tonight's not the night for the main event. We have catching up to do first. You took care of me for a week, now I'm going to take care of you.\"\n\nBefore Liz could voice any argument, Todd kissed her again, hard. His hands worked their way down the front of her body, the left finding her right breast, the right moving down further to cup her moist sex. He continued kissing her, but began to work the soft flesh of both body parts, slowly but surely. Liz purred in pleasure as Todd made a mental note of what was working the best for her. The area under his right hand became warmer and slicker with her natural reactions, and Todd began to kiss the way down her neck. Soon his lips breathed hotly on her left nipple, and his index finger began to slide slowly up and down her wet cleft.\n\nShe had wanted to protest. To tell him it was silly for him to just take care of her, but the words died on her lips and then she forgot all about anything but the sensations he was creating. It had been a long, long, terribly long time since she'd been with anyone and her senses were suddenly extremely sensitive and singing. She gasped loudly as his mouth settled on her nipple and body arched up to thrust her breasts against his mouth much like the morning she had been 'dreaming' and woke up to find an all too real sensation.\n\nHer hands seemed a little lost. She smoothed them over his shoulders and arms, then up along his neck and through his hair, sighing softly as his tongue swirled around the tight bud and then nipped it gently. \n\nRestlessly her hips squirmed and her legs parted ever so slightly to give him better access as his fingers traced her cleft and brushed against her clit, making her jerk slightly. \"Oh ummmmmm.\" She moaned.\n\nHearing Liz voice her approval of what he was doing, Todd pressed forward. He alternated between making circles around her nipples with his tongue, sucking with gentle steady pressure and grazing them ever so slightly with his teeth. Not to hurt, just to tease. His finger was now fully wet with Liz's juices and Todd firmly but slowly spread her lips and let it sink in. Soon, it was completely enveloped in her warm folds and Todd began to move it in and out. His left hand slid down to join the right, and he moved in thumb in circles around her clit.\n\nLiz jumped a little in response, feeling his lips press close to her ear before he whispered, \"Relax and enjoy.\" Then his kisses began burning a trail down her body, over her breasts, toward her stomach on a steady trail to the destination they both wanted.\n\nShe mewled and dropped her hands to the comforter, grasping the material and hanging on. His lips were heaven on her skin, better than any dream. Her body twitched and moved, lifting as his lips settled and then sinking back down as he moved on. Her breath stuttered out, hitching and holding as he kissed his way over one hip, nuzzling one thigh as his wide shoulders pushed and spread her legs apart.\n\nShe felt herself flush, feeling vulnerable and hot all over. Part of her suddenly wanted to cover up. This was after all, Todd. But the feather of his lips against her inner thigh had her nervousness melting and before she knew it, he was wedged between her quivering limbs and his breath wafted over her soft and completely bare lips. \n\n\"Todd!\" She gasped and he shushed her gently, his fingers gently twisting within and hitting a spot that made her whole body shudder. He made a soft male sound of appreciation and then his tongue found her clit and her body hummed with pleasure.\n\nLiz's whimpers of pleasure spurred Todd on. His tongue traced counter-clockwise circles around her clit and every so often he would run it lower and inside the lips to savor her taste. Todd crooked his index finger in the same fashion as he would if he was motioning her closer. But here, it meant \"cum\" rather than \"come here.\" His bent finger pressed upward inside her, finding the rough textured area beneath her pelvic bone and playing it like a guitar string. Todd's left hand reached forward to find her breast and nipple once more, as he wanted this woman, who had meant so much to him for so long, to experience all the pleasure he could offer. \n\nLiz's hips began to rotate beneath him, and Todd smiled inwardly. If this was any indication, his efforts were paying off.\n\n\"Mmmmmm....\" she sighed tightening her inner muscles around his finger and bearing down against it. The pressure and pleasure was so sweet that she was having a hard time not moving. Instead she kept on a slow rotation of her hips, gripping the sheets and concentrating on that wonderful sensation. His fingers tweaked her nipple gently and she gasped and moaned, thrusting it up against his hand.\n\nGod was she wet , slick, warm and inviting. His fingers effortlessly glided into her pussy as he took a moment to draw back, kissing her thighs and lower tummy before slipping back down. \"Oh yes!\"\n\nAs the pressure built, her hips moved a little faster under his efforts and she shifted restlessly. The ache was almost unbearable. She wanted him inside, but knew he wouldn't budge. So close, her upper body twisted slightly and her breath caught again, coming out in a bit of a mewling whine. \"Todd...Todd...\" she breathed, \"Ooooh god...don't stop!\"\n\nLiz rocked beneath him, and Todd replied.\"No way I'm stopping till you get where you're going.\" He returned to his ministrations, reveling as he sensed her in every way. He had always enjoyed this activity as foreplay, but this was different. It was the main course, not the appetizer, even though little Todd was fully awake and starving. \n\nLiz's pussy began to contract on his finger and he knew she was close. \"Tell me as soon as you get there, baby,\" he whispered. He renewed his oral attention to her pleasure bud, while bringing his middle finger next to his index. Together, they worked her inside and out.\n\nLiz's shoulders dug into the bed as her back bowed off the bed and her hips pressed down, squeezing his fingers with her muscles as he swirled his tongue around her sensitive clit and flicked it. She resisted the urge to grab his head and smother him between her legs. He was doing a fine job by himself. The rolling pleasure and pressure was almost too much. \n\nSqueezing her eyes tight, she shuddered and felt herself slipping with each pass of his tongue and wiggle of his fingers. Her body tensed tightly, each muscle straining towards that goal and then she was there. Flying over the edge with a burst of pleasure. \"Ooooh right there...right there!\" She cried out, \"I'm cumming!\" \n\nShuddering, she clamped her legs to his shoulders and rolled her hips, gasping and panting as he continued to drive his fingers into her wet slit. Starting up at the ceiling, dazed as her body relaxed, boneless against the bed. \n\nAs her eyes closed with her dreamlike state, Liz found her mouth covered once again with Todd's as he kissed her urgently. Their tongues wrestled playfully, and for the first time Liz could taste her own tangy juices on his lips. She moaned a contented sigh of pleasure and clasped Todd to her. His hard cock was evident as it lay against her leg.\n\nTodd felt the pressure too. Even though Little Todd was virtually screaming to be let out, Todd fought that urge. Instead, he turned that need inward, showing his passion through his kisses instead. The happy couple continued in blissful abandon, till Todd felt that damned wave of fatigue he'd become used to over the past week. Not wanting to stop, but not wanting to pass out either, he finally broke the embrace and looked into Liz's ecstatic face. \"I think I have a new contender for favorite kiss,\" Todd said with a grin.\n\nShe smiled up at him and sighed, \"I'll second that motion, but I dunno, they are all pretty great.\"\n\nGently she caressed his chest, toying with the hair there, gazing into his warm eyes. \"You sure you don't want me to return the favor?\"\n\nHe groaned and sighed, pulling her naked body close so that she lay partially over him now. \"God do I ever! But doctor's orders and all.\"\n\nLiz grinned and kissed his chin lightly, then his neck, down to his chest. \"You poor baby. I guess I'll have to make it up to you big time.\" She teased and then wiggled until she could get under the covers. \"We could at least go to sleep in the same bed. Do you need your meds? Peas?\" She let her gaze trail over to the tent in his pants and tried not to laugh.\n\nLittle Todd leapt at the attention. \"Not helping, Red, \" Todd laughed. \"Let me go change into something to sleep in. You're good with what you have on.\"\n\nHe crawled out of bed and grabbed some lounge pants. \"I should probably hit the bathroom and brush my teeth and stuff too. Back in a bit.\"\n\n\"OK, hun,\" Liz replied blissfully.\n\nTodd left the bedroom and grabbed a sports drink from the fridge. After that workout, he was glad for the hydration and that Hollie had left some there. That was more exertion than he'd had since the fight a week ago, and though he wouldn't have missed it for the world, the activity had taken a lot out of him and it was late.\n\n\nHe downed the drink quickly and made his way to the bathroom. He brushed his teeth, and then figured he should take care of some of the less sexy bodily functions. While he did, the mysterious Vogue quiz crossed his mind again. Liz had guessed Hollie had filled it out. But, if that was so, who was she thinking of? \n\nLiz was dozing when Todd returned and slipped into bed next to her. She hadn't bothered to put on anything - mostly because she was too tired, but also because she loved the feel of his skin against her own.\n\nWith her back to him, he slid up behind and pulled her against his chest. She nestled close, pressing her bottom again his lap as he fit his body against her own. Yawning, she smiled as he kissed her bare shoulder and gently caressed her tummy, sliding a hand up to her breast and making her gasp softly. \"I like this kind of pillow.\" He murmured and she giggled.\n\n\"Time for bed big boy. You need your beauty sleep so I can pounce you later.\" \n\n\"I'll hold you to that, by holding you. Good night\""
    ],
    "authorname": "Story_Spinner",
    "tags": [
        "friend"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/more-than-friendship-material-pt-07"
}