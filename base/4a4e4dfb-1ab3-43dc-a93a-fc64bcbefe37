{
    "title": "Tales from Old Shanghai 01",
    "pages": [
        "\u00a9 2019 Chloe Tzang. All rights reserved. The author asserts a moral right to be identified as the author of this story. This story or any portion thereof may not be reproduced or used in any manner whatsoever without the express written permission of the author except for the use of brief quotations in a review. \n\nAnd as always, a warning from Chloe: This is not a short story. It's approximately 108,000 words, about 29 Literotica pages long, so be warned. That said, it's written by me so of course there's lots of sex even if it does start of a little slowly. There's a story as well. So now that you've been warned, or advised, or whatever... do enjoy..... Chloe\n\n<center>* * * </center>\n\nShanghai, China, in the mid-to-late 1930's. Old Shanghai. That Old Shanghai of the decades before the 1949 Liberation. That old Shanghai is a Shanghai far distant from the modern Chinese city of today, almost one hundred years later. That Old Shanghai, the Shanghai that was \"the Paris of the Orient\", \"the Capital of the Tycoon\", \"the Paradise of Adventurers\", \"the Whore of Asia\"; that Shanghai has long disappeared into the distant past. Found now only in the surviving architecture from that era, in old memoirs and books, photographs and postcards, music and movies filmed there long ago in what was \"the Hollywood of the East,\" even the last survivors of that distant era are now fast disappearing as age and time take their inevitable toll.\n\nBorn in humiliation at the hands of the West, growing exponentially in the shadow of the Opium Wars and the forced opening of China to the sale of that most addictive and poisonous of drugs, Shanghai grew to dominate China with its power, its sophistication and above all, with its money. Its residents were primarily Chinese, but Shanghai was a Treaty Port, open to foreigners, ruled by neither China nor by the foreign powers whose citizens lived there. No passports or visas were required. British. Americans. French. Germans. Italians. Danes. Norwegians. Swedes. Jews. Spanish. Belgians. Romanians. Portuguese. Hungarians. Egyptians. Iraqis. Indians. Eurasians. Japanese. Koreans. White Russian refugees from the Bolshevik Revolution and the subsequent Civil War, now destined to be citizens of nowhere. Jews fleeing the Nazis, all lived an often precarious existence in this city which took in every nationality under the sun without restraint or restriction.\n\nThat Old Shanghai was an extraordinary city. Incredible wealth and unbearable squalor existed side by side. Children worked as virtual slaves in factories, young girls as prostitutes, hundreds and thousands lived and died in the streets, struggling to survive from day to day. Thirty thousand children were abandoned by their families every year, to scavenge for their food and survive on the streets. In winter, the frozen bodies of the poor were picked up daily in their hundreds by the death carts. Female babies were sold by their starving families to the criminal gangs, the triads, where they were gruesomely mutilated by the leaders of the beggar gangs, many of them deliberately blinded to arouse the sympathy of the foreigners. Young boys and girls, five, six, seven years old, worked from six in the morning to late at night over boiling vats of cocoons in the silk factories or in the textile plants. \n\nMany of the most beautiful girls were sold to the brothels, others saw the brothels as preferable to life in the countryside where all they had to look forward to was a life of servitude, hard labor and bearing children. There was little choice for these girls, one of the few alternatives was the abject slavery of the mills and factories, slavery which would soon turn the most beautiful of girls into a haggard wretch. In 1930, when Shanghai's population was three million, an international survey found that Shanghai had a higher proportion of prostitutes to population than any other city in the world. In Berlin, one in 580 was a prostitute. In Paris, one in 481, in Chicago, 1 in 430, in Tokyo, one in 250 and in Shanghai, one in 130. For females, there were very few alternatives. Peddling food or trinkets on the street, working as a domestic, a laundress, a servant, slaving in factories for a pittance. \n\nFollowing the Bolshevik victory in the Russian Civil War, White Russian refugees flooded in to Shanghai, one of the few places in the world that, while it did not exactly welcome them with open arms, admitted them without restraint, thousands of them. \n\nSide by side with that Shanghai of exploitation, outright slavery, squalor, misery and abject struggle for survival were other Shanghai's. The Shanghai of the Chinese intellectuals. Shanghai saw the birth of the Chinese Communist Party. Shanghai offered Chinese contact with the west and an escape from China's rigid social system. Western fashion, stylish Chinese fashion, politics, the new in everything. Many Chinese believed that Shanghai represented China's future and saw its glittering modernity as a path and an escape out of the feudalism that had held China back for so long.\n\nThere were many other Shanghai's. There was the Shanghai of the Modeng Girls, the modern girls, the \"new women\" of modern China for whom Shanghai was the epitome of stylishness and modernity, in fashions, in intellectual thought, in culture, in political thought. There was the Shanghai of the revolutionaries, for it was here that Sun Yat-Sen lived. It was here that the Chinese Communist Party was founded, it was here that Mao Tse-Tung lived for a number of years, it was here that Chou Enlai played an important part in the \"Red Terror\" and the Communist uprising in 1927 \n\nThere was the Shanghai of the students, for students came from all over China to Shanghai to study in the modern schools and Universities. There was the Shanghai of the wealthy Chinese, the bankers, the businessmen, the industrialists. There was the Shanghai of the Chinese middle-classes, the Shanghai of the workers, the Shanghai of the rural poor, flooding in to escape the warlords, the fighting, the starvation that faced so many peasants. The Shanghai of the Clubs, Bars, Theatres, Brothels and Prostitutes catering to every taste. The Shanghai of the Triads, the Chinese criminal gangs with their leaders such as Du Yuesheng, \"Big-eared Du\", the leader of the Green Gang who dominated Shanghai's opium and heroin trade in the 1930's and secretly funded the political career of Chiang Kai-shek.\n\nThere was the Shanghai of the foreigners, seventy thousand of them in Shanghai's heyday. Foreigners of every nationality, for there were no restrictions on entry into Shanghai, no passports were required and Shanghai and an allure all of it's own. The \"Paris of the Orient,\" the \"Whore of Asia,\" in its heyday, Old Shanghai was the most pleasure-mad, rapacious, corrupt, licentious, squalid, decadent, strife-ridden city in the world. Missionaries declared that if God permitted Shanghai to exist, he owed an apology to Sodom and Gomorrah. Greed was its driving force. Anything was for sale. Everything had its price. Every depravity known to man was catered to. Nightclubs never closed. Hotels offered heroin on their room service menus. Aptly nicknamed \"Sin City,\" Old Shanghai was a place and time where morality was irrelevant. \n\nThis is the world in which \"Never Ending Love\" is set. A world of depravity, immorality and decadence, a world where everything has its price. A world where everything can be bought or sold. A world where everything and anything is a commodity, a world where corruption and betrayal are everyday occurrences. A world where life was cheap, a world where nobody cared if you lived or died. That was Old Shanghai, and there are many tales of Old Shanghai in those far gone days of the 1920's and 1930's. This then, is one such tale.... Chloe\n\n<center>* * * Never Ending Love * * *</center>\n\n<center>(\u4e0d\u4e86\u60c5)</center>\n\n<center>\u5fd8 \u4e0d \u4e86, \u5fd8 \u4e0d \u4e86 (wang bu liao, wang bu liao)\n\nHow could I forget, how could I ever forget?\n\n\u5fd8 \u4e0d \u4e86 \u4f60 \u7684 \u932f (wang bu liao ni di cuo)\n\nHow could I forget your mistakes?\n\n\u5fd8 \u4e0d \u4e86 \u4f60 \u7684 \u597d (wang bu liao ni di hao)\n\nAnd how could I forget your sweet love\n\n\u5fd8 \u4e0d \u4e86 \u96e8 \u4e2d \u7684 \u6563 \u6b65 (wang bu liao yu zhong di san bu)\n\nHow could I ever forget our stroll in the rain?\n\n\u4e5f \u5fd8 \u4e0d \u4e86 \u90a3 \u98a8 \u88e1 \u7684 \u64c1 \u62b1 (ye wang bu liao na feng li di yong bao)\n\nAnd how could I forget our embraces in the wind?\n\n\u5fd8 \u4e0d \u4e86 \u5fd8 \u4e0d \u4e86(wang bu liao, wang bu liao)\n\nHow could I forget, how could I ever forget?\n\n\u5fd8 \u4e0d \u4e86 \u4f60 \u7684 \u6dda (wang bu liao ni di lei)\n\nI can never forget your tears,\n\n\u5fd8 \u4e0d \u4e86 \u4f60 \u7684 \u7b11(wang bu liao ni di xiao)\n\nAnd I can never forget your smile.</center>\n\n\"Never Ending Love\" (\u4e0d\u4e86\u60c5), version sung by Tracy Huang\n\n(search for \"\u4e0d\u4e86\u60c5 Tracy Huang\" on youtube if you want to listen to it -- and if you're going to read this story you really should because the song really does capture the mood of this story, regardless of whether you understand Chinese or not)\n\n<center>* * * * * *</center>\n\n\"How could I forget,\" I whisper. \"How could I ever forget?\" \n\nIt is early morning. It is another Valentine's Day. Yet another year has passed and there cannot now be many years left to me. As I do every year now, as I have done now for many years, I repeat the ritual, carefully easing the single red rose I am carrying into the delicate porcelain vase beneath that oil painting hanging on the wall. I've had that painting since I was eighteen. Since I was a girl. I brought that painting with me from Shanghai, concealed in my luggage, but I've only had it framed and hung here, on the wall in this room, after my American passed away, many years ago now. \n\nBefore then, I remembered him silently, in my heart. After my American passed on, I remember him openly, every Valentine's Day. I come to this room, I place a single red rose beneath that painting and I sit in this room all day, remembering that love from long ago. Cherishing that love, treasuring those memories that will never be forgotten. Never. Never for as long as I draw breath.\n\nToday is Valentine's Day. \n\nThis is the day I remember him on. \n\nThis is the day on which I remember our love. \n\nThis is the day on which I remember our passion, the eagerness and excitement with which I first fell into his arms. I remember that first meeting, that first electric meeting of our eyes, so many years ago. That first kiss, that first sharing of our mingled breath, that first touch of his hands, the joy with which I first offered my breasts to his mouth, my body to his hands. That excitement with which I first gave myself completely to him, the anticipation, the fear, the eagerness, the joy, that love for him as he possessed me that first time and every other time thereafter.\n\nI remember how his love transformed me. From a shyly innocent schoolgirl, I became a slave to love, a slave to his desires, a slave to my own desires, moaning, sobbing, begging, my hands and my body and my voice encouraging him, demanding more, demanding everything, giving everything as he brought me again and again to that taste of heaven in his arms. I remember his love, the love in his voice, in his arms, in his body, the happiness and joy I felt when I was with him and I smile at my younger self and my first love. \n\nMy only love.\n\n\"How could I ever forget,\" I whisper, looking at that couple in the painting, so visibly in love and that painter of long ago captured that love so well. You can read that love on their faces, in the way they lie together, touch each other. That couple, they radiate love.\n\nShe, the Chuntao of eighty years ago, so young and beautiful. Her silken black hair falls in waves over one slender shoulder, falls to the red sheet on which she lies. He, Martin, the blonde-haired Englishman, lying behind me, one hand on my leg, resting slightly above my knee and I remember him doing that, exposing me to the artist's eyes. My hand rests on his and I remember the shame and the embarrassment of posing naked with him for that artist. \n\nI remember the excitement as we lay there there. Both mine and his. Martin lying naked behind me, his unseen erection pressed swollen and hard against me as the artist sketched us over that long morning and on into the afternoon. I remember also how our restraint and my inhibitions and shyness vanished the moment that artist left the room. I remember the wild excitement of that taking.\n\n\"How could I ever forget,\" I breathe, knowing I never will, for how could I ever forget his love. \n\nMy love. Our love. That love, it is with me still as I gaze at my younger self, lying there, half-smiling, captured forever as I was when I was barely eighteen, still a schoolgirl, in my last year of Boarding School in old Shanghai. The old Shanghai of the late 1930's. The Shanghai of my youth so long ago in time, only yesterday in my memories. \n\nThat Shanghai of 1938, the year that picture of he and I was painted, a lifetime ago, when we were young and in love and together. Chuntao and Martin. Martin and Chuntao. I, Chuntao, a young Chinese schoolgirl. He, Martin, a young man of twenty five, with the arrogant self-confidence of an Englishman in Shanghai who worked for Jardines Matheson, one of the largest of the hongs in China. \n\nMartin. The world was at his feet when we met, a lustrous career ahead of him and he fell in love with me, Chuntao, a young Chinese girl, just as I fell in love with him. Love between an Englishman and a Chinese girl, the deep love that we held for each other, a love that knew no barriers, in those days that was, perhaps not completely forbidden, but certainly deeply frowned upon. \n\nAnd yet, against all the odds, we loved each other utterly and completely. In that painting, that love shines through. We are so young and so confident, so in love, so optimistic that despite all the obstacles that would be thrown in our path, our lives were destined to be intertwined forever. \n\nIn that painting, I'm lying on an old wooden bed covered by a red silk sheet embroidered with flowers of gold. I can remember every detail of that that room, even now. I close my eyes and I am there. The polished wooden floor, the wallpaper, the wooden shutters, the bamboo blinds shielding us from prying eyes, the smell of incense from the neighbouring rooms in the air, the endless clanking and rattling of the old central heating, for it was mid-winter then, and Shanghai in winter is cold. \n\nThe noises from the street. That large bed on which we spent so much time together. The red sheet on which we lay. I remember that sheet. Its colors. That vivid red, the golden flowers. That fine silk against my skin as I lay naked upon it, smooth and cool against my back. The texture of that silk in my clutching hands clutched as I knelt for him. Its silky smoothness as his hands used it to wipe the sweat from my face, from my body. It's fragrance as I buried my face in it and inhaled. \n\nI remember everything about that sheet.\n\nI possess it still, worn and fragile now, still retaining a faint scent of our love, so faint it is almost a memory. Almost, for when I bury my face in the fragile fabric, I breathe him in, a hint. Just a slight hint now, after all these years, all these decades. Nothing more than a hint, but I treasure that single red sheet. \n\nIt is the sheet on which we lay together so many times. It is the sheet on which I gave up to him my precious virginity, that virginity which a Chinese girl of my time, from a good family, should never sacrifice until marriage, but sacrifice that precious pearl I did, willingly. Eagerly. That sheet on which I loved him and he loved me so many times, long ago in Shanghai. I still have that sheet, with that now-faint discolouration that was the evidence of that long-ago offering I made to our love. \n\nThat sheet and this painting and the never ending love in my heart; that is all that remains of that love from that long distant past and how I wish there had been more, more than only those few brief months of love together. How I wish there had been that lifetime of love that we had hoped for and talked about together.\n\nThat girl, her eyes, those beautiful almond eyes, they glow with the innocence of first love. Her lips are slightly parted, reddened with the lipstick she had worn for him on that day, smiling. Those slightly pouting lips, painted in that time before they were kissed by a thousand men. She is slender, her small breasts so firm, her nipples so red and full and I remember them aching through that long afternoon, feeling his naked excitement pressed against me as I lay there, limp and flushed with my own arousal.\n\nMy nipples. I remember them aching with that swollen fullness that desired his hands, his lips. Engorged with the shameful excitement of lying naked before another man as he painted me, as he painted us, long ago in that time when I had only ever been naked for Martin and Martin alone. Long ago, in that time before those small firm breasts and those full red nipples were caressed and enjoyed by a thousand hands, a thousand eyes; a thousand mouths. \n\nThat girl, she lies there, on her side, facing the painter, her skin silken ivory, glowing. Slim-hipped, long legged, she lies there exposing her nakedness, one leg slightly raised, held by his hand to expose her delicate sex, touched then only by him and even now, eighty odd years later, how I wish there had only ever been him. \n\nI do not regret my American, but how I wish it could have been otherwise.\n\nHer sex is exposed, painted in such exquisite and lifelike detail that this could almost be a photograph. Delicate, pinkly flushed with her arousal, that Chinese artist of eighty years ago captured that slight parting of that young girl's swollen labia, that hint of glistening wetness, the invitation of her hips, that hint of embarrassed sensuality conveyed by the angle of her body as she lies there.\n\nThat slender beauty, those long slender legs, those slim hips, that delicate sex, that flat stomach and narrow waist, those small firm breasts, those pouting lips, those sparkling eyes, that innocence, that love, all his. Only his. His until that innocence and then that love were shattered by the brutal realities of existence in that Shanghai of old where nothing was scared, where nothing was free, where everything, including innocence, had its price.\n\nThat slender beauty and that love, his, all his until that young girl was forced to choose survival over love, forced to stare reality in the face, forced to face that brutal truth. That simple brutal truth. Left alone, without family, on her own, her plea for his help not understood, all that innocent young girl had to survive with was her beauty and her smile. That girl, that innocent young girl, she was left to fall back on her own resources, to live or die, as she chose. \n\nShe chose to survive. \n\nShe chose to do what she must to live, and in making that choice, she lost he that she loved forever.\n\nThat slender beauty, taken and enjoyed by a thousand men. So many men in that time between Martin and my long-dead American. My American. I always called him that, never by his name, both when he lived and now. I married my American, but Martin was my love and I will never forget Martin. It is my American who took me from that life, who brought me here, who gave me my children and my beloved grandchildren and my great-grandchildren. \n\nMy American will always have my gratitude.\n\nMy Martin will forever have my love.\n\nHe has always had my love.\n\n\"Grandmother... grandmother... it's time to go to dim sum.\" My oldest great-grandchild's voice calls me away from the past, away from that painting from long ago, when I was young and beautiful and so innocent and so in love. I take one last sip of my jasmine scented tea before she finds me in my tea-room and comes to help me to the car. ",
        "The tea-room that my American built and furnished for me so many decades ago.\n\nHe had this tearoom built for me almost the moment we arrived here from Shanghai and I have barely changed it since. The mother-of-pearl embossed rosewood couch with the matching chairs, the corner tables and the long rectangular rosewood coffee-table on which my precious guqin sits, my guqin that I paid for in shame and humiliation but which I treasure all the same. The eight foot tall dragon tree in its terracotta pot, the floors of polished wood, the windows opening out onto the garden with its beds of flowers and shrubs. \n\nIt was my refuge long ago, back when my American had it built for me, back when America was a strange and foreign land, back when a beautiful young Chinese sing-song girl married to a wealthy and far older American was a strange and exotic creature in this land of Texas. \n\nIt is my refuge now, a small taste of the tranquillity of my childhood home in Nanking, a soothing escape from the bustle and noise of my oldest son's family, a place where I can come and sip my jasmine tea and gaze on my younger self and on the love I have never forgotten. The love for whom I would have abandoned even my American.\n\nMy American. \n\nHe was so much older than I. Thirty years older than I when we married, when he carried a young Shanghai sing-song girl, a Shanghai whore, for let us be honest, that is what I was when my American met me, when he carried me across the Pacific from Shanghai to this foreign land, this Texas which has been my home now for almost eighty years. My American has long passed away, forty years gone now, and I still miss him. His loudness, his brashness, his confidence, his Midas touch, for whatever he touched turned to gold. \n\nI miss his unquestioning love for me, for while I never loved him, he loved me and he cared for me with a passion and a tenderness that warmed and soothed my shattered heart and my jaded soul. I returned that love, not with love, for I could never love another, but with caring and gratitude, as best I could and I do believe he never knew that always, always I have loved another. \n\nNever would I have betrayed my American with that knowledge in his lifetime, but now, long afterwards, I can reveal the truth, if only to myself and thus I hung my painting on the wall of my tearoom, where I can sit and look at my younger self and my love from long ago. My only love. I sit, and I look and I remember.\n\n\"Grandmother, where are you?... Oh! I knew you'd be in here.\" It's Tien-chien. \n\nMy oldest great-granddaughter. She's twenty three now, her English name is Terri and to all appearances she's Chinese. Her father was my oldest grandson, the grandson of my American. His American-Chinese wife, she's a banana through and through but she chose to give her daughter, my great-granddaughter, a Chinese name as well as an English name and I cherish my Americanized grand-daughter-in-law for that small gesture, for there is nothing else Chinese about my grand-daughter-in-law beyond her appearance. \n\nTerri. Tien-chien, my great-granddaughter, she is tall, slender, long-legged, slim-hipped, small-breasted, black-haired, almost a mirror-image of that girl in the painting and I'm not the only one to see that resemblance. Even her face could be mine, so close is the resemblance and when I look at her, it is as if I look at my younger self.\n\n\"You were so beautiful when you were young, grandmother,\" she says, standing beside me, reaching down, taking my hand in hers, looking at my painting with me. \n\n\"You'll have to tell me about him one day. One day soon. Who he was, where you grew up, your family. You've never told anyone, you know. We know you were from Nanking, we know great-grandfather met you in Shanghai, we know that girl is you, Grandmother, but who was he? Where were you? What's the story behind that painting? You should tell someone. Your story, its family history, Grandmother. It's not something that should be forgotten, it's not something that should be forever mysterious.\" \n\nHer hand squeezes mine, very gently, her shoulder brushes mine as I stand, for she is the same height as me, except that she stands tall and straight and despite myself, I stoop a little. Age creeps up on us, and I am old now. Old enough that no-one I knew in those long-ago days is left. \n\nOnly me.\n\n\"It's a long story, Tien-chien,\" I say, very slowly. \"Long and very very painful. Do you really want to hear it all?\"\n\n\"Yes, Grandmother,\" she says, very simply, and I hear that truth in her voice. She does, she wants to know and she is looking at my younger self and I glance at her and I see myself there as she sees herself in my painting. That girl in the painting, yes, that girl could be Tien-chien as much as it could be I. The resemblance is striking. \n\nI glance at her again, look back at my painting. Gaze at my younger self and my never forgotten love and I know it's time, for I am old now and who knows how much longer I have left. Not long. One year? Perhaps two? Three at the most. I should tell someone, and who better than this great-granddaughter who looks so much like me. I look at myself there on the wall and I look at this likeness of my younger self standing beside me and I make up my mind. \n\nIt is Tien-chien. She shall have the story that no-one has been told, and she shall have the painting that is from near the start of that story. That long and painful story and I glance once more at my younger self, summoning all my courage, all my strength. \n\n\"We loved each other so much. This painting, it was his Valentine's Day gift to me,\" I say, my voice a whisper now, for I have never told this story to anyone and it is painful. So painful. \"He gave it to me on Valentine's Day, 1938. Sit with me here, this afternoon, Tien-chien, after dim sum, and I will share this story with you.\" \n\nAnd afterwards, at the family dinner this evening, I will tell my sons and my daughters and my grandchildren and my great-grandchildren that are old enough to understand that Tien-chien is to have this painting and my precious guqin when my time has come to an end. There is more than enough of everything for everyone else to share, but the guqin and the painting, my painting; those are mine to give and they will be my gift to Tien-chien. \n\nMy story, the story of my love? That too will be my gift to Tien-chien, entrusted to her.\n\nThe red sheet with the golden flowers on which I lie in that painting? \n\nThat, I will lie on in death as I once lay on it in life.\n\n<center>* * * </center>\n\n\"Sit here, Grandmother,\" Tien-chien says, helping me as I seat myself on my rosewood couch, facing my painting. Then, hesitantly. \"Are you sure you want to?\"\n\nI smile, pat the couch beside me. \"Pour some tea, Tien-chien,\" I said, for she has already carried a pot of steaming jasmine tea in and placed it on the coffee table, together with the cups. \"This will be a long story,\" and I gather my thoughts and my memories as she pours gracefully.\n\n\"His name was Martin,\" I begin. \"He was an Englishman and we met in 1937 at the beginning of my last year at Boarding School in Shanghai...\"\n\n<center>* * * </center>\n\nHua and I, we share a bedroom. At our Boarding School, the Shanghai American Girls Private School, we Seniors don't sleep in dormitories like the Junior girls. Senior girls have rooms. Two girls to a room. There's a dozen other Chinese boarding girls now but Hua's my good friend. We started school here, High School, at the same time, four years ago. She's from inland, from far away, from Chungking and she's beautiful in the way that so many girls from Chungking are. \n\nMy family was from Nanking and back then I was often called a typical Nanking beauty, delicate, gentle, well-educated, for my father was both educated and wealthy. My father and mother were early supporters of Sun Yat-Sen. Thus, I, the eldest daughter, born in the western year 1920, did not suffer the fate of so many Chinese girls in the 1920's and1930's. I was sent to a western-style missionary school near my family home in Nanking.\n\nI learnt English, I met the occasional westerner, missionaries usually but sometimes businessmen for my father was a businessman in Nanking, although I have no memories of what business he was in other than that he was well off. Not rich, but wealthy at least. Wealthy enough that in 1933, when I was 13, my beloved parents send me off to Shanghai, to the Shanghai American Girls Private School, intending for me to study there and to then attend University, gain a University Degree and contribute in a small way to the recovery of China.\n\nIn this, I was fortunate, for in China, daughters were of no account. Daughters of poor families were often sold, even wealthy families did not exempt their daughters from such transactions and not just daughters. Families would sell widows. Husbands would sell wives and often the sale would be into a life of prostitution. Even at thirteen, I was aware of this and I was fortunate that my parents were westernized, educated, and willing to invest in my education where so many girls of my age and class were married off to men old enough to be their fathers. \n\nI was privileged but I was not alone. There were other Chinese parents than mine who wanted more for their daughters than traditional Chinese society offered and life was changing. Our country was changing. Shanghai was the agent of that change in China. Shanghai was where Sun Yat-Sen had lived, in a house in the French Concession. Shanghai was where the modern world was introduced into China. Shanghai was where many Chinese students were exposed to a western European education.\n\nStudents such as myself.\n\nI left home for Shanghai when I was thirteen, confident, ambitious, studious; eager to make my parents proud of me. Perhaps I was even beautiful in the way that thirteen year old Chinese girls can be, tall and slender, my long black hair hanging to my waist, delicate features, graceful, perhaps I was charming. I would never return to Nanking. I would never gain that University Degree. I would never realize those ambitions. I would never see my parents or my family again, my life would take an entirely unforeseen path, but that is in the future.\n\nWhen I started at that school, the Shanghai American Girls Private School, I was one of only two Chinese girl-boarders. The white girls who boarded there did not want to share a dormitory with us, despite the egalitarian ways of the Americans. Egalitarianism only goes so far when it applies to oneself, despite the pious platitudes the families of the American and English girls uttered. Hua and I were allotted a bedroom of our own from the very first, with the Senior girls.\n\nFor that we were grateful, for the European girls smelt strongly of sweat and rotten milk and other nameless, and sometimes rank, odours and their cleanliness left much to be desired. The sight of their body hair, even on the girls our age, that was enough to turn our stomachs. So much hair. On their legs, their arms, some even had faint moustaches and Hua and I would giggle behind our hands and comment in Chinese on their hairiness.\n\nNow, after so many years, I am used to Europeans but at that time, thrown into that sudden intimacy with so many European girls, I was shocked. Shocked by their solid dumpy bodies, with so much fat and softness, so much hair, such large feet. Shocked by the size of the breasts on the older girls, large and soft and white, like the udders of a cow. Shocked by their disgustingly thick and bushy pubic hair. Shocked that their pubic hair was not silky black but of all colors. Shocked by their awful diet. \n\nShocked not just by the odours and the hair and their bodies but by their behaviour. Their loudness, their lack of politeness, their lack of any common decency when using the changing rooms for sports, their physicality, their complete lack of understanding of China and their often expressed contempt for Chinese people.\n\n\"Not you, Chuntao, not you or Hua,\" they would hasten to add. \"You're like us.\" Almost like us, that was ever the unspoken qualifier.\n\nHua and I would glance at each other, expressionless, and nod politely, not wanting to disagree openly, but we knew we weren't like them. We weren't like them at all. We were Chinese, we were civilized. We came from a culture that had been in continuous existence for thousands of years, a culture that long pre-dated their Rome, that pre-dated their Egyptians, a culture that existed at the same time as their ancient Sumer. Far-back in the mists of their history, in their distant past when the ancestors of these white girls lived in caves and wore skins or even nothing, China was civilized.\n\nOf course Hua and I gravitated to each other. \n\nWe were two Chinese girls, boarders in a foreign school, alone in the midst of primarily English and American girls. The token Chinese girls, tolerated but not entirely welcome. Not welcome at all to some. We became friends. Closer even that friends. Sisters. Almost, we were twin sisters. We were inseparable. Chuntao and Hua. We did everything together.\n\nWe almost died together in our third year at that School.\n\n<center>* * * </center>\n\nWalking out in the afternoons where we were permitted, we roamed the streets surrounding the School, cautiously at first and then, as our familiarity with our little corner of Shanghai grew, further afield. Always cautious, for the Japanese had occupied much of Shanghai and even for the foreigners, it was better not to run afoul of the Japanese. For us, Chinese girls, the Japanese were terrifying. It was best to stay within the confines of the International Settlement, as we found out, for our first display of independence was almost our last.\n\nTwo fifteen year old girls, in our school uniforms because as juniors, those were the rules, venturing out unwitting, innocent, not quite heedless of danger but far too innocent, far too unwary. We knew there was danger, but that danger was not to us. We were students in a foreign school, a protected species. We were not from rich families, the Triads would not kidnap us for ransom. We were students in a foreign school, identified by our uniforms. \n\nNo gang would kidnap us to sell into a brothel. It would cause too much trouble, the school would call in the foreign police. The foreign police would act, we would bring trouble and girls were cheap. And so, secure in that knowledge that we at least were safe, we took a rickshaw from outside the school, down through the clean cobblestoned streets of the French Concession, through the ancient arched gateway and, for the first time since we had arrived in Shanghai, into Nantao. The old City. \n\nThe China of a hundred years past.\n\nFew foreigners dared enter Nantao, but we were just two anonymous Chinese girls, no different from other Chinese girls, a little out of the ordinary in our western-style uniforms but not enough to draw more than a casual glance. After the clean shaded streets of the Settlement, the green trams, the cars, the European style departments stores and cafes, the wafting aroma of fresh coffee and even more freshly baked croissants, entering Nantao was like returning home.\n\nThe International Settlement was almost a foreign land but this, the old City, this was like back home in Nanking for me. Women cooking on the pavements over small charcoal stoves. Old men sitting on stools in the gutters being shaved, other old men sitting and writing letters home for illiterate coolies, open shop-houses selling anything and everything. \n\nFamilies living on the street, sleeping, eating, washing, cooking. Butchers beheading chickens, the ash from the cigarette's they smoked drifting down into the meat they were selling. Stalls selling fish, chickens, pork, fruit, vegetables of all sorts and the noise, the constant noise. For the first time in over two years, I knew I was in my own country. China. Hua and I, we smiled at each other and I knew she was experiencing that same thought. This was not the foreigners' country. This was our country. \n\nThis was our China. Not theirs.\n\nPassing through a large square, a young man in western clothes jumped up onto an empty market stall and I knew his face. I'd seen him somewhere and I remembered. Nanking. He was from Nanking and his father and my father would drink tea and talk politics together, quietly, in a corner of the teahouse they both frequented. He and I, we also had talked and he'd been adamant that China needed to modernize, to liberate itself from the foreigners and from the feudalism of the past.\n\n\"Zhang,\" I called out, loudly, waving my arms. \"Zhang, it's me, Chuntao.\"\n\nHe saw me, he waved back, and then he was talking. A speech. Something about expelling the foreigners, fighting the Japanese, supporting the Zhongguo Gongchan Dang, the Communist Party of China and Hua tugged at my arm as I tried to push forward.\n\n\"Chuntao, don't, he's crazy, remember what happened here in 1927, we should leave. We need to leave right now.\" She'd seen what I in my excitement had not. \n\nA wedge of Chinese policemen battering their way through the crowd. Zhang too saw them, he jumped off the table on which he stood and he was pushing his way through the crowd with a couple of friends but the crowd was thick, their escape too late, too slow. The police caught them easily, beat them mercilessly, tied their wrists with rope as I watched, horrified.\n\nSomeone in the crowd pointed at Hua and I.\n\n\"These two, they were with them,\" he called out.\n\nHua screamed once as hands pushed us forward. No-one wanted to be near us and then the police had us too. Our wrists tied painfully tight behind our backs, forced to kneel beside Zhang and his two friends. Hua wept quietly. Me, I was stunned, then terrified. Then, seeing another policeman walking towards us, tall, muscular, bare-chested with a shaven head and carrying a large sword, I trembled in sudden dread.\n\nHe pointed at Zhang. \n\nTwo of the policemen dragged him forward, Zhang looked at me as they bent him forward, his eyes met mine, he was afraid. His mouth opened, he was going to say something to me and then the sword swept down, his head leapt forward and fell to the cobblestones, rolling like a ball as blood spurted from his neck to pool beneath his now limp body and just like that, Zhang was no longer afraid. \n\nHe was dead. \n\nHis head was on the ground, staring at me, his eyes wide open, his mouth unmoving. The second student followed. The third, and this last boy wailed and struggled but it made no difference. His head rolled across the cobblestones before my eyes. The policeman with the sword looked at me and he smiled and I knew I was next, that in seconds I would be dead, my head rolling on the ground. Hua and I were both weeping in terror when an Englishman stepped out of the crowd, appearing as if from nowhere. \n\n\"These two girls are students at the Shanghai American Girls School,\" he said, in perfect Shanghainese. \"They had nothing to do with these criminals.\" He gestured at the heads.\n\n\"Who are you?\" the policeman holding the sword said, spitting, just missing the foreigner's feet.\n\n\"Inspector Fleming,\" the man said. \"Shanghai Municipal Police.\" He flipped out a brown leather wallet, displayed whatever was inside. \"I will return them to their School. They should not be here.\"\n\n\"Your badge means something in the Settlement,\" the policeman said. \"Not here.\"\n\n\"Du Yuesheng plays poker with me on Wednesday evenings,\" the foreigner said. \"Perhaps I should mention this inconsequential matter to him?\"\n\n\"You are correct, these girls should be returned to their school,\" the policeman said. \"They should not return to Nantao. They are your responsibility. Take good care lest anything unfortunate happens to them.\" He never looked back to Hua and I, on our knees, shaking with terror, quietly sobbing. He turned and stalked away. His men scooped up the heads of Zhang and his two friends and followed, leaving the bodies on the street surrounded by pools of blood coagulating in the summer heat, already black with flies.",
        "Hua knelt there, quietly sobbing. I looked at the headless bodies and the blood and I threw up. No-one even looked. The show was over.\n\n\"You two have had a narrow escape,\" the white man said, a knife appearing in his hand. \"You are fortunate I know Mrs. Innes.\" A particularly evil looking knife with which he sliced through the ropes that bound our wrists, lifting us to our feet when we couldn't stand by ourselves, waving over a rickshaw coolie, climbing in with us, sitting beside us as we sat there, trembling. \n\nThe rickshaw coolie jogged along, taking us out of the old City, into the French Concession, back towards our school. We passed under Zhang's head, contained within a birdcage, already hanging over the city gate and I almost threw up again.\n\n\"Do not go back to Nantao ever again,\" the foreigner said as the rickshaw halted outside our school. He climbed out, paid the rickshaw coolie, handed Hua and I down. \"If that policeman sees you there, he will execute you on the spot.\"\n\nNeither Hua nor I ever ventured into Nantao again. Zhang's head leaping from his body and rolling across the paving stones as his neck spurted blood featured in my nightmares for weeks. Shanghai had taught Hua and I our first harsh lesson in the realities of life in the City that never sleeps. Life was cheap. Death came quickly and unexpectedly. Nobody cared if you lived or died.\n\nThis was a lesson that Hua and I would learn all too well.\n\nThat was the way it was in Shanghai.\n\n<center>* * * </center>\n\n\"They look so stylish,\" I said to Hua, watching three girls in the latest Modeng style, \"modern girls,\" walking together. Dressed in the style of foreigners; short skirts, high heeled shoes, bobbed hair, and it was their hair that Hua and I examined.\n\n\"Is that the American flapper style?\" Hua asked me.\n\n\"I think so,\" I said. \"I like their hair.\"\n\n\"I'm not sure I want to look like a Modeng girl,\" Hua said. \"You know what people say about them.\"\n\nI did. We both did. Women of the New China, some said. Revolutionaries, against foot-binding and neither of us thought that was radical. My grandmothers both had the lotus feet and I knew how painful it was for them. My mother had escaped that and she had been adamant that her daughters would not suffer the pain of that horrible practice, despite some pressure from my paternal grandfather.\n\n\"I'd like to,\" I said, watching those girls. \n\nElegant, assured, confident. Everything I wanted to be. I'd read an old article in the Mingxing yuekan, \"The Star Monthly,\" recently, describing the Modeng Girl's favorite pastimes. \"Taking a boyfriend for a stroll at dusk under street lights that had just come on; visiting the park with a boyfriend on a moon-lit night when flowers are in full-bloom; drinking coffee in a caf\u00e9; going to the movies; and going dancing in the dance halls.\"\n\nHua and I, we looked like what we were. Students at a foreign school. Our uniforms identified us as such. To a certain extent perhaps they protected us, but I did not see that. I saw those Modeng girls, I saw the way men eyed them, I saw the way girls such as Hua and I looked at them. Enviously. With admiration, for these girls were the New China. The New Women. The future. \n\nModeng girls were not bound by the restrictions of the past, the chains of the patriarchal Confucian society in which we had been brought up. These girls were free. Free to enjoy amorous relationships with the opposite sex, free to stroll through the streets and the boulevards, freed to sit in cafes, watch movies, go to dance halls and dance with young men, all those things and more.\n\nModeng girls were progressive, intellectual, involved in radical politics and bettering women's position in society although of course I had also read the gossip columns accusing Modeng girls of being empty-headed promiscuous young women preoccupied with trendy clothes and having fun. I did not care for that, but there was that appeal of looking fashionable, and style and appearance was everything in Shanghai.\n\nSo many advertisements showed Modeng Girls, the Modeng lifestyle so it wasn't just me.\n\n\"I want to get my hair bobbed like that,\" I said, watching those three girls walking away from his.\n\n\"I'll do it if you're going to,\" Hua said.\n\n\"Let's do it now,\" I said. \"There's a hairstylists over there.\" We'd walked by it often, it was always busy and I'd seen Modeng girls in there, having their hair trimmed.\n\nI led the way, Hua followed.\n\n\"A trim?\" the young man smiled at us as we walked in. Young, handsome, he was dressed in the western style. I smiled back.\n\n\"We'd like to have our hair bobbed. Like that.\"\n\n\"This way,\" he said, leading us in.\n\n\"You two have lovely hair,\" the hairdresser said. Mine fell to my hips, long and black and silky. Hua's was longer even than mine, and neither of us had ever had our hair cut since we were born. Only trimmed a little. She lowered her voice. \"Are you sure? Most of the girls who have their hair bobbed, they are involved with the Chung-kuo Kung-ch'an-tang, the Communist Party or they are girls with no virtue.\"\n\n\"We are neither,\" Hua said. \"We want to look like her.\" The young woman with the bob having her hair trimmed.\n\n\"Her father is wealthy,\" the hairdresser said. \"For her, it is fashion, and nothing else. She has a new boyfriend every week. Her body guard is there, the Russian.\"\n\nWe'd noticed him, an older man in a suit. Grey-haired, the bulge of a handgun beneath his jacket, and of course we knew. This was Shanghai. This was a fact of life, unnoticeable. If you had money or your family were wealthy, there were bodyguards.\n\n\"Nothing will happen to her because of her hairstyle,\" the hairdresser said.\n\n\"Why should something happen because of her hair?\" Hus asked, as puzzled as I was.\n\n\"You girls do not know what happened in 1927 do you?\" she asked, her voice hushed.\n\n\"No.\" I shook my head. \"I was eight years old then. I lived in Nanking.\" \n\nHua nodded. \"I lived in Chungking.\"\n\n\"It was terrible,\" the hairdresser said. \"I was your age then, when the Communist Party launched the uprising in Shanghai and took control of the city. In the end, Chiang Kai-shek allied with Du Yuesheng...\" The leader of the Green Gang, and everyone knew who Du Yuesheng was. \"...and the gangs and they attacked the workers militias and executed thousands. It wasn't just the workers though. They rounded up every girl they saw with bobbed hair.\"\n\nShe shook her head. \"I was a hairdresser then, some of those girls, I cut their hair for them. They weren't revolutionaries. They weren't communists, like they said there were. They were just silly young girls who liked to follow the latest foreign fashion and they said they were communists and they cut their heads off or they shot them. The only reason was that they didn't like bobbed hair. They thought if a girl bobbed her hair she was a revolutionary because so many of the progressive girls, they bobbed their hair, they said long hair was the old way that kept women oppressed. They killed them because they bobbed their hair. A lot of them still think like that.\"\n\n\"I don't think I'll have my hair bobbed after all,\" Hua said.\n\n\"I don't think I will either,\" I said, and I didn't.\n\nThat was the way it was in Shanghai.\n\nDeath came for many reasons.\n\n<center>* * * </center>\n\n\"They cut girls heads off and killed them because they had their hair bobbed,\" Tien-chien interrupts me, incredulous.\n\n\"Yes,\" I said. \"They did. I asked, later. I asked people who were there in Shanghai when it happened and it was all true. One of the men I knew a little later, he was on a tram that day it all started. He said there was a girl seated in front of him, a student in her school uniform. She was reading a textbook, studying for an exam, she was making notes. They came onto the tram and dragged her off and she screamed, she begged them to stop. Told them that she was a student going to school and they ignored her. They told her she looked like a Modeng girl and she could join the rest of them.\"\n\nI remember the look in his eyes as he told me. He'd been horrified, even ten years later. \"He said they dragged her off the tram and made her kneel on the road next to all the other bodies and they shot her right there. He never knew who she was, she would have just disappeared. Her family would never have known what happened to her. She would have left in the morning to go to school, and simply never returned.\"\n\n\"That's horrible,\" Tien-chien said.\n\n\"It sounds awful now,\" I said. \"It was worse when you were there and you saw things like that happening.\" I think back to that boy I knew from Nanking and his two friends, beheaded before my eyes. His head rolling on the cobblestones as Hua and I knelt there. The sick horror of that dawning realization that our heads were next. That in seconds our heads would join his. We would be dead for no crime except that I had waved to him.\n\nAnd nobody had cared. Nobody had cared except that English policeman.\n\n\"I know how those girls must have felt,\" I said, slowly. \"Their only crime was wanting to look attractive, to dress in the Modeng style, to cut their hair in that bob, and it was very fashionable. For that, for wanting to look stylish, so many of them were dragged of the street and killed.\"\n\nThere are tears in my eyes now for those girls, those hundreds of unremembered girls who died over the weeks of that ruthless massacre where thousands were killed. Forgotten, those girls are all forgotten and who remembers them now, those Modeng girls who were killed for the way they cut their hair. Who knows what happened to those poor girls before they were executed. \n\nGirls like me.\n\n\"That is the way it was in Shanghai,\" I said at last. \"When you understand that, you will understand me better, Tien-chien. Life was so cheap back then. Nobody cared. Nobody at all, often not even their families and life went on, unchanged, as if none of it had ever happened. When you had nothing, you did what you had to do to survive, or you died, and if you died, nobody at all cared for you. Nobody.\"\n\n\"You had your friend, Hua, Grandmother,\" Tien-chien says and she is right, this great-granddaughter of mine. Hua cared for me, I know that. Just as I cared for Hua. \n\n\"Yes,\" I say, slowly. \"Hua and I, we had each other back then. That was all we had in the end. Each other, and we helped each other survive when without that friendship, I think each of us would have given up and died.\"\n\n<center>* * * </center>\n\nThere was enough there for us in the International Settlement and the French Concession, more than enough for us in those streets where the Europeans ruled. After the horror of Zhang's death had worn of, we ventured out again, cautiously, carefully. Shopping on Nanking Road, sometimes taking a rickshaw into the French Concession, drawn by the croissants and pastries and the coffee, so different to Chinese delicacies and I did like coffee. There, in our western-style school uniforms, we were safe. We blended in for while there were many foreigners, there were far more Chinese.\n\nChinese like us. \n\nThe Bund fascinated both Hua and I. The Bund, stretching along the bank of the Whangpoo, it was the most famous street in the International Settlement, it exists today, with many of the old buildings I remember preserved in time. A beautiful park, open to all, even to Chinese, stretched along the waterfront while on the opposite side of the road were the buildings I loved to look at, to sketch.\n\nBack then, when I was fifteen, my ambition was to become an architect, to design modern buildings that would reflect the greatness of a resurgent China. It would not be, I would never get beyond my second year of studying Engineering at the National Chiao Tung University, known even in those years of the 1930's as the \"Eastern MIT.\" \n\nFate played its part, my studies would take a far different direction, but still, I am proud to see now how Shanghai has blossomed, once more one of the leading cities in the world. I am proud to see how Chinese architects have created buildings to rival any in the world, making Shanghai now a city of architectural marvels. American as I now am, yet I am proud to see my China resurgent. \n\nNot quite matching the vision of Sun Yat-Sen, but I know my father would be content if he could see China now, united, strong, modernizing, taking once more its rightful place at the forefront of the world. Fate, destiny, bad luck, call it what you will. I played no part in that resurgence. With my family background, it is unlikely that I ever would have, even had I stayed. \n\nThe communists sent many whores to the labor camps when they seized power. With my family background and my means of surviving, if I had remained in Shanghai I would have been lucky if that was all that happened to me. I escaped that fate, I escaped Shanghai, but that was in my future back then, in late 1936, in my seventeenth year, in my fourth year at the American School for Girls. Back then, I was filled with ambition and hope.\n\nBack then, I happily spent Saturday afternoons sketching those buildings along the Bund. The Bund. How can I describe that single mile along the banks of the Whangpoo. A solid mile of buildings built by the foreigners, stretching from the Garden Bridge over Soochow Creek to the old Chinese City where Hua and I had nearly lost our heads. This was modern Shanghai.\n\nAlive with noise, foreigners and Chinese intermingled. Businessmen, visitors, peddlers, beggars, throngs of pedestrians, rickshaw coolies calling, competing for business. Vehicles of every sort. Carts, bicycles, rickshaws, wheelbarrows, motorcycles, cars, buses, trucks. The Whangpoo, stinking, noxious brown water, colored with oil from the boats that chugged everywhere, layers of detritus mixed with dead fish and who knew what else.\n\nI did not come to the Bund to admire the Whangpoo. Nobody did that. I turned my back to the river and its fetid stench. Instead I admired and I sketched those buildings along the length of that glorious mile. A mile that held half the wealth and power of the Orient, and Hua and I were there, in the center of things and this was the golden age of Shanghai, when the Bund was at its most vibrant. \n\nThe McBain building at number one, built in a mix of neoclassicism and eclecticism with baroque touches. Simple. Elegant. Magnificent, I loved that building. The Shanghai Club at number two with its 100 foot long bar of dark polished mahogany. The longest bar in the world and I would never see it, for Chinese were not permitted in the Shanghai Club and neither were women. Perhaps I would never see the interior, but I sketched that exterior again and again. The baroque style exterior of stone, the huge windows, the columns, the imposing double doors. \n\nThe Union Building at Number Three, occupied by the Chartered Bank of India, Australia and China; the exterior baroque again, the columns in the ionic style. The Nishin Navigation building at number five with its modern design combined with elements of the Japanese. The China Merchants Bank at Number Six, in the Victorian Gothic style, and how I studied those architectural styles. I knew every nuance, I could sketch every detail, smiling as I contemplated my own architectural designs of the future, following my graduation.\n\nLike every young girl, I had my dreams, my ambitions and in that long ago time, mine was that one of my designs would grace a renewed resurgent Shanghai. And so, I sketched, learning with every sketch that I drew, every treatise on architecture that I read. The Telegram Building at Number Seven in the French Renaissance style with those two baroque domes with the rococo touches. The Russell & Co. Building at Number Nine, only three stories in the neoclassical style.\n\nThe Hong Kong and Shanghai Bank Building at Number Twelve, the most outstanding piece of Western classical-styled architecture in all of China. The Customs House at number thirteen with its huge clock tower. The beautifully art-deco China Bank of Communications building at Number Fourteen. The Russo-Asiatic Bank Building at Number Fifteen in the Italian Renaissance style. The Taiwan Bank Building at Number Sixteen. The North China Daily News building at Number Seventeen with its modern neo-classic look, all mixed in with baroque towers, sculptures and classic pillars. \n\nThe Chartered Bank at Number Eighteen, the Palace Hotel at Number Eighteen, at the corner of Nanking Road and the Bund and as I sketched it, I stood wishing I could see the inside of that beautiful building, little knowing that in two short years I would become all too intimately familiar with the interior of its rooms as the \"guest\" of foreign men. Sassoon House at Number Nineteen, built for the wealthy Jew, Victor Sassoon, his home a pyramidical green glass penthouse at the top.\n\nThe Bank of China Building at Number Twenty Three. The Yokohama Specie Bank at Number Twenty Four, the Yangtze Insurance Building at Twenty Six, the Jardine Matheson building at Twenty Seven. The Glen Line Steamship Building at Twenty Eight. The Banque de l'Indochine Building at Twenty Nine, and at the far end, the British Consulate Building set in its manicured green lawns. \n\nI sketched them all, again and again. Hua, always the entrepreneur, happily sold my sketches to tourists, the proceeds going towards our shopping expeditions. I enjoyed myself, becoming ever more skilful, even attempting sketches of Hua. \n\nHer beauty proved even more popular, both then and, as it turned out, later.\n\nI even sketched Garden Bridge but neither of us ever crossed that bridge. It was the bridge between the western-controlled part of the International Settlement and Hongkou. The Japanese section. Japanese warships were anchored in the river. Japanese soldiers patrolled the streets. Not just soldiers. The Kempetai, the dreaded Japanese Military Police, a name to be whispered in fear, for they dragged Chinese off the streets, seemingly at random, never to be seen again.\n\nWe were there one Sunday when that happened. I was sketching the bridge when the Japanese dragged a Chinese man away, out of the crowd of Chinese passing through the Japanese checkpoint. He was screaming with fear, screaming like a girl, his voice a wail of terror before they beat him into silence and dragged him away.\n\n\"I never want to come here again,\" Hua said, crying, as we hurried away.\n\n\"Let's go shopping on Nanking Road,\" I said. And we did.\n\nIt was one of those shopping trips, it was in 1937 I am sure, because it was just before the fighting with the Japanese began again, that took our thoughts down a new path. \n\nWe ventured often into the French Concession now, exploring the streets, the Chinese shops tucked away down crowded side-streets and alleys. It was one such shop, a small shop selling old Chinese books, that drew us one Sunday afternoon. It must have been in early 1937, it was well before the fighting started, for I remember it was Spring and peaceful, the trees blossoming. Both Hua and I enjoyed reading, Chinese books as well as English, and these were used books, old books, cheap. We leafed through them, eyes open for anything interesting. Anything unusual. Anything like...\n\n\"Look at this one, Chuntao,\" Hua said, glancing around, holding a book open for me to look at.\n\n\"What is it abo... aiyaaah!\" My eyes flew wide open. \"What is this, Hua?\"\n\nShe giggled, closing the cover, pointing at the title. \"The Plain Girl's Secret Way.\"\n\nI took the book from her, opening it again. \"Aiyaaah, it has illustrations.\" My eyes widened. \"Of...\" Of course I blushed.\n\nHua giggled. \"Yes.\" Now she blushed. \"I'm going to buy it.\"\n\nI looked. \"I think there are more.\"\n\nAt that time, in the spring months of 1937, shortly before the fighting in what would later be called the Battle of Shanghai against the Japanese began, we had not yet started our last year of High School studies. Both of us had also just turned eighteen and at times now our thoughts turned to more than our studies. We were young women after all, and Hua was more beautiful than I, and I was not unattractive. ",
        "When we were out, even in our school uniforms, men had eyed us in the way that men do and we were aware of the desire in those looks, those glances. In the summer of that year, 1937, we were allowed out in our own clothes and now we attracted even more looks. We both favoured the qipao, the dress that had become so popular with modern Chinese women in the 1920's and 1930's. At that time, in the late spring of 1937, I had just received the last letter from my mother that I would ever receive together with my allowance. \n\nI was able to indulge myself in a little clothes buying. Not extravagantly, but my father was not a poor man and he was generous. Our qipao's were in the latest style, form-fitting, figure-hugging and my most daring one had side-slits reaching the thigh. Hemlines had crept up too, one of Hua's ended only a little below her knees and wearing it, she looked exquisite. The white girls, the English and American girls with whom we boarded, they looked down on our qipao's, wearing western-style dresses as they all did.\n\nHua and I simply smiled, for no amount of rudeness could disguise the simple truth. Our long slender legs and in Hua's case, her full firm breasts, were displayed to perfection in those figure hugging qipao's, A figure-hugging perfection that none of our classmates could match, and when we were out together, it was Hua and I who the men's eyes would follow, much to the chagrin of the white girls. \n\nNow, at eighteen, Hua was more beautiful than I by far and I envied her that figure and the way she looked in her high-hemmed qipao. I had even sketched her in it, but by then there were fewer tourists visiting Shanghai, and our visits to the Bund had tailed away. There was no market for more sketches of Hua, but I enjoyed drawing her all the same.\n\nLooking at those rather graphic illustrations in this book we had found, I was intrigued. Reading the text, I was a little confused, but I was more than sure that further study would help me understand. We found more. \"The Plain Girl's Secret Way.\" \"Secret Decisions in the Jade Chamber.\" \"The Art of the Bedchamber.\" \"Book of the Mystery-Penetrating Master.\" \"Prescriptions of the Immaculate Girl.\" \"Dream of the Red Chamber.\" \"Variegated Battle-arrays of the Flowery Camp,\" a book that was full of further illustrations, some of which stunned me into silence, at least for a second.\n\n\"Look,\" I said to Hua, showing her one. \"Do men really desire to do things like this?\"\n\nHua's eyes widened, her cheeks flushed pink. She glanced at me, closed the book, placed it with the half dozen we had already selected in unspoken agreement. We paid, we carried the books home, we placed them in our small bookcase, secure in the knowledge that none of the European teachers or our School Headmistress, Mrs. Innes, who inspected our rooms, could read Chinese. Some of the Chinese servants might, but none of them would betray us to the foreigner, just as none of us Chinese boarders would give away their secrets.\n\nOver the next days and weeks, we devoured those books, the texts and the illustrations of which opened our eyes to another world. A world of the sexes. The world of men, women and the act of love. We were Chinese, we didn't have the reticence of the English and American girls when it came to sex. Of course, we knew, coming from the families that we did, that we were expected to be virgins when we entered the marriage bed, but a wife was expected to please her husband, and, too, we were women of modern China.\n\nThat was what we told ourselves, and as an excuse, it was flimsy, but it sufficed. We studied those books as hard as we studied our textbooks. With the fighting against the Japanese going on starting in July, we were not allowed out of the School under any circumstances. There were guards on the gates, White Russian guards that the School had hired. Restricted to school, we concentrated on our studies, fascinated by this new subject. It took some time to understand the euphemisms that the writers employed. Jade gate. Jade stalk. Cinnabar Crevice. Such terms were easy to understand, but what was \"jing.\" Essence?\n\n\"I think it is this?\" Hua said, and she had one of our school biology textbooks open, pointing to the definition of semen.\n\n\"Oh,\" I said, reading and re-reading, the Chinese text, the biology textbook. \"I think you're right.\" And one more clue was solved.\n\n\"Listen to this,\" Hua said to me, her cheeks pink. \"The women's left hand should hold the man's jade stalk. The man will use his tight and to caress the women's jade gate. This the man will feel the yin energy and his jade stalk will be stirred. It thrusts high toward heaven. The woman feels the yang energy and her cinnabar crevice will become moist with the liquid flowing downward, like a river coursing from a deep valley. It is now that coupling can take place.\"\n\n\"Aiiyahhh,\" I said, squirming a little. \"My cinnabar crevice likes this.\" I giggled.\n\nHua smiled, her cheeks pink. \"I would like to see a man's jade stalk,\" she said.\n\n\"So would I,\" I echoed, turning the page. \"I wonder if they really look like this?\"\n\nIt would not be too much longer before both Hua and I were granted our wishes. Far sooner than either of us expected, in fact, although Hua's wish was granted rather more abruptly than mine.\n\n\"Aiiyaaah,\" I murmured, the following Saturday. \"I'm buying this.\"\n\n\"What is it?\" Hua asked.\n\n\"The Chin P'ing Mei,\" I whispered, my heart quickening. The \"Metal Vase Plum-Blossom\". Written and first printed four hundred years ago, even I had heard of this famous classic, banned until the fall of the Manchu's. \n\n\"Buy it,\" Hua said, her cheeks pink, and we did and as soon as it was ours, we returned to the School and our room, reading it together on Hua's bed.\n\n\"Listen to this, Hua,\" I said, reading, for I was a faster reader of Chinese characters than she and I couldn't wait for her.\n\n\"She parted her trembling thighs and raised them reverently as if she was making an offering to a god. She offered up her furry saddle to Hsi-Men's passionate eyes, a saddled reserved for the strongest men. Only he could stirrup himself to it and ride this passionate world at a furious gallop. Her nipples stiffened at the thought. Oh, he could bite them off with his strong white teeth if he wished and leave her bleeding. Already that tiny cherry of enchantment, set beneath the fur and hidden between those firm folds, was sending out is sparkling thrills to all parts of her lovely body...\"\n\n\"What does furry saddle mean?\" Hua asked, frowning.\n\nI giggled. \"Aiiyaahh, think about it, Hua.\"\n\n\"No!\" she squealed a second later. \"That's so... I am not furry. The American and English girls are, but not me!\"\n\n\"It's a manner of speech,\" I said, laughing. \"I'm not furry either.\"\n\n\"That's because you shave there,\" she said primly.\n\n\"You should too,\" I said. \"Mother taught me just before I came here.\"\n\n\"Alright, alright,\" she said. \"Keep reading.\"\n\n\"Her satin skin was on fire. She writhed. A gasp burst through her juicy mouth, a low gasp but so filled with longing that it made the goblet, on a stool nearby, ring as if some jade-throated sing-song girl had torn the air with the purest note.\n\n\"Come, come!\" she cried as she stared half in terror at his fearful spear of flesh, and he, wide-eyed, with the visage of a warrior who is about to plunge his spear down the gullet of a green dragon, leaped forward, grabbing the ivory waist with his two strong hands. Thus is the flesh of beauty bruised as magnolia petals by the lusty fingers of summer.\n\nAs he leaped, she raised her knees for protection and, pressed against his brawny chest, they barred his way but not for long. While Hsi-Men squeezed himself between her knees, his sturdy fingers sought under her creamy buttocks for heaven's brown starfish; that second place of pleasure with which deft fingernails are able to spice the feast.\n\nAs his fingertips reached the tight little rim, she made way, and guided by nothing but his sure passion, the plump and palpitating head of his quivering charger pressed its course between her welling moistening folds and came to rest against the cherry of enchantment. But only for a moment, and what a moment! Gold Lotus felt as if her heart was there, her woman's heart, bare and fluttering like caged butterflies.\n\nHer entrance clung to his minaret...\"\n\n\"His what?\" Hua asked.\n\n\"Hua!\" I said. \"They're using all sorts of fancy words to describe his jade stalk. His cock.\"\n\n\"Oh!\" Hua said, her cheeks pink. \"I thought that was it.\"\n\n\"Don't interrupt,\" I said, my own cheeks hot and I wriggled against the bed because something else was moist and hot and I wondered if that was how Gold Lotus had felt.\n\n \"Her entrance clung to his minaret, like the suckers on an octopus tentacle, drawing it inward past that cherry of enchantment...that's her clitoris, Hua... sucking at it, pleading with it to plumb her narrow whirlpool, massaging it for the journey to her bottomless depths as the wife of a pearl diver oils the body of her husband before he dives into the sea to seek a treasure. Another cry left her lips, a sharp animal cry, of pain or pleasure one cannot tell. There is no word in China for such a sensation.\n\nHer lily hands which were clinging to his back flew out on either side of her with fingers fluttering for he had thrust himself savagely into her scabbard. And on withdrawal he seemed the tear the sides of it and bring them up with him, as if it was a barbed sword. But a magic sword, on re-insertion it carries her pleasure-flesh back with it unharmed.\n\nHe plunged and reared while one finger dug deep into her starfish. He rubbed his finger along the inner walls of her cavern. Only a thin sheath of flesh separated his finger from his turbulent charger. He could feel it throbbing. Her thighs began to rock and roll on her mounting passion as a small boat is tossed by gigantic waves.\n\nFor the first time he sought the lips of her mouth and forced her tongue between her pearly teeth. Her mouth had been drawn against her hissing teeth, but now his tongue had parted them, her lips formed over his and sucked him into her fragrant throat. With ever-increasing fury his thighs beat against hers. It seemed as if a bird with giant wings was beating them against her hips, while its predatory beak shook and tore at her innards.\n\nNow she tore his back with her mails, now she drummed against it with her little fists, and now she kicked her lily feet. The pleasure was unbearable. Short cries escaped from her mouth. She turned her head this way and that. No longer could she feel his finger digging into her starfish. She had got beyond the need for spice. Does a tigress need to spice its prey before devouring it?\n\nHer passion rose higher and higher until at last his final violent ram presaged the molten lava erupting into her, scalding her in ways she never dreamed... and his charger in convulsions... and her whirlpool sucking at it... and aaaaah, a sensation which defies all description. Hsi-Men lay exhausted in her arms. He was her prisoner but a prisoner that does not have to be held fast by strong arms.\n\nThis they lay together until the phoenix grew its wings, again ready for flight. Twice again was Hsi-Men able to take his lover...\"\n\n\"Ohhhh,\" Hua moaned, and the bed moved. I glanced at her, lying face down on her bed and both hands were beneath her, her hips moving a little as she sobbed for breath. \"Ohhhh... I would like that, Chuntao... I would like a man to do that to me... Ohhhhh I would... I would.\" She turned her face to look at me and she was sobbing for breath.\n\n\"I wonder what it would be like, Chuntao, to have a man inside and his finger in my starfish.\" Her breath sobs out, she half closes her eyes and her hips move, lifting, sinking and I know her hand is moving and I am so hot and wet and my jade gate wants to be touched. It demands to be touched and I slip one hand under me, pulling my skirt up, all the way up until I can touch myself through my panties.\n\n\"Ohhhhhhh,\" I shiver as my fingers press and my cherry of enchantment, my clitoris, it is so sensitive. It's so good and I do it again and again and I've never done this before, never touched myself like this and it's good, it's so good and I watch Hua's face and she watches mine as we touch ourselves.\n\n\"I would like a husband, Chuntao,\" she moans. \"I would like a husband to plunge himself into me and take me as Gold Lotus was taken.\"\n\n\"Ohhhh... ohhh... ohhhhh,\" I moan, losing control of my body because that's what I am also imagining and a golden wave overwhelms me, washes through me and my mind is a kaleidoscope of thoughts and images as I shudder on the bed before collapsing limply and beside me Hua shudders and moans and her mouth opens wide but no sounds emerge as she too finishes and afterwards we fall asleep and I dream of a man.\n\nA foreigner. A white man. Plunging himself into me again and again.\n\n<center>* * * </center>\n\nI met Martin within a couple of weeks of the fighting against the Japanese ending. He was the first Englishman I'd ever really talked to. I'd met westerners, but apart from Mrs. Innes and our teachers, who were all older women, I'd never talked to a European man.\n\nMartin? How did I meet him? \n\nYes, I'll tell you. It was quite simple, really. It was just one of those chance things that happen. At School, Hua and I were friends, as much as a Chinese girl back then could be friends with an American girl, with Marjory. To Marjory, I suspect Hua and I were almost pets in a way. She never condescended to us, but there was always that feeling there that she felt good from befriending us, that she was doing a good deed. \n\nI suspect it was that same attitude that you see in so many Americans towards minorities in these present times. Befriending us made her feel virtuous. We had no real inkling of that at the time, and when her parents invited us, the only two Chinese girls in the senior Class, together with all the other white girls in our Class to their garden party, a last autumn garden party before the bitter cold of the Shanghai winter set in, we were both suitably gratified.\n\nGratified enough that Marjory felt suitably rewarded for her virtuousness in insisting her parents invite Hua and I together with all the English and American girls. Mrs. Innes warned us to be on our best behaviour, to remember our manners, to behave in the western way. Only us. She reminded us that Hua and I were there as an example to the Americans and the English that China was modernizing, that Chinese could be westernized, that this next generation of young Chinese could assimilate successfully and be treated as, perhaps not equals, but certainly close to equals. Suitably humiliated, we prepared ourselves. We did have western-style dresses. We would wear those. We would display our assimilation to all.\n\n\"It's going to be fine, Chuntao,\" Marjory had whispered to us on Friday in class. She was American after all. \"Mommy and Daddy are only inviting people they know who won't get all sniffy about Chinese. You don't need to worry. Some of the other girls will be there was well so you'll know lots of people. Oh, and you should both wear those qipao's. You look so lovely in them.\" \n\n\"Would that be alright?\" I'd whispered back. \"We have dresses to, we were going to wear those.\"\n\n\"Oh no,\" she said. \"I asked Mommy. She said it would be lovely if you wear your qipao's. She said it would be so delightfully exotic for the other guests. We don't invite many Chinese home, you know. It's just not done, but you two are so...\" Even Marjory hesitated, looking for the right words.\n\n\"You fit in so well,\" she said. \"Nobody would even know you're both Chinese if they didn't see you. You don't even have that funny accent that most Chinese have.\"\n\nI actually felt rather proud of myself and so did Hua. We'd worried though. \n\n<center>* * * </center>\n\nWe needn't have. Everyone had been so polite. Friendly even. Very friendly.\n\n\"Oh, you both look so charming in those dresses,\" Marjory's mother had said as soon as we arrived in the car that Marjory's father had sent to the school to pick us up. \"Don't you think so, Chuck?\"\n\n\"Oh for sure, yeah, they do, Betty,\" Chuck said, eying Hua's chest. Chuck was Marjory's dad. \"Delightful, both of you.\" He'd tucked Hua's hand under his arm and led both of us off and he definitely wasn't concerned with whether I followed or not. \"It's our garden party,\" he'd said, \"let me introduce you around before I give you back to Marjory.\"\n\nAnd he had, to a group of his male friends, first.\n\n\"His jade stalk is definitely feeling yin energy,\" I whispered to Hua, in Chinese of course. \"I think he likes your breasts. A lot. He keeps looking at them.\"\n\nShe'd glanced down demurely and giggled. \"His jade stalk is not the only one.\" It wasn't, and we'd both giggled as we'd been moved on, Chuck more than happy to monopolize us until Marjory came to our rescue. \n\n\"Daddy,\" she'd said. \"I need Chuntao and Hua, there's some of our friends to introduce them to.\"\n\nChuck had released us, reluctantly. \"A dance, later, my dear?\" he'd said. To Hua, not me.\n\n\"There's dancing?\" Hua had asked, surprised. \n\n\"This evening,\" Chuck said. \"After dinner.\"\n\n\"We weren't invited for dinner,\" I said to Hua. \"Marjory only invited us for this afternoon.\"\n\n\"Say something to him quickly,\" Hua said. \"This is embarrassing.\" Beside us, Marjory's face had flamed pink. I almost felt sorry for her. Almost.\n\n\"I'm sorry, Mr. Cunningham, Sir,\" I said, so politely. \"We're boarders at the School, we're not allowed out for evenings, we had told Marjory we have to be back at School late this afternoon.\"\n\n\"Nonsensical,\" Chuck said. \"You should've explained to Mrs. Innes, Marjory. I'll have Dexter drive you both back to the school this evening. You'll be perfectly safe.\" He looked around, called out. \"Betty. Hey, Betty, there's been some sort of a mistake, the girls didn't realize they were invited for dinner and the dance afterwards as well.\"\n\n\"They wer...\" Marjory's Mom cut herself off. \"I'm dreadfully sorry, girls,\" she said, after a slight pause where she and Marjory looked at each other uncomfortably while Hua and I feigned complete obliviousness. Something we were used to doing. We'd been doing it for four years.\n\n\"Oh dear. There must have been a mistake with the invitations. After the garden party, we're moving inside for dinner and a dance party. Of course you two are invited.\" The glance she shot at her husband was barbed, her smile a little forced as she turned back to us. Beside her, Marjory had flushed an even brighter pink.\n\n\"That's alright, Mrs. Cunningham,\" I'd said. \"Of course we understand and we'd love to stay but we should go back to School, really. Mrs Innes will be concerned if we're late, we said we'd be returning late this afternoon and we don't wish to cause her any concern.\"\n\n\"I'm so sorry, girls,\" she said, looking relieved. \"Of course, our driver will take you back to the School.\"\n\n\"Nonsense, Betty,\" Chuck boomed, loudly enough that half the guests could hear. \"It's no trouble at all to squeeze a couple of beautiful girls like these in for dinner, I'm sure.\" He beamed down at us and almost I was drunk on the fumes he breathed. \"I'll call Mrs. Innes right now and let her know they're staying and we'll have Dexter drop them back this evening.\"\n\n\"Of course, dear,\" Mrs. Cunningham looked daggers at her husband, turned to smile artificially at us. \"You're most welcome to stay, girls. Please excuse me while I talk to the boy.\" She eyed us suspiciously. \"You're both familiar with knives and forks? We're serving American food, you might not like it?\" \n\nHer expression was so hopeful I almost giggled. It was a struggle to keep a straight face.",
        "\"Mommy,\" Marjory said, her face even pinker. \"We eat American food at school all the time. And of course they know how to use knives and forks.\" Now she was looking daggers at her Mom as she led her away and we both heard her hissed whisper. \"Mommy, I told you that you should have let me ask them. Don't be so rude to them.\"\n\n\"She didn't make a mistake,\" Hua whispered. \"She didn't want us here for dinner and the dancing this evening.\"\n\n\"Of course not,\" I said. \"All she wanted was to show us off at the Garden Party, show everyone else how tolerant they are, inviting Chinese girls to show that their daughter is friends with us to make themselves look virtuous and tolerant and Christian.\"\n\n\"I'm so sorry about that,\" Marjory said, returning, her cheeks still pink. \"You're going to enjoy the dancing. There's some other people coming this evening.\" She smiled, not meeting our eyes. \"Some younger people.\" Her eyes sparkled now as Emily joined us. \"Emily's brother's coming with some friends.\"\n\n\"It's so good that he's back here,\" Emily confided. \"He graduated from Cambridge, you know. He's a griffin with Jardine Matheson now. Daddy talked to Sir William you know and he had him taken on.\" She smiled at Marjory. \"Maybe he could take us to the movies.\"\n\n\"Sure, I'd like that.\" Marjory nodded. Marjory was like that. She liked men. She talked about men a lot. She went out openly with men in the weekends, and with her parents' permission. It seemed rather scandalous to Hua and I. She'd gone out with American men and Englishmen and she'd even gone out with a Frenchman once. What man could possibly want to marry her after that? And the Frenchman was here too. Her parents had invited him. She pointed him out to us.\n\n\"He tried to touch me,\" she breathed. \"Under my skirt.\" She'd smiled at us, confident in her superiority. \"I didn't let him of course but it was so exciting.\"\n\nHua giggled. \"Everyone knows white men prefer fragrant Chinese jade gates to stinky white girl's jade gates,\" she'd whispered to me, in Mandarin of course, while Marjory chattered on.\n\n\"Her father certainly does,\" I'd whispered back and we'd both giggled.\n\n\"What was that?\" Marjory asked, not really interested.\n\n\"Those Frenchmen, they have such a reputation,\" I said. I'd seen Marjory's jade gate in the showers after gym. It was not something I would have wanted to touch. So fat and hairy. If her mother's was like that, no wonder her father's jade stalk felt so much yin energy when he looked at Hua.\n\n\"Oh, yes.\" Marjory was so oblivious.\n\n<center>* * * </center>\n\nNeither Hua nor I had ever been to a western-style dinner outside of school before and we were nervous. Where did one sit? What dishes were served? How should one behave?\n\n\"Martin!\" Emily squealed. We all looked around. I saw what everyone else saw, a group of young white men walking out into the garden, a tall slim blonde haired young man in light trousers, a white linen shirt and a light summer jacket in the lead. He was smiling, a casually elegant wave of his hand to Emily, a hug for her as she flung herself on him in that casual way European girls had, a handshake for Marjory's father, a kiss to the cheek of Marjory's mother, a smile for Marjory.\n\nHe looked around, his eyes met mine and he froze, mid-sentence. His eyes looked into mine and it was as if I had suffered an electric shock that jolted my entire body, leaving my heart pounding, my body weak but my eyesight, my senses, it was if a shadow had been lifted from my eyes and everything was clearer, brighter, sharper. \n\nI shall always remember that first glimpse of him. Tall to me, but much the same height as the other Englishmen in that crowded room, Slim, dressed in a cream-colored tropical suit, an open-necked white shirt, casual, elegant, his hair so blonde, his eyes a bright sparkling blue. Alien colors, a westerner's hair and eyes and features, his pale white skin, the shape of his face, his mannerisms as he resumed talking, but his eyes returned to me again and again as I stood there, not hearing a word Hua was saying, confused, my mind whirling, my body full of heat.\n\nThe room took on new depth, an intensity of sensations that flooded me. The texture of the polished wooden floor on which I stood, the patterns of the Chinese rug on which he stood, the scent of floor polish and Europeans, the paintings on the wall, the furniture around the walls. It was as if I'd always been asleep and now, suddenly, I was wide awake and I had been transported into a new world as we looked at each other. This blue-eyed Englishman and me.\n\nEmily was at his side, talking excitedly to him, he was talking back and always, always his eyes glanced at me, met mine and it was as if some force beyond myself was drawing me to him. That force tugged at me, but I was unable to move, unable to stir, not even to turn my head and look away and then a gaily smiling Emily was leading him towards us. Towards me and his eyes held mine.\n\nHe smiled.\n\nI returned his smile.\n\n\"Hua, Chuntao. This is my brother, Martin,\" Emily said, and his hand took mine in the European way, a strong gentle clasp.\n\n\"What does your name mean?\" he asked, his hand not releasing mine. \"It sounds beautiful.\"\n\n\"Chuntao?\" I said. \"It means Spring Peach, you know, when the peach trees blossom.\"\n\n\"Spring peaches are beautiful,\" he'd smiled. \"Like you.\"\n\nI didn't say anything but my cheeks flushed pink and my heart beat a little faster. A lot faster and then my hand was released, he was introducing himself to Hua. He and I and Hua and Emily were talking. He'd grown up here in Shanghai but he'd been back in England for years. Boarding School and then University and he looked the part. Very English. Tall, slim, dressed immaculately in that casual European style and so polite.\n\nWe'd talked about school and he'd told us about his boarding school in England. Harrow, and he'd talked about University in England and his job at Jardines when we asked and I'd told him a little about myself, that my family was from Nanking, that my hope was to become an Architect or an Engineer, that I had no idea how one should behave at a European-style dinner party.\n\n\"You'll sit with me,\" he smiled. \"I shall explain everything,\" and he vanished. I found out afterwards he'd cornered Marjory's parents' head boy and slipped him some cumshaw to change the seating arrangements. \n\nAt the time and after he'd reappeared, I was just happy to have someone to explain everything to me with no fear of embarrassment. Thanks to his coaching, both Hua and I survived that dinner with no embarrassment and no gauche faux-pas's, much to Marjory's mother's relief.\n\nTo our own relief as well.\n\n<center>* * * </center>\n\n\"We'll dance a little later,\" Marjory's mother said as dinner came to an end. The food had been strange, but not unenjoyable. Certainly better than the school fare. \"Marjory and Emily are going to put on a little musical performance for us.\"\n\nEmily did play the piano well, and Marjory sang. After all this time I don't remember the songs at all but they were popular hits back then and she sang them well.\n\n\"Say, do you girls play any Chinese music?\" Marjory's father, Mr. Cunningham, Chuck, asked, and I don't think he was trying to embarrass us, he was just a little drunk and he was curious. \"Got a couple here, there on the wall. Never heard what they sound like.\" \n\nThere were more than a couple. A Pipa, a Guqin, and an Erhu, a Sanxian, a Dahu and the centrepiece, a Yunluo. I'd never seen any of them on a wall before.\n\n\"Chink music always sounds like cats fighting to me,\" one of Chuck's friends said, rather loudly.\n\n\"Uncle Mike,\" Marjory nudged him with her elbow.\n\n\"What?\" he said, then, \"oh.\" He didn't look embarrassed at all though.\n\nMy expression didn't change. \"I play the guqin, Mr. Cunningham,\" I said. \"This one here.\" The Guqin, on the wall. \"Would you like me to play something for you?\"\n\n\"Sure, let's hear it,\" one of the other men said. \"Always thought it'd be interesting to hear one of them things played.\"\n\n\"Here, I'll get it down for you,\" Mr. Cunningham said, standing, taking it from the wall, passing it to me and when I held it in my hands it was truly beautiful. A work of art, an antique, the thirteen hui, the mother-of-pearl dots as lustrous as small moons in the darkness of the midnight sky, the seven silk strings stretched on the soundboard, eager to once more sing their notes.\n\n\"Came from the Summer Palace,\" Mr Cunningham said to the room, as if he'd picked it up in the street. \"My grandfather picked it up back in 1860, he was with the British when you chaps stormed the place.\"\n\nMy eyes welled with tears, tears of shame that this part of China's precious heritage had fallen into the hands of these barbarians, tears of shame that this precious relic of the past sat unknown and uncared for on the wall of an unknowing foreigner, but my fingers plucked at those strings, tightening, tuning, and even after seventy five years they were in perfect condition.\n\n\"What the heck is it?\" another of the men asked.\n\n\"The guqin,\" I said, plucking at the strings, hearing their music whisper into the air of that room. \"It is China's oldest stringed instrument, it has been played as you see it for more than three thousand years, its history stretches back into the mists of the past and its music is China. It is inseparable from China and in our past, it was one of the four arts that scholars were expected to master. Legend tells us that the qin was invented by Huang Di, the Yellow Emperor, one of the three great founding emperors of China's distant past. This qin that I hold here, that once dwelled in the Summer Palace of the Emperor of China, this qin was made by the Younger Prince of Lu for himself, he who ruled the Southern Ming Dynasty four hundred year ago. It was captured and taken with him to Peking, where he was executed. That history is written here, on this qin.\" \n\nThose beautiful notes faded as I caressed the embossed characters that told the story of this beautiful instrument, this treasure of China now in the hands of this American who had no idea of what he had on his walls. I smiled at no-one. \n\n\"I will play you High Mountains and Flowing Waters,\" I said. \"This piece was created by the great musician Yu Boya, in the Spring and Autumn Period of China, two thousand five hundred years ago. It is one of the great classics of Chinese music.\"\n\nI closed my eyes, meditating as my fingers plucked at this piece of our history, letting my mind flow, recreating that music, willing the high mountains from my fingers, willing the flowing waters to emerge, note by note as my fingers moved without thought, for I knew this piece as if it was my own heart, playing until that last note died away.\n\n\"That's rather nice,\" Mr. Cunningham said, but the tone of his voice said otherwise.\n\n\"Could you play another one,\" someone asked, a gentleman whose name I didn't then remember and I could tell he at least appreciated the beauty of the guqin.\n\nMy fingers plucked remembered notes. \"This is the Song of Chu,\" I said, the notes accompanying my voice. \"It is about the defeat of the Chu general Xiang Yu by the founder of the Han dynasty during the period when the Qin dynasty was falling apart two thousand two hundred years ago. The Chu army is surrounded by the Han army and, his men surrounded, General Xiang Yu says goodbye to his wife Yu Ji, who commits suicide so that her husband will not fear for her fate in the coming battle. He and a few of his troops break free to no avail and at the end Xiang Yu rides off to commit suicide as well. There is a song that goes with this music.\"\n\nI smiled at Hua, for I knew she knows the words for this song. \"Sing for me as I play, sister,\" I said.\n\nHua smiled and moved to stand beside me, her voice rising to accompany the music as I drew the notes from this beautiful instrument, plucking, touching, pressing the strings and lifting, my fingers sliding up and down the strings in those complex combinations of finger movements that the guqin demands\n\n\"My strength can lift mountains, \n\nMy spirit can encompass society; \n\nBut the times are not appropriate,\n\n(my horse) Zhui is no longer quick; \n\nWhen Zhui is no longer quick, what can I do? \n\nAlas, Yu Ji; alas, Yu Ji; \n\nWhat will become of you? \n\nRecalling his departure from Jiangdong \n\nHis spirit wants to consume the Qin rulers \n\nAt night he hears an iron di flute \n\nHis 8,000 soldiers are scattered \n\nHis brave spirit is dissipated \n\nHe cries at having to leave Yu Ji \n\nHe loses his way at Yin Ling \n\nHe will not cross at Wujiang.\"\n\nHua sings the words in Chinese, in Mandarin and I translate them softly in English as she sings, telling the tragic tale of the great General and his beloved and heroic wife until that last note dies away and Mr. Cunningham has been watching her as she stands beside me, singing,his face rapt. Martin, Martin has been watching me and, conscious of his eyes, I smile.\n\n\"Sounds like a typical Chink general,\" Uncle Mike says. \"Crying, abandoning his men, losing the way and then killing himself. Typical farce.\"\n\n\"It is an honor to hear you play, Miss Chuntao,\" that other man said, and I remembered his name now, Mr. Standiford. The look he gave \"Uncle Mike\" was one that even Hua and I could recognize. \"Your fingers, the way you play, it's so expressive. I'd like to listen to you play again.\"\n\n\"Enough, enough,\" Mrs. Cunningham said, clapping her hands. \"Thank you girls, that was marvellous. Now, let's dance. Please, this way...\" and you can tell right away she shared Uncle Mike's opinion of chink music.\n\n\"That was beautiful,\" Martin said. \"I had no idea, I've only ever heard those Chinese opera singers before.\"\n\nI smiled. \"That's for theatres and street performances. Guqin music is for gatherings like this.\"\n\n<center>* * * </center>\n\n\"I'm not sure about dancing,\" I'd said to Hua. \"Father might not approve.\"\n\n\"It's a private party,\" Hua said. \"It's not like dancing in a dance all, we're not taxi dancers. And they teach us to dance at school.\" She smiles.  \"I'm going to dance and enjoy myself. It's not as if we go to parties like this all the time.\"\n\nShe was right, we didn't, and I didn't think Mrs. Cunningham would invite us again. Especially not after her husband walked up to us and asked Hua for the first dance. She glanced at me helplessly, her cheeks pink, and walked onto the floor that'd been cleared for dancing with her arm tucked in his.\n\n\"May I?\" Martin said.\n\nI smiled as his arms took me and that first dance was magic. One of his hands holding mine, the other on my waist and just his touch was exhilarating and I was happy now that the School had taught us to dance.\n\n\"You better dance with someone else,\" I said at last, after three dances.\n\nHe'd smiled, and he was looking down at me with that expression on his face that electrified me. I was used to men looking at me. I knew I was attractive. Hua and I both. Men looked and not just Chinese men. White men. They looked, and Martin wore that same look. The look men have when they desire a woman but this time there was something different.\n\nThe time I looked back and I desired Martin.\n\nIn his arms, there was excitement and anticipation. His hands on me sent shivers through my body. His proximity had me wanting him to take me in his arms and hold me tight and somehow we were closer together, almost touching each other and then something did touch me and my eyes widened. He jerked away from me, his cheeks pink.\n\n\"I say, I'm so sorry,\" he said, his cheeks pink, and there was that moment of shocked awareness as I put two and two together and realized what had brushed me. \n\nI smiled, my hear fluttered and my own body responded with a surge of heat and I knew Father would very definitely not approve but I didn't care. Father wasn't here and I was. \"You better dance with Mrs. Cunningham for the next couple of dances,\" I said, smiling, and when that dance ended, I joined Hua.\n\nHer face was flushed, pink, her eyes wide and startled and one of her hands clutched mine as we sat down together.\n\n\"Emily's father,\" she whispered, and her eyes were alive, sparkling. She was smiling now. \"He rubbed his jade stalk against me.\"\n\n\"Aiiyaaah,\" I said. \"Really?\"\n\n\"I think something happened,\" she said, and she was breathing hard and half-giggling. \"He was dancing with me and he was holding me really tight and I could feel it and remember the yang energy, and how your jade gate is supposed to become moist.\"\n\n\"Yes.\" I could barely speak, my mouth was so dry. \"Yes, I remember.\" I remembered Martin too. Brushing me and all of a sudden there was that heat and, yes, my jade gate was moist.\n\n\"He rubbed his jade stalk against me and my jade gate was really moist, Chuntao. I liked it.\". She swallowed. \"He wants to dance with me again, later. I said yes, and I'm not sure if I should have.\"\n\n\"It's not as if we go to parties like this all the time,\" I said.  \"He's not going to do anything with all these other people here.\" I squeezed her hand, smiled, thinking of Martin. Martin dancing with me and he'd brushed against me and that was his jade stalk. It couldn't have been anything else and now I knew why Chinese frowned on the decadence of these western-style gatherings. I was so happy Marjory had invited us. So happy we'd stayed, despite Mrs. Cunningham so obviously not wanting us. \"Let's go talk to Marjory.\"\n\nBut Marjory was talking with her Frenchman, and he did look like he wanted to slide his hand under her dress and the way Marjory was smiling at him, she looked as if she was encouraging him. Mr. Cunningham did dance with Hua again, but Mrs. Cunningham was watching him and he didn't do anything with her again. Martin came over and asked me to dance and we did and I moved closer to him this time, because he was being so careful, but I wanted him to brush against me, I wanted to feel him and I did.\n\nWithin me, it was as if some strange flower was unfolding, stirring and his eyes were so blue. Blue sapphires looking down into mine, brushing my heartstrings as I had brushed and plucked at the strings of that guqin and his smile was so natural, not forced, his voice relaxed, unstrained and he was enjoying talking with me, he wasn't pretending. He was interest in me and the flower inside me unfolded, blooming under the sunlight of his eyes.\n\n\"I'd like to see you again, Chuntao,\" he'd said, almost inaudibly, as we danced, brushing together every now and then and every time I felt him I shivered and my jade gate was definitely moist, another flower unfolding.\n\n\"Hua and I go to the Saturday matinee at the Cathay Cinema on Avenue Joffre almost every weekend,\" I'd said, very quietly and I hadn't danced with him again after that.\n\nMr. Standiford danced with me though. He'd really enjoyed my qin playing. He'd said he'd talk to Mrs. Innes, he'd like to hear me play again.\n\nHis jade stalk brushed me and told me he'd like to play something else. I blushed and eased away from him.\n\n<center>* * * </center>\n\nI'd told Hua about Martin after we got back to our room.\n\n\"You'll get in trouble, Chuntao. You'll get him in trouble too. They don't like their English boys to have anything to do with Chinese girls. Especially girls like us.\" And we both knew what she meant. \n\nAnglicized Chinese. Chinese on the outside, European inside. Because we were, both of us. Anyone could look at us in our western-style school uniforms and the way we walked and talked and see that. We weren't sing-song girls. They didn't care about sing-song girls. They were there for one thing only and everyone knew that. Girls like us? That was another story.",
        "I'd shrugged, then giggled. \"He didn't rub his jade stalk against me, at least.\"\n\nHua giggled. \"He was funny,\" she said. \"I liked him, even if he did do that.\"\n\n\"You'll get in trouble, Hua,\" I said, and we looked at each other and then we both giggled.\n\nHua had gone with me to the Saturday matinee the following weekend. Martin had already been there, waiting. He'd already bought the tickets. I'd sat next to him with Hua beside me. We held hands right through the movie. Nothing else. He'd just held my hand in the darkness and I didn't remember a thing about the movie. I couldn't even remember what movie it was. Just his hand, holding mine, our fingers, intertwined, moving, touching, for two hours. Just his hand and mine, nothing else and I was helpless.\n\n\"Next Saturday?\" he'd asked as we'd left, and he was blushing.\n\n\"We come to the matinee every Saturday,\" I said, glancing at Hua. I was blushing.\n\n\"I'll see you here,\" he said, and then he was gone.\n\n\"You're asking for trouble,\" Hua said, after he was out of sight.\n\n\"Don't tell anyone,\" I said.\n\n\"I won't,\" she said. \"But someone will find out. Someone always does.\"\n\n\"Yes, I know,\" I say. \"But he's different, Hua. I have to meet him.\"\n\n\"I'll come with you, she said, squeezing my hand. \"You're my friend, Chuntao.\"\n\n<center>* * * </center>\n\nNext Saturday, he was there, before the matinee started, waiting for us again, tickets in hand.\n\n\"I'll sit over there somewhere,\" Hua said, with a glance at me that brought a pink tinge to my cheeks.\n\nMartin led me to two seats off to one side, right at the end of the row, separated by a pillar from the other seats and with an abysmal view of the screen. I didn't care, because as soon as the lights dimmed and the movie stared, he did more than hold my hand.\n\nOne arm slid behind me, resting softly on the back of my neck and my shoulders, the other brushed my cheek, turning my face towards his before caressing my neck, very delicately, very gently and I sighed. I rested my head against his arm and looked up into his eyes in the flickering light of the screen and just drank him in.\n\nThat face, that pale skin, that blonde hair, those round eyes. So strange and yet so handsome and he didn't smell at all like other foreigners smelt. Mrs. Innes, the foreign teachers, he smelt nothing like them. A male smell, slightly sweaty, exciting, a faint whiff of cologne, and that freshly laundered scent from his white shirt and the light silk jacket he wore. \n\n\"Chuntao,\" he breathed, his face almost buried in my hair. \"You're so beautiful. I've never met anyone as beautiful as you.\"\n\n\"I'm not,\" I said. \"Not like Marjory.\" Tall, with large breasts and hips and blonde hair and everyone, all the men, they looked at her. Not at Hua or me or even Emily. They looked at Marjory, and to me, she looked like one of those European actresses in the movies. \n\n\"You're far more beautiful, Chuntao,\" Martin said, and his nose brushed mine. \"I love you,\" he added, out of nowhere and his lips brushed mine and I wasn't sure what to do but he'd said he loved me and I looked at his face and I knew. \n\nI knew I loved him and I wanted him to kiss me as the white people kiss. Chinese men didn't kiss, not that I'd ever been anywhere with a Chinese man, or even a Chinese boy. I'd watched movies though, I'd seen westerners kiss in the movies and I was sure that was what he wanted, but really, I didn't know how.\n\nIt didn't matter. He lowered his head and he kissed my neck where his fingers had been stroking me and his lips and tongue on my neck send shivering electric thrills right through me. His free hand stroked my arm, the skin of my arm because my top was short-sleeved, a western-style top that went with the western style skirt I wore. His lips sucked lightly at my neck. One of my hands brushed the back of his neck and now I felt him shudder against me.\n\n\"Chuntao.\" He breathed my name, lifted his head; looked into my eyes. His nose brushed mine, his lips found mine and he kissed me and his tongue edged and slipped and pushed against my closed lips.\n\nHe lifted his mouth from mine. \"Open your mouth a little, Chuntao,\" he whispered, before his lips found mine again and I wondered why but I did, I separated my lips, opened my mouth a little and I found out why.\n\nHis lips sealed themselves to mine, guiding my lips further apart, his tongue slipped into my mouth and came alive, like some beautiful snake flicking and pushing and sliding against my tongue, the roof of my mouth, the insides of my lips, everywhere and then, without lifting his lips from mine, he withdrew his tongue from my mouth and there was a sudden moment of shock as he sucked my tongue deep into his mouth.\n\nNow it was my turn and my lips were sealed to his, his hand at the back of my head, holding me in place. My tongue explored, tentatively, tasting him, sliding against his, tasting him and he was holding me closer and I wanted that closeness, I wanted everything and when his hand cupped my breast and his tongue pushed back into my mouth I instinctively opened my mouth wider to him, turning a little, shuddering as his hand moved, cupped my breast through my thin cotton top and my bra and I was pushing my breast against his hand, wanting that pressure, wanting his hand touching me there, wanting his kiss, wanting that closeness.\n\nWe kissed, on and on and on, his lips locked to mine, his tongue in my mouth, mine in his, backwards and forwards and I became more daring. He didn't need to suck my tongue into his mouth. My tongue took the initiative now, timidly exploring, tasting, sliding into his mouth and then I was sucking his tongue into my mouth and he was taking control, strong and yet so gentle and we kissed on and on and I wished he could hold me in his arms the way he had when we'd been dancing.\n\nI wished I could feel his jade stalk rubbing against me.\n\nI didn't remember a thing about that movie either.\n\n\"Next Saturday,\" he'd said when we parted.\n\n\"Next Saturday,\" I'd agreed breathlessly.\n\nI wanted him to kiss me again soon.\n\nI wanted him to hold me so tight.\n\nMy jade gate was so moist.\n\nHe was a foreigner.\n\nI didn't care.\n\n<center>* * * </center>\n\nHua is reading on her bed after dinner. She studies all the time, like me. Our families have invested in us. A western education, and I know my father has placed great hope in me. Father has decided his daughters must be educated in the western style and I am the oldest. It is to me to set the example and do well. Not just do well. I must excel. I've studied hard all the years I have been here at this American School.\n\nHua is reading on her bed and I'm thinking. I'm thinking about Martin. About meeting him at the Cathay Cinema. We've met twice there now. He's held my hand. He's kissed me. Not just one kiss. We kissed for the entire movie. We did almost nothing but kiss and I know my father would be angry and upset with my behavior. He'd tell me I'm bringing shame on the family. I'm betraying his hopes and his faith in me. This school is so expensive. My father is well off, but we're not one of those really wealthy families that girls like those Modeng girls in their western-style clothes and aping western hairstyles and behavior come from. \n\nSending me here is a huge commitment for my family. Especially I'm a girl. I have little brothers, two of them, the youngest was a baby when I left home. He must be six now, the other must be eight. They've grown up without ever knowing their big sister, and my two little sisters, I know they remember me, they wrote me a short letter that was with my mother's last letter to me and I miss them. I do, the oldest must be twelve now, almost as old as I was when I was sent to school here five years ago.\n\nI was thirteen when I left my home and my family. Five years of study. Five years without seeing my family, only letters exchanged between my mother and I, and the occasional short note from my father in his usual style, extolling me to study hard, to reward my father's faith in me. To do well. In those five years I have changed. I am eighteen. I am a young woman, not a child. I have been on my own here all that time. In all that time, Hua has been my constant friend and companion, my only Chinese friend.\n\nAll my other classmates, all the other girls who board here, they are American or English girls. Friends, but not friends. We know each other, but we come from entirely different worlds and at times they seem to alien to me. Strange creatures from another planet, aliens with pale skin and large round eyes whose thoughts are so different from ours. But now, now there is Martin with his blonde hair, his pale skin, his blue eyes and he is alien too, but alien or not, westerner or not, picturing him in my mind has my heart fluttering and I am torn. So torn.\n\nTorn between duty and loyalty to my family and how I feel about Martin. \n\nHe said he loved me and we kissed, his hand was on my breast and I think, I really do think that perhaps I do love him and I'm eighteen. I'm a women. Many of the girls I know back in Nanking, I'm sure they are already married now and their husbands have made women of them. Probably almost all of them are married and I'm lucky. So lucky to have escaped that fate. So fortunate that my parents are modern parents, that they trust me with this new future. \n\nThey trust me, and Martin has kissed me and I have kissed him back, and not just once. Many times.\n\nI am seeing him again tomorrow. I hope I will be seeing him again tomorrow and for many other tomorrows and I hope he wants to kiss me again. If he does, I know I will permit him to kiss me. I will do as I did last Saturday and surrender my mouth to him, I will be held in his arms and I am torn. Torn between what I feel for Martin, for this Englishman whom I should not love but whom I am unable to resist, torn between what I feel for him and the duty I owe my family.\n\nI don't know what to do. \n\nI know what my father would say. He would forbid this. But he is not here and I have been on my own for over four years now. I know what I should do, and I know what I am going to do.\n\nI am going to go to the Cathay Cinema tomorrow.\n\nI hope Martin will be there, but really, I'm not sure that he will be. I'm Chinese. He's English. A westerner. He said he loved me, but what does love for a Chinese girl mean to an Englishman? I'm not a sing-song girl, I'm not one of those girls in the street a man pays for. I have kissed Martin, I have permitted him to kiss me and to hold me but more than that? No. I do know my duty to my family and I will not bring shame on my family, even though these feelings for Martin dominate my thoughts.\n\nA tap on our door distracts me and I welcome that distraction, slide off my bed; walk to the door, open it. It is one the servants that looks after this floor. She cleans our room, washes our laundry, scrubs and dusts. Her name is Suyin, she's from the countryside. She's our age, perhaps a little older.\n\n\"A letter for Miss Hua,\" she says, and it is. A real letter, a letter written in English so it cannot be from her parents. I think that's the first thought of both of us. Her parents, and her eyes light up.\n\nThe door closes as Suyin leaves. I hand the letter to Hua, unbearably curious, seeing the puzzlement on her face as she opens the envelope, eases out the single sheet of paper inside, unfolds it, begins to read.\n\n\"It's from Mr. Cunningham,\" she says, glancing up. \"Marjory's father. Why is he writing to me?\" \n\n\"Why?\" I say, giggling. \"He wants to dance with you again.\"\n\n\"No,\" she says, wrinkling her brow. \"He says he enjoyed talking to me very much at the Dinner Party and he apologizes for his wife's impoliteness.\" We both giggle. \"He says a dear friend of his whose daughter is at this school will invite us both to a family dinner party and gathering the weekend after this and while we do not know her, he hopes we will both accept and he looks forward to seeing both of us there.\" She giggles. \"Especially me.\"\n\n\"You have an admirer,\" I say, smiling.\n\n\"Yes,\" she says, and she's looking thoughtful.\n\n\"Will you go if you're invited?\" I ask.\n\n\"Will you come with me?\" she says.\n\n\"If we are invited,\" I say. \"And if Mrs. Innes says we can go. Yes, I will. Maybe Martin will be there too.\" Now it is my turn to smile.\n\nHua frowns. \"Martin is English, Chuntao, not American.\"\n\n\"Not like Mr. Cunningham.\" I giggle.\n\n\"No, not like Mr. Cunningham.\" Hua doesn't giggle. \"You shouldn't encourage Martin, Chuntao. You know what the English are like. They're not relaxed about it like the Americans are. That hong he works for, Jardine Matheson's, they're even worse than most of them, that's what I heard from Emily and you know what they think of Englishmen and Chinese girls. If he gets serious with you, he'll lose his job. Besides, everyone's going to think you're a sing-song girl or a taxi dancer when they see you with him.\"\n\nThat's not what I want to hear and I am sure my face tells her that.\n\n\"Chuntao,\" she says, patiently, and I know she wants to persuade me not to see him. \"This is not one of those romance stories you like. He's English. He's a foreigner. He's Emily's brother. You know she won't like you seeing him. If she finds out, she'll talk to Mrs. Innes and he'll get into trouble as well and we won't be allowed out, we'll have our privileges revoked.\"\n\n\"She won't find out,\" I say, flatly. \"Martin knows not to tell anyone.\"\n\nHe does, and he asked me not to tell any of the English or American girls either. None of the girls at School would dare go to the Cathay Cinema either. It's far too Chinese for them. They'd be scared. For Martin it's alright. There are always some white men there, often with Chinese girls. Sing-song girls. Taxi dancers. Those kind of girls. Nobody thinks twice about it.\n\nMaybe Hua is right. \n\nMaybe other people will think I'm a sing-song girl if they see me there with him but it doesn't matter. It won't be anyone Martin or I know and Martin knows I'm not a sing-song girl. Martin knows that and he loves me and that's all that's important and we have to meet somewhere. We have too. I couldn't bear not to see him, not now, not after we've met. Not after we've kissed. \n\nNot after he's said he loves me.\n\nHua's reading the note again. She's thinking about something, I know she is and I should study, I know. but I'm too distracted by my thoughts, by those memories of Martin's kisses, his hand on my breast, by my anticipation of more of those kisses.\n\n\"Chuntao,\" Hua says, and when I glance across at her, her cheeks are pink.\n\n\"Yes,\" I say.\n\n\"When you kiss Martin, do you really share saliva?\"\n\n\"Aiyaaah,\" I say. \"It's... I don't know how to explain. It's hard to describe. He puts his tongue in my mouth but that's different from describing it.\" I hesitate. \"Why do you want to know?\"\n\nHua blushes. \"I want to know,\" she says. \"I was watching you and Martin at the movie.\"\n\n\"Hua!\" I say, blushing. I never even noticed, but then, it was a crowded movie theatre. She probably wasn't the only one watching us. There were lots of other couples.\n\n\"I was reading about it,\" she says, putting the letter from Mr. Cunningham down, picking up the book she was reading, holding it up. The \"Romance of Genuine Cultivation.\" It has a long and detailed description of kissing. There's a lot of emphasis on tongues and saliva and it's hard to relate it to how Martin and I kissed.\n\n\"It's not like the book at all,\" I say.\n\n\"Oh,\" she says.\n\n\"I'm meeting Martin tomorrow at the matinee. Can you come with me?\" I ask, after a pause.\n\n\"Sorry, what was that?\" Hua is reading her book again. \n\n\"I'm meeting Martin at the matinee. Can you come with me again?\" \n\nWe're not allowed out on our own. Mrs. Innes is strict about that. Very strict. Us senior boarders, in our last two years, we're allowed out after school and on Saturdays and Sundays, in pairs and Hua's come with me so far but I should ask her. We're not allowed out singly and not to meet boys and we have to be back by the curfew. If we're seen with a boy, privileges are revoked. It's happened once or twice, not very often. And that's English or American girls. \n\nA Chinese girl meeting an Englishman? I know why Hua is concerned.\n\nI'd probably be expelled and she knows I can't afford that. \n\nBut I know I can't not see Martin either.\n\nHua agrees to come with me.\n\n\"I can show you how he kisses me,\" I say, and my cheeks are a little pink.\n\n\"How can you do that?\" Hua is puzzled.\n\nI smile now, and I stand up and it's hard to explain what happens next because I'm not really thinking. It is as if something draws me from my bed across the room to Hua's, and she watches me as I lie down beside her on her bed. We'd done this often, lain together on our beds. When we were younger, in our first year here, sometimes we'd even sleep together the way each of us used to at home, with our sisters, all sharing the same bed and we'd missed that companionship.\n\nThis is different and as I lie beside her, propped up on one elbow, our eyes meet and we both realize that and something inside me twists and churns and tightens.\n\n\"Turn over,\" I say, \"and lie on your back.\"\n\nHua looks at me and turns over without a word, lying on her back, looking up at me and her cheeks are pink. \n\n\"Like this,\" I say. \"He kisses me like this.\"\n\n\"Chuntao?\" she says, and her voice is high-pitched, nervous, but she doesn't move. She stays still, her eyes looking up into mine as I run my tongue over my lips, as I lower my face towards hers, as my lips brush across hers the way Martin brushs his lips over mine.\n\n\"Open your mouth a little,\" I whisper, my heart pounding, and she does and I kiss her the way Martin kisses me. My lips seal themselves to Hua's, my tongue slides between her lips, she tastes faintly of cherries and my lips guide her mouth open as Martin does with me, my tongue finds hers, dances with her inside her mouth and then I suck her tongue into my mouth and we're actually kissing and I can't help doing what I do next.\n\nI move closer to her, my body pressing against hers, one of my legs over hers and one arm is under her the way Martin's arms slide around my shoulder and my other hand is on her arm as I kiss her again and again and we're both in our pajamas. School regulation cotton pajama pants and a buttoned top and that's all, because it's the end of summer and it's still hot and my breasts press against her and without any thought, my hand cups her breast.\n\nI lift my mouth from hers, my hand remains on her, cupping her breast, large and firm under her thin cotton top and we look at each other and we're both panting. \"That's what he does,\" I whisper.\n\n\"This too?\" Hua asks, one of her hands moving to rest on mine.\n\n\"That too,\" I say, and I do what I would like Martin to do to me. I squeeze her nipple. \n\n\"Oh,\" she gasps, her back arching. \"Oh my god... oh my god... Chuntao... do that again. Please.\"\n\nIs it that good? I do and she squeals and her body moves and I'm moving against her, rubbing myself against her thigh and my knee is almost between her legs now and I'm wet and hot and so sensitive and the friction as I move is delicious and I moan softly myself and Hua half turns towards me and he's moving against me and she's wet. I'm wet. The thin cotton of our pajama's is wet, wet through.\n\n\"Is this... is this what it's like with Martin?\" she gasps.\n\n\"Ohhh,\" I sob, my hips moving and I want to rub and rub and rub myself against her, I can't stop and I'm thinking of those books, the illustrations in them and those descriptions and so is Hua, and her memory, she remembers everything. She is quoting from that book, The one she was reading.\n\n\"When man and a woman are making love for the first time, their bodies touch and their lips press against each other. The man sucks the woman's lower lip and the woman suck's the man's upper one. When sucking, they savor each other's saliva. Now the woman's left hand should hold the man's jade stalk. The man will use his tight hand to caress the woman's jade gate.\"",
        "\"Like this,\" I gasp, and my heart pounds as my hand moves from Hua's breast to touch her through the clinging wet cotton. My fingers move, stroking, exploring her, and I have touched myself there, but with Hua, it's so different.\n\n\"Oh,\" she gasps, and her left hand reaches over and touches me just as I am touching her and I can't help it, I go limp at her touch, moaning softly because her hand on me sends hot waves of excitement racing through.\n\n\"Oh,\" I gasp and we move closer to each other.\n\n\"Is this what it is like with him?\" Hua gasps. \"My jade gate... I'm so wet.\"\n\n\"So am I,\" I gasp, wondering if it would be like this with Martin. \"Hua?\"\n\n\"Yes, Chuntao?\" she gasps, her fingers touching me through the thin cotton.\n\n\"Those positions in the books.\"\n\n\"Yes?\"\n\n\"I want to see what they're like.\"\n\nHua giggles and moans at the same time. \"You want to see what it's like with a man, don't you?\"\n\n\"Yes,\" I gasp, and I'm easing myself over, onto my back and Hua's moving with me, looking down at me and her fingers move to unbutton my pajama top, brushing it open, exposing my breasts and hers are pushing at me through her pajama top. \"Take yours off,\" I whisper, and as she does, sitting up, peeling her top off, I shrug mine off and her breasts are beautiful.\n\nLarge and firm and her nipples and swollen and reddish brown and we look at ourselves. At each other. Her breasts are bigger than mine, mine are small and firm but my nipples are larger and they hurt now. They ache and next second Hua has me on my back and she's kissing me the way I kissed her, the way Martin kisses me. She's taking control, her tongue gently possessing my mouth and I open wide for her, my tongue dancing with hers and both of us are moaning now as we kiss.\n\n\"It feels good,\" she gasps and her hand is on my breasts and when she squeeze my nipple I arch my back, shivering with pleasure.\n\n\"Lie on me,\" I gasp. \"Lie on me like a man would.\"\n\nShe moves over me and we're both clumsy, we're not sure but when one of her knees moves between mine I ease my legs apart and then she's between my legs and lying on me and I remember the illustrations of this position. It is the Flying Dragon, where the woman is on her back and the man is over her with his knees placed on the bed and Hua is in the position a man would be in.\n\nHer thighs push against mine and I draw my knees back and she rubs herself against me and we both gasp with that delicious friction and she is rubbing against me and I'm whimpering with the pleasure of it.\n\n\"It's good,\" I moan. \"It's so good,\" and I wonder how this would be with Martin, because his jade stalk would be inside me and that must be better than this. It must me and Hua is moving faster, breathing hard and he breasts crush against me and her skin on mine, I love it and she's moving, she's pushing her pajama pants down and kicking them off and my face is pink with embarrassment.\n\nHer hands tug at my pajama pants, I help her, we peel them off and we were both baked and she is rubbing her jade gate against me and I have read about this too, in one of those books and I'm not ashamed or embarrassed anymore, I'm carried away and her jade gate is slippery against mine and we're holding on to each other, not kissing, moving. Skin against skin and my legs are wide apart, my knees drawn back and her skin is like silk and we're both so wet and something is building inside me.\n\n\"Oh,\" I moan. \"Oh... oh... oh,\" and my head is tossing from side to side and Hua is merciless. She moves, rubs, she's enjoying this and I'm close to something, I'm so close and Hua squeals and bucks and shudders and slows and I need it, I need what she was doing and as she slows I roll her onto my back and now I am on top, I am between her legs and I push her legs back and rub myself against her and that friction is everything I need as I move and move and move.\n\n\"Ohhhhhh,\" Hua sobs. \"Ohhhhh,\" and she is bucking beneath me and I'm watching her face as she does that. Something is happening to her. Something intense and I'm close to something. So close and I can't stop and then it hits me and I shudder and buck down against her, my jade entrance spasms, dances, the pleasure is unbearable, waves of pleasure rolling through me and we collapse into each other's arms, shuddering in the aftermath.\n\n\"Oh,\" she says at last, after I have rolled off her and we are lying side by side holding hands and I am unbearably tired. \"I think it must be even better with a man.\"\n\n\"Yes,\" I whisper, thinking of Martin. \"I think it must be.\" I know that is a dangerous though and as we pull the quilt over us and lie together in Hua's bed, all I can think of is that I would like to lie like this with Martin, naked in his arms. I would like to give myself to him and have him possess me as a man possesses a woman and my body glows and tingles with renewed excitement. With desire. \n\nWith love.\n\nI love him, and he's English and Hua's right, I know that. I shouldn't see him, he shouldn't see me, not like this. I'm not a sing-song girl. Englishmen don't marry Chinese girls. Perhaps in my dreams but I know Hua is right. This isn't a romance novel. This isn't make-believe. This is real life and on Saturday, I will tell him that we cannot go on like this. I will not give him what a sing-song girl gives men. For me, it can only be marriage and that will never happen, not between Martin and I.\n\nNot between an Englishmen and a Chinese girl. It was foolish of me to even think there might be a chance and Hua is right, there isn't any chance. His parents, his employer, his friends, they will all oppose this, just as my family will when they find out about him. I will tell him this on Saturday. I will tell him to forget me and I will do my best to forget him. He will understand. I know he will.\n\nIt hurts so much to know I will not see him again.\n\n<center>* * * </center>\n\nMartin is waiting inside the foyer of the Cathay Cinema as he is every time we've come here for the last three Saturday's and my heart sinks. I'm going to tell him, but now now. One more afternoon with him and them I will tell him, as we are leaving. It'll be easier like that. Hua takes her ticket from his hand and smiles. \"I'll meet you here after,\" she says, and she's gone.\n\nAs soon as she's out of sight, Martin takes my hand in his and he leads me, but not inside as I expected him too. He leads me through the doors and up the stairs to the balcony seats. The expensive seats. I've never sat up there before. It's where the Europeans and the wealthy Eurasians and Chinese with money all sit. My father's wealthy but my allowance isn't enough to encourage me to waste money and I haven't heard from my parents now since July, just before the fighting in Shanghai against the Japanese started.\n\nI'm worried about the fighting that's going on, you can hear the guns even this afternoon, but as Martin leads me up the stairs to the balcony seats, I'm not worried. I'm elated because there's two whole hours ahead of us, just him and me, together, and my heart's pounding as we walk up the steps to the back row. The seats are different, double armchair seats, perfect for couples and there's no armrest in the middle and for the first time, I'm sitting next to him.\n\nRight next to him, my thigh against his and he turns towards me, his arm around my shoulder and I look up at him and a second later we're kissing frantically, even before the lights have dimmed and his lips are sealed to mine, his tongue slides into my welcoming mouth, meeting my tongue, dancing with mine and I'm almost shaking in his arms with the intensity of my feelings for him as I suck his tongue into my mouth, tasting his saliva and this is so much better than any book can ever describe.\n\n\"I love you, Chuntao,\" he breathes, our lips separating for a moment. Only a moment, but I'd rather have his kisses than his words, however much I enjoy those words and now it's my lips that seal themselves to his, silencing him. My tongue is sucked into his mouth, my tongue runs over his, exploring as I turn towards him and I'm almost on my side, both arms clinging to him, my breasts pushed firmly against him as we kiss and this is even better.\n\nThat sensation as my breasts are crushed against his chest, that swollen aching of my nipples, assuaged momentarily by that crushing pressure as he holds me tight, as his arms encircle me, as his tongue takes possession of my mouth, forcing my tongue back, sliding into my mouth, on and one, each of us as frantic as the other and I want more. More of his kisses, more of his tongue, I want him deeper in my mouth, I want to give my mouth to him, I want his body against mine, I want his hands to hold me and crush me against him.\n\nI want...\n\nThe lights dim, the movie starts and in the back row of the balcony seating we're not alone, but it's dark and there's nobody right next to me. I'm close to the aisle, the double seat next to me is empty. There's another couple beside Martin, a European man with a Eurasian girl, they're as engrossed in each other as we are and I ignore them, I can't even see them as Martin's lips brush across my face and I turned my face up to his lips as a flower turns to the sun.\n\nTrailing brushes of his lips over my cheeks, my neck, returning to my lips and now when his tongue slips into my mouth I suck on him, suck his tongue in, meet it with my own and we're turned towards each other, my arms around his neck and one of his arms is behind my back, holding me as I turn to him, holding me tight and his other hand is brushing my arm, slowly, up and down, up and down and I'm shivering as his mouth devours me.\n\nHis mouth slides down, his lips taste my neck, he's breathing in, inhaling me and I'm stroking his hair, blindly looking over the top of his head and I realize I'm looking at the couple in the seat beside him and that Eurasian girl, she's my age and it's dark but in the flickering light from the film, I can see enough to see she's wearing a western style dress and her legs are wide apart and the man's hand is under her dress. His hand is moving, she's making little noises and Martin is kissing my neck, his lips brushing my skin, his breath hot on me and that girl shudders, her head arches back. She moans.\n\nI can see his arm moving, moving in circles and her legs edge wider apart and it's obvious he's doing something to her and that whatever it is, she's enjoying it and she's biting her bottom lip and whimpering. Martin's hand cups my breast, very slowly, very gently, as if he's afraid I will push his hand away. Last time, last weekend when he kissed me, his hand cupped my breast and it was good. This time, I almost know what to expect and it's even better because I'm not scared. I arch against his hand, wanting his touch, whimpering myself as my nipple reacts to that new pressure, that touch, ripples of pleasure and excitement pooling at my center and my jade gate isn't moist, it's hot and wet and sensitive and the Eurasian girl on the other side arches back, her head arches back and she moans, loudly, shuddering and something has happened to her. \n\n\"I love you, Chuntao,\" he breathes, his breath hot against my neck and I shiver.\n\nDoes he? Does he really love me? Is it just words? I don't think so. I've seen the way he looked at me as I walked into the cinema, as I walked towards were he waited for me. I've see those glances as we walked up the stairs together. I saw how his eyes followed me as Hua and I walked away from him last weekend. I've experienced the heaven of his kisses, of his mouth on mine and I know there is more. \n\nSomething's happening to me. Martin is kissing me, his lips sealed to my lips again, kissing me slowly, his tongue slipping into my mouth and his fingers fumble at one of the pankou's, the knotted and embroidered buttons that angle diagonally down from the base of the collar of my qipao to my right side and I know what he wants. I know and my heart flutters and I lie back into his arm, feeling his fingers and he doesn't know how to undo those toggles.\n\nShould I? I'm not sure what I want, I'm not sure what I'm feeling, I'm not even sure what I'm thinking but he loves me. He said he loves me and don't want him to stop what he's doing. I want to. I want his hand on me. I want to experience his touch on my skin. Not just on my arms, my cheeks, my neck. I want his hand on my breast and I abandon myself to his kisses as his hand finally unfastens that first pankow and he's working on the next.\n\nHis mouth lifts from mine, his lips suck on my bottom lip, tug lightly and he understands how those pankou's unfasten now and he's worked the next one open, and the next and the next and the next, almost down to my side and his fingers brush along the gap where my qipao is loose and I know what his hand wants and my hearts not fluttering now, it's pounding and I'm limp and tingling and scared and excited.\n\n\"I love you, Chuntao,\" he breathes, his lips brushing mine again and again.\n\n\"I love you, Martin,\" I breathe, waiting and I know if he does this, I will let him. \n\nHis nose brushes mine, his fingers edge in under my qipao and I know what he will find. I'm wearing a camisole, that's all. No bra. My breasts are small and firm and I don't need a bra and they're uncomfortable and my qipao is figure hugging. Except now, it's not. The front is unfastened and he hesitates, he kisses me. I open my mouth wide to him, suck on his tongue, find my tongue sucked into his mouth and we are kissing passionately.\n\nHis hand slides inside, under my qipao, his fingers sliding over my camisole, discovering I am not wearing a bra, cupping my breast, covered only by that thin layer of silk and lace and it is he that moans into my mouth as we kiss. It is he that first shudders with pleasure as his hand cups my breast, as his thumb discovers the swollen excitement of my nipple. Brushes, explores, and now his kisses are slower, more gentle as his hand moves on me, curving over my breast, fingers sliding, ripples of pleasure shivering through my body at his touch.\n\n\"Chuntao,\" he whispers, his lips brushing mine, breathing my name into my mouth and I inhale, breathing his exhalations, sharing my breath with him, sharing my pleasure with little gasps now as his hand moves on me, as his thumb plays across my rubbery-hard nipple and it aches. It aches so much, it is so firm and swollen that it hurts as it did with Hua, but his hand on me is far more exciting tham Hua's hands. \"Chuntao,\" he breathes again. \"Chuntao.\"\n\nHe says my name as if it is some rare and wondrous thing and in that moment, in that way he breathes my name, I know he loves me and I love him. I know I love him.\n\n\"I love you,\" I whisper, all thought of telling him this must end vanishing with those whispered words. My back arches, pushing my breast into his hand and I wish my camisole wasn't in the way. I want his hand on my skin. I want him to touch my body, to caress my breast.\n\n\"I love you,\" I whisper and my other hand strokes the short blonde hair at the back of his neck and he shudders under my touch as I am shuddering under his. His hand continues to explore my breast, to tease my nipple, to cup me and hold me as his mouth seals itself to mine and in these double seats I can twist and press myself against him and I do, one leg over his, pressed against him almost as I was with Hua, my Jade Gate pressed against his thigh and I shudder with that exquisite friction. \n\nI remember his jade stalk, how hard he was when we danced and I want to feel it again but in this seat, it's impossible and I'm too shy to touch him. What would he think of me and so we kiss, on and on and on. Nobody can see us together, not in the darkness of the Cathay Cinema's balcony and the first half is over far too quickly for me and I hastily fasten the front of my qipao.\n\nIt's only intermission. There's another hour to go and I'm panting for breath as the lights brighten and around us other couples are separating, sitting upright, straightening their clothes and I'm one of those girls, although my qipao doesn't need adjusting because I've already done that.\n\n\"Icecream?\" Martin asks me.\n\nI nod and he disappears, returning soon enough with two icecreams and I sit there eating it gratefully with him, my mind wash with images of that Eurasian girl next to me and when the lights dim and the film resumes, I'm eager to return to Martin's arms. So eager that as soon as the lights dim, I unfasten my qipao for him, welcoming his hand as it returns to my breast. Welcoming his mouth as it returns to mine and I'm almost shaking with my excitement and my need by the end of the movie. All thought of telling Martin we must end this has vanished from my mind.\n\n\"Next Saturday?\" This time it is Martin that asks, reluctant to release my hand as we walk slowly down the stairs to find Hua.\n\n\"Yes,\" I say. \"I wish it could be sooner.\"\n\n\"Me too,\" he says, and he stands there watching me as I walk to meet Hua and we leave.\n\n<center>* * * </center>\n\n\"Hua,\" I say, late on Saturday evening, and we're both reading our Chinese books, the ones on the act of love and the art of the bedchamber.\n\n\"Yes?\" she says.\n\n\"What do you think it's really like? When you do this with a man?\" I'm remembering that man next to me, his erection, his jade stalk, so large and hard and white in the darkness and his enjoyment as that Eurasian girl used her mouth on him, and I show Hua the illustration. The one where the girl has the man's jade stalk in her mouth and the text is describing what to do with your mouth. It's so hard to understand the meaning. \n\n\"Well,\" Hua says. \"It is certainly bigger than our fingers.\" She examines one finger and I burst out laughing. She looks at me and she giggles.\n\n\"I saw a girl in the cinema,\" I explain. \"She was doing that to a man. He enjoyed it.\"\n\nHua's cheeks are pink, she's not smiling now. \"I have seen that too,\" she said. \"A foreigner asked me to do that today. He wanted to pay me. It was very embarrassing.\"\n\n\"I think you better sit with Martin and me,\" I say after a moment. I smile. \"He only kisses me, so as long as you don't look.\" I'd feel better if she was with me. Girls don't sit by themselves, not in the Cathay. That's an invitation to men.\n\n\"I won't look,\" she says.\n\nI nod. \"It is alright if you do look,\" I say. \"We are sisters. Sisters should help each other.\"\n\nShe says nothing, but she nods. I know she will look. Really, I don't mind if she does. All she will see is Martin and I kissing and his hand on my breast. \n\n<center>* * * </center>\n\n\"Chuntao,\" Mrs. Innes says, on Sunday after the morning Church service. \"I have a request from a gentleman I know,\" she says. \"About playing some kind of Chinese musical instrument. He says you played it at the Cunningham's and it was delightful.\"\n\n\"Yes, Mrs. Innes,\" I smile, a little shy. \"It was the guqin.\"\n\n\"The gentleman asked if you would be willing to give a small recital for him, Chuntao,\" Mrs Innes says. \"He suggested perhaps at the School. He's very interested in Chinese music.\" She coughs. \"He suggested perhaps he could compensate you for your time in some way and I know you can use the money.\"\n\n\"Oh?\" I say, and of course I'm interested. \"Yes, I remember him. I think that was Mr. Standiford,\" I say, smiling. \"He did seem to enjoy that music.\"\n\n\"Oh no, not Mr. Standiford,\" Mrs. Innes says, and she's smiling. \"It was Mr. Maynard. He's rather a gentlemen, very interested in China. He's coming to the school to have lunch with me this afternoon. Why don't you join us and perhaps you can play for us after lunch. I must confess to never having listened to any Chinese music. Mr. Maynard has me intrigued. I had no idea you played anything other than the piano, Chuntao.\"\n\nWe learn the piano here at school. I play the piano badly.\n",
        "\"I was learning the guqin from when I was very young,\" I say, blinking with surprise. \"My grandmother taught me. She is an accomplished guqin player, but I have had no practice since I left home and I do not have a guqin.\" \n\n\"Yes, I advised him of that, Chuntao. He said not to be concerned, he will bring one for you to play.\"\n\n\"When?\" I ask.\n\n\"Perhaps this afternoon,\" Mrs. Innes says. \"We're having lunch together. Perhaps you'd like to join us.\"\n\n\"Yes,\" I say. I have no idea who Mr. Maynard is but no doubt I will find out. I'm puzzled though. Mr. Standiford was the only man there who seemed to really enjoy the guqin. Still, whoever he is, he will give me money and I need that. I have not heard from my family for some months now and I do not have much left. I am frugal, but I am also worried. Father is always on time with my spending money.\n\n<center>* * * </center>\n\n\"Chuntao, you might remember Mr. Maynard from the Cunningham's,\" Mrs Innes says as I stand to greet the gentleman she ushers into her sitting room. \"Micheal, this is Wang Chuntao.\" She introduces me in the Chinese fashion, surname first.\n\n\"I am so pleased to meet you, Mr. Maynard,\" I say, very politely, my eyes widening, and I am startled. Mr. Maynard. The one that was so rude about the song at the garden party. It's him. Marjory's Uncle Mike. He smiles at me. I blush.\n\n\"Miss Wang,\" he says. He places the guqin on the coffee table. \"This is a gift for you, my dear.\"\n\nI can't restrain myself. \"For me?\"\n\n\"Yes,\" he says, smiling. \"I talked to Chuck Cunningham, persuaded him that guqin was wasted hanging on his wall and that he should give it to someone who would truly appreciate it.\" He grins. \"Me, of course, and he owes me a few favors so I cashed my chips in, so to speak.\"\n\nI don't really have any idea what he's talking about. Chips? Favors I understand, and he has the guqin I played, the beautiful treasure from the Summer Palace. He's brought it here for me to play, it's sitting there on the coffee table before my eyes and my hands reach for it without thought. I kneel on the floor before the coffee table, my fingers run over the strings, drawing music from it with the desperate need to hear those notes flow through the still summer air of Mrs. Innes' sitting room.\n\n\"Miss Wang,\" Mr Maynard says, and I look up. \"Chuntao, it is a gift for you.\"\n\nMy heart jolts in disbelief. I gasp, shocked. This guqin from the Summer Palace, it once belonged to the Emperor of China and it is a treasure beyond price. Mr. Cunningham has given it to him? He has given it to me? Just like that? This cannot be.\n\nHis hand reaches out, rests on mine. \"I am serious, Chuntao. It is yours. It is my gift to you, young lady. I can see you are an artist who appreciates this instrument. The way you talked about it at Chuck's, the way you played it, it deserves an artist like you to belong to, my dear.\"\n\n\"That is too generous, Mr. Maynard,\" I say, knowing I will accept his gift. Knowing this will place me in his debt, for this guqin is priceless. Once it hung in the Summer Palace, the possession of the Emperor and it has been gifted to me by one of China's oppressors. One of those foreigners who exploits and tears apart our country for money, caring not the damage that they do to our land and our people, but still, this guqin. I cannot refuse this gift, no matter the price.\n\n\"Nonsense, Chuntao,\" he says. \"This guqin deserves you and you deserve it. It is yours.\"\n\nAlmost, almost I hate this man for the casual ease with which he disposes of our China's patrimony, our cultural heritage, but at the very least he is giving it to me and I am Chinese. I know what this treasure is, I know what it represents and I will treasure it and I will care for it and honor it and here in this room, I will play it for him. That is a small price to pay and I will humiliate myself by accepting this gift, knowing that in doing so, in accepting this humiliation and shame, I am helping preserve a little of our China's precious heritage for the future. \n\n\"Thank you, Mr. Maynard,\" I say politely, bowing my head, concealing my shame at having to accept this treasure of China as a gift from a foreigner. \n\n\"Let us have lunch now,\" Mrs. Innes says. \"Chuntao can play after lunch.\"\n\n<center>* * * </center>\n\n\"That is this guqin?\" Tien-chien asks, looking at the guqin that sits on my coffee table.\n\n\"Yes,\" I say, reaching out, plucking the strings; effortlessly drawing the notes from my gleaming instrument, filling my tearoom with the beauty of that music as ably as I did eighty years ago, when I was eighteen. \n\n\"Yes, this is that very guqin, that once dwelled in the Summer Palace of the Emperor of China, that was made by the Younger Prince of Lu for himself, he who ruled the Southern Ming Dynasty four hundred year ago. That history is written here, Tien-chien.\" \n\nMy fingers point to the Chinese characters embossed into the wood, but I know Tien-chien is a banana through and through. She may look Chinese on the surface but she does not read Chinese, the only Chinese she can speak is to order dim-sum and her mispronunciations even of those simple words are an absurdity and an embarrassment. But still, still she is Chinese enough to recognize her Chinese cultural heritage, Chinese enough to recognize the priceless heritage of this instrument.\n\n\"And this is that song I played the evening I first met Martin,\" I say. \"High Mountains and Flowing Waters.\"\n\n\"You make it look so easy,\" she says, watching, listening as my fingers coax that ancient music composed so long ago, centuries ago, centuries before even that Roman Empire of the Europeans was founded and still this music lives where that Empire of the Romans has died long ago. My fingers coax that music from the strings, as easily as they did on that long ago evening. As easily as they did on that long ago afternoon when Mr. Maynard gifted me this guqin and I played for him, that first time of many.\n\nTien-chien eyes me. \"Just like that, he gave it to you, Grandmother?\"\n\n\"Just like that, he gave it to me,\" I say. \"But I paid for that gift in the end. I paid dearly, but in the end it was a price I would have had to pay, if not with him, then with another. It was my fate.\" I fan my fingers across the strings. \"Yes, it was my fate and I ran out of options. That is all it was. I will go on with my tale now, Tien-chien.\"\n\n<center>* * * </center>\n\n\"We're invited to a dinner,\" Hua says excitedly on Monday after classes end. \"It's from Miranda's parents.\"\n\n\"Who?\" I ask.\n\n\"Miranda Alexander,\" she says. \"She's another of the day girls.\"\n\n\"When is it?\" I ask.\n\n\"Friday evening.\" She looks up. \"I think this is the one Mr. Cunningham asked us to accept.\"\n\nAsked you, I think, but I say nothing and when we ask, Mrs. Innes already knows about the invitation, gives us permission and lets us know Mr. Cunningham's driver will be picking us up.\n\n<center>* * * </center>\n\nHua is excited. So am I, even though I'm not sure that Martin is coming. Miranda and her mother greet us, I recognize her mother from Marjory's. I recognise Miranda's father, standing talking to Mr. Cunningham, and they both come to us. I find myself on Mr. Alexander's arm as Mr. Cunningham takes possession of Hua. Mr. Alexander is entertaining, his wife retrieves me from him and she is rather friendlier than I have been expecting her to be.\n\n\"Ah, the young men are arriving,\" she says, and my eyes light up as I see Martin. I want to run to him, throw myself into his arms but I restrain myself. I'm alive though, my senses on fire, tingling, glowing and his mere presence in the room, our eyes meeting intermittently, that's enough for me. The evening moves on, dinner, and then dancing. Slow dances, and I dance with Mr. Alexander, I dance with one or two older gentlemen and then I'm dancing with Martin and I'm overjoyed.\n\n\"Chuntao,\" he breathes, as we circle the small dance floor, part of the party and apart from the party at one and the same time, lost in our own world, just the two of us. The room is dimly lit, the party more and more boisterous and I am a little shocked at the drinking but I am with Martin and nobody notices us as we edge into a corner and then into a small alcove overlooking the garden and circle there, in view of all and yet discretely concealed. \n\nHis hands tempt me closer and I respond, infinitesimally, until I'm brushing him. His hands tighten for a second at that first contact, he jerks away. I look up, my eyes meet his, I smile and smiling, I deliberately ease closer to him and there is no mistaking what I am doing as I press myself against him, closer, melding my body to his and my lips part but I dare not whisper to him to kiss me. \n\n\"Martin.\" I whisper, gazing up at him. \"Martin.\" Nothing else. Just his name. He's hard. His jade stalk, it's hard and it's pressed firmly against me and in my high heels, my one and only pair, I'm taller and he's pressing against me where I'm so moist and hot and sensitive and I shudder with that delightful excitement.\n\n\"Chuntao,\" he breathes, and me moves against me and that slight movement sends ripples through me. Delicious ripples and I know what he is doing, my books have told me of acts like this and how friction will stimulate a man's jade stalk and after Hua, I know what this does to me and I welcome that delicious pressure. \n\n\"Chuntao,\" he groans, softly, moving again.\n\n\"Martin,\" I gasp, my breasts pressed against his chest and I move myself, my hips move, I move against him and his breath gasps outwards and he's moving more vigorously, rubbing himself against me and I'm trembling in his arms and his hands are holding me tighter.\n\n\"Chuntao... Chuntao... I love you... I love you.\" His movements against me are more obvious, he's breathing hard and I forget any pretence of dancing, my arms vine around his neck as he edges me back, back still further and we are out of sight completely, I'm pressed up against the wall and we are hidden, unseen, and I'm gasping with his movements and there's no pretence now that either of us don't know what he's doing.\n\n\"Yes,\" I gasp, \"yes,\" as he rubs himself against me. \n\n\"Chuntao?\" and it is a question, gasped in my ear as he moves as his erection is rubbing, prodding, big and hard.\n\n\"Yes, yes, it's alright, Martin. Don't stop.\" I look up at him, flushed, weak-kneed myself, not smiling. I don't feel like smiling, I just want him to hold me and move against me like he is doing, his jade stalk, his erection, big and hard and rubbing against me though our clothing and one of my hands brushes the back of his neck and I wonder what is going to happen and then I find out.\n\n\"Ohhhhhh, Chuntao... Chuntao.\" He groans in my ear, he crushes himself against me, he bucks hard against me once, twice, a third time and then he shudders, stiffens, his breathe gasps out, he groans again, juddering against me convulsively and then he relaxes, holding me but his grip is almost limp and his breath is coming in hot panting gasps.\n\n\"Martin,\" I breathe, resting my flushed face against his shoulder, the top of my head brushed by his lips as he shudders against me.\n\n\"You... you don't mind?\" He almost stutters.\n\n\"No,\" I say, very simply, because I do and I think I understood what has happened and no, I don't mind. It is part of love, it is natural and I don't know how to explain that at all and anyhow, now is not the time or the place to talk. Now is the time to hold each other and we do and I Think love him. I think? I know I do. \n\n\"I need to...\" Martin says, and he's still breathing hard and I smile.\n\n\"Yes,\" I say. \"I'll be here, waiting for you.\" There's a seat tucked away behind a curtain and I want to be alone, I don't want to talk to anyone. I want silence and peace while I absorb what has happened.\n\n\"I love you, Chuntao,\" Martin breathes again.\n\n\"Martin,\" I whisper, and I don't say it but I smile and he smiles and he's gone and I sink into that seat, still breathing hard myself and I'm weak and shivering with my own excitement and I close my eyes and imagine what it would be like to be naked with him as Hua and I were naked together and I very much think I would enjoy that a lot.\n\nI've only been sitting there a couple of minutes, my heart is back to normal, my breathing has slowed when I hear voices, and one of them is Mr. Cunningham's.\n\n\"Of course, my dear, just tell me what your problem is and I'm sure I can help you.\"\n\nThe other voice is Hua's, I'm sure it is but her voice is so soft and quiet I can't make out her words, but she's talking.\n\n\"I do understand, my dear,\" Mr. Cunningham says, and they're closer, they're in the alcove and I sit, almost concealed by the curtain, frozen, unmoving, not want to appear as if I am listening. Of course, I am listening. \n\n\"Can you help me?\" Yes, it is definitely Hua's voice, anxious, and through a crack between the curtains I can see them, Mr. Cunningham is dancing slowly with her in his arms and if his jade stalk is hard, Hua is close enough to know. \"I'll... I'll do anything you want.\"\n\n\"Yes, I could help you,\" Mr. Cunningham says, so quietly I can barely hear him and I watch his hand slide from Hua's waist down to her hip and rests there. \"You do understand what anything implies, don't you my dear?\" His hands moves up and down on her hip before sliding around to her butt and holding her there and then he pulls her firmly, unmistakably, against him. \"I don't want there to be any misunderstanding, it's a lot that you ask for, my dear.\"\n\n\"Oh,\" Hua gasps, and I gasp with her. My heart jumps as hers must be jumping. My eyes widen as Hua's widen.\n\n\"Anything?\" Mr. Cunningham asks.\n\n\"Yes, I understand,\" Hua says, very quietly, and she's looking up at him and I experience a moment of shock as I realize what she is offering and why. \n\nShe has not heard from her family for longer than I. Her school fee's, her boarding fees, I know they're overdue and how will she pay? She's been worrying about that for months now, there is no way for her to return home, no-one to help her, and I understand. This is her solution. Mr. Cunningham will pay, and she will give Mr. Cunningham what he so obviously wants from her and I want to cry for her. How I wish I could help, but I have nothing.\n\n\"Then I believe we have an arrangement that is satisfactory to both of us, Hua,\" Mr. Cunningham says. \"I'll speak to Mrs Innes and make sure she understands. There will be no need for you to say anything to her.\" His hand caresses her butt, slowly.\n\n\"Thank you, Mr. Cunningham,\" Hua says, and she actually sounds grateful.\n\n\"We'll meet next week,\" Mr. Cunningham says, looking down at her. \"I'll let you know where and when after I've met with Mrs. Innes and made the arrangements.\" He smiles. \"Once a week will be perfectly satisfactory for me without imposing too much on your schoolwork, Hua.\"\n\n\"Yes, Mr. Cunningham,\" she says.\n\n\"And I'd better circulate now, my dear,\" he says, patting Hua's butt. \"Don't want to start any gossip. And warn that pretty little friend of yours not to make herself so obvious with that boy.\" He chuckles. \"Lucky young dog.\"\n\nHe releases Hua, eases away, slips out of the alcove and as he turns, I can't help seeing. Yes, he has a massive jade stalk and it must be packed with his yin energy because it's enormous and my jade gate pulses hotly at the sight. I stay, frozen, watching Hua as she stands there for a minute before slipping outside herself. \n\nOnly then to I stand and slip out and over to the window. Were we that obvious, Martin and I? We need to be more careful. We can't risk meeting where anyone could see us. Not even at party's like this. I'm there, looking out into the garden, my thoughts in turmoil, when Martin returns, his voice soft and loving behind me.\n\n\"Chuntao.\"\n\nI turn, smile, step into his arms and we dance out onto the floor, mingling with the others and the evening continues on. I dance now with others, as does Hua, until we're tired and it's time for us to depart and it's Mr. Cunningham's car and driver that are returning us to the School.\n\n\"Tomorrow,\" Martin breathes as we part.\n\n\"Tomorrow,\" I smile. I'll talk to him then. Maybe he'll know somewhere we can go where there's no risk of him being seen by anyone he knows. I'm not worried about me. Outside of School, nobody here has any idea who I am and Chinese girls with foreigners, that's a common sight. They're not Chinese girls like me, they're sing-song girls but Martin knows I'm not one of those. That's all that's important.\n\nI hold Hua's hand in the car as we are driven to the School. Neither of us say anything, not then, not as we climb into our beds, not on Saturday morning as we prepare for our outing and I have a surprise now for Martin. There's somewhere I want to take him, I was handed the pamphlet last night as we climbed out of the car outside the school and this is something I want to go to.\n\n<center>* * * </center>\n\n\"Come with us, Martin,\" I say, excitedly, and yes, I'm so excited I'm bouncing up and down like a little girl and Hua is laughing at me. \"We're not going to watch a movie today.\"\n\n\"Where are we going?\" he asks, because I've already dragged him over to a rickshaw and give the rickshaw coolie the destination as I climbed in.\n\n\"North Szechwan Road,\" I say, holding his hand as Hua squeezes in on the other side of him. \"We're going to a speech by Jiang Qing, she's talking about Ibsen's \"Nora\" and how it relates to the position of Chinese women in China today.\"\n\n\"Sounds absolutely scintillating,\" Martin replies, smiling. I know he's laughing at me. I don't care. \"Who's Jiang Qing?\"\n\n\"She's in the news all the time,\" I say. \"She's a movie actress and she plays Nora in the play. She's been in some other movies too.\"\n\n\"Yes,\" Hua says. \"I loved her character in \"Blood on Wolf Mountain,\" she's so good and the way she played Yu Yueying in \"Goddess of Freedom,\" that was so inspiring.\"\n\n\"Oh, Chinese movies,\" Martin says, as if they were nothing, and he smiles down at me. \n\n\"We'll take you to one,\" I say. \"You'll see. Some of them are really good.\" Hua giggles. \n\n\"If you take me, I'll come, Martin says, looking down at me, smiling, squeezing my hand and I know he will and I love him so much and I rest my head against his shoulder as our fingers move, intertwining, caressing, and I love him so.\n\n<center>* * * </center>\n\n\"Who's the foreigner?\" one of the girls at the door to the teahouse asks as we go to walk in.\n\n\"He's a friend,\" Hua says. \"We asked him to come with us. He won't understand though, he doesn't speak Chinese.\"\n\n\"One of them? Oh alright, but you two, you shouldn't associate with foreign men. That only leads to one thing. Please be careful, sisters.\"\n\n\"Yes, we well.\" Hua gives me a barbed look and I shrug. She hasn't told me yet, but I know and her look annoys me a little. Martin is oblivious, looking around, fascinated. The teahouse holds an eclectic collection of men and women. Modeng girls in their western-style dresses and bobbed hair. Older women in qipaos. Students such as myself and Hua. Men in suits, some younger men. Students perhaps? A few workers in ragged trousers and shirts. \n\nAnd one European. Martin. Oblivious to the glances coming his way.\n\nA girl stands up at the front. \"Welcome,\" she says. \"Before Miss Qing gives her talk...\"\n\n\"What was all that about?\" Martin asks, three hours later, as we are leaving and I've been totally enthralled by Jiang Qing's speech and all the questions and answers that followed.\n\n\"Have you read Ibsen?\" I ask. \"She talked about his play, \"A Doll's House\", and how Nora is a model for modern Chinese women, the way she gives up being her husband's Doll to make her way in the world. Jiang Qing plays the part of Nora and she talked about her as an example for modern Chinese women.\"",
        "\"It's very progressive,\" Hua says, and she'd asked so many questions. \"I'd really like to go and see the play, it's still running.\"\n\n\"Me too,\" I say. \"It's so inspirational.\"\n\n\"Who's putting it on?\" Martin asks. \"I could take you both if you'd like to go.\"\n\n\"Would you? It's the Shanghai Amateur Actor Association. We better hurry back to school though. We need to get back before we're late.\"\n\n\"I'll get a taxi.\" He does, almost right away and it won't take long to get back and he turns to me and I'm in his arms, Hua beside me, forgotten as we kiss and his kisses are heaven and joy and delight and love, on and on until Hua coughs.\n\n\"We're here.\" She climbs out.\n\n\"I love you,\" he breathes. \"I love you, Chuntao,\" and he kisses me again, gentle and hard, lips sealed to mine, his tongue possessing my mouth as I cling to him.\n\n\"I love you, Martin,\" I gasp before, reluctantly, we part. \"I love you.\"\n\n\"You should be careful, Chuntao,\" Hua says as the guard passes us in through the side gate. \"Maybe he does love you, but that doesn't mean he'll marry you. You know the English. Emily's our friend here, but not many of them want anything to do with us outside of school. Marjory's family, they're an exception and her mother doesn't like us now.\"\n\nMarjory's father likes Hua a lot though, but I don't say that. I know what she means.\n\n\"I know,\" I say, \"but Hua, he loves me. He doesn't care that I'm Chinese and he's English. He loves me.\"\n\n\"His family cares,\" Hua says. \"The English care. His company cares, they won't permit it. It's okay for those Englishmen to have a Chinese girl, sing-song girls, girls like those ones, but marriage, no. They won't permit that. If they find out, they'll send him away. Don't get your hopes up, Chuntao\"\n\n\"I'm not a sing-song girl,\" I say, indignantly. My father had sent me here to Shanghai to a modern school, an American school, to become one of the New Women. Maybe not a Modeng girl, that's going too far, aping the westerners so completely, but an educated woman.\n\n\"Maybe not,\" Hua says. \"But the English won't see it like that. We're Chinese, Chuntao, nothing can change that. We're not part of his world and he's not part of ours.\"\n\n\"Things can change,\" I say, doggedly. \"He loves me and I love him. It can work. There are some Chinese girls that marry Europeans. Even Englishmen.\"\n\n\"Not many, and they aren't accepted,\" Hua says. She reaches for my hand. \"Just promise me you'll be careful, Chuntao. Promise me.\"\n\n\"I promise,\" I say, and I promise myself I will be, for this love is a many-splendored thing, a precious thing. Too precious by far to place at risk and I remember his jade stalk, his erection, pressed against me as we danced together. Pressed against me as we stood hidden in that alcove kissing, and the way he moved against me and shuddered and tensed and groaned and that look in his eyes, that look of love and I smile. \n\nThat night, late, after lights out, I can hear her crying quietly. I want to go to her bed, hold her, comfort her, but I don't. I don't know what to say, I have no idea how to comfort her and in the end her crying dies away and I sleep. \n\nShe has dark rings under her eyes in the morning and on Sunday night I do what we used to do when we were younger, in our first year here when we were thirteen, lonely and scared. I switch the lights out and I don't ask, I don't say a word. I climb into her bed and I take her in my arms and I hold her the way I held her when we were first at this school together, young and separated from our families, alone and frightened with only each other and I stroke her hair.\n\n\"Chuntao,\" she says. \"I'm so scared, Chuntao. I haven't heard from my family for so long.\"\n\n\"Shhhhh,\" I say. \"Sssshhhh,\" and I'm scared to because I haven't heard from my father for so long now either and I sing her an old cradle song my nurse used to sing to me when I was young and scared of the dark and Hua cries against my shoulder and holds me and we sleep together all night.\n\nWe sleep together and she shivers and cries in my arms. I know what she's afraid of but we don't talk about it. She doesn't say and I don't ask, for what can I say? There is nothing I can do. Nothing except hold her and sleep with her and do my best to comfort her and that is what I do.\n\nUnspoken is that knowledge we both share. \n\nThis is Shanghai, where life is cheap. This is Shanghai, where nobody cares if you live or die. This is Shanghai, where a pretty girl is just one more commodity to be bought and sold and Hua is lucky. She is in a position to make her own choices and we both know that the choice she has made is the best possible one she could make for what else is there? She and I, we have one thing we can sell. As the old Shanghai saying puts it, a girl has her skin and her smile, and when survival is at stake, you do what you must do.\n\nThat was the way it was in Shanghai in those days.\n\nYou did what you had to do to live.\n\nIf you didn't, you died.\n\nHua has chosen to do what she must, and she has chosen Mr. Cunningham as her means to survive. I hope he will be kind to her. I hope he will look after her and remembering the raptness of his gaze, I think perhaps he will. At the very least, he is better than any of the alternatives. Me? I hope to hear from my father soon, but if not, Martin loves me. Martin will look after me. He will save me from this sad fate that Hua has had to surrender herself too in order to live and now I cry silent tears for my friend for there is nothing I can do. No help I can offer her.\n\nNothing but hold her in my arms.\n\n<center>* * * </center>\n\nOn Sunday, I play my guqin, and already I think of it as my guqin. I play for Mr. Maynard. I play for him in the sitting room next to Mrs. Innes office. He sits there, drinking tea and listening to me play, watching me as I play. He asks me questions about the music, I speak to him of what I know and he listens. Afterwards, after I have played for two hours, he thanks me and leaves.\n\n\"Next Sunday, Chuntao,\" he says. \"You play beautifully.\"\n\n\"Next Sunday, Mr. Maynard,\" I agree.\n\n<center>* * * </center>\n\nOn Monday, Mrs. Innes ask Hua to be her office at eight that evening and I am sure it is to meet Mr. Cunningham. Hua's face is pale as we return to our room after classes are over. She bathes, she dresses in one of her qipao's, the one that she wore to the Cunningham's for that garden party just a few weeks ago. She slips on her high heeled shoes. She brushes her hair again and again and her face is so pale and it is almost eight.\n\nShe glances at me and at last she stands. I can't bear to see her so scared but what can I do. I stand myself, I take her in my arms, I hold her and only now does she say something.\n\n\"I'm scared.\" Her voice quavers.\n\n\"I know,\" I say, and she's trembling in my arms as I hold her. \"I wish I could...\"\n\n\"Oh, Chuntao,\" she says. \"I didn't think it would be like this.\" \n\n\"I know,\" I say. Except I don't, not really. \"I know.\" I know what she is doing. I know why, and her look says she knows I know without either of us speaking. \"I wish...\"\n\n\"It's alright, Chuntao,\" she says at last, and she takes a deep breath but she's still shivering and I know she's frightened and I feel a little sick myself. Sick and helpless and I am frightened for her. I want to help her, I want to do something but what is there that I can do? \n\n\"There's nothing you can do, Chuntao, and I have to do this. There has been nothing from my family for over a year now. I know I'm on my own and it will be worse if I don't do this.\" She swallows convulsively. \"He seems like a nice man and he has said he will take care of me. He has talked to Mrs. Innes. He has already made the arrangements, I am safe now.\"\n\n\"Ask him to be gentle,\" I say, and how I hope he is, for Hua's sake.\n\n\"He told me he will be,\" Hua says, squeezing my hand. \"I must go, he'll be waiting.\" She glances over her shoulder at me as she walks out the door and her eyes are haunted.\n\n\"I love you, Hua,\" I whisper. \"I'll be here for you.\"\n\nHer eyes thank me and then she is gone and I stand there, listening to her footsteps in the hallway as they fade into silence and only then do I cry.\n\n<center>* * * </center>\n\nI can't sleep. I am fearful for Hua, fearful of what must be happening to her. I lie awake in my bed, listening to the sounds of the night, listening for Hua's return but she doesn't come back and all I can do is think. These years together, four and a half years since we arrived here, we've shared our hopes, our dreams; our ambitions. I want to become an architect, I want to help design the buildings of a new China, a China once more taking her place in the world, strong and free of the foreigners. Free of the Japanese.\n\nA modern China, such as Sun Yat-Sen dreamed of. \n\nHua? She came here with such high hopes. \n\nTo go to University, study medicine, become a Doctor and that is where her heart is. She has always wanted to help people, I know that. We've talked, she and I. I know how much she admires the Chung-kuo Kung-ch'an-tang, the Communist Party. They are helping the people. Their aim is to liberate China from feudalism, to raise the peasants and the workers up, to create a new China where everyone has equality of opportunity.\n\nA new China where the poor do not starve to death in the streets, where girls such as us are not forced into prostitution or sold for the pleasure of men, where children the age of my little brothers and sisters do not slave in the silk factories, forced to scoop the silk from the vats of boiling water in which it is separated with their bare hands, the skin scalded and burnt and hanging in tatters. \n\nThey work like that to make money for the wealthy Chinese, for the foreigners who own these factories. Their skin is scalded from their hands. Day after day, their hands dart into the cauldrons of boiling water to retrieve the silk and they are in agony. Constant agony, their faces drawn and haggard and I know most of those children sicken and die, they have tuberculosis, they eat and sleep and live in those fetid factories, their only wage is their food and they work until they die from the tuberculosis or from the infections in their hands and when they die, their bodies are thrown into the streets to be collected by the death carts.\n\nThere is more. There are the children forced to work in factories where their gums turn blue and they die from lead poisoning within two or three years and for that short time, all they are rewarded with is barely enough food to survive on and a corner to die in. The young women from the countryside forced into prostitution. The coolies who pull the rickshaws, lucky to make enough each day to buy enough rice to live on, sleeping on the streets wherever they can find a space, dying from sheer exhaustion after a few years between the poles of the rickshaws they pull.\n\nThis is only some of the evil that the Chung-kuo Kung-ch'an-tang, the Communist Party, struggles to free China from. All of China. \n\nHua believes in them now. \n\nSo do I now, for in Shanghai I have seen enough.\n\nNeither of us talk about it, it's dangerous, we would lose our heads. \n\nAnd now, Hua, my friend, she too has fallen victim to Shanghai, for here, nobody cares whether you live or die. Hua has made her choice, she is strong, she has chosen to live and I hope she does not regret the choice she has made.\n\nNeither of us have heard from our families. The Japanese are advancing now, the war is open. There is fighting between the armies of the Kuomintang and the Chung-kuo Kung-ch'an-tang. Civil War. War with the Japanese as they advance towards Nanking. China is helpless, a fallen giant. Everything is in chaos. Hua and I, we are trapped in Shanghai and there is no escape. Perhaps her Mr. Cunningham will help Hua, perhaps he will not only look after her but help her to escape. Perhaps Martin will help me. I hope so, but in the end, we have only ourselves to rely on and war is everywhere.\n\nHow I hope he is gentle with Hua.\n\nI think of myself too, not just of Hua. I haven't heard from my family, not for months and Mrs. Innes has asked me. She's heard nothing and there are school fees owing, boarding school fees. Hua has found a way to pay hers. Will I have to do the same? My heart sinks at the thought, and now I'm shivering. Now I'm afraid for it dawns in me that if I do not hear from my father, I may have to do what Hua is doing. Like Hua, I have no family in Shanghai. Like Hua, there's nobody I can ask for help and now, in the darkness of the night, alone, I know that same desperation and fear that Hua must have been feeling.\n\nMartin. He loves me. I can talk to Martin. I can ask Martin for help.\n\nHe loves me and surely he will help me, and not in the way that Mr. Cunningham is \"helping\" Hua. Martin loves me. He hasn't said anything, but some Englishmen have married Chinese girls. It won't be easy. Not for him and not for me, but it has been done. It can be done if he has the courage and he loves me enough. I'll talk to him. Next weekend. I don't know how I'll explain it to him. Maybe I should just be honest but I have to be careful. He says he loves me. He says that every time we meet now but we've only known each other for a few weeks. I don't want to scare him away. \n\nI don't want to seem desperate.\n\nBut I am desperate.\n\nMartin loves me. I cling to that hope. That he loves me enough to save me. He's said he loves me. He's said that now so many times, and I see the way he looks at me. I'm sure he loves me enough to want to marry me and I love him too. I won't have to do what Hua is doing and I'm sorry for her, I truly am, but I'm sure now that there's an escape for me and I drift off to sleep thinking of Martin holding me and whispering that he loves me.\n\nI wake up in the early hours, dawn is still far away, jolting upright in my bed and the door is opening slowly. It's Hua, she stumbles inside and I can smell her from my bed even as I throw my quilt off and dart across the room to her. Her hair is dishevelled, she smells different. Of sweat, both her sweat and a man's sweat. Cigarette smoke. Alcohol. And something else. A different smell and I almost recognize it. She clings to me.\n\n\"Chuntao... Chuntao.\" Her voice is a whisper.\n\nI hold her, hold her tight as her body begins to shake. She sobs quietly as I hold her, as I stroke her hair. \"Come,\" I say. \"Come, sit down, I'll run you a bath.\" \n\nI lead her across the room to her bed. She walks slowly, wincing with every movement, almost as if she's injured herself and I'm sick with fear. What has Mr. Cunningham done to her? Was it that bad? I ease her down to sit on her bed and in the darkness she sits there, silent, but I know she's crying from her breathing and I don't want to leave her for a second.\n\n\"I'll run the bath,\" I say, stroking her shoulder. She clings to my hand for a second before releasing me. I hurry, almost running as I push the plug in, turn the taps on full and the water floods in, lukewarm and then hot and I return to her.\n\n\"Stand up,\" I say, taking her hands. \"Let me take this off.\" \n\nShe stands slowly, unresisting as I unfasten her qipao, ease it from her shoulders and she's wearing pretty silk lingerie I have never seen before. It's not what she was wearing when she left yesterday evening, a plain white bra and underwear. The bra is black, some sort of transparent material, accentuating her breasts, which are much larger than mine. Almost as large as the English and American girls here at school but far more beautiful. Full and firm. Hua has always been very proud of her breasts and I've always been jealous of them because mine are so small.\n\n\"He bought them for me,\" she whispers. \"He wanted me to wear them for him so I did.\" She reaches behind her back, unhooks her bra, lets it fall to the floor except I catch it and place it on the bed.\n\n\"Come,\" I say, quietly, taking her hand in mine and she follows me into the bathroom. The tub is half full, I adjust the temperature quickly, turn the taps off and she's just standing there, tears in her eyes. Tears that I see now, for I turned the light on earlier. \n\nShe has dark rings under her eyes. Her face is pale, strained, her lips puffy, her lipstick is smeared and I've never seen her wearing lipstick before. Her nipples are swollen, reddish brown as mine are, but now they are puffy and large, there are faint bruises here and there, on her tender skin, on her thighs.\n\n\"Don't,\" she says. \"Don't look,\" and she turns away and pushes her underwear down but I can't not see the dried blood on her inner thighs. Her sex is puffy, pink, inflamed and she turns away from me.\n\n\"Here, let me help you into the bath,\" I say, softly, holding her arm, helping her in and her scent is strong. Sweat and that cigarette smoke and that smell of a foreign man.\n\n\"Ow.\" She cries out once as she sits in the water and I do what I haven't done with her for a long time. I slip my own pyjamas off and I step into the bath and slide in behind her and I take the soap and begin to wash her back, slowly. Her shoulders first, then down her back to the water and she sighs and slowly, very slowly I feel her muscles relaxing, loosing that strained shivering tautness.\n\nShe leans back against me, her head on my shoulder as I shampoo and rinse her hair. She washes herself, slowly, carefully, and I hold her, I pillow her and when she is quite clean I help her out and I help her dry herself and slip her pyjamas on and I lead her to her bed and slide in under her quilt with her and I hold her. She is shivering now, but she smells of Hua and I hold her gently, saying nothing. She will talk if she needs to talk and I will listen and I will comfort her if that is what she needs, for I am her friend. Her sister.\n\n\"Sleep now,\" I say.\n\n\"He was gentle with me,\" she whispers, \"but it hurt when he put it inside me the first time. He was gentle though, up until the end. He cares for me, he cares for me, Chuntao. He told me he did. He will look after me.\" \n\nOnly then does she begin to cry and I hold her tight.\n\n\"Oh Hua,\" I say, and I am so thankful that at the least he was gentle with her and I hope he was, I hope he does care for her, I hope she isn't trying to stop me worrying, and I sing her that old cradle song, and she is exhausted, she is asleep before I finish and I hold her until I too sleep and I am still holding her when it is time to wake for breakfast.\n\n<center>* * * </center>\n\nI hear Mrs Innes' voice before I walk into our room after classes have ended for Tuesday. I hesitate, hand on the doorknob, listening.\n\n\"I understand, Hua,\" Mrs Innes says. \"I don't like this either, but we must pay the school fees somehow and I can't think of any other way, my dear. I'd help you myself but the school fees here...the Board of Governors, I have already asked too many times.\" She hesitates. \"I'm so sorry, Hua. I dislike this, but the alternatives, my dear, for a girl like you alone on Shanghai, they are so much worse. You don't know enough to work as a teacher, and a part-time job as a salesgirl won't give you enough money to survive, my dear. I'm dreadfully sorry, Hua, but there's nothing else I can do. God knows I've tried.\" \n\nMrs. Innes sobs. \"Mr. Cunningham assured me he would look after you, and he's already paid the arrears on the school fees. He will pay your fees going forward. He told me he will take good care of you.\"\n\n\"I know,\" Hua says, her voice a whisper. \"He told me. It's just...\" She sobs.\n\nI turn and walk away. I'll return later, after Mrs. Innes has left. When I do, Hua says nothing. Her eyes are red but she smiles and we study together as we usually do, after dinner. That night, I sleep with her and this time she doesn't cry, she doesn't shiver but she does cling to me. She sleeps. I sleep with her every night that week. It is Thursday night before she speaks of Mr. Cunningham to me."
    ],
    "authorname": "ChloeTzang",
    "tags": [
        "asian",
        "chinese",
        "virgin",
        "shanghai",
        "chloetzang",
        "18 year old",
        "first time",
        "whore"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/tales-from-old-shanghai-01"
}