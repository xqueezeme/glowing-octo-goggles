{
    "title": "I Didn't Text Him...Vodka Did Ch. 3",
    "pages": [
        "I call him a germaphobe, but that isn't exactly accurate. It's more complicated than that, just like everything else in life. I didn't actually find out the truth until a few months after we'd met, when I was head-over-heels in love with what I thought was the perfect man.\n\nHe seemed to be everything a girl could want in a man; educated, intelligent, striking if not good looking, well on his way to a successful career, and most importantly obsessed with me. There were a few small red flags, but I was blind to everything but the good in him.\n\nHe kissed me to within an inch of my life a few times a day, even if he had to drive across town to do it. So what if he never actually touched me. I could do without the public displays of affection and hand holding as long as he kept looking at me with a passion that threatened to light me on fire. No, I hadn't met his family, but we were new still, there was time. I was convinced he was just taking things slow.\n\nA few weeks before Christmas, and we were at a party. He was attentive but distracted the entire night and towards the end, we were standing off to the side when he suddenly tensed and excused himself. At the time I'd barely cared, I figured it was a work thing and took this as my opportunity to escape to the lady's room to freshen up.\n\nOn my way back to the party, I found a familiar looking man waiting for me in the hall. He had Lucas' grey eyes, and his smile would have been the same too had it not been for his perfectly flawless teeth. Whoever he was, he even had the same habit of holding up the wall with one shoulder, hands deep in his pockets, one foot crossed over the other. It was uncanny.\n\n\"Hello Addie,\" he said with the warm enthusiasm you reserve for old friends. \"It's great to finally meet you, I've heard so much about you.\" Pushing up off the wall he stepped forward and held out a large, inviting hand.\n\n\"I'm sorry, I don't believe we've met,\" I said cautiously trying to hold back my discomfort. With a hesitant smile, I took the offered hand, it was warm and firm, but in the same way a great hug can be. \n\n\"Not for a lack of trying on my part,\" he said with a laugh. \"I'm Mark Friesen, Lucas' brother.\"\n\n\"It's so nice to meet you,\" I replied. Instantly, I felt at ease and when he let go of my hand, I didn't immediately rush to step back and put distance between us. We talked for a few minutes about the party, my plans for Christmas, basically everything and nothing. I don't know how long we were there, but things quickly went from fine to terrible the second Lucas rounded the corner and found us together.\n\n\"What the fuck are you doing Mark?\" Lucas kept his voice low, but there was a level of animosity in him I wasn't prepared for.\n\nMark didn't even seem phased by it, and with his smile still intact, turned to greet his brother. \"You missed your appointment today Lucas,\" he scolded gently, \"we've talked about that.\"\n\nLucas closed the distance between us in a few long strides, using his body to force me to move back from his brother. \"And now you're sabotaging me?\" He snapped. Glancing down I watched his fists clench and unclench, wondering at just what could possibly cause this kind of tension between them.\n\n\"We've talked about this too lucas,\" Mark replied in an even, calm tone. \"The only one sabotaging things is you. If you're not honest with her, this will never work, and I know how much you want this to work.\"\n\nI took in everything from the compassion on his brother's face, to the raging anger painted across every in of Lucas' tense body. My stomach dropped into my shoes and I struggled to keep my breathing calm. \"What's going on?\" I asked quietly.\n\nLucas took a step back, forcing me to do the same. \"We need to go,\" he said over his shoulder to me. \"I should never have brought you here.\"\n\nMy discomfort was growing with every moment, and when he tried to direct me to the door I stepped away from him, causing a flash of panic to cross his face. \"What have you lied to me about?\" My voice was barely above a whisper but I knew he heard me when he all but shouted his reply.\n\n\"I haven't lied about anything.\" By this point in our relationship, Lucas knew about my trust issues. He'd already pulled from me the details of my failed relationships and knew how much I struggled to let him in. The same panic I was feeling was echoed in his eyes, he thought this was going to be the end and that scared the hell out of me.\n\n\"A lie of omission is still a lie Lucas,\" Mark said with kindness. \"It's not too late to be open, it's not too late to be honest and build from there.\"\n\n\"Shut the fuck up Mark,\" he bit back. For the briefest of minutes Lucas closed his eyes and took a deep breath. My flight reflex kicked in right about then and when I tried to move away from him, with wild eyes Lucas turned on me and then he blew my mind and reached for me. \n\nHis hands physically shook as his hands settled on my shoulders in an unforgiving grip to hold me in place. Over his shoulder I caught the look of gleeful surprise on Mark's face when he'd reached for me, but my focus was on the man anchoring me in place. \n\n\"Don't,\" Lucas whispered fiercely, \"Don't go. I'll tell you everything you just have to promise not to leave.\"\n\nIt was so out of character back then, for Lucas show anything other than complete control over every situation we came across. I was used to his unflappable calm, and the decisiveness that implied he had all the information he needed, and every confidence in his decision. He was the polar opposite to my anxiety and insecurity, but now, like this, he seemed even more fragile than I felt on any given day.\n\nDeep down, I was expecting the worst. That he had a wife, or a lover, a child maybe. Was he a criminal? Whatever it was my fear had kicked into overdrive, and I shook my head trying to move away despite the tightening of his grip. \"I can't promise that,\" I whispered in reply, \"I don't know what you're going to say.\"\n\n\"Trust Lucas,\" Mark said softly, \"trust in her and in yourself. Trust that your connection can survive this.\" I watched Lucas' lip curl in disgust when his brother spoke, but when he looked at me all I could see was fear and panic mixing with a wildness I didn't understand.\n\n\"It can't be that bad, can it?\" I asked softly. Mark shot me an encouraging smile and I frowned, I hated having an audience, as I knew Lucas did. But leaving me at the mercy of my overactive imagination would do none of us any good. \"Are you secretly married?\" I continued with what I hope sounded like teasing, \"attracted to men?\"\n\nBoth brothers gave the same short burst of laughter and I gave Lucas a worried smile that faded a second later. Letting go with one hand Lucas moved to rake his hand through his hair, a habit of his that was as familiar to me as my own self-soothing motions. \n\nOnly he didn't actually do it. As the hand came up to his face I watched his eyes drop down in horror at it and he visibly flinched, choosing instead to hold his hand out to the side like now it was too dirty to touch.\n\nWas he going to react with disgust every time he touched me? His eyes flipped up to mine and Lucas watched the reality of our situation dawn on me. This is why he didn't want to touch me.\n\n\"You have to have realized things aren't normal with me,\" he said with a worried, pleading gaze. \"That I'm not normal.\" One hand was still holding onto me, like he was the only thing keeping me from running away. The other was still hanging out in the middle of the hall, shaking as we spoke.\n\nI looked at him and slowly little pieces started fitting together. \"Are you talking about the food thing?\" I asked quietly, \"And the way you polish every piece of silverware with your napkin before touching it?\"\n\n\"What food thing?\" Mark asked, again Lucas closed his eyes and took a deep breath.\n\n\"He separates all the food on his plate so it isn't touching before he starts eating,\" I said, my eyes still fixed on the man hiding from me. \n\n\"I thought we were doing good with that,\" Mark said with a frown, \"When did that start back up again?\"\n\n\"Shut the fuck up Mark,\" Lucas barked. \"How am I supposed to do this with you nagging at me?\" Lucas couldn't see it but Mark held up his hands and actually took a step back. Lucas turned his focus back to me with pleading eyes.\n\n\"You don't shake anyone's hand,\" I continued. \"You always say you're coming down with something.\" My eyes moved to the unsteady hand hanging out to his side and I felt tears well in my eyes. \"You never touch me. You don't want to touch me.\" \n\n\"I want to touch you, I just can't,\" his whispered reply sounded like it was filled with years of heartache. \"I want it all but I just can't...\" \n\nThere was a long pause as I waited for him to find the words and when he couldn't his hands dropped in frustration. \"I can't do this,\" he grumbled before turning on his heel and storming off pulling out the bottle of hand sanitizer he carried at all times. Things were starting to fall into place..\n\n\"Lucas, you're doing so well, come back please,\" Mark called out. The worry on his face mimicked my own but I couldn't help but feel like it was me who was being abandoned. Mark turned to me with a sad smile, \"Believe it or not that's quite a bit of progress for us.\"\n\n\"What the hell do you think you are doing?\" I snapped at Mark, my upset quickly morphing into anger. \"Are you trying to break us up?\" \n\nMy own hands were shaking, my heart was racing and I felt a full blown anxiety attack in my very near future. I hated him in this moment, for pushing us into a conversation Lucas clearly didn't want to have and for choosing to do it here in public. \n\nLaughter rang out as a couple turned down the hall towards us, my first instinct was to panic. I was nowhere near ready to be seen, not with tears now rolling uncontrollably down my face. Mark was calm as can be and simply moved to stand in front of me, blocking me from their view. \n\n\"I'm not trying to break you up,\" he said softly when the people went into the bathroom. \"I'm trying help, I know it doesn't feel like it right now. You mean the world to my brother and I just want to give you every chance to be happy. How long would it have been before you started to think that the no-touching thing was about you?\"\n\n\"Isn't it?\" I asked.\n\n\"Lucas has Obsessive Compulsive Disorder,\" he explained quietly, \"it's not about you at all. He has compulsions and rituals that inhibit his daily life and affect relationships. He's worked to overcome a lot of these hang ups but it's a struggle, and he falls back from time to time. Usually when he's stressed and anxious.\" \n\n\"And that's why he doesn't want me to touch him?\" I asked, searching his brothers face.\n\nMark smiled and gave a little sigh, \"Honestly, he wants you too. I don't think you realize yet just how important you are to him. He hasn't willingly touched another person, even in our family, in about a decade.\" I'd looked away, and much the same way that Lucas did, Mark leaned over and caught my eye. \"He touched you today, he asked you to stay.\"\n\n\"And then he left,\" I whispered. \"He said he can't do this and he walked away.\" I turned and started walking the hall, in the general direction of the front door. Mark followed, his hands deep in his pockets in a very Lucas way.\n\n\"I think you could be the exception to his rules,\" Mark said softly, \"I'm hoping that if you decide to keep seeing Lucas, that you'll be ok with talking with me too. Not about everything, but keeping the lines of communication open between us.\"\n\n\"It would be weird to talk to his brother about us,\" I said, shooting him a worried glance. His smile widened a little and he nodded.\n\n\"I get that, and I wouldn't ask, but I'm his doctor too. Psychiatrist actually, Lucas doesn't feel comfortable with many people, but he's at a point now where he lets me help him.\" At the coat check, Mark waited with me while I got my jacket.\n\n\"And you thought that confronting him in public would be a good idea?\" I asked when we got outside. I shook my head and brushed a few tears away. \"That's pretty fucked up.\"\n\nHe had the decency to look ashamed, \"I over stepped, I'm sorry Addie.\"\n\n\"Thanks,\" I said waving down a cab, \"I get that you don't know me, but if you ever do something like this in public again I will never forgive you.\"\n\n\"I won't,\" he assured me. \n\nI gave a quick nod of good bye as a cab pulled to a stop beside me. A few hours later I was curled up on Charlie's couch, knee deep in a pity party of epic proportions and half way through a tub of Ben & Jerry's. \n\nI always ran to Charlie when things were too much. My uncle/mentor/boss has been my safe space since childhood. All the comfort of home without my mother's questions and judgements. He'd welcomed me with open arms, fixed me up with a glass of wine and a hot bath, then tucked me in on his couch. \n\nPoking his head in the door Charlie gave me his winning smile. \"I don't mean to alarm you darling,\" he cooed with compassion, \"but your man is pacing in front of our door talking to himself. You might want to go check on him.\" Charlie threw me a wink and jerked his head to the door. \"Go cut that love-sick boy a break.\"\n\nLucas was there alright, pacing back and forth on the front step muttering quietly to himself. I watched him for a while, taking in everything from his frantic hand motions to his haggard appearance which was just so out of character for him. \n\nIf I was entirely honest, this side of him scared me. It was like everything up until now was some carefully crafted persona and finally I was truly seeing him for who he was. I didn't understand this, let alone know if I could handle it. \n\nAs if he'd heard that thought, Lucas turned to look at me with that wild look that worried and excited me all at the same time. His eyes were heavy, like the dark clouds that filled the sky just before a big storm, like he was carrying the weight of the world on his shoulders. He watched me through the window while I decided whether or not to go out and see him, his eyes flicking between my lips and eyes searching for something. \n\nEventually I did open the door, closing it gently behind me as I stepped out into the brisk November air. When I went to speak, Lucas just shook his head, and with three long strides ate up the distance between us. Sealing his lips to mine he sucked all the fight right out of me, making everything right for just a moment with a beautiful, need-filled kiss that called to me. \n\nIt was an apology and a promise of what the future could hold, I was sure of it. So, I took a risk, reaching up slowly to try and hold him. My stomach clenched when he flinched, and I dropped my hands to my side trying to hide my unhappy sigh. \n\n\"I hate that I make you feel this way,\" he said softly, pulling back to rest his forehead on mine. \n\n\"What way?\" I took a step back, forcing a little distance between us. There was no hiding the tears filling my eyes, even when I looked away he followed me trying to catch my wounded gaze. \n\n\"Like I don't want to touch you, like I don't want you to touch me. You should never feel that way with me.\" He brushed his nose against mine and pleaded with me. \"If you let me take you home I'll do everything I can to make this better.\" \n\nLucas said it with such sincerity, clearly desperate for me to say yes, I comforted him the only way I knew how. Our kiss was brief and when I pulled back I felt like some of the tension had eased from my body. He looked a little calmer too, I gave a weak smile and waited for his eyes to move up to mine. \"Ok,\" I'd whispered, \"take me home.\"\n\nI felt the same sense of uncertainty back then as I did now, all because of that element of the unknown. Only now I know what waited for me at his apartment, I also knew what life without him was like. Tonight I wasn't sure just how badly had I hurt him. How much damage I had done, and if we could ever get back to where we were. \n\nWhile I was lost in my memories Lucas' phone rang and I could have sworn I saw his hand shake as he fished it out of his jacket. With a glance at the screen he answered it with a clipped, \"Hello Charlie.\". I watched him listen for a few seconds before he turned to me. \"Of course, she's right here.\" He handed me the phone, \"It's for you.\" \n\n\"Hi Charlie,\" I said softly, trying my best to hide my misery. \n\n\"Hey darlin',\" he replied. \"Your mama called me in one of her panic's, said Lucas dragged you out of the bar at Julie's birthday party. I just thought I'd call and see if you needed me to send in a search party.\"\n\n\"No,\" I said with a half-hearted laugh. \"No search party needed, I called him.\"\n\n\"Good,\" Charlie's voice took on a warmth he usually reserved for conversations about me, \"You know, waking up every day next to a guy who looks at you the way that Lucas does, is the best recipe for happiness I can think of. Why don't you take a long weekend, darlin'. I'll see you Tuesday.\"\n\n\"Thanks Charlie.\"\n\nLucas didn't take his phone back, so I held onto it. He did however, take a minute to correct me again, \"You didn't call me. I called you.\"\n\nMy sigh lingered between us long after I spoke, \"I told them what they needed to hear.\" We drove in silence for a few minutes before I had to ask, \"Where were you tonight?\"\n\nHe took a lot longer to answer than was comfortable and I started to get this sinking feeling in my gut. \"A work thing,\" he mumbled. I watched him run a hand through his hair again and a surge of guilt hit me. For as long as I'd known Lucas, his career was the most important thing to him, and here I was getting in the way of it again.\n\n\"Then you should drop me off at home,\" I replied, doing my best to keep the emotion out of my voice, \"this can wait until you're done.\"\n\n\"Shut the fuck up Addie,\" his words were nothing short of vicious as he whipped around in the seat to face me. \"I'm not dropping you off anywhere because I can't trust you to think for yourself. I can't trust that after ten minutes alone or, God forbid, with your nearest and dearest, that you won't change your mind again. You're so fucking weak when it matters the most.\"\n\nI couldn't do anything but sit there and take it, he was right. Underneath it all, that was my truth; I felt weak. For as long as I could remember I'd spent every waking minute of every day feeling like someone else could be handling this better, and 'this' was anything and everything.\n\nThere was someone more qualified to do my job, there was someone who would be a better daughter, niece, and friend. Someone else wouldn't have fucked up a relationship with the man of her dreams. Who ever she was could do it all and balance everything.\n\nThe bitch probably had a freakishly clean apartment too. She probably had a daily, weekly, and monthly cleaning checklist. I hate women like that, those women who seemed like they could handle it all. Especially when I was in my 30's and only felt like I could pull off one, maybe two of any of those things at one time. Everything else ended up rocky or in flames.\n\nHating yourself is easy when it feels like the only thing you're good at is letting people down. As we pulled to a stop outside his apartment, that was the overwhelming thought running through my head. I let Lucas down, Julie down, my mother down, the only person who didn't seem to hate me these days was Charlie. So, yeah, I felt weak.\n\nI could feel Lucas staring at me as I got out, but for the life of me I couldn't bring myself to lookup past the middle of his chest. When I moved to join him, he turned and headed to the door where he pulled a handkerchief out of his pocket which he used to open the door, push the call button on the elevator, and finally open the door to his apartment. \n\nIt felt exactly like that first time. The chest-tightening anxiety that made me sick to my stomach hit me before the door even closed behind me. That sudden burst of panic when he directed me straight into the bathroom on the right. Then the self consciousness and embarrassment when he motioned for me to undress. ",
        "Lucas disappeared, returning just as my dress floated down to pool at my feet, a bottle of mouthwash in hand. Just like he had before, only back then it had been a bag filled with shampoo, conditioner, deodorant, and perfume, all in the brands and scents I used. \n\nThen he'd blushed and explained that he needed me to smell like me after we showered, tonight he was quiet. Without taking his eyes off of me, Lucas reached over and pulled a toothbrush out of the holder by the sink. It hit me then, everything was still the same. That was my toothbrush. \n\nThe small pink bottle of perfume on the counter was the same one he'd given me for our third Christmas. My shampoo and conditioner were in the same place they'd always sat, and the blue kimono style robe hanging on the back of the door had been my first anniversary present. He hadn't changed anything in all this time. \n\nLooking back I found him still watching me, the hurt in his eyes shining more clearly now. I had a dozen questions I wanted to ask, but the words couldn't seem to make it past that lump in my throat. With hands that shook as badly as they had that first night I reached up to take off my bra then my panties. \n\nThis time I didn't close my eyes or cover myself in embarrassment, I had grown accustomed to feeling exposed and vulnerable with him. Lucas liked to watch me, it had been his favourite pastime once upon a time. So when his hungry eyes raked their way down my body, every ounce of me quivered with delighted anticipation. \n\nI was aching for him to touch me, but he didn't. Without meeting my gaze or tearing his from my body, Lucas leaned into the shower and turned it on. When the temperature felt right he motioned for me to get in, just like that first night. \n\nOnly now he wasn't leaning against the sink, arms crossed, watching me with what looked like tortured desire. Tonight he looked angry, putting down the bottle and toothbrush long enough to pull off his clothes, Lucas watched me furiously scrubbing with the loofah. \n\n\"Trying to clean me off of you?\" He grumbled, I turned away when he stepped into the shower. Choosing to close my eyes and face the wall instead of watching the water trail down his body. I wanted to touch him, I wanted to kiss every inch of his skin but I knew he'd never let me now. Fighting back my tears, I just scrubbed harder, it wasn't him I was trying to rid myself of. I just needed to be clean for him. \n\nI washed with the same attention that he did, it was second nature after all these years. After a few minutes he pulled the loofah out of my hands and replaced it with my toothbrush. \"Here,\" he said in a voice rough with something I couldn't quite name. \n\nI brushed my teeth and then gargled with mouthwash when he handed me that. The next thing I knew, there was a hand on my head, slowly pushing me to my knees. My heart ached but in that bitter sweet way and I welcomed him into my mouth with a soft moan. \n\nHis fingers wove into my hair and clenched as my tongue ran up the underside of his shaft. Lucas tasted better than I remembered, I eagerly took him deeper and deeper, desperate to make him forget. He couldn't forget though, every once in awhile I would feel him shudder and hear his small groan of frustration. \n\nEach time I felt the tears surge to the surface and tried to pull away. Each time his hands would tighten in my hair and holding me in place, Lucas would get a little more rough. Thrusting deeper, fucking my mouth a little harder, until that last time when he held me still so his cum could coat the inside of my mouth. \n\nI hate swallowing, it's never nice, the texture, the taste, the warmth it all combines to make me gag, and not in the good way, but I did it anyway. Knowing that he needed to erase the memory of that stranger, I swallowed everything he gave me. Praying it would be enough. \n\nWhen he pulled me to my feet, Lucas growled at me to, \"Turn and face the wall.\" I'd half expected him to make me brush my teeth again but he didn't. Instead he leaned in and pushed my hair to the side. \"Hands on the wall kitten,\" he whispered in my ear. \n\nI shivered but obeyed, closing my eyes as he took his time washing my hair, then conditioning it. My head dropped forward to rest against the cool tile as his hands slid the bar of soap over every inch of my skin. Lucas pulled away long enough to bring the removable showerhead closer and it's spray followed his hand as he explored every inch of me. \n\nMy moan of pleasure rang out echoing out a little too loudly in the small bathroom when both found their way between my legs. I arched against him, my head falling back to rest on his shoulders when he parted my lips and directed the spray on my most sensitive area. \n\nHis growl answered the call of my body and I marvelled at the hardening of his cock as it nestled its way between my thighs. How was that even possible when he'd already cum twice? For whatever the reason that didn't seem to matter, it was like he was determined to make up for lost time. \n\n\"You missed this,\" he whispered in my ear. He was right, my body was in tune with him on an almost cellular level. My nipples throbbed in the most intense and lustful way when a hand brushed against them. Lucas cupped my breast and thrust his cock between my thighs and along my core again. I shuddered with need. \n\nThe spray suddenly left me and there was a cry from my lips at the loss of sensation. Lucas kissed the side of my neck and quickly replaced it with a hand. I was oblivious to the cooling water, I didn't care that goosebumps were forming along every inch of bare skin, or that my nipples were almost painfully cold. All that mattered was the precipice he was pushing me towards with every stroke of his finger on my clit. \n\n\"Please,\" I begged, angling my body in a shameless attempt to bring his throbbing cock inside me. \n\n\"Please what?\" He asked, sliding his delicious length along my now soaking slit. \"What do you want Addie? Tell me what you need and I'll give it to you.\" \n\nI moaned, but held still while he thrust against me over and over. One hand moved to brace himself on the wall, the other continued his attack on my clit. He seemed to be content to just rock against me, meanwhile I was standing there shaking with an almost uncontrollable need. \n\n\"You know what I want,\" I gasped when he scraped his teeth over my skin. \n\n\"But I need to hear it, and you like to tell me.\" He held out on me, playing my body like it was an instrument and he was a musical prodigy. Intuitively knowing just where to touch and when, pulling the most beautiful sounds of need from my lips. \n\nI held out too, there was this energy between us. Caused by too much history to just instantly get back to where we had been, and while he was pushing me to cave and to expose myself to him. Deep down I was reveling in the torture of hanging on the ledge between madness and release. \n\nHe knew it too. Lucas could always read me like a book, he knew exactly what I needed to push me over the edge. He also knew just how much I liked moments lIke this to last. So, he kept up the same maddening pace until I couldn't do it any longer and the words burst from my lips.\n\n\"For god's sake just fuck me already!\" I all but bellowed in frustration. There was a moment when all I could hear was the falling water bouncing off the tile, then a loud slap startled me and pain exploded across the side of my ass. \n\n\"Wrong answer,\" he growled fiercely in my ear. \"You know better than that.\" His rocking never slowed but the fingers mercilessly circling my clit became angry and unforgiving. \"Be careful how you speak to me or I'll just make you cum without it.\"\n\nI sobbed with need and pushed to get free of his grasp, he just latched onto my hip and ground against me even harder. My nails scraped against the tile and Lucas mimicked the action on my thigh making me shiver with pleasure as his nails dug into my skin. \n\n\"I'm sorry,\" My gasping reply was equal parts arousal, regret, and desperation. \"I just need you so much it's been so long.\" \n\n\"Why did you wait so long then?\" He whispered, \"I've been here waiting for you.\" My body throbbed when he said that. I was aching for him to keep giving me what I needed, because yes I needed this torture just as much as I needed the pleasure he would give me soon. \n\nThere was no lying, there was nothing to do but close my eyes be honest. \"I'm weak, just like you said.\" \n\nOne of his hands tensed on my hip, the other pressed a little harder on my aching clit drawing a quiet scream from my lips. I felt my knees wobble and so did he, wrapping an arm around my waist Lucas positioned himself at the throbbing opening to my sex.  \n\nI was so close to the edge it was uncomfortable and I found myself writhing between his burning heat and the cold tile. \"Please let me feel you inside me,\" I moaned, trying to push back and force him inside my weeping body. \"Please bite me, I need to feel it again, even if it's the last time.\"\n\nThose last words were nothing but a whisper, my greatest fear spoken aloud. That maybe he was holding back because this was secretly just his form of revenge and tomorrow he'd kick me out and I'd never see him again. I never meant to say it, I was just so far past any semblance of control that it had just slipped out. \n\nThere was only the slightest tensing of his body around me before he let his mouth drop to my shoulder and murmured, \"Ask me properly Kitten,\" against my skin. My heart ached when I heard his name for me, I needed to hear that too. \n\n\"Daddy,\" I gasped feeling him give that skin a gentle nip in unspoken reward for doing as I was told. \"Daddy please let me feel your cock inside me,\" it ended in a moan of delight as he sheathed himself inside me without a second more of hesitation. My body quivered and shook as my sex throbbed around him pushing us both further towards inanity. \n\nHe groaned into the crook of my neck and struggling to hold himself still inside me. \"Good girl, how does that feel?\"\n\n\"So good,\" I sobbed into the tile. \"Oh god, please don't stop. Daddy, you feel so good.\" \n\nEvery time I called him that name, his cock twitched inside me and my body milked him in response. Another series of gentle nips trailed up to my ear and I shivered when his lips pressed against it. \"What else baby? What else do you need?\"\n\n\"I need your mark,\" I answered, \"I want to feel it when you cum inside me.\" He stilled and I held my breath. We hadn't talked about this yet. This new habit he had for slipping inside me without protection. I hadn't told him yet that I liked it, but maybe I didn't need to. Just the thought of him cumming inside me was pushing me closer to orgasm, my hungry pussy clung to him over and over begging for it. \n\n\"Dirty girl,\" he growled in pleasure. \"That's it, milk my fucking cock.\" Eventually he started moving again, pinning me to the wall and driving us both to madness. \"You dirty fucking cum slut.\"\n\nMy heart seized and a strangled sob got caught in my throat at his words. Lucas heard all the things I didn't say with it and quickly changed tactics. With a kiss he gently bit the skin on the back of my neck, just hard enough to turn my sob into a moan.  \n\n\"I love how hungry you are for me baby. I love how your body keeps begging me for more. You do still want more don't you?\" I nodded my reply and was rewarded with a nip at my ear. \"Good girl, you're going to want more long after tonight aren't you?\"\n\n\"Yes,\" I gasped without hesitation. \"Always.\" \n\nHis cock twitched again. \"I'm going to cum inside you again,\" he promised me, \"and don't think I've forgotten what time of the month it is baby. Tell me, did you ever find a birth control that didn't fuck with your anxiety?\" \n\nThe sounds he was pulling from me were almost possessed, but still he dragged it on. Whispering in my ear all the things he was looking forward to doing now that I was home. Then finally his thrusts became short and erratic, my body throbbed as I anticipated my reward. \n\n\"Please,\" I begged. \n\n\"Yes bitch,\" he growled in reply, moving his mouth to the back of my neck, \"beg for it.\"\n\n\"Please fill me,\" I cried, \"mark me.\" Each thrust now slammed me into the wall. My back was arched at a painful angle and my legs were unsteady and shaking. I was starting to think I was at that point where I was too far gone to cum, And cried at that awful thought. \"I can't...I need...oh god, Lucas please.\"\n\nA sharp, blinding pain consumed me seconds before I shattered and fell in oblivion. Lucas gave a yell and thrust one more time until he was lodged painfully inside me pumping jet after impossible jet of cum deeper than I thought possible. The whole time he held the back of my neck in his mouth like some feral cat holding his mate still while he fucked her. \n\nHe held me there, one arm around my waist, the other gently cupping my throbbing sex. Our breath was coming in frantic pants and neither of us wanted to break the moment. So much so that when his grip on my neck lessened and he tried to move away, I let out a tortured sob and for the first time moved my hand from the wall to pull Lucas back. \n\n\"You can't go, you can't leave me.\" I could hear myself and the part of me no where near in control, cringed at how weak and pathetic I sounded. \"Please don't leave me, I'm not ready for this to end.\"\n\nI was instantly this sobbing, blubbering mess. The pleasure and pain mixed together with all my fears, anxiety, and exhaustion, then topped off with a more than a healthy dose of alcohol brought me to a terrible place. Lucas stood there in shock for a minute before reaching over to turn off the water. \n\n\"Hush baby,\" he murmured to me, \"I'm not going anywhere and neither are you. We just need to dry off, I want to take you to bed.\" \n\nIt was surreal having him pick up my pieces, to gently put me back together. I hadn't crashed this bad since our early days, but he handled it seamlessly. Pulling me out of the shower Lucas dried my hair and then my body with a reverent touch. He dressed me in my robe and had me stand, sniffling, on the side as he wiped down the shower, threw the towels in the washer, and washed his hands. \n\n\"Ready?\" He asked, glancing over at me. He dried his hands on a new towel and led me to bed, his hands rarely leaving me, like maybe he too thought he was going to wake up and find this a dream. \n\nI slid into his bed and stifled another sob. Lucas just slid in behind me and turned off the light without saying a word. We lay there in the dark for a stretch of forever, me curled on my side away from him crying softly; and Lucas on his back, hands folded across his stomach, staring up to the darkness. \n\n\"If you tell me what you need...\" it kind of faded off there, like he couldn't quite promise to give me anything I wanted. Which of course only made me cry more, and the hole I was praying for, never showed up to swallow me whole. \n\nI fell asleep like that, wallowing in my misery. Some time in the night I woke, wrapped in warm arms, my head pressed against his heart. Lucas' hand trailed up my spine, stopping to brush against the tender skin at the nape of my neck. \n\n\"This doesn't change anything,\" he spoke softly to the darkness. \n\nMy heart ached, but I chose to hug him closer and ignore it. \"It changes everything,\" I replied with a tired smile."
    ],
    "authorname": "aFutileResistance",
    "tags": [
        "daddy dom",
        "shower",
        "jealousy",
        "begging",
        "biting",
        "orgasm control",
        "dominant male",
        "female submission"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/i-didnt-text-him-vodka-did-ch-3"
}