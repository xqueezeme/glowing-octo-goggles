{
    "title": "Ryan Ch. 12",
    "pages": [
        "As Ryan slowly came awake he had the distinct feeling that he was being watched. Not unfamiliar with the sensation, he smiled. \n\nOpening his eyes leisurely, he saw the beautiful brown eyes of his wife, but now they were reflected in the faces of their four year old twins, Christopher and Gabriela. \n\nSeeing that he was awake, the twins said in unison, \"Hi, Daddy.\"\n\n\"Morning, brats,\" Ryan said, reaching out to ruffle their hair. These two were a handful, but you couldn't find two sweeter kids on the planet, in their father's opinion. \n\nGabby was a tomboy who often fooled people with her love of girly clothing. When she got older there was no doubt that her wardrobe would rival her mother's, but keeping her clean was another matter. She was a rough and tumble kind of girl who wanted to do everything her brother did. She'd gotten as many bumps and bruises as Christopher to prove it. \n\nChristopher was every boy; he wanted to be like his daddy. He even had his own set of camo wear. As tough a kid as he was, he was always gentle with his sister and tried to protect her. The little angel, however, sometimes made it difficult for him. But they were a team and got along well with each other and with other kids. \n\nFeeling Christopher pat his shoulder, Ryan gave him his attention. \n\n\"Mommy said to see if you had woken up, but not to wake you. Are we in trouble?\" he asked with a small frown. \n\n\"No. You're not in trouble,\" Ryan assured him. \n\nGabby crawled into the bed and kissed Ryan on the cheek. She was quickly followed by Christopher who did likewise. The kids were very loving and secure in their parents love. \n\nSometimes they would knock on their parents' door when they woke up in the morning. Dani would make breakfast while the kids entertained Ryan or vice versa. \n\nThere were changes in their lives, but they were good ones. One thing that had to be remedied right away was the sleeping arrangements for the twins. All of the guest rooms were on the far side of the house, too far away for young children. To help the situation, Dani moved her studio to one of the guest bedrooms and the large den, which was close to the master bedroom, became the twins' room. \n\nIn the back of their minds, Ryan and Dani thought their sex life would be severely curtailed when they became parents, but thankfully, with a little planning and creativity they still enjoyed a very erotic and romantic sexual relationship. \n\n\"Where's mommy?\" Ryan asked.\n\n\"She's changing Jordan's clothes. He spit up all over,\" Christopher said.\n\n\"Ewww,\" exclaimed Gabby.\n\nGabriela was too refined to tolerate spit up, but she didn't mind getting grimy and squashing bugs. Ryan thought she was quite the paradox. \n\nYawning he asked, \"Have you guys eaten breakfast yet?\"\n\nBoth twins nodded, yes. \n\n\"Mommy said she would make you breakfast when you got up. Are you getting up now?\" Gabby asked.\n\n\"Yep, I'm getting up. You can tell mommy I'm awake and I'll be out in a few minutes. Tell her I need coffee,\" Ryan instructed.\n\nBoth twins nodded, said \"Ok, Daddy,\" and scrambled off the bed to deliver the message to their mother.\n\nRyan lay back, reflecting for a moment.\n\nThe time leading up to the birth of the twins was peaceful for the most part. They decided not to learn the sex of the babies before their birth. However, that didn't mean that the debate among the family members didn't go on for months. In the end, they were all surprised that the babies weren't both boys.\n\nDani was on bed rest for a month, but at thirty nine weeks, labor was induced. Ryan stayed home the entire time and conducted business from his office there. They had plenty of volunteers, but he needed to be near her to make sure she was all right. If anything happened, he didn't want to receive second hand information. \n\nIt was a great time for both of them, filled with laughter, love and long talks. It was during those times that the reality of children hit them. They talked about their fears and expectations and the type of parents they wanted to be. \n\nIt was a heavy responsibility, but it was one they accepted gladly. \n\nThe only thing to mar their happiness was the sentencing of Keith Hall. Dani decided that she wanted to speak during the sentencing phase. Ryan was adamantly opposed because of her condition and on general principle, but she'd explained to him that this was something she needed to do for herself, not Keith. \n\nShe'd told Keith that she forgave him, but had she lost the babies, she wouldn't have been there and she might not have ever been able to forgive him. He hung his head at that point. She asked the judge to take in consideration his background and personal issues. She said it wasn't an excuse for what he did, but she did feel sorry for him and what he had gone through. \n\nThat being done, she never talked about Keith Hall again. It was in the past, one that would never be allowed to influence their future again. She was at peace now, which was the reason behind her actions. She wanted to purge herself of the bad feelings she had toward him.\n\nKeith was sentenced to seven years in prison. If he kept out of trouble, he could possibly be out in five. He would have on going psychiatric sessions and evaluations for the duration of his sentence.\n\nWith that chapter closed in their lives, there was an abundance of good news. \n\nWhen it came time for the babies to be delivered, Ryan was in the delivery room with Dani putting to use his Lamaze training as her coach. She'd been a trooper, although Ryan felt a bit squeamish. He'd been in the military and saw horrible things, but those things weren't happening to Dani. He did manage to keep from passing out, but just barely. \n\nChristopher was the first to be born; Gabriela was born four minutes later. Both were healthy with Gabby weighing a little over five pounds and Christopher almost six. \n\nCrystal married Isaac two years after the twins were born and she was now six months pregnant.\n\nCaleb found happiness with a woman who loved him to distraction. \n\nMicah and Amanda were engaged and planning their wedding.\n\nHaley had another baby, a girl, Melinda Rose. \n\nNow as Ryan pulled himself out of bed, he reflected on the time he and Dani went back to the beach house. It was a wonderful two weeks and the first time they'd been away from the twins for more than a day. The kids stayed with his parents who spoiled them to no end. Their time at the beach was an especially sweet memory because it was there that Jordan was conceived. \n\nThe twins both had light brown hair with Ryan's features and temperament. Jordan had dark brown hair with hazel eyes inherited from his grandfather, Michael. His features were a mix of Dani's and Ryan's. He was a happy baby, calm and peaceful no matter what was going on around him. \n\nRyan got up and quickly took care of his morning ritual. When he got to the great room, the twins were watching cartoons and Dani was cleaning up their earlier mess with Jordan watching from his high chair. \n\nWalking up behind her, he slipped his arms around her waist and kissed her neck. \"Morning, baby,\" he said breathing in the sweet scent of his woman.\n\nTurning in his embrace, Dani wrapped hers around his neck and gave him a long thorough kiss, the loss of which made Ryan grunt when she pull back. \n\n\"Damn!\" he groaned.\n\nEasing out of his arms, Dani promised, \"Later.\" \n\nThen she asked, \"What do you want for breakfast, sweetheart?\"\n\n\"French toast with two scrambled eggs, bacon, orange juice and that heavenly coffee I smell brewing,\" Ryan answered, followed by a swat to her still luscious ass.\n\nGasping in pleasure, she looked Ryan in the eyes and asked, \"You do know you're playing with fire, don't you?\"\n\n\"Uh, huh,\" he replied with a crooked grin, \"and I'm looking forward to the inferno.\" \n\nThey'd been together more than six years and were just as crazy for each other as they'd ever been. Keeping that relationship alive with kids took work. But they were more than just parents; they were lovers who intended to always make time for the physical side of their relationship. \n\nDani never went back to work. She put in her resignation and sold her condo shortly after her 25th birthday. She wanted to be a full time mother and wife. That was a great decision as far as Ryan was concerned, but he would have worked with whatever made her happy and fulfilled. She told him there was no contest; it was him and the kids. In the years since, she'd proven just how deep her love and commitment to them was. \n\nHearing Jordan make a happy gurgle, Ryan took him out of the high chair, cradling him in his strong arms. When he tickled the baby's belly, he elicited a laugh from his son who waved his arms and wiggled in his embrace.\n\nJordan was just shy of a year old and soon would be sharing the bedroom with his siblings. For now, he was nicely ensconced with his crib set up in the large alcove in his parents' spacious room. Like the twins, blessedly, he slept all night. \n\nRyan held the baby snugly and went over and sat on the sofa. The twins, lying on the floor on their bellies, looked behind and caught sight of him. They got up from the floor and joined their father on the sofa, taking up residence on either side of him. They continued to watch TV, content with just being close to him. \n\nDani watched from the kitchen, her eyes filled with tears as she thought of the wonderful life she had. She still laughed whenever she thought that something as mundane as her fascination with home improvement stores led to this unexpected treasure. \n\nIt was a treasure and a pleasure that would continue through many years as she and Ryan raised their children and hopefully enjoyed grandchildren. Life had given her more than a dream, because she'd never possessed the ability to dream on such a grand scale. \n\nLife had given her the world. \n\nAs Dani watched them she remembered the promise that she and Ryan made to acknowledge their love for each other every day. They kept that promise and now they included their kids. Their children would never doubt their love no matter where the journey of life led them.\n\nDani sighed and said a silent prayer for the blessing that was Ryan Sinclair and the life he'd made possible for her and their family.\n\nIt was a life that would continually unfold as each of them was nurtured by this endless circle of love. \n\n*\n\n*\n\nWe've made it to the end and what a ride it's been. I'd like to thank all of you for your support and encouragement. I've enjoyed writing this story and was pleased with your response. Thanks again. "
    ],
    "authorname": "MissPrimrose222",
    "tags": [
        "wm/bw",
        "white man",
        "black woman",
        "interracial novella",
        "interracial romance"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/ryan-ch-12"
}