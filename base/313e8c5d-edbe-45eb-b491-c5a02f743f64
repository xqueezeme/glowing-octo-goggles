{
    "title": "My Sister's Friends Ch. 02",
    "pages": [
        "If you have not read \"My Sister's Friends\" this will make no sense to you. I suggest you read it first and then continue on with this selection. Thank you for your interest. \n\nThis is not a quick jerk story. Neither is it hardcore sex. It is a story of a young man with Cerebral Palsy and how he learns about love through his sister's friends. I have included it in \"First Time\" because I thought that was the best fit, although there are elements of Group Sex, Exhibitionist and Voyeur, and Incest involved.  How much of this story is true I will leave for you to decide. Names have been changed to protect the guilty. It will be multiple parts. Constructive feedback is appreciated. \n\n\n\n\n\nKate lay there on the floor quietly, breathing very slowly and softly as I looked at her in awe. My sister Kay, Jasmine, and Shellie looked stunned. After a couple of minutes Kate opened her eyes slowly and looked at me with a broad smile. \"Wow! I didn't know that was possible. Where did you learn to do that?\" \n\n\"I don't know. It just felt right, and I thought it was fun. Did you like it?\" \n\n\"I loved it.\" She reached a hand out and rested it on my thigh. \"You are different than any guys I know! Every other guy I've been with has been interested in getting in my pants and if I get anything out of it, fine, but he isn't really concerned. You acted like all you wanted to do was give me pleasure.\"\n\nI was embarrassed at what she said. I was amazed to be looking at only the third set of breasts I had ever seen, and all of them within the last three hours. Not only that, but I had spent quite some time licking and kissing hers. Sensory overload was not exaggerating my condition at the moment. No girls had ever been interested in going out with me, and I had pretty much written off any idea of an actual physical love life because of my Cerebral Palsy. I mean, what kind of girl wants to go out with a guy with bent legs, who can walk, but awkwardly, but certainly can't dance. I could speak better than most guys with CP, and get around better, but still, I was awkward, and my speech was slurred. My hands worked, but clumsily. No, I was not what the girls were going to be looking for. My relationship was going to be with Miss Hand and her five gnarled and bent sisters.\n\n\"No one taught me anything. Yes, I wanted to give you pleasure! That was all I was after. I've never seen a girl's breasts before today, and yours are beautiful. I never thought I would get to touch them. That was an experience I'll treasure all my life.\"\n\n\"You've never seen a girl's breasts before today?\" asked Shellie, unbelievingly. \"Don't you even look at porn?\"\n\nI hung my head and admitted, \"Yes, I look at porn sometimes, but what girl is interested in going out with me? A guy like me isn't what any girl wants to go out with. I understand. Most aren't rude about it, but they just aren't interested.\"\n\nKate sat up and gave me a hug. The feeling of her breasts against my chest was heavenly. \"I'm sorry, Jared. I never even thought about it. I didn't mean to be shallow, but I guess I paid too much attention to how a guy looks and never even considered it.\" She acted in no hurry to put her top back on. \n\nShellie said, \"So, Kate, you going to make this a topless afternoon?\"\n\n\"I hadn't planned on it, but after what Jared just did for me I think I can let him see my boobs for a while if he wants too. Would you like that, Jared?\" She hugged me again and kissed my cheek, then nestled her cheek against mine for a minute.\n\n\"I'll try not to stare.\" I said. \"But I make no promises.\"\n\n\"Stare all you want. I don't care.\"\n\nShellie reached around her back and unfastened her top. \"Let's all give Jared a treat today. What to you girls say?\"\n\nKay turned scarlet and said, \"But he's my brother! I can't be letting him look at my boobs!\"\n\n\"Oh, come on, Kay. Surely he's seen them before, hasn't he?\" said Shellie. \n\n\"No, I had never seen them before you pulled her top off.\" I said.\n\n\"Well, it's not like it is sex or something.\" said Shellie. \"My brother sees mine every once in a while. Since we went to Jamaica it doesn't bother me anymore.\"\n\n\"I don't know. I still think it is weird to be topless in front of my brother and other people.\"\n\nJessica sat looking at the floor with a sad look on her face and didn't say anything.\n\n\"What's the matter, Jess? Come to think of it, yours are the only ones Jared hasn't seen. Don't you want to give him a thrill, too?\"\n\n\"He won't care to see mine. Mine are so little I might as well not have any for all the attention the guys pay me. I'm not like you three! You have something worth looking at. Mine are barely even there.\" She put her hands over her bikini top as if to demonstrate they were nothing worth seeing. I on the other hand thought totally differently, and said so.\n\n\"Jessica, I think you have the perfect size breasts! I've had a hard time not staring at them all morning!\"\n\nJessica gave me a one-sided grin and said, \"I did notice you checking out my nipples in the cold water, and it looks like you are having a \"hard time\" all right!\" That got the girls giggling, and had me blushing again. \"Are you just trying to be nice? No guy has ever said he liked my tits before.\"\n\nI nodded, and swallowed a lump in my throat. \"As little as you are, you would look funny with great big breasts. Yours are perfect on your frame. I really like them, though I shouldn't be saying it.\"\n\n\"If you really think so, I guess I will show them. You've been a great sport today.\" She reached behind her back to untie her top, looking me in the eye as she did so. \"Here goes.\" Her ties came undone and she slowly pulled it loose from around her neck with one hand while holding it in place with the other. She let the top ties drape over her forearm and pulled the lower ties loose. I was as excited as a little kid at Christmas when he sees what looks like a bicycle wrapped under the Christmas tree. \n\nI was trying very hard not to be rude, staring at her, but it was very difficult. I know I was salivating, and I had to keep swallowing. Jessica colored and the blush extended down from her face to her neck and on down to her chest as she took a deep breath and slowly, so slowly, lowered her arm and her top. Her breasts slowly came into view. Yes, they were small, basically large swells on her chest that my large hands would smother, but to me they were the most beautiful things I had ever seen. I always preferred small to mid-sized boobs whenever I looked at porn on the internet. I wanted to reach over and suckle them, but I kept my hands to myself. Finally, her nipples popped into view and I almost gasped. She might have had small breasts, but the nipples were anything but small! I had already known they were big from seeing them poking through her top, but this was amazing.\n\nJessica dropped her arm at last allowing me to see them in their entirety. I know I was looking at her slack-jawed, but I couldn't help myself! \"Those are amazing!\" I croaked. \"They are absolutely beautiful!\" Her nipples were slightly puckered from the stimulation of all that had been going on, and the nipples jutted out proudly from her breasts. You remember how big the pencils we used in Kindergarten when we were learning to write? Well, her nipples were at least as big around as the erasers on those pencils! Not a regular number two pencil, but those great big things little kids use. I was totally awed!\n\nShellie took advantage of everyone's attention being riveted on Jessica and me and slipped behind Kay and grabbed the strings on her top and gave them a quick pull and pulled her top off, freeing her breasts as well. I knew I was going to be in for mammary overload for sure! Kay quickly covered her breasts with her hands and said, \"No fair! He's my brother!\"\n\n\"I think he knows that. Like I said before, this isn't having sex. It is just looking. After all, you yourself said it was a rush knowing he saw your boobs a while ago.\"\n\n\"I know. It was a rush, but it still feels wrong.\"\n\n\"Ask Jared if he likes it or if he wants you to put your top back on.\" Shellie looked over at me and winked as I looked back and forth between her and Kay. \"What do you think, Jared? Do you like the looks of her tits, or not?\"\n\nI hanged my head a little bit, but looked up at Kay and said, \"I think they are very nice, Kay. I like them very much.\" I mean, I know she is my sister, but for crying out loud, they were tits, and I had been on a starvation diet for twenty years! I didn't care if they were my sister's or not. I liked seeing them. Seeing them in the flesh was so much better than anything I had ever seen in a magazine or on the internet. Kay blushed, but slowly she lowered her arms and allowed me to see them in all their glory. From all the porn I had seen I expected them to all look basically alike, but I found a big surprise here. Other than the size differences, each of the girls breasts were distinctively different.\n\nKay had the largest set of the four girls, with a C cup, but they were also the softest looking, and somewhat droopy compared to the others. She was one who was going to have saggy breasts as she got older, and of the four was the one who most needed a bra to keep them up. I'm not complaining, mind you! I thought they were beautiful. They were a bit more than a handful for my big hands with pale areolas about the size of a quarter and soft nipples that barely protruded. I know they weren't stimulated, and I know they could poke out more than that, in fact I had seen them poking out in the cold water, but they were not as prominent as the others.\n\nShellie had a large B cup size that would be a good handful for me, and she had puffy areolas that were soft looking and had little tiny pointy nipples. Of the four, her nipples were the smallest, being smaller than a number two pencil eraser and were pink. They looked like they would be fun to suck.\n\nKate's are also a B cup, maybe just a skosh smaller than Shellie's, but with a prominent nipple and dark brown areolas that were at least the size of a silver dollar. I already knew they were firm, yet soft and wonderful to lick and suckle. Her breasts were a delightful shape, with the nipple sitting a little high on the breast so that they hung a little bit pear-shaped with the nipples being upturned somewhat. They were absolutely gorgeous.\n\nJessica, though, had my favorites. I couldn't keep my eyes from returning to them. Like I said earlier, they were small, basically swells on her chest that the palm of my hand would cover, but with her small size they accented her shape wonderfully, I thought. Her nipples were a pinkish brown that was not as dark as Kate's, but darker than the others, and her nipples stood out proudly. I found out later that Jessica always wore a padded bra, not because she wanted to look bigger, although I'm sure that was a part of it. She was rather self-conscious of her size, but she wore it because the padding helped to hide her nipples and keep them from poking out though her tops. To me they were absolute perfection. \n\nI know Kate, Jessica, and Shellie were somewhat sexually active, and I am pretty sure Kay was, but I for sure had not talked with her about it. I figured that was her business. Yes, she is my sister, and I'd kill any guy who hurt her, but I figured it was her business. She didn't ask about my experience either, not that I had any.  \n\nLike I said earlier, it wasn't anything malicious on the part of girls, but guys like me don't exist as far as they are concerned. To be fair, guys are the same when it comes to girls with handicaps. They are really missing out, to my thinking. Those of us who have had to learn to live with a physical handicap have often developed capacities for caring for others because we have had to depend on others. I know I'm making a generalization, but some of the most open, caring, and compassionate people have been people I've met in various therapy sessions or at Dr.'s appointments. I just had not met any young ladies near my age that I could connect with.\n\nSorry for the rabbit trail, but I can't help myself.\n\nAnyway, there I was sitting on the floor looking at four of the most wonderful sets of girl's breasts, and totally blown away by the sight. I kept looking at Jessica's and there was nothing I would have liked better than to have her down on the floor and be licking and suckling on her little cuties, with or without the pizza sauce! Of course, I was giving each of them a good look, but something about Jessica just drew me to her. Conversation was pretty lively for a bit with the girls bantering back and forth and asking me questions about what I thought. I felt somewhat strange. I wasn't used to being brought into conversations, especially with pretty girls. Most of the time someone with a handicap just blends into the scenery. It is amazing how if you are sitting in a wheelchair people just look right over your head and talk to everyone around as if you didn't even exist, or as if you couldn't hear or speak.\n\nLunch of course was finished, and we all cleared up the dishes and pizza boxes. The girls didn't want to go back into the pool right after having eaten, so we all just sat around the table and popped another beer each. I was concerned about them going back into the pool if they kept drinking. The conversation wandered around to the guys the girls had been dating and went to the prom with, just before breaking up. Of course, they talked about their dresses, and other girl's dresses, and all kinds of other gossip that I had no knowledge of. I would have used that as an excuse to go find a good book, except for the scenery. That was well worth staying for!\n\nEven though I had nothing to add to the conversation I was accepted into the group, and I think they pretty much forgot I was even there. Jessica was getting a little tight on her coolers, and she was slurring her words slightly. I really knew she needed to cut back on the alcohol though when she started talking about Carl. It seems he was almost a last minute date, which she blamed on not having bigger boobs. She said guys just didn't find her attractive. Talk about blind guys in a school! She has always caught my eye being cute as a button, but she was my sister's friend, plus she was two years younger than me, so I never even tried to pursue anything with her. Maybe I have a bit of a complex. I've been turned down so many times and had quit even asking. Anyway, it seems Carl asked her out just three weeks before the prom, after he had broken up with another girl. She didn't want to go alone, so she accepted. They went out a couple of times before the prom, and she thought he was an OK guy, but not really what she wanted to tie up with. \n\nProm night came, and she was wearing a short dress that was backless, so she didn't have a bra on. She said, and was rather upset about it, that no sooner than they left the dance Carl was trying to put his hand down her dress. She kept trying to keep his hands out, and he kept putting his hand on her thigh right at the bottom of her short skirt. I know she forgot I was even there, because she said she thought she might have sex with him that night, but because of the way he kept trying to force her, she wanted nothing to do with it. \n\nHe drove them out of town to a secluded drive and parked the car. She said it really got out of control then. He unzipped his pants, pulled out his cock and told her the least she could do is to give him a blowjob, that she owed him at least that much for taking her to the Prom. When she refused he said he should never have asked her out. She didn't even have any tits to play with. She tried to open the door to get out and he grabbed her arm and pulled her to him and tried to kiss her and feel her up.  By this time I was mad and ready to go hunting Carl!  Kate asked \"What did you do?\" \n\nJessica smiled and said, \"I leaned on the horn and head butted him in the nose! I know I broke his nose, and he got blood all over his rented tux. Then I said, 'You wanted me to suck on this little thing?' and grabbed it and gave it a yank. I grabbed his balls and squeezed them both really hard until he puked. Then I jumped out of the car and called my dad on my cell phone.\"\n\n\"Wow,\" I said. \"Remind me to treat you nicely!\"\n\nThat got the girls laughing, and Jessica turned red.  \"Yeah, that would be a good idea. Of course, Carl isn't the kind of gentleman you've been. His cock isn't nearly as nice as yours is either!\"\n\nNow it was my turn to blush. \n\n\"How do you know about his cock?\" asked Kate. \"I know he has a pretty good size bulge in those shorts of his, but how do you know?\"\n\n\"When we were playing water polo I 'accidentally' brushed it a couple of times.\"  Jessica grinned at me as I blushed again. \"Then when Shellie and Kay were running around the yard topless I backed into it, really accidentally this time, and I reached around and grabbed it through his shorts. If Carl had a trouser snake, Jared has a trouser python.\"\n\nI really wanted the floor to open up and swallow me as the girls all looked at me appraisingly. I needed another beer, but with the tent I had in my shorts right now there was no way I was going to stand up. Shellie licked her lips as she looked at me. Even Kay was interested. Kate said to Jessica, \"You should have shared. You know the rules!\"\n\nJessica giggled and said, \"What was I supposed to do? Tell you all to come over by me in the pool and back into him and then grab his cock?\" She put her hand on mine on the table and said, \"It really did feel nice, Jared.\"\n\nNow really, I'm not all that big. Yes, I'm bigger than average, but remember I told you if I didn't have CP I'd be 6'3\". Well, my cock is proportional to the rest of my body. I have big hands and feet, too. \n\nShellie licked her lips again, looked at me and asked, \"Just how big is it, Jared?\" I know we had all been drinking, but that blew me out of the water.\n\n\"I'm not sure we should be discussing that.\"\n\n\"Why not? You've been looking at our boobies for a while now. We haven't complained have we? Share the wealth.\"\n\nKate chimed in, \"Come on. Tell us. We won't say anything to anyone else, honest.\" She was leaning across the table, and her breasts were squashed onto the tabletop and flattened out like a half squeezed marshmallow. As she sat back up the jiggled so enticingly.\n\nJessica placed her hand on mine and squeezed it gently as she looked me in the eyes. \"Please?\" She was obviously excited. Her nipples were poking out at least half an inch. She gave me that sad puppy look that only cute girls can pull off and I knew I was sunk. There was not going to be any way out of this other than running away and making a fool of myself. Even Kay was leaning forward with expectation.\n\nI finally said, \"OK, it's nothing special.\" I never was in any phys ed classes at school, and obviously I didn't play any sports, so I never had opportunity to compare myself with others in the shower, but I knew I was a little above average. \"It's about seven and three-quarters inch long when I'm erect.\" \n\nThe girls all gasped and looked at me like I had grown a second head or something. \"Seven and three-quarters?\" squeeked Jessica. \"Jeeze! How do you ever get that into a girl?\"\n\n\"I don't know. I've never tried.\"\n\n\"You mean you've never been with a girl?\" asked Shellie.\n\n\"What a waste!\" said Kate. \"The way you use that tongue of yours on a girls nipples, I can't imagine what you would do if you really had sex!\"\n\nKay looked stunned, but really turned on by all of this.\n\n\"I've never even been out with a girl. No girl has ever been interested in a cripple like me.\"\n\n\"Honey, I think that just changed.\" That was Kay. \"I think I know three girls that would be happy to go out with you based on your behavior today, not to mention your package. I wish I could be one of them, to be honest!\" She was licking her lips as she looked at me from the other end of the table. \"I've always wondered what it would be like to be fucked by someone who had a real cock instead of . . . , well anyway.\" She blushed.",
        "Jessica toyed with my hand again and gave me that puppy dog look once more. \"Can I see it?\" she whispered. \"I'll make it worth your while.\" She brushed her left nipple across my bicep.\n\n\"Yeah, please.\" Kate said, \"I might even be willing to return the favor,\" and she held up her breasts, \"you know, for what you did for me.\"\n\nShellie just looked at me with a glazed look in her eyes as she ran her tongue around her lips nervously and nodded.\n\n\"But, I'd be the only one naked. I know you are topless, and I'm enjoying it immensely, but . . . .\" I really wasn't trying to get them naked, honest. I really was embarrassed at the thought of exposing myself to girls.\n\nJessica rubbed her breast across my arm again, bringing my eyes down to hers. Did I mention I felt like I could fall into her eyes? She did that to me. \"Please, Jared? I've never seen a cock that big. I doubt Carl was more than five inches, not that I ever want to see his again! If I got naked too, would you do it? Please?\"\n\nHow does one refuse something like that? I started to nod my head in acquiescence when Shellie piped up. \"How about if we all got naked? Would that work?\"\n\nKay gasped and put her hand up over her mouth. \"I don't know that I could do that. He is my brother after all. Topless is pushing it . . .\"\n\nKate said, \"Come on, Kay. You weren't going to leave when we were talking about Jared dropping trou. He's your brother then, too. We aren't talking about you two doing the beast with two backs, just showing a little skin.\"\n\n\"Kate!\"\n\n\"She's right,\" said Shellie. She jumped up from her chair and came around behind mine, put her arms around my shoulders with her hands brushing across my belly, and wonder of wonders, she rubbed her breasts back and forth across my back. I thought I was going to come in my shorts!\n\nHere I was, a guy who in twenty years of his life has never had opportunity to even date a girl, let alone see one naked, who not only has four lovely girls topless, but they are talking about being naked with me, plus, I've gotten to lick pizza sauce from the tits and chest of one of them making her come in the process. Of course I was going to agree! What kind of fool do you think I am? I knew something like this could never happen to me again! I nodded my head, and started to rise. I felt four sets of eyes on me as I stood. \n\nNervous doesn't begin to describe me. My hand dropped to the tie on my shorts and I started struggling to open it. Dexterity is not one of my strong suits, and like I said earlier, I don't have CP nearly as badly as others, but still things most people take for granted I had to really work at. Jessica noticed I was struggling with the tie, which was double tied, and dropped to her knees in front and said, \"Let me do it! I want to do it!\"\n\nNormally I take offense when someone tries to baby me or do things for me that I can do, but she was not saying so in a belittling manner, nor was she condescending, but she obviously wanted to free my cock. She rubbed the palm of her hand up and down my cock a couple of times before looking deeply into my eyes again as she unknotted the tie and then slowly opened the Velcro fastener, freeing my cock from the confines of my shorts, which she dropped to the floor. My cock promptly swung down and hit her in the cheek, leaving a stripe of pre-cum on it. She gasped as she saw it, and Kate moaned. Jessica placed her hand around my cock, looking me in the eyes, said, \"It's beautiful,\" then leaned over and kissed it on the head. I thought my legs would collapse as my hips flexed forward suddenly and my cock lurched in her hand. Day of Days!\n\nKay was looking at me from the other end of the table with her mouth agape, while Kate and Shellie were wide-eyed with wonder. \"I had no idea you were hung like that!\" said Kay. \"If you weren't my brother . . . \"\n\nShellie, normally not one to be short on words, was silent, staring. \n\nKate kept licking her lips hungrily, then said \"Paul wasn't nearly that big. I've been missing out, I can see.\"\n\nJessica meanwhile, was still kneeling in front of me, stroking slowly up and down my shaft with her little hands. Now I jack off from time to time, well from day to day, actually, a couple of times a day, but with my hands being stiff and somewhat inflexible I had never imagined anything feeling so good. I was beginning to tremble, and knew I was about to blow, and she wasn't even playing with the head yet. \n\nKate stood and said, \"I think we owe you something, don't we?\" and pulled the tie on her bikini bottom. When it dropped to the floor and I saw my first live pussy I lost it, and began coming for the first time ever that was not of my own doing. The first shot went over Jessica's head and landed somewhere on the table. My knees let go, and I started to fall, but was able to lean back enough to land in my chair, causing my second shot to go straight into Jessica's forehead and hair, and the third shot to hit her on the shoulder and the top of her breast as she quickly jerked my cock down away from her face. The next couple of spurts were not quite as strong, and they hit her nipple, and then lower on her belly, before dribbling out and dripping onto the floor at her knees. \n\nMy heart was pounding, and I felt a roaring in my ears as I felt blackness descending on me. All of the sexual excitement of the day plus the intensity of my orgasm put me out. When I woke up the girls said I had been out for just a couple of minutes, but that I had the silliest grin on my face. I'll bet I did! I know I had a silly grin on my face still! I looked down the table at Kay, who looked dumbfounded, but my attention was drawn back down to Jessica, who was still kneeling there on the floor, still holding my cock, which was now at about half mast. I was content. . . ."
    ],
    "authorname": "Callicious",
    "tags": [
        "sister's friend",
        "topless",
        "exhibition",
        "group",
        "nipples",
        "first time"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/my-sisters-friends-ch-02"
}