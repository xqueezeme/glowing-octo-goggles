{
    "title": "Get Over It Pt. 03",
    "pages": [
        "Authour's Note: \n\nThis is the third and final part of Get Over It. I suggest reading parts 1 and 2 for the best experience. \n\nAspen is a workaholic with commitment issues. Theo is a musician who made it big, but still lacks confidence when it comes to love. In part three, Aspen and Theo work around the series of unfortunate events that's been keeping them apart, but will a fight cause an irreconcilable rift between them? \n\nThis story is categorized as Romance, but will contain gratuitous erotic scenes. You can expect the following aspects in Part Three: \n\nOral sex, ass eating, grinding, intercourse, references to a previous toxic relationship, a pouty drama queen, a cheesy radio show, an even cheesier reference to songwriting, an emotional breakdown, and a conclusion to the story. \n\nThis is a work of fiction. All characters in sexual situations are well over 18 and none of them are based on real people, events, or situations. Any similarities are purely coincidental. \n\nEternal appreciation and gratitude to OneAuthour for editing and feedback. \n\n** \n\nAspen \n\nTheo had only been out of town for four days, but it felt like a lifetime. \n\nWalking out of his house after Rick had interrupted us was almost painful. Even I, the person who hated kissing, was turned on by the way Theo kissed me. The texting afterwards was nice - the slightly blurry picture of Theo gripping his cock was nowhere near as hot as the ones I'd sent him, though he got points for trying - but I just wanted to fuck. \n\nHe'd ended up having to go out of town, and we hadn't gotten a chance to continue where we left off. We did continue texting each other flirting, teasing messages throughout the week. Nothing quite as intense or erotic as that first night on the phone, but enough to be keeping me in a near-constant state of edged desire. \n\nSo when I checked my phone after my usual Thursday morning management meeting and had a text that said 'Just got home. James says dinner's still on tomorrow night. I'll drive you home?', I nearly danced with joy. \n\n'I'll move my car so you can park in the back,' I replied. \n\n'Oh, I'll be staying for a while?' He put a winking face beside it. \n\n'You better be.' \n\n'Hope you don't have plans Saturday. Once I'm done with you, you won't be walking straight.' \n\nI grinned in spite of myself. Little by little, Theo was becoming more confident, and I was loving it. \n\n'Big promises. I'm holding you up to that.' \n\n\"Oooo, who're you texting that's making you smile so much?\" Lisa asked as she came into my office with a stack of papers. \n\nI locked the screen of my phone hurriedly. \"No one.\" \n\nLisa snorted. \"Sure.\" She put the papers on my desk. \"Whoever it is, tell them good job. Kevin called while you were in that meeting. He wants you to call back right away.\" \n\nI put the phone in my desk drawer and used my office line to call Kevin. \n\n\"It's me, Darby,\" I said before she could start her spiel. \"Lisa said Kevin called.\" \n\n\"He sure did,\" Darby said. \"He just went into another meeting. Too bad for him, because that means I get the great joy of telling you this!\" \n\n\"Telling me what?\" \n\n\"Pack your bags! Kevin wants you to come up to head office next week. He wants a progress report on Wakeham, but it can just be casual. No need to panic. Mostly he wants you to come up and do some training with Daniel, who is still an absolute idiot.\" Darby sounded positively giddy. \"And guess who booked you a ticket for tomorrow afternoon so we can go out for drinks tomorrow night?!\" \n\nHer chattering was an emotional roller coaster for me. On one hand, getting away from Wakeham for a week would be a really great break. On the other... \n\n\"Tomorrow. Oh, wow.\" I tried not to sound disappointed. \"Is there any particular reason I need to come out over the weekend? I mean, not that I'm not grateful, I just have to move some stuff around.\" \n\n\"Well, there's a company dinner with some big clients on Saturday night that Kevin wants you at. Be prepared for him to parade you around and brag as if he gave birth to you. He won't stop calling you a superstar. Literally.\" \n\n\"Ah.\" I pressed my lips together, exhaling through my nose. \n\n\"I have to say, I am absolutely shocked,\" Darby said. \"I thought you'd be ecstatic. This is kind of meh.\" \n\n\"No, no, I'm excited,\" I replied hurriedly. \"I just had a thing tomorrow that I wanted to do. But I can reschedule.\" \n\n\"Good. I figured we'd go to O'Burns. Better selection of men, in my opinion. You must so stoked to finally be able to get laid.\" \n\n\"You know me,\" I said, trying to laugh. \n\n\"Okay, seriously. What's going on with you?\" Darby gasped. \n\n\"Nothing.\" \n\n\"You aren't even remotely excited to go to O'Burns, are you?\" \n\n\"I am. Picking up random guys just hasn't been on my mind. I'm a bit rusty.\" \n\n\"Bullshit. What's really happening?\" \n\n\"Nothing is happening.\" \n\nDarby gasped in sudden realisation. \"You're fucking Theo!\" \n\n\"Darby!\" I hissed. \"If that were the case, I'd be asking you to lower your goddamn voice because I wouldn't want it spread around everywhere!\" \n\n\"Oh, don't worry. No one's here. So, when did it start? How is he? I want all the details!\" \n\n\"There are no details,\" I mumbled, warily glancing at my open office door. \n\n\"Let me guess. You have a dick appointment tomorrow and this interferes with it?\" \n\n\"I can't really talk right now.\" \n\nDarby hooted. \"That's totally it, isn't it!? Aw, I'm sorry, Aspen. Really, I am.\" \n\n\"Work comes first,\" I replied. \"Look, we'll catch up tomorrow night, okay?\" \n\n\"I want details. ALL of the details.\" \n\n\"I will give you SOME of the generalized information and you'll like it. Talk to you later.\" \n\nI hung up and sighed, putting my head in my hands. All I wanted was to fuck Theo. Was that so much to ask? Was this the universe somehow telling me that I shouldn't have sex with Theo? If I believed in that kind of bullshit, maybe. But I was stubborn and I wasn't about to let some kind of karmic message tell me who I could and couldn't have sex with. \n\n\"Hey, Lisa?\" I called from my desk, not moving my head from my hands. \n\n\"What's up, boss?\" She came into my office quickly. \"Oh, no. What's wrong?\" \n\n\"Nothing's wrong. I'm taking a half day.\" I sat up and forced a smile. \"Kevin wants me to go up to head office for a week and they booked me a flight for tomorrow. I guess I'm missing dinner again. But I need you to clear my schedule for the next week. I'll have my laptop and phone, so still send me everything. Just no meetings.\" \n\n\"Don't worry about dinner. We'll manage to get there one of these days.\" She smiled. \" And don't worry about anything here. I'll take care of the schedule, and I'll send you anything urgent as it comes in.\" \n\n\"Thanks.\" I pulled my phone out of the drawer and packed up my purse. \"I'm heading home, so you're in charge, I guess!\" \n\nShe laughed. \"We'll keep the place running. Have a great trip.\" \n\nI made my way down the hall, slinging my purse over my shoulder. Once I was sure I was out of hearing range of Lisa's desk, I called Theo. \n\n\"Hey, what's up?\" He sounded surprised. \n\n\"I have to go out of town tomorrow and won't be back until next week,\" I said. \"I need you to be at my place in 20 minutes.\" I gave him the code to the main door so he could let himself in, and hung up. \n\n** \n\nTheo \n\n18 minutes later, my hand was poised to knock on Aspen's apartment door. \n\nJust as I started to knock, the door swung open. Aspen caught my hand and tugged me inside the room, pressing against me to close the door behind us. \n\nShe looked as untethered as I'd ever seen her, which was not bad, to be honest. Her hair was out of its bun and it flowed wildly around her face and neck, which was uncovered as she'd already removed her blouse and jacket. I let my eyes trail down her body, taking in the thin strapped camisole she had tucked into her skirt, her legs and feet clad just in stockings. It was yet another look I'd never seen from Aspen, and yet another look that made me want to turn her around, bend her over, and fuck her wildly. \n\n\"I can't take another week of waiting and flirting,\" she said, looking up at me. \"I need you, now.\" I was only able to nod, and she took that as permission to continue. Her hands twisted around to her back and I heard her unzip the skirt. \n\n\"Wait.\" I reached out and grabbed her arm. \"Just wait a second.\" \n\nShe looked confused. \"I haven't waited enough?\" \n\nI laughed, still holding her arm. I pulled her a bit closer to me, shifting my hands so they were on her hips. \n\n\"You don't have to leave until tomorrow. We've both waited this long, so I'm doing this right.\" \n\nShe didn't say anything, just let me pull her closer and closer until her pelvis was pressed against mine. She placed her hands on my arms and I let my hands travel behind her, grasping her ass, holding her in place against me. \n\n\"I have been picturing this for weeks now. You've been teasing me for days now. I've been looking at your pictures again and again, dreaming of being able to touch you and hold you. I also only get three chances to prove to you why kissing is amazing -\" \n\n\"I believe you're down to two.\" \n\nI shook my head. \"We defined kissing as from when our lips touch to when I pulled away. Since YOU pulled away, that kiss didn't count.\" \n\n\"Fine. I'm not wasting time fighting you on it.\" She laughed. \"You're back up to three.\" \n\n\"So, three kisses to prove to you how amazing a kiss can be. I plan on getting an A+ for this.\" \n\nShe threw her head back and laughed again. \"Theo, I'm so fucking horny that it would take a severe misstep to earn anything below an A. Like surprise anal, or spitting on me or something.\" \n\nI leaned down, my lips trailing along her cheek towards her mouth. \"I absolutely insist on earning my grade,\" I whispered against her mouth, and then kissed her. \n\nShe responded in an unexpected way, tightening her grip on my arms momentarily before moving her hands up to my shoulders, to my neck, to behind my head. She ran her fingers through my hair and pulled teasingly, before pressing my face closer against hers. \n\nI slipped my tongue into her mouth and felt her melt against me, just a bit. I trailed my tongue along her teeth before tasting her lips, kissing her again, kissing the corner of her mouth, then fully on her parted lips, then the other corner. I felt a sudden coolness as she drew in a sharp breath when I grazed my teeth against her bottom lip, pulling it into my mouth and sucking. Once I let go of the lip, she began to mirror the action, but before she could suck my lip, I pulled back. My lip dropped from her mouth and her eyes opened, looking questioningly at me. \n\n\"Show me your bedroom?\" I asked. \n\nShe took my hand and led me urgently through the apartment to the room. She had the shades drawn, and I could see that the bed was neatly made. I noted the nightstand, where Aspen had clearly been making sure she was ready for this. A box of condoms sat prominently on the table, along with some tissues, lube, and a couple of bottles of water. \n\n\"Don't make me wait too long,\" she said. \n\n\"I'll make you wait just as long as you need to.\" I took her back in my arms. \"Two kisses left, for those keeping score.\" \n\nShe laughed and I moved my mouth to her neck, kissing and licking her skin. She made a small noise of delight as I grazed my teeth there, too. I ran my hands down her back to the waistband of her skirt, where the zipper was not quite halfway undone. Pulling it the rest of the way, I guided the skirt down her hips and let it drop unceremoniously to the floor. Then, while moving my mouth's attention from her neck to her collarbone, I lifted the camisole over her head and let that drop beside the skirt. \n\nI pulled back to look at what I'd unwrapped. The view was astounding. Aspen's bra was fairly plain, just an everyday kind of bra, but the way she stood made it seem like it was the kind of thing that would walk down a runway. Cotton panties hugged her hips, curving forward to make a triangle that pointed to the delicious center between her legs. Her stockings ended at her thighs, and were the only one of her underthings that were embellished - tiny bows adorned the bands at the top. \n\nI licked my lips and swallowed. \"Where to start,\" I pondered. \n\nAspen opened her mouth to respond, but I interrupted her by hunching over and placing a kiss between her breasts, before slowly kneeling in front of her. I kissed her stomach, licked around her belly button, then moved my mouth teasingly slow towards the waistband of her panties. At the same time, I peeled the stockings down her legs, and by the time I had both down and she had stepped out of them, my mouth had reached her waistband. \n\nMy hands moved back up her legs and to her hips again. I could hear Aspen's breathing quicken as I pressed my lips to the cotton triangle covering her mound. I could smell her delicious scent through the fabric, and kissed slowly down until I started feeling the wetness I knew was waiting for me. Holding firmly on her hips, I buried my face against her slit, nuzzling her pussy, inhaling all I could. \n\nAspen made a throaty noise and her hands found their way to my head. She let them press lightly against my hair as I hooked my fingers into her panties. I moved my face back just enough so that I could reveal her pussy, then pushed my mouth back against her as I slowly pulled her panties the rest of the way down. Aspen's noise was one of longing as my lips made slow contact with her vulva, and I smiled, just barely tasting her wet juices on my lips. \n\n\"Something wrong?\" I asked, my voice muffled by her pussy. \n\n\"Stop. Teasing. Me.\" Each word came through clenched teeth. \"I can't take it. Just touch me. Goddamnit, Theo.\" \n\nLet no one ever say I needed to be told twice. I used one hand to spread her pussy lips open enough that I could easily start licking her clit, and the other went back to that perfect ass. Aspen let out a satisfied groan as I sucked her clit into my mouth, and she pressed my head hard against her. I alternated licking and sucking, twirling my tongue around the swollen nub, and experimented with slowly slipping a finger inside the dripping entrance just below. Given the response - moaning, and a hard grinding of her pussy against my face - I assumed it was positive, and gently moved my finger in and out as I used my mouth to worship her clit. \n\nI decided to try something a little extra while I was in front of her. With the hand cupping her ass, I slowly let my fingers explore her crack, until one was resting right against her hole. I glanced up to see her looking down at me, and I raised my eyebrows to ask if I should continue. She nodded, and I took a moment to collect some of the wetness on her slit before returning the finger to her ass and pressing it slowly inside. \n\nThe tip of my finger was barely in when Aspen's knees buckled and she grabbed onto my hair. Grinning, I took my mouth off her pussy. \n\n\"I was just getting started, and you can't stand?\" I teased. \n\n\"Jesus, Theo,\" Aspen gasped. \"You're like a completely different person right now.\" \n\n\"Is that bad?\" \n\nShe shook her head. \"I like both sides of you.\" \n\nI motioned for her to go to the bed. \"On your hands and knees,\" I directed as she made to lie down. \n\nAspen looked confused, but I knew what I wanted. I'd been dreaming about this particular thing since seeing her ass in those panties, and if I had it my way, she was going to be screaming for more. She took the position I requested on the bed, her thick ass up in the air, legs spread just slightly so I could see her dripping pussy between her legs. \n\nI moved forward and spread her ass cheeks out more. Aspen was twisted, trying to look back towards me. I dipped my head down and licked her dripping entrance a few times, then moved my mouth up to her tight rosebud. One hand on her ass, the other below my chin and ready to penetrate her pussy. I started licking her ass while I inserted two fingers into her cunt. \n\nThe reaction was better than I could have hoped for. A wailing cry left Aspen's mouth, followed by a steady stream of \"Oh fuck. Oh Jesus, oh fuck, fuck, THEO!\" \n\nI ate her ass enthusiastically, fingering her pussy all the while. Her face collapsed against the bed and she was pushing back against me, that perfect ass against my face. I enjoyed every second of it. I could feel her pussy clenching against my fingers, and as I hit certain spots, her hips bucked back and forth. \n\nSooner than I had anticipated, her stream of talking changed - \"gonna come, gonna come, gonna... OH!\" \n\nHer pussy tightened around my fingers as she screeched. I twirled my tongue around her hole through her orgasm, licking all the while. I slowed my movements as I sensed her coming down from the orgasm, and her hips began to fall forward. I gently helped guide her until she was laying fully on her stomach, and finished off by planting a kiss and playful nip on one of her ass cheeks. \n\n\"I'm going to wash up quick,\" I told her. \n\nI still had plenty of places I wanted to lick and suck and finger, and I didn't want to cause any kind of discomfort for Aspen. Sometimes sex has parts that are decidedly unsexy, but every second of eating out her delectable ass was worth it. \n\nWhen I returned, Aspen had rolled over onto her back and removed her bra. She turned her head as I came back into the room. \n\n\"Alright, you did good,\" she said. \n\n\"I'm not done with you yet.\" My cock was unbearably hard and dripping precum in my boxers, and the view of the impeccable woman lying on her back completely naked wasn't helping matters there. \n\n\"I know. It's my turn to be in charge.\" She sat up and motioned towards me. \"Clothes. Take them off. Now.\" \n\n\"Yes, ma'am,\" I murmured. \n\nI stripped quickly, leaving my clothes on the floor. I stood at the foot of the bed, patiently waiting for her next instruction. \n\nAspen's eyes traveled up and down my body. \"You need to get better with that camera,\" she said. \"Those pictures don't do any of this justice.\" \n\nI flushed, but smiled. \n\nShe twisted her legs under her to kneel and patted the bed beside her. \"Come sit here.\" \n\nI crawled onto the bed next to her. \"Can I kiss you again first?\" \n\nWe were both kneeling, and she glanced up at me. Instead of responding, she put a finger under my chin and drew my face to hers. I closed my eyes as she took control, pressing her lips against mine, exploring my mouth with her tongue. She balanced her other hand on my thigh, tantalizingly close to my cock. As I reached up to cup her face to deepen the kiss, she let go of my chin and pulled back. \n\n\"That counts as one,\" she whispered. \n\nI could only nod as she gripped my hand that was in mid-air and brought it to her breast. A groan escaped my lips as I finally got to cup her beautiful tits. I kneaded her breast gently, feeling her hard nipple against the palm of my hand, watching the way her breast overflowed my grip. \n\n\"Amazing,\" I breathed, and reached my other hand up to tweak the nipple on her other breast. \n\nShe let me fondle her for a while, laughing as I was mesmerised by her perfect tits. I couldn't get enough of her. I loved the feeling of her nipples in my fingers, loved the little gasps she made when I brushed against them. \n\n\"I figured you must be an ass man after that first part, but now I'm not so sure,\" Aspen remarked. \n\n\"Why pick?\" I responded. \"You're so beautiful. I can't choose one favourite.\" \n\nHer response was to let the hand that was balancing on my thigh move towards my cock. I shuddered as she wrapped her fingers around me, her motion slow and deliberate, letting me feel each finger as it gripped me. \n\n\"Finally,\" she said. \"I've been waiting for this.\" ",
        "She started stroking me lightly, slowly, just enough to provide the slightest bit of relief to my swollen cock. I kept playing with her tits, but as she increased her speed and intensity, my hands seemed to stop working. I felt my eyes close as I relaxed into the pure bliss of her touch, only opening them again when I felt her pulling away from me a bit. \n\n\"Lie down,\" she commanded, releasing her grip on my cock. \n\nI did as she said, leaning back against her pillows. She crawled forward, positioning herself between my legs, and regained her hold on my dick. Leaning forward, she took the tip in her mouth in one quick movement. \n\n\"Fuck,\" I gasped. \n\nI felt the vibration as she giggled. She sucked the tip of my cock, twirling her tongue around it, licking the precum off me and exploring the ridges thoroughly as her hand slowly increased speed. I looked down at her, watching the movement of her head as she sucked me off. She began taking more in her mouth, little by little, going just a bit deeper each time she bobbed her head. Finally, my whole cock was in her mouth, and I could feel my dick pressing against the back of her throat. \n\nI couldn't help groaning, I couldn't help winding my fingers in her hair, I couldn't help thrusting forward just the smallest bit. She made a soft gagging noise and readjusted, then began to deep throat me. With each movement, I hit the back of her throat, and that, along with the wet sounds she made as she sucked, was more than I could handle. \n\n\"Aspen,\" I breathed. \"Aspen, stop.\" \n\nShe looked up at me, eyes wide as she slowly released my cock from her mouth with a soft 'pop.' \n\n\"What's wrong?\" \n\n\"Not wrong,\" I panted, pulling her up towards me. \"Too good. I'm not done with you yet. As much as I want to come in your mouth, I need to fuck you.\" \n\nAspen's face wasn't always easy to read, but in that moment, I felt like I surprised her. \"You're damn right,\" she finally said. \"I believe there was talk of making sure I couldn't walk straight the next day?\" \n\nGrinning, I pulled her towards me. She placed a leg on either side of me, carefully leaning forward so my dick was nestled in her ass crack. I wrapped my arms around her waist and held her body against me, feeling the softness of her searing hot skin, relishing the feel of her tits flattened against me, her nipples pressing against my chest. \n\nI don't think I was the one who initiated that kiss, but it didn't matter. She had her arms on my shoulders, wrapped around my neck, and for a moment, we just kissed, breathing in one another, touching each other. Her hands moved up and down my arms, and I explored her hips and back, spent some more time grabbing that amazing ass of hers. Soon, she started grinding her hips against me, and I could feel the wetness of her pussy against my stomach. The action made my cock slide along her ass crack. I pushed her cheeks together and helped her along with the motion, rubbing my dick against her ass. \n\nShe pulled back from the kiss and tilted her head back. I took in the sight before me: her elongated neck, her hair tossed over one shoulder, the heaving of her chest as she panted. Dipping my head, I took her breast in my mouth, sucking on her nipple and running my tongue back and forth over it. \n\n\"Oh yes,\" she moaned. \"Yes, just like that.\" \n\nHer hip gyrations increased in speed as she ground her clit against me, using my body to get herself off. I obliged, enjoying the feeling of her ass hitting my dick, taking every moment of pleasure I could out of sucking those gorgeous tits. Soon, she was coming, not quite so hard as the first time, but the telltale shudders and gripping were just as strong. \n\nAs she came down, I pulled my mouth away from her breasts and kissed her again. \"That's four,\" she mumbled against my mouth. \n\n\"Are you still counting?\" \n\nShe kissed me back. \"No.\" \n\nBetween kisses, I asked her how she liked to be fucked. \n\n\"Any way. Just pick quickly.\" \n\nI knew exactly how I wanted her. I wrapped an arm around her waist and held her tightly, then rolled so we switched positions. Aspen squealed in delight. \n\n\"I don't think I've ever met anyone who could actually do that move,\" she giggled. \"Where did you learn that?\" \n\n\"I'll tell you after I fuck you,\" I laughed. \n\nI reached for the condoms she had placed on the side table. Aspen watched as I prepared one, a hand between her legs, touching herself lazily as she waited. \n\nOnce I was ready, I moved between her legs. \"You just want me like this?\" she asked. \n\n\"I want to watch you,\" I replied. I balanced on one hand as I gripped my cock in the other, positioning it at her entrance. \"Is that okay?\" \n\n\"God yes.\" \n\nI didn't say anything more, just pushed forward and finally entered her waiting pussy. We groaned in unison as I slowly pushed forward, feeling her slick walls around me. I stopped halfway in and pulled back before pushing forward again, this time as deep as I could go. My hips met hers, skin pressed against skin, and a contented noise left my lips as the long wait to sheath my cock in Aspen's cunt was finally over. \n\n\"You okay?\" I asked. \n\n\"Almost,\" she breathed back. \"I need you to start fucking me now.\" \n\nYet another thing I didn't have to be told to do twice. I started pumping in and out of Aspen's pussy as she wrapped her legs around my waist, urging me deeper, forcing me to submit to my need to fuck her harder. Her moaning grew louder as my breathing grew faster, and I couldn't take my eyes off her tits bouncing back and forth with the motion. \n\n\"Don't stop,\" she ordered suddenly. \"I'm so close. I'm going to come again... don't stop Theo...\" \n\nThere was no way I was going to stop. I wasn't going to be happy until I felt that pussy tighten around my cock and watched her writhe under me. \n\nIt didn't take much longer. Aspen's arms spread wide on the bed, her hands gripping the sheets as she came. Her back arched as her pussy clenched around my cock, and she cried out, almost screaming. Her head was thrown back and her legs, still wrapped around my waist, pulled me closer to her. \n\nIt was what I needed, what I was waiting for. I lost control of the rhythm and began pounding her like a man out of his mind, until I came, just on the tail end of her orgasm. My body tensed, my mind going blank, simply living in the intense relief and release of pressure. \n\nI groaned and looked down at Aspen. She was still panting, eyes closed, small shivers running through her body. I pulled myself from her carefully and rolled over beside her, lying on my back, trying to catch my breath. \n\nI can honestly say it was the best sex I'd ever had up to that point in my life. \n\n** \n\nAspen \n\nThe recovery from my orgasm was slow. \n\nMy whole body was shaking, like the nerves everywhere from the tips of my toes to my pussy to my fingers were firing randomly. \n\nI loved sex. I had a lot of sex. I had a lot of different partners that had tried a lot of different things. \n\nNone of them had made me react the way Theo did. \n\nWho was this man, I wondered as my breathing slowly returned to normal. I could hear him, feel him lying beside me. It made sense, when I really thought about it. Theo was generally selfless, the sort of person who put everyone's needs before his own. In the bedroom, that meant his own pleasure was dependent on his partner's. Like the request for me to stop sucking him off, even though he'd already given me one amazing orgasm, because he wasn't done pleasing me yet. \n\nAnd the kissing. I had thought I would never like kissing again, but I could get used to kissing Theo. He was passionate, deliberate in his movements. His mouth did amazing things, no matter where on my body he placed it. \n\nTheo shifted slightly in the bed, grabbing tissues off the nightstand as he cleaned himself up. I turned my head to watch him. \n\n\"So where'd you learn the porn-star flip move?\" I asked as he returned to lying down. \n\n\"Do I have to tell?\" he asked. \"It's probably the least sexy thing you can think of.\" \n\n\"Tell me.\" \n\n\"I used to wrestle. Like, in middle school and stuff. I mean that's not a specific wrestling move, it's just kind of the same motion...\" \n\nI was trying very hard not to laugh and failing miserably. Theo was blushing as he rambled. \n\n\"That is the best endorsement to take up wrestling I've ever heard, though. Learning it might not have been sexy, but using it, definitely.\" \n\nTheo smiled. \"Alright, now the real question.\" I raised my eyebrows as he looked at me. \"What's my final grade?\" \n\nI burst out laughing. \"Oh, A+, for sure.\" He let out a victory cry and pumped a fist in the air as I lost it. \"Don't let it get to your head too much. Or do. Frankly, you probably deserve it. I don't think I've ever come like that before. I didn't even... I liked kissing you.\" \n\nTheo smiled, his face genuine and almost innocent looking. \"You're not just saying that?\" \n\nI shook my head. \"You know I don't say shit I don't mean.\" I hesitated, then continued. \"You don't think highly of yourself all the time, but you should, Theo.\" \n\nHis smile faded. \"I'm a realist. I don't know. I've never been with someone who likes sex as much as you do. It's not hard to do well when the other person wants to be there as much as I do.\" \n\n\"You just haven't met the right person yet. You're going to find the perfect girl and treat her like you just treated me and she'll never want to leave. Just be patient. She's out there.\" \n\nTheo didn't respond, just stared at me. Shit. I was making it worse. \n\n\"I just mean, you know I'm not that girl.\" I laughed, trying to break the tension. \"We're just friends, you know that.\" \n\nHe looked away. \"Yeah, no. You're right.\" \n\n\"Come on, Theo. We went into this knowing it couldn't be anything serious.\" \n\n\"So were you planning on fucking someone on your business trip?\" \n\nRecoiling as if I'd been stung, I sat up in the bed. \"What?\" \n\n\"Since it's not serious?\" \n\nMy heart was racing, and I could feel heated anger crawling up my chest and neck. \"Not that it's any of your fucking business, since you don't get to tell me what I can and can't do.\" \n\n\"That's not what I was -\" \n\n\"Don't interrupt me,\" I snapped. \"It's none of your business, but no, I wasn't planning on fucking anyone on my trip, despite the fact that I haven't gotten laid in months. I've really been enjoying whatever this is and that's why I wanted you to come over before I left.\" \n\n\"Okay, so you're enjoying this, but it's okay to lie in bed after we've had sex and talk about how you don't want a relationship with me, and you don't see why that's a bit offensive.\" \n\nI took a deep breath, willing myself to calm down. \"Okay, I see your point. That isn't what I intended. But you knew this was a casual thing. I mean, just because we're also friends -\" \n\n\"You just said this was awesome, that you never came like that before.\" \n\n\"Yes, but that was just sex.\" \n\n\"I didn't think it was just sex.\" \n\n\"Well, you were mistaken!\" I blurted. \"I'm not just going to suddenly declare myself madly in love with you because you're good in bed, Theo!\" \n\nTheo sat up and turned away from me, sitting at the edge of the bed. \"It's fine. I'm used to people using me, Aspen. You know that.\" \n\nThe words stung. Whatever Theo and I had going on wasn't a relationship, and I didn't intend for it to be one. But he was my friend, and I liked him. I didn't want it to have to be one or the other: either me using him for sex, or a full relationship. And I'd been under the impression that he was okay with that. \n\nRelationships terrified me. I didn't admit it to Theo in that moment, but they did. And maybe, somewhere down the line, we could have had that discussion. But Theo wanted something more already, and that scared me, and angered me, and his negativity towards himself wasn't helping. \n\nI got out of the bed and grabbed some of my clothing, starting to dress quickly. \"Maybe you should leave.\" \n\nHe turned and gaped at me. \"You're kicking me out?\" \n\n\"Yes.\" Pausing in the middle of pulling a shirt on, I picked up his shirt off the floor and threw it at him. \"This was a lot of fun, but you're trying to make it something it's not, and I don't have time to deal with dramatics.\" I kicked his pants in his general direction. \"You know, Theo, I know you're insecure about a lot of stuff. But it's not always about you. People aren't always just using you.\" \n\n\"You don't even know what kind of stuff I put up with.\" \n\n\"I know enough! You're a good guy. You're good looking, and good at sex, and kind, and smart, and talented. But you have it in your head that you're still some pre-pubescent loser. So you got bullied growing up. So people were mean to you. Get over it! You're a fucking adult now, a goddamn successful one at that, now act like it.\" \n\nI stormed across the room towards my bathroom, stopping suddenly to turn and look at him. He was still sitting on the bed, looking shocked, holding the shirt I'd thrown at him. \n\n\"Until you start thinking better of yourself, people are always going to take advantage of you because that's what you'll expect of everyone. You didn't even give me a chance. We have sex one time - one time! - and you're offended when I'm not ready to pledge my love for you even though we agreed on a casual thing. If you think that's being taken advantage of, no wonder you're so miserable.\" \n\nI slammed the bathroom door behind me, seething with anger as I cleaned myself up. Theo eventually got out of bed and started dressing in the other room. I sat down on the edge of the tub and glared at the door as shadows moved behind it, then paused as if contemplating. I knew he was on the other side, and I willed him to leave. I didn't want an apology. I didn't want to talk to him. I didn't want to see him ever again. \n\nAs if he heard me, he left. It was only when I heard the door of my apartment close that I let out a cry of frustration and kicked the side of the tub. \n\n** \n\nTheo \n\n\"You've got like six albums worth of music right here, and you're using it as a coaster.\" \n\nI jumped as Rick came into the room. He placed a plate down on one of the free surfaces in the studio and cleared the glasses that were piled up on a stack of paper. \n\n\"It's all garbage,\" I replied, going back to what I had been working on. \n\n\"Some of it looks promising.\" \n\nI shook my head and Rick sighed. \"You've quarantined yourself in here for almost a week.\" He picked up the plate and shoved it at me. \"What's going on?\" I shook my head again. \"I'm not stupid, Theo. What happened between you and Aspen?\" \n\nI stopped writing and glanced up at him. \"Did she say something?\" \n\nRick sat down, holding one of the songs I'd discarded. \"No, she's not even in town. But in this one, you've tried to rhyme her name with 'grasping,' 'happen,' and 'slapping.' Then you just scribbled everything out.\" \n\nI grabbed the sheet out of his hands and crumpled it. \"It's not important.\" Rick folded his arms. \"It's not,\" I protested. \n\n\"Why don't we talk it out and I'll be the judge of it?\" I looked down and Rick shoved the plate at me again. \"Eat this damn sandwich and tell me what's going on.\" \n\nSo I told him. I started with what I'd blurted out to Aspen the day after the article was released, and told him about the flirting. I glossed over the finer details of our phone calls and texting, though Rick was fairly pleased to discover he'd been right about what was happening when he interrupted us that one evening. \n\n\"...and it was really, really good.\" I realised I had finished eating the sandwich Rick had brought in. \"And then she started talking about how we weren't in a relationship and it was just whatever. I told her I didn't expect any less since people use me all the time, and she got really mad and told me to leave.\" \n\n\"I find it hard to believe that was it.\" \n\n\"That's the gist of it.\" \n\nRick raised an eyebrow. \"So you fucked up.\" \n\n\"I thought maybe she'd give us a chance after how good it was.\" \n\n\"So you changed your mind about the parameters you'd agreed on. You fucked up.\" \n\n\"I was being honest with how I was feeling.\" \n\n\"You fucked up.\" \n\n\"Fine!\" I threw a hand in the air. \"I fucked up. I really liked her, and I got defensive when she didn't want to make things more than what we had talked about, and I said things that pissed her off and then was somehow surprised when she was pissed off and didn't want to see me anymore.\" Groaning, I leaned back in my chair. \"I came back home to get away from this bullshit, thinking everyone else was the problem, when it's actually me.\" \n\n\"She had a point, man.\" Rick's look was a mixture of pity and sympathy. \"The world's not out to get you. People suck, but you don't need to let that ruin your life.\" \n\n\"How do you get past it?\" I asked desperately. \"I don't want to be this way. I shouldn't have anything to complain about.\" \n\nRick thought for a moment. \"I don't have an answer for you, man. You're in a unique situation. But it doesn't matter who you are, some asshole out there is always going to try to take advantage. The key is knowing that not everyone's an asshole.\" \n\nRick's voice was calming, and finally admitting that the problems in my life were my own fault had lifted a weight off my chest. \n\nHe leaned forward, continuing. \"You have family who loves you, no matter what. Lisa and James will always be there for you, and never ask for anything in return. They've got three kids and they've never asked for one thing from you. Your parents, same thing. They give and give and are surprised when you give back, not because of you but because that's just who they are. You and I, we've been friends since we were in diapers. And you know you've got more friends than just me. Aspen was someone new in your life who didn't want anything extra from you. It's easy to be suspicious of people. A lot harder to trust them.\" \n\n\"I think I learned my lesson.\" I closed my eyes. Thinking of her hurt. \"I lost a really good thing because of my own hangups. She probably thinks I'm a whiny bitch. She didn't do what I wanted and I basically threw a tantrum.\" \n\n\"Everyone's a little insecure.\" Rick leaned back in his chair. \"Why don't you text her and apologize?\" \n\n\"I tried texting her a couple of days ago. No response. I'm guessing she blocked me.\" \n\n\"Her loss.\" \n\n\"I guess.\" \n\nRick folded his arms in front of him. \"Can you make me a promise? I need you to start working on this shit. Like, I don't know if that means just talking it out or -\" \n\n\"Yeah, I promise. I don't know yet either, but I need to work on this. I need to fix it.\" \n\n\"You know I'm here for you. Anything you need.\" \n\n\"Thanks for making me talk about this.\" I looked around the room. Sheets of unfinished songs were everywhere, mingling with empty glasses and bottles. \"I think I want to go back to real life. Record the album. Maybe go on tour.\" \n\n\"Thank God.\" Rick was out of his chair immediately. \"I'll make the arrangements and call the label.\" \n\n\"Tired of Wakeham?\" \n\n\"Yep. Let's get back to civilization.\" \n\n** \n\nAspen \n\nTo my credit, it was months before anyone noticed that Theo and I weren't friends anymore. \n\nI say 'my credit' because Theo skipped town, so it's not like he had to pretend like nothing changed. He was gone before I'd even returned from that business trip. \n\nAlso to my credit, I didn't cry about it. I wasn't a big crier to begin with, but I was incredibly hurt. When I found out he was gone, I was sad, but not surprised. He'd texted me once before he left - just a simple 'Can we talk?' - but I hadn't responded. I didn't want to talk. I didn't want to admit he'd hurt me. \n\nSee, this is why one-night stands were superior. Just sex, no friendships broken up, no dealing with stupid feelings, no getting involved in strange dramatics with famous musicians. ",
        "I still had a few months left in Wakeham, but was almost counting down the days. It was a normal workday, just like any other, until Lisa walked into my office. \n\n\"Thanks,\" I muttered distractedly as she placed a folder of reports on my desk. \n\nIt took me a moment to realize she hadn't responded or left, but was just standing by my desk. \"What's up?\" \n\nLisa sat down. \"Can we talk, friend to friend?\" \n\nI turned away from my computer and looked at her. \"We're officially on a coffee break. What's going on?\" \n\nShe seemed nervous, but resolute. \"Okay. Please don't get angry.\" \n\n\"I'll try not to.\" I shrugged. \"I can't promise anything.\" \n\n\"I'm not expecting you to, just hoping for the best.\" She sighed. \"Alright. Friend to friend. Did something happen between you and Theo?\" \n\nI felt a muscle in my neck twitch, but tried to maintain a calm expression. \"I haven't seen Theo in months. He left town while I was on that business trip.\" \n\n\"I know that.\" Lisa fidgeted. \"But as my friend, would you please be honest with me? Did you guys have something going on?\" \n\nI didn't respond right away. Nothing came to mind to respond with. I wasn't a liar. I wouldn't flat out deny it. But my fling with Theo had already ruined one friendship: the one between me and Theo. What if it was about to ruin the one between Lisa and I? \n\nMy lack of response seemed to be a response in itself. \"What happened between you two?\" Lisa pressed. \n\nI sighed miserably. \"Why do you need to know, Lisa?\" \n\n\"I don't know if you know this, but Theo's putting out a new album next week, and he always sends James a copy before it's released.\" I looked up, alarmed. \"There's a song on there that I think might be about you.\" \n\nI don't know if it was the way she said it, or if it was because I felt like I was about to lose my only other friend in Wakeham, but my head ended up in my hands as tears pricked in my eyes. I took a deep breath before the words started spilling out of me. \n\n\"Yes, okay? I slept with Theo. I didn't break him and Sheri up, I didn't even know him then.\" \n\n\"I know you didn't, don't worry,\" Lisa said, but I barely heard her as I continued. \n\n\"It was after the whole thing. He admitted to being attracted to me when we went to his place to confront him, and that day he came here with the kids, I gave him my number. We started talking and texting and things just escalated. It was never anything serious, and I told him that, because I wasn't going to be staying in Wakeham and I don't do relationships. Not anymore. And that was all fine and it was fun and just so good. I mean, you probably don't want the details because he's your brother-in-law but it was just really, really good. I liked him a lot.\" \n\nIt was at that point I realized the tears had escaped my eyes, and Lisa hurriedly handed me a tissue. I wiped my face. \n\n\"What happened, Aspen?\" she asked softly. \n\nEmbarrassed, I blew my nose, hard. \"Ugh. I can't believe I'm crying over this. This is bullshit. I don't cry.\" \n\n\"It's okay to cry.\" \n\nI sniffed and threw the tissue away. \"Well, that business trip came up. We had planned that he'd come over after dinner on the Friday but since I would be leaving before dinner, I asked him to come over on the Thursday afternoon. And it was...\" I smiled in spite of myself. \"It was a great afternoon. And then when we were done, he started getting really down on himself because I didn't want a relationship with him. He said I was using him.\" \n\nThe tears threatened to drop down my face again and I grabbed another tissue. \n\n\"I'd been clear that I didn't want a relationship. Not just with him, just in general. And yes, I was the idiot who brought that up while we were in bed after having really great sex. Sorry.\" \n\n\"It's fine, Aspen, you're not talking about my mother or anything.\" \n\n\"Well, I was an idiot. But he said some hurtful shit.\" I blew my nose again. \"Let me guess, the song is about what a cold-hearted bitch I am. Or no, about being used, specifically by a cold-hearted bitch.\" I laughed, the sound heavy and ironic. \"I liked Theo a lot. I wanted to at least be friends. The whole time I was away I thought I'd come back and we'd talk it out and it'd be fine, but he left town. He texted me once but I wasn't ready to talk so I never responded. And now I'm embarrassed to.\" \n\nLisa listened thoughtfully the whole time. I looked at her, eyes still wet, feeling uncharacteristically vulnerable. \n\n\"Please don't hate me,\" I asked, my voice pathetically small. \n\n\"Why would I hate you?\" Lisa asked. \"You and Theo clearly had chemistry. James and I were sure you would hook up at some point.\" She smiled. \"I know you're both good people. Whatever happened, neither of you were trying to hurt the other. I know you might not feel that way about him right now, but I won't believe that he intentionally did whatever he did.\" \n\nI let out a breath I wasn't aware that I'd been holding. \"Thank you.\" I wiped my face again. \"I can't believe he wrote a song about it. I don't know if I even want to know.\" \n\nLisa pulled out her phone. \"I think you'll be surprised. Don't tell anyone I showed it to you, it's a major breach of confidentiality and Theo's legal team scares me.\" \n\n\"He wouldn't do anything to you.\" \n\n\"Just, don't tell anyone.\" \n\nI settled in as Lisa pulled up the song. \n\n** \n\nTheo \n\n\"...and we're back! You're listening to the Al Stein Show with Dropkick Jill on WHLT Radio, and we're here today with a good buddy of mine, Theo Barker. Theo, man, thanks for doing the show with me. A lot of people don't know this, but you and I go way back.\" \n\n\"It's true,\" I replied. \"Al and I grew up together in Wakeham.\" \n\n\"Which is why this is the only radio show where you'll get exclusive access to interviews with Theo.\" Al grinned at me from across the table. \"Thanks again for being here, man. From everyone at the station and me. I know you don't do many of these shows anymore and I really appreciate you helping out an old friend.\" \n\n\"Thanks for having me, Al. It's always fun to spend some time with you and Jill.\" The pretty woman seated beside Al waved and blushed. \n\n\"So, back to the new album. Theo, I gotta say, this is some of the best music we've seen from you, and seeing as all your music is awesome, that's really saying something. I know it's still a few days before the full thing drops, but I'm excited to hear the rest of it.\" \n\n\"Thanks, Al. I'm excited about the album. I've done a lot of growing, both personally and musically, over the past year, and especially over the past few months. I think this album really shows that growth. Some of the songs were rougher to write than others, and overall I was aiming for a real representation of what the past year has been like in my life.\" \n\n\"I'd love to talk about this single you're releasing, 'Get Over It.' This is something that we haven't really heard from you before. Where'd this come from?\" \n\nI glanced out the window of the studio. Rick was watching, and he nodded encouragingly. I knew I was going to get questions about the song, but that didn't make it any less difficult to talk about publicly. But Rick had pushed me to do so. He was certain it would give me some closure to share the story behind the song. \n\n\"'Get Over It' is probably the song on the album that's closest to my heart,\" I started. \"I'd met this girl that I really, really liked, and I fucked up. Oh, crap.\" \n\n\"Don't worry, Jill's on bleep duty, she got that before it aired,\" Al said, grinning. \"I warned her ahead of time, we're on a short delay. Sorry, listeners, that's how the magic of radio works!\" \n\nI laughed. \"Al knows me too well. Anyways, I messed things up with this girl because I was insecure. I drove us apart. And it was losing that friendship with her that really made me realise that I was surrounding myself with people that I expected to take advantage of me because I felt like that's what I deserved. Then when I had someone in my life who wasn't just trying to walk all over me, I pushed them away because of my own baggage. And she taught me that, because basically if I didn't get over it, I was never going to be happy.\" \n\n\"There's a few lines in the song that are really interesting,\" Al mentioned. \"You say things like 'thank you for breaking my heart' and 'I deserve better and you deserve more.' What kind of message are you sending here?\" \n\n\"It's all sincere.\" I fidgeted a bit, but continued. \"It's like, 'thank you for breaking my heart' because if she hadn't, I never would have figured any of this out.\" I smiled, thinking of Aspen. \"This girl, I mean, you've never met anyone more strong-willed and stubborn. She's not known for sugar-coating anything. So I tried to kind of take that voice in the song. 'I deserve better' than what I'm giving myself, and 'she deserved more' than what I was giving her.\" \n\n\"It sounds like you might still have some feelings for this mystery woman,\" Al teased. \"Any chance you'll end up back together with her?\" \n\n\"I mean, it was never a relationship in the first place,\" I clarified. \"But I'm not a fortune teller, so I have no idea what the future holds.\" \n\n\"Well, we're just about out of time. Theo, I want to thank you again. We're going to finish up the show and play the world premiere of 'Get Over It' for our dedicated listeners and Barker Fans out there, and after the show, a few lucky callers are going to win a signed copy of Theo's new album, courtesy of Theo and us here at WHLT Radio.\" \n\nAs soon as Al was finished the sign off and started playing the track, we took off our headsets and left the studio. \n\n\"That was a great interview, man, thanks.\" Al shook my hand. \"Really, I can't thank you enough. I know you don't need to do these local station interviews at all anymore, and it means the world to me that you do mine.\" \n\n\"Anytime,\" I replied. \"Thanks for having me, really.\" \n\nWe chatted for a few more minutes before parting ways. While Al went back on the air, I took some photos with employees around the station and signed a few autographs, then Rick and I made our way back to the car. Once we were finally there and the driver had started bringing us back to the hotel, I finally relaxed. \n\n\"Have you heard from Aspen at all?\" Rick suddenly asked. \"Does she know about the song or the album?\" \n\nI shook my head. \"No. I'm guessing Lisa might have told her about it in passing, but I didn't expect to, honestly. I think it's all over for us now.\" I stared out the window, contemplating. \"Should I have told her about the song?\" \n\n\"Don't think it matters. It's not like you're calling her a cold-hearted bitch. She comes off looking pretty good in the song, actually, so it's not defamatory or anything.\" \n\nThe city flew by as we drove, and I watched hundreds of people out the window just living their lives. I wondered what Aspen was doing. If she was happy. \n\n\"Anna's birthday is this weekend. Do you think we can swing a trip back to Wakeham for a couple days?\" \n\n\"Yep.\" Rick pulled his phone out to start making plans. \n\n\"Do you know if Aspen's still there? I don't want to make things uncomfortable.\" \n\n\"I think she is for another couple months, but don't let that stop you.\" He looked up from his phone pointedly. \"She wouldn't have let it stop her.\" \n\nThat was definitely true. She wouldn't have let it stop her for one second. \n\n** \n\nAspen \n\nThe song made me cry again. \n\nLisa had seemed incredibly alarmed, and basically turned into a tissue-dispensing ball of worry and nerves. I finally warded her off as she attempted to shove another handful of tissues at me by grabbing the box away from her. \n\n\"That isn't what I expected at all,\" I finally said. \"He took responsibility for the whole thing.\" \n\n\"He needed to, from the sounds of it.\" Lisa awkwardly clumped the tissues in her hand. \n\n\"I have some of the blame.\" I sighed. \"It's stupid because I only knew him for a little while, but I miss him.\" \n\nLisa considered what I said. \"Why would it have been such a bad thing for a relationship to develop?\" \n\n\"I don't do relationships.\" \n\n\"You've said that a million times, but I still don't know why.\" \n\nI tensed. \"I just don't like them. I was in a relationship for a long time and it didn't end well. I don't like feeling like someone owns me, like I'm an object.\" \n\nLisa frowned. \"That's not what relationships are about. You're not supposed to belong to someone, you're supposed to be a team.\" I didn't reply. \"Aspen, having one bad relationship -\" \n\n\"It wasn't just bad, okay?\" I snapped. \"I don't do relationships.\" Lisa recoiled in her chair slightly. \"Sorry. I just... I can't.\" I started laughing suddenly. \"I guess I should take Theo's advice and get over it.\" \n\n\"From the sounds of that song, that was your advice to him,\" Lisa pointed out. \"I think you owe it to yourself to at least try to figure out what your hangup on relationships is.\" I grumbled out an agreement. \"Aspen, I've known you for months now. I have never seen you react like this to something. You're this tough, uncrackable, intimidating person who says what she thinks and doesn't apologize for it. You're also super kind-hearted and sweet, and this is really the first time I'm seeing you vulnerable.\" \n\n\"You mean I'm crying like a pathetic baby.\" \n\n\"No, I mean you're showing that you're an actual human being and that this whole situation has clearly caused some emotional turmoil. That's not a bad thing, and it doesn't mean you're pathetic. It means that there's something in your life that needs attention.\" \n\nI replayed that conversation in my head a few times. A few days later, I was thinking about Lisa's words again while sitting on my bed. \n\n\"I think you should talk to Theo,\" she had said. \"Just call him. Or text him. Don't let things just be over.\" \n\nI was toying with my cellphone while I thought. Lisa had made a lot of valid points. But what if Theo didn't want to talk to me? What if he blocked me, or told me I was shit, or worse? What if I was going through all this, actually considering making myself vulnerable, and he was going to hurt me? \n\n\"But what if he doesn't?\" I said out-loud. \n\nI stared down at my phone, suddenly getting angry at myself. \"And who the fuck cares if he does?\" \n\nI opened my messages and found Theo's number. The last message from him was from just after our fight, and all our flirty messages from before were still there. I ignored them as I started typing a message. \n\n'I know it's been months but I wanted to say I'm not happy with how things ended and I freaked out because...' \n\nNo, that wouldn't do. I deleted it. \n\n'When you said you wanted a relationship I was scared.' \n\nNope. Delete. \n\n'I liked the new song. I'm glad you see it from my point of view.' \n\nUgh. That was terrible. Delete. \n\nI went through line after line, trying to phrase things the way I wanted to. Finally, I found the solution. \n\n'Hey. Can we talk sometime?' \n\nI re-read those five words about 80 times before finally hitting send. Immediately I threw the phone to the other side of the bed and flopped down, my heart racing. \n\nWhat if he didn't text back? \"He can go to hell, that's what,\" I answered myself. But what if he didn't? What if I was opening myself up for no good reason? \n\nThere was no way he was going to text back, I thought. \n\nIt had only been about thirty seconds since I'd sent the message, yet somehow, I was startled when my phone went off. Snatching it up from the other side of the bed, palms sweaty, I opened Theo's response: \n\n'Yes. I'd love that. Are you busy right now?' \n\nMy mouth was dry and hands shaking as I responded. 'No, just sitting at home. Call me when you're free.' \n\nI kept a firm grip on my phone, waiting for the call. A minute went by, then two. I started getting antsy. I shouldn't have left an open-ended time. I should have told him when to call me. Or at least, asked when he would. I thought about texting him again, and quickly decided against it. He'd call when he was free. \n\nI got out of bed and walked into my kitchen, keeping the phone nearby at all times. Opening the fridge, I refilled my water glass and began drinking. Before I'd even shut the refrigerator door, I'd downed half the glass. I took a breath and lifted the glass to my lips again to take a more conservative sip when three loud knocks at my door made me jump and slosh almost the entirety of the rest of the glass down my shirt. \n\nCursing, I glanced at the clock, not sure who the hell would be knocking at this hour. Shaking my head at the fact that it was just after 9PM and I was having 'at this hour' thoughts, I strode to the door and flung it open. \n\nIt was Theo. \n\nMy mouth dropped open and I couldn't speak. He looked great. His eyes were brighter, hair was still shaggy but in a much more groomed way. He was dressed casually, as he always was, but with his shoulders square and head held up, he gave off an air of confidence I hadn't seen from him before. Even with the nervous expression on his face, he seemed more self-assured. A lot of feelings suddenly came tumbling back: how attracted I had been to him, how attracted I still was. How hurt I'd been, but how amazing things had been before that. \n\n\"Hey,\" he finally said. \n\n\"Hey.\" \n\nI gaped at him for another moment before my brain finally caught up with the situation, and I burst out laughing. Theo joined in and I reached forward to give him a hug. \n\n\"I had no idea you were in town,\" I said as I hugged him. \n\n\"Just got in, actually. It's Anna's birthday this weekend. Stopping by to surprise her.\" \n\nThe hug went on a little longer than it should have, mostly because I didn't want to let go. \n\n\"Why is your shirt wet?\" he suddenly asked. \n\nI pulled myself away from him, embarrassed. \n\n\"Come in, we should talk.\" \n\n** \n\nTheo \n\nAspen grabbed us each a drink and we settled on her couch in the living room, making slightly awkward small talk. Once we were both seated, she looked at me, not knowing what to say. \n\nI wasn't quite sure where to start either. She looked as beautiful as the day I'd last seen her. Even in leggings and a baggy and for some reason slightly damp shirt, her hair twisted up and messy, she was beautiful. I missed those eyes, I missed those lips, and I felt the chemistry we'd had return instantly. I didn't know how to start the conversation when all I wanted to do was take back everything that had happened and go back to how we'd been. \n\nAlright, I thought. Start simple. \n\nI swallowed. \"I don't know if you've heard, but I have an album coming out. I wanted to tell you, there's a song I wrote about you. Well, us. Or whatever it was that happened. I hope you're not offended.\" \n\nShe looked down, smiling. \"Don't tell your legal team, but I heard it a couple days before it was released.\" I raised my eyebrows at her. \"Lisa is terrified of your legal team, but she figured out it was about... us.\" \n\nWe both laughed. \"I wouldn't call a lawyer on Lisa.\" \n\n\"That's what I said,\" she replied. \n\nWe fell silent again. \n\n\"What did you think of the song?\" I finally asked. \n\nAspen sipped her drink. \"It's good. I like it. A solid B+, as far as songs go.\" \n\n\"Damn, that's going to ruin my GPA.\" \n\nMore laughter. I felt the tension in the room dissipating. Things might have changed, we had even changed a bit, but the spark that brought us together in the first place was still there. \n\n\"I'm a hypocrite,\" Aspen said suddenly, looking up at me. \"That song is all about inspiring you to be more confident, and to take risks, and to treat yourself better. But I don't deserve credit for any of those things because I don't practice any of those things.\" \n\nI shook my head. \"Why would you say that? You absolutely do.\" \n\nAspen looked at me. Her eyes seemed bright, but I realized it was because they were wet. ",
        "\"I told you to get over it. But I haven't gotten over any of my stuff.\" She took a deep breath, as if to steel her resolution. \"You deserve an explanation.\" \n\n\"Before you do, you deserve an apology. Because however you feel about your role in what happened, it's mostly my fault. I'm sorry.\" I paused, looking at her. \"I don't know why you don't want a relationship, but you were right about everything. I made it about me when it wasn't just about me, and I took it personally when it wasn't supposed to be. I put pressure on you to take things further than we agreed on and was angry when you didn't, and that wasn't fair. I'm sorry, Aspen. I really am.\" \n\nShe reached out and touched my hand. \"Thank you,\" she said softly. \"I'm sorry, too. Because I freaked out. And I'm going to tell you why, even though it doesn't really excuse it, and hope that it helps make sense of things.\" She paused again. \"I haven't really told this to anyone before.\" \n\n\"Tell me,\" I urged. \n\n\"So, my dad died when I was a kid. I mean, I barely remember him. I wasn't old enough for my parents to have even tried having another kid yet. So it was just me and my mom growing up. She didn't really date much, at least that I knew about, and she worked all the time. When I finished high school, I moved out as soon as I could so she didn't have to keep spending money on me. Went to school, got a diploma, got a decent job, and I met this guy, Patrick.\" \n\n\"So after we'd been together for a year or so, my mom died kind of suddenly.\" She stopped and swallowed, closing her eyes briefly before clearing her throat. \"It was a total shock. She was still my best friend and we were still so close. And I ended up in this cloud of existence where I wasn't really present at all. Patrick kind of swooped in to take care of me. He got me to move in with him, and I was... well, in my mind he was helping me. What really happened was that he started separating me from all my friends, and then slowly started controlling everything. He'd tell me what to do and what to wear. I wanted to apply for a promotion at work and he got mad, saying I shouldn't be moving my career forward because he was the man of the house. \n\n\"And he'd do this thing, he'd order me to do something, like let's say he'd tell me to bring him dinner. Then before I was allowed to get up and do it, I had to go over to him and kiss him. Then I'd come back with dinner, and I'd have to kiss him before putting it in front of him. And let's say I got him the wrong thing, he'd yell at me, and then when he was done, I'd have to kiss him again.\" \n\n\"That explains the dislike of it.\" \n\n\"I despised kissing him,\" she ranted. \"His mouth was either scratchy dry or soaking wet, never in between. His lips felt like they'd either cut my face or make me feel like I was drowning. It was just awful. And when I realized how much I hated it, and that I was still doing it, I started realizing he was manipulating me, and that this wasn't right, it wasn't normal. \n\n\"It was around the same time that I came home one day and caught him balls deep in some poor girl, right on my bed. She was humiliated. He hadn't told her about me. So she left while I cried.\" \n\nShe laughed suddenly. \"So then Patrick, the sick son of a bitch, starts telling me how it's my fault, and I'm not doing enough to please him, and I should be the one embarrassed because he felt the need to cheat on me and if I was doing 'my job' he would have been satisfied. And that was it for me.\" She shrugged. \"I woke up from that cloud and I told Patrick we were done and I started packing my things. \n\n\"Then as I'm packing - just basic shit, clothes and whatever - he's screaming about how I owe him everything, and he's taken care of me, and I'm not allowed to take certain things because they're his. I finally had enough and screamed back at him that he was a piece of shit and no one would ever love him. And that's when he came across the room and pushed me into the wall hard enough that a picture fell off and smashed on the floor and my head left a hole in the drywall.\" \n\n\"He did what?\" I had unconsciously clenched my fists. \"He fucking hit you?\" \n\nShe smiled, her eyes watery. \"I didn't respond in the best way.\" \n\n\"How?\" \n\n\"I kicked him in the nuts and told him if he ever came near me again, I'd... well... I'm not proud of what I said. But he fell on the ground and I kind of just walked over him out of the room. Never heard from him again.\" She sighed. \"I hate that this sounds like a woeful sob story, but I was done. I didn't want to be in a relationship again. It's all just power dynamics, and I don't want to feel indebted to someone, or that I belong to them. Before Patrick, I'd wanted to settle down, have a family. I had this dream that I'd have a big house and we could bring my mom to live with us and she'd help watch the kids and she could finally relax after everything she did for me.\" \n\nAspen smiled sadly, looking down at her hands. \"Then she died. And Patrick took advantage of it. So I left, I moved in with a friend temporarily, ended up getting that promotion that Patrick hadn't wanted me to apply for. Once I got that, I moved closer to the head office, bought a small place. And just kind of buried myself in work, to the point that my boss made me come here for a break because he figured I'd burn out. \n\n\"And then I met you. And I liked you. And then you accused me of taking advantage of you and I thought I was going to hurt you like Patrick hurt me and I couldn't...\" \n\nShe took a deep breath and exhaled slowly. \n\nThe story explained so much, and I was enraged and upset on her behalf. This Aspen, the one trying so hard not to cry, the one hurting - this explained the Aspen I knew, the stubborn, blunt one who knew what she wanted. She was unapologetically herself, self-assured, taking what she wanted, but guarded because then no one could manipulate her again. \n\n\"You aren't capable of hurting someone like he did to you,\" I told her. \n\n\"I don't know, I canned him pretty good.\" She smiled, seemingly in spite of herself. \"I mean, he went down. Hard.\" \n\n\"He deserved it,\" I said simply. \"And it seems pretty cause and effect to me. 'Don't hit Aspen, she won't kick you in the nuts.' Seems fair.\" \n\nThe tension broke and Aspen started laughing. \n\n\"Well, that's my tragic backstory. Now you officially know more about me than probably anyone else on the planet.\" \n\n\"Jesus,\" I said. \"I'm so sorry. I mean it explains a lot, and I'm just sorry. I'm sorry that shitbag did that to you, and I'm sorry about your parents.\" \n\nAspen smiled sadly. \"It happened, and I survived. It's not the sole thing that defines me, but you deserve to know what was holding me back.\" \n\n\"So...\" I hesitated, not wanting to make the conversation about me but needing to know. \"Was there ever any chance? For us, I mean.\" \n\nShe didn't answer right away. \n\n** \n\nAspen \n\nHow was I supposed to answer that? \n\nI stared down at my hands, trying to compose a sentence that made sense, that wasn't hurtful. That was honest. \n\n\"I think there was a chance until the idea that there was a chance got brought up,\" I finally said. \n\nTheo looked confused. \n\nI sighed. \"I mean, it was going well. I think I was starting to get past the fear of it until you brought it up, and then I lost it.\" \n\nTheo nodded. \"It was working until I pushed for it to be more, when it was getting there on its own.\" \n\n\"I guess.\" We were quiet for a moment, processing. \"I've missed you.\" \n\n\"I miss you too.\" He hesitated before continuing. \"I'm sorry I made a mess of things. I liked what we had. I miss it a lot.\" \n\nI didn't know what to say, so instead, I reached over and took his hand in mine. We sat side by side in silence, contemplating, facing forward on the couch. \n\nI felt like my whole body was vibrating. He hadn't run away when I told him what happened to me. He hadn't judged me. He didn't make me feel like a helpless victim or somebody who needed to be saved. He just listened. \n\nMaybe that was where our chemistry came from. Theo wanted people to treat him like a normal person, even though he was famous, and part of his attraction to me stemmed from the fact that I did treat him the same way I'd treat anyone. I wanted to be more than what had happened to me, and Theo instinctively understood that. I'd been so afraid to even tell anyone about Patrick that I'd blocked an entire type of experience from my life. \n\n\"Theo?\" I said suddenly. \n\n\"Yeah?\" \n\n\"I don't know how to be in a healthy relationship. I can't promise I'm any good at it. But I'd like to spend more time with you, and maybe see where things go, if you're willing to take me back.\" \n\nI couldn't glance in his direction, couldn't even blink. I felt as if I'd stripped off every article of clothing and stepped onto a busy highway. I know my palms were sweating, and I'm sure Theo could feel it too. \n\n\"Aspen?\" he said softly. \n\nI could feel his eyes on me, but I couldn't turn towards him. I pressed my lips together tightly. \n\nTheo let go of my hand. I felt him shift on the couch, and suddenly he was in front of me, crouched on the floor so he was looking up at me. I closed my eyes briefly and reopened them, looking into his face. \n\n\"I promise I won't cheat on you,\" he said. \"I won't try to control you. I won't stop you from living your life. We can take it slow, we can see what happens.\" My jaw twitched. \"If you are ever uncertain, all you have to do is talk to me. We'll look at things together.\" \n\n\"I'm only going to be here for a few months,\" I whispered. \"I can go back to my old job at the end of my contract.\" \n\nTheo shrugged. \"If you want to go back to your old job, we'll find a way to make things work. I travel a lot, too. I'll have another tour coming up soon.\" \n\n\"Do you still feel like you're not good enough?\" \n\nHe thought for a moment. \"I think there's always going to be some self-doubt. But I'm trying to make sure it doesn't control my life. I'm trying to look at things more positively. Like not saying 'this girl is too good for me.' Instead I'm going to say 'I'm so lucky this amazing girl likes me.'\" \n\nI snorted. \"You're so sappy.\" \n\nHe grinned. \"One of us has to be.\" I laughed, shaking my head. \"I'll even try to help you learn to like kissing again. Your kisses are amazing. I want to make you see that.\" \n\n\"I kind of like kissing you, you hopeless romantic,\" I said, but I was smiling too. \n\n\"That's just who I am,\" Theo said, or at least I think that's what he was saying. \n\nI slid forward on the couch and put my hands on either side of Theo's chin, tilting his face up towards me, and kissed him. \n\nI caught him off guard, but he recovered quickly. He straightened up a bit, resting one hand on my knee while the other made its way to the back of my neck. He kissed me hard, and I responded eagerly. \n\nHe pulled back for a moment to breathe. \"Should we slow down?\" \n\nHis eyes betrayed him. I knew he would respect whatever answer I gave him, but he didn't want to. \n\nI gave him what I hoped was a coy look. \"You're an A+, Theo. I need a repeat of that, right now.\" \n\nTheo almost launched himself off the floor and back onto the couch, where he guided me to lie down on my back. I obliged, looking up at him as he moved between my legs and hovered over top of me. He kissed me again, the weight of his body comforting against mine, his lips searing hot against my own. I could feel his body responding to me, his cock growing beneath his jeans, pressing against me, and my own wetness starting to seep through my slit and into my panties. \n\nTheo was holding himself up with one hand, and the other began to move down my body. While he continued to kiss me, working his tongue against my mouth, he touched me through my clothing, caressing my breasts, tracing along my waist and down to my hips. Then, his fingers began to trail back up, slipping past the hem of my shirt and tickling my bare stomach. When he reached my breasts again, he cupped one through my bra, tracing the hardness of my nipple through the fabric, lightly pattering his fingers along the top of my breast, before snaking his hand around my body and underneath us. He deftly undid my bra with one hand, in one try, and I giggled against his mouth. \n\n\"Impressive,\" I remarked. \n\nTheo winked, then managed to help me wriggle out of both my top and bra. Once they were off, he looked down at me, his face serious again. \n\nSuddenly self-conscious, I bit my lip. \"Something wrong?\" \n\nHe shook his head. \"You're just so beautiful,\" he murmured, and before I could make a snarky comment or laugh or anything, he dipped his face down and took one of my nipples in his mouth. \n\nAn immediate shock of arousal bolted through my body, straight from my nipple to my pussy. I moaned, shocked, as he began to lick and suck my tits. His tongue traced patterns around the hardened nubs, his fingers groped at me, his cock grew harder and harder between his legs and pushed against me. The feel of his arousal heightened my own, and one of my hands found its way to the back of Theo's head. I urged him on as he ravished my breasts, worshiping them, making sure no spot went unkissed, uncarassed, unfondled. I couldn't help myself, and started grinding up against him, the roughness of his jeans and hardness of his cock easy to feel through the leggings I wore. \n\nTheo released my tits reluctantly, making his way back up to kiss me again. \"I feel like you're trying to tell me something with all this grinding,\" he said against my lips. \n\n\"Hmm, are you not getting the message?\" I responded. \n\n\"It feels like you want me to fuck you, but I might be translating wrong, because it also kind of feels like you want me to eat your pussy until you're screaming.\" \n\nHe punctuated his statement by kissing me. His words made me drip and I bit at his lower lip. \n\n\"I want both,\" I replied after he pulled away. \n\n\"Mmm. So do I.\" \n\nHe lifted himself away from me, kneeling between my legs, but before I could sit up, he had his hands on the waistband of my leggings and was pulling them down. I kicked them off as he got to my feet. His head was between my legs almost instantly. \n\nI had a thong on, and Theo was using that to his advantage. He cupped my ass while pushing his face against my panties and kissing my clit through the fabric, then pushed it slightly to the side to reveal my pussy lips. His tongue licked up and down my cunt, dipping in my lips, just barely grazing my clit. I moaned, thrusting myself up towards his face, and he placed a kiss on my mound through the panties before hooking his fingers in the waistband and pulling them down. \n\nI lifted one leg and slid my foot out of the panties, then rested it over Theo's shoulder. He pushed my other leg up into the same position, so that my thighs pressed against his ears. He teased me some more, licking and kissing everywhere except where I wanted his tongue, and increasing my need for him in the meantime. \n\nI squeezed my thighs around his head. \"Please, Theo,\" I gasped. \n\n\"Patience,\" is what I think he muttered, but it was so muffled against me that I wasn't sure. \n\nWhat I do know is that the words were spoken right against my slit, and that his tongue snaked out and just grazed my clit to punctuate whatever point he was making. I tilted my head back and groaned, then looked back down. \n\nI loved seeing his head between my legs. His eyes were closed as he licked my pussy, until I think he realized I was watching him and he looked up at me. I could see a smile through his eyes, and he went back to what he was doing, which was finally, finally taking my clit into his mouth and sucking gently. \n\nMy eyes squeezed shut as I cried out. Luckily, Theo seemed to be done with his teasing. As he licked my clit, he brought his hand up to my pussy and slid a finger inside of me, then two. For a while he fingered me, keeping a steady rhythm that complimented his attention to my clit, before he curled his fingers to press against my G-spot. \n\nThe noise I let out wasn't quite a scream, or a moan, or anything. It may not have even sounded human. I came with a crashing force, my whole body seizing and my thighs clenching against Theo's head like a vice. He kept licking, kept sucking, taking every moment of my orgasm and making it just that much better by continuing his attention to my pussy. \n\nAs I tried to catch my breath, Theo pulled his hand from my ass and moved his mouth up to my stomach, kissing my belly button. He started to stand up, but I pulled him towards me and pressed my lips against him, tasting my own juices on his mouth. \n\nI pulled myself up off the couch and stood, naked before Theo. He started to say something, but I kissed him again and pulled him to his feet. I unbuckled his belt and pushed his jeans down, lifted his shirt above his head, and started on his boxers. He seemed surprised by the speed at which I wanted him naked, but I'd just had a taste of sex with Theo, and I wanted the rest of it now. \n\n\"Sit down,\" I panted. \"I have to get a condom.\" \n\nI ran to the bedroom and grabbed the box in my nightstand drawer, making my way back to the living room. Theo was on the couch, naked, his lovely cock in his hand. I handed him a condom and put the rest on the coffee table as Theo put it on. Once he was done, I straddled his lap, positioning his cock to push inside me. \n\n\"Aspen,\" he whispered. \n\nI leaned forward and kissed him again. He kissed me back eagerly, and as his hands ended up on my hips, I lowered myself down on his cock. Our mouths still together, we both made noises of relief as he entered me. I sat still for a moment, simply feeling his cock inside me, feeling it press against the walls of my pussy, stretching me, fitting inside me perfectly. Once I couldn't take it any longer, I started moving, slowly rocking back and forth, letting Theo's cock slide almost entirely out of me before impaling myself on it again and again. \n\nHe gasped and groaned, and his hands guided my hips in their movements. His head dipped, and suddenly he had my breast in his mouth, sucking my nipple as I rode his cock. I cried out as he sucked, flicking his tongue across my nipple, my pace increasing both out of necessity and from his hands grabbing my hips and guiding me faster and faster. His fingertips dug into the side of my ass, almost painfully, but it felt so good I couldn't ask him to stop. \n\nI could feel my orgasm building again, and I steadied my pace, not ready to stop, wanting to feel more and more of him inside of me. Theo's mouth never left my breast, even though I could hear and feel him groaning against me. His other hand moved suddenly and I tensed, expecting him to spank me, but instead it just slid onto my ass, and closer and closer to my ass hole, until his fingertips were pushing to be let in. \n\n\"Yes,\" I urged, and he thrust his finger forward, pushing it inside me. \n\nI moaned, my hips bucking wildly. I could hardly take all the stimulation - the tongue flicking my nipple, the cock fucking me, the finger inside my ass. I began gasping, panting, trying to tell Theo I was going to come again, when it hit me, and I pitched forward, my breasts smothering Theo as I came. \n\nIt ripped through me, from my toes to my neck, and Theo's arms held me in place tightly as I came down. He had taken the finger out my ass at some point, and was holding on to me for dear life. He was still moving beneath me, thrusting up into my pussy, when I came down enough to realize he wasn't done. I leaned back, letting him breath, and began riding his cock hard. \n\n\"I need you to come for me,\" I told him. \n\n\"Oh, it won't take long,\" he gasped. \n\nAs I rode him, I kissed him again, and I think that's what set him over the edge. His hands were spread over my ass and back, and his fingertips dug into me again. I bit down on his lip and he cried out, suddenly stilling as he came. I kept riding him, slowly, gently, until I was sure every last drop of cum was out of him. ",
        "Theo tilted his head back on the couch, his throat bared to me, eyes closed as he panted. I kissed the bare neck in front of me, and unsteadily crawled off of him. As we both caught our breaths, I smiled. \n\nI guess I didn't hate Wakeham quite as much as I thought I did. \n\n** \n\nEpilogue \n\n\"So, this is it. What's the decision?\" \n\nKevin is looking at me, and I smile - calm, confident. \n\n\"Both,\" I say. \n\n\"Both,\" Kevin repeats. \n\nHe's wearing a confused look, and I'm sure Darby would be too, had I not already told her what I was planning. \n\n\"Both,\" I say again. I open the file folder in front of me and withdraw a proposal report. \"Wakeham is a money maker no matter who's in there. You know that, I know that, everyone knows that. Even Daniel could run the place, and he's an idiot. I can run it better, and we all know that too. But I miss traveling. I liked doing pre-audits.\" I slide the report to him. \"You can have me in Wakeham half the time and doing pre-audits half the time. I've done the math. It's not only possible, it's more efficient.\" \n\nKevin looks through the proposal, his expression difficult to read. I catch Darby's eye and she shoots me an encouraging half-smile. The board room is quiet, the only sound the shuffling of the paper as Kevin turns the pages. \n\n\"Why?\" he finally says. \"You're right, of course. This proposal is airtight. If anyone can do it, I know it's you. But why in the hell would you want to do that?\" \n\nI shrug. \"It turns out I like Wakeham.\" Darby snorts and I shoot her a dirty look. \"I like the people in Wakeham. But I'm not a small-town girl. I really miss my old job, too, even though I do enjoy directing the facility.\" \n\n\"How much is this going to cost me?\" Kevin asks. \"What kind of compensation are you expecting?\" \n\n\"The deal was that at the end of the year, I keep the raise, or it increased to 15% if I stayed.\" I pull out a copy of my contract, and a final page of the proposal. \"Now, since we're exploring a third option that we didn't consider when I signed this, obviously that needs to be taken into consideration, but I think you'll find I'm asking for a fair deal.\" \n\nI pass him the page and he reads it, then re-reads it, then looks up at me before reading it a third time. \n\n\"Are you crazy?\" he asks. \n\nI shake my head. \"I'm happy with my compensation. I just want a better work-life balance.\" \n\nDarby snatches the paper from Kevin and reads it herself. \"All you want is more vacation time?\" she says, incredulous. \n\nKevin regards me carefully. \"So aside from wanting to book the next two months off and use up some of your already-banked time, you want nothing except more time off and the salary you already have.\" He taps his fingers on the table. \"I'm getting the deal of the century here. What's the catch?\" \n\nI shake my head. \"No catch. This is what I want.\" \n\n\"I thought you wanted to travel.\" \n\n\"Well, Theo's tour schedule doesn't always align with the pre-audit schedule. Plus, this way I can see some places that we don't have locations.\" \n\nKevin still doesn't agree to it right away, but I don't expect him to. I leave the meeting with a smile anyways. I know he will eventually agree to it. As I walk down to my car, I call Theo. \n\n\"How's Singapore?\" I ask as he picks up. \n\n\"Lovely. Can't buy gum here, did you know that?\" \n\n\"I've heard that before, yeah.\" \n\n\"How'd the meeting go?\" \n\n\"Great. I'm hoping he'll have an answer for me soon. I think he's trying to figure out if it's a scam. He did ask if I was crazy.\" \n\n\"You are a little crazy.\" \n\nI smile as I get into the car. \"You are too. Have a great show tonight. Only six more days and I'll be there.\" \n\n\"Can't wait. Talk later.\" \n\nMy name is Aspen Haws, and that was how I fell in love. If you didn't like it, well, fuck you. \n\n** \n\nAuthour's Note: Thank you so much for reading my story. If you enjoyed it, please consider leaving a rating and review below!"
    ],
    "authorname": "MsCherylTerra",
    "tags": [
        "crying",
        "drama",
        "intercourse",
        "kissing",
        "musician",
        "oral sex",
        "plot",
        "romantic man",
        "songwriting"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/get-over-it-pt-03"
}