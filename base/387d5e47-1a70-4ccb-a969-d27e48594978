{
    "title": "Warts & All Ch. 01",
    "pages": [
        "This story takes place in the early eighties. It is a work of fiction but as in previous stories it is based on some real events and some characters I have known. It is a story about truth and consequences, love and infidelity. There is very little sex in this story.\n\n*\n\nSlowly I became aware of my surroundings again as my thoughts began to emerge from the fog in my mind. The ominous semi-darkness of my basement workshop, lit only by the light from the partially open door reflected my mood. \n\nOne of my racquets that I had been working on earlier was still locked into a vise on the workbench. I could hear the sounds of our two youngest on the other side of the partition wall playing in the rec room and the Disney movie they were watching on the VCR. \n\nAs I sat there in my old beat up recliner I glanced up at the clock on the wall. I had been sitting there for over a half hour my thoughts spinning in circles, unmoving, unseeing, trying to understand what I wished I hadn't heard. \n\nSunday evening dinner was over. My wife Sally was cleaning up the kitchen and dishes and I had gone down to my workroom to re-grip several of my racquets for the upcoming fall racquetball leagues. I had been an avid player for seven, eight years now, playing several mornings a week before reporting to work as an engineer at GM. I also played in at least one evening league every fall, winter and spring session. \n\nIt was a matter of pride to me that I had gotten pretty good in that relatively short period of time and always played in the 'A' brackets. And I competed in local tournaments several times a year usually finishing near the top. Playing racquetball consistently kept my weight at about two hundred pounds spread over my six foot two frame.\n\nOur seven year old daughter, Jessie had followed me down to watch her favorite movie in the play room and the baby, Allison, age four had followed her. Allie was at the age where Jessie couldn't go anywhere without Allie wanting to go too. Lucky for us Jessie didn't seem to mind yet. I was dreading the day when she got older and that would change. \n\nOur son, Jason, nine years old now, was very much aware that he was a boy, and the oldest, and shouldn't be expected to play with his little sisters. He was probably up in his room building or playing with his model planes and cars.\n\nFortunately Jason took after me and many of the Robinson clan in looks. Brown hair, hazel eyes with a strong chin and prominent, but not overly large nose. Jessie had Sally's red hair and delicate features. Allie had blond hair and while early yet, she appeared to have a blend of both of our features.\n\nI finally finished the grips on the three racquets that I kept in my gym bag and was feeling the string tension thinking that a couple of them could stand to be restrung. It was Murphy's Law that you could always count on a string breaking at least once a week in the middle of a league match. \n\nI looked in on the girls and they were right in the middle of 'Lady and the Tramp' so I decided to wander back upstairs. As I climbed the stairs in my stocking feet and got close to the partially open basement door I could hear the soft murmur of Sally talking on the telephone. The thought occurred to me that maybe I could sneak up on her and get a little grab-ass. I had thoughts of being able to set the mood for something later on even though we had already gotten our usual weekend mattress time the morning before. \n\nAs I approached the door I peeked through the opening to see where she was. Perfect! I grinned in glee. Sally was leaning on her elbows on the kitchen counter with her butt clad in tight jeans pointing right at me and holding the phone up to her ear. Her blouse was un-tucked and hanging loose and I could see her bare midriff and just a hint of her bra. Her red hair was in a pony tail that bobbed up and down as she talked.\n\nEven after three kids and ten years of marriage Sally was still hot. She stood about 5' 6\", and kept her weight under 130 through regular exercise and eating right. Age and maturity had softened her curves somewhat but she was sexier now than when we married. She was twenty-three then and I was only a year older. The kids may have slowed down our sex lives over the years but we usually managed to eke out some time for ourselves a couple times a week. \n\nNow the view of that wonderful pear shaped ass and long tapered legs was starting to give me definite stiffening in my groin. As I slowly eased the door open wider I could hear some of the conversation that was taking place on the phone.\n\n\"... on the schedule for Tuesday and Thursday from nine until three.\" I heard her say. There was a pause as she listened to what the other person was saying. \n\n\"Yeah, I can talk. Phil's down in the basement with the girls. Why?\"\n\n\"Yep, I think so too, Debbie. I've been thinking about that a lot lately.\"\n\n\"This coming weekend? I don't think we have anything on the calendar. I could probably do it.\"\n\nAhhh! Now I know. She was talking to her friend and boss, Debbie Bradshaw. It sounded like they were setting up another one of their regular weekend shopping trips that happened three, four times a year.\n\nI slowly pushed the door open further and started to step out to make a quick lunge for the prize beckoning me when suddenly I stopped, puzzled by a strange sound. Sally giggled! What the hell? Then she giggled again as she listened to something Debbie was saying. What surprised the hell out of me was that I couldn't remember Sally ever giggling like that since our honeymoon.\n\nThen she lowered her voice and I could just make out, \"...sure like to try that thing again before the wart comes off.\"\n\nSuddenly that comment brought to mind a conversation I was party to in a bar a couple of months before. I started to feel dizzy and light-headed. I eased back onto the basement step and slowly pulled the door almost shut behind me. As I did so Sally continued to laugh and practically whisper into the phone. I could only make a word here and there, \"...last time ... really had me going ... I know, I know ... yeah ... both of them? ... tell him we'll see ... uh-uh, can't wait!\"\n\nI stood there in the darkness of the stairwell as she started to wrap up the conversation. Suddenly I didn't want her to know that I was there so I turned and quietly made my way back down the stairs and staggered into my workshop. I collapsed into my chair as I thought about that conversation that I had been reminded of.\n\nIt had occurred last spring after one of the last matches in our Wednesday night racquetball league. Several of us went to a bar afterwards for a couple of beers which we did about once a month. After an hour or so there was only myself, John Harrison and Craig Davis left. John and Craig were best friends and had joined the Oak Park Y only a couple of years before.\n\nJohn was quite a beer drinker but Craig was strictly a soft drink guy. Eventually I found out he was an alcoholic and had quit drinking some years ago. From what I heard the only part of his alcoholism that was a problem was he couldn't get it up after a couple of beers, which apparently annoyed his wife plenty. But he still enjoyed the bar scene and would join the crowd whenever there was an opportunity. Both were married, John had two kids and Craig had one. \n\nAs usual, after discussing the matches for awhile the jokes and talk would turn to sex and women. After a dozen times in the bar with those two I had figured out that they didn't have any scruples about fooling around. And a couple of times they seemed to take an unusual interest in my marriage and my sex life to the point that it made me uncomfortable. On at least one occasion I had left after one beer just to avoid the subject.\n\nOn this particular night Craig was razzing John about his wife, Mary. She was insisting that he have a surgical procedure of a very personal nature. I thought he was talking about a vasectomy and chimed in that Sally was talking about me having it done so she could quit talking the pill. But so far we hadn't come to an agreement.\n\nCraig just kept grinning as John got this pained look on his face. \"Oh, no, she wants him to have the wart removed!\" Craig said practically belly laughing.\n\nLooking puzzled I said \"I guess I'm lost. What are you talking about?\"\n\nJohn got a little red in the face but explained that ever since puberty he had had an everyday, garden variety wart on the top of his penis about half way down or about four inches back from the tip. This time I laughed. I had seen him in the shower, not close enough to notice a wart but close enough to know there was no way he was packing eight inches, soft or hard.\n\nHe admitted that over the last couple of years that the wart had grown some and it was starting to freak his wife out. John was insistent that the wart served a valuable purpose. When having sex in the missionary position and with the right angle his wart was perfectly positioned to stimulate the clitoris. He referred to it somewhat crudely as his 'clit tickling pussy pleaser'. His wife, Mary was insisting that he had to have it taken off. Even if it meant it she lost something in the transaction. \n\nIt seemed to me John didn't as much object to his wife missing out as he objected to loosing an advantage he had when going after other women. Apparently his wart often became a topic of discussion and invited a certain amount of curiosity when trying to talk women other than his wife into bed. About that time I decided the crap was getting too deep for me and decided to hit the road.\n\nNow I sat in the dark thinking about that conversation. I just couldn't believe Sally could be involved in anything that her phone call was suggesting. Sally knew John and Craig were someone I played racquetball with. I had talked about them several times before and their names were usually on the match schedules I kept with our calendar. But as far as I knew they had never met. \n\nBut the dots kept trying to connect themselves no matter how much I tried to deny it. I had this sinking feeling in my gut that I was in the dark here and felt myself breaking into a sweat. I just couldn't believe that Sally would do such a thing and was desperately hoping there was some plausible explanation. And whatever was going on Debbie apparently was involved too.\n\nSally's boss, Debbie Bradshaw had become the assistant store manager where Sally worked about five years before. She had transferred from corporate headquarters down around Detroit. She had previously worked in this same store just after college before rotating to the big city in order to get management training. Debbie was married to Josh, a CPA she met while working in Detroit. Sally had mentioned to me that Josh was her second husband. \n\nSally and Debbie were around the same age and had gotten friendly when Sally was pregnant for Allie. Debbie was pregnant at the same time for their daughter Shannon, their first and so far only child. Both kids were born within a month of each other which brought Debbie and Sally even closer together.\n\nWe had socialized with Debbie and Josh a few times over the years, usually at some work related event of Debbie's and Sally's. We didn't inhabit the same social circles and were probably a step down financially from the level they were at. Debbie was a smart, beautiful, green-eyed blond. But it always seemed to me she had to be the center of attention. Josh seemed to be a nice enough guy. But I always thought his primary focus was on his work.\n\nJohn and Craig had both joined the Y racquetball league about two years before. John owned a construction business and Craig was the managing partner of a residential building company. The senior partner was his father-in-law. We were all about the same age, married and having families so we had a lot in common. But strangely enough the only time we socialized was during racquetball or the occasions when we stopped for a couple of beers afterwards. Our families had never met.\n\nAs often happens when you start hanging around with new people you start discovering you have friends and acquaintances in common. One time when I mentioned the store Sally worked for John said he knew someone who worked there too. Turned out it was Debbie Bradshaw. Debbie had graduated from the same high school as John and Craig but a year behind them. He talked like they ran into each other a couple of times a year.\n\nThe shopping trips originated about two years ago when our youngest Allie, was going through the 'terrible twos'. For a couple of months Sally was having a particular bad time with Allie. Jessie was in kindergarten so she also was home half days. Trying to take care of three kids, the house and work a couple days a week was taking its toll on her. I wasn't much help at the time as I was working over-time every week on a project I was assigned to.\n\nIt got so bad that one night after everyone had gone to bed she collapsed on the couch and just starting sobbing out of frustration and exhaustion. I gathered her up in my arms and just held her until she finally settled down. After talking about the situation she complained that 'if she could just get a break from it once in awhile she might feel some relief.'\n\nI felt so bad about not being able to be there as much as I should be that I offered to be solely responsible for the kids on my next weekend off if she wanted to get some away time. She tearfully thanked me and said she would think about it.\n\nA couple of weeks later Sally said she had been talking to Debbie about needing to get away from the kids. Debbie suggested they do a shopping trip together and hit some high end malls down around the suburbs of Detroit. Debbie was sure her husband wouldn't mind. Despite my misgivings about letting her loose in some expensive mall with a credit card I agreed.\n\nSo on my next free weekend, Sally and Debbie took off on Saturday morning for Detroit. They stopped for breakfast on the way down; then hit one of the malls. In the afternoon they checked into a motel, went to dinner then a movie. Before she had left I insisted that she call me right after checking in and gave me the phone and room number where she was staying which she did. The next day they checked out, had brunch and went to another mall before finally getting home around five in the afternoon.\n\nSally was so grateful for the trip she gave me a big hug and kiss as soon as she came in the door and prattled on and on about the stores and the restaurants. That night the sex was energetic and wonderful. She hadn't gone hog wild shopping but did buy a couple of nice things for herself and the kids. I was pleased for her plus the kids had been pretty good for me so I really had no complaints.\n\nThat had been over two years ago now. Somehow after that weekend the shopping excursions became a regular event. Every three or four months, the two of them would take off on Saturday morning and return late Sunday afternoon. I didn't really mind it. I enjoyed my time with the kids alone and it seemed to make Sally happy.\n\nI tried to recall if anything seemed different or had changed since the trips started. I did remember the second time she went she came back in a totally different frame of mind than what she had after the first trip. For some reason she seemed moody, sad and maybe a little on edge. \n\nI mentioned it to her that Sunday night and asked what was wrong. She said nothing was wrong but that she had started her period and I knew she sometimes got the blues with it. Needless to say there wasn't any sex that night.\n\nThe more I thought about it I realized that after that first time, we never made love the night she returned, or for several days afterwards for that matter. But we always had sex several days before she left. And as the trips continued, during the week leading up to one, Sally was always 'up', almost giddy. I hadn't thought much about it before but now I wondered.\n\nAbout that time I heard Sally at the top of steps calling me, \"Phil, it's time for the girls to have their baths. Can you send them up?\"\n\nI just sat there trying to get my head together. \"Phil? Phil? Can you hear me?\"\n\nI hoisted myself out the chair and walked over to the bottom of the stairs and yelled sourly up at her, \"Yeah, I heard you, I'll get them.\"\n\nI went into the rec room and rousted the kids out after some argument. After they traipsed up the stairs I wandered around picking up stuff and putting it away. Mostly just to kill time. I had to get my mind right and not let the emotions roiling around inside me show.\n\nFinally I couldn't put it off longer and made my way back upstairs. Sally was looking through a cookbook in the kitchen when I came through the door. She turned to me and threw her arms around my neck and gave me a wet, sloppy kiss before I could react. \n\nShe pulled her head back and looked me in the eyes, smiled and said, \"Something wrong honey? You sounded put out?\"\n\nFeeling awkward, I mumbled something about a finding a crack in one of my favorite racquets. But I kept looking into her eyes to see if I could see anything that would indicate the truth of my suspicions. But there was nothing to see. She was just Sally, the woman I loved.\n\nShe laughed and kissed me again. She hesitated a moment then said, \"Debbie called while you were downstairs. She wanted to know if we could go shopping next week end.\" As she said it her eyes narrowed and it was like a veil fell across her eyes. As I stared at her she blinked and looked away from my face. Instantly I knew she was hiding something and I thought to myself 'How long has that been happening?'\n\nDesperately, I tried to think of a way to postpone this trip until I could think of something, anything. \"Uh, don't we have something planned next weekend,\" I said lamely.\n\n\"Nothing on the calendar\" she said. \n\n\"Seems like there is a VFW event Saturday night I was thinking we should attend.\" I said slowly.\n\nSally pulled away from me and looked at me appraisingly. \"Phil, you know I don't like to go to those things. I don't care if Dad goes too. All you guys do is talk about army stuff and drink too much. It bores me to tears, so if you want to go just get a sitter while I'm gone.\"\n\n\"Then why don't we do something with the kids this weekend? Cedar Point is only going to be open another few weeks before it closes for the season and we've never taken Allie yet. She's old enough to enjoy it now.\" I said grasping at straws.\n\nSally frowned at me and her face started to get red like it does on the rare occasions when she really gets angry. \"We just took the kids to Mackinaw Island over Labor Day weekend. That was only a couple of weeks ago. What's got into you Phil? You never objected to me going shopping before?\"\n\nGetting a little bit pissed myself, I said stone faced, \"Never mind, I just thought maybe we could do something together. You and Debbie have a good time. I'm going upstairs and make sure the kids go to bed.\"\n\nI turned and headed up the stairs to the bedrooms. About halfway up I glanced back down and saw Sally staring at me strangely. \n\nThe rest of the evening I managed to avoid any real conversation with her. Like most work nights I went to bed before Sally and laid there trying to sleep. Sometime later I heard her come in and go into our bathroom to change into her pajamas. She slid into bed and cuddled up against my back. She wrapped her arm around me and whispered \"Phil, Phil?\" I kept my breathing shallow and regular and pretended to be asleep\n\nEventually she gave up and rolled away from me. I could tell from her breathing when she finally fell asleep. I rolled over onto my back and stared at the ceiling trying to sort through my thoughts.\n\nMy mind drifted back, thinking about my life and how I had gotten to this point. I had grown up less than twenty miles from where we were living now. Just your usual middle class family, Mom, Dad me and my older sister. The most interesting thing about growing up was my best friend, Jason. Or 'Jase' as everyone usually called him.",
        "His family lived at one end of the block and we lived at the other. We met about fourth grade and had been inseparable ever since. If he wasn't at our house I was at his. Not a week went by that one of us didn't spend at least one night at the other's house.\n\nHe was 'Mr. Personality', always joking, laughing, rarely taking anything seriously and always making friends where ever he went. I was more the quiet, thoughtful type. We complimented each other. As we grew up we played sports together, began to notice girls together and in fact often double-dated. While neither of us got very serious about any one girl we both managed to lose our virginity in the last few months leading up to our senior prom.\n\nAs students neither of us was outstanding but I usually got better grades than Jase. I did discover one thing about high school that I loved and that was drafting. By the time I was a senior I had taken every drafting class available and was having serious thoughts about being some kind of engineer.\n\nAfter graduation I decided to attend the local junior college that had an Engineering Technology program. It was relatively cheap and close enough to live at home and commute. Jase didn't know what he wanted to do but he tagged along enrolled in general studies. The biggest benefit was it got us our student draft deferments.\n\nThen toward the end of my freshman year I screwed up big time. Jase and I had been out to a college kegger on a Saturday night when I got pulled over on my way home. I flunked the breathalyzer and spent the night in the county jail. \n\nDad and Mom bailed me out the next morning and were justifiably pissed. After it was all said and done I used all my savings to pay the fines, legal fees and court costs and lost my driver's license for a year. \n\nI moped around until the end of the semester hitching rides with Jase. Finally I thought 'screw this.' Broke with no driver's license gave me little incentive to go to school the next year. I decided to roll the dice and enlist in the army. I figured that with my drafting training I could get an engineering type job and avoid Vietnam. At least that's what the recruiter told me. Of course he lied.\n\nWhen I told Jase my plans he immediately decided to join me. The recruiter said we could go in on the buddy plan and were guaranteed to go through training together. So off we went. Basic Training was a challenge but tolerable. Mid-way through the training we went through a battery of aptitude tests to see what jobs we were compatible with. \n\nThe Army in its infinite wisdom decided we could best serve the green machine as Fire Direction Control specialists. The job entailed operating what the Army called a FDC computer but was really a hopped up calculator that computed distances, azimuths and the amount of explosive charge to use for an artillery shell to hit a given target.\n\nSo after basic we were sent to Fort Sill to learn our new trade. Sill wasn't a very pleasant place but being with Jase we managed to have some fun. But that was nothing compared to the next booby prize we got, orders for Vietnam came along a couple of weeks before graduation.\n\nAfter fifteen days leave, visiting the folks, drinking beer with our old buddies and chasing a couple of our old girlfriends we made the long flight to I Corps, Republic of Vietnam. After some finagling with the personnel pukes we managed to both get assigned to A Battery, 2nd Battalion, 11th Artillery Brigade. It was November 1969 and Nixon had already started to draw down the troop levels as the strategy to turn over the war to the South Vietnamese was getting traction. What a joke that was.\n\nWe didn't see a lot of action that first five or six months. We fired a lot of missions from fire support bases all over I Corps but only took incoming a couple of times. Up to then the highlight of our tour was taking R&R in Bangkok, Thailand. After fifteen days of whores and hooch Jase and I returned to our unit exhausted hoping to rest up. \n\nThe news that our unit had been attached to the 3rd Brigade, 101st Airborne while we were gone didn't excite much comment. But a couple of days later when our battery was airlifted onto a denuded hill in the middle of the deepest, darkest bush I'd ever seen since coming to 'Nam I got a bad feeling. Four months later I came home on a stretcher. Jase came home in a body bag.\n\nI was pretty messed up, physically and mentally from the trauma I had received. I spent several weeks in a hospital and a couple of months in rehab. I also spent some time with a psychiatrist trying to get my ahead around everything that had happened. After they pronounced me marginally fit for duty again I was assigned back to Fort Sill to a training brigade to be an assistant instructor. I didn't feel like talking much to anyone anymore so I enrolled in some classes at the local college and spent my off duty hours buried in drafting assignments.\n\nAfter a year there, I applied for an early out to go back to school. As Vietnam was winding down so was the size of the Army. I had applied for and been accepted into an engineering tech program at the university nearest home. The Army approved my request and I got released five months early after serving two years and seven months. \n\nI moved back in with Mom and Dad and applied for my veteran's benefits. Living at home my needs were few. I had saved most of my money from 'Nam. And the education benefits and the income from a part-time job met all my expenses.\n\nLooking back I was a typical, or maybe a stereotypical shell-shocked, messed up Vietnam vet. The public response to the war and those of us who fought it combined with my injuries and the things I had seen and done turned me into a bitter, introverted recluse. \n\nI let my hair go and grew a beard. I schlepped around in hooded sweatshirts or my old beat up army field jacket most of the time. Ratty jeans and worn sneakers completed my ensemble. \n\nI went to school, to work and to home. I know Mom, Dad and my sister, Terry worried about me. But I just didn't feel socially engaged anymore. I still saw a VA therapist about once a month but it wasn't doing much for me. About once a week I would visit Jase's parents and we would talk about him and the good times we had together. They seemed to enjoy it and it was the least I could do for them.\n\nOne afternoon I was sitting in the study hall of the International Center on campus. Several days a week I had a couple of hours between classes and I usually spent the time studying or reading. As I tried to ignore the noise of the crowd around me a voice broke my concentration. \n\n\"Mind if I sit here?\" \n\nI glanced up at the person standing on the other side of the table and did a double-take. Long red hair with the perfect pale complexion only a true redhead could achieve. Inquisitive brown eyes looked into mine waiting patiently for a response. I nervously licked my lips as I looked at her perfectly shaped red ones and wondered what they would feel like on mine. \n\nI was lost in that thought when she repeated herself. \"Do you, do you mind if I sit here?\"\n\nTongue tied I manage to blurt out. \"Uh, no, go ahead.\"\n\nAs she put her books down and pulled a chair out to sit I studied her out of the corner of my eye. Probably about seven, eight inches shorter than my six foot two and looked like she weighed about one twenty and very well put together.\n\nFor the next half hour she was immersed in her books and I pretended to be glued to mine. Every once in a while I found myself glancing at her and admiring her looks. After about the fifth or sixth time I did it I looked up to see her staring at me.\n\nShe pointed to my field jacket and said somewhat tentatively. \"Are you a veteran?\" I nodded yes and then she asked, \"Vietnam?\" I flinched when she said that as often the response I got wasn't pleasant. But I simply said, \"Yes\" and left it at that.\n\nAfter a few minutes she said brightly, \"My dad is a veteran. He served in the Korean War. He was a Marine.\"\n\nI relaxed a little and thought maybe this wouldn't be too bad after all. Then she said, \"He was even wounded.\" She said it like it was some kind of trivial thing. 'Civilians', I thought disgustingly. But I just nodded and explained to her that I had been in the Army for nearly three years but I avoided any further mention about 'Nam. \n\nWe started talking and we talked right up until the time she said she had to go to class. She gathered up her books, said good-bye and went out the door. I was sorry to see her go. She was the first women I'd really talked to since getting home.\n\nA couple of days later I was sitting in nearly the same spot when I heard that familiar voice say, \"Hey, mind if I sit here.\" This time I responded a little more coherently than the first time. I tried to lose myself in my book but she started talking to me like we were best friends. \n\nAfter a bit she paused and blushing a bit said, \"I just realized I've been babbling away and I don't even know your name?\"\n\nSomewhat embarrassedly I held out my hand and said \"it's Phil, Phil Robinson.\"\n\nShe laughed and said, \"Sally Baxter. Glad to meet you.\"\n\nIt turned out that we both had a long layover between classes every Monday, Wednesday and Friday. Over the next couple of weeks we would visit for most of our break. I heard most of her life story, about her mom, dad, older sisters, her friends and career and school plans. Besides being beautiful, she was outgoing, gregarious and personable. Her personality reminded me a lot of Jase.\n\nI found myself telling her about my family and classes but not much else. I deflected any questions about the Army. To be honest I preferred to listen to her. She could have read to me from the phonebook and I still would have listened. I was totally taken with her. Somehow she managed to draw me out, got me to take an interest in something besides just school again. \n\nAfter our second visit I found myself shaving in the morning for the first time in weeks. After the third or fourth time I actually went and got my hair cut and started dressing a little less sloppily. Mom noticed the change in me right away and started in quizzing me. I sheepishly admitted I had met someone that interested me. She teased me a little but I could tell she was happy about it.\n\nA few weeks after we had met I mustered up the courage to ask her for a date. She seemed pleased and immediately said yes. Like me she was commuting from home to classes. After she agreed to allow me to pick her up on Friday night she laughingly said, \"Be warned, my Dad can sometimes be hard on the guys that ask me out. Are you sure you want to do this?\"\n\nI looked her right in the eye and said, \"Sally, I think for the privilege of going out with you the least I can do is put up with your father for a few minutes.\" Or for a lifetime I thought to myself.\n\nShe blushed and said, \"Oh-oh, what a flatterer.\" I was finding out she blushed easily.\n\nOn Friday night I knocked at her door and a woman with a warm smile answered it. Before I could even say anything she said, \"You must be Phil, we've been expecting you. Come in please.\" And she took my hand and pulled me in. \n\nAs she did so she called over her shoulder, \"Jack, Sally's date is here.\" She turned to me and said in a kindly voice, \"Don't worry about Sally's father, he's really not as bad as she makes out. I'm Emily by the way.\" And she shook the hand she was still holding.\n\nI was wondering how to react to all this when her father came around the corner from the kitchen. He was a big guy, about my height but outweighed my one eighty by probably thirty pounds. Not fat but solid.\n\n\"I'm Jack\" he said in a deep voice as he held out his hand and looked at me intently. \n\n\"Phil Robinson\" I answered as I shook his hand firmly.\n\n\"Come into the family room and we can talk for a few minutes while Sally is finishing up.\"\n\nThe three of us walked through the kitchen into a comfortably decorated wood paneled room with a television in one corner with a sofa and a couple of easy chairs arranged around it. One side of the room was taken up by a fireplace and hearth and a mantle that ran the length of the wall. \n\nOn one side of the mantle was a finished triangular wooden box with a folded American Flag. On the other side of the mantle was a glass fronted wooden shadow box, a type I had seen in several PX's during my army days. They were used to display military memorabilia, unit patches, ribbons and medals.\n\nIn between on a pedestal sat an M1 Garand Rifle. With a highly polished stock and a saddle-soaped leather sling, it looked very businesslike. Above the rifle was a framed Marine Corps flag. It was all very intimidating.\n\nJack saw me look at the mantel and he said proudly, \"I was a Marine in Korea. I would have stayed in but I was wounded on the breakout from the Pusan perimeter and then wounded again during the retreat from the Chosin Reservoir. I couldn't pass the physical after that.\"\n\nI nodded and said, \"Yeah, Sally mentioned that, tough times.\"\n\n\"Sally says you're a Vietnam vet?\" Jack said as the three of us sat down.\n\n\"I was there for awhile.\" I said uncomfortably.\n\n\"What did you do over there?\"\n\n\"I was a fire direction control specialist in an artillery battery, one-five-fives.\" I said. \n\nHe nodded in agreement, \"One-five-fives are the workhorses of the artillery. What part of Vietnam were you stationed in?\"\n\nEmily chimed in, \"You have to forgive Jack. He is kind of a Military History buff. He follows everything on the war.\"\n\n\"Sure, I understand. Our battery was all over I Corps.\"\n\nJack kind of looked at me like he couldn't make up his mind if I had been a real soldier like him or some kind of rear-echelon motherfucker. But then the Marines never thought much of soldiers.\n\n\"I Corps, huh? That was Marine country.\"\n\n\"Well, the Marines had mostly been pulled out by the time I got there.\"\n\nJack snorted, \"Yeah, Vietnamization! Nice term meaning 'take this country, it's yours'!\"\n\n\"Now Jack, it's not over yet,\" said Emily.\n\n\"It's all over but the shouting, just you wait and see.\" He insisted looking at her.\n\nI gave a sigh of relief as about that time Sally walked in. It was obvious this conversation could go on forever and the last thing I ever wanted to talk about was Vietnam. We talked for a few minutes about school and what we were going to do that evening and then we said our goodbyes and left.\n\nThat night we went to dinner and a movie. I can't say I remember much about it as I was totally absorbed with our conversation. We held hands in the theatre and sat close with our heads almost touching. After the movie neither of us wanted to end our evening yet so we stopped at a bar for drink. I ended up walking her up to her door just minutes before she had told her parents she would be home. \n\nAs I stood there awkwardly, wanting badly to touch her, to kiss her but also afraid of blowing the evening when she took the matter out of my hands. She reached up and wrapped both her arms around my neck and with her nose almost touching mine looked me in the eyes and whispered, \"Thank you Phil, for the wonderful evening.\"\n\nTime froze as I gazed into her deep brown eyes. I swear I could see all the way into her soul. Everything that she was and everything she would ever be was totally open to me. I knew at the moment I was in love with her. I put my hands around her waist and gently kissed her. From that day forward, at least a couple of times a week we would embrace like that. With her arms around my neck, my arms holding her tight, looking into each other's eyes, hiding nothing.\n\nReluctantly she pulled away from me and went into the house. The very next day I called her and we talked on the phone for an hour. We made another date for the middle of the week and just like that we were exclusive. \n\nA few weeks later when I told her I had rented a motel room for the next Saturday night she blushed like she often did, but then just smiled and nodded. The evening was everything I could ever have asked for. Neither one of us was virgins, but neither of us was very experienced either. \n\nThere were a few awkward moments when she saw the scars Vietnam had left on me, but I assured her that the doctors had put everything back together and I felt fine. \n\nAs we lay together after that first time, my body still inside hers, her body still shuddering from the passion, I could feel the wetness of her tears from her face pressed tightly between my neck and my shoulder. \n\nQuietly I said into her ear, \"Sally, I love you. I know maybe you don't want to hear that yet, but I can't help it.\"\n\nSally pulled her face back and looked down at me. I could see the tears glistening in her eyes and her lips curled in a smile. \"I love you too, Phil. I never knew it could be like this. I want to lie like this forever.\"\n\nI laughed in relief and kissed the tip of her nose. \"I don't know about that, but I do know I want to do this again and again and again.\"\n\nThis time she laughed and then groaned as still hard, I flexed myself in her. \"God, Phil, anything you want, anything ...\"\n\nFor the first time since losing Jase I felt at peace with the world. That life was going to work out. That there was a future for me with someone I loved and who loved me in return.\n\nBy the time we left the motel exhausted in the wee hours of the morning we knew we wanted to be together for the rest of our lives. We talked about everything that night. Sex, marriage, kids, where we wanted to live, what we wanted to do with our lives. \n\nWhile Sally was a year younger than me, she was a year ahead of me in school. She was graduating at the end of this spring and I would graduate a year later. We decided Sally would go to work after her graduation and we would wait and get married right after I graduated. In the meantime I would get an apartment so we could be together until then.\n\nA week later I took Sally home to meet my folks. My dad, Dave was a toolmaker at GM. My mom, Donna was a part-time teacher's aide and has been ever since my sister and I had gotten into high school. \n\nSally and my folks instantly fell in love with each other. Mom said later that they not only loved Sally for herself, but also for the way she had brought me out of my shell. And I had changed. I was happy. I couldn't stop smiling most of the time. I was so bad the next time I saw my therapist he kicked me out of his office and told me not to come back.\n\nSally's Dad and I continued to have a wary relationship. I'm sure he was concerned about the man who had swept his youngest daughter off her feet. And the fact that we were intimate didn't help. The look on his face when we started talking about moving in together before marriage was scary. \n\nThat all changed a couple of months later after Jack and Emily had invited us over for dinner one night. Jack and I wondered into the den afterwards while Sally and her mother stayed in the kitchen putting food away and talking.\n\nAfter a few minutes of small talk about the usual topics, Jack hesitated for a moment then said, \"Sally tells me you have some significant scars from Vietnam. She was asking me what could have caused them.\"\n\nI looked away, feeling embarrassed for some reason. \"Yeah, well it's not something I like to talk about, especially to her.\"\n\nJack smiled and said, \"I know what you mean. Civilians don't usually understand.\"\n\nAfter a moment he said, \"Phil, you gave me the impression when we met you that you didn't see much action over there?\"\n\nReluctantly I said, \"I didn't really. Until the last firebase I was on.\"\n\nAfter a moment of silence, he said, \"Which firebase was that?\"\n\nAgain I hesitated, \"Ripcord.\"\n\nJack's eyes widened suddenly, \"Ripcord? You were on Ripcord?\"\n\nI nodded.\n\n\"Summer of '70?\" He asked with some intensity.\n\nAgain I nodded. I was somewhat surprised that he had even heard of Ripcord. The Army had done its best to minimize any news of the battle due to the high number of casualties we had incurred. It wasn't hard to do since President Nixon's Cambodian excursion was occurring at the same time.",
        "At that moment Sally and her mom came back into the den and we started talking about school and Sally's upcoming graduation. Jack and I never spoke about it again but from that moment on Jack treated me like the son he never had. \n\nAfter that things started happening pretty fast. Sally graduated with honors. She got a well paying job as an assistant buyer for a retail chain store not far away. She spent as much time with me as she could in my apartment. But her mom and dad put their foot down about her moving in with me full-time.\n\nI graduated on time and had a job lined up with General Motors as a draftsman before I even had my diploma. We got married two months later. With both of us working we were able to afford a small cape-cod on a big enough lot to add on to the house if it became necessary. \n\nWithin a year our son, Jason was born. Named after my best friend, he was a wonder. Two years later we had Jessie. At that point we thought we were through. But after some waffling we had Allison three years after Jessie. It was special having a son but it was the girls who had me wrapped around their little fingers.\n\nSally had cut back to part-time and transferred to retail when Jason was born. She wanted to stay employed at least part-time between kids and eventually return to full-time work when all the kids were in school. Right now she fluctuated between twelve and twenty hours a week. It worked out since she qualified for a big employee discount and keeping the kids in clothes was expensive.\n\nMy job had steadily evolved since I had started. Early on I had gotten involved in translating part designs into programs for creating numerical control tapes for automated manufacturing. And by the time Allie was born we were seeing the first Computer Aided Design systems starting to be developed and the company had elected me as part of a group to be trained in the very first implementation.\n\nLife was good. Money was adequate enabling us to afford two cars and a modest but beautiful home. We had added on a bedroom, bath and a finished rec room between the kids being born. We had three beautiful and healthy children. We did lots of things together as a family. At least one family vacation every year for the five of us and twice a year Sally and I would parcel out the kids to the grandparents for a long weekend somewhere just for us. \n\nI had always thought our marriage was solid. Our sex life was frequent and varied. Sally was always a willing and enthusiastic partner. She seemed to usually have orgasms and I never thought she was faking it. In fact she was frequently multi-orgasmic which always inspired me in our lovemaking. And both of us were comfortable about initiating sex. \n\nAnd we weren't shy about professing our love to each other. We cuddled, held hands and touched each other frequently. I would look at her and then at other guys wives and would think how lucky I was and I often told her so. I always thought we were still just as much in love and as hot for each other now as we were ten years ago. Now I wasn't so sure. I could feel my life turning to shit.\n\nSleep eluded me most of the night and I probably only got a couple of hours. I skipped going to the 'Y' the next morning and staggered into the office and closed my door and stared at the wall.\n\nI knew I had to come up with a plan, a course of action. Somehow I needed to find out what was happening. I could ask Sally directly what was going on. She had never lied to me before as far as I knew. But if she was already hiding something, would she tell me the truth now? And how would I know? I knew what I had overheard. I knew what I had seen in her eyes.\n\nI started doodling on a pad and made some notes on where to go from here. Some steps to take to find out what was happening. But when it came to coming up with what I would do if it turned out to be the worst case scenario I was lost. I loved Sally. I loved my kids. The thought of being without them scared the hell out of me. But even scarier was the thought that maybe Sally didn't really love me.\n\nFor the next few days I was a like a zombie at work and at home. I couldn't think about anything else. Sally didn't even notice until Jase said something about dad not acting right. I just passed it off as a work project being on my mind.\n\nOn Tuesday I got back to my routine and I went to play racquetball before work like I usually did. John was there and of course Craig. The thought occurred to me that I had never seen John without Craig or vice versa. I knew then if John was involved in something Craig would be too.\n\nWhen I walked in to the locker room, they were down at the end of one aisle changing and talking quietly to one another. When they glanced up and saw me, John laughed and Craig started smirking like he was the only one in on a joke. I now realized that his smirk was a common expression on his face. I stiffened and started to get angry. \n\nFor the first time I started thinking about the two of them as my adversaries. John was about an inch taller and maybe ten pounds heavier than me, Craig a little shorter and stockier. I usually beat them at racquetball mostly because I had been at it longer and I was in a little better condition.\n\nI controlled myself and about six of us played some pick-up matches. John and Craig were cordial and we exchanged some small talk before we all cleaned up and went to work for the day.\n\nOn Wednesday I decided to try to verify John and Craig's whereabouts on Saturday. I called John's house from work and spoke to his wife. I told her I was one of the guys from his racquetball league and was calling to see if John was available to play on Saturday. She said that as far as she knew he was going to a business conference in Detroit in the afternoon, returning Sunday. \n\nMy heart sunk when I heard that. On a hunch I called Craig's house and got the same answer from his wife. Slowly I hung up the phone and sat and stared out the window. It was true, it had to be true. The four of them were hooking up down there. But the question remained, how far had it gone? Regardless it was too far. I was angry. I started hearing a little voice in my head saying 'Do something!'\n\nFriday night after work I stopped at Mom and Dad's. Dad had retired this past year and they were planning on spending the winter in Florida. But in the meantime they spent a lot of time fixing up the house getting it ready to sell in case they found something down there they liked. And they also loved taking their grandkids whenever they got a chance. \n\nI told them I needed to talk to them and we sat at the kitchen table with some ice tea as I tried to think of a way to break it to them.\n\nFinally, I sighed and said, \"I don't know how to say this so I will just come out with it. I think Sally is cheating on me.\"\n\nAs I said it the tears starting running down my face and I practically sobbed. It was the first time I had articulated the unthinkable out loud.\n\nMom and Dad recoiled in shock. \"No no, it can't be. Not Sally. Sally wouldn't do that to you. She couldn't do that to you.\" Mom whispered.\n\n\"Son, why do think that?\" Dad said quietly.\n\nI went over the things I had overheard and the things I had found out. Mom sat there quietly crying and shaking her head. Dad reached out and drew her to him and held her tight.\n\n\"What do you need from us Phil?\" Dad asked.\n\n\"I have to know for sure. I have to be where they are tomorrow night. I know it's a lot to ask but can you take the kids for me tomorrow and keep them until Sunday?\" I pleaded.\n\nDad nodded. \"Of course we will Phil. But I pray to God it's all a misunderstanding.\"\n\nI nodded, \"Yeah, me too. But it's hard to see how it could be.\"\n\nShaking my head I got up and left.\n\nWhen I got home Sally was bouncing around, finishing up dinner. She turned around as I walked into the kitchen and threw her arms around my neck and kissed me. \n\n\"The kids are in the rec room and dinner will be ready in about twenty minutes.\" She said happily. \n\nI could tell her mind was already on her weekend, she was practically flying. It was like she was on speed or something. As I thought about that it also occurred to me we hadn't had sex since the previous Saturday. \n\nWe had missed our usually mid-week romp, probably because I had been in a piss-poor frame of mind all week and I had actually taken sleeping pills a couple of times to help me get through the nights. But Sally had never brought it up either. I wondered what she would say to the idea.\n\nHesitantly I said, \"Honey, I just realized we haven't made love since last weekend. And you are going to be gone this weekend. How about we get the kids to bed early and make some time for ourselves tonight?\" \n\nSally pulled her arms back from around my neck and stepped back a bit. Once again I could see that veil fall across her eyes and her smile became forced. \n\n\"Gee, Phil I'd love too. But I started my period today a little early.\" She said hesitantly. \n\nExpressionlessly I said, \"Oh? Sure, sure, I understand.\"\n\nShe reached up and stroked my cheek and said seriously, \"As soon as my period is over I'll make it up to you, I swear. Okay?\"\n\nIt was all I could do not to jerk away from her hand. \"Yeah, it's a date then.\" I mumbled.\n\nShe hugged me and happily went back to fixing dinner.\n\nI turned and walked slowly up the stairs to change. Sally's periods were regular as clockwork as long as she was on the pill. It was clear to me now. She was saving herself for her date tomorrow. If I hadn't known where I stood before, I knew now. The anger got stronger and that voice saying 'Do something!' was a little louder.\n\nGetting through dinner without showing all the emotions I was feeling was difficult. The kids chattered away like they usually did and Sally was oblivious. Could this be the last time we would all sit down to dinner as a family? I turned my head away as the tears welled up in my eyes at that thought.\n\nThe next day we followed our usual Saturday routine. The older kids cleaned their rooms after breakfast. Allie would pretend to help. When they finished they could watch cartoons. I puttered around in the garage until it was almost Sally's time to leave then I went back into the house.\n\nSally was just coming down the stairs with her suitcase and was yelling at the kids to be good while she was gone. Allie was right behind her yelling, \"buy me something, mommy, buy me something!\"\n\nSally stopped at the bottom of the stairs, dropped her suitcase and picked Allie up and gave her a hug and a kiss. \"I will sweetie, be good for daddy.\"\n\nSally handed Allie over to me and gave me a kiss and said, \"Got to go, supposed to pick up Debbie in twenty minutes.\" \n\nI nodded. \"Don't forget to call me as soon as you get to the hotel. Which one is it again?\"\n\nShe laughed and said. \"I always do. It's the Red Roof Inn in Rochester Hills. Bye.\" And she was out the door.\n\nI stood on the porch holding Allie and watched her drive away without looking back. As soon as she was out of sight I slowly went back inside and yelled for Jase and Jessie. I had at least two hours before Sally would be calling to tell me she arrived safely. More than enough time to do what I had to do.\n\nThe two of them came tumbling down the stairs chattering away wanting to know what I wanted. I told them we were all going over to grandma and grandpa's to spend the night so they needed to pack a bag with pajamas, a change of clothes and their favorite toys. With only a little fuss and without answering the inevitable questions, I got them turned around and back up to their rooms. I helped Allie get her stuff together and got everyone out of the house and in the car.\n\nMom and Dad were waiting at the door when we pulled up. I got everyone and everything unloaded and settled into the house. As I was heading out, Dad looked troubled, \"Good luck, Phil. I hope you're wrong.\"\n\nI sighed, \"I know Dad, me too. Thanks for doing this. I'll call you in the morning.\"\n\nI headed home by the way of the airport. I stopped at Avis and changed cars. I didn't want my car to be recognized where I was going.\n\nA couple of hours later I was still sitting in the kitchen staring at the clock. My mind kept playing over the events of the week with repetitive slowness. When the phone finally rang just after one o'clock I just stared stupidly at it before coming to my senses and picking it up.\n\n\"Is that you Phil?\" I heard Sally say.\n\n\"Yeah, it's me.\"\n\n\"You didn't even say hello, is everything okay?\"\n\n\"Everything's great, just great. Everything all set on your end?\" I said a little sarcastically.\n\n\"I don't know what you mean by all set but we got here okay. We stopped for lunch on the way down. We are in room one sixty-eight and the number is 555-645-0168.\"\n\nWe exchanged small talk for a few minutes, then she said \"Debbie's waving at me, got to go, we are spending the afternoon at the Meadow Brook Village Mall. See you tomorrow.\" \n\nAnd the phone clicked as she hung up without waiting for me to say good-bye. I thought to myself, 'she didn't even say I love you.' And she hadn't said it this morning when she left either.\n\nI dialed the number I had previously looked up for the Red Roof Inn and asked for reservations. I asked them if Sally Robinson had checked in yet. They said yes she had and would I like to be connected with her room? I told them no, it wasn't necessary I would be seeing her later.\n\nI hung up then dialed the number again. This time I asked if there was a John Harrison registered. They said there was but he hadn't checked in yet. I said I would call back later and hung up.\n\nI sat there staring at the phone, trying to suppress the anger that was threatening to turn into a killing madness. It was a scary feeling I hadn't felt in many years.\n\nI got up and slowly walked down into my workshop and unlocked the door to my gun cabinet. I stood there and stared at my Dad's old sixteen gauge double-barrel shotgun, my Winchester Model 73 thirty aught six rifle and my old pellet gun from when I was a kid.\n\nDad had given me his old shotgun when he and mom planned to move before retirement last year. The Winchester I had bought while I was in High School when I had hunted deer for a couple of years. I hadn't been able to stand the thought of hunting again after Vietnam.\n\nI stood there lost in thought. I knew if I took a gun with me I might never see my kids again. I bent over and opened up the bottom drawer and took out an old beat up shoebox lodged in the corner.\n\nI carried the box upstairs and dumped it out on the kitchen table. I rooted around in the pile of stuff until I found what I was looking for. I pulled the Marine Ka-Bar knife I had bought in Bangkok, out of its sheath and felt the edge, still sharp. Most of the haft was stained a dark rusty color. I slide it back in and bent over and pulled up my pants leg, strapped it to my calf and covered it back up.\n\nI collected a few things I might need. Driving gloves, water bottle, a couple of candy bars. It was after two when I slid behind the wheel of the car to start the ninety mile trip to Rochester Hills. \n\nI eased into the parking lot of the Red Roof Inn and slowly drove down the length of the building until I came to room one sixty-eight. I didn't see Sally's car so I backed into a parking spot a couple of rows back from the room, turned off the car and waited. I didn't want to but I kept thinking and reminiscing about Sally and the kids.\n\nIt was after five when a new red pick-up I recognized pulled up into a parking spot right in front of Sally's room. John and Craig got out. They looked pretty happy, laughing and talking. They pulled a couple of suitcases and a cooler out of the back and went into the room next door.\n\nAbout forty-five minutes later they came out and got back into the truck. I followed them for several miles until they turned into the parking lot of a bar called 'Tappers Pub'. I stopped on the street and watched them go in. Then I slowly drove around the lot and almost instantly spotted Sally's car.\n\nI parked on the street where I could see both the front door and John's red pickup. I thought about going in but the bar seemed kind of small and I was afraid of being spotted. I sat there listening to an old country music station and an endless string of 'she-done-me-wrong' songs. It fit my mood.\n\nIt was after nine when the four of them finally came out of the bar. Laughing, joking and holding hands. Instead of trying to follow them, I decided to beat them back to the hotel. At this time of night I didn't think they would go anywhere else. And being parked where I was I could easily get on the road before they did.\n\nI was parked back across from their rooms with my windows rolled down a good ten minutes before both the pickup and Sally's car pulled into the lot. The four of them got out and they stood around in front of the room one talking. \n\nI was close enough I could see them clearly by the light over the door but far enough away that I couldn't hear what they were saying except for an occasional burst of laughter. They seemed to be having a good natured disagreement about something. \n\nAfter a few minutes John made a big production of pulling a coin out of his pocket and flipping it into the air and catching it then holding his hand in front of everyone to reveal which side was up. There were both cheers and groans from some of the observers before Craig pulled an unresisting Sally to him and gave her a big long kiss. \n\nSmiling, Debbie grabbed John's arm and pulled him toward the other room. Arm in the arm the two couples laughingly went into the separate rooms turning to point and wave at each other.\n\nI sat there stunned. Who was doing who? What kind of game was this? As my mind wrestled with my anguish, with the knowledge of what was probably going on in room one sixty-eight the voice I had heard all week in the back of my mind started building to a shout, 'do something, anything!' \n\nDo what? It was obvious this wasn't the first time. They were too comfortable with each other. I couldn't roll back what Sally had already done. Ten years. Ten years of marriage and building a family. She had shit all over it and me. What good would it do now? I thought I knew the answer to that. At the least I would sleep better knowing I tried.\n\nThen John came out of Debbie's room dressed only in boxer shorts and tee shirt. He was holding a beer. I glanced at my watch and suddenly realized I had been staring at their door for over an hour. John looked up and down the front of the building to make sure no one could see him, then strode over to Sally's room and knocked twice on the door.\n\nA couple of minutes later Craig came out wearing jeans, no shirt and no shoes. He closed the door behind him. The two of them stood there for a few minutes talking while John sipped his beer. Then the two of them high-five'd each other and this time John went into Sally's room and Craig went into Debbie's room.\n\nIt suddenly dawned on me what had just happened. I went nuts! Suddenly the voice was screaming in my head, 'DO SOMETHING, ASSHOLE!' I felt the rush of the killing madness come over me. I could no longer stop myself. I reached over to the other seat and found my driving gloves and pulled them on.\n\nI deliberately got out of the car and quickly walked over to room one-sixty-eight. I put my left thumb over the peephole and knocked twice with my right hand. As the door started to open and as John was saying, 'What the fuck, Craig ...\" my fist was already traveling forward and connected square on John's nose with all my anger and frustration behind it.\n\nJohn's head snapped back and he went back two steps and went down square on his ass hard. He sat there in only his boxer shorts, eyes closed and his hands over his face, blooding pouring between his fingers. He was moaning and rocking back and forth. I glanced around the room at the messed up bed and the bathroom door ajar. I could hear the shower running.",
        "I took two steps forward and kicked John in the balls as hard as I could. He lifted about two inches off the ground and gave a high pitched scream, fell on his side and rolled into a fetal position holding his scrotum. I straddled his body and knelt down and pulled him over on his back. I pulled up my pant leg and took the knife out of its sheath.\n\nHis nose was mostly over on the right side of his face. Blood was dripping down over his chin onto his chest. I tapped the haft of the knife on his broken nose to get his attention then flipped it around as he gave a groan and opened his eyes. His eyes went wide as he saw the tip of the knife weaving in front of him.\n\nI grabbed a handful of hair and he gasped as I pulled his head and chin back and laid the point of the knife under his left eye.\n\n\"How long John, how long has this been going on?\" I whispered savagely as I traced the point of the knife along his cheekbone. \n\n\"Don't lie to me now.\" I said coldly.\n\n\"Ah, ah, two-two, maybe two years.\" He stuttered the fear evident in his voice and his eyes.\n\nI thought about that for a moment, as I ran the tip of the knife slowly back and forth, back and forth. \"Then I guess joining the same racquetball league wasn't a coincidence was it, John?\"\n\n\"Ah, ah, no, no.\" He said hoarsely as he closed his eyes in pain again.\n\nI contemplated that fact for a moment. He wanted to be close to the man whose wife he was screwing. \"You are one sick fuck, John.\" \n\nI roughly shook his head by his hair to get him to open his eyes again. \"Look at me John. If I ever hear of you coming near Sally, or any other married woman for that matter, I will find you and cut that wart off your worthless cock all the way down to the root. Do you understand me?\" \n\n\"Do you?\" I repeated as he hesitated.\n\n\"Yeessss...\" He finally croaked out.\n\n\"In fact, you would be better off if you went away; far, far away.\" I said as I traced the knife point down along the side of his face to his neck and carotid artery. The knife left a thin red line. It was tempting, so tempting. \n\nJohn's eyes bulged in terror as he realized how close to death he was. Suddenly the stench of shit hit my nostrils as I realized his bowels had let go.\n\nAt that moment the sound of the shower stopped and I heard the shower curtain get pulled back. Sally's voice floated through the door, \"Hey, John-Boy. I thought you were going to get into the shower with me? What's up with that?\" And she giggled.\n\nI looked up just as the bathroom door opened and Sally stepped into the doorway. She was holding a towel and drying her hair when suddenly she saw me. Her eyes flew open wide and she gasped, her face paled to a pasty white. The towel fell to the floor as her mouth fell open as she tried to say something, total shock evident in every muscle.\n\nI picked up John's head about by the hair about two inches and slammed it back down on the floor and stood up in one fluid motion. He groaned and rolled back over into his previous fetal position. \n\n\"John-Boy seems indisposed.\" I growled at her.\n\nStill holding the knife in my hand I faced my wife in all her glory. Wet, naked, firm breasts heaving and nipples still erect. That remarkable narrow waist despite having three kids, the only evidence the little bulge that protruded slightly above her neatly trimmed pubic hair. \n\nShe complained bitterly that no matter how many sit-ups, crunches or abdominal exercises she did she couldn't quite get rid it. But I often kissed that bulge tenderly, usually on my way further south, loving all of her for the wonderful family, the wonderful life she had given me. \n\nBut the other thing I noticed enraged me further, the bright splotches of whisker burns around her breasts and inner thighs, given to her by another and the prominent hickey slightly above her left nipple. From past experience I knew that with her complexion those marks would last for days. That explained why she couldn't let me see her naked for several days after returning from her trips.\n\nI glared at her and took a step toward the bathroom. Her face took on a look of panic as she took a step backward and reached out with both hands and slammed the door shut. I heard it click as she locked it. \n\nI turned and strode over to the night stand next to the bed. I picked up the telephone and with one swipe of the knife cut the cord and then slipped the knife back into the sheath.\n\nI turned around and headed for the front door. As I passed John I gave him a vicious kick in the ribs and felt a satisfying crack as he gave out a sharp yelp followed by a long drawn out moan.\n\nI stopped at the door and surveyed the room one more time. Suddenly I screamed in frustration and anguish, then brought the phone up in a wicked overhand throw and pitched it right at the bathroom with all my strength. It crashed hard into the door and clattered to the floor, soliciting a startled scream from inside.\n\nI stepped outside and closed the door behind me. I paused for a moment and realized the job wasn't done yet.\n\nI walked over to the other hotel room. Again I put my left thumb over the peephole and knocked twice with my right hand. \n\nThe door opened and Craig started to say laughingly, \"You guys sure are noisy ...\" when my fist caught him under the chin. His feet went right out from under him and he fell flat on his back. He lay there naked, unmoving. I took one quick step forward and kicked him hard in the balls. He still didn't move or make a sound. \n\nI heard a short scream from the bed and looked up at Debbie sitting against the headboard, her eyes like saucers holding a sheet up under her chin. I knelt down over Craig and felt his pulse. There was a trickle of blood coming out of the corner of his mouth and his jaw hung loosely. He was alive but out like a light.\n\nI stood up and strode over to the nightstand next to the bed. Debbie had let go of the sheet letting it fall to her waist as she put her shaking hands over her mouth, her frightened eyes staring at me over her fingers. \n\n\"Nice tits, Debbie.\" I commented looking down at her. I noticed she also had a hickey but hers was above her right nipple. Idly I wondered if they were intentionally marking their conquests.\n\nThen I picked up the telephone and gave it a quick jerk pulling the cord out of the wall. I then walked back to the door and turned back to look at her.\n\n\"If you should mention to your husband that you ran into me tonight, tell him I said 'hello'.\" I said sarcastically. Then changing my mind said \"Or maybe I'll tell him myself.\"\n\nI tossed the telephone into the corner of the room then stepped out closing the door behind me. \n\nI stood outside looking at the night sky and deeply breathing the cool air. I could feel the tension slipping away, replaced by a calming exhaustion. \n\nThe \"Do Something\" voice was gone. \n\nIt was done. \n\nAnd I knew what else I had to do. The only thing I could do. \n\nPurposefully I headed toward my car to get started on the rest of my life. "
    ],
    "authorname": "itmgr2010",
    "tags": [
        "cheating",
        "betrayal",
        "infidelity",
        "consequences"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/warts-and-all-ch-01"
}