{
    "title": "Lilith's Emporium: Demon Wife",
    "pages": [
        "John was on his way home from work as he drove down this little back road he had taken in the past. Traffic hadn't been bad but something made him want to take this road instead so he followed his gut and drove down. He saw this little shop where an old abandoned building had been for years. He was pretty sure it had been an old convenience store many years ago but had been empty for a long time but there was a sign and an obvious business in there now.\n\nThe sign said \"Lilith's Erotic Emporium\" which was an odd name but he couldn't help but pull in and park. He sat in his car for a moment not really sure what he was doing there but he wanted to go inside and look around. He finally turned off his car and walked up to the door before stepping inside.\n\nJohn looked around as there was a strange scent in the air. It smelled like a sort of incense or something but it was very pleasant. He didn't see anyone behind the counter but the sign had said open so he looked around at the different items. There were bags of what looked like different herbs and such with strange names. One of which was called Fairy powder which he thought was a bit strange.\n\nAs he looked he saw a shelf full of strange looking statues. He glared at them confused by what he saw as they seemed to be demonic by the look of them but there was something very strange about them. They all looked like different creatures with horns, tails and all seemed very beast like. He noticed one that seemed very feline in nature. There was another one that caught his attention. It was a very attractive demoness and he felt something strange when he looked at it. It was human looking for the most part except for a dark pair of wings and two red gems for eyes.\n\n\"Hello and welcome to Lilith's, anything I can help you with.\" A woman's voice said from behind him making him jump a little.\n\n\"Oh\" he said jumping a little \"wow I'm sorry you scared me a little.\"\n\n\"I apologize, I can be very sneaky sometimes, I see you admiring our statues.\"\n\n\"Um yes, they are very nicely sculpted.\" He said as he tried not to look at the very attractive redhead who was helping him. \"Do you make these yourself?\"\n\n\"Oh no, these were made a long time ago.\"\n\n\"Oh, so what are they supposed to be?\"\n\n\"They are sex demons.\"\n\n\"Excuse me?\"\n\n\"Sex demons, all from different realms and times.\"\n\n\"You sell statues of sex demons?\"\n\n\"What did you think we sold?\"\n\n\"Honestly I'm not sure, I'm not even sure why I'm here really, guess I was just curious.\"\n\n\"Well curiosity killed the cat!\" She said laughing a little.\n\n\"Ha\" he said glancing at one of the statues which looked feline, \"So what do you do with these?\" He asked referring back to the statues.\n\n\"Well they are sort of like fertility idols.\"\n\n\"How so?\"\n\n\"Well people buy fertility idols to help them get pregnant, these are more to help improve your sex life.\"\n\n\"Really, do they work?\"\n\n\"Yes, these bring a certain amount of sexual energy into your home and increase sex drive.\"\n\n\"Interesting.\"\n\n\"Why don't you try one for yourself?\"\n\n\"Oh I don't know.\"\n\n\"Here at Lilith's we have a customer satisfaction guarantee, if you aren't satisfied you can return it for a full refund.\"\n\n\"Really, okay well which one would you suggest? This feline one seems nice.\" He said looking at the cat like demoness on the top shelf.\n\n\"Oh no, you don't want that one.\" Nessira said almost looking nervous about having that statue on the shelf. \"How about this one here, I noticed you eyeballing it a moment ago.\" She said grabbing a statue of a very attractive demoness he was looking at earlier. \"This is Lizeth, she'll be perfect for what you need.\"\n\nJohn looked at the statue which somehow reminded him of his wife Janice yet he wasn't sure why. The statue was very sexy looking despite the wings but the woman was very slim looking and attractive. He began to have that strange feeling again as he held it for a moment. After the woman handed it to him he was trying to decide if he should buy it.\n\n\"Lizeth?\"\n\n\"Yes, she is a very unique demon, I think you will like her.\"\n\n\"But how is a demon supposed to help, aren't they, you know, evil?\"\n\n\"Ha, shows how little you know, forget that silly book they make you read during sunday school, demons are very misunderstood creatures.\"\n\n\"But what about the ones who kill people?\"\n\n\"Demons are just creatures who give in to their desires, yes there are some violent and dangerous ones out there but those aren't the type I let into my shop. Most demons are given a bad name because their desires are considered sins by most cultures.\"\n\n\"I see.\"\n\n\"Lizeth is a demon of lust, her desire is sex, passion, and loyalty, now she isn't afraid to get her hands dirty but trust me, she is a good time and a very faithful companion\"\n\n\"Loyalty?\"\n\n\"Yes, like your loyalty to your wife, you have always been loyal haven't you?\"\n\n\"Always, of course I have, even to this day.\"\n\n\"But I'm guessing she hasn't?\"\n\n\"Well... sorry that's really none of your business.\"\n\n\"Sorry, I'm an empath so I can read people, Lizeth would rewards loyalty with loyalty, if she is treated like a queen she would fuck like you're her king.\"\n\n\"So did she suck the life out of kings in the past?\" He asked getting little to no reaction from the woman.\n\n\"I think you are confusing her with a succubus who do feed off people's life force through the act of sex, though we... I'm sorry though succubi have gotten the nickname of sex demon they are in fact a different species, demons feed off the sinful act itself, not their mate, giving them what they desire keeps them alive.\"\n\n\"Huh, she definitely seems like an interesting character, I wish more women were like her.\"\n\n\"Take this home and I promise your sex life will improve greatly.\"\n\n\"So if I did buy it, what do I do with it?\" He asked.\n\n\"Just place it somewhere in the open and let it work its magic.\"\n\n\"I don't know, my wife may not want a sex demon statue in her house\"\n\n\"Trust me she will love it when she see's it, women tend to buy these more than men, they find themselves attracted to them.\"\n\n\"You don't know my wife.\"\n\n\"No, but I know what you need and Lizeth here will definitely give you what you need.\"\n\n\"You make it sound like I'm buying the demon herself, okay let's say I am interested, how much?\" He asked expecting to hear an outrageous number.\n\n\"$20\"\n\n\"Wait, really that's it?\"\n\n\"Is that too much?\"\n\n\"No that's actually very affordable but I've seen statues like this go for hundreds or more.\"\n\n\"We aren't here to rip anyone off.\"\n\n\"I'm sorry but I have to ask, what kind of store is this anyway, sex demon statues, fairy herbs, and what looks like massage oils and... are those penis statues over there?\" He asked seeing strange looking stone cocks on a shelf.\n\n\"Here at Lilith's we deal in sex, in the basic sense of the term, we sell items to improve pleasure on a primal level.\"\n\n\"Really, with a name like Lilith's Erotic Emporium I was expecting sex toys and vibrators and such, and isn't an Emporium supposed to be, I dunno, bigger?\"\n\n\"Size doesn't matter at Liliths.\" She said with a smirk.\n\n\"Touch\u00e8.\" He responded a little embarrassed.\n\n\"We don't deal in toys here, all of our items help awaken the natural sexual energy inside us all, something tells me your wife needs an awakening.\"\n\n\"You could say that, but I'm still not sure.\"\n\n\"As I said before we have a 100% customer satisfaction guarantee, if this doesn't please you than you can get your money back or exchange it for something else, but trust me, she is exactly what you need.\"\n\nJohn thought long and hard for a moment until he placed the statue on the counter top. \"Okay I'll take her... it.\"\n\n\"Excellent choice, I'm sure you will enjoy Lizeth very much.\" She said wrapping the statue and gently placing it in a paper bag before handing it to him.\n\n\"You aren't going to miss her? You seem to know a lot about her\" He said trying to crack a joke.\n\n\"I know she's going to a good home.\"\n\n\"Okay well I hope it works, if not at least I have a nice statue to look at, I'm John by the way.\" He said reaching out to shake her hand.\n\n\"Nessira\" she responded taking his hand. \"enjoy.\"\n\n---------------\n\nWhen John got home he placed the statue of Lizeth on the mantle in the living room. He stared at it admiring it for a moment as he got a good feeling every time he looked at it. It was a beautiful statue and he thought about the story the woman at the store told him about Lizeth and how interesting it was.\n\n\"You know Lizeth, you'd probably be a better wife than Janice ever was, oh well, at least if you help me get laid again it won't be so bad.\" He said to the statue feeling a little silly talking to an object.\n\nHe wasn't sure what Janice would think of it so he decided to leave it there and head out to run some errands before she got home from work. He hid the bag hoping if she didn't like it he could play it off like someone delivered it and thought she ordered because he wasn't sure where it came from. He grabbed his keys and headed out taking one last look at it before closing the door. Him and Janice had been struggling for a long time. He couldn't remember the last time they had been intimate and when they did talk it was mostly fighting. About a year ago he had found out that she had cheated on him and even though he agreed to give her another chance and move past it she didn't seem to want to try as hard as he did.\n\nJanice had gotten home from work and placed her purse down. She was talking in her phone when she walked in the house and hadn't noticed the statue at first. She continued her conversation unaware of the two red eyes watching her from the mantle.\n\n\"No don't worry he isn't home, his car is gone, did you speak to your friend about our little idea? Okay good, make sure you give me the details at the party tomorrow, no John isn't coming which is fine by me. No he still thinks it was just the one time but it won't matter anyway as long as your friend comes through for us, I can't wait to get rid of that loser, okay Tim see you then, love you too!\"\n\nShe hung up the phone and slid it into her pocket. She was wearing a business suit and skirt as she worked in an office in the city. She had her blonde hair up in a bun and wore glasses but was a very attractive woman which is one of the reasons why John was so in love with her at first but they weren't married long before they had started having problems. She hadn't told John but she had cheated on him a few more times since he had found out about the first time. She was confident he wouldn't find out and even if he did she was sure he wouldn't leave her as he couldn't afford to. She would have taken him for everything he had which wasn't much to begin with but her and Tim were working on another plan so it wouldn't be necessary.\n\nAs she walked into the living room she sat down on the sofa pulling her phone out again to check some emails. She was going through them when she looked up and saw a strange demonic statue sitting on the mantle above the fireplace. She stared at it with disgust on her face wondering where it had come from and if her husband had bought it and why.\n\n\"What the hell is that?\" She said getting up and getting a closer look at it. \"I will not have this kind of filth in my house.\" She said reaching up to grab it when she felt a slight shock that hurt her hand and made her fall back to the couch. \"Ouch, what the fuck?\" She said grabbing her hand rubbing the spot where it had shocked her.\n\nJanice began to feel a little strange as she sat there. She began to feel warm as she unbuttoned her her jacket not sure what was going on. She looked back up at the statue as the eyes began to glow letting out strange red smoke. She wasn't sure what was going on but when she tried to get up she felt dizzy and fell back to the couch unable to stand. She began to feel something even stranger as the buttons on her shirt began to pop off followed by the zipper of her skirt sliding down before it slid off of her. She grabbed her shirt not sure what was going on but it soon slipped out if her hands leaving her there in nothing but her bra, panties and nylon stockings. She looked up at the statue which now seemed to be looking at her as the smoke rolled out even thicker.\n\n\"What... what's going on?\" She said out loud as all these strange things were happening around her.\n\nShe looked down as she began to feel something odd between her legs. She could feel a strange pulsing sensation as her clit began to throb. The pulse grow stronger with every passing second followed by her nipples beginning to do the same. She placed her hands on her breasts as the uncontrollable feeling continued along with what was happening between her legs as well.\n\n\"Oh... SHIT!\" She said as it all started to feel pleasurable.\n\nAlmost as if she wasn't fully in control anymore she slid her hand down under her panties and she began to rub herself. She could feel her clit still pulsing and as she began to rub it she felt waves of pleasure surge through her. She tried to pleasure herself to orgasm hoping it would be enough to stop what was happening but no matter how good it felt she could not get herself there.\n\n\"You will cum when I allow it\" A strange voice said that almost sounded like it was coming from inside her head.\n\n\"What... who said that?\" Janice said as her body continued to turn against her.\n\n\"You have been a horrible lover to your husband.\" The voice continued.\n\n\"Who... who are you, please... AH!\" She yelled out as her clit felt a surge that made her buck her hips.\n\n\"You have been a terrible wife, but don't worry, I will be everything you weren't to John, he is mine now.\"\n\n\"Stop this... oh fuck!... stop!\"\n\nJanices panties and bra ripped off and went flying leaving her there on the couch naked except for the stockings. She bucked her hips as she continued to finger herself as the pleasure filled her making her whole body fill with orgasmic delight. The smoke that was pouring from the eyes of the statue began to flow towards her. It surrounded her completely making her glow a bright red color before it began to seep inside her through every hole it could find filling her body and taking it over. She felt strange while the pleasure filled her making her body float off the couch as her eyes began to glow red after the smoke had filled her. last thing she felt was an intense orgasm that started in her pussy before expanding to her entire body. Every muscle felt an incredible pleasure as if ever part of her was a G-spot making her squirm and moan before letting out a loud scream of satisfaction. Her body fell limp and quiet before it was gently placed back down on the couch.\n\nAfter a few moments she began to stir. She opened her eyes and looked around before stretching and sitting up. She looked herself up and down feeling her skin and admiring herself in the nearby mirror. She smiled as she realized how sexy this body was and how excited she was to be free from the statue which was still on the mantle with two holes where the eyes used to be.\n\n\"Hmmm, this will work nicely.\" She said feeling herself again. \"And I think John is going to like it as well.\"\n\n-----------\n\nJohn had not gotten a call or text from Janice as he had went to the store just to stay out for a little while and was thinking maybe she hadn't noticed the statue or maybe didn't mind it so when he got home he walked in to find the living room empty. He looked around and saw pieces of ripped clothes on the floor near the couch wondering what had happened.\n\n\"Honey, you home?\" He called out.\n\n\"In the bedroom!\" He heard his wife yell back before he headed in there.\n\n\"Hey Janice, look about the statue I um...\" he stopped when he walked into his bedroom to see Janice laying there on the bed wearing nothing but a bathrobe and smiling at him. \"Um, hi Honey, you feeling okay?\"\n\nShe motioned for him to come closer letting the robe open a little giving him a peak. John wasn't sure what she was up to but started to wonder if the statue actually worked. It didn't make any sense to him as he didn't believe in magic or anything like that, in fact he wasn't exactly sure how the woman was even able to convince him to buy it.\n\n\"Come here my love.\" She said as he laid in bed next to her. \"I haven't been a very good wife to you have I?\"\n\n\"What, Janice like I said before I want to work this all out but I need you to at least want to try.\"\n\n\"Well I want to start making it up you.\" She said sliding over and kissing him.\n\nHe tasted the lips of his wife that he hadn't tasted in a long time. He wasn't exactly sure what had gotten into her or if she was just screwing with him but for the time being he was going to play along with it. She shoved her tongue in his mouth becoming a little more forceful which wasn't really like her at all but he was enjoying the attention.\n\n\"Here.\" She said removing her lips from his. \"Let me show you how much things are going to change around here.\" She said unbuckling his belt and unzipping his pants before pulling out his cock which was still a little soft.\n\nShe lowered her head down toward his member giving it a few light taps with her tongue trying to get him hard. John wasn't sure what was going on as oral sex was something Janice would never have gone for before but her tongue felt amazing as his cock hardened. Once he was erect she wrapped her lips around his member and began to give him a few slow sucks that felt amazing. He could feel her tongue poking at the tip of his cock as her lips slid along his shaft.\n\n\"Holy shit!\" He said enjoying the attention.\n\n\"You like that?\" She said between sucks.\n\n\"Oh fuck yeah.\"\n\n\"Then here, let me give you more.\" She said as her fingers began to caress his balls as she sucked even harder.\n\nJohn didn't know what to think as all he could do was enjoy the sensation of Janice giving him an amazing blow job. She slid off her robe and he couldn't but notice just how sexy she looked. Her skin looked a bit younger and smoother and her breasts seemed perky as the hung there before she began to rub them gently on his cock between sucks. John wasn't sure if she had always looked this good because it had been a long time since the two of them had been intimate. What he didn't know was this was no longer his wife as she had been replaced with the soul of the statue he had purchased and this demon was going to give him a sexual experience he had never dreamed of.\n\n\"Ooh, you like that Baby,\" she said in a seductive voice\n\n\"Very much so.\"\n\n\"Then get comfortable because we haven't even started yet.\" She said as she climbed up towards him.\n\nShe grabbed his shirt ripping it open sending buttons flying in every direction before she began kissing his chest. Her tongue traced across his nipple as she worked her way up towards his face. Before she kissed him she gave his peck a little bite before giggling a little and pressing her lips against his. She felt so warm and soft on top of him as his hands explored her body feeling every inch off it. She spread her legs and positioned herself letting his cock touch her slit but not letting him enter quite yet as she continued to tease him over and over again.\n\n\"You want me?\" She whispered in his ear.\n\n\"Very much.\"\n\n\"Is it time for me to start making up for being such a bad girl?\"\n\n\"Oh fuck, I hope so.\"\n\n\"Then get ready for the new Janice.\" She said but before he could respond she lowered herself letting his cock slide inside her with ease. \n\nHe pussy was tight but moist feeling amazing as his cock slid inside her. He let out a moan as she began to thrust her hips milking hs wanting member in a way he hadn't felt in a long time. She squeezed her breasts together shoving them in his face as his hands traced up her body starting at her ass and sliding up her sides as he pulled himself close to her kissing her chest as she continued moving her hips trying to squeeze the cum from his cock. John knew something wasn't right and was shocked that the statue had worked this quickly and this perfectly. She began to move her hips even faster riding him with a force that began to shake the bed even moving it a little. He could hear the headboard banging against the wall as she began to moan and even grunt a little.",
        "\"Cum for me John, cum for your wife.\"\n\n\"Oh god, I'm getting there.\"\n\n\"Give me your sperm, give me all of it!\"\n\n\"Fuck! Its all yours!\"\n\n\"That's right, give me what I want, and I will fuck you every day like this, or however you want to.\"\n\n\"Oh shit, Janice I... Fuck!\"\n\n\"That's it, let it happen, don't fight it, your pleasure is my pleasure, cum, release yourself, and cum!\"\n\n\"Oh... OH FUCK!\" he yelled out as his cock twitched and he started cumming draining everything his balls had into this lustful demon inside his wife's skin.\n\nJohn held her tightly as his continued to drain himself in to her. He had never cum like this before and was enjoying every second of it as his cock had gone crazy and just continued to cum over and over again. When it finally stopped he fell back against the pillows exhausted by what had just happened. He opened his eyes and looked at Janice who was covered in sweat and rubbing herself still enjoying the sensation.\n\n\"Holy shit Honey, that was... wow!\"\n\n\"Sshhhh, rest now my love, there is more pleasure to be had, but for now get your rest, you will need it.\"\n\nShe climbed off his cock which was still sticking straight up and twitching a little as she laid down next to him placing her hand on his head and gently resting against her perky breasts. John got comfortable as she began to stroke his hair with a smile on her face after her meal. This was what John needed, a woman to fulfill his every sexual desire and Lizeth loved having sex with humans. Janice refused to give him what he needed but now she would give him every erotic fantasy he could possibly want until the day he died which could be sooner than later if he doesn't take care of himself but she was going to fuck him every way he ever wanted for as long as he could take it. \n\n--------------\n\nIt was Saturday morning as John awoke with the sun hitting his face through the window. He wasn't sure what time he was but he felt something on top of him and looked up to see Janice straddling him on top of the covers with a big smile on her face as if she had been waiting for him to wake up.\n\n\"Good morning sleepy head.\" Janice said leaning over and kissing him.\n\n\"Uh, good morning Honey, you seem quite chipper today.\" He said before he he noticed her hair was no longer blonde as it appears she had dyed it black. \"Janice, your hair?\"\n\n\"Do you like it? I needed a change.\"\n\n\"I, I do actually,I like it very much.\"\n\n\"Good, I'm happy you're awake.\"\n\n\"Oh?\"\n\n\"So what's the plan for today?\" She said rubbing against him a little.\n\n\"Plan, Don't you have to get ready for the stupid... I mean that work party tonight?\"\n\n\"Oh yes, the work party, I want you to come with me.\"\n\n\"Janice we've gone over this, I don't want to be there, I don't want to see... no, I'm going to stay home.\"\n\nLizeth could see Janice's memories and knew the man she had cheated on him with worked with her. She got a devilish idea and knew she wanted to convince John to come with her as she wanted to start building his trust again. She wanted his loyalty and his sex so she knew what she had to do.\n\n\"Don't you worry about Tim, today we start a new chapter in our lives and I want you by my side, trust me, you won't regret it.\" She said grabbing his hand and sucking on his fingers.\n\n\"Okay? Janice are you feeling alright?\"\n\n\"I feel amazing, why do you ask?\"\n\n\"Sorry it's just, I've never seen you like this before, and you dyed your hair, and last night was, well amazing!\"\n\n\"Lets just say I've been very foolish and selfish these past few years, and I want to make it up to you.\"\n\n\"But why now all of a sudden?\"\n\n\"Does it matter? You have always been so good to me, and I want to be the loyal loving wife you deserve\" She said leaning down and kissing him again with some passion before rolling off of him. \"I made you breakfast and after you can join me in the shower.\" She said lifting up her shirt a little showing off her ass which looked amazing but also showing she wasn't wearing any underwear.\n\nWhen she said the word loyal he started to remember the conversation he had at the shop before buying the statue. He remembered the woman talking about how loyal Lizeth was and began to wonder if the statue had some sort of effect on Janice. He knew it was crazy but if she really wanted to try to fix their marriage he was happy to do so. In the back of his mind he still wasn't sure if she was trying to mess with him and get his hopes up before pulling the rug out from under him. He got up and followed her into the kitchen where she did in fact have breakfast ready for him. She never was much of a cook but everything she had prepared was delicious and he enjoyed it very much. She leaned across the counter watching him eat which was strange as she just seemed to smile at him and not eat anything herself.\n\nAfter breakfast she took his hand leading him into the shower with her. It began normally with her starting wash herself but she kept backing up and rubbing her ass against his dick teasing it and making sure it was good and hard. He couldn't help but admire just how sexy she looked as she moved her hips as if trying to show off for him. She bent over and pushed him back against the wall with her back side just rubbing herself against his cock. He was blown away by everything that was happening and everything she was doing that he had almost forgot about all the horrible things that had happened in their marriage.\n\n\"I want you inside me.\" She said teasing his cock with her asshole.\n\n\"Okay um, just let me...\" he said trying to bend his knees enough to slip inside her pussy.\n\n\"No, I want you in my ass!\" She said before she shoved herself back letting him slide right inside her waiting asshole.\n\n\"Oh Fuck!\" He said as she started moving her ass milking his cock.\n\nJohn didn't know what to think anymore. The sex last night was incredible then she made him breakfast, and now she was letting him fuck her in the ass in the shower. He was starting to wonder just what that statue in the other room was as Janice had never acted like this before but he was enjoying himself as her tight ass squeezed his cock. He could hear her moans as if she was enjoying herself as well. She leaned back as much as she could wiggling her hips which just intensified the feeling as he bent over against her back reaching around and holding her breast in his hands. The water dripping down her back just made her skin glisten as her ass looked amazing against him. It wasn't long before his knees began to buckle and his cock erupted inside her even harder than it had last night. Even though he was cumming she kept moving her ass still trying to milk every drop from him.\n\nWhen he finished she let him stay there for a moment as his arms were around her stomach holding her before sliding off of his still throbbing cock. She lifted his head up before giving him a gentle kiss on the lips nibbling his lip a little as she did. John stared at his wife almost like she wasn't the same woman anymore, she had changed and he wasn't sure if he had a problem with it.\n\n\"Get cleaned up and then relax today, I'm going to head into the office early to help them set up and I will send a car for you later, alright?\"\n\n\"A car? Um okay.\"\n\nShe kissed him again before she said \"Don't worry, tonight is going to be a great night!\" She said before climbing out of the shower and wrapping herself in a towel.\n\nJohn cleaned himself off though he wasn't as filthy as he expected to be. Once he got dried off and dressed he headed out to the living room and looked over at the statue. After getting a closer look he noticed the two red gems that were where the eyes were had fallen off. He looked around to see if they had fallen on the floor but they were nowhere to be seen.\n\n\"That's odd?\" he thought to himself before shrugged it off and began to relax.\n\n-----------\n\nIt was just an office party the company was throwing after Janice had gotten promoted to a head manager. He still wasn't sure why she wanted him there and even though she had said she wanted to start making things up to him a part of him still thought she wanted him there just to shove her success in his face. When she had gotten the promotion she seemed to brag about it making him feel like a loser because she made a lot more money than him. It was nice that they had the money but he knew it was only a matter of time before she threw him away for some younger guy, most likely Tim who she had worked with and whom helped her get the promotion.\n\nJohn was ready as a black limo pulled up outside to bring him to the party. When he walked over the driver opened the door for him which just seemed more like Janice shoving money in his face. He shrugged it off and walked over to the car thanking the driver. He bent over to get in and was shocked to see Janice sitting there waiting for him. She was wearing a stunning black dress that showed off her legs. Her hair was down and made her look so beautiful he was actually stunned to see her.\n\n\"Janice, what are you doing here, I thought you had more important things to do back at the office like wait for the guests to arrive?\"\n\n\"I wanted to ride with you, I wasn't going to let you arrive by yourself.\"\n\n\"Janice I really want to believe you and give this a try but I have to ask, what are you up to?\"\n\n\"John, I know you are angry with me and you have every right to be, she was an ungrateful bitch and you deserve so much more than that.\"\n\n\"What do you mean she?\"\n\n\"Did I say she, sorry I I've had a few drinks, I meant I have been a horrible wife and I promise you I am going to make things better, just please give me a chance.\"\n\n\"I want to Janice, I really want to.\"\n\n\"Good, just trust me, you won't regret it.\" She said taking his hand and sliding close next to him.\n\nJohn was getting confused but he was starting to like this new Janice as she put her leg over his letting him admire it as she smiled and kissed him. She tasted so good and he wanted more as he placed his hand on her cheek and held her tightly. They had fucked in the shower earlier but he still wanted more of her right then and there.\n\n\"Relax, save it for later.\" She said pulling away and smiling at him. John was so turned on his cock was trying to force it's way out of his pants. She could see this and tapped the head before looking back at him and said \"Don't worry, I'll take care of this later.\"\n\nOnce they got to the party it was a bunch of people in suits all acting very high society shaking hands with each other and kissing each other on the cheek. John hated this kind of environment but it was almost nice to see Janice acting like her normal self mingling with people and acting all business except she seemed to go out of her way to introduce him to her co workers and clients. She would even stop and kiss him before she was pulled away from him for any length of time. He was actually starting to have a good time. She barely ever left his side and he couldn't help but stare at her as she was so beautiful. It was at that moment when he noticed that she almost reminded him of that statue of Lizeth as her beauty with the dark hair just made her look almost sinful. She noticed him staring at one point and smiled at him and winking at him.\n\nAs she was talking to one of her clients he whispered in her ear asking if she wanted a drink to which she replied \"red wine please, and it's open bar so get something good for yourself.\" She said before kissing him again before he walked away.\n\nWhen John got to the bar he looked back and saw Tim walk up to Janice which gave him a sick feeling. He watched him whisper something in her ear making her smile before she followed him out into the hallway. When John saw this an anger filled as he felt like a fool thinking she had just taken advantage of him once again.\n\n--------------\n\n\"So I see you brought him, that's a nice touch, letting him suffer more, but I want to talk to you about out little plan.\" Tim said to Janice as they stood in the empty hall.\n\n\"Oh and what plan is that?\" She replied with a grin.\"\n\n\"My friend I told you about, he said he can take care of John no problem, and don't worry it will look like an accident, he gave me a guarantee.\"\n\n\"Oh really?\"\n\n\"Yup, then you can cash in that insurance policy, sell the house and you and I can do whatever we want.\"\n\n\"Huh,\" she said with a pondering look on her face.\n\n\"What's wrong Babe, you aren't getting cold feet are you?\"\n\n\"Cold feet? Actually quite the opposite.\" She said to him as a red flash rolled across her eye's as she stared at him.\n\n\"What the fuck?\" Tim said a little freaked out by what he had just seen before she pushed him back against a door.\n\n--------------\n\n\"How could I have been so stupid!\" John said to himself as he ordered another whiskey and slammed that one back as well. \"She fucking tricked me again, why do I do this to myself over and over again, she is never going to change.\"\n\nJohn sat for a few minutes before got up and turned ready to get out of there when he stopped dead in his tracks. He saw Janice standing there in front of him with a smile on her face before she said \"So are you ready to get out of here?\"\n\n\"Wait but...\"\n\n\"What?\"\n\n\"I just saw you leave with Tim, what was that all about?\"\n\n\"Oh, we just had a conversation that ended with me telling him that him and I are through, and then I... well, I fired him.\"\n\n\"Wait, really, you fired him?\"\n\n\"Like I said, this is the start of a new chapter for us and I want to start it off right. I want you all to myself, and only you.\" She said leaning in and kissing him again as a few people looked on a little shocked she would kiss someone like that in public. \"Let's get out of here.\" She said taking his hand and leading him out of the party.\n\nThe elevator door had barely closed when she was all over him. She shoved her tongue in his mouth pushing him up against the wall as she lift her leg up by his waist grinding against him. John was wondering if she was telling the truth about what had happened with Tim but the fact that she wasn't really gone long enough to really do anything with him so maybe she was telling the truth. The elevator door opened and they were still making out as people stared. Lizeth didn't care what anyone thought as her only goal was having John all to herself in thralls of passion anywhere she wanted. An older women waiting for the elevator made a grunt in disgust before Lizeth turned and growled a little as her eyes turned red making the woman run away in terror. John wasn't sure what had just happened and before he could ask she had turned back kissing him again before taking his hand and leading him back to the car.\n\nOnce they were back in the limo she told the driver to take a detour which had John confused to why they weren't going straight home until she put up the Window between them and straddled him kissing him again before unbuckling his belt. John slid his hands under her dress feeling her smooth ass when he realized she had not been wearing any underwear this whole time. \n\n\"I want you to fuck me, fuck me like I'm your Queen!\" She said whispering in his ear before pulling him on to the floor on top of her.\n\nShe hooked her legs around him and spread them letting his cock slide inside her with ease as she had already gotten his pants off. John kissed her neck as he thrust his cock into her listening to her moan louder and louder as if she didn't care if the driver could hear her or not. He slid down the top of her dress and began to tease her nipples with his tongue sucking in them before working his way back up towards her mouth smearing her lipstick as they fucked each other.\n\nHearing her moans just turned him in even more as he thrust harder and harder into her moist slit which squeezed around his quivering member. Her pussy was warm and even began to tingle a little which seemed a bit strange to him but it felt so good he couldn't hold back any longer. He was trying so hard not to blow his load and last as long as he could but it was getting difficult. She ran her fingers through his hair as she moaned out while he continued to fuck her on the floor of the limo. She yelled a few times not caring if the driver heard her or not.\n\n\"You want this John, you want me forever?\" She said as he saw a strange reflection across her eyes.\n\n\"I uh... of course I do.\"\n\n\"This is yours, swear yourself to me and only me and I will fuck you in every way you can imagine!\n\nJohn was starting to feel a little strange. He could swear her eyes looked red but he wasn't sure what he was seeing and the pleasure building in his cock was almost too much to bare. As he looked at his beautiful wife he began to feel that something was wrong. He thought about the statue and what Nessira had said back at the shop, about how she had described Lizeth and how Janice had been acting since he brought home the statue.\n\n\"Oh my God!\" He said as he got closer to orgasm. \"Lizeth?\"\n\n\"Give in to me, endless pleasure is yours.\" She said as her eyes began to glow looking straight into his. \"I am yours, just give in.\"\n\n\"Oh fuck... but what... what happened to Janice?\"\n\n\"Janice is gone.\"\n\n\"What?\"\n\n\"It's okay, her and Tim were planning on killing you, but Tim is no longer a problem either.\"\n\n\"You killed them both? No this can't be... how?\"\n\n\"Shhhh, calm yourself, I took her the moment she gazed upon me, she didn't deserve you. I can be yours and I promise you I will treat you better than she ever would have. Her knowledge, her money, her power, it's all ours now and we will enjoy it together, all you have to do is pledge your loyalty to me, worship me, love me and I will be everything you need me to be.\"\n\n\"But... you're a demon, am I to be your slave?\"\n\n\"I am your demon, your queen, your wife, your everything.\" She said as she bucked her hips tightening her pussy around his throbbing member squeezing the pleasure from him. \"With me by your side your life will be amazing, I promise nobody will ever get in our way, you will not be a slave, you will be my loyal companion. Give me your love and I will give you mine.\"\n\n\"Oh shit.\" he said as he was ready to pop at any moment. \"I... I do want you, I want this!\"\n\n\"Then give yourself to me, pledge your loyalty to me.\"\n\n\"I...Oh fuck... I am yours.\"\n\n\"You are my loyal servant, you will worship me.\"\n\n\"Yes, I swear!\"\n\n\"That's a good boy, now let it go Baby, cum for me.\" She whispered in his ear as she moved and wiggled her hips in a way that felt amazing on his cock.\n\n\"I... don't want to... cum too soon, I want to please you!\"\n\n\"I want you to cum, cum for me, don't hold back, cum, don't delay your pleasure as it is mine as well... cum!\"\n\nHe looked into her eyes and saw a fire behind them. He wasn't sure if he was hallucinating or not but she suddenly sprouted two large black wings that stretched to either side of the limo seemingly burning a little as they pushed her up towards him. She looked like the statue as her eyes were like fire and he began to lose himself to the pleasure. Her hand slid across the side of his face seemingly larger with long fingernails or claws but her touch was gentle. He lost all control as his body finally gave in and he orgasmed intensely. His cock sprayed like a hose filling her as she tightened her legs around him not wanting to let him go until he had sprayed every last drop into her. Her moans of lust were music to his ears as he gave himself to this demon who had murdered and replaced his wife but when he thought about it, about how he knew Janice was planning to kill him he felt okay with his new lover. He found comfort in the idea of feeling this kind of pleasure over and over again for the rest of his life. Once his cock finally subsided he collapsed on top of her breathing heavily before she began to run her fingers through his hair.",
        "\"I... this is...\" he said looking up at her \"Lizeth, you're so beautiful.\" He said staring into her eyes.\n\nShe smiled at his comment before she said \"I am yours now, you will call me Janice in public, but I will be a better wife than she ever was to you.\"\n\n\"I love you.\"\n\n\"I love you too.\" She said with a devilish grin as she continued to stroke his hair and letting him rest his head against her breasts as she admired her new mate. \"By the way, I just love the statue you bought, it is a nice addition to the living room.\" She said with a giggle as he passed out in her embrace with her legs still wrapped around him.\n\n---------------\n\nLater that night after the party had ended the custodian was headed for the maintenance closet to get the cleaning supplies he needed to clean up after the guests. He took out his keys when he noticed the lock on the door handle had been melted a little and he couldn't get his key in. Curious he grabbed the handle and it turned opening the door as it was not lock. The room was dark but there was a strange smell like something was cooking. He turned on the light and gasped backing away when he saw something that looked like a burnt corpse leaning on the pipes that came out of the wall. Smoke was still rising off of him as the custodian ran to call 911 shocked and disgusted by what he had just seen.\n\nWhen the fire dept got there and saw the burnt mangled corpse. What was strange was the only thing not burnt was his penis which was fully erect and dripping as if he had recently cum which didn't make any sense as the rest of his body was burnt to a crisp. When they checked his wallet it turned out to be an employee there named Tim. They checked the cameras to see when he went in there and what had happened but they had all seemed to go down at the time and they never discovered how he got in there or how his body got so burned. \n\nA few weeks later an associate of his which had actually turned out to be the last person he called was also found in his work shop burned alive as well with the same circumstances. His cock was unscathed and fully erect dripping with what looked like spit and cum. They started to believe there was some sort of serial killer on the loose but no other bodies were ever reported and no DNA results ever came from the saliva samples.\n\nMonths went by and John was happier than he had ever been. He wasn't sure for a long time if this demon who had replaced his wife was actually telling the truth but he soon realized that she was a better companion to him than he could have ever asked for. Within months she had taken over the company she worked at and told him not to bother working anymore. Every night they found passion in each other's arms as she was constantly showing him new and erotic forms of pleasure and all he had to do was love her which he did more and more each day. She never shied away from letting everyone know he was her husband and would even frighten the ladies sometimes with a growl if they showed an interest in him.\n\nThey were sitting on a beach in Hawaii enjoying a vacation after having the company jet fly them out there. He was nursing a drink as he looked over at the beautiful woman in a bikini next to him staring at the sunset. A thought came across his mind that he had wondered about for a long time but wasn't sure how to say it. \n\n\"What is it my Love?\" She finally said taking his hand in hers.\n\n\"Oh, it's nothing.\"\n\n\"John, tell me whats on your mind.\"\n\n\"Well it's just... what did you do to Tim. And the former owner of the company, how did you kill them?\"\n\n\"Do you really want to know?\"\n\n\"I feel like I need to know.\"\n\n\"Okay then, for starters I burned Tim alive!\"\n\n\"Oh, um, may I ask how?\"\n\n\"Tim and his associate, the one he hired to kill you, I sucked their dicks while the rest of their bodies burned up. It's a nice little trick making someone feel pleasure as they burn alive.\"\n\n\"Wow, you can do that?\"\n\n\"I'm a demon of lust, how else would you expect me to kill someone?\"\n\n\"True, I just didn't think they deserved to feel your lips around their cocks, it's too good a death for them.\"\n\n\"You may be right about that, but it's what I am, you don't have to worry about me doing that to you, you know that right?\"\n\n\"Never even crossed my mind.\"\n\n\"Good, now the old man was easier, I just gave him a tease and he died of a heart attack.\"\n\n\"Oh, yeah I can see you doing that, so what happens to someone when you kill them?\"\n\n\"I thought I just told you?\"\n\n\"No I mean, where do they go?\"\n\n\"That's a question better left unanswered, but I will tell you this, their lifeforce gets sent to the owners of Liliths Erotic Emporium.\"\n\n\"What do you mean their lifeforce? Wait that redhead who sold you to me, Nessira, she wasn't human was she?\"\n\n\"Of course not, she is a succubus.\"\n\n\"Oh, so she gets the life force?\"\n\n\"Some of it, most of it goes to the couple that owns it, Rick and Victoria.\"\n\n\"Oh, so they are also?\"\n\n\"Incubus and succubus, lovely couple though.\"\n\n\"Interesting, so even Janice?\"\n\n\"She was the first, I'm sure they enjoyed her as Rick hates killing of innocent people, do you miss her at all?\"\n\n\"I... I feel bad sometimes about what happened to her, but honestly she had it coming, I wouldn't change anything if that's what you mean.\" He said making her smile a little.\n\n\"Well now that you know all of this, does it bother you?\"\n\nJohn sat silent for a moment staring at his drink before he looked up at her beautiful face. He looked her in the eyes and smiled before he said \"not at all\" and leaned over to kiss her pulling her out of her chair and into his lap so they could watch the sunset together.\n\nFor some of her lover's years ago it may have felt like slavery and sometimes he even questioned his own morals but he finally got to show his romantic and caring side to someone who truly appreciated it. Yes she was a demon whose methods were questionable at times but there were also times he forgot what she was as she was always kind and loving to him showing him a life he had never thought possible. He felt sorry for anyone who crossed her as she had a way of making people fear her but it was never anything he had to worry about. All because one day on his way home he stopped by a little store called Lilith's Erotic Emporium and bought a beautiful statue that changed his life forever."
    ],
    "authorname": "maestro84",
    "tags": [
        "possessed",
        "demon",
        "statue",
        "horror",
        "possessed wife",
        "cheating wife",
        "succubus",
        "sex demon",
        "business woman",
        "anal"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/liliths-emporium-demon-wife"
}