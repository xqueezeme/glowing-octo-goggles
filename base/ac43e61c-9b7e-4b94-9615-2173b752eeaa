{
    "title": "Daphne's Crush",
    "pages": [
        "\"You can't be serious!\"\n\n\"Of course I am,\" I sighed.\n\n\"But that would mean...\"\n\n\"Yep,\" I said, nodding slowly as I watched my cousin Lillian digest the news.\n\n\"So, you're trying to tell me that Janice, the woman you were engaged to, is now a nun?\" she asked, still not quite believing me. I didn't bother to answer. Janice wasn't a nun yet, but she had decided to become one. It pretty much amounted to the same thing. \n\nWe were sitting at a table in a hall waiting for the rest of my extended family to start showing up. I was drinking vodka on the rocks. Normally I was a beer drinker, but not today.\n\n\"What is it about you?\" Lillian finally laughed. I nodded in acceptance. This was going to be a long day. I really didn't want to come to the family gathering this year, but it was my mother's turn to throw the party. I tried to skip it anyway, but mom became upset. So upset in fact, that in the end I backed off and agreed to make an appearance. I was regretting it now.\n\n\"I'm guessing little brother Michael just told you about Janice?\" my sister Christina grinned as she walked up.\n\n\"It's amazing!\" Lillian said, continuing to laugh. \"He really knows how to pick them!\"\n\n\"You're telling me?\" Christina asked rhetorically, joining Lillian in her laughter.\n\n\"Are you two done having fun at my expense?\" I asked as I took another sip of the vodka.\n\n\"Not hardly!\" my sister replied. \"The first girl you ever dated seriously quit school and traveled to India to find herself.\"\n\n\"The second dropped you for another woman,\" Lillian added helpfully.\n\n\"And now Janice,\" Christina said with a shake of her head, still laughing.\n\n\"Bette traveled to Tibet, not India,\" I said glumly.\n\n\"Same difference,\" my sister laughed.\n\n\"So, you three seem to be having fun,\" my cousin Tommy said as he walked up. \"What's the joke?\" Christina and Lillian looked at each other, obviously trying to decide who would get to tell him.\n\n\"Oh, Christ!\" I growled as I stood. \"I need some fresh air!\"\n\n\"What's bothering him?\" I could hear Tommy ask as I went down the stairs and out of the hall. I didn't wait to hear their answer. The sun was bright and it took a few moments for my eyes to adjust. The fact that I was already half drunk didn't help.\n\nI made my way down the block toward a bar I knew. It wasn't a particularly nice place, but the booze did what it was supposed to. It was one of those dark basement bars. I don't know how long I was in there, but it was long enough to finish what I started at the party. I was so focused on my drinking that I didn't notice someone come up behind me until I felt a tap on my shoulder. I nearly jumped out of my skin.\n\n\"Michael?\" a soft voice asked. I turned and blinked hard a couple of times as I tried to make out the face of the young woman in front of me.\n\n\"Do I know you?\" I asked, trying to place the voice.\n\n\"It's me, Daphne,\" the woman said with a frown. At least I thought she was frowning. It was hard to make out in the dim light. Okay, maybe the amount of alcohol I drank had something to do with it as well.\n\n\"I don't know anyone named Daphne,\" I said with a shake of my head. The motion caused my head to spin slightly. \"Oh wow! I'm drunker than I thought.\"\n\n\"You know me,\" she insisted. \"Take a closer look.\" I know it was a figure of speech, but I was having problems making out her features so I squinted and literally moved closer. I would have fallen off of the chair if Daphne hadn't put out a hand to help steady me.\n\n\"Good catch!\" I laughed. The woman shook her head as she smiled. That did it! I suddenly recognized her. \"Little Daffy!\"\n\n\"No one calls me that anymore,\" the young woman replied.\n\n\"I would imagine not,\" I said, noticing the size of her breasts. They were quite a bit larger than I remembered. Of course, Daffy was only twelve the last time I saw her.\n\n\"Michael, you're staring at my breasts,\" she said with a crooked grin. This caused me to start.\n\n\"Sorry,\" I said looking up into her eyes and blinking hard again. It didn't help. I was still having problems making out her features.\n\n\"You really are plastered,\" she laughed.\n\n\"It's been a bad year,\" I replied with a loud sigh.\n\n\"Why don't we go down the block and get some food and coffee at the local diner?\" Daphne asked.\n\n\"You drink coffee and are willing to eat at a diner?\" I asked in surprise. You'd understand my reaction if you knew her family. They were health nuts.\n\n\"I'm not my sister Bette,\" she replied pointedly. I didn't want to talk about Bette! She was the first woman to leave me. \n\n\"So, you're not planning on breaking my heart?\" I slurred. Shit! What the hell was I talking about?\n\n\"We'll see,\" she replied with a laugh. \"Now let's go get something to eat.\"\n\nI'm not sure how we got to the diner. I was too big for Daphne to carry, but she must have propped me up most of the way. It was only after I ate a full order of pancakes and drank my second cup of coffee that I was finally able to see Daphne clearly.\n\n\"Sorry about this,\" I said glumly as I used one hand to rub my eyes and then the rest of my face. \"Thanks for getting me out of there.\" She nodded.\n\n\"So, dare I ask? What brought this on?\"\n\n\"Family gathering.\"\n\n\"Do you always get drunk by yourself because of family gatherings?\"\n\n\"Not normally,\" I replied. \"At least not by myself.\" Daphne laughed and I fell silent. I was still having problems keeping myself fully focused. A couple of minutes passed as I drank more of my coffee.\n\n\"How have you been?\" she asked. \"I hear you're getting married.\"\n\n\"No,\" I said succinctly, not wanting to talk about it. Yet a moment later, I added, \"We broke up. She decided to become a nun.\"\n\n\"Are you serious?\" Daphne asked. I was so sick of that question!\n\n\"Yes, I'm serious,\" I replied. \"Your sister dumped me to go find herself, Sally dropped me for another woman and Janice decided to marry God instead of me.\"\n\n\"I'm sorry,\" Daphne said. I nodded, but then frowned because her reaction was not typical.\n\n\"You're not laughing?\" I asked in surprise.\n\n\"I suppose it could be funny at some level, but your pain isn't.\"\n\n\"Thanks,\" I said, really meaning it. I decided to change the subject, so I asked, \"Why don't you tell me about yourself and what's been happening to you for the last six years? How does a girl who was raised in your family eat at a diner? A hamburger no less!\"\n\n\"Please!\" Daphne laughed. \"If Mark or Francesca saw me eating this burger they'd have a fit!\" Mark and Francesca were Daphne and Bette's parents. They were good people, but bleeding heart liberals were just a tad too far to the right for their liking. The year I dated Bette was interesting to say the least.\n\n\"But you're eating it anyway,\" I grinned.\n\n\"I like hamburgers,\" Daphne shrugged.\n\n\"And I notice you're wearing a bra,\" I teased. \"You must be the first girl in your family to do that!\"\n\n\"You certainly keep staring at my chest often enough to notice,\" Daphne teased back. I refused to look anywhere but at her face, yet Daphne's smile let me know that she knew what I was thinking. I blushed and she laughed again, adding, \"The bra has more to do with need rather than rebellion.\"\n\nWe spoke for another half hour as I continued to pump coffee into my veins. Mostly we talked about nothing special. Daphne was working as a waitress and studying to be a child psychologist. No surprise there. Not being raised in her family. Her father was an environmental lawyer and her mother a doctor who was instrumental in starting a nearby clinic. \n\nYet, then again it still said something about Daphne. She didn't have to follow her parents' lead. After all, as far as I knew Bette was still traveling the globe 'looking for herself' on daddy and mommy's money.\n\n\"Where are you living?\" I asked, just trying to hold up my part of the conversation.\n\n\"I'm renting an apartment,\" she smiled. \"Mark is helping pay for the basics while I'm at school.\"\n\nI was feeling almost human by the time the check came. Daphne reached for it, but I snatched it first.\n\n\"Making you pay would be like adding insult to injury,\" I joked. \"Thanks for sobering me up.\"\n\n\"You're welcome,\" she smiled.\n\nDaphne had turned into quite a beauty. She had honey colored hair and soft brown eyes. Her features were attractive and when she smiled, she lit up a room. It didn't hurt that she was curvy in all the right places.\n\n\"Michael, you're staring again,\" Daphne smirked.\n\n\"You've grown,\" I said with a shrug. \"And I mean more than in just the chest area.\"\n\n\"I could do with losing a few pounds,\" she said self-consciously.\n\n\"Nonsense,\" I insisted. \"You're perfect just the way your are.\" Daphne blushed.\n\n\"So, what were you doing in a bar like that?\" I asked, changing the subject again. Daphne was Bette's little sister and quite a bit younger than me. I had no right to flirt with her.\n\n\"Looking for you,\" she replied with a shrug. \"I was driving by on my way to do some chores when I saw you going in. I decided to stop on the way home and see if you were still there.\"\n\n\"Good thing,\" I smiled. \"Otherwise more than my recent breakup with Janice would be the talk of the family.\" We shared a laugh.\n\n\"Can I drop you home?\" Daphne asked.\n\n\"I wish!\" I sighed. \"But I have to return to the party.\"\n\n\"I can give you a ride there. Is it at your parents?\"\n\n\"No, it's just down the block at the hall above the rescue squad. There are too many people for my parent's house. But thanks for the offer,\" I sighed again.\n\n\"You really don't want to go back to the party, do you?\" Daphne grinned.\n\n\"Would you? Considering?\"\n\n\"Probably not,\" Daphne replied. She wasn't laughing and I appreciated it once again.\n\n\"I don't suppose you want to come with me?\" I found myself asking. What the hell was I thinking? I didn't want Daphne to think I was asking her on a date, so I quickly added, \"For moral support.\"\n\n\"I'm not dressed for a party,\" Daphne said.\n\n\"It's not that kind of a party,\" I responded, surprised to realize just how badly I wanted her to go with me. \"Come on, help a guy out!\"\n\n\"And just how would my going with you help you out?\" Daphne asked, obviously stalling as she considered.\n\n\"Well, for one thing you'll certainly be a distraction for all my male cousins,\" I grinned.\n\n\"Oh great!\" she said sarcastically, but she was laughing.\n\n\"Come to think of it, you might want to be careful around cousin Debbie too. I'm pretty sure she's gay,\" I added, and then teasing added, \"Unless of course you prefer that sort of thing.\" \"I don't know,\" Daphne shrugged. \"I've never tried it.\" I looked at her in shock. She saw my expression, laughed and added, \"Well, I haven't!\" Daphne seemed like such a normal girl that I kept forgetting that she was brought up in a family where there was no such thing as a taboo subject. They prided themselves on being open about everything. I can still remember a rather uncomfortable conversation about birth control when Bette and I started getting serious.\n\n\"I'm surprised,\" I said, trying to regroup quickly. \"I would think that your parents arranged for lessons in sexual gratification when you came of age.\" I was joking once again, trying to win a point off of Daphne. No such luck. She was too quick witted.\n\n\"Oh, they did for Bette and my brother John,\" Daphne replied. \"But I decided to forgo the honor.\" I thought she was just going along with the joke, but you could never tell with her parents.\n\n\"How come you passed?\" I asked, honestly curious.\n\n\"I'm the black sheep of the family,\" Daphne smiled. \"I actually want my first time to be with a man or woman that I love.\"\n\n\"You mean you're a...\" I began, but couldn't finish my thought.\n\n\"It's not a dirty word!\" she laughed. \"Virgin. Yes, I'm a virgin.\"\n\n\"How old are you?\" I asked.\n\n\"Eighteen,\" she replied with a shake of her head, and then before I could say anything she added, \"Yes, there are still eighteen year old virgins out there!\"\n\n\"I hope you don't form a club,\" I grinned. \"I doubt the dues would pay for a place to meet. But then again, how big of a place would you really need?\"\n\n\"You're a jerk!\" Daphne laughed.\n\n\"I've been called worse,\" I shrugged. \"For better reasons.\"\n\n\"I'm sure.\"\n\n\"Ouch!\" I laughed. \"I deserved that!\" We both took a last sip of our coffees.\n\n\"Do you really want me to come with you?\" Daphne asked after we were done.\n\n\"If you wouldn't mind,\" I said seriously.\n\n\"Okay,\" she finally said in agreement. \"But you'll owe me a big favor.\"\n\n\"Deal!\" I said happily. \"Let's go.\"\n\nWe stood and made our way to the door of the diner. Daphne was in front of me and try as I might, I couldn't stop looking at her ass. It was just a little bit larger than what was considered normal these days, but I thought it was perfect. I could feel myself stirring.\n\n'Pervert!' I thought to myself. It didn't stop me from looking. Nor did all the other names I called myself as we left the diner.\n\n\"You're staring again,\" Daphne said as she turned to face me with a raised eyebrow.\n\n\"How did you know?\" I asked.\n\n\"I can feel your eyes on me,\" she smirked. \"I don't really mind, but don't you think you ought to stop before we join your family?\"\n\n'Shit!' I snapped to myself. Now Daphne was flirting with me. I kept trying to remind myself that the cute twelve-year old girl I remembered and this young woman in front of me were the same girl. It didn't help. The fact that she was a virgin made it even worse.\n\n\"Sorry, I guess I'm still a little drunk,\" I offered lamely. Thankfully, Daphne left it at that.\n\n\"So, what are your family gatherings like?\" she asked. I sighed. It would be better if I warned her.\n\n\"Actually, a lot like yours,\" I replied, and then paused for effect before adding, \"And then again, absolutely nothing like them.\"\n\n\"What's that supposed to mean?\" Daphne frowned.\n\n\"Well, like in your family there is pretty much no subject that won't be broached at one of my family's gatherings. We talk about politics and religion, sometimes in the same sentence.\"\n\n\"I'm used to it,\" Daphne shrugged.\n\n\"Not like this,\" I sighed as I remembered one of Daphne's family parties I went to while dating Bette. The conversation there were in controlled, calm voices with people giving each other the floor almost formally.\n\n\"I don't understand.\"\n\n\"Well,\" I said, gathering my thoughts, \"Take what you're used to and make it larger, much louder and add an earthy quality to it.\"\n\n\"Earthy?\" she asked.\n\n\"That's just a nice way of saying that everyone says what they think and could care less who they offend,\" I explained.\n\n\"Oh dear!\" Daphne said.\n\n\"Now you're starting to understand,\" I nodded. \"They'll be no sight of a meditation pool like I remember from one of the parties Bette dragged me to. Basically, it's considered a success if there is only one fist fight and no broken bones.\"\n\n\"And you asked me to come with you?\"\n\n\"Oh, I'm exaggerating,\" I smiled. \"There hasn't been a fight in a couple of years.\"\n\n\"Thanks! I feel much better!\" Daphne said sarcastically. I couldn't help it. I laughed.\n\n\"Don't worry too much,\" I continued. \"It will be loud and most of my family likes to win arguments whether they're right or not. Some of them make it particularly enjoyable by thinking that the loudest voice wins, but truthfully, no one is intentionally cruel.\"\n\n\"That's nice to know,\" Daphne said, shaking her head.\n\n\"Unless of course, it's funny,\" I added with a sigh. \"If that's the case then all bets are off. They're like sharks scenting blood in the water.\"\n\n\"And your family thinks the whole situation with Janice is hysterical, don't they?\" she asked, reading my expression.\n\n\"You guessed it.\"\n\n\"Now I understand why you don't want to go back!\" Daphne said meaningfully. I nodded. Of course, her compassion didn't stop her from insisting that I go first up the stairs into the hall.\n\n\"There you are Michael!\" my cousin Tommy called when he saw me. \"We were wondering where you went off to.\"\n\n\"Yeah, we thought maybe you went to visit Janice,\" my sister Christina teased. \"Only we were sure we would have heard the clap of thunder after the lightning struck you down for daring to even go near a church!\"\n\n\"That's enough Christina,\" my mother said in my defense.\n\n\"Michael, who is that lovely girl hiding behind you?\" my father added from across the room. I stepped aside so that Daphne could move forward.\n\n\"This is Daphne,\" I said. \"She's an old friend.\"\n\n\"She's gorgeous!\" my father said.\n\n\"Don't mind him,\" my mother said to Daphne as she took her hand warmly. \"He's just a harmless, dirty old man.\"\n\n\"I heard that!\" my father called.\n\n\"So?\" My mother called back. \"It's true.\" There was laughter throughout the rather large hall.\n\n\"Aunt Mary, would you mind making room?\" Tommy asked. \"I'd like to meet this lovely lady.\"\n\n\"Me too!\"\n\n\"Me too!\"\n\n\"Don't forget me!\"\n\n\"Okay!\" I shouted at my gathering male cousins. \"All of you vultures back away! Give the girl some room!\"\n\n\"Spoil sport!\" one of my cousins grumbled.\n\n\"Teddy, you're married for Christ's sake!\" I snapped at him.\n\n\"I just wanted to say hello,\" he answered defensively.\n\n\"That better be all you wanted to do!\" I heard his wife call from their table. Again every one in the room laughed.\n\nI looked nervously at Daphne. I wasn't sure how she was going to handle my family. They were pretty overbearing, but thankfully she was grinning. After that, the focus shifted and I sighed loudly.\n\n\"That was fun!\" Daphne grinned at me.\n\n\"Masochist!\" I joked. \"Let's go try and find someplace to sit. The vultures will start circling again if we stay standing.\"\n\n\"Michael,\" Lillian cried as we walked by. \"There's room at our table.\"\n\n\"Thanks,\" I said with a smile. Daphne and I sat. We ordered drinks as my cousins at our table got in an argument about the local mayor and whether he was corrupt or not. After that the conversation turned to religion, but thankfully there was only one wisecrack about Janice.\n\n\"So, you're saying you don't think there is really a Hell?\" cousin Karl asked Lillian in disbelief.\n\n\"No, I don't,\" Lillian shrugged. \"I think Hell is just a place that old people created to keep children in line.\" They continued to argue for a few minutes before Karl turned toward me.\n\n\"What do you think?\" Karl asked.\n\n\"I think hell is being born into this family,\" I joked. Karl rolled his eyes and turned toward Daphne.\n\n\"How about you?\"\n\n\"I think I need another drink,\" Daphne replied with a grin as she picked up her second glass of wine.\n\n\"Chicken!\" Lillian teased. Karl made some clucking noises. Others at the table joined him. Daphne started to open her mouth, but then closed it and looked at me.\n\n\"You don't have to answer,\" I said to her. \"But don't be afraid to either. I don't mind if you offend them. They're only family after all.\"\n\n\"Jerk!\" Lillian cried. Karl called me something worse. I shook my head, but didn't respond.\n\n\"So, tell us? Do you think there is a Hell?\" my cousin Debbie asked Daphne. She was giving Daphne a sexy smile. I sighed.\n\n\"I think that for Karl there is a Hell, but for Lillian there isn't,\" Daphne answered.\n\n\"What's that supposed to mean?\" Karl asked.\n\n\"I think we make our own Heaven and Hell.\"\n\n\"What are we, God?\" Karl asked sarcastically.\n\n\"But of course,\" Daphne replied with a grin.\n\n\"Oh, I like her!\" Lillian laughed. The ensuing conversation got loud. So loud in fact, that it drew the attention of the other tables. I sat back and watched. Daphne was not nearly as vocal as the members of my family, but she made her points. It didn't hurt that Lillian took her side. My cousin could hold her own in any family discussion. I sighed in relief when the conversation finally quieted down.\n\n\"That was fun!\" Daphne said.\n\n\"You keep saying that and I'll start to think you're crazy,\" I said, not sure if I was kidding or not. Daphne laughed and reached for her drink.",
        "\"I'll be right back,\" she said, downing it and then standing.\n\n\"I'll go with you,\" Lillian said standing as well. A moment later the other three women at the table stood as well.\n\n\"What is it with women and going to the bathroom in groups?\" Karl asked.\n\n\"Oh no!\" I moaned. \"Not this conversation again! We have it every year!\" \n\nKarl ignored me as he continued to talk. I turned and watched the ladies walking away from the table. Okay, truth be told, I watched Daphne walking away. Just before they entered the restroom she turned and smiled at me as she mouthed the words, 'You're staring again.'\n\n\"Damn!\" I cried. I was pretty sure Daphne was laughing as she entered the bathroom.\n\n\"What's wrong?\" my cousin Hank asked.\n\n\"Nothing,\" I sighed.\n\n\"You've got it bad,\" he grinned.\n\n\"What do you mean?\"\n\n\"I mean, you really like Daphne,\" he replied. \"Not that I blame you. She's a great catch.\" I didn't know what to say, so I decided to say nothing. It seemed to take a long time, but eventually the ladies returned.\n\n\"So Mike,\" Lillian said as soon as she was seated. \"What do you think Bette is going to say when she hears you're dating her little sister?\" My head snapped around and I looked at Daphne.\n\n\"You just had to tell her?\" I grumbled.\n\n\"She asked how we knew each other,\" Daphne replied with a shrug.\n\n\"Bette? Isn't that the one who left him for another woman?\" Hank asked.\n\n\"No, that was the other one,\" my cousin Debbie said. \"Bette was the one who went to find herself in Thailand.\"\n\n\"Tibet,\" I sighed.\n\n\"Same difference,\" Debbie shrugged. I shook my head as I wondered what I did to deserve this family.\n\n\"You haven't answered my question,\" Lillian prompted.\n\n\"I'm not dating Daphne,\" I sighed.\n\n\"Yes you are,\" Daphne put in, surprising me.\n\n\"What?\"\n\n\"I told you that you'd owed me a big one for coming here with you,\" she said with a shrug and a grin.\n\n\"But...\" I began. Daphne cut me off.\n\n\"And to answer your question,\" she said to Lillian. \"My sister would say that it's about time!\"\n\n\"What?\" I asked dumbly.\n\n\"And why would she say that?\" Lillian asked with a raised eyebrow.\n\n\"Maybe because I've been planning on marry Michael since I was twelve,\" Daphne replied. Her words did the impossible. The table fell momentarily quiet. My cousins were speechless.\n\n\"Doesn't every little girl have a crush on her older sister's boyfriend?\" I tried to joke. No one laughed.\n\n\"You're serious,\" Lillian asked. Daphne smiled and shrugged yet again as she drank some more wine.\n\n\"Do you still plan on marrying Michael?\" Karl asked.\n\n\"Maybe,\" Daphne replied. \"If he ever gets around to asking me.\"\n\n\"Daphne,\" I said carefully. \"I think you've had too much to drink.\"\n\n\"Possibly,\" she said. \"But that doesn't make what I've said any less true.\"\n\n\"Oh shit!\" I cried and stood. I was out of the hall in record time.\n\n**********\n\n\"Michael! Wake up!\" \n\nIt took me quite a while to open my eyes. I wasn't happy at what I saw when I finally did. My sister Christina and my cousin Lillian were standing over my bed.\n\n\"What are you two doing here?\" I asked as I glanced at the clock. It was four thirty in the morning!\n\n\"We just dropped off poor Daphne,\" Christina said. \"I can't believe you left her at the party.\"\n\n\"Poor Daphne is nuts!\" I growled.\n\n\"Maybe,\" Lillian sighed. \"But she certainly has a thing for you.\"\n\n\"That's my point! It's crazy! The last time I saw her, she was twelve!\"\n\n\"She's not twelve any longer,\" Christina said.\n\n\"Don't you think I know that?\" I asked, rubbing the sleep from my eyes. \"She's gorgeous and built like...\"\n\n\"We get the picture,\" Lillian said, cutting me off. \"You're attracted to her.\"\n\n\"Yes, but what am I supposed to do? She's Bette's little sister for Christ sake!\"\n\n\"Why not date her and find out?\" my sister asked.\n\n\"I am not going to date Daphne!\" I said adamantly.\n\n\"It's your call,\" Lillian shrugged. \"But I think you're the one losing out.\"\n\n\"Think about it little brother,\" Christina added. \"You've admitted that you're attracted to her. What would be the harm in a simple date?\" I remained silent. The two exchanged a look and then wished me a good night before leaving. I was up for quite a while before I finally fell asleep again.\n\nThe next day was Sunday and it went by slowly, but thankfully the week following went quickly. Work was busy and I did my best to throw myself into it. Despite all that, I frequently found myself thinking about Daphne. Every time I did, I cursed myself and dove back into my work.\n\nI woke up the following Saturday morning in a good mood. I got a lot done at work during the past week and my family hadn't bothered me, not even Lillian or Christina. I decided to go for a jog. It was a beautiful day and the jog helped my mood even more. I didn't much like jogging, but I always felt better afterward.\n\nI jumped into the shower when I got home and was just finished dressing when there was a knock on the door. I answered it. For some reason, I wasn't really surprised to see Daphne there.\n\n\"Come on in,\" I said, walking away from the door. I left it open. She raised an eyebrow, but followed.\n\n\"I wasn't sure you were going to answer the door, much less let me in,\" she said carefully.\n\n\"Well, either you're crazy or not,\" I shrugged. \"If you're crazy, then I don't think one little door will stop you. And if you're not, then it probably makes sense for us to talk this out.\"\n\n\"Sounds good to me,\" Daphne smiled. \n\n'Damn!' I thought to myself. 'I wish she'd stop doing that!' Her smile hit me hard every time.\n\n\"So, let me start with an apology,\" Daphne said. \"I shouldn't have said what I did. I didn't mean to scare you.\"\n\n\"That's okay,\" I smiled. \"I'm sure it was just the alcohol talking.\"\n\n\"Yes and no,\" Daphne sighed. \"I really did tell everyone I was going to marry you when I was twelve.\"\n\n\"You were just a girl then,\" I said. \"I can understand that.\"\n\n\"You were always very kind to me,\" she shrugged. \"And I always liked the points you brought into the family discussions.\"\n\n\"So then, you don't still plan on marrying me?\" I asked tentatively.\n\n\"How could I?\" she replied. \"You'd have to ask me first and I'm pretty sure after last week that's an impossibility.\" For some reason her words disappointed me.\n\n\"I'll get us some coffee,\" I said with a smile.\n\n\"Do you have any juice?\" she asked. \"I'm not much of a coffee drinker in the morning.\"\n\n\"Orange juice it is,\" I said. Ten minutes later we were laughing as we remembered something that happened six years ago.\n\n\"Well, I'd better be going,\" Daphne eventually said. \"I'm glad we cleared up what happened last weekend. You're a nice guy. I'd like to be friends.\"\n\n\"I'll see you around,\" I said as I let her out the door. Facing the closed door I added to myself, \"That went better than I expected.\" Fifteen minutes later there was another knock on the door.\n\n\"Daphne?\" I said in confusion as I saw her standing at the door again.\n\n\"Look, I'm sorry to bother you,\" she sighed. \"But I've got a flat tire and I can't get the lugs off.\" I saw that her hands were dirty and that she had a dark smudge on one cheek.\n\n\"I'll be right down,\" I said, going to the living room to get my shoes. \"Do you want a drink?\"\n\n\"No, but can I use your bathroom to wash up?\" she asked. I pointed it out. Daphne walked toward it. Of course, I watched her. Just the sight of her drove me to distraction! I shook my head and went out to her car.\n\n\"There, that should do it,\" I smiled a little while later as I packed the flat tire in her trunk. I put the tire iron back where it belonged and shut the hatch.\n\n\"Thanks a lot,\" Daphne said. \"You're a life saver!\"\n\n\"No big deal,\" I replied. Daphne nodded and then started to speak, but then stopped herself. I was curious what she was going to say so I asked, \"What is it?\"\n\n\"Well, I was just wondering if I could buy you lunch to say thanks,\" she said. \"Strictly platonic. Just two friends eating lunch.\"\n\n\"You don't owe me a thing,\" I smiled. \"Let's call it even. After all, you did come to the family party last week.\"\n\n\"And you think changing one flat tire makes us even?\" she asked with a grin.\n\n\"Maybe not,\" I laughed.\n\n\"Let me take you to lunch,\" she said. \"We'll figure out what you owe me for last week another time. I was supposed to be meeting some friends, but I already missed them. I hate eating alone.\"\n\n\"Just as friends?\" I asked, surprising myself.\n\n\"Sure.\"\n\n\"Okay,\" I shrugged. \"I am hungry.\"\n\nLunch was amazing. Okay, truthfully lunch was adequate. It was Daphne who was amazing! She was smart and witty. I was so drawn to her soft brown eyes that I frequently had to force myself to look away. We spent most of the time with her telling me my cousins' antics after I left the party the week before.\n\n\"Okay,\" I finally laughed. \"So maybe I do owe you more than fixing one flat tire.\"\n\nThe meal ended too quickly. I was disappointed when we arrived back at my house. Daphne came up to use the bathroom once more.\n\n\"Thanks,\" she said as I walked her to the door. \"I had a good time.\"\n\n\"Me too,\" I said. \"Maybe we could do it again some time.\"\n\n\"Sounds good,\" Daphne replied, and then stopped and reached into her purse. She pulled out a business card and wrote her home number on the back. \"Give me a call when you're up for getting together again.\"\n\n\"Sure,\" I said. Daphne leaned forward and gave me a quick kiss on the lips. It was the type of kiss you might give a friend, but then again my reaction was far more than friendly. Thankfully, she was out of the door before it hit.\n\n\"Wow!\" I said, going to the window and watching her get into her car and drive away. \"Hank was right. I really do have it bad!\" I touched my mouth where she kissed me. I could still feel the brush of her lips.\n\nThe next day I had to fight hard not to call. I kept finding myself with the phone and Daphne's number in my hands. I decided to put the business card away. I normally just entered a person's information into my address book, but I didn't want Daphne's number so easily accessible. I ended up putting it in my strong box, as if locking it away would let me forget about it. \n\n**********\n\n\"So, did you and that girl Daphne ever work things out?\" my sister Christina asked. I smiled and nodded. We had just finished eating dinner. We normally got together once a month to touch base. It was my turn to cook, but that was okay. \n\n\"Yep,\" I said. \"She came by last week and we decided to be friends.\"\n\n\"That nice,\" Christina said. \"Do you plan on seeing her again any time soon?\"\n\n\"Probably not.\"\n\n\"Some friend you are!\" my sister snorted. \"What exactly are you afraid of? That you might actually like her?\"\n\n\"Exactly!\" I said, being more honest than I planned.\n\n\"What would be so wrong with that?\"\n\n\"Do you want me to alphabetize the list?\" I asked sarcastically. \n\n\"There aren't that many reasons for you not to date her! There can't be.\"\n\n\"Christina, you're wrong,\" I sighed. \"First, I'm just getting over Janice. Any relationship I get into right now would be a rebound relationship.\"\n\n\"Maybe,\" my sister admitted grudgingly. \"But then again maybe not. What else do you have?\"\n\n\"Well, my luck with women for starters!\" I snorted. \"If I did fall for Daphne, she'd probably end up being from another planet!\" Christina laughed, but wasn't really put off.\n\n\"Then there is the whole Bette issue. It's just too weird to date my ex-girlfriend's little sister.\"\n\n\"Is it because Bette was your first?\"\n\n\"Christina!\" I snapped in embarrassment, but then I nodded and added, \"Partially.\"\n\n\"What else?\" my sister asked.\n\n\"Well, there is the age difference,\" I answered. \"She's barely eighteen and I'm almost twenty five.\"\n\n\"That's not that big of a difference,\" Christina shrugged.\n\n\"Sure it is,\" I argued. \"She was only twelve when I was exploring the birds and bees with her sister.\"\n\n\"That was then,\" my sister said. \"Age doesn't matter as much once you're past your teen years.\"\n\n\"She's still only eighteen!\" I cried.\n\n\"You know what I mean!\" Christina snapped. \"Besides, Daphne doesn't strike me as a typical eighteen year old.\"\n\n\"Chris,\" I said softly. \"She's younger than you think. We were joking and she said she was still a virgin.\"\n\n\"There's nothing wrong with that,\" my sister insisted. I knew she was right, but it bothered me for some reason.\n\n\"Why are you trying so hard to get me to date her?\" I asked in annoyance.\n\n\"I'm not,\" Christina shrugged. \"Not really. Daphne seemed nice and I thought she might make you happy. I worry about you little brother.\"\n\n\"Don't worry,\" I said. \"I'm fine.\"\n\n\"Okay, I'll let the subject drop right after I make one more point,\" my sister sighed. \"All of those reasons may or may not be valid, but if you like her then none of them should stop you from at least seeing where the relationship might go.\"\n\nWe spent the rest of the time talking about the typical things like our parents and work. Christina left by nine thirty because she had a date later. I put on the television. It was Friday night and there was always something on that I could suffer through.\n\nFifteen minutes past. I sighed loudly and stood. I went to my closet and pulled out my strong box. Daphne's phone number was just where I left it.\n\n\"She's probably out anyway,\" I said aloud. I dialed the number and waited. The phone rang for a while with no answer. I continued to wait until the answering machine picked up. I hung up quickly. \"It must be God, saving me from my moment of weakness!\" \n\nI felt both relieved and disappointed. I plopped back into the couch ready to spend the next few hours in couch potato mode. Ten minutes later the phone rang.\n\n\"Hello,\" I said as I picked up the phone.\n\n\"Michael?\" I heard Daphne's voice come over the phone. Suddenly I was standing again.\n\n\"Yes,\" I replied, swallowing hard.\n\n\"I just got in and saw that I missed your call,\" she said. \"I didn't recognize the number. You should have left a message. I almost didn't call.\"\n\n\"That's okay,\" I said. \"I was just touching base.\"\n\n\"Well, it's nice to hear from you,\" Daphne replied and then an awkward silence followed.\n\n\"I was thinking about going into the city tomorrow. Maybe stop by one of the museums,\" I said, fighting past the lump in my throat. \"Care to come along?\"\n\n\"Sure,\" she said after a brief hesitation. \"There's a restaurant there that I've been dying to go to. It's Italian. It's my treat if you're willing to go there for lunch.\"\n\n\"You don't have to do that.\"\n\n\"I want to,\" she replied, sounding like she meant it.\n\n\"What is it with you and buying me lunch?\" I joked. She laughed gently.\n\n\"Are we driving in or taking the train?\" she asked.\n\n\"Do you have a preference?\"\n\n\"Train,\" she answered succinctly. \"It's less of a hassle. I hate trying to park in the city.\"\n\n\"Okay. I call you in the morning.\" \n\n\"Sounds good,\" she said. \"I'll see you then.\"\n\nI stared at the phone for a few seconds after I hung up. I knew I was happy to be seeing Daphne again, but I still couldn't help feel a little trepidation.\n\n\"We're just two friends spending a day together,\" I said aloud, but who was I trying to convince?\n\n**********\n\n\"Now that was a fun day!\" Daphne said as she plopped into the train seat with a loud sigh. I could understand.\n\n\"I'm exhausted,\" I groaned. \"I can't believe we visited that many museums and somehow fit lunch in.\"\n\n\"Don't forget the shopping!\" She was holding up some of the shopping bags we carried.\n\n\"That was the best part,\" I grinned. \"I got to sit and relax while you went into your little buying frenzy.\"\n\n\"I wasn't that bad!\"\n\n\"Are you kidding?\" I asked in disbelief. \"Thank God we took a train and could only carry so much!\"\n\n\"Men!\" she snapped, but we both started laughing.\n\n\"How did you like St. Patrick's?\" I asked a few minutes later.\n\n\"I actually liked it,\" Daphne answered, obviously thinking back to the visit. \"It was so beautiful! I cried at that one statue.\"\n\n\"I remember,\" I smiled warmly. \"I was a bit surprised that you agreed to stop there. At the family party you were arguing with my cousins about God. I wasn't sure you believed at all.\" The train was warm so I pulled off my coat.\n\n\"Depends on the day,\" she laughed, unbuttoning her coat. \"I actually have pretty traditional views most of the time.\"\n\n\"What would your parents say?\" I teased.\n\n\"Remember,\" she grinned, pointing to herself. \"I'm the black sheep.\" Daphne pulled her coat off. I couldn't help watching. As usual, she caught me. \"Michael, you're staring again.\"\n\n\"I was not,\" I said quickly. \"I was just wondering what the pattern was on your shirt.\"\n\n\"Care to get a closer look,\" she asked, sticking her chest out slightly. My eyes obviously bugged out because she started laughing.\n\n\"You know, you could kill a man with those!\" I joked badly.\n\n\"They're not for killing,\" she grinned. \"They're for capturing.\"\n\n\"Touch\u00e9!\" I laughed. \"Touch\u00e9.\"\n\n\"My feet are killing me,\" Daphne said, changing the subject. I put my eyes back into their sockets before responding.\n\n\"Mine too. I legs aren't much better. I need to get back into shape.\"\n\n\"Let's not go there. I want to finish enjoying this day without any guilt.\"\n\n\"Fair enough,\" I smiled.\n\n\"Let's continue with the game we were playing while we walked. Maybe it will help us forget the pain.\"\n\n\"You seem to really like this silly game,\" I said.\n\n\"It's fun,\" she shrugged. \"It helps me get to know you as well as pass the time.\"\n\n\"Whose turn is it to ask a question?\"\n\n\"Mine!\" Daphne grinned.\n\n\"Of course it is,\" I sighed loudly. \"It seems to always be your turn when we restart the game.\"\n\n\"Never mind that,\" she said. \"What I want to know is, which of all your crazy cousins are you closest to?\"\n\n\"Growing up it was Hank, but these days I'd say Lillian,\" I replied. \"She's become almost like another sister to me.\"\n\n\"Not Debbie?\" she grinned.\n\n\"Oh no you don't!\" I laughed. \"It's my turn to ask a question.\"\n\n\"You're right,\" Daphne said, but then added, \"I understand. A lot of people have problems with homosexuals.\"\n\n\"That's not it at all!\" I snapped. Daphne shrugged. She was playing me and I knew it, but I couldn't let it go. \"I love Debbie and even like her as a person, but we just don't have that much in common.\"\n\n\"Other than the fact that you both like women?\"\n\n\"Well yes,\" I grinned. \"Other than that.\"\n\n\"Your turn to ask a question.\"\n\n\"What's your darkest secret?\" I asked.\n\n\"Interesting question,\" she stalled.\n\n\"Come on! You have to answer it. That's part of the rules. If you don't then I win.\"\n\n\"Relax, I'm just trying to decide which secret is my darkest. There are so many of them,\" she grinned. \n\n\"Sure there are!\" I said in disbelief.\n\n\"Once,\" she started, talking in a softer voice. I leaned forward to hear her. She surprised me by giving me a quick kiss. \"I stole a kiss from a friend of mine.\"\n\n\"Good try,\" I laughed. \"Now answer the question or admit defeat. Why not tell me? No one is sitting near us.\" Daphne looked around to verify my statement.\n\n\"Fine,\" she finally said, sounding more nervous than angry. \"Once, I accidentally walked in on you and Bette while you were occupied.\"\n\n\"Really?\" I asked in surprise. She nodded, so I added, \"And just how long did you stay and watch?\"\n\n\"No cheating,\" Daphne grinned. \"That's another question and it's my turn.\"\n\n\"I bet you stayed until we were done,\" I joked.\n\n\"I did,\" she replied. \"It was only a couple of seconds anyway.\"\n\n\"Ouch!\" I laughed. \"How do I keep setting myself up for these things?\" Daphne shrugged.\n\n\"Here's my question,\" she said, moving on. \"What turns you on the most about women?\"\n\n\"Other than the obvious?\" I asked, taking a quick look at her breasts. She rolled her eyes.\n\n\"Just answer the question!\"\n\n\"It's not as easy as you think,\" I sighed, becoming serious. \"I'm attracted to different woman for different reasons.\"",
        "\"I can understand that,\" she said. \"But there must be one thing that gets to you all the time.\"\n\n\"A smile,\" I said after pausing briefly.\n\n\"Really?\" she asked in disbelief.\n\n\"Really.\"\n\nThe conductor came and we stopped talking while he took our tickets. He paused a moment to flirt with Daphne. I couldn't blame him. She was beautiful. I waited until he left and threw out the next question.\n\n\"How far have you ever gone with a guy?\" I think I was almost as stunned as she was by my question. It wasn't the one I planned on asking. \"You don't have to answer if it's too personal.\"\n\n\"Of course it's too personal!\" she said, but then shrugged and added, \"But I'm willing to answer if you keep it between us.\"\n\n\"Sure.\"\n\n\"Well then,\" she said, with a slight blush. \"I've let a guy touch my breasts.\"\n\n\"Lucky him!\" I joked. She slapped me, but not hard and then she continued.\n\n\"I've also taken care of a guy, but only through his sweatpants with my hand.\"\n\n\"And I thought you were such a nice girl.\"\n\n\"Don't be a jerk!\" she snapped. \"I told you I was a virgin, not a nun.\"\n\n\"You just had to bring Janice into this conversation, didn't you?\" Daphne looked at me in surprise and then burst into laughter. I smiled. It was the first time I could joke about what happened with Janice. I guess time does heal all wounds.\n\n\"Okay, it's my turn again,\" she said once she was done laughing. \"Since sex seems to be the only thing on your mind, who was your most sexually satisfying partner?\"\n\n\"Do you really want to know?\" She looked at me and nodded, so I shrugged and told her. \"It was a girl I met on a road trip during college. Truthfully, I can't even remember her name.\"\n\n\"You're a male slut!\" Daphne joked, but there was something in her voice that made me explain.\n\n\"Not really,\" I sighed. \"It was right after Sally left me for another woman. I was drunk and I'm not even sure how I ended up in this girl's room. She wasn't even all that pretty.\"\n\n\"And she was the best you ever had?\"\n\n\"Yes,\" I shrugged. \"Whatever else she was, she was comfortable with herself and her body. She liked to try new things and really enjoyed both giving and receiving pleasure.\"\n\n\"Okay,\" Daphne shrugged. I knew what she wanted to ask, so I answered it even though it was my turn to ask a question.\n\n\"For the record,\" I said, looking into her eyes. \"I've only slept with four women.\"\n\n\"My sister, Sally, Janice and this road trip girl?\"\n\n\"Yes,\" I replied honestly. \"If that makes me a male slut, then so be it.\"\n\n\"I think it's time to move away from the sex questions,\" she said. \"Friends probably shouldn't be talking about this stuff anyway.\" \n\n\"Agreed, these are things you only talk about with your lover or best friend. Maybe one day we can talk about it again,\" I said, and then quickly added lamely, \"Because I think there's a good chance we'll be best friends one day.\"\n\n\"I hope so,\" Daphne smiled. I had to look away. Yep, a smile could definitely get to me.\n\n\"So, here's my next question,\" I said, moving us away from the sex questions as agreed. \"What do you miss most about being a kid?\"\n\n\"That's easy! Guilt free cookies!\" she said excitedly.\n\n\"Like your cookies, do you?\"\n\n\"Oh yes!\" she replied. \"Do you remember what it felt like to eat a cookie as a kid? It was heaven! No worrying about anything like pesky calories or cholesterol.\" Daphne licked her lips.\n\n\"You can't possibly be hungry after the meal we had at that restaurant you chose?\" I asked.\n\n\"No,\" she sighed. \"But the thought of cookies, maybe even milk and cookies, still makes my mouth water.\"\n\n\"Mine too,\" I admitted. Cookies were weakness of mine also. They weren't as bad as ice cream, but they were a close second. \"Your turn.\"\n\n\"Okay,\" she said, obviously trying to think up a good one. \"If you could go back in time and totally remove one person from your life. Who would it be?\"\n\n\"Hmm...\" I thought. It was an interesting question.\n\n\"And don't your dare say me!\" Daphne joked. \n\nThe thought of it struck me. What would my life be like if I never met Daphne? Would it really be that big of a deal? Truthfully, I didn't know her all that well. Would it be worse than if I never met someone else in my life that I cared for? For example, her sister Bette? Or Sally or even Janice? Suddenly I didn't want to play the question game anymore.\n\n\"What's wrong?\" she asked, seeing my expression.\n\n\"Nothing,\" I said, but then added, \"Something is not sitting well. Do you mind if I just close my eyes for a bit?\"\n\n\"No, go ahead,\" Daphne replied. She sounded concerned. I felt a little guilty, but I hadn't actually lied. Something I thought wasn't sitting well. I left my eyes closed for the rest of the train ride and said goodbye to Daphne quickly. I needed to go home and think.\n\nDaphne called me twice over the next few days. I didn't return either call.\n\n**********\n\n\"Lillian,\" I said as I met my cousin at the restaurant she specified. \"I'm glad you wanted to meet for dinner, but I'm surprised you chose this place. You're not much for steaks.\"\n\n\"I get a craving every once in a while,\" she replied with a shrug. \"So how are you doing? We haven't talked in a couple of weeks.\"\n\n\"I'm doing good,\" I replied. \"Busy at work.\"\n\n\"I meant how are you coping with the Janice situation,\" Lillian clarified.\n\n\"Oh!\" I said in surprise. \"Actually she hasn't been on my mind all that much lately. I guess it's a good thing our engagement fell through.\"\n\n\"If she's not on your mind, then who is?\"\n\n\"Nobody special,\" I replied. \"I decided to enjoy the single life for a while. Although, there is this redhead at work I'm thinking about asking out.\"\n\nThe conversation drifted for a while as we caught each other up on our lives. I didn't mention Daphne because I really didn't want to talk about her. I hadn't seen her in a week and a half. I'd made my decision. Now all I had to do was live with it.\n\n\"Hey! Isn't that the girl you brought to the family party?\"\n\nIt was as if the thought of her caused Daphne to materialize out of thin air. She was being led to the table right next to ours. Wouldn't you know it! Her sister Bette and some guy were with her.\n\n\"Michael?\" Bette asked in surprise, and then cried, \"It is you! How are you?\"\n\n\"Hello Bette,\" I said, forcing a smile. \"I hadn't heard you were home.\"\n\n\"My husband Claude and I only arrives this past weekend,\" she said. I looked at the guy sitting with Bette and Daphne. So now, here is the sick part. I wasn't jealous or anything. What I really felt was relieved because he was with Bette and not Daphne.\n\n\"Congratulations,\" I smiled, giving her a quick hug and shaking Claude's hand.\n\n\"I was going to tell you about Bette's surprise marriage and the fact that she was coming home when you returned my call,\" Daphne said, looking at me pointedly.\n\n\"Hello Daphne,\" Lillian said, rescuing me. She then turned to Bette and Claude and added, \"I'm Lillian, Michael's cousin.\"\n\n\"Lillian!\" Bette said in surprise. \"Michael used to talk about you all the time. You seemed to have grown out of your tomboy phase.\"\n\n\"That's was my cousin Debbie,\" I said. \"And she has grown out of it. Well, sort of.\" Daphne and Lillian laughed.\n\n\"My mistake,\" Bette said.\n\n\"No big deal,\" Lillian shrugged. \"There are a lot of cousins.\"\n\n\"Lillian's the one who used to sleep over with my sister and drive me crazy,\" I smiled. \"You remember! The one I used to call the Bossy Bitch.\"\n\n\"You know,\" my cousin sighed. \"My boyfriend Vic is supposed to meet us here in a little while. I'm thinking about having him beat you up. What a horrible nickname!\"\n\n\"Wait!\" Bette said. \"I remember now! But didn't you also say the Bossy Bitch was like a second sister to you?\"\n\n\"Oh well,\" Lillian smiled, obviously forgiving me the nickname. \"Vic's a lover and not a fighter anyway.\"\n\n\"Why don't we all sit together so that you guys can catch up on old times?\" Claude suggested.\n\n\"You are such a dear,\" Bette said, smiling and giving him a quick kiss. I smiled as I watched then together. It looked like Bette had finally found the right person for her. \n\n\"I don't mind,\" Lillian said.\n\n\"Good! Then it's settled!\" Bette said before either Daphne or I could voice an opinion. The tables were put together and somehow Daphne and I ended up sitting together.\n\nThe meal was good and the conversation interesting. The only problem was that Daphne hardly said a word to me. I didn't blame her. Vic showed up around dessert. We'd met a couple of times. He seemed like a nice guy.\n\n\"Well,\" my cousin sighed once the bill was paid. \"Work tomorrow. We should be going.\"\n\n\"Us too,\" Claude said. \"Bette's parents want us up as dawn for some ceremony.\"\n\n\"If they offer you something to drink,\" I grinned. \"Be careful! Her father likes to mix some interesting concoctions.\"\n\n\"Thanks for the warning,\" Claude said, shaking my hand.\n\n\"Michael, would you mind giving Daphne a ride home?\" Bette asked. \"Her apartment is a bit out of the way for us.\"\n\n\"No problem,\" I said, hiding my grimace.\n\n\"I wouldn't ask, but Daphne mentioned that you two were becoming friends. I'm happy for you both. It's important to have friends. I don't know what I'd do without Claude. He's my best friend.\"\n\nMoments later all the goodbyes were said and I found myself in my car giving Daphne a ride. Neither of us spoke until I parked my car in front of her apartment.\n\n\"So, are you going to explain what happened?\" she finally asked. \"I thought we had a good time, but you suddenly got quiet on the train. I thought maybe you had food poisoning or something, but then you didn't return either of my calls.\"\n\n\"I'm sorry about that,\" I said, ignoring her question.\n\n\"Look, do you want to be friends or not?\" she asked. \"I don't see what the big deal is, unless of course you're feeling something more than friendship for me. Is that it? Are you afraid it might turn into something more?\"\n\n\"Maybe,\" I said carefully. \"And I'm not ready for anything more.\"\n\n\"Fine,\" Daphne shrugged. \"But that doesn't mean we can't be friends. Didn't you have a good time that day in the city?\"\n\n\"Yes,\" I admitted.\n\n\"And can't two adults of the opposite sex have a strictly platonic friendship?\"\n\n\"Sure.\" \n\n\"Then that what we'll be,\" she finished. \n\n\"Okay,\" I said as she opened the door and stepped out of the car.\n\n\"Call me,\" she said and went to her apartment. She stopped at the end of the drive and turned back. \"You know, if all you want to do is be friends, then you'll have to stop staring at me like that.\" I nodded dumbly, but didn't stop looking at her. She shook her head and went in.\n\n**********\n\n\"So what are you doing this weekend?\" Daphne asked. I couldn't believe I actually called her. I rationalized, telling myself that only a real heel would not call after the conversation we had in front of her apartment, but I knew the truth was that I wanted to see her.\n\n\"Not much,\" I said. \"It's supposed to rain so I was thinking about a movie.\"\n\n\"That's where I was before when you left the message,\" Daphne replied.\n\n\"At the movies?\"\n\n\"No,\" she replied. \"I was out renting a few movies.\"\n\n\"Anything good?\" I asked.\n\n\"Mostly chick flicks,\" she replied, causing me to laugh. \"I did get one adventure.\" She told me the name.\n\n\"Oh wow!\" I said. \"I've been waiting for that to come out for months. I missed it while it was in the theaters.\"\n\n\"You can borrow it when I'm done,\" she offered, and then paused briefly before adding, \"Or you can come over and watch it with me?\" The safe thing to do was say no thank you to both offers, but that would make me seem unfriendly.\n\n\"It's too late tonight. Think you can wait until tomorrow to see it?\" I asked, and then shook my head.\n\n\"Sure,\" Daphne said. \"I've got plenty of other movies to watch.\"\n\n\"How about I come over around lunch time? I'll bring Chinese.\"\n\n\"Sounds good to me,\" she said. \"Do you mind if I dress in couch potato clothes?\"\n\n\"Couch potato clothes?\" I asked with a frown. \"What that? Burlap bags?\"\n\n\"Very funny,\" she said, but she was also laughing. \"I'll be wearing sweats, a tee shirt and that's about it.\"\n\n\"Sounds good to me,\" I shrugged. \"See you then.\"\n\nI arrived at her place at around one the next day. Her apartment was small, but I liked it. It was very tastefully decorated. \n\n\"It's about time!\" she said as she threw open the door. \"I'm starving! I hope you got ribs?\"\n\n\"Among other things,\" I smiled. My expression froze when I saw what she was wearing. She hadn't lied to me. She was wearing sweats, a tee shirt and that was all. Both were reasonably modest, but Daphne without a bra was an amazing site to see!\n\n\"You're staring again,\" Daphne sighed. \"Do you want me to go get a bra on?\"\n\n\"No, that's okay,\" I found myself saying. \"Friends should be able to be comfortable around each other.\"\n\n\"Friends don't look at each other the way you're looking at me right now,\" Daphne said pointedly.\n\n\"I bet they do when they're of opposite sexes and one of them is built like you,\" I said honestly. Daphne looked at me a moment longer.\n\n\"Maybe you're right,\" she shrugged, taking the Chinese food from me. Her eyes drifted down my body. They paused briefly. I glanced down and saw that my sweats were doing a bad job of hiding my feelings for her.\n\nI groaned to myself and made to say something that probably would have been stupid at best, but thankfully, Daphne was already in the kitchen with the food. I went to the bathroom and threw cold water on my face. I waited until I was once again in control of myself before joining Daphne in the kitchen.\n\n\"Better hurry!\" she said. \"The food is getting cold, what's left of it anyway.\"\n\n\"Hey! I hope you saved me some ribs,\" I cried.\n\n\"One or two,\" she replied with a grin. Daphne was sitting and her breasts were thankfully not as noticeable.\n\n\"Please pass the white rice,\" I said reaching for one of the cartons. We ate in silence. It was pretty obvious that we both were hungry.\n\n\"I think I ate too much,\" Daphne said when we were done. \n\n\"You?\" I groaned. \"I think I'm going to be sick.\"\n\n\"Let's go relax on the couch,\" she said as she stood and stretched.\n\n'Shit!' I said to myself as I watched her. 'Coming here was definitely a bad idea!' I could feel my cock stirring once again.\n\n\"Like what you see?\" Daphne asked with a grin as she finished.\n\n\"I'll have to take a cold shower if you do that again,\" I said with some difficulty. She laughed and went into the living room. I followed cautiously. \n\nDaphne popped the tape in and we sat on opposite ends of the couch. The movie was as good as I hoped. I soon relaxed and got lost in the story. Somewhere in the middle we laid down, still on opposite ends of the couch, but now our legs shared the middle cushion. \n\n\"That was pretty good,\" Daphne said once it was over.\n\n\"I thought it was excellent!\" I replied as I sat up and stretched. I noticed Daphne watching me as I finished. Unable to resist I teased, \"Like what you see?\" She started and then burst out laughing. I joined her.\n\n\"I'm going to get myself a glass of wine,\" she said as she stood. \"Care for one?\"\n\n\"Sure, why not,\" I replied with a shrug. I rewound the movie while she was gone and looked around the room. She had pictures of her family and friends all over the place. It gave the room a warm feeling. I noticed that Bette was in quite a number of them. \n\n\"What do you think of Bette and Claude?\" Daphne asked tentatively as she handed me a large glass of wine.\n\n\"They look happy,\" I replied. \"She's not one to be by herself.\"\n\n\"The word you're looking for is 'needy',\" Daphne sighed. \"I know she's older, but I worry about her.\"\n\n\"She'll be okay.\"\n\n\"Do you still regret that you two broke up?\"\n\n\"It was bound to happen eventually,\" I sighed, still looking at one of the pictures of Bette. \"Opposites may attract, but that doesn't mean they're meant to be together.\"\n\n\"You sound like you still love her,\" Daphne said. Her voice sounded odd. I turned toward her and saw that she was looking at me expressionlessly.\n\n\"Daphne, your sister Bette was my first love,\" I said, trying to explain. \"Not only that, but your family was my first real exposure to a completely different environment. Truthfully, both were intoxicating in there own way.\"\n\n\"I understand,\" she replied, moving to the VCR to remove the tape.\n\n\"I'm not sure you do,\" I said, surprising myself. \"Your sister will always hold a special place in my heart, but that's not the same as me being in love with her. I will always remember my time with Bette fondly. Well, all of it except her decision to leave me and go to Tibet.\"\n\n\"You know,\" Daphne said as she sat down next to me on the couch. \"She wanted you to go with her.\" I thought back to the night Bette left me. I could see that what Daphne was saying was probably true, but did I know it back then? Was I blind to the truth or just unwilling to face it?\n\n\"I know,\" I finally admitted, to myself as well as Daphne. \"She never came right out and said it, but deep down I knew. I just couldn't do it.\"\n\n\"So, in a way you broke up with her,\" Daphne said. I looked at her and frowned.\n\n\"It didn't seem that way to me.\"\n\n\"I know, but that's how Bette saw it,\" Daphne said. We sat on the couch while she flipped through the channels.\n\n\"That all old history. Bette married the man for her and she seems content. I'm happy for her. Now let's talk about something else,\" I suggested, and then pulling off my sweatshirt added, \"Like how hot it is in here!\"\n\n\"I'm not hot.\"\n\n\"You most definitely are,\" I said without thinking.\n\n\"Thank you,\" Daphne smiled warmly.\n\n\"Please stop doing that,\" I said with a shake of my head.\n\n\"What?\"\n\n\"Smiling,\" I replied. \"I told you how some women's smiles affect me. Every time you do it my brain turns to mush!\"\n\n\"Really?\"\n\n\"There you go again!\" I cried. Daphne started laughing and I groaned.\n\n\"My laughing bothers you too?\" she asked.\n\n\"Yes, but in a totally different way,\" I replied. \"You do realize what happens when you're not wearing a bra and laugh?\"\n\n\"They shake whether I have a bra on or not,\" she replied, laughing some more.\n\n\"There they go again!\" I joked.\n\n\"Michael, you're staring again.\"\n\n\"Of course I'm staring!\" I cried.\n\n\"I'll go get a bra on.\"\n\n\"No! Don't,\" I snapped as I took her hands and pulled her to my side of the couch. Daphne looked up into my eyes. There was a desire there that I recognized. It matched my own. I leaned forward and kissed her. Her lips were soft and she accepted my kiss willingly.\n\n\"What happened to just being friends?\" she asked once we broke apart.\n\n\"Is that what you want?\"\n\n\"No,\" she admitted. \"You already know what I want.\"\n\n\"Do I?\"\n\n\"Yes,\" she replied softly. \"I want you to love me as much as I love you.\"\n\n\"But how could you? We barely know each other.\"\n\n\"I just do,\" she said confidently. \n\n\"I'm not even sure I know what love is and I supposedly had it three times already. How can you be so certain?\" I asked sadly.\n\n\"I am,\" she shrugged.\n\nShe was too certain. Daphne was too sure of emotions that she couldn't possible feel. I knew what I had to do, but it was going to be hard. Possibly the hardest thing I'd ever done in my life.\n\n\"Well, I'm not sure.\"\n\n\"Then tell me what you feel,\" Daphne prompted. I should have refused to answer, but she was looking into my eyes again. I swallowed hard once before answering.\n\n\"Certainly desire,\" I admitted.\n\n\"You do seem pretty enamored with my breasts.\"\n\n\"That's not all,\" I continued. \"There isn't a part of you that doesn't excite me.\"\n\n\"It's nice to know you're physically attracted to me,\" she said carefully, for the first time not sounding happy or amused by my interest. I leaned forward without thinking, lifted her chin and kissed her again.\n\n\"It's not just your body I want,\" I said honestly. It wasn't the smartest thing to say considering, but I couldn't let her believe that. \"I've already told you what your smile does to me.\"",
        "\"That's still physical.\"\n\n\"Absolutely not,\" I argued. \"It's only a physical representation of what's on the inside. It's the warmth and kindness that come through that makes my chest tighten every time.\"\n\n\"Is that all you feel for me?\"\n\n\"No,\" I answered as I stood and started slowly pacing. I needed to leave, but on the other hand I needed her to know how I felt. It was a mistake to tell her. I knew it. Yet, I couldn't stop myself.\n\n\"What else?\" she prompted.\n\n\"Joy,\" I said with a slow shake of my head. \"I'm happy when I'm with you. You're bright and funny. I feel at my best when we're alone together. I think that's why I kissed you despite our agreement to be friends.\"\n\n\"That sounds like love to me,\" Daphne smiled. \"Or at least the beginnings of it.\" I stopped pacing and looked at her.\n\n\"Is it?\" I asked, realizing I'd shared too much.\n\n\"In the end,\" she said slowly. \"That's for you to decide.\"\n\n\"I have to go.\"\n\nDaphne was saddened by my words, but all she said was, \"Do what you feel is right.\"\n\n\"I'm trying to do what's right, but it's so hard,\" I sighed. She frowned, not quite understanding what I was trying to say. \n\n\"Daphne, I...\"\n\n\"Michael,\" she interrupted, placing two fingers on my lips. \"I'm done playing games. Go, think and then come back and talk to me. I'll be waiting.\"\n\n\"I won't be back today,\" I said quickly. Daphne shrugged and then leaned forward and kissed me goodbye. It was a long kiss and we shared more than just the taste of each other. I think we were both afraid that it would be our last kiss.\n\nI don't remember the trip home, but a few hours later I was sitting on my couch trying to put together a coherent sentence in my head. What was wrong with me? I don't know how long I sat there, but eventually a knock on my door caused me to stir.\n\n\"Hello Michael,\" my sister Christina and cousin Lillian said in unison as they walked in.\n\n\"What are you guys doing here?\" I frowned.\n\n\"What's your problem?\" Christina asked angrily, ignoring my question.\n\n\"Problem?\"\n\n\"Yes, problem!\" Lillian snapped and then let out a long sigh. \"Are you really so afraid of love that you can't admit it when it's staring you right in the face?\"\n\n\"What are you talking about?\"\n\n\"Daphne of course,\" Christina answered as she plopped into my couch. \"Bette stopped by because Daphne called her crying after you left.\"\n\n\"Why would she do that?\"\n\n\"Bette says you're breaking Daphne's heart.\"\n\n\"No,\" I said with a shake of my head. \"Not Daphne. Bette. Why did she stop by?\"\n\n\"You can be so dense at times,\" my sister sighed.\n\n\"Yes, he can,\" Lillian agreed.\n\n\"What are you two talking about?\"\n\n\"Michael, do you remember the night after the family party when Lillian and I came to visit?\" my sister asked.\n\n\"Sure,\" I shrugged.\n\n\"Well, after dropping Daphne off, we wanted to know how you felt about her. That's why we stopped by. After we knew that you were interested despite your protests, we decided to try and give you two a little push.\"\n\n\"We like Daphne,\" Lillian put in. \"She's smart, witty and for some reason in love with you. We think she's a good match for you.\"\n\n\"What did you two do?\" I asked nervously.\n\n\"Well, first we convinced Daphne to stop by that first Saturday morning,\" my sister replied.\n\n\"It's wasn't as easy as you'd think,\" my cousin frowned. \"She was a little embarrassed over what she said.\"\n\n\"Then, while she was in your apartment, we slashed her tire,\" Christina grinned. \"I've always wanted to do that!\"\n\n\"Only Daphne decided to fix it her self. Thankfully, she couldn't undo the lugs and had to get your help,\" Lillian added.\n\n\"And remember when I came over for dinner and brought up Daphne?\" my sister asked. I nodded slowly. \"I figured you needed a little push. I wasn't sure I succeeded until I heard you two went into the city together.\"\n\n\"What else did you two do?\" I asked, trying to get over my disbelief.\n\n\"Well, Bette called Dad and mom's house looking for your number when she got home. Boy was she angry!\" Christina answered. \"It's a good thing I was there to explain it all to her.\"\n\n\"She was planning on yelling at you for taking her sister's heart and breaking it, just like you did hers,\" my cousin put in.\n\n\"Bette broke up with me!\" I cried defensively.\n\n\"Little brother,\" Christina said. \"I know you better than you know yourself. You were relieved when Bette left.\"\n\n\"The same for Sally and even more so for Janice,\" Lillian added. \"Actually, one of these days you're going to have to explain to us why you ever got engaged to Janice.\"\n\n\"But not today,\" my sister sighed. \"Today, you're going to tell us why you are so afraid of loving Daphne?\"\n\n\"Did you guys have something to do with the other night at the restaurant as well?\" I asked, stalling for time.\n\n\"Of course we did!\" Lillian cried, sounding annoyed. \"Bette and Christina set it up. I nearly died when you mentioned that I didn't like steak places!\"\n\n\"Now, stop stalling and answer the question,\" Christina said. \"What are you afraid of?\"\n\n\"Nothing,\" I sighed. \"And everything.\"\n\n\"What's that supposed to mean?\" Lillian asked.\n\n\"I'm not sure,\" I shrugged, and then added, \"Do you guys know that Daphne's still a virgin?\"\n\n\"You mentioned it before. So what?\" Christina asked.\n\n\"She's saving herself for the right person. I'm sure that lucky man or woman will get her heart along with the rest. Daphne is looking for that perfect person. Anybody who is eighteen and still a virgin has to be.\"\n\n\"They could just be shy,\" Lillian argued.\n\n\"Don't be ridiculous,\" I snapped. \"Daphne is outgoing and funny. I'm sure with a body like hers she's had many chances to lose her virginity.\"\n\n\"But she didn't take any of them,\" my sister said, starting to understand. \"You're not trying to decide if you love her. You're trying to decide if she really loves you!\"\n\n\"You're afraid she'll give her virginity to you because of old feelings from when she was a kid. You're scared she'll regret it afterward,\" Lillian put in, finally catching on.\n\n\"Michael, do you love her?\" Christina asked.\n\n\"With all my heart,\" I replied. \"I finally realized it on the train that day we went to the city.\"\n\n\"Well then, isn't it possible that she loves you too?\"\n\n\"Not like a twelve year old who has a crush on her older sister's boyfriend,\" Lillian added. \"But like a woman loves a man?\"\n\n\"She barely knows me!\"\n\n\"That's not true,\" my sister argued. \"She knows you at least as well as you know her, and you've already said that you love her.\"\n\n\"Even if you're right,\" Lillian shrugged. \"Then why walk away? Why not just spend the time to get to know her as a friend first?\"\n\n\"You think I haven't tried that!\" I cried. \"I knew it was impossible after the train ride. That's why I didn't return her calls, but after I saw her at the restaurant I couldn't stay away! Every time she smiles at me I melt. I can't defend against that!\"\n\n\"I went over to her apartment this afternoon with the goal of working on our friendship and avoiding anything more for the time being. Yet, less than a minute later she caught me staring at her. To be fair, she wasn't wearing a bra, but she offered to put one on twice. Both times I stopped her. The first time I think she saw my reaction. My sweats did nothing to hide it.\"\n\n\"You mean...\" Lillian began, but I cut her off.\n\n\"Yes, that's exactly what I mean,\" I interjected. \"The second time was even worse. She tried to get up to put a bra on, but instead I pulled her to me and kissed her.\"\n\n\"Do we want to know what happened next?\" my sister asked.\n\n\"Nothing,\" I sighed. \"We broke apart, talked and then I left.\" I sat on the couch staring off into space. Lillian was the first to break the silence.\n\n\"You have to go back.\"\n\n\"Definitely,\" Christina added. \"You have to explain it all to her. She's not a little girl anymore. She's a woman. Actually, she's the woman for you. If you blow this, you'll never forgive yourself.\"\n\n\"We'll never forgive you either,\" Lillian joked. I smiled despite myself.\n\n\"And Bette may actually kill you,\" Christina added. This time I laughed briefly.\n\n\"You're both right.\"\n\n\"Of course we are,\" Lillian grinned.\n\nMy sister Christina pushed me toward the door and added, \"Now, go tell the woman you love how you feel.\"\n\n**********\n\n\"Michael,\" Daphne said in surprise. She obviously hadn't expected to see me again so soon. Her eyes were red and puffy. She held a cookie in her hand.\n\n\"Comfort food?\" I asked, afraid to say anything else. She ignored my question.\n\n\"Why did you come back?\" she asked.\n\n'Direct and to the point,' I thought as I swallowed hard. I took a breath and said, \"For a lot of reasons.\" I then grinned and added, \"Not the least of which is to tell you my sister and cousin owe you a new tire.\"\n\n\"What?\"\n\n\"Look, can I come in?\" I asked as I rubbed my hand through my hair. \"You told me to come back when I was ready to talk. Well, I'm ready.\"\n\nShe opened the door wider and let me in. I walked into the living room and sat down on the couch. She followed me, but sat on the loveseat instead.\n\n\"I just had a conversion with Christina and Lillian,\" I said. \"They made me realize a couple of things.\"\n\n\"Like what?\"\n\n\"Well first, I haven't been completely honest with you.\"\n\n\"In what way?\" she asked carefully. I took a deep breath and let it out slowly. Here goes nothing and possibly everything.\n\n\"I made you think that either I didn't love you or that I was afraid to love you, correct?\" I asked. Daphne nodded, so I added, \"Neither is true.\"\n\n\"You mean you love me?\" she asked, her disbelief plain in her voice.\n\n\"With all my heart,\" I answered. I could tell she was going to need some convincing. \"Do you remember your last question on the train?\"\n\n\"Not really,\" she replied. \"It was something silly to pass the time.\"\n\n\"Well, I do,\" I sighed. \"You asked me if I could go back in time and totally remove one person from your life, who would it be?\"\n\n\"I remember.\"\n\n\"Well then,\" I said. \"Do you also remember joking and telling me that I couldn't pick you?\" She shrugged.\n\n\"Well you did,\" I said, sighing again. \"Up until that moment I knew I was falling in love you with you, but I kept rationalizing it away.\"\n\n\"Why?\" she asked, but I ignored her question and continued to explain about what happened on the train.\n\n\"Instead of thinking about your question, I started comparing what I felt for you as apposed to any of the other women in my life. For example, if I were forced to choose between never having met you or your sister Bette, which would I choose?\"\n\n\"And?\" she asked.\n\n\"From my first crush to my first kiss, all the way up to and including all four women I've slept with, the answer was always that I wanted you over them in my life.\"\n\n\"And this made you run away from me?\" she asked in confusion. \"I thought you said you weren't afraid of loving me?\"\n\n\"I'm not afraid and I do love you,\" I said, feeling better for admitting it. Of course, now came the hard part. \"Talking to my sister and cousin made me realize that I owe you an apology as well.\"\n\n\"For what?\"\n\n\"For not believing you truly know your heart,\" I answered.\n\n\"What's that supposed to mean?\" she asked. I got up and moved to the loveseat with her.\n\n\"I was afraid that you didn't truly love me. That what you were feeling for me was left over from when you were twelve.\"\n\n\"And now?\" she asked.\n\n\"I'm still a little worried about it,\" I admitted.\n\n\"You ass!\" she snapped and hit me in the shoulder. \"You big, stupid ass!\" She hit me again, and again. I eventually caught her hands in mine. She was crying again as she fought me.\n\n\"I'm sorry! But you're so young and inexperienced. What if in the end, you don't love me?\" I cried.\n\n\"I do,\" she said, no longer fighting. \"But even if you're right and we don't love each other enough to make it last, so what? Does that mean we should deny what we feel for each other now?\"\n\n\"No,\" I answered. \"But you said that you were saving yourself for your soul mate. If it ended up that I wasn't him, then I'd have taken something from you that I didn't have a right to.\"\n\n\"You mean to tell me that this is all about my virginity!\" she cried, and then punched me again when I didn't answer quickly enough.\n\n\"I'm sorry!\" I started rambling. \"But you were saving yourself for so long! I know I love you and always will, but you're still young. You could change your mind and realize...\"\n\n\"Will you please shut up!\" she snapped surprising me. \"My hand hurts from hitting you and I'm afraid I'll break it trying to knock some sense into that thick head of yours if you keep speaking.\"\n\n\"Sorry,\" I said, but she just stared at me until I stopped talking. We sat there quietly for a while. \n\n\"Who would have thought my parents were right?\" she finally sighed. \"They told me to get rid of my virginity early because it would only cause me headaches, but I didn't listen.\" I started to open my mouth, but she silenced me with a look.\n\n\"It's true that I wanted my first time to be with someone I loved, but I never said I expected that love to last forever, and I never used the word soul mate,\" Daphne said, and then shook her head and add, \"My God! Your more of a romantic than I am!\"\n\n\"Okay, let's get a few things straight,\" she continued. \"First, although I'm not experience sexually, I'm not a clueless virgin locked in her father's tower. I know about the birds and bees, and I'm looking forward to exploring them with the right person.\" I nodded once, in understanding in not acceptance.\n\n\"Second, I love you. Only God knows why! But I do,\" she said, smiling at me for the first time in a while. \"It's not a childish crush. Believe it or not, I know the difference.\" She was looking into my eyes as she said it. I could see she meant it.\n\n\"Third, although I'm enough of a romantic myself to believe that we'll grow old together, I know people change. If by some chance you and I don't stay together forever, then so be it. I'm not going to regret a thing,\" she said confidently. For some reason this surprised me. Maybe deep down I really was too much of a romantic?\n\n\"Which brings me my last point,\" she said with a shake of her head. \"Unless you plan on raping me, you're not going to take my virginity, I'm going to give it to you. Maybe. If you stop pissing me off.\"\n\nAnd suddenly it hit me. She was right! I was being an ass. If she thought she loved me and I thought I loved her, then that was enough. That's the most anyone can hope for in life. It would be stupid to pass up being with someone who made me feel the way she did. \n\n\"Any questions?\" she asked, now grinning. I looked at her and smiled in return. I never had any doubts about my feelings for Daphne. Oh, I fought them in the beginning, but I didn't doubt them. I decided that I wouldn't doubt her feeling for me anymore either. She may only have been eighteen, but she was an adult and knew her mind. She wasn't looking at me with infatuation. Her eyes mirrored the love I felt for her.\n\n\"Yes,\" I replied, never surer of what I wanted. \"One.\"\n\n\"What?\"\n\n\"Should I ask you to marry me before or after the virginity giving?\"\n\nHer eyes grew wider momentarily and then she relaxed for the first time and shook her head.\n\n\"Well, if I really want to be the black sheep of the family,\" she joked. \"I guess we should be married before.\" At least I thought she was joking, but maybe not.\n\n\"Um, okay,\" I said, not really being put off. \"You don't want a long engagement do you? Would you consider an elopement?\"\n\n\"When?\" she asked.\n\n\"Why, now of course.\"\n\n\"Of course,\" she smiled.\n\n\"There's that smile again,\" I sighed. She started laughing. \"And now the laughing!\"\n\n\"You know,\" she said. \"Maybe just this once I'll hold off being the black sheep. What do you think?\"\n\n\"Oh, I'm going to marry you either way,\" I shrugged. \"It's just a matter of whether you want the time to plan out a big wedding or slip out tonight.\"\n\n\"Since Bette eloped, I guess I'll let my mother have one big wedding to plan.\" she replied.\n\n\"Well, in that case...\" I began, but she cut me off.\n\n\"Don't even think about it buster!\" she snapped. \"I'm still not sure if I forgive you or not.\"\n\n\"Of course you do,\" I smiled. She shook her head.\n\n\"It's late and I'm tired,\" Daphne replied. \"I'll sleep on it and let you know in the morning.\"\n\n\"Oh, okay,\" I said, standing to leave.\n\n\"Where are you going?\" she asked.\n\n\"Home,\" I shrugged.\n\n\"But then how will I tell you if I forgive you or not in the morning?\"\n\n\"Um, the phone.\"\n\n\"That's too impersonal,\" she grinned. \"You'll just have to spend the night here. Think you can handle it?\"\n\n\"I'll do my best,\" I said solemnly, and smiled slightly and added, \"Although I make no promises.\" \n\n\"Good, then let watch television in my bedroom,\" she said. \"Don't get your hopes up. If you're lucky I won't make you sleep on the couch tonight, but that's the best you can hope for.\"\n\nWe went to her room and I kicked off my shoes before lying down in her bed. Daphne lay down next to me and rested her head on my shoulder. The television was small, but I was watching Daphne's face anyway. \n\n\"You're staring at me again,\" she smiled.\n\n\"Get used to it,\" I shrugged. \"I'll be doing it a lot for the next fifty years or so.\"\n\n\"You know, for a guy who left me only a few hours ago to figure out how he felt, you're awfully sure of us.\"\n\n\"I told you earlier,\" I explained. \"I love you. You say you love me and I've decided to believe you. I'm done hiding my love or pretending that we don't know each other well enough to feel the things I know we're feeling. I'm going to be the romantic you accused me of being and enjoy every minute we spend together.\"\n\n\"So, were you serious about that proposal?\" she asked. I looked into her eyes and kissed her deeply.\n\n\"Does that answer your question?\" I asked afterward.\n\n\"Hmm, I'm not sure,\" she replied with a smile. Her lips parted slightly and her soft brown eyes once again hinted at the passion we shared for each other. She obviously wanted to be convinced that I really wanted to marry her. I was more than willing to do so.\n\nWe kissed for quite some time. I lost track of the television and everything else for that matter. I did brush one hand across her chest once. She let me, but stopped me the second time.\n\n\"Just lay here with me,\" she said and I nodded. We eventually spooned and I played with her hair until she fell asleep. I smiled and drifted off to sleep not long afterward.\n\n**********\n\n\"Good morning.\"\n\nI opened my eyes to see Daphne standing next to the bed. She had obviously just come out of the shower. Her hair was damp and all she wore was an oversized towel.\n\n\"You look amazing,\" I smiled.\n\n\"You really think so?\"\n\n\"Yes,\" I said seriously, but then grinned and added, \"I never thought I'd be jealous of a towel.\"\n\n\"Ha-ha,\" she said sarcastically, but she was smiling. \"Time for you to take a shower. I left you a tooth brush on the sink.\"\n\n\"Oh my, don't you think that's an awfully big commitment?\" I asked with a grin. \"I mean a tooth brush is almost like living with each other.\"\n\n\"That reminds me,\" Daphne replied. \"My lease is month to month. I assume I should let the landlord know I this is my last month here?\"\n\n\"Whoa! All I did was kiss you a couple of times. Don't you think you're moving a little fast? The toothbrush was serious enough. Now you want to move in? Next we'll be having kids and paying for college!\"\n\n\"I'm sorry,\" Daphne blushed. \"I just thought...\"\n\n\"Kidding,\" I said with a shake of my head. \"Daphne, relax. I was just kidding. I told you how I felt yesterday. It hasn't changed.\"\n\n\"I'm going to have to get used to your sense of humor,\" she said, not sounding like herself. I got out of her bed and lifted Daphne's chin until her eyes were looking into mine. I could see the tears there.\n\n\"I'm sorry,\" I said. \"You need to understand that I love you and that I'm not planning on going anywhere. I kid around a lot, but I wasn't joking about my proposal last night. I'll marry you right now if we can find someone to perform the ceremony.\"",
        "\"Why don't you go take a shower first,\" Daphne said, attempting to make it sound humorous. She didn't quite pull it off.\n\n\"I really am sorry.\"\n\n\"I know,\" she said, smiling slightly. I gently kissed her lips before going into the bathroom and taking a quick shower. As promised, there was a toothbrush on the sink. There was also a large towel for me to use.\n\n\"These towels are great,\" I said as I exited the bathroom.\n\n\"I'm in the kitchen!\" Daphne cried.\n\nI looked around, but couldn't see my clothes anywhere. I shrugged to myself and walked out in my towel. Daphne had on a thick robe. There was a bowl of cereal in front of her.\n\n\"I'm not much of a cook,\" she shrugged. \"But I have three different types of cereal if you're interested?\"\n\n\"Where are my clothes?\" I asked as I sat at the table and filled the bowl she put out for me with one of the cereals.\n\n\"In the wash,\" she said. \"You didn't want to put back on your dirty clothes did you?\"\n\n\"Actually, I'm up for no clothes at all today,\" I grinned.\n\n\"I take it you plan on staying in today?\"\n\n\"Yes, unless you want to go out and find that preacher to marry us?\" I asked in reply.\n\n\"You know, I haven't even agreed to marry you yet,\" Daphne said. My expression must have been funny because she laughed.\n\n\"I hope you're joking,\" I said. \"My luck with women is terrible. I think I'll become a monk if you dump me.\"\n\n\"Think they'll let you visit Janice?\" Daphne teased.\n\n\"Stop avoiding the issue,\" I said, attempting to joke back. I'm not sure I did it particularly well. \"Are you going to marry me or do I spend the rest of my life wearing brown and living in a cave?\"\n\n\"I'll let you know,\" she laughed.\n\n\"Daphne,\" I said, no longer smiling. \"Will you marry me?\"\n\n\"I don't know,\" she said looking up into the sky as if she were considering. \"This is all so sudden. We hardly know each other. Maybe you don't really love me. Maybe you just think you do.\"\n\n\"Is this retaliation for my joke about moving in together?\"\n\n\"What do you think?\" she asked as she stood and took me by the hand. She led me back to her bedroom.\n\n\"I noticed that you still haven't answered my question,\" I said pointedly.\n\n\"Ask me later,\" she said, no longer joking. \"If you still want to.\"\n\n\"What's that supposed to mean?\" I frowned.\n\n\"Just this,\" she said as she turned, faced me and dropped her robe. She was obviously tense, but even that couldn't stop me from appreciating her beauty.\n\n\"Wow!\" I said. My mouth opened a couple of times afterward, but I couldn't think of anything else to say. Daphne smiled, but didn't fully relax. It was obvious what she was planning. I just wasn't sure she was ready.\n\n\"We don't need to rush this,\" I said seriously.\n\n\"Don't you want me?\" she asked nervously.\n\n\"Are you crazy? I've wanted you from the first moment I saw your face!\"\n\n\"When I was twelve?\" she asked with a raised eyebrow.\n\n\"Now that's just sick!\" I said with a shake of my head. She nodded and conceded the point, but that didn't stop her from teasing me further.\n\n\"So, was it after I sobered you up at that diner? It certainly wasn't before then because you couldn't make out much of anything until you had that coffee and pancakes.\" I realized that Daphne's joking was just a way of coping with her nerves. I decided to play along. It wasn't easy considering she was standing in front of me naked.\n\n\"I wasn't that bad,\" I replied, knowing it was a lie.\n\n\"Are you kidding? I had to catch you before you fell off your chair!\"\n\n\"Your beauty stunned me,\" I said, holding my hand over my heart as I overacted badly. \n\n\"It wasn't my face you were staring at!\"\n\n\"True,\" I finally admitted, taking a moment to appreciate her breasts in their bared glory. They were even more spectacular than I imagined.\n\n\"You do know that you're the first man who's seen me like this?\" she asked. \"Even the guy I let touch my breasts did it under my shirt. He tried to take it off, but I wouldn't let him.\" Poor Daphne was so nervous that she was starting to babble.\n\n\"Are you sure you want to do this?\" I asked despite my growing desire, or maybe because of it.\n\n\"Why else would I be standing here naked?\" she asked, trying to joke, but still sounding uncomfortable. I didn't immediately react so she added, \"Um, in case your curious, this is me offering myself to you.\" \n\nI don't know why I hesitated. Maybe because the moment was more real to me than any other I'd experienced in my life. Daphne was inexperience and somewhat shy despite her nakedness. I was neither of those two things, but knowing what you want and going for it were two entirely different things. \n\nDeep down, I knew that this was the moment. Taking what was offered would tie me to this woman for the rest of my life. It wasn't a logical deduction, but that didn't mean it was wrong. \n\nI didn't hesitate because I was afraid of such a bond. I did it because I was amazed at how badly I wanted to share this connection with Daphne. I took her hand and lifted it to my lips. I kissed it as I stared into her eyes. I let her see the love and lust I felt for her intertwined in my gaze. Instead of being frightened by it, her eyes reflected the intensity. \n\nI swept her off her feet and into my arms. She wrapped her arms around my neck and squeezed tight. I kissed her lips gently before putting her on her bed. Daphne lay looking up at me. I tugged on my towel and it dropped to the floor. I could almost feel her desire grow. \n\n\"I'm ready,\" she said, holding her arms open to me. I forced myself to remember that this was still her first time.\n\n\"No you're not,\" I smiled, and then promised, \"But you will be.\" \n\nWe kissed and I slowly worked my way down her body. I took my time and enjoyed the softness of her skin against my lips. Daphne tilted her head giving me access to her neck. I took full advantage of it.\n\nSlowly, my kisses fell lower until my tongue brushed against one of her nipples. It was surprisingly small considering the size of her breasts, yet it was also very sensitive. I kissed and licked it while Daphne moaned and occasionally gasped.\n\nI moved my lips toward her other nipple, but was distracted by the softness of her breasts against my skin. I pressed my face between them and kissed. My dick stiffened to its full length. I loved the feel of my face being smothered between Daphne's breasts. She was the first truly large breasted woman I'd ever been with and it was a new feeling for me. The slightly salty taste and encompassing softness was a strong aphrodisiac. I felt I could stay there forever. Perhaps it was a perverseness that was unique to me. Yet if it was, then so be it. \n\nSomehow I forced myself to continue to her other nipple. It was equally as sensitive as the first and I took my time before moving down to her belly and hips. The former was neither fat nor overly muscular. It was perfect. I took a moment to lay my head against the soft smoothness. \n\nDaphne's hips were curvy and slightly padded. I could feel my desire for Daphne burning deep.\n\n\"What are you doing?\" she cried when I started to move lower.\n\n\"Do you trust me?\" I asked in reply.\n\n\"Of course.\"\n\n\"Then relax and enjoy,\" I smiled. She continued to look at me oddly. I realized that despite her earlier statement about knowing about the birds and the bees, Daphne really was far more innocent than she let on. I continued to look at her until she finally let her head fall back to the bed as he legs spread slightly.\n\nI could smell her excitement. She was almost ready for her first orgasm of the night. If I did it right, it wouldn't be the last. I started back at her stomach and slowly kissed my way down. Eventually, I allowed my tongue to find her center. \n\nShe tensed momentarily, but then sighed and let her legs fall fully open. Daphne groaned. I used my tongue along the entire length of her pussy before letting the tip slip deeper. She was hot and sticky and nothing ever tasted better!\n\n\"Oh Michael! That feels amazing!\" she cried as she grabbed my head, not really directing my tongue, but also not letting me move away. I pushed my tongue as deeply as it would go. \"You're driving me crazy!\" \n\nI lost track of time for a while, but it wasn't that long before she started shivering.\n\n\"I'm close!\" she gasped. I didn't bother replying. Instead, I moved my focus to her clit. \"Michael!\" she cried in barely controlled passion. \"That tongue of yours is... I can't hold off...you're going to make me...\" I flicked my tongue back and forth across her clit as fast as I could until she screamed, \"I'm cumming!\"\n\nI heard that some women's orgasms hit with such intensity that their juices literally sprayed out of them. Daphne was my first experience with one. She thrashed around the bed and cried out loudly as I did my best to drink what she offered. It took her quite a while to calm down enough to make sense.\n\n\"Are you okay?\" I asked when she seemed to be back in control.\n\n\"Oh my God!\" she half sighed and half giggled as she lay there. \"That was the best orgasm of my life!\"\n\n\"Had many of them to compare it to?\" I joked.\n\n\"Remember, virgin, not saint,\" she replied with a smile, and then blushing slightly, adding honestly, \"Although it is the first orgasm someone else gave me.\"\n\n\"You know,\" I said, suddenly picturing her pleasuring herself. \"You'll have to let me watch you take care of yourself sometime. I think the sight would drive me crazy.\"\n\n\"Michael!\" Daphne cried, more in embarrassment than anything else.\n\n\"Daphne, relax,\" I replied. \"If we're going to spend the rest of our lives together, then I want us to be comfortable and trusting enough to say what we like. I want to know what satisfies you. I'm willing to try anything you like.\"\n\n\"Anything?\" Daphne asked with a raised eyebrow.\n\n\"I'm at least willing to discuss it. Why? Do you have something in mind?\"\n\n\"No,\" she shrugged with a smile. \"But I'm sure something will come to me eventually.\"\n\n\"Don't worry,\" I grinned. \"I have plenty of ideas for the time being.\"\n\n\"I'm sure,\" Daphne snorted, and then grew serious. \"You know, I heard that some guys were willing to do what we just did, but one of my girlfriends told me that they don't really like it.\"\n\n\"Did it look like I was in pain?\" I joked.\n\n\"No,\" Daphne smiled. \"You actually seemed to be enjoying yourself.\" \n\n\"I was.\"\n\n\"Good!\" she laughed, sounding relieved. \"Because I'd like you to do that again, and often. It really was amazing!\"\n\n\"How about right now?\" I offered, causing her to giggle.\n\n\"Maybe later,\" she said. \"Right now I'd like to see if I enjoy treating you the same way.\"\n\n\"I can only hope!\" I grinned. Daphne shook her head and took my cock into her hand tentatively. It jumped back to life and she smiled.\n\n\"Is this okay?\" she asked as she started to gently press her hand against it.\n\n\"Yes,\" I replied. \"But it will feel better if you wrap your finger around it and stroke up and down.\"\n\n\"Like this?\" she asked, following my directions.\n\n\"Oh yes!\" I groaned. \"You can squeeze a little harder.\"\n\n\"Wow! I can feel it growing.\"\n\n\"Keep doing that and that's not all you'll feel it do!\"\n\n\"Michael!\" she cried again, but then laughed and added, \"I am curious at what it looks like when you orgasm.\"\n\n\"You're welcome to get a closer look.\"\n\n\"You're bad!\" she said, but that didn't stop her from grinning and moving closer. I watched the fascination in her expression as she stroked my cock to its full length. It was obvious that Daphne never did something like this before. It was equally apparent that she was enjoying herself. She started licking her lips occasionally and biting the lower one. \"It's so big!\"\n\nI'm not sure she realized it, but ever so slowly Daphne's face moved closer and closer to my cock. Her lips were slightly parted now and she was staring intently.\n\n\"Daphne,\" I called, waiting for her to look up at me. When she did, I added, \"Go ahead.\" She looked into my eyes and then nodded slowly. \n\nTentatively at first, she let her tongue slip out from between her lips. It barely brushed the head of my cock. That didn't stop my dick from nearly jumping out of her hand. She looked back at me and I shrugged. Daphne grinned and slowly took the head of my cock into her mouth while she watched my face. I groaned.\n\n\"Oh, this is going to be fun!\" Daphne said.\n\n\"Do you promise?\" I quipped. She bit down gently, causing me to cry, \"Hey! None of that!\"\n\n\"Spoil sport!\" she laughed. I opened my mouth to say something else but the thought flew from my head as she once again took my dick into her mouth.\n\nI lay there watching, feeling and most important, enjoying what Daphne was doing. She glanced up a couple times at me and I smiled reassuringly.\n\n\"How come you stiffen every time I look up at you?\" she asked, using her hand to slowly stroke my cock as she spoke.\n\n\"I stiffen?\" I asked in confusion. Keep in mind Daphne might not have been the most experienced woman in the world, but she had my blood pumping hard enough that my brain wasn't getting as much oxygen as it probably needed.\n\n\"Well, not you,\" she said, blushing again. \"Or at least not all of you.\" It was actually fun to watch. One moment she seemed perfectly comfortable about what she was doing and the next she was blushing like the innocent virgin she was.\n\n\"Do I?\" I asked in reply as I realized what she meant.\n\n\"You're not going to make this easy, are you?\" she asked with a loud sigh.\n\n\"It's not that,\" I said quickly. \"I really wasn't aware of what was happening. I guess it has to do with how sexy you look when you look up at me that way.\" This seemed to satisfy Daphne. She went back to what she was doing. I was happily surprised a few minutes later when she let her tongue drift down below my cock without any prompting. I groaned and my dick stiffened even more.\n\n\"Oh! You definitely like that!\" Daphne smiled as she squeezed my rock hard cock in her hand. I was close!\n\n\"And how!\" I replied. \"Now stop talking and finish me!\"\n\nDaphne started stroking my cock quickly with her hand. She once again took the head of my dick into her mouth. She lay there watching me the entire time. She cupped my balls with her other hand. That was it!\n\n\"Cumming!\" I grunted. Daphne eyes lit with pleasure at my announcement. A moment later they grew big when the first spurt of my cum filled her mouth. She pulled back in surprise despite the fact that she knew what was going to happen. It was her first taste of cum. My second jet landed on her face and breasts. \n\nI guess Daphne liked the taste because she quickly took the head of my cock back into her mouth. She stopped looking at me and focused on drinking as much of my cum as she could handle.\n\n\"Wow!\" I said once I was done. \"You're a natural!\"\n\n\"Gee, thanks,\" Daphne said, looking briefly uncomfortable as she moved up and rested her head on my shoulder. I ignored her comment and kissed her lips once again. We continued to do this until she relaxed. I rolled on top of her.\n\n\"Daphne,\" I smiled. \"I love you.\"\n\n\"I love you too,\" she said, her passion, fear and anticipation all blending into one expression. \n\nI moved between her legs and let the head of my cock brush against her pussy. Daphne gasped. I smiled down at her and let the head of my cock push in. I stopped when I met resistance and worked the head of my cock in and out. Daphne was panting by this time. True be told, so was I.\n\n\"I can't wait any longer!\" she cried. \"Please!\"\n\n\"I love you,\" I said softly and then pushed in. She gasped and stiffened briefly in pain. Daphne was no longer a virgin. I held my hips still until she relaxed. Of course, that didn't stop me from kissing her. It wasn't long before I felt her respond to my kisses. I started moving slowly at first.\n\n\"You're really in me!\" Daphne said, sounding both lustful and amazed as the truth sunk in. \n\n\"Not all the way,\" I smiled. \"Not yet.\"\n\n\"But I already feel so full!\" she gasped. I could feel her juiced flowing once again so I pushed a little more of my cock into her, causing Daphne to cry out. I continued to slide in and out, slowly working my full length into her.\n\n\"How's that?\" I asked when I was almost all the way in.\n\n\"No more! Please!\" she cried as her head thrashed back and forth. \"I can't take anymore!\"\n\n\"Just a little more,\" I replied, shoving my cock completely inside of her for the first time.\n\n\"Yes!\" she cried, cumming for the second time. I remained buried deep inside of her until she was done. \"That was amazing!\"\n\n\"You're amazing,\" I smiled as I rolled off of her. We moved until we were facing each other. We hugged and this time she kissed me, not that I minded. She felt so good against me. I desperately wanted to continue our love making, but this was Daphne's first time. I wanted her to feel loved more than anything else so that she'd remember this day fondly. I pulled her to me and squeezed her tight.\n\nI held her that was until she was nearly asleep. I then gently directed her to roll over so that I could spoon her. She turned her head and gave me one last kiss.\n\n\"I love you,\" she said softly just before nodding off. My arm was wrapped around her chest and she was pressing back into me. Truthfully, I was still a little horny, but even that couldn't ruin the moment. I'm not sure how long I lay there just enjoying the feel of Daphne again my body, but eventually I did fall asleep.\n\n**********\n\nI woke up a few hours later to find myself alone in the bed. I frowned until I heard the shower running. I smiled and lay there on my back. I must have nodded off again briefly, because the next thing I remember was Daphne lying between my legs, once again stroking my cock slowly. She was smiling seductively.\n\n\"I'd really like to make love to you again. If you want to?\" she asked.\n\n\"You're joking, right?\" I asked in reply as I pulled her up to me and kissed her. \"It took all my willpower to stop myself from ravishing you before!\"\n\n\"That wasn't getting ravished?\"\n\n\"Not really,\" I smiled.\n\n\"Oh my!\" she said, biting her bottom lip. \"In that case I'm not sure I can handle being ravished.\" I knew she was just playing with me. \n\n\"Why don't we find out?\"\n\n\"Okay,\" she smiled without hesitation. \"But I think I'd first like to feel you inside of me again if you don't mind?\"\n\n\"Daphne, I most definitely do not mind,\" I laughed. \"Do you want to try a new position?\"\n\n\"Sure!\" she grinned. \"Why don't we start with whatever position you like best?\"\n\n\"Sounds good to me,\" I replied as I rolled her over onto her stomach. Instead of blushing, getting frightened or even becoming mad, Daphne just looked over her shoulder at me and smiled lustfully. I got behind her and leaned forward until my face was buried between her thighs. \n\n\"I didn't mean your tongue!\" she gasped. \"I meant...\"\n\n\"I know what you meant,\" I grinned. \"We'll get that that soon enough.\" \n\n\"Oh well, I really do like when you do this!\" she cried as she lifted her hips and spread her legs further apart, giving my tongue full access to her pussy.\n\nI worked my tongue in and out until I was covered in her juices. I could see her pussy open slightly. I drove my tongue deep. She arched her back and came.\n\n\"You are delicious!\" I groaned once she was done. Daphne looked back at me and smiled.\n\n\"That tongue of yours...\" she sighed, slowly starting to turn over. I stopped her.\n\n\"Why don't you get on your hands and knees?\" I smiled. \"I promise you'll like how this feels.\"\n\n\"I'm sure I will,\" Daphne said, doing as I ask. \"And even if I don't, there's always something else we can try.\"\n\n\"Those words are music to my ears,\" I grinned. She laughed. I leaned forward and gave her pussy one more lick before shifting my body until my cock was lined up with her pussy. I rubbed it up and down her lips briefly before pushing into her. I started moving in and out of Daphne slowly.",
        "\"Wait!\" she gasped, causing me to stop.\n\n\"Are you okay?\" I asked.\n\n\"Yes, just give me a second,\" she said. \"You're right. I am going to like this position! My nipples are brushing against the sheets and it's driving me crazy!\" I reached around her body with one hand and squeezed one breast.\n\n\"That's certainly more than a handful!\" I said appreciatively.\n\n\"They're both all yours,\" Daphne promised, looking over her shoulder. I leaned forward and kissed her, inadvertently pushing my cock deep inside her again. I shifted my hand and gently pinched her nipple.\n\n\"I don't mind one bit.\" She seemed to really enjoy what I was doing.\n\n\"Oh yes!\" Daphne cried. \"I'm ready!\" I slowly started pushing in and out of her again. This time she didn't stop me. I could see her nipples rubbing against the bed with every stroke. At first she moaned each time, but soon I picked up the pace and she grunted as she came another time, only this time I didn't bother stopping. It was time. I needed to cum in her!\n\nI leaned forward and kissed her one last time before grabbing hold of her hips and picking up the pace again. Daphne didn't complain. In fact, she started meeting every thrust. She was soaked with her cum and our sweat. My balls were slapping against her clit and she started crying out.\n\n\"I'm going to cum again!\" she said in amazement.\n\n\"Not yet!\" I snapped. \"Hold off for just a little longer and I'll join you!\"\n\n\"I'll try!\" Daphne cried. \"But hurry!\" I'm sure it didn't help her that my cock was now a blur as I squeezed her hips and helped her meet my thrusts. She turned and looked at me with lust filled eyes. Her sweat soaked hair covered her face as she said, \"I want to feel your cum fill me! Please!\"\n\n\"Are you ready?\" I gasped out between strokes.\n\n\"Yes!\"\n\n\"Then...here...I...cum!\" I grunted as I slammed into her pussy one last time and let loose with the biggest load of cum in my life! Daphne cried out and joined me. I could feel her pussy squeezing my cock. I'm not sure how long we both shook in orgasm, but mine was so intense that I had problems seeing when we were done.\n\n\"Last night was special and I'll always remember it,\" Daphne smiled. \"But this time was so much better!\" We both flopped onto our backs.\n\n\"Wait until the next time,\" I said. \"It will continue to get better the more comfortable and open we are with each other.\" \"Maybe I don't want to wait,\" Daphne said, leaning up on one elbow. She had a mischievous smile. I pulled her to me and kissed her soundly.\n\n\"How would you like to try being on top?\" I asked.\n\n\"You tired?\" she teased. \n\n\"Certainly,\" I admitted. \"But that's not the reason.\"\n\n\"What then?\" she asked, sounding honestly curious.\n\n\"Well,\" I said. \"I haven't giving your breasts half the attention they deserve. I wouldn't mind having them dangling in my face.\"\n\n\"You mean like this?\" Daphne asked, leaning over me. In answer, I lifted my head and buried my face between them. They were hot and sweaty, but then again, so was I. I used both hands to massage her full breasts as she climbing on me. I opened my mouth and sucked a nipple in. \n\nI could feel Daphne direct my hardening cock to the entrance of her pussy. She rubbed my dick back and forth until it stiffened to its full length. It took some time considering that I just had an orgasm. Daphne was patient and I was too busy enjoying her breasts to care, but eventually I was hard once again.\n\nShe sighed loudly as she sank down on my cock. This caused her breasts to move away from my mouth, but before I could protest Daphne replaced them with her tongue. She was panting already. So was I.\n\n\"So I take it you like this position?\" I asked.\n\n\"What do you think?\" she asked, tensing the muscles holding my cock inside her. I groaned.\n\n\"I think you've gone from virgin to...\" I began, but she cut me off.\n\n\"...To the woman who loves you and plans to be as adventurous as it takes to hold onto you.\"\n\n\"Oh, I'm not going anywhere,\" I said, looking deeply into her eyes. \"Although I do like your willingness to try new things.\" \n\n\"Do you promise?\" she asked, referring to the first part of my statement. Her eyes were an odd mix of open honesty and lust. She was slowly moving up and down my cock as we spoke.\n\n\"That depends,\" I replied.\n\n\"On what?\" she frowned. I pulled her into another kiss before answering.\n\n\"On whether you finally agree to marry me or not,\" I answered. She smiled warmly, but didn't say anything. \"Well?\" I prompted.\n\n\"We'll see,\" she said, her smile turning into a grin.\n\n\"You little bitch!\" I cried with a laugh. Daphne started to join me, but stopped suddenly when I grabbed her hips, lifted her slightly and started slamming my cock up into her.\n\n\"Wow!\" she cried as I picked up the pace quickly. It wasn't long before we were both ready to cum again. Daphne's sweat covered face was only inches from mine as we looked into each other's eyes. Hers were only half open, but I was certain my own desire and lust were mirrored in them.\n\nA couple minutes they widened significantly as her entire body shuddered in orgasm. I watched her face as it tensed. Daphne's mouth fell open. I slammed up into her one last time, driving my tongue into her mouth at the same time. I filled her with my cum once again.\n\nI either fell asleep or passed out depending on how you looked at it, but in either case the same was true for Daphne. I woke not long afterward with her asleep on my chest. I lay there smiling down at her until I felt myself drifting back to sleep. I shifted us so that we were both lying on our sides. Our naked bodies were still touching. I leaned forward and gave her one gently, almost chaste kiss before nodding off.\n\n**********\n\nThis time I woke up first. Somehow during the night we ended up spooning. One of us also must have awakened long enough to pull the covers up. The room still smelled slightly of our lovemaking. I'm sure both of us needed a shower, but I couldn't stop myself from smiling. It was one of the most content moments of my life. I didn't want it to end.\n\n\"Good morning,\" I said when Daphne finally stirred. She looked startled for a moment, but then sighed with a smile and sat up.\n\n\"So, it wasn't all a dream?\" she asked.\n\n\"It certainly was a dream come true for me,\" I replied. \"I love you.\"\n\n\"I love you too,\" Daphne smiled. \"Now go take a shower. You stink!\" I was about to reply with some witty comeback about her not exactly smelling like roses, but she chose that moment to stretch and my mind went black. Well, not really blank. I had plenty of thoughts about what I wanted to do to her. She saw my expression and laughed.\n\n\"Well, I'm only human,\" I shrugged. \"What do you expect if you're going to flaunt you body like that?\"\n\n\"I wasn't flaunting,\" she laughed briefly. \"I was stretching.\"\n\n\"Same difference,\" I shrugged, causing her to roll her eyes.\n\n\"Just get in the shower.\"\n\n\"Yes, mam,\" I joked, but I did get up and make my way to the bathroom. I turned to look at her one last time. Daphne was staring at me, actually my ass. We shared a smile.\n\nI took a quick shower, but felt a lot better when I was done. Daphne took my place in the shower as I brushed my teeth, or at least tried to. I was distracted by the shadow of her body through the translucent slower curtain.\n\n\"Want company?\" I asked when I was done. She moved the curtain enough to peak out without getting the floor wet.\n\n\"I'd love it,\" she began. \"But honestly, I'm sore so we can't do very much.\"\n\n\"I can still wash your hair for you?\" I offered. She looked at me carefully until she realized I was serious.\n\n\"I'd like that,\" she finally said. I stepped into the shower and slowly started washing her hair. Daphne was obviously enjoying my efforts. I took the soap from her hands when I was done and started washing her body. Okay, it's no surprise that I took an exceptionally long time at her breasts, but I did get to everything eventually.\n\n\"Thank you,\" Daphne said when I was done. I knew what I wanted to do at that moment, but there was something in Daphne's expression that let me know it wasn't the right time. I leaned forward, kissed her gently and left the shower.\n\n\"You're welcome,\" I said. \"I'll go see what's for breakfast.\"\n\nDaphne came out of the room some time later. She looked amazing as always. She caught me staring, but smiled instead of saying anything. The pancakes I was cooking were almost done. She started setting out the plates and utensils.\n\n\"They smell delicious!\" she grinned as I shut of the jet and carried the serving platter to the table. \"I love pancakes!\"\n\n\"Me too,\" I said. \"In a way, I had pancakes on our first date.\" Daphne reached for the plate, but I pulled it back.\n\n\"Hey!\" she cried.\n\n\"It's time you answered my question,\" I said simply. \"I think we're meant to be together. I think you do as well, but you still haven't answered whether you'll marry me or not.\"\n\n\"You know, in some cultures we're already married based on what happened last night,\" she stalled.\n\n\"That's fine with me,\" I replied. \"Lets get a marriage license and make it official.\"\n\n\"Okay, fine,\" she finally said. \"But you're going to take the day off while we go look for an engagement ring.\"\n\n\"I knew it! You're a shop-a-holic!\" I cried.\n\n\"We'd better pick wedding rings as well,\" Daphne added.\n\n\"What's the rush?\" I asked in surprise. \"I thought you were going to let your mother plan a big wedding?\"\n\n\"I am,\" she replied. \"But that's all based on the fact that I'm not pregnant. After last night, you never know.\"\n\n\"Pregnant?\" I asked with wide eyes. \"You're not on birth control?\"\n\n\"Michael, I didn't have a need before you. I was a virgin after all,\" Daphne said. \"Don't worry. I'm probably not.\"\n\n\"Who's worried?\" I shrugged. \"I'd like to have some time with just the two of us, but I can't say I'd be upset if you became pregnant. After all, kids are definitely in our future.\"\n\n\"And I'd like to finish school first,\" Daphne added. \"But mother had Bette before she was done with college.\"\n\n\"It will all work out in the end,\" I shrugged. \"Let go ring shopping.\"\n\n\"Can we eat breakfast first?\" Daphne grinned.\n\n\"Of course,\" I smiled, holding out her plate of pancakes. She reached for them again and I added, \"But it will cost you a kiss first.\"\n\n\"They smell pretty good,\" she said, and then sighed loudly before adding, \"If I must, I must.\"\n\nWe kissed briefly, but I took a moment to stare into her soft brown eyes before handing over the pancakes. Daphne was smiling. I smiled back. Maybe I was a hopeless romantic, but then again so was she. \n\nFor a moment I had a flash into the far future. Daphne was sitting at a table across from me. Her hair was gray and her faced lined with wrinkles, but her eyes were the same soft brown. She was smiling at me, and despite our age, it still turned my mind to mush.\n\n\"I love you,\" I said, coming back to the present. \"And I always will.\"\n\n\"I love you too,\" she replied. \"Now pass the pancakes! I'm hungry!\"\n\n\"Eating for two?\" I teased as I handed over the platter.\n\n\"Who knows?\" she smiled. \"After all, twins run in my family.\" I just shook my head and kept smiling.\n\n\"Am I ever going to win one of these teasing contests?\"\n\n\"Probably not,\" Daphne laughed, but then she turned serious and looked into my eyes again. \"Michael, thanks for asking me to be your wife.\" I reached across the table and took one of her hands in mine.\n\n\"Thanks for saying yes.\" \n\nWe sat there in silence, eating while we continued to hold hands across the table. Occasionally I'd look up and meet Daphne's eyes. Each time we both smiled briefly before going back to our meal. If I was extremely lucky, I could spend the rest of my life with this woman. Being a romantic, I knew I would."
    ],
    "authorname": "JoeDreamer",
    "tags": [
        "big tits",
        "virgin",
        "bigtits",
        "romance",
        "love",
        "humor"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/daphnes-crush"
}