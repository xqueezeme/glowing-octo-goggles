{
    "title": "Dex and the Twins at College Ch. 13",
    "pages": [
        "\n\nCHAPTER 13\n\nI am usually already awake in the morning before my alarm goes off. Not so, this morning. The low volume music of the radio was enough to ease me out of my deep sleep. Except for the music the house was completely quiet. I sat on the edge of the bed and ran my fingers through my hair, trying to get the motor going. I shut off the radio and went to my bathroom and turned on the shower. I did my bathroom stuff and stepped under the hot water. It was invigorating and when I rinsed off, I was ready to start the day.\n\nI contemplated breakfast and noticed that there was a blinking red light on the house phone on the bar. I played the message. It was from Mom telling me how well things had gone with Sylvia last night. Your dad should be proud of himself. She finished off her message with a promise to tell me the details when we talked next. The line went dead. Neither Mom nor Dad ended phone calls with 'Bye' or 'Talk later' or anything. The line just went dead when she was finished.\n\nThe weather was gorgeous and I normally would have walked to classes but I was still tired from last night, so I drove. My imagination played out about last night between Mom, Dad and Sylvia and I was dealing with an erection by the time I parked at the cafeteria. The single piece of cold pizza hadn't lasted very long. I was starved. I put my imagination away so I could get my hard-on to subside before I went into the cafeteria.\n\nI stood in the line with my tray. I bypassed several people placing special orders and grabbed a sausage, egg and cheese on a croissant wrapped in foil and a small bottle of milk and got in the line at the cash register. While I waited to pay, I noticed Dori standing there. She looked like she was waiting for me and I thought, 'Fuck. I don't want to get involved with her or Alicia. Let her collect her points somewhere else.'\n\nI paid and carried my tray toward a table near the windows. The dining room was pretty busy, as it always is early in the morning. Dori followed me and sat down across the table from me. I ignored her for a moment as I unwrapped my sandwich and unscrewed the cap on the milk. I took a bite and looked at her. She smiled and waited for me to chew and swallow. Then she said, \"When you and your 'house-mates' were here the other day; you were with that older couple from your party. I saw you in bed with them and Cheerleader Molly's mother. It looked pretty hot. I wished that I was in the middle of that instead of with that fatso football player. He was hardly a 'one'.\" She hadn't said anything that prompted me to say anything so I took another bite of my sandwich. Again, she waited for me to chew and swallow. I took a sip off my milk bottle and she grinned and said, \"When I saw you all together, you seemed to all be related like one big happy family.\"\n\nI said, \"We are related in that I rent the house from the older couple, who are the owners. I get a break on the rent, if I provide sexual favors for the Mrs. when they are in town. She really likes my hard cock and he likes to watch. I sublet a room upstairs to the twins so, I actually make money. That's the extent of our relationship.\" I prayed that Dori couldn't hear my heart pounding at warp speed. I took another bite for no other reason than to appear casual.\n\nDori smiled at me and stood up as she said, \"Okay. I guess it was just my imagination running away with me. Have a great day.\" She took several steps away and then turned around and said, \"Fantastic party. Everyone is talking about it already.\" I smiled at her as she headed out of the cafeteria.\n\nI could certainly understand where Dori was coming from. Even though I didn't really look much like Dad and even less like Mom, the twins looked so much like her in every way. If Dori had pointed that out, I would have been sunk. I wondered if she realized the similarities and was holding back that smoking gun to use as leverage. I mumbled, \"FUCK\" to myself. What a mistake we made coming here as a family one day after our Halloween Party had turned into an orgy. I finished my breakfast and walked to the Engineering building for my first class.\n\nIf Dori wanted her seven points so bad, I'd have to given them to her. Of all the people to make this connection, why did it have to be her. I calmed down as I got to my class. Maybe she'd be satisfied with my explanation. Fuck, I'm never that lucky.\n\nAfter classes, I worked hard in the weight room trying to deal with the anxiety that filled the day. I could barely lift a glass at the Juice Bar when I finished. Molly was in a booth with a couple other cheerleaders when I collapsed in a heap on one of the barstools. I ordered an orange-juice from Jerry and waved at Molly. She waved back and scrambled out of the booth and nudged her way between my knees and stretched up for a kiss. I bent down and kissed her pursed lips. She stepped back and pulled me down off the stool and led me to her booth. The other two cheerleaders were grinning at me as I sat down after Molly scooted onto the bench seat.\n\nMolly said, \"Dex. You met Emily and Asia at your party, Friday night.\" I didn't recall either of them, but Molly's Pixies were all wearing masks.\n\nThe confused look on my face prompted Emily to say, \"Well, we met but we didn't actually meet.\" She had a coquettish smile on her face which I interpreted as, 'We saw each other but we didn't have sex.' I tried to remember who I'd had sex with that night.\n\nAll three of them were in their cheerleader uniforms and their tight sweaters revealed that Emily had an athletic body with above average sized 'C-cup' boobs. She was blonde with bouncing vertical curls down past her shoulders. Asia was of Asian descent, probably Korean. She was very pretty, cute would be a better description. Her skin was a light coffee color like she still had a great tan. Her dark eyes and bright white teeth caught my eye. She was short and slim and her sweater revealed that she had smallish, pancake boobs. Her hair was raven black and hung straight down to the small of her back without a ripple or a curl. She was just smiling at me. I smiled back.\n\nI shook their offered hands and said, \"It's nice to meet you without the masks.\" Asia looked at Emily and just smiled. I looked at Emily and Asia as they grinned at Molly. I turned to Molly. Something was going on. Molly shrugged her shoulders as if to say, 'What?'\n\nMolly, Emily and I chatted about inane subjects and Asia just sat there smiling at me. It was very disconcerting, but I smiled when we made eye contact. I finished my orange juice and asked if I could get them something. They declined so I didn't get anything either.\n\nSuddenly, Molly's eyes went wide. I thought she had seen something unusual, so I looked where she was looking. She said, \"I almost forgot. Asia left part of her costume at your house, Friday night. She needs to return the whole costume so she can get her deposit back from the rental company.\" I looked at Asia and she kept that same smile but she nodded this time.\n\nI had scoured the house looking for Emma and Eva's costumes and hadn't found any parts of other costumes. The cleaning company didn't turn over any parts of costumes either. Asia finally spoke and said in a high-pitched, squeaky voice in perfect English, \"I'm not sure where I lost them. My wings.\" She smiled again.\n\nMolly said, \"Can we come over and find them? She thinks they came off in the back bedroom where the skeleton was busy typing at the desk. That was pretty amazing, by the way.\"\n\nThe ball was in my court. There was little chance that everyone missed her wings during the clean-up. I was pretty sure I knew what their motivation was for coming to my house and it wasn't to search for a pair of costume wings. I smiled at Molly and said, \"Sure. no problem. My car or yours?\"\n\nMolly said, \"We'll come over in my car. I know the way.\" I nodded and we got out of the booth. Emily and Molly were tittering with excitement. Asia just smiled.\n\nI had planned to walk down to watch Mandy and the lacrosse team playing their rivals. Rival games were always fun like the Yankee vs. Red Sox or Jets vs. Patriots. I guess I had decided that I had better prospects when I said, 'Sure. No problem' to Molly. I got in my car and drove home. I was inside the house before Molly's car pulled into the driveway. I'd left the front door open and the three of them just walked in after ringing the doorbell. Molly looked around the downstairs and said, \"Wow. You did a nice job cleaning up. This house was pretty well trashed when we left the party.\" I didn't confess that we had hired a cleaning company. I offered them a beer and they accepted. I pulled four cold ones from the refrigerator and restocked.\n\nI came out of the kitchen with two beers in each hand and said, \"Do you want to start looking in the spare bedroom? That's were you thought you lost your wings.\" Asia had a brief look of confusion like she had forgotten what she was here for. Then she smiled that same smile and nodded.\n\nMolly said, \"Can we just go up and look?\" I nodded and motioned for them to go ahead. The three of them went up the stairs. I had noticed the red light on the house phone was blinking again, so I went back to the kitchen to see who left a message. It was Mom again; she had missed me again trying to tell me the details of her tryst with Dad and Sylvia. She didn't want to tell the story to a machine, so she just left a message to call her. They must have hit it off because Mom was still excited about telling the story. I admit that I had some feelings of jealousy, but I put them aside. I had a hand in getting them together in the first place.\n\nI started up the stairs with my beer in my hand. I noticed that the beers I had given to Molly and her cheerleaders were on the dining room table. When I got to the top step, I heard a single moan followed by a squeaky voice saying, \"Oh God, Yes. Right there.\" I smiled to myself as I quietly walked down the hall and into the spare bedroom. When I peaked around the corner of the closet, Asia and Emily were naked, laying at the bottom of the bed. They both had spread-eagled legs, splayed out at ninety-degree angles in splits that every cheerleader is known for. Molly was naked to the waist and had only her pleated cheerleader skirt on. She was kneeling with her face in Asia's sex. Asia was holding back her labia as Molly tongue-fucked her. Emily was right beside Asia with their legs crossing, holding back her labia, but fingering her pussy as if she were getting ready for Molly's tongue.\n\nMy cock went hard in my pants and I unzipped them and pulled my cock out and started jerking myself off. Molly pulled her face from Asia's sex and moved in closer and began rubbing her big tits on Asia's pussy. Molly found Asia's clitoris with one of her long hard nipples and Molly moaned as Asia wheezed out a hand-muffled scream.\n\nI stepped forward into Molly's peripheral vision and she turned to me and smiled before she said, \"I'm just getting her ready for you. She's pretty wet.\" Molly backed away from Asia and moved over in front of Emily. Emily moaned loudly when Molly dipped her tongue into her pussy. The height of the bed made for a good position for Molly to eat out Asia's pussy but it was an awkward height for my cock to take Molly's place. I came forward with my cock pointing the way and folded Asia's splayed legs together so they pointed straight up at the ceiling. I pushed her into the middle of the bed. She seemed weightless. I held her legs together until she was in position and then I pushed her knees to her chest, she couldn't see what I was going to do. She definitely wasn't frightened about it. She turned her head to look past her right leg. She gave me a lusty smile as I moved up under her. With her legs held forward like that, her sloppy wet pussy was rolled up to a perfect angle to push my cock in. Her anus was also available and enticing but I wasn't going to go there today.\n\nI leaned forward and touched my glans to her clitoris and her entire body tensed. In her squeaky voice, she said, \"It's awfully big. Be gentle with me?\" I dragged my knob through her wet sex and then eased it into her. She was anticipating a lot of pain and she tensed again. When I got my fat knob inside, I stopped and let Asia adjust. Molly was slurping and sucking on Emily's clitoris and pussy. Emily had turned her face to me and she could see my cock and Asia's pussy. She grinned up at me and then flinched and moaned again as Molly was working on her clitoris again. Emily moaned from Molly's attack but never said a word as I eased centimeter by centimeter into Asia's vagina.\n\nI was half way in when Asia flinched hard. I had already pushed up to her cervix. I pulled back slightly and gripped my cock at her sex to mark her depth. She was tiny in every way. I pulled back and Asia groaned. I pushed in faster to my hand and from there we were in full-fuck mode. Asia rolled her hips up and back to continually change the angle. She was tight and the fact that I had her legs closed contributed to that. She was handling my fatty without difficulty. Molly pulled her face back from Emily's pussy to watch Asia getting fucked.\n\nAsia was gasping for air. I was sucking air too. She muttered through her gasps, \"Please don't cum in me.\" Her tightness had stirred my balls and I was pretty sure that I'd be able to cum when she did, if I pulled it a bit closer. I was pushing and pulling on one thigh as leverage. I kept my hand in place on my cock to make sure I didn't hurt her. She had the shallowest pussy I had ever encountered.\n\nI closed my eyes to concentrate on my climax. Asia was showing signs of her orgasm. Through repetition, I had her depth down pat, so I pulled my hand out and gripped her other thigh and picked up my pace. Asia's mouth fell open in a silent scream. Her eyes were wild. I felt her pussy clench hard on my cock and then begin pulsing spastically. The silent scream became a loud scream at a very high pitch. I increased my pace again. I was feverishly throwing my cock into her as I felt my balls churning on a load of cum. Her pussy was pulling it right out of me.\n\nMy hips loaded along with the first cum-shot and I was about to launch in her pussy when I remembered that she didn't want me too. I pulled out quickly and grabbed my cock and started jacking on it. Her legs separated and fell perpendicular to her body in that split again. With my eyes closed, I hadn't noticed that Emily and Molly had moved to the second bed and were now in a side-by-side sixty-nine.\n\nCum launched up my shaft and down to Asia's stomach and splattered across her chest and face on contact. I adjusted my aim up her body. By the time I had finished, Asia was covered from stomach to hair-line. She had her hand out to block anymore, but it had to go somewhere. When my last shot dribbled out on her black pubic hair, she started giggling as she ran her fingers over her flat, jiggly breasts and pushed her fingers to her lips. One eye was completely covered but she looked up at me with the other. She said, \"Fuck, Dex. That's a lot of cum.\"\n\nAsia sat up and cum drooled down toward her pussy. She sucked my softening cock into her mouth. She took three-quarters of me and gagged as she tried for that last quarter. She backed off to clear her throat and inch-wormed her way down again. She gagged harder and pulled back. She lashed her tongue around my shaft to clean me off and then laid back down and collected cum that had drooled down to her sex. She curled up in a fetal position, working on the cum on her face.\n\nI looked over at Molly and Emily going at each other. They were both building into an orgasm, so I wasn't about to disturb them. I collected my pants and pulled them on and zipped up. I left the three of them like that and went downstairs. The reason they had come over was to find Asia's wings and I chuckled as I thought, 'I think she found them.'\n\nOther than the proclamations of, \"I'm cumming and Oh ggawwdd,\" from upstairs, the house was quiet. I still had some time before the twins got home. I decided to go to the hot tub and savor the transcendental sensations of hot water swirling around me.\n\nI stripped down to the buff at the hot tub and pushed back the cover. The hiss of the rising bubbles in the crystal-clear water was inviting. I climbed in and sat down in my usual seat, which is deeper than the others, which allowed me to get my entire body under the water. I stretched out and put my feet up on the control console so I could lay my head back in the water. I must have hit the jet pump button with my heel and white water surged up from the bottom and splashed across my face. I was caught by surprise and I sat up coughing and spitting water.\n\nJets of water and air drilled into my back and that felt incredible on my sore muscles. I maneuvered around to find the best combination of jets and stayed there until the skin was numb before changing positions.\n\nI started to drift off and because of the power jets surging the water up around me, I didn't notice the water level rise around me. I was reliving the encounter with Asia only a few minutes ago but that drifted away and was replaced by last night. I could envision most of the crowd of twenty or so horny women all around me. I never got most of their names and it didn't matter anyway. I hoped that they didn't know mine. I knew Rachel and Hannah and the twins. I never even got the names of Rachel's mother and sister and didn't want to know them. I had my chin at the top of the roiling surge of hot water and I smiled to myself as I felt my groin responding to my recollection of last night's events.\n\nI surged out of my reverie when I felt a pressure on my hardening cock, that had flopped up in an arc from my balls, under the water, to my stomach, which was slightly above the water. I sat up out of the water with a start to see Grace sitting naked in the water beside me. She giggled at the startled look on my face. She was already jerking me off. She said, \"I hope you don't mind, but my girls and I snuck through your hedge to use your hot tub last night. The house was dark. I guess you and your house-mates were out. I love the sensation of sitting naked in the hot water. I think the fact that it's out in public enhances the whole experience.\" I knew exactly what she meant.\n\nShe leaned over and kissed me gently at first and then with more urgency. My heart was returning to normal and I kissed her back. Her nipples were hard as nails and I read the sultry look on her face to mean that she wasn't here for the hot water and sitting naked in public. She released my cock and stood up to throw one leg across my lap and sat down. She dragged her nipples across my chest and kissed me with tongue this time.\n\nWe played tonsil hockey for a few moments as she pushed her hands down between our bodies and pulled my cock to my stomach and then pushed her body closer to trap my hardness between our bodies. Her sex was sitting on my balls. She pulled back from my lips and giggled at the sensation of my cock pulsing against her clitoris. I flexed my cock hard and she let out a groan as her body folded in on itself. She grinned at me and said, \"You are a bad boy.\" I grinned and flexed my cock again, eliciting the same reaction.\n\nShe threw her arms around my neck and dropped her forehead to my shoulder as she started grinding her pussy along my shaft. She rolled her hips forward to maximize the pressure she was applying. I gripped her ass-cheeks to help her. She did this for a couple minutes and then used her knees at my hips to push herself up out of the water as she pushed her tits to my face. I palmed them and suckled on each nipple sticking out from between my fingers. Grace let her head roll back on her neck in a long series of moans. Her breasts were similar in shape and size to her daughter's. Gravity had taken its toll and they sagged; but only slightly.",
        "She pushed herself higher, which forced me to relinquish my hold on her nipples with my lips. She reached down into the water between our bodies with one hand. I knew what her next move would be. She found my cock and guided my fat knob to her pussy. Our eyes bored in on each other. Hers showed pure lust as she slowly lowered her sex onto mine. Her eyes closed and her mouth fell open. She let out one long moan as she lowered herself to my balls. Her head fell to my shoulder again and she returned both arms to my neck.\n\nGrace just sat there, breathing erratically, with her forehead on my shoulder. I put my hands on her slim waist and pulled her down as I rolled my hips upward. She groaned and lightly bit my shoulder. I must have forced my cock against her cervix because as I pulled her down harder, she bit my shoulder harder. I chuckled to myself. She had created a feedback system of 'you hurt me and I'll hurt you.' I let her go and she pushed up my shaft with her thighs until she stopped at the ridge of my glans. Her tits pulled back from my chest and I wrapped my hands around them. They were bigger than a handful and I roamed my fingers around them with an occasional tweak of her nipples.\n\nGrace let herself slowly drop down my shaft again and I flexed my cock hard in her. She groaned and muttered, \"God. I think I could fuck your cock forever.\" She flexed her vaginal muscles and giggled as I flexed in response. She stopped at the bottom again and said, \"This is like that old song that goes 'when I call to you, will you answer too?'\" She laughed and I kissed her on the neck. She responded by rolling her hips to change the angle of her pussy on my cock.\n\nGrace suddenly inhaled deeply and it caught in her throat. She eased the air from her lungs and wheezed out, \"Oh my God. That caught me be surprise.\" She didn't elaborate but now she was fucking me at her new angle and her reaction indicated that she was dragging her clitoris along my shaft and it was driving her nuts. She just kept mumbling, \"Oh my gawwdd. Oh my gawwdd,\" as she pushed herself up with her thighs and let gravity drop her back down. I put my hands on her waist again to help her lift herself, but she whispered, \"No. Let me do it.\" My hands went back to her tits.\n\nI started rocking my hips to help her and she whispered with more urgency, \"No. Let me do it.\" I sat perfectly still and let Grace fuck my cock any way she wanted, while I fondled her breasts. She cooed with contentment when I gently tweaked her nipples. She continued her motion.\n\nBetween her gasps for air, she mumbled out a few incomprehensible words. From the tone, she was in delirium as she drove herself up and down my shaft with her hips rolled back to keep my cock pressed to her clitoris. I could feel her body tension building. I could also feel my own orgasm spiraling in on me.\n\nWith no further warning, Grace exploded hard into her orgasm. Her body writhed like a serpent in my arms. She screamed into my shoulder, gathered her breath and screamed again. Her sex furiously clenched on my cock. She'd taken me by surprise and I wasn't ready to cum with her. She was doing just fine on her own.\n\nHer torso was leaning hard into mine as she drove herself up and down my shaft and she succeeded in driving herself into a second orgasm right on top of the first. I missed that one too. My cock was throbbing, it was so hard.\n\nGrace let out a wail that I was sure the entire neighborhood would hear. She pulled herself up to my knob and proceeded to bob up and down on just that. The sensation of her vagina sliding above the ridge and back over it again was incredible. She held me with her arms tight around my neck to support her efforts. She kept going and as her second orgasm washed through her, she wailed out, \"Oh my gggawwddd. Here I go again.\"\n\nShe pulled herself back so only her hands held my neck. Her eyes were frantic. Water sloshed against the walls and us from her short stroke fucking motion on my knob. This was her biggest orgasm yet and she looked like she would detonate right there on my cock. Her mouth was open in a silent scream. Every muscle in her body was clenched tight for a moment before she released with a loud piercing scream. I was sure that I'd be hearing police sirens in the distance any moment.\n\nAs this orgasm ran its course, Grace let herself drop down my shaft again and she pressed her body tight to mine and suddenly started sobbing. Tears poured down her face to fall on my shoulder. I wrapped my arms around her back and held her tight. I'd experienced this before and I'd just let her exhaust her emotions and she'd be fine. As she sobbed, I could feel the tension drain from her body as she sat perfectly still on my raging hard erection.\n\nAfter a while she pulled back from me and said, \"I'm sorry Dex. I didn't mean to ruin this.\" I wiped tears from her cheeks and leaned forward and kissed her passionately for a few moments. I didn't want to get her going again. When we broke our embrace. She grinned at me and leaned forward and gave me a quick peck of a kiss and then pulled herself up and off my cock. She rolled into a formed acrylic seat beside me and wiped the sweat from her forehead. She looked at me and said, \"Whew. That was amazing. I'll be lame for a week.\" She giggled and I smiled at her.\n\nThe jets had shut off automatically at some point. I didn't even remember when. Other than the hissing of tiny air-bubbles breaking the surface it was completely silent. No police sirens, no rustling of dead leaves in the trees or skittering across the lawn. It was late afternoon and it was getting dark. I noticed that the lights were on in the house. The twins must be home. I wondered if Molly, Emily and Asia were still here.\n\nGrace reached over and found my cock. It was still quite hard. She looked at me and said, \"You didn't cum. Let me give you a blow job.\" The smile on her face revealed that she wanted to as much as I wanted her to. I grinned at her. There wasn't a guy alive that would turn down a blow job from her. I nodded and sat up on the edge of the tub as Grace sat sideways on the formed lounge seat and turned her body to allow her to suck my hard cock into her mouth.\n\nMy orgasm had retreated but it didn't take long for Grace's technique to pull it back up again. Her eyes were smiling up at me as she bobbed her head on my knob and drilled her tongue into the 'spot' before pushing down my shaft. She was furiously sucking my cock when I felt my climax rush in on me. She felt it too and prepared herself for the huge load she knew she was going to get. Her hands took over in counter-rotating strokes to pump cum from my shaft as her lips took up position at the ridgeline.\n\nGrace's eyes went wide as I filled her mouth with the first shot. As my balls loaded up for the next shot, Grace was struggling trying to swallow the first. I could tell she wasn't going to be prepared for it. She pulled my cock from her mouth and immediately aimed my cock toward the hedges. Shots two and three arched through the air and into the bushes. She was ready to take the rest of the less powerful streams of cum and she pushed my spewing cock back in her mouth. She clamped her lips on the ridge of my knob and finished me off. When she decided that I was done, she drilled her tongue into the 'eye' and swallowed all that remained. She pulled off and grinned up at me as she kissed my glans. Fuck, I was completely drained. Not just my balls.\n\nGrace lashed her tongue around her lips and then wiped her cheeks and chin with the back of her right hand. Any cum she found she sucked into her mouth. I slid back down in the hot water, which felt great after sitting out in the cold air. Grace kissed me with her cum tasting lips and said, \"I have to go. The girls are probably home from practice.\" She giggled for a moment and continued, \"They'll know exactly what I've been doing as soon as they see me.\" She seemed content with that.\n\nShe climbed out of the tub and dried herself off before pulling her robe on, which was apparently all that she had worn over here. She gave me an air-kiss and said, \"You should probably go inside because Sarah and Sandy will probably be over here two minutes after I get through the door. She seemed content with that too.\n\nGrace disappeared through the hedge and I heard her say, \"Thanks again Dex.\" I smiled and got out of the tub and dried off. I just didn't have the energy to deal with Sarah and Sandy right then. I carried my clothes to the house and spotted June and Julie standing in the picture window looking out to the backyard. I stepped into the house with my dick dangling between my thighs. The twins had huge grins on their faces.\n\nJulie said, \"That looked like fun. How many orgasms did she have anyway? We came in after you started.\" I just shrugged my shoulders. I had lost track.\n\nJune said, \"Molly and two of her cheerleaders were going out as we came in. I guess there's none left for us, huh?\"\n\nI reached down to my spent cock and said, \"Probably not at the moment, but the boys recover quickly.\" June and Julie both laughed and I did too. I carried my clothes to my room and redressed in athletic shorts and tee shirt before joining the girls in the kitchen. They were cooking macaroni to make Mac n' Cheese again. I never got tired of Mac n' Cheese.\n\nWe ate dinner, shared the clean-up and retired to the family room for a little TV. I had to study, so I went to my room. About an hour later, I heard a light knock on the back door. No one would be knocking on the back door except for our backyard neighbors. One of the twins went to the door and opened it. I could hear Sarah's muffled voice and then some words back from Julie that sounded like, \"Umm... He's studying in his bedroom.\"\n\nThen I heard Julie invite them in. Moments later, Julie looked in on me and said, \"Sarah and Sandy are here. They haven't said, but I'm sure they want what their mother got earlier.\"\n\nI groaned and said, \"I'll be out in a while.\" Julie's face disappeared. I kept on studying but after a half hour my curiosity got the better of me and I put my books on the bureau and headed for the family room. I stopped in the kitchen to get a beer from the refrigerator. I was popping the tab as I rounded the corner to the family room. I had the beer half way to my mouth and I stopped short.\n\nJulie and Sarah were on the floor, engaged in an over-under sixty-nine with Julie on top. They must have just got started because there were no moaning or groaning sounds. They both still wore clothes on top but their hands were inside the shirts. They were naked from the waist down. June and Sandy were passionately making out on the sofa with their hands engaged on the other's breasts through their clothes. The TV was still on with the volume turned low. I took a seat across the room and took a sip off my beer can. I love to watch lesbian sex. My dick was enjoying the show too as it pushed its way out the leg of my shorts.\n\nMoments later June pulled Sandy's shirt up her torso and their lips parted only long enough to get the shirt over her head. Their lips collided again as June caressed Sandy's hard nipples. Sandy moaned from June's touch. Their lips parted again as Sandy passionately yanked June's shirt up over her head and down her arm. Instead of their lips colliding again, Sandy's lips and hands went straight to June's tits. June leaned back and held Sandy's head as she furiously went from tit to tit in a crazed passion. June noticed me sitting across the room with my erection pushed out the bottom of my shorts. She grinned for a moment and then she maneuvered Sandy around so she could pull off her shorts. Sandy did the same to June and in moments they were naked and engaged in a side-by-side sixty-nine.\n\nI pulled up the leg of my shorts as far as it would go and took my hard-on in my hand and started slowly jacking on it. The passion suddenly rose between Julie and Sarah as Sarah pulled Julie's shirt over her head and then they rolled over with Sarah on top and Julie pulled off her own shirt. All four of them were naked. Sarah was trying to keep her lips on Julie's pussy and rub her boobs on Julie's tits at the same time. Their height difference made that difficult, but Sarah was infatuated with Julie's big round tits. Her own big tits seemed dwarfed by Julie's. Sarah forced them to roll back to their original position and Julie's tits hung down into Sarah's face. Sarah attacked Julie's tits with her lips and hands. This position put Sarah's pussy right below Julie's face and she dove in with tongue slashing. Sarah's hips lifted with Julie's attack as she emitted a moan that was muffled by Julie's tits.\n\nIt was getting hard to stay out of the action and just watch. I looked for an opportunity to get involved where I could enhance the pleasure. I found it in Sarah and Julie. I lifted my hips from the chair and pushed my shorts down to the floor. I pushed out of the chair to my knees and pulled off my tee shirt. I was as naked as the rest of them.\n\nBecause Julie was so much taller than Sarah and Sarah's infatuation with Julie's big tits, Julie's hips were swaying from side to side as if she were looking for some attention. I provided that attention as I moved in behind Julie and touched my knob to her sloppy vagina. She yelped into Sarah's pussy and pulled out and looked back. When she saw me, the biggest grin formed on her face and she went back to business. Julie was on her knees with her face down in Sarah's sex. Sarah was on her back with her lips and hands on Julie's tits. She was really mauling them. I was on my knees behind Julie with my hands on her hips as I pushed my raging hard-on into her pussy. Sarah was oblivious to my presence.\n\nJulie was getting the full treatment and she was groaning hard with sexual passion. She feverishly drilled her curled tongue in and out of Sarah's pussy and then dragged her broad tongue over her clitoris to cause a muffled groan. I started sawing my cock back and forth in Julie's sex. It wasn't long before Julie pulled forward off my cock. She rolled her hips down to present her rosebud to me and I grinned and took her up on her offer.\n\nI pressed my fat knob to her anus and pushed forward as she pushed back. I entered her as she groaned into Sarah's sex. I was preparing to ease my cock into Julie's ass when June and Sandy's screamed, nearly in stereo. They had timed their orgasms pretty well. They kept right on going. In their side-by-side sixty-nine, neither of them could see me doggy fucking Julie. I pushed inside Julie's ass and her head came up out of Sarah's sex. She looked back at me. Her mouth hung open in a silent scream. In her eyes was pure lust silently urging me to go. Sarah began humping up her hips in search of Julie's tongue. Julie got the message and returned to Sarah's sloppy pussy. I got Julie's message and sawed my hips at her ass picking up the pace every dozen or so strokes.\n\nJulie was gasping for air around Sarah's vagina. Sarah became aware of my presence as evidenced by her hand reaching up and grabbing my swinging balls as I fucked Julie's ass. It didn't register immediately with Sarah that I was fucking Julie's ass. When it did. Sarah's hand released my balls and she pushed three fingers into Julie's pussy.\n\nJulie flinched from this new sensation and her response was to increase her attack on Sarah's vagina and clitoris. Sarah exploded into a massive orgasm. She screamed hard around Julie's left tit and humped up her hips causing Julie to pull back to protect her nose. She went right back down again.\n\nI pulled my cock back to the ridge and knob-fucked Julie's ass which pulled a scream from her. When June and Sandy became aware of the sounds of sex from us, they sat up to see what was going on. Sandy grinned broadly when she saw me sawing my hips behind Julie.\n\nJulie's face came up and she looked back at me again and whimpered, \"Oh God. Yessss. Fuck, I love that.\" I knew she liked knob-fucking in her pussy. She liked it even more in her ass. Sarah's orgasm had caused her to abandon her attack on Julie's tits and she just laid there oblivious to the world.\n\nMy orgasm was coming on. I could push it back if I wanted. I knew there were three others who probably wanted some cock too. I had an urge to cum in Julie's ass and hoped that I stayed hard enough after. I figured the chances were seventy-thirty that I would.\n\nJulie pushed herself up on her extended arms to change the angle as she looked back over her shoulder with a pleading look on her face. She whimpered, \"Oh my God, Dex. Hurry. I'm gonna die.\" I knew that was her code for she was near detonation. I abandoned the knob-fuck and drove my cock as deep and as hard as I could into her bowels. She screamed hard and dropped to her elbows again. I flailed my cock in her ass until her sphincter muscle grabbed it hard. I couldn't believe the pressure. The heat was amazing and I humped up into my orgasm and launched my hips into her, driving her torso to the floor. I followed her forward as I rocketed cum into her. She screamed again from this new sensation. It took a few launches of cum before I realized that Julie was experiencing a double orgasm. She was spasming on my cock and her pussy pulsed on Sarah's unmoving fingers. The noises that came out of Julie's throat, I'd never heard before. I thought maybe she really was going to die.\n\nJulie's ass milked my cock dry. I lost count of how many bolts of cum that I poured into her but it was apparent that there had been many as she collapsed forward off my cock and onto Sara's body. Cum was boiling out of Julie's gaping anus directly down over her quaking pussy to Sarah's face.\n\nSarah had nowhere to go to avoid the avalanche so she opened her mouth and stuck out her tongue to collect the onslaught of cum. Julie laid there, unmoving for a long time on top of Sarah, who seemed content with the situation. After the cum shower subsided, she tried to get her lips back to Julie's pussy. It had stopped clenching and her juices drooled to Sarah's neck. To say the least, Sarah was a mess.\n\nJune got off the sofa and went to the kitchen. She returned with several wet paper towels. She knelt down and jerked off my softening cock with the paper towels wrapped around my shaft. Then she knelt forward and pushed her lips on my cock and took a few strokes before she pushed my knob into her throat. Sandy was fascinated by June's skills and she came over close to see the form of my knob sliding in and out of June's throat. Sandy was awestruck and said to June, \"How do you do that?\"\n\nJune pulled back and then off. She gagged out a wad of saliva onto my cock and ran her hand down to distribute it along my shaft. She said, \"You have to practice. Especially, to deal with a cock as big as this. Vegetables work well. Bananas too. You have to work on your gag reflex. I just happen to have the real thing here to practice on.\" She held out my cock. June's throat job had brought me back up to hard again. June continued, \"If you can handle Dex's cock, you shouldn't have trouble with any other one. He has the biggest cock we've ever seen in real life.\"\n\nSandy moved over next to June and grinned up at me as she took my cock in her hand. She stroked it a few times and then put her lips over my knob. She knew about drilling her tongue on the 'spot' and she did that. I groaned as I pushed my hips at her. She grinned again, pleased that I was enjoying her mouth. She worked her way down to about half of my cock and gagged. She pulled back and off to clear her throat. June, said, \"That's good. Your nose would have been in many guy's pubic hair. If you can control your gag reflex, you can deal with any cock.\" I wondered if that was true or not.\n\nI flexed my cock in Sandy's hand to remind her of what she was doing. She looked up at me and giggled and pushed her lips back on again. She worked her way down to the half way point again and very slowly pushed another centimeter in and pulled back. Her back heaved up and she 'awwwkk'd' a couple of times but she stayed right there.",
        "Sarah was looking at us upside down and she said, \"Hey. I want some too.\" She nudged Julie to prod her to get off her. Julie groaned and rolled off Sarah's body to the side and Sarah rolled the other way to get on her knees. June suggested that Sandy open her mouth as wide as she could and tuck her tongue under my cock instead of taking the natural position of using her tongue to block passage to her throat.\n\nSandy pulled off and said, \"Show me,\" as she handed my cock back to her. June took my cock and pulled me over to the sofa that she and Sandy had been on and pushed me back to sit down. This was a much easier position for everyone as June and Sandy moved inside my spread legs. June opened her mouth wide and kept it open as she pushed her mouth down my shaft to the point where Sandy was stuck. She started bobbing her head up and down and 'aaawwkkking noise came from her throat. She pulled off as Sarah joined June and Sandy outside my left leg. June handed my cock back to Sandy who did as June had instructed and Sandy discovered that she could get more cock in her mouth that way. I hated this action because lips are not part of it. It sounded sexy but the stimulation to my cock was minimal.\n\nSandy was drooling saliva and she left a huge wad of spit on my cock when she pulled off. Sarah grabbed it for her turn. June smiled as she watched Sarah do what Sandy had just done and now, I had a double sloppy cock. Silver threads of saliva clung from my knob to her lips. Sarah was gasping for air when she pulled off.\n\nJulie was just getting up off the floor and she came over and sat beside me watching June give blow job lessons to Sarah and Sandy. I thought the blow jobs they had given before were fine. I wanted them to finish me off. I was getting nowhere with the lessons. Julie spoke up and said, \"The best practice is to just suck on his cock and consciously push a millimeter deeper each time.\" I grinned at Julie. She whispered, \"You'll never get off that way.\" I nodded my head in agreement.\n\nSandy and Sarah swapped their normal blow jobs back and forth and I could tell that they had taken Julie's advice as there was a lot of gagging and heaving. They stayed at it though and to be polite, I announced that I was going to cum. Julie grinned at me and said, \"Well, aren't you the gentleman. You never say that when I'm on your cock.\" She giggled to indicate that she was just teasing me. She was an expert at recognizing when a guy is going to cum.\n\nSarah and Sandy pulled back and each started a coordinated double hand job as hard and fast as they could. They had total control of my cock so they could aim where ever they wanted. They chose to get my load across both faces and across both of their tits. Sarah was a sight after getting her second load of cum on her face. I lost count of how many shots of cum that I blasted across their bodies. Sarah took control after I was finished as she cleaned my cock with her tongue and mouth. Sandy was running her fingertips over her cum-soaked tits and she grinned as she pushed her fingers to her lips and licked them off.\n\nJust then, there was a knocking on the picture window. The twins and I looked that way and Sarah pulled her lips up my shaft to turn and look too. Sandy had a terrified look on her face. We all knew who it was. It could only be their mother and they were caught with their 'hand in the cookie-jar', so to speak. With the interior lights reflecting off the glass, we couldn't see who was actually there. We heard a voice, muffled by the glass. Julie got up and went to the back door to invite the girl's mother inside.\n\nJulie stepped back and Grace entered. She was still wearing the robe that she had pulled on earlier after the hot tub. She had an angry look on her face as she glared at her naked daughters, perched on their knees in front of me. Sarah and Sandy looked away from their mother and Sarah took one more trip down my softening shaft.\n\nJulie stepped in beside Grace and said, \"You must be Sarah and Sandy's mother. I'm Julie. We're housemates of Dex's.\" She pushed her hand forward and Grace turned away from her daughters to look at Julie's offered hand. She took and shook it once. Grace was now officially distracted as she scanned Julie's naked body.\n\nShe said, \"Nice to meet you Julie. I'm Grace. Yes, I'm their mother and as you can see, I'm not doing a very good job these days. I'm going to have to put chastity belts on them or something. Julie giggled at that thought. Julie followed Grace's gaze back to the sofa. Sarah was lazily running her hand up and down my shaft, while Sandy palmed my firm, velvety knob. Grace looked back at Julie and scanned her fantastic body again. Her face was flushed with what I presumed was sexual heat. Grace said, \"You girls are identical twins. You're both incredibly beautiful. If Dex wasn't into you two, I'd be sure he was gay and I know he's not gay.\" Julie giggled and thanked Grace for the compliment and then motioned with her arm to offer Grace a seat. June got up and offered her hand to Grace and introduced herself. Grace scanned June's naked body as if searching for some distinguishing mark to tell the twins apart by. She was breathing erratically as her flushed face expanded to her neck and cleavage. Grace took a seat and just watched Sarah and Sandy lazily working on my cock. The girls didn't want to look at their mother, even though she looked nothing like the angry mother who walked in moments ago.\n\nJulie and June took their seats beside me and curled up their legs. Julie looked at me and smiled. June pushed her lips to my ear and whispered quietly, \"If she doesn't get some sex pretty soon, she's going to burn up in that chair.\" She pulled back and I smiled at her and nodded.\n\nI looked down past my semi-erect cock to Sarah and Sandy, who were looking anywhere but at their mother. I said, \"Ladies. Why don't you two go take a shower in my bathroom. You're covered with cum. You can't go home looking like that.\n\nThe girls reluctantly released my cock and got to their feet. Julie looked at me and said, \"Why don't you show them the way. The shower controls can be tricky.\" I had no idea what she was talking about. The shower had a common ball-valve. You lift the handle and turn it right or left. Julie winked at me and I understood what she was up to.\n\nI stood up and took Sarah and Sandy's sticky hands and guided them past the kitchen to my bedroom. My cock led the way, sticking out over my balls, but dipping below horizontal. Grace watched my cock as we left the room.\n\n***\n\nAfter Dex and her daughters left the room, Grace turned back to June and Julie. They had both moved into the space that Dex had just vacated and were kissing each other with passion as they fingered the other's pussy. Their intention was to get Grace, whom they knew was already aroused by their naked bodies, to either join them or they would take it to her.\n\nTo increase the passion June and Julie rolled into an over-under sixty-nine, right there on the sofa. Grace was spellbound. She sucked her lower lip between her teeth. When her hand pushed inside her robe to caress her own nipples, which were incredibly hard, Julie pulled her face up from June's sex and looked over at Grace, who was heaving in gulps of air.\n\nWith a low-pitched guttural voice, Julie groaned as she arched her back pushing her pussy down harder to June's lips and tongue. The slurping noises were infectious. Julie's body writhed and arched again as she motioned with her index finger for Grace to join them.\n\nGrace was in kind of a trance as she slid out of her chair, pulling open her robe. She was naked under the robe and she discarded it before she made it across the room. Her pussy glistened from her own juices as she moved in close and sensually kissed Julie. Grace moaned into Julie's mouth and then she placed her hands to Julie's tits and moaned again.\n\nJulie broke the embrace and she and June separated and moved to the floor with Grace and maneuvered her onto her back. Grace was on fire and she practically pulled June's hips down to her face. Grace drilled her tongue into June's sex causing her to let out a sensual groan. Julie pushed her face down between Graces spread thighs and slurped her tongue through Grace's sex. Grace heaved her hips up to get more. She was furiously trying to tongue-fuck June and gasp for air at the same time.\n\nThe three of them continued this way for a few minutes before Julie pulled her tongue out of Grace's pussy and June crawled off Grace's face. Grace was moaning non-stop and she lifted her head to look down at Julie and whimpered, \"Oh God. Please don't stop. I'm almost there.\" She stuffed her fingers into her pussy to continue the stimulation.\n\nJulie interrupted Grace's masturbation and maneuvered her into a three-way daisy-chain. It must have been her first because she wasn't sure what June and Julie were doing. When she got it, she resumed her attack on June's pussy and Julie resumed her attack on Grace's, but now June was tongue-fucking Julie and all three of them were moaning and groaning.\n\n***\n\nWhen Sarah, Sandy and I walked back into the family room and sat down together on the sofa, the girls were fascinated by the three-way gratification. The sex noises were getting me aroused again and I picked up a pillow and placed it over my rising cock. I didn't want to get things going again. Sarah and Sandy, who wouldn't even look at their mother before, couldn't take their eyes off her now, as she writhed in sexual bliss on the floor.\n\nSandy suggested that they could get in on the Daisy-Chain too, but I put my hand down on her thigh to stop her from getting up. She looked at me as she sat back again. I said, \"They're almost done. Do you see the tension building in your mother's body?\" Sandy looked and after a moment she grinned and nodded.\n\nMoments later, Grace exploded into an orgasm. It was a big one too. Her body writhed and she broke her contact with June's pussy while her face grimaced in a look of pain. Julie kept her tongue going in Grace's pussy until it stopped pushing her tongue out with her vaginal clenching. June and Julie then formed a side-by-side sixty-nine and finished each other off. Grace had rolled onto her back gasping for air, muttering, \"Oh Jesus. Oh Jesus.\"\n\nSarah and Sandy slid off the sofa and went to their mother on hands and knees. They were still naked and they laid down on either side of her and cuddled their heads onto her shoulders. Her body randomly shuddered as Grace pulled her daughters tight to her side. They stayed like that for several minutes as Grace's chest heaved up and down. June and Julie curled into their own embrace right there beside Grace and her girls.\n\nThings finally broke up and the five sexy women got to their feet. Grace pulled on her robe while Sarah and Sandy collected their clothes and pulled them on, leaving off their panties and bras. June and Julie returned to my side on the sofa as Grace sat down on the edge of her chair and said, \"I'm new to the girl-sex thing. Sarah and Sandy introduced me to it only a few days ago.\" She grinned at me indicating that I knew exactly when that occurred. I smiled back at her. \"I know they've been satisfying their own needs for a while and I wasn't sure how I felt about it. Wow. This was amazing. You two got me so hot, I thought I'd explode when I came.\"\n\nGrace smiled at her daughters and said, \"Come on girls. We should get home. I think we have imposed on Dex and his friends long enough.\" She got up from her chair and led Sandy and Sarah to the back door. They sent air-kisses and closed the door behind them.\n\nJulie watched them go and then turned to me and said, \"Wow, that was interesting.\"\n\nJune giggled and said to me, \"Did you three have sex in the shower?\"\n\nI responded, \"No. They were insistent but I resisted. I think they would have fucked all night long if it was up to them.\"\n\nJulie laughed and said, \"You mean like us.\" We all laughed.\n\nNothing was said, but June and Julie followed me to my bedroom and they continued into my shower. I watched as they kissed and fondled each other as they lathered each other's bodies and by the time we slid under my sheets, my cock was hard again. Thankfully they were content to grip their own half of it as they cuddled up to me on their sides with their heads on my chest. I wrapped my arms behind their necks and over their shoulders to cup one of their breasts in each hand. We fell asleep like that.\n\nI was dreaming about Mom, Dad and Sylvia in a three way. Then, I was there too and Sylvia was on her hands and knees on a bed getting her ass fucked by Dad. As he pushed in, his momentum pushed Sylvia's mouth onto my cock. It seemed so real. It was very erotic and I woke with a raging morning woody. The dream seemed so real because one of the twins was on her knees between my legs sucking on my cock. I groaned and pushed my hips up at her.\n\nJulie had been on my right when we went to sleep and she wasn't there. June had been on my left and a sleeping body was still there. So, I assumed the cock-sucking sister was Julie. As I came awake, she was pushing her lips up and down my shaft very slowly and gently. She giggled around my shaft when I pushed my hips up. Now that I was awake, she ramped up the pace and the pressure on my cock. I groaned and that disturbed June. She rolled away from me, freeing my arm. It was prickly from lack of blood flow and I flexed my hand and arm until it felt normal. I pushed the sheet down off Julie's head. I could see her form bobbing her head on my cock. It was pre-dawn and still dark. I put both hands on the side of her head and held her in place as I rocked my hips to fuck her face. There wasn't any danger of her gagging or anything. She could take all of me with ease.\n\nFucking either of them like this always created a lot of saliva and it made for a sloppy blow job. Every several strokes, I let her pull back to clear her mouth. I liked the sound of her slurping and sucking sounds and then she would push back on and I resumed my hip motion to continue fucking her face. I couldn't see details but I was sure Julie's eyes were smiling. She liked me to do this. Every few strokes, I'd ease my hips up to drive my knob into her throat and then pull back out.\n\nI let out a long groan as my climax crashed in on me. The sensation was awesome. I held Julie's head in place as I launched each of many powerful cum-shots into her mouth or throat, depending how high I pushed my hips. She took all of my load swallowing as necessary. Her array of 'glurking' and 'gunking' and 'awwking' noises gradually woke June.\n\nI had deposited my load in Julie's mouth by the time June was fully awake. She rolled back toward me as Julie crawled over my legs and assumed her original position, like she had never moved. June snuggled into me and reached for my cock. She lifted her face off my chest and said, \"How come your dick is wet?\" She ran her index finger into the 'eye' and pulled her hand to her mouth. She pushed her gooey index finger past her lips and giggled. She said, \"Did you have a wet dream or something? Your cock is cummy.\"\n\nI acted like I had been asleep and I rolled onto my side facing her. She gripped my softening cock and kissed me. I ran my hand down over her hips to her sex. I gently pushed my middle-finger into her vagina. June moaned from the intrusion. I offered no further action and we went back to sleep.\n\n-----\n\nOver the next few weeks, I dedicated myself to my books. I had been slacking off my studies. I also intentionally avoided potential sexual interactions with the women in my life. The circle had been expanding rapidly. It wasn't as if I had become celibate; avoiding the twins was impossible and I didn't even try. They continued to keep me more than busy. Most nights we continued to sleep together in my bed. Of all the women in my inner and outer circles, June and Julie were, by far, the most beautiful and sexy. I had expected that their sexual activities with me would dwindle as they had new boyfriends. I guess the distance had deterred Max and Jerry. I hadn't heard their names in many weeks.\n\nJune and Julie both had many guys hanging around on campus but they never brought any of them home. They have many girlfriends that they have sex with and have shared several with me. I'm not sure how I'd react if they brought home guys to share sex with me. The only MFM three-ways I had been involved with had been with Dad.\n\nThe Lacrosse season ended with a loss in the championship game to a much larger college. The twins moped around for a week after. I went out on a date with Mandy to console her. She was really in the dumps. I tried to lift her spirits but she shut me down. She seemed to revel in her own misery.\n\nMolly was always around at the Juice Bar when I finished working out. As always, she was blatant in her sexual aggression but I would say, \"I can't right now. I have to study,\" to shut her down.\n\nThanksgiving break started tomorrow and I took my last exam and was finishing up my after-classes workout. I was feeling better about my grades as we headed into the home stretch of the semester. I was anxious to get on the road in the morning to get home to see Mom and Dad and Sylvia and Reece. I needed the five days off to recharge. I felt depleted. Julie suggested that I was having withdrawal symptoms from lack of strange sex. I chuckled at that thought but it got me thinking about how much I was like Mom. June had said that she was worried about me and that one of these days she was going to bring home a study friend or two and attack me. She laughed afterward and I assumed she was just joking.\n\nI got home that afternoon to a quiet house. The twins were at Basketball practice. I took the opportunity to pack for the holidays. It felt great not to have to study for anything. Pre-break tests were over and I stood in my bedroom and took a huge cleansing breath of air and forced it out. My muscles ached from my vigorous workout in the weight-room and I briefly thought about the difference between my muscular fatigue and the general malaise that I had been feeling. I stripped naked and grabbed a beach towel from my closet and wrapped it around my waist as I headed for the hot tub. Nothing seemed more urgent at that moment as I crossed the backyard. I dropped the towel on the stairs and stepped up into the tub.\n\nWhat a glorious sensation as I completely submerged myself in the hot, sizzling water. The power-jets were off, just as I liked it. I sat down in the foot-well so the water level was at my chin as I tipped my head back to submerge my ears. The sound of hissing bubbles was overlaid with the soft purr of the circulating pumps. These sounds were more pronounced under the water.\n\nI pushed myself up on the lounge seat and stretched out kitty-corner so every part of my six-foot-six-inch, two-hundred- and forty-pound body was submerged except my face. Unfortunately, the automatic cycle of the powerful massaging jets came on. There was no way to turn them off so I just adjusted my position so one of the circulating nozzles worked on my aching back. It felt amazing but the quiet was consumed by the loud roar of the pumps. It was impossible now to keep my face at water level. The various jets turned the surface into a frothing mass of white water. I had to sit up or be drowned.\n\nAfter twenty minutes, the power jets turned off. The serenity of the hissing bubbles returned and I drifted off to a dream laden sleep. The only dream I remembered anything of, before being startled awake, was Mom riding my hard cock cow-girl style and Sylvia grinding her wet pussy on my face as she and Mom sucked face and molested each other's tits.\n\nAs I lifted my head to see what had woke me, I saw Julie, June and a friend, all naked, climbing into the tub. I had to sit up to give them room to submerge themselves. With the sudden intrusion on my dream, I hadn't even realized that my cock was as hard as a steel pipe and bouncing up above the waterline. Julie giggled as she found her spot and sat down. \"You sure know how to greet a woman,\" she said.",
        "The new girl covered her giggle with her hand as she sat down. I covered my bouncing cock with my hands, although I felt no embarrassment. She was much taller than the twins and  Her nipples were erect, either from the cold run across the lawn or sexual desire. I decided it was probably the former. She was pretty with thick auburn hair and big cobalt-blue eyes. She had freckles on her chest but none on her face. I don't think she even glanced at my face. Her eyes were locked on my cock bobbing up above the water.\n\nJune sat down beside me and said, \"I told you I'd bring home a friend. This is Alexis. She's on the Basketball team.\"\n\nThe new girl said, \"Hi Dex. I go by Alex to my friends.\" The inflection of her words implied that she wanted to be my friend and she already knew my name. \"I've heard talk around campus about your Halloween party. I'm sorry I missed it.\" She looked down at my cock-knob sticking out past my hands. June saw where Alex was looking and she reached down and pulled my hands off and started jacking on it. Alex watched June's hand slowly jacking my cock and then looked back up at my face and said, \"I've asked around if anyone knew you and could introduce me and what a surprise to find teammates June and Julie who actually live with you. I've been asking for weeks for them to introduce me but they said you were busy.\" Alex's eyes went back to June's hand on my cock. She looked back up and continued, \"I like tall guys. Taller than me. I'm six-three, so when I heard about you, I just had to meet you.\"\n\nJulie moved over to Alex and whispered in her ear. I couldn't hear any of what she said, but Alex, who was sitting across from me changed positions with Julie and moved her body against mine. She looked at June, who nodded and offered my cock to her. Alex took my cock in her hand with a very light grip and started jerking me off with a pressure so light that I almost couldn't feel it.\n\nJulie leaned across the tub and said, \"Grip it hard. It won't break.\" Alex looked at Julie and grinned as she took a firm grip on my cock and I groaned from the sensation. She stopped and then resumed when she decided that my groan was a good thing. It was apparent that Alex had limited experiences with sex.\n\nJune pulled her lips up to my ear and whispered, \"She goes bonkers when she gets her pussy licked.\" I grinned as I was sure June knew that from firsthand experience. June leaned in again and whispered, \"She likes her anus rimmed too.\" I smiled and nodded at June as she leaned back into her seat to watch Alex working on my cock.\n\nJulie said, \"Don't you think we'd all be more comfortable inside? It's cold out here, unless you're under the water.\" I agreed. Eating out Alex's pussy was going to be hard to do without her freezing out in the cold air. I stood up and my cock went to Alex's face level. She stopped stroking it and pushed her lips over the knob and slid on and off a few times, before she stood up beside me and measured herself against my height. She stretched up the short few inches and kissed me. I kissed her back and then we succumbed to the cold and all stepped out of the tub, grabbed out towels and ran for the house.\n\nWe dried off in the family room and then Julie grabbed my cock and pulled me toward my room. June and Alexis followed. June pushed Alex down on my bed on her back. In spite of just drying off, her pussy was glistening with her vaginal juices. I climbed up on the bed on my knees and separated her legs. She pulled up her knees and spread her outer labia and fingered her own clitoris. Her long, thin body pulsed several times as she groaned with each one.\n\nI crawled up over Alex's body to kiss her bullet shaped tits, which had flattened on her chest. She thought I was going to fuck her right there, with no preliminaries and she pushed her pelvic mound up to help. I pushed my hard cock down between her upper thighs with the knob pushed up to but not in her sex. I laid some of my weight on her and kissed her passionately. Her fuse was lit and she went nuts with passion. She was kissing me everywhere she could reach. Her fingernails, which thankfully weren't long, raked across my back and my ass. She was humping up her hips trying anything to get my cock in her.\n\nI pushed myself up with my arms and looked down into her glistening eyes that revealed that she was on fire. She lifted her head off the pillow to kiss me again but I pulled back slightly. She bared her teeth in a threatening fashion and I pushed myself down her body and sucked on her nipples. Her head flailed from side to side as she tried to hump up her hips to get my cock inside her again. She muttered, \"Oh fuck. My nipples are so sensitive.\" I took a few more turns around them with my tongue before pushing myself lower. She lifted her head to watch as she understood where I was going.\n\nWhen I dipped my tongue into her sopping wet pussy, she screeched and slammed her head back into the pillow. She started chanting, \"Oh my God. Oh my God. Oh my God. A guy has never done this to me before.\" as I lashed her sex with my tongue from clitoris to anus. She groaned hard as I tongued each end. Then I curled my tongue into a point and tongue-fucked her pussy. In mid, \"Oh my God,\" she let out a scream that would wake the dead.\n\nI felt a hand on my cock, which had softened a little as I concentrated on Alex's pussy. Then I felt lips push on my knob. Without looking, I knew it was June. She and Julie worked together to push me on my side so they could get more of my cock. I obliged and then resumed my attack on Alex's sex. Her hands went to her tits as June pushed down my shaft. I flexed my cock hard and June giggled. Julie crawled up the bed and displaced Alex's hands with her lips. Alex reacted with, \"Fuck. Yes.\"\n\nAlex's body began to tremble as tension built from her toes to her face. She ran her gnarled fingers through Julie's hair and held her in place on her right nipple. Julie didn't fight it and I flicked my tongue on Alex's clitoris and then rimmed her anus again. She went spastic and began throwing her hips up at my face. I pushed my index finger into her vagina and she was very tight, even for one finger. My first thought was, 'She's a virgin and that would change things.'\n\nI continued my attack and Alex's body shuddered in a powerful orgasm. I had to pull back when she started slamming her hips up at me. She was all over the bed. Her legs flailed and June had to abandon my cock so she wouldn't get kicked. Julie had to pull back from Alex's tits.\n\nWhen Alexis started to settle down, her breathing began to return to normal. I moved up beside Alex on the opposite side from Julie. She looked at me and lifted her head to kiss me. I kissed her back and then asked the question, \"Are you a virgin Alex? It's fine if you are. It just changes things a little.\" I smiled and continued, \"I guess it would be 'virgin' territory for both of us.\" Alex giggled at my joke.\n\nJune had no interest in this conversation and she moved to get her lips back on my cock. Alexis looked at June and said, \"Hey. That's mine. You can have it anytime you want.\" June giggled around my shaft and pulled back off. She slurped up the saliva that followed and spit it on my knob and rubbed it down my shaft with her hand. Alex looked at me and answered my question, \"Technically, I guess I am a virgin. I lost my cherry to my dildo though.\" She looked at June's hand slowly stroking my cock and continued, \"I guess I have to get a bigger dildo.\" She giggled and looked at me and said, \"I've never had sex with a real cock. I'm hoping that it will be better than my dildo.\" Both June and Julie started laughing and nodding.\n\nI wanted to fuck her as much as she wanted to fuck me. I found an added eroticism in her height. I rolled away and got to my feet beside the bed. June and Julie maneuvered Alexis up on her hands and knees and then moved her knees back to the edge of the bed presenting her ass to me. As inviting as her ass was, I would save that for another day.\n\nJulie instructed Alex on how this was going to go. It would be under her total control. I would stand motionless behind her and she would take as much of me as she wanted and as fast or slow as she wanted. I would be like a real live dildo. Alex gave a tentative smile and moved her ass back until my cock touched her sloppy pussy. She stopped there and looked back. I could see the tentative look in her eyes. She wanted this but she was scared.\n\nAlex pulled her body forward a few inches. She looked at June and gritted her teeth. I knew what she was thinking before she moved and I grabbed for her hips as she plunged backwards. She figured it was like jumping into cold water. Just jump. She looked back at me as if to say, 'why did you stop me. I just got up the nerve to go.'\n\nJulie leaned down and said, \"Just ease yourself on. If it hurts, stop and relax.\"\n\nAlex followed Julie's advice and it wasn't long before she was grinning back over her shoulder at me as she took all of me. She was anxious and started a fast fucking motion until she groaned to a stop. Again, Julie told her to relax and I could feel Alex do just that. She started again and this time the groan was not in pain.\n\nShe dropped from her hands to her elbows and looked between her hanging bullet tits to see herself getting fucked. She rolled her hips forward, trying to get a better view and that changed the angle. She groaned out, \"Oh fuck. Yes. Right there.\"\n\nI figured it was time to get engaged and I started rocking my hips slowly at first and then as she indicated she wanted more, I picked up the pace. Fuck, she was tight. Alex suddenly blurted out, \"Oh fuck, Dex. Make me cum. Please. Make me cum on a real cock.\"\n\nThe twins were on their knees sitting on their ankles and they both grinned at me. I smiled back at them and started knob-fucking her. She screamed and yelled, \"Oh ggawwdd. Yes. Fuck yes.\" The twins giggled as I jackhammered my knob into her pussy. The motion drove Alex down off her elbows as her torso dropped to the bed with her ass high in the air. This changed the angle again and Alex felt the effects. Her face dragged forward and back from my momentum.\n\nAlex was no longer contributing to the action. She was in delirium and it was a sight to see as she started building toward her orgasm. It was as if she was a balloon being blown up as her body steadily built tension. She moaned, non-stop on my thrusts forward and then replenished her air on the withdrawal.\n\nJulie reached around and started fondling my balls. I didn't think I would cum so soon, but the combination of Alex's tight pussy and Julie's fingers was having that effect and when I went back to deep penetrating strokes, Alex let out a scream as she basically detonated. She joined the action then as her hips went spastic as she slammed herself on and off my cock. I held her hips lightly to allow her to fuck my cock any way she wanted, but I was ready to hold her if she started off laterally.\n\nAlex screamed and screeched with every clench of her pussy on my cock as I plowed deep into her as my climax rolled over the crest and cum blasted up my shaft. That was a completely new sensation for her and she screamed and tried to pull away at first. Then she realized what was happening and yelled out, \"Oh my ggawwd. You're cumming in me. Oh Jesus. I hadn't even thought about that.\" The twins giggled and continued to fondle my balls as I gushed cum into Alex's pussy.\n\nHer spasming pussy milked my cock dry and then she collapsed, dragging her face and tits forward. The moment Alex came off my cock, Julie pushed her lips on. She lashed my cock clean of cum and Alex's juices with her tongue and took one trip down my still hard cock into her throat. I groaned hard from the sensation. Julie pulled off and June took her turn.\n\nAlex was gasping for air. Her ass was slightly lifted and cum was bubbling out of her pussy onto my bedding. I sat down on the bed with my legs crossed Indian style with my hard cock pointing at the ceiling. With long pauses in between, Alex's body would shudder and more cum would drool out of her.\n\nJulie came toward me and threw one leg across my legs and sat down in my lap with her arms around my neck. She kissed me with passion. She pulled back and kissed my nose and then each eye. She pulled her lips to my ear and very softly whispered, \"You did good, big bro.\" I smiled as I felt her hand encircle my shaft and guide it to her sex.\n\nAs Julie slid onto my cock, Alex rolled on her side and dragged her fingers through her sex to collect some cum and then she pulled her fingers to her mouth. Julie let herself drop onto my cock as she locked her feet on my lower back and pulled herself deeper. She groaned from the penetration as Alex said, \"Well, that's not as bad as I had been led to believe. It's a little bitter. Kind of earthy.\" She giggled and said, \"I can taste myself in there too. I could get used to this.\"\n\nShe smacked her lips with her tongue and dipped her fingers down to her sex for some more. June giggled and Julie moaned as I lifted her up and down my shaft. June rolled Alex on to her back and mounted her in a sixty-nine and started slurping the remaining cocktail of cum and vaginal juices from Alex's pussy as she pushed her own pussy down to Alex's waiting tongue.\n\nThe room was thick with moans and groans. Julie's passion was growing as evidenced by her fingernails digging into my shoulders. I was trying to get up for another orgasm but the pain from her fingernails was pushing it back. She was humping hard on my cock. In this position, there wasn't much I could add to the action, so, I rolled us over so Julie was on her back with her legs still locked around my waist. At least her fingernails let go of me. I grabbed her wrists and pinned them to the bed above her head. Her blonde hair spilled out around her like a golden halo. She grinned up at me and said, \"Fuck me Dex.\"\n\nI bored my cock into her and she flinched and caught her breath. I pulled back and went again. Her big round boobs surged up and down on her chest with my momentum. Her eyes went glassy as she stared at me. I doubted that she actually saw me. Her legs dropped off my back and I lifted my hips and thighs so she could pull her legs together to change the sensation. I spread my legs to the outside of hers and continued to plow deep in her pussy. Her vacant eyes went clear and she gave me a lusty smile as she joined the action. She began launching her hips up as I pushed down.\n\nThe sounds of passionate sex rose around me from June and Alex. I could tell they were both rising to an orgasm. I pushed myself to a plank position above Julie's torso and came up on my toes. My only contact with Julie was my cock jackhammering in her sex and she screeched as I slammed my cock into her. As firm as her big tits are, they were furiously flopping up and down on her chest. She looked up at me and smiled as she muttered, \"Ready or not, here I come.\" I picked up my pace and changed my attack to several knob-fucks then back to deep strokes. I watched in fascination at Julie's face and body as her orgasm built higher and higher and then rolled over the top. It wasn't a crushing orgasm like she so often had, but it was huge.\n\nThe look on her beautiful face as she eased into it was pure bliss. It was nothing like the look of teeth gritting pain when she was crushed by her orgasm. She just continued to look into my eyes as tears popped into hers. The tears remained in the confines of her eyelids and didn't break free and stream down her face.\n\nI had forgotten about my own climax. I lowered my hips back down to Julie's as she reached both hands up and gently caressed my face. Her eyes flicked back and forth to my eyes and she mouthed the words, 'I love you Dex.' I smiled and mouthed, 'I love you too' back at her. I bent my head low and kissed her and she pulled my head down, which pulled my torso down to her. She kissed me passionately.\n\nA deep groan came from Alex and then from June as they began humping their hips on the other's face. I pulled my stiff cock from Julie and rolled over to Julie's side so I could watch June and Alex experiencing their orgasms. They were both moaning and trying unsuccessfully to keep their tongues engaged in the other's pussy.\n\nJulie didn't even try to watch. She was still enjoying her euphoria. I couldn't resist her boobs and I ran a palm lightly over her hard nipples. She apparently didn't want anything to disturb her contentment as she put a hand over mine and held it there, unmoving.\n\nWhen June and Alex recovered from their orgasms, June rolled off Alexis and looked to see how we were doing. Julie laid unmoving beside me and then June saw my cock bouncing on Julie's hip. June smiled at me and then locked her eyes on my cock. I had been so close to cumming before and I wanted to get off now.\n\nJune came up on her hands and knees and scrambled across the bed and grabbed my cock and plunged it into her mouth. Alex watched June and then she rolled up on her hands and knees and maneuvered her face in close to June's. She kissed June on her cheek as she started her blow job.\n\nJune reluctantly acknowledged Alex's presence and pulled her lips off my knob and offered my cock to Alex. She grinned at June and then at me, as she tentatively pushed her lips to my glans. Then she pushed forward to take my fat knob into her mouth. She bobbed her mouth on and off, twisting her head around. Her hand flailed up and down my shaft. I wondered if Alex had more experience with blow jobs than she had with intercourse, but I didn't wonder for long, as Alexis' eyes bored into mine as she slowly swallowed my cock. I felt my knob push into her throat and she smiled around my shaft as I let out a long groan. She knew what she was doing.\n\nI realized that Alexis' inexperience with fucking had been self-imposed. It wasn't that she couldn't find a cock to put in her pussy; it was that she avoided it and there were ample reasons for that. She apparently gave blow jobs in lieu of fucking. Her reasons for that were her own: pregnancy, STD's, whatever. For whatever reason, she came here today, hell bent on getting fucked.\n\nWith Alex's skills I knew I wouldn't last long and so did she. She pulled back from her deep throat to breathe and then she went to work on the 'spot' with occasional trips back down my shaft. June sat back and watched with a look of awe on her face. Julie was still in a coma and was missing Alex's blow job exhibition.\n\nI closed my eyes to savor the glorious sensation rising in my groin. When I let out a groan, Alex head began furiously bobbing on my cock. Cum boiled out of my balls and rocketed up my shaft into her mouth as she retreated to lock her lips at my ridgeline. She may have known exactly when I was going to cum, but she had no idea what she was about to receive. Her eyes went wide as I poured cum into her with that first shot. She was in the middle of swallowing when the second shot exploded into her mouth. June knew Alex was about to be forced off my knob and she pushed her face in beside Alex's.\n\nAlex couldn't handle it and she pulled off as the second shot was in mid-stream and cum splattered across her face onto June's face. June flinched from the splatter and when that stopped as I reloaded, June pushed her lips on and took the next two shots. She could have swallowed fast enough to handle the rest of my load but Alex was ready and wanting more, so June pulled off as shot number four ended and Alex pushed her lips back on again. The diminished quantity of cum was handled easily and Alex finished me off with a tongue to the 'eye'. She pulled off my spent cock and grinned at me and then June. She had cum splattered across the bridge of her nose and across her cheek into her hair. She wiped her fingers along the cum-trail and stuffed them in her mouth and giggled.",
        "June noticed that gobs of cum clung to Alex's tits and she bent down and slurped the cum off, to Alex's delight. It was clear that Alexis was a pussy first, cock second kind of girl. That was fine with me. Many of the twin's friends were that way.\n\nJulie was just beginning to move and from her back she said, \"What did I miss?\" June and Alex looked at each other and burst out laughing. Julie lifted her head to look at them and said, \"What?\" I joined the laughter. Julie had a confused look on her face as she dropped her head back to the bed.\n\nAfter several minutes of recovery, we all got out of bed and went to my shower. It was close quarters with four people. Alex did most of the lathering up with her hands and she worked my cock as she stood up tall beside me to measure herself against my height again. She was at least six-foot three. I adored her bullet boobs. They stood out from her chest, tapering to points. The points were actually her erect nipples which followed the same contour as her breasts. The twins lathered her up and paid particular attention to those boobs. Any sex was with our hands and no one got off again, although my cock was succumbing to the sensations of three pairs of hands.\n\nAs we went into my bedroom, June came up beside me and whispered, \"You owe me. I gave up my blowjob to Alex, and Julie got that,\" as she pointed at my semi-erect cock. \"I didn't get any of you.\"\n\nI whispered back, \"It's a deal, but weren't you surprised at Alex's skills with her blow job?\"\n\nJune giggled and nodded her head and said, \"I was, after I saw how tentatively she started her hand job in the hot tub. I figured this would be a total training session.\" I chuckled and we retrieved our clothes and got dressed.\n\nAfter Alex got a few laughs as she proclaimed that she would be walking funny tomorrow and a promise from me that we could do this again sometime soon, she left. I heard her car start. The fan-belt squealed like a banshee as she backed out of the driveway. I asked what year was Alex in because she had a car. She couldn't be in the twin's class. June thought she was a sophomore but she could have been a Junior like me. She didn't look that old to me but it didn't matter.\n\nThe girls and I went out to dinner that night. The cupboards were bare. We went into town to a new restaurant that was getting rave reviews from the college kids. The d\u00e9cor was nice. Soft music played in the background. White linen tablecloths covered the tables and went all the way to the floor. When we were seated, the waitress came right over. To my surprise, it was Adrien from the diner who got into the spat with Reece and Sylvia. She wore a new name tag and her big tits strained against the buttons of her white shirt, the same as they did in her diner uniform. She must have been as surprised as I was. She recovered quickly and started in the same way she had with Sylvia and Reece.\n\nShe looked at June and then Julie and then me and said, \"Have you got a machine at home that churns out gorgeous women all day?\"\n\nI chuckled and said, \"I wish.\" She smiled and looked past the edge of the table to my lap to see if the twin's feet were in my crotch like Reece's and Sylvia's feet were that day in the diner. They weren't, but with the long linen table cloth, it was impossible to tell.\n\nAdrien started in on the twins, \"So, what do you two see in this guy anyway. He's not particularly handsome. As beautiful as you two are, you could do so much better.\"\n\nJune and Julie looked at each other. I could tell they were doing their silent communication thing and Julie deferred to June to respond. She looked up at Adrien and held her open fingers about a foot apart and said, \"Huge cock. I mean huge.\" June's response caught Adrien by surprise and she didn't know what to say to that. Her eyes flickered back and forth from June to Julie, who were both just smiling and nodding at her. Julie lifted one hand with her fingers curled in a circle with an inch or more of open air between her thumb and fingers. She lifted her hand to her face and shoved her tongue into her cheek several times coordinated with her curled fingers moving toward and away from her lips.\n\nAdrien's face was getting flushed. My guess is that it was from being put in her place by the twin's responses to her rude comments. It could have been from sexual arousal though. She looked to me and said, \"Can I take your order.\"\n\nWe hadn't even had a chance to look at the menus in front of us. I picked up my menu and said, \"It's our first time here. Can you give us a minute?\"\n\nShe grinned at me and said, \"Of course. Take your time. I'll be back in a few minutes.\" She left, but not before she took another look at my crotch. I revised my guess to sexual arousal being the cause of her pink, flushed face, neck and chest.\n\nThe twins followed her departure and giggled as they picked up their menus. Julie examined hers and said, \"Nice tits but she needs an attitude adjustment.\"\n\nJune giggled and as she looked at her menu, she said, \"I'll bet you ten bucks that she's back in the lady's room right now jerking herself off. She looked like she would burst into flames.\"\n\nWe put down our menus and waited for Adrien to return. In the meantime, I explained the details of my previous encounter with Adrien. I cut off the story when Adrien walked up to our table with a big smile on her face. Her nipples were on high-beam pushing against her tight shirt. Julie looked at me and whispered, \"Attitude adjustment.\" I laughed as Julie giggled. Adrien didn't get the joke and she set herself to take our order.\n\nWe ordered and then Julie ordered a bottle of Pino Grigio. It was kind of a joke because none of us were of age. Adrien smiled at Julie and wrote the wine order down. I was shocked when a guy showed up at the table with a bottle of wine and he made a big show of presenting the bottle to me for my inspection. I confirmed the name on the bottle. It meant nothing to me, but I nodded. He pulled the cork and poured a small amount in my glass and pulled the bottle back. I'd seen this ritual on TV and in movies. I lifted the glass and swirled it around, sniffed the aroma and took a small sip. I had no idea what I was doing and I was a little embarrassed as the twins just grinned at me. I nodded and set my glass down on the table. The guy poured three half-full glasses and set the wine on the table and disappeared with a bow.\n\nI watched him go and when I realized that the twins were gawking at me, I shrugged my shoulders and said, \"What?\" They burst out laughing which brought attention from others seated across the room. The tables closest to us were all vacant. I assumed we were too early for the rush hour.\n\nThe twins started talking about Alexis. Julie was saying how Alex had told her as she was leaving, how much she liked me and how gently you had treated her. She hopes that you call her sometime to hookup. June just smiled as she analyzed my reaction. I liked Alex and her height was intriguing as were her bullet boobs, but I was trying not to get encumbered in a relationship. Reece would be coming back in a couple of months and I was wrestling with what to do with her. If she wanted to continue our brief relationship from the end of last summer, I had to figure out what my reaction would be. I was on the opposite edges of complete sexual freedom and a full-time relationship. There might be something in the middle though.\n\nJune sat across from me with Julie beside me. As we waited for our food, June kicked off a shoe and she had her bare foot in my crotch. She giggled at my efforts to remain unaffected by her foot. She was trying to duplicate the story I had just told them about the first time I had encountered Adrien. I could feel the heat building in my face as my erection grew. With the long linen tablecloths, it was easy to make adjustments in my pants and my final adjustment was to unzip my pants and let my hard cock out. June really went to work when she realized that her bare foot was rubbing on bare cock.\n\nAdrien delivered our food and asked if we would like ground parmesan cheese on our pasta. We all nodded and Adrien went around the table with her cheese grater. When she got to me, she glanced down past the edge of the table. She couldn't miss the tent in the tablecloth with the movement of June's toes under the tent. She looked at June, who was grinning like a Cheshire cat at Adrien.\n\nAdrien went on and on with the cheese grinder and I had to tell her, \"that's enough\". She stopped but just stood there, staring down at my lap. June made sure that Adrien was seeing her foot movements and I let out a soft groan and so did Adrien. She had sucked her lower lip to her teeth. I looked up at her and said, \"Can we have three glasses of water, please.\" That broke her spell and she stepped back from the table and hurried away. Julie was sure she was heading back to the lady's room and we all laughed about that thought.\n\nWe ate our meals and mine was delicious. This was my new favorite restaurant. It was pricey, which would keep most of the college kids away. We finished the bottle of wine. It was obvious that the twins were a little more than buzzed and I was getting there. Adrien cleared the table and left dessert menus for each of us. When Adrien departed with a final load of dishes, June started looking around the restaurant. I wasn't totally surprised as she slid out of her chair and lifted the long tablecloth over her head and disappeared under the table. I knew exactly where she was going and Julie grinned at me with the same knowledge.\n\nI felt June grab my cock and a moment later she pushed her lips over the crown and I let out a groan as I involuntarily pitched forward in my chair. Julie giggled at my reaction. June lashed my cock with her tongue and worked my 'spot' until I was so hard it hurt. Adrien returned in the middle of June's blow job and asked if we would like dessert. To waste some time, Julie and I ordered tiramisu. Adrien noted June's empty chair and said to Julie, \"Would your sister like some something?\"\n\nJune chose that moment to start slurping on my wet cock and intentionally bang her head on the table. Adrien had a horrified look on her face and Julie picked that moment to say, \"My sister is already having her dessert, thank you.\" She grinned at Adrien who had recovered from her shock and decided to insert herself in the fray. She reached down to my lap and lifted the tablecloth to see June deep throating my cock. As June looked up at Adrien she slowly pulled back and Adrien's eyes went wider and wider as she saw the full dimensions of my cock emerging from June's lips. June spit saliva on my cock and grinned at Adrien as she pushed her lips back down to my pubic hair. Adrien groaned hard as she watched June drop down the length of my shaft. She was biting her lower lip again. Adrien looked at a grinning Julie with a look that could only be described as pleading. She didn't even glance at my face. She wasn't looking for my permission, she was pleading for permission from Julie and June.\n\nJune pulled back off my cock and grinned at Adrien as she continued to hold up the tablecloth. June aimed my cock at Adrien as if to offer it to her. Julie just grinned at her and nodded once.\n\nAdrien dropped the tablecloth back in place and in a deep, guttural voice, said, \"Lady's room, handicap stall, two minutes?\" Now she was talking to me. I understood. She wasn't about to suggest a hookup without getting permission from the girls I came in with. She got the permission and now her whole demeaner changed.\n\nI smiled up at Adrien and said, \"Give me five minutes to finish up here. Okay?\"\n\nHer eyes flitted between Julie and me and she whimpered out, \"But?\"\n\nJulie grinned at her knowing her concern that if I came in June's mouth, I wouldn't be able to get it back up to satisfy Adrien in the lady's room. Julie said, \"Don't worry. There will be plenty left for you. He takes care of our needs back to back all the time.\" Adrien grinned and started to leave. Julie stopped her and said, \"He really loves big tits. Have your shirt and bra off when he gets there.\" Adrien grinned and looked down at her erect nipples pushing on her shirt. She nodded and left.\n\nJulie spoke down to the table and said, \"Finish him off June. He has an appointment in five minutes.\" We heard June giggle and then she started a vigorous blow job. I glanced around us to see if anyone was watching although at that moment, I couldn't have cared less. June modified her attack from knob-gobbling to throat fucking until I groaned out, UUNNGGG,\" and slid my hips forward on my chair to launch my load. June pulled back to the ridgeline and took all of my load as she swallowed loudly. Julie was laughing at our terrible attempts to keep quiet.\n\nWhen June decided that I was done, she slurped out the post-cum from the 'eye' and then lashed my cock to clean it. She pulled back with a loud smack and struggled to get my hard cock into my pants. She started to zip me up but I fended her hands away and carefully did it myself.\n\nJune moved back up into her chair and Julie tapped her watch indicating it was time to go. I pushed my chair back and stood up just as a young lady delivered two tiramisus. I pulled out my belt and let my cock push up under it. June grinned and said, \"I'll eat your dessert.\" I smiled and nodded as I headed for the rest rooms.\n\nI passed by the men's room and listened at the lady's room door. It was quiet, so I pushed open the door and scanned the room. There were several stalls with walls down to the floor. The last stall was bigger and had a sign on it that read 'Handicapped'. The door was closed but not latched. I pushed it open and Adrien was sitting on the toilet completely naked. My cock pulsed in reaction to her nude body. Her boobs were even bigger than I imagined when unencumbered by her bra. Her nipples were slightly darker than her tits and were small compared to the size of her tits. She was fondling them when I pushed the door open.\n\nI unzipped my pants and unbuckled my belt and let my cock flop out at her. Her eyes went wide and she mumbled, \"Fuck.\" She pulled her eyes up to mine as if asking for permission from me this time. I nodded and let my pants fall to the floor. I kicked off my shoes and stepped out of my pants and kicked them off to the side. I closed the door and locked it before stepping up to her. She gripped my cock hard and I flexed my cock at her hand. Again, she mumbled, \"Fuck.\"\n\nAdrien looked up at my eyes and pushed her lips over the knob and started jerking me off with both hands. She pushed her lips on and off my knob as her two-fisted hand job changed to a one fisted hand job as she cupped my balls in her free hand. I didn't take my eyes off hers, as she looked up at me, until she steadily pushed her lips down my shaft, displacing her hand. I broke eye contact as my head fell back as I groaned hard at the ceiling. Adrien's skills were apparent. She gagged about three-quarters of the way down. She tried again and gagged again. She pulled off and hawked a wad of saliva into her hand and then ran that hand down my shaft.\n\nShe stroked my cock with both hands again and said, \"Fuck me. Oh my ggawwdd, I want that monster in me now.\" Her words were a statement but there was a hint of a question in her delivery. She just stroked my cock with both hands until I nodded. She stood up and pressed her big tits to my shirt clad stomach with both hands gripping my cock. She maneuvered me around to sit down on the toilet. I went where she directed me. The moment my ass found the toilet seat, she was climbing her legs past my knees and sat down on my thighs. She pulled my cock down and let me pull her on to it. She shoved one hand to her mouth to squelch a loud groan and the words, \"Oh my fucking gggawwwdddd.\"\n\nAdrien began slamming her pussy on my cock. I did what I could to add to the action but it wasn't much, so I concentrated on flexing my cock as she pushed herself on. She began twisting her hips and tilting them from side to side as she threw her arms around my neck to give herself more leverage. I fondled her big tits and tweaked her nipples as she rode my cock.\n\nAfter cumming in June's mouth only minutes ago, I wasn't close to a climax. Adrien was giving every indication that she was about to blow. Adrien loosened her grip on my neck and leaned back to face me, only to pull in again. She locked her lips on mine as she continued driving her sex on mine. When she broke our embrace, the look on her face told me she was moments away.\n\nIn anticipation of her orgasm, Adrien shoved a hand to her mouth again and her body tensed and she emitted another stifled scream as her body released and her pussy was clenching hard on my cock. Her face dove into my neck as she clung to me as she tried to keep her fucking motion going but she had turned spastic and any coordinated effort was gone. She was just bouncing around on my cock. I searched to see if my orgasm was anywhere on the horizon, with no luck.\n\nWhen she started to recover, Adrien groaned out, \"Oh fuck. I haven't had an orgasm like that in a while. Shit. What a glorious fuck that was.\" I smiled at her and she mashed her lips on mine again and searched for my tongue with hers.\n\nThe door to the lady's room opened and Julie walked down the bank of stalls and stood outside ours and said, \"You guys have to finish up soon. Management is buzzing around because we're just sitting there taking up a table. They asked if we had seen our waitress. We played it dumb.\"\n\nI said, \"We'll be out in a minute.\" We listened for Julie to leave and the door to close. I said, \"You'll have to come up with an excuse for being gone so long.\"\n\nAdrien laughed and said, \"No problem. I've got it covered. I'll just blow the manager after hours.\" She giggled and said, \"I'm just kidding.\" I wasn't so sure.\n\nAdrien pulled off a wad of toilet paper and wiped her pussy dry and then bent down and sucked my cock deep in her mouth and lashed her tongue around my semi-erection. She pulled off and said, \"You didn't cum.\"\n\nI said, \"Don't worry about it. I've got two insatiable gorgeous ladies to take care of me.\" She grinned with a slight hint of jealousy and pulled her work clothes back on. I helped her with her bra and then grabbed my pants off the floor and pulled them on, being careful to zip up. I put on my shoes and we headed for the door.\n\nAdrien checked herself in the mirror and then pulled open the door to see if anyone was around and then told me I could come. Adrien went to the kitchen and I went back to my table. June and Julie were staring at my crotch as I came in and sat down. Adrien brought the check and looked a bit sheepish as she handed it to me in a leather booklet. I handed her my credit card and moments later we were heading for the car.\n\nI tossed the keys to June and climbed into the back seat with Julie. June said, \"Did you give her a good tip?\"\n\nI said, \"I gave her the whole thing.\" June giggled as she started the car. Julie was busily getting my pants down and as soon as she did, she climbed over my thighs and held up her skirt so I could see that she had discarded her panties at some point. She didn't waste any time sliding her sex onto mine. I pushed my hands up under her sweater and under her bra and tweaked her nipples. Julie groaned from the two-pronged attack. She lifted herself up with her thighs and let herself fall back down. When we started, my cock was semi-erect, but by the time Julie made one pass down my shaft, I was hard as a steel pipe.\n\nJulie whispered, \"Fuck. You're hard. Was she a good fuck?\" I nodded and she went to work on me as if to prove that no one was as good a fuck as she was. I released her tits and grabbed her ass cheeks and drove her on and off my cock. In a short while, I could feel my balls churning. Julie was gasping for air and I could tell her thighs were getting tired as she started to slow down. Then she put her head down on my shoulder and groaned deeply as her orgasm crushed her. Her pussy clenched on my cock and that sensation pulled me over the top of my climax and I poured several powerful streams of cum into Julie's pussy. She groaned with each one as she tried to continue her fuck, but her movements were spastic and she couldn't muster a coordinated effort.",
        "I lifted her up and down by her butt-cheeks until I was done and her pussy stopped clenching. She pressed her body to mine and wrapped her arms around my neck and stayed right there until June pulled into the driveway. June put the car in park and turned in her seat to look back at us. She said, \"It figures, I'm the only one who doesn't get off, again.\"\n\nJulie giggled into my neck and said, \"I promise. You get it next.\"\n\nWe got out of the car and I walked to the front door with my softening gooey cock swaying in the cold air. I dropped my pants in the foyer and headed for my bedroom. June and Julie followed me to my bathroom and June turned on the shower. We stripped naked and we all piled in. June was eager to get her hands on my flaccid cock to wash Adrien's and Julie's juices from it. I wouldn't have been surprised if my cock rose with June's attention but it didn't and June pouted because it wouldn't.\n\nWe dried off and went naked to the family room to watch some TV. June kept a close eye on the state of my dick. We watched an episode of one of our favorite TV series and then went to bed. I half expected that June was going to get her turn somehow before she went to bed, but she and Julie thundered up the stairs.\n\nI was beat as I slid in between my sheets and consciously relaxed every muscle and I was asleep in minutes.\n\n \n"
    ],
    "authorname": "BigZeke13",
    "tags": [
        "twincest",
        "oral",
        "cunnilingus",
        "lesbian",
        "group",
        "blowjob",
        "orgy"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/dex-and-the-twins-at-college-ch-13"
}