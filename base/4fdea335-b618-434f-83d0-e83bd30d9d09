{
    "title": "Nemesis Visits",
    "pages": [
        "Welcome to my latest story. It is quite lengthy but I hope you'll find it worth the effort.\n\nThis is a tale of love and romance. Max is a cruel, heartless man; a misogynist, a sexual predator and a user of women whose twisted and selfish view of love is challenged by a divine punishment. Can the Goddess's retribution change him and teach him what it is to love women and help him become a real, complete person?\n\nOh, and in case you're worried by the paragraph above, this story is in the right category! (This has been a difficult story to categorize. It was previously published in \"Romance\" but I feel that the change of category is appropriate.)\n\nWhilst this is not exactly a sequel, Max first appears in my previous, three part story 'Such a Little Thing', and this tale picks up his life some ten years later. This story also features Amber, the heroine of 'Such a Little Thing', and inevitably this story therefore contains spoilers for this earlier tale but also shows what happened to Amber and Milla. For those of you who want to read it first, 'Such a Little Thing' can be found here: .\n\nThanks, as always, to my editor, Winterreisser, for his diligent editing and suggestions and to Kat for her comments and feedback as this story developed.\n\nI wish you happy reading and, as ever, feedback through comments and/or votes are very welcome.\n\nCopyright (c) 2015 ScattySue\n\n====================================================\n\nPROLOGUE\n\nOn the low rise of a small grass-covered hill on the edge of Elysium, with unobtainable Olympus rising in the far distance, the tholos stood. The gleaming white marble of the circle of Ionic columns, supporting the red-tiled roof, glinted in the clear, bright sunlight as a perfect cooling and fragrant breeze played over the greensward, nodding the delicate flowers that spangled the grass.\n\nIn the centre of the circular temple, the air thickened and a vision of absolute beauty condensed into being as the Goddess manifested herself, her exquisite form clad in the shimmering pale gold of her diaphanous robe. The three women waiting there bowed and made obeisance before the divine beauty now in their midst.\n\n\"Speak to me, daughters of Nyx,\" commanded the Goddess.\n\n\"Oh Goddess, you demanded of us to know the complaints against the man and we fear that they are legion,\" Eris replied.\n\n\"Show me the nature of these grievances, sisters,\" the Goddess instructed.\n\nOizys stepped forward slightly, and made passes with her hands; the air in front of her shimmered and a vision appeared: \n\n<blockquote>A pretty, red-haired young woman, her face puffy and red from crying that continues still. The woman is speaking in sad, angry tones, 'The bastard, he dumped me for Jeanette without so much as a \"Dear Amber, I'm really sorry but...\" Oh fuck it's so unfair, I love him so much and I want him back...' </blockquote>\n\n\"Amber was the first girl,\" Oizys said, \"It was her first year at University and she fell deeply in love with him and he led her to squander her time there before he spurned her. Fortunately, her uncle helped and then she met and fell in love with Camilla who ran the Caff\u00e9 next door. However, he abused her when he discovered this love...\" The vision shifted...\n\n<blockquote>It is a green place with trees and grass and there he is, tall and strong, handsome with his dark hair and dark eyes, screaming at Amber, '...you're nothing but a fucking rug-munching perverted slut! God, I was lucky I got rid of you!' </blockquote>\n\n\"Amber was protected and saved by Camilla, who stood up to him, defending their love and, seeing what he had done, the woman Jeanette also rejected him. This saved Jeanette, but not others...\" A series of images appear, quickly one after the other. \n\n\"There was Ruth, an older woman so flattered by his attention and promises...\"\n\n<blockquote>A dark-haired woman sits tearfully by a phone 'Oh please let him call. He promised he loved me last Saturday night when he took me home and he hasn't called since...' </blockquote>\n\n\"And Leanne, the woman he persuaded to leave her partner so they could be together... for all of six weeks before he tired of her...\"\n\n<blockquote>A tall, thin woman, her make-up streaked by the tears that still fall as she talks to her friend, 'Why can't he at least text me and tell me why he left before I woke up'</blockquote>\n\n\"And Claire, a sweet girl, just nineteen, who was determined to save herself for the man she would marry, the man he promised her that he would be...\"\n\n<blockquote>A petite blonde woman, bleary-eyed and speech slurred by alcohol saying, 'Perhapsh I sh... should have known better than to believe him after wa... what he did to Julie, dumping her as soon as she'd, she'd sh... slept with him. Oh God, jusht don't let me be another notch on, on his bedpost, let this be a mishtake... he said he really wants to marry me...' </blockquote>\n\n\"Enough, Oizys; we see he brings much misery and is faithless and cruel,\" the Goddess observed.\n\n\"My Goddess, this is but the start of his wickedness,\" Apate said, \"his deceit and cruelty are greater than Oizys has yet shown.\" She now swept her arms before her and new visions appeared...\n\n<blockquote>The man is older but no less handsome and charming as he stands close to the young woman, his hand resting on the wall behind her as he leans in. 'Come on Marie, this conference is dull: let's have some fun.'\n\n'Oh Max, I don't want to... I have a boyfriend...' she protests nervous, afraid.\n\n'He doesn't need to know; what happens at training conferences stays at training conferences, remember? Anyway, your internship is up in a couple of months, and you know I've to write an appraisal for your report... It'd be a shame to jeopardise your future with the company after all your hard work...' She bows her head biting her lip. After a moment she looks up and gives a reluctant nod before allowing herself to be taken under his arm and led to the hotel's lift and up, to his room...</blockquote>\n\n\"And not just deceit, oh Goddess,\" Eris now spoke and the air swirled, presenting a new scene...\n\n<blockquote>The man sits talking with two other men, evidently his friends, around a table scattered with glasses and bottles. 'Anyway, after Nina saying she didn't want to sleep with me, the stupid bitch left her phone in my car and I found it when I got home. Of course, I did the gallant thing and phoned her and said I'd drop it round the next day.'\n\n'You feelin' alright Max? That don't sound like your usual style of thing.'\n\n'Ah, the thing is, Jack, I decided to have a little look in her phone to see if she had any, you know, cheeky selfies on it but I couldn't unlock the phone: the cunning bitch had a passcode set.'\n\n'So you, like, just gave it back?'\n\n'Fuck, no! I took the memory card out and put it in my laptop and, bingo, fucking pay dirt! Look.' He holds his phone out to the other two and on the screen a woman dances to barely audible music, swaying her body and arms. Slowly and rhythmically she unbuttons her top and casts it aside. Her short, tight skirt is next and she dances in her underwear before stripping off her lacy bra, letting her large breasts with their dark aureoles sway and swing as her dance continues. She turns her back as she slides her panties down, revealing the smooth, firm and rounded cheeks of her bottom as she sways her hips. The viewing men nod in appreciation, and Jack gives a low whistle.\n\n'Fuck me, Max, I wouldn't kick her out of bed even if she was on fire!'\n\n'Just wait...' Max replies and the woman turn to the camera to show her hairless sex as she pushes the panties down. She tries to raise a leg to remove the panties and stumbles, hopping to try and regain her balance before tumbling out of shot. A few moments later she is on her feet again, naked and laughing as she reaches for the camera, her hand blacking out the screen.\n\n'So you kept a copy of her little striptease to jack off to; nice.'\n\n'Bollocks to that, Joe. She might be cute but payback was needed for that little cock-tease.'\n\n'What did you do?'\n\n'I put it on the Internet under \"Hot bitch's epic striptease fail\" and sent the link to a few of her mates from an anonymous email account. Shit, you should see some of the comments, tearing the bitch to shreds...'\n\n'Max, weren't there something in the local newspaper about a woman nearly killing herself 'coz of having a nudie video about her being uploaded and the abuse she got?'\n\n'Yeah, but I'm pretty sure it wasn't this Nina bird... I mean, I would have heard... probably. Anyway, it wasn't me that made all the horrible comments and they were the problem really...'</blockquote>\n\n\"It seems that there is nothing these mortals create that cannot be turned to ill use,\" observed the Goddess. \"Is there more to show of this man before I decide on his fate?\"\n\n\"Alas, yes, O Goddess,\" the third sister, Oizys, replied, \"and perhaps the worst...\" Her hands conjured a final vision...\n\n<blockquote>The black-haired woman has the loose, uncoordinated movements of someone drunk as she tries to push him back and break the kiss. His hand travels up her leg, slipping under her short skirt, rucking it up to reveal the bright red panties beneath. Lust gleams in the man's eyes.\n\n'No, Max, not this...' she pleads.\n\n'Don't be such a prick tease, Cindy; you've been leading me on all evening and now it's time for me to collect on your offer...' his hand cups her vulva, squeezing the flesh of her sex through the panties. 'You've got a nice, fuckable body and so obviously wanted to get laid so who am I to turn down a woman in need of the services of my cock?' he leers as he begins unbuttoning her blouse with his other hand.\n\n'No, Max, I don't want to have sex, not on our first date.'\n\n'Ha, you think this was a date, you slut.' His hand grips her face as he begins tugging down her panties. She struggles but he snarls at her, 'Just lay still you little cunt and you'll enjoy it and not get hurt.' </blockquote>\n\n\"Enough, I do not need to see yet more of the violence practised against out mortal sisters.\" With a wave, she banished the shimmering vision. \"I assume he was not punished by mortal hands for this misdeed?\"\n\n\"No, Goddess; the woman Cindy had been drunk so none would take her complaint seriously, such is the uselessness of mortal justice, heaping mockery and contempt on this poor woman's misery,\" Oizys replied with anger.\n\n\"No, sister, condemn not the justice of mortals for they lack our omniscience and have only their feeble senses to discern the truth. Condemn, rather, this man for his deeds and his belief that women are but toys for his amusement and abuse.\"\n\n\"So, O Goddess, you wish him destroyed?\" Eris asked, a vengeful gleam in her eye. The Goddess pauses a moment, her perfect chin turned and raised as she contemplated briefly.\n\n\"No,\" she declared finally, \"I desire retribution... I want him to learn, to understand what he has done and I want him punished. Summon your eldest sister to me, for there is a task I wish her to perform...\"\n\n<center>- - - - - - - - o o O o o - - - - - - - -</center> \u2003\n\nCHAPTER 1: It's a Man's World\n\nThere is a spring in my step this Wednesday morning as I head to Jason's office for the meeting: yesterday I finally managed to give Marie, that clingy intern, the brush off. For fuck's sake, we screwed once at that training conference and since then she's been behaving like we were fucking engaged or that I owed her. Still, she's history now.\n\nJason didn't say what the meeting is about so I guess it's to thank me for the mega-sharp deal I closed out last week; I mean, sure, the investors got burned a bit but it made us a fucking fortune! My bonus should be good this quarter.\n\n\"Hi boss, you wanted to see me?\" I say as I enter Jason's corner office with its awesome view over the Thames.\n\n\"Hello, Max, come in,\" he replies as he looks up and I can see at once that something's not right. Crossing the wide expanse of plush cream carpet I sit in the chair across the desk from him.\n\n\"What's up?\" I ask.\n\n\"I'll come straight to the point,\" he says using his 'I'm your boss' voice; this is not a good sign. \"It's that intern, Marie O'Connor: she's made a complaint about you, saying that at the three-day training conference you basically threatened her with a bad performance report unless she slept with you. Is it true?\"\n\n\"Well, I may have suggested that it was a good idea to keep me sweet as I was responsible for writing her report but she seemed well up for it anyway. I never heard any complaints while we were shagging, neither,\" I grin as I glance down at my crotch, \"but then me and my partner here always give a girl satisfaction!\"\n\n\"For fuck's sake, Max, this isn't a joke! This is sexual harassment; if she stands by this complaint you could get fired for gross misconduct. Capisci?\"\n\n\"C'mon Jase, don't go all Godfather on me here. You were in the same position with that secretary after the Christmas party, if I recall...\" I left that hanging for a moment. \"The girl into whose coat I put your wallet and that USB memory stick, full of lots of confidential company financial files, before tipping off security just before she went home...\"\n\n\"Fuck. Okay, yes, you got her sacked on the spot and arrested before she could complain about me. Fine, I owe you. Let me think.\" Jason is quiet for a few moments. \"How good is her performance?\"\n\n\"Pretty good; I mean she's no hotshot but steady and reliable. She doesn't make big bucks on deals but she loses very little, practically nothing recently.\"\n\n\"Shit, that doesn't help. And I bet you were going to crap all over her in your appraisal... don't bother to deny it, I know you too well and your face admits it anyway. Hmmm...\" He turns and types on his computer keyboard and I try to be patient. Jase and I are mates, sort of, but I know that if it weren't for helping him with that secretary he'd have let the wolves have me; after all, it's what I would have done in his position. Finally, he turns back. \"Okay, she's got six, seven weeks left of her internship so the decision on her future is due towards the end of next month. Hmm... okay. Now, she won't ever have access to the exact figures used to assess her performance so I've, er, adjusted them: I gave others the credit for some of her better deals and dumped a number of the shittier losses against her name, so she won't now make the grade to be employed but, and you've got to listen here, Max, you've got to let her know, show her, what a wonderful write up you're planning on giving her. Do a draft and show it to her before lunch. I've got to meet with her this afternoon and I'll make sure she knows that, if she complains, Ted Thompson will be doing her review; she'll know what he thinks of interns and the kind of appraisal he'd give her. Got it?\"\n\n\"Yeah, I got it. Thanks, Jase; I owe you several large drinks after work.\"\n\n\"Too fucking right you do. Still, with the bonus from that deal with those charity investors last week you might just be able to afford my bar tab! Go on, get out.\" I stand and head for the door. \"And Max, write that girl's fucking glowing appraisal as soon as you're back at your desk.\"\n\n\"Will do, boss. And I can also tell her I had to break it off with her so what I wrote didn't seem like favouritism; neat! The bitch will totally accept that. See you in the pub at six, mate.\"\n\n<center>- - - - - - - - o o O o o - - - - - - - -</center>\n\nCHAPTER 2: The Dream\n\nI dreamt that I awoke in the middle of the night, while it was still dark, with my head aching and my mind groggy: Jason had collected big time on my debt after that slut-bitch Marie totally caved in and withdrew her complaint. Ha, she's still going to get the flick with the figures Jason's lined up for her. I noticed that not only did my head ache but my chest also felt heavy as I breathed, as if I were coming down with a chest cold. What I knew for certain was that I needed desperately to piss.\n\nI climbed unsteadily out of bed and staggered, naked and with eyes half closed, to the bathroom. My balance had gone; I kept stumbling and toppling forward as if being pulled so that I had to fight gravity. I dropped down to sit on the toilet pan, eyes closed and half asleep. I felt strange... maybe I really was sick, I thought. I relaxed my bladder, letting gravity take care of the aiming, and heard the plash and gurgle of my piss falling into the water below; even this felt odd and there was something different in the tone of the splashing water. My flow ebbed at last and I reached down to shake the drops from my cock and my hand encountered... nothing! I groped and, though there was the brush of dense, short hair, I could not locate my cock nor, in my rising panic, my balls. My eyes were open but the room was too dark to see anything. I lurched to my feet and over to the wash basin, my hand groping for the pull cord to turn on the light above the mirror. With a tug, the light flared and I was momentarily blinded. I blinked once, twice and yelled, \"Oh fuck!\" That my voice sounded strange in my own ears barely registered over what I could see in the mirror: there, in place of my reflection, was a woman's face, shoulders and tits. She was pretty, in a homely way: her hair was as wavy and dark as mine but longer, almost touching her shoulders; her eyes the same deep brown as I have; her tits were smallish, but with a little sag, suggesting she was in her early thirties... like me. I looked down between the small tits and over a soft, slightly rounded stomach to the dark furred and cock-less mound between broad hips. There was a feeling of falling weightlessness as all turned black...\n\nI recall that bizarre and vivid dream with surprising clarity as I lie, dozing with eyes closed, here in my gradually lightening bedroom. I have, like anyone I suppose, had weird dreams from time to time but dreaming that I'd turned into a woman was a new high point in strangeness. Imagine, me having tits! I smile as my hand moves up to my chest and freeze as my hand counters a swelling, one that is part of me as I can feel the touch of my hand. There is a cold, sick feeling in the pit of my stomach as with a trembling hand I peel back the duvet to reveal the same tits that I thought I'd dreamt last night, the same hairless stomach, the same full hips and thighs, the same dark triangle of pubes between my legs, the same absence of cock and balls...\n\nI yell, though with my new voice it sounds more like a scream; a pathetic, girlie scream. In my head runs a desperate mantra as I feel my sanity slipping: \"This is just a bad dream, a nightmare; just a mad, horrible dream and I need to wake up...\"\n\n\"You are awake I assure you.\" The voice, a melodious alto that was at once sensual and deeply menacing, came from the deep shadow in the far corner of the bedroom. I stare as the shadow seems to billow and eddy, becoming a flowing robe that swirls continuously across the perfect form of the most gorgeous woman I have ever seen, revealing than concealing glimpses of her flawless figure. Like her voice, she is both exquisitely beautiful and utterly terrifying and some primal part of my brain is screaming that I am in deep, deep trouble.\n\n\"What...\" is all I can manage hoarsely, my throat raw from the scream. I swallow. \"Who are you..?\"\n\n\"I am Nemesis, eldest daughter of Nyx, and I am sent to you at the behest of the Goddess to work her will upon you.\" Somehow it doesn't cross my mind for a moment to doubt or challenge the truth of this.\n\n\"Nemesis as in punishment or vengeance or... destruction?\" I croak with a quavering voice. \"Nemesis as in me,\" she replies with dark amusement. \"The Goddess has ordained me to bring retribution for your behaviour; whether that will be your destruction is in the hands of the Fates... and in your hands too, perhaps.\"",
        "\"Goddess? Ordained? Retribution? What?\" I am practically gibbering.\n\n\"Yes, the Goddess, though you do not know her, many do and under many names. She has decreed punishment for you, Maxwell Thomas... this punishment.\"\n\n\"What? Punish me by turning me into some random, freaky fucking woman?\" The fear inside me is bubbling over into anger as a defence against madness.\n\n\"There is nothing random or freaky about the woman you've become: the Goddess has allowed for you to be blessed with the second X chromosome that you might have had if a different sperm had fertilized your mother's ovum. The woman that you are today is the woman that you might have been, nothing more, nothing less; you are the -- shall we say, Maxine Thomas? -- that your parents might have raised had they birthed a daughter.\"\n\n\"Blessed with an X chromosome? You mean cursed, cursed by this Goddess to be some dowdy, repulsive, freakish cow,\" I wail, the tumult of emotions churning inside me now sliding from anger into tearfulness.\n\n\"Perhaps you must begin by expanding your understanding of what and who is beautiful and attractive, Maxine.\"\n\n\"What, like start fancying men? Is that part of the Goddess's blessing too, that I'll now be attracted to guys?\"\n\n\"The Goddess did not require this change. Are you attracted to men, Maxine?\" she asks and, as I stare at her, the swirling, eddying robe of shadows momentarily leaves her almost naked, her perfect and utterly desirable figure on view.\n\n\"What? No, of course not, I'm attracted to women... oh, shit, you've made me...\" She gives a small smile.\n\n\"Are the words, 'nothing but a fucking rug-munching perverted slut!' what you're looking for, Maxine?\" The words she uses reach back across the years and I recall her, and that skinny lesbian girlfriend of hers who slapped me.\n\n\"This is about her, isn't it, about Amber Taylor, for dumping her and calling her names when she turned into a dy... a lesbian.\"\n\n\"It's true, it is about her... and about Camilla, that 'skinny lesbian girlfriend'.\" What? Shit, she can read my fucking mind! Nemesis' look is cold and hard as she continues, \"However, it's also for Cathy, whom you deceived; for Nina, the girl you humiliated for rejecting you, hurting her so deeply she tried to kill herself; for Leanne and for Ruth and for Harriet the secretary you got sacked. Shall I continue?\" she asks but doesn't wait for my reply. \"For Debbie, Claire, Jane and, of course, Marie the Intern... and Cindy, the woman that you...\" she pauses, staring at me, and I swallow nervously, \"...raped.\"\n\n\"I didn't... she wanted...\" I stammer before the protests dry in my throat.\n\n\"And for those countless other women that you treated with contempt, abuse, as objects for your gratification or just casual sexism. These are all reasons and this is the Goddess's punishment.\" I sag, defeated and depressed. I cannot believe that this is real yet cannot pretend it is a dream.\n\n\"And how long has the Goddess decreed for this retribution and punishment?\" I ask flatly.\n\n\"She has not done so: I will return when she bids me do so, no sooner. And now I will leave you.\" She starts to turn and her shadow robe thickens around her.\n\n\"Wait!\" I cry out in sudden panic, \"What about my job, my bank account, ID, clothes even... How will I live?\" She pauses and closes her eyes as she remains motionless for a few moments. \n\n\"It is decided,\" she says and her hand traces a complex shape in the air. \"There is clothing in the wardrobe, a birth certificate, documents and money on the table. And you may continue to live here for the time being; until, say, the third new moon. Unlike you, the Goddess is not cruel.\"\n\n\"But what about my job?\"\n\n\"They employed Maxwell Thomas, not Maxine; you must find work for the person you are now.\" She withdraws into the corner and the robe flows out to become shadow once more until just the pale suggestion of her face remains. \"Maxine, I will not bid you farewell or good luck for what happens afterwards is down to you and the choices you make henceforth. However, try to see this as a new chance, not a curse: perhaps then you can succeed and make amends for what Maxwell has done...\"\n\n<center>- - - - - - - - o o O o o - - - - - - - -</center>\n\nCHAPTER 3: Girl Alone\n\nI wake slumped on the kitchen floor, my eyes gummy and blurred, my head thumping and a foul taste in my mouth. The smell of vomit and piss invades my nose and as I finally manage to blink my eyes into focus I see the source of the smell on the floor and across my body; my still naked, still female body. I am filthy and I stink. The shaft of mid-morning sunlight shining on me doesn't make it look any better.\n\nThe empty vodka bottle attests to the source of my symptoms and the mess and, as I pull myself painfully into a sitting position on the cold tiles of the apartment's kitchen area, I realize that hours of drinking followed by even more hours of unconsciousness have cost me a whole day and night as I sought refuge for the nightmare that my life has suddenly become. \n\nSitting, blinking blearily in the bright light, I stare down at my cursed body and begin to understand that my future is down to me, that I have a choice, as Nemesis had foretold. There are bottles of whisky and rum and gin and brandy and who knows what else in the apartment, enough for several more days of oblivion, maybe permanent oblivion if I end up drinking myself into a coma or choking on my own vomit as I might have done last night. Or there is the shower and getting cleaned up, dressing in the women's clothes that have appeared in the wardrobe, stepping out and seeing if I can live... \n\nI place my hand on the floor to try and stand, and it presses into the puddle of cold puke. Cleaning up this mess probably comes before stepping out. I make it to my feet and the priority list changes once again: I need water and painkillers before anything else. I take a few unsteady steps and lean on the worktop by the sink before taking a pint glass from the cupboard to the left and filling it from the filtered water tap. I use the first mouthful to rinse my mouth, spitting it into the sink, and then take a long drink. \n\nI revive a little, though the headache remains. Painkillers are in the bathroom cabinet and I wonder if my balance is up to the long trek across open floor. I discover that the toppling sensation I experienced in my dream-that-wasn't-a-dream is because of the weight of these tits, my tits, I guess, though the piss and puke on the floor aren't exactly helping at the moment either.\n\nNo, I can't call them tits, it feels... wrong; it's what I called them before, what Max called them. I recall that it was almost always the first thing I looked at on any girl or woman: 'nice tits' or 'gorgeous, massive tits' or 'what a feeble pair of tits'. Well, now I have, what, 'disappointing tits'? No, I can't think of them as 'tits'. Breasts? A bit too medical. Wangers? Jugs? Knockers? No, no, no, absolutely not. Boobs? Yeah, I can go with boobs.\n\nFuck, my head hurts: I need those painkillers and I look down to see where to place my feet. Shit, my feet are covered with vomit and I cannot walk across the carpet in this state. I'm going to have to clean this up first.\n\nIt takes half an hour with a bucket and cloth that, luckily, I find under the sink. Of course, I've never had to clean up in this apartment: that's why I pay a cleaner, after all. As I move and bend and stretch I am constantly startled by the feel of my altered body -- the way my boobs bounce and swing, the width of my hips that my hands bump into each time I lower my arms, the absence of a cock between my legs...\n\nFinally, I rinse my feet in a fresh bucket of water and dry them as best I can on the wrung-out cleaning cloth. I stand and survey the now clean floor and find an unexpected feeling of pride in the shining tiles. It occurs to me that my first useful deed as a woman was to clean up; perhaps this Goddess has a sense of irony. \n\nI look across the kitchen island unit into the rest of the open-plan apartment and it appears, well, slightly strange as if the perspectives have changed. The worktop is different too and I wonder if I really am in a dream before the prosaic reality presents itself. The worktop feels higher and the room looks strange for the simple reason that, unlike Max, Maxine is not six foot one. At a rough guess, I am now four or five inches shorter. The brief flicker of achievement I have at working this out quickly passes as I realize that this is another nail in the coffin of the idea that this is all just some incredibly vivid dream: there is no way that I would have thought of how being shorter would make things appear.\n\nI need those painkillers and reach out to grab the pint glass for some more water but my fingers just clip the glass, knocking it over. Damn. I'm going to have to get used to shorter arms too, I think as I mop up the spilt water and refill the glass.\n\nThe walk to the bathroom is not as hard as I feared now I am beginning to find my new sense of balance. If I had not already noticed, reaching into the bathroom cabinet would have told me that I am shorter. I swallow two painkillers and wash them down with more water before climbing into the shower where the play of clean, hot water over my soiled body feels wonderful as the semi-dried vomit and piss are sloughed away. The shower gel has a heavy, musky scent that was my, no, Max's favourite but that I now find quite unpleasant, particularly when I smell it on my amazingly soft, almost hairless skin. However, I have to use something to get clean, though I try to rinse the scent away as much as possible.\n\nUnexpectedly, a sob escapes my throat and, moments later I am crying. I cannot recall the last time I cried -- I didn't when my parent's died so it was as a child, probably -- but I am in floods of tears as, somehow, this rejection of my old shower gel brings home that I am no longer me, no longer the Maxwell Thomas whose life I have lived for thirty-one years. I am Maxine Thomas and I have no idea what that means or who I am. I turn off the shower and step out to dry myself, still weeping. I head to my bed but as I bend to climb in I smell male sweat and cannot bear to lie there. I turn and head to the never used guest room where a clean bed awaits, made up in the over-optimistic anticipation that I might need to offer a bed to a friend one night. Ha! Max might have had mates but, in truth, not one single real friend, I realize.\n\nI pull the covers over me and curl up in the foreign room, a guest in my own apartment. I feel utterly alone, lost and vulnerable in my strange new body as I cry myself to sleep.\n\n<center>- - - - - - - - o o O o o - - - - - - - -</center>\n\nCHAPTER 4: First Steps\n\nThe afternoon sun shining through the gap in the curtains wakes me. I feel curiously rested, relaxed and at peace as if the tears I shed have had a healing effect. I find I cannot resist touching and caressing my skin on my arm, savouring the soft smoothness of it as I hug myself while I lie curled on my side. \n\nI roll onto my back and stretch luxuriously. My skin tingles and my hands roam more widely, exploring as I learn my new form more intimately. This self-caressing feels delightful, sensual... arousing, I realize. My hands cup my boobs; I had thought them small when I saw them in the mirror but they feel larger than I expected, as my hands cannot fully hold them. Of course: my hands are smaller now. Still, I find that I like my boobs more than I thought I did.\n\nI find I like them yet more when my fingers brush my nipples: the tingling jolt that goes through me as they harden is amazing and unlike anything I've ever known... so, of course, I do it again. These new sensations kindle something else inside, down between my legs. There is no swelling to tumescence with this arousal but a feeling of shimmering warmth and excitement that draws my fingers down and parts my legs. My fingers trail through the dense but soft hair that furs my mound, downwards further to the valley hidden within. There is a slight dampness there so I try to push my fingers in only to stop immediately, surprised at how uncomfortable it is. Is this what sex is like for women: slight arousal, strange tingles and sensations, uncomfortable penetration? There must be more, surely. I stroke the edges of my... hmm, what word. Vagina? Ugh, no. Cunt? Maybe, in the throes of passion, but not now, like this. Pussy? No, that was Max's word. Cunny? Maybe... so I stroke the edges of my cunny and the lips gradually swell. It feels nice and my fingers run from end to end of my cunny; it is definitely wetter than a few minutes ago.\n\nAs my finger travels back up the wetness and swelling means that the fingertip is now travelling between the lips, which feels even better until, at the top of my cunny, I get a thrilling jolt that makes me gasp as my finger rubs over a small, harder lump. I rub again, a little firmer and oh fuck that feels amazing. My clitoris, I realize: I have found my clitoris and the feeling as I rub it gently is incredible.\n\nI briefly slide my fingers down and find my cunny is now very wet and, not only does my finger slide in smoothly, it also feels wonderful. I'm amazed at how tight my cunny is around my finger but, of course, I am a virgin aren't I? This is the first time I have ever been penetrated. I start rubbing steadily, sliding the finger across my new-found clit and curling it to slide inside me to the second knuckle and then back. I increase the tempo and some seriously amazing sensations and feelings start firing off deep inside me.\n\nI rub harder and faster, hungry for the feelings to continue and grow, when suddenly what feels like every nerve in my body goes wild and I am bucking and thrashing on the bed and crying out. There is a final, tumultuous bolt of pleasure that leaves me at the end panting, sweat glazed and utterly spent. \"Fucking, fucking hell!\" I gasp, smiling. I languidly raise my finger from my cunny and sniff it to inhale the smell of female sex, of my sex now. I always did like the smell and taste of cunny and, as I slip my finger into my mouth, I find that mine is no exception.\n\nAll the tales of how good the female orgasm could be definitely sold it short, and, whatever else happens in my new life, experiencing this is wonderful. I am almost moved to thank the Goddess... almost.\n\nHunger drives me out of bed together with a feeling that I can come through this. Nemesis said that I would stay like this until the Goddess was satisfied but satisfied with what? Must I suffer enough or learn or change or... I just don't know. \n\nMy small feet pad softly as I walk naked through the apartment, into what I cannot help thinking of as Max's bedroom and pull out a clean tee shirt from the drawer. Slipping it on, as expected I find it is way too big as a shirt but it does quite well as a nightie. On impulse I strip the bed and dump the bedclothes into the laundry basket; I don't know if I'll sleep in this bed or not, but I certainly won't with those stinking sheets and covers.\n\nOn the bedside table, I notice the mobile phone and it's flashing notification light. Seven missed calls and several texts, mostly from Jason but a couple from other colleagues. I don't need to listen to the voicemails or read the texts to know that they'll all be variations on 'Where the fuck are you Max?' probably getting increasingly angry. Well, Max has definitely left the building.\n\nI surprise myself by making scrambled egg on toast in place of the fry-up I would normally opt for when forced into self-catering. Clearly, it is not just my sense of smell that has subtly altered. While I eat I listen to the voicemails and read the texts before planning what I should do.\n\nThe first text is unexpected as Jason seems to have sent it at 8:03 yesterday morning, almost an hour before I would normally be in:\n\n<blockquote>WTF Max? All last night in the pub and you didn't tell me you were being seconded to the Hong Kong branch. You didn't even tell me you were applying for it. You can be a right cunt at times</blockquote>\n\nWhat the hell? I hadn't applied for any post in Hong Kong; there must be some mix-up. The next text was more predictable.\n\n<blockquote>What are you playing at, arsehole? You weren't that pissed last night so get your shit together and get in here. </blockquote>\n\nI skip to the last text, once again from Jason and sent at 9:26 this morning, just two hours ago:\n\n<blockquote>What?? Not in again? I'm fucking glad you're off to HK on Monday so I don't have to put up with any more of your shit. Have a nice life, you wanker</blockquote>\n\nWhere has this stuff about my moving to Hong Kong come from? I, Max, never applied for any posting to Hong Kong! There is something strange going on, I think to myself before I remember my new body and start giggling. \"Something strange going on' you reckon? No shit, Sherlock!\" I say out loud. There is a slight feeling of hysteria in my giggles and I fight to calm myself as I finish eating.\n\nOnce fed, I make myself a mug of tea (I really don't fancy coffee, curiously) and fetch the laptop, putting it on the small dining table. I start it up and log into the company email page: twenty-seven unread emails. I scan down the list and at the bottom of the unread emails are several from many weeks ago that I'm sure weren't there on Wednesday. I click through them, a cold feeling building in the pit of my stomach as I skim read. 'Thank you for applying to join the Project Nemesis team in Hong Kong...'; 'Congratulations on being selected for Project Nemesis...'; 'Your flight has been confirmed for Monday 27... departing 18:15 on BA0027... arrives 14:20 Tuesday 28... Hotel reservation in your name...'\n\nI have never heard of Project Nemesis and I can only guess that this is Nemesis' work: the project name cannot be a coincidence. Apparently, as far as work is concerned, Max Thomas is on some special project for the company in Hong Kong. So far so good: I may yet have a job to return to when the Goddess stops being pissed off with me. I wonder if Nemesis has created some fake Max to go out to Hong Kong? No, don't go there, I tell myself; it doesn't help and it'll drive me nuts wondering stuff like that. There is, however, the need to placate Jason as he seemed royally fucked off with me and I'll likely be going back to work with him at some point. So, an email to Jason; I begin typing, my new, smaller fingers clumsy on the keyboard.\n\n<blockquote>Jason, mate, what can I say? \n\nI'm really sorry for screwing around with you by not showing up for two days -- I'm in a right f*cking state is all. </blockquote>\n\nI feel the curious urge to tell him how I'm feeling but I know that our sharing of emotions to date has been no deeper than the question, 'Alright, mate?\" and the standard reply, 'Not so bad. Yourself?' unless we opt for how hung-over we feel as an alternative. \n\n<blockquote>It's all been a bit full on for weeks and I guess some part of me can't hack the pace keeping up with you, Jase. </blockquote>\n\nHmm, nice bit of flattery there. Okay, now to apologise and make my excuses:\n\n<blockquote>I'm really sorry about not telling you about Hong Kong. I didn't want to say anything when I applied in case they told me to p*ss off. Then, when they offered the job, they wanted it kept hush-hush and after that, well, with that f*ck up with that Marie slut and everything, I've sort of put HK out of my mind \n\nI'd like to say we should meet up before we go but I've a sh1t load of stuff to get sorted so there just isn't time, sorry mate.\n\nMax</blockquote>\n\nSome of what I've written, the language I've used, feels a little uncomfortable, perhaps more than a little knowing the trouble I'm in with this Goddess, but I need to go with words that the Max inside me uses. Before I can change my mind, I hit send. I don't know whether what I wrote will do any good. Oh well, Jason isn't exactly my biggest, most pressing problem right now.",
        "I sit and slowly drink my tea. The phone beeps and there's another text, from Joe this time about meeting for a drink at the weekend. I can't keep using this phone with all Max's friends knowing the number but a new phone will be expensive or, I wonder... I quickly search on the Internet then log into Max's mobile phone account online, go to the online help chat and tell them that I'm receiving a lot of spam and nuisance calls. Less than five minutes later the phone number has been changed and Maxine has her own phone: result!\n\nOkay, I guess I can't put it off any longer: I'm going to need to go out and to do that I'll need to get dressed. In the bedroom I shed the tee shirt and begin with, well I'm going to call them panties because I hate the word 'knickers'. Okay, now the bra and, after I finally manage to get it the right way up and the right way round, I have the challenge of doing it up at the back. I succeed, eventually, but it leaves me wondering who thought that the back fastening was a good idea?\n\nThe top is easy -- a pale pink vee-neck shirt attracts my eye -- but that leaves what to wear below. I see a skirt that would finish somewhere above my knees, I guess: it is a deep, almost blood red, that I think would go well with the top and, even as my hand is reaching out to take it, I stop as three thoughts occur in quick succession. The first is a slight disbelief that I have just stood trying to match clothes to form an outfit; the second is that I really cannot believe that I actually want to wear a skirt and I can't tell whether this is because skirt wearing is somehow hard-wired into my new, female brain or that there has always been some secret desire to cross-dress within me -- I'm going to assume it's the former and blame my girlie brain; thirdly there is the practical thought that going out as a woman for the first time will be stressful enough without the added unknown of skirt-wearing. This final thought wins the argument and I opt for the simplicity and relative familiarity of a pair of jeans; only relatively familiar, however, as I've never worn anything quite as figure-hugging as these before. Finally, I pass over the two pairs of heeled shoes (way too scary to even consider!) and slip on a pair of pink canvas sneakers.\n\nInside the wardrobe door is a mirror and I take a moment to look at the woman I see there. I'm sure Max wouldn't give her a second glance: pretty enough to avoid ridicule but not sufficiently beautiful to be worth his flattery. God, was Max really that shallow?\n\nI seem to be developing a slightly schizophrenic attitude to Max as I notice that I'm thinking of him as another person: Max's bed, Max's attitude, Max's words... I know, in theory, I am just Max in a new body but the truth is I don't exactly feel like Max anymore. Is this good or bad? I don't know. If I'm not Max then who am I? I don't know this either but, I guess I'm just going to have to try to be Maxine, whatever that means.\n\nI'm going to walk to the small supermarket just down the road for some milk, bread and a few other bits, oh, and some nice-smelling shower gel, shampoo and antiperspirant. Therefore I need money. Max's wallet has twenty quid in it and, of course, his bank and credit cards. Dare I use them? I know the PINs so in theory there should be no problem. In fact, his -- my -- bank accounts are in good shape so I shouldn't have to work for weeks, months even. This isn't going to last months, surely? Ha, I bet Goddesses and spirits of vengeance don't know about electronic banking! I take the cash and the cards, stuffing them into my jeans' pockets.\n\nAs I enter the main room I notice for the first time something on the coffee table: a dark brown rectangle the size of a large envelope. I walk over and pick it up. It appears to be made of soft leather, a sort of large wallet or pouch and on the flap are Greek letters that I try to remember from school: a letter N that I can't recall the name for, epsilon, mu, epsilon, delta, no that's sigma not delta, iota sigma, so that's N E M E S... of course, Nemesis. \n\nI remember her reply when I'd asked about ID and money and so, when I open the flap, I am not surprised to find sheets of paper and banknotes inside. There is a birth certificate for Maxine Helen THOMAS, with the same date of birth, parents and other details as my real birth certificate; there is a sheet with details of my National Insurance number (not the same as Max's I notice) and an Inland Revenue tax code; a card giving an NHS Number for Maxine Thomas and, lastly, \u00a3300 in cash. What there isn't is a driving licence so unless I want to take a risk, the car will have to stay in the garage for the time being.\n\nTaking twenty quid from the pouch, just in case I bottle out of using the bank card, I go to the front door. Taking a deep breath, I open the door and take a step forward. There is no one in the hallway but nevertheless, as I turn to pull the door closed behind me, I cannot help looking back into the safety and security of the apartment. \"Shit! That was close!\" I gasp out loud as my eyes spot the apartment keys on the table by the door. Imagine if I had walked out without them? I almost dive back into the apartment, suddenly terrified that the door will maliciously slam on me, trapping me outside. My fingers close on the keys and I almost sob with relief. The bunch of keys feels huge in my new fist, far too big for my pockets and even too large to easily carry in my smaller hand. Laboriously I pare them down, unwinding each in turn from the spiral of the key-ring: first the car key then the garage door key, Max's desk and filing cabinet keys and some strange key whose purpose I cannot even remember. Finally, I am left with just the two apartment door keys and the key to the front door of the apartment block. These I slip into my pocket.\n\nI leave the apartment, though I cannot stop myself repeatedly checking that the keys are in place. I cross to the lift and press the call button, tapping my foot as I wait. I don't really want to meet one of my barely-known neighbours and be forced to come up with a story. Actually, I need to think because, sooner or later, someone will want to know where Max is and who the fuck I am. With a soft bing the mercifully empty lift arrives and I enter.\n\nI make it out of the building without encountering anyone and turn onto the pavement towards the shops. It is quite busy so I guess it is sometime after five o'clock and people are heading home. I notice for the first time the difference between men and women as they walk: the men stride, arms and shoulders swinging while the women are more... demure, I suppose, apart from a few girls with a definitely sexy sway. I am suddenly aware that I am striding, or striding as much as my shorter legs and smaller frame allow. I halt instantly before moving into a doorway to watch the girls and women carefully. I don't want a sexy sashay, which I suspect would end up looking like a duck's waddle, but I do want to fit in more so as not to draw attention. I move off, keeping my steps shorter and my arms still; it feels unnatural but it is better I think. I wish I had a handbag or shoulder bag to hold onto as almost all the women seem to have and I add this to my list of things to buy.\n\nI pass a bank and see the hole-in-the-wall ATM. Brilliant: I can get cash from here rather than using the bank card in the shop. I insert the card, key in the PIN and select the maximum withdrawal, \u00a3250. There is a breathless moment before I hear the machine begin whirring as it counts the money; there is a clunk and the bank card pops out followed by a soft hum when the cash appears. I glance around before taking and pocketing the bundle of ten and twenty-pound notes. The screen flashes:\n\n<center>Thank you for using Lloydminster Bank</center>\n\nNo problem, I think to myself but the screen flashes again and I gasp.\n\n<center>MAXINE</center>\n\nMy name, my new name, blinks at the centre of the display. I stare dumbfounded as the screen blanks before a new message appears:\n\n<center>This was the one and only time.\n\nThere will be no more free money.\n\nMaxine must earn what Maxine spends from now on.\n\nNEMESIS</center>\n\nThe screen returns to the normal welcome screen. \"Oh fuck!\" I swear softly. Why did I think, after that string of mysterious brand-new-yet-old emails and the whole Hong Kong thing, that Nemesis wouldn't know about banks?\n\nSo I have five-hundred and seventy quid plus whatever else might be in the flat and Max's pockets so... say six hundred quid or just under. I'm going to need to work and this is obviously part of the punishment. All I can hope is that the apartment will continue to be paid for by Max's account.\n\nRather depressed, I head on towards the supermarket. What am I to do? There's no way I get a job like my old job but what else can I do? I can type well enough to get by but not well enough for secretarial work, I can't cook worth squat, I've no craft skills... Oh, shitting, fucking hell: as Maxine, I've no qualifications AT ALL! No degree, no A-Levels not a single GCSE to my name... I feel myself on the verge of tears, my vision blurring. I rub the back of my hand across my eyes brusquely and collide with someone.\n\n\"Watch where yer goin' yer stupid cow!\" The big man I bumped curses me, before lumbering past with his enormous belly.\n\n\"I'm sorry...\" I manage through silent tears I cannot stop.\n\nThere's a gentle touch on my arm. \"Are you alright, dear?\" It is an old lady carrying a flowered shopping bag peering at me with a concerned look on her wrinkled face. \"That fat oaf didn't hurt you did he, dear?\"\n\n\"No, no, I'm sorry...\" I stammer, \"I'm not hurt it's just being a bit of a, a crappy day.\" She pats my arm before reaching into her pocket and taking out a small pack of paper handkerchiefs. Her fingers tremble a little as she pulls one from the packet and hands it to me.\n\n\"There you go, my dear, dry your eyes,\" she smiles. \"You youngsters: never think to carry a hanky with you do you?\" Her concern makes me smile as I dry my eyes. \"Right, if you're okay dear I must get on with me shopping,\" and she turns and totters off.\n\n\"Thank you so much for looking after me,\" I call after her as I finish drying my eyes. I continue my walk to the supermarket, careful to avoid any further collisions.\n\nThe rest of the trip is uneventful, though my eyes continually dart hither and thither, desperately trying to keep track of everyone around me, acutely conscious of every look or glance in my direction. Though I try my best not to be so jumpy, I worry that I must look like some timid rabbit, expecting at every step to be ambushed by a fox. Is this what it is like for all women?\n\nAn hour later and having spent rather more than I should of my now finite funds, I close the door behind me and feel the tension finally drain from me: I did it! I walk over to the small dining table and place my purchases on it: toiletries that smell nice, bread, butter, milk, a small pack of smoked salmon (expensive but I can make it last), a punnet of white grapes, a half kilo bag of dried pasta spirals, a jar of tomato and basil pasta sauce, a small block of Cheddar cheese and, lastly, a cheap, faux-leather navy blue shoulder bag from a small, dusty luggage shop on the high street. \n\nI put the food away and take the toiletries to the bathroom, make up the bed with clean, fresh sheets and put the dirty bedding from the laundry basket into the washing machine. I have to rummage to find the detergent and then look in the handbook to see how to operate the damn thing. I'm going to have to cancel the cleaner because I definitely can't afford the sixty pounds per week that Max paid her for, what is it, three visits a week?\n\nI flop in front of the TV in what is a novel experience for me: I am at home on a Friday evening. Normally I, well Max, would have been out drinking and trying to find some woman to chat up and, with any luck, get into bed to screw and then dump. I have zero inclination to go out now but, even if I did, I would not want to encounter someone like Max. Did you hear that Goddess?\n\nMy attempts at cooking are a mixed success, so perhaps I was just lucky with the scrambled eggs at lunchtime. Still, I've learned that you can't boil pasta for twenty minutes unless you like the idea of eating a rubbery looking mush! I binned that before trying again and this time I stood and watched the pasta, rather than the TV, as it cooked. The sauce was slightly burned on the bottom of the saucepan but, apart from tasting a bit smoky, it was still edible. Anyway, while the bag of pasta will last me ages, there are only two portions of sauce so I didn't want to bin it if I didn't have to.\n\nI ought to start looking for work but, somehow, the stresses and emotions of the day combine to make me feel lethargic; I'll do it tomorrow because this girl is too tired tonight. Did I really just call myself a girl? I'm tired, that's all. I'm off to bed.\n\n<center>- - - - - - - - o o O o o - - - - - - - -</center>\n\nCHAPTER 5: A Visitor\n\nI've felt generally happier today. No, not happier because this whole situation is awful, horrible and unnerving and I wish it were over. So I'm not happier but I am a little easier and more comfortable with my body; I suppose that I'm getting used to it. I could certainly get used to the orgasms as this morning's climax was almost as awesome as yesterday's miraculous discovery!\n\nThe trawl through the local paper for work proves fruitless: every job required either qualifications or experience or both. I might have to start looking out for cards in shop windows and on the small advert noticeboards they have up in a couple of shops.\n\nJust after lunch, I decided to go for a walk to the park nearby, partly because I was going a little bit stir-crazy being stuck indoors but also to try and get used to being out, being seen. And I certainly was seen; I was very conscious of being eyed up by most of the men I passed. It's not comfortable, feeling that you're constantly being appraised and judged with every glance. At least, that's what it felt like but maybe it's just my self-consciousness at work... or maybe it's because that's exactly what Max always used to do to every woman he saw.\n\nWhen I got home again I decided to try on the red skirt as the idea of what wearing it would be like has been nagging away at the back of my mind. It feels, well, unlike anything I've ever worn. The fact that my legs are bare beneath the skirt makes me feel almost as if I'm naked below the waist, especially when the air wafts against my legs as I move. I have practised sitting, using my hand to tuck the skirt beneath me as I sit and keeping my knees together. This last hasn't been as difficult to remember as I thought it would be: I feel so exposed anyway that I really don't want to make it worse.\n\nLooking at myself in the mirror, I'm surprised both at how accustomed to my new appearance I'm becoming and at the fact that I like how I look in this skirt. However, the dark hair on my legs really spoils the effect; Max always disliked hairy legs on women and it seems Maxine feels the same. Still, I do know how to wield a razor.\n\nLegs, it turns out, are much less fiddly to shave than faces and fifteen minutes later, with my newly smooth, hairless legs, I'm walking around the apartment as I try to accustom myself to how the clothing feels and moves. I jump as the doorbell goes. I glance over at the clock on the shelf; it is just after six thirty and I wonder who the hell that could be as my heart races. At the intercom, I press the VIEW button and the little screen lights up to show Jason. Oh fuck, oh fuck, oh fuck!\n\nI can't just ignore him or who knows what he might do; Max should be here and, if I don't answer, he might be concerned and call police or someone to investigate. I press TALK. \"Hello?\" there is a definite tremble in my voice.\n\n\"Who's that? Max, have you got some bird answering your door for you? Max?\" Jason asks. \"Come on, mate; you're buggering off to Hong Kong on Monday and I wanted to talk to you.\"\n\n\"I'm sorry but he's not here,\" I reply, my voice no steadier.\n\n\"What? Look, who are you? What are you doing there if Max is not in?\" he demands.\n\n\"I, I'm his sister.\" \n\n\"What? Max hasn't got a sister! Look, you need to let me in because there's something odd here.\" Oh, shit! What do I do? I need to sort this out and quickly.\n\n\"Okay, I'll let you in,\" I tell him and press the DOOR button to buzz him in. I have about three minutes before he arrives up here so I quickly take the money from the Nemesis leather wallet and tuck it into the inner pocket of my new shoulder bag. I look around and everything else seems in order... the startling knock on the door interrupts me. I'm about to go to the door when it occurs to me that I shouldn't know who Jason is. Bollocks! I let him in without ever asking his name, how suspicious is that? I need to do something to show I don't know him. I move to the door and call through it: \"Erm, sorry, I know I should have asked but who, er, are you? I really shouldn't have opened the door without knowing who you are, you see.\"\n\n\"I'm Jason Meyers, Max's boss and also his mate, and I'm here to see him before he buggers off to Hong Kong. Now will you open this bloody door you, you... dopey woman!\" His voice is rising and I'm worried that he'll disturb the neighbours so I open the door.\n\n\"Erm, come in, er, Jason,\" I hold the door open as I usher him in. His eyes scan me, looking me over -- boobs to face to boobs to legs to boobs and finally back to face. He steps into the apartment and I close the door behind him.\n\n\"You said you were Max's sister and I can see a resemblance, I suppose, but he never once mentioned he had a sister.\"\n\n\"I am, I promise.\" I walk over to the coffee table and take my birth certificate from the folder and hold it out to him, \"Here, as you seem so suspicious of who I am...\" He takes it and looks it over and I can feel my heart thumping in apprehension.\n\n\"So... Your name is... Maxine? Maxwell and Maxine? What the fuck were your parents thinking? That's really funny!\" he says smiling.\n\n\"Yes, bloody hilarious,\" I reply dryly, as my nervousness ebbs slightly.\n\n\"Uh, sorry: you probably get that comment all the time. Anyway, I still don't understand why he didn't say he had a sister; a...\" he looks again at the birth certificate, his eyes flicking to the birth date. \"Isn't that birthday..? Are you his twin?\"\n\n\"Um, yes but we fell out years ago. He, er,\" I hesitate, trying to make up a story on the spot, \"he only called me yesterday and, um, told me that he was going to Hong Kong and everything and asked me if I'd be prepared to house-sit for him.\"\n\n\"So where is he now?\"\n\n\"He's, erm, down visiting my, that is, our parents for a couple of days. You know, before he heads off.\" I hope desperately that Jason believes me. The truth is that my parents both died nearly twelve years ago but I don't recall ever telling Jason that; I don't normally tell anyone. To my relief, after a moment he nods.\n\n\"Pity. I wanted to have a word with him for pissing me around by not turning up for two days and for not telling me about this Hong Kong secondment shit.\" He pauses and looks at me, his expression softening as he runs his hand through his floppy, dirty blond hair in his habitual manner. \"Look, I'm sorry about getting a bit... frustrated just now. It's not your fault, what your brother's been doing, I know. I'm not normally so rude to a pretty woman,\" he smiles and I feel obliged to nod and smile in acceptance of his apology and the compliment. \n\nHe edges a little closer as his hand reaches up and his fingers play with the tip of a lock of hair above my shoulder \"Hey, er, like, why don't you come out with me instead; a few drinks, maybe a meal...\" the back of his hand now gently rubs my shoulder and it takes all my willpower not to shudder at his touch as my mouth goes dry.",
        "\"Erm, thanks, Jason but I've already eaten and, you know,\" I keep smiling and my voice friendly hoping to engage his sympathy, \"it's been a long day with all the moving in and unpacking and stuff so I need my bed.\" Even as I say the word 'bed' I know it was a mistake and I inwardly kick myself as a lecherous gleam is kindled in his eye.\n\n\"Well, you know, we could just stay in and rent a movie or something,\" he suggests and his hand has slipped down to caress the front of my shoulder and is edging ever downwards to the top of my boob. I am almost paralyzed with fear.\n\n\"N-No Jason,\" I manage but it makes no difference as his fingers stray ever lower, now onto my boob. \"I said no, Jason,\" I manage a little more forcefully, \"didn't you hear me?\"\n\n\"I heard a little girlie playing it coy, trying to be Little Miss Hard-to-Get,\" he smiles as his fingers are almost brushing my nipple. \"C'mon Maxine, your brother Max wouldn't want you to be unwelcoming, especially to his boss...\" With an acid, sick feeling in my stomach I suddenly know exactly how this could go because it is precisely the sort of play that Max would make: the friendliness first followed by gentle seduction, then the pressure, then coercion and then... force, if necessary. I know how it is done, the question is: do I know how to stop it?\n\nHe takes my hesitation for permission as his hand suddenly grasps my boob, squeezing it. If he thinks that's arousing then he must be off his head. I try to take a step back to break his grasp on me but he simply follows. I look up from my glance down at his still-mauling hand, a feeling of panic flooding me, when suddenly his mouth is on mine. I give a gasp of shock and horror that he seems to read as desire as his kiss becomes more forceful. I am driven backwards as he pushes me and I worry that he is trying to push me to the floor. Instead, I back into the edge of the kitchen island unit, the hard edge of the worktop pressing into the small of my back.\n\nTerror floods my mind but there is not the answering rage and anger that I expect. Instead, I am paralyzed and helpless as his hand releases my boob... only to slide down and up under my skirt, lifting it, exposing my panties. I try to say \"No\" but my throat is too tight and I can scarcely breathe. His hand cups my sex, groping, squeezing... I am trembling now, my mind numb with fear as his hand moves up and then down as it slips behind the waistband of my panties, his fingers driving down in search of my opening. He is rough, harsh and without hesitation as his finger enters me with an intense discomfort that borders on pain.\n\nI haven't the words to describe the violation I feel at his penetration, the sheer horror and humiliation that I have not stopped him and yet I still cannot move. \"Fuck, Maxine, your pussy's so tight. It's like a little girl's...\" he tells me in admiration. Somehow the sound of his voice as much as the vileness of his words breaks through my paralysis and I surprise him by suddenly pushing him hard away from me. He takes a stumbling step back, pulling his hand from inside me and from my panties.\n\n\"No Jason!\" I say loudly, though there is a tremble in my voice, \"Stop it, please,\" I beg as anger flashes in his eyes and a snarl curls his lip. An idea suddenly occurs to me and I hold my hands up, trying to give myself time to speak. \"It's not that you're not attractive Jason,\" I tell him, \"it's just, erm, well, sleeping with Max's twin, and, erm, given how alike we look, people might misunderstand and, you know, think it means that you, er, have a bit of a thing for Max. I mean, they'd be wrong, obviously\" I add hastily as his eyes narrow at what I'm saying, \"but if someone made, like, a comment...\" I can see he is not convinced by the logic but his homophobia has now been triggered, overcoming his lust if not his anger at my rejection. \"I'll let Max know you called round when I talk to him tomorrow morning,\" I assure him but trying to suggest that if he tries anything I'll tell Max. My heart still hammers in my chest, fearful of what he might do. \"I'm really tired tonight and I know I won't be much company so maybe it'd be best if you go,\" I suggest carefully. He pauses for a moment, weighing up his options.\n\n\"Yeah, okay,\" he says at last and it's all I can do to not to sigh in relief. \"Maybe we could go out another time, next weekend perhaps. Then I could find out Max's boyhood secrets from you,\" he suggests. Oh shit, that's the last thing I want! I'd love to just tell him to fuck off and die but I'm desperate not to say the wrong thing at this stage.\n\n\"Hmm, well maybe,\" I say reluctantly, just desperate to get him out of the apartment, \"though I've quite a lot on for the next few weeks,\" I warn as I edge him towards the door. \n\nFinally, he is out and I close the door, just managing to resist the urge to slam it on him. I watch the door entry screen as I lock the door and, a couple of minutes later, I see him leave the building. My legs give way and I am shaking and crying; great heaving sobs of relief. I climb unsteadily to my feet and hurry as much as I can to the bedroom where, without bothering to undress, I climb into bed, wrapping the duvet tight around me for comfort and security. I expect rage at what he did; what I feel is fear and, unexpectedly, shame -- shame that I gave him reason to think I wanted what he did to me, shame that I let him go so far, shame that I was grateful to him when he stopped...\n\nThe fear, the shame and terror of being raped are finally passing when I am struck by a new emotion: overwhelming guilt. I have been in Jason's position and not backed down. I have coerced and bullied women into sex numerous times, and once or twice, when that didn't work, I carried on anyway... Oh, Goddess forgive me, I had no idea of the terror and fear, shame and humiliation that I caused... No, it's not that I had no idea; I'm not stupid, I should have known but I didn't think, didn't want to know. No, I'm still lying to myself: the real truth is that I simply didn't care! Tears flow and sobs wrack my chest even as shame and guilt wrack my mind.\n\nIt all goes on for a long time.\n\n<center>- - - - - - - - o o O o o - - - - - - - -</center>\n\nCHAPTER 6: Meeting Mary\n\nIt's Monday morning and the first day of May; a new month in my new body. The last twenty-four hours have been, to be blunt, complete shit. The wracking guilt and crying passed, eventually, and I slept fitfully. Waking, I was depressed and spent the day unable to shake off the black shame and crushing guilt at what I now understood that I'd done. I was tempted to resort to alcohol but the memory of waking up covered in piss and vomit was too recent to actually try it.\n\nI tried to rationalize that I deserved what Jason did to me and therefore I'd been punished and needn't feel guilty... but I couldn't convince myself. What Jason did wasn't a punishment but simply the Goddess finding a way, perhaps the only way, to make me properly comprehend what I'd done. However, comprehension doesn't allow me to put it right. Even if I were to search out and find the women, in this body I couldn't even fucking apologise. Is that what the Goddess wanted: me full of guilt I could do nothing about?\n\nI realized that there was one thing I could do: I could try and not fuck up Marie's future. So after I took out the laptop and logged into Max's work email, I wrote another email to Jason:\n\n<blockquote>Jason,\n\nMaxine mentioned that you called round yesterday. Sorry I wasn't there mate but I had to go and see the aged parents before I head off -- don't want to be disinherited, do I!\n\nActually, it was them that have been bugging me to sort things out with Maxine which is why she's in the apartment. Maybe when I get back she'll feel better towards me and we can sort the past out. Families, huh?\n\nI should say she's a bit off men at the moment -- Mum mentioned that she'd had a bad experience recently and was hurt badly so I hope she wasn't a bitch to you.\n\nThere is one more thing: Marie O'Connor. I'm worried that what you did might be traced to you if she got suspicious and you've really helped me over the last week. Also, she's withdrawn her complaint and I'm off to Hong Kong so it doesn't seem necessary to screw her future with the firm. \n\nAll the best,\n\nMax</blockquote>\n\nIn the evening I found myself sitting looking out of the window. The day had been grey and raining, a fitting accompaniment to my sullen mood but, out to the west, I watched as the sun dipped below the cloud, igniting the horizon and gilding the clouds. Does the fact that the simple beauty of the view lifted my spirits make me soppy? Or that the fact that I saw in it a sign that I could get through this makes me a pathetic sentimentalist? Well, better a soppy, pathetic sentimentalist than a heartless rapist.\n\nSo now I have a new day in a new month in a new body; time to see if I can make a new start. \n\nIt isn't quite the new start I hope for when, as I'm finishing breakfast, I hear the rattle of keys in the front door lock. A few seconds later the door opens and Agnieszka the Cleaner walks in. There follows a very difficult conversation, starting with who the hell I am, proceeding through, \"You do not tell me I not work more here,\" onto (after a quick trip to the bedroom to write a brief note from Max telling her she was no longer required) demands of, \"You must pay me for month's notice to not work anymore,\" to the final agreement of a hundred and twenty pounds in her hand; she doesn't look happy but agrees to go when I finally persuade her that the fault for this lies with my 'brother' Max. At the last moment, I remember to ask her for her set of keys back. I don't think she was intending to keep them -- she'd probably forgotten about them as I had -- but she hands them back with very ill grace, slapping them into my outstretched hand.\n\nIt is only after Agnieszka leaves that it occurs to me that she could have given me much guidance and advice on several matters: the almost incomprehensible controls on the washing machine for a start as so far I've been selecting 'Colours' (on the basis that everything has a colour) and pressing start. Oh well.\n\nI ought to see whether my email to Jason has had any effect and so I start up the laptop. Yes, there's his reply:\n\n<blockquote>Max, you suddenly grown a conscience or what? Never known you to care about a bird's future further than whether she's willing to go down on you!\n\nGood point about the traceability, though. Since you don't care if she stays here, I've undone the changes to the deals. No point in taking the risk if it doesn't matter.\n\nThanks for the tip about your sis. It explains why she went a bit cold when I was just being friendly.\n\nNow f*ck off and enjoy HK you old bugger.\n\nJason</blockquote>\n\nDid doing that for Marie make me feel any better? A little, maybe; it certainly stopped me from feeling any worse.\n\nIt's mid-morning when I head out to try and tackle the most pressing issue: work and the money that it will bring. This is particularly acute after Agnieszka's visit removed nearly a quarter of my remaining funds. However, despite my determined, optimistic start, it does not go well. I check each shop on the high street to no avail. A nursery school has an opening, but they want someone with childcare qualifications. A trip around two industrial estates is similarly fruitless: the few jobs available require skills, experience or qualifications I do not have, despite the fact that I could almost certainly manage the office administration or stock control duties required by two of the jobs.\n\nIt's late afternoon when I trudge, footsore and weary, into a restaurant. It's called 'Leonardo's' and is located just off the high street; it was closed when I passed it this morning but now there's a sign outside that's advertising coffee and I'm in desperate need of a caffeine hit to pick me up. Inside the restaurant is quiet and when I look questioningly at the waitress to ask for a table she seems to read my mind as she replies, \"Suit yourself, love, we're not exactly heaving at the doors here,\" in a gentle Australian accent. I smile and make my way to the table by the window. I sit and kick my sneakers off to rest my aching feet on the cool floor tiles, letting out a heartfelt sigh of relief. \"How you goin'? You look fair knackered,\" the waitress observes as she comes over to me.\n\n\"I am absolutely exhausted,\" I say in agreement, \"I've been walking for hours and I'm fed up with it. I'm also gasping for a drink.\"\n\n\"Sure, what can I get you?\"\n\n\"Oh, coffee, please, um latte?\"\n\n\"Sure, no worries; I'll just be a couple of minutes,\" she smiles as she hurries off. She's of average height, slimly built with a mass of wavy blonde hair tied back into a very bushy ponytail. She's also pretty and I have to discipline myself not to do a Max and ogle her every step as she walks away. I resort to massaging my feet to distract myself.\n\n\"There you go, mate, one latte,\" she places a tall mug on the table in front of me. \"So, what's got you so narked?\" I'm taken aback by her question but realize she is just being friendly to a female customer. Fortunately, she mistakes my hesitation for me not understanding her question. \"Narked, you know, annoyed, fed up.\"\n\n\"Oh, yes, well I've been walking the streets all over the neighbourhood, looking for work actually,\" I admit and she starts laughing. \"What?\" I ask.\n\n\"Sorry, but you just said you'd been walking the streets looking for work so you sounded like you're on the game,\" she smiles but a sudden, panicked look crosses her face, \"Oh strewth, you're not..?\"\n\n\"No!\" I exclaim but smile at her to show I'm not offended, \"No, but if I can't find something it might be my only option!\" I laugh.\n\n\"What sort of work are you looking for?\" she asks as she sits on the chair next to me.\n\n\"Anything really; the only requirement is that it doesn't require qualifications or skills that I don't have. Unfortunately, any job fitting the former always seems to need the latter and vice versa,\" I finish, my frustration evident in my voice.\n\n\"You've no quallies? I'm surprised: a bright sounding girl like you, what on earth were you doing at school? Or maybe I shouldn't ask. I'll bet some bloke was involved!\"\n\n\"Erm, yes, you could say that it was a man got me into this situation,\" I admit. If only she knew how true that was, though not in the way she'd think. She looks at me for a few moments, evidently thinking.\n\n\"Look, they need another waiter or waitress here. If I were to ask you if you had any waiting experience, what would you say?\" She has a gentle, encouraging smile on her face.\n\n\"Honestly?\" I ask, to which she grins and gives a 'whatever' waggle of her head. \"Then I'd say yes,\" I tell her, \"I've waitressed a bit...\" she gives a little nod and I grin back, \"and then I'd trust that I'm a fast learner!\"\n\n\"That's my girl!\" she laughs. \"You'd have to come back about six when Leon's in; he's the owner.\" I think of sitting in my flat for two hours compared to this, the first friendly conversation I've had in days.\n\n\"Or I could sit here and drink coffee and chat with you while you're not busy,\" I suggest a little shyly.\n\n\"Sure, that'd be cool. I'm Mary, by the way. You?\"\n\n\"Oh, Maxine, Maxine Thomas.\" I hesitate, fighting the urge to hold my hand out to shake hands as this seems so much a man's action. She reaches across and pats my arm.\n\n\"Good to meet you, Max,\" she tells me.\n\n\"No!\" I exclaim in panic. \"No, not Max, please.\"\n\n\"Maxie? You okay with Maxie?\" she asks and I nod. \"Good; Maxie suits you better anyway. So, tell me about Maxie Thomas.\"\n\nI tell her I'm new to the area, staying in my brother's apartment whilst he's working overseas. She tells me that she came to London as part of a trip to Europe that was supposed to last three months, \"but I kinda got stuck here: I like London, apart from the bloody awful weather, I found work, made some friends... been here for three years.\" We talk on for a bit and, when a trio of customers enters, I watch Mary go over and serve them, studying her manner and how she greets them, offers the menus, takes their orders and finally brings their food and drinks. \"You're very good,\" I tell her, \"a natural.\"\n\n\"Thanks, Maxie. It's really not too hard; just try to be welcoming and concentrate really.\" When another couple of customers arrive Mary suggests that I try a bit of waiting. \"Then, when Leon asks you, you'll be telling the truth about having some experience,\" she points out in a whisper.\n\n\"Okay,\" I agree, but very nervously. Nevertheless, trying to emulate Mary's warm, friendly manner and with her guidance and support I greet the couple, show them to their seats, provide menus and even take their order. Mary retreats to the small bar area after passing the order to the kitchen and I take a seat nearby. When their food is ready, the two of us convey it to the couple. \n\n\"What did you think?\" she asks as we return to the bar area once again.\n\n\"It was okay,\" I tell her, \"but how did I do, Mary?\"\n\n\"You did fine, Maxie. You were nervous, that's understandable, but you made them feel very welcome and did everything right. I guess you are a fast learner,\" she smiles.\n\nWhen Leon arrives later I have even more reason to be grateful to Mary as, after I ask Leon for the job, I am given an on the spot assessment: \"Okay, let's see you take the order for that table over there,\" he instructs. I obviously do well enough because he offers me the job and asks whether, since one of the waitresses has phoned in sick, I'm available this evening. I guess the panic shows on my face because Mary jumps in before I can reply.\n\n\"Of course she will; a little ripper like her'll have no worries,\" she pats me on the shoulder.\n\n\"Erm, yeah, sure,\" I agree somewhat reluctantly. \"Am I dressed okay? All the others seem to be in black trousers or skirts and white tops,\" I ask looking down over the pale salmon blouse and mid-blue trousers that I'm wearing.\n\n\"I think there's a something that'll do for you in the staffroom,\" Mary says. \"C'mon, let's get you sorted before we get more customers.\" She leads me through the back of the restaurant and into a small, slightly tatty room with several dilapidated lockers, a worn, scratched table and a couple of chairs. She goes over to one of the lockers and opens it, pulling out a black skirt which she holds up for me to see. \"Here you go Maxie, this should fit you. Try it on.\" I hesitate, expecting her to leave but she doesn't move. Hmm, is changing in front of each other a general girl thing or is it just Mary? Oh well, at least this won't be my first time in a skirt, even if I've never worn one in public before.\n\nOnce it's on I find that this skirt is noticeably shorter than the one I wore at home, barely reaching mid-thigh, and I feel very exposed. \"Strewth, it never looked that sexy on me!\" Mary laughs. \"Of course, you've longer legs than I do. Okay?\"\n\n\"It's a bit shorter than I'm used to,\" I reply earnestly.\n\n\"Looks good though and it certainly won't do any harm to the tips you get from guys!\" she smiles. Can I go out wearing this? Dare I? \"C'mon, Maxie, you look great and the girlie pink shoes work too.\"\n\n\"Okay, Mary, you've been very good to me so the least I can do is trust you on this,\" I tell her, hoping I can find the courage to go through with it. Her smile helps.\n\nMy heart hammers as I head out into the restaurant. Colin, the other waiter, doesn't react and, as we pass his little office, Leon just gives me a nod, though I notice his eyes travelling down and up my legs a couple of times first. Somehow, this comes across more as a mixture of checking I'm suitably dressed and simple appreciation than as lechery, perhaps because he immediately returns to the paperwork he was doing.",
        "Mary takes me through to the kitchen and introduces me to Paul, the chef, and Steve his assistant. \"And over here is Angie, who helps with the wash-up and some of the prep...\" I turn to follow her gesture.\n\n\"Agnieszka!\" I exclaim in surprise.\n\n\"Oh, Miss, er Thomas?\" she replies, equally surprised. \"You are here?\"\n\n\"Maxie's just joined as a waitress, Angie. So you two know each other then?\"\n\n\"Well, sort of. Agnieszka used to be my brother's cleaner but I can't afford to pay her so this morning I had to...\"\n\n\"You give me sack!\" she interrupts in an angry tone.\n\n\"Yes, but only because I have no money to pay you; I gave you practically a quarter of all the money I have as compensation.\"\n\n\"A quarter?\" Mary asks, \"That seems a lot to take from Maxie, Angie.\"\n\n\"She has a nice place to live, and I need money for rent and food and things too,\" Agnieszka retorts and Mary is about to speak again.\n\n\"No, it's okay, Mary,\" I tell her, \"It was only a hundred and twenty quid. Look, Agnieszka: okay, I do get to live there for free but I don't have access to Max's money. I paid you as much as I could but, well, if I had Max's money would I be working here?\" She looks at me and finally nods.\n\n\"Is true, I guess. You are nicer person than your brother, I think. That's why you are poor,\" she gives a slight smile.\n\n\"Angie's right,\" Mary agrees, \"better to be good but poor than to be rich and a bastard!\"\n\n\"So, no hard feelings, Agnieszka?\" I ask. I am surprised by how much I want her to accept me and think well of me; Max wouldn't have given a fuck about what a woman like her, a lowly cleaner, thought of him.\n\n\"Okay, Maxie. And you call me Angie like all the others, okay? You sound like my mother with your Agnieszka, Agnieszka, Agnieszka.\"\n\nThe evening passes steadily, though being a Monday night, it is not very busy. This suits me fine as there isn't the bustle and pressure while I'm still learning. It also gives me a little time to chat a bit with the others so that by the end of the evening I know more of Colin (he's gay, lives with his partner, John, and has a wickedly funny way of referring to customers), Paul and Steve the chefs (who are a bit of a double act, always bantering back and forth to point where, had I not heard Paul mention his wife and Steve his girlfriend, I might have thought them a couple!) and even Angie (whose boyfriend dumped her yesterday, which might explain her general anger and impatience with the world).\n\nOkay, the pay is crap, not that I'll get any money until Friday, my feet are agony by the end and customers range from lovely to downright rude but, as I say goodnight to my new colleagues, and, in Mary's case at least, new friend, I find that I've enjoyed working more than I have in years and I feel good about myself.\n\nI sleep very well.\n\n<center>- - - - - - - - o o O o o - - - - - - - -</center>\n\nCHAPTER 7: The Curse\n\nMy new life begins to settle down and I almost stop noticing my new body. Almost. I still have to concentrate on how I walk and speak at times and I'm sure the others at Leonardo's find me a bit eccentric occasionally. The thing I struggle most with is my wandering eye when it comes to attractive women, something Mary has noticed once or twice. I think I passed them off as my attention being caught by an item of clothing or jewellery each time but I wouldn't be surprised if she wonders about my sexuality. However, it doesn't seem to hinder our friendship and I'm always on my best behaviour with her, despite the crush that I suspect I'm developing towards her. I am very careful not to think about her when playing with myself; although this doesn't mean that women don't feature in my fantasies.\n\nI'll confess: I have wondered what it would be like to be fucked by a guy -- not by a vicious, heartless wanker like Jason or Max, obviously, but lovingly and gently. I find the idea of my cunny being penetrated is a real turn on; what it would feel like, the intimacy, even the idea of a cock ejaculating inside me are all very arousing. However, the moment I include a guy on top of me, his hairy body, his face, kissing him... ugh, I cannot stand it. I'm such a crazy, mixed up bitch, as Max might say.\n\nI'm still enjoying working at Leonardo's, on the whole. The hardest thing so far has been a large group of blokes late one evening, who had obviously all been drinking. Mary could tell I was nervous. \"Just go and be friendly. They'll probably try and flirt a bit but if you're a good sport it usually gets you a bloody good tip at the end,\" she advised me. \"Of course, if they start being drongos then you'll need to pick the ringleader and put him down a bit. Don't swear at him but, you know, find a way to mock him, just a little, and put him in his place. Understand?\" I said I thought I did and Mary promised to keep an eye on me.\n\nMary's prediction was right and the flirting began almost from the start. What was much harder was the touching: several times I felt a hand rested or brushed against my thigh or bum as I took orders for starters and drinks. This 'accidental' contact continued and my ignoring it didn't help. It was noisy in the restaurant and, as I took orders for main courses, I had to bend forward to hear what was being said. Suddenly there were hands on my hips as one of the men squeezed past behind me. He ground himself against my bum and I could feel, as he no doubt intended, the solid, swollen lump of his erection in his trousers. My immediate instinct was to push him away and tell him to fuck off but before I could say or do anything he said loudly, for the benefit of his mates, \"Oh, sorry, love. It was a bit hard to get past. I hope there are no hard feelings!\" \n\nThe others at the table found his pathetic schoolboy humour the acme of hilarity and started laughing. I remembered Mary's advice about dealing with the ringleader. \"Oh, don't worry,\" I told him calmly but equally loudly, \"there was hard-ly anything to feel at all! Are you sure you want another pint of beer?\" Okay, it wasn't Oscar Wilde but the men at the table laughed, and there were cat-calls of \"She got you there, Rob!\" The bloke looked annoyed at first but then had to pretend it was all just jokes, as I did. I glanced across at Mary who had been ready to intervene but she gave me a smile and a discreet thumbs-up.\n\nMy success helped my confidence tremendously and the next inappropriate hand got a gentle slap and a smile as I shook my head. \"Don't be naughty!\" I warned and the guy grinned but stopped trying to touch me. It calmed down a bit after that and I found that Mary was right: it was a bloody good tip that they left at the end. \n\n\"You done good, girl,\" Mary complimented me afterwards. \"You dealt with that big galah grinding your arse perfectly.\"\n\n\"Yeah, thanks Mary, but I'd rather not have to put up with being groped for a bigger tip,\" I told her as we head to the staff room but she just shrugged as if it were just part of the job. As we pass Leon's little office we hear loud swearing and look in through the door.\n\n\"What's up, mate?\" Mary asks.\n\n\"This bloody spreadsheet won't damn well work, that's what up. I've spent hours on it,\" he complains.\n\n\"Whoa, he's on his own there, isn't he Maxie? Sorry boss,\" she tells him regretfully.\n\n\"Actually, can I have a look?\" I ask. He gives me a wary look before nodding and sitting back to allow me to look. I bend forward to study the spreadsheet. He's trying to set it up to collate the takings, wages and purchases with taxes and profit, and produce monthly totals. After a few minutes, I can see several errors and tell him so. \"Shall I show you?\" I ask and he slightly hesitantly agrees. \"Here, the formula has a space in it... this formula that references the VAT rate needs that cell reference fixed,\" I edit the formula, talking as I type, \"like that and then you can copy it down to the other cells, so... and the other one was... here, in this cell: you have IF in the formula so there should be another comma and a final closing bracket... There you go.\" I say straightening up.\n\n\"Er, thanks, Maxie, that was, er, very impressive,\" Leon says.\n\n\"No problem,\" I tell him as we turn to leave.\n\n\"What the fuck, Maxie; where did you learn to do that?\" Mary asks, impressed.\n\n\"Oh, I erm, worked for a company a few years back and there was quite a lot of work on spreadsheets,\" I tell her. \"That sort of shit sticks, you know?\" I say laughing.\n\n\"You have hidden depths, Maxie, my girl, and no mistake,\" she laughs.\n\nIt's Monday, two weeks to the day after I began working at the restaurant, when Mary invites me on a girls' night out with her and her friends. \"Neither of us is working next Saturday so come with me. Come on, it'll be a laugh and you can meet my mates. They're a good bunch and you don't seem to know many people around here.\"\n\nThe truth is I really don't want to go. Today and yesterday I've been feeling low and getting irritable and short-tempered over stupid things. I guess the strain of guarding what I do and say, of learning and coping with my new womanhood, is getting to me. Whatever it is, Mary is being very good and gentle with me as is Sophie, the other waitress. Paul just tells me to sort myself out when I get angry because the cuff of my white blouse gets stained by a blob of sauce on the service counter.\n\nI've also been feeling a little achy and I'm worried I'm coming down with something so I intend just to spend tomorrow hiding indoors, maybe watch a film. The idea of chocolate is also very appealing, for some reason. However, Mary wants an answer about next Saturday and is not easily refused. \"You'll feel better by then, won't you? Oh c'mon Maxie, girl, don't be a dag.\" \n\n\"Ask me tomorrow, Mary,\" I tell her and she reluctantly accepts.\n\nI wake in the morning in agony: there is an intense, griping pain in my lower stomach that doubles me over in bed, curling me into the foetal position as I hug my arms around myself. The pain seems to radiate out, making my back and even my thighs ache, and I'm worried that I'm going to vomit. Several minutes pass and the pain eventually eases back from mind-numbing agony to merely severe pain. The minor respite is brief, and I am soon doubled up in such pain that I am crying and terrified.\n\nFinally, the pain once again eases a little and I know that I need to take some painkillers. I crawl out of bed and totter, hunched over, to the bathroom. I take the painkillers and pray that they will help and do so quickly. I stagger over to plonk myself down on the toilet to pee. I've been a bit constipated and I wonder if that might be the cause of the pain. As I wipe myself I glance down at the piece of toilet paper in my hand to see it heavily smeared with blood. \"What the fuck?\" is my terrified response. I pull up my nightie and can see blood streaking the inside of my thighs: I'm bleeding, my cunny is bleeding; oh shit, what's happening? I part my cunny lips and can see more blood. The pain must be a haemorrhage inside and the sick feeling worsens with the added fear. I need to call an ambulance or I'm going to die, I'm sure of it. I'll be found her, dead with the blood flowing from my cunny...\n\nJust then, I realize what's happening: I'm not dying it's my period. I should have guessed that Nemesis wouldn't have left out this part of being a woman. My abdomen cramps again, making me cry out. Fuck I had heard they weren't pleasant but this? Oh jeez, this hurts!\n\nI need to get cleaned up and manage a quick shower. The warm water helps a little as does the fact that the painkillers start to work, taking the edge off the pain so at least it no longer completely incapacitates me. It still fucking hurts though. \n\nI now face another problem: I have nothing to catch the blood; no, what are they called? Towels? Tampons? I wad up a big pad of toilet paper and press it over my slit. Grabbing a pair of panties I pull them on to hold the pad in place before slipping on a clean tee shirt. \n\nI lie in bed on my side with the laptop on the mattress next to me as I try to use the Internet to catch up on years of not being a woman and understand what's happening to me and what to do about it. Eventually, I doze a bit until pain again wakes me.\n\nIt's now nine-thirty and I go to the bathroom to check the pad and find blood has leaked through, staining my panties. I cannot go out like this and realize I'm going to need help so I call Mary.\n\n\"G'day Maxie, how's it going?\" she answers cheerily.\n\n\"Erm, not too good actually Mary; I've got a bit of a problem.\"\n\n\"Anything I can help you with?\"\n\n\"Erm, yes. You're going to think I'm a, what was your word? Oh yes, a complete drongo but my period's just started and I've no sanitary towels. I forgot to get some...\" My Internet research has at least given me the vocabulary to talk about this, thankfully.\n\n\"And you need your mate, Mary, to come and rescue you from being a bleeding mess!\" she laughs. \"Yup, Maxie, you're a drongo! I did think you had a touch of the old pre-menstruals yesterday.\"\n\n\"Yeah, I was a grumpy bitch wasn't I but... aaahhhh!\" My stomach cramp s again.\n\n\"Hey, you alright there?\"\n\n\"Oooh, yeah, sort of. It's just bloody painful cramps. The painkillers are only helping a bit.\" She asks what I'm taking and tells me not to be daft and that she'll buy me something much better, designed for menstrual pain.\n\n\"Oh Mary, you're an angel and I love you.\"\n\n\"Of course you do! Now, what's your address?\" She takes my address down and promises to be as quick as she can before she rings off. I am deeply moved by her concern for me and her willingness to help out at the drop of a hat. She is, even after just two weeks, possibly the best friend I've ever had.\n\nHalf an hour later I open the door to her. \"Wow, Maxie, nice place!\" she enthuses, looking around in admiration.\n\n\"Yes, it is. I wish I could afford one like it!\" I smile.\n\n\"I bet you hope your brother doesn't hurry back too soon,\" she laughs and the comment brings me conflicting emotions and thoughts. I do want to go back to being Max but, unexpectedly, I sort of don't mind the idea of being Maxine for a bit longer either, at least without periods and the resulting pain, mess and discomfort.\n\n\"No, let the bugger stay in Hong oooohhh,\" my stomach spasms painfully again.\n\n\"Here,\" she reaches into the carrier bag she's holding, taking out a small pink box, which she holds up and reads, \"take... two of these.\" She hands me the box and I open it to find two sheets of blister-packed pills. I pop two out and hobble over to the sink to take them with some water. As I tip my head back to swallow the pills the front of my shirt lifts, revealing my blood-stained panties.\n\n\"Ooo, messy!\" Mary observes.\n\n\"Oh, sorry about that; not a nice sight.\"\n\n\"Hey, no worries: we've all been there, at one time or another, haven't we? Here,\" she tosses me a packet of towels, which I catch, and then a second, which I drop. \"I shoulda known: Pommie girls can't catch!\" she laughs.\n\n\"I didn't expect the second one!\" I protest.\n\n\"Well, it was 'buy one, get one free' wasn't it? Go and get cleaned up.\"\n\n\"Thanks, Mary, you're a diamond!\" I tell her.\n\nA while later I'm wrapped in Max's dressing gown sat on the sofa with my feet tucked under me and sipping tea with Mary. \"How are you feeling now?\" she asks.\n\n\"Much, much better, thanks. It's still sore but nothing like as bad as when I woke up. I...\" I start and hesitate, unsure of how to express what I feel. \"I want you to know how much I appreciate your friendship, Mary. With, you know, helping me get the job, and supporting me and now this... you really are a wonderful friend.\"\n\n\"Thanks, you're pretty good as a friend too. But instead of getting all sentimental, if I'm such a great friend come out on Saturday,\" she grins.\n\n\"Okay, I'd love to,\" I tell her. She seems so keen for me to come, how can I refuse my friend? My very pretty, kind and loving friend. I swallow hard: I don't know what real love feels like -- I'm not sure Max was really capable of feeling it, he was too self-obsessed -- but I have never felt so... so moved, so emotional, so attracted to and so wanting to make happy as I do to this woman. I don't know if this shows on my face but she gives me a strange look. I want to say something but she speaks first.\n\n\"That's the spirit. It'll be a good night and who knows, maybe we can pull a couple of guys, eh?\"\n\n\"Um yeah, maybe, if I'm over my period.\" I don't know whether to be happy that I didn't say anything that might hurt our friendship or really fed up that she's obviously completely straight. Actually, I do know: I need and want Mary as my friend and I'm going to be her good friend back.\n\n<center>- - - - - - - - o o O o o - - - - - - - -</center>\n\nCHAPTER 8: A Night Out with the Girls\n\nFour days, that's how long the pain and my first ever period lasted, and it lost me two days at work. Mary's tablets were good but after a couple of hours the pain gradually returned and there were limits as to how many I could take. Still, I survived, with Mary's help and kindness, though the thought that I could be going through the same again in just three and a half weeks frankly terrifies me. \n\nSaturday arrives and, as agreed, I meet Mary at seven-thirty outside the library that's a short walk from the wine bar; she very kindly agreed to meet here rather than my having to walk into the bar alone. Mary's friends are a mixed bunch of half a dozen women ranging from their mid-twenties to their early forties. Wendy and Alison (the oldest woman) are married, more or less happily, Louise lives with her partner, James, Vicky and Paula have boyfriends and Jo is single but, like Mary, is definitely on the lookout for a man. There is a lot of joking and discussion on the failings and foibles of the men in their lives and of blokes in general. It is worryingly easy to join in these conversations simply by thinking of the sort of things that Max did and I find myself describing things he did as if he were an anonymous ex-boyfriend of mine.\n\nApart from Mary, I find I particularly like Alison, who shares Mary's warmth and friendliness and whose quirky sense of humour really appeals to me. She is a woman who has seen much of the world and apparently gets the joke. As the others, particularly Mary and Jo, flirt with men I find myself chatting comfortably with Paula and Alison, or Ali, as the others call her, who has no interest in other men. \"I've Dave at home with our three sons and even the dog is a boy: why do I need more males in my life?\" she replies laughing when the others try to get her involved.\n\nPaula is a quiet woman who seems almost as uncomfortable as me at times and when Jo makes a particularly lewd (but really quite funny) comment to a passing bloke the look on Paula's face is particularly disapproving. \"Are you alright, Paula,\" I ask and she gives a stiff nod in response.\n\n\"Paula's become a born-again Christian in the last few months,\" Ali explains, \"I don't think she likes us much anymore because we're all such sinners!\"\n\n\"No, that's not true,\" protests Paula, \"if I didn't like you I wouldn't be here, would I? It's just Jo and the others shouldn't behave like that, it's...\"\n\n\"Ungodly?\" suggests Ali.\n\n\"I was going to say inappropriate, but it is ungodly too. Do you believe in God, Maxie?\"\n\n\"Look out, Maxie, she'll try and convert you!\" warns Vicky, joining our conversation and Paula gives her an annoyed look. I wonder what to say and decide, for once, I can tell the truth.\n\n\"I'm not sure that there's a God,\" I tell Paula, \"but I really do believe that there's a Goddess. I wouldn't be the person I am now without Her,\" I conclude and saying this makes me smile.\n\n\"So, you're a pagan? A, what are they called?\"\n\n\"Wiccan, I think,\" says Vicky, \"or are they the witches.\"",
        "\"I think Wiccans are pagans and some of them are witches,\" says Ali before turning to me. \"So is Maxie a witch?\"\n\n\"No, but I'm not a Wiccan either. I just feel very sure that there is a Goddess,\" I tell them.\n\n\"Well, if you're so sure, what does this Goddess want people to do? How are we supposed to behave?\" demands Paula.\n\n\"I wish I knew,\" I reply earnestly, \"but I'm pretty certain that being kind and caring towards those around us is a big part of it. I really think it upsets her if we use and abuse people.\" I hear Ali laugh.\n\n\"So her commandments are: be nice to people and don't be a bastard or a bitch to them?\" Ali paraphrases.\n\n\"Sounds like good advice to me!\" exclaims Vicky and I have to agree with her... don't be a bastard to others like Max, like I was.\n\nIt's a good evening, though I'm conscious that I cannot help shying away from the few men that the others draw to the table. I don't know how noticeable my reaction is to the others and nobody comments so maybe I'm worrying too much. Later, Jo manages to hook up with a guy and goes off with him, leaving Mary to be consoled by Ali and me as the evening gradually winds down. Mary and I head back together until we part company near the restaurant. She reaches out and gives me a hug and I hug her back, grateful for her care and friendship. I feel affection, deep affection for her; it is love without lust which, for me, is a novel experience.\n\nI kiss her cheek. \"Good night, Mary. Thanks for a great evening. See you for the lunch shift tomorrow,\" I say.\n\n\"I'm glad you came; I think Ali was too, she thinks you're great. See you tomorrow.\"\n\nAnd so my circle of friends expands and I become a little more Maxine and a bit less Max. However, while I feel more comfortable than I did at first, there is something unsettled and insecure about my life. I suppose that I'm waiting for the next hammer blow of Nemesis' ongoing retribution; it must be coming, I am sure, simply because I'm still not back to being Max.\n\nAs we finish work the following Thursday Mary calls me over to a table in the corner and asks me to sit. She's been a bit on edge all evening but has repeatedly dismissed my questions of what the matter is. Now, however, I can see she is really nervous. \"So, Mary, are you going to tell me why you've been so out of sorts this evening?\" I ask.\n\n\"You noticed, huh?\" she smiles, \"You're getting to know me too well, Maxie. I, er, wanted to ask you a favour, actually.\"\n\n\"Whatever you want, Mary; you're my friend and I owe you so much.\"\n\n\"Thanks but, well, this is a really big favour and I'll understand if you say no, I really will.\" she bites her lip. I've never seen Mary so anxious.\n\n\"Come on, girl, spit it out and ask me or we'll be here all night!\" I tell here.\n\n\"Okay... the thing is, I've got a date next Monday...\"\n\n\"Hey, that's great news; go you!\" I tell her.\n\n\"Thanks, but the thing is... it's a double date that James, he's Louise's other half, is setting up for two of his mates from work, and er...\" \n\n\"And you need a friend to go with you on the date?\" I ask and she nods. \"And that friend is me? You want me to be the second guy's date.\" Can I date a guy? Could I for Mary's sake?\n\n\"I'm sorry, Maxie, I knew this wouldn't be something you'd feel able to do, but I had to ask. I was going to ask Jo but she's going out with the guy she met last Saturday. I'll, I'll try to ask someone else.\"\n\n\"Hey, hold your horses, I haven't said no yet!\" I tell her.\n\n\"Yeah, but you're going to...\"\n\n\"I'll do it,\" I blurt out before my courage fails me. \"Like I said, I owe you loads...\" she has a big grin on her face, \"but, after this, we might be pretty well even!\" I warn.\n\n\"Thanks, Maxie, you're the best!\" she tells me as she leans across to hug me. \"There's just one thing,\" she says quietly, \"you will get dressed up for the date, won't you? You know, a nice dress and a bit of lippy?\" I groan inwardly; perhaps I should have thought a bit more carefully about what I was getting myself into.\n\n\"For your sake, Mary, of course I will,\" I promise.\n\n<center>- - - - - - - - o o O o o - - - - - - - -</center>\n\nCHAPTER 9: Trying to Cross a Line\n\nWhat did I get myself into? Okay, buying a dress was fine: to my surprise, I actually find it fun, shopping with Mary and choosing a pale lilac sleeveless dress (yes, my armpits will need shaving!) with a slightly flared, pleated skirt to just below mid-thigh and that Mary enthuses over when I try it on. She wants me to buy a pair of high heels to match whereas I want flats; we compromise on a pair with low heels that I still feel a little unsteady in. The things I do for friendship!\n\nIn reality, the true test of my friendship is several hours -- too many hours -- spent learning to put on lipstick and eyeshadow. Some of the early attempts were... well, using the word 'gruesome' would be to flatter them. However, I do get better, in good part due to guidance and videos on the Internet, and I become at least moderately competent. When Mary calls to collect me she is suitably impressed. \"Strewth, you buff up well, Maxie girl! Who'd have thought?\" she smiles.\n\n\"You do know that doing this tonight means you'll owe me, don't you?\" I tell her, smiling.\n\n\"No worries, it's worth it: Tom is seriously lust-worthy!\" she licks her lips and grins.\n\n\"He'd better be, for all this,\" I warn her. \"Come on, let's get going.\" My heart is racing and I haven't even left the apartment. Nevertheless, I take a deep breath and we head off. \"So, Mary, who am I with this evening and what are we doing?\"\n\n\"His name's Andy but that's about as much as I know about him, sorry. I also don't know exactly what we're doing, though James asked if there was any food we didn't like so I assume it's a restaurant.\" \n\nOkay, I have zero interest in dating a guy but there is some flicker of pride inside me that doesn't want me stuck with some smelly, ignorant, rude gargoyle! Therefore I cannot help asking, \"Do you know what, he, erm, Andy is like? You know, to look at?\" Mary gives me a slightly surprised look at my interest. \"What?\" I ask, \"Can't I want to know if my date is going to look like Gollum?\" and she laughs.\n\n\"I've only seen him in the background of a photo but he looks okay,\" she assures me.\n\nWe meet the guys as agreed and I see Andy for the first time. I don't know what I was expecting but Andy is at once a surprise and a disappointment. He his tall but a bit gangling, reasonably good-looking, although his long, floppy hair and tendency to blink a lot detract from the impression he gives. He holds out his hand to shake as we introduce ourselves. \"Um, hi Maxine, I'm, um Andy. I er, work...\"\n\n\"Let me guess,\" I interrupt, \"you work in IT?\"\n\n\"Um, yes, um how did you know?\" he asks, blinking even more furiously as his nervousness increases.\n\n\"I think I sort of recognise the general air of geekiness,\" I tell him and he sags as if defeated and I immediately feel guilty. From Max the Bastard to Maxine the Bitch: go me. Ha, so much for Nemesis' punishment working to change me into a nicer person. \"Hey, erm, Andy, I'm really sorry; that was horrible of me. Look, however uncomfortable you feel this evening, I'll bet I feel even more awkward.\"\n\n\"I, um, I'm really here because of Tom. He desperately wanted to meet, um, Mary but was too nervous on his own so he asked me... well, he asked Ben in the office first but he was busy tonight, so...\" I feel a sudden empathy for Andy.\n\n\"Me too,\" I tell him. \"That is, I'm here for Mary and I was her second choice too. Look, let's just try and enjoy the evening together and have some fun. Okay?\"\n\n\"Okay!\" he says and smiles.\n\n\"Maxie, the guys have planned to go for a meal and then bowling. Sounds good, doesn't it?\" Mary tells me more than she asks.\n\n\"Erm, are we dressed for bowling?\" I ask and Mary leans in to whisper.\n\n\"Tom's a complete dazzler, look at him, mate! I don't mind flashing him a bit of leg when we're bowling.\"\n\nI take a deep breath. \"Alright, we go bowling. Mary you are going to owe me so much by the end of this night!\" I warn her, though I smile.\n\nIn fact, the evening goes well, starting with a meal in an inexpensive Mexican restaurant where the relaxed atmosphere is ideal for our group. The food is good too. It soon becomes clear that Tom and Mary really fancy each other, the distance between them as they sit growing ever less while the little touches and contacts becoming increasingly frequent. Andy and I turn 'Tom and Mary Watching' into a little game, counting the touches and flirts and adoring looks. \n\nAndy and I start two wagers: which of the two of them will start the hand-holding and when will it happen? I say that it will be Mary and on the way to the bowling alley and he says Tom and at the bowling alley when one of them gets a strike or a spare. We both lose because when we all stand up at the end of the meal they are already holding hands! \"Want to bet on the first kiss?\" Andy whispers as we head out of the restaurant.\n\n\"No! On their current form, if we try and catch them kissing we'll probably discover them having sex!\" I laugh.\n\nAfter a little discussion it's agreed that we'll have two teams and, unsurprisingly, the teams will be Mary and Tom versus Andy and me. As Max, I had been quite good at bowling and could usually manage several strikes and spares each game. As Maxine, I'm rubbish, not least because I find even the lightest bowling balls awkwardly heavy. However, you can always be lucky. \n\nI should, perhaps, have guessed what Andy would do when I scored the strike, given his prediction for Tom and Mary kissing. Of course, I don't guess and as I turn to the others with my arms raised in achievement and a huge smile on my face, I am suddenly wrapped in a hug by Andy. Unsure of what to do but not wanting to hurt his feelings I give a gentle hug back until Tom calls out, \"Get a room you two!\" which is pretty rich given how he and Mary are being with each other but does mean that Andy releases me.\n\nBy the end of the second game and the end of the evening, it is clear that Tom and Mary are now a couple and want to go off to be alone together. However, Mary evidently feels guilty about abandoning me. \"Go on, Mary, off you go. You've been dying to start making out with Tom all evening and what kind of friend would I be if I stood in your way now? Andy will look after me, I'm sure.\"\n\n\"Thanks, Maxie, for everything. You're such a sport and a fab best mate; I really do owe you.\" Her calling me her best mate chokes me with such an upsurge of emotion that I have to swallow painfully before I can speak.\n\n\"Hey, best mates don't owe each other. Now go on and... I don't know, have fun with Tom!\"\n\nAs they head off I feel Andy come up behind me. \"Shall I walk you home?\" he asks.\n\n\"Thank you, that would be very kind,\" I tell him.\n\nWe walk, not talking very much, as I try to work out what I'm feeling. Andy seems a nice bloke, especially once you get past his shyness. He's intelligent, thoughtful and funny and I have enjoyed his company this evening. As we near my apartment I wonder if I should invite him up for coffee. We stand, facing each other as I look up into his face. I can see he's attracted to me but I don't know how to respond. I like him but could I make love to him? I try to imagine us in bed together, half closing my eyes to try and visualize it, to imagine us making love. \n\nI am startled by his lips pressing against mine, the roughness of his stubble softly scratching my skin. It startles me and there are uncomfortable echoes of my encounter with the odious Jason but I resist the urge to pull away. This is different: Andy is a good, gentle and thoughtful man, I tell myself. Yet I'm not able to kiss back, not at first. I can feel the stirrings of arousal inside, my body's biological drive towards sex and reproduction perhaps. There is also my own desire to feel loved and, yes, a new urge to give love that has never mattered much to me in the past.\n\nI open my mouth and his tongue slides in. I begin to kiss back, to share the moment with him... but there is something wrong; the arousal gutters and dies and the kiss becomes nothing more than a mechanical mashing of our mouths. I turn my head slightly, breaking the kiss. \"I'm sorry, I can't...\" I whisper. I look back at him as I feel him tense, a cold wash of fear travelling through me as I expect to receive his anger at my rejection, anticipating shouting and insults or worse.\n\n\"No, Maxie, I'm so sorry,\" he lets go of my hand to delicately move a lock of hair from my face. \"I shouldn't have kissed you then, I just... you've very pretty Maxie, and I've loved being with you this evening.\" He smiles softly and I feel guilty, like I'm letting him down. Andy is worthy of my love and affection simply for being everything that Max wasn't and nothing that he was. However, I cannot pretend feelings I don't have, my mind rebelling at the idea: that was the sort of dishonesty and deception Max practised all the time to seduce others and Andy deserves better.\n\n\"Oh Andy, I've really enjoyed this evening too,\" I tell him honestly. \"You really are a lovely guy... you deserve a girl who can love you back. I tried but... but I just can't... sorry.\"\n\n\"Maxie, can I ask, um, are you gay, a, a lesbian? Sorry, no, I shouldn't have asked that, forget it.\"\n\n\"You don't need to apologise, Andy, it's a fair question given the way I've behaved. The answer is that I don't know but maybe, definitely maybe. Still, that'll give you something you can tell your mates to explain why, you know, I wasn't interested.\" A strange, unreadable look crosses his face.\n\n\"Do you really want me to tell people you're gay? I mean, I assume that Mary, your close friend, doesn't know you're a lesbian or she wouldn't have invited you this evening.\"\n\n\"I think Mary wonders about me but, no, I don't want you to tell people. Still, you will anyway, won't you? Rather than have to say that I just didn't fancy you. It's just what men do, isn't it?\" I flinch slightly at Andy's expression before I realize that my words have not angered him but offended him.\n\n\"Maxie, you must have dated some right fucked-up bastards, sorry for swearing but they must be. I guess some men might do that but not a man with any decency.\" \n\n\"Um, sorry, I didn't mean to offend you. I think the man I knew was definitely a, erm, 'fucked-up bastard' and you are absolutely nothing like him.\" I put my arms around him and give a hug. \"If I was, like, into guys then I'd absolutely want a guy like you.\" He smiles.\n\n\"Thank you. I think that's the nicest thing that a, um, definitely-maybe-lesbian woman has ever said to me.\" He holds out his hand to me. \"Friends?\" he asks.\n\nI ignore his hand and crane up to kiss his cheek, \"Yes, friends, absolutely. Look, do you want to come in for a platonic coffee?\" I ask and he hesitates.\n\n\"Thanks but, no, I'd better not. I know what you told me and I totally respect that but, well, bits of me still really fancy you and, um...\" \n\n\"I understand. Andy, if I meet a woman in need of a good man I am certainly going to point her in your direction.\" I tell him smiling.\n\n\"I like redheads,\" he grins. \"Night Maxie, and thank you.\"\n\n\"Night night Andy, and thank you too. Be safe going home,\" and with a final smile and wave, I head home.\n\n<center>- - - - - - - - o o O o o - - - - - - - -</center>\n\nCHAPTER 10: A Fool Rushes In\n\nThe feeling of being in some kind of limbo is getting worse. I have become, after some ten weeks and to all intents and purposes, completely Maxine: I have a circle of good friends, I have work colleagues and I have my routines and habits. Dressing has become automatic and I even wear lipstick most days. I have survived my second period and, though I still missed another day of work due to the pain, at least I knew I wasn't dying. I find that I'm starting to think of myself as a woman and that I'm beginning to struggle to recall what it was like being a man. I struggle even more with thinking of Max as me and, whenever I do, it is with a deep and bitter shame.\n\nI have also discovered many things about being a woman: that I am fair game to have things called our or shouted at me, ranging from what might be intended as compliments on my appearance to abuse because of how I look or what I wear; that men talk down to me; that if I wear shorts a man thinks he can stroke my leg when he sits next to me on the bus; that if I am with a man, Andy, for instance, salespeople and the like will talk to him rather than me, even if I'm the one making the enquiry. When I talk to the other women I find their attitude is generally 'That's just the way things are' and 'It's best not to make a fuss'. I now know why. \n\nPaul, the head chef, has been having issues with his marriage, apparently. Two days ago, on Monday, he was really low and some of us were sitting around after the restaurant closed having a drink as a way of unwinding after what had been a surprisingly busy evening. Mary wasn't there -- she's taken a week off, probably so she can be out with Tom every night -- but Angie and Colin were there. Paul had wandered off a while earlier and I decided to head home so went to the staff room to collect my bag. To my surprise, Paul was there, a bottle in his hand.\n\n\"Are you okay, Paul?\" I asked and sat next to him. He was evidently a little drunk and started spilling out his heart about how Kim, his wife, had mistreated him, not loved him, only been interested in the money he earned... it was all full of self-pity and, apparently, everything was Kim's fault. Nevertheless, I put my arm around him to comfort him, just as a friend, and I bent round, trying to see his face to get an idea of how he was feeling. That was a mistake because the next thing I knew he'd grabbed the back of my head and was pressing his lips against mine. I felt his hand on my boob, squeezing...\n\nI drove upwards with my legs, fortunately breaking his grip. \"No, Paul, you're drunk,\" was all I said before grabbing my things and hurrying out of the restaurant.\n\nYesterday I complained to Leon about what had occurred; I'd even prepared a written statement of exactly what happened, wanting to give an accurate and clear description of the events. I didn't want Paul sacked but felt that Leon should give him a formal warning so that he never tried anything like that again against me or any of the other women. Leon read through what I'd written and said he'd speak to me later. \n\nWhen later arrived Leon handed me an envelope. \"That's your wages for this week and for next. I'm letting you go, Maxie, you're not working here anymore.\"\n\n\"Why?\" I asked in disbelief.\n\n\"I spoke to Paul. You came onto him, cuddling him and trying to kiss him and then when he kissed you back, you tried to accuse him of sexual assault. You're a troublemaking little cow and I don't want you here so get out.\" I felt rage and anger boiling inside me: what came out were tears as I fled.\n\nSo here I am, out of work because a man tried to assault me. I called Mary first thing this morning and she invited me straight over to her place.\n\n\"Here, drink this,\" she tells me as she hands me a mug of sweet tea before sitting next to me. \"I know alcohol would be better but it is only ten a.m.\" She puts her arm around me as I sob. \"I can't believe that Leon was such a bastard to you. I think I'm going to resign; he can't treat you like that.\"\n\n\"He already has, Mary,\" I tell her. \"And, please, don't you resign for me: you need the work.\"\n\n\"But it's so unfair. You did nothing wrong!\" she complains.\n\n\"Apparently I did. Apparently, I led Paul on, but I did no more than you're doing to me now. I guess it's my word against Paul's and Leon doesn't know who's to blame.\"\n\n\"Well, if he wasn't sure whose fault it was then he shouldn't have sacked you... or he should have sacked Paul too.\""
    ],
    "authorname": "ScattySue",
    "tags": [
        "romance",
        "sexism",
        "violence",
        "masturbation",
        "lesbian romance",
        "first time",
        "sex change",
        "transgender",
        "love",
        "seduction"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/nemesis-visits-1"
}