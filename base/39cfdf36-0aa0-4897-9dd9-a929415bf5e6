{
    "title": "Chocolate and Caramel Ch. 02",
    "pages": [
        "We arrived in Mexico, to a small town about forty miles from Mexico City. Culture shock doesn't begin to describe it.\n\nI knew I was in a different world when I asked where the quality control equipment was stored, and they took me around back, to where it was still sitting in the shipping crates, in the weather, Some of it was ruined.\n\nThere was also a twenty acre pasture. Very few of our workers had cars. It was bikes, scooters and motorcycles, burros and horses, or they simply walked.\n\nOne of the hardest concepts for the workers to grasp was punctuality. They treated shift starts as more of a suggestion than a rule. I finally called the workers in in small groups, explained our goals in detail, gave them a weeks grace to get used to it, and started enforcing the attendance policy. After I fired the first three, the rest fell in line. I rehired the three after six months and never had another problem.\n\nAnother culture clash was the lunch period. At home, we worked a straight eight hours, taking twenty minutes for lunch, never stopping the machines.\n\nHere, it was a fight to limit it to one hour. These people didn't carry sandwiches in a cooler or lunch bag, lunch was something of a production for them.\n\nDon't get me wrong, they were excellent workers, loyal, intelligent, quick to understand. We were paying what amounted to twice what anyone else in the area was, so we got the cream of the crop. There were two more manufacturing facilities in town, a shirt factory and a knitting mill, and there was a little resentment. They actually had to raise wages to keep their people.\n\nIt took six months to get production up to speed. We tended to work a lot of overtime during that phase, something the workers weren't that keen about. I found that surprising.\n\n\"We work to live, hefe,\" explained Carlos, one of the lead men, \"we don't live to work.\"\n\nInteresting concept, to an American.\n\nThe two primary roads through town were all right, especially the one to Mexico City. All the secondary roads were unpaved, ranging from smooth gravel to goat paths. I had my trusty Cherokee brought down, along with a motorcycle, a 750cc Triumph I had bought just before we left.\n\nA smaller Honda or Yamaha would have been better, but I had always liked British bikes. It was my main form of transportation.\n\nJosh loved it in Mexico. Being a child, he assimilated and picked up the language much faster than I did. He also made friends a lot easier, kids are kids wherever you are, and nobody noted the color of his skin. In fact, if it weren't for his hair, he looked like a local with his light brown skin.\n\nHe attended a school set up just for us, a few dozen kids ranging from kindergarten to high school seniors. They were set up in two rooms and the classes were mixed, kindergarten through sixth in one room, seventh through twelfth in the other. It was further divided by teachers, three to a room. The company paid for everything. Despite the conditions, the standard of learning was high.\n\nWe lived in a little enclave for awhile, but a house became available that I fell in love with.\n\nAn old plantation house, left over from when large farms dotted the area. The land was long gone, but the house and grounds were still well taken care of.\n\nA low, rambling house with wide verandas, set up like a square U, living room, dining room, and kitchen in the middle, bedrooms in the wings. Red tile roof set off by fresh coats of whitewash.\n\nThere was a barn, ten acres of pasture, and a large field for a garden if we wished.\n\nIt also came with a maid, a cook, and a groundskeeper, all one family living separately in a three bedroom bungalow.\n\nI got the house, rent and wages included, for less than my house payment at home. I had gotten a ten thousand dollar a year raise for coming, and was banking half my pay with plenty left over.\n\nI let Gail and Gram live in my house rent free.\n\nWhat can I sat about the food? I loved it. Always a sucker for spicy food, Mrs. Rodriguez started out mild for Josh and I, but when I tasted what she cooked for her family I threatened to fire her if she didn't do the same for us. She just smiled and tried to set my mouth on fire. You couldn't make it too hot for Josh.\n\nI insisted they eat with us for the evening meal, it gave us a family atmosphere that we appreciated. Very reticent at first, soon they were just as vocal as any family could be. Josh called them aunt as uncle as a sign of respect, and they loved it. Serafina, their seventeen year old daughter, was our maid. Engaged to be married, she was saving her money. Since I paid her, I knew she didn't make much money as a maid, so I got her a job at the plant when she turned eighteen. Mrs. Rodriguez brought her widowed sister in to replace her.\n\nShe took it as personal affront that I was single, and soon I got to noticing nieces and friends of nieces would show up for the Sunday meals. Her idea of throwing hints would be to point out their attributes.\n\n\"Look at her hips, 'Berto, just made for throwing babies. And look at her breasts, high, firm, they'll fill with milk easily. Comes from an old family, good stock, that one.\"\n\nThey were an earthy people. Despite her best efforts and the obvious signs of interest from the girls, I remained single. I was still gun shy.\n\nThis was before cell phones, so we wrote letters and made once monthly phone calls to Gram, Gail, and my family.\n\nGail wrote me long letters sometimes. Mostly she avoided it, but occasionally she would mention Shondra. She married Marcus, and was expecting a child. Oddly, it didn't bother me as much as it would have once, where I was made the whole thing seem unreal. I could see her in some of Josh's features now and then, and I would remember.\n\nWe were happy once, or at least I was, but upon reflection I wondered if she ever was truly satisfied. I think being raised without regular parents, especially a father figure, didn't allow her to develop male role models, and that asshole Marvin[sensei]introduced her to sex way too early. Whatever, it wasn't my problem anymore.\n\n.................................................\n\nThe thing I missed most about home was my dojo. There just wasn't anything local. I had all my equipment, and still worked out four times a week, but it wasn't the same.\n\nI started teaching Josh at four, and now at age eight, if he tested, he would probably be a brown belt equivalent in the Japanese style, a green belt in the Chinese style.\n\nWe had neighbors, and we were 'rich gringos' to most of them. That made the kids buddy up to Josh, because we had the best snacks. Tia Rodriguez kept a close eye on them, making sure nobody overindulged. She grumbled a little, but she was from a large family, third of fourteen, and had eight herself, so she liked a lot of people around. A lot of their snacks she made herself.\n\nI ended up teaching about six boys and four girls the basics twice a week. The boys grumbled about the girls at first, but soon acclimated. Josh was my assistant instructor.\n\nI tried to teach them respect, and constraint, something that I still sometimes lacked personally. One thing I learned, the more advanced you are, the more peaceful you seemed to be. You just get to the point where you don't have to prove anything to anybody, including yourself. I wasn't quite there yet, but I was working on it.\n\n...............................................\n\nWe had some new equipment flown in from Brazil, and they sent an engineer to help us set it up.\n\nRoberto was a small man, about five five and one forty[I still thought in pounds and inches]but very knowledgeable and a good guy. I had him stay with me so he didn't have to commute all the way from Mexico City.\n\nHe watched me teach my Saturday class. They had been at it for twelve weeks, and were progressing nicely. I had bought material, and Tia Rodriguez and her sister sewed up some uniforms for them. I wanted to stress that they belonged to something, something special. They would proudly wear their uniforms to practice, then change and give them to us at the end of the session. Tia would wash them and have them fresh for next practice. We were the only ones with a washing machine.\n\nI was qualified to teach, so I contacted my old master, and he sent me the paperwork to make it official. It only cost a small fee, and I was able to teach to second degree black belt level.\n\nI was still teaching a mix of both styles, but I made sure they had the skills they needed for the Chinese version. \n\nRoberto smiled as he watched, and asked what style, I explained the mixture.\n\n\"Ah\" he said, \"I'm the same. I have a belt in the Brazilian style of jui jutsu, and I also do lucha libre wrestling, a descendant of catch fighting. Basically it's wrestling an opponent into submission. The Mexicans have their own version, it's very popular on television.\"\n\nIndeed it was. Twice a week, Thursday nights and Saturday afternoons. Josh loved it, and had his favorites. I'm pretty sure he was cursing in Spanish one night at the screen.\n\nIt wasn't just him. Popular fighters had almost rock star status, and it was nothing for supporters to fall out over them in the cantinas.\n\nEvery town of any size had its' own gym, where would be heroes trained and wrestled where they could. Bullrings, town halls, school gyms, wherever there was enough room. They didn't make much, but if fueled their dreams, and enough made it to the big time to keep them going.\n\nWe talked about fighting styles for almost two hours, before we broke and got ready to leave. We were going into Mexico City, spending the night. I had already made the reservations.\n\nI hadn't had a serious relationship with anyone yet, so about once a month I left Josh in the capable hands of Tio Rodriguez and went into Mexico City. It had a thriving night life, with lots of clubs, and yes, I pretty much got laid as often as I wanted. \n\nWe hit the rooms, got dressed, ate at a nice restaurant, hit the clubs and went hunting.\n\nThe dances were a bit different down here, but if you can learn how to do martial arts it's pretty easy to learn to dance.\n\nSerafina and her cousins taught me a lot while her husband and their dates would laugh at me until they couldn't stand it anymore, then they would jump in and help. I wasn't outstanding, but I was better than average.\n\nWe danced until three, hooking up with two Latin beauties who were into foreigners. We were walking distance to our hotel, so we strolled, arms linked, laughing and having a good time.\n\nThey came out of nowhere, five guys who didn't have party clothes on. They ranged in front of us, blocking the way.\n\n\"You gotta pay a toll, gringo. Give me your wallet and we might let you live.\"\n\nI looked over at Roberto. He had a little smile on his face, doing a little weave and bounce while he looked at them. The girls had gotten behind us.\n\nRoberto held up his hands.\n\n\"Please, amigos. It's a beautiful night, the moon is full. We have two lovelies with us. It's a night for loving, not fighting.\"\n\nHe was still holding up his hands, still doing that little weave.\n\n\"Give us your money, you stupid foreigners, before we hurt you.\"\n\nI smiled at the leader.\n\n\"You got a gun, knives, clubs, anything at all?\"\n\nIt stopped him for a minute. Then he went into a cussing fit, calling us idiots and the girls whores. I had had enough.\n\n\"Shut up, get out of our way, and no one will be hurt. Try to stop us and we'll walk over your unconscious bodies. You got about ten seconds.\"\n\nHe opened his mouth and I punched it shut. He went down, out like a light. I heard something that sounded like a sigh, and Roberto had his man on the ground. I looked at the remaining three.\n\n\"We're gonna start walking now.\"\n\nI deliberately put my foot down on the leaders' balls. Even unconscious he tried to cover up. I walked over him, and by the time I had we were looking at a clear sidewalk.\n\nWe passed a policeman on the next corner, and I told him there were two drunks behind us, passed out. He got on his radio. Drunks were bad for the tourist trade. Roberto just grinned.\n\nWomen have a distinct reaction to violence, especially if it done over them. Our girls were wild, screaming and clawing while they drained us dry. We had a nice brunch, put them in a cab, and exchanged numbers, knowing we would probably never hook up again.\n\nRoberto and I sparred a few times. He was quick, and took me down a few times, but I did just as well. If it ever developed into something serious it would be a hell of a row.\n\nHe also talked me into going to the local lucha libre gym to watch them practice. It was fun, but I didn't see a lot of martial arts skills in the bunch. I kept my face bland, the last thing I wanted to do was insult them.\n\nRoberto and the gym owner were in a discussion about the minute variations of the wrestling styles. Roberto obviously thought Brazil was better, because of the jui jitsu influence. It was amicable, though, they just agreed to disagree.\n\nThere was one guy there who was bigger than the rest, easily over six feet, probably weighing two twenty or better. He had a little skill, but came off as arrogant. He saw me watching.\n\n\"So, gringo, are you impressed?\"\n\nI kept my smile neutral.\n\n\"Yes. It's always fun to watch new styles.\"\n\nI think he wanted me to be a bit more awed.\n\n\"Think you'd like to try it, karate man?\"\n\n\"No, I'm just here with a friend, watching. Thanks anyway.\"\n\nHis friends were watching now. It made him puff up a bit more. I was bored, having seen this scenario play out a hundred times.\n\n\"So, gringo. Scared, huh?\"\n\nI just smiled.\n\n\"Terrified.\"\n\nThe other wrestlers laughed, knowing it wasn't true. He went red. then went into a torrent of abuse I could just barely follow. Apparently he questioned my heritage, hinting that I wasn't even human, being descended from goats and pigs. I let him rant, still smiling. When he finally ran out of steam he glared at me.\n\n\"So, you are too cowardly to defend your honor?\"\n\nI knew I shouldn't do it, but I needled him a little.\n\nI don't mind fighting, if it's against men of honor. Anything else is beneath my notice. Why? Do you know a man of honor?\"\n\nI was watching his body language. It was like he wrote a long note, saying when he was going to swing. Shifting my weight, I let the fist go by, harmlessly. I should have left it alone, but I couldn't help patting his cheek as he went by. The whole gym knew if I had hit him instead, he would have been out like a light.\n\nHe snapped and was about to rush me, when his friends and the owner got between us.\n\nThe owner wanted to know what happened. The guy said I had shown disrespect to his place.\n\n\"This true?\" he asked the group. No one would give him a straight answer. \n\nI tried to diffuse the situation by apologizing to the owner, saying I meant me disrespect to his place, it was just a misunderstanding due to language differences.\n\nThe guy was pretty shrewd, and knew while I had apologized to him, I hadn't to the wrestler.\n\n\"Ah. A misunderstanding. No harm then. Thank you for stopping by. Come again, anytime.\"\n\nRoberto laughed about it later while we were having a beer.\n\n\"Why didn't you kick his ass?\"\n\n\"I didn't need to.\"\n\n\"Amigo, amigo. You still don't understand the way we Latins think. He feels you threatened his manhood. He won't forget anytime soon. Free advice, don't go down any dark alleys late at night for awhile.\"\n\nHe stayed three more weeks and we sparred daily. I was soaking up his knowledge like a sponge. I took him to the airport and wished him well. I never saw him again.\n\nI took Josh home for a three week vacation. My mom, Gail, Gram, all were at the airport. The tears started when they saw us. We were hugged until our ribs felt bruised.\n\nWe stayed at our old house, Gail split a bedroom with Gram, I took the smaller bedroom, and Josh slept on the couch.\n\nThings were not going smoothly for Gail. He boyfriend of four years suddenly dumped her for a white girl. It hurt her pretty bad. She had lost her job at the hospital and was working at a rest home for almost half what she had been making.\n\n\"I need to get away, Bobby, start over. But I don't have the money. Plus, Gram is slowing down, somebody needs to watch over her.\"\n\nI thought about it for awhile as I visited old friends and family. Then I made a few phone calls. I had seen one of Gails' resumes lying on her dresser, and I sent it off.\n\nExcept for short visits we had been gone for almost three years. Things were slowly changing. I saw several mixed couples at restaurants and movies, and very few even paid attention.\n\nWithout telling Josh, I bought an almost new 125cc Yamaha and had it shipped home. It was to be a surprise for his eleventh birthday.\n\nShondra spent some time with him, but they were strangers now. Both seemed relieved when they parted.\n\nShondra didn't look so good. I saw her once, when she picked up Josh the first time.\n\nShe had probably gained thirty pounds. It didn't look good on her.\n\n\"Still working on advancing your black belt?\"\n\nShe laughed a bitter laugh.\n\n\"I haven't practiced martial arts in two years.\"\n\n\"Why? You loved it as much as I did.\"\n\n\"When Marvin went...away, I couldn't find another dojo I liked. I worked out with friends for awhile, but just stopped. It brought back memories I didn't like.\"\n\nShe had married Marcus. She showed me a picture of them with their child, a little girl. He was always large in school, but he must weigh better than three fifty now. Gail told me they weren't getting along well.\n\nJust before she left she put her hand on my arm.\n\n\"I know I already said it, Bobby, but I'm sorry. I should have been a better wife to you. I was always insecure, figuring sooner or later you would realize you were married to a nigger, and dump me for a white girl. I should have had more faith in you.\" \n\nI didn't know what to say, so I said nothing, just wishing her well in her new life.\n\nA few days before we were to leave Gail came in holding a letter.\n\n\"You did this, didn't you?\"\n\nI knew what she was talking about and didn't bother trying to deny it.\n\n\"Yeah. The contract for our plant nurse was running out, and she made it clear she was going home. It'll be good for you Gail. Good money, a free place to live, a chance to broaden your horizons. And it'll look good on your resume.\"\n\n\"What about Gram?\"\n\n\"Simple. We take her with us. She told me Marcus hardly ever lets her see her granddaughter, so she really has no reason to stay.\"\n\nIt took two days to convince her. Josh finally talked her into it, on a trial basis.\n\nSo when we got back home, Tia Rodriguez had two more members of her family. She and Gram hit it off right away. I knew it would be all right when I came home one day and Gram was in the kitchen, learning how to make tres leche[three milk]cake.\n\nShe quickly was adopted by my students, after they learned how to pronounce Gram.\n\nGail thrived, jumping into the job with gusto.\n\nSoon she was volunteering at the town clinic twice a week for four hours. The company let her do it with pay, since many of the clinic patients were our workers and their families.\n\nShe surprised me about two months after she got there by coming to my room late one night. Her bedroom was directly across from mine, on the other side of the house.\n\n\"Bobby, I need to ask you something. Something hard, at least for me. Can I?\"\n\nI wondered where this could be going so I nodded my head.\n\n\"I know why you make those trips to Mexico City. I understand, believe me. A guy can get away with it, a woman can't.\"\n\nI got some idea where this was headed.\n\n\"I'm thirty two, Bobby. I have needs, and no way to take care of them. I want you to help. Before you say anything, I'm not in love with you, and you're not in love with me. This is a temporary solution. I can handle that if you can.\"",
        "She had on her robe when she came in. Standing, she shrugged it off. The only thing under it was her.\n\nShe was beautiful in her own right. She had a different father than Shondra, and had paler skin. Taller, smaller breasted, I got an instant erection. She saw it and smiled.\n\n\"Well, I know how part of you feels about my offer.\"\n\nHer breasts were much more sensitive than Shondras', and I could almost get all of one in my mouth. I got a feeling, though she was really, really good st oral, she hadn't had the favor returned much, especially from someone who knew what they were doing. Trying to be quiet, she bit holes in my pillow.\n\nShe was much more flexible, shifting her athletic body into positions I found hard to keep up with. I tried my best, though.\n\nWhen we were done the second time she gave me a slow sweet kiss.\n\n\"My sister was an idiot\" she said,just as she slipped out the door.\n\nI quit going to Mexico City. If I could find a better lover there, she would probably kill me.\n\nDid we love each other? Yes, but not like that. We both knew it was temporary, and made the best of it.\n\nCarlos Vittorio Sanchez, the wrestler, had not forgotten me. He had made his brags that sooner or later he would catch me out and give me a lesson, but so far our paths hadn't crossed. His son, Carlos Jr., was very proud of his father, so he shared his slight. He had seen Josh around town and taunted him a few times, but true to his training, he had let it slide. There had never been an issue because Josh always had friends around him.\n\nI gave Josh the bike for his birthday. He was so happy. I limited his rides to the pasture and the grounds until I felt he was familiar enough with it. There was a trail that ran through the neighboring farms all the way to town, two miles away. I made him ask permission of every land owner before I let him go to town on it.\n\nBursting with pride when I gave him permission, he got his best friend and went to town. Her name was Angel, a sweet little twelve year old that was amazingly fast and deceptive as hell. The only one who could beat her was Josh, and sometimes she would push even him. I had just awarded her an orange belt, two belts above beginner. She was the first student to reach that level.\n\nI think Angel was a little mature for her age, and I'm pretty sure she had Josh placed firmly in the boyfriend column. Josh of course, would be the last to know.\n\nThey saw a movie, got cokes at the little cafe beside the cinema. Carlos Jr. found them, and started trouble.\n\nHe was a big kid, around five nine and one seventy, to Josh's five five and one twenty.\n\nJosh took it until he started insulting Angel. He saw Josh blush and knew he was on to something.\n\nHe was with four friends and got a little too brave. Before they realized what was going on, two of his friends had crept up behind them and grabbed Angel. She did as she was taught, and relaxed.\n\nThe elderly couple that owned the cafe came out and ordered them to leave her alone. Junior laughed and said they would let her go when they were finished with her. Josh sighed and took control of the situation.\n\n\"So this is your idea of honor? Five to two, all of you much bigger and one of us a girl? You're such a heman, Carlos.\"\n\nHe flamed red while his friends laughed.\n\nBefore he could speak Josh kept going.\n\n\"You really want this? Let the girl go, and step down this alley. Just you and me, right here, right now.\"\n\nCarlos sneered.\n\n\"No! I want everyone to see how bad I beat you. Then maybe, if you beg hard enough, we'll let her go, unharmed. Maybe we'll have some fun with her first.\"\n\nJosh kind of lost it.\n\n\"Well then swing, you lardass! You wanted it, you start it.\"\n\nIt was short, fast, and ugly. Carlos swung, hit empty air, and Josh was all over him. Two lightning fast punches to the face, then a kick to the stomach. Everyone heard the air whoosh out. Josh dropped, hooked a heel around his ankle, and upended him, rolling him into a submission hold that forced his arm out and locked. If Josh applied a little more pressure, his shoulder would be dislocated.\n\n\"Submit!\"\n\nCarlos pounded the ground trying to get leverage. Josh increased the pressure. Carlos almost screamed in pain.\n\n\"I submit!\"\n\nJosh put a little more pressure on his shoulder. \n\n\"Say it louder, and apologize to Angel.\"\n\n\"I SUBMIT! I'M SORRY! PLEASE LET ME GO!\"\n\nJosh immediately rolled away and bounced to his feet. He looked at Angel and gave her a nod. She stamped down on the boy holding her, almost breaking his arch. He automatically bent forward, and she jerked back violently, causing blood to spew from his nose, from contact with the back of her head. He staggered back, holding his bleeding nose and crying.\n\nAngel and Josh stood back to back, waiting, but the fight had gone out of them. They blustered a little before skulking off, the laughter of the people who witnessed it in their ears.\n\nWhen Carlos senior heard what happened he went crazy, beating Junior for losing, then roaring out to my house. A few of his followers and the gym owner came, most to see a fight, a few to try and stop it.\n\nAngel and Josh had told me what happened, and I couldn't find fault with how they handled it. They hadn't started it, and only fought when there was no other choice. Still I was a little pissed when they got there.\n\nHe slid into the yard, and jumped out of his truck, running towards me and screaming. He was surprised when instead of backing up I ran towards him, jumped up and twirled, hitting him at the base of his neck. His nose left a two foot furrow in the dirt.\n\nWhile he was trying to get up I approached the owner.\n\n\"If you hold him down, I got a proposition that might make you some good money.\"\n\nTwo of his compatriots helped him up. When his head cleared I got in his face. I wanted him hysterically angry.\n\n\"So\", I sneered, \"You sent a gang of teenagers, all bigger, all older, to rough up a twelve year old girl and an eleven year old boy. What a thing of honor that was. Your boy deserved to get his ass kicked, but I can see his line of thought. He was emulating the cowardly ways of his father. You wanna fight me asshole? Here's the deal. We fight next Saturday night, in the arena. We don't stop until one of us is unconscious. I put up a thousand, U.S., and you do the same. Winner take all. Can you scrape that much up, you pussy?\"\n\nHe was red with anger, then went pale at the mention of the money. A thousand U.S. at the time was a lot of money. His pride forced him to agree.\n\n\"All right, see you Saturday. The fight doesn't start until the money from both is in the hands of the judges.\"\n\nThe Arena was the local bull fighting venue. A short ring would be set up, allowing a better view from the stands.\n\nWord got out about the fight, and the stands were sold out. Diego, the gym owner and local promoter, was grinning ear to ear.\n\nTia Rodriguez had sewn me a mask, insisting all lucha libre wrestlers wore them, it was part of the mystique. I wasn't too keen on the idea until I put it on. After I determined it didn't a affect my vision or reactions, I was fine with it.\n\nGram, Gail, the Sanchez family, they were all in the box I had reserved for them. Angel and her mother were invited, but hadn't shown yet. Many of my fiends and coworkers were there. Many never knew I practiced martial arts.\n\nWe were the last to go on, so I watched with interest as the warmups fought, looking for patterns and weaknesses. There wasn't a lot of hitting, mostly grappling. I would use this.\n\nFinally, the main event was over. Diego let them wait for a bit to build tension, before grabbing the microphone.\n\n\"Ladies and gentlemen, welcome to the final match. I'm sure you've heard by now, this is a grudge match, for bragging rights, among other things. It will pit our beloved style against one from a foreign devil.\"\n\nThey booed at this part.\n\n\"Please let me introduce the competitors. From out own town, The Matador.\"\n\nHe came strutting out, wearing a mask designed like a bull breathing fire, topped by a matador hat and a red cape. He had on bright red tights to match his mask. The crowd loved it.\n\n\"And his opponent, from America, The Gringo!\"\n\nI had on a mask designed over the American flag, red, white, and blue, with a large yellow star right in the middle of my forehead, all in shiny material. Instead of tights I wore my Chinese gi. which looked like a dress. I wore it because he would never be able to tell exactly where my legs were, something critical for a take down fighter. The were dark blue.\n\nWhen he introduced me I did two backflips ending in a full split, an advanced set move. They wanted a show, I'd give them a show.\n\nWe met for the traditional greeting in the middle of the ring. I offered my hand, but he ignored it.\n\nBefore the referee knew what was going on, I took the extended hand and grabbed the back of his head, pulling him into a kiss. When I broke, I smiled.\n\n\"That was for Yolanda. Tell her I enjoyed last night, and I'll give her the ten pesos after the fight.\"\n\nYolanda was his oldest daughter, reputed to be really easy. I had never met her, but he didn't know that. If I wanted him pissed, it worked. It took the referee, Diego, and two of his ring men to get him back into his corner.\n\nIt shames me to say I wanted to humiliate him, so I put on a little show.\n\nCarlos was big, vicious, and deceptively fast. We danced around a bit, and I kicked him repeatedly on his right thigh. It would slow him down, make him weaker when he tried his takedown moves. I knew from experience he was gonna walk slow and easy for the next few days. I had several opportunities to knock him out and the crowd knew it. We were both getting booed.\n\nHe had collapsed on his stool, gasping, after the second round. I refused to sit, rubbing it in. I leaned on the ropes, looking bored. After the second round, my cornerman caught on to what I was doing, and handed me a newspaper. I pretended to read, ignoring what was around me. It drove the crowd wild.\n\nHe got desperate and I got careless, and he managed to take me down in the third. It was a pretty hard scramble there for awhile but I broke loose. I heard later he said it was like trying to hold a snake, people shouldn't be able to move like that.\n\nI started regretting showing off, until he gave me a hard shot to the balls during a break. I had on my cup, of course, and he didn't get me dead center, but it still hurt like hell. To his credit, the referee saw it and stopped the round, warning Carlos. \n\nI grabbed the microphone the announcer had carelessly laid over the ropes in a neutral corner.\n\n\"Ladies, gentlemen, amigos. I honor my opponent. He has fought bravely. But it is time to end this. I'm willing to stop, now. We'll call it a draw and forget about the money.\"\n\nI got applause from many for my gesture, and boos from many who wanted to see me defeated. Carlos refused angrily.\n\nTime to end it, then.\n\nWhen the round resumed, I took my time, waiting for an opportunity. He had taken a lesson from me, aiming kicks at my thigh. Connected once, that was gonna leave a bruise. He tried a kick again, and I grabbed his leg, pulling him off balance, upending him. He tried to roll away, and I dropped onto his back, driving a knee into his kidney. The whole crowd heard the gasp.\n\nI put my arm round his neck, flipped him on top of me, wrapped my legs around him for leverage, and started applying pressure. He couldn't reach me, though he thrashed mightily, refusing to submit. It took forty five seconds for him to lose consciousness from lack of air.\n\nThe referee tapped my shoulder. I released him, and stood. The crowd went quiet, then roared as the referee held my hand up in the universal sign of victory. Everybody loves a winner.\n\n..................................................\n\nThe Arena had facilities for the matadors, so I showered and cleaned up before going out to my family. Carlos was an asshole, but he was a pretty good fighter. I had several teeth loose, a split lip, a nasty bruise on my cheek and thigh, and a sore rib.\n\nMy family was waiting for me to come out. Angel and her mother had already left, but Gram said they would be by for lunch tomorrow. Gail was laughing.\n\n\"If Gram wasn't before, she's a certified wrestling fan now. Did you hear her screaming? When he took that cheap shot, I thought she was gonna go get in the ring and kick his ass. I literally had to hold her in the seat.\"\n\nMr. and Mrs. Rodriguez were just as excited, and we were in a good mood when we went for a quick bite afterwards. Gail noticed my limp. She went into nurse mode.\n\n\"We need to ice that bruise when we get home, and you could probably use a massage.\"\n\nLater that night she gave me that massage. She checked out my equipment, then stroked me hard in no time.\n\n\"We need to make sure this thing still works right\" she said, as she climbed on top.\n\n\"Just lay back and let me do the work.\"\n\nIt sounded like a good plan to me. She said the second round was just double checking, better safe than sorry.\n\nI was bruised, contused, and drained. I slept like a rock for ten hours.\n\nI missed breakfast, so I grabbed a banana and went out on the patio. Josh was there with Angel and a few of their friends, and they all wanted to hear about the fight. \n\nI didn't glorify it, but I didn't downplay it either. It turned into a lecture.\n\n\"I gave him many opportunities to resolve our differences peacefully, but he always refused. Fighting is always the last step on the path. Remember, my students, it is always, ALWAYS, better to shake a hand than shake a fist.\"\n\nThen I shared some news. I had gotten an invitation to register our dojo with the martial arts society in Mexico City. If I did this we could participate in competitions. I had already sent the paperwork in.\n\n\"Our first tournament is in a month. All of you will get your turn to participate, but only four this time, based on your skill levels. Josh, Angel, Jose, and Carlotta will represent us. Now, we need a name for our dojo, talk to all the students and have some suggestions for me when we meet on Tuesday.\"\n\nThe kids were all excited. I knew the name would be a hot topic for discussion for the next two days.\n\n.................................................\n\nIt was almost time for lunch when Angel and her Mom showed up. At first glance I thought she was an older sister, she was that youthful looking. I found out later she was twenty seven , having married and had Angel by the time she was fifteen. It was a pretty common practice in the rural areas, at the time.\n\nShe had on a long, colorful skirt and a white blouse on, hair tied back in a bandana. It still almost reached her bottom. Deep, almost chocolate eyes. She was lean, with an ample chest and rounded bottom.\n\nShe was a single mother, her husband long departed for Mexico City, before he disappeared completely. Angel was three the last time she saw him.\n\nThe spark was there, I felt it the moment we touched. Her hands weren't soft, but strong and slightly calloused. You could tell she did manual labor.\n\nEveryone noticed how tongue tied I got around her. Where my normal confidence went I had no idea. They stayed until dark, and I drove them home. Even in this quiet area there was crime.\n\nHer house was small, but neat and homey. I got the feeling there wasn't a lot of spare money.\n\nI got back to have Gram, Gail, Tia Rodriguez and her sister all grin at me.\n\n\"What?\"\n\n\"Nothing, honey\" said Gram, \"that Rosalita sure is a sweet girl, isn't she, ladies?\"\n\nThey all agreed, sagely.\n\n\"A fine looking woman, too. It's a wonder she's not married. Maybe the right man hasn't asked her yet\" added Tia, looking right at me.\n\n\"Stop right now! I just met the woman, don't know a thing about her. Stop trying to marry me off.\"\n\nThey all just laughed and went to bed, all but Gail.\n\nGail and I had stopped sleeping together about two months ago. She had a steady man now, the young doctor she helped at the clinic. She said it wasn't that serious, but I could look at them and hear wedding bells.\n\nShe tried to tease me and I fired back, saying maybe we could have a double wedding. She got kind of quiet.\n\n\"He's hinting for something deeper, but it's only been six weeks. I told him gringos didn't move that fast. Still....he makes me so hot! And not just sexually, although he has great stamina.\"\n\nI held up my hand.\n\n\"Whoa girl, too much information there. I'm happy for you though. You deserve good things.\"\n\nRosalita and Angel became regulars at Sunday lunch, staying until dark, when I would take them home.\n\nWe would eat, socialize with the family, and take walks, sometimes sitting in a quiet part of the patio.\n\nI gave her my life history, and she gave me hers.\n\nThe youngest of thirteen, her marriage had been pretty much arranged without her input. He wasn't abusive as much as dismissive. After Angel was born, he pretty much ignored them both. They didn't really miss him when he left. She got a divorce for abandonment after seven years.\n\nIt was a month before I could get a real date out of her, If you call taking her, Angel, Gram and Josh to a wrestling match. After my match, they were addicted. Gram had her favorite, a young wrestler who always handed out flowers to the ladies, especially older ones, as he made his way to the ring. Gram had two she had pressed as mementos. He was The Lover, and wore a white mask with little red hearts. He wasn't a lover in the ring. He had a lot of talent and was relentless.\n\nDiego got the seats for us, some of the best. He was after me relentlessly to wrestle for him, I had become a bit of an urban myth, a gringo Tlaloc, the Aztec god of thunderstorms and earthquakes. He had given me the nickname.\n\nRosalita liked it when she heard him call me that.\n\n\"It suits you. You're a storm that gathers slowly, meaning you're slow to anger. But when it builds up until the pressure is too much, you, like storms and earthquakes, explode suddenly and with great violence, sometimes leaving things destroyed or shattered in your wake. I hope you never get angry with me.\"\n\nNever thought of myself quite like that.\n\nWe were in Mexico City, and after the match we had a nice dinner at one of the best restaurants in town. Chinese, something Rosalita and Angel had never tried. They loved it. I got a feeling they didn't eat out much.\n\nI got my first kiss that night. She sent Angel in, saying she wanted to talk to me.\n\n\"Thank you for tonight. We both enjoyed it, it's the best time we've had in quite awhile.\"\n\nI'm pretty sure was just meant to be a thank you peck, but it ended up lasting five minutes, gaining heat and momentum. Lips parted after about a minute and a half, tongues fighting for dominance in three. She broke it off quickly, breathing heavily, before mumbling goodnight and practically running into her house.\n\nIt took me about five minutes to get my breathing in control before I could leave. I lay awake for a long time that night, thinking.\n\nShe went with us the next Saturday for our first tournament. Two cars full, Me, Rosalita, and the kids in mine, Gail, Gram, and two sets of parents in the other.\n\nOne of the proudest moments of my life was when we introduced. Each dojo had a symbol and a flag. After a lot of discussion, the kids settled on \"Hands of Peace\", and our symbol was three hands joined together, one black, one brown, one white.\n\nWe didn't have a lot of respect when we went in. We left with six trophies. Three for katas, or in our case sets, and three for point fighting. Josh won two, Angel won two, and the others one each.\n\nI sprang for ice cream for the whole group afterwards, and had a bunch of happy, tired kids when we got home. \n\nI told them not to expect these kinds of results every time.",
        "The local paper did a little spread on us, Taking a picture of the whole group in their uniforms, the trophies held in their hands. Suddenly I had people calling wanting to join and find out our fees. I hurt some feelings when I said it was something I did for the neighborhood kids and was just a hobby. I had to promise if I did open a studio I would let them know.\n\nRosalita urged me to do it.\n\n\"It would do a lot of good, think of the positive influence it would have. We need that right now.\"\n\nShe was right. It was 1985 by then, and the drug presence was becoming more prominent. We were pretty much left alone, but it was getting bad in Mexico City and other urban areas.\n\nJosh was getting taller, filling out. He was going to be over six feet, I was sure. He was hitting the weights, and at almost twelve, he was doing ninth grade level work in the school. I could see him going to college early.\n\nI did strike a deal with Diego, and worked out one day a week with his wrestlers, teaching moves that would serve them well in the ring. His fighters started winning a lot more, and though they tried to keep it quiet, others figured it out and tried to hire me away. I stayed with Diego, this was a hobby and he was my friend.\n\nI returned to the ring two months later, talked into it by Diego, Rosalita, and my whole extended family. It was a benefit for the medical clinic Gail volunteered at, and they needed the money.\n\nI would wrestle anyone who challenged me for fifteen hundred U.S., proceeds going to the clinic. The local paper pushed it hard, and a few Mexico City papers mentioned it in their sports section. \n\nThe city I lived in was Delgado, and so I became known as the Delgado Gringo, civic pride being a big thing in these little towns. Tia made me a new mask, American colors on one side, Mexican on the other, with the yellow star still in the middle.\n\nAt first there weren't any takers, and I was just about to tell Diego I would just do it as an exhibition to sell more tickets, when the most prominent wrestler in Mexico City, The Hawk, accepted the challenge, to 'teach those arrogant gringos' a lesson. Response was so great they had to change the venue to a soccer field in Mexico City.\n\nI did my research, watching films of his matches going back a year. it was apparent to me he had a deeper background than wrestling. A few inquiries later, I found out he was a black belt in judo, no one knew how high. I was going to have to be very careful. This one could kick my ass if I wasn't on my toes. And if he won, he got to keep the money. Since I put the money up, I had a lot to lose.\n\nThe crowd was almost seven thousand. The prerunners to jumbotrons had been set up at strategic places so the crowd could get a good view. Every TV station in the area was there to cover it, as well as the newspapers. A radio station was going to broadcast a running commentary. For the first time, I was nervous.\n\nRosalita and Gail kept me calmed down until it was time. We were the main event.\n\nWe went out before The Hawk, being considered the challenger. The town band was there, playing El Dugeullo, No Quarter in English, and we were proceeded out by my dojo, carrying our flag, the Mexican flag, the American flag, the flag of our local province, and the city flag, while the band played. I came out behind the band, with Gail on one arm, and Rosalita on the other, followed by Diego and Josh, who were my corner men. It was quite an entrance. The crowd ate it up. Just before I went into the ring, Rosalita gave me an intense kiss.\n\n\"Go on, Tlaloc, bring down thunder and shake the earth.\"\n\nOne of the TV stations caught the whole exchange and the crowd yelled their approval.\n\nHis entrance wasn't quite as lavish, and the effect was much less. He was already pissed off.\n\nIt was brutal. I knew from the first blow he was going for knockout instead of submission. Neither of us could gain advantage. I wanted to drag it out to wear him down. He was listed at two eighty, and I could tell despite his muscles he was used to having one too many tacos at lunch.\n\nSo I ran him, weaving in and out, striking, kicking, clinching, although I tried to stay away from that, Judo was a strong grappling art. I had a five inch reach on him, and I tried to use it.\n\nI almost lost in the third round, he caught me with a roundhouse kick that bounced me off the ropes and right back into his fists. I was saved by the bell.\n\nWhile Josh was trying to get the cobwebs out of my head, Diego was deconstructing the round.\n\n\"He almost got you, miho, watch his legs. He's running out of steam, so he's gonna push to finish it before he gets too tired and makes a bad mistake. Use your reach, and go to your left. He's not as good on that side. Remember, watch his legs.\"\n\nHe was right, he kept trying to bull me into the ropes and grapple me. I stayed in the center of the ring as much as possible, jabbing and kicking.\n\nWith thirty seconds left, I caught him with a front kick right in the mouth. He went into the ropes, expecting me to follow in. I didn't, and when he bounced back I dropped and hooked his ankle, bringing him down. In a surprise move, because I had been avoiding it all night, I rolled him up and had his arm locked before he could regroup. The match was over, submit or I broke his elbow or dislocated his shoulder. He was smart enough to know it, and slapped the canvas, the sign of submission.\n\nIt was all I could do to get up, but I staggered to my feet. He lay there for a second, before I reached down and offered my hand. After a few seconds he took it, and I helped him to his feet.\n\nAfter the announcement, he shook my hand, and held my arm up. I hugged him and told him never again. He grinned and said \"you got that right\", and we both limped out of the ring.\n\nMy little town celebrated all night. One of their own, a giantkiller.\n\nWe got interviewed by the papers, radio, and television. The fight was broadcast before every lucha libre program for three weeks. It got embarrassing. Suddenly everyone was calling me Tlaloc, having heard Rosalita on television.\n\nRosalita choose that night to become intimate.\n\nNo pain no gain got a whole new meaning.\n\n................................................\n\nI drove her home that night. She would be alone, Angel was staying with Diego, his daughter was her age and they had become fast friends.\n\nWe sat in the Cherokee, talking about the fight, and life in general. She reached for the door and I thought the night was over.\n\n\"Walk me in, please?\"\n\nHer house was small, almost spartan. I didn't know what she did exactly, but it was obvious there wasn't a lot of money for extras.\n\nShe had family pictures on the wall, and one separate section just for Angel. There was a large one of her in her uniform, and the newspaper photo of her with her trophies. The actual trophies sat on a shelf beneath the pictures. I was surprised to see two of me, one taken while she and I were sitting on the patio of my house, and one of me in my lucha libre mask.\n\nShe brewed a pot of the strong coffee they favored and I had become addicted to, and we sat on her sofa.\n\nThe distance between us closed gradually until we were snuggled together, kissing.\n\nShe stood, reached down to me.\n\n\"Come.\"\n\nWe went to her bedroom. She stopped turned to me, and kissed me fiercely, then stepped back.\n\nShe pulled the drawstring on her blouse, shaking it off her shoulders, showing her white bra. The skirt came next, until both garments were on the floor. She turned her back to me.\n\n\"Unhook me.\"\n\nMy hands were actually shaking as her bra came off. I stood, admiring her toned back, the delicate curve of her spine down to her deliciously shaped bottom. Still with her back to me, she wriggled out of her panties. Stepping out, she turned, dropping the bra. Her breasts were small, firm, enticing. Her bottom was covered by a lush bush, a riot of black, silky hair. Pale pink lips peeked out, a testament to her arousal.\n\nHer skin was the color of rich caramel. And she did indeed looked good enough to eat.\n\nI was so moved by her beauty I just stood there, until she got impatient and started tugging my tee shirt up. Snapping out of my daze, it didn't take me long to lose my clothes.\n\nBecause I was so sore, we went slow and easy. Of average size, I was amazed of how tight she was. She told me later she hadn't been with a man for three years, the only relief she had came from her fingers and the handle of her hair brush.\n\nEmotion and lust took over, and I ignored my pain. Soon we were pounding together in want and need, reaching our mutual climax within seconds of each other.\n\nWe relaxed together for a few minutes before she snuggled to me and giggled.\n\n\"Thank you, Tlaloc, I really did feel the earth move.\"\n\n\"You're welcome, my Chalchiuhtlicue, thank you for welcoming me into your wet center.\"\n\nI couldn't see her face in the dark, but I felt her stiffen for a second, before she hugged me tightly. Chalchiuhtlicue was the Aztec goddess of lakes and water, and mate to Tlaloc.\n\nWe made love twice more, later that night and first thing in the morning. \n\nI had never seen her smile so much, as she made us a breakfast of rich coffee and fresh fruit. I drove her to pick up Angel and bring them to lunch.\n\nAngel sat in the back and grinned at us, and the smiles, knowing looks, and downright smirks on the faces of the ladies present at lunch was enough to make me consider running. All that held me there was the death grip Rosalita had on my hand.\n\n.................................................\n\nI had forgotten how great it was to be in love. Rosie and Angel practically lived with us. Angel had decided she liked Josh more as a potential brother than boyfriend, and they were almost always together. He was fine tuning her English, to the point where she was better than Rosie.\n\nWe went out as a family once a week, and Rosie and I had date night on Saturdays. Angel stayed at my house those nights.\n\nI was in love, she was in love. I proposed. She turned me down.\n\nI was so shocked I couldn't speak for awhile. When I finally calmed down and she stopped crying, I asked her why.\n\n\"I'm not a good match for you. You're an important man in this town. I don't know how much wealth you have, but I know it's a good bit. You need a woman of breeding, someone to match your stature, not a poor country girl who can barely read and write. I'm old[she was twenty seven], I can't give you a lot of children. I have nothing to offer.\"\n\nEvery time I got comfortable in that country, I would find myself getting a shock.\n\nI held her face with both my hands, forcing her to look at me.\n\n\"Rosie, baby, look at me. I don't care if you have no money. I don't care if you're a country girl. You're the one I want. I love you and only you. And you have more breeding in your little finger than those pretenders in town do in their whole body. As for children, you've already given me a perfect daughter, it would be unseemly to want more than that.\"\n\n\"Say you'll join with me, Chalchiuhtlicue, or the earth will shake with the force of my tears.\"\n\nShe started crying uncontrollable, but managed to stutter out a yes. I had already bought a ring, and had it sized. At Sunday lunch the next day, she didn't say a word, just held her hand out. I was kissed by the ladies, had my hand shook by the men.\n\nShe was, of course, Catholic, and the wedding was held in the local chapel, after a six month engagement. A lot of her family came. Josh had never seen so many kids his age, and all of them were about to be cousins. The wedding went off without a hitch, and I heard the party lasted two days. We weren't there, we were off to our honeymoon. We were gone two weeks, to Cancun, then we came back, picked up Josh and Angel, and went home.\n\nThe invasion of illegals hadn't started yet, and my family viewed her as exotic. Her natural beauty and charm put them at ease fairly quickly. Mom fell in love with her. She pulled me aside, grinning.\n\n\"Damn, honey, what have you got against white girls? You improved over your last one, and I don't mean that in an insulting way. This girl has class, she's probably too good for you.\"\n\nIt was summer vacation for the kids, and when we went back to Mexico. Josh and Angel stayed behind. My Mom practically begged Rosie to let them stay.\n\n\"I'm getting old, and I've never had much time with Josh, and I'd like to get to know my new granddaughter better. Just a week or two, please? It'll be good for Angel, help get her acclimated for when you move back.\"\n\nWe had talked that over before we got married. I had been plant manager for almost two years. I had only committed to five, and at the end of the term we were going to pass management to locals. My old plant manager was retiring in two more years, and I had been assured the job was mine when that happened. I though she would be more reticent. She surprised me.\n\n\"I can't wait to start our new life together. My family doesn't live close, I moved here with my first husband. I've got some good friends, but none are as important as my new family. It will be much better for Angel. If we stay here she is pretty limited in what she can do with her life.\"\n\nShe was right, and what she wasn't saying was she wanted her out of the area. Drugs were becoming more and more of a problem, the cartels were pretty much established and expanding their territories, occasionally disputing the borders. The conflicts were bloody, and many locals were caught in the middle.\n\nThey were taking over local governments, corrupting the cops with drugs and money.\n\nI had about six months left before we were moving back to the states when the local alcalde paid me a visit.\n\nWe always tried to maintain good relations with the government, so when he dropped by for an unscheduled visit, I thought nothing of it.\n\nNewly elected, I hadn't had a chance to meet him. The conversation shocked me.\n\nAfter exchanging pleasantries, he got down to business.\n\n\"My 'party' has looked over the needs of the community, and unfortunately, we're going to have to increase your taxes and fees by twenty five per cent.\"\n\nI was troubled. Part of the deal for us coming to the area was guarantees over these things. I couldn't understand why he wanted to violate the agreement.\n\n\"Sir, you have the advantage. Does the city council agree with this?\"\n\nHe waved his hand dismissively.\n\n\"There was no need to bother them with petty details. The tax will be paid monthly, directly to me. I will disburse it as I see the need.\"\n\nI held his gaze until he dropped his head.\n\n\"I'll have to think about this, present it to my superiors. It will take a few days to get you an answer.\"\n\n\"The first of the month is in three days. I expect to collect the tax at that time, regardless of what your people say. You have no choice if you want to keep operating. It would be a shame if the workers went on strike, or electrical service were interrupted for days while repairs were made. I'm sure the tax isn't worth the aggravation of fighting it.\"\n\nHe had a sneer on his face. I stood up.\n\n\"Out! Right now.\"\n\nHe rose unhurriedly.\n\n\"Think about it carefully. It would be a shame if the clinic had to close, or the road to your house were closed for repair indefinitely. And your lovely family, your new wife, take care of them. These are troubling times.\"\n\nI had him jammed up against my office wall, my arm over his throat, before he knew what was happening. I was eye to eye with him.\n\n\"Listen carefully, alcalde. If the first hair is knocked out of place on my wife and family, I will hold you personally responsible. As you say, these are troubling times. It would be a shame to involve the federales in such a small squabble, don't you agree?\"\n\nThere was naked fear in his eyes. He knew scrutiny from the federal government would not bode well. He tried to save face.\n\n\"Let me talk to my advisors, perhaps we can reduce the tax a bit.\"\n\n\"Understand me, this company will not pay a dime you try to extort from us. If you push us, we'll simply close and go elsewhere. To be honest, orders are dwindling, so it wouldn't take much. Think about it. And, alcade, never speak of my family again. Do you understand?\"\n\nHe rushed out of the office. I followed him out to his car. His driver was Carlos. Figures.\n\n\"You should choose your associates more carefully. alcalde.\" I was looking right at Carlos when I said it. His face turned dark, and he headed towards me.\n\n\"Stop\" said the alcalde, \"now is not the time.\"\n\nHe reluctantly got into the car and rove off. I went back to the office to think. Most of my team was already gone. Gail, myself, and two maintenance men were all that was left. Time to send them home.\n\nI called the assistant manager in, and told him I would be taking a personal day tomorrow. \n\nHe was a man I trusted, so I told him about my conversation.\n\n\"This is very bad, 'Berto. Rumor has it his campaign was financed by Don Vittorio. What are we going to do?\"\n\n\"I'm going to look into in the morning, start things rolling to protect ourselves.\"\n\nHe smiled for the first time during the conversation.\n\n\"Ah. Are you going to summon Tlaloc? Rain fire and death on his enemies?\"\n\nI just grinned.\n\n\"In a way.\"\n\nI talked the whole situation over with the family.\n\nRosie and the family were shaken, except for Gail.\n\n\"Fuck them! I'm not hiding.\"\n\n\"I don't want you to hide. What I want you to do is be careful, a little more aware ofyour surroundings. Please?\"\n\nShe agreed, and I went by the gym to talk to Diego. He heard me out, thinking.\n\n\"I hear you're thinking about taking up farming. You'll need workers.\"\n\nHe turned to his wrestlers, picking three.\n\n\"Juan, Tomas, Filipe, this is your new boss. Do a good job for him, I',m sure he'll pay you well.\"\n\nHe turned back to me.\n\n\"They start tomorrow. I'll need a little money, to make sure they have the right tools. You can trust them.\"\n\nI gave Diego a check, noting it as training fees. He knew not to cash it locally. I wondered what caliber the hoes and shovels would be.\n\nI went into Mexico City the next day, and called on a few suppliers, in case anyone was watching.\n\nThen I found a public pay phone and made a collect call.\n\nThe Vice President of our company was surprised to hear from me. He was head of international business, and we knew each other slightly.\n\n\"What's up, Bobby? The phone lines down at the plant?\"\n\nAs concisely as I could, I explained the situation. He was smart, not interrupting until I was through. We had plants in several volatile areas, and he had experience. At the end, I asked him what he wanted to do.\n\n\"Nothing. We have two days, I'll make a few calls, get things started. Be careful, Bobby, I've had a little experience with these things. If it comes down to it and we run out of time, pay the extortion. It'll give us some time. Someone will be along soon.\"\n\n\"Oh, you may want to get your family out soon. These people are well versed in terrorism, and how to get results. One of the quickest way is to attack the families.\"\n\nRosie had a fit, but in the end agreed. I surprised her and got visas for the Rodriguez family. They had been like family for years, and I didn't want them caught in the fallout. I was relieved when they all jumped at the chance. They had a daughter in America, and she was always asking them to come for a visit.\n\nThey left first, after announcing to the community that their daughter had sent them tickets. It happened all the time, and no one remarked on it.\n\nRosie, Gail, and her husband let it out they were going to visit a rural region farther south, to look at establishing another clinic. He didn't want to leave, but Gail was five months pregnant, and he wouldn't leave her in danger.\n\nInstead of going south, they went north to Mexico City. They were on a plane in ninety minutes.",
        "I was alone now, just me and the three wrestlers.\n\n...............................................\n\nA new vendor came by, and wanted a meeting.\n\n\"My name is Vincente Doran. I'm a major in the federal police force. I understand you have a little problem?\"\n\nI told him the story. We had paid the first extortion payment to give us room to plan. The next payment was due in ten days.\n\n\"What do you want me to do?\"\n\n\"Give them the money, but do it here. We'll have it wired, and will hear and tape the whole thing. Then we'll follow the money, see who the kingpin. When we get enough information, we'll arrest them all.\"\n\nIt took another two months, but they had what they wanted, the leader, and raids took place over a three month period. I was on a plane an hour before the raids started happening. I never returned.\n\n..................................................\n\nMy extended family mobbed me at the airport.\n\nRosie looked a little thicker. Maybe American food agreed with her. I said as much.\n\nShe smiled and put my hand on her stomach.\n\n\"Something American agreed with me. You're going to be a father again in five months.\"\n\nSometimes life works out like you want.\n\nShe told me after our reunion romp that night how happy she was we were out and no one got hurt.\n\n\"I was so afraid you'd get involved.\"\n\nI smiled grimly in the darkness.\n\nTia Rodriguez' sister, the widow, decided not to leave. Two nights before I was to leave, she was beaten nearly to death. I rushed to the hospital when I heard.\n\nBesides being beaten, she had two deep cuts.\n\nI got to talk to her just before the drugs took effect. She had a broken jaw, arm, hand, three fingers on the other hand, and ribs. Sixty eight stitches to various parts of her body. She was sixty nine.\n\n\"Tell me Maria, who did this?\" I whispered in her ear, so no one else could hear.\n\nShe grasp my hand.\n\n\"Carlos\" she croaked, \"machete. He asked what you were going to do about it.\"\n\nI hugged her as she fell asleep, then made arrangements to pay her hospital bill.\n\nI stopped by the gym.\n\n\"Sent word to Carlos. Tell him tomorrow afternoon, Rosalita's house. And tell him to be sure and bring his machete.\"\n\nDiego tried to talk me out of it, then gave up.\n\n\"Tell him to come, Diego. Make sure he knows I'm not the only one with a family. He better be there.\"\n\nIt was quiet in her old house, all the furniture given away, waiting for its' new occupants.\n\nI had Rosie's machete. It was well balanced, worn but serviceable, and razor sharp. I watched her cut some sugar cane with it once, amazed at the ease she had cutting through the stalks. I tested the edge, it was razor sharp. She laughed.\n\n\"I'm a single woman. There have been times when I had to dissuade a wouldbe suitor. It cuts more than cane, if it has too.\"\n\nIt was a lot like a short Chinese broadsword I had used. I worked with it for a few hours the night before and this morning, until I was comfortable.\n\nHe came, but not alone. He had four men with him, one his son. I stood in the door and smirked at him.\n\n\"Afraid to come alone?\"\n\nHe grinned back.\n\n\"No, gringo. I wanted witnesses to your death. On the off chance I lose, they will shoot you, so you die either way.\"\n\n\"I don't think so\" said a voice from the tree line. \n\nDiego and three of his men were there, each with a pistol or rifle. They all had on plain luche libre masks.\n\n\"Whoever wins, walks away. Then it will be over. Agreed?\"\n\nThe men nodded. Carlos looked uncomfortable, which made me grin wider.\n\n\"Well, let's see how you do against a man, instead of an old woman. Or you could drop to your knees and beg for your life. Do it, and I might let you live.\"\n\nI stepped out of the door, the machete held loosely by my side.\n\nKnowing he had no choice, he charged me, swinging. I easily parried the blow, hitting him on his ass with the flat of my blade as he went past. It made a loud smacking sound, and had to hurt. I heard someone laughed. Everyone knew I could have killed him then.\n\nHe became more cautious, but didn't have my skills. Soon he was bleeding from two deep cuts, one on each side of his chest.\n\n\"How does it feel, puta? It's in the same place you cut Maria. Hurts like hell, doesn't it? Now, you gonna stand there crying like a little bitch, or you want more?\"\n\nHe was game. Soon he had a few more cuts, including one deep into his cheek. \n\n\"Damn, that's gonna leave a scar.\" \n\nHe had scored on me, twice. I ended up with three stitches on my neck, and five on my forearm.\n\nI got tired of the game and put him on his knees, with my machete at his throat.\n\n\"I'm done. Give me your word you'll leave this place, and I'll let you life. Keep going and all you'll be going to is a shallow, unmarked grave in the middle of nowhere. Make your choice.\"\n\nHe wanted to continue, I could see it in his eyes.\n\nBut he dropped his head.\n\n\"Can I take my family?\"\n\n\"Take anyone you like\" I told him, \"just be gone by tomorrow.\"\n\nI turned and walked away, watching the eyes of his men. When I saw his son's eye widen, I jumped sideways and turned. Carlos had pulled a pistol. Why he didn't just shoot instead of rushing me I'll never know. I reacted on instinct, watching the machete flash. His pistol hit the ground, with his hand still holding it.\n\nHis arm was spurting blood.\n\n\"Tourniquet!\" I yelled.\n\nHis son stripped off his shirt and belt. we bound the arm and tightened the belt to keep him from bleeding out.\n\nJust before they got him in the car I grabbed his head, going eye to eye.\n\n\"This ends, now. You do anything else, I'll cut off your other hand, maybe a foot. Then I go after your family. Do you understand?\" He nodded, weakly.\n\nI looked at his son.\n\n\"Make sure you both understand. I mean it, I'm tired of fooling around.\"\n\nI heard through Diego he told the hospital it was a farming accident. By no, injuries like this were getting more common, and the staff had learned not to ask. They tried to reattach it, but it didn't work.\n\nDiego shipped me the machete. It hangs with my other martial arts weapons.\n\n................................................\n\nMy mom lived long enough to see two more grandchildren, one of each, black haired beauties with light caramel skin. Our rift had finally healed, and she loved Connie, her newest granddaughter so much she almost lived with her.\n\nI got my plant manager job, as promised.\n\nRosie went to school with a vengeance, earning a high school diploma and an associate degree in four years. She is now going for her four year degree. She plans to be a Spanish teacher.\n\nI rejoined my old dojo, and bought a half interest in it. Josh and Angel are both part time instructors. Two of their old classmates had made it to America, moved to our town, and started training. I had written them all a long letter goodbye with a promise to help them any way I could. They were the only ones who took me up on it.\n\nI finally went to New York and tested, jumping two ranks at once, something rare.\n\nJosh showed them film highlights of my lucha libre career. They laughed until I took down another instructor and put him into submission.\n\n.................................................\n\nIt was a small town, so I knew it had to happen eventually.\n\nI was getting my new daughter out of her car seat. She was almost eighteen months old, speaking a mix of English ans Spanish. Rosie was standing there waiting, five months along with her new brother.\n\nWe turned around and literally bumped into her.\n\nShe had gained even more weight, she had to be over two fifty now. She was thirty six, and looked forty six. Tears glistened in her eyes.\n\n\"Hello Bobby. How are you?\"\n\n\"I'm fine, Shondra. How are you.\"\n\nShe sighed. \n\n\"Oh, I'll do. It's good to see you.\"\n\nI felt Rosie tightening her grip on my arm. She knew who she was, Gram had shown her pictures.\n\n\"Where are my manners? Shondra, this is Rosalita Margarita Consuelo Gomez Turner, my wife. Honey, this is Shondra Riley, my former wife.\"\n\nShe shook her hand coolly, before smiling.\n\n\"It's nice to meet someone from his past. I'm sure you made some good memories, just as I'm doing now. Come, honey, if you want to talk, give me Constance Julietta, it's too hot for her out here.\"\n\nHer eyes widened, we had named her after Gram and my mother, like we had planned to do, if we ever had a daughter.\n\n\"No, it's all right, You're carrying enough right now. Shondra, you should go see Gram more, she asks for you, and her health isn't getting any better. Nice to see you.\"\n\nI could see the tears forming in her eyes as we turned. I felt bad for her, until I looked into the warm chocolate eyes of my wife. \n\n.................................................\n\nThat's it. Hoped you liked it, and as always, thanks for investing the time. Votes are welcom, comments encouraged. Until next time."
    ],
    "authorname": "qhml1",
    "tags": [
        "drama"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/chocolate-and-caramel-ch-02"
}