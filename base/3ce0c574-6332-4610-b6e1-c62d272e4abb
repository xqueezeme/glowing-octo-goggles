{
    "title": "The Infinite Bk. 03 Ch. 03",
    "pages": [
        "Divine Fury\n\n\"Move it, cadets! If it were up to me, you'd be carrying water up mountain steps!\"\n\nIt was the morning of the second day, first light, and the cadets had been roused from sleep by trumpets. Around and around they went, running laps under the watchful eye of Sir Kiev. When they first started, most cadets, still drunk on the bliss of sleep, shambled almost like zombies for the first half lap. Soon enough, the adrenaline perked them up like a hard slap across the face. Noah was used to this kind of routine and tried to appreciate it. It was a cool morning, pleasant, one best enjoyed before the sun erased the dew.\n\nThat said, he was choosing to enjoy it from the back of the crowd, where he was less likely to be noticed by others. Only around half of his swordsmanship class would be able to pick him out of a group, but he wanted to hold onto every shred of anonymity he had left. On the plus side, it let him listen to a lot of the gossip and rumors going around, but unfortunately, he mostly just heard complaints. Like swearing, it was a time-tested painkiller, and various cadets would try to ease their burden by griping and grumbling to anyone who would listen, while making sure their voices couldn't be heard by Sir Kiev. Noah had found that around one out of ten soldiers would be lifelong complainers in most militaries.\n\nAt the front of the pack were the more elite and driven cadets, such as Alexis, Prince Seraph, and others, and upon completing their tenth laps, they went inside for breakfast. In the mess hall, Alexis had just settled in at her usual spot with a tray of food. On the other side of the room, she saw Sophia, bound to Galvin as if by invisible chains. With them, Prince Seraph, as well as their friends.\n\nAs much as Alexis wished she could pull Sophia out of the snake pit, she was forbidden from coming close. All the two of them could do was find comfort in each other's eyes. Galvin, noticing this, grabbed Sophia's hair and pulled it sharply, dragging her back to reality. Where she was sitting, Alexis's hands balled tightly into fists. Her dining knife, how easily it would...\n\n\"Good morning.\"\n\nShe perked up as Noah set down his tray across from her. \"Huh? Oh, excuse me. Good morning.\"\n\n\"Is something wrong?\"\n\n\"It's... don't worry about it.\"\n\nNoah wasn't convinced, but he didn't ask anything further. After breakfast, he was scheduled to study potion brewing and made his way to class. The room he entered reminded him of the various apothecaries he had visited in this world. It was full of countless ingredients, all bottled, hung to dry, and displayed. He and the rest of the cadets flowed in and found seats among various tables while waiting for the teacher. He soon arrived, an old man with a braided beard and a robe smelling like a used napkin belonging to the witches of Macbeth.\n\n\"Greetings, everyone. I am Sir Brume, and I shall be teaching you how to brew potions that will serve you as you serve the nation. I'm sure many of you have been told that knights are forbidden from using potions in all but the most severe cases, but that is only half true. There are many recipes deemed safe for you to use, though it is advised they not be consistently relied on. The potions you'll be making may be used to restore your health and improve your natural abilities, among other things.\n\nAny questions?\"\n\nFrom there, he continued with the orientation, first going over the tools and equipment they'd be using. As expected, there was the traditional cauldron, the mortar and pestle, and mincing knives, but he went on to label tools whose functions interested many cadets and disgusted others. Everything looked like it either belonged to a voodoo priest or a coroner. He described the various processes they'd be learning for preparing ingredients, such as boiling, grinding, and dissecting. This was basically an intensive cooking class focusing on bitter-tasting soups. Having a great amount of experience as a chef, Noah was more concerned with the potions themselves than the effort of making them.\n\nSoon after coming to this world, he had developed a method of magic training involving repeated mana depletion and restoration in a physically exhausted state. It greatly multiplied his mana reserves, but the long-term effects of potions proved detrimental to his ability to use magic. When he first learned to project his illusory clone, he could move considerably far from his location with a minor increase in mana expenditure. After weeks of dangerous training, combined with all the potions used during his dungeon crab raid, the range and duration had decreased considerably. He was recovering, but it was a slow process.\n\nOutside, the familiar sound of metal on metal as Valia hosted her swordsmanship lesson with a new batch of cadets. Just like before, she was gauging their skills in the best way she knew how. One by one, they'd step forward with a borrowed sword, and she'd spar with them for a few minutes, toying with them like a cat batting around a captured mouse. She never drew blood, but her swings would always come within a hair's breadth of their bodies, showing them how easily they could be killed.\n\nAmong the cadets, it was Alexis's turn to step forward. She was nervous, a feeling she wasn't used to, and the hand with which she gripped her sword was shaking. Fighting in a life-or-death battle with a herd of ogres hadn't scared her at all, but every time she looked at Valia, she felt a fluttering in her stomach. With any luck, the reddening of her cheeks wouldn't be noticed.\n\nShe faced Valia and bowed down farther than she intended, and shouted when she only meant to speak. \"I am Cadet Alexis Veres, and it is a great honor to meet you, ma'am!\"\n\n\"Ah yes, Veres. I believe I fought alongside your grandfather in the Battle of Pheron. Does he still brag about that scar on his face from the griffin?\"\n\n\"At every harvest festival, ma'am!\"\n\n\"That sounds about right. Anyway, cadet, let's see how you compare. Ready yourself.\" Both women assumed their stances, blades raised. \"Now come at me.\"\n\nAlexis lunged in the first of a flurry of swings and stabs. Her speed and concentration were pushed to their limits as she fought to impress. Her sword collided with Valia's faster than the other cadets, but her attacks were deflected and blocked effortlessly. Simply keeping the elf on the defense was like trying to run on ice. Still, she didn't give in. Having experienced countless lessons in combat from skilled teachers, as well as actual scenes of battle, she knew how to maintain her footing, control her center of gravity, and keep her nerve when attacking and defending. Archery was more her talent, but swordplay was nothing she wasn't used to.\n\nShe thought back to those lessons, the stances and forms drilled into her when she was a child. She slid herself back into those memories, trying to recreate the movements perfectly. Her attacks were majestic and precise in their execution, awing several cadets and making Valia smile in amusement. Then, without warning, Valia lashed out, and Alexis could barely block. Valia leaned in, keeping Alexis pinned with their swords grinding. There, Alexis saw it, the scratch on Valia's cheek from her fight with Noah, a feat which looked all but impossible from where she was standing.\n\nValia went on the attack, unleashing a storm of swings and thrusts like Alexis had done. The critical difference was that she displayed little effort, and despite moving faster than Alexis, she was still holding back, humoring her with every attack she allowed to be blocked or dodged. Alexis struggled to form a solid guard, just as she had struggled in her attacks. Her moves, despite her skill, were all textbook techniques, so rigidly performed that it became harder and harder to transition between them. Finally, the battle ended. Alexis tried to swallow the lump in her throat as she stared at the blade held just under her chin.\n\n\"You have good footwork, and you've clearly received prior training, but I get the sense that a sword just isn't the weapon for you. Still, you are definitely something I can work with. I look forward to watching you grow.\"\n\n\"Thank you, ma'am! This has been a true honor, and I look forward to studying under you!\" She had yet to regain control of her voice, something which would have earned laughs from the cadets, if not for the fact that she had fought better than all of them. That fact did not ease the embarrassment she felt. She returned to the group, only to receive a hard shoulder bump as the next cadet stepped forward. He was someone she knew, and though she flashed him her furious gaze, he scoffed and strode past her.\n\n\"Let's do this,\" he said as he faced Valia.\n\n\"Cadet, I will not tolerate such disrespect to myself or your fellow students. Choose your words and tone carefully. Now, state your name.\"\n\n\"Seraph Albion, not like we've never met before. You and all of these talentless rats already know who I am, and now, they're going to watch me beat you.\"\n\n\"Yes, I have watched you grow up as a prince, but you stand before me as a cadet, and you will learn respect, no matter how harshly I must teach you.\"\n\nSeraph held the largest sword available to the cadets, and he charged while bringing it down in a murderous swing. As with the others, Valia first stayed defensive, simply letting Seraph's style reveal itself. The oncoming chain of attacks took a pattern visible to most of the cadets. Regarding skill, he was around the same level as Alexis, but his speed and strength were superior, and he was forcing Valia back faster than any of the others had. He had claimed the rank of strongest cadet, but unlike Alexis, who focused on technique, his sword style was more barbaric. His attacks were broad and blunt, perfect for mowing down scores of low-level troops or beheading monsters. Against a high-tier individual like Valia, he might as well have been trying to cut a fluttering snowflake in half.\n\n\"This is what you are so proud of? Vigor is no substitute for skill,\" Valia said while moving ever out of his range.\n\n\"Fight back, damn it!\"\n\n\"Cadet Albion, do not expect me to coddle you as your previous teachers have. Unlike them, I am allowed to discipline you at my discretion, and the price of your words is steep.\"\n\nThe time had come. Valia went on the offensive, bringing Seraph's momentum to a sudden halt. His defense was as mighty as his offense, and he managed to withstand her attacks, but she was hammering his sword relentlessly. The sound of each impact was nerve-racking to the cadets, all expecting Seraph's sword to soon shatter. He held his ground as long as he could, but the escalating brutality of her swings was breaking his stance.\n\nShe was forcing him back, but even when his guard slipped, she'd still attack his sword rather than simply call it a match. His punishment was to endure the bombardment, and even this brutal act was done with the grace befitting Valia's skill. She continued smashing his defense, finally breaking him down. He fell to his knees, and she stepped on his sword while putting her own to his throat.\n\n\"I hope this makes things clear. Now, get back among the other cadets.\"\n\n\"No.\"\n\n\"Excuse me?\"\n\n\"We're not done yet!\"\n\nHe wrenched his sword from under her foot and attacked her once more. However, while his composure was lost, his power had significantly increased. He was wrapped in an aura of holy energy and rocketed towards her with a fierce roar. The gold mantle clung to his blade, with his lateral swings creating audible sound waves and his execution chops ripping apart the ground as if he was setting off landmines.\n\n\"Control yourself, cadet!\" Valia thundered as she fended him off. She held her ground with an iron defense, though the soil under her feet was not as resilient.\n\n\"Not until I beat you! I heard that other cadet managed to draw blood, and I'm not going to stop until I surpass him!\"\n\nRather than tiring, he was getting stronger and faster as he continued to fight, with the aura around him increasing in intensity. Things were getting dangerous, and even other classes were noticing.\n\n\"That is enough! Zodiac: Rakshon! Baol!\"\n\nBehind Valia, a large magic circle appeared, depicting ten large runes like the numbers on a clock. Two of the runes were glowing brighter than the others, and Valia's body briefly gained a silver radiance. Seraph swung at her neck, only to be shocked when he caught his sword with her bare hand. Her skin had become as tough as steel, and her physical strength surpassed his. Seraph's power was too great for her to come out unharmed despite her enhancements, and her blood trickled from her cut hand.\n\n\"That should satiate your thirst for blood,\" she hissed.\n\nShe struck the flat side of his sword with the edge of hers and shattered it, then grabbed the broken blade and slashed Seraph across the cheek. The cut was deep, sending him dropping to his knees and howling in pain. In response, he flashed her a glare of utter hatred, and she kicked him hard in the side of the head and knocked him out.\n\nAt last, there was peace, but Valia could see the looks of anxiety on the cadets' faces, not just those with her. The windows of the academy buildings were filled with staff and students alike, having been drawn to watch the chaotic fight. They were staring at Valia, who had just been forced to put down a rampaging prince. While he had been the instigator, it did not look good for her as a teacher. After the rumors of her fight with Noah, her reputation had just taken a harsh blow.\n\nShe looked up and saw the infamous cadet in the potion brewing class. The two of them made eye contact, sharing looks of concern.\n\n----------\n\nAs expected, the academy mess hall was in a ruckus when lunch arrived. Rumors and speculation were flying about, with every detail either overblown or downplayed. Noah joined Alexis at their usual spot.\n\n\"So,\" he said as he sat down.\n\n\"So,\" she replied.\n\n\"Interesting first class?\"\n\n\"I would certainly say so.\"\n\n\"Did Lady Zodiac live up to your expectations?\"\n\nAlexis sighed, but there was a smile. She brushed Seraph's rampage out of her mind and thought of her own match with Valia. \"She was incredible, just as I had always dreamed.\"\n\n\"I'm guessing she took a shine to you. I had a feeling she would. I'm surprised, though, that you would pick a sword as your main weapon.\" He pointed at the glass sword on her belt with his fork.\n\n\"I will return to archery once I'm a full-fledged knight. However, as long as Lady Valia is teaching here, I will devote myself wholly to the sword.\"\n\n\"Nice. Anyway, what was the deal with that prince?\"\n\nAlexis sighed once more, this time without a smile. \"Seraph, he heard about how you fought Lady Zodiac and went mad when he couldn't match up.\"\n\n\"I am in trouble, aren't I?\"\n\n\"Assuming he doesn't get kicked out of the academy, he's going to be coming after you. If he couldn't beat Lady Zodiac, you'll be his next target.\"\n\n\"Getting stalked by a bloodthirsty prince really isn't how I expected to spend my year in the academy.\"\n\n\"I wish I could say I was surprised by his behavior. In Uther, it's common for noble families to bring their sons and daughters to formal events and parties, to show off how eloquent and educated their children are, how good they look. I've met him several times over the years, and every time, he's more arrogant and pigheaded than the last.\"\n\n\"After seeing what he's capable of, I can understand why.\"\n\n\"Everyone regards Sir Adwith Tarnas as the greatest paladin in all the lands, but Prince Seraph will surely surpass him one day. He already has an inherent talent for holy, warrior, and monk magic, and it's all gone to his head. It's bad enough without his brother Galvin filling his ears with poison.\" She spat out the name, and Noah perked up.\n\n\"Galvin? Weren't you fighting him in the battle royale?\"\n\nHer demeanor turned ice cold. \"You saw that?\"\n\n\"I did. I must say, he has a very punchable face.\"\n\nFor a moment, Alexis's icy hatred melted, and she was able to enjoy a brief laugh, but that warmth soon faded. \"He is perhaps the most despicable person I have ever met, absolutely rotten to his core, and his vitriol has been corrupting Seraph all his life. He knows just how to stroke his brother's ego and manipulate him. Even as a prince, Seraph's actions today will not go unpunished, or at the very least, he'll have used up what lenience he could expect to receive here. Even he will think twice before trying anything. He won't openly attack you when others are around. However, that's only Seraph. Galvin might try something underhanded.\"\n\nSomeone like Seraph wouldn't even be considered a threat in a normal world. He was talented, but a fool. The problem was his status as a paladin. Bad enough his magic could boost his abilities to superhuman levels, but if he really was anything like Adwith Tarnas, then he could erase Noah's illusions. He was a power-type fighter, and the last time Noah tangled with a power-type, he almost lost an arm.\n\n\"I'm starting to think I should have enlisted in another country.\"\n\n----------\n\nSubmerged up to her neck in one of the many pools, Alexis felt her stress melt away. Around her, the other female cadets bathed and gossiped. Alexis's eyes, so sharp when staring down the shaft of an arrow, now refused her will and threatened to wander, her gaze falling upon the luscious bodies of the young women moving about the clouds of steam like mystical nymphs. Same-sex relationships were frowned upon in their faith, especially here at the academy, so she didn't want to be caught with a lecherous gaze and have rumors spread. But the real reason she had to reel in her desires, to not look upon the bounty of women around her, was because she wanted to focus only on the one at her side.\n\nSophia, she slipped into the hot water next to her.\n\n\"Hey,\" Alexis said softly with a smile.\n\n\"Hey,\" Sophia replied.\n\nThey gazed at each other, each wishing to speak the words they could never let anyone else hear. Only now could Alexis let her eyes drift.\n\n\"Busy day?\" Sophia asked.\n\n\"Busy enough. How often are you working in the infirmary?\"\n\n\"Too often, and Galvin is there, watching me.\"\n\n\"What I would give to never hear that name again. I would offer my life to the gods if they erased that wretched name from all memory. I should just put an arrow through his eye socket and end this.\"\n\n\"You can't, as much as I would love it if you did.\"\n\n\"At least here, he can't bother us.\"\n\n\"Well the other women in the infirmary are kind. They don't say anything around him, but I know how they feel. And now I can truly learn how to help people and heal them. Someday soon, I'll be able to follow you in battle and patch you up.\"\n\n\"Oh, speaking of battle, I finally got to fight against Lady Zodiac. She was more incredible than I dared dream. Those days we spent as children, telling each other those stories, fantasizing of fighting for Uther beside her, trying to be like her, it feels like we've come so far.\"\n\n\"You know I admire her as much as you do, but truth be told, I never wanted to be like her,\" said Sophia. Alexis turned to her in shock, but before she could respond, Sophia's hand found hers beneath the water and their fingers became intertwined. \"I always just wanted to be like you.\"\n\n----------\n\nThe third day brought rain, and with it, mud, sticking to Gideon's face as he crawled through a labyrinth of thorns. He and dozens of other cadets were clawing their way through an obstacle course, one that seemed to go on without end. Their instructor, Sir Reyns, was watching them, a long-haired man with a pair of quarterstaffs in a sheath on his side. His sharp features gave off a hint of elven ancestry, or at least Gideon thought so.\n\nAt the moment, he was surrounded by prickly bushes pruned to reach out with long, rigid stems, like arms grabbing at whoever tried to walk by. The only way to pass them without injury was for Gideon to crawl on his stomach. His clothes hung heavy from the mud, and the summer rain that had initially cooled the cadets from the heat of their exertion now sapped their strength and made them shiver.",
        "It was all the more difficult with the giant sledgehammer he was dragging along. Maces, that was the subject of the class, and every cadet had been given a random bludgeon tool. They were each heavy and cumbersome, dragging cadets down like anchors. They gripped their weapons with pruning fingers as they slogged through the mess. To bear with that weight, that awkwardness, and to keep a hold on their weapon no matter what they were doing was the lesson they had to learn.\n\nThe next challenge was getting up a manmade cliff. It was forty feet tall and built at a steep angle out of pure clay, now slickened by the rain and streaked from the boots and grabbing fingers of cadets who had tried to climb up, only to slide back down. One cadet was halfway up, using his spiked mace as an ice axe to help him hold his place. Two cadets were standing at the base, each gasping for air and cursing their weapons and the rain.\n\nGideon, staring at the earthen barrier, instead felt his breath become steady. The rain hitting his face turned into a freezing wind, the winds that would come off the mountains at his home village in Vandheim. He was trained to fight as a child, having spent countless days making harsher climbs up mountains, always carrying a large jug of water. To stay balanced on all inclines and footings was one of the foundations of his eagle clan's fighting styles, for it made their kicks more powerful and precise.\n\nHe took a deep breath and charged up the slope, moving his feet faster than he could slide back down. He zoomed up the incline without issue, shocking the two cadets below and the one still climbing. Perched atop the cliff, he looked ahead and saw an infinite line of obstacles ahead.\n\n\"Speedy fucker...\"\n\nHearing a familiar voice, Gideon looked down at the cadet still climbing. \"Foley?\"\n\nThe dwarf looked up at him in surprise. \"Roc? Is that really you?\"\n\n\"It's Gideon now.\" He held out his sledgehammer for Foley to grab onto and pulled him up.\n\n\"Gideon, huh? You mean there was another tall ginger shit whose place you took?\"\n\n\"Well if I wasn't tall, I wouldn't be able to do this.\"\n\nHe punted Foley back down the hill, rolling head over feet and screaming curses.\n\n----------\n\nDuring the following days, Noah used his invisibility whenever possible, from the library to the bathhouse, anywhere that other cadets might try to start a conversation. He usually dropped it in situations where his visible presence was required, such as eating in the mess hall with Alexis, receiving lessons under the eye of the teachers, or sleeping in the barracks. The problem was roll call, performed at every indoor and outdoor lesson. Hearing Noah's name, the other cadets, those who had heard the rumors, would twist around to see him. The nobles were after him, each hoping to recruit him into their faction.\n\nUpon entry into the Order, bronze knights had two options. The first was to serve under a noble, usually who wrote their letter of recommendation, but not always. This was considered a relatively cushy job, spending one's days hunting monsters and bandits and helping to maintain peace in the territories. For those who took this path, promotion to silver only came after ten consecutive years of active service. The other choice was to serve the kingdom on the front lines, helping to expand the nation's borders. While far less comfortable, those on the front lines were more likely to earn notable achievements and prestige, making a name for themselves beyond whatever town they happened to be guarding and being promoted faster.\n\nA knight's loyalty, first and foremost, was to the crown and royal family, even over the lord who employed them. All royal summons had to be answered, and all orders followed, with those who refused being arrested for treason. Still, the quantity and quality of knights under a noble's employ would earn them influence in the royal courts and strengthen their authority, as well as keep their lands safe. The great houses would comb the ranks of bronze knights in search of promising individuals they could recruit. At the academy, their sons and daughters were doing the same, searching for Noah like sharks following the scent of blood. Unfortunately, Seraph's attack on Valia had further chummed the water.\n\nIt was the fifth day, final class when he ended up on the prince's radar. It was a life skills class, one that would teach everything from equipment management to cooking in the field, and the only class the two of them shared. Roll call, his name was announced, and he immediately felt bloodlust aimed in his direction. Seraph had locked eyes on him, and Noah's anonymity was spent. As soon as class ended, he backed out of everyone's line of sight and turned invisible, then escaped before Seraph could do anything.\n\nThe next day was one he and all the other cadets had been waiting for. It was the unofficial \"weekend,\" a term no native of this world was aware of, and it meant a break from classes. It was a chance for the cadets to rest and study how they wished, and while most enjoyed the former, Noah wasn't going to waste the latter. He planned on spending the whole day in the library, the same way he had been spending all of his free time.\n\nAfter breakfast, he secluded himself in an isolated corner with a stack of books. While reading, he'd take notes, scratching on parchment with a quill and inkwell. He had grown accustomed to the handwritten texts and could now speed through them. Unfortunately, the authors of these books tended to meander around topics like they were writing online recipes, and he had to sift through a lot of useless information before finding anything of value. Through his dives, he found out most knowledge of runes originated from the Enochians, and was passed along by the elves. Much had been lost to time, and humanity struggled to regain that knowledge. Still, what he found did interest him.\n\nThere were runes not just for fundamental concepts like gravity, but also abstract concepts, such as emotions and desires. For such symbols to exist, a sentient mind would have had to create them, and to the primitive humans of this world, magic circles would have been interpreted as a contract with God, a form of acknowledgment and communication from an inarguable authority. Did runes prove that sentient gods existed in this reality? Could they have even made this reality?\n\nTo Noah, the magic circles were not contracts written in an abstract language but mathematical equations. Any concept could be assigned a specific numerical value and placed in a stoichiometric algorithm, one that would balance itself and produce magic. If this really was the language of the universe, it was fitting to come in mathematical form. Most of the known runes had already been identified, but many were yet to be translated. They would appear in magic circles, an unknown variable within the equation. Since their designs followed patterns based on their subject, many runes had been predicted before ever being witnessed, though their meaning had yet to be determined. Noah hoped this to be accurate, that the runes for his magic and immortality still waited to be found.\n\nWhen morning turned to afternoon, he decided to change direction. He needed a written spell he could perform in his next magic class, so he went searching for something easy. He wasn't the only one, as by now, every cadet had attended Sir Elyot's first lesson and had the same assignment. He'd see them with their faces buried in books or getting reprimanded by the librarian when they tried casting magic. Paper used in runecraft deteriorated when the spell was used, so casting spells directly from the library books was forbidden and considered damaging academy property, not to mention the spells themselves could be dangerous.\n\nIt didn't take long for Noah to find one that caught his eye. It was a light spell, the same one that Sir Elyot had used, but slightly smaller, allowing the user to make their finger glow like a candle flame. Simple and practical, just the way he liked it. Noah copied the runes precisely on a sheet of parchment. The librarian was on the other side of the bookshelf labyrinth, so he decided to give it a shot. He placed his hand on the parchment and channeled his mana, just as he had with the crystal ball on enrollment day.\n\n\"Light Finger.\"\n\nThe spell was uttered, and a magic circle appeared around his finger, but no light was produced. He looked all over his hands and even under his clothes, but no part of his body was lighting up. This wasn't making any sense. The runes were perfect, and the cost was next to nothing. He felt his mana flowing through the parchment, and the magic circle appeared. Was the light simply too dim to be noticed during the day? What was the issue?\n\n'Sir Elyot did say to keep looking if our first choice doesn't pan out. I guess this will take a little time.'\n\nHe continued testing spells, but the result was the same no matter what he tried or what avenue he went down. The runes would glow, and a magic circle would appear, but the spell wouldn't manifest. After hours of failed attempts, he finally sat back and sighed. What was he doing wrong? Runecrafting was about balancing the equation, compensating for that which he could not pay. Clearly, there was something he was lacking. The other cadets he had seen in the library typically found a working spell after their third or fourth attempt, but he was up to the twentieth. He had read enough about runes to be far ahead of the class, but now, he was stumped.\n\nFaced with a figurative wall while leaning against a literal one, he let his mind and eyes wander, and his gaze fell to his sword, resting on the seat next to his. He drew, snapped, and then repaired the glass blade, as easily has he had done before.\n\n'I can use enchanted weapons, but not written spells?'\n\nHe went back through his books, looking for any clues. With written spells, the parchment and the ink would manipulate, amplify, and change the nature of the user's mana, but the spell was ultimately powered by the user. Magic tools, on the other hand, required more varied and powerful materials, but the energy produced by those combinations made the spells self-sustaining. When he channeled his power into his glass sword, his mana wasn't repairing it, simply activating the sword so that it would project its own strength and repair itself.\n\n'Projection, that's the issue. When using runecrafting, my mana is strong enough for activation but can't be projected. I think it might be time to consult an expert.'\n\nHe got to his feet, began putting away his notes and books, and then left the library, making his way to Sir Elyot's classroom. The professor was there, along with some other cadets pouring over books. Noah knocked on the door as he entered.\n\n\"Excuse me, Sir Elyot, I was hoping to speak to you in regards to your assignment.\"\n\n\"Let me guess, you're having a hard time finding a beginner spell that works?\"\n\nNoah looked around at the other cadets. \"I'm afraid it's a little more complicated, sir.\"\n\n\"More complicated? How?\"\n\n\"If you don't mind, sir, I'd prefer to have this conversation in private.\"\n\n\"Very well, come with me.\"\n\nNoah followed Sir Elyot through a door in the back of the classroom, leading to a private study. It was much like Madam Cyrilo's, featuring shelves full of books, cabinets full of potions, and various tools, artifacts, and animal remains on display, all for the pursuit of magical understanding. Unlike Cyrilo's study, the smell of dust and spilled ingredients wasn't masked by perfume.\n\nElyot sat behind his desk and faced Noah. \"So, what's the problem?\"\n\n\"I was hoping you could tell me. It seems my mana can activate written spells but can't actually manifest them. I've attempted twenty different spells, such as elemental, monk, and warrior, but none of them have worked. I copied them perfectly from books in the library. Here, please take a look.\"\n\nOver his shoulder, Noah carried a satchel filled with his notes. He pulled out several pieces of parchment, each with a different spell, and laid them out on Elyot's desk. Elyot looked them over with soft mutterings.\n\n\"Penmanship is excellent... the contracts are correctly written... the ink and parchment appear suitable... and the spells are small as can be.\" He selected one of the spells Noah had attempted, the Light Finger technique. He cast the spell, causing a magic circle to appear around his glowing fingertip while the cheap parchment crinkled and threatened to deteriorate. He released the spell and passed it back to Noah. \"Try and cast it for me.\"\n\nNoah mimicked Sir Elyot and tried to cast the spell, but there was no light while the magic circle appeared. \"Every spell I've tried has been like this. I can use enchanted items like this self-repairing sword from Lady Zodiac's lessons, but I can't project my own mana through runecraft.\"\n\n\"Hmmm, this is interesting.\"\n\n\"Is it interesting in the sense that you've seen only a few cases of this? Or that you've never seen this?\"\n\n\"If the magic circles didn't appear, I'd say the first one. However, the fact that the spells activate but don't actually manifest has me in a bit of a loop. So, you can't use crafted magic. Is there any intuitive magic you can use?\"\n\n\"Not that I know of.\"\n\n\"I'll be honest, I can't see you getting far in the Order if you can't use magic. Fortunately, this handicap is interesting enough that it might be fixable. It sounds to me like a curse, perhaps placed on you by someone else.\"\n\n\"Curses are long-lasting magic with negative side effects, right?\"\n\n\"That's right. Here, hold this. It's a fabric similar to what we used for the wristbands.\" From within his desk drawer, he pulled out a piece of cloth and handed it to Noah. As soon as it touched Noah's hand, it began to glow with a chalky hue. \"Just as I thought. That fabric reacts in the presence of active magic, but only if it's been active for at least a month. Huh, it doesn't usually produce that color. Either way, I can try to remove it.\"\n\nNoah's heart skipped a beat. Whatever force was preventing him from using magic, he didn't care about getting it removed, not when there was something else far more pressing.\n\n\"I really appreciate it.\"\n\nElyot began looking through a bookshelf behind his desk. \"Since we don't know the runes or source of the curse, we can't simply dispel it. It needs an exorcism. We'll call upon the gods, ask them to use their power and authority to break the spell. Ah, here it is.\"\n\nHe pulled a slip of parchment out of one of his books. Just from the look, it was higher quality than the paper Noah and the cadets used in their research, and the ink was shinier. Sir Elyot lit a candle, dribbled some wax onto the back of the parchment, and used it as glue to stick it to Noah's forehead.\n\n\"By the way, I didn't catch your name.\"\n\n\"Cadet Noah, sir.\"\n\n\"Cadet Noah? You're the one who fought Valia, right?\"\n\n\"That's right.\"\n\n\"Hmmm, interesting.\" He then took four orbs carved from crystal and set them up around Noah's feet in a 6x6 ft square. \"Stand absolutely still. Do not move.\" He cleared his throat. \"Terranora, God of Earth, we call upon you, your most humble servants. We beseech thee to bless us with your divine power and undo this fetid magic.\" The four orbs began to roll on the floor in a circle around Noah, defying all laws of physics. \"Terranora, the Most High, upon this soil which is your domain, a poor soul walks with an unbearable curse. With your mercy, he may be freed and know your grandeur.\"\n\nThe orbs were rolling faster and creating a smaller circle, closing in on Noah. He tried to keep his heart steady, to focus and feel whatever power and authority was within the room. If ever a miracle were to occur, if ever a divine presence were to make itself known, he needed it to be now.\n\n\"From the tallest mountains and to the greatest valleys, the vastness of your kingdom knows no bounds, and we pray that this young man may live within it without this horrible burden. In your name, we pray.\"\n\nThe tag stuck on Noah's forehead turned to dust, and he and Sir Elyot were forced to duck as the circle broke, all four orbs shooting off in random directions like cannonballs and ricocheting around the room. They smashed through walls, windows, furniture, and equipment, two even shattering and sending crystal shrapnel in all directions, several pieces of which struck Noah in the face.\n\n\"Well, I feel just so much better now,\" Noah muttered as he pulled a piece of crystal out of a wound on his forehead. \"Maybe you didn't butter Terranora up enough.\"\n\n\"That... that wasn't supposed to happen,\" said Sir Elyot, utterly bewildered and picking up his broken glasses. \"I've never seen an exorcism rebound like that before. If the spell fails, the orbs just break formation and roll away.\"\n\n\"What would cause it to fail?\"\n\n\"Not all exorcisms are the same. They vary in strength, same as curses. That was mid-level, but a reaction like that... the curse would have to be... unbelievable. How long have you had this affliction?\"\n\nNoah sighed. \"For about as long as I can remember.\" He pulled out another piece of shrapnel. He was lucky none of the pieces struck his eyes, but he was bleeding from several places. \"What now?\"\n\n\"Now? Now I'm personally interested. My pride as a researcher will be tarnished if I turn away from his intriguing challenge. As for you, you are excused from my assignment. I suggest you go to the infirmary and then head to the mess hall for dinner.\"\n\n\"Thank you, sir.\" Noah stepped towards the door, but stopped. \"Oh, by the way, may I borrow something?\"\n\nOut in the auditorium, all the cadets, having heard the loud crashes from the exorcism, were staring at the door from their desks like prairie dogs poking out of their holes. Upon its opening, they ducked back down, but instinct drew their eyes when they spotted the red of blood. Noah paid them no mind and departed, making his way through the academy and to the infirmary. This late in the afternoon, there was no line, and he stepped in to find only one healer: Sophia. She was stationed by the same bed as last time, passing the empty time with a book in her hand. Galvin wasn't with her.\n\nNoah stepped back out of the doorway before she could notice him. A dozen different arguments and scenarios ran through his brain as he weighed his decision. Enter that room or wait and get healed later? He juggled scenarios like a street performer, letting the future play out. The afternoon sun on her scarlet hair was picturesque, another masterpiece he wished to hang in the museum of his memories. Collect her he would, if not for the ball and chain. It was bad enough he already had one psychotic prince on his tail. He didn't want to start pissing off the rest of the family. How much effort would it take, killing all the people who might come after him because of her? How many pikes would be hoisted for one flag?\n\n\"Oh, is Cadet Rosege busy?\" the academy healer, carrying a basket full of bandages, asked. Having just come around the corner, she took him by the arm and pulled him inside.\n\n\"Cadet Rosege, put that book down and tend to this poor boy! How long are you going to make him wait?\"\n\n\"Excuse me,\" said Noah. 'And up the flagpole it goes.'\n\n\"Oh, uh, w-welcome!\" she sputtered while jumping to her feet.\n\n\"Sorry, didn't mean to get you in trouble,\" said Noah as he walked over and sat on the bed, causing her to pull away as if forced by magnetism.\n\n\"Please, it's my fault for letting you wait.\" She was nervous, but lacked the despair she showed when Galvin was around. Looking at Noah, there was a quizzical gleam in her eyes. Where did she recognize him from?\n\nThe old woman was digging through the basket on the other side of the room. \"Where is that...? Damn it.\" She turned to Sophia while walking back to the doorway. \"I want him patched up before I get back!\"",
        "\"Yes ma'am!\" Shaken, she turned her attention to Noah. \"What happened here?\"\n\n\"Magic experiment gone wrong.\"\n\n\"Ah, Sister Pauline warned us that we'd be seeing these soon.\"\n\n\"There are bits of crystal stuck in the wounds. Can you remove them?\"\n\n\"Y-yes,\" she said in an awkward tuft. She pulled out a pair of tweezers from the table beside the bed. \"Um, please lie down.\"\n\nNoah laid back, and Sophia leaned over, giving him the perfect view of her reddening face as she examined the wounds. She began trying to pull out fragments, but it was a struggle, not just from her inexperience but her refusal to lean on or even touch Noah. He had a feeling why.\n\n\"He's not here. You don't have to follow his rules.\" She paused, and her face momentarily went blank as she asked herself if she heard him right. \"He's not looking over your shoulder. Just focus on the job you're doing and put him out of your mind.\"\n\nHe was gentle with his words, and he sensed her body relax. It struck her, she remembered healing him before, on the first day, but she also felt like she had seen him elsewhere. \"Yes, you're right. Forgive me.\"\n\nShe leaned in, resting her hand on his forehead while she removed the crystal fragments and healed his wounds. He closed his eyes and let her work while feeling her breath on his cheek. Sophia gazed at Noah, hoping he would speak once more. Those words, murmured by a stranger who saw her despair and knew what to say filled her with relief, and she wanted desperately for him to continue. Just that tiny taste of kindness, the softest touch of support, it made the afternoon sun feel so much warmer.\n\nLying still on the bed, Noah arranged and discarded a hundred different lines, lines to make her swoon, to make her cry, to make her curse or thank him, searching for that final note in the melody of the moment. Each time, he returned to the same conclusion: he had already said all he needed to. The moment had passed, and now he let the peaceful silence carry it away like a receding tide.\n\nFinally, Sophia leaned back. \"There, all done.\"\n\nNoah sat up. \"Thank you very much.\" He bowed his head to her and got up to leave. When she saw his back, she realized where she recognized him from. Galvin kept Sophia separated from Alexis during meals, but they could always see each other across the mess hall. So too could Sophia see the young man sitting with her, just the back of his head and never his face, but Alexis always looked relieved to have him there.\n\n\"Thank you as well!\" she yelped. He turned around to see her now bowing to him. \"Not just for your kind words, but for... uh... just... thank you!\" He wasn't sure what she meant, but he smiled and nodded before departing.\n\n----------\n\nRather than the academy library, Noah spent the next day in the Uther streets. During the rest days, cadets had free reign and didn't need permission to leave the grounds. As long as they didn't cause trouble and were present for morning and evening roll calls, the academy looked the other way. It was one of the many contradicting rules set up to appease the nobles, not that Noah was complaining, for it allowed him to operate without fear of consequences, though he still used his invisibility to enter and leave the academy. Today, his goal was to visit the second-largest source of information he knew of: The Knight's Sheath.\n\nIt was quiet in the mornings, as most customers were drinking tea and nursing hangovers. Now that Knight's Day had passed, all of the holiday tourists and merchants had left the city, and only the regular customers now came around, with one exception. One table was occupied by a group of soldiers, armed and armored, without a single mug among them. Noah turned to the counter, run by someone he did not expect, nor did he expect her to leap over the counter and tackle him.\n\n\"Darling!\" Bella happily exclaimed.\n\nShe was known as a female beastman, rabbit-based, having two long ears growing out of the top of her head and a puffball tail. She was his favorite among the working girls due to her nymphomaniac enthusiasm in bed and the special discount she gave him. Her prices were too high for a commoner to have her so frequently, but every time he made her orgasm, she'd drop the price for the session. Thanks to Noah's skill, he could have her for a whole night with just pocket change. It was that skill that made this seasoned courtesan, a beauty in her late twenties, turn into a crazed schoolgirl clinging onto him with obsessive strength.\n\n\"Hey, nice to see you as well. How have things been here?\"\n\n\"Things have been crazy! Daniel's music has left us packed to the rafters every night! Everyone is talking about the stone bard.\"\n\n\"You mean the 'Bard of Rock'?\"\n\n\"What's the difference?\"\n\n\"Never mind. Anyway, I need to see Daniel and Cyrilo.\"\n\nBella gave a bitter sigh of dejection. \"They're busy, talking to a knight. Lucius is with them.\"\n\n\"What rank?\"\n\n\"Yeah, I don't know what... Oh, wait, here they come now.\"\n\nAn old dwarf came down the stairs and entered the parlor, prompting the soldiers to get to their feet. He was armored with just a chest plate, but it bore the gold insignia of the knighthood. This man, he was on par with Valia Zodiac. Noah stepped to the side as they passed, glad he had chosen not to wear his academy uniform. The dwarf and his men wasted no time in leaving, and the air immediately seemed less tense when the door closed behind them.\n\nLucius soon arrived, and upon seeing Noah, gave a sigh of relief. \"Ah, there you are.\"\n\n\"Was I expected?\"\n\n\"In a sense. You should have seen Bella yesterday. She was staring out the window for hours, waiting for you to show up. It was the most pathetic thing I had ever seen.\"\n\n\"Don't say it like that!\" Bella exclaimed.\n\n\"Anyway, if you want to speak to Madam Cyrilo, head upstairs. She'll probably want to have a word with you.\"\n\n\"Bella, I'll stop by your room when I've settled my business, so do me a favor and get yourself warmed up for me.\"\n\n\"Happily!\"\n\nShe pranced up the stairs with Noah behind her, their paths splitting as he continued up to Cyrilo's room. He knocked on her door upon arriving. \"Madam Cyrilo, it's Noah.\"\n\n\"Ah, Noah, come in.\"\n\nHe opened the door to find her and Daniel seated around a low table with three empty teacups. Daniel was a fellow traveler like Noah, coming to this world from modern Earth. As a recovering drug addict, he didn't exactly look like the picture of health, but he was definitely improving with each passing day. Now all he needed was a shave and a haircut.\n\n\"Hey, Noah!\" he said happily. \"How's magic school going?\"\n\n\"Well, it's more combat than magic, but it's going fine. Madam Cyrilo,\" he said, then turning to her and bowing.\n\nShe was an old woman in a frilled dress, but when evening came, she'd change into something more alluring. She suffered from a curse that caused her to experience an entire human lifecycle every 24 hours, but in reverse. Despite her current elderly appearance, she'd grow younger through the day, becoming a baby in the early hours of the next morning, and then reverting once more to an old woman when the curse reset. There was no telling how old she really was, but she had been running the Knight's Sheath for a long time.\n\n\"Welcome back. It feels like it's been a year since you left.\"\n\n\"Things have been busy.\" He sat down in one of the available chairs. \"For you as well, I imagine. Daniel has been raking in tons of money for this place but also drew the kingdom's attention.\"\n\n\"You saw him, did you? Marcus Berholm, gold-rank of the knight order, as well as the Royal Adjudicator. He enacts the will of the king and investigates anything that could threaten the entirety of the city. The king wants Daniel under lock and key.\"\n\n\"They called me a \"strategic weapon,\" which I will admit, is pretty badass.\"\n\n\"That's something you don't normally see on a r\u00e9sum\u00e9.\"\n\n\"I can understand where they're coming from,\" said Cyrilo. \"One man with the power to neutralize every magic user in the city is a frightening prospect.\"\n\n\"What horror, people having to kill each other with nothing but regular steel and a can-do attitude. How long do you think you can fend off the palace?\"\n\nCyrilo chuckled. \"I believe you once said I had \"shaken many hands\"? I've amassed plenty of influence in my years here, with many friends in high places. All I have to do is make sure the status quo benefits the kingdom. That night of chaos showed them that he can at least assist in putting down Red Revelries. Besides, I have no intention of handing over my adorable little research subject.\"\n\n\"I really wish you'd stop calling me that, at least when I'm in the room.\"\n\n\"Don't worry, you make too much money for me to dissect you or anything of the sort.\"\n\n\"That research is why I'm here today. I've found I can't use crafted magic, and I was wondering if Daniel had the same problem.\"\n\n\"Crafted magic?\"\n\n\"Remember those spells I tried to have you activate? The ones written on paper?\" Cyrilo chimed.\n\n\"Oh yeah, I remember. No dice, dude, sorry. You and I are in the same boat.\"\n\nNoah reached into his pocket and pulled out a piece of cloth, the one that Sir Elyot had lent him. \"Here, hold this.\"\n\n\"Why is it glowing?\"\n\n\"Just hold it.\"\n\nThe cloth was passed to Daniel and the light faded. It wasn't detecting any active magic, meaning that Daniel's transference to this world was a one-shot occurrence, unlike Noah's continuous reincarnation.\n\n\"What does this mean?\" he asked.\n\n\"In the long run, I'm not quite sure.\" Noah tucked the cloth into his pocket. \"By the way, madam. Are you acquainted with Sir Elyot?\"\n\n\"I am. He teaches up at the academy. We've exchanged notes over the years.\"\n\n\"Has he ever attempted to undo your curse or help with it?\"\n\n\"He tried a few times. The results speak for themselves. Unfortunately, we had a falling out when his lover left him and started working here. The whole thing became a big ugly mess, and he never forgave me. Why?\"\n\nNoah hummed and stood up. \"We'll talk more later. Right now, Bella is waiting for me.\"\n\nHe left Cyrilo's room and made his way to Bella's, where he could hear soft moaning. He opened the door to find her naked on the bed, her hand busy between her legs while she played with her nipples.\n\n\"What took you so long?\" she whined.\n\n\"You're just impatient,\" Noah said as he removed his clothes and got on the bed.\n\nHe kneeled beside her, his cock disappearing into her mouth while he began massaging her breasts. He rubbed deep into her flesh, his to play with as he saw fit. She whimpered in bliss from his powerful caress, and even more so when his fingers found their home in her pussy. She was already soaked in anticipation, and she beckoned him ever deeper. She slurped on his member greedily, all the while moaning as he played her like a piano. Noah soon ejaculated into her open mouth and watched her stir it with her tongue.\n\n\"You've been saving this up all week, haven't you?\" she asked. \"It's a shame you can't come every day.\"\n\nShe swallowed it up and sucked Noah back to full erection. He moved between her spread legs and penetrated her, thrusting deep and hard while holding her legs like handlebars. His strokes were deep and fast, and Bella could only grip the sheets while her tumultuous breasts shook from the force of his body. She was euphoric, intoxicated by lust, and her voice matched the chaotic sensations within her.\n\nNoah fucked her like a machine, maintaining that position for several minutes without ever slowing down. Much like in his fight with Valia, his great stamina made him a force to be reckoned with. He eventually came to a stop after her climax so that they could both catch their breath. He and Bella were glistening in the summer morning heat and the smell of their mixed fluids hung in the air like a sinful perfume.\n\nIt took Noah moments to regain his strength, and he promptly rolled Bella onto her stomach and took her from behind. His pace was the same as before, leaving Bella grabbing at the bed like a shipwrecked sailor in this storm of orgasms. The overlapping grunts and moans formed the thunder, and every time Noah made her cum, they would both be splashed by the sea of her arousal. Her fluffball bunny tail was bobbing like a buoy in the surf, and every thrust sent ripples through her flesh like crashing waves.\n\nShocking Bella, Noah suddenly took one of his hands off her hip and inserted his middle finger into her anus. He continued his thrusts, all the while sliding his finger back and forth inside her. Her moans were at a higher pitch now, not stopping until he did, when he ejaculated inside her.\n\nShe looked back at him with love-crazed eyes. \"That's what you wanted? Why didn't you just say so?\"\n\nShe turned around, getting up on her knees and wrapping her arms around his neck. Her lips met his, and she pulled him down onto his back, then straddled his lap. She reached into her bedside table and pulled out a corked gourd.\n\n\"This is special olive oil from the elven country. It's slick and delicious.\"\n\nShe oiled up her tits and then leaned down, sweeping them back and forth against his flaccid cock. She squeezed her breasts together, jacking Noah off with an ecstatic grin on her face. His member, regaining its rigidity, slid back and forth through the center of her womanly shelf, letting Noah feel the softness of her skin. Once it was slick as she needed, she sat up and moved onto his lap. His cock entered her backdoor, and a lascivious blush reddened her face. She began riding him, her glistening breasts heaving as Noah stirred around in her asshole. Her legs, spread wide, showed him his shaft disappearing and reappearing in her ass while his seed trickled out of her pussy.\n\n\"You like that, don't you, darling? You can do whatever you want to me.\"\n\nNoah sat up and pulled her against him. His hands found her full cheeks, and he squeezed and massaged them to the sounds of her blissful whimpers. He began lifting and dropping her while he licked the oil off her tits. Bella wrapped her slender arms around him, moaning as he brought her to climax. When he finally let her go, she spun around on his cock, showing her back to him.\n\n\"Keep your eye on my tail,\" she said coyly.\n\nIt was the same routine she did on their first night. She began shaking her ass in all directions like a paint-mixer, with speed and dexterity that no other girl in the Knight's Sheath could match. Her tail, zooming from side to side, drew Noah's eye like a cat spotting a laser pointer. With all her shaking and bouncing, his cock was whisking around her asshole like he was hollowing it out to make a jack-o-lantern.\n\nThis pace couldn't be maintained for long, and when Bella began to tire, Noah took over. He pulled her back against his chest, his hands sliding under her knees and lifting her legs. He started driving straight up, punishing her anus with deep, rapid strokes. It was the loudest she had ever moaned, a fitting reaction as Noah fucked her like a jackhammer. The clapping of flesh was equally lurid, with the back of her thighs rippling against his lap while he stretched her ring.\n\nHer eyes were directed downward to the bulge below her stomach, rising and falling each time Noah drove deep inside her. The look on her face was as though an alien was about to burst out of her chest. Still, Noah had more cards to play. He braced her feet on his knees, freeing up one of his hands to begin playing with her pussy. Tickling her clitoris and probing her g-spot, they were more than she could endure.\n\n\"Oh God, I'm cumming!\" she hollered over and over, her tone voicing the surprise that Noah wasn't stopping.\n\nEven when she squirted like a fountain, spraying clear liquid near across the room, he continued his anal assault. It was when she felt him empty himself inside her that he finally slowed down and stopped. They were still, gasping for air with Bella lying atop Noah, the two of them slick with sweat and oil.\n\n\"You know,\" Bella panted, \"you make it really hard to feel motivated when it comes to my other clients.\"\n\n\"Don't start talking like that now. We're not even close to done.\"\n\n----------\n\nWhen morning finally turned to afternoon, Noah toweled off, got dressed, and made his way downstairs for a drink. Bella was knocked out cold, and finally, the brothel could regain its peace. Now that it was the afternoon, more customers were starting to trickle in, including cadets. Unlike Noah, they were in uniform with their academy weapons, coming to blow off some steam.\n\n\"If you want to go out and drink, don't drag me along,\" said Gideon, passing through the door.\n\n\"Every time I do that, I promise myself I'll stop at three,\" said Foley, leading him to the counter. \"The problem is that I'm a shameless liar. And I'll lie right to my own face, too. That's the tragic part. 'Self,' I say, 'I promise that I'm not going to \"drink my age.\" I swear I am going to walk out of this bar, not be thrown out. And may the gods strike me dead if I wake up tomorrow in a barn with my pants around my ankles, yet again.'\"\n\n\"All right, all right, I get it.\"\n\n\"Relax, I'm buying. I've heard great things about this place.\"\n\nNoah found Daniel at one of the tables, rolling cigarettes with a large bowl of gonlief. He began to laugh as soon as he saw Noah.\n\n\"Finally, I can hear myself think. Dude, forget the knight academy; you should be working here. You could rake in so much money from lonely housewives.\"\n\n\"Well, it's easy to be the best in this world. Unsurprisingly, they have no word for \"clitoris\" in this country. Compared to all the other men, I feel like I'm playing with cheat codes.\"\n\nNoah took a seat and began rolling cigarettes while a girl brought him a stein of mead.\n\n\"So, what's life like at the academy?\"\n\n\"It's basically like joining the army. Half of each day is spent doing physical training. The food is decent, though.\"\n\n\"And the girls?\"\n\n\"Plenty. Right now, I'm still getting a lay of the land. How about you? Still sleeping in the cot in the backroom?\"\n\n\"Nah, I got my own room now, real bed. Now, if only I had a working toilet and a TV.\"\n\n\"And Wi-Fi.\"\n\n\"Fuck, I wish this place had Internet. I've been reading through Cyrilo's books, and it's worse than high school.\"\n\n\"You've been reading her books? Researching magic?\"\n\n\"No, I'm making a list of every famous person, event, and place I can find, and I'm seeing which of them rhyme. I want to be able to sing \"We Didn't Start the Fire\" and \"I've Been Everywhere,\" but I have to rewrite them. Otherwise, nobody will know what the hell I'm talking about.\"\n\n\"Great, now those songs are going to be stuck in my head all day. How's everything else going?\"\n\n\"Fine, why?\"\n\n\"Just checking.\"\n\n\"Don't worry about me. Things are good.\"\n\nNoah looked over Daniel's shoulder as the door opened. \"I'm not sure they are going to stay that way.\"\n\nPrinces Seraph and Galvin had just entered, along with the despondent Sophia and two male cadets that Noah didn't recognize. Before Noah could act, Seraph spotted him and made a B-line for his table. He towered over Noah and Daniel with a smug look.\n\n\"You must be Cadet Noah. I finally get to meet you face to face.\" There was no hospitality in his voice.\n\n\"Cadet? Sorry, you got the wrong guy. I was knocked out in that big brawl on enrollment day and given the boot.\"\n\n\"Don't give me that shit. You're not running away this time. I'm just dying to know how someone as weak-looking as you was able to scratch that elf bitch.\"\n\n\"I have no idea what you're talking about. Look, I'm just trying to relax before I have to get back to work. I don't want any trouble.\"\n\nOver at the counter, Foley did his best not to acknowledge the scene, like all the other patrons. Gideon was watching it play out, looking for any excuse to jump in and start hurling punches. Lucius appeared from the backroom, and upon seeing Seraph and Galvin, sported a sizeable angry vein in his forehead. He came out from behind the counter, something he didn't usually do until things turned violent. \"You! You are not welcome here! Begone, now!\"",
        "For a barkeeper to speak that way to two princes was inconceivable. He had clearly dealt with them before, but did he not know who they really were? More likely, Cyrilo's influence and leverage on the kingdom were even more substantial than Noah thought. Whatever force gave Lucius the authority to oppose them seemed to stop just short of physically throwing them out. The four boys seemed to know that and laughed while they took a table for themselves. At the very least, it got Seraph away from Noah.\n\n\"This is the Knight's Sheath, right? Well we're knights in training,\" said Galvin. He then snapped his fingers at Sophia. \"Get us some drinks.\"\n\nDaniel leaned over to Noah. \"Who the hell are these guys?\"\n\n\"A royal pain in the ass. Go upstairs and tell Cyrilo.\"\n\nWith Daniel gone, Noah considered leaving and decided against it. Throughout the ages, watching drama unfold was one of his oldest hobbies. A little live theater often helped stave off his boredom. He just had to hope his front-row seat didn't set him in the splash zone. If things turned sour for him, he'd just turn invisible and leave out the back.\n\nSophia approached the counter, and she and Lucius exchanged a glance unbecoming of total strangers. There was sympathy in his anger. At the very least, it seemed like this wasn't the first time Galvin brought her here. Lucius looked past her to the four cadets. \"You're not getting anything. Leave now.\"\n\nMadam Cyrilo came down moments later, having regressed to her middle-aged years. She bore a look of stern agitation, the same scornful glare that Noah had received during the Red Revelries. Behind her was Daniel, fearful of that look.\n\n\"Princes Seraph and Galvin, I thought it was made clear that you are not welcome in our establishment. All privileges of the Knight's Sheath have been revoked, and I must ask you to leave.\"\n\n\"Madam Cyrilo, must you overreact so often?\" said Galvin. \"I'm willing to overlook our earlier disagreement and continue gracing you with our patronage.\"\n\n\"The Knight's Sheath will function without your patronage. If anything, it will flourish.\"\n\n\"We're here to drink and have some fun. It would not be in your best interest to deny us. Right, Brother? Is this the kind of behavior you would expect from a quality hostess? I'd say we deserve better than this, don't you think?\"\n\n\"It's downright ungrateful,\" Seraph said. \"I heard there was some great singer here. Have him put on a show for us.\" He spotted Daniel. \"It's you, isn't it? Get on stage and entertain us. And give us some women.\"\n\n\"You are in no position to be making demands,\" said Cyrilo.\n\nSeraph got to his feet. \"No position, you say?\"\n\n\"You really want to cause trouble here? Two princes, a future marquess, and the son of a shipping magnate getting into a fight in a brothel will be the talk of the town. My indiscretion thus far has been a professional courtesy, but not even the king would so foolishly antagonize me. I suggest you four rethink the power and authority you believe yourselves to have.\"\n\n\"Seraph, I don't think she's giving you the respect you deserve.\"\n\nSeraph approached her, and the air became heavy with mana. \"I promise you, my power and authority are very real, though they are far beyond your understanding. You stand before a man blessed by Lord Lumendori himself. My demands are divine proclamations, so when I tell you to do something, you do it! Now, you!\" He reached out to grab Daniel. \"Get on that stage!\"\n\nA mighty hand grabbed Seraph's arm, prompting him to turn around and face Gideon. His fiery red hair matched his fierce glare, and his posture was guarded, ready to attack and defend.\n\n\"I'm not talking to you, weakling.\"\n\n\"You have so much pride, but no honor. As a warrior, I can't sit back and watch this shameful display go on.\"\n\n\"Let go of my arm, or I'm going to break yours.\"\n\nNoah sighed and cast both of his spells. Daniel was too valuable to risk getting killed in a crossfire, so he decided it was time to step in. With his illusory clone remaining in his chair, Noah, now invisible, walked over to the center of the parlor, pulled out a small clay bottle, and poured its contents onto the floor. He fanned the air with his hands, and the smell of the liquid flowed through the room. The effect was instant, bringing the imminent fight to a halt as everyone grimaced in revulsion.\n\n\"What is that smell?\" they all asked each other. Even in this Medieval society, it was a stench that made them cover their noses, and its random appearance was frightening.\n\n\"Galvin, let's just go someplace else,\" one of the yet-unnamed cadets said.\n\n\"Yeah, that's a good idea. Come on, we don't need this shithole brothel. The rest of you can wallow in this nauseating dungeon.\"\n\nSophia and the four boys made a hasty retreat, leaving everyone else to suffer the horrid stench.\n\n\"That was Noah, I'm sure of it,\" said Seraph as they stepped out into the street. \"He's so close, and I can't even kill him. It's ridiculous that I should have to follow a damn law for regular weak people.\"\n\n\"I agree, but you shouldn't concern yourself with someone like him,\" Galvin warned. \"You'll get to fight him sooner or later, and you already know you can beat him, so why rush into it?\"\n\n\"That's not good enough. I may have lost to that elf bitch, but I'm still the strongest cadet. I don't want anyone to even think my supremacy can be challenged.\"\n\n\"It's not so bad. Just wait, and soon enough, you'll prove to everyone that you are the best. I keep telling you, Brother, you should just leave all the thinking to me. Someone with your power shouldn't waste his time making menial decisions.\"\n\n\"I heard a brothel near the theater just opened. We should go there,\" said one of the two other cadets.\n\n\"I know that place, Henryk. You just want to go there because all the girls are dwarves,\" the other retorted.\n\n\"Fine then, Mark. You can pay wherever we do decide to go.\"\n\n\"We should go to Flannery's. He doesn't have enough backbone to refuse us.\"\n\n\"We're going to the slums,\" said Galvin. \"I bet we can find something to play with there, something that can't fight back.\"\n\nBack at the Knight's Sheath, the stench had yet to improve.\n\n\"Ye gods, it smells worse than me ma's goblin stew!\" said Foley.\n\n\"What in the world is causing this?\" Cyrilo exclaimed.\n\n\"Monster repellent, though I've found it works just as well on humans,\" said Noah.\n\n\"You did this?\" Daniel asked.\n\n\"It saved my life before, so now I make sure to carry some with me whenever I walk the streets. All it takes is a simple change in smell to activate our primal fears, like our revulsion to death and rot.\"\n\n\"And you couldn't think of anything better than pouring it on my floor?!\" yelled Cyrilo.\n\n\"Oh relax, it's neutralized by alcohol. Lucius, give me some strong liquor. Besides, this is a good thing.\"\n\n\"Says the boy who doesn't live here...\" she muttered.\n\nNoah walked over to the counter and retrieved a bottle of clear spirits from Lucius. \"If you had forced them out, they'd probably return, seeking retribution. Instead, they'll walk away, laughing at us being stuck with the smell and patting themselves on the back for wisely leaving the foul brothel with the surly staff. Let them feel like they got the last word, and they'll quit while they're ahead. If not, then at least I've bought you time to come up with a plan for if they return.\" He emptied the bottle onto the repellent, and the stench eased. \"Have one of the maids mop this up and spray some perfume, and it'll be fine in an hour.\"\n\n\"For someone who fought Lady Zodiac, this is real low,\" said Gideon.\n\n\"You should be avoiding trouble, especially while in that uniform. You don't want to get kicked out of the academy after your first week, do you?\"\n\n\"He's got you there, boy-o,\" said Foley.\n\n\"Well, not the method I would use, but they are gone, and I thank you for that,\" said Cyrilo, once she was able to lower her hand from her nose.\n\n\"What is the story between you?\" Noah asked.\n\n\"I'm sure you can guess why I don't want Prince Seraph in here. He's a violent brute that answers only to himself. As for Prince Galvin...\" She uttered the name with pure hatred. \"He never paid for the girls and he'd always beat them terribly. He got off on hurting them. That woman with him? He'd make her stand in the corner and watch. Poor dear. I sought an audience with the king and let him know what his son was doing. He knew better than to dismiss me as an ordinary citizen and said he'd put a stop to it. For a while, whatever he did seemed to have worked.\n\nRegardless, I'm not too worried. I've been dealing with unruly clients since before you were born. They all end up on their butts in the street.\"\n\n\"Well Seraph has a bone to pick with me, so it looks like we're in the same boat. I'll be around. Just make sure Daniel doesn't end up washing ashore again.\"\n\nHe returned to the table and began scooping his gonlief cigarettes into one of his pockets.\n\n\"You are going to pay for those, aren't you?\" Cyrilo asked.\n\n\"You can foot the bill to Bella. By my math, she owes me some money.\"\n\n----------\n\nAlexis sighed in relief from the warmth of the water. Her arms felt like dead weights, and her hands were throbbing, even after going to the infirmary.\n\n\"Did you spend all day training again?\" Sophia asked as she entered the bath.\n\nAlexis gave a tired smile. \"I have to get stronger, and I'm in luck; Lady Zodiac was happy to give me some pointers on my swordplay. Don't worry about me; I'm used to training like this.\"\n\n\"It's my job to worry about you, just like it's your job to worry about me. Please, be careful in your training. If you push yourself too far, you could get hurt or killed, or even worse...\"\n\n\"What's worse than being killed?\"\n\nSophia flashed her a teasing smirk. \"I have nightmares of you turning into a big muscular hobgoblin from all that exercise. Buff is not a good look for you.\" They shared a laugh, and Sophia sat next to her with their arms touching. \"Stay a little soft, for me.\"\n\n\"Ok, I'll take things a bit easier.\"\n\n\"By the way, I happened to meet that boy you always sit with. He came into the infirmary and I patched him up.\"\n\n\"Oh, you met Noah?\"\n\n\"Wait, HE'S Noah? He's the one who fought Lady Zodiac?\"\n\n\"That's right. We met on the way to Colbrand, and he helped me slay a pack of ogres.\"\n\n\"I can see why you like him.\"\n\nAlexis sighed. \"I like him only as a friend, and I respect him as a warrior who fought by my side, that's it. You know I'm not interested in... well...\"\n\n\"Does he know?\"\n\n\"Of course not. I barely know him. I can't tell him something like that.\"\n\n\"Well, has he tried anything? Said anything?\"\n\n\"No, strangely enough. He hasn't shown any interest. It's been really nice, actually. Each meal, we sit at our usual spot, chat a little bit, eat, and that's it. I fear the day the curtain drops and his intentions are made clear, when he'll voice feelings I can never return and everything changes, but for now, it's just nice having someone to sit with.\"\n\nPlease comment! Tell me your thoughts!"
    ],
    "authorname": "Sage_of_the_Forlorn_Path",
    "tags": [
        "fantasy",
        "action",
        "isekai"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/the-infinite-bk-03-ch-03"
}