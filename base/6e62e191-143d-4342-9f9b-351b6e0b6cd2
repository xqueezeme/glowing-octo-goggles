{
    "title": "Between the Bars Pt. 05",
    "pages": [
        "Chapter 21\n\n\"So how's the dissertation coming?\"\n\nI groaned. Fuck. Why did she have to ask me this every single time she saw me? It bordered on nagging. I especially didn't need this in front of Daniel, who was now listening curiously. Families were so damned embarrassing.\n\n\"You know how it's coming,\" I muttered.\n\n\"You're still not finished? And have you even worked on it at all?\" Charlotte prattled on, stubbornly oblivious to my stare of death. \"It's been how many years now?\"\n\n\"I've worked on it.\"\n\n\"Opening the file from time to time doesn't count as working on it.\"\n\n\"How is it any of your business anyway?\" I said under my breath; I almost hoped she didn't hear me, but Charlotte had inherited my grandmother's radar ears. \n\n\"Oh, I don't know, maybe it's my business because I want you to get your doctorate?\"\n\n\"Nothing but a worthless piece of paper.\" I scowled at her, turning red under Daniel's slightly confused look. \"My publisher doesn't care if I have a PhD. after my name and neither do my readers, so why should it matter to you?\"\n\n\"Your readers think you're a woman named Cassandra,\" Charlotte reminded me sarcastically. Daniel laughed softly and even I had to crack a slight smile. \"I just want you to get something out of all those years of hard work, even if it is just a worthless piece of paper. You've earned those letters after your name and if you'd just get off your ass and finish your dissertation, you could get a teaching job instead of sitting around staring at a computer screen all day.\"\n\n\"Wait a minute,\" Daniel said. \"I'm confused. I thought you already had your doctorate.\"\n\n\"Well, I do and I don't.\" My face was blazing. Charlotte had an uncanny ability to hit on the one thing that would embarrass me most. \"I've finished all the doctorate course work at Auburn and I picked my dissertation and had it approved... I even have it mostly written.\" I cringed, waiting for the inevitable question, and of course, it came.\n\n\"What's it about?\"\n\n\"The Death of Spencer: Childe Harold's Pilgrimage and Byron's Assault on the Elizabethan Virtues.\" Reluctantly, I told him the title and waited for the blank stare of \"Huh?\" Shit. I hated talking about it with people not in the academic world; it was so embarrassing, having to spend five minutes explaining what the title meant. To my surprise Daniel actually seemed interested, so I talked a little bit about George Gordon, Lord Byron, and his wild life of debauchery that shocked society, the rumors of liaisons with both sexes, and the affair with his half-sister that eventually led to his downfall.\n\n\"Well, it seems like you have all your information; so what's the hold up?\"\n\nNow, I was really embarrassed, squirming in my chair like I'd just been called on in class and everyone was staring at me waiting for me to answer and I was frozen. \"Um... I have to present it to the committee and it's just... not ready.\"\n\n\"At the rate he's going, it never will be,\" Charlotte said, as if I wasn't even in the room. She was being a total bitch, which was nothing new. I understood her frustration and I knew it was motivated by her loving me and wanting the best for me, but at the same time, she needed to butt out. Nagging and pushing were the two fastest ways to get me to dig in my heels. You'd think after knowing me my whole life, she would know that. It barely took Daniel a week to figure it out. The thought amazed me, the way he could get me to do anything, say anything, get past issues that I'd struggled with my whole life, and he did it without pushing one bit. How could he know me so well when he knew almost nothing about me? \n\nHe smiled at me and I blinked, startled out of my cloud. I'd been staring at him like a crushed out schoolboy again; it was mortifying, but Daniel slid his hand over under the table and gave my thigh a squeeze. He thought it was cute, even if my aunt did roll her eyes as she got up from the table and grabbed the coffeepot to refill our mugs. \n\n\"Besides, you know I don't want to teach,\" I growled at Charlotte.\n\n\"Then what do you want to be when you grow up, Rylan?\"\n\n\"I think he wants to be a writer. Wait. He is a writer.\" Daniel gave me the full intensity of his smile and my heart did the flipping thing it seemed to have just begun when I met him. I stared into his blue eyes, speechless, awed by the way he always said the right thing. He was fucking wonderful. His hand rubbed light circles on my leg and I just slowly melted down into a big, quivering puddle on the kitchen floor. So much joy he gave me but such sharp stabs of sudden pain, realization that it was almost over.\n\n\"He'd be a good English professor though,\" Daniel added, eyes twinkling at me. I could just see the dirty little ways he could earn extra credit dancing through his head.\n\n\"Not likely,\" snorted Charlotte as she banged around. \"This is the kid who deliberately got a B in honors chemistry senior year in high school so he wouldn't have to be valedictorian and get up and give a speech at graduation.\"\n\n\"Won't you ever shut up?\" The embarrassing secrets were too much and I got up from the table and stalked off. They were laughing at me; I just knew it. Charlotte was telling Daniel all about what a dork I am, how I threw up when I had to give class presentations. I always ended up getting good grades, but there was always a moment, when I first stepped up to the lectern and all the eyes were staring at me, that my throat closed up, my knees got weak and I was sure I couldn't do it.\n\nPresenting my paper to the dissertation committee was a black cloud over my life. It had to be done, and eventually I would do it. I would finish the dissertation and present it, but not until it was perfect. My facts were perfect. The paper was impeccably researched, arranged, edited and just waiting. Byron was a natural choice for me, it was easy and I knew the work would be highly praised; the academic publication would be good for my \"legitimate\" writing career and the people whom I was supposed to be eager to notice me would finally know my name. \n\nCharlotte and the rest of my family knew that and they didn't understand why I still hesitated. They were thrilled at the prospect of having a doctor in the family even if it was a doctorate in English literature. Frankly, sometimes I wondered myself why I couldn't do the deed and get it over with; but the fact of the matter was, something in me wouldn't let me because it wasn't what I really wanted. And in order to face that committee, those strange faces all gathered around staring at me and listening to me and judging me, everything that comprised my worst nightmare, I had to really want it. \n\nDaniel seemed to understand when he came into the living room and sat down beside me. I tried to explain it to him and he nodded thoughtfully. It was something I'd never tried to articulate until now and the vague dissatisfaction I'd always felt with my academic career was much clearer now. Making sense of it all filled me with relief.\n\n\"So... just start over,\" Daniel suggested with a shrug. \n\n\"You don't just start a doctoral dissertation over.\"\n\n\"Why not?\"\n\n\"You have to re-apply to the program, get a new advisor, submit a prospectus and get it approved by the committee, which can take months and then you have to research it and-\"\n\nHe lifted an eyebrow and I stopped. \n\n\"You know, maybe I could start over. Maybe not at Auburn, but I could get into a doctorate program somewhere else, and write about something I really like.\" I thought of my scribbled-in notebook, rapidly filling up. \"Science fiction doesn't get much respect in the academic world; it's certainly under-represented but there's so much there, so many possibilities...\" Suddenly, so many possibilities and so much to say, a door opening on the boredom, freeing me from my work on Byron which, I now realized, I'd grown to hate so much I'd never finish it. It wouldn't be easy to admit defeat, to leave behind several years' worth of work, but to get free of the corpse of Byron that I dragged behind me, the failure would be worth it. I actually felt giddy. \"I think I can do this, Daniel.\"\n\n\"Sure you can.\"\n\n\"You did it again. How do you know?\"\n\n\"I don't,\" he laughed. \"It's all you. All I do is ask the questions, the answers are yours.\"\n\n\"But knowing the right questions to ask...\" I turned to him and buried my face in his neck. He was fucking amazing. Dammit. He smelled incredible too, clean and soapy and delicious from our shower. I knew I shouldn't, being in someone else's house right out in the open where the kids could walk in any minute, but I couldn't help myself. My lips begged for his taste, and I pressed my mouth to his collarbone and flicked my tongue over the satin skin, making him tilt his head back against the couch to allow me better access.\n\n\"I should stop,\" I whispered in his ear as I nibbled the edge. He laughed softly, almost a purr. He made me so hard. I didn't want to stop and I let out a little growl as I caught his bottom lip between my teeth. I tasted coffee when his tongue twined around mine. I felt him groan in his throat as I reached down and circled the head of his cock with my thumb through his jeans.\n\nThe back door banged right behind us, startling me, and the house filled with the kids' loud laughing voices and the stomping of snowy boots. I jumped away from Daniel to the other end of the couch, grinning at him. His mouth was red and damp from my kisses, and he quickly crossed his legs as Maddie and Jeremy trooped in, followed by their dad. Paul came over and greeted us, shaking hands with Daniel; and as he walked away toward the kitchen where the kids were clambering around Charlotte, he dropped a small brown paper bag in my lap. \n\nWhen I peered inside, my breath caught. Condoms. A whole box of them and a small tube of KY jelly. Finally, at last, after all this time, Paul got out of the frozen house, and once on the roads he actually thought to stop and get condoms for me. Flooded with gratitude, I pictured him stopping at the convenience store for coffee with the rest of the county road crew and casually buying condoms and lube, unconcerned with the stares and the crude joking remarks. That was Paul. I wanted to run over and kiss him but that could wait until later.\n\nGrabbing Daniel's hand, I hauled him to his feet. \"Um, Daniel and I are tired, we're going to go downstairs and take a nap.\"\n\n\"Oh, um, okay,\" Charlotte said, lifting an eyebrow as she watched me steer Daniel to the stairs. Paul glanced at us; he didn't grin but I saw his eyes twinkling. \"I made the bed for you and put towels in the bathroom.\"\n\n\"Thanks.\"\n\nI slammed the basement door. On the stairs, I thrust the little paper bag at Daniel. When he opened it the puzzled frown left his face and a huge grin replaced it. He wrapped a hand around my wrist and pulled me down the stairs with determination. The dark-paneled guest room was spacious and warm from the furnace humming right beyond the wall and the freshly made bed was deliciously tempting. Daniel twirled the lock on the doorknob. As he turned to me grinning, my mouth was suddenly dry and my feet seemed frozen to the spot, the backs of my calves pressed to the bed.\n\n\"Problem?\"\n\n\"No, I just... I don't know, I'm kinda nervous but I don't know why, I shouldn't be, I mean, that flashlight was a lot bigger than your dick.\" I grinned nervously. \n\nDaniel stared at me until my babbling stopped. I blushed in a way I thought I was over with him and he waited until it had faded a bit.\n\n\"You done?\"\n\n\"Yeah.\" I nodded, voice suddenly harsh. A little pulse started in my throat. It was stupid to be nervous with him. \"Just so much expectation, you know, so much waiting and I don't want you to be...\" I stopped before I could say disappointed.\n\nHe didn't need me to say it. \"I won't be.\" \n\nMy heart thumped hard against my chest. Daniel took the condoms and lube out of the little sack and placed them on the bedside table while I watched with my knees shaking. He smiled at me, and then I was going backward, falling, landing on the soft mattress with Daniel's weight pushing me down and his body lean and hard on top of mine. Clothes came off, I didn't know how but I was naked, tugging at Daniel's shirt while he unzipped his pants and let out his long shaft, already hard again, brushing my inner thigh.\n\n\"Shit.\" He looked down at me already flushed and panting lightly. \"I can't wait to be in you.\" He pushed aside my hands, still trying to get his clothes off. \"Roll over,\" he growled and I was helpless against his demands, I did exactly as he said and rolled over my stomach. His shirt never made it off. Hands all over me, lips, tongue, down my spine to the top of my ass, parting my legs. My cock leaked into the sheets. I shivered when I heard him groan and pause as he looked down at my spread ass.\n\nHis hands were shaking when he stroked my ass cheeks. His palms drew them apart and I jumped when I felt his tongue slide down my crack and circle my hole, painting a wet circle around the tender flesh, teasing, then darting away when I tried to push back against it. Even down here with the door closed, we still had to be quiet and when his tongue slipped past the rim of my ass, I buried my face in the pillow to stifle my cry. Silence wrapped us. I wanted to tell him how good it felt, his sweet tongue buried in my ass, but my mind couldn't find the words and I just clutched the sheets and rubbed my cock against the mattress. Needed more than a tongue, needed him...\n\n\"God. Turn over.\"\n\nI rolled over. I lifted my knees. I wanted to look into his eyes, at his red mouth, teeth catching his lower lip. That armpits of his shirt were dark with sweat. He caught the backs of my legs and put my ankles on his shoulders. I loved his eyes when he was turned on like this, on the edge, the way they got dark and clouded with lust. His fingers fumbled with the condom while I watched, lazily stroking my own cock. The empty ache inside me was overwhelming.\n\n\"Can you take it hard?\" \n\n\"Yeah. Hard.\"\n\nI groaned under my breath as his slippery index finger slid in me. He teased, stroked, lubed until I twisted in frustration, his dark eyes pinning me down, burning right through me. \n\n\"Need it now.\"\n\nThe finger slipped out and the thick, blunt head on his cock pushed in. It burned, but I tried not to wince because I didn't want him to think he was hurting me. I took a deep breath and pushed down, letting him slide into me, letting him fill me all the way to the top, the burn was intense but I welcomed it, oh so very long since I had a real cock inside me and I wanted to feel it. Daniel's eyes rolled back as he felt my tight muscles surround him. I felt him tremble a bit, fighting the need to thrust; he didn't want to hurt me. I moved my legs off his shoulders and wrapped them around his back, pulling him down onto his elbows. The shift in weight adjusted the angle of his penetration and I let a moan escape. God, it felt good.\n\nSo deep in me, possessing me, finally, finally filling me up and soothing the empty ache that had roared inside me like a blaze. Daniel's mouth caught at mine as he thrust steadily, slow at first and then building, gathering the burning fullness into a tingly knot. So good. His tongue pushed into my mouth; he moaned and his hips faltered. \"Yes, Daniel, come inside me, yes.\" I whispered in his ear, fingers digging into his back, and he buried his face in my neck to muffle the sounds of his orgasm. Somehow, while he was still hard, he slid his hand between our stomachs. I didn't think I was close until his hand wrapped around me and then I came so hard. We lay there like that, in a sticky and panting heap, until I could finally gather up my wits to speak.\n\n\"I thought you wanted me to ride you.\"\n\n\"I do. That'll be round two, but I need a little time.\" He wiggled off me onto his side next to me, his half-limp cock still pulsing contentedly against my thigh. After a moment, he got up and went to the bathroom, bringing back a warm wet cloth. After I cleaned up, he wrapped his arm over my chest. His lips played at my ear and I relaxed just letting the euphoria slowly ebb. \"You know,\" Daniel whispered in my ear as he stroked my arm that was resting over my head, \"at home I have some black Velcro wrist restraints. They're nice, a lot more comfortable than the handcuffs.\"\n\nI swallowed and mumbled something, trying not to blush. Not because I didn't like the idea, or the mental picture, but because I did. And he knew it.\n\n\"They'd look very sexy on you. You can try them out on me first, of course. Would you like that?\"\n\n\"Yeah,\" I whispered shyly. Just saying it was an overwhelming relief. I felt wrung out and exhausted but in a good way. I liked it when he took me hard. I never thought I'd want someone to have that power over me again, but my trust in him was surprising, simple and transcending. \n\n\"Okay?\"\n\n\"Yeah... it's just... I'm not used to thinking of myself as a bottom, you know?\"\n\n\"You're not. Not any more than I am. I like being bound just as much as I like being in control. You can have it both ways, at different times. With the right person, it's soothing to know that whenever you want, you can relax, let go, just be.\" \n\nI closed my eyes, letting his warm weight calm me. \"I don't think I want to do that with anybody but you,\" I admitted without meaning to. The honesty was a little more than I wanted to let out but there was no way to stuff it back in now. Shit.\n\n\"Good. You shouldn't. I'll always take care of you, Ry. Promise.\"\n\nHis voice was getting thick and drowsy and I felt my eyelids droop. \"And who takes care of you?\" I asked, but we were both asleep before he could answer.\n\n******\n\nChapter 22\n\nThe scent of food woke us with growling stomachs. No idea what time it was, no clock in the room, but it was probably close to dinnertime. I lounged on the bed watching while Daniel picked through the mound of clothes we'd thrown on the floor. Wearing nothing but the cum-splattered t-shirt he'd never managed to take off before fucking me, he was dangerously sexy. I stared at his ass in amazement when he bent over and the shirt rode up and exposed his round, pale, delicious cheeks and the little dimples just above, right at the base of his spine. The muscles carved out smooth indentations in the sides that offered his ass cheeks up like plump fruit just waiting to be plucked. Somewhere, a heavenly choir sang in joyful exaltation at the sight.\n\n\"Aren't you changing?\" \n\n\"Nope.\" He grinned and buttoned his flannel shirt over the t-shirt, instead of taking it off like I'd expected. \"I like the thought of sitting around the table with your family, with your cum smeared all over me.\"\n\nI shivered. So sweet and so slutty all at once. The combination blew my fucking mind. \"It'd be rude of us to stay down here and fuck until morning, wouldn't it?\"\n\n\"Yeah, but we have a big day tomorrow, so we'll need to get to bed early and get plenty of rest,\" he reminded me with a smirk.\n\nI grinned, but only briefly. I lay back and watched him pull some pants on before I finally asked the question that had been nagging at me for days. \"So what about tomorrow, anyway? Have you figured out your next move?\"\n\nHe tossed me my clothes. \"As soon as I download my video files and send them to my captain, I can go to Chicago and get the rest of the evidence.\"\n\n\"But won't that video feed clear you of the murder charges?\"\n\n\"Absolutely.\"\n\nI clutched my clothes in my fingers, but I didn't make any move to put them on. \"Then... it'll all be over. You can go home. Back to your life.\"\n\n\"No, I can't. Not until the case is closed.\"\n\nAll the worry and frustration I'd been bottling up suddenly rushed into my mouth and choked me. \"But all the charges against you will be dropped and Adkins will probably go to death row for killing a cop. Justice will be done, Daniel, isn't that enough?\" ",
        "\"No,\" he said simply. He wasn't looking at me anymore, sitting on the edge of the bed pulling his socks on while I stared at him. He looked blank, emotionless. I tried never to push, never to stand in the way of what he needed to do, but I just didn't understand this. Why was he putting himself in danger? Like someone in a horror movie, he was walking down the dark corridor toward certain death, and I was sitting in the audience watching, powerless to stop him. \"Adkins is a cold-blooded killer but he's only one man. He's only a link in this chain. Take him out and someone else will step right into his place. The chain has be smashed, all the way to the top, every last link. Then justice will be done. Then it will be enough.\"\n\nStill that emotionless face, a cool factual tone from him, but just beneath the surface calm I could feel something vibrating in him like an electrical current. There was something more here. There was always something more, and he always shut me out, so completely I never even saw the walls coming until I crashed into them. Everything, I told him everything, showed him my darkest places, the things that made me shiver in the black hours before dawn; and in return, he gave me nothing. I knew nothing about him. The sexy grin and the hot ass were only a cover for the brick wall that kept me out. I was tired of walking into it with every other step, I wanted to fling myself at it kicking and screaming until it crumbled.\n\n\"Dammit, Daniel. You're gonna get yourself killed if you go up there. They're just waiting for you. If you'd gotten into that car in St. Louis you'd probably fucking be dead right now.\"\n\n\"You're probably right.\"\n\nHis agreement just pissed me off even more. \"Why do you have to save the fucking world? Being a cop isn't a religion, it's a job. Yeah, these are bad people and they've done a lot of bad things, but this is not a personal crusade. Let it go, Daniel. Tell your captain where the evidence is and let him send someone to get it. Let someone else finish this. You've given them the rope. They'll hang themselves.\"\n\n\"Actually, it is personal,\" he said in such a soft voice that it almost seemed like he didn't want me to hear. But I did, and he knew I did; and after I stared at him intently, waiting, he finally shrugged. \"You're right, Rylan, I can clear my own ass and back out of this right now with my hands clean. Hell, I know I'm not the only cop who can do this job. I know it's not altogether healthy to make an investigation into a personal mission, but Adkins and all his dirty cops got my partner killed.\"\n\n\"Oh, and that's part of the police code? Revenge for fellow officers?\"\n\n\"Not my partner on the force, Ry. My life partner.\"\n\nMy impassioned rant fell flat and I stared at him, words dying on my lips. He had never talked about a lover before. All the pain and loss I'd sensed in him were so clear in his eyes right now. That was what changed him. He fell in love, but now that anchor was gone and he was adrift. It made sense, the missing pages of his life, left unspoken because he was blocking out the pain, burying that part of his life to stop the hurt.\n\n\"I didn't know.\"\n\n\"I know you didn't.\" He reached up like he was going to touch my face but his hand dropped and he rested his elbows on his knees, staring downward. \"I never told you. Been almost two years. He went on a drug raid and never came back. Ray was a good cop, too good, too honest. Adkins had the whole vice squad by the balls, but he couldn't drag Ray down to their level. He knew too much, and I told him and told him that he was in real danger, but he just laughed me off. Said he always watched his back.\" \n\nSliding closer, up behind him, I watched his profile but I didn't touch him even though I wanted to. If he finally wanted to talk, I wanted to listen to every word.\n\n\"I was a vice detective too, but our captain knew Ray and I were lovers and he wouldn't let us work together, said it would compromise our effectiveness on the team if we were focused on each other. Still, I shouldn't have let him alone go that night. I should've been there looking out for him. When they called, I asked him not to go. Said I had a bad feeling, asked him to stay home with me. But he'd been working so hard on cracking this drug ring; he had to be there when the shit went down. He wouldn't let it go.\" \n\nSo, Ray couldn't let it go either. I couldn't help but flick back to what I'd told him less than a minute ago. Daniel, let it go. Let it go before it kills you.\n\nDaniel shook his head, still looking down at the floor. \"They said a dealer popped him in the head, but Ray would never have been that careless, not even in a crisis. He always had his wits about him, a lot more so than me.\" Brief smile, wistful. \"I never got to see him one last time to say goodbye. By the time I got the call, he was already dead. There was, God, so much blood. I don't know who actually shot him, but I knew Adkins was behind it, and as the cover-up unfolded, I realized that it went even higher. I secretly joined Internal Affairs while keeping my vice shield, because I knew that if I could just get close, I could get Adkins. It's not revenge. Ray wouldn't want me to get revenge, but I owe him justice.\" \n\nPain rolled off him in waves. I felt it break over me and shatter. Beneath his world-saving exterior, he was lost, and as much as I admired his courage and his strength, his pain was what finally broke down my last defenses and ground them to powder. I'd do anything to take it away, reach right inside him and tear it out, let my love fill in the broken parts.\n\nYeah. Love. There was no point in denying it anymore. I'd felt the strange tugging and sharp darts for a while now, but when I tested out my skin, I felt it spread out all through me, pulsing in my blood. I didn't need him to love me back right now. I didn't want anything from him; his load was too heavy already. I just wanted to give him the single most important thing he'd lost since his betrayal in Florida, the thing he most needed right now: loyalty. There was so much on his shoulders, so much I couldn't help with. All I could do was love him.\n\nI moved closer to him, slid my arm around his waist. He resisted for a second, and then he leaned back against me and dropped his head back onto my shoulder, closing his eyes while I wrapped my arms around him and just held him. Without speaking, I let my love surround him and flow into him through my touch. Just letting himself be held was not, I sensed, something he let happen very often. But god, he felt so good in my arms.\n\nIt would've been fine with me to hold him like that all night, but finally his stomach growled audibly and he sat up and pulled away from me gently. When he swallowed hard and could only glance at me before looking away, I knew he'd felt a bit, of what I gave without question. I looked up at him, naked both physically and emotionally, stripped of my defenses and let him see me, totally open to him.  Whatever you need, you can have. \n\nI didn't push him to not look away. This was no battle of wills. What I offered was there for the taking, when he wanted it. I got up from the bed and got dressed while Daniel pulled his boots on. My hair was a mess, but at least it was clean and not greasy when I combed through it with my fingers. Daniel was a bit withdrawn now, but I just kissed him and led him to the basement stairs by the hand, accepting his silence. I knew what it was to feel exposed and caught off guard after you've revealed more than you meant to; but Daniel had made it safe for me and I could give him no less.\n\nThe steak, butter-roasted potatoes and steamed broccoli were delicious, especially after days of canned food, but I didn't have much appetite. Sitting around the table with the chattering kids and Charlotte and Paul, all I could think of was Daniel, who was eating silently next to me without looking at me. His cum-splattered shirt made me grin to myself but more serious things took precedence. He was determined to walk into danger. Thinking his convictions would save him. Thinking it didn't matter if they didn't. It just made me sick inside to think of him being hurt or killed, losing him the way he'd lost Ray, but I knew I couldn't try to stop him. I'd said everything I had a right to say, and anything more would only push him from me. All I could do now was let go. Part of the whole love thing, apparently. Trust. The hardest part. \n\n\"Is your Internet up?\"\n\nThey stopped talking and looked at me, slightly puzzled. My question was totally out of the blue, nothing to do with what they were talking about. Charlotte lifted an eyebrow at me and nodded slowly.\n\n\"The phones came back on this morning, so yes, it should be working.\"\n\n\"Daniel needs to use it for some police stuff.\"\n\n\"Sure. You know where it is,\" she said.\n\nDinner wasn't over yet but Daniel was on his feet in an instant. I didn't know where he was going when he ran in the direction of the stairs, but then he came back up a minute later with something in his hand. He was just as jumpy as I was. I took him out to the glassed-in sun porch that was Paul's office, and after I logged into the dial-up connection, I got up.\n\n\"I'll leave you alone, then,\" I said as he slid into the desk chair and plugged in his portable USB storage device. That's what he'd gone downstairs for, then.\n\n\"No, stay. I want you to see this, Rylan.\"\n\nI believed in his innocence. Even in the beginning, when I accused him of kidnapping me, I never thought he was a killer. I didn't need the video to prove that to me, but I still wanted to see it. I wanted to know what he faced, what he'd been through, really see through his eyes. My heart beat faster just imagining him there, facing that danger alone and knowing that he was staring death in the face. Eyes glued to the monitor, I waited as his fingers flew over the keyboard. The browser identified a secure site within the Tallahassee Police Department network.\n\nInvalid Filename\n\n1 of 3 tries\n\nThe error message pinged and he retyped it patiently.\n\nInvalid Filename\n\n2 of 3 tries\n\n\"Huh?\"\n\nNow he was frowning in confusion as he carefully typed his password a third time. The error message pinged again and a security notice popped up.\n\nUnauthorized User. Access denied and then the screen went blank. Daniel stared at it, eyes wide.\n\n\"Fuck,\" he breathed. \n\n\"What happened?\"\n\n\"I dunno. Someone's changed the security codes so I can't access the encrypted files.\" He looked up at me in stunned disbelief. \n\n\"But who?\"\n\n\"I don't know. Adkins and his boys couldn't have done it; they don't have my user codes. Only one person knows... Ah, fuck.\"\n\nHis fist came down hard on the desk, making me jump. The stunned look was gone; instead, he was pale with rage. \n\n\"Fucking Olmos. He was the one who blew my cover. It all makes sense now... Shit.\" Daniel took a deep breath. I knew he was clearing his head. \"Olmos is my captain,\" he told me grimly. \"I didn't know who leaked my IAD investigation. Now I know.\"\n\n\"Oh god, Daniel.\" The impression I got from the couple of times he'd mentioned his captain, was that he was one of the few people Daniel trusted. This had to be a huge jolt. I put my hand on his shoulder in concern but he shook it off impatiently, standing to pace the room.\n\n\"What are you going to do now?\"\n\n\"There's one copy of that video feed. I sent it to Scott Wyman. I can't get into the Chicago PD intranet on my own, not from here. I'm just gonna have to go up and find my old buddy Scott and get him to help me.\"\n\nThe way he said help and the dangerously calm look on his face gave me a chill. \n\n\"Daniel,\" I said softly. I stopped because I couldn't say the things that were teeming in my head: No, don't, it's too fucking dangerous.\n\n\"Tomorrow, if it's okay with you, we'll leave for Chicago. Once we get there, I want you to take me where I need to go and then leave. Drive back to Atlanta. I don't want you involved in this, Rylan.\"\n\n\"I'm not just leaving you there.\"\n\n\"You don't have a choice. You're a civilian and I'm not putting you in harm's way. You'll just be a distraction.\"\n\nThat hurt, but I refused to let it show. He didn't know stubborn. \n\n\"Fine,\" I said with a shrug and meant exactly the opposite. There was absolutely no way I was leaving him alone. He'd already been abandoned too many times. He didn't know it yet, but I was staying.\n\nHe gave me a long appraising look and he opened his mouth to say more, but then Paul's voice from the other end of the house startled us, calling my name loudly and the running of Maddie's feet coming closer.\n\n\"Rylan! Rylan, get in here, quick! You're on the news!\"\n\n******\n\nChapter 24\n\n\"And in local news, the St. Louis county sheriff's office is asking for your help in their search for Detective Daniel Braden, a Tallahassee police officer who's wanted in the shooting death of a fellow officer. Although there has been no official comment, sources within the department have revealed that Braden was involved in a drug-trafficking ring that may operate across state lines. Braden was last seen in St. Louis three days ago, in a green Honda Passport registered to Rylan Kennedy, a resident of Atlanta, Georgia. The driver of the vehicle was not identified, but Kennedy has not been seen since Friday. In a phone call, he told friends he had returned to his home in Milam, Illinois, but the ice storm paralyzing the area has halted the search effort. Anyone with information on Rylan Kennedy or Detective Daniel Braden is urged to call the county sheriff's office at...\"\n\nA rushing sound cut in my ears off any more words as a photo of my own face popped up on the screen next to the same photo of Daniel I'd seen on the news back in my kitchen. \n\nCharlotte, Paul, and both of the kids were staring at us with their mouths and eyes wide while we stood next to the couch, facing the TV. Daniel had turned pale and I gripped his hand at my side. I stepped slightly in front of him. I had to make them understand. I had to make the shocked, horrified, and slightly fearful looks go away.\n\n\"It's not like they're saying,\" I said when I could speak.\n\n\"Sit,\" Charlotte whispered, pointing at the other end of the couch. \"Tell.\"\n\nWe sat. I pulled Daniel's hand into my lap. There had always been an unspoken rule around Charlotte's kids, they knew I was gay and they knew what it meant, they'd met some of my boyfriends, but they'd never seen me hold anyone's hand before, or kiss, or anything like that. I didn't care; they were old enough to deal with it now and I wasn't letting go of Daniel, not ever. I held his hand firmly while he slowly told them story from the beginning, going back to the night of the shooting. The only details he left out were the two of us meeting in a club and going back to my house to fuck. He glossed over that part but Paul and Charlotte picked up on it and traded a quick look. They couldn't believe I'd gotten involved in something like this and their look plainly said, Should've known.\n\nDaniel went through the story carefully, showing his trained eye for detail. When he caught up to the present time he looked over at me hesitantly. \"I think that's about it, unless Ry noticed anything I left out. He's the storyteller.\"\n\nI shook my head. \"No. You got it all.\"\n\n\"And you trust him?\" Paul looked past Daniel, straight at me. \"In your heart, you believe he's telling the truth about everything.\"\n\n\"Yes. Absolutely.\" I nodded without hesitation and Daniel gave my hand a little squeeze. He was still pale. Everything rode on Charlotte and Paul right now. All they had to do was pick up the phone and call that number and it was all over.\n\n\"Okay.\" Paul looked at his wife and she nodded. The kids nodded enthusiastically when he looked at them for their agreement. It had to be unanimous. \"Then we trust you too, Daniel. We believe you and we're not going to call the cops, so you can relax. We'll do everything we can to help you.\"\n\nNext to me, Daniel caught a breath and I felt him go limp with relief, but he still hesitated looking at Paul with a mixture of doubt and disbelief. \"You'd help me? Even if you might get into trouble? But why?\"\n\n\"Because it's the right thing,\" Paul shrugged and the rest of them nodded their heads.\n\nDaniel had always lived in the city and he'd never been surrounded by a tight-knit community where everyone stuck together and fiercely looked out for each other. Friendships between families went back generations and at the first sign of trouble, the wagons circled and people stepped up to help each other. The bonds of family blood were even stronger, unbreakable, unconditional. The love between Charlotte and me had encompassed Paul many years ago, and now it stretched to include Daniel, because she knew from the first time she saw us together, even before I did, that I loved him and she would do anything for me. This love was huge and eternal and I only now realized how much I'd missed it living so far away. My gratitude was so overwhelming I couldn't speak; and Paul didn't give Daniel time to say anything. He wasn't interested in thanks.\n\n\"So tell me your plan of action. What are you going to do next?\"\n\n\"Well, I'm not sure. This,\" Daniel gestured toward the TV, \"changes everything. I guess I shouldn't be surprised there's a search on... these people aren't going to give up until they kill me. Right now, the law is on their side and they have all the resources at their disposal. They won't stop just because I disappeared for a couple of days. I should've planned for this. I shouldn't have let it catch me off guard.\"\n\n\"And what were your plans before you saw the news?\" Paul asked after giving Daniel a moment to ponder.\n\n\"I have to get into the network to retrieve that video file. I was going to have Ry drive me to Chicago and take me to Scott Wyman's place, but I see now that's too dangerous. I could've dealt with him alone, but now he's sure to be followed because they know I'll be looking for him, and I can't take on the whole Chicago PD by myself. Which is a shame, because I was looking forward to a little persuasion.\" He paused to think that over. \"I have three things I need to accomplish. One: Get into the network and download my video. Two: Take the video to someone I trust. Three: Get access to the rest of the evidence.\"\n\n\"Who do you trust up there?\" I asked.\n\nWyman had been instrumental in setting him up, and now that Captain Olmos was out of the equation, Daniel was pretty much alone. He had no one to go to. The thought was chilling.\n\n\"That's the problem. I don't know,\" Daniel admitted. \n\nCharlotte had gotten up and she came back and handed us all a beer, which I opened gratefully. Maddie and Jeremy were given sodas. I would've expected them to get bored and wander off, but they were fascinated with the proceedings. Nothing this interesting ever happened around here. \n\n\"The way I see it, you need someone on the outside,\" I said slowly as an idea turned in my brain. Sometimes, it took a bit of time for my thoughts to fully develop. I was good at doing it in the pages of a novel but it could be challenging in the real world, where things happened much more quickly. \"Someone impartial and not accountable to the police department.\"\n\n\"Yes... and the FBI would've been the place to go, but after what happened in St. Louis, I'm just not sure about them either. It could have been a ruse, or it really could have been FBI involvement. There's no way to know and I just can't take that risk.\" \n\n\"What about the ATF?\" Charlotte said.\n\n\"I can't involve the ATF until after I get the video. I can't call them with unsubstantiated accusation; they don't act on rumors, they have to have proof. Besides, if I do it before I clear myself of this murder, I'll be arrested.\" He shook his head, his frustration growing with each dead end.",
        "\"The press.\"\n\nDaniel lifted an eyebrow and everyone looked at me and waited for me to complete my thought.\n\n\"You need help getting access to Wyman. A reporter could do that, be your contact point so you won't be spotted if anyone is watching him. A reporter could break the story in a live Internet feed, so that your video will be safely on their secure network as soon as you get it and nobody can alter it or take it away. The proof of your innocence is incontrovertible once we secure the video files... with that, we buy the chance to access the rest of the evidence.\"\n\n\"We?\" Daniel questioned, but the corner of his mouth was tugging in a smile. \"When did this become we?\"\n\n\"Did I say we? I meant you,\" I answered sweetly.\n\n\"Uh-huh. We'll discuss that part later. That's a good idea, Rylan, but the problem is, you can't just show up at the Tribune office with a crazy story and expect a reporter to believe you without question. They're even more cynical than cops, hell, they're likely to call the cops on me themselves.\"\n\n\"You forget, I went to Northwestern.\" I smiled. Yeah, my moment of inspiration was turning out to be brilliant. \"I have a good friend up in Chicago who works for the Sun-Times. I haven't talked to her in awhile, but we'll be able to trust her. I know she'll help us.\"\n\n\"Do you have her number?\" Daniel asked immediately. I knew he was impressed with my idea and the warmth of his approval felt very pleasant. To be able to help, it was all I really wanted. To help him and keep him safe, to be someone he could trust, his port in the storm where he'd been lost and alone for so long.\n\n\"Not on hand, but I can get it.\" \n\nOn the Sun-Times website, there was a phone directory for the offices of the different departments within the paper. I didn't know what department Kat was working in nowadays, but after I talked to a friendly lady in the City pages, I was soon connected to Kat's voice mail at the Editorial desk. Dammit. If only I had her cell number. In addition to leaving her a message, I also e-mailed her from the portal on the website. When I hung up, I shrugged at Daniel who was waiting with thinly veiled impatience, a crack in his calm.\n\n\"I sure hope she checks her messages.\"\n\n\"You did everything you could. All we can do now is wait.\"\n\nSo we waited. Outside the windows, darkness deepened the shadows on the snow from gray to indigo. Paul watched TV in the den, the kids played their X-Box on the television next to the fireplace and Charlotte moved around the house doing various chores and whatever else she did. Daniel and I drifted restlessly from one thing to the next until we finally ended up standing at the window, looking out at the full moon shining down on the dark snowy fields, breaking and refracting so the silvery light sparkled like countless tiny diamonds. We'd both been feeling suffocated, caged and crowded, in a house filled with people, waiting, with nothing productive to do and nowhere to get away from it; there was so much on his shoulders right now and yet his eyes still lit up when he gazed at the moonlight on the snow. I leaned closer to him so that our shoulders touched and he smiled at me. I wanted to kiss him so much, but I couldn't. Not with everyone around us. I didn't even care about the cold and the dark; I wanted nothing more than to be back at the farmhouse with him, just the two of us, for what could very well be our last night together.\n\nLove you, scared for you, don't want you hurt. Can't say any of those things so just press the sensitive skin of my upper arm through my clothes into his warmth, and try not to imagine the worst.\n\nThe phone rang. Finally. After we'd just decided she wasn't going to call, it finally rang. We both jumped and stood there tense. Charlotte answered it and brought it to me. \"It's for you, Rylan.\"\n\n\"Rylan Kennedy, what the hell is going on? I just saw you on the news!\"\n\nI smiled at the voice on the phone. \"Hi Kat. It's been awhile but you still sound the same.\"\n\nWe talked for a long time as I told the story for the second time today. It did sound preposterous in some places; I wouldn't have believed it either if someone had walked up to me and started telling it to me out of the blue. But Kat knew me, and she knew I wouldn't lie, or be taken in by a wild story. We sort of became friends by proximity when Kat was dating my old roommate, Amelia. She was always at our apartment and at first we didn't have much to do with each other, just saw each other as a necessary evil, but somewhere along the line we started talking when Kat would call Amelia, and the next thing we knew we were friends, long after Amelia was out of the picture. Kat was the only one of my friends who knew what it was like to be gay in an Irish Catholic family and so we got each other.\n\n\"She wants to help us,\" I told Paul and Charlotte, who were waiting in the den when I finally hung up. Daniel had been listening the whole time Kat and I talked, and I'd consulted with him as we made plans for tomorrow, so he already knew that she was ready to do whatever we needed. I knew this story would be too good for her to pass up. She wanted to help a friend, of course, but a good exclusive like this might even land her a front page piece, or even her own column. The danger was worth it to her.\n\n\"We're going to meet her at her apartment tomorrow and she's going to contact Wyman for us and arrange a meeting.\"\n\nPaul nodded thoughtfully. \"That's good. I've been thinking, Daniel. Rylan's vehicle has been identified so the cops are going to be on the lookout for it.\" He and Charlotte exchanged looks. \"We want you to take our car in the morning.\"\n\n\"We couldn't...\"\n\nPaul cut off Daniel's protest. \"The way I see it, you don't have a choice. Rylan's truck is locked in the barn, but maybe you'll be well on your way when they find it. You need to get out of here in the morning as soon as you can and I've got the Subaru all gassed up and ready to go. It won't be long before the police come to the farmhouse looking for you, and then they'll come here.\"\n\n\"Fuck,\" Daniel cursed, while my heart started to thump in my chest. It was all becoming real now. \"I left my gun at the farm.\"\n\n\"The snowmobile has a headlight.\" Paul got up from his recliner. \"Come on. I'll take you over there right now so you can leave early in the morning.\"\n\n\"Go,\" I told Daniel when he looked over at me. The kids had gone into their rooms so I brushed a kiss over his lips as he and Paul went to get their cold weather gear on. When they had gone, I sat down next to Charlotte and took a deep breath. She wrapped her arms around me comfortingly.\n\n\"Don't be scared, Squirrel Bait.\"\n\n\"I can't help it,\" I admitted. I buried my face in the sweet-smelling strawberry blonde hair draped over her shoulder. \"For him, not for myself. They'll kill him if they can. These people are totally ruthless.\" What we saw in Birmingham proved that.\n\n\"He won't let that happen.\" Charlotte patted my back. \"Daniel knows what he's doing, baby. He's gonna take care of you.\"\n\n\"I know.\" \n\n\"Leave early in the morning, while it's still dark. Don't use the interstate. Don't stop anywhere unless you absolutely have to. Take Highway 16 out to 51 and don't drive fast, but don't drive too slow either, it's suspicious.\"\n\nI nodded, pulling away. \"We'll be careful.\"\n\n\"I know you will. You take care of Daniel, too. He needs you.\" She smiled at me. \"Maybe he doesn't know it yet, but he needs you. Now go down and get some rest. I'll send him down when they get back. Try not to worry too much, Ry. I know it'll all work out.\"\n\nI did what she said, but the fear dogged me. There was a lot at stake here. I couldn't lie; I didn't give a damn about Daniel's investigation. It could all go to hell for all I cared. It was Daniel's cause, his mission, but there was no way I was letting him sacrifice his life for it. He was going to live whether he liked it or not.\n\n*****\n\n \nChapter 25\n\n\"No. It's not safe.\"\n\n\"I'm not letting you go alone.\"\n\nDaniel stared down at me, and then he sat down on the side of the bed and faced me. I'd waited until he came back from the farmhouse with Paul and I was naked and waiting for him in bed before I told him that whatever happened in Chicago, I was going with him. That I wasn't leaving him.\n\n\"I don't want to argue with you.\" He tried to look directly into my face, but his eyes kept sliding down my chest to where the blankets were bunched around my hips, exposing my belly button and the edge of my pubic hair when I deliberately shifted. \n\n\"Then don't.\" He didn't know yet that it was pointless to argue with me anyway, but he would learn soon enough. I grinned at him to take away the edge of my words and I wiggled a bit to let the covers ride down even more so I could show him that my dick was getting hard just from his walking into the room. \"It must've been cold out there on that snowmobile, all dark and icy with the snow blowing in your face,\" I said sympathetically.\n\n\"Yeah. Very cold.\" He nodded while staring at my crotch. \n\nI reached up and ran my hand over his smooth scalp. The soft blonde stubble was as silky as kitten fur under my touch. He shuddered, drawing in a breath. I grinned because I knew exactly what it did to him, and it excited me knowing my touch could make him shiver. I drew his head closer and brushed my lips over his hairline, then the outer edge of his ear, cold to my lips. He bit his lip when I murmured softly, stroking the soft curve of his neck. Before I met him, I never knew just how sexy an exposed neck could be. So much male beauty there in the fluid muscles across the shoulders, that graceful arch of the spine into the base of the head.\n\n\"Then maybe you need to get some of those clothes off and get under the covers where it's warm.\"\n\nI lifted the edge of the covers to invite him in. His eyes never left my naked skin while he stood up and hastily pulled his clothes off, kicking them aside impatiently. The impending argument was totally forgotten, of course. I forgot it myself the second his body slid next to mine and I pulled the covers up and enveloped us both in the warmth.\n\n\"Fuck, you are cold.\" I gasped with shock when his icy hands and feet sought out my heat.\n\n\"Warm me up,\" he growled roughly. \n\n\"We need to get your blood pumping.\" I closed my lips around the outer edge of his ear. It was cold to my lips. I nibbled and felt him shiver. I liked making him shiver. I draped myself over him and wrapped my arms around him until the chill went away. His hard cock jabbed me in the belly right next to mine and I slowly rubbed my hips against his. A little explosion like the pop of a firecracker went off and radiated up through my core. He moaned softly. Fuck. We had to be so quiet in this houseful of people\n\n\"That's better,\" he whispered. His tongue peeped out and I met it with mine. We kissed with just our tongues before I caught the back of his neck and attacked his mouth.\n\nFuck he tastes sweet. A sheen of sweat breaks out over me. I smother a moan into his mouth, tasting him, clinging to his tongue while he deliberately thrusts it in and withdraws, slowly fucking my mouth.\n\nHis hands slide down my back. He gives me a wicked grin as he catches my bottom lip delicately between his front teeth and bites down while at the same time he cups my ass cheeks in his hand and squeezes them. His hands are rough but his teeth are oh so gentle and I squirm and writhe against him, whimpering into his mouth. My cock is so hard and it begins to ache wildly as he manhandles my ass, pulling my cheeks apart, roughly spreading my hole. It tingles as the cool air brushes it.\n\n\"Daniel,\" I breathe. Desperate, pleading. I'll have tiny bruises on my ass but I don't care.\n\nHe tugs at me. It takes a second to figure out what he wants but then I get on my hands and knees and crawl up him. He stares up into my eyes. My balls trailing up the smooth skin of his belly and then his chest makes my knees quiver. His skin is damp with sweat between my thighs, firm hands on my ass. I am both afraid and secretly hope he'll bring his hand down across them in a sharp slap but he doesn't and I can't ask. \n\n\"Sit on my face.\"\n\nMy breath catches in my throat. I bite my lip, shuddering. I brace my hands against the wall and lean into them. Glimpse of his wicked flashing eyes between my thighs under my balls, then his hands are pulling my ass open and his tongue twirls around my hole and then dances away. He licks and sucks that spot just under my balls until I'm whimpering between my clenched teeth. Can't make a sound. Want his tongue in my ass, his fingers, something, such a tease, that devilish tongue flicking my hole then darting away leaving me empty and aching, knees trembling, cock dripping slowly down onto the sheets. I arch my back, suspended in his torment.\n\n\"Fuck, Daniel,\" I whisper.\n\nHe hums into the crack of my ass and the vibration nearly makes me fall over. I buck my hips down and then his tongue slips into my ass. It feels so fucking good. I twist endlessly and then his finger slides inside me. The slight burning shoots a thin streak of pleasure up my spine. Flash of him on his knees with his ass spread for me so wanton and slutty demanding more. The first night we ever fucked. Another finger slips past the tight ring of my ass alongside the first one in a slow twisting motion. I clamp my mouth shut on a cry of both pleasure and frustration because it feels so good but I want his cock now that I can have it after waiting for so long.\n\nHe pushes me off him. His face is flushed and mouth red and swollen from tongue-fucking my ass. I can't stop staring at it as he reaches over and grabs a condom and the lube. My hands are trembling too badly to get the package open so he takes it from me and sheathes his cock in the thin, slimy latex. I slick him up with lube until he moans softly and stops me but I don't use it on myself because I want to feel that deep, satisfying burn as he sinks in me to the hilt, stretching me so wide...\n\n\"Oh god.\"\n\n\"Shhh.\" He breathes in the dark and I look down at his face as I straddle his hips on my knees. His cock brushes my balls from beneath and his body is stretched out under me...golden skin, tight flushed nipples, abs rippling and his arms... love his arms, the smooth hard curve of his biceps, that line of corded muscle down his forearms, wrists, then his hand reaching up to grip my left hip. My other hand wraps around the base of his cock to hold it steady so I can slide down on it. His eyes stare into mine clouded with lust.\n\nHis cock splits me. I wince at the pinch but the pain shoots out in delicious tingles and radiates into my fingers and toes. He grips my hips and moves fluidly under me, staring into my eyes as I sink down on him. Oh god, his cock. So fucking warm and feels so good filling me. I watch him bite his bottom lip to keep from crying out with pleasure, falling into the moment. Our skin slides together and my thigh muscles tense, taking him deeper. Love you Daniel. \n\nI shouldn't speak, need to be quiet but I can't stop myself. \n\n\"How do I feel?\" I whisper. I stare at his eyes, watch them roll back into his head as I slowly begin to ride him, watch him struggle to form words. \n\n\"So good,\" he breathes. \n\n\"Tight?\" I feel his cock brush the edge of that little spot inside me and I almost can't speak from the waves of pleasure but this feels important.\n\n\"Fuck yeah... so tight... Mmm.\" He lets out a deep growl as I take him all inside me to the hilt. I'm sitting on him and all words and thoughts are gone in the feeling of him pounding inside me, lifting his hips in rhythm to my thrusts. The bed bucks against the wall in light thuds. Shit. I put my hands to the wall and push backward; it quiets a bit. I stare down at him and his red face and his lips so luscious, trying not to make a sound, while our light panting breaths filled the space and I rode his cock so it swiped over my prostate again and again, hitting it and pulling away, hard and fast. The power was unbelievable.\n\nHe drew his knees up and I leaned backward and gripped his thighs for support, arching my back, face to the ceiling. Oh fuck, the pleasure was so intense. I groaned deep in my throat. My orgasm unfurled at the base of my spine and his hand came up and pressed against my belly and then I was done. I dropped forward, locking my mouth onto his. I cried out my pleasure into his mouth, muffling the sounds as I shot between us, climaxing silently in hard intense shattering bursts. Rippling around him in waves, felt him tense, felt him grab me hard when he came. Hips stopped moving and I swear I felt him pulsing inside me, going slowly limp with contentment.\n\n\"Oh my god, Daniel,\" I breathed in his ear. He hugged me hard and we started laughing like two giddy teenagers. My heart gave a jump when the dark shadow of tomorrow fell over me and I suddenly grabbed him and held on tight until my stomach stopped flipping.\n\nA steamy shower relaxed us both even more, but when we had gotten back into bed and curled up under the blankets, tangled together, I didn't want to sleep. Not when time felt so short.\n\nThe small basement window offered only a faint silver glow in the dark room but it was enough to see his face on the pillow next to mine, turned to face me. His eyes were closed and his breath was soft and even. His thigh was thrown over mine, a comforting weight. The uncertainty of what was going to happen to him was more than I could stand.\n\n\"Daniel?\"\n\n\"Mmm.\"\n\n\"You asleep?\"\n\n\"Mmmmno.\" He cleared the sleep from his voice.\n\n\"You and Ray... how long were you together?\" I asked softly.\n\n\"Four years,\" he answered drowsily. \"But we knew each other in high school, so we were never strangers. Like we'd always been a part of each other.\"\n\n\"Really?\" I thought of something. \"It doesn't bother you to talk about him does it?\"\n\n\"No, it's okay.\" He smiled with his eyes closed. \"He was four years older than me so he was a senior when I was a freshman. We were on the wrestling team together but he wasn't in my weight class so I never wrestled him... I was just aware of him, watched him, the big hunky Puerto Rican guy who never seemed to notice me.\"\n\n\"Ray was Puerto Rican?\" I don't know why that surprised me but it did.\n\n\"Yeah. His name was Ramon but nobody got to call him that but his mother.\" Daniel smiled faintly and opened his eyes, looking up at a point past my head. \"He did notice me, though. When I joined Tallahassee Vice after I got out of the Army, he remembered me right away. I didn't know he was gay in high school, but then again, I didn't know I was either. He took me under his wing on the force, helped me, watched my back on the streets and in the office. He made sure I stayed safe out in the clubs too. I cleaned up my act a lot because I couldn't face him with some of the things I was doing. We were such good friends, we were so comfortable with each other, I didn't want to screw up our friendship by bringing sex into it but eventually it just happened. We slept together a few times... then I was staying in with him instead of going out at night... and the next thing we knew we were in love, and then we were moving in together.\"\n\nI put my arm over him and held him tight. I didn't want him to keep on if it hurt too much, but he seemed calm if a bit sad so I didn't interrupt.\n\n\"We didn't keep it a secret on the force, but it's not a widely accepted thing either, so we were discreet about it. I hated not being able to tell the world he was mine, but he always knew the right things to say to keep me from getting bitter. I'd always said I'd never live that happy-hetero suburban life with a husband and a picket fence but I was, and I so happy I didn't care. We agreed on an open relationship but neither of us wanted anyone else. I only wanted Ray.\"",
        "His body tensed. I stroked his back and he tipped his forehead into my arm.\n\n\"We were always so busy. Always working late, always giving everything to the force. Ray was involved in a shelter for runaways and he gave so much of his time helping those kids. Never wanted thanks, just did it because someone had to. We always meant to take a vacation and get away, spend some time just the two of us, but we kept putting it off, thinking we had plenty of time next year. But then our time ran out.\"\n\nI felt him swallow hard and I rolled to my side and drew him closer, resting my chin on top of his head. \n\n\"I was a pallbearer at the funeral. I didn't have to, but I wanted to. I couldn't just watch while they put him in a hole in the ground.\"\n\n\"Daniel...\" I whispered his name so lovingly. I'd do anything to take his pain away but I couldn't, nothing could. I could only hold him tight.\n\n\"I stood there watching while everyone gave their condolences to his mother. They presented the flag to her and she received all his honors. Once he'd come out as gay, she barely spoke a word to him... she didn't even look at me the whole time. Our friends on the force who knew about us couldn't even acknowledge me publicly. It just felt so hollow, a sham. The next day I was back at work, going through the motions, but I wasn't even sure I wanted to keep going. My friends watched me and kept me from taking stupid risks, but for awhile I didn't care if I lived or died.\"\n\nI cringed. \"Ray wouldn't have wanted that,\" I told him softly.\n\n\"I know. That's the only thing that stopped me from giving up. He would've wanted me to keep going and so I did. Joining IAD to get Adkins made me focus on something other than coming home to an empty house. I started doing normal things again, going out to bars, hanging out with friends, fucking, but I just felt so tired inside...\"\n\n\"Empty.\"\n\n\"Right. Exactly.\"\n\n\"And what about now?\" I whispered. I knew I shouldn't pressure him but I just wanted some inkling that he had feelings for me. Something more than just casual, more than just a fuck, even if it was selfish. I felt it, yeah, but I just wanted to hear it.\n\n\"Now? I just want to get through this... to finish the job, and to keep you from getting hurt. Although, if you'd just listen to me, it would make that part a hell of a lot easier.\"\n\nDespite the bitchy note that crept into his voice, I hugged him and smiled as I relaxed into sleep. It wasn't exactly the declaration I wanted, but it proved he cared. He wasn't going to deliberately get himself killed because he suddenly had something to live for. Even if he couldn't say it aloud, it was something. For right now, it was enough.\n\n****\n\nAuthor's note: Without the help of the late Colleen Thomas this story could not have been written. Colly, I will never forget your knowledge and your kindness. I miss you. \n"
    ],
    "authorname": "carsonshepherd",
    "tags": [
        "gay blow jobs",
        "gay anal",
        "undercover policeman",
        "gay drama",
        "condoms"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/between-the-bars-pt-05"
}