{
    "title": "Between the Bars Pt. 07",
    "pages": [
        "Chapter 30\n\nThe chair was so hard. I shifted and pulled my feet up under me, wrapping my arms around myself for warmth. Cold in here too. As soon as I'd gotten to the station in the back of the patrol car, they took me to this interrogation room and walked out. I'd been sitting here, alternately pacing and trying to get comfortable in the hard metal chair, for so long I'd lost track of time. Even if I'd been wearing a watch, they would've taken it from me like they took all of my personal belongings before they brought me in here.\n\nI knew the big mirror across one wall was one-way glass. I'd given up pressing my face to it and shielding the glare with my hands in an attempt to see out. I'd watched enough TV to know that they should have taken me to booking to charge and fingerprint me, or come in the room and questioned me, but nobody came. Nothing happened at all. No phone call, no nothing. I just sat and waited and waited in the blank little room. \n\nI couldn't wait anymore. I closed my eyes and let my mind disconnect, the way I did when I was small, before I moved in with my grandparents, and bad things would happen that I either didn't want to or couldn't think about. I must've sat there for a very long time, keeping my mind blank so I wouldn't go insane with frustration and worry about Daniel, lying in a hospital bed somewhere broken and bleeding and alone. When the buzzer sounded, I looked up wearily. No use hoping. They were never going to let me out, I was going to be here forever.\n\n\"Kennedy. You're out.\"\n\n\"But, I don't understand, they never even questioned me.\"\n\nThe cop stared at me like I was total idiot. \"You gonna stand around asking questions, or get the fuck out of here?\"\n\nI got up immediately and stepped out into the hall. The door thunked shut behind me. \"Counsel's here,\" the cop said over his shoulder.\n\n\"A lawyer? But I don't have a lawyer, I never even got to make a phone call.\"\n\n\"Tell her yourself.\" He pointed at a petite, very pretty lady in her twenties with long dark hair, wearing a gray suit and black high heels. She walked up to me and stuck out her hand for me to shake, which I did, confused. The cop walked away and left us standing there in the hallway\n\n\"Rylan, I'm Ariella Frieden. It's good to meet you. The Chicago Sun-Times sent me over to get you out of here.\"\n\nI blinked, confused by it all. \"Uh, am I under arrest?\"\n\n\"No charges have been filed against you at this time. Pending investigation, you're free to go. Come on, let's go down to processing and get your personal items and get you out of here.\" She bustled off down the hallway and I had no choice but to follow her.\n\n\"Pending investigation? Does that mean I could be arrested later?\" I asked.\n\n\"I don't have an answer to that. Because this is an... internal matter, the police are not answering my questions regarding the case.\"\n\n\"They never arraigned me or anything; they just held me, are they allowed to do that?\"\n\n\"As long as it's for less than twenty-four hours, yes. That's why the Times sent me over here, to make sure they didn't hold you illegally. Here.\" \n\nShe opened a gray metal door and pointed me inside. The bored lady at the counter, not a cop but a step up from a crossing guard, processed me out and handed back everything I had on my person at the time I was arrested, except Daniel's handgun. I didn't ask about it, but I was sure it was being held as evidence. When I came out of processing through another door, Kat leaped into my arms, with Alex right behind her. They both looked exhausted, but Kat had managed to change out of her pajamas and into business attire and put on some makeup.\n\n\"Rylan, thank god. I've been worried sick.\"\n\n\"How's Daniel?\" I asked immediately. \"Is he okay?\" When I hugged Alex, I felt myself sag against him a bit. He was so solid and reassuring and I hadn't realized how fucking tired I was. I didn't understand any of this. Between the time I was arrested and the time I was released, somebody decided I didn't do anything wrong and they just let me go. \n\n\"Yes, he's out of surgery now and doing pretty well,\" Kat answered. \"They've got him down at Cook County Hospital and their trauma center is excellent.\"\n\n\"I need to see him.\"\n\n\"They've got him under security, so you can't see him right now.\" She took my hand and started escorting me toward the door, with Alex behind me at a close protective distance. Ariella followed along, murmuring into a tiny silver cell phone. \"Come on, let's get you back to my apartment so you can get cleaned up and prepare your statement for the press conference we've got set up.\" \n\n\"Whoa. Wait a minute.\" I dug my heels in and stopped. \"I'm not giving a press conference.\"\n\n\"But Rylan, the story broke. It's all over the news, what you and Daniel did. You brought down a whole ring of corrupt cops from all over the country. The public wants to hear from you. You're a hero.\" She beamed, clearly enjoying all this and the role she had played in it. This bit of investigation journalism was going to make her a very important part of the Sun-Times staff.\n\nI shook my head. \"I'm not a hero and I'm not your trained monkey, Kat. No statements and no press. I want to go to the hospital and be with Daniel, and if they won't let me see him I'll wait there until they do.\"\n\nKat huffed a breath, but she considered me for a moment or two and then finally nodded reluctantly. She knew me well enough to know she wasn't getting anywhere. \"Okay. You're right. Now isn't the time. We'll go down and try to get you in to see Daniel. Before that, though, we really should take you back to my place so you can clean up. You don't want Daniel to see you like this.\" \n\nShe took my wrists and showed me the blood that had seeped onto the my coat and soaked into my sleeves. I hadn't even realized I was covered in Daniel's blood. It was a far cry from him eating dinner with my family in a shirt splattered with my cum. I nodded and let her lead me down the hallway marked Exit.\n\n\"The paper wants me to do a front-page exclusive for tomorrow's edition, so I need a written statement,\" Kat went on relentlessly. \"I need to know the sequence of events the best you can remember. Who shot Daniel?\"\n\nThe image of him bleeding onto the snow was branded into the back of my eyelids. It would never go away. \n\n\"Sgt. Adkins.\"\n\n\"And you shot him?\" She gave me a piercing look like she wasn't completely convinced I was capable of such a thing. I shrugged. I didn't consider it an act of heroism. I did it because I had to, because I'd do anything for Daniel.\n\nThe hall ended. Alex, who was slightly ahead of us, pushed open the police station's front door. He stepped back inside with a shocked look on his face and pulled it closed, blocking the door with his big frame.\n\n\"What is it?\" Kat asked.\n\n\"The press is out there,\" Alex answered, eyes darting to my face. \"All the local stations and even the networks.\"\n\nI didn't miss Kat's guilty little start. Damn her. Business suit and makeup, all right. Ariella stepped outside the door and announced to all the microphones that I had no comment. Alex and I stayed just inside the door while Kat went outside and brought her SUV around, although at first she wanted Alex to do it, until I pointed out that Alex could shield me a lot better than she could. It's not that I blamed her for wanting national exposure on her story, and for her face to be on the news as the intrepid reporter who broke the story, but even if she was my friend, using this for a media opportunity really pissed me off when Daniel was lying in the hospital alone. I didn't have time for this shit, I had to get to him.\n\nPushing through a throng of reporters shielded by Alex's big body, having microphones shoved in my face and questions shouted at me isn't an experience I want to repeat. I hated being the center of attention anyway, but especially because I knew I was no hero. All I did was help. Daniel was the real hero. He stayed dedicated even when nobody believed him, when the whole world was against him. This case was big; it involved a lot of important people and it was going to be on all the national news stations. The glory, if he wanted it, belonged to Daniel; and if he didn't want it, I'd do anything I could to keep the attention away from him.\n\nBack at Kat's place, Alex handed me a neatly folded stack of clothes from the couch. Cargo pants, a t-shirt and a heavy navy-blue button-down. I assumed they were his but he grinned at my obvious doubt.\n\n\"They're my brother's. They might be a little big, but not like mine. It's all we could get.\"\n\n\"I'm sure they'll be fine. Thanks for thinking of it.\" I paused in my own drama long enough to glance up at Alex's shy eyes, his little-boyish face hidden in the scraggly beard. I smiled at him and he blushed. I owed him so much. I knew he had feelings for Daniel that he fully realized could never turn into anything, but instead of resenting me for getting in the way he unselfishly did everything to help us for no other reason than he could. He was in a position to help us and he did, and that was a rare thing. His loyalty awed me, humbled me. His blush told me any kind of praise or thanks would embarrass him more than he could stand; I could relate to that, so I just reached up and gave his thick shoulder a little squeeze.\n\n\"Hey.\" Kat shoved in briskly and broke up our moment by handing me a plastic grocery bag. \"Here, put the bloody clothes in this and I'll have them incinerated. You're going to get an HIV test, right?\"\n\nBlankly, I looked down at the rusty stains of Daniel's blood under my fingernails. We'd been so careful in the farmhouse. He'd assured me there was no reason to worry, and I believed him, but even so, he never took the chance. Now protecting each other from what might be in us was totally beside the point. Direct contact with his blood, sure there were risks, but I didn't freak. I felt only peace because whatever happened, I knew it would be okay.\n\n\"Yeah,\" I said because Kat was waiting for an answer. \n\n\"Good.\" She kept staring at me. \"And a follow-up in six weeks. Daniel will insist on it himself. It's police procedure with any direct fluid contact.\"\n\nFluid contact. The dripping blood and the spurt of cum and cold panic sweat were all condensed into two clinical words. It was ironic really, all the frustration we'd had stranded at the farmhouse trying to avoid fluid contact only to end up with this happening. In the shower, I washed it all off under the hot water. I didn't want Daniel to see it because I knew he'd be concerned, just like Kat said. He'd stop focusing on his own recovery to worry about me and I didn't want that. I didn't want Daniel to think about anything but getting better. I hoped they were giving him great drugs so he wasn't hurting. I made myself not picture him lying in a hospital bed suffering.\n\nI'd researched ballistics and gunshot wounds extensively for a couple of my novels, so although my knowledge was specialized in antique weapons, I knew enough to know that a shattered shoulder hurt like hell, but it wasn't life-threatening. Medical treatment was swift enough that shock was not a danger, but if the aim had been better or the ambulances just a little slower... My knees went weak and I had to grab the counter as it hit me full-force. He could have died. Just like Scott, like Ray, like the officer in the video. Just a few inches to the left and he'd be gone. He could have died and then what would I have done? My life wouldn't have changed on the outside, I would've gone back to Atlanta and fallen right back into my rut like none of this ever happened, like Daniel never even existed. He was so important to me after such a short time, I'd never felt this way and the intensity of my need to be with him scared the hell out of me but I didn't care. I jerked my clothes on and charged out of the bathroom demanding we had to go.\n\n\"Shit.\" As Kat pulled into one of the parking areas, I stared in dismay at the Cook County Hospital complex that sprawled out over six or seven city blocks \"How are we ever going to find him in there?\"\n\n\"He's in Tower C of the main building, room 515,\" Alex answered, watching the signs out the window. \"It's that way, Kat. Make a left.\"\n\n\"Wait, how do you know that?\"\n\n\"While you were in the shower, I got into their system and took a peek at their patient list.\" Alex shrugged. \n\nI lifted an eyebrow. Well, if he could download encrypted files off the Chicago Police Department's internal network, confidential patient files should be no big deal. \"Oh. Well... good job then.\"\n\n\"If he's under guard, it's not going to be easy to get to him even when we do find him,\" Kat said in the parking garage elevator. \"He's not a prisoner now, but he's under protective custody at the hospital and that means there's a list of people who can see him... and I doubt you're on it. An FBI agent named Jensen has taken over the case. He's the one who came into the surgery waiting room and told Alex and me that Daniel made it through surgery okay and we had to leave. If he's there, we'll never be able to get you in.\"\n\n\"I'll get in.\" I shrugged. I wasn't leaving until I did, it was that simple. Kat and Alex looked at each other and I pretended not to notice. The creaky old elevator bumped and lurched up to the fifth floor. Alex gripped the rail until his knuckles turned white, glancing up nervously until the thing lurched to a stop. When the door slid open, he almost fell out and I grabbed his arm and held him until he got steady, just the way he held Daniel and me up.\n\n\"Okay. Daniel's room is down the hall. It'll be easy to find because it'll have an armed guard.\" She grinned. She loved shit like this. I, on the other hand, eyed the nurses' station with trepidation. She was going to get us kicked out and I'd never get to see Daniel. I tilted my head in the direction of the nurses at the counter in their scrubs, talking and laughing with each other in front of their computer screens. \n\n\"But how are we going to get past them? Do you have a plan or anything?\" \n\n\"Let's just try the forceful approach first.\" Kat lifted her eyebrow at me and grinned. \"Let's go, boys. All you have to do is follow along.\"\n\n****\n\n \nChapter 31\n\n\"Sorry, you're not on the list.\"\n\nYou didn't even look at the list, bitch. I wanted to scream in frustration but I knew that would only get us kicked out. I took a deep breath, while Kat put on her most winning smile. The cop was a tiny, sour-faced woman who barely even looked big enough to handle a weapon, let alone apprehend a suspect. Probably a desk jockey. She didn't even give Kat a glance. Kat was one charming dyke, so the cop was clearly straight and from the way she looked at me, she was not inclined to be sympathetic to gays either. There was no way she didn't know who I was, and why I wanted to see Daniel so badly. \n\nThe door was cracked slightly and I could see the end of the bed, and the shape of Daniel's feet under white covers, but no matter how I twisted and turned the corner of the wall obscured his the rest of him. I longed to see his face. He was so close, I could almost touch him and it killed me not to be able to get to him.\n\n\"Yes, I know, Officer, but I'm Kat Grissom with the Chicago Sun-Times and this is Rylan Kennedy, a close friend of the patient. You may have heard about him on the news. He isn't a danger to Detective Braden, he only wants to see him, he's involved with the case and he was on the scene when the shooting occurred and even protected --\"\n\nThe lady cop looked at me like I was dirt on her shoes and sneered at Kat. \"I don't care who you any of you are. If you're not on the list, you're not going in.\"\n\nThrough the cracked door, I saw Daniel's legs shift. Kat's eyes got that icy-hard gleam and I knew she was about to make hellfire rain down on this woman, so I gently took her arm just as she was opening her mouth. I had to get to Daniel and pissing this bitch off wasn't the way to do it.\n\n\"Kat, leave it alone,\" I said softly. \"Come on.\"\n\nShe gave me a rebellious scowl but she went with me down the fluorescent corridor to the little waiting area where Alex was squashed into a hard plastic chair. The nurses' station was directly across and I wanted to avoid their notice at all costs. One call to security was all it would take. \n\n\"Cunt.\"\n\n\"Yeah, but that cunt's gonna have us thrown out of here and maybe even arrested if you don't settle down.\" I sat her down in a chair and paced around while she fumed. Think, think. Obviously, the forceful approach wasn't going to work and it was time to move on to plan B. I interrupted Kat's mumbled rant about calling her boss and the police commissioner.\n\n\"Listen. I think it might be best if you and Alex leave. Three people multiply the problems. If it's just me I can figure out a way to slip in.\"\n\n\"No, wait,\" she protested immediately. \"If my editor-in-chief can make some calls to the right people and...\"\n\n\"Kat,\" Alex interrupted in his quiet mumble. It was so rare for him to speak on his own accord, we both stared at him in surprise. He blushed slightly as he went on. \"Rylan's right, he'll do better on his own. We're in the way. Let's go.\"\n\n\"But, but wait,\" Kat protested and sputtered but Alex bodily pulled her out of the chair so she gave in with bad grace. \"You have my number, don't you? You'll call me if anything happens and you need me, right? Or if anything develops I need to know about?\" she called as Alex dragged her to the elevator. I nodded and waved as they disappeared behind the sliding doors. I knew why she didn't want to leave. She was concerned about me, yes, but she what she wanted was an exclusive. Shaking my head, I went over and sat down in the waiting area to think over my next move.\n\nMy body ached from hours cramped up in the interrogation room so after awhile I got up and started wandering. I tried to stay away from Daniel's door; I didn't want the cop to get suspicious because I kept appearing and have me thrown out, but I couldn't seem to resist the draw of seeing even his feet. As I walked past trying to stay invisible, I noticed one of the nurses coming out of Daniel's room, passing the guard. I'd noticed her at the nurses' station earlier. She was very pretty, tall, with shoulder-length brown hair and a kind, radiant smile. Somehow, I felt immediately drawn to her. This might just be someone who could be convinced to help me.\n\nI went back to the waiting area. The nurses glanced at me from time to time, but none of them questioned me. Quietly, I watched the pretty nurse. She smiled a lot, both at her fellow nurses and the aides and janitorial staff who passed through, and at the visitors to other patients on the floor. I was more and more convinced that my initial feeling about her was right on. \n\nPatiently, I waited until she went on rounds again. When she stepped out of Daniel's door, I was waiting down the hallway just out of sight of the guard. She looked a little startled when I approached her but she smiled and asked if I needed something. I noticed her on ID badge that her name was Jennifer. \n\n\"Daniel Braden. You just saw him. How is he? Is he okay?\"\n\n\"I'm sorry, sir, but because of federal privacy laws I can't give out that information to anyone who isn't a family member,\" she said kindly. \"Are you a relative?\"\n\n\"No. I'm...\" I decided to go for it. \"He's my lover. I'm worried about him and I just need to know he's okay.\"\n\nJennifer gave me a closer look and realization began to dawn. \"Hey, did I read about you on the internet? How you saved his life?\"\n\n\"Yes, yes that's me.\" I nodded eagerly. She shook my hand, beaming.\n\n\"What you did was so romantic,\" she told me. \"You went rushing after him and you're not even a cop.\"\n\nBingo!\n\n\"No, I'm a writer actually. My name's Rylan Kennedy.\"",
        "\"Your name's Rylan? He was asking for you when they brought him out of surgery.\"\n\n\"He was?\" My heart beat a wild tattoo in my chest but then clutched with doubt. \"Are you sure he didn't ask for Ray? He calls me Ry sometimes and that could sound like Ray.\"\n\n\"No, he distinctly said Rylan. He kept asking where you were.\"\n\nWhen I caught my breath, she smiled at me even more and I knew my gut had not let me down. \"Then you know why I have to get past that guard, don't you? They won't let me in to see him, but he needs me. I need to be with him.\"\n\n\"Yes, you do.\" She glanced out of the corner of her eyes in the direction of Daniel's door, and the guard, and then she nodded as if making an important decision. \"We're going to get you past that bitch. He got agitated when they said you weren't here, and he needs to be calm so he doesn't aggravate his injury. They had to sedate him. He's stable, medicated and doing well after his surgery but I know he'll be much better with you there.\"\n\nAs she talked, she led me down the hallway to a room around the corner. It was empty, with faint light coming from behind the drawn blinds. \"Okay. Stay in here. That guard has already seen your face, so we're going to have to wait for a shift change. It shouldn't be too long, the shifts are only four hours. I'll be back.\"\n\nClosing the door behind her, she left me in the dim room. I clicked on a lamp and relaxed on one of the beds. My nerves were wound just as tightly as in the interrogation room at the police station but at least the seating was more comfortable and I could rest, as much as I could not being with Daniel. It was probably about an hour before the door opened and Jennifer slipped back inside. \n\n\"Here, put this on.\" She tossed me a patient gown. The door opened wider and a big mountain of a man shuffled in with a gurney. His black skin was a startling contrast to the white polyester of his orderly's uniform. I stripped off my button-down since I knew it would show under the patient gown; with just a t-shirt, it looked fine. \"I'll take care of the guard. Ben will stop in front of Daniel's door and you just slip off the gurney and into the room.\"\n\nI hopped up on the gurney as the door clicked behind her. Carefully, Ben arranged the covers over me to hide my street clothes, only letting the patient gown peek out at the top. I closed my eyes and lay very still as he wheeled me out the door and down the hallway. He plodded slowly, too slow, dammit hurry up.\n\n\"Officer? I hate to bother you...\" I heard Jennifer's voice and I slitted my eyes just enough to see that the grouchy female cop had been replaced by a handsome young recruit, very tasty in his dark uniform and buzz haircut. I hid a grin. So, that was why she'd waited for a shift change. Her soft, sweet tone wouldn't have worked on the bitch. I had to admire how she managed to sound slightly helpless without crossing the line into bimbo. \"I know you're working, but they just brought some new oxygen tanks up here and I just can't get the handle turned. It's so hard that first time. Do you think I could borrow your muscles for just one little second?\"\n\n\"Sure,\" the cop's voice answered eagerly. So easy.\n\nTheir voices faded down the hall and I tensed in anticipation. The gurney slowed and when I heard Ben mutter \"Go,\" I tossed the covers back, jumped off the gurney and pushed the door open. I clicked it closed silently. Maybe the guard wouldn't notice and it would give me a couple of extra seconds with Daniel before they tried to throw me out. \n\nMy heart jumped in my chest when I stepped into the room and got my first look at him lying there on the hospital bed. His face was pale against the pillow, so pale. He looked so helpless draped in a hospital gown, so pale and weak. His eyes were closed and bandages swathed his shoulder, binding his arm to his body. A faint dark stain marred the white bandage where his blood had seeped through. An IV dripped something down a clear tube. For a moment, I couldn't breathe and then I closed the distance between us. I went to the left side of the bed, his uninjured side, and gently took his hand from where it lay on the blanket, the IV tube taped to his wrist along with a hospital bracelet. \n\n\"Daniel?\"\n\nBlearily, he opened his eyes. Whatever was dripping down the tube into his arm was strong and I was grateful, because that meant he wasn't hurting. A slow, heartbreakingly little-boyish smile tugged at the corners of his lips when he saw me. His fingers curled around mine.\n\n\"Hey.\" It was obviously an effort for him to speak through the haze of drugs and his eyes drooped as I reached up and cupped his jaw, stroking his cheek with my thumb. It was cool and rough with stubble. I could see faint rusty splotches on his skin where dried blood hadn't been completely washed away. The hospital staff had more important things to do. I'd wipe him down in a minute, but right now, I just wanted to be near him. I couldn't hold him like I wanted to because of his wound, I didn't want to hurt him, so I just held his hand, gazing at his face with my heart pounding in relief just to be with him.\n\n\"God, I'm glad to see you,\" I said softly. I had no idea if he could hear me or if he was deep in a drugged stupor, but the words had to come out even if I was the only one who heard them. \"All I could think about sitting at the police station was you, how I can't stand to think of my life without you. I would've climbed the walls to get to you. When I saw you fall to the ground after Adkins shot you, a little piece of me died and it's been dead until now, looking at you...\"\n\nThe lump in my throat choked off my words and I had to blink my eyes to keep the tears back. I was like someone who'd been asleep for years and years. I was finally waking up and all this emotion was flooding me and I didn't quite know how to deal with it. Part of me wanted to withdraw safely back into my shell and lock myself away, so I wouldn't have to feel this way; but the other part of me reached between the bars of the prison of indifference I'd locked myself in for so long. My heart wouldn't let me push Daniel away even if I wanted to.\n\nHis eyes fluttered open and he looked up at me with that faint glimmer of a smile. He tried to speak but the effects of the drugs were too strong to let him form words and a second later, his head dropped back and he was asleep again. But he heard me.\n\nThe new guard outside the door either didn't know the door should be cracked or he never looked at it. I'd expected him to burst in any minute calling security, but he didn't. I sat there on the edge of Daniel's bed holding his hand while he faded in and out of his painkiller-induced stupor for at least an hour, when the door finally opened. When I looked up, a short little Indian man in a doctor's jacket came in, followed by a tall man in a suit with an air of authority. I had a feeling this was FBI Agent Jensen, the man in charge of this operation. I met their eyes defiantly when they stared at me in obvious shock to see me here.\n\nThe FBI guy looked pissed. \"How'd you get in here?\" \n\nI shrugged. I was certain he knew exactly who I was. \"I'm very resourceful when I need to be.\"\n\nJensen turned to the door and spoke to the guard, who was hovering in the doorway looking baffled and alarmed that someone had gotten past him. \"Call security.\"\n\n\"No,\" Daniel said clearly. We all turned our heads and looked at him. He still looked dazed, but he was much more alert than he'd been since I walked in the room. He held my hand tightly as he stared down the FBI agent with a trace of his usual self-assurance. \"Rylan's not leaving. I wouldn't be here without him. He stays.\"\n\n\"This is a police matter and he's a civilian. He'll only get the in the way and disturb you.\"\n\n\"Actually, patients recover better with a loved one for support,\" the doctor said in his musical Indian accent. He turned to me and shook my hand. \"Dr. Salman Advani. I know you from the news.\"\n\nI introduced myself and he nodded, smiling with recognition. Thanks to Kat and CNN, I was a fucking celebrity. He approached Daniel's bed and I got up and moved to the window, sitting down on the ledge, while the doctor examined Daniel. I watched anxiously, with Jensen glaring at me the whole time. I could tell Daniel was struggling to stay alert amidst the drugs, but he did manage to ask the doctor exactly how badly he was injured. I listened carefully so if Daniel forgot something I could explain it later, when he was more coherent. \n\n\"The bullet entered your shoulder just below the rotator cuff, slightly above the armpit.\" Dr. Advani gently touched the wound to show both of us where it was; he waited until I'd come closer to the bed to watch before he continued. \"The bullet was hollow-point; as you know they're designed to expand when they hit bone. It shattered the scapula and caused a large flesh wound both at entry and exit points. We gave you two pints of blood down in the ER, but blood loss and shock were minimized by immediate emergency response. You're very lucky, Detective. You could have died from this wound.\"\n\nMy knees almost gave way and I felt my stomach turn when he said that, but I managed to pull myself together for Daniel's sake. If I let myself, I'd probably pass right out.\n\n\"Your right arm will have to be completely immobilized for at least six weeks, until the fractures mend,\" Dr. Advani said. \"There will be considerable pain and you might never regain full use of the arm. It's possible you won't be capable of handling a weapon after you recover.\"\n\nDaniel's eyes darted to mine over the doctor's balding head. We both knew what that meant - the doctor was telling Daniel his career as a police officer was over. I couldn't say I was sorry to hear it but I tried to look sad for Daniel's sake. After all, this was his career, his life's work. I'd be devastated if a doctor told me I could never write again. Of course, as zonked as he was on morphine or Demerol or whatever was dripping into his arm, he might not even remember this conversation anyway and we'd have to break the news to him again.\n\n\"You're doing okay for now.\" The doctor looked down at Daniel and spoke loudly because he saw that Daniel was fading out again. \"If you hurt, call the nurse. Okay?\"\n\n\"Nod your head, Daniel,\" I added.\n\nHe nodded slowly and then his eyelids drooped. The doctor shook my hand again and departed, leaving me behind with one drugged-up patient and one very displeased FBI agent.\n\n\"I could have you arrested for sneaking in here.\"\n\nReturning to my spot on the edge of the bed, I picked up Daniel's hand and stared at the agent's smug scowling face. He could fuck off.\n\n\"Since you're here,\" he said ungraciously, \"we'll need to get a full statement from you. When he wakes up, he'll have to give us one too. We need to know everything that happened this morning.\"\n\n\"Sergeant Adkins. The guy I shot. He's alive, right?\"\n\n\"Yes, he's alive. You either fucked up, or you're a good shot - for a civilian.\"\n\n\"I didn't fuck up. If I killed him, I killed everything he knows.\"\n\nAgent Jensen nodded slowly, still frowning at me. \"Shattered ribs, collapsed lung, on a respirator, but expected to make a full recovery. He'll be feeling fine by the time they send him to death row.\"\n\nI nodded with grim satisfaction. I'd always considered the death penalty a seriously flawed aspect of our judicial system, but I wanted Adkins to pay for the lives he'd taken and the lives he'd ruined, and all for what? Greed, pure and simple. My part in this was small, very small. I'd make whatever statements and do whatever court appearances I needed to, and I'd support Daniel in everything he had to do; but when that was over, I'd watch with interest to see just how high up this corruption went and how many lives it touched. Adkins himself had to be just a player in the game. Somewhere, someone rich and powerful and important was pulling the strings. The nation waited anxiously to see who it was, to see if the truth ever came out. And without Daniel - I looked down at his groggy, drugged-out face on the pillow - without this man it would not have been stopped. One detective from a backwater city in Florida just wouldn't give up, even after they took everything away from him. The heroes in my novels had nothing on him.\n\n\"We'll cooperate fully as soon as Daniel's up to it.\" He shifted on the pillow and moaned slightly under his breath while I watched him closely. \"But for now, I think you'd better just leave him alone until he feels better.\"\n\nJensen opened his mouth and started to protest and I knew exactly what he was going to say. He was in charge here, not me. But I let go of Daniel's hand long enough to go over to the door, holding it open while I stared at him. Finally, he just shrugged, let out a breath, and left.\n\n\"Ry?\"\n\nI was at Daniel's side holding his hand in seconds, my stomach clenching when I watched him struggling to open his eyes and focus on me through the pain and the drugs. \"I'm here. Rest now, rest.\"\n\n\"Not leaving are you? Please stay.\"\n\nI struggled not to let the tears form in my eyes. Loved him so much, felt his pain but so fucking happy he was alive and here with me. \"I'll be right here, Daniel, I'm not leaving. I'll stay as long you need me.\"\n\n\"Need you always.\"\n\nHis fingers caught at mine and I held his hand tight as he drifted off. \"Always works,\" I told him, smiling through the tears I finally let fall.\n\n*****\n\n \nChapter 32\n\n\"I didn't want Rylan to be involved in anything dangerous, but I didn't like the idea of leaving while he was asleep either. That was Scott's idea.\" Daniel looked over at me before he continued for the FBI video camera. Jensen was in the room, along with the witness-debriefing specialist he'd brought in to take Daniel's statement. A lawyer from the Tallahassee PD's Internal Affairs Division was flying in and would be here this afternoon to discuss the case with Daniel as soon as he felt up to it. Things had to proceed very carefully because so many active-duty police officers were involved. \"Scott convinced me it would be safer and faster if just the two of us went. Said we'd just run out, get the ammo box from the woods, and run straight back. I didn't even need my gun.\"\n\nI'd been instructed not to speak while the camera was running, so I bit my lip to keep from asking what the fuck he was thinking. I didn't have to say it anyway. Daniel's eyes staring into mine, asking forgiveness, told me he knew.\n\n\"I had misgivings but I let him convince me. I don't know why I trusted him, maybe because he was in my unit in the Gulf and I didn't want to believe on of my own men would betray me. I didn't think he was capable of it.\"\n\nThat was something I didn't know before. Daniel didn't talk about that time in his life. He'd said Scott was Special Ops, but not that he was under Daniel's command. I didn't even know Daniel had a command. Now that I knew their history, I understood a little better why Daniel didn't question Scott's loyalty like I did. Daniel took the whole \"band of brothers\" thing seriously and he thought everyone else did too.\n\n\"After Rylan fell asleep, Scott and I made our plans. We left just before the sun came up. Alex loaned me his GPS cell phone so we could locate the coordinates of the ammo box. It was covered by snow so we had to search for it and then dig it up. We finally found it in a shallow culvert near the lake. We had just opened it to check the contents when I looked up and saw a Chicago city police officer walking up. I thought that was strange, but when Scott didn't seem surprised to see him, it all dawned on me.\"\n\nI cringed. I almost didn't want to hear the rest of it.\n\n\"I closed the ammo case back up. Scott was standing there smiling at me and of course then I knew why he talked me into leaving Rylan behind and not bringing my gun. I knew I was fucked then. That's when Adkins came around the bend in the path.\"\n\n\"Did Detective Wyman say anything to you at this point?\" the witness expert asked. She was a nice, motherly lady who told us to call her Leslie. \n\n\"Yeah. He thanked me for helping him dig.\" Daniel attempted a laugh and cringed in pain. They'd stopped the Demerol in his IV drip last night, and he skipped the last dose of oral pain medication so he could be lucid enough to do this. I didn't like it one bit. It'd only been forty-eight hours since the shooting. The intravenous antibiotics warded off infection and they were still monitoring his urine for signs of blood, in case they'd missed bone fragments that might cause him to clot elsewhere. It was a scary time and I'd wanted them to wait, but he insisted he could do it. When I asked him if he wanted to stop, he shook his head impatiently. \"I'm okay. I saw Adkins coming and I knew this time he was going to kill me.\"\n\n\"How were you feeling then?\" Leslie asked in her soothing monotone.\n\n\"Scared. I thought I was okay with dying, but it turns out I'm not.\" His lips twisted in a fleeting smile. Sweat began to mist his temples from the pain and the exertion of talking. \"I didn't have a gun and I knew I was about to die. I did what they tell you in the Academy and started talking. I asked Scott about his wife and kids, how his sons would feel growing up knowing their father was a crooked cop, how they would live if his death benefits got taken away. He got agitated and drew his weapon. The situation was very unstable. Adkins was coming closer now, and I asked Scott if he thought Adkins was going to let him live knowing what he knew. I told Scott that neither one of us were going to walk away from this.\"\n\n\"And what happened then?\"\n\n\"Adkins laughed behind me and said I was right.\"\n\n\"And what about the officer with him?\"\n\n\"He had his weapon drawn but he didn't say anything. What happened to him anyway?\"\n\n\"Scott shot him in the chest. He's in a coma,\" I answered softly from where I sat right next to Daniel's bedside. He nodded, drawing a breath from the pain. I winced. I hated this. Jensen watched from the other side of the room, not saying a word.\n\n\"Detective, what happened after Adkins told you that you were right?\"\n\n\"Scott started talking to him. Trying to bargain with him. Saying he got Adkins the evidence like he said he would and he wanted his money, that they had a deal. He was screaming and yelling and waving his weapon around. Adkins told Scott it would be easier just to kill him and that was the plan all along anyway. Scott lost it then and fired his weapon. I don't think he hit anything and he started to run. The officer chased him and Scott fired another round and hit the other guy. He fell. Best I can remember, Scott went to finish him off and the cop shot him from the ground at close range.\"\n\nThis long speech exhausted Daniel and he stopped and closed his eyes, his breathing getting shallow under the hospital gown. I knew he was hurting and I asked Leslie if we could finish later. She said yes, but Daniel shook his head weakly.\n\n\"No, I want to finish,\" he said through pale lips. Arguing with him would've just drawn it out more so I sat back unhappily and let him continue. The only reason I even got to be here was that I'd already given my full statement in another room while Daniel slept.\n\n\"I tried talking to Adkins. I knew he was going to kill me so I tried to keep him talking as long as I could, asking him if he really thought he was going to get away with it, did he really think he could just eliminate everyone in his way. He's a smart son of a bitch though. He knew what I was doing. Last thing I remember was him laughing at me and raising his weapon. I don't know what happened after that. Not until Rylan was talking to me, and then I was getting into an ambulance. You came right before he shot me?\" Daniel looked at me now, confusion in his eyes. \"And you wounded him in the side?\"",
        "\"Yeah.\" I nodded. What else could I tell him? That I died inside when he fell to the ground? That I wasn't scared, that I was completely dead calm, that I was thinking of nothing but him and that's how I kept from falling apart until I was in the back of the squad car. That he soaked me with his blood but I didn't care, that I didn't think of that fact until Kat said she was going to incinerate my clothes, that I hadn't thought about it since because I was afraid of nothing that was in him because he was already part of me.\n\n\"Weren't you close enough to kill him?\" Daniel asked. He seemed troubled. I thought of Ray and I knew that Daniel would've shot to kill. All his insistence that it wasn't revenge, it was justice, but even through the pain the slightly distant, fierce look in his eyes told me that if the moment had been his, he would not have missed. The investigation wouldn't have mattered to him. He was too emotionally involved. I understood that. God, how I understood it, after I watched him crumple to the ground, after I thought I'd lost him the way he lost Ray. But in the end, killing this one man, this one link in the chain, would not have brought him true closure. \n\n\"Yeah,\" I answered slowly. \n\nFrom the window ledge, Jensen stared at me. He knew exactly what happened in the moment I raised the gun because I told him and Leslie during my own statement. Daniel didn't remember what I'd said while he was bleeding into the snow. It didn't matter that he didn't know. If I told him about it, it would sound like I was trying to make myself seem like a braver and more noble person than I am. Let him think that I panicked. Just knowing that he would get the justice he wanted was enough for me.\n\n\"I was close enough, but I, my hand was shaking and I missed.\"\n\n\"Well, fuck,\" Daniel muttered under his breath while I avoided Jensen's eyes by getting up to straighten his pillows and give him a sip of water. He was starting to shift restlessly under the covers, the pain making him tense and edgy, and as far as I was concerned, we were done here. He'd done enough for one day. When I went to push the call button, he didn't try to stop me this time, he just leaned his head back on the pillow and closed his eyes in exhaustion.\n\nJennifer, our favorite nurse, came in and I held Daniel's hand while she ordered the two FBI agents and their video camera out of the room. She raised the hem of Daniel's hospital gown and shot a syringe of Demerol in his hip to get him out of pain, so he didn't have to wait for the pills to work. I wanted to let him rest but when I started to get up, he gripped my hand and wouldn't let go as the drugs took effect, then his fingers loosened and his eyelids grew heavy. As he rolled his head back and drifted away, I lifted my hand and stroked his cheek so that the last thing he felt was my touch, and he knew I'd never leave.\n\nI did have to eat and sleep from time to time though. Kat had offered to come and pick me up, but the other bed in Daniel's room was empty so I slept there last two nights. It was impossible to get decent sleep in a hospital unless you were on drugs and even then, Daniel woke up every few hours, writhing in pain. I'd jumped right up each time to help him and call the nurse; so I needless to say, I was exhausted. His throat sore from the ventilator during surgery, Daniel struggled to eat the tasteless breakfast on the tray with his left hand so I ended up feeding it to him, and by the time we got a little food inside him, the FBI was there. I realized in the elevator that I hadn't eaten since sometime yesterday when I had a stale granola bar from the vending machine. No wonder I felt like shit.\n\nA ham sandwich in the cafeteria made me feel a little better. While I was eating, I picked up a copy of the Sun Times someone had left of the table. Right on the front page, there was an article about Scott Wyman under Kat's byline. She'd been busy. I called her from a courtesy phone in the cafeteria before I headed up to Daniel's room. The shot had knocked him on his ass and he needed his rest. \n\n\"I talked to your aunt. She and your uncle are on their way up here to see you. They should be here later this afternoon.\"\n\nI groaned to myself, Charlotte would be running around like a mad woman and driving me nuts, but I was also relieved because I needed her right now. I needed someone to hold me up, to tell me it was okay. \"Do they know they won't be able to see Daniel if they come to the hospital?\"\n\n\"I told them all about that, yeah. Also told them their car is still being held in the investigation. They're bringing you your car and they might stay here a couple of days until things settle down. Figure you could use the support.\"\n\n\"Yeah.\" Out of nowhere tears pricked the corners of my eyes and I realized just how fucking exhausted and emotionally drained I was. Fuck, I'd shot someone yesterday. Or was it the day before? I didn't even know anymore. Actually shot him. Could've fucking killed him. And Daniel almost died. He could be dead right now, if I'd slept just ten minutes longer he'd be dead. My hands started to tremble and I forced the hysterical note out of my voice. \"I'm tired, Kat.\"\n\n\"I know you are, baby. Listen, I'll come and pick you up in a few hours and get you out of that hospital for awhile, okay?\"\n\n\"Okay... yeah.... but I can't just leave Daniel here alone,\" I protested. \"Not while he's hurting like this. You should have heard him in the night, Kat, he was in so much pain.\" \n\n\"You don't have to leave him for the whole night,\" she soothed me. \"I'll just come get you for a little while, so you can see your aunt and uncle, take a hot shower and relax for awhile. He'll probably be asleep anyway. Okay?\"\n\nHer voice seemed to come through layers of cotton. My head was fuzzy and I couldn't make clear decisions. I felt helpless, confused and unwound and I sagged against the wall, closing my eyes.\n\n\"Can I just call you later, Kat? They won't let calls in, but I can call out.\"\n\n\"All right,\" she answered doubtfully. \"You don't have to do this all by yourself, you know. You won't be any good to Daniel if you fall apart on him now. He needs you to be strong and you have to take care of yourself in order to take care of him.\"\n\nWhen I hung up, I leaned against the wall and took deep breaths until I was back in control of myself. Yeah, Kat was right. I was going to lie down in the other bed in Daniel's room and get some rest while he slept. They weren't going to keep him in the hospital much longer; when they let him out he was going to need me, and I had to be there for him. I knew he was confused that his family hadn't flown to Chicago to see him, or even called. Jensen told me he'd spoken to Daniel's mother, and the story was all over the media, there was no way his family didn't know he'd been shot and he was in the hospital. My family was making the trip, so where the fuck were his? The fucking Internal Affairs lawyer was on the way and his own mother and siblings were where?\n\n****\n\n \nChapter 33\n\nWhen I got back up to the room, the armed guard was in his chair next to the door, but I noticed the door was open and I heard quiet voices inside the room. I frowned. \"Who's that?\" I asked the bored guard. He didn't even look up from the video game on his cell phone screen.\n\n\"Jensen called and put them on the list.\"\n\nThem? I was expecting the legal representative from IAD, but I thought it would only be one person, and I knew there was no way Jensen would have put Paul and Charlotte on the list. Worried now, I rushed into the room.\n\nThe shades were drawn just as I'd left them and Daniel was still sleeping, but a man with dark hair was sitting on the edge of his bed gently holding his hand, with another man standing behind him. Cops. I was getting used to cops and they both had the look, the lean, muscular body and the air of self-assurance that they all seemed to have, the quick movements and hard eyes. They both looked at me, into me, as I came into the room and I forced myself not to feel like I was intruding. I had every right to be here. \n\n\"Rylan?\" asked the man who was standing up. He gave me a smile, but the cop sitting on the bed next to Daniel just flicked his eyes over me before turning back and stroking Daniel's jaw. Neither one of them gave off a very friendly vibe, the smile notwithstanding, but they were cops and cops never trust anyone. Clearly, these were Daniel's friends and they only had good intentions, to protect Daniel, just like I did.\n\n\"Yeah.\" I nodded and stood my ground. I tried not to wonder if the guy gazing into Daniel's sleeping face and touching him and holding his hand was someone more than just a friend. Christ, maybe he had a boyfriend he never told me about and that would just fucking kill me but I couldn't let them intimidate me or make me run away.\n\n\"It's good to meet you, Rylan, I'm Gray Mitchell and this is my boyfriend, Michael Perez. We're good friends of Danny's.\"\n\nBoyfriend, well that was good. Relieved, I shook hands with them both. Gray seemed a bit friendlier and even a little embarrassed by his partner's standoffish behavior. He was a few years older, early forties probably, with the stern police-issue buzz cut and stout neck, hazel eyes and a nice smile, while Michael was slender, dark and boyishly handsome. \n\n\"So how's his shoulder? One of the IAD people told us what happened but she didn't know the extent of the injuries.\" \n\nQuietly, so I wouldn't wake Daniel, I explained what the doctor told us the day of his surgery, leaving out the part about not being able to handle a weapon. It was Daniel's decision to tell people that, not mine. \"The doctor hasn't been in today yet, but if he's stable and doing well, they might release him tomorrow.\"\n\n\"We brought Danny some clothes and stuff,\" Michael said. \"We'll spend the night.\"\n\n\"Oh,\" I said uncertainly. \"You don't have to do that. I've been staying here, I was planning on staying tonight too.\"\n\nMichael looked over his shoulder at me and took a breath. He looked like he was about to argue with me, but Gray cut him off.\n\n\"That's fine. We can get a motel.\" Gray shot Michael a look he didn't think I saw. Something else was bothering me, though. After checking to make sure Daniel hadn't stirred, I motioned Gray over to the window. I didn't want him to hear if he happened to wake up.\n\n\"Listen... what about his family? His calls are screened, but they'd put his mother through if she called and she hasn't. His family know what happened, right?\"\n\n\"They know.\" He nodded, both resigned and vaguely disgusted. \"I talked to his mother myself, last night. Told her the Department would pay for her to fly up, but she opted not to. Daniel's sister is having a baby and she didn't want to leave... which is bullshit in my opinion but my opinion doesn't matter here. His family is... well. They're just like that.\" He shrugged. \"So Michael and I came instead. Hey, how about you? You okay?\"\n\n\"Yeah... a little tired, but fine. Thanks.\" I actually managed a smile at him and then we both turned around when we heard Michael's voice.\n\n\"Hey there, stud,\" he was saying to Daniel, who had opened his eyes blearily and was trying to focus on him, frowning in confusion. The drugs made it hard for him to concentrate on what was going on around him.\n\n\"Michael?\"\n\n\"Yeah, baby, I'm here and so is Gray.\" Michael leaned down and kissed Daniel on the forehead and Gray came up behind him and put his hand on his lover's shoulder, smiling down at Daniel.\n\n\"Where's Rylan?\" \n\nIt took a second for me to realize he'd asked for me and then another second that I was frozen to the spot. Michael had tensed up. I didn't know what Michael's problem was but I didn't care. Daniel asked for me when he came out of surgery and when he woke up confused. Not Michael.\n\n\"I'm right here,\" I said. I went to the foot of the bed where he could see me and he smiled groggily and rolled his head back. Daniel gave Michael's hand a little squeeze.\n\n\"Glad you guys came,\" he muttered. \n\n\"So you finally went and got yourself shot,\" Gray said. I appreciated him keeping things light because Daniel was still pretty out of it. \"Looks like we're gonna be busting dealers without you for awhile.\"\n\n\"Yeah. Think my raids are pretty much over.\"\n\nGood. That was my immediate reaction but I kept it to myself in this room full of vice cops. With the possibility of never regaining full use of his arm, Daniel was facing a desk job and I was secretly happy about it. One bullet was enough. When I thought of him falling to the ground and bleeding into the snow, ice-cold fingers dug into my spine. He shouldn't have to face that kind of danger again, ever.\n\nFading in and out a bit, Daniel forced his eyes open. \"Somebody call my mom and tell her not to come,\" he mumbled. \"M'kay...\"\n\nGray and I traded looks. \"Sure baby,\" Gray said, giving Daniel's leg a little squeeze under the blanket. \"I'll call her in just a few minutes.\"\n\nWe all watched as his head went to the side and he dozed off again. Gazing at him, Michael began talking. Although he didn't bother to look at me, I assumed he was talking to me.\n\n\"There's gonna be a shit storm when he gets back to Tally. We're just vice, we don't hear much about Danny's IAD stuff, but there are going to be hearings and an investigation into the involvement of Captain Olmos.\"\n\n\"He blew Daniel's IAD cover to Adkins. He was the one who set him up.\"\n\nMichael stared, surprised into looking directly at me. \"You're kidding.\"\n\n\"No, I'm not.\"\n\n\"He'll have to testify to all that during the internal hearings,\" Gray said, shaking his head. \"As well as in front of all the grand juries. Adkins will be going into federal court too and he'll have to be there. It's going to be a long process. We can't talk to the media but there are going to be reporters calling him and television cameras waiting when he comes home, just to get a glimpse of him.\"\n\n\"He can't do any of that now. He needs to rest... he can't even feed himself yet.\" I hadn't thought much about what was going to happen when they released Daniel but now I began to get distressed. I didn't want him to go back to that alone. \"He can't move his arm for six weeks. He's going to need someone to take care of him around the clock at first.\"\n\n\"We're taking him home with us,\" Michael stated. \"As soon as he can fly.\"\n\nFor a moment, I didn't know what to say. It seemed like this had all been decided and I didn't get any input at all. These people didn't know me and they weren't going to give me an input unless I made them. They were Daniel's friends and they'd known him a lot longer than I had, but I'd earned a little consideration. \"You know, Daniel could come home with me. It's his decision of course, but I work at home and both of you have to leave everyday. I'd be around more in case he needed something, and I already know how to dress his wounds, when he needs his meds and all that.\"\n\n\"But his family and all of his friends are in Florida.\" My suggestion didn't please Michael at all. \n\n\"So's the press,\" I reminded him. \"They won't be waiting at my house.\"\n\n\"But how long do you think it would take for them to get there? His friends will take care of him. He'll be a lot better off with us.\"\n\n\"Why don't you let him decide for himself, he's right here.\" Daniel's sleepy voice startled us and we all came closer to him, instantly stopping our discussion to listen to what he had to say. I felt a little ashamed of myself for trying to decide what was best for him like he was a child.\n\n\"I'm so glad you guys came... I know you'll be there for me, but I don't think I can deal with everything right now. I just hurt too much and I can't do anything for myself. I just want to hide out at Rylan's place until things get a little easier for me. I don't want to be a burden on you guys.\"\n\n\"But... Danny, we can take care of you, we can do all those things for you.\" Michael looked positively crushed. I knew something was going on here, but whatever it was, Gray didn't seem concerned about it so that meant I shouldn't be either. But still. \"Why is it okay for Rylan and not for us?\"\n\nDaniel huffed a laugh that made him wince, but his eyes still twinkled. \"I haven't fucked either one of you in the ass.\"\n\nInstead of a paralyzing blush, I managed just a minor one and for the first time Michael actually grinned. We were all glad that Daniel was showing a spark of his normal self. I knew how badly he wanted to get out of this fucking hospital and go home - to my home. It wasn't going to be the fun getaway we'd talked about having when all this was over, but it meant a lot to me, that he would let me take care of him that way, that he would trust me and choose me to help him through this.\n\nThe door opened and the nurses' aide came in. Sponge bath time, then whatever soft food Daniel could manage to swallow. I took this opportunity to call Kat, and let Michael and Gray spend a little time with Daniel. When I left the room to meet her downstairs, Michael got up.\n\n\"I'll walk you to the elevator.\"\n\n\"Um... okay.\" I didn't miss Gray's anxious look as Michael followed me out into the hallway. I had no doubt what he was planning to say, and when we reached the waiting area he stopped me with a hand on my arm.\n\n\"Listen, I don't want us to get off on the wrong foot, Rylan. I know what you've done for Danny. It's in all the papers. You've helped him out a lot when he needed a friend, and hell, you saved his life by showing up when you did and stopping Adkins from killing him. So, thank you for that.\"\n\nI nodded suspiciously, waiting for him to get to the real point.\n\n\"You're not a cop, though, and you don't know what our life is like. The dangers and the pressures are something only other police officers can understand... that's why relationships with civilians don't last, they just don't get it. Especially not someone who writes romance novels.\" He touched my arm and gave me a smile edged with pity. I was so floored at his nerve that I was literally speechless. \"Not that there's anything wrong with that. It's just a different kind of life. I know you care for him, so I just wanted to explain to you that he's vulnerable right now. He needs people around him who understand him.\" \n\nHe paused to see if what he was saying was having an effect on me. All I could do was stare at him in utter amazement.\n\n\"He does need a safe place to heal right now... we could give him that, but he wants to go with you and that's fine. He's grateful for what you've done for him and he thinks he has feelings for you because he owes you something. But Daniel's one hell of a cop and eventually, that's what he is going to come back to. That's what he needs. I just want you to know that, and not be too hurt when it happens. It's nothing against you, Rylan, you seem like a nice guy but I'm just saying, Daniel isn't going to be content with your life and I'd hate to see you try to hang on to him when you can't possibly understand who he really is. Ray might be gone, but we know Daniel a lot better than you do.\" Michael gave me that overly understanding smile again and lightly squeezed my arm before he took a step back. \"Okay... I think we get each other now, don't you? I'll see you later.\"\n\nThe elevator dinged and the doors slid open, and I moved toward it like a zombie, still numb with disbelief over Michael's assumptions. What a fucker. Thinking he knew what was best for Daniel. And Ray. What the fuck did he have to do with anything? I wasn't sure whether to be furious or to just laugh in Michael's smug face.\n\nDown on the ground floor lobby, Charlotte flew into my arms and hugged me so hard I couldn't breathe, while Paul and Kat grinned over her shoulder. Paul hugged me next and I let my head rest on his shoulder. He was a rock and I was so grateful to Charlotte for marrying him so they could both be in my life. I found myself between them, each of them with an arm wrapped around me, as we all went out to Kat's SUV that was illegally parked in the entrance. ",
        "\"We're so glad you're okay,\" Charlotte was saying over and over, almost in tears. \"Kat told us everything. I can't decide if you're so brave I need to cry, or so goddamn stupid I need to kill you.\"\n\n\"What she means is, we're proud of you kiddo,\" Paul grinned.\n\n\"Kat and I went and bought you a few clothes,\" Charlotte rattled on while Kat drove us toward her apartment. \"She told me you didn't have any, that you had to borrow some from someone. Now you'll have something to wear till you get home. What's going on with Daniel?\"\n\nI told them all about his shoulder and everything the doctor told us. \"I'm taking him home with me to Atlanta for a couple of weeks, until he heals a little. He needs someone to take care of him right now and I'm the only one who works from home, plus I want to do it. I know you brought my car up, but we're going to have to fly to Atlanta. There's absolutely no way Daniel can sit in a car that long. I'm sorry. None of this was decided until today.\"\n\n\"It's okay,\" Paul shrugged. \"Don't worry about it. I'll drive your car down to you when you get back home to Atlanta.\n\n\"You'd do that? I'll buy you a plane ticket back, Paul. That's just... you don't know what a weight that is off my mind.\" I'd been worrying over it since we got everything decided and I was so relieved that it was going to work out, I was practically giddy. \n\nBack at Kat's apartment, Charlotte brought out a home-cooked meal she'd transported up here from home. It was delicious and even though I kept picturing Daniel struggling to eat hospital food, I ate as much as I could hold and then took a long, hot shower. While the hot water pounded down on me, I kept replaying what Michael said and a little voice of doubt in my head started to nag at me. Yeah, Daniel probably would be bored with my life. I'd known that from the beginning. Maybe he wouldn't stay. Maybe he would go back to being a cop. If he did, I couldn't stop him and I wouldn't try. I loved him and I wanted him safe, but I never wanted to be a burden or a weight on his shoulders that held him back. If that time came when he wanted to move on, I wouldn't hang on. I'd never planned on doing that. I only wanted to be part of his life if he wanted me.\n\nClimbing out of the shower, I dried off and got dressed in the new clothes Charlotte had left on the bed. It was so nice to be clean. Michael's little talk had sent me crashing, but I enjoyed relaxing and talking with Kat and Paul and Charlotte for a while. However, it wasn't long before I was glancing at the clock every few minutes. Kat caught me and smiled. \"You want to be back at the hospital with Daniel.\"\n\n\"Yeah, I do.\" Admitting it didn't embarrass me one bit. They might grin and shake their heads at my total devotion but I didn't care. \"I know the nurses are taking care of him and his friends are there, but I still need to be there.\"\n\n\"Well I suppose that's natural considering you just watched him get shot,\" Kat said. \"Can't blame you for not wanting to let him out of your sight.\"\n\n\"Yeah... I'm not supposed to be talking to you, by the way.\" As tired as I was, my mind was jumping around in random bursts, unable to stay on one track for long. \n\n\"Says who?\" she frowned.\n\n\"Special Agent Asshole. Says I can't talk to you because you're a reporter. The case is too sensitive. Told him to fuck off, that I'd talk to whomever I wanted. I can't discuss the investigation with you, though.\"\n\n\"I know. I just figured I'd keep trying as long as I could. Come on, let's get you back before you have a stroke.\" She got up and grabbed her keys, since I was already pacing back and forth like a puppy wanting to go for a walk. Paul and Charlotte came along with us and hugged me with promises to see me tomorrow. \n\nHeading to the fifth floor, I tipped my head back against the elevator wall and closed my eyes. The lobby and elevator were empty at this hour of night, past normal visiting hours. I was calmer now, but I still dreaded walking into that hospital room and facing Michael and his false niceness for Daniel's sake, or worse, that pitying smile like I was some sort of tragic heroine everyone knows will wither away in the end. Shit. Where did that guy get off? \n\nI was in no mood for his crap. If not for Daniel, hurt and broken in the hospital bed, I would've turned around and kept walking so I didn't have to see Michael. So, when I stepped off the elevator and saw Gray wandering around in the waiting room, coming toward me the moment he saw me, I groaned out loud. Fuck, now what?\n\n\"What did he say to you?\"\n\n\"Oh, you mean your boyfriend? He just followed me to the elevator to tell me that Daniel was only going with me out of gratitude and that as soon as he was in his right mind he'd fall over himself leaving me.\"\n\n\"Argh.\" Swiping his hand over his face, Gray shook his head. \"I'm so sorry, Rylan. I can't believe he did that.\"\n\n\"Don't apologize for him. He might be right, who knows?\"\n\n\"He's not, Rylan. Danny loves you. It's obvious.\"\n\n\"And it's obvious that Michael can't handle it.\" I stared Gray straight in the eyes. \"So, how long has your boyfriend been in love with Daniel?\"\n\nThat made him skip a beat and a flush rose in his cheeks. \"Um. I don't know that he's in love with Daniel, but Michael was really close to Ray. You know about Ray, right?\"\n\n\"Yes.\"\n\n\"Well, anyway, Ray was like an older brother figure to Michael, a mentor, and when Ray and Daniel got together I think Michael was very hurt even though Ray made it clear that it was never going to happen with him and Michael. So, Michael was drawn to Daniel and I've heard him say that he wished he'd met Daniel first. This all happened before Michael and I started seeing each other, we've been together for about four years now and Ray has been gone almost two. When Ray died, I almost thought Michael would... well. He says it's friendship and I believe him.\" \n\nGray shrugged. I stared at him in disbelief. These two were something else. I know I couldn't deal with my lover being hung up on someone else. Fucking someone, getting a blowjob in a club, yeah, but not being in love with another man for the entire relationship. But if Gray could accept it, then who was I to say anything? It was none of my business anyway so I just kept my mouth shut.\n\n\"So Daniel is ready to let go of Ray and move on, but Michael isn't.\"\n\n\"Maybe,\" Gray answered after he blinked for a few seconds. \"You might be right about that. But he's going to have to eventually, and please Rylan, just don't let him try to chase you away from Danny. I think his intentions are good but it's not his decision to make.\"\n\nI had my doubts about Michael's good intentions, frankly, but I didn't share that thought. \"Well, I have no illusions that he might not be right, but I'm going to stay around as long as Daniel wants me. Excuse me. I need to see him.\"\n\nStepping around Gray, I headed down the hall to the room, where Daniel was propped up and smiling, although still a little pale, at something Michael said. He lit up when I walked into the room and went over to kiss him. \n\n\"The doctor said I could go home tomorrow, Ry, that my urine is clear and I can get off the IV in the morning. Isn't that great?\"\n\nI smiled, forgetting all about Michael and Gray and all their crap and their drama. Everything else was just an annoyance. To me all that mattered was that Daniel was here, and getting better, and it was all over.\n\n****\n\n \nChapter 34\n\n\"Rylan. You busy?\"\n\nI sighed patiently and hit Control-S to save my work on the dimly glowing computer screen. \n\n\"Ready to get out now?\" I called back. He was just past the doorway in the master bath, soaking in the tub. I was about to change all his bandages anyway, so as long as he didn't get the wounds in his shoulder wet he could bathe; showers were still out though. He still got tired too easily to stand up that long even with me to support him.\n\n\"Not yet... Can you help me a minute? But if you're writing...\"\n\n\"S'okay, just editing.\"\n\nI got up and headed through the door. The whirlpool tub in my master bath, connected to my office, had never been used until the past two weeks while Daniel was staying here. He lay back in water up to his waist with his arm strapped in the black sling that kept it tight against his chest. His eyes were shocking blue, contrasting with the white tiles. The rest of him, unfurled in the tub, was lean and naked and beautiful but when I caught a glimpse of the bruised, damaged skin around his bandages, it still made my stomach lurch.\n\n\"I wish I could get all the way in the water... sink down up to my neck and turn the jets on. My muscles are so fucking sore.\"\n\nI sank down to my knees on a towel and grabbed the shower gel off the side of the tub, squeezing a big blob into my hands. It smelled sweet and fruity, like mangoes. Daniel leaned forward slightly, his tanned skin wet and shiny. His hair had grown back enough to look like a standard buzz-cut. He didn't care if he was scruffy but since I liked him clean-shaven, I carefully shaved his face every morning; he could eat with his left hand now but he wasn't coordinated enough to shave himself. About the only thing he couldn't wash on his own was his left arm and his back. I knew he was tired when his head dropped forward and he let out a little groan as I slid my soapy hands over the smooth, silky expanse of his back, his muscles so hard and rippling under the softness of his skin.\n\n\"Then you'd miss my great massage.\"\n\n\"Mmmhmm.\" He melted under my hands, his stiff muscles undulating, stretching. Touching him like this sent a warm ripple over me that filled my cock. Every time we did this, I ended up hard and aching, and so did he. I wasn't in a hurry though. He couldn't do too much, we had to take things very slowly, and also, he was leaving in the morning and I wanted to enjoy every inch of him.\n\n\"Who's going to do this after tonight?\" I whispered. Watching a drop of water trail down his spine to the crack of his ass, my tongue longed to follow it.\n\n\"Michael?\" he suggested, grinning wickedly over his shoulder at me.\n\n\"I was thinking Liz.\" I splashed him with water and we both laughed, shuddering over the image of his chunky lesbian friend in my place. She'd driven up from Tallahassee the day after Christmas to see Daniel. She stayed in the guest room and she was very nice, if not someone you would want to wash your back. Gray and Michael would be here in the morning to take Daniel back home for a couple of weeks. It was time for him to start physical therapy and the police department was beginning to grumble at his absence in their internal hearings.\n\n\"Here, put your head back.\" \n\nDaniel closed his eyes and tilted his head back, letting out a long sigh as I massaged his neck with my soapy hands, taking long strokes up over his head and circling his sensitive scalp, and stroking away the lines of pain etched on his forehead and temples. Goosebumps broke out over his body when I slowly moved my palm over his short, soft hair and under the water, his dick was hard and flushed. \n\n\"That feels so good...\"\n\nI smiled. I couldn't keep from tasting him anymore. I leaned across the edge of the tub and licked a drop of water from his left shoulder, the uninjured one. His arms were so sexy, even the bandages gave him sort of a war-hero appeal. Hard muscles defined under the satin skin I could lose myself in forever.\n\n\"So do you,\" I whispered into his ear. I slid my tongue down his neck and he rolled his eyes back, reaching up to put his left hand behind my head. I caught him as he started to slip down into the water. \"Whoa. Here, let me rinse you.\"\n\nI grabbed the plastic pitcher off the side of the tub and turned the faucet on, letting the water run over my hand until it was hot but not too hot. I watched the look of pure pleasure on his face as I poured the water down the back of his neck, rinsing the soap away in a river of suds. \n\nHe turned his head and kissed me, pulling me closer. I watched his eyes close as our lips teased and nibbled, but I kept mine open in case he slipped again. It was actually pretty awkward, leaning over the edge of the tub on my knees, supporting his weight and kissing him at the same time, with my hard-on trapped against the edge of the tiles, but I didn't complain because he felt so good, wet and naked, and his tongue was so sweet in my mouth. Finally, though, my knees hurt and I pulled back gently. \n\n\"Let's get you out of there.\" I hit the drain and Daniel wrapped his arm around my neck, soaking me with the water clinging to his skin. I supported him carefully as he got to his feet and stepped out of the tub, dripping and shaky from the effort. He was exhausted, but still stubborn.\n\n\"I can do it,\" he said when I grabbed a towel and started to dry him. I hid a sigh. Even after two weeks, he still tried to fight me.\n\n\"I want to do it,\" I said softly against his ear. My tongue flicked out and grazed his earlobe and I felt him shudder and give in. With that settled I gently patted his face and hair dry with the towel.\n\n\"You've got to be tired of babying me by now.\" \n\nHe meant it to be joking but it sounded rather pathetic. I smiled and brushed a kiss over his lips as I carefully dried his chest around the bandages. Still sore, still bruised and broken, and he was leaving tomorrow. I made myself not think of him trying to do all this alone. He said he could, that he would be okay, he'd let his friends help him and not try to push himself too hard and make himself hurt more, and I trusted him. I did. I had to trust him but I still wished I could be there for him.\n\n\"I don't mind taking care of you, Daniel. You know that.\"\n\n\"I know. I just don't know why.\"\n\n\"Um, maybe because I love you? Duh.\" I rolled my eyes a little before I ducked away. Grabbing a towel, I folded it in half and put it on the edge of the tub. My heart was thumping in my throat and sweat prickled in my hair that had nothing to do with the steamy heat in the bathroom. I'd never said the words \"I love you\" before, I didn't think I needed to. I showed it in every way I could and that was what mattered. He knew, and I was sure he felt the same way, but some little-boy part of me was still afraid he'd laugh at me, or worse, give me that pitying look Michael gave me next to the elevator in the hospital. \n\n\"Here, sit on this.\" I eased him back and supported his weight as he sat down on the towel. He hated admitting how much simple things exhausted him, but I knew just by looking at him. He was tired but my words had lit a fire in his eyes and he stared at me intently, making me squirm, making me blush. I couldn't meet his eyes. I knelt between his legs and slowly dried his feet, nuzzling along the line of his calf, the light hair tickling my cheek. He relaxed then and grinned at me, spreading his knees to show me his dick was hard. Yeah, it was probably wrong to use sex to get my way, but it was the only time he gave in and let me fully take care of him.\n\nAs I slowly worked my way over his body with the towel, he fumbled with my soaked t-shirt, trying to pull it over my head with one hand. I stopped and peeled it off and he wrapped his fingers in my hair as I licked my way up his inner thigh, hands on his knees, pressing them open. The sweet scent of the mango soap made me drunk, his hot, damp skin under my tongue and his hand gently tugging at my hair and his cock inches from my face. I looked up into his eyes as I licked the tip of his dick, circling the head with my tongue. Tastes so good. \n\nIt was different with him hurt. I had to be so careful, so gentle and that was different from the rough play and aggressive fucks we indulged in before he was shot. It forced us to be more tender; instead of fucking all night, we kissed and talked and cuddled until his nightly pain pill dragged him into sleep. It was different, but nice. Didn't mean I didn't want sex, but we both knew we couldn't do much. Daniel was too weak and I was afraid of reopening his gunshot wounds if his blood pressure got too high, so it was a lot of leisurely blowjobs for him and a lot of masturbation for me, with an occasional hand job as he felt better. \n\nEmotionally, we were closer than ever but I was missing the sex more and more every day. It was getting harder to wait until he felt better. I missed the warmth of him inside me, I missed being filled by him so much more than I ever imagined I could. Yeah, I loved fucking him and I could probably have done that if we were very careful, but right now I wanted him deep inside me until we forgot we were two separate people. I wanted his hands on my ass, making it burn and then taking the pain away along with all my doubt and fear. I wanted the release only he could give me.\n\nJust thinking about it made the heat wash over me until I felt like I would implode and I moaned around his cock as I sucked it long and slow. He caught his breath and grabbed hard at my hair. I slid back from his cock and slowly swirled my tongue over his balls and down to the sweet little spot under them. He bucked and I pulled away. I didn't want him to hurt himself. Besides, I had an idea. \n\n\"Come on.\" I sounded harsh even to myself. Taking his hand, I led him down the hall to the bedroom and flipped on the lamp next to the bed. He lay back in the soft tangle of sheets, blankets and pillows watching me strip in the golden lamplight.\n\n\"I love your freckles, did you know that?\"\n\nI couldn't stop the blush that rose up. \"The pain pills are starting to erode your gray matter.\"\n\nDaniel chuckled and then raised his eyebrow as I opened the drawer and pulled out the lube and a condom. \"What're you doing? I'm so not cleared for this kind of strenuous activity,\" he said, amused. And not protesting.\n\n\"It won't be strenuous for you. You're just going to lie still on your back with your dick up my ass.\"\n\nHe grinned, eyes lighting up like he'd gotten a new bike for Christmas. \"I won't tell if you won't.\" \n\n\"Not a word.\"\n\nDaniel's fingers lazily stroked my chest and tugged at my nipples as I straddled him on my knees. His sheathed cock slid through my lubed hand, making it slick and wet. My knees were shaking and he watched my eyes as I stroked myself until I shivered. Then he lifted his hand and I squirted some lube onto his fingers. Even left-handed, his fingers were nimble and wicked, teasing my hole, slipping in and then darting away and leaving me empty and aching. I fell forward onto my hands and knees over him, carefully supporting my own weight so I wouldn't hurt him even as I groaned and panted into his mouth at the feeling of his fingers filling me and opening me. \n\n\"Oh, god, Daniel... fuck me.\" I hardly even knew what I was saying. \n\n\"It's going to hurt if you rush this.\"\n\n\"Don't care.\"\n\nI pushed back to my knees and leaned back. The tip of his cock brushed my ass and I wrapped my hand around the base, steadying it. It did burn when I sank down, a sharp pinch and a deep, dull burn. I stopped, suspended with my eyes closed, just waiting, waiting desperately for that split-apart feeling to pass and the pleasure to start. I felt his hand wrap around my shaft, thumb spreading the sticky wetness around and around the tip, swirling, and the deep burning tingle radiated into my balls and gathered into a knot of ecstasy and I moaned with relief when the pain went. Such a relief to have him in me.\n\n\"Yeah, fuck, more.\"\n\nI moved slowly and opened my eyes. Daniel's lip was caught between his teeth and his head tipped back as I started to gently rock back and forth on his cock . The pleasure overtook him, but I felt his hips jerk and thrust upward and even amidst the waves of sex, I felt a stab of guilt. Maybe this was too soon, maybe I should've waited and not pushed him into this before his doctor okayed it...\n\n\"Daniel, are you hurting?\"",
        "\"Huh? No, fine. Great. God your ass feels good.\"\n\n\"'Kay... but don't move... let me do it all, and stop me if you hurt...\"\n\nSlowly, carefully I moved for both of us, using my hand to take care of myself so that his one good hand was free to roam. His cock slid in me and stroked me just right until I was trembling and the pressure was building in a slow intense rhythm like waves breaking on the beach. Daniel lay back just watching me through heavy-lidded eyes, toying with my balls, trying not to thrust. His hand slid up and pressed against the base of my belly right above my cock and he grinned at my startled gasp from what was happening - pressure from the inside and pressure from the outside - rubbing against my prostate until I cried out from the intensity, and then he reached back and grabbed my ass, squeezing it roughly. I felt his fingers on my slippery hole, pulling it open for the invasion of his cock and the orgasm hit me without warning, like a punch in the gut. Just as I exploded, he drew his hand back and slapped my ass hard. Bright sparks shot through me and I came so hard, my cum splattered his chest and ran down my hand onto his belly. The intense, tight contractions made him shudder and he came, spurting into my aftershocks.\n\n\"Holy shit, Daniel...\"\n\nIt wasn't very romantic but it was all I could think of to say. He laughed as I rolled off him onto my back next to him, wiping the sweat from my face. We lay there side by side for quite awhile, letting our breathing even out, getting slow and sleepy. Finally, I roused myself out of the post-orgasmic stupor.\n\n\"Come on. Gotta change your bandages and stuff.\"\n\n\"They're fine,\" he mumbled, eyes closed. He was drifting off to sleep without drugs, but I knew it wouldn't be long before he woke up in pain.\n\n\"Maybe so, but you need your pain medicine.\"\n\n\"Tired of pills.\"\n\n\"I know you are, but you're taking them because the doctor said so. After tomorrow, you can decide for yourself because I won't be there to make you. Now come on.\"\n\nReluctantly, Daniel heaved himself off the bed and we went into the bathroom, cleaned up all the cum and did the bandage thing. The shoulder wounds had finally stopped oozing over the past week, but there were spots of fresh blood on the gauze and I felt guiltier than ever. I shouldn't have fucked him. With a grin, he assured me it was worth it and he swallowed his industrial-strength Demerol without any more complaints, so I'd feel better. Back under the blankets, lights off, he tipped his head sideways against mine. He had to lie on his back, so our cuddling was limited to me curled against his left side, head on the pillow next to his, breathing against his neck. He still smelled faintly of mango.\n\n\"Gonna miss you.\"\n\n\"Me too. You don't have to go, you know. You could stay here a little while longer, till you're a little better... the department can survive without you another week.\"\n\n\"Maybe, but we've both got work to do... you haven't gotten much done with me here.\"\n\n\"It's okay,\" I answered softly. My editor was bitching about the deadline but I really didn't care.\n\n\"Anyway, the sooner I get everything taken care of, the sooner I can come back. You could come visit for a few days in between, you know.\"\n\n\"Yeah, I'll probably do that.\" Just hearing him say he wanted to get back to me flooded me with elation. I knew what he said in the hospital, that he needed me always, but he was so drugged then I wasn't sure he meant it . When he said it now, he said it with a clear head and I was still so amazed and thankful and filled with joy that, despite my silly doubts, he really did want to be with me.\n\n\"Hey,\" Daniel muttered thickly as he drifted off to sleep.\n\n\"Yeah?\"\n\n\"Love you too.\"\n\nI smiled in the dark. I'd written about this feeling in every single novel I'd ever penned and I believed it was real, but I never believed it could happen to me. I thought I was different somehow, damaged, that nobody could really know me and still love me the way I am. Daniel did and it still fucking amazed me at the same time it filled me with wonder. He didn't ask me to do anything or be anything other than myself. He really did love me. I didn't know why but he did.\n\n\"I know.\"\n\n******\n\n \nChapter 35\n\n\"What will you have to do in court when you get to Chicago?\" \n\nI turn away from the front window, where I'm peering out for the tenth time in the past hour, waiting for the sight of Paul's truck coming up the drive. He's picking up Daniel at the airport. I was planning to go myself, but Paul just happened to be going to St. Louis today to pick up a backhoe part, and since it's an hour drive one way, it would've been silly to make another trip. The anticipation is killing me though. \n\nMy grandma and Charlotte are in the farmhouse kitchen, cooking a vast meal. I've been helping off and on but I can't really concentrate on anything for more than a few minutes so they finally told me to just let them do it. I have no problem with that.\n\nI drop down at the kitchen table. \"Federal grand jury's convening for Adkins's indictment. My testimony won't be huge, but Daniel is a key witness. Could take weeks.\"\n\nCharlotte frowns while whisking gravy. \"Why are they doing this in Chicago, and not in Florida where this is all started?\"\n\nSame question we've been asking. It would make things a lot easier for us; the IAD hearings about Olmos are still gasping away and Daniel's right in the middle of therapy for his shoulder, and now we have to uproot to Chicago. \"Because it's the federal government. They have jurisdiction everywhere and they can do whatever the fuck they want.\"\n\n\"Rylan.\"\n\nI grin sheepishly, sticking my tongue out at Charlotte who's giving me the you are so in trouble smirk from over at the stove. The fact that we're adults doesn't impress my grandma. \"Sorry Gram. Forgot.\"\n\nToo late though, she's already coming toward me with her fingers outstretched. I clap my hand to my ears too slowly. She grabs my left ear and pinches, making me howl. \n\n\"Son of a b...\" She tweaks harder and it hurts like hell, but I manage to shut my mouth before bitch comes out and my grandma lets go and smiles.\n\n\"That's better.\"\n\nI make a face and rub my ear and grumble under my breath, but I don't dare mutter out loud even when she's gone back over to the sink to drain the boiled potatoes. Grandma may look like a sweet little old lady, and the top of her head barely clears my collarbone, but she has some strong fingers and she absolutely hates swearing.\n\n\"So you have no idea how long this is going to take?\" Charlotte resumes asking questions.\n\n\"My testimony should be done in a day. All I have to do is get on the stand and tell the grand jury what I saw; and I've told the story so many times I could tell it in my sleep.\" I shrug. \"But Daniel might have to get on the stand numerous times, through different parts of the trial. There is no way to know when they'll need him, or for how long. That's why we're letting the federal government put us up in an extended stay hotel... we'll be able to come back here on weekends, or when the court goes into recess.\"\n\n\"And you'll have plenty of time to write,\" my grandma says, looking for a bright side.\n\n\"Um, yeah. Something like that. Kat wants to do a feature on us while we're up there.\" This story has been great for Kat's career, and even Alex, who tried to downplay his role in the events of that day, had a high-profile new job with MSNBC that he viewed with both excitement and distrust. \n\nFour-wheeler engines roar up behind the barn and we watch out the window as Jeremy, Madison and my grandpa turn donuts in the patches of melting, slushy snow in the field, churning up mud and screaming with glee. My grandpa looks like he's having a blast and that makes me smile. My grandma shakes her head, pretending to disapprove, even though we can see the corners of her mouth tugging upward.\n\n\"Charlotte, go outside and tell those three kids to get in here and clean up before company comes.\"\n\n\"Too late.\" Charlotte nods her head toward the driveway leading to the barn, where finally, at last, Paul's red truck is pulling into the gravel. I didn't hear it over the noisy four-wheelers. I run outside, ignoring my grandma's voice calling after me to get a jacket.\n\nIt isn't cold enough that I'll freeze without one anyway. Not like the last time Daniel and I were here at the farm. The power and the gas are on for one thing, and we're having a rather pleasant February thaw, with temperatures in the upper forties, sunshine that melts the snow off the roads and yards, and a cool spring breeze. Wouldn't bother me a bit if it stayed like this. It makes leaving the sunny coast of Florida for snowy Illinois in the middle of winter a little less jarring.\n\nThe passenger door of the double-cab truck opens just as I reach it and Daniel slides out to his feet, smiling at me, eyes so blue like the thin cloudless spring sky and I wrap my arm around his neck, careful not to crush his arm in a sling beneath his smooth black leather jacket. Clearing his throat, Paul grins, grabs Daniel's bags out of the truck's back seat and trudges up the walk without a word to leave us to our reunion.\n\nOur eyes devour each other for a moment, and then Daniel rests his forehead against mine and closes his eyes briefly, as if in relief. \"God, I missed you.\"\n\n\"Missed you too, so much.\"\n\nI reach up and brush his stubbly jaw. His hair has grown out to something resembling a short, sexy cut and his face has finally lost the gaunt, exhausted look he's had since he was lying in that hospital bed. His cheeks are smooth and not hollow. He's put on a few pounds and he looks wonderful. I pull open the right side of his unzipped jacket so I can see his arm, gently touching him with my fingers, reassuring myself he's still all in one piece. Instead of the bulky sling that kept his arm bound tightly to his chest, he's wearing a different, smaller sling without a splint that just keeps his arm supported. He grins, lifts it slightly and wiggles his fingers, and I smile, nodding at his progress.\n\n\"You need a shave.\"\n\n\"You'll have to get on that in the morning.\"\n\nWithout even looking at the windows, I know my aunt and probably my grandma are watching us from the kitchen. There's nothing else to do for entertainment. And so, I grab Daniel's hand and lead him around to the other side of the truck so their view is obscured. Why should they get a free show? Daniel leans back against the driver's side door and wraps his left arm around my neck; I put my hands on either side of his head to keep from pressing against his right shoulder, letting him draw me in, keeping my weight off him while our lips meet softly. His mouth is sweet and addicting and I'm so hungry for the taste of him after being apart for almost two weeks that my lips are needy and demanding, descending on his mouth and engulfing him. I want to swallow him. He smiles at my urgency and teases my tongue with his, swirling it into my mouth. Lips so warm. My knees go weak and I have to breathe in sharply through my nose, inhaling his scent. \n\n\"Rylan, get in the house. Time to eat,\" my grandpa orders from the other side of the truck, another world. We're an island here in the driveway. I draw my lips away from Daniel's reluctantly. Our two-week separation turned into four weeks since he left Atlanta and a week and a half since I had to come home from Tallahassee for business. It's been hell, being away from him.\n\n\"Be right there.\"\n\nExcited laughing voices chatter on the other side of the world, my niece and nephew going into the house with my grandpa, splattered with mud. The screen door slams and I smile at Daniel, whose eyes read a sudden flash of hesitation.\n\n\"Guess we have to do this sometime, huh?\" He takes a breath, as if my family were a firing squad he must face.\n\n\"Don't worry. They'll love you, like I do.\" I kiss him one last time and then take his hand. We go up to the sidewalk hand-in-hand, but Daniel lets go and drops my hand when we reach the final few steps, his eyes going to the grinning faces in the window. I can't say I'm not a little dejected, but I can understand, it is his first time meeting my whole family and you never know how people are going to react. I hate adjusting my actions around other peoples' comfort zones, but it's not a new thing. It just comes with the territory and I tell myself I should be used to it by now. I open the screen door and lead him in.\n\nThe kitchen is all brightness and warmth and delicious smells of the traditional family Christmas feast we didn't get to have this year because I stayed in Atlanta to take care of Daniel. Christmas was only two weeks after the shooting and he was still in too much pain to go anywhere or be around a lot of people, even though my grandma desperately wanted us to come. Instead, I just invited Drew and Louis over and we had an elegant dinner and talked until Daniel got too tired, and then they left and we just cuddled on the couch and watched old movies, with Daniel drifting in and out of sleep, head in my lap. It was the best Christmas I'd ever had.\n\nI love my family but they cook way too much food. Food is a production and it's also a token of love so you have to eat yourself sick or my grandma will feel slighted. Turkey, stuffing, mashed potatoes and gravy, rolls and enough desserts and side dishes to feed an army. The army will be here tomorrow for my grandma's birthday, in the form of aunts and uncles and cousins, but for right now, it's just immediate family. Paul's next to the stove quietly reading the St. Louis paper he picked up while he was in town. Daniel returns Charlotte's hug but I can see him quailing a little as my grandma steps up with her hand outstretched.\n\n\"Daniel, it's so nice to meet you.\"\n\nOf course, she doesn't have a chance of resisting Daniel's slightly shy southern charm. He's adorably nervous and calls her \"Miss Opal\" because his upbringing just won't let him call her by her first name without the Miss, even after she asks him to. Even though I prepared him, I can tell he's a bit bewildered by the friendly welcome. I certainly didn't get the same from his family when he brought me to meet them. Sure, his sisters were nice, the new baby was sweet and his mom wasn't exactly rude; it was just obvious that she wasn't interested in welcoming her son's lover into the family, and that was fine. I would've liked it to be different for his sake, but not everyone has a family like mine. Watching my grandma reach up and pat Daniel's cheek, and the way he smiles down at her in return, looking truly pleased and grateful, I'm just glad I can share a little of their love with him.\n\nI feel his tension, though, when my grandfather walks into the room, damp from washing off the mud. At six-feet-four, he towers over most people and he looks very imposing with his stern face, his thick hair going from red to gray, and his piercing blue eyes, squinted in the corners from decades looking across the fields in the blazing sun. I know Daniel is nervous but he has nothing to fear. Like me, my grandpa's reserved with new people, but like me, once he knows and accepts someone, he does it wholeheartedly. \n\n\"Daniel, this is my grandpa, Wilbur Kennedy, but everyone calls him Red. Grandpa, this is Daniel Braden.\"\n\n\"So you're the hero,\" my grandpa says as he shakes Daniel's hand.\n\n\"No sir. I'm not a hero, I was just doing my job.\" \n\nI happen to be watching my grandpa when Daniel says this and I can see that skeptical look hovering in his eyes. But when he sees that Daniel is genuine, and not just trying to play off false modesty, he smiles, which is a good and rather surprising thing, because my grandpa doesn't smile that often, especially around strangers. They like him. I knew they would. I'm sent off to put Daniel's jacket in the bedroom, where I notice his bags on the floor. I'll have to take them upstairs later. Sleeping arrangements haven't been discussed. I hate the idea of separate rooms upstairs, but every time I've brought someone home, that's been the protocol. It's easy to sneak down the hall at night, but I wish I didn't have to. I should be used to it by now, and I am, but with Daniel, it's different. I thought I was over all that and now I resent it all afresh, like it's something completely new and we're the first ones to ever have to downplay things for family. It just feels wrong, like I'm seventeen again, hiding who I really am, and it's all so unfair, and feeling all those things again when I've always thought they're dead inside me, that I've finally accepted it, is strangely exhilarating. \n\nWhen I return, Jeremy and Madison have been called in from the living room where they were playing with their new Xbox they got for Christmas. My whole family is gathering in the kitchen to serve themselves from the stove and the dishes and platters laid out on the counter and the kitchen table. When Daniel spots the pies lined up on the table, right where he bent me over, his eyes find mine over all the heads and he grins. A little tingle shoots down my spine and into my cock and I clear my throat and turn away, smirking to myself.\n\n\"What would you like on your plate, Daniel? Do you like turkey or ham?\"\n\n\"Here, Ma, you can go ahead and sit down at the table. I'll fix Daniel's plate.\"\n\nDaniel stands there between my grandma and Charlotte, looking uncomfortable while they fight over who gets to fix his plate. I laugh at his pleading look, but I shrug. There's nothing I can do to save him now. Apparently, they've decided to cooperate; my grandma arranges slices of turkey on a plate while Charlotte dishes up fluffy mashed potatoes and stuffing. My grandma explains that it's not cornbread stuffing like he's probably used to being from the south but she's sure he might like it, it's my favorite after all. Paul complains jokingly that nobody ever fixes his plate.\n\n\"You have two good arms,\" Charlotte tells her husband. Her whole demeanor changes, from brisk to adoring and solicitous, when she turns back to Daniel. Can't blame them a bit. Well I know how that wounded-war-hero thing of his gets to you. \"Do you want gravy over everything, or just your mashed potatoes?\"\n\nEventually, we all end up at the dining room table. My family isn't big on formality but the grown-ups always eat together while the kids take their plates to the coffee table. Usually, I end up hanging out with them instead of the so-called adults, but I sit beside Daniel and cut up his ham and turkey for him. My grandma is crushed that she didn't think to do it.\n\n\"I'm sorry, I should've given you smaller pieces.\"\n\n\"It's okay, I'm used to it,\" I grin at Daniel. It embarrasses him that he still can't do some simple tasks, but instead of grumbling about it like he usually does, he just lingers over me with his eyes.\n\n\"Yes, and you do a good job,\" he says softly. \n\nEveryone's suddenly uncomfortable and we break out of our little moment. We do that sometimes, look at each other and just forget the rest of the world exists. It never fails to send flights of butterflies fluttering through me. I push him his plate, looking away from his face down at the table. I just want to touch him and be near him all the time. The rest of this - as much as I love my family - it's all just an annoyance, keeping me from being alone with him.\n\n\"So Daniel, how's your arm? What's the prognosis?\" my grandpa asks after a bit, while we're all eating. The food is delicious as always. My grandma and Charlotte monitor Daniel's eating carefully, watching to see if he runs out of anything he likes, or doesn't care for something. \n\n\"It's doing pretty well, they took the splint off and I'm doing therapy three days a week. I got a referral for someone in Chicago, by the way, Rylan. I've gotten some motion back and the doctors are happy with the way it's healing. They say I'm actually ahead of schedule at this point.\"",
        "\"As long as you don't try to do too much and hurt it again,\" I just have to say. He rolls his eyes at me; it's been a constant battle to keep him from pushing things. I understand his need for independence and his impatience with relying on other people, but damn, is he stubborn.\n\n\"Did you tell them about your new book deal yet, Ry?\" Daniel deftly changes the subject.\n\n\"Oh, you have a new contract? That's great, sweetie,\" my grandma says. Everyone nods but I've published over thirty novels, so it's not earth-shaking news. \n\n\"Yeah, but this one's different.\" I grin at Daniel. \"I've always wanted to write a sci-fi novel but I never felt like I had the ability. Daniel convinced me to give it a try, and I ran it by my agent who pitched it to a couple of publishing houses... one of them picked it up, complete with an advance and they optioned a trilogy, all published under my own name. I've got to do press and everything.\" I shudder exaggeratedly. My family is a little more impressed this time and they all add their congratulations, but they don't realize what a big deal this is. Only Daniel and I do. He smiles at me. Time to tell them the rest.\n\n\"That's not all. Um, I've been waiting to tell you all this until it was definite, but I'm going back to the University of Illinois next semester and finishing up my doctorate. This novel is also my dissertation. I've already had it approved, and part of this trip is going before the committee for an official presentation. I figure after all the interviews I've done and testifying in front of a federal grand jury, the doctoral committee should be no big deal.\"\n\n\"Wait, does this mean that you're moving home?\" Charlotte demands. \n\n\"Well, sort of. I'm selling my house in Atlanta, and I'll probably be spending a lot of time in Florida with Daniel, but the rest of the time I'll be here and just drive to Champaign when I need to be on campus.\" I nod. \n\nMy family is happy, I knew they would be, and it makes me feel good that they want me to be closer. Even though my grandparents live in Sarasota, this is still home to them; they've never liked me being in Atlanta, even though it is closer to them. They want us all together. This whole adventure with Daniel has made me realize how important family is. I'll be further from him, yes, but I keep telling myself it won't be permanent and we'll spend as much time with each other as we can until we can be together full-time. We've already gotten everything decided.\n\n\"Eventually, Daniel will be going back to work when his arm gets better, but I'll still have the flexibility to travel about twice a month to see him, until I get the dissertation finished and then figure out what we're going to do from there.\"\n\n\"Actually, uh.\" Daniel suddenly puts down his fork and looks over at me. The slightly tense note in his voice makes me stiffen. \n\n\"What?\"\n\nHe grins at me, but he looks nervous. My heart starts to thump. \n\n\"Actually, I quit the force.\"\n\nFor a moment, I don't know what to say. We never talked about this. Everyone else stops eating to watch the scene. \"You what?\"\n\n\"Yeah. I'm still on medical leave, but when it runs out, I'm going to take disability. You know what the doctors say. My arm may never heal completely. There's no way to know right now, but even if it does, if I returned to active duty, it might seem okay and then fail me at a crucial moment, like a gun that jams. That would make me a liability and I can't take that chance with my life or my fellow officer's lives.\"\n\nI should be happy, ecstatic even. I've wished so hard he wouldn't return to police work that I'm afraid to believe it. \"But what about Internal Affairs?\"\n\nHe shakes his head. \"With all the publicity from this case, my cover has been completely blown; even with the gag orders, my face has been in the media too much. I'll never work undercover again, and Ry, you know I'm not cut out for a desk job. There's no way I could do that until I retire. This way, I get a disability check but I can still do something useful. Besides, even if I could return to active duty, I wouldn't. I don't want you to ever feel like I did when Ray was killed.\"\n\nI still can't form a complete thought and I sit there speechless while my grandparents and Paul and Charlotte start to grin as they realize what Daniel is doing. I stammer, bewildered. \"But... but what...?\" \n\nNow Daniel is smiling and so is everyone else and they're all staring at me, waiting for it to sink in. \n\n\"I took a job with the Illinois State Police academy in Springfield. I'm going to be teaching classes on undercover vice and narcotics operations.\"\n\n\"Springfield?\" It sinks in now, all at once. That's less than an hour away from here. \"You're...\"\n\n\"Yes, I am.\" He nods and I feel the realization start to dawn over me. He's moving here to be with me. No long separations, no flying back and forth to Florida twice a month. Daniel wants to be where I am. Still, I doubt, I question.\n\n\"But what about a house? Do you want to live closer to your job? You've never lived in the country before. We never talked about this...\"\n\n\"Well, there's this little white farmhouse out in the middle of nowhere that I have my eye on, but I'm probably going to have to make a deal with the farm boy who owns it. Think he'll be interested?\"\n\nI nod. I don't want to make even more of a fool out of myself, but I just can't stop smiling. Neither can the rest of the people watching, my whole family, right in front of my grandparents he's done this and I just can't believe it. \"Yeah, I think he might work something out with you. As long as this is what you really want.\"\n\nUnder the table, Daniel's knee touches mine and he looks straight into my eyes. \"I do.\"\n\nHis choice of words; I've long since gotten used to the fact those words would never mean to me what they could to other people, but right now, right here, they mean everything. I swallow to get the lump out of my throat.\n\n\"I do too.\"\n\n****\n\n \nChapter 36\n\n\"It was nice of your grandparents to go stay with Charlotte and Paul. Convenient, that.\"\n\n\"Yeah, they've never done that before. They must really like you.\" \n\n\"They must.\"\n\nI curl up closer to his left side and nuzzle his collarbone. His left arm is wrapped around my shoulder and two glasses of bourbon on the rocks drip beads of condensation onto the coffee table in front of us. In a turkey-induced tryptophan stupor, we've been too lazy to keep putting logs on the grate so the fire has died down to a heap of glowing coals. Despite what Daniel might think, I didn't ask my grandma if she and Grandpa would let us have the house to ourselves. It was her idea. It was great but it surprised me. While she's never been anything but gracious to any of the men I'd brought home in the past, she never gave her approval either. No disapproval, just no acknowledgement. When she told me that she and Grandpa were staying with Charlotte for the rest of their visit, I protested, but she told me that she knew Daniel and I would like some time alone. I blushed; I'm sure my grandma knows I have sex, but we've never mentioned it and I like it that way. I hugged her to show my thanks.\n\n\"When do you start your new job? I should've asked you that before, but I was kind of distracted.\" I grin at him and he kisses the top of my head.\n\n\"We left that kind of open-ended. Can't really do anything until the grand jury and IAD finish with me.\"\n\n\"And what about the trial?\"\n\n\"There's not going to be a trial. He's too valuable as a witness. They'll plead him down to lesser charges in exchange for naming names and giving testimony against his co-conspirators. Like I've said before, he's just a link in the chain.\"\n\n\"But after everything he's done? They're going to just let him hang out in federal prison for a few years? That's just...\" This upsets me. Daniel doesn't seem bothered, but to me, it isn't just at all.\n\n\"It's the way the system works, Rylan.\" \n\n\"And you're satisfied with that? You think that's justice?\"\n\n\"When you're a cop, you can't think that way. I've brought in a lot of scum over the years. I do the best work I can so they won't walk on a technicality and the prosecutors have a good case against them, and after that, I can't control what happens. Sometimes, no matter how textbook my police work is, they plead out or a jury finds them not guilty and they walk. It's unbelievable, but it happens, and when it does, I know I did my job and I have to be satisfied with that. Justice is the job of the courts.\"\n\nI nod slowly. All he could do was get them there and hand them over to the courts, in the best way he knew how. \"Yeah. Still...\" \n\n\"That's the only closure cops get sometimes.\"\n\n\"But I want more for you.\" I feel a strange, desperate longing I've never felt before, a strong need to make everything right for him. \"I want this to be over for you. I want you to know that Adkins got what he deserves.\"\n\nHe smiles. \"You want resolution.\"\n\n\"Exactly. Is that so wrong?\"\n\n\"No, but it's not real. That's the writer in you, wanting all the loose ends tied up in the last chapter. Doesn't always happen that way in real life.\" He leans over and kisses me so I know that he means it kindly. \"If you weren't such a good shot, I wouldn't have even gotten that and the Feds wouldn't have any way to bring this whole thing down. So, thanks for that.\"\n\nA slow blush spreads over my face. \"You knew.\"\n\n\"Of course. Jensen let me see your taped testimony. I know what happened.\"\n\nI rush to explain, to justify my dishonesty. \"I just didn't want you to think I was trying to seem heroic, you know? That I wanted you to think I'm a better person than I am.\"\n\n\"I think you're pretty fucking great, actually. Come on.\" He gets to his feet and takes my hand, leading me toward the bedroom.\n\n\"You tired?\"\n\n\"No. I brought something for you.\"\n\n\"Other than you, there's nothing I want.\"\n\nHe flips on the lamp and unzips his suitcase, rummaging around in an inner pocket. When I see what he pulls out, my breath catches in my throat.\n\nBlack nylon wrist restraints with a silver D-ring on each. Nothing too fancy. They close with Velcro and so does the nylon strap that runs between the D-rings to attach them. I've seen them before and automatically my heart starts to race and my throat feels thick. \n\n\"I'm surprised they let you on the plane with those.\" I giggle nervously when I can speak again.\n\n\"I just had to blow the security guard.\" He laughs at the look on my face. \"I'm kidding. Just flashed my badge and convinced airport security they were for official purposes.\"\n\n\"I guess that means you have to arrest me.\"\n\n\"Too bad for you.\" \n\nThe verbal play covers the fact that I'm nervous. Daniel knows it and he doesn't put the restraints on me, he just tosses them on the bed. I wore them once when I was visiting him in Tallahassee. He told me there was a club he wanted to take me to, a certain kind of club I'd never been to before.\n\nI was shaking with nervousness until he slipped the cuffs around my wrists and closed the Velcro. He left off the connector strap so to the unaware, they looked like two black wristbands. My hands were free and the cuffs weren't tight and for some reason, having them on calmed me and I actually felt a bit of a buzz when we walked into the club, in the back of an industrial building on a dark, empty street. It wasn't the kind of place you just wandered into. A few people recognized Daniel and he talked to some of the men there while I just looked around. The people he introduced me to were very nice and very respectful. Some of the other patrons were wearing collars and harnesses and studded leather cuffs and all sorts of things that made my black nylon cuffs seem sedate. Other than the attire, the only thing that made it different from any other club was the fact that I was wearing these restraints in public and everyone looked at them and knew exactly what they meant, and I wasn't embarrassed or shy about it at all. In fact, I felt a strange glow that I couldn't name.\n\n\"What'd you think?\"\n\n\"It was... uh...not what I expected.\"\n\n\"It's not nearly that tame on weekends, and there's some back room action you didn't see, but I didn't want to scare you your very first time.\"\n\nSince then I've been curious what happened in that place on nights when it wasn't so tame and at odd moments I've been finding myself thinking about the wrist cuffs and getting very hard, remembering what it was like to be there with him in a place where everyone knew and didn't think it was bad or wrong or perverted.\n\nBut because of Daniel's injury, we haven't done anything with the cuffs. He said it wasn't safe to use them when he wasn't completely able-bodied, in case something happened and he couldn't get me out of them. Apparently, he thinks he's able-bodied now and to be honest, it doesn't worry me that much. \n\nHe sits down in the middle of the bed and motions me to sit next to him. I cross my legs under me, curious. My heart is pounding and my breath is beginning to get quick and shallow, from his body near me and the wrist restraints sitting just behind him on the bed. He sees my eyes keep darting to them and he smiles. \n\n\"So I have this plan.\"\n\nThe raspy, sexy note in his voice makes me hard. \"Plan?\"\n\n\"Yes. I've come up with a plan to make you come without either one of us touching your dick. A hands-free orgasm.\"\n\n\"And how is that going to work, exactly?\" I clear my throat. I'm so hard now, and the pit of my belly aches like a hungry beast is gnawing at it. Only he can do this to me, make me feel this way when we're both completely dressed, without even touching me, and I want him so much his words are like a lifeline that ties me to earth.\n\n\"Well,\" he says in this low, sexy voice that makes me shiver. His eyes are dark and intense and I want him to touch me so bad but I wait. I know it isn't time yet. \"Did you get the package?\"\n\n\"Yeah, it's in my suitcase upstairs.\"\n\n\"Did you try it out yet?\"\n\n\"No... you told me not to, remember?\"\n\n\"I remember, but I didn't think you'd listen.\" He grins briefly. \"First, I'm getting you naked and slicked up with lube, so you shine for me, so wet and ready... and then I'm going to slide the plug deep inside you.\"\n\nI'm shaking now and he's waiting for me to speak, but I can't and he smiles. I can see the outline of his hard cock pressing against the top of his thigh through his jeans and I know he feels like I do. The mental play is exhilarating for both of us. I've never had this with anyone else. It's a new level. Like my brain is just as excited as my body.\n\n\"Then.\" His voice is rough and I shake all over. My heart thumps so hard I can feel it in my dick. He looks at me, eyes gleaming, as I drop my head forward and pant. \"I'm going to bind your wrists and put you on all fours with your ass in the air, and I'm going to spank you so that the plug inside you makes you feel so good. I'm going to spank you until your ass is red and burning and you come just from the feel of my hand. Can you come like that, Rylan?\"\n\n\"Yes,\" I groan. My hand goes to my lap to touch myself, to free my cock from the tightness of my jeans. But I don't want to come, not yet. I tease the head of my cock through the cloth just enough to make that gnawing beast inside me roar with need.\n\n\"It doesn't hurt when I spank you, does it?\"\n\n\"No. It feels good,\" I whisper. A deep, furious blush spreads over me and he watches, but he knows that I need to say this. Admitting it to myself is harder than admitting it to him, but he makes it okay for me. He makes me want to say it.\n\n\"You like it.\"\n\n\"Yes.\"\n\n\"Why do you like it?\" He's gentle but relentless.\n\n\"Be-because it's you,\" I say so softly he can barely hear. I can't say it any louder. \"Because only you can touch me that way.\" \n\n\"Trust,\" he says when I stop and can't go on. \"You trust me to do that you because you know I'll take care of you.\"\n\n\"God, yes,\" I breathe with the most intense feeling of relief. I didn't understand it myself until now and I feel an enormous weight lift off my chest. I feel so light, emptied out and new. \"I know I'm safe with you...\"\n\n\"Always. Now go upstairs and get that toy.\"\n\nI don't want to spend time rummaging through my bag. I haven't unpacked, and thank whatever gods there might be that my grandma hasn't taken it upon herself to do it for me. I don't know if she'd know what to make of a butt plug and I don't want to find out. I grab the whole suitcase and drag it downstairs. Daniel's sitting on the bed waiting for me, naked now except for his shirt; he still needs help getting his shirts off. He can handle the buttons, but he needs me to take the sling off and support his arm while he pulls the sleeve off. When I finish, he pushes me back and asks me where it is. I unzip the pocket and pull out the toy, a sleek, smooth acrylic plug about five inches long that makes me tingle when I think about what he's going to do with it. He picked it out and ordered it online and had it shipped to me, with instructions to wait.\n\nWhen I'm naked, he gently wraps the bonds around my wrists. He pushes me to the bed and flips me over, pushing my hands over my head. The connector strap hooks around one of the vertical metal bars on the headboard. The cuffs are snug but not tight and they feel so good. Daniel's voice in my ear tells me to stop thinking, to let him think, and I lose myself in a warm haze. I don't have to be nervous. It's good not to think sometimes. \n\nHe pulls me to my knees and his voice is warm and soothing in my ears even though I don't know what he's saying. He smacks my ass hard and I moan. Oh god, it feels good. Sharp, poignant and stinging and I need more. More hard, stinging slaps that burn like electricity and Daniel's hands stroking the sting away. I need this. I need it. I don't know why and I don't care. I moan and he breathes a laugh as I thrust against the soft pillow under me. His voice telling me how hot I look and his hard, sharp slaps repeatedly on the curve of my ass until I can hardly bear the burning pleasure.\n\nWhen he stops, I make this sound like a whimper but I can't move. The buzz has taken over my brain and I lie there panting until something cool drips on my skin and his fingers tease me and lube me just like he promised and his voice surrounds me in a cloud, telling me to spread my ass and I do. He slides the plug inside me and it fills me and stretches me and I moan, dropping to my elbows. The next hard smack to my ass almost makes me scream. The blow jolts the plug and it hits my prostate and then Daniel keeps on and on, smacking my ass again and again, praising me and saying \"You're mine\" over and over and I am, I want to be his, and I'm going to come so hard.\n\n\"Yeah, come for me now,\" he demands and the next time his hand makes contact with my flesh, I explode into an orgasm that starts deep inside me and the raw, edgy pleasure leaves me weak and shaking. \n\nIn the trembling aftershocks, while everything seems to spin, I feel him slide the plug out and I feel empty and I squirm into the sheets.\n\n\"No, don't take it away.\"\n\nDaniel laughs and pulls me firmly back to my knees and his body covers mine, our skins slipping together effortlessly with sweat, and when he pushes into me, I feel so relieved and I get hard again. \n\n\"You loved that, didn't you?\" he breathes in my ear. He fucks me slowly with long, deep strokes. \"You love me owning you.\"\n\n\"Oh God yes,\" I say into the sheets. I never thought I could ever feel this way or give someone this kind of power over me. Not since what happened with Matt. But Daniel takes all that away. I push back against him and I let him possess me and I never have to be afraid. The bonds on my wrists are firm and he feels so good moving in me. I can give him control and know he'll never use it to hurt me. Only to make me feel good, to take all the heavy weight off me. And I'll do the same for him. I'll turn myself inside out for him.",
        "His rhythm changes, gets short and jerky. His breath speed up and he strokes my cock roughly. When he shoots, I come just after him, just from the feeling of knowing he's in me. And when he reaches up and releases the straps and tears open the Velcro, freeing my wrists, I drop down to my back beside him and I can't see or think in the cloud that takes over my brain and obliterates everything but the low, throbbing hum in my veins and the delicious burn spread all over my ass.\n\n\"I never thought this would happen to me again.\" Daniel's low voice reaches through my pleasant haze. It's almost like he's talking to himself. \"When Ray died I thought this was all over for me. Most people never get this, and I've found it twice. Are you listening?\"\n\n\"Mmm-hmm.\"\n\nHe whispers, and I understand. Some things just can't be said out loud. He doesn't talk this way so I know this is important. More important than any flowery declarations of love that I might spin on the pages of a novel.\n\n\"I was dead inside when I met you. I never expected to live through this investigation and I didn't really care. When Adkins pointed that gun at me, I suddenly did care; it dawned on me that I wanted to live after all. And you came and saved my life, but you also saved my heart. I want you to know that. I want to give you everything you want and need.\"\n\nI swallow hard and open my eyes. He's sitting there next to me, looking down at my face and I reach up and touch his cheek, run my thumb over his damp, swollen lips. He is so fucking beautiful.\n\n\"You do.\"\n\nHe gives me that smile that has made me weak in the knees since the very first time I saw it, until it got inside me and became a part of me. He gets up and offers me his hand. \n\n\"Come on, I'll wash your back.\" \n\nI grin and wince as I get to my feet. A deep, satisfying burn makes my ass throb. \"Oh my god. I'm not gonna be able to sit down tomorrow.\"\n\n\"I'm sorry.\" He groans. \"Did I take it too far?\"\n\n\"No, it's okay. I like it. You were perfect.\" I follow him toward the bathroom, turning up the furnace as we pass the thermostat. We both like it warm when we soak in the tub. \"When all the aunts and uncles and cousins are over, they'll all wonder why I'm standing up all day and only you and I will know the truth.\"\n\n\"Mmm, that will be hot.\"\n\nI turn on the water in the big claw foot tub and we lean against the sink, kissing, as the steam rises and mists the mirror and the window over the tub that looks out onto the dark field beyond, where snow has begun to fall.\n\n***\n\nfin"
    ],
    "authorname": "carsonshepherd",
    "tags": [
        "gay sex",
        "undercover police",
        "fbi",
        "blow job",
        "anal sex",
        "guns"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/between-the-bars-pt-07"
}