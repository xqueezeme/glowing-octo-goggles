{
    "title": "Point Hollow Ch. 01",
    "pages": [
        "The chronological order of my stories is now listed in WifeWatchman's biography.\n\nFeedback and constructive criticism is very much appreciated, and I encourage feedback for ideas.\n\nThis story contains graphic scenes, language and actions that might be extremely offensive to some people. These scenes, words and actions are used only for the literary purposes of this story. The author does not condone murder, racial language, violence, rape or violence against women, and any depictions of any of these in this story should not be construed as acceptance of the above.\n\nThis story is dedicated to the memory of Dame Agatha Christie, and is partially inspired by her Poirot novel 'The Hollow'.\n\nPart 1 - Prologue \n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" shouted the lovely redheaded reporterette from in front of City Hall at 7:00am, Tuesday, April 26th. \"Channel Two News has learned that tonight's Council Meeting will include ratification of the Police Department and Fire Department's planned promotions!\"\n\nNeedless to say, the very full MCD room was paying rapt attention.\n\n\"These ratifications will not require a second reading of the bill,\" said Bettina, \"and the promotions will go into effect next Monday, May 1st. Important positions to be filled are the Major Crimes Lieutenant position, vacated with the medical retirement of Lt. Tanya Perlman; and the Captain of Administration, vacated by the promotion of Della Harlow to Deputy Chief. Promotions from within would create new vacancies, as well.\"\n\n\"Another item on the Council's agenda is the second reading of the bill to accept several Boards of Inquiry findings, which include the finding that Detective Joanne Cummings Warner was wounded in the line of duty. She should receive the Purple Order next Monday.\"\n\nThe Detectives all began clapping for Joanne, who blushed as she sat at her desk. \n\nBettina was not done: \"And as the political races in the State become white-hot with rancor, the SBI is becoming a central issue of the Election. Governor Jared has made it a central plank of his campaign that the SBI will be totally overhauled, and could be reduced severely. SBI Director Jack Lewis is defending his organization, saying it is the premiere law enforcement organization in the State, especially in the War on Drugs, and he has promised to strengthen the SBI and give it more authority over law enforcement in all of the State's 96 counties.\"\n\n\"And in local races,\" Bettina said, \"the District Attorney's race tightened over the weekend, with incumbent Gil Krasney leading 50-48 over Jenna Stiles, within the margin of error. Experts say this is due to endorsements of Ms. Stiles by State and National Women's groups, and an infusion of contributions to her campaign that has allowed her to run new advertising. Councilman John Colby is now unopposed, as his opponent was arrested for DUI in the City over the weekend, and dropped out of the race after Channel Two News broke that story yesterday. And now let's go to Sports with Nick Eastwood. Nick!...\"\n\n\"By the way, where is Martin Nash?\" asked Julie Newman as she poured herself some coffee.\n\n\"He's probably getting fitted for that new Lieutenant's uniform he's going to need on Monday.\" said Detective Theo Washington, with his 'movie star handsome' grin. Several Detectives laughed, but Cindy and I exchanged silent glances.\n\n\"Captain,\" I said, pretending to be quiet but knowing my voice would be heard, \"all Detectives, Classroom 'J', at 8:30... sharp.\" More quietly, I said \"Masters, too. And I'll let the Chief know.\" With that, I left the room, which had suddenly gotten quiet in my wake...\n\nPart 2 - Revelation \n\nAs I screened Classroom 'J' for bugs, my thoughts went to what had happened the Thursday and Friday before, April 21st and 22d...\n\n\"Chief,\" I said to Chief Moynahan as Cindy and I stood in his office on Thursday, \"I am ready to determine the next MCD Lieutenant.\"\n\n\"It's about time!\" exclaimed the Chief. \"We are up against the deadline on that.\"\n\n\"Yes, sir.\" I said. \"I am going to go talk to Martin Nash now, but the offer has to be couched in... proper terms. May I indulge you, sir, to take a little trip with me and Captain Ross? And apologies in advance for the theatrics.\"\n\n\"Chief Griswold said there would be days when you did strange shit like this.\" said the Chief. \"But I'll play along. I think I know what it is, anyway. What about you, Captain?\"\n\n\"I submitted Nash's name to the Commander, Chief.\" said Cindy. \"I have no idea what he is up to right now... par for the course around these parts.\" A red crowbar was waved in her general direction. Moynahan chuckled as we headed down the hallway...\n\n(Author's note: at this point, dear readers, you may wish to pause and figure out what the Iron Crowbar is up to (besides no good). What will happen with the MCD Lieutenant position?)\n\n* * * * * * * * * * * * * * * *\n\nThe River that flows through the Town and then southeasterly towards 'The Vision' and Midtown begins in a set of springs in the mountains north of us, the mountain whose finger forms the ridgeline upon which the Allgood's home, Promontory Point, and the Cabin reside upon. The River actually starts in the State north of ours, but is fed by springs all along the way until just north of the Water Works. \n\nNear the northern border of the County there sits an old farmhouse. The property's east line is the River, which is hardly more than a large gully and creek at that point. The northern border of the property is the County Line... and also the State Line with the State to our north.\n\nThe farmhouse was on the highest point of the property, which sloped gradually and did not seem like a hill. It was fairly large and two stories, with high ceilings and probably a cellar. It was painted white and was in good condition... though no one has lived there for sixty years. The front door of the house faced south, and a barbed wire fence, now overgrown with weeds and muscadine vines, ran along the property line about 30 yards behind the house. The backyard, once manicured, was now a fallow field like the farmlands.\n\nTo the south, there was a dip, a depression in the earth. There had been apple orchards and lines of grape vines at one time, growing in the furrow gouged out by the River. The trees were now untended and 'feral' and formed a forest of sorts that seemed sunk into the ground as viewed from the farmlands. The farmland stretching to the west was still seemingly good soil for growing crops or raising cattle or horses... but lay fallow for the most part.\n\nThere were trails leading north along the River and on into the hills. On a pretty day, people sometimes came up and picnicked on the grounds. And I'd heard that the Presbyterians used to come here and hold their Rogation services, to pray for blessings for the crops.\n\nScientists from the University and other Schools often came up to study the soil, which seemed fine... but had traces of radioactivity from very heavy elements that did not exist naturally. They could not explain the lack of deterioration in the house. In addition, strange lights had been seen on the property, which was difficult to get to, served only by a poorly maintained road that wound around the sunken forest and came up along the west side of the property.\n\nEverything from ghosts to aliens to the Slender Man had been reported being seen. It was the County's contribution to those things abnormal and paranormal in the world. But worst were the reports of cries and screams coming from the forest of trees in the Hollow. Sounds of screams that some thought came straight from the gates of Hell itself. There were animal howls on occasion, but these screams were distinctly human, and it was said that those who directly heard them were destined to share the fates of those before them, and be eternally damned to make those same screams for all eternity.\n\nThis was Point Hollow.\n\nOn Friday morning, some University college students that came up decided to set up their tents on the front lawn field. These students took soil samples for their class, water samples from the River, and went all through the old farmhouse. As the sun went down and it turned dark, the three guys and three girls set up a fire pit, broke out food for cooking, and of course opened up the cooler full of beers... okay, they'd long since started on the beers...\n\n* * * * * * * * * * * * * * * *\n\nThursday, April 21st. I led Cindy and Chief Moynahan into the Federal Building and up to the third floor. As I used my Consultant card to gain access to the FBI areas, I was met by the new receptionist, an attractive young woman with brown hair in a ponytail, glasses over her pretty eyes, and large breasts. Her body was curvy, voluptuous, and maybe a bit 'stocky'.\n\n\"They're waiting for you, Commander Troy.\" she said. \"You can go right on on.\" \n\n\"Thank you.\" I said, leading my fellow Officers into the conference room. Inside was Martin Nash, as well as FBI Special Agent Sandra Speer and Special Agent in Charge Jack Muscone. The other two persons in the room surprised Cindy and the Chief... one was the Deputy Director of the FBI, and the other was... Chief Emeritus Griswold.\"\n\n\"Thanks for seeing us today.\" I said as the DepDirector had us all sit down. As he often did, he remained standing, slowly pacing behind Jack and Chief Griswold.\n\n\"So what's this about?\" asked Jack Muscone. \"Trouble?\"\n\n\"In a manner of speaking, it could be.\" I said enigmatically. \"For someone, anyway. I am here to talk to Mr. Nash to gauge his desire to become my next MCD Lieutenant.\"\n\nThere were murmurs of praise and congratulation from everyone... except the DepDirector. He was peering at me, and I felt the power of the man reaching out and trying to get into my mind... and Cindy was doing likewise.\n\n\"That's great, Martin!\" said Jack Muscone. \"But why did you need to talk to him here, Don?\"\n\n\"Well,\" I said, \"the job is Martin's... if he wants it.\" I replied. \"But there is a mitigating factor in the decision he'll be making, and all of you will need to help him with it. It's a matter of the Bible... Matthew 6:24.\"\n\nEveryone looked confused, except the DepDirector and now Chief Griswold.\n\n\"Forgive me for not knowing my Bible well enough, Commander.\" said Chief Moynahan in his peculiar inflection. \"What would that verse beeeee?\"\n\n\"Well, sir,\" I said, \"Jesus Christ said it Himself: 'no man can serve two masters'. And that is true... Martin, you are going to have to choose... between being the MCD leader and a Lieutenant in the Town & County Police... or remaining a Special Agent with the FBI.\"\n\nYou could've heard a pin drop.\n\nCindy's eyes looked like they were about to bulge out of her head. Chief Moynahan was nodding his head as he absorbed the information. The FBI agents in the room looked surprised, but more at the fact that I knew than anything else. The FBI DepDirector had a pursed smile on his face as he attempted to hide a bigger smile. And Chief Griswold's handlebar mustaches were twitching about as merrily as I have ever seen them twitch.\n\nI looked at the FBI Agents. \"I hope none of you lost any money over this.\" Several pairs of eyes rolled.\n\n\"How long have you known?\" asked Sandra, finally.\n\n\"Oh, almost since the day Martin walked in.\" I said. \"He was hired directly by Chief Griswold, and that without me interviewing him first; he was already superbly trained, he dresses like an FBI agent every day, and that is a compliment; he was already dating Sandra and it was no great feat to figure out where they'd met. Others remember seeing you two together at parties in the City... where you both were FBI Agents.\"\n\nI turned and looked right at Chief Griswold. \"And you, Chief, are the one who hired him... to watch over me. I did not fail to notice who tackled me when we went after Ned at the Olivet Gym... and Martin was just as quick to stop me as Cindy herself was. In addition, he's been the unofficial FBI liaison, which is fine with me, as I'd been telling y'all the same information up front that he might've given you.\"\n\n\"Four hundred years ago, Jack...\" said the DepDirector with a twinkle in his eye, teasing his operative.\n\n\"You got that right, sir.\" said Muscone, not rising to the bait, still stunned.\n\n\"And to make sure you requisition the firewood sir,\" I said to the DepDirector with a wicked grin, \"I happen to know that 'Nash' is your sister's married name... and Martin is her son, and therefore your nephew.\"\n\n\"I give up.\" said the DepDirector. \"Griswold, you didn't tell him, did you?\"\n\n\"Not one thing. I didn't know he was your nephew, either.\" said Griswold, then turned to me. \"You're right, Crowbar. The Deputy Director asked me to bring Nash on with us in order to help keep you safe while you started busting up Malone and the really bad stuff in our County. We thought it would just be the white supremacists, but then you went and found not only Wargrave, but your 'Moriarty'. Nowadays, I don't know if there are enough FBI agents in the world to protect you... the only one capable of that is the Blue Crowbar over there.\" Cindy smiled at the Chief for that compliment. I nodded vigorously.\n\n\"So, Martin.\" I said. \"I need to know by tomorrow of your decision. I'll be glad to have you if you remain with us, and I'll understand if you return to the FBI.\"\n\n\"Thank you, sir.\" said Nash. \"I do appreciate the offer.\"\n\n\"Talk with Sandra about it, this affects both your lives.\" I said as I got up. \"Okay, Crowbar 2, we need to be getting back, if y'all will excuse us.\" Chief Moynahan and Chief Griswold came with us.\n\n* * * * * * * * * * * * * * * *\n\nMartin Nash came into Headquarters later that day, looking around furtively as if he were sneaking in after curfew.\n\n\"Martin?\" called out Julie Newton as he passed by Vice. \"Detective Na-ash?\" He finally realized he was being called.\n\n\"Sorry, Julie,\" he said, coming into the Vice Room.\n\n\"Here's that data you wanted on Michael and Eleanor Burke.\" said Julie, handing him a file folder.\n\n\"Thanks.\" he said.\n\n\"You all right?\" Julie asked, peering at him. Then she dropped her voice and said \"Did they finally tell you they're going to promote you?\"\n\n\"Well, don't say anything to anyone.\" said Martin. \"But let's just say... something was mentioned.\" Julie gave him a knowing look and a smile.\n\nAs he came back into the hall, Cindy Ross called him into her office. Once the door was closed, Cindy said \"Well, consider me shocked. I had no idea, and the Commander never said a word to me. He is soooo going to get a crowbar beatdown for that.\"\n\nNash gave what was for him a smile. \"Well, ma'am, I wouldn't trade the experience here for the world. I could never have learned as much with the FBI as I did from Commander Troy, and Chief Griswold, and you.\"\n\n\"As Chief Griswold would say,\" Cindy replied, \"you've learned how to kiss ass. I'm still the student as much as you are. And whatever your decision, it's been great working with you here. But that's not why I called you in.\"\n\nShe extended her hand and handed Nash a small box. It contained an engagement ring.\n\n\"It's a Troy family trait to be blunt and direct.\" Cindy said. \"You and Sandra have more to talk about than your job. So make a real decision. I'm not needing that ring, so if you want to give it to her, you can pay me back for it over time. If not, or if you want to get another one, just hand that one back to me.\"\n\n\"Uh, wow.\" Nash said. He then looked up. \"Ma'am, there is one other thing. I've been essentially undercover here, and I don't want these guys to think I've been a spy on them. If I do go back to the Bureau, what should we tell them?\"\n\n\"I don't know.\" Cindy said. \"But I damn sure know who will have that one figured out.\" She then said, almost under her breath: \"He figures out everything.\"\n\nPart 3 - Personnel Matters \n\nAt 9:00am Friday morning, Helena buzzed me that I had two people to see me. They were Martin Nash and Sandra Speer. I made observations as they came in and sat down at my invitation. Cindy was sitting on the sofa, also peering at them.\n\n\"I don't know which way you're going on the job choice.\" I said. \"But congratulations on the engagement.\" They looked at each other, then back at me.\n\n\"Oh, c'mon.\" I said. \"Sandra walks in here with her hands behind her back, then tries to hide her left hand with her right hand out of sight of my vision under the edge of the desk. And of course I see the light in her eyes that a newly engaged woman just cannot hide.\"\n\n\"Why do we even try, Martin?\" Sandra asked with a 'knowing' smile on her face. She held up her left hand, exhibiting the ring. I made another observation.\n\n\"Why, indeed.\" Cindy said in reply to Sandra. \"I gave up a long time ago.\"\n\n\"Yeah, right.\" I said, rolling my eyes on purpose. \"Guess who gives me the most practice every day. So, Captain Ross... is Mr. Nash staying, or is he returning to the FBI?\"\n\n\"Returning.\" Cindy said.\n\nI nodded. \"She's good.\"\n\n\"How did you know?\" asked Nash, looking stunned. I looked over at Cindy. She just began laughing uncontrollably. Martin and Sandra looked at her quizzically.\n\n\"She guessed.\" I said. \"I had no idea, myself.\"\n\nCindy said \"I did play the odds, as it was better than even that you'd return to the FBI, Martin. While the Commander was observing Sandra and her best friend... the diamond, of course... I was looking at your face, and it suggested relief at having made a decision... and we're back to the better than even odds, again.\"\n\n\"As to what we are going to tell everyone else,\" I said, \"I am going to announce that you have taken a new job with the FBI, that Jack Muscone stole you from me. So you'll be here for the May 2d Promotions and Awards ceremony, then your resignation will become effective. No one will have to know that you were already an FBI Agent. I can also pretend that I knew you were going to accept the FBI's job offer, and you might want to tell people you're going to Quantico, to which you've already been, of course.\"\n\n\"That'll work.\" Cindy said. Martin nodded vigorously.\n\n\"Okay guys, go announce the engagement to everyone, while Captain Ross and I do paperwork.\" \n\nMartin said \"Sir, I wanted to say that it's been really good working with you. I'll never be able to do what you do, but I've learned a heck of a lot along the way.\"\n\n\"And you did an excellent job with us.\" I said. \"We'll be seeing you both as we work together on things, but I am going to miss having someone who out-GQ's Theo every day...\"\n\n* * * * * * * * * * * * * * * *\n\nAnd so it was, this Tuesday, April 26th, that I watched from in front as all the Detectives filed into Classroom 'J', and sat down in the school-classroom-style desks.\n\n\"Secure that door, Captain Ross.\" I said. Cindy closed the door and stood so that the narrow vertical window in the door was blocked.\n\n\"Okay, everyone.\" I said. \"I've decided to go ahead and tell you a few things, and they had better not get out of this room before May 1st. First, if you bet that Martin Nash would be the next MCD Lieutenant, you have lost your money.\" \n\nAmongst the gasps I said \"I'm both happy and sorry to say that Mr. Nash has accepted a position with the FBI, and he'll be leaving us after the ceremonies on May 2d. I know Martin will do great with the FBI, but I'm sorry to see him go. I really appreciate the job you've done with us, Mr. Nash.\" I led a round of applause for Martin, making him blush a bit.\n\nA moment later, as the applause died down, I said \"So that leaves the MCD Lieutenant slot open. Lieutenant Croyle was given dibs and has chosen to stay with Vice, and I don't blame her for that. Fortunately, we have someone who not only is very qualified as a Detective and a leader, but he has agreed to make the move. Your next MCD leader is... Lieutenant Wes Masters!\"",
        "There were exclamations and some clapping as everyone looked over at 'Coldiron' Masters. I said \"Chief, do you have anything?\"\n\n\"Yes, I do.\" said Chief Moynahan. He came up to the raised platform and I sat down. \"First, congratulations to Martin. Jack Muscone's team just got a lot better at our expense.\"\n\nThe Chief went on: \"I want to reiterate what Commander Troy said about keeping this quiet for the rest of the week. I also want to say that I have had the privilege of working with Lt. Masters for many years, and I even followed him up here after the Iron Crowbar hired him away from me. You'll find that he is an excellent leader that takes care of his people, and he's not a half bad Detective...\"\n\n* * * * * * * * * * * * * * * *\n\n\"Sorry, 'Coldiron',\" I said, \"but no matter how hard you try, you just do not look good enough to be a 'Crowbar Angel'.\" I said.\n\nWe were in my office after the Classroom 'J' announcements. Teresa and Cindy were also in the room.\n\n\"He can be the 'Crowbar Demon'.\" Teresa said with a straight face.\n\n\"I've got more than enough of those already.\" I said.\n\n\"I just have one question, sir.\" said Masters. \"Do I get to keep the office?\" Cindy burst out laughing like her sister Molly often did, and Teresa even chuckled, as did I.\n\n\"I'm sorry to say that you'll be moving into Tanya Perlman's office.\" I said. \"I would've left you where you were, but Commander Harlow wants to put some cubicle walls in and give Myron, Mary and Sonali more private space, and I have to agree that it's a good idea.\"\n\n\"Is this considered a promotion for Wes?\" asked Teresa. All eyes went to me.\n\n\"Technically, it's a lateral move.\" I said. \"Actually, 'Coldiron' was doing a Captain's job as leader of the Uniformed Officers. The problem is that the position was created just to put Captain Charles into it, and now that we have Precincts, that position is like a Battalion Sergeant Major... it can be important, but it can also be virtually obsolete. The Council wants to phase it out, so it makes sense to move you to the MCD slot.\"\n\nCindy said \"And Chief Moynahan is not the only one that thinks you'll do a great job, Wes. Molly was really singing your praises, and she'll be very excited when I tell her the news... unless you want to tell her yourself.\"\n\n\"Sir,\" asked Teresa, \"can you tell us who is going to fill the other big slots?\"\n\n\"Sunday night, Ms. Croyle.\" I said. \"Sunday night.\" I was referring to the Orange Order dinner, which Teresa would be attending.\n\nJust then there was a knock on the door. Detective Teddy Parker looked in. \"Sir, everyone,\" he said, \"we just got a call that six University students have disappeared...\"\n\nPart 4 - Sex, Hollows, and Videotape \n\n\"Who called it in?\" I asked as the Crime Lab and Police contingent scoured the grounds in front of the house at Point Hollow.\n\n\"Professor Mickelson.\" said Detective Parker. \"He holds the Gregor Mendel Chair of Genetics in the University's Biology Department. Two of the students were his, two others were Biology majors, and two were majoring in Radiochemistry, whatever that is.\" \n\n\"That's chemistry dealing with radioactive substances.\" I said. \"So what happened?\"\n\nParker said \"The story is that they came out here Friday to collect samples over twelve hour intervals over the weekend, and they were camping out, as well. There are some samples in the blue cooler over there. They were on ice, but that ice has almost completely melted. They set up these tents that you see in front of us. The red cooler there has three cases of beers, about a third of the cans consumed and the rest unopened.\"\n\nParker went on, reading from notes: \"On Monday, the six had not returned to Campus, and none of their friends had gotten texts or calls from them since Friday afternoon. A couple of guys went to Professor Mickelson and asked if he'd heard from them, and the Professor said he had not, but that they weren't expected to be in his classroom until Tuesday morning.\"\n\n\"Tuesday morning arrived, and the six did not show up. And so the Professor and the two students who'd contacted him Monday went to the Campus Police. They referred them to us, and here we are.\"\n\n\"Okay.\" I said. I called Cindy and Wes Masters over. \"I am egregiously stepping all over you two, and personally appointing Detective Parker here to be in charge of this case.\"\n\n\"Get used to that, Coldiron.\" Cindy said. A red crowbar was waved in her general direction. A blue crowbar was waved back in retaliatory response.\n\n\"Detective Parker,\" I said, \"the questions that come to my mind that I want your answers upon very soon are these: Did these six arrive in vehicles or were they dropped off? Did they leave by those vehicles? Where on this property did they walk? Are there footprints or other traces of them on the trails around here?\"\n\n\"Yes sir.\" said Parker.\n\n\"Okay, I'll go talk to J.R. and Christina over there.\" I said. \"You guys carry on.\" I fully expected Cindy and Coldiron Masters to begin working with Parker to make sure my questions were answered, so I left them to it.\n\n\"Hi, Christina.\" I said. \"Anything of interest?\"\n\n\"To me, sir, not much.\" said Christina. \"To you, sir, probably a lot that the rest of us won't see.\"\n\n\"You underestimate yourself.\" I said as I looked around. \"You're a good crime scene investigator, as well as an excellent technician. And I say that because I know you might be considering following Lt. Perlman to the State Crime Lab, and I wouldn't blame you if you did. But if you want to stay with us, there will still be plenty of work and plenty of fun for us.\"\n\n\"Thank you, sir.\" Christina said. \"The only thing of interest is in the middle tent. One person had a blanket with a sheet inside instead of a sleeping bag, and there are some bloodstains on it. But I think it's menstrual blood, and a couple were having sex while she was on her period.\"\n\n\"See, you are a sharp CSI.\" I replied. \"No other blood? Any other signs of assault, sexual or otherwise?\"\n\n\"No sir.\" said Christina as J.R. Barnes came up.\n\n\"Sir,\" said Barnes, \"we have some tire tracks coming into the drive from the road, but they only came about halfway to the house, then appear to turn around and go back to the road. There are no tracks overlaying them, or fresher tracks.\"\n\n\"Suggesting they were dropped off.\" I said. \"How is cellphone coverage out here?\" Barnes pointed to a cell tower on top of the ridgeline to the south of the property.\n\n\"Pretty good, sir.\" said Barnes. \"I'm getting good coverage on my phone, as well.\"\n\n\"Good.\" I said. I walked away from them and looked around the property. Crime Lab people were going through the house. To everyone's surprise, they said the electricity was on and lights inside worked, and there was running water, though it was weak.\n\n\"Masters,\" I said, \"I need to know who's paying the bills for that electricity and water.\"\n\n\"No one, sir.\" said Masters, who had brought out an iPad tablet with WiFi connectivity, making Cindy look envious. I knew a requisition would appear on my desk shortly, but I put that into its compartment and concentrated on the present. \n\nMasters continued: \"There is a solar panel on top of the roof, and it still feeds electricity to the house. And there's an artesian well that feeds water from the hillside to the east, which is piped in to a tank in the house basement. There's a pump to assist the water pressure into the house, but it's not working beyond the pressure of the artesian well.\"\n\n\"Wow, self-sufficiency.\" I said. \"Who owns this property?\"\n\n\"That's in dispute, sir.\" said Cindy. \"Jenna told me about it when I was looking at tax liens to buy. The County tried to put a lien on the property and then sell that lien, but the estate's lawyer filed a lawsuit five years ago to stop it. The estate lawyer said there's a fight among the heirs of Old Man Bonniker, who was the last owner. He also supposedly gained title through a tax lien, so there's further dispute.\n\nCindy went on: \"BigPharmaCorp also filed a claim to it, saying it was part of the parcels of land they bought for their factory. Their claim is suspect, and it's suspected they just want the water and mineral rights.\"\n\n\"So, Crowbar 2,\" I asked, \"do you want to be the legal beagle on this, or give it to The Abacus or the Mouseketeers?\"\n\n\"I think I'll take it myself.\" said Cindy.\n\nJust then, we were called to the tents. \"Sir, I've got something!\" yelled Christina Cho. We went over. Christina was holding a small videocamera.\n\n\"We've taken prints already.\" said Christina. \"The digital memory is about 2/3ds full.\"\n\n\"Can you download it?\" I asked. \n\n\"Yes sir.\" she said. She went to a Crime Lab vehicle to get her laptop.\n\n\"Okay, has anyone searched down there in the Hollow?\" I asked.\n\nSergeant Rudistan came up. \"Some of our guys are in there now, sir. Morton is carrying a videocamera, and they're trying not to walk on the main trail leading into the forest.\"\n\n\"Hoo boy, I better get down there, then.\" I said. I headed down the trail that ran alongside the River until I got to the rim of the depression. The trail began curving downward along the bowl so that the grade was not too steep. Despite their efforts, the officers had left distinct impressions on the ground, and had significantly damaged what might've been there before they went down the path.\n\nI got on my radio and ordered all officers in the area of the Hollow to stop in place. I began carefully watching the ground as I moved slowly along, looking for any clues, any traces of movements.\n\nThe sun was greatly filtered as I got down into the Hollow. The temperature was noticeably cooler... and I felt a coldness beyond that. I was reminded of the coldness I had felt the night I'd been shot and was lying on the ground outside Ward Harvester... a coldness that had reached for my soul. It was the same here and now...\n\nI came up to Morton and Hicks. \"Okay guys, you didn't do too much damage.\"\n\n\"Sir,\" said Morton, \"I videotaped the trail before we walked alongside it, if you want to review it.\"\n\n\"Okay.\" I said. \"Find anything, so far?\"\n\n\"There's something blue over there, near that big oak tree with the tangle of roots.\" said Hicks, pointing forward about forty meters. I led the way as we inched towards it, crouching down as I looked for traces of movement, at some points doing the 'duck walk'. The officers and Cindy were watching me.\n\nWhen we got to the tree, I observed that the blue object was a pair of woman's panties. Christina Cho came forward and bagged the evidence, the whole process being videoed by Morton.\n\n\"Sir,\" said Cindy. \"There's a videocamera to your right, just under that plant with the big leaves.\" I looked over and saw it: it was indeed a videocamera, about a foot off the ground on a small tripod.\"\n\n\"Looks like it ran out of power.\" I said. \"Cho, bag this too, and transfer its digital contents to your servers the same as you're doing for the other video recorder you found.\" Cho checked the video recorder for fingerprints, finding some, and then bagged it. Very professionally done, too, I thought. I am going to fight Tanya to keep this woman, I promised myself silently.\n\nAs she worked, I got out my cellphone. \"Hmmm, no coverage.\" I said. \"Does anyone else have cellphone reception?\" Everyone got out their various cellphones or other devices and tried them.\n\nNone of them had any reception down here. At all.\n\n* * * * * * * * * * * * * * * *\n\nI got an email from Christina Cho about an hour after we got back from Point Hollow. She said the videos were in the servers, but under seal, and she recommended discretion in viewing them. I opened them, and I could see why. After reviewing them and doing some quick work, I called in Cindy, Teresa, and Detective Teddy Parker.\n\n\"Okay,\" I said, turning off the lights of my office. \"Let's watch some TV.\" I pressed the remote, and the first video started. It looked like it was being filmed from one of the tents, and showed the campfire. It also showed a young man undressing a woman as the other students cheered them on.\n\nThe young man was tall, slender, very fit and muscular, and handsome. He had dark brown hair. The girl was not particularly attractive, a bit voluptuous, had a plain face, and light brown or dirty blonde hair that was somewhat stringy.\n\n\"Is Teddy old enough to be watching this?\" asked Cindy as the young man was easing the girl back onto a blanket.\n\n\"We should ask if Commander Troy is old enough.\" said Teresa, needling me. \"But seriously, this looks like something his wife should be studying.\"\n\n\"I don't disagree.\" I said. We watched as the young man ate the woman's pussy. She was moaning, and we heard the occasional \"yeah, eat that pussy out!\" from a woman, then encouragement from a man. I was also trying to watch behind them, to see if the camera had caught anyone intruding on the students.\n\n\"The young man's name is Jason Stone, nicknamed 'Jake'.\" I said. \"I spoke with our young friends Ryan and Sean, as well as Rita, and 'Big Jake' here is a member of that secret sex fraternity on Campus.\" Everyone could see why... as Jake mounted the young woman in the video, his huge cock was easily visible, hard and erect.\n\n\"I would also ask you to note the timestamp... last Friday night, about 10:30.\" I said as we watched. The young woman moaned as the young stud penetrated her and slowly sank his incredible size into her. As Jake pumped his hard, muscular ass up and down, plowing his meat in and out of the moaning girl, we could hear the others on the tape saying things like \"Oh, yeah!\", \"Give it to her, Stone!\", \"Fuck her, Jake!\". \n\nI said \"The girl's name is Natalie Jenkins. She's one of Professor Mickelson's students, studying genetics.\"\n\n\"Yeah, we can see that.\" Teresa said. \"Especially big Jake's genetics.\" I chuckled. Teresa was really developing a sharp, sarcastic sense of humor... and that came from hanging around with my nephew Todd.\n\n\"This may sound cynical,\" said Cindy, \"but I'll bet they're not a couple... at least not beyond these few minutes, anyway.\" \n\n\"You're right, Crowbar 2.\" I said. \"And that's for the next tape.\"\n\nThis session went on for several minutes, with Big Jake fucking Natalie steadily until he came. He pulled out and jacked himself to climax, a long, think rope of jism spraying up her chest, hitting her chin. Several more spurts of his seed followed.\n\nAnd then, just as he finished, we all heard a loud scream on the tape... a woman's scream. The people on the tape reacted.\n\n\"What the hell was that?\" asked Jake. He scrambled off of Natalie. The camera started panning around.\n\n\"Okay, that guy with red-brown hair and the beard,\" I said, freezing the video, \"is Jeff Slake. Had to use facial recognition to get that. He's one of the chemistry students.\"\n\n\"So who screamed?\" asked Teresa. \"Was that one of the students?\"\n\nI played the tape again. \"Good God.\" whispered Cindy.\"\n\n\"What?\" I asked.\n\n\"That... scream...\" Cindy said, looking shocked. \"That wasn't... normal... And by that, I mean it wasn't just a person screaming. It sounded like it was... from beyond the grave...\" I don't know if it was her words or the scream itself that had a chill running down my spine. And I noticed that none of the rest of us in the room had any disagreement with her assessment...\n\nPart 5 - Into The Hollow \n\n\"Okay,\" I said a bit shakily, as I loaded the next tape, \"let's look at the other tape. The timestamp and date aren't set right, so we can't use that as a reference. The shadows of the moon that you can see filtering through suggest a time of about 4:00am, if it's Saturday morning, which had clear skies. Sunday morning was cloudier, so I ruled that out.\"\n\nThe tape showed the handsome stud Jake Stone against the oak tree with the root system where we'd found the blue panties. He was putting a blanket down between a couple of roots. And then the woman came into the picture.\n\nShe was relatively tall and her body was shapely. Her breasts were naturally large, her hips wide, her thighs slender and her calves shapely. Her raven black hair cascaded past her shoulders in gentle curls. Her face was very pretty, somewhere between the woman Ivy and my ex-wife Melina.\n\n\"Her name is Annemarie Reynolds.\" I said. Biology major, but with either a minor or second major in Cinematic Arts.\"\n\n\"She could definitely be in movies.\" Cindy said, openly fascinated with the beautiful young woman. I have to admit, I thought Annemarie was hot, too...\n\nThe film showed Annemarie lying down on the blanket, and Big Jake taking off her panties then moving between her legs to eat her pussy. For some minutes we watched as Annemarie held her long shapely legs up and back as her young stud feasted on her hairless womanhood, his tongue swirling over her swollen labes and clit, then delving deeply into her wet slit. It was getting pretty intense in my office...\n\n\"Someone is operating the camera.\" Teddy Parker said, finally getting over his stunned look at what he was watching. Indeed, the camera was moving around as Big Jake mounted Annemarie, and they deeply kissed, their tongues twining openly for the camera as it zoomed in. Then the camera drew back, and we could all see the young man's huge penis sliding into the beautiful woman's tight, sopping wet quim.\n\nFor some moments we watched the scene of intense intercourse. Jake was nuzzling Annemarie's neck, her calves draped over his powerful thighs as he pumped her hard and deep. The camera angle was from over their bodies. They were really into it, I could tell, and from their intimacy as they mated, I could tell this was more than just a couple of porn stars rutting for the camera. And then another thought hit me:\n\n\"Looks like they were trying to recreate the scene from the movie Antichrist.\" I said. \"But no hands appear out of the ground. Now here the camera operator sets the camera down so that it looks up between their legs, and the camera no longer moves.\" The scene clearly showed the enormous cock plunging in and out of the stretched pussy as she somehow accommodated his size, and her legs wrapped around him as her moans of pleasure could be heard.\n\nAs we watched the hot copulation, Teddy asked \"So are we going to hear any screams?... besides hers?\"\n\nI smiled. \"No, but watch.\" As we watched, Jake groaned and began coming inside Annemarie's pussy. As he withdrew, semen was leaking from her well-filled quim. It was one hot creampie, and I was a bit surprised that the most avid watcher was Cindy.\n\nJust then, horizontal static lines began going across the screen, as if the tape was off-track. A staticky buzzing noise began getting louder and more constant, then the garbled screen went blank and silent.\n\n\"Okay, that's it.\" I said. \"Teddy, your job is to find out who all six people are and get some background information on them. Then see if you can put together any sort of timeline of their trip to Point Hollow, when they should've been picked up, and so on...\n\n* * * * * * * * * * * * * * * *\n\n\"So,\" I said, \"that's pretty much it.\"\n\nI was standing in the yard of the house at Point Hollow. It was 2:30pm. With me were FBI Special Agent in Charge Clark Webster, in charge of the Missing Persons Bureau in the City, and FBI Special Agent in Charge Jack Muscone. I had called them in just as soon as my Detectives and I had finished at the crime scene earlier this morning. \n\nCindy was here with me; Parker and Theo Washington were on the University campus, looking into the six missing persons. The tents and belongings had been removed and taken into evidence, so there were few traces of anything left as Webster's FBI team looked around. I had provided all notes and digital photographs, as well as copies of the video tapes to the FBI team.\n\n\"So I'm handing this off to you,\" I said, \"because the back fence there is the State Line, and if anyone abducted these people, I very much suspect they would've carried them off in that direction.\"",
        "\"So when did they disappear?\" asked Webster.\n\n\"Friday night or early Saturday morning.\" I said. \"That's the last we can confirm they were here.\" I looked around. \"They could've gone along those trails upriver any time during the weekend, though. I'm thinking of climbing that hill and seeing what I can see.\"\n\n\"Save yourself the trouble.\" said Muscone. \"Clark, you guys have drones with cameras, don't you?\"\n\n\"Sure do.\" Webster said. \"I've got Ted setting that up now.\" I saw a couple of agents assembling a drone and testing its transmission signal to the receiving assembly.\n\n\"We'll record what the drone sees, correlate it to a GPS and map, and send you a copy, Commander.\" promised Webster. I thanked him.\n\n\"Don, why don't you and I look around inside the house.\" said Jack Muscone. I followed him inside. My Crime Lab team had scoured the place already. It felt like an old, unoccupied house, stale and devoid of energy... but certainly not like a place abandoned for years.\n\n\"Don, how do you think this place stays in such good shape?\" Jack asked.\n\n\"I don't know.\" I said. \"Ghostbusters Cleaning Service, I guess.\" Jack barked what was for him a laugh.\n\n\"Sooooo, Jack.\" I said as I continued to look around. \"Why are you here?\"\n\n\"Uh, you called in the FBI.\" said Jack.\n\n\"Yes, yes I did. Missing Persons.\" I said, turning to peer at Jack. \"But why are you here?\"\n\nJack's small black eyes looked back at me, then he relented. \"Not much gets by you.\" he said. \"And I'm sure you understand that when anything happens involving you, my boss wants to know what's going on.\"\n\n\"So now that Nash is no longer my FBI Guardian Angel,\" I said, \"your boss just sends you. By the way, we're telling everyone Nash just accepted a new job with the FBI, so no one will be surprised to see him working with you guys.\" \n\nMuscone nodded, then realized I was staring at him. He began to feel uncomfortable. \"What?\"\n\n\"Now the real reason you're here.\" I said. Jack rolled his eyes.\n\n\"Sheesh.\" he said. \"Okay... as you've probably observed, a property like this right on a State Line, with foot trails leading to possible hiding places, is a pretty good place for smuggling drugs or other things. My boss wanted me to check this place out. He and I both fear these students came upon something they weren't supposed to see.\"\n\n\"Not a bad train of thought boarding at your station, there.\" I said. \"Well, let's see if we can find some hiding places. My Crime Lab is going to come in with sonar to find passages in the walls and floors, so I won't waste our time with that.\"\n\n\"I'm looking for something more akin to a drug lab, or a large hiding place for contraband.\" said Jack. \"I know your guys searched the attic and found nothing, unless they missed a secret hiding place.\"\n\n\"Would you want to lug contraband of any weight up and down several flights of stairs?\" I asked. \"Would you even want to bother climbing those stairs yourself? No... tell you what, let's go outside.\"\n\nI went outside to the back yard, seeing the vine covered back fence that was also the State Line a distance back. Walking around the yard, I looked at the back of the house.\n\n\"What are you looking for?\" asked Jack. \"Seeing if the outside dimensions equal the inside?\"\n\n\"No.\" I said, not telling Jack I'd done that earlier. \"These old houses would have outside doors leading to basements or crawlspaces. I'm looking to see if there is anything.\"\n\n\"I'd think a basement would flood\" said Jack. \"With the River right by here, being fed by springs, and there being an artesian well and all, which shows there's an aquifer underground...\"\n\n\"True.\" I said. \"But the house itself is built on something of a knot, or knoll on the ground. It's the high point of the area, but it's hard to tell because the ground elevates gradually. So there could be a half basement... hmmmm, that's weird.\"\n\n\"What?\" asked Jack.\n\n\"I see two screened-in back porches. One to our left here, which is closer to the River, and a door to what I think is the kitchen. The other, to the right, is near the end of the house... and with no door to the inside of the house. And note that the underside is solidly boarded and not left open for air circulation.\"\n\nWe went into the screen porch area, as the screen door wasn't locked. I looked closely at the boards of the floor, painted gray. Going to the right, I saw what looked like a crease between board panels.\"\n\n\"Okay, let's give the ol' red crowbar some legitimate work to do.\" I said, taking out the mentioned device and prying at the crease. A large section of the floor began coming up easily, as it was not fastened down.\n\n\"Oh wow.\" Jack said, helping me to move the panel. The one next to it also easily came up. We set them aside.\n\n\"Jackpot.\" I said looking down. Slanted doors were beneath. \"Yep, it looks like someone built this porch to hide these doors. Okay, let's open it up.\" I reached down, jimmied open the lock hinge, then opened the doors. A blackish-brick-lined set of stairs went to a passage going under the house.\n\nI called Cindy to come around back, so she could stand guard while Jack and I went below. I daresay my trenchcoat over my uniform protected me from the dirt and grime better than the 'nothing' that Jack had protecting his suit. Still, armed with a battery-powered lantern and my crowbar, I led the way down the passage.\n\nIt wasn't very long, turning left and ending at a metal door. A couple of blows with the crowbar were sufficient to knock open the Masterlock on the door. I had Jack stand back as I pushed open the door with the crowbar, expecting booby traps. Fortunately, there were none. We went inside.\n\n\"All right, drug lab.\" I said, seeing the tables with several chemical retorts and other apparatus. \"I'll have Cindy call the Crime Lab. They might can even tell us what batches of confiscated drugs were made here.\"\n\n\"So you think those students found this?\" asked Jack.\n\n\"No.\" I said. \"It is more likely they ran into some drug perps...\"\n\n* * * * * * * * * * * * * * * *\n\nI watched the film that Special Agent Webster and his people showed me. The drone had flown higher than the top of the hills to our immediate east. Looking south, we could see the Lakeview Subdivision that had been the scene of one of my mother's cases, then the Town, the University, and I could even make out the Cabin in the far distance. In the northeast, the terrain was hilly, with some relatively steep climbs up to hilltops and into crevices and valleys. More straight north, along the River, were forested areas, and to their west was more farmlands.\n\n\"Do you need our help searching these areas?\" I asked.\n\n\"Don,\" said Muscone before Webster could speak, \"we're going to have a totally Federal operation to do that. I want to keep you and the locals back, and the various State agencies back, as well. You may cross a State line and not realize it, and there'd be legal issues.\"\n\nI knew that was a crock of shit, but said nothing. With Jack Muscone himself here, and his obvious desire to keep me back, I knew something was going on.\n\nPart 6 - Investigation \n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" shouted the lovely redheaded reporterette at 7:00am, Wednesday, April 27th. \"Channel Two News has learned that six University students have disappeared over the weekend. They were on a School-related field trip to areas in the northwest corner of the County, and were reported missing when they did not come back to classes on Tuesday.\"\n\n\"Police have been notified but have no leads on the case thus far. The Town & County Police called in the FBI due to the close proximity of the State Line, and the possibility the six students crossed the State Line before disappearing. The FBI is making no comments on the case so far, nor releasing the names of the six persons that are missing.\"\n\n\"In other news,\" said Bettina, \"the Town & County Council meeting last night was the scene of a raucous and intense debate over a proposed County contract with a private ambulance service. Councilman John Colby and Councilwoman Dagmar Schoen cried foul at the proposed contract, saying that it had not been openly bid upon as required by County ordinance and State Law. Colby also showed financial connections to Northwest Properties Management, a company owned by Councilman Thomas P. Cook. Colby offered a resolution to formally call for the State Office of Ethics and Review to investigate the proposed deal and Mr. Cook's involvement. That resolution was defeated, but the Council tabled further consideration of the contract for the time being.\"\n\n\"The Council then went into Executive Session to consider promotions in the Police and Fire Departments. The Police and Fire promotions were ratified but will not be made public until May 2d. However, they did make the public announcement that Fire Engineer Roy Easley, who recently was awarded the Medal of Valor, will join the Fire Marshal's team as an Arson Investigator. Channel Two News has learned that Easley is also being strongly considered for assignment to what is considered the Fire Department's equivalent of Internal Affairs. And now for Sports...\"\n\n\"That's good for Roy.\" Cindy said. \"He's an upstanding guy. He came in and really kept things from getting out of hand when those FD jerks were going to attack Jimmy Lawson and his family, and go through me to do it.\"\n\n\"True.\" I said. \"Though I think those bastards would not have made it through you to get to them. Anyway, I'm glad John Colby stood up to Thomas P. Cook. That's some real sleazy stuff going on there.\"\n\n\"I wonder how Mr. Colby got his information about that ambulance contract.\" Detective Joanne Cummings Warner wondered out loud. A little too loudly.\n\n\"M-I-C! See you real soon...\" said Mary Mahoney as she came in the room.\n\n\"K-E-Y!\" sang David Krueger, coming in behind her.\n\n\"Why? Because we like you!\" replied everyone as if on cue.\n\n\"M-O-U-S-E!\" sang Cindy Ross. Everyone clapped and cheered as I looked around in admittedly stunned amazement.\n\n\"Well, Joanne,\" I said, \"I think you have your answer.\n\n\"I think it's the 'Iron Crowbar Fan Club' that we're all members of, sir.\" said Joanne brightly.\n\n\"Butter me up, butter me up.\" I said. \"It will not affect the Monday awards. But nice try.\" Everyone laughed.\n\n\"And I do suspect,\" I said, \"that Thomas P. Cook is not a member of the fan club right about now. Good work, guys.\"\n\n* * * * * * * * * * * * * * * *\n\nAt 8:30am, Detective Teddy Parker said he was ready to give his preliminary report. The MCD Detectives filed into Classroom 'J', as did Lt. Teresa Croyle, Captain Cindy Ross, Chief Moynahan, myself, and Commander Della Harlow. Also invited and present were the FBI teams of Jack Muscone and Clark Webster.\n\nSitting down, I gave the floor to Detective Parker. He turned on the overhead projector, and a 3x2 image of students came up.\n\n\"These are the six missing students.\" said Parker. \"At top left is Annemarie Reynolds. She is a Cinematic Arts major, and was minoring in Biology until she was granted a special program where her arts classes qualified for Biology major electives so that she could double major.\"\n\n\"All those looks and brains, too.\" said Cindy Ross. Those FBI agents not familiar with her looked at her is shock. \"What?\" she said, looking back. \"This ain't the home of political correctness, people.\" I chuckled, breaking the tension.\n\nParker continued: \"Her biological studies have been devoted to the study of cannabis. We are not a State where medical marijuana is legal, but the University has license to study all manner of drugs, and Annemarie also often goes to California.\"\n\n\"Next up is Sherry Kim.\" said Parker, pointing to a very pretty Asian girl. \"She did not appear on any of the tapes we found earlier. As you can see, she is Asian, of a Japanese father and Chinese mother. She's a Genetics major under Professor Mickelson. Her dorm mates said she was very quiet, did not socialize much, and was extremely devoted to her studies; by that, I mean she apparently did nothing but her studies. She's in her third year, but is working on a program where she gets her Bachelors and Masters degrees together in four years or so. I'll talk about her boyfriend in a moment.\"\n\n\"The third girl is Natalie Jenkins.\" said Parker. \"Biology major. Something of a political activist on Campus, but not one of the really rabid ones.\"\n\n\"At bottom left is Jason Stone, a.k.a. Jake Stone.\" said Parker. \"He's a Sophomore, a radiochemistry major, and is well known by a lot of people on Campus. Attends all the right parties and events, and has a reputation with other students and some female professors of being a real Campus stud. He and Annemarie Reynolds often attend functions together, and some people we talked to thought they were a couple. But Annemarie's apartment mates said it was more like a 'friends with benefits' situation, and they both dated other people.\"\n\n\"Next is Jeff Slake.\" said Parker. \"He and Natalie were considered to be dating. He was considered by some people that knew him to be a bit of a pervert; he liked watching porn and he liked watching others have sex. He's a chemistry major, which is how he knows Big Jake Stone, and he is often Stone's 'wingman' in social situations.\"\n\n\"Last is Danny Cantrell.\" said Parker. The picture at bottom right was of a nerdish character that reminded me of the inept prosecutor Dwayne Gregory. \"Cantrell is a Genetics major and works with Sherry Kim a good bit. People that know them say that they look like they are dating, but while Cantrell has a huge crush on Sherry, she apparently doesn't have any more feelings for him than friendship or just collaboration on projects from their classes. He switched his major to Genetics just a few months ago, and some believe it was because of Sherry.\"\n\n\"Has she ever complained to anyone, Campus Police, teachers, etc.,\" asked Teresa Croyle \"of being harassed by Danny?\"\n\n\"No ma'am.\" said Parker. \"The Campus Police has nothing on any of these six, except they occasionally catch Jason Stone having sex with a girl in the parking lot by the Track & Field area. And as an aside, Annemarie has never been caught with marijuana or illicit drugs anywhere except the authorized laboratories. And no one said that Sherry had a problem with Danny, and figure that he just has a puppy love crush on her.\"\n\n\"Had this group been out to this Point Hollow place before?\" asked Special Agent Webster.\n\n\"Yes sir,\" said Parker, \"but not as a full six-person group. They all knew each other to an extent, as Sherry knew Natalie and Annemarie fairly well and helped them with their biology studies from time to time. Jeff Slake was probably the least connected with this group.\"\n\n\"What did Dr. Mickelson say about the students?\" I asked.\n\n\"He knew Sherry the best, sir.\" said Parker. \"Said she was a straight-A, brilliant student. He said Danny was average at best, seemed to be doing just enough.\"\n\n\"What about the crime scene.\" said Jack Muscone. \"Were their cellphone still there?\"\n\n\"Yes sir.\" said Parker. \"They all had cellphones, and they all were found in the tents. The tent on the right or east side, had Annemarie and Jake's cellphones. The one on the left, or west side, had Slake and Jenkins's cellphones. The tent in the middle had Sherry Kim's, but her sleeping bag had not been laid out, it was rolled up. Danny's was half undone, as if it was being unrolled but had not been slept in.\"\n\n\"We've broken into all six cellphones.\" said Parker. \"Nothing out of the ordinary on any of them, no videos made while they were out there. None of them made nor received any phone calls. Stone received a text from a woman, asking if he was available that Friday evening, and he replied that he was on a field trip. Sherry Kim exchanged texts with a girlfriend, a Mai Ling, if I'm pronouncing that right, and she said she and her group were at the site and were fine. Our Mouseketeers downloaded all the information from all the phones into our evidence servers, and a copy has been sent to our FBI friends.\"\n\nI nodded, feeling eyes on me. I said \"I have one more question: Who took them out there? and who was supposed to pick them up?\"\n\n\"The story I have, sir, \"said Parker, \"is that the Biology School has a couple of vans and a jeep. One van and the jeep took everyone out. The drivers were a Ron Estes, a Biology grad student; and Ben Ellman, a biochemistry teacher seeking professorial status. Estes has black hair, fairly well built, shorter than Jake Stone. Ellman has very light brown hair, almost bleached blonde, and full beard and mustache. Fairly tall and thin.\"\n\n\"After dropping off the six,\" said Parker, \"Estes and Ellman went back and got another group of students, and they went down and camped by the River south of the nuclear power plant. They were collecting soil and water samples to see if the power plant was causing any radioactivity in the soil, and from what Professor Mickelson told me, the idea was to have a comparison between the two sets of samples.\"\n\n\"And before you ask, Commander,\" Parker said, \"Estes said the Power Plant group came back Monday morning, but no one went to get the six at Point Hollow. There's been some back and forth about 'I thought so-and-so was going to get them.' and so-and-so would say 'I thought you were going to pick them up.\"\n\n\"And Professor Mickelson said about that?\" I asked.\n\nParker's face fell. \"Uh, I didn't really ask him about that, sir. I'd already interviewed him when I talked to these other people.\"\n\n\"No biggie, we can always go back and ask the Nutty Professor Mickelson.\" I said. \"Good job getting all that, Parker. Make sure you forward everything you have to Special Agent Webster.\"\n\n\"And we appreciate what you've given us already.\" said Webster. \"I wish we'd get this much cooperation from other law enforcement agencies, particularly at the State level.\" I smiled at Webster's blatant shot at the SBI.\n\nI then stood up. \"I'll wrap up with the physical evidence report of what we have so far: the blue panties are believed to belong to Annemarie Reynolds. The DNA tests will take a few days to get back. Ditto that for all the other samples we found around the tents, in the sleeping bags. The blood that was found types to Natalie Jenkins, and tests confirm it is menstrual blood. There were no illicit drugs found in the tents or the belongings of the students. The drug lab we found in the basement is being analyzed, but it appears it's the standard crystal meth lab, and maybe some refined heroin in small quantities...\"\n\nPart 7 - Activism \n\n\"This is Priya Ajmani, Five Alive News in the Morning!\" shouted Priya at 8:00am, Thursday, April 28th. \"We're bringing you coverage of the Student Group that is organizing a search party for the missing University students!\"\n\nThere had been increasing Press coverage of the missing students. The FBI had had to ask for the TCPD's help to keep people off the Point Hollow property, and students and the Media took the opportunity to take cheap shots at the Police.\n\nPriya was talking to a young woman of Southeastern Asian descent (that's India and neighboring countries, by the way) who was shouting like a protestor: \"And we must organize and search for our fellow students who are missing, because the Town & County Police won't look for them!\"\n\nThe day before, there had been a Press conference that had turned very ugly and rancorous, as Priya led the charge to attack the TCPD for inaction. I finally took the podium and asked Priya directly \"Are you asking us to break the law and cross the State Line?... Are you saying we should cross the State Line, where we have no jurisdiction?...\" Priya wouldn't let up, accusing me of wanting the students to die. At that point, I asked officers to escort all KSTD personnel out of the Press Room, and pulled KSTD's press credentials... denying them access to Police Headquarters, all Precincts, and any property that belonged to the Town & County Police Department.",
        "Other Media outlets promised to give KSTD footage and help them out in any way, but I did not care about that. Priya was over the top, and she and her station would pay for it by being denied the access her competitors were getting. And needless to say, Bettina Wurtzburg and KXTC were getting the exclusive interviews and background information.\n\n\"So,\" said Cindy as we watched Priya's newscast, \"do you think this so-called search party is being ginned up by KSTD?\"\n\n\"Or by someone else.\" I said. \"But it's definitely being ginned up. And I have no problem with it... they can cross the State Line and search. We can't, not officially anyway.\"\n\n\"That's just such dirty pool.\" said Cindy. \"And after what you did to save her life. Damn, not a shred of gratitude.\"\n\n\"Well, that's understandable.\" I said. \"Priya has to show she's not 'beholden' to me for saving her... and she does that by going the other way and actually attacking me. I also suspect she's being guided, directed, and ordered by Katherine Woodburn and others to do what she's doing.\"\n\n\"Katherine Woodburn is bound by her agreement with the Feds to not have operational involvement with Media companies anymore.\" Cindy said. \"Is there something we can do along those lines?\"\n\n\"Geez, Cindy.\" I said. \"We've got six missing people out there, the aftermath of the Elizabeth Women's Group to clean up, Thomas P. Cook's corruption coming to light, promotions within the TCPD, the Consultant of Crime out there poised like a rattlesnake to strike at us, and you want to start a fight with the most crooked and most ambitious politician in the State?\" Cindy looked hard at me until I grinned at her.\n\n\"So what do we do?\" Cindy asked, after the requisite waiving of the blue crowbar at me.\n\n\"We wait.\" I said. \"And pray.\"\n\n* * * * * * * * * * * * * * * *\n\nThe KSTD news footage showed students looking for the missing people. They were going through woods near the road that led north, as if the bodies had been dumped near the road. It was just for show and I strongly suspected it would be of no value.\n\nAnd sure enough, it was the FBI that found something. I got a call about 2:00pm that a small cabin had been found hidden in the woods, nearly four miles north of the State line, well camouflaged. Two of the women had been found: Annemarie Reynolds and Sherry Kim. They were being life-flighted to University Hospital.\n\n\"There's still no sign of the others.\" Jack Muscone told me at the Hospital. There was some blood and vomit on the floor at the foot of the beds, and it doesn't type to either of the women. We'll run more tests, including DNA markers, and see if it's any of the others.\"\n\nDr. Morgan and Dr. Laura Fredricson came out to give us the report. It was not good.\n\n\"Both women were severely dehydrated.\" said Dr. Morgan. \"Twenty-four more hours and they'd have been dead.\"\n\n\"In addition,\" said my wife, \"both women were repeatedly raped over the course of several days. Sherry Kim had particularly damaging injuries to her vagina and anus... I think she might have been a virgin, and the violent penetrations caused severe abrasions. They really worked her over. Annemarie's injuries are not nearly as bad as Sherry's.\"\n\n\"I take it we won't be talking to them for a while.\" I said.\n\n\"We couldn't even sedate them because they're so dehydrated; the drugs would be too strong.\" said Dr. Morgan. \"We've got them on IVs right now. Once they get to a safe level, we'll mildly sedate them while we put more saline solution and nutrients into their bodies. Then we'll slowly bring them out, and Dr. Fredricson will be here for that... I suspect her tremendous psychiatric skills will be needed.\"\n\n* * * * * * * * * * * * * * * *\n\n7:30pm. I was at the Mountain Nest with the kids and dogs while Laura was at the Hospital. Cindy and Teresa came in, having phoned me that they were outside. Carole was happy to see them; Bowser was a bit more skeptical. Buddy went right over to Teresa.\n\n\"Buddy looks so healthy now.\" Teresa said. \"Thank you for keeping him, Don.\"\n\n\"I love having him as much as I love having Bowser.\" I said.\n\n\"Bowser is a good dog.\" said Carole, as if on cue.\n\n\"What about Buddy, Carole?\" Teresa asked.\n\n\"Bud-dy is a good dog, too.\" Carole said. We were all proud of her. \n\nIt was a bit early, but I announced bedtime, and had help getting the kids ready. Once Cindy got Carole to go to sleep, and once the dogs were settled into their baskets, we adults headed back downstairs.\n\n\"Any word on the other missing students?\" I asked.\n\n\"No, sir.\" said Teresa. \"The FBI brought in human scent dogs and cadaver dogs to the place they found the women. So far, they've found nothing. There's trail leading by there, big enough for a motorcycle or four-wheeler to use, so the FBI thinks that's how people got in and out of there.\"\n\n\"What do you think this is, Don?\" asked Cindy.\n\n\"I don't know.\" I said. \"Probably the drug perps that set up the meth lab. But there are some things that are bothering me... strangenesses...\" Cindy and Teresa looked at each other, then back to me.\n\n\"For example,\" I said as they were about to ask, \"I still don't know who was supposed to pick them up. I don't think they were going to hike back in, as they had those coolers of samples to lug in, and they really didn't have backpacking equipment to transport their gear. But no one seems to know just what the plan was to go get them, and who was to do it. I followed up with phone calls to Professor Mickelson and the other biology students. None of them would admit to knowing anything. Ben Ellman apparently left for a conference yesterday in Tennessee.\"\n\n\"And what's more,\" I said, \"I am pretty sure they expected to come back Sunday. The ice was slowly melting in those coolers, and if they took it out fresh on Friday, I'd expect it to be melted by Sunday... probably by Saturday night.\"\n\n\"Who were the two people that contacted Dr. Mickelson about the people going missing?\" asked Teresa.\n\n\"One of them was Estes, who was one of those that drove them out.\" I said. \"And that bothers me... he could've gone to check on them if he was worried; he has keys to the vans. The other person was one of Sherry Kim's Asian girlfriends.\"\n\n\"What did those activist searchers say when they were told two were found nowhere near where they were looking?\" Cindy asked, and I noticed the disdain in her voice.\n\n\"I don't know.\" I said. \"KXTC mysteriously got a tip about the two women, and KSTD was left in the dust on it.\"\n\n\"For all your efforts, Don,\" said Cindy, \"it's not working. KXTC gave KSTD their footage of the life-flight taking off. By the way, Scott Peterson, our Public Relations Officer, may be talking with KSTD behind your back. Don't ask me how I know that.\"\n\n\"I don't need to.\" I said. Acolytes of 'The Vision' were everywhere, including the offices of KXTC and KSTD. And they would tell their beloved great leader's daughter if they found out about this treasonous communication.\n\n\"So, ladies... 'teachable moment'.\" I said. \"What would you do about Peterson if you were me?\"\n\n\"Get the evidence of their communication, and then fire him.\" Cindy said. Teresa was looking at me with more of a gleam in her eye.\n\n\"I would say that,\" Teresa said, \"but I have a feeling you have another idea.\"\n\n\"And you don't need a crowbar for that good feeling, or thinking.\" I said. \"Yes... when we know we have someone like that in our midst... I will see if I can use him to my advantage.\" The women nodded, understanding my tactical idea.\n\n\"And one more thing.\" I said. \"We were pretty much going to put Peterson in the 3d Precinct Captain slot. But that would... waste this opportunity, so sorry for him...\"\n\nPart 8 - Treachery \n\nThursday, April 28th. As I talked with Cindy and Teresa, other events were transpiring in the City.\n\n\"Why should I trust you, Fat Boy?\" said the criminal, a tall, lean black man, lean to the point of near emaciation.\n\n\"Look, you give me those Spics in the 8th Street Gang, and my guys will let you have exclusive access to the territory.\" said SBI Agent Leonard 'Sergeant' Sharples. \"But you better show some respect, and call me 'Sergeant'. That would promote trust... and a spirit of cooperation.\"\n\nThe other smirked, then laughed shortly. \"You outta yo mind, Fat Boy. Like I said... it ain't about you trustin' me... it's about me trustin' you.\"\n\n\"Tell ya what.\" said Sharples, his drawling voice sardonic. \"I got your boy 'Skinnydip' in the van over there. I'll hand him over to you as a token of our new friendship. With the cash to make the buy from the 8th Street Boys. Then you step out of the way, leave the drugs, we come in and catch them with both.\"\n\n\"Bring Skinnydip out here.\" said the man. Sharples pointed back at the van, where two rough looking men brought another young black man out of the van and pushed him over towards Sharples and his counterpart.\n\n\"All right, Fat Boy.\" said the man, taking the briefcase of cash from Skinnydip, knowing it'd be marked and maybe tagged with a tracking device. \"I was told not to trust you. It better go down smooth, our I'll put a price on your fat head.\"\n\n\"Yeah, yeah, cut the theatrics.\" said Sharples, hypocritically. \"Go on up there now. Our team is watching over you.\"\n\n* * * * * * * * * * * * * * * *\n\n\"All of a sudden...\" said the leader of the 8th Street Gang, a Latino man wearing a white wife-beater t-shirt and smelling of stale beer as he smoked his cigar, \"... you have the money to buy my drugs, so you can distribute them to your niggers in the Railyards. Now why am I have a lot of trouble believing that... a laaaahhht of trouble...\"\n\n\"Listen, man,\" said the emaciated black man, \"you wanna do business, or not? I just scored this loot and my people want their hits. And then I'll have more money to buy more from you.\"\n\n\"I know how the business works, 'Chubby'.\" said the Latino man. \"Okay, Pedro, let's give the man his coke.\"\n\n'Chubby' the emaciated man did the routine checks of the quality of the drugs. Real cocaine, not washing detergent.\n\nAs the men were about to go their separate ways, suddenly eight cars hurtled into the alley. Well-armed and -armored men rushed in, the letters \"SBI\" on the backs of their jackets. Many wore masks to conceal their identities as NTF agents. They screamed for the 8th Street gangsters to get on the ground.\n\n\"I got a couple more for you.\" said Sharples, coming up to them. \"Couple of Darkies. Tried to run.\" The emaciated 'Chubby' and his partner 'Skinnydip' were roughly led up, both in handcuffs behind their backs.\n\n\"Good job, Sergeant.\" said the group leader as he came up. It was Dick Ferrell.\n\nJust then four City Police cars came rushing in, their red and blue lights flashing. The leader got out of his car.\n\n\"What the fuck is going on here?\" he demanded to know.\n\n\"SBI.\" said Ferrell. \"This is a drug bust.\"\n\n\"Not in the City, you shithead!\" yelled the City Lieutenant. \"This is our jurisdiction and the SBI is to stay the hell out. Boys, disarm and arrest the SBI agents!\"\n\nSuddenly, he found himself surrounded by another two large groups of SWAT-like SBI Agents, ready for combat and ready to kill him and his fellow City Officers. Ferrell came up to him.\n\n\"Listen, you little local shit eater.\" Ferrell said. \"The SBI has jurisdiction over every inch of this State. WE tell YOU what to do, not the other way around. You obey MY orders, or you go to jail for disobeying the orders of an SBI Agent. We are sovereign over you, and if think otherwise, you're going to find out the hard way... as will the rest of this State. And when Jack Lewis is Governor... then the City Police won't exist after we dig up your asses for corruption. Oh... and just to make a point.\"\n\nFerrell turned and went up to one of the arrested 8th Street Gang members. \"Take his cuffs off.\" Ferrell said. \"Everyone take a good look at this guy. He's a mole, an undercover City cop worming his way into your gang. You know him by the name 'Domingo', but his real name is Vasco Rodriguez of the City Police. Take a good look at him!\"\n\nThe gang looked at Rodriguez with hatred. Ferrell said \"Get out of here, Rodriguez. Go back home with your tail between your legs with your other worthless locals.\"\n\n\"You'll pay for this.\" said Rodriguez. Suddenly Ferrell drew his weapon and put it to Rodriguez's head.\n\n\"What did you say, you fucking piece of shit?\" Ferrell snarled. \"I should blow your fucking head off right now.\" Ferrell then lowered his weapon. \"But I think I'll let the 8th Street Boys do it, when they make bail. They can look up your home address, know where your pretty, fertile wife and daughter are, and they'll do the right things. They'll make sure your wife and daughter are... properly satisfied.\" The SBI Agents laughed, laughs full of menace.\n\nThe gangsters were hauled into vans and driven down to Westphalia for processing. The two black men stared at Sharples, unappeasable hatred in their eyes. He just looked back at them and smirked...\n\nTo be continued."
    ],
    "authorname": "WifeWatchman",
    "tags": [
        "mystery",
        "crime drama",
        "police drama",
        "haunted"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/point-hollow-ch-01"
}