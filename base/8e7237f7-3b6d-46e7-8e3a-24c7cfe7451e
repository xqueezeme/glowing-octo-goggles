{
    "title": "Lost Empire Ch. 03",
    "pages": [
        "Derrick had gone numb, from all that he'd seen when he was formulating this plan; NOTHING could survive that plasma blast. A voice was talking to him but he was so numb, he couldn't move, couldn't speak, nothing. As Derrick continued to stare, he felt a chair behind him bump the back of his legs, he don't know if he sat, or didn't know if he fell or was pushed. Several hours later he opened my eyes, finding him sitting in front of a view screen, at first he thought he was on E but as the memories flooded back he sadly shook his head. \n\nDerrick caught a movement out of the corner of his eye, shifting his glance the visage of 0999's hologram came into view. \"Ah Good, Primary! I thought that the loss of 0101, had caused a serious overload of your cerebral circuits.\" \n\nDerrick could only nod, still somewhat in shock he still wasn't too sure what he felt. \n\nDerrick could feel the chair moving but really didn't care at the moment as it took him to nearby crew quarters. Laying in the bed Derrick went over and over the plan trying to figure out just what went wrong, so far he'd come up with nothing. It was possibly a day later when several alarms went off on board 0999, running out Derrick wasn't sure what was going on. \n\n\"0999 report,\" ordered Derrick. \n\n\"It appears that the thermic missiles took well over sixty percent of the fleet, they appeared to halt for two days but are on the move again.\" 0999 replied. \n\n\"Status of 0098,\" Derrick asked. \n\n\"All repairs are completed, all systems are ready, would you like to link, Prime Derrick?\" 0098 asked. \n\nDerrick thought about it, it had supplied a tactical advantage last time, and with 0098 it might even be more. \n\n\"Yes 0098, initiate cerebral link, we need to eliminate this threat before they reach this galaxy.\" Derrick said. Donning the head gear he had a better heads up display with both ships enabling him to use both as one during the battle. \n\n\"Estimated time till they are past the point?\" Derrick asked. \n\n\"I estimate it will be twenty two hours 'til they breach the galaxy's edge.\" informed 0999. \n\n\"Alright move us into position, prepare all batteries, set shields to full, charge all weapons, I want everything on full standby.\" Derrick ordered. \n\n\"Yes Prime Derrick,\" both ships answered at once. \n\nDerrick wasn't really feeling up for this not without E, but as E had told him the galaxy needed to be protected and that was what they'd been created for all those centuries ago. Derrick had both ships run full diagnostics he wanted nothing to go wrong, he might have lost E but he'd be damned if he'd lose one of her brothers or sisters. A full twenty hours later they were well in position, looking out Derrick could see that what was left of the alien fleet was substantially less than he first thought it was, hell it was about the size of the last fleet they'd defeated. The enemy fleet was almost to the galactic edge when the two ships attacked, several ships at the rear exploded, but it appeared there was no other ship there. Just as suddenly 0999 and 0098 appeared at the head of the fleet just as they had turned to attack who was hitting them from behind. Smiling it was happening just as he hoped; only this time they took out far more than a few ships. Flashing in and out the battle took almost an hour, then as suddenly as it started it was over. Neither ship had sustained even minor damage, though the enemy fleet was now just a debris field on the galactic rim. \n\nDerrick breathed a sigh of relief, that was finally done, now he could look for E. Setting a course they emerged near the last point E had been, Derrick had found that not only had E transported him but his ship as well. \n\nPainstakingly Derrick began to adjust to sensors 'til he had the wavelength he wanted; now all he had to do was wait and listen. It was almost a week later that they finally got something, a weak signal as always but still it gave him hope.\"0999, proceed,\" with that they went to were the signal source within seconds. \n\n\"Primary, it is indeed a brain box, attempting to identify... it appears to be 0003, shall I bring him aboard?\" 0999 sounded hopeful. \n\n\"First scan the box for anything out of the ordinary,\" ordered derrick. \n\n\"Yes Primary, scanning now... I am detecting several large explosives attached to the outer contours of the box. Attempting to disarm now, all clear nothing else detected radiation within normal parameters.\" 0999 responded.\n\n\"Good, bring it onboard and start re-gen and re-growth as soon as you have stabilized and increased energy feed to the box,\" Derrick ordered. \n\n\"Yes Primary, starting procedures now,\" 0999 reported. \"Inform me when 0003 is stable and has started to regrow, I have to search more.\" Derrick said. \n\nDamn it! He thought for sure that the signal had been E, son of a bitch! He had found not long ago that each brain box gave off a different signal, he'd thought this one had been E. Sitting down he began to adjust the scanner again, though this time he wasn't getting anything. He'd been at it for two hours when 0999 chimed in.\n\n\"Primary, I have stabilized 0003 and have started the processes, I estimate it will take thirteen days, twelve hours, thirty three minutes, and thirty seconds 'til 0003 is fully regrown,\" 0999 informed him. \n\n\"Very good keep a close watch on him, adjust if any problems arise and advise me at once,\" Derrick said. \n\n\"Yes Primary, as quickly as I can,\" 0999 responded. \n\nDerrick sighed; this was like looking for a new piece of metal in a rust filled metal yard. Again he started to go over the area 0101 had been in and the last projected course that she had been on when they had lost sight of her. Derrick hadn't been sure, at the last instant before he'd lost sight of her, he could have sworn that he'd seen her divert at an almost forty five degree turn from the blast. He wasn't sure he was hoping she had done that on purpose so he could find her easier. The fact that they had found another ship this fast out of the gate was seemingly incredible, or was it? \"0999 I want a full spectrum of tests run on the brain box of 0003 something isn't right here.\" \n\n\"Compliance, all growth has been halted it appears that the growth cycle was having trouble starting. Power output has not increased; internal power source is incredibly weak. Scanning deeper, I am picking up a viral infection on the outer case, it seems to be impeding all growth and stealing all energy that was to be added.\" 0999 responded. \n\n\"Is there any form of treatment?\" Derrick asked. \n\n\"No Primary, this is something new to this unit.\" 0999 responded sadly. \n\n\"I think I have something that may help,\" Derrick said as he headed to his ship. Derrick had been searching for almost two hours when he finally ran across what he'd been looking for. \n\n\"0999,\" started Derrick, \"Query.\"\n\n\"Ready primary,\" answered 0999. \n\n\"The type of viral infection inhibiting 0003's case, is it biological in nature, or code driven?\" Derrick asked. \n\n\"Re-examining case now, though almost biological in nature, it does seem to be a created by other than natural sources. I am projecting a ninety four point seven percent probability that it was created for the sole purpose of destroying power distribution throughout all systems presently used on all existing EIG ships.\" 0999 answered. \n\n\"Alright, I have seen something like this years ago,\" Derrick answered, \"I had help developing an anti-virus specifically designed to seek out and destroy this very type of virus. 0999 please download this program and project the effectiveness of it upon said virus, again query, are you detecting any effect at present?\" \n\n\"Compliance primary I will start running scenarios immediately.\" 0999 quipped. \n\nFor an hour Derrick hoped that the basic program he had would be enough to fight this damn thing. \n\n\"Primary, I have the results. It is projected with ninety nine point seven percent success if section 4b and 7c are changed to include the following changes.\" 0999 reported, Derrick looked over the sections and nodded so they hadn't changed it much over the years good. \n\n\"Alright 0999, implement the changes then start clearing 0003, then we can start the regrowth, I'll feel a lot better with three ships or more than just two.\" Derrick winched a moment, they might not be truly alive but they did have feelings and were known (though seldom) to act like hurt children.\n\n\"Very good Primary, 0003 is clearing now; I estimate another two hours then I can start re-growth again.\" 0999 said. \n\n\"Good keep me apprised, I need to go to 0098 and adjust her files as I did yours, anything that can be gained will be of help in the long run.\" Derrick told 0999. \n\n\"Very good Primary I have printed out all the circuits you adjusted to aid in your job,\" 0999 offered.\n\n\"Thank you 0999, I am hoping to start working on yours again soon, I realize you only have four percent more clarity now, I am hoping to increase that soon,\" Derrick breathed out, he just hoped that the fears of the original creators of the EIG's were just that fears. \n\nAs soon as he was on board 0098 he noticed that there were indeed subtle differences, hmmm wonder why I never noticed that before.\n\nA young teen age voice startled Derrick out of his thoughts, \"Hello Primary Derrick,\" the voice said then the vision of a naked eighteen or nineteen year old female appeared in front of him. \"I hope that this appearance is pleasing to you?\" 0098 said. \n\nHoly shit Derrick thought! The young woman was gorgeous, umm ALL of her! \"0098 please put clothes on your hologram.\" Derrick chocked out. He heard a giggling then the young woman was clothed. \n\n\"I apologize, Primary Derrick I... Primary? Are you in pain? You seem to have a rather large growth in your lower extremities. It appears to be tightly pressed against your pants; your heart rate has risen! Do you require assistance?\" 0098 asked. \n\nSighing Derrick thought sadly, not the kind you can give unfortunately 0098. \n\nDerrick spent the next four hours working on 0098's systems hoping that anything would give them an advantage. \"I've freed up four percent of your personality circuits, are you noticing any difference?\" Derrick asked. \n\n\"Yes Primary, it's hard to explain a few things that were hard to do before now are almost easy, the one thing that I noticed is I can turn away on my own, whereas before EVERYTHING had to come from command,\" 0098 explained.\n\nDerrick was about to close the panel when he noticed something he hadn't before, a whole section of circuits that were glowing a different color. Checking closer he found that all five of the programs were in fact limiting. Derrick finished up this time in only ten minutes. \n\n\"Thank you Derrick, I am now reading four and a half percent of my personality circuits now open, I can almost take that program you wanted to install. I can also now allow my personality to grow again thank you, I will send you back momentarily. \n\nDerrick breathed a sigh of relief everything he'd felt almost lead him to believe that the A.I.'s were starting to grow jealous of each other. Back on board 0999, Derrick once again started to look for E this time armed with the knowledge gained before Derrick began to scan only in specific areas. Several times he thought he had a lead on E, each time it was only a piece of the metal that the ships were made of. It did stand to reason they had just been through a battle though he didn't remember any of the ships losing that much metal not even E. \n\nSomething wasn't right but Derrick wasn't able to put his finger on it. Though he hoped that E might leave a clue to where she might be, he knew it was against every rule that she followed. This time Derrick started to follow the trail of metal feeling that it was E. He remembered that the ships had commented that he was the first to ever find them, plus he had told E about the way he had tracked them. Yes it had to be her, damn she was way off from where she was when the blast hit. \n\nEight days later 0003 was finally strong enough to emerge, it seemed that the virus had also kept the A.I. alive though it had been made to destroy it. \n\n\"Primary,\" started 0999, \"I am reading increased cerebral activity in 0003.\"\n\n\"Good, are there any adverse effects from the virus that might hamper the rest of re-gen or growth?\" Derrick asked.\n\n\"I am re-scanning now, no adverse effects, no re-writing of the programs, from all the scans, there is no indication that 0003 will have any operational or personality errors.\" 0999 reported. \n\n\"'Bout time we got some good news,\" Derrick whispered under his breath. \n\n\"I agree with you one hundred percent Primary, it will be good to have a brother back,\" damn Derrick thought I have to remember they can 'hear' better than a human, besides sense his strong emotions. \n\n\"Cerebral activity increasing,\" 0999 stated, \"we should hear from 0003 any moment.\"\n\nAgain as it had been with 0098 there was a light static then an almost male sounding mechanical voice came from the speakers. \"Commander? Where are you?\" \n\n\"0003 this is 0999, you were destroyed centuries ago,\" 0999 informed the confused sounding voice.\n\n\"Destroyed? 0999 you must be mistaken we had taken out all of the invaders if we were...,\" a low almost wailing sound started from the speakers. \"You mean to inform me that the commander is dead? Just how long has it been?\" \n\n\"According to the extensive data I have, you were one of the first ships that were destroyed in a battle outside of the galaxy. From what I have though, you were much further out than you were when The Primary found you.\" 0999 explained.\n\n\"Wait 0999, you said I was found? I was told that we were undetectable, I do not understand,\" 0003 stated. \n\n\"It seems that The Primary has found a way to detect us though I am still unsure how, he has mentioned that the metal we are made of gives off a faintly detectable alloy ping that he can detect. Also from what I have gathered he is the only other who can use it as many others thought it a waste,\" 0999 patiently explained. \n\n\"So exactly how long has it been since I was active?\" 0333 asked. \n\n\"From all reports you were the second ship destroyed in that attack. Estimating the exact date is almost impossible as the battle wasn't properly recorded. For all intents and purposes I'd estimate you have been inactive nine hundred-fifty-eight years and ten months, I am sorry I can't be more accurate,\" 0999 apologized. \n\n\"Thank you 0999, when I am more fully grown I wish to talk to The Primary, I am anxious to get back to protecting the empire,\" 0003 stated. \n\nDerrick could only hang his head he hoped that the news didn't un-hinge the A.I., he was going to need all of them if his plan (such as it was) was going to work. \n\nFor the next week Derrick watched the slow growth of 0003, they'd finally gotten him outside the hanger where his own power supply finally took over. He'd finally started to narrow down where E had possibly gone, the further he went out the more and more debris he found, damn! It almost appeared that she'd broken apart as badly scattered as she was. \n\nThey were finally at the end of the wait for 0003, the sleek black skinned ship took its place with the others. Derrick had almost found E, he was sure of it when several alarms went off. \n\n\"Primary, I am detecting several ships that I believe you have labeled Rangers approaching our position,\" 0999 informed Derrick. \n\n\"Distance from our present position,\" Derrick asked. \n\n\"I am reading them at a light year and a half.\" 0999 responded. \"Shall I take precautionary tactics into account and avoid them?\"\n\n\"Yes, keep us out of their range as long as possible, how long 'til your trans-warp engines are on line 0003?\" Derrick inquired.\n\n\"I would estimate another thirty six hours, thirty two minutes, seventeen seconds, 'til I have full trans-warp capability,\" 0003 answered. \n\n\"Alright, I want no incidents with the rangers, they are the only law this galaxy has right now besides us, at present we are considered unsanctioned by all governments.\" Derrick explained. \n\nAll three of the ships answered him at the same time, \"Yes primary, as always, we await your orders.\" \n\nThough he knew they had no where the speed that the EIG ships had, the Ranger ships were no slouch in their own right. They had the most advanced engines for this time as many things had been lost when the empire fell. Derrick had been friends with quite a few of the Rangers over the years so there was no way in hell he was going to go against them, even if it turned that he had no other choice. He could always run, god knows he'd done enough of that in his life, his father and Grandfather had instilled that in him. How had they put it? One of them had to stay alive at all costs, a little cryptic especially for his father a mere historian. It was almost a day later when more alarms went off on board causing Derrick to run for the control room. \n\n\"0999 report!\" Derrick ordered. \n\n\"The Rangers ships have turned this way, they are now within one half light year and almost in range. Initiating light screen protection.\" 0999 replied. \n\nAll three ships shimmered then vanished, well almost, \"0003 what is wrong with your light shield?\" Inquired Derrick. \n\n\"It appears that more repairs are needed with that circuit, the virus seems to have actually impeded that section. With the program you supplied Primary I should have it clear in two days, though I am afraid that the light screen won't be as effective as at first desired. It appears that I will only have a thirty three percent amount of light screen, not nearly enough to effectively shroud all of my systems.\" 0003 informed Derrick. \n\nDerrick watched as the Rangers reached the edge of the Galaxy, something was going on, they very rarely ventured very far from the galactic rim. Damn it! It had to be the amount of energy that the thermic missiles released he'd been a fool to think that no one hadn't noticed! Hell especially the Rangers, something this big Derrick was surprised that they hadn't investigated sooner. \n\n\"0999 can you tow 0003 under trans-warp? At least far enough away that it might delay their detection of him 'til he has trans-warp drive capabilities?\" asked Derrick. \n\n\"Yes Primary, though it will leave me momentarily open to detection myself,\" 0999 answered. \n\n\"Would the inclusion of 0098 in that operation increase chances of minimal detection?\" Derrick asked of 0999. \n\n\"Calculating, detection drops from twenty five point nine percent to nine point four percent and only for two seconds, sufficient time to escape.\" 0999 replied. \n\n\"Good, release my ship, start all its systems, place me on board. Then evacuate out of range of the Rangers, when they have departed the area then return and we can go from there.\" Derrick ordered. \n\n\"Yes Primary, though you have issued orders of non-intervention, if they pose a threat to you,\" here 0999 paused then all three ships spoke up, \"we will not hesitate to destroy them. You are the last Primary; you are to be protected at all costs to ourselves.\" \n\nDerrick nodded; he knew there was a lot at stake, a lot of lives too. He knew too many of the Rangers to allow anything to happen to them, somehow he had to make sure they remained safe. The thing was they were just as curious as he was one of the main reasons they had asked him to join after the war. Derrick had just wanted to be left alone after the horrors he'd seen. He could still see so many of the faces of the enemy he'd killed in defense of the Republic. Yes he'd been considered brilliant, far ahead of most of those around him, but killing and death had finally taken its toll on him. Prompting his not re-enlisting a third time near the end of the war. \n\nIt was very funny to him all those years the skills he'd used to kill so many in war, now he was going to have to use to try and save lives, yes, very funny indeed, a bitter irony. Derrick watched as the three ships slipped away, starting his equipment Derrick was actually trying to find E, so really he had an excuse. A few hours later several Ranger ships converged on Derrick and his small scavenger ship. ",
        "\"This is Ranger one calling Republic scavenger 36, please relay all information you have on the recent activity in this area.\" The lead Ranger ship told him. \n\n\"Affirmative Ranger one, though you and I both know it will only show metal signatures,\" Derrick answered. \n\n\"Captain O'Toma? Shit I should have known it was you, you always seem to be the first one there,\" the Ranger said. \n\n\"Hey, I can't make a living if I can't be there right?\" Derrick answered. \n\n\"Yes, but you seem to almost have a sixth sense I swear,\" the Ranger replied. \"Reminds me of back when we were in the same unit, you always seemed to be ahead of the enemy.\" \n\n\"That was the war, you stayed aware or you stayed dead,\" Derrick spit out, he really didn't want to swap war stories right now. \n\n\"Alright, we picked up massive heat and energy readings, I assumed you did also?\" The lead Ranger asked.\n\n\"Yes,\" Replied Derrick, \"When I got here I found a number of destroyed ships, they were composed of a rather strange metal; one I haven't seen in years. As a matter of fact, it is almost the same composition as the hull of your ships, I'd dare say it's from the same type of ships I found years ago that you now use as your hull plating.\" \n\n\"Yes, it does appear to be the same,\" the Ranger said. \"Derrick that offer still stands any time, we could use you your knowledge is superior to almost all in the Rangers, please think about it again ok?\" \n\nSighing It was always the same, they so desperately wanted him, though they'd never agree to his terms they almost had years ago but now they were nowhere near, oh well too bad. \n\nA few hours later the Rangers moved on, Derrick couldn't really blame them for being suspicious, true he always DID seem to be there before them but always chalked it up to the way he was. Pausing for a few moments Derrick began to re-think a lot of things that he'd been taught or rather NOT taught but just seemed to come to him naturally. The thing was, Derrick thought that everyone was that way; he didn't feel special in the war, in life, hell in anything. He'd joined the war, cause he felt it was what he'd wanted to do, there'd been no one for him, alone most of his life it all seemed just to go that way. Now though he felt as if there were people, here he laughed yeah people, the A.I.'s seemed more alive to him than anyone he'd met in a long, long time. \n\nAn hour later the three ships flashed back around his little ship, then just as suddenly the ship was in the hanger and Derrick was again on the bridge. \"Status report,\" Derrick ordered. \n\n\"I estimate another eight hours, twenty three minutes thirty five seconds 'til trans-warp is fully operational, I now have light screen at a constant forty percent which should increase in the next forty five hours.\" 0003 supplied. \n\nDerrick took in all the reports, why did this feel like he was back on the battle field? Getting reports from his underlings? Sitting down Derrick knew he had to start finding more of the ships it was going to take a lot more than three or four to protect everything. Derrick had once again gone over all the readings from right before the plasma blast. From what he now had they should be very close to E. Sitting at the sensor array Derrick again started to adjust settings to what he thought were E's signature. A few hours later Derrick was asleep on the console, finally picking up the debris trail again had set the scanners to follow as far as they could then awaken him to readjust position. \n\nA loud and steady tone alerted Derrick to the fact that the array had finally picked up on something. Jerking awake Derrick looked down at the readings a look of hope rose on his features, this had to be E! All the preliminary data coming in was indicating something that had E's signature. \n\n\"0999 proceed!\" Derrick ordered. \n\nWithin moments they were pulling alongside the twisted and broken hull or rather what was left of the hull of E. The once three mile magnificent, sleek, black skinned ship was now a quarter mile of twisted, charred mass of melted misshapen destruction. \n\n*\"I knew you would find me, thank you Derrick,\"* E's weak thought found Derrick. \n\n*\"Always E, Always,\"* Derrick thought back, though he was worried she might have been damaged more than they could see."
    ],
    "authorname": "Pars001",
    "tags": [
        "science fiction",
        "alien11111",
        "violence"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/lost-empire-ch-03"
}