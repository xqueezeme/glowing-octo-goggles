{
    "title": "The Morrisons Ch. 27",
    "pages": [
        "FIRST: I want to thank all the readers who sent me messages over the past - almost 2 years, wishing me well and asking for more of The Morrisons. I am happy to say that things are a bit better, (health wise) but I won't be able to publish chapters like I used to. I hope to have another chapter done soon so you won't be left hanging because of the ending of this chapter.\n\n~ ~ ~ ~ ~ ~ ~ ~\n\n**Author's Note: The Morrisons is a continuing story where each chapter builds on previous chapters. If this is your first encounter with The Morrisons, I'd like to suggest you read the previous chapters prior to reading this one. Please enjoy!\n\n~ ~ ~ ~ ~ ~ ~ ~\n\n**PLEASE NOTE: <br ><br >**Before you read this chapter, be advised that it contains very graphic depictions of raw sex and/or love-making between two or more consenting people. IF such depictions upset you or make you lose sleep, PLEASE don't read any further. You may not enjoy reading a particular portion of the story; that doesn't mean other readers will dislike that same portion. It's a different-strokes-for-different-folks kind of story.\n\nFor the sophisticated intellectuals who read incest/taboo stories on Literotica expecting to find professional authors, including perfect punctuation, spelling, dialog, characters with only sophisticated actions, etc., please pass this chapter by, you won't find that here! We do our best to correct all typos and spelling errors but some may still slip past us.\n\nI want to thank Fat_Dad for editing chapter 27 of \"The Morrisons.\" Fat_Dad contributed the section of this chapter where Marsh, Becca, Ted and Mary take the emergency flight home. (oops, I didn't mean to say that) Fat_Dad knows more about the assets of Turner Company than I do. I believe he gave us a wonderful abbreviated overview for this chapter but there will be more information in his chapter.\n\nI appreciate hearing from readers, and I want to thank all those who took time to send me a public or private message. However, please don't leave a derogatory comment, if you willingly overlook THIS WARNING.\n\n~ ~ ~ ~ ~ ~ ~ ~\n\nFor the record: All characters engaging in sexual activities are of legal age!<br >\n\n~ ~ ~ ~ ~ ~ ~ ~\n\n****************************\n\nChapter 27\n\nThe night was way too short for almost all of the visitors and some of the resort residents and staff of the private North shore Hawaiian resort. It had been a long day and night filled with many pleasures and life changing events. If there were any complaints about the previous day's activities, they weren't being shared.\n\nMy internal alarm clock didn't let me sleep in, waking me up at my normal time based on my hometown time zone. The first thing that got my attention was my morning wood pointing skyward reminding me my bladder was full and needed to be emptied.\n\nThe only problem I had with taking care of business was the fact that Beth had her arm across my chest and her leg draped across mine. Her lovely round tits were mashed against the side of my chest and her pubic mound was mashed against the side of my thigh. Oh, I am a very lucky man.\n\nI tried to lie still but my bladder told me if I didn't get to the bathroom soon, there would be a puddle to clean up on the bed. However, with the way Beth was positioned, there was no way to escape without waking her. Finally I reached up and lifted her arm and scooted my upper body sideways. Beth's eyes opened and the first words out of her mouth was, \"If you wanted to get up sweetheart, all you had to do was ask me.\"\n\n\"But,\" I said while looking at her bright eyes and shining smile, \"I thought you were sleeping and I didn't want to wake you.\"\n\n\"See what thought got you? I've been awake for almost a half hour. I have been enjoying myself being this close to you, while you slept.\"\n\nShe held up her left hand and looked at the wedding ring before she said, \"Dan Morrison, you are mine. I love to be near you, I love to snuggle up next to you and most of all, and I'm willing to do anything to make you happy. This marriage thing .... it .... ain't so bad after all.\"\n\n\"If I don't get to the bathroom soon, I'll piss on you. Then you'll be mad at me and we'll have our first fight in less than twenty-four hours, after we tied the knot.\"\n\n\"That's really kinky honey, I've heard about golden showers but I'm not sure I want to experience one. Hurry up, go to the bathroom and I'll be right behind you. I want to hold your cock while you pee.\"\n\nI rolled over until I was at the side of the bed and then kind of slid off until my feet hit the floor. I looked over my shoulder and Beth was right behind me as promised. I stopped and held out my hand to her. The second she had both feet on the floor she took off running. When I walked into the bathroom she was sitting on the toilet and tearing off a piece of toilet paper. \"Would you do me a favor and wipe my pussy, when I finish peeing?\"\n\n\"You know I'll do almost anything to assist my girls.\" I said.\n\nWhen Beth finished I tenderly wiped her pussy dry as I admired her beauty. When she started to stand up it stopped my daydream and I stood up with her. She reached out and wrapped her hand around my cock as I stepped up to the toilet. She is almost an expert at aiming my cock at the toilet bowl. I had to pee so bad that it only took less than a second for the first squirt of urine to reach the end of my cock and blast out. I think I pissed a gallon while Beth moved my cock around and said, \"Look I can spell your name as you pee.\"\n\nI watched as she was able to get the \"el\" in Daniel before I ran out of pee. I told her to hold my cock still because I still had a little bit left. With a few lower abdomen muscle contractions, I forced the last few squirts. Beth shook my cock vigorously and then turned me to herself and pulled me into a hug.\n\n\"I love you Dan. I always have. I was afraid to tell you, because you were my boss and I didn't want to lose my job. But now as Mrs. Beth Morrison I can tell you that I love you all I want.\"\n\n\"Beth, I cherish all those times we worked late, sometimes into the early morning, and we accomplished the task at hand. Back then, it wasn't that I didn't notice you as a very beautiful young woman, but we had a job to do. Besides the loves of my life were Kim and Jenna so there was no way I was going to do anything at the office, to ruin what I had at home.\"\n\n\"As for being your boss, I'm not sure how I would have reacted if you had used your feminine charms on me during those long hours we worked together. I know I wouldn't have fired you because we became a team and no smart person I know, would cut off his nose to spite his face.\"\n\n\"Now that you're my wife, you know, in the office, nothing can change. I will still rely on you for information so I can be prepared to do whatever is required of me.\"\n\n\"I know Dan,\" Beth said softly, \"You don't have to worry, and I've had a stake in what we've done since I came to work for you. You will always get the best effort I can put forth.\"\n\n\"You know,\" I said as I turned on the shower, \"There is going to be some gossip between the other secretaries when they find out your name is Beth Morrison.\"\n\n\"Do you want me to tell them we're married,\" Beth asked, \"Or do you want me to let them guess when they see this beautiful ring?\"\n\n\"On that point .... it's my opinion,\" I said thoughtfully, \"You can do as you wish. I know you'll have an urge to tease them, so you can wait for them to marvel at your ring or tell them outright. The only people who will know immediately are the staff in HR. You'll have to change your name with them. Maybe we can have a meeting in my office with the head of HR and your name change to be handled with discretion. Tom told me he'd run interference for us with the board.\"\n\n\"Or, I could tell the secretaries involved in the rumor mill that my lawyer has helped me change my name to Morrison and then let them wonder why I'm wearing this beautiful wedding ring.\"\n\nBeth stood up on her toes and planted a passionate kiss on my lips even though our faces were directly under the spray. I figured if we were going to drown, we'd go together. I kissed her deeply as my hands roamed over her body. We had to break our kiss when both of us needed to move out of the spray and breathe. We looked at each other as we started laughing.\n\n\"HEY, what's so funny?\" Kim asked as she and Jake walked into our bathroom.\n\nI replied, \"Beth almost caused both of us to drown, in the shower no less. She kissed me under the spray and we stayed as long as possible and then we had to back up so we could breathe.\"\n\nKim stepped closer to the shower before saying, \"Beth, please don't kill our husband yet, we might find him to be useful for something.\"\n\nBeth leaned out of the shower and kissed Kim. As they looked deeply into each other's eyes Beth said, \"Don't worry my dear, I love this man as much as you do and I'm going to make sure he's well cared for, as I'm sure you will. What a lucky man he is.\"\n\nKim backed up into Jake's arms before she reached out for a towel and wiped the water off her face. Beth was only slightly distracted, talking to Kim, as she washed my body, but she made sure I was squeaky clean before she was finished. Their conversation carried on as I lovingly washed every part of her body. Neither Jake nor I could get a word in, so both of us remained quiet and just listened.\n\nFinally, the question came up, \"So how did your wedding night go with your father-in-law?\" Beth asked Kim.\n\n\"Last night both of us were so tired, we took a quick shower and then went to bed. I shouldn't kiss and tell but my father-in-law rocked my world this morning when we woke up.\" Kim replied\n\nShe continued with, \"How did your wedding night go?\"\n\n\"We were so tired we came back here and cuddled and fell asleep. I know it doesn't sound like a bride's wedding night but I know this man will take care of me when we are ready. Right now, I want to finish this shower and then dive into the coffee.\" Beth replied.\n\n\"I'll go make the coffee because we haven't had any either.\" Kim said as she turned in Jake's arms and kissed him. \"Let's go Jake; we have an important job to do.\"\n\nBeth and I finished our shower as the wonderful aroma of coffee brewing, filled our nostrils. We hurried with the rest of our bathroom rituals and rushed out to the kitchen where we found Kim sitting on Jake's lap and Kathy sitting on Jordon's lap.\n\nAs we walked towards the coffee pot Jordon was saying, \"Kathy and I had an amazing night. She was like the energizer bunny, she kept going and going. I think she drained me completely.\"\n\n\"Under other circumstances,\" Beth said, \"A daughter would say eeewwww TMI if she heard her mother was an energizer bunny, but in our case, I'm going to congratulate you if you were able to keep up with her.\"\n\n\"That's the other thing that makes this situation so strange,\" Jordon said, \"Jake, your wife is sitting naked on my lap, she tells you we had sex, her daughter congratulates me. Am I the only one messed up or what?\"\n\n\"A while ago,\" Jake started, \"If my wife was on your lap talking about how much fun she had during sex with you, I would have thought she went man hunting for a permanent replacement for me. However, our family has learned more about love and sexual encounters. Son, what you're having with my wife is only a sexual encounter. Sometimes a person just has to explore the options. And Jordon, you are an option.\"\n\n\"Well, since you put it like that Jake,\" Jordon said with a laugh, \"I feel so used. Don't get me wrong, this kind of used is a good thing. I wish more people had ideas like all of you. To tell you the truth, I haven't been with a woman in about six months. I've had to handle it myself, with the emphasis on hand.\"\n\nKathy smiled as she said, \"See Jake of all the studs running around here, I chose one who needed a real sexual encounter. Jordon, I'm glad that I was able to satisfy your needs.\"\n\n\"Kathy, you proved to me I need to seriously consider finding a woman who is looking for someone who will come home and take care of all her needs.\" Jordon replied\n\nI smiled and said, \"We need to move this little group outside where we can enjoy the sights and sounds of the ocean.\"\n\nBeth picked up the full coffee pot while Kim picked up the donuts and joined the group headed out the door. As the new group approached the lounges in the coconut grove they discovered there was already a large group of bleary eyed people sitting or standing around, sucking down coffee.\n\nThere were three pots of coffee sitting on the beach table. After her second cup, Joanna stood up and said, \"I think I need to take a run so I can wake up.\"\n\nOthers in the group who were runners spoke up and said they'd like to go as well and ambled off to get their running shoes. Before long they were back with their shoes. They joined the lively conversation between everyone, in the coconut grove.\n\nFrank was trying to talk Audrey into running with him and the others. He listened as Mary and Shelly tried to convince Joe to run with them. They both made him an exclusive incentive that no smart man would turn down. Joe carefully considered the offer before he agreed. His profession didn't require him to do manual labor so he wasn't the athletic type however; the exclusive offer outweighed any embarrassment he'd feel, if he could only run a short distance.\n\nHearing Mary and Shelly's offer to Joe, Frank turned to Audrey and offered her something similar but more in line with her being a woman instead of a man. Audrey smiled, hugged Frank and kissed him passionately before she pulled away from him and started putting on her shoes. The two of them were the first to have their shoes on. Frank showed Audrey how to stretch before going on the run. As the others finished putting on their shoes, they started stretching. When everyone had some time to finish stretching, Joanna stepped in front of the group and said, \"Let's start by going around the compound and forget running in the sand this morning. We have a few new people with us and running is the sand is very tiring.\" Everyone mutually agreed without taking a vote. Joanna turned immediately and led the way towards the paved roadway.\n\nAfter the group left for their run, the remaining people sat around and enjoyed the great conversation. Slowly, the members of the Thompson and White families arrived and joined the conversations. Tony's sisters wandered over and stood next to Patty. When the rest of the Thompson family arrived, they brought with them plenty of joy and laughter. Their lighthearted conversation spread rapidly through everyone gathered on the beach.\n\nAs Ken, Amy, Angela and Brian White approached the group, Ken said, \"Good morning everyone. It's nice to see everyone still partying this morning. WOW, yesterday was the best weddings we've ever attended. Dan, Kim and Beth, I want to congratulate you again and thank you for allowing us to be here to witness such a great event. I also wish you many years of happiness.\"\n\nAs I was saying thank you to Ken, we heard more loud joyful laughter coming our way. I immediately recognized the loudest male voice which belonged to Bob. Within seconds we saw Bob, Tom, Sam, Linda, Jenny and Jerry approaching the coconut grove. They are the wonderful group who staffed the flight for Dan and Tom's families to Hawaii. Company secretaries, Kelly and Allison were also with the flight group. All of them greeted us with a chorus of \"Good morning.\" Everyone momentarily stopped their conversation and greeted the newcomers.\n\nColleen and Rachael were the last to arrive in the coconut grove, walking proudly with the man they had chosen to spend the night with. Again, the newcomers were warmly welcomed by everyone saying good morning.\n\nPatty jumped up and ran over to her mother, hugged and kissed her, then leaned back and eyed her mother's catch. \"Wow mom, he looks yummy.\"\n\nWith one last squeeze for her mother, Patty stepped over to her mother's man and opened her arms for a hug. When he accepted the offer, Patty stepped into his arms and pressed her nude body against his. She intentionally rubbed her nude body side to side a couple of times to let him feel her tits on his chest. She also wanted to feel his cock press against her pubic area. During her final squeeze, she kissed him on the cheek and said, \"Oh momma, you got a good one.\"\n\nColleen was relieved her daughter accepted the fact that she'd spent the night with a man other than her husband. All night long, while she enjoyed the most fantastic sex she'd had in years, a little part of her brain wondered what the girls would say. Now she knew at least Patty was ok with her having sex with another man.\n\nPatty wasn't finished; she stepped over to Rachael and hugged and kissed her, followed immediately by giving Rachael's man the same treatment she'd given her mother's man. When she was finished hugging the men she said to both men, \"Please take care of both these women. They deserve a little pampering.\"\n\n\"Oh honey,\" Colleen said, \"You don't have to worry about that we had a wonderful night. Thank you for being so supportive.\"\n\n\"I love you mom and I only want the best for you.\" Patty countered.\n\nA few minutes later, Holly strolled into the coconut grove with a man on each arm. She was greeted by Patty, Colleen and Racheal who rushed over to give her a more personal greeting. Both guys received hugs from all three nude women. The rest of the people in the coconut grove voiced their greetings as well.\n\nAfter the greetings, Holly asked, \"Have the Simpsons come over with the children yet?\" Kim heard the question and told Holly they had not seen them yet.\n\n\"Oh wow, those kids are going to remember this trip for a long time.\" Holly exclaimed, \"I have all of you to thank for inviting me to your party. I think Terri had a lot to do with me being invited. I can't wait to see her, when she's not busy, so I can thank her properly.\"\n\n******************\n\nEarlier at the marina, there was some early morning activity. Jeff and Tina were still on their own time zone and their internal alarm clock didn't let them sleep in. They lay in their bed and snuggled for a little while before Tina said she had to pee. They slipped out of bed and while Tina went to the bathroom, Jeff checked on the kids to make sure they were ok.\n\nJeff met Tina coming out of the bathroom and told her all of the kids were still sleeping. Tina followed him into the bathroom and carried on their conversation as she watched him drain his bladder and then wash his hands. As he was finishing up, Tina suggested they make some coffee and then walk up on the deck to watch the sun come up.\n\n\"Making coffee sounds like a great plan.\" Jeff replied.\n\nBoth of them walked over to the galley and made a pot of coffee and took two cups out of the cupboard. Tina made one more check on the kids before they walked softly away headed for the upper deck. Unlike at home there was no morning chill in the air. They stood near the stairs so they could see if any of the kids came up on the deck below. The two of them stood side by side, leaning on the railing, drinking their coffee, enjoying the gentle motion provided by the small waves that rocked the boat and the peacefulness of the morning. They talked quietly and sipped their coffee as a small sliver of the sun peeked up over the darkened ocean water.\n\nJeff set his cup down on the table and stepped behind Tina saying, \"This is a dream, it has to be a dream. Good things like this don't happen to families who are poor, like us.\"\n\n\"I know honey.\" Tina responded, \"It's been a nightmare living with the potential of danger 24/7 but with the help from our friends, we've survived so far. Now look where we are. We are at a private resort; we slept on a yacht that costs more than our home, a few times over. Here we are standing on the top deck alone watching the sun come up with the sweet smell of the ocean. I know you went through so much shit from Harold Gordon but I'll bet neither of you would have imagined you'd be here right now.\"",
        "Jeff had his arms wrapped around his loving wife; he pulled her closer, while the sun slowly rose in the East. With Tina's ass pressed against his pubic area, his cock started to rise. After a moment to reflect, he responded, \"We will be safe, there are so many people protecting us. We may not have the freedoms we have here but no one is going to get to us. The threat will be over one day and we'll go back to our normal life however, we will be way ahead of where we were. We've made a lot of new friends and now I have a career, instead of just a job.\"\n\n\"Ohhhhhh,\" Tina moaned, \"I feel something and I hope we have time to take care of it, before the kids wake up.\"\n\nJeff checked his watch and said, \"It's still early, I don't think the kids will be waking up any time soon. They had fun and played hard yesterday.\"\n\nTina turned in Jeff's arms, she kissed him passionately as she parted her feet so her husband's cock could grow and slide up between her thighs. With a husky whisper Tina said, \"I want you Jeff. I want you to make love to me, right now. Please?\"\n\nTina's request had an effect on Jeff and his cock grew to full erection. It grew so fast that it slapped against Tina's pussy. \"Oh God honey,\" Jeff said, \"I want you so badly.\"\n\nTina hugged Jeff and then stepped back and picked up both empty coffee cups off the table and set them on the deck. Moving seductively, she sat down on the edge of the table and spread her legs. \"I'll suck your cock later. But right now, I'd love to have you lick my pussy. I want to have an orgasm from your tongue, on this beautiful yacht, as the sun is coming up over the horizon.\"\n\nJeff immediately dropped to his knees and took a moment to stare at his wife's lovely pussy before he leaned forward and licked her tight-lipped slit. When he pushed his tongue into the gorgeous groove and moved it up to Tina's clit, Tina grabbed two handfuls of Jeff's hair and pulled his face tight against her pussy as she groaned loudly, \"That's it honey, right there, OH GOD! Oh please, Jeff. Please don't tease me.\"\n\nJeff wasn't a professional pussy licker (if there is such a thing) but he had always used oral sex as part of foreplay, actually both Tina and Jeff were very oral oriented. Under normal conditions neither one of them had to ask for the partner to go down, but Tina wanted the morning to be very special. Jeff slipped two fingers into Tina's pussy as he softly nibbled on her clit. Within a few minutes Tina started bucking her hips with each swipe of Jeff's tongue across her clit. Her moans and the other noises Tina was making grew in volume and intensity with each passing second. Jeff crooked his middle finger upward and rubbed his wife's g-spot. Tina's eyes grew wide as her orgasm instantaneously ripped through her writhing body. She trembled uncontrollably, whined, moaned, and screamed as an unworldly explosion, powerful waves of euphoric energy spread through her and went on and on, overwhelming her.\n\nWhen Tina released Jeff's head, he took a very deep breath because Tina had held him so tightly, both his nose and mouth were covered and there was no way for him to breathe. Tina may have been a small woman, but she held a death grip on her husband's head, for the duration of her orgasm.\n\nTina tried desperately to catch her breath and when that finally happened she screamed, \"PLEASE JEFF, FUCK ME! I need you so badly. Oh my God, that was so fucking awesome.\"\n\nJeff didn't get up immediately but it wasn't because he didn't want to. It took Jeff at least thirty seconds before he had enough air in his lungs to stand up. Even then, he stood up slowly and a bit wobbly before he got all of his senses back. He looked at his wife and smiled when he saw the way she was spread out on the table waiting for him. He reached down and moved his cock so it was pointed at her beautiful pussy before he leaned forward and slipped his cock into her super-heated tunnel. Even after three children Tina was still very tight because she religiously exercised her vaginal muscles many times a day. After Jeff's cock was deep inside her, she used those vaginal muscles and squeezed his cock. Jeff groaned.\n\nWhen Tina released him, Jeff began to move in and out of her, slowly at first and then he picked up the pace. He raised Tina's legs and spread them wide apart as he continued to pound his cock fast and deep into her. Although Jeff's cock felt really good, Tina reached down and started massaging her clit while Jeff filled her pussy.\n\nThe sunrise was happening in a distance but on the upper deck of the Little Snot, there was an audacious love making session. Both Tina and Jeff concentrated on fulfilling each other's wildest orgasmic adventure of their married lives to date. The noise level from Tina was plenty loud so anyone on the lower deck, dock or even From Elise would know they were making love.\n\nAndy, Jen, Brianne, Bret and the two Hawaiian girls stepped out on the deck of From Elise and heard the noise. Andy encouraged the others to follow him and they made their way over on board Little Snot and then up the stairs to the top deck.\n\nJeff caught movement out of the corner of his eye and when he looked, he saw the six newcomers walking towards them, while watching him make love to Tina. It's not like Jeff hadn't been watched before so he didn't say or do anything to warn Tina they were being watched. However, Tina didn't notice them until they were standing near the table. Even then, she only smiled at them and continued her vocal appreciation of Jeff's efforts while Jeff moved like a jack rabbit.\n\nWatching Jeff's cock pump into Tina's pussy, Andy and Bret were instantly hard. Andy wasn't bashful so he started stroking his cock. Bret saw what Andy was doing and followed his lead.\n\nJen, Brianne and the two Hawaiian girls also watched the two people for a few minutes. They were fascinated to see Jeff's glistening and swollen manhood as it appeared and then vanished again, inside Tina.\n\nJen slipped down to her knees in front of Andy, followed closely by Brianne. Before long all four girls were on their knees watching Andy and Bret stroke their own cock, while also keeping a watchful eye on Jeff's actions.\n\nJeff and Tina were working towards their individual orgasms with Tina making enough noise for all five women. When her orgasm finally hit her, Tina shrieked loudly, unlike anything she'd done before. At the same time Jeff groaned forcefully as he blew his baby making juice into Tina's womb.\n\nAndy wasn't far behind Jeff and Tina's orgasms so moments before he blew his load, he said to Jen and Brianne, \"I'm almost there too.\"\n\nJen was the first to move her face in front of Andy's cock as she opened her mouth. Brianne saw what Jen did, so she pressed her head next to Jen's and opened her mouth. The first blast Andy shot blew out of his cock and mostly into Jen's mouth. The second blast landed mostly in Brianne's mouth. After the second blast, Andy alternated his aim at each open mouth. When he finished, there was only some cum that oozed out of the end of his cock. Jen and Brianne swallowed before they licked Andy's cock from each side, until all of his cum was gone. When they finished, they stood up and all three of them hugged and kissed.\n\nTina and Jeff were still trying to recover from their orgasmic bliss but managed to acknowledge the six unexpected guests. Andy was quick to explain how they heard them when they stepped out on the deck of From Elise so he led the way on board Little Snot.\n\nJeff replied, \"It's quite alright Andy. I don't mind if you watched us in a moment of passion. When Tina saw you and the others, I felt her add a little extra squeeze with her vaginal muscles. Even though she's had three children her pussy is really tight because she exercises her vaginal muscles regularly.\"\n\n\"All of us are nude, and there is no need to have any reservations about watching others enjoying a sexual encounter. I hope all of you enjoyed watching Jeff slide his wonderful cock into me.\" Tina said.\n\n\"Tina,\" Brianne asked, \"Can you tell us how you exercise your vaginal muscles so you stay tight. I mean, I won't have to worry about that right now but if I start now, it will be common for me to do it later in life.\"\n\n\"Remind me to show you how I do it, and I will.\" Tina replied.\n\nOne of the Hawaiian girls said, \"Our lifestyle in this resort is different here than most of you are probably used to. It's not like everyone participates in an orgy activity, but those who pass through here and those who live here engage in sex or making love in the open or wherever the mood hits them. So, we are used to seeing people engaging in sexual encounters. We accept the fact that people have needs and want to fulfill them. People who come here are arriving from places around the world after they've finished their assignment for Turner. They need to relax and release pent up sexual feelings. It's the way things are around here, in what you call, paradise.\"\n\n\"Tina, when we walked over here, you looked absolutely radiant and so beautiful when you were experiencing ecstasy.\" Brianne said in a husky voice, \"I hope you don't mind me saying this, but I think your husband sure has a nice sized cock.\"\n\n\"Thank you, Brianne,\" Tina replied, \"I love the way it feels when he pushes it all the way in me. I share, so if you want to try it someday, all you have to do is, ask Jeff.\"\n\nJeff had stepped back and pulled his spent cock out of Tina's slippery, cum drooling pussy. Tina accepted his extended hand and he pulled her up so she was sitting on the edge of the table. She sat still for a few seconds before she stood up saying, \"You are all welcome to come down below with us. The kids are still sleeping so you'll have to be quiet. There is plenty of room in case you need to take care of something or take a shower.\"\n\nJen spoke up first, \"I already took a shower but with some of Andy's cum on my face, I'd like to wash it off.\"\n\n\"Ditto\" Brianne said as she looked at the other trio.\n\n\"Come on, let's follow them.\" Bret said to the two Hawaiian girls, \"We can find something interesting to do.\"\n\nAs they walked towards the stairs Andy wrapped his arms around Jen and Brianne and cupped an ass cheek in each hand. Jen looked at Andy with a smile, \"How about a little action when we get down below?\"\n\nAndy looked at Jen with a quizzical look, eye brow cocked and all, which made Jen giggle and add, \"No, not that just yet, but I'd love you to return the favor. Ya know ....\"\n\nBrianne and Jen followed Tina as she made her way over to the room where all the kids were sleeping. After everyone was accounted for and confirmed to be still asleep, she said, \"Ok they are still sleeping. The six of you can use the bathrooms in those rooms over there. We are going to use the shower in this room.\" Leaving the door open, Tina and Jeff disappeared into the room.\n\nJen pulled Andy towards one of the rooms and Brianne followed. The other three headed towards another room. Jen flopped down on the end of the bed and spread her legs. \"Andy, you can do anything you want to me except put your cock in my pussy. So use your imagination.\"\n\nAndy didn't have to be asked twice, he sunk to his knees at the end of the bed staring at Jen's lovely tight-lipped slit. He lifted her legs and spread them further apart and only then, he saw her little clit pop up at the top of her pussy. Brianne collapsed beside Jen and spread her legs saying, \"I'm first .... after Jen, that is.\" Both girls giggled.\n\nAndy attentively licked one side of Jen's pussy before taking a break and blew small puffs of air on the wet surface. Then he repeated his actions on the other side. Jen's hips began to move and moans escaped her lips. Andy moved back in for another lick, this time he aimed his tongue at the center of her pink, slippery pussy. When his flattened tongue touched the sensitive flesh, Jen let out a rather loud groan. She reached down between her legs and grabbed two hands full of Andy's hair and pulled. Her hair pulling produced the desired effect of forcing Andy's face closer to her pussy. (if that was possible) Brianne quickly rolled on her side, facing towards Jen, as she tried desperately to muffle Jen's louder noises, with kisses. She also used her thumb and index finger to roll and pull on Jen's nipples. Jen experienced a couple of orgasms before Andy was allowed to pull his hair out of her grip.\n\nJen lay on the bed enjoying the afterglow of her orgasms and between her rapid breathing she said, \"Thank you Andy. Thank you so much, that felt incredible. Oh my God, that was so marvelous.\"\n\nWithout being asked, Andy moved between Brianne's open legs and once again he took a few moments to stare at the pedals of her beautiful open pussy flower. Normally a young man would only be interested in sex but Andy took a few moments to remind himself how lucky he was, to have not one but two young ladies vying for his affection and his attention. Brianne didn't want to wait, \"Please Andy, don't tease me. I want your lips on my pussy right now!\"\n\nAndy leaned forward and inhaled the sweet scent of Brianne's pussy before he planted several feathery kisses on her pussy from top to bottom. Brianne pleaded, \"Please ... Andy, please lick me.\"\n\nAndy smiled as he extended his tongue and affectionately licked her beautiful open pussy. Her juices trickled down across her taint. ..... (For those of you who are from other parts of the country, a taint is that space/piece of skin between her pussy and her asshole. It's called a taint because - it taint pussy and it taint asshole)\n\nAndy licked the little trail of feminine juice and then moved his tongue up her open pussy in one slow swipe. Brianne raised her hips but Andy's tongue pulled back after it bumped her clit and sent tiny electrical like shocks through her body. Brianne made some noises which could be interpreted as sounds of pleasure followed by pleading of exasperation. \"PLEASE ANDY! - - Oh God, I need your tongue on my clit!\"\n\nBrianne couldn't see the smile that curled the sides of Andy's lips upward as he moved his face towards the delicious meal of delectable pussy, in front of him. He extended his tongue and licked both outer lips before he pressed his tongue against Brianne's clit and held it there. Her first reaction was to push her pussy towards Andy's face but when she felt his tongue lose contact with her clit, she reached between her raised legs and grabbed blindly. The first thing her hands came in contact with was Andy's ears, so she held on and pulled his face into her pussy.\n\nAndy slowly moved his tongue over her sensitive lil bump which sent Brianne into a wild bucking and shaking frenzy, almost like she was having convulsions. When he slipped his middle finger into her tight opening, he rode out her rambunctious orgasm. Jen tried to keep Brianne quiet but it was impossible.\n\nBy the time Andy finished giving oral pleasure to both Brianne and Jen, his cock was fully erect again. This time Brianne took the lead roll and stood Andy up before she turned him around and made him sit on the edge of the bed. She spread his legs so his scrotum hung down. Brianne didn't hesitate to slip Andy's large cock head into her mouth and swirl her tongue around the sensitive rim. When she did that, Andy shivered and his cock twitched in her mouth. Over the next few minutes, Brianne and Jen shared Andy's cock. They each took a few seconds to lick and suck it before passing it back to the other.\n\nAndy knew the sensations of both hot mouths were about to send him over the edge so between grunts he warned both girls, \"If you keep that up, I'm going to cum soon.\"\n\nBrianne said, \"Jen, please let me finish him in my mouth.\"\n\nJen didn't stop; in fact, she moved up and down Andy's cock faster and used her tongue to stimulate the sensitive ring at the base of his cock head. Andy tensed and groaned, \"Here it comes!\"\n\nJen blindly reached out and pulled her friend's head next to her face before Jen pulled off Andy's cock and passed it to Brianne, who waited with her mouth open. A second later the first glob of cum blew out of Andy's cock. Jen waited with her mouth open and was not disappointed when Brianne passed Andy's cock back to her in time for her to be rewarded with another blast of hot cum. Jen sucked Andy's cock momentarily before she passed it back to Brianne.\n\nBrianne stroked his cock while she swirled her tongue around his cockhead. Her actions combined with her hot, wet mouth; she milked the rest of his cum from the delicious tube steak in her hand.\n\nIt took a few minutes before Andy calmed down enough to pull both Jen and Brianne up on the bed beside him and took turns kissing both of them. He quickly realized he could taste his own cum as his tongue dueled with theirs. Jen said, \"Andy, I don't know about Brianne but I want to spend more time with you. I love what we've been doing and I want to do some additional exploring. It might not be today because Brianne and I may have to watch Jean and Josh. Well, at least until their mother is finished spending time with her men. Both of us are here because Terri recommended us to watch the kids so their mom can have some time to enjoy herself and do whatever she wants to do. We can still have fun doing stuff even with Jean and Josh with us.\"\n\n\"Girlfriend, I'm with you on that.\" Brianne replied. \"I also want to spend some more time with you Andy. However, we came here because Terri wanted us to watch the kids, especially Jean and Josh Smith. Now that I know Holly is having some fun with those two guys, I'm willing to extend my time watching them.\"\n\nBrianne finished with, \"If everything works out like it did last night, maybe we can get Tina and Jeff to take them again tonight, so we can do something more than we did last night.\"\n\nBrianne took a deep breath and paused before she said, \"Andy, I would like to ask you a favor.\"<br >\n\n\"Sure Brianne, what do you want?\"\n\n\"I want to let my mother know what we've been doing and I really want you with me when I tell her. Being new to this nudist lifestyle, I want my mom to know that I am fascinated with you and with you standing with me, will show her that you care. You do care about me, I mean us, don't you Andy?\" Brianne asked softly.\n\n\"Yes, yes I do care about both of you.\" Andy answered. \"I'll gladly go with you and stand beside you when you tell your mom what we've been doing. The only request I have is that we talk to both your moms, at the same time, away from anyone else.\"\n\nBoth Jen and Brianne leaned towards Andy and kissed him. At the same time, Jen looked towards the open door and saw Jean and Josh look into the door. She jumped up and walked over to them and squatted down and hugged them and they pressed their naked bodies against Jen and told her, good morning, in unison.\n\nBrianne walked over and squatted down next to Jen. Josh quickly stepped between Brianne's spread legs and into her open arms. He pressed his body against Brianne as he hugged and kissed her and held on to her.\n\nJen asked them if they enjoyed being on the boat all night and each of them gave excited reports at the same time. It was very clear they had enjoyed the adventure even if they couldn't remember that much about it.\n\nTina came out of the room where the kids had been sleeping and saw Jen and Brianne with the two kids. She said, \"I told them to come and find you. Would you be so kind as to help me get them showered while I get Abby and Deanna showered? John can wash himself.\"\n\n\"Sure, I was just talking about them before I saw them at our door. They can shower with us so we can be done at the same time.\"\n\nAndy knew there were going to be a couple of additional bodies in the shower so he adjusted the water in both shower heads before Brianne and Jen walked into the bathroom with Jean and Josh. All of them stepped under the water together but Andy stepped back and let Jen wash Jean while he soaped up. When he was ready to get rinsed off, they stepped back for Andy.",
        "When Andy finished rinsing the soap off his body, he stepped out of the shower and dried himself. Brianne looked at Andy and asked, \"Would you please dry Jean and Josh while Brianne and I get showered?\"\n\nAndy grabbed another towel out of the open linen closet and asked, \"OK, who's first?\"\n\nImmediately Jean responded, \"Andy you don't have to ask ..... girls always go first.\"\n\nAndy placed a hand towel on the counter, near the sink. Then he pulled a bath towel out of the open linen closet and wrapped it around Jean. He picked her up and carried her over to the counter top and had her stand on the towel. When he was certain she was steady he took the towel off her and had her turn around so he could dry her hair. Jean followed his instructions and after turning around she placed her hands on the mirror and tilted her head back.\n\nWhen Andy finished drying Jean's hair, the best he could, he dried her back and her butt crack before he asked her to turn around. Once again Jean followed Andy's instructions. When she was facing him, he dried her face, down her neck to her chest, all around her abdomen and finally her hips.\n\nJean automatically put her hands on Andy's shoulders to steady herself, before she raised her right leg. She said in a matter of fact tone, \"My mom has me raise my leg so she can dry my coochie. She said it's not good to leave it wet.\"\n\nAndy momentarily stared at Jean's hairless coochie before he extended his toweled hand and made sure he dried between her legs before he moved on and dried both of her legs. When he finished, he wrapped the towel around her and had her sit down on the counter and wait for Jen or Brianne to brush her hair.\n\n\"Thank you for drying me Andy.\" Jean politely added when she was seated.\n\n\"You are very welcome young lady.\" He replied.\n\nAndy walked back to the linen closet and pulled a towel out for Josh who was still standing with the girls, in the shower. Andy opened the towel and held it as Josh stepped out of the shower before he wrapped it around him. He picked Josh up and stood him on the counter next to his sister. Andy used the same procedure to dry Josh as he did Jean. The only difference was he had Josh pull his foreskin back so he could dry the head of his cock. When Andy finished drying Josh, he helped Josh off the counter top so he was standing on the floor. Once he was on the floor, Andy combed Josh's hair and then his own. When Andy was done, Josh also thanked Andy for drying him.\n\nAndy put Josh's towel on the floor to dry up the little bit of water that rolled off the three bodies and then left it there for Brianne and Jen. When they were finished with their shower, Andy had four towels in his hands. They each took the first towel and wrapped their hair in it. Andy watched the girl's titties wiggle and jiggle as they moved about, drying themselves.\n\nAs girls do, once they dried their body, they moved over and stood in front of the mirror. Both of them had some additional grooming to do. Jen had the brush first so Brianne used the moisturizer that was on the counter and applied some all over her body. When Jen finished brushing her hair she moved over to Jean and brushed her hair. When she finished, she put Jean on the floor and handed the brush to Brianne.\n\nJen stood by Brianne and spread moisturizer all over her body and down her legs. Jean had watched both girls use the moisturizer so she asked, \"Why are you and Brianne putting that stuff on?\"\n\n\"It's moisturizer,\" Jen said, \"Girls put it on so our skin is nice and soft. We have to take care of our body.\"\n\n\"Can you put some on me?\" Jean asked.\n\n\"Sure can sweetheart.\" Jen picked Jean up and stood her on the counter again. \"Now turn around and I'll do your back first.\"\n\nJean followed Jen's instructions and when Jen was done with Jean's back, she was requested to turn around. Jen started at her shoulders and then down her body. When she got to Jean's hips Jen instructed her to spread her feet so she could get inside her thighs and down her legs. When Jean was sufficiently covered with moisturizer, Jen lifted her up and put her back on the floor. Once Brianne finished brushing her hair, all five of them walked over to the room where Tina and Jeff were.\n\nBret and the two Hawaiian girls were already in the room. Bret and Jeff were each sitting in a chair talking while the two Hawaiian girls were helping Tina with Abby and Deanna. When Andy, Jen, Brianne, Jean and Josh walked into the room, they joined the conversation while waiting for Tina and the girls to finish getting ready.\n\nWhen they were done Jeff stood up and said, \"We should get going over to the coconut grove so we can go to breakfast with everyone else.\"\n\nTina looked around, \"Ok, let's get going, I believe everyone looks acceptable for public appearances.\"\n\nThey walked out of the room and up onto the lower deck of Little Snot. As they descended down the ramp, to the dock, they were greeted by some of Leyanni's staff. They exchanged good morning greetings and pleasantries before they walked down the dock, headed towards the coconut grove.\n\n******************\n\nBy the time they arrived at the coconut grove, everyone was assembled and the decision had just been made to start walking to the cafeteria for breakfast. The forward motion was halted when the new arrivals were spotted. Jean and Josh spotted their mother and ran towards her yelling, \"Mom!\"\n\nHolly squatted to receive her two kids in her arms. All three of them hugged as Tina told Holly, \"They were great kids last night. We walked over to the boat and went up on the top deck for a little while and then took them down and put them to bed. They slept straight through until just a little while ago.\"\n\nTina stepped close to Holly and whispered in her ear, \"This may presumptuous on my part, but they can stay with Jeff and I again tonight so you can be free this evening.\"\n\nHolly looked up at Tina and quietly said, \"I can't ask you to do that for me.\"\n\nTina leaned down again before saying, \"You didn't ask, I offered. So enjoy your time here, Jeff and I are enjoying ourselves while the kids are sleeping with our three. Besides, if we needed any help, the kids adore Jen and Brianne and I know they would help us, if we asked.\"\n\nJen and Brianne were close enough to hear Tina and both moved closer and Brianne said in a hushed whisper, \"Holly, this is your time to let go and have fun. We, Jen and I will watch the kids today if you want to stay with the guys. We have no problem with that. We'll take Jean and Josh swimming or whatever else they want to do.\"\n\nHolly looked at the two guys she spent the night with and then hugged Jean and Josh before she stood up. She looked at Tina, Brianne and Jen before she said, \"I really did have fun last night. It was the first time in a very long time. We'll go to breakfast and I'll think about your offer. And THANK YOU, thank all of you for everything you've done or offered to do.\"\n\nJen and Brianne moved back over next to Andy, Bret and the two Hawaiian girls. They introduced them to some of the group, especially their parents. The six of them stayed together as they made their way through the group.\n\nI looked at our rather large group and called out, \"Hey we can talk during breakfast. Let's head over to the cafeteria.\"\n\nAs we walked towards the cafeteria many conversations were taking place at the same time. When we arrived, I held the door open and waited for the younger kids to enter first. When there were just a few adults left outside, I said, \"Come on, I think the younger people should be through the line by now.\n\nI walked in with Beth and Kim on each arm. We surveyed the room and saw there were a few people dressed in white Navy uniforms and then there were plenty of nude people, not uncommon at this resort. All of us eventually found what we wanted to eat and I sat down with Ted, Marion, Tom, Janet, Jake, Kathy, Beth and Kim.\n\nWe weren't seated very long before a couple of the men dressed in white Navy uniforms walked towards our table. The one looked pretty important with two stars on his shoulder boards. Even the fact that he was dressed in such an impressive uniform and I was nude, didn't matter to me, I stood up as he approached. Ted, Tom and Jake also stood up as he came to a stop right next to me.\n\nHe pushed out his hand and I extended my hand and shook his hand. In a command type voice, he said, \"I'm told that you are Dan Morrison.\"\n\nI squeezed his hand a little tighter as I said, \"Yes, you have me dead to rights. I'm the man who hasn't served in the military so I can only guess that you are important to the Navy with those two stars up there on your shoulders. Yes, I'm Dan Morrison.\"\n\n\"Even though I don't know who you are, I'll just go ahead and introduce you to everyone at this table. This young lady right here is my wife Kim. On this side of me is my wife Beth. Standing next to Kim, is my friend Ted Johnson and his wife Marion. Next to Marion, are my former boss Tom Banks and his wife Janet. Last but not least, on this side of the table are my new in-laws Jake and Kathy Thompson.\"\n\nWhen I finished the introductions the guy in white said, \"I knew my intel people would be correct. I don't mean to interrupt your breakfast, but I would like a few minutes of your time, if that's possible.\"\n\n\"You can pull up a chair and have a seat because I don't like cold rib eye steak and eggs. I'm a multitasker and can eat and listen at the same time.\" I replied.\n\nI no sooner had the words out of my mouth, the other person dressed in a white uniform moved so quickly, it looked like he almost ran over to a table that had an empty chair and swished the chair across the floor until it was positioned directly behind the guy still holding my hand.\n\n\"I'm not sure why you're still holding my hand unless you like me in a special way. I've heard stories about you Navy guys taking the Marines out on your boats because you need someone to wash your back and dance with. But I have to tell you, I'm not that kind of a guy. I just married these two young ladies yesterday. So I'm very secure in my manhood.\" I said with a huge smirk on my face.\n\nThere were some snickers from the females at the table but finally the guy with the two stars said, \"I like you Morrison. You have no fuckin' idea who I am other than a Navy officer, yet you're cracking jokes that are usually reserved for guys who have served in the military. Instead of kicking your ass, I'll let you off the hook and tell you that I'm Rear Admiral Randall Andrews. To my friends, I'm known as Randy. You sir, may call me Randy.\" After telling me his name he let go of my hand.\n\nWhen he finished I said, \"Please Admiral, have a seat because I really don't like cold steak.\"\n\nAll of us sat down and before the admiral could say anything, \"I know I slipped some Navy stuff in there, because my dad used to say stuff like that all the time when we were around other guys who served. My dad, God rest his soul, was a Vietnam veteran. He was attached to the 101<sup>st</sup> Airborne in Vietnam, class of 1969. So you see sir, I meant no disrespect; I was only imitating my dad.\"\n\n\"Mr. Morrison, I love your style. If only there were more men who spoke their minds instead of beating around the bush.\" Randy said.\n\n\"Admiral, you hit the nail right on the head.\" Tom added with a laugh. \"Being his former boss, I was always wondering what new revelation Dan was going to give us during our boring board meetings. Not once, in all the years he worked for me did he mince any words.\"\n\n\"After holding your hand so long, I can call you Dan, right?\" Randy queried.\n\nI laughed, \"If you'd held my hand any longer, I would have asked you to buy me an engagement ring.\"\n\nWhen everyone stopped laughing, including Admiral Andrews, I said, \"Of course you can call me Dan.\"\n\n\"Kim and Beth, I'd like to offer my congratulations on marrying such a good man. If his bedroom habits are as good as his wit, he might be man enough to keep both of you happy. However, if he can't handle the job, call me, I know some Navy guys who have great endurance records.\"\n\nThe Admiral had fired a shot across my bow and I knew it. Everyone else laughed and both Kim and Beth blushed a little bit. I, on the other hand, laughed also and then made a mental note to fire a volley of my own back at the Admiral, but not at that moment.\n\n\"But on a serious note, I'm sure that you know James Turner, Marshall Mitchel and my niece Rebecca Mitchel.\" the admiral asked before he paused for my answer.\n\n\"Yes, I know them. All three of them helped pull off the spectacular wedding ceremony for all of us yesterday. They flew in all of our friends and even stopped by to get my new in-laws and all their kids. Yes, they are all wonderful people, not just because they did all of this, but they're just great folks. Did you say Becca is your niece?\"\n\n\"Yes, she grew up to be such a beautiful girl. Smart as a whip and boy can she handle our aircraft. I lost my best pilot when Jimmy Turner lured her away from the Navy to be his personal body guard and pilot. He could pay her more than I could, so I don't blame her really.\"\n\n\"Speaking of Rebecca, she's part of the reason I came to see you. You see, when Jimmy lured her away from active duty Navy, there is a little catch though, she's still on reserve duty. My Rebecca isn't officially out of the Navy like she thinks she is.\"\n\n\"So, without slipping out any more secrets, I .....\"\n\nI finished chewing my piece of steak so my mouth was empty I interrupted Randy by saying, \"I don't think any real secrets have ever slipped through you lips. But go ahead .... Please finish what you were saying.\"\n\n\"Ok the short version of what I want to ask you is I'm inviting you and all your friends and family to attend a ceremony we are going to have at 1000 hours over in the Lava Pit. There ...... no beating around the bush.\"\n\nI looked around our table and everyone started speaking at once. The general consensus was no one had brought dress up suits or dresses. So I looked at Randy saying, \"We didn't expect to be involved with any ceremony so we didn't bring the proper clothes. All of us have something to wear but it will be more beach wear than anything.\"\n\n\"I fully understand and I want you to know, you can come as you are, meaning nude if that's more comfortable for you. I know Leyanni prefers everyone remain nude while they're here so don't worry about what you wear or don't wear over there.\" Randy said.\n\n\"So you're inviting everyone?\" I asked.\n\n\"Yes everyone, I want to pack the room for the ceremony. I have some surprises for Jimmy, Marsh and Rebecca.\" Randy said with a huge smile.\n\n\"I'll get everyone's attention in a few more minutes but do you have any further hints for us?\"\n\n\"Here's a hint for you, you'll have to show up to find out what's going to happen.\" Randy said with a hearty laugh.\n\nNot wanting to wait for any of our group to finish breakfast and escaping out the door I stood up and walked away from our table a few steps before I turned around and said, \"May I get everyone's attention?\"\n\nWhen the roar of everyone's conversation dwindled to a few voices I said, \"General Andrews over here would like .....\"\n\nI was interrupted when someone yelled, \"That's Admiral Andrews!\"\n\n\"What.... what's that you said?\" I joked.\n\nBetween hearty outbursts of laughter, Ted said, \"Dan, that's Admiral Andrews, he's in the NAVY!\"\n\nI looked over at Randy and saw he was smiling broadly so I said, \"My dad was in the Army and he convinced me the Army was the only real branch of service, the rest of them were wannabee organizations. But now that we've cleared that up, Admiral Andrews would like all of us to be at the Lava Pit for a ceremony to honor our hosts, Jimmy, Marsh and Becca. I have been informed we can go as we are or put some clothes on, it doesn't matter to the General ...... oops, I mean, Admiral Andrews.\"\n\n\"For me, I am going back to my cabin and see if I can find some uncomfortable clothes to put on.\"\n\n\"What time do we have to be at the Lava Pit?\" Came a question from the back of the room.\n\n\"I would suggest that everyone be over there by quarter to 10 because they want to start the ceremony at 10:00am. Are there any other questions?\" Hearing none I walked back to my table and sat down, picked up my coffee and took a sip.\n\nI turned towards Randy and asked, \"Do you want me to help you with your ceremony? I've had some practice of giving speeches off the cuff. Just ask Tom over there, he's put me on the spot many times. I really think he did it to see if I would stumble, but I didn't.\"\n\nI leaned back in my chair and stared at the stars on Admiral Andrews's shoulder boards before saying, \"Say Randy, being that you got those stars on your shoulders; do you have any connections in Washington?\"\n\n\"I know some people, yes. You're not thinking of storming Washington are you Dan?\" Randy questioned.\n\n\"No, I wasn't thinking about doing that but since you're sitting here I might as well pick your brain. Back home we have a homeless veteran shelter that is being stretched to its limits. A lot of vets use the place, both male and female. What the place should have is a complete make over but at the very least, some upgrades. The best solution would be to tear the place down and start over. However, if we did that, the vets who use the shelter won't have a place to stay. So, I'm asking what your resources are in Washington. I want to build them a new place with facilities for both male and female veterans. I need money Randy.\"\n\nRandy had a stern look on his face when he said, \"I know what you mean and I wish I could tell you how I really feel about the treatment our county's veterans are getting. However, as long as I'm in this uniform, I can't. But I'll introduce you to someone at the end at the ceremony who has more connections than I do.\"\n\n\"Dan, I have to get going to check on a few things. I'll see you in a little while.\"\n\n\"Thanks for your ear Randy, I really do appreciate it. I care for those vets in that shelter and I'm going to make something happen for them.\"\n\nAfter Randy walked away I looked at my watch and said, \"I guess I'm going to head back to the cabin and find something to put on.\" When I stood up everyone at our table stood up with me. A number of others saw us and stood up also.\n\nKim and Beth each took my hand and we went towards the door, followed closely by many others from our group. We leisurely walked back towards the coconut grove. We parted ways and everyone went to their individual cabins or rooms to get dressed.\n\nWhen Kim and Beth pulled a pair of panties out of their suitcase I looked at them and without saying anything, both of them put them back. Each one selected a light summer dress and put it on. They took turns looking at each other and then looking in the full mirror on the wall. I added my opinion and told them, they were both very beautiful.\n\nI dressed in shorts and a polo shirt that I could wear untucked. I glanced at myself when I walked past the mirror and I was happy. I went out on the porch where I found Jake sitting in one of the chairs. I sat down in one of the other chairs and said, \"I already told the girls they looked great in their dress but they're still in there trying to decide if they do. I'll bet they come out in a different dress.\"\n\nJake laughed, \"Dan, I know you are an accomplished man but women are fickle. You can complement them and tell them they look perfect and they'll spend the next half hour trying to decide if you were correct.\"\n\nBoth of us were still laughing when Tom and his family strolled over. Jake recounted what I said followed by his response. When both Toms started to laugh, they received stern looks. Frank was standing between Audrey and Katie and he wasn't so lucky. He laughed seconds before he was slapped on each arm. Frank looked at Audrey and she warned him, \"That wasn't funny.\"",
        "Immediately after, Audrey kissed Frank and said, \"Ok, so it was a little funny but you didn't have to laugh and agree with them so fast.\"\n\n\"Frank my boy,\" Tom said, \"There are a few things that women don't want to admit, even to themselves. So if you're going to have any history with a woman, you'll have to learn to plant the seed then walk away and let whatever is going to happen, happen.\"\n\nFrank thanked Tom for his advice and Audrey said, \"Daddy is a smart man.\"\n\nSlowly everyone came over to our cabin and when we took a head count, we had everyone present. We determined our contingent was complete and if by some remote chance we missed anyone, they could catch up with us because we planned to walk over to the Lava Pit.\n\nTina and Jeff showed up with their children plus Jean and Josh Smith. Jen and Brianne walked over and asked if they need help with Jean and Josh but Tina said, \"No, we're ok with them. They can play with Abby and Deana today.\n\nJohn looked up at Andy and asked, \"After this is over and we come back and take off our clothes again, would it be alright if I hang out with you guys?\"\n\nBrianne was quick to say, \"We want to talk to our mothers after this is over and then we can come and find you.\"\n\n\"Ok, thanks! I can come back here to the coconut grove and wait for you to finish what you have to do. Right, mom?\" John hurriedly replied.\n\n\"Absolutely,\" Tina responded. \"I don't see a problem with that. You know where to put your clothes so just come back after the ceremony and occupy yourself until they're finished. I'm sure the four of you will have plenty of fun together.\"\n\nWhen we started to walk over to the Lava Pit, Andy was in the middle with Brianne on one side and Jen on the other. Andy had his arms around each of them with his hands resting on the top of their ass cheeks. Colleen and Rachael looked at each other and smiled as they walked behind Andy, Brianne and Jen. Patty, Tony, Beth and Barbie walked side by side behind Colleen and Rachael.\n\nBrianne turned her head and looked at her mother before she asked, \"Mom, do you think you and Rachael can sit down with us, after the ceremony?\"\n\nColleen looked at her daughter for a moment before she replied with a smile, \"My first question is who constitutes us?\"\n\n\"Jen, Andy and me.\" came the reply.\n\n\"Most certainly honey. You can come to me about anything.\" Colleen said.\n\nJen was the next to say, \"Mom, we want all of us together in a private place so we can talk.\"\n\n\"It sounds serious,\" Rachael giggled.\n\n\"Oh mom, it's nothing serious, we just want to talk. You don't have to worry, I'm not pregnant.\" Jen replied with a giggle.\n\n\"May I join your little sit-down discussion?\" Patty inquired.\n\nBrianne turned around and walked backwards as she looked at her older sister. She winked at Patty before she replied, \"Sure sis, you've always been there for me, why not now?\"\n\nAs we neared the Lava Pit we saw more people in white Navy uniforms. Two of them were stationed at the doors and whenever anyone approached, they stepped forward and opened the doors with sharp precise movements. I looked at my watch as we walked through the doors and saw that it was ten minutes before ten. Once inside we joined the others that were seated and waiting for the ceremony to begin.\n\nI looked around and saw more stars on shoulder boards than I'd ever seen. I wasn't the only one looking around because Ted leaned in front of Beth and said, \"Holy shit Dan! Look at that Admiral with four stars and the two guys with three stars.\"\n\n\"Yeah but, look over there. There's a couple of Marine Corp Generals near the back of the room. What the hell is going on?\" I added.\n\nWe didn't have to wait the whole ten minutes because Admiral Andrews came through a door near the front of the room followed closely by Becca, Marsh and Jimmy. All four of them were dressed in white Navy uniforms. Everyone jumped to their feet and the room erupted with applause as Admiral Andrews showed them to their seats.\n\nAdmiral Andrews's chair was beside his niece Rebecca Mitchel and as soon as he sat down, a four star stood up and stepped over to the lectern. He adjusted the microphone as he surveyed the room filled with family, friends and even some curious Turner employees.\n\nAfter a few seconds, he began to speak by saying he was going to keep the ceremony short because he knew everyone was on a mini vacation. He only spoke for a few minutes before he introduced Admiral Andrews and then turned the ceremony over to him. For the next half hour, we listened to a few speakers. When the ceremony was over, everyone got up and started leaving. Admiral Andrews asked Tom and me to come up to the front of the room. He shook our hands and thanked us for getting everyone to come.\n\nAfter a pause, he told us he heard that some of the people in our group may want to experience a ride in one of the Navy's more exciting aircraft. He asked us if we thought some of the people in our group would like to ride in a FA-18. He told us he had six of them on the Navy air field. He told us to get a head count and let him know.\n\nMarsh heard what Admiral Andrews said to Tom and me and he walked over and stood behind Mary Davis as she talked to Sheriff John Donnelly, Ted Johnson and Shelly White. When there was a pause in the conversation Marsh asked Mary if she wanted to take a ride.\n\nHe told everyone up in the front that he would have Todd Benson bring back an Apache helicopter to give people rides, if they would like.\n\nAs Marsh walked away, the four police officers excitedly discussed their options. They had already decided to take a ride by the time Tom and I walked over to them. When I asked Mary, Ted and Shelly if they wanted me to put their names on my list there was a resounding \"YES\" from all of them.\n\n******************\n\nAfter the ceremony was over Colleen turned to her daughter and asked, \"Do you girls want to have that discussion now?\"\n\nBoth Jen and Brianne answered together saying, \"Yes.\"\n\nAndy spoke up asking, \"Would it be alright with all of you if my mom joined us?\"\n\nWithout any hesitation Colleen and Rachael along with Jen and Brianne quickly agreed to have Amy sit down with them.\n\nThe group spotted Amy and Ken walking together back towards the coconut grove so Andy, Jen and Brianne took off running to catch up with them. Ken and Amy waited for Colleen, Rachael and Patty to catch up to greet each other. After the greetings were finished, Andy asked his mom if she would join him, Brianne, Jen and their mothers for a short private meeting.\n\nAmy looked at Andy for a couple of seconds before she smiled and said, \"Wow, this sounds serious.\"\n\nColleen and Rachael laughed as Rachael said, \"That was my exact response. However, I was informed it isn't serious but the girls and Andy want to talk to us. I think that's really nice. It makes me feel warm and fuzzy inside.\"\n\n\"I think the first thing I'd like to do is get out of this dress. Since we've become nudists, I prefer to be nude. I love when the breeze blows across my body. But most of all, I love to let people see the real me and not the one I am when I have to cover me up.\" Brianne said.\n\nJen was quick to sanction Brianne's idea by saying, \"Ok, here's a suggestion for everyone,\" Jen added, \"How about we keep this simple. We can go to the coconut grove, take off our clothes and make a circle with some lounges so we can talk. That way we won't have to sit in the sand, down on the beach.\"\n\nOne by one everyone agreed with Jen's suggestion. As they walked, Andy took off his shirt which prompted both Jen and Brianne to pull their sun dress over their head and hold it in their hand. By the time they reached the lounge chairs everyone was nude. Each person picked up a towel before they moved their selected lounge into position.\n\n\"Andy, if you don't mind, I'd like you to sit between Jen and me.\" Brianne directed, \"Let's adjust our lounges so the back is up. That way we can look at our mothers and Patty.\"\n\nWhen everyone was seated, Brianne and Jen slid their butts over next to Andy so their shoulders were touching his, from each side. Andy smiled as he looked at Brianne and Jen before he whispered, \"I love closeness.\"\n\nAndy adjusted his half hard cock so it wasn't squeezed between his thighs and then reached out to each side and placed his hands on Jen and Brianne's thigh. Their immediate actions were so spontaneous; it was like a scripted moment. Both Jen and Brianne bent their knee closest to Andy and let it flop to the side, so Andy's legs were partially covered by a bent leg from each side. Andy looked at Jen and Brianne as he allowed his hands to slide inside each thigh and move closer to the hairless pussy on each side of him.\n\nThe movements of Jen, Andy and Brianne didn't go unnoticed by the others who had arranged their lounges in a semi-circle in front of the three and then sat down with their feet flat on the lounge and their knees slightly parted. Andy immediately noticed he had a clear view between the legs of Colleen, Rachael, Patty and his mom. His eyes wandered as he looked at the beautiful view in front of him. Each pussy looked the same but at the same time each one was different.\n\nPatty who had not had any children, her pussy was just a straight line between two puffy pussy lips. Colleen and Rachael had similar shaped pussies but Colleen's pussy lips were very thick and puffy with her clit slightly extended beyond her pussy lips. As his eyes wandered over to his mother's pussy, he smiled to himself knowing he'd come into this world a long time ago, through that opening between her legs.\n\nAndy was startled back to reality when Jen poked him with her elbow and giggled as she whispered, \"It's not polite to stare.\"\n\nAndy smiled at Jen as Brianne looked across Andy's body at Jen while saying, \"Mrs. White I know you weren't with us yesterday when we were talking but I know you'll get the gist of what we said. Mom ... Rachael ... Patty ... ummmm .... remember .... yesterday, when Jen and I told you, we weren't theoretically virgins, but we are virgins because we've never had a cock inside our pussy?\"\n\nColleen looked at her daughter and said, \"Oh God, I hope Andy wore a condom when you had sex with him.\"\n\n\"Oh no mom,\" Brianne quickly added, \"We haven't had sex per se, however we have explored each other's body and intercourse is the next item on our agenda.\"\n\n\"Are both of you certain you're ready to take that next step? Remember, once you go down that road, there's no changing anything. Rachael inquired, \"Or is this a heat of the moment thing?\"\n\n\"Mom,\" Jen replied, \"If this was a heat of the moment thing, as you put it, we wouldn't be having this conversation. The deed would have already happened. But as Brianne just said we are both still virgins in relations to having a cock inside us.\"\n\n\"Besides if we were going to do anything in the heat of the moment, Brianne and I would have had intercourse last night. Both of us were \"good girls\" and we did everything else but intercourse. And had we decided to have intercourse there were condoms in a basket, on the night stand. We could have put one on Andy's cock at any time, but we didn't.\"\n\n\"So, can someone tell me again why I'm here?\" Amy questioned with a giggle in her voice. \"It sounds like the three of you already have a plan and all three of you are agreeable. Of course, I'd be interested in hearing what happened last night.\"\n\nAndy spoke to his mom, \"I wanted you to be here with us because our families have become so close and if Jen and Brianne were going to talk to their moms, I wanted you to hear what's going on. Besides, it wouldn't be gentlemanly of me to kiss and tell about last night's events. Of course, if one or both of my co-conspirators want to share the details of what happened last night, it's ok by me for them to tell the story.\" Andy said with a smirk.\n\n\"I appreciate that Andy,\" Amy said, \"But I think you've learned what you can do or shouldn't do. I want you to be safe at all times. I want grandchildren, but not right now.\"\n\nLooking at her daughter, \"I also want grandchildren but I'll be satisfied to wait a while longer.\" Colleen added.\n\n\"Andy you're such a gentleman.\" Colleen remarked, \"Most young men can't wait to run off and blab about getting laid and who the girl was. Amy, thank you so much for teaching your son the values which are lacking in so many young men these days. I have to say, in the world today, there just isn't enough respect shown to others.\"\n\nLike any guy sitting between two beautiful naked females, Andy had a smile on his face. However, after hearing Colleen's remark, it broadened greatly.\n\n\"I agree with Colleen,\" Rachael added, \"With all of us learning to live the nudist lifestyle, it would seem so easy for a guy to take advantage of a girl or woman. Since all of you spent the night together and both of you are still virgins this morning, I applaud all three of you. Like Amy, I'd love to hear what happened last night. I don't mean that as a voyeur but as a mother who loves all three of you.\"\n\n\"Well .......\" Brianne said, as she took a few seconds to look at everyone while her mind whirled, thinking ....... thinking about how she was going to properly phrase what she was going to say, \"If we're going to cut to the chase, that's what this little gathering is about. I'm ready to enjoy the full benefits of moving into womanhood. I would like to have Andy's cock inside me, that is, if he wants to take me to places I've never been.\"\n\n\"ALL RIGHT!\" Patty yelled with plenty of enthusiasm. \"Mom, Brianne told us when she's ready to have a cock, she'll let us know. Today seems to be that day so let's encourage all three of them to play safe until Brianne and Jen get their depo shot. Personally, from the looks of Andy's hard cock, I think both of them have made a wise decision, for their first time. Sex is what you make it. It can be slow and tender or fast and rambunctious. I hope each of you have many hours of enjoyment. Tony and I, along with his sisters, have become proficient in many wonderful and fulfilling experiences, since we decided to work exclusively on the Morrison estate.\"\n\nColleen raised an eyebrow before asking, \"Like Amy, I have to ask why are we having this special meeting?\"\n\n\"Ok, we talked between us,\" Brianne said. \"We know this should be personal ..... and .... private ..... ummm and all of you know we are old enough to do this without telling you, but our lives have changed so much since we've become nudists. We feel closer to you, and we feel we can talk more openly to you, being our parents, than other people our age. The three of us feel we can breach what is supposed to be the private parts of our lives, with all of you.\"\n\nBrianne laughed as she looked between Jen and Andy before she said, \"Ok, I'll start and Jen or Andy can jump in where they want.\"\n\n\"As you know, the three of us along with Bret and the two Hawaiian girls stayed on From Elise last night. All six of us talked and enjoyed each other's company. After taking a shower to rinse off the sweat and grime of the day, we got on the huge bed together. All of us enjoyed some playful encounters and then we split up into two groups. Jen and I stayed with Andy while the two Hawaiian girls cuddled up to Bret. Oh mom, it was so magnificent to share. All of us had at least a couple of orgasms each, if not more.\" Brianne reminisced.\n\n\"Yeah, but we didn't let Andy's cock slide inside us.\" Jen excitedly introduced. \"Brianne and I took turns straddling Andy's hips. Each one of us pushed his cock flat against his stomach before we sat down on it, trapping his cock horizontally between our pussy lips. I was so wet when I positioned myself over his cock; my juices coated him and made it very easy to slide back and forth, along his length. When I leaned forward, my clit rubbed on his cock and OH MY GOD, did that feel so extraordinary.\"\n\n\"OH YEAH, I was in heaven, while I was riding Andy's cock.\" Brianne added, \"My pussy tingled and my body trembled long before I had my first orgasm on Andy's cock. I've rubbed my clit before to achieve an orgasm but the ones I had last night made all my previous orgasms seem so minuscule.\"\n\n\"Even in the heat of the moment,\" Jen added, \"when we became more rambunctious in our actions, Andy didn't take advantage of us. He could have allowed his cock to slip inside one or both of us with just a small change in the angle of his hips, but he didn't.\"\n\nOver the next ten to fifteen minutes or so, both Jen and Brianne excitedly told the others about their adventures on From Elise. Like a true gentleman, Andy only added in details when one or both of the girls prompted him. Andy had leaned back against his lounge and spread his legs so his cock stood straight up. Jen reached over and wrapped her hand around Andy's cock in front of Patty and their three mothers. Andy relaxed and enjoyed Jen's actions along with the view of four delicious looking pussies in front of him. One of which, belonged to his own mother.\n\nJen slowly stroked Andy's rock-hard cock as everyone listened with their eyes focused on Jen's hand. Even Amy watched with interest as Andy's foreskin covered the head of his cock on the upstroke and then his engorged cock head reappeared on the down stroke.\n\n\"As Jen said,\" Brianne interrupted, \"There were condoms in the basket, on one of the night stands, and it would have been so easy for us to have intercourse with Andy last night, but we didn't because the time wasn't right.\"\n\n\"We want all of you to know, Andy was a perfect gentleman last night. Because of his personal restraint, his consideration for our wishes and the really .... really great vibes I get from him since all three of us have been together, I feel a connection with him. He's our age and I want him. I don't only want to rub my pussy on his cock, but I want it to go inside me.\" Brianne said with genuineness in her voice.\n\n\"I want the same thing, for the same reasons. As I said before, Andy could have taken advantage of our lust last night but he didn't. He let me decide how far I wanted to go and he didn't push me to go further. So, the answer to your question mom, yes, I want Andy to be the first guy to slide this beautiful cock into my very wet pussy.\" Jen added with as much sincerity as Brianne.\n\nAndy gently squeezed the inside of each girl's thigh, in appreciation for their kind comments.\n\n\"Honey, if you are looking for our support, then you already have it, by our silence. I've watched news reports of girls way younger than you, getting pregnant and I'm so glad that you weren't one of them. You seem to have learned your lessons well and I'll support the decision you've made. However, the only problem I see, there are two of you and only one of Andy. Since you've both decided to have sex with Andy today, how do you propose to solve the issue of which one will get Andy's cock first?\" Rachael requested.\n\n\"Oh, we've already solved that issue between us.\" Jen immediately added, \"If Andy is agreeable and we already know he is, Brianne will get to ride him first and I'll go second.\n\n\"I agree with both Brianne and Jen.\" Andy said in a husky voice.\n\n\"Well ... duh....\" Patty submitted, \"Andy you've got two beautiful girls who are going to give you the chance of a lifetime, you should be bouncing up and down with excitement right about now.\"\n\n\"Don't get me wrong,\" Andy replied, \"I'm as excited as they are. All of you are females so you don't know what it took for me to allow both Brianne and Jen to slide back and forth on my cock last night, and not try to angle my cock so it would go into them. Just before each of us had our orgasms, during the most rambunctious part of our activities, one slight angle change while they were on the back stroke, my cock would have entered their hot tunnel of love. I respect both of them and would not do that until they said it was ok. I've heard it said over and over again, both sexual partners have to consent. In our case, all three of us have to consent.\"",
        "Colleen stood up and walked the couple of steps over to Brianne's lounge and Brianne stood to meet her mother's advance. They wrapped their arms around each other, pressed their nude bodies together in a mother/daughter hug. While Colleen held her embrace she said, \"I don't have a problem with you enjoying a sexual encounter, you're certainly old enough, but I applaud you taking precautions until we can get home and get you to the doctor's office for a shot.\"\n\nThen Colleen looked at Andy, \"You're a smart young man Andy and I want to congratulate both you and your mother for you being the young man that you are.\"\n\nRachael had also walked over to Jen's lounge and both of them wrapped their arms around each other as she said, \"Jen, I don't have a problem with you having sex either, but like Colleen, I'm not ready to be a grandmother yet. Thank you for using condoms until we can get you a birth control shot.\"\n\nBrianne reached into the little cloth bag she had been carrying and pulled out a few condoms, to show everyone they were prepared. \"On the way off the Little Snot, Jen and I picked up some of the condoms.\"\n\nWith a huge smile on his face, Andy asked, \"Will you put it on me?\"\n\nBrianne and Jen broke out laughing and when they calmed down enough for Brianne to speak she said, \"Of course I will. Back in health class they had us put a condom on a banana because none of the guys would donate their body parts for us to experiment on.\"\n\nThe three mothers and Patty laughed and Patty added, \"That's what I was saying yesterday morning. I wish we had been nudists back when I was Brianne's age. I would have loved to have more experience with a guy than I had, on my wedding night. It would have spiced things up a lot.\"\n\nOne by one, each mother unselfishly agreed with Patty. They took a few seconds to briefly verbalize the fact of their wish for more experience with a guy, before they were married.\n\n******************\n\nSuddenly they all heard, \"Hey guys ....\" Bret called out as he and the two Hawaiian girls came walking over to the small group gathered in the coconut grove.\n\n\"We've been looking all over for you. We lost you after the ceremony was over. We went down by the marina to check for you on From Elise and Little Snot but you weren't there. I talked to the crew at the marina and they're willing to take us para-sailing. He said they'd be ready to go out by the time we get back there. Are you guys interested?\" Bret asked cheerfully.\n\nAndy handedly interrupted the sudden excitement Bret caused by saying, \"Hey guys, this is my mom, Amy White. She's a really cool mom.\"\n\nA trio of voices said, \"Hello Mrs. White.\"\n\nNot to be outdone, Brianne added, \"This is my mom Colleen Jamison and my sister Patty Williams and both of them are the best.\"\n\nOnce again, a trio of voices greeted Mrs. Jamison and Patty.\n\nJen spoke up next, \"This young lady standing beside me is my best friend and my mom, Rachael Baker.\"\n\nThe three new comers turned and greeted Jen's mom by saying in unison, \"Hello Mrs. Baker.\"\n\nAndy half turned so he could face almost everyone and introduced Brett and the two Hawaiian girls as the other three people who spent the night on board From Elise.\n\nStill excited about going para-sailing Brett blurted out, \"If you know anyone else who may want to go para-sailing, we can invite them too.\"\n\n\"They have two large boats so they can take a whole bunch of people.\" One of the Hawaiian girls added.\n\nBrianne and Jen looked at Andy with big smiles on their faces and after a short silence, \"Ok, it looks like both of you want to go, so let's do it.\" Andy added.\n\nPatty asked, \"Would you mind if I go get Tony, Beth and Barbie to go para-sailing?\"\n\n\"Absolutely not, go get them. While you're at it, invite Hanna, Terri, Audrey, Frank, Katie, Barbie, Beth, Angela, Brian and anyone else who wants to go.\" Brianne said.\n\nSuddenly, the proverbial light came on in Andy's brain. He turned and asked his mom, Colleen and Rachael, \"Hey why don't the three of you join us para-sailing?\"\n\nThe three surprised women looked at each other for a few seconds, without saying a word, before Amy spoke up, \"Do you really want three old ladies to go out with you and spoil your fun?\"\n\nBrett was the first to speak up, \"Ma'am if I may say, all three of you look fine and I personally wouldn't mind having the three of you tag along with us. All three of you look charming. I especially like what you're wearing.\"\n\n\"Aren't you Mr. Smooth Talker!\" Racheal exclaimed.\n\n\"WOW Brett, I couldn't have said it any better.\" Andy added with a huge smile on his face.\n\nWithin seconds, twin voices rang out from Brianne and Jen saying, \"Come on mom, you can go.\"\n\nAmy, Colleen and Rachael looked at the small group and then at each other. Amy shrugged her shoulders and nodded her head quickly followed by the other two. Colleen spoke first asking, \"Are you sure we won't get in the way of you having fun?\"\n\n\"Mom, we are here in Hawaii. I know our trip involved Brianne and I watching the kids but right now we don't have them and we have a chance of a lifetime to go para-sailing.\" Jen said. \"I would love it if you were to join us and enjoy the adventure.\"\n\nAndy and Brianne were quick to add their individual opinions which both agreed with Jen. Once again, the three ladies looked at each other before Amy said, \"Ok, I'd really like to try para-sailing and find out what it's like.\"\n\n\"I'm in.\" Colleen and Rachael said in unison.\n\n\"That's great mom!\" Jen excitedly exclaimed as she hugged her mom. Brianne and Andy reached out and hugged their moms at the same time.\n\nWhen Patty came back, she was followed by everyone who had not gone on the jet rides. Once everyone was together, they headed towards the marina. When they arrived at the marina, Andy opened the life jacket cabinet and between Andy, Jen and Brianne, everyone was given the right size life jacket. Before anyone walked out on the dock, they had their life jacket on and fastened.\n\nWhile waiting for everyone to put on their life jacket the captain of the first para-sailing boat called Leyanni on the secured radio and informed her that many of the Morrison group was going to go para-sailing. Leyanni asked him where the boats were headed when they left the marina and he gave her the GPS coordinates. She thanked him for the information and told him she would have a few security boats in that area immediately.\n\nIt didn't take long to load everyone into the two big boats and leave the marina. After clearing the last marina buoy, the boat captains picked up their individual microphone for the PA system and called for everyone's attention. Both of them welcomed everyone aboard and directed everyone's attention to the back of the boat where their deck crew stood. One by one they introduced each person in their crew. Each captain finished his announcements with the required safety instructions.\n\nAbout fifteen minutes after leaving the marina, the boat captains slowed their boats to a very slow crawl. The second boat moved in closer on the port side of the para-sailing boat so everyone on both boats could hear the captain explain that his crew had to put the harness on each person so they would be secure. He instructed them where to stand on the back platform so they could be hooked up to the para-sail. He finished by saying, \"If everyone follows all my instructions we'll have a fun and safe afternoon.\"\n\nAndy and Jen stepped up to have the harness put on first. One of the deck crew was a female and the other male. Andy smiled at Jen and asked, \"Want to switch things up and let the guy put the harness on you and I'll go over to the girl?\"\n\n\"Oh, you sly dog - - you!\" Jen exclaimed. \"You just want her to play with your cock and fondle your balls as she puts the harness between your legs.\"\n\n\"But Jen,\" Andy quietly said, \"I'm only thinking of you. That guy isn't bad looking either. I'm positive you're going to get wet when he reaches between your legs, close to that delicious pussy of yours, to fit you in your harness.\"\n\n\"Ok, ok\" Jen conceded, \"We'll do it the way you suggested and enjoy the experience.\"\n\nWhen Jen stepped forward to stand in front of the guy holding the harness, he openly looked at her naked body. He must not have been a boob guy because his eyes were riveted to the visible hairless crack between her legs. A smile spread across his face and when his eyes started to move up her body, Jen watched him before saying, \"I hope you are enjoying the view.\"\n\nWith a jerk of his head his eyes met Jen's eyes and his cheeks showed a bit of blush as he stuttered, \"Yo - Yo - You're very beautiful. Not just because you're nude and I can see all of you, but you are .... absolutely beautiful.\n\nThe young man looked up at Jen questionably, wondering what her reactions would be. Finally, Jen smiled broadly as she said, \"It's ok for you to look at me actually I loved it when your eyes were staring at my pussy.\"\n\nAs the deck hand picked up the harness Jen whispered, \"Do you have to put straps between my legs?\"\n\n\"Yes,\" he replied, \"Please part your feet so I can put the harness on you properly. I want to warn you in advance, I may touch you when I tighten the harness so don't jump ok?\"\n\nJen smiled and as she parted her feet she whispered again, \"Since you are going to be intimate with my pussy, my name is Jen. Don't worry about touching me. I want you to put this on me right so I won't fall out.\"\n\nThe young deck hand went about his job and secured Jen in her harness. As he was pulling on it to make sure it was tight in all the right places, Jen smiled at him and said, \"Well, that was fun. I can see you enjoyed yourself by the nice bulge in your shorts. Maybe later we can get some of the girls to take care of that for you.\"\n\nThe young deck hand looked at Jen for a moment before saying, \"We'll have to see how the day goes. If you will please step back, I'll hook your harness into the chute.\"\n\nJen noticed that Andy was stepping back at the same time but the one difference between them was his cock was hard and standing up against his abdomen. Andy reached out for Jen's hand during the last hooking up. When they were asked if they were ready, both of them nodded their heads and the boat sped up and the cable started to be let out. As it unrolled off the spool, Andy and Jen climbed higher and higher.\n\nAt first, both of them closed their eyes and while Jen shrieked with a mixture of fear and excitement, Andy felt something very strange deep down in his abdomen and traveling all the way to his balls. It was a weird tingling sensation that's hard to describe and little did he know most males who aren't used to being in high places get that same strange feeling in their balls.\n\nThe higher they traveled, the more they got used to being up there and then started to enjoy the view. They waved at the couple hooked up to the other chute and then waved to the small people on the deck of their own boat. All in all, they were up parasailing for about fifteen minutes before the cable started pulling them back down to the deck. The last fifteen feet or so of their ride they hooted and yelled gleefully encouraging others that the ride and the views were great.\n\nFrank and Katie were already in their harness and when the boat slowed down, Jen and Andy were unhooked and Frank and Katie stepped up on the platform to be hooked onto the chute. When the boat sped up, everyone watched as Katie screeched and Frank sat rather stiffly as they started to climb way above the water behind the boat.\n\nWhile Jen went to the bathroom, Andy opened the refrigerator and took out two bottles of water and handed one to Jen, when she returned. Both of them walked around the snack table and selected a few items and then went back out on the deck. The duo was kept busy telling everyone how wonderful the view was once they were parasailing way above the water. They answered other questions about the ride being scary but Jen assured the girls it was only because she wasn't used to the height. She told them once you're up there it was a great ride.\n\nThat was the way the afternoon passed. Everyone took turns parasailing until everyone had gone at least once or as much as they wanted to ride. Some of the more adventurous people mixed it up with different partners and went up two and three times. The second time Andy went up was with his mom Amy. This time he brought his cell phone and he took pictures of his mom when her eyes were shut tightly and her mouth wide open but no sound was coming out. He laughed and coaxed his mom to open her eyes and enjoy the view. Like the others, once they were up, Amy started looking around while telling Andy what a great view they had. Andy took some \"good\" pictures of his mom leaning back in her harness looking around.\n\nAfter everyone had their immediate fill of parasailing, both captains moved their boats close to each other and idled their motor so everyone could share their experiences with each other. Jen, Brianne and Katie took the young deck hand into the cabin and in seconds had his shorts around his ankles. He tried to pull them back up using the excuse the captain would be pissed at him.\n\nBrianne smiled and said, \"I don't think he'll even notice if you stop fighting us and cum quickly.\"\n\nKatie went to the galley and pulled a couple of paper towels off the roll and returned to find the young deck hand pumping his hips to the rhythm Jen had going with her hand. It didn't take long for him to start moaning and telling Jen not to stop. Brianne stood up and reached for one of the deck hand's hands and placed it on her left breast and encouraged him to gently squeeze it. Within seconds he stated he was going to cum. Katie moved to Jen's side and held out the paper towel. Suddenly he groaned and the first blast hit the paper towel dead center. While Breanne leaned towards him to kiss his cheek, Jen finished milking his cock.\n\nWhen Jen was finished pumping his cock Katie looked at the paper towel and said, \"What a waste. Maybe next time we can put this somewhere else.\"\n\nKatie threw the paper towel into the garbage and when she turned around she said, \"Hi.\"\n\nJen and Brianne turned to look where Katie was looking and they saw Rachael, Colleen and Patty standing in the doorway with huge smiles on their faces. The deck hand scrambled to pull his shorts back up thinking he was going to be in trouble. Jen turned and announced, \"Hi, we took care of this young man as well as we could because he meticulously made sure we were safely harnessed before parasailing. Everyone laughed except for the deck hand who managed a smile when he understood he wasn't in trouble.\n\nWith that said Colleen stepped forward to the deck hand and picked up both his hands and placed them on her breasts. He looked up at her nervously which was slightly quelled when Colleen smiled and said, \"You did an excellent job hooking me into my harness too, so as a reward, you can play with my naked body.\"\n\nWhen he didn't move his hands off her breasts, Colleen reached up and guided his right hand off her breast and slowly moved it downward across her abdomen and even more slowly across her bald pubic area until she felt his hand on her wet pussy. When she pushed his middle finger between her wet pussy lips, he realized he was given the permission to finger her. He took over by sliding his finger deep inside Colleen before he added a second finger. Everyone was watching as Colleen undid the snap on his shorts and pulled down his zipper. When she pushed his shorts down his cock popped out and pointed skyward.\n\nBrianne opened the little cloth bag she had been carrying and pulled out a condom. She held it out to her mother who suddenly got a surprised look on her face. \"Go ahead, take it mom.\" Brianne said.\n\nPatty stepped forward and said, \"Go ahead, you deserve to have some more fun.\"\n\nColleen looked at the young man for a few moments before asking, \"Would you like to put your hard cock in my pussy. I'm already wet so you'll slide right in. If you want to, move behind me and I'll bend over.\"\n\n\"But .... but .... the captain might give me some shit if I do that. I don't want to get in trouble.\"\n\n\"Don't worry, I know Leyanni and I'm sure she will approve of you keeping a visitor to the resort happy.\" Colleen said in a soft voice.\n\n\"Come on, step out of your shorts and put that condom on.\" Cooed Colleen.\n\nBrianne ripped the wrapper off the condom before saying, \"I'll put the condom on him mom.\"\n\nWithout any further hesitation Brianne kneeled so she was within reach of the deck hand's cock. She reached out and successfully rolled the condom down his length before she leaned forward and kissed the condom covered head of his cock. \"Ok mom, he's all yours. Have fun riding this wonderful piece of man flesh.\"\n\nThe deck hand didn't need any assistance when Colleen turned around, bent over at her waist and spread her feet apart presenting him with her delicious pussy. He stepped forward one step and while holding his cock, he rubbed it up and down Colleen's spread open pussy a few times before he aimed himself at her opening. Slowly he slid his cock into Colleen's tight, slippery vagina. Colleen squeezed his cock as he pushed forward until he was completely buried inside her.\n\nWhile everyone watched, the young deck hand held Colleen's hips and started pumping into her at a slow pace which he increased as time moved on. Finally, he was set in a rhythm which both he and Colleen seemed to be happy with. Colleen surrendered her pussy to the manipulations of the deck hand and confirmed it with moans, gasps, and words of encouragement such as; \"that's it, bury that cock deep inside me, oh you feel so good, your cock is touching the inside of me in all the right places. PLEASE ........ fuck me harder, I'm almost ready to cum sweetheart.\"\n\nEveryone watching was silent as the deck hand started moving faster and Colleen's shrieks increased in volume until she announced she was having a gigantic orgasm. Her reaction was not only verbal but her hips moved in many different directions all at the same time.\n\nSuddenly she announced another orgasm and this time if the deck hand wasn't holding her by the hips Colleen would have fallen forward. He felt her legs going limp just at the point when he felt his cum boil up from his balls and travel quickly until he felt himself cumming and filling the condom.\n\nBrianne was standing right near him when she realized his orgasm had taken its toll on him and he was about to fall backwards she reached out and supported him under his arms. Rachael and Patty were quick to move forward and hold onto Colleen as both she and the deck hand rode out their orgasmic pleasures.\n\nIt took a few minutes for both of them to revive to the point where they could separate and stand with some assistance. Colleen took one step to hug the young deck hand and pull him close to her naked body. In a dry mouthed whisper, she said, \"I want to do this again, but next time I want to use a bed. No more of this standing up and receiving pleasure like what you just delivered. Thank you so much for making my day. And I really mean it; I want more of your cock, after I get a chance to rest.\"\n\nThe young deck hand had an astonished look on his face as he said, \"Yes ma'am, I'd love to have another session with you. I've never had a young girl who can even hold a candle to the sex we just shared. I came so hard I thought I was going to break the condom.\"\n\nColleen smiled at him and pulled him back into her body for another long hug. When she released him she said, \"I'm glad you enjoyed it and when you get off today, I'll meet you on one of the yachts where we can use one of the beds, right Brianne.\"\n\n\"Oh yes mom, the beds are there to be used and I'm glad that you want to enjoy your first trip to Hawaii. I fully support you in anything you want to do.\" Brianne replied.",
        "\"Me too mom!\" Patty added quickly.\n\nAfter everything was done, almost everyone left and went back out on the deck while Colleen and the deck hand took a few minutes to clean up.\n\nThe captain of each boat was satisfied to wait and drift in the open water until someone mentioned they wanted to go back to the marina. They coordinated their return with the security boats and of course Leyanni. They fired up the big motors and sped across the water towards home. It took a little more than a half hour to get back to the marina. Once they were back Andy opened the life jacket chest and organized the vests as they were returned.\n\nColleen was one of the last ones to get off the boat but before she did she walked over to the deck hand and asked him privately if he wanted to have sex with her again? He was all smiles as he replied, \"YES MA'AM! As I told you before, young girls don't know what to do like you did to me. I would consider it an honor to learn more from you and in the process satisfy your needs.\"\n\n\"Listen, would you like two of us to help with your sexual education? I can talk my friend Rachael into coming with me. I know from the past that young men can stay hard much longer and when it goes down you have a faster recovery period. Do you think you want to try to satisfy two older women?\"\n\n\"I don't know what you did with your pussy to squeeze me so tightly but I loved the sensations it gave me. Yes, if you want to bring your friend Rachael with you, I'd be stupid to turn down an offer like that.\" He replied.\n\nColleen thought for a moment before she said, \"You know, my daughter and some other kids are going to be sleeping on the Little Snot tonight, would you like to spend the night with us on From Elsie. You don't have to worry, Leyanni won't mind a bit. She told us when we arrived that we could enjoy anything that was here at the resort. Our personal rule is both parties have to agree for us to enjoy sex.\"\n\n\"I'm single so I don't have to hurry home for anything and as long as I'm here tomorrow morning to report for work, I'm up for that.\"\n\n\"Good, do what you have to do and I'll be down here on the dock or on one of the boats say around nine o'clock tonight. You may want to go home and get your work clothes for tomorrow and you can shower right on the boat.\" Colleen said as she leaned forward and planted a kiss on the deck hand's lips.\n\nAs she turned to step off the boat the deck hand said, \"I'll be there. See ya later.\"\n\nColleen waved over her shoulder then scurried along to catch up with her daughters, Jen, Andy and Rachael who were all waiting by the life jacket chest. When she got to them she was all smiles as she relayed what she talked about with the deck hand.\n\nWhen Colleen finished her story, Rachael suggested they find a second bit of young stuff so both of them could enjoy sex at the same time and then they could always switch and keep going. Colleen broke out into laughter saying, \"Listen to us we sound like a couple of horny school girls.\"\n\nColleen walked back over to the young deck hand and asked, \"Do you have a friend you can bring with you tonight. Racheal agreed she wanted to be with us but said if there was another guy we could both play at the same time and then switch. Are you interested?\"\n\n\"Hell yes,\" the deck hand replied, \"I know just the guy to bring with me. My brother is always jerking off so I'm positive he will have enough stamina to give your friend a run for the money.\"\n\nColleen hugged the young fellow and then went back to report to Rachael that there were going to be two guys meeting them around nine o'clock.\n\nJen giggled when she heard the plan Colleen described and immediately replied, \"That's great mom, I want you to experience as much as you can on this trip.\"\n\nRachael hugged Jen saying, \"How did I get so blessed with an understanding daughter? Thank you, Jen.\"\n\n\"Mom, I hope you and Rachael really enjoy your stay on From Elsie but if you want to come on board the Little Snot with your young studs, all of you will be welcome.\" Brianne added.\n\nColleen looked at her daughter for a moment of contemplation before asking, \"Won't we be cramping your style if we stay on Little Snot and have sex with a couple of young studs?\"\n\n\"Hell no,\" Brianne said, \"There is no way you'd cramp anyone's style mom! One of the best parts of this afternoon was watching you take on the deck hand. I didn't know you had that much energy and stamina.\"\n\nEveryone laughed for a few seconds before Colleen spoke up saying, \"Young lady, anytime you want to try to match your momma's energy level let me know and we'll do side by side endurance tests.\"\n\n\"As exciting as your offer is,\" Colleen said, \"I think it would be better for Rachael and me to take our studs over on From Elsie for tonight. If things work out tonight, Rachael and I may take you up on that offer to be on the same boat. How's that sound?\"\n\n\"Mom, as long as you are ok with being near your daughter when she's enjoying sexual activities, I would love to watch you with your young stud. I'm way past being that shy girl I was. I now know if I want something, I have to go after it. Right now, Andy's cock is what I want and I don't care if you are right beside me as I take him into my body for the first time.\" Brianne added.\n\n\"That goes for me too mom.\" Jen replied.\n\nWithout anyone saying anything the small group turned and started walking back towards the coconut grove. While they walked everyone shared their individual thoughts and the consensus was; everyone enjoyed parasailing and watching others go up also.\n\nWhen the group of parasailers reached the coconut grove they saw everyone standing in small groups, involved in lively conversations, about their afternoon adventures. Brianne told her mom that she was going to go and check in with Tina and Jeff to see if they wanted some time alone, without the kids. Jen told her mom she was going too.\n\nAs Brianne and Jen approached Tina and Jeff and the five kids, all of the kids ran over to them and hugged them. Both Brianne and Jen kneeled down in the sand and listened to the three Simpson kids excitedly talk over each other, telling the girls all about their boat ride and watching their dad and mom go up in the air.\n\nWhen there was a break in the story telling, Brianne asked Jean and Josh if they had fun on the boat. That started another round of story-telling by the two of them. Both girls smiled and laughed as Jean and Josh told their story.\n\nWhen they finished the girls stood up and Jean and Josh hung on Brianne's legs while Abby and Deana hugged each of Jen's legs. John watched all the younger kids hanging on Jen and Brianne. Jeff laughed as he said, \"It looks like the kids really love you two.\"\n\nBrianne giggled, \"Yes it certainly looks that way. Did the two of you have fun parasailing this afternoon too?\"\n\n\"Oh God yes,\" Tina quickly replied. \"The people on our boat were so good to watch the kids so Jeff and I could go up together. We've never done that before and the views were so spectacular. I'm glad we decided, at the last minute, to go.\"\n\n\"I am so glad you had a great time.\" Brianne added, \"We had a great time too. But I came over to ask both of you if you wanted some time alone. I mean just the two of you. Jen and I will take care of the kids if you want to wander. We can go down to the park with them and then take them to the cafeteria when it's time to eat. You two are on a mini vacation too, so you should enjoy yourselves also.\"\n\n\"Are you sure it won't be a problem to take them for a while?\" Tina asked. \"We would like to explore the resort for a little while.\"\n\n\"Hey guys, want to go to the park and play?\" Jen asked.\n\n\"YEAH! We want to go to the park!\" All the kids yelled at the same time.\n\n\"Oh Tina,\" Brianne started to say then hesitated.\n\n\"What?\" Tina inquired.\n\n\"Oh nothing, we'll manage ...\"\n\nTina wasn't going to let it go, \"What's on your mind Brianne?\"\n\n\"Ummm .... I was just going to ask you if ...... oh never mind, it won't work ....\"\n\n\"Brianne, come on,\" Tina said in an encouraging voice, \"You can talk to me. Listen, you helped Jeff and me so I can help you with something.\"\n\n\"It won't work because mom and Rachael will make too much noise.\" Brianne finally said.\n\n\"What are you talking about?\"\n\nAfter more hesitation, Brianne finally said in a low voice, \"Well, while we were on the boat this afternoon, mom got kinda close to the deck hand. To make a long story short, mom and Rachael want to spend the night with a male partner on one of the boats tonight. I know both of them are going to make a lot of noise and I don't want the kids to be disturbed while they are sleeping. We'll figure out something.\"\n\nThe younger kids were begging Jen to take them to the park so Tina said, \"Let's talk about this later. I'll help you figure out what we can do so everyone has a chance to do whatever they want.\"\n\nThe two of them stepped into each other's arms and pressed their nude bodies together as they hugged. Brianne didn't want the hug to end but the kids were ready to go to the park so reluctantly she broke the hug and said, \"Ok, let's go to the park.\"\n\nBrianne told her mom they would be at the cafeteria when it was time to eat and then followed Jen and the kids. They headed straight for the park where there were swings, slides, jungle gym and a host of other playground items.\n\nBrianne and Jen were committed to do everything the kids wanted to do, on all the park equipment. When they arrived, the kids went on the swings first; Jen and Brianne were tasked with pushing the younger kid's swings. The slides followed. John went to the cabinet and pulled out the small hand towels for everyone to sit on when going down the slide.\n\nWhen it came to climbing the jungle gym, John wanted Brianne and Jen to climb up to the top with him. However, the older girls had to take turns because the four younger kids were a bit too small to climb on the jungle gym. Jen and Brianne alternated between going on the jungle gym and taking the younger girls to play on other things.\n\nEvery time one of the girls climbed the jungle gym, John timed his climbing just right so he could climb up directly behind them. Of course, he had to look up to make sure to grab the next rung above his head. On the way up, John encouraged each girl to climb all the way to the top then turn around and sit down on the metal plate at the very top.\n\nAnyone who has climbed a jungle gym knows the rungs at the top are not close together so to put their feet on a rung, the girls had to sit with their feet parted. John would wait until they were seated and then climb up until he was between their feet and stand there to talk with either Brianne or Jen. Of course, both girls knew what John was doing but nothing was said to him.\n\nWhen everyone was tired of climbing on the jungle gym, riding on the spinning wheel, riding on the teeter-totter, swinging, and riding the rocking horses, they headed over to the large pipe obstacle course, with the pipes set at different angles. There was an open space between them so there was light inside the pipes. To get through the pipes, everyone had to crawl on their hands and knees. John being the gentleman of the group, let Jen or Brianne crawl through the pipe ahead of him and he'd follow close behind.\n\nThey moved back through some of the park equipment until everyone was tired and wanted to sit down for a little while. When it got late in the afternoon, Brianne suggested they all go over to the big shower room so everyone could cool off and get clean before it was supper time. All the kids were in agreement so they put their towels in the proper bin and started walking towards the big unisex shower. This shower was good because it was one big room that wasn't divided in any way and it had many shower heads sticking out of the walls. This meant that everyone could shower at the same time.\n\nWhen they arrived at the unisex shower there were some men and women in the shower room. Most of them were actually showering, but a couple of them were enjoying some stand up doggy style sex. Of course, when they arrived the kids were still talking and made enough noise so the couple heard the kids.\n\nBrianne was the leader of the group so when she looked into the shower room and saw the couple having sex, she said, \"Don't worry we aren't in a hurry. I can take the kids over to the toilets and have them pee before they take a shower.\"\n\nInstead of going into the shower room Brianne and Jen walked the kids down the other side of the shower wall, to the toilets, so they could go to the bathroom. They had been drinking water all afternoon so every one of them, including Jen and Brianne had to pee. The toilets were all lined up against the wall without any partitions between them so it was easy to keep track of all the kids at the same time.\n\nWhen the lady stepped out of the shower room and said it was ok to bring the kids into the shower, Brianne motioned for the kids to follow her. Between Jen and Brianne, they turned on the showers and adjusted the water for each one.\n\nThere were liquid body wash dispensers between each two shower heads and Brianne showed John how to pump the body wash out. Meanwhile, Jen and Brianne each took one of the younger kids and started to wash their body. When they finished with the first two they started on the second two. When they were finished and ready to take their own shower, they left the water running for the kids to play in and moved across the shower room and turned on two more shower heads. Actually, the move put them between the two couples still in the shower room.\n\nThe two ladies noticed the girls didn't have any shampoo or conditioner with them so both of them walked over to Brianne and Jen and offered to shampoo the boy's hair and let them use the shampoo on the girl's hair. Both Jen and Brianne thanked both women for their offer to help. They told them it would be alright if they wanted to wash the boy's hair, and \"we'll wash the girl's hair.\"\n\nThe ladies stepped in front of the guys and had them turn and face them so they could shampoo their hair. It only took a few minutes and all four kids had been shampooed and the girls had conditioner put in their hair. The ladies moved back over by Brianne and Jen asking them if they wanted their hair shampooed and conditioned. Both of the girls accepted and the women had Jen and Brianne turn around and face away from them so they could wash their hair. Both Jen and Brianne were asked to lean back so the ladies could give them a proper shampooing, so they did.\n\nIt didn't take long for Brianne to realize the guy on her side was staring at her naked body while the water from his shower head ran down over his body and his hard-on. He didn't touch himself but it was obvious he was interested in Brianne's assets.\n\nThe woman washing Jen's hair had her do the same thing and Jen noticed the guy in front of her had a hard-on. But the woman washing Jen's hair asked her if she could spread her feet and bend a little at the knees so she could get the top of her head better. When Jen moved into position she watched the smile spread across the guy's face as he blatantly stared at her spread open pussy. Suddenly she felt the moisture starting to run towards the opening of her pussy.\n\nThe woman heard the instructions that Jen was given and she asked Brianne to do the same thing. When Brianne moved into the requested position she smiled at the guy and gave him a thumb up signal. She knew what was going on and she didn't mind allowing the guy to get some joy out of watching her get her hair shampooed and conditioned.\n\nThe women milked their time for as long as they could but they had to finally finish the job they volunteered for. When Brianne stood up she looked behind her and saw that Jen had an admirer also. Brianne squeezed some body wash out of the dispenser and started rubbing it into her chest. When she realized that Jen was finished getting her hair washed and conditioned, she asked Jen to come over under her shower head.\n\nWhen both of them were together Brianne suggested they wash each other's body. After she made that suggestion she winked at Jen and when Jen smiled she reached up and got some body wash in her hand. Brianne refreshed the body wash in her hand and they started on their chests and then took turns washing each other's back.\n\nWhen that was finished Brianne had Jen turn around and face away from her so she could wash the rest of Jen's front. With body wash in her hands, Brianne started on Jen's flat abs and then moved down to her pubic mound. When Brianne looked over at the couple, the guy had his mouth gapping open as he watched Brianne's hands disappear between Jen's thighs. He watched as Brianne spread Jen's pussy and inserted her middle finger into Jen's pussy and then withdraw it and move up to her clit. Jen visibly quivered when Brianne touched her clit. Suddenly, the show was over for that guy and when Brianne faced the other couple, Jen repeated everything Brianne had done to her.\n\nFinally, they stopped and finished washing each other and shut off the water. They moved to the other side and shut off the water for the kids and said, \"Come on we need to get you dry.\"\n\nJen and Brianne were the last to leave the shower room and as they were about to exit both turned around and Jen said to her guy, \"I hope you liked the show because I sure did.\"\n\nBrianne looked at her guy and said, \"The pleasure you got from looking at my pussy will help you through the roughest nights in the field. I hope you enjoyed yourself because I did and now I have to go find my boyfriend and let him fuck my juicy pussy.\"\n\nBrianne thanked both ladies profusely and told them she really appreciated the help and the shampoo and conditioner.\n\nBrianne and Jen dried the four younger kids and let John dry himself. Brianne and Jen took a little longer to dry their hair and fluff it up because they didn't have a brush with them. When they were finished they decided to take the kids for a walk until it was time for supper.\n\n******************\n\nAfter the kids left to go to the playground Tina and Jeff decided to walk down the beach for some privacy. As they strolled along Tina would dash into the surf and pick up some of the beautiful sea shells she saw and put them in the little bag she was carrying.\n\nWhen she was bent over at her waist picking up shells, Jeff's cock started to rise. Tina noticed and said, \"Ghee ...... Jeff, I love when that happens to you.\"\n\n\"Do you want to do it right here where anyone can come by and see us or do you want to go down the beach further?\" Jeff asked.\n\nTina smiled at her husband before she said, \"Honey look at me, I stand her completely naked. More people have seen my naked body since all this stuff started and you want to know if I want more privacy. Jeff, I don't care if you bend me over in the middle of the cafeteria, as long as the kids aren't there, and pound my pussy in front of everyone else.\"\n\nJeff stepped back and stared at the bald slit he loved. \"I love you so much Tina. You are the best thing to ever happen to me and I know I couldn't live without you.\"\n\nThey stepped towards each other and into a body mashing hug. Their tongues dueled while their lips pressed together. Both of them allowed their hands to roam over each other's body. After squeezing Jeff's ass Tina went straight for his hot rod. Meanwhile Jeff slipped his hands between their upper bodies and gently massaged Tina's small tits. Both of them moaned into each other's mouth because of the external pleasure they were equally receiving. When they finally broke their kiss and embrace, they had to take a few seconds to catch their breath."
    ],
    "authorname": "RecHiker",
    "tags": [
        "father daughter incest",
        "mother",
        "sister",
        "daughter",
        "brother",
        "father",
        "brother sister sex",
        "incest",
        "nude",
        "exhibitionism"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/the-morrisons-ch-27"
}