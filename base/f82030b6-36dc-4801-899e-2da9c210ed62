{
    "title": "Melissa Shows Off Ch. 01",
    "pages": [
        "This story is a collaborative effort with Kinkycanucks. Please checkout their stories and I know they have more in the works. It is based upon some true events with some fantasies mixed in.\n\n****************************\n\nJack was a single guy in his late 20's who was coming off a bad relationship. A friend of his was trying to play matchmaker because she thought Jack was wasting his time and could attract a great woman if he was a little more confident. \n\n\"Come on Jack, you have to get back in the game. You have everything going for you, good looks and success,\" his friend said. \n\nThe woman his friend invited to meet was nice but Jack wasn't the least bit interested, however one of the other guests caught his attention. He noticed a cute, tall blonde across the room and was immediately attracted to her. She looked much younger than him but he couldn't take his eyes off of her. She noticed him looking at her, smiled a bit and continued talking to another man who appeared closer to her age. Jack noticed her pert breasts in her satin tank top and her ass filled the black leggings she was wearing. He was finding himself staring at her more and more, noticing every detail down to her mannerisms during her conversation. She had a style about her, her slight head tilt when she was listening more intently to the small dimples when she smiled. He even saw the exact moment when the other man lost her attention, her reaction was a deep breath with raised eyebrows and then a tight lipped smile. \n\nThe young woman must have sensed that Jack kept looking, her soft blue eyes met his big brown eyes a few times and there was a spark. The game continued, sometimes they would pretend not to notice that the other was looking and sometimes they would simply exchange a casual smile. It was like they were having a silent conversation. She was intrigued by the man watching all the way from across the room, he was handsome, sophisticated looking which set him apart from most of the guys at the party. She liked how he was dressed too, casual but yet stylish in his dark blue jeans and patterned long sleeved shirt which was untucked. She also appreciated his clean cut look, freshly shaved and hair neatly brushed. \n\nEven as the tension built between them Jack still thought the lovely young lady was much too young for him and probably out of his league. Again it was his lack of confidence preventing him from realizing at six feet tall, in good shape (185 pounds) and a full head of dark brown hair he was quite a catch. \n\nSuddenly seeing the object of his fascination standing by herself and emboldened by a few drinks, Jack summoned up all his courage, deciding to go over and speak with her. Worst case scenario he was only trying to be friendly, nothing more or so he told himself. He was greeted with a big smile that was warm and inviting, she introduced herself as Melissa. He quickly learned she was working as a server and part time bartender at a local establishment Jack had never heard of. Jack and Melissa immediately hit it off and found themselves huddled in a corner of the living room talking without any concern for the rest of the guests. \n\nJack was much different from the guys Melissa was used to. He was more mature and she found his boring stable job as an accountant to be refreshing. She also found him to be charming and witty. The other men her age were unsure of where they were going in life and quite frankly, could be real jerks at times. Jack was different, she gladly gave him her phone number at the end of the night figuring it was worth the chance to try dating someone like him. \n\nMelissa left with a friend at the end of the night who had noticed the extended conversation with Jack. She confirmed to her friend that she really liked Jack and hoped he would call. Much to her delight Jack called her moments after she made it home. Normally he would have waited but something made him reach out and his instincts were right, Melissa had excitement in her voice and was ready to take a leap of faith. It was just after midnight and he had talked her into meeting at a local pub near her place for a nightcap. \n\nTheir first date would be just hours after meeting at the party. They talked for the next two hours until the bartender announced last call. Jack and Melissa held hands as they walked back to her apartment and made plans to meet for dinner the very next night. At the doorstep of her building there was an awkward moment of uncertainty, both of them were trying their best not to turn off the other by seeming too pushy or desperate. Simultaneously, they leaned forward giving each other a good night kiss. This would be something over the years Melissa and Jack playfully argued about, who initiated the first kiss? One thing they couldn't dispute was how that first light kiss turned into a much deeper one, then turned into a short makeout session on the street. \n\nThe next day had them both waiting anxiously. When Jack arrived and pressed the buzzer his heart pounded in his chest and when Melissa appeared and opened the door it almost stopped. He couldn't get over her long legs and they looked amazing in a very short, tight jean skirt. Jack also appreciated the cami top that revealed some nice cleavage. The entire package was virtually perfect, her hair was flawless, nails freshly painted and again her legs caught his attention thanks to her four inch heels. He walked her to the car and acted like a true gentleman by holding the door open for her as she climbed inside. Melissa was trying her best to be ladylike but it wasn't completely possible with what she was wearing. She had one leg on the ground as she placed her left leg inside the car, her legs spread open giving Jack a clear view up her skirt to her powder blue bikini panties. She knew he was catching a bit of a glimpse so looked away feeling the warm blush of her cheeks. Jack on the other hand didn't turn away, instead hoping for a better view of those legs and a peek at her panties was the universe's way of giving him a reward for being a gentleman. \n\nHis chivalry continued at the restaurant, Jack ran around to open the door for Melissa again. She was happy, no other guy had treated her like that before and again in the restaurant he pulled out her chair. He was succeeding in impressing her. \n\nDinner was excellent and there was an instant connection, they shared a bottle of wine as they ate the best Italian food around. After dinner they checked out a band playing at a nearby club but quickly, Melissa mentioned that they weren't good and Jack agreed. There was a sexual tension building between them throughout the date and Jack decided to push the envelope by asking Melissa to go back to his place to watch a movie. Melissa was surprised by the invitation, she didn't want to seem easy but she was also feeling turned on, so accepted. After a short ride back to Jack's they shared some more wine as they watched the movie. It wasn't very memorable for Melissa, she was distracted, and they turned to making out on the sofa. \n\nAfter some passionate kissing and touching Melissa found herself naked in his bed watching him strip off his clothes. Things moved rapidly; he had a nice body and an average size penis which made her want him. Jack scanned her body while climbing onto the bed. He started at her breasts which were 34B in size, they were shaped perfectly with small pink nipples which were already hard as buttons. Her tummy was flat and smooth and she was neatly trimmed between her legs. She looked even better than he imagined which was saying something. \n\nThey kissed and fondled each other's naked bodies until Jack moved down to eat her pussy. Melissa could tell he knew how to please a woman because of his expert like oral skills that quickly brought her to two orgasms. She returned the favor by moving down and sucking his cock. When Jack finally entered Melissa's pussy, he started out making soft, gentle love to her, slowly moving his dick in and out. As he picked up the pace the hotter she got. Soon he was fucking her fast and furious. He turned her over and fucked her from behind hard, their bodies slapping together loudly as they both moaned and grunted passionately. Melissa was trying to control her audible outbursts of pleasure trying not to appear slutty but the intensity of their sex made that impossible. She came again followed quickly by Jack erupting deep inside her. \n\nMelissa spent the night at Jack's place waking up to the smell of bacon frying as he cooked her breakfast. She came out of the bedroom wearing one of his white dress shirts that showed off her firm legs and allowed her nipples to show through. It was difficult for Jack to keep his eyes off of her throughout breakfast. She ate slowly enjoying each bite and delighted in the desire building between them. She kept smiling knowing where they were going to find themselves soon enough. Jack took charge as soon as he saw the last piece of bacon lifted from the plate and placed into her mouth, he scooped her up from the chair, tossed her over his shoulder and carried her off to the bedroom. \n\nUnlike the night before they immediately had very heated, passionate sex to the point they were both struggling for air and sweating profusely from their efforts. They couldn't get enough of each other. Jack pounded Melissa's pussy hard and she responded by begging for him to fuck her harder and faster. He did what she wanted until he had to slow down to catch his breath though never stopping his thrusts deep inside her. Sensing he needed a break Melissa got on top of him and rode his cock allowing him to play and suck on her perfect, luscious breasts. \n\nJack looked up at Melissa while she was bouncing on top of him, he couldn't believe that a woman as beautiful as her would end up in his bed. They kissed and carried on as they screwed in a variety of positions ending with Melissa on all fours; this was their favorite. In this position Jack had perfect access to her round ass. He could feel and squeeze her cheeks while driving deep into her, it felt almost primal. He wanted to take her anally as he stared down at her other entrance but she refused, not wanting to do that. Jack understood and was happy to continue his assault on her pussy until they finally came in a raging mutual orgasm. \n\nFrom that day forward Jack and Melissa were inseparable as a couple. Their sex life was the hottest it had ever been. It was the kind of raw animal sex you have at the beginning of a hot relationship. They couldn't keep their hands off one another and were having sex as often as possible, sometimes multiple times per day. They were fucking in a variety of places and continued to try new positions but Melissa just wouldn't agree to anal sex no matter how much Jack asked, begged and pleaded. \n\nAs weeks turned to months to eventually over a year they were becoming more adventurous in other ways too. It wasn't unusual for Jack to have several people over to his house on the weekends to party and it was common for them to spend the night so as not to risk driving while intoxicated. There was one time a couple of Jack's friends crashed on their bedroom floor while a few others slept in the living room. As they climbed into bed Jack started to get a little frisky but Melissa was nervous with his friends right there in the room. It appeared they were fast asleep but it was still a risky move. \n\n\"Stop it Jack. Fred and Mike are right there,\" Melissa whispered. \n\n\"Come on babe, they're zonked out. They won't wake up. Come on, I'm so horny right now.\" \n\nJack's hands were moving all over Melissa's body as he tried to coax her into having sex. His finger found her pussy damp so he knew if he pressed a little further, she'd probably give in. \n\nFinally she caved and told him, \"Okay but be quiet.\" \n\nHe slipped off her sleep shirt and then her panties. Paranoid about them waking, Melissa kept looking at the guys on the floor to make sure they were still asleep. Jack maneuvered quietly between her legs and entered her wet pussy, he started to fuck her slowly. Melissa whispered for him to cover them with the sheets but he ignored her request. He continued to fuck his girlfriend knowing that either or both of his friends could awaken at any moment to catch them in the act. The thought of possibly getting caught turned Melissa on more than she would admit. Every time either friend made a noise or the slightest movement, she would get a rush of adrenaline. Subconsciously, Jack wanted his friends to wake up and see him in the act of fucking his gorgeous girlfriend. He knew they were always checking her out and this would make them even more envious. He began to groan softly; even Melissa let out some muffled moans unable to be silent thanks to being a little drunk and very horny. \n\nMelissa swore she saw Fred's eyes open just as she started to cum, but it was too late to stop at that point. Her orgasm triggered Jack's and he came inside his sexy girlfriend. When they were done, Melissa pulled the sheets over their naked bodies while continuing to watch their guest's eyes. After a minute or two she decided they were still sleeping or at least pretending to be. The next morning she knew she was wrong, Fred kept looking at her in a weird way giving her a sly grin from time to time while drinking coffee but neither of them said anything. Melissa found it to be exciting that he did see them and could envision her naked anytime he wanted, but she never told Jack; it would be her little secret. \n\nThere was also another time when they had guests sleep over, Melissa got up in the middle of the night to use the bathroom. When she finished and came out she was surprised to see their friend Max standing there waiting his turn to relieve himself. He was visibly drunk and acting different from when he was sober. He stood blocking the way studying her, she was wearing a large mesh tank top and pink bikini panties. His eyes were locked onto her tits staring through the mesh. Melissa felt her cheeks flush as she brushed passed him, the palm of his right hand scraping over her flat tummy, his head turned to watch Melissa's panty covered ass as she walked down the hall to the bedroom. She didn't look back but knew his eyes were on her. Again she felt the excitement from another man's lust for her and decided that, too, would be her little secret. \n\nSomething changed for Melissa, when she knew Jack's friends were going to be around because she began to dress more provocatively. Her tops showed plenty of cleavage, her pants were tighter, shorts were even shorter as were her skirts. Even how she moved was more sexual, making sure to lean forward more giving the guys glimpses of her breasts, bending over to show off her ass and sitting in ways to accentuate her long legs. It was a fun little game. Jack's buddies enjoyed to try and see up her skirt and see what panties she was wearing. Jack took notice of his girlfriend's attire in front of his friends, he took great pleasure in knowing they were checking her out and undressing her with their eyes. Undoubtedly, they were fantasizing about what she was like in bed and likely talking about her when he was not around. Melissa and Jack had a silent agreement that her brazen attire was acceptable since it turned them both on. \n\nThen one afternoon things accidentally went to another level when Jack invited Fred and Max over to watch the football game. Melissa had been working in the garden all morning and went to take a shower before the guys arrived. While she was cleaning herself up they showed up early and were already drinking beer in the living room when she came out of the shower. Melissa went into the living room looking for Jack, drying her hair with the towel. \n\n\"Jack, what time are the guys going to be here?\" \n\nThe guys were stunned to see a stark naked Melissa standing before them. They openly stared at her pert breasts as they bounced while walking. Their eyes drifted down to gawk at her shaven pussy, then down her legs and back up again taking on all of her in her naked splendor. It was only a moment before Melissa realized Jack's friends were there and she was giving them a show they would never forget. She let out a shriek of total surprise, then tried to quickly cover herself with the towel only to drop it onto the floor. The men got a great view of her perfect, round butt as she picked up her towel and quickly exited the room. While Jack was also taken by surprise he was also in his glory, his best friends were practically drooling over seeing Melissa nude. It wasn't long before she returned in tight compression shorts and a sports bra, blushing when she said hi to Fred and Max. They were clearly still picturing her without her clothes on which were making her juices flow. \n\nFred told her, \"You didn't have to get dressed on our account.\" \n\nMax added, \"Yeah I kind of liked the towel better.\"\n\nMelissa responded, \"Well guys I hope you enjoyed the show because you'll never see another naked woman this hot again unless you pay for it.\" \n\nThe banter relaxed everyone so they could settle in to watch the game. Melissa reveled in the role of waitress for the afternoon because she knew all eyes were on her each time she got up. She even gave her ass a little extra wiggle when walking back and forth as if she were a runway model. There was a heavy sexual tension in the air all afternoon that had both Melissa and Jack on edge. As soon as the guys left Jack was all over Melissa. While he was fucking her, Melissa pictured herself being naked in front of Fred and Max again but fantasized about staying naked all afternoon while they drooled over her beautiful body. She thought about opening her legs in front of them to show them her pussy lips and even how it would feel to have Fred or Max's dick plunging into her rather that Jack at that moment. She moaned loudly and begged Jack to fuck her harder. \n\nJack saw she was deep into her thoughts with eyes closed tightly and thought he knew what she was imagining which turned him on more. The guys had commented on how lucky he was while she was off getting dressed giving him opportunity to add fuel to the fire by bragging about her sexual appetite. He wanted to feed their fantasies about her and his own too. He was thinking about them fucking her too as he fucked her harder and faster. Melissa came first, her body flexing as she wrapped her arms and legs around Jack. It was intense and Jack was quick to follow with a series of deep grunts. There was a silent pause as they both were lost in thought wanting to share with each other but both afraid to. \n\nTheir sex life did settle down after a while, they still were very active even after they got married less than a year later. It seemed to be a trend among their friends as more of them were getting hitched. Max's wedding was coming up and over dinner one evening Jack informed Melissa that a few friends were getting together at a local strip club for a small bachelor party. She wasn't the jealous type and knew a visit to the strip club was pretty much a guarantee for a bachelor party so had no concerns. She also figured Jack would come home hot and horny from seeing so many naked girls which meant some great sex. \n\nSo that night in anticipation of her horny husband returning home Melissa put on a sexy black lace bra and panty set with stockings including four inch heels. She greeted Jack at the door just before two in the morning. Jack took one look at his sexy wife and led her into the bedroom where he quickly began to grasp, fondle and grope her tight body. He played with her breasts and ate her pussy until she came twice before climbing between her legs to fuck her. He turned her over to take her doggie style and pounded away. \n\nHe couldn't last long, clutching her ass as he started to shoot cum deep into her pussy while muttering, \"Oh Tabitha, you are one hot piece of ass.\" ",
        "Melissa quickly disengaged, turned over and glaring at her husband, \"Who the hell is Tabitha?\"\n\nJack didn't understand at first what she asked then realized he screwed up badly. \n\n\"Um, uh, uh, nobody...I don't know what I was saying.\" \n\n\"Don't give me that shit. Who is she?\" Melissa now said sitting up with fire in her eyes. \n\nJack tried his best to calm his wife but that wasn't going to happen, Melissa was pissed off and wasn't falling for any of his bullshit answers. Completely defeated Jack confessed that Tabitha was his ex-girlfriend, in fact she was a former stripper that danced at the club he was at for the bachelor party. She no longer worked there but being there made him think of her and brought back some memories. Melissa was fuming that he was thinking of an ex-girlfriend and a stripper no less. She didn't care if she was being unfair or mean but referred to Tabitha as a whore. Jack found himself sleeping on the couch instead of in his bed; even worse the fight continued early the next morning and into the afternoon. In a weak attempt to lessen the tension Jack suggested he take her out to a nice restaurant that evening. The one he was suggesting had a five star rating with a small nightclub too where they could have some drinks and dance. While he wasn't the biggest fan of dancing, he knew Melissa loved it. \n\nMelissa agreed to the date night but was making Jack pay for it, she went shopping with his cash instead of her own for a new outfit for the evening. She felt like he needed to be taught a lesson and it was influencing her choices for clothes. What she was picking was far sexier and more revealing than normal including some new stilettos. When it was time to get dressed to go out she made him get ready in the guest bathroom while she was in their bedroom. As was the routine Jack was ready first and after a while he began feeling anxious because it was getting close to their reservation time and he hated being late. \n\nHe was about to go check on her when he heard her call out, \"Close your eyes, I want to surprise you.\" \n\nJack closed his eyes, excited to see what she bought. He heard the distinct sound of Melissa's heels clicking on the hardwood as she walked down the hallway. When they stopped she told him to open his eyes. \n\nHe did as he was told. He saw Melissa and was stunned. Her heavily made up face with deep red lipstick, eye shadow, blush to highlight her cheeks were more than he had ever seen her wear. She had her blonde hair pulled back into a high ponytail just like Tabitha used to wear, which made him wonder if she had seen a picture of his ex-girlfriend but he was not going to ask. Her new dress was an extremely short, slinky black satin slip dress that clung to every curve of her body while barely covering her ass. It had a deep V-neck that exposed a lot of her cleavage and to add to the allure, Melissa had loosened the spaghetti straps so it hung even further down her breasts. She did a little twirl and that is when Jack noticed the bare back and her four inch, clear, open toed heels made her already long legs seem longer. He liked the added detail of her nail polish on both her fingers and toes matching her lipstick. She looked sexy. \n\n\"Wow, you're one sexy woman Melissa. Maybe we should order a pizza and stay in to have some fun instead.\" \n\nJack said only half joking because he was getting more and more turned on looking at her. \n\n\"No way stripper lover, you owe me a nice dinner and aren't getting off the hook that easy,\" She shot back quickly but chuckled after saying it letting him know she was also playing. \n\nMelissa was sure that her outfit was going to attract plenty of attention, she hoped Jack would realize how lucky he was and even get jealous if guys stared and possibly even hit on her at the club. She planned on flaunting herself the way Tabitha would since he was so infatuated with remembering her the night before. It was when they were walking to the car that Jack noticed his wife's breasts jiggling freely under her dress which meant she wasn't wearing a bra. His excitement grew some more as did his curiosity; he wondered if she bothered to wear any panties. \n\nHe got his answer soon enough when he acted the gentleman, opening the car door for her. There was no way she could get in with her extremely short skirt without showing her under garments. Melissa was aware his eyes were fixed upon her legs and at the right moment she opened them revealing the tiniest sheer thong Jack had ever seen. He could see her pussy through the material but also her lips were pushing out from the sides of her panties. Jack's cock continued to stir in his pants as he got in the driver's seat and drove away. \n\nWhen they arrived at the exclusive restaurant, Jack turned into the valet parking service. The young attendant who appeared to be a young nineteen year old college student approached the vehicle opening the door for Melissa. He got quite the surprise when she put her right leg out of the car and slowly exposed herself to him. His eyes widened before a sly smile developed on his face. Jack stood back watching his wife's brazen display of her thong with some question but also pride. His wife was going to be the talk of the restaurant staff for sure. \n\nThen she took it up another notch when she accidentally spilled some items from her purse before getting out. The young attendant dutifully went to help retrieve them for her, Melissa left her legs open giving him a much closer view of her sheer thong and pussy. The adrenaline was racing through her body by doing something so blatantly naughty and with Jack just a few feet away. Jack wasn't convinced the spill was accidental but it didn't change how erotic it was to see another man down between his wife's legs looking up her dress staring at her almost completely exposed pussy. \n\nHeads turned as Jack escorted Melissa into the restaurant and then to their table. They both were enjoying the attention she was getting, though Melissa was disappointed Jack was showing no signs of jealousy. She decided to push things further. Melissa made a point of flirting with the waiter and he was responding, as he looked down her dress every chance he had. Jack was still not biting. She noticed a couple of guys at the next table who were eyeing her up. As dinner progressed she occasionally gave them a seductive little smile. She casually even turned in her seat so they could get a better view of her legs and thighs. It was a fun little tease she was enjoying regardless if Jack cared. With dinner finished they got up from the table to go to the club side, Melissa made sure to spread her legs wide enough as she stood so the guys got a good look at her panties. She made eye contact with them as they passed by their table and one of them gave her a knowing wink which gave her a rush throughout her body. \n\n\"Looks like you have an appreciative audience dear,\" Jack chirped with a little laugh. \n\nMelissa didn't respond but was annoyed that he still wasn't jealous. She was now extra motivated to change that at the nightclub. Her and Jack took a table at the edge of the dance floor and continued to drink, they had downed a few when Melissa pulled her husband onto the dance floor. Jack sucked it up even though dancing wasn't his favorite thing to do and his wife looked amazing. He danced with her and could see it was pleasing here which was his goal. He was even hoping it would increase his chances of getting off the couch and having sex later. He knew there was something about dancing that made Melissa happy as well as acting like a natural aphrodisiac. \n\nThe music picked up and Melissa started shaking her ass and raised her hands above her head while twisting side to side. Jack could see it was highlighting her bouncing breasts, it almost seemed like she was advertising the fact she wasn't wearing a bra. It also lifted the bottom of her dress to the point where you could catch a glimpse of her ass cheeks if you were looking and a lot of people were. Jack had figured out what she was doing but wasn't sure how far she was willing to go. She moved in closer to him and danced in a sensual way with him, almost dry humping him in front of everyone. She spotted the two guys from the restaurant who had made their way over and were watching her every move. Jack hadn't noticed them, he was too focused on how she was making him feel by rubbing up against him. She kept looking over toward them and smiling as she continued to dance until Jack said he needed to go to the restroom. \n\nJack left her alone at the table but she wasn't alone for long before one of the guys from the restaurant appeared and asked her to dance. She figured, \"why not\" and let him lead her back onto the dance floor; it would surely get a reaction from her husband. There was something very exciting about dancing with a strange man without Jack knowing, she pick up her sensual moves with her new partner. She had his undivided attention and by the way he looked at her there was nothing but lust in his eyes. He placed his hands on her hips sending a shiver up her spine as they danced closer with his leg between hers. She saw Jack was back sitting at their table with a new drink, to her dismay he was not angry instead grinning like a kid knowing he is being bad. He even raised his glass toasting her when they locked eyes. \n\nShe wasn't going to give up so she pressed down against the other man's thigh so he could rub it against her pussy. He smiled down at her. A new song started and the man took a little more control turning Melissa around so they could grind. His strong hands pulled her ass back to his crotch and she gyrated against it. She looked over to Jack but he continued to smile enjoying the show she was putting on. The man was pressing his hard manhood against her more firmly and she let out a gasp. She was incredibly turned on and couldn't help it. She stopped looking over at Jack and turned her full attention to her dance partner. He spun her around again so she faced him. He grabbed her ass pulling her body tightly to his, her hard nipples were clearly poking through the satin material of the dress. He squeezed her lifting her up on her toes as he rubbed himself against her even more openly. Jack was letting the other man grope Melissa at will and she was beginning to lose control. \n\nWhat Melissa didn't understand was this type of brazen behavior is what attracted him to his ex-girlfriend Tabitha. She was taking her clothes off every night for a roomful of men who were fantasizing about fucking her and he found it intoxicating to be around. He enjoyed watching his her walk around a crowded bar half naked trying to entice men to spend their money taking her into the backroom for lap dances where she would strip completely naked for them and even let some of them touch her. He even suspected some of them paid her for hand jobs or blowjobs, maybe even more. The thought of her being unfaithful didn't bother him and truth be told, turned him on. In fairness Jack didn't understand his feelings either but he knew sex did not equal love. What he had with Tabitha was not love, she was a gold digger and it took him a while to figure that out and accept he was duped. She was still sexy to him and a little piece of him still enjoyed the fantasy but it was nothing compared to what he was feeling watching Melissa, someone he truly loved and felt the same love in return, act in the same slutty way on the dance floor. \n\nMelissa realized that Jack was not coming to save her from this other man, he was becoming more emboldened as he didn't simply grab her ass but he was running his finger between her cheeks and gripping her. He even whispered he wanted to fuck her. She wanted to be fucked, her panties were so wet and the thought of a new cock inside her was almost enough to give her an orgasm. But she broke off the dancing finally, giving him a soft kiss on the cheek and thanked him for the good time. He responded with a smile and copping a quick feel of her breast. She giggled as she turned away and walked toward her husband. \n\nJack knew it was time to leave so he and Melissa left for home. She had mixed feelings on the quiet ride home, a normal husband would have stopped the shenanigans, not letting a stranger grope his woman but Jack was happy to watch it all. What confused her was she was angry at him but so horny from putting on such a display, never mind she let a complete stranger feel her up. When they got home, Melissa's hot pussy got the best of her, she didn't need to fight but she needed to get fucked. Jack was ready and willing, his dick was hard most of the night and he quickly took her to the bedroom where they fucked and sucked each other into the wee hours of the morning. \n\nIt wasn't until the next morning over breakfast that they finally had a long talk about their feelings and what happened. Melissa confessed to trying to make Jack jealous. He confessed he knew that but also how he felt watching Tabitha's act in the strip club and how it reminded him of her with the stranger the previous night. He also explained that what she did was a hundred times more exciting because the fact he loved her and knew she loved him. She understood him better realizing she was truly his fantasy girl and so asked him if he thought about the other guy actually fucking her. He admitted he was imagining it which she found intriguing. \n\nTheir heart-to-heart talk led to a wild morning of great sex. Melissa took it to a place that they had never gone before by telling him she wanted that guy to fuck her. As she danced with him, she imagined how he would feel inside her. She even told Jack that the stranger said he wanted to fuck her which she kept to herself through their heart-to-heart. She was playing the role of Tabitha in bed with him. Jack treated her like he hoped everyone treated his ex-girlfriend and hammered her hard, calling her a whore and a slut. Although there was no way she would have fucked the stranger, it was apparent that Jack was getting turned on the more she talked about it. \n\nMelissa and Jack continued to enjoy the fantasy of her being like Tabitha, but it remained just that, a fantasy. Melissa began to dress more provocatively more frequently when they would go out and she teased Jack's friends when they were around but that's as far as it went. Giving them \"accidental\" flashes of her breasts or peeks at her panties was innocent fun that led to great sex sessions but the line was clear and they didn't cross it. But that all changed once Jack ran into an old high school acquaintance named Mike while out at lunch. They weren't good friends in school but knew each other socially. \n\nMike ran with a wilder crowd than Jack but they still had a brief exchange about the good old days, told some funny stories about some former teachers and classmates. It got interesting when they told each other what they were up to currently. Mike owned a strip club about twenty miles outside of town, this didn't shock Jack but what did was when he learned Jack was an accountant he asked him for help straightening out his books. He offered to pay Jack good money in cash. It would be a few hours at night and included free drinks. Jack laughed about the drinks but told Mike he'd think about it. \n\nThat same night during dinner, Jack brought up the meeting with Mike to Melissa. She wasn't really thrilled about the idea but extra cash was enticing given her car was getting older and they wanted to go on a vacation. They lived a comfortable lifestyle thanks to Jack even with Melissa being between jobs but the extra money would still be helpful. After a lengthy discussion they agreed he would take the job until the accounts were straightened out, then he would quit. With his wife's agreement, Jack called Mike to go over the details. They set a time the next night to meet at the club. \n\nJack was comfortable hanging out at gentlemen's clubs which Mike appreciated. Jack liked that it was a little more upscale. There was a large oval shaped bar, two stages, two VIP rooms where the ladies gave lap dances and a couple of offices on the second level overlooking the first floor. Mike could watch what was going on inside the club from his own office. Jack enjoyed the waitresses and their outfits which consisted of very short, black ruffled skirts with white crop tops with zippers in the front so they could show off as much cleavage as they were comfortable with. He found them just as intriguing as the dancers, the tease of peering down their blouses and seeing panties when they casually bent over was exciting.\n\nMike took Jack to a corner table so they could talk business. Mike was continually distracted by watching the staff and complaining about how difficult it was to get good help, specifically waitresses. The dancers just had to take their clothes off to make the customers happy but the waitresses were the ones that kept the drinks flowing and had more interactions with the patrons. When he wasn't complaining he was bragging about which girls he had fucked which made it clear to Jack that Mike had lost focus on the business end. It was also obvious to Jack that the last accountant was either a complete screw up or a thief, possibly both and Mike really needed his help. The business was actually very good and he was willing to pay Jack almost as much as he made at his day job and considering it would be all in cash, it was an offer he couldn't refuse. \n\nJack started immediately and over the next couple of days worked evenings at a desk on the second floor where he could see all the erotic happenings inside the club. There seemed to be a continuous string of dancers and waitresses going in and out of Mike's office and he assumed Mike was fucking them all. He even offered to have some of the women take care of Jack but he gratefully declined with a caveat that he may change his mind later which made Mike laugh. Jack also noticed the bouncer Don, who was a giant of a man and one of the male bartenders occasionally taking some of the women into a small office behind the bar. He concluded they were fucking the girls too. \n\nWith all this going on and the naked dancers on stage, he was still taken by the waitresses and their uniforms. He was imagining Melissa wearing one around a bunch of horny men, all of them lusting after her just as much as the dancers. Now totally distracted he wondered if she would actually consider it. He knew she liked being an exhibitionist, even if she didn't want to admit it and with Mike constantly complaining about the lack of decent servers it could be a good fit given her experience as a waitress and bartender before they met. Since their heart-to-heart talk Jack had mentioned a similar fantasy to Melissa and how hot it would be to see her dressed in a skimpy outfit in front of a roomful of men. She responded well to the idea but wasn't sure she could actually go through with it. \n\nIt was natural that Jack went home from his second job horny and he introduced the idea of her being a waitress for Mike as part of the fantasizing before and during sex, even doing a little role playing beforehand. Melissa would put on a short skirt and low cut top to serve Jack a drink. She would lean in close and bend over to give him peeks down her blouse or up her skirt. It was playful and fun but still in the privacy of their home but Jack could see she loved the thought of it. A few nights later Jack was talking to Mike, he was pissed off because one of the waitresses didn't show up to work again and he was firing her. He didn't know what to do because he was really short staffed. Jack saw an opportunity, he walked back to his workstation thinking about what he could say to his wife to convince her to work there.\n\n\"Mike is really desperate for a waitress tonight. One of the girls didn't show up again and there's a decent crowd in the bar. What do you think? Now's your chance to live out a fantasy.\"",
        "\"I don't know Jack. It's different if it becomes real.\" \n\n\"You can try it for a night and if you don't like it, you don't have to come back. It'll be fun to try it just once. We'll just tell him you're a neighbor that is low on cash so no damage done if you quit.\" \n\n\"Are you sure you want me to do this? Kind of like opening Pandora's box.\" \n\n\"I'm positive. Do it just for tonight.\" \n\n\"Well, okay.\" \n\n\"I'll talk to Mike and call you back.\" \n\nJack's heart pounded in his chest as he went and told Mike about his good looking neighbor Melissa, a tall, cute blonde with a great ass that was willing to help him out for the night. Mike was thrilled and gave him the green light to call her. He told Jack to tell her to get there quickly and wear some cute panties and to bring a pair of black heels. He also said if she was good, he'd double her tips for the night. Jack went and called his wife telling her to hurry down there. Melissa was already getting ready for the night, she pulled her hair into a ponytail and put on fresh makeup. She put on a matching black lace bra and high cut panty set, got dressed and ran out the door. Melissa was a little scared at the thought of walking around a strip club full of men wearing a skimpy outfit but equally as excited. Jack greeted her at the door and told her to relax, that everything would be fine and to have fun living out a fantasy. Melissa scanned the bar and stage where a woman was dancing naked. She noticed a waitress bending over serving drinks with her panties showing in the back and started to have second thoughts. It was too late, Jack was walking her up the stairs toward Mike's office. He smiled at Melissa as Jack introduced her as his neighbor. \n\n\"Wow, Jack, you weren't exaggerating when you said she was a good looking woman. You're gorgeous Melissa.\" \n\nMelissa blushed a bit and replied with a modest, \"Thank you.\" \n\nJack left her alone with Mike, closing the office door, he tried listening through the thin office walls. He could hear Mike complimenting her over and over again about how pretty she was and for having a great body. What Melissa didn't know was it was his way of relaxing the employees and giving them confidence. They talked for a little while about her experience and Mike was satisfied she could do that part of the job but there was more to it of course. \n\n\"Okay take off you blouse and pants. Let's see what you've got.\"\n\nMelissa was taken aback by the request, \"Why do I have to take off my clothes?\" \n\n\"Well honey if you are going to be wearing our uniform, I have to see what your body looks like. We have standards here, you know. I have to make sure you don't have any ugly scars or tattoos that will turn off our customers. Now come on don't be shy. If you are shy, this isn't the job for you. I can't just hire a pretty face.\" \n\nMelissa hesitated a bit then thought, \"Well, I've come this far. I might as well see what happens.\" \n\nShe slowly removed her blouse then pulled off her jeans. She was exposed in her bra and panties in front of a man not her husband. She felt very uncomfortable as Mike got up and walked around her scanning her half nude body. He was lecherous but tried to convince her he was a professional simply doing his due diligence. Even though she felt extremely awkward and self-conscious, Melissa was very turned on by being on display for him. \n\n\"You'll definitely do for tonight. Go over to that closet and pick out a uniform your size.\" \n\nFollowing his orders Melissa went through the rack of uniforms and picked out a top and skirt in her size. She looked over at Mike for what to do next. \n\n\"Don't just stand there, put it on.\" He said with a hint of irritation in his voice. \n\nThe top was obviously meant to be worn without a bra so Melissa asked, \"Is there a place where I can change?\" \n\n\"Look honey, I run a strip club. I see naked women every night. You don't have anything I haven't seen thousands of times so quit wasting my time and put it on,\" he said asserting his authority over her. \n\nMelissa was completely uncomfortable with the situation but figured \"what the heck\" and went with the flow. She put on the skirt that barely covered her ass then unfastened her bra revealing her bare breasts, Mike's eyes were fixed on her every move. She tried to put on the top as fast as she could but fumbled with the zipper in front which brought a grin to Mike's face. When she was finished dressing she stood before him presenting herself for judgement. \n\n\"Turn around.\" \n\nMelissa did as she was told while Mike gazed at her in her revealing uniform. He got up and walked around her again, he stopped in front of her and partially unzipped her top. \n\n\"What are you doing?\" She asked calmly trying not to annoy him. \n\n\"You'll make more tips if you show some cleavage baby. Trust me.\"\n\nShe knew that he was right; that hadn't changed from her days as a waitress and bartender but she also wore more clothing for those jobs. Mike continued to eye her up and down, then he ran his hands up her legs, lightly brushing up against her pussy before grabbing a handful of her ass. Melissa wasn't expecting that and pushed his hand away. \n\n\"What the fuck is that about?\" She asked glaring at him. \n\n\"Well baby, when you're out on the floor, guys are going to flirt with you, make suggestive comments and they are going to touch you. I was just testing your reaction. If you get too upset it will be bad for business and bad for tips. Don't worry if a guy goes too far, Don will step in and handle things. Just remember if you take care of Don he'll take care of you.\" \n\nShe didn't know what that last part meant and was afraid to ask but she set that thought aside when Mike called Jack back into the office. \n\n\"Take a look at your neighbor Jack.\" \n\nMelissa blushed as her \"neighbor\" looked at her. His eyes were filled with hunger for his wife and he couldn't wait to see the other guys check her out. Mike was satisfied seeing how she handled being seen by someone she knew in the uniform. \n\n\"Go see Don downstairs, he'll show you what to do.\" \n\nMelissa obeyed Mike's orders and went to see Don who gave her a quick orientation, introducing her to the bartenders and other waitresses then told her to get to work. He started her off at a table with three young guys. Jack watched intently from his desk overlooking the bar. No longer able to get any work done, he was completely distracted by watching guy after guy check out his statuesque half naked wife. Melissa was careful at first not to expose her panties in her short skirt but as some of the guys began buying her shots she loosened up, becoming careless when she bent over to serve them. It was also a turn on when they would make comments about her panties or when they would tell her she looked better than the dancers. A couple of them even tried to coerce her to go up on stage herself. While flattered, Melissa thought there was no way she could do it but that didn't stop it from being fun to hear. \n\nThe more time that passed, Melissa became surprisingly comfortable in the club environment. The comments had become far more suggestive as the night wore on and she was able to counter with suggestive comments of her own which only made the guys hornier and easier to separate from their money. She was even getting good at slapping their hands away in a playful manner when they attempted to touch her legs or grab her ass. It wasn't just Jack watching her but Don was also keeping an eye on Melissa, reporting back to Mike on how well she was doing. At the end of the night Mike brought her up to the office keeping his promise to double her tips and she walked out with more money than she had ever made in one day and an offer to become a regular waitress. Melissa looked at the wad of money in her hand and immediately accepted the offer agreeing to return the next night. \n\nMelissa got home shortly after Jack and immediately showed him how much money she earned, obviously proud of herself, which made Jack smile. They were both horny as hell from everything that went on at the club. Not wanting to be out of character, Melissa changed back into her work uniform minus her panties. Jack pawed at her body, informing her how much the customers were gawking at her and paying more attention to her than the dancers. Once inside the bedroom, he pushed her onto the bed and proceeded to unzip her top. He sucked on her lovely tits while reaching between her legs and fingering her soaking wet pussy. \n\nAfter finger banging his wife for a couple of minutes, Jack moved down and licked her juicy cunt taking her all the way to a wild orgasm. After she came down from her climax, he mounted her and rammed her hard all the while telling her how the men in the club wanted to be the ones fucking her. Melissa closed her eyes imagining a few of the cute guys she saw taking turns with her. Her pussy was so hot being the object of so many men's desires, she had a second orgasm before Jack shot his load deep into her. \n\nAfter an amazingly sound sleep, Jack and Melissa talked about the night before over breakfast. It was clear to them how hot it was to have Melissa parading around the club in such revealing clothing. Jack broached the subject of there being other things that went on behind closed doors, he admitted he didn't know exactly what was happening but had a pretty good idea, as did Melissa. \n\n\"If you want, we can treat the club like Vegas, whatever happens at the club stays at the club,\" Jack started and paused to gauge Melissa's reaction. \"You can have as good a time as you want and it won't bother me.\" \n\nMelissa let his words sink in, she thought she understood what he meant and had all day to think about what might happen on her second night of her off the books job. She second guessed herself a couple of times wondering if Jack really suggested it was okay for her to have sex with some of the customers or even Mike and Don. She even considered maybe she was hoping that's what he meant. If he was serious, she didn't know if she could actually go through with something like that. What was undeniable was she loved teasing those men with her long legs, ass, tits and lovely smile and was going to have fun doing it again without the initial nervousness. She decided on sheer panties similar to the ones she wore to the restaurant-club that night and would not be shy about showing them off. \n\nMelissa had to be at the club earlier than Jack for the Happy Hour crowd and stay there until it got less busy which wasn't too bad considering it was still early in the week. \n\nWhen Jack arrived a couple of hours after her, the first thing he did was scan the bar in hopes of finding his wife. He spotted her in a far off corner of the bar at a table with two younger guys, she practically had has ass in the face of one of them while leaning forward to pour a couple of beers giving the other guy a perfect view of her breasts. Jack's dick began to stir when he noticed he could see the crack of her round ass through her sheer pink, high cut, panties. He couldn't remember seeing those before and thought they must be new. That tickled him and he chuckled knowing how into showing off his wife had become. Melissa was enjoying the attention and felt that the material had crawled between her cheeks so an ample portion of her bare ass was exposed for all the customers. \n\nWhen Melissa left the pair, she saw her husband and gave him a wicked smile accompanied by a wink letting him know she was doing fine. It was a great start to the evening. Over the next couple of hours Jack witnessed several men lifting the back of her skirt to get a better look at his wife's ass. Melissa was playing the peek-a-boo game with them, pretending not to notice and then pushing their hands away in mock anger but always being sure to give them a big smile. This playfulness was getting her bigger tips and being noticed by some jealous waitresses. \n\nAnother trick she adopted was to let the guys slip their tips inside her mostly unzipped top. It was a win-win as the tips were greater and the man was able to get a quick feel of her tits. Again, the other waitresses were jealous and felt she was taking away their tips but Melissa didn't care what they thought, she was having too much fun to stop. What she didn't know was both Don and Mike had taken notice of her antics. They suggested to her that she ought to try dancing but Melissa quickly dismissed the idea. They went to Jack in hopes that he would have some influence over his neighbor. He said he would talk to her but couldn't promise anything. \n\nOne thing Melissa noticed during her second night was how some of the other servers would duck into the backroom with Don. She gathered up the nerve to ask one of the other girls about it and was told that if they gave him a blow job they could get extra hours or he'd have them work private parties where the payoffs were huge. She was certainly intrigued by the money but also the blow job. Don was a really big guy, 6'7\" weighing about 275 pounds which was mostly muscle. He was in his early thirties, quite handsome and she found him to be charming in a way. Don was often telling Melissa how beautiful she was, how she had great legs and a sweet ass but what intrigued her now was his remarks about her puffy lips. Now she knew he was thinking about getting her in the backroom to give him head. Instead of revolting her, it made her even hornier. \n\nAfter work when Melissa got home, Jack was waiting for her naked. She had kept her uniform on for him figuring he would be awake. She regaled her husband with the details of the guys she teased, how they groped her ass and tits while giving her money. Melissa got down on her knees in front of him seeing his dick was completely hard. She told him about how she learned what the servers were doing with Don and why, while licking the length of his cock from top to bottom. . \n\n\"Pretend you're sucking Don's dick now baby. Close your eyes and picture yourself in his office,\" Jack encouraged her. \n\nMelissa didn't talk, she began sucking his dick faster giving him a sloppy blow job. Jack then brought her up onto the bed rubbing her pussy through her panties. He loved that they were soaked from her juices. He removed them from her body and went down on her. Her juices were flowing as he lapped them up; he needed to get inside her pussy. She let out a loud groan as he stuck his cock inside her and thrust as hard as he could. \n\n\"Mike and Don want you to start dancing,\" he said looking down at her. \n\n\"Yeah, I know.\" She moaned. \n\n\"You can do whatever you want, remember what happens there stays there,\" Jack added seeing the expression on her face. \"If you want more hours or if you want to dance, I'm okay with it.\" \n\nMelissa bucked her hips frantically as Jack plunged into her. She was fantasizing about blowing Don and getting completely naked in a room full of horny men. She didn't know if she had the guts to go through with it but she wanted to do it. It wasn't long before another orgasm hit and she milked Jack's cock with her pussy. \n\nThe next night at work was Wednesday, she expected it to be a little busier than the other nights. She decided to wear a thong and stockings knowing the guys would go nuts seeing her ass and her long legs; they were her best assets so she wanted to highlight them. Don was quick to lay on the charm and again pressed her to be a dancer. \n\n\"God damn Melissa you're going to make some big bucks tonight. You'd make even more if you decided to dance.\"\n\n\"I don't think I could get up there and take my clothes off.\" \n\n\"Shit honey you're halfway there now. Every guy in the bar has his eyes on you anyway. May as well get paid for it.\" \n\n\"I'll think about it.\" \n\nMelissa went to work getting drinks and just like she wanted, the customers were noticing her nearly bare ass and her almost completely unzipped top. It was one shot after another being purchased for her by different men as she got more drunk, the less she worried about covering up at all and it was pissing off the other servers. It was setting expectations on them to act the same way in order to get decent tips. By the time Jack arrived at the bar Melissa was very drunk, she didn't notice him arrive but Jack saw her immediately. A guy had his hand firmly on his wife's ass and she was letting him keep it there for an unusually long time. Jack hovered around the bar signaling for a drink as he continued to watch. Finally, she swatted the hand from her butt and smiled at the man. Jack collected the beer that was set in front of him and went to work in the office on the upper floor. He wasn't there long before Mike stopped to ask about any conversations with his neighbor about dancing for the club.\n\n\"I brought it up but she only said she'd think about it, so I wouldn't get my hopes up. She doesn't seem to think she's good enough to be a dancer.\" \n\n\"They guys love her, I've had customers asking about her. They want her to dance and go in the back for a lap dances. She could make a fortune in tips if she did it.\" \n\n\"I'll talk to her again Mike.\" \n\n\"Thanks bud, you're a big help.\" \n\nJack tried to work for a while on the club's books but he found himself watching Melissa work the tables more. He had just convinced himself to focus on a spreadsheet when he heard a commotion near the bar. He looked down to see that his wife's top was completely unzipped. Her bare breasts revealed for everyone and getting a loud reaction. It happened because she let a drunk stuff cash into her top and probably on purpose, he made it give way and pull apart. She was a little embarrassed but was also laughing. After a moment things settled down, Jack saw that Melissa was talking to Don who seemed to be liking the conversation. He nodded his head and made a gesture for her to follow him. They disappeared into the infamous back office making Jack's heart leap into his throat because he knew why people went in there. He was picturing his wife sucking Don's dick, it was impossible to concentrate on his work and kept looking out at the bar area. \n\n\"Hey Jack, come here quick. I want to show you something,\" Mike called with a little excitement in his voice. \n\nJack got up quickly and walked into Mike's office where he was watching a series of surveillance cameras. \n\n\"Take a look,\" he said enlarging one of the camera views filling the screen. \n\n\"It looks like your neighbor sucks a mean dick. She's going to town on Don, lucky prick. I was hoping to get some play first.\" \n\nJack's eyes nearly popped out of their sockets as his wife's head bobbed on the club manager's dick. Her top was unzipped again and the huge man was playing with her tits while she blew him. Jack was turned on even more with Mike witnessing the sloppy blow job; his nasty comments about her being a great cocksucker and like every woman having an inner slut only made it better. Jack just nodded and agreed with everything he said. Melissa was lost in the moment, she was intent on giving Don the best blow job he ever had even if he had received hundreds of them before. With Jack's implicit permission, she was free to enjoy it. Her tongue swirled around the head and shaft, she looked up at him with her blue eyes while sucking lovingly on the tip. He groaned as she then took him deep into her throat, she lifted her head back up and repeated it over and over again. \n\nWhen Don pulled his dick from her mouth, it was slick with saliva and he rubbed it all over her face before having her lap at it with her tongue. The man was getting close, taking Melissa's head in his hands holding it still so he could fuck her mouth. He pushed as much as he could into her throat as he inched closer to cumming. Melissa's eyes watered and she gagged a little as Don made it hard for her to catch her breath. He grunted loudly and Jack almost came in his pants as he watched another man cum in his wife's mouth forcing her to swallow it. A little of Don's cum escaped and dripped down Melissa's chin and onto her top. She wiped her chin with the back of her arm then tried to clean her top before zipping it up. Jack and Mike were quick to go downstairs to the bar where they waited until Melissa came out of the office. Jack and Melissa made eye contact as she headed toward the ladies room. She had a sudden look of panic but he smiled and winked just like he had the night before to signal everything was alright. ",
        "Melissa was back on the floor feeling more naughty and adventurous than before. She gave her customers plenty to look at by blatantly exposing her ass and tits. It appeared to Mike and Don that their new server was really enjoying herself and it was obvious to the customers too. They became more emboldened, openly grabbing her ass and lingering with their hands inside her top when tipping her. A few of them even slipped their hands further between her legs to rub her wet pussy. Jack's only real thought was getting her home so he could treat her the same way as the other men. \n\n\"It's only a matter of time before I get her ass up on my stage,\" Mike said to Jack.\n\nJack laughed and shook his head at the man's persistence. They had a few more drinks together before Jack called it a night and left. He needed to get some rest as the late nights was starting to make it difficult to get up in the morning for his day job. He was sound asleep when he suddenly awoke when he heard Melissa getting home. He got out of bed and went into the kitchen where she was standing by the table. His cock had already hardened. She was still wearing the club's uniform with Don's cum stain on the front and clearly drunk. The animal in him took over as he grabbed her, kissed her roughly before spinning her around and bending her over the table. \n\n\"You acted like such a slut tonight, I loved it. Every guy in the place wanted to fuck you,\" he said while pulling her panties aside and driving himself inside her. \n\n\"I wanted it and Don's cock was...\" Her voice trailed off as she began groaning from the pounding Jack was giving her. \n\nMelissa was mid-way through a major orgasm when Jack grunted loudly, his body tensing before releasing his load inside her. She gasped and bucked feeling him squirt over and over. It was all she could do when they were finished to shower, she was exhausted and needed to sleep. Her last thought was to wonder what the next night at the club would bring. \n\nAs was their routine, Jack and Melissa had breakfast together in the morning. Jack told her that he and Mike watched her give Don a blow job from his office. She was a little taken aback now knowing she could be watched like that but also likely recorded as well. Jack was reassuring her that it was the most erotic thing he had ever seen and told her some of what Mike was saying too. As much as she didn't want to admit it, having a peeping audience was kind of a turn on and seeing how Jack loved seeing her suck another man's cock gave her more ideas. Jack again mentioned how Mike wanted her to dance insisting she would be really good but Melissa still had a hang up about it. He was being a little more insistent about it, not wanting to disappoint Mike. He left her alone to think it over and Melissa had a bit of an epiphany. The whole attraction to Tabitha was based on his voyeuristic tendencies and now he had that with her plus their marriage. Melissa didn't want to dance because of her jealousy of Tabitha and that small area of his mind she occupied. But now she saw an opportunity to completely replace the fantasy of Tabitha in Jack's mind. \n\n\"I'll think about it,\" she said to him as they kissed goodbye. \n\nThe day was painfully long for Jack, he was distracted and didn't get much done at his day job. He wanted to see Melissa working one of the busiest nights of the week at the club. Mike told him the place would be filled from late afternoon until closing time and that his neighbor should make more money tonight than she did the others combined. Frustrated Jack pretended to be coming down with a headache and left for the day heading straight to the club. By the limited parking he knew Mike wasn't kidding about it being busy and once he got inside it was seriously crowded. \n\nThere didn't appear to be any open tables so he took up a spot at the bar. A beer was set down in front of him without even asking making him chuckle. He looked from one section to the next until he saw Melissa, she was extremely busy waiting tables, getting groped and having guys stuff tips into her mostly unzipped top. Satisfied and settled down after the long day he went upstairs to the office to work on Mike's books. He surprised himself by getting quite a bit done while still managing to watch his wife and drink with Mike. He had decided to head home and gotten up to leave when there was a knock at the door interrupting the last exchange between he and Mike. \n\n\"Ah, now there is a beautiful woman,\" Mike said as Melissa came into the small office with a fresh drink from the bar for her boss.\n\n\"I was told to bring this to you,\" she said with a little slur before setting the glass down on the desk in front of him. \"Is there anything else?\"\n\nJack stood watching their interaction, he suspected she was also high by the look in her eyes which made him wonder what she was on. Was it just weed she smoked with one of the girls or coke given to her by Don? He had heard that rumor too. Earlier when Melissa had a minute alone with her husband she told him Mike was trying to get more familiar with her and commenting often about her body and how hot it was. She was certain he would try something with her soon.\n\n\"Actually yes. I want you to hang up the tray and start on the pole. You can make a lot more money shaking that ass on stage and in the VIP room than serving drinks. \n\nNot to mention you'll be making me more money too.\"\n\n\"I'm not sure I want to do that.\"\n\nThere was a couple moments of silence as Mike's demeanor changed, becoming more serious. He let out a sigh as he stood up and walked around from his desk to be in front of Jack's wife. She didn't look scared to him but he was ready to step in should Mike get carried away but he was pretty sure that wasn't going to happen. Mike was all sorts of bad, sleazy and manipulative tops on the list but violent didn't seem to be part of his makeup.\n\n\"Hey Jack you don't mind giving us some privacy to talk this out do you?\" He asked gesturing for him to leave.\n\n\"Not at all. I'll talk to you later.\" \n\nJack answered quickly not showing any concern for Melissa and walking out the door.\n\nHe closed it almost all the way, leaving it open just a crack so he could peak inside. Mike looked at Melissa and smiled, he ran his hand through her blonde hair gently getting a legitimate response from her. She loved to have her hair played with and it seemed to relax her which he picked up on quickly. Jack knew Mike was slick and Melissa was about to find out too.\n\n\"Look sweetie, what I need is a girl who can make some cash for the club not just another server. You have the look to earn big bucks besides the dancers have way more fun,\" he said as he reached around and pulled her into him by her ass.\n\nMelissa let out a little surprised yelp followed by a giggle as her boss caressed her ass under the tiny ruffled skirt through her panties. His other hand continued playing with her hair. Jack was mesmerized watching his wife succumb so easily to the man.\n\n\"Just think about being up there and all those hungry eyes on your naked body, each one of them wishing they could get between those sexy legs. You know the girls do special parties too, a lot of money to be made in that and you get to have some real adventures.\" He continued to sell it to Melissa.\n\nHer chest was starting to heave as he never stopped groping her ass the entire time he talked and Melissa almost seemed to be in a trance like state.\n\n\"Starting tomorrow night you're stripping right?\" He finally asked looking deeply into her eyes.\n\n\"Yes,\" she said giving him the answer he wanted and with that confirmation out there Jack's pants tightened with the image of her on stage with the guys in the front row leering at her.\n\n\"Good girl. Now how about you do something else for me?\" \n\nHe then whispering something in her ear that Jack could not hear. Melissa's cheeks reddened clearly blushing but she nodded, she slowly knelt down in front of him and Jack knew what he whispered. Mike leaned back against the desk as she worked with his belt, then the button and finally the zipper of his pants. He looked completely satisfied with himself as she pulled down his pants and underwear to his ankles, his hard cock stood out at her, staring her in the face. He had a reason to be happy with himself Jack thought, the man had an eight inch cock and his wife appreciated it by the excited look on her face. \n\nMelissa took a hold of it, wrapping her slender fingers around the shaft and pumped it just inches from her mouth. She smiled up at him as she teased the head with the tip of her tongue. Mike knew he had something special with her, she wasn't the same as some of the other crackhead dancers he employed. She licked the length of his cock to the base and back multiple times before opening wide to take him inside her mouth. He groaned as she began to suck him hungrily. Jack kept checking the hallway, he didn't want to get caught peeping on them but he had no intention of leaving now. Melissa moaned as she bobbed on him.\n\n\"You love my cock don't you? Have you been thinking about sucking it?\" He asked staring down at her.\n\nMelissa lifted her mouth, slowly dragging her tongue around the head before answering him.\n\n\"I've wanted to suck it since you hired me. It's so big and thick I want to suck every night.\"\n\nJack's draw dropped never had he heard her talk like that and offering to suck it every night blew him away. Mike laughed as he pulled her head back down and made her take him deep into her throat. She gagged but kept sucking, he knew he had her where he wanted. She continued to devour him for a couple more minutes.\n\n\"Stand up,\" he directed.\n\nMelissa did as she was told getting up from her knees. Jack watched unable to say anything or even move as the man gripped his wife by the back of her neck and bent her over the desk abruptly. Her cheek was pressed into the hard wood surface as he yanked her panties down her long legs. The little skirt she wore was flipped up exposing her ass and pussy to Mike. He caressed her bare cheeks, inspecting them thoroughly as he spread them.\n\n\"Now that is a sweet piece of ass,\" he stated just before smacking it sharply making Melissa squeal.\n\nHe positioned himself behind her lining up his eight inch prick to her opening. He rubbed the head between her lips feeling how wet she was. He rubbed it up and down along her slit teasing Melissa, she moaned aching to have him inside her. Jack loved how she looked bent over like that, her legs looked incredibly long with those black heels. Mike tapped her ankles forcing her legs wider apart. \n\n\"This pussy is ready for a hard fucking.\"\n\n\"God yes...fuck me,\" she hissed again shocking Jack with how badly she wanted Mike's cock.\n\nMike smirked before thrusting forward burying half his length into her warm, welcoming pussy. Melissa cried out as she felt his thick cock inside her for the first time, it was shocking at first, but instantly became pure pleasure. He pulled back and slammed into her, this time all the way. Jack was almost ready to explode in his pants seeing how his wife was being held down and fucked. Mike wasted no time finding a hard, fast rhythm; each time he thrust Melissa grunted from the force. It was becoming more intense with every passing moment, Jack could hear the slapping of Mike's flesh against his wife. The audible sounds coming out of them reminded him of a porno movie.\n\n\"Fuck me! Fuck me! Fuck me! I want your cock,\" Melissa spat out as she gripped the edge of the desk with her fingers.\n\n\"Take it bitch! You love my cock. Tell me you do!\"\n\nJack was aching to touch himself but knew he couldn't. Melissa was crying out when her body went rigid. Jack could see the muscles in her legs flex as her climax hit her hard, Mike kept driving into her as she tightened around him. He groaned deeply fighting the urge to unload inside her pussy. He wanted her to swallow his cum, he made all the girls do it. He pumped and pumped, even pressing his thumb to her ass triggering another orgasm. Jack had never seen her cum like that before and for the first time felt a little jealous.\n\n\"I love it,\" Melissa moaned as her body trembled as she slowly relaxed.\n\nMike grunted then pulled out, he was on the verge of cumming. He took Melissa by her hair, spun her around to face him and put her down on her knees. He rubbed his slick cock over her lips and smeared her own juices over her face.\n\n\"I'm going to cum in your mouth.\"\n\nMelissa opened up and took him inside. She tasted her own juices mixed with his cum as he began to shoot. She held onto his hips as his body jerked, she swallowed quickly to take it all but it was the heaviest load she'd ever experienced and some leaked out from the corner of her mouth. Her legs felt like rubber, her skin glistened from perspiration and she was gasping for air. Mike wiped his forehead before pulling up his underwear and pants.\n\n\"You should get cleaned up before going back out on the floor,\" Mike suggested, dismissing her quickly and asserting his position of authority over her once again.\n\nMelissa smiled while pulling up her panties and adjusting her skirt. She walked out the door and straight into her husband. She looked at him then down at the floor, even though they knew this was likely to happen she still felt awkward. Jack tilted her head up to look into her eyes, he wasn't angry or upset but simply more turned on than ever before. He took her hand placing it on his crotch as if to confirm it for her. She massaged it gently and smiled, everything was good and she would take care of him later at home. She left him standing in the hallway because she had to clean up and get back to work. Jack walked back into Mike's office to see him with a big smile on his face. \n\n\"Your neighbor is a sweet piece of ass. You should be tapping into that pussy too. Not a bad cocksucker either. Be sure and come back tomorrow and you'll see her on stage.\" \n\n\"I'd like to fuck her but it's too close to home if you know what I mean. I'll make sure I'm here tomorrow.\" \n\n\"I'll save you a front row seat buddy. After all I owe you one for recommending her.\" \n\nJack was thinking, \"You owe me more than one. You just fucked my wife.\" \n\nMike was scanning the surveillance system when he said, \"Come here and look at this. Your neighbor is one horny little lady.\" \n\nJack walked over to Mike's desk and he saw that Don had Melissa bent over his desk now and was fucking her hard, with her begging for his cock. Jack couldn't believe his eyes. His dick strained in his pants watching his wife getting fucked for the second time in just a few minutes. \n\n\"If you want, I'll get her back up here so you can have a turn.\" \n\nHe thought about it but resisted the urge, \"I better not, she knows my wife too.\" \n\nAfter watching Don cum in her pussy Jack decided it was time to head home. He didn't think anything else would happen other than her showing herself off and getting groped some more and he was spent. A few hours later, Melissa got home, she was super drunk and reminded him of how Tabitha used to look sometimes but when she smiled at him his cock hardened again. It was his sweet wife fulfilling his fantasies and discovering her own. \n\n\"I need you to fuck me. Now,\" she said almost pleading with Jack.\n\n\"Did anyone else fuck you after I left?\"\n\n\"No.\"\n\n\"That's too bad,\" Jack replied with a smile. \n\nHe followed her into the bedroom staring at her ass and thinking about how rough Mike and Don fucked her earlier. He never realized that she liked it like that. He had been intense with her before but not like they were. \n\n\"Take it off but leave on the heels,\" he told her. \"It makes you look like a real slut.\"\n\nMelissa made a face, surprised by his direction but she did as she was told. He then pushed her onto the bed. She let out a little cry and giggled as she landed on her back with her legs spread wide open. He smiled while climbing on top of her and driving his hard dick into her well used pussy. She groaned as she wrapped her arms and legs around him, Jack was fucking her hard. \n\n\"I was their whore tonight, now I'm your whore,\" she said looking up at him. \n\nThat comment sent Jack over the edge as he pulled both of her legs up folding her over. Melissa gasped as her heels were pointed up at the ceiling. He thrust harder and faster treating her like a whore. Melissa closed her eyes loving every stroke and his dominance over her body. It was only a minute before she was crying out and her pussy clenched around him like a vice. He groaned and started blasting inside her. She was moaning softly as Jack took some deep breaths to compose himself, he saw the glazed look in her eyes having had another orgasm. Her legs fell from his shoulders and off to the sides as Jack rolled off. They laid there together talking about whether she should go through with stripping at the club. Jack was encouraging her to go for it and least give it a try. He thought she seemed to want to do it and Melissa admitted to being curious. She also confided to her husband it felt like she was competing with Tabitha on some level. Jack let out a sigh understanding what she was saying but reassured her there was no comparison to be made. \n\n\"What about the VIP room and lap dances?\" She asked him. \n\n\"It's up to you but I think it would be hot. I can watch on the surveillance camera.\"\n\nThe next day Melissa had it worked out with Mike that she would start work at six o'clock until closing time. Her plan was to get there an hour early and have a few drinks, maybe smoke a joint to help ease her nerves before starting as a stripper. When she arrived, Don told her to get changed into her costume before 6 PM and start mixing with the customers. He wanted to ease her into it before sending her up on the stage in front of a full house. He then told her that after her stage show there would be guys lined up to take her into one of the VIP rooms. He went on to explain that one room was for lap dances and the other was if she wanted to go a little further. It was up to her how far she wanted to go with the customers, he gave her the going rate for a hand job or a blowjob but stressed not to have all out sex with the customers. \n\n\"Nobody wants to see a cum filled, gaping cunt dancing in front of them,\" he said crudely. \"And you need a stage name, how about Lyssa?\" \n\nAt about 5:45 PM Melissa went to get changed. Her heart was racing as she changed into a tiny red bikini that covered her nipples and left a lot of cleavage exposed. The bottoms were high cut in the back but not quite a thong. She hoped Jack would be there for moral support but he wasn't at the club yet. She gave herself another look in the mirror, she had done a great job with her makeup and her nails were professionally done. She put her hair up into a high ponytail and wondered if this was how Tabitha felt before dancing. Mike stopped in to check her out and whistled through his teeth. \n\n\"Have a shot of tequila, it'll calm you down,\" he said as he set it down on the table.\n\nMelissa took the shot, it burned going down and she made a face. Mike laughed, gave her ass a smack and told her to get out on the floor and make some money. Her job was to get the customers to buy more drinks and to make some cash doing lap dances before going up on stage. \n\nJack was late getting to the club because of his work and traffic He was actually nervous for Melissa, it was so different from when he used to see Tabitha strip mainly because that relationship was never going to last. He scanned the floor as soon as he walked in. The dancer on the stage was not his wife, he anxiously looked around until he saw her at the end of the bar talking to a guy. He had just bought her a drink and Jack noticed his hand was on her leg just above the knee. Jack took up a spot not far from them at the bar and ordered a drink. The businessman looked to be in his forties, he had neat salt and pepper hair and was a little overweight but not fat. ",
        "She was doing a great job flirting with him, resting her hand on his leg precariously close to the bulge forming in his slacks. He was just about drooling over Melissa. Then her eyes momentarily met with Jack's but he was quick not to stare since they were keeping up the charade of not being a couple. Jack couldn't deny his own bulge forming as he thought about what could possibly happen. He was lost in thought and didn't see Mike come up to him. \n\n\"Your neighbor looks damn good doesn't she? I think she's going to make a lot of money tonight for us,\" he said with a grin. \n\n\"She looks great but looks a little nervous to me,\" Jack answered honestly and with a hint of worry in his voice. \n\n\"They all start out that way. By the end of the night she'll be acting like a seasoned pro,\" Mike said as if he had seen it hundreds of times before and Jack realized he had. \"There she goes.\"\n\nMelissa got up from the bar stool taking the man by his hand, she was leading him to a private room for a lap dance. This would be the first of the night. Jack felt a little light headed watching his wife leave with the stranger, she looked every bit the stripper in those heels, her ass swaying sexily as the customer followed close behind with his eyes locked on her ass. \n\n\"Do you want to go watch her first lap dance upstairs on the surveillance system?\" Mike asked. \n\n\"Yeah,\" Jack muttered unable to say anything else. \n\nThe men were quick to grab a couple more drinks and go up to Mike's office. They enlarged the screen so they could see what was happening in the private room. Her dance had already started, Mike zoomed in on Melissa who had already removed her top and was letting the businessman fondle her tits. She smiled at him as she leaned in to him so he could suck on her nipples. She let out a little moan as he moved from one to the other. \n\n\"It looks like she's enjoying herself,\" Jack said out loud of which Mike agreed. \n\nMelissa turned around and lowered her body down into the man's lap, she started grinding her ass against his crotch feeling his hard cock pushing up through his pants. She took his hands and placed them on her hips as she leaned back against him. The man had wandering hands as he moved them from her hips to her ass and grabbed her cheeks. Melissa grinned, feeling so naughty letting this stranger touch her. Mike told Jack as they watched, it was easier to start newbie dancers by having them do lap dances because they can get naked in a semi-private place before being in the spotlight. It made sense to him, Melissa seemed way more relaxed and willing to take it off. The customer tugged at the strings of her bikini bottom and peeled them off exposing her pussy to him. Melissa saw the hunger in his eyes and believed he would eat her out right there if she let him. She put a leg up onto the seat, giving him a good look of her pussy lips. She even teased the man by using her fingers to spread her lips. \n\n\"That's a sweet pussy,\" the customer said as she straddled him. \n\nShe went back to grinding down on top of him as his hands moved back and forth from her tits to her ass. The only area Melissa wouldn't let him touch was her pussy. \n\n\"Damn, she looks like a pro already. Are you sure she hasn't done this before?\" \n\n\"I don't know her that well but I don't think she's done this before,\" Jack answered not taking his eyes off of the screen. \n\nThe customer paid for a few dances, he wanted his time with her and both Mike and Jack were happy playing the role of voyeur as she continued to dance and grind. Finally, as the third song was winding down Melissa bent over, she held onto her ankles while giving him a long look at her ass. He ran his hands up her long legs to the top where she spread her cheeks, he stared at her tight little asshole until the music stopped. Melissa turned to him and kissed him softly on the cheek and thanked him for choosing her. He was impressed and gave her a generous tip on top of the fee for the dances. \n\nMelissa escorted him back to the club and left him to order a new drink. She was slowly making her way around the floor when she saw her husband and Mike come down from the office, she knew they had been watching which made the experience so much more exciting. Jack's eyes followed her as she moved between the tables, all the guys seemed to turn their heads to check her out which made him think it was going to be an incredible night. \n\nIt was not long before she was invited to sit down for a drink with a group of guys, of course she joined them and sat in the lap of the one who stopped her. His hands ran over her legs feeling her soft skin while they all talked and drank. Melissa had quickly become good at flirting and had them all eating out of the palm of her hand. She moved from one guy to the next, making sure each of them had a turn with her in their lap. She knew to only stay for a little while and move on if nobody was going to ask for a lap dance. That was how the dancers made money. \n\nAfter thanking the group for the drink and conversation she got up again. Within a minute, another man came up to her asking to take her into the VIP room. Jack saw her shake her head no so he knew the customer wasn't looking for a simple lap dance but that was what he was going to get. Through the course of the night, Jack saw his wife take multiple men into back for private dances. He could only imagine how hot she must be getting showing off and being groped by all these men and she was only going to get hotter. \n\n\"Let's give a big round of applause for Holly. Lyssa you're up next,\" the DJ announced, making Jack's heart skip a beat. \n\nHolly's set of three songs seemed to take forever, she was a decent dancer but nothing special in Jack's opinion. He was anxious and wanted to see his wife. She was waiting at the bar with a drink and a shot. Jack knew how she was feeling, she drained her glass and then swallowed the shot before taking a deep breath. She surveyed the crowd and there must have been at least seventy five horny guys in the club there to see naked women. Holly's third song came to an end and the DJ called her name to report to the stage. \n\n\"Let's hear it for Holly. Up now is Lyssa. This is Lyssa's first time dancing with us so give her a nice warm welcome. Here she is, the beautiful Lyssa.\" \n\nMelissa gave her husband a quick look, he was smiling which reassured her that she could do it. As she walked up to the stage there were loud cheers and catcalls from the guys. For some reason Tabitha popped into her mind and she had a sudden urge to take it all off. The lights were a little bit blinding but she found it helpful, it took away from the size of the crowd making it less intimidating. She paraded around the stage giving everyone a look at her, remembering what Mike said, she tried to focus on one guy or group at a time and play up to them. She wrapped her hands around the pole in the center of the stage and swung around it. She found a table in the front and shook her ass for them, they reacted by tossing bills onto the stage. \n\nShe repeated the display for some others sitting around the stage. It prompted a couple of guys to come up to the stage to stuff dollar bills in her top or into her bikini bottom. She heard the men cheering and complimenting her nice ass or how gorgeous she was. He nerves were gone and was now enjoying fulfilling what she thought most women fantasized about and that was taking off her clothes for a group of appreciative, horny men. As the first song came to an end Melissa removed her top giving everyone in the club an unobstructed view of her 34B breasts. \n\nAs her second song started, she thought about what Mike had said about smiling to make the customers believe she was enjoying herself. Melissa had a big smile on her face and it was real, she was loving what she was doing. She danced around the stage with more determination, stopping only to take tips either between her breasts or in her bikini bottoms. She occasionally gave a guy in pervert's row a peck on the cheek to get a big reaction. It seemed like she was collecting tips more than dancing which impressed Jack and Mike. It was near the end of the second song when Melissa took off her bikini bottoms fully exposing her body to the whole crowd drawing even louder approval. Her confidence was boosted through the roof as the final song of her set started. \n\nHer walk had become a strut as she moved around the stage, she was letting everyone drink in her nakedness. She stood center stage and turned around facing the back, slowly she bent over running her hands down the front of her long legs until she held her ankles. She shook her ass for the audience and they cheered her on. Jack almost fell out of his seat seeing his wife act in such a way. Mike was clapping his hands behind Jack, he definitely appreciated what he was seeing. A group of guys caught her attention in the front as they were cheering more than anyone so she moved in their direction and positioned herself on her back right in front of them. Her adrenaline was pumping as she opened her legs wide. They went wild standing and cheering for her.  \n\nThe front of the stage had gotten crowded as some guys left their tables to get a closer look at the new, hot stripper at the club. Melissa kept her show going, moving to another section, she got down on all fours crawling over to the edge. She turned to give them a look at her asshole and pussy while moving her body like she was having sex. She made eye contact with a cute young guy, she teased him by sucking on her finger like it was a cock. The last song then ended and Jack felt a wave of pride as his wife was given a standing ovation for her very first stage show. \n\n\"That's it guys, give our rookie dancer a nice round of applause. She'll be back shortly for anyone that wants a private dance. Next up is Jen. Let's hear it for Jen.\" \n\nMelissa let out a big sigh of relief, she couldn't believe she did it, she stripped in public. Again Tabitha was in her thoughts but this time she understood a little better why she did it, it was exhilarating to have all eyes on her. She smiled seeing a drink waiting for her when she made it to the back. She drank it as she changed into a tiny black micro thong bikini and black five inch heels. There was a steady flow of men wanting private dances when she made it back onto the floor and near the bar. She went with them and gave them their dances, letting them fondle and suck on her tits and grab her ass over and over. \n\nJack was in and out of Mike's office watching as she would disappear with each of the guys but he was still hoping she would go into the VIP room to do more. After finishing with a handsome black man Melissa took a break going outside to smoke a joint, Jack followed her out the door. Before she said anything he gave her a deep kiss and told her he loved her. He backed her up against the brick wall pushing his hand into the bottom of her bikini, he slipped a finger inside her soaking wet pussy. Melissa gasped as he worked his digit in and out of her quickly. \n\n\"I need to be fucked. Take me somewhere,\" she said in a hushed voice.\n\n\"I wish I could but your public is waiting inside for more,\" Jack said withdrawing his fingers from her bottoms and grinning wickedly. \"It's up to you if you want to take customers into the other VIP room.\" \n\nJack planted the seed again into Melissa's mind. She was so horny and desperate that she was really considering it and if he wanted to watch on a surveillance camera he could. Jack left and went back inside first, he took up a spot at the corner of the stage. When Melissa returned it was her turn to dance again. This time she was much more relaxed and extremely turned on, she noticed a bunch of new faces in the crowd and figured it was because it was much later. She stripped her clothes from her body during her first song and stayed naked until the end of her set. She teased and showed off way more to the crowd than during her first show, she was not shy in the slightest about spreading her legs and flaunting her ass. \n\nWhen the music stopped and the DJ announced the next girl she gathered her tips and headed to the dressing room. After refreshing herself she smoked another joint and changed into a new costume. It was a partially see thru white Lycra micro mini dress, her hard nipples could be seen through the material as well as the tiny white thong that barely covered her pussy. She slipped on another pair of five inch heels this time also in white. \n\nOnce back on the main floor it didn't take long before Melissa had a customer come up to her, he was an older man compared to her, somewhere in his fifties and he had been inside the club ever since she got there. He wanted her to go to the VIP room and not for just a lap dance. Jack was watching all this unfold intently and she managed to make eye contact with him. She was so horny that she didn't wait for Jack to signal his permission, instead she nodded and smiled then took his hand and led him to the VIP area. Jack nearly fell out of his seat as he quickly made his way upstairs to Mike's office. Mike looked up from what he was doing and Jack quickly told him that she was going into the VIP room with a guy. Mike laughed and checked the camera as Jack moved around to see. \n\n\"I'm happy to see her trying out the VIP room. She'll make a small fortune back there. Your neighbor is turning out to be a real whore. When are you going to get in on the action buddy? She'll give it up for you.\" He teased Jack with a shit eating grin. \n\n\"I'd love to Mike but I'm trying to remain faithful to my wife. She's not thrilled with me working here to begin with so I can't start fucking around too,\" Jack answered keeping up the story.\n\n\"Alright but feel free to come up her and use the surveillance system anytime you want. Just clean up if you make a mess,\" he teased Jack. \n\nMike zoomed in on Melissa with her customer, she had already pulled down the top of her dress to expose her tits and the guy had both hands cupping them while his mouth alternated sucking from one nipple to the other. Melissa held his head, stroking his graying hair, softly moaning. The song ended and she shimmied out of the dress, leaving her in only her high heels and micro thong. As the next song started the man caressed her ass and squeezed it making her smile. She liked him, he seemed to be enthralled with her body. She put her hand to his chest and had him sit back in the seat as she unbuckled his belt. She slid his pants and underwear down his legs to the floor freeing his hard six inch cock. She gently stroked him while putting her breast to his mouth for him to suck, she was loving the control she had over the man. She closed her eyes enjoying his attention to her nipples but remembered what Mike told her about getting them off as quick as possible. She would make more money and that was the goal. \n\nShe gave him a smile as she removed her thong and showed him her pussy. He seemed to be in a trance, staring directly at her lips. She turned around again and went to grinding her ass against his dick. The man groaned and grabbed her by the hips, he started rubbing himself between her ass cheeks and while Melissa was desperate to be fucked she knew she had to be careful that he didn't slip himself into her. He was definitely trying to fuck her but she managed to keep him outside. She heard his breathing getting harder and he started grunting so she knew it wouldn't be long before he came. Sure enough he let out a strange noise and she felt his load landing on her lower back and ass. It felt so warm and seemed to be a lot of it. Melissa turned her head giggling to look at him and he gave her a smile. She gestured toward the stack of hand towels available and he grabbed a couple for the both of them. \n\n\"I'm surprised he lasted that long. He's been watching her all night,\" Mike said as he sat back in his chair. \n\nMelissa collected her money plus another generous tip. She gave a portion of it to Don who would make sure Mike got his cut and then returned to the bar area. She loved parading herself around inside the club giving the horny customers something to stare at. She checked out the men in the club trying to size them up, she wanted to know who would be more likely to want a lap dance, a VIP experience or only wanted to buy a girl a drink and have conversation. The rest of the night saw her give more lap dances than VIP room dances, those were between sets on the stage. \n\nJack had noticed that his wife was very particular about who she would take in the VIP for more than a lap dance. They had to be decent looking or flash a big wad of cash or she would politely decline. All her guys got hand jobs except for one exceptional young man in his early twenties. Clearly Melissa liked what she saw and after playing with his long smooth seven inch cock for a song she decided to suck it. She knelt down on the floor in front of him and bobbed hard on him until he erupted in her mouth. She had no intention of swallowing his cum but in the heat of the moment kept him between her lips. He groaned loudly as she milked him for every drop. He tipped her extremely well for what she did. Jack's balls were aching by the end of the night as was Melissa's pussy. \n\nIt was almost closing time and Jack, Mike and Don were all up in Mike's office talking about the finances for the club. Jack showed them that they were in very good shape and where to be mindful, he also suggested how they could hide some of those funds to avoid the tax man but he prefaced that advice by stating it was off the record. Mike and Don were very happy with what they were seeing and talking to each other while Jack thought about going home. He was tired and not wanting to think anymore. \n\n\"Go get the new girl and bring her up,\" Mike told Don. \n\nMelissa came up with Don and once they stepped inside the office he closed the door. She had changed back into her tiny black micro bikini and heels which really left nothing to the imagination. \n\n\"Am I getting fired or something?\" She joked not understanding why she was up there. \n\n\"Not a chance baby, just the opposite. You were fantastic out there tonight and made us a lot of cash. Tell me did you have a good time?\" Mike asked. \n\nMelissa still seemed uneasy and shrugged her shoulders. She didn't want to admit that her pussy had never been so hot with Mike and Don in the room. Mike didn't say a word as he approached her then slid his hand between her legs gripping her pussy through her bikini. \n\n\"Your pussy is soaking. I know you enjoyed yourself out there tonight.\" \n\nShe began blushing as Mike's fingers started working her pussy through the thin material. He untied the strings of the bikini bottom and tossed them over to Don. Melissa gasped when he returned his fingers between her legs and pushed one inside her. He started finger fucking her right in front of Jack and Don, Melissa's expression was a mixture of pleasure and discomfort. It felt really strange having them there watching even though she had already been stripping and going the extra mile in the VIP room. Seeing that Jack was not phased or looking like he was going to stop him relaxed her a bit so she went with the flow. She was so horny and it felt good too. \n\n\"Come on baby give me some of that great head,\" Mike said to her. \n\nMelissa looked out of the corner of her eye at Jack but he wasn't upset at all, just the opposite in fact. She thought he wanted to see her give the boss a blow job in front of him and Don. Melissa undid his pants and pulled out his cock which was very hard. She put her mouth around it and sucked it like a real pro. Mike groaned and then laughed at the other two guys as she worked him vigorously. After a couple of minutes Mike pulled her up to her feet and lifted her onto the desk.",
        "\"Lay back,\" he instructed her and she obeyed. \n\nHe pulled off the tiny bikini top so he could play with her tits, which he also tossed to Don. He adjusted her so she was on the edge as he lined his cock up with her opening. She groaned as the head disappeared inside her, He grinned at her as he raised her legs by her knees and thrust. He put Melissa's legs up onto his shoulders and fucked her hard. \n\n\"This is why I like new dancers. By the end of the night, most of them are so horny and down to fuck. It's the hottest pussy a guy can get,\" Mike said between deep hard strokes. \n\nMelissa was lost in how she felt, she was crying out for Mike's cock as she arched her back. Jack was rock hard watching his wife begging for another man's dick as she had a wild orgasm. He kept pumping as she finished her cumming. When he was ready to cum Mike pulled out and made her get down on her knees like he did the first time, he grunted loudly as he deposited his load in her mouth. \n\n\"Hey Don are you having some of this? I think this pussy needs some more dick.\" \n\nDon smirked as he took Mike's place and stuffed his dick in Melissa's mouth. He took hold of her head keeping it still as he fucked her face, his long cock made her gag repeatedly. Jack was thinking he was being pretty rough and considered stepping in to stop him but then he stopped. Melissa gasped to catch her breath as he stood her up. Don bent her over the desk, she stared directly at Jack as he penetrated her from behind. Jack almost came seeing her face as Don slid into her, her eyes closed and pure pleasure was etched on her face. She whimpered as the man pounded her cunt, he was even rougher than Mike. He only lasted a few minutes before he exploded inside her pussy. \n\n\"You're up Jack. No way that you're turning this pussy down,\" Mike said. \n\nJack hesitated trying to stick to his story about being faithful not wanting to accidentally blow their story. \n\n\"It's okay Jack. I won't tell your wife I promise,\" Melissa said in a soft voice. \n\nJack got up from his chair, he undid his pants and pulled out his dick which was harder than it ever had been in his life. Melissa put it in her mouth and slowly sucked on it. He was being very careful not to cum too fast and embarrass himself in front of the other two guys. It had been a long night and he had seen his wife do a lot of slutty things so had a huge load ready. He stopped her after a couple of minutes, then helped her up and laid his wife down on the desk so he could see her face. He pushed into her, she was so wet and juicier thanks to Don's sperm already being present. \n\nHe started slow and controlled but soon was giving it to Melissa just like the Mike and Don did. Visions of the entire night were playing out in his mind from stripping to hand jobs to blowjobs. Melissa was cumming again as Jack blasted his load into her pussy mixing it with Don's. He pulled out and cum oozed out of her pussy, it was visual proof of a night full of her acting like a whore. \n\nThe next night played out almost exactly like the first night of stripping for Melissa but she took more guys into the VIP room to masturbate them and gave more blowjobs. By the end of her shift she had made the decision that she had lived out her fantasy and more, that meant she didn't want to be a stripper anymore. \n\nMelissa was very happy she tried it, the excitement was undeniable and she could remember how it felt anytime she wanted. She also made a ton of cash but it wasn't something she wanted to do on a regular basis but her dilemma was that she didn't know how to tell Mike without pissing him off. When she saw Jack alone she pulled him aside and told him she was done, he was cool with it and liked that it was her making the decision. \n\n\"I love you honey,\" Jack said to her and smiled.\n\nWhen Melissa's shift ended she went up to Mike's office, he was there talking to Jack. He saw the look on her face and knew what was about to happen. Ladies quit on Mike all the time so knew the look. Naturally he was disappointed but he really liked Melissa so didn't get angry or upset but he did have one last favor before she left. \n\n\"I want one last piece of that fine pussy baby. What do you say?\" \n\nMelissa couldn't help but giggle, it was insulting but yet from him, flattering. She gazed over at Jack with a look that told him she wanted to do it, sort of like closure. She unzipped his pants then squatted down in front of him. Jack thought she looked amazing in her tiny silver bikini and heels and wanted to get her home so he could fuck her in their bed. Melissa had him hard. \n\n\"I know the drill,\" she teased as she bent herself over the desk, she undid the string to her bottom and offered him her pussy. \n\nHe was caressing her butt as he worked his cock in and out of her. Melissa moaned as he seemed to be taking his time with her which was unusual. Her eyes kept going to her husband even though she was trying her best not to. Then she heard something strange, Mike had opened the desk drawer to get something.\n\n\"You have such a nice booty, I have to tap it before you quit on me.\" \n\nMelissa began to panic, she had tried anal before and it hurt so much that she never did it again. Jack's reaction was hard to hide, he had never done that with Melissa, she always said no to him. He felt jealousy for the first time as Mike squirted lube onto her asshole and it looked like she was going to allow him to do it. Melissa jumped a little feeling the cold substance on her asshole, quickly followed by his finger being inserted into her ass.\n\n\"Don't worry I'll get you good and ready. I've been wanting a piece of your ass since you started.\" \n\nMelissa felt like it was too late to stop him, she also saw Jack and he looked like he was finally jealous about something and it felt good. \n\n\"Okay Mike you can have my ass,\" she said in a whisper while looking at her husband. \n\nHe put some lube on his dick then pushed it between her cheeks pressing it up against her asshole. Jack wanted to stop Mike and take his place but didn't. It was too late as Mike forced the head of his dick inside. He tensed seeing Melissa's face scrunch up, he was watching his wife being sodomized. Mike was being gentle and taking it slow. Melissa felt an uncomfortable feeling in her ass as the head made its way deeper. Jack watched in awe as Mike paused to allow Melissa the chance to relax. He inched into her slowly and groaned as it was by far the tightest ass he had ever tried to fuck. Melissa took a deep breath as the man rocked his hips forward. He started a deliberate pace penetrating her further with each insertion. \n\n\"That's it baby, relax and take a deep breath. Feels good to have my dick in your ass doesn't it?\" \n\nMelissa had her eyes open and it wasn't as bad as she thought it was going to be. His strokes got longer after a few minutes and then he was burying his full length in her ass. She found it easier to handle now that the deed was done and he was moving in and out. Mike gripped her ass cheeks firmly as he kept praising how hot it was. Jack swallowed, his throat dry as Mike started to fuck Melissa's ass like he owned it. He started to pound it, his flesh smacked against her body and to her surprise she was enjoying it especially because of Jack's desire to be in Mike's position. \n\n\"Your ass was made for fucking. I think you love it. Tell me, where's my cock Melissa?\" \n\n\"Your cock is in my ass,\" she moaned looking directly at Jack. \n\n\"Tell Jack what I'm doing to you baby.\" \n\n\"Mike is fucking my ass Jack. I love it.\" \n\nMike really started fucking her ass hard and was on the verge of cumming as he smacked her cheeks hard and even pulled her long blonde hair. Melissa had given herself completely to Mike as fucked her ass like one of his whores. He suddenly lunged deep in her and released his load into her bowels. He took his time after that slowly pumping until every drop of sperm was deposited in her ass before he pulled out of her. Melissa let out a gasp feeling the sudden emptiness. Jack sat there is silence as Mike cleaned himself up with some tissues and Melissa tied her bikini bottom back up. \n\n\"I get you don't want to do this on a regular basis but can I call you if I need someone for a party or a stag? It's really hard to get girls you know will work and you can trust to make the customer happy,\" Mike asked as he ran his fingers through Melissa's hair. \n\n\"Sure. Give me a call. I might want to pick up some extra cash sometimes,\" she answered not wanting to reject him outright and she figured it might be fun on occasion. \n\nMelissa gave Mike a peck on the cheek then left to get dressed and go home. She knew Jack was going to be hornier than ever later, she was a hundred percent sure he would try to fuck her in the ass but she was going to have fun with that seeing he was jealous that she gave it up for Mike. \n\n\"I should be heading home too. The old lady is getting suspicious with me hanging out at the club all the time,\" Jack said as he stood up once Melissa was gone.\n\n\"No problem buddy. Tell your wife I have a party coming up in a couple of weeks and I'll be calling her,\" Mike said taking Jack off guard. \n\n\"How did you know Melissa was my wife?\" He asked. \n\n\"It was pretty obvious she was your wife Jack. You were way too interested in her while she was serving or dancing and especially with the guys in the private rooms. You're a lucky guy she's a hot piece of ass and anytime you want to watch her get fucked I'm available and so is Don. But I'm serious about that party, I want her there if you can convince her.\" \n\nJack agreed to talk to Melissa about it, he also was done working at the club for a while since he had straightened out the books and given Mike some good ideas. They agreed to stay in touch and Mike promised free drinks whenever he felt like stopping at the club."
    ],
    "authorname": "Jay142",
    "tags": [
        "exhibitionism",
        "exhibitionist",
        "public nudity",
        "slut",
        "stripper",
        "voyeur",
        "voyeurism",
        "watching",
        "wife"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/melissa-shows-off-ch-01"
}