{
    "title": "There and Back Again Ch. 146",
    "pages": [
        "Chapter One Hundred Forty-Six: Un-Awakened \n\nUtha, who'd been standing still, one arm wrapped around her own middle, shoulders down and looking incredibly dejected, straightened up, squared her shoulders, took one massive running leap towards the Architect's receding back, and drove her dagger into his flank, the blade sinking deep into his unprotected flesh. \n\nTime seemed to slow. I gasped, heard Aedan shout out in surprise, saw Solona twitch, felt Alistair's hand tighten on my shoulder; each item took only a fraction of a second, but felt much longer. In that frozen instant, the barrier dropped, and I reached out quick as lightning and seized the Architect's mana. I wasn't sure if he would die -- Utha had withdrawn the dagger, making no further attempt to injure him -- but I wasn't taking any chances, and her attack had at least distracted him enough that his iron grip on his own mana pool was lost. \n\nI watched as the creature spun slowly, looking at Utha with pure disbelief and betrayal showing even on his ruined face, before he sank down to the ground almost comically slowly. His hand covered the wound, and I vaguely wondered if he'd tried to heal himself, assuming he even had any sort of healing ability. Not that it would matter if he did, since he had no access to any mana to cast with. \n\nThe thought brought me up short; I hadn't really noticed, but he had barely any mana for me to hold onto, and what little I held was slowly decreasing as time went on. When I'd managed to take his mana before, when Faren had been captured, he'd had the largest mana pool of anyone I'd ever encountered before that. Now he probably didn't have the mana for a single spell, and it was fading fast. \n\nIs he dying? I tried to think if I'd ever noticed mana slowly bleeding out of an emissary that we'd killed, but most of them had died quite quickly. I had no idea what it meant, but had no intention of letting go regardless. \n\nFinally released from our shocked paralysis, we all jumped to action. Conrad and Rolan raced to Solona and Anders, the former digging through his pack for healing and Lyrium potions even as the latter reached for his weapon to cut the bonds that held the chained mage to the stone. Aedan and Zevran ran towards Utha, swords raised, while the ghoul dropped her own weapon and held her hands up in surrender even as she sank slowly to her knees. And Alistair and I went to check on the Architect where he had dropped, unmoving. Nate and the Legionnaires spread out around us, checking the rest of the corpses for signs of life, and the rest of the old Thaig for more darkspawn. \n\nThe Architect's still form was repellant, radiating the taint in a way no Warden or mere darkspawn did; the feel of it, so malignant, made my knees go weak and my stomach roil. I swallowed convulsively, trying to keep the contents of my stomach on the inside, and forced myself to reach down and touch the monster from so many of my nightmares. \n\nIt took both Alistair and I to roll him onto his back; it was clear, once he was straightened out, that he was breathing, though how long that would last with black ichor pumping out of the wound in his side was unclear. His eyes were partially open, but unseeing, and he didn't react to being moved or even to his wound being jostled. And I noted that his mana was all-but-gone; there was virtually nothing left for me to hold. Alistair and I exchanged confused glances before looking over to where Aedan and Zevran held Utha hostage. \n\nThe two Wardens were debating tying the former Warden's hands; I signalled to Wulf to watch over the Architect, and Alistair and I joined my brother in the discussion. \n\n\"Don't,\" Alistair recommended. \"Don't tie her hands. We're going to have some questions, and she can't talk. She won't be able to answer.\" \n\nAedan looked down and snapped to get the ghoul's attention. \"Will you cooperate? Will you answer questions?\" \n\nShe nodded reluctantly, hands moving spastically to sign...something, which startled poor Zevran and made him bring the tip of his sword to her neck. She actually rolled her eyes at him and gestured again slowly, deliberately, but then seemed to almost sway, even kneeling as she was. I realised the black pool of blood surrounding her knees was slowly growing, and I pointed it out to Aedan. \n\n\"She's injured. If we don't heal her, she may not last long enough to answer.\" \n\nAedan fished his hand into a small pouch attached to his belt and came out with a small healing potion. He hesitated before handing it over. \n\n\"Do I have your word you will not try to harm anyone here or try to escape?\" \n\nShe nodded again, more enthusiastically this time, and gestured again, this time clearly pointing towards where Conrad knelt at Anders' side. \n\n\"Just give it to her,\" I growled at Aedan. \"What's she going to do with all of us here? I'm going to get Conrad. Hopefully he can understand her well enough to translate.\" \n\nI left the three nervous men surrounding Utha and hurried over to the two captured mages and their rescuers. Trevian was there, patiently supporting Solona and tilting the remnants of a blue Lyrium vial into her mouth. She was pale, covered in bruises, breathing harshly; her eyes fluttered, clearly not entirely conscious, and I decided against asking any questions for the time being. Anders looked somehow better, despite being out for the count -- less pale, less sweaty, but with a significant goose egg on one temple to explain why he hadn't awoken yet. Conrad was coaxing a healing potion down his throat while Rolan hovered over both mages anxiously. \n\n\"Conrad? We could use your help.\" I pointed to where Utha knelt, having just polished off her own vial of red fluid. The ghoul was busy removing her heavy armour, I assumed so she could get at the gut wound that had bled so profusely. \n\nConrad glanced over and nodded, then called out to Sigrun to take over. The templar looming over us knelt quickly before she could even get there, pulling out a Lyrium potion from his own supply. \n\n\"I've got this.\" He nodded as Sigrun joined him, but pulled the unconscious mage's head into his own lap. \"Go. I'll call you if his condition changes.\" \n\nConrad stood, obviously more trusting than I was; he stretched his shoulders quickly, shaking out his hands, and then headed towards Aedan. I spared one last glance at the pair of Wardens attending to Anders, reassured by Sigrun's steady presence. I'm not quite ready to forgive and forget with Rolan yet, but Sigrun won't let anything happen to Anders. \n\nI turned away and trotted over to my brother in time to hear Conrad, in response to something Utha had signed, say, \"Heal him? Wha-\" \n\nUtha interrupted him with several terse hand gestures, pointing at the Architect's limp form more than once; she appeared to be having to repeat herself, with Conrad muttering at her to slow down the entire time, but eventually understanding seemed to bloom on his handsome face. \n\n\"Alright, so, correct me if I'm wrong,\" he said to Utha before turning to us, \"but I think what she's saying is that the Architect is...sort of like an Archdemon.\" She signed something, and he nodded. \"Not exactly, I know, but the point is, if we kill him, or allow him to die...he won't be dead. His essence will pass to the nearest darkspawn -- not a Warden, so in this case Utha first, or, if we killed her, another darkspawn somewhere in the Deep Roads nearby -- and he'll come back.\" \n\nI gasped. \"Like Corypheus.\" Aedan and Alistair looked at me strangely, and I shook my head. \"He's one of them. One of the original Magisters, the ones who tried to go to the Golden city. Ask her.\" I couldn't get the images out of my head, now that they'd been brought to mind: Hawke killing Corypheus in the Dragon Age downloadable content, and then Larius acting so strangely afterwards. \n\nConrad asked her, and she half-shrugged, half-nodded. She gestured, and he translated. \"Maybe. She doesn't really know. But he's died before, and just came back. So killing him isn't a solution.\" \n\n\"What did you do to him?\" Aedan asked her. \n\n\"And why doesn't he have any mana?\" I added before she could reply. \n\nConrad translated for me again, then watched her increasingly frustrated signing. \"She poisoned him. I'm assuming something like mage bane,\" he paused as she signed something emphatically, \"or not. Something worse. But he won't wake for a long time, and his mana is gone. But if he dies, even with the poison, he'll come back -- so she is suggesting rather forcefully that we give him a healing potion. She assures me it won't cure the poison.\" \n\nWe all looked at each other, eyebrows raised, unable or unwilling to vocalise the questions. Finally, with a shrug, Aedan handed me a healing potion. \"Up to you, sis,\" he decided. \"You seem to know the most about what's going on, and you're the one he's hurt the most.\" \n\nI took the small vial reluctantly, weighing it in my hand while I dithered. What would we do with an unconscious former Magister? I couldn't keep him suppressed forever, and if his mana reserves returned to their former levels, no one else would be able to manage him. Regardless, do I believe Utha? I rather think she's telling the truth -- it makes a sick sort of sense, really. And if I believed her, then allowing the Architect to die wasn't a better solution. Regardless of what we decided to do to him, keeping him alive -- and under our control -- was the best possible situation, at least for now. \n\nMind made up, I walked over and knelt by the Architect's ruined face. Wulf, who'd been watching the creature as requested, lifted his head and tilted it back, allowing me to pour the potion into his open mouth. The black ichor flowing out of his wound slowed and stopped as I massaged his throat, forcing the sticky fluid down. He didn't so much as twitch, though, even when Wulf pinched his finger hard to attempt to elicit a pain reaction. Reassured, I returned to Aedan and Alistair where they stood watching me. I curled into Alistair's arms, trying to take comfort from him despite the plate armour he wore; I couldn't help but notice Utha's bemused, inaccurate gaze as she tried to see me despite my strange invisibility. \n\nAedan turned back to the former Warden. \"I have to ask: why?\" He gestured to the Architect's still unconscious form. \n\nUtha sighed, and then started signing, slower this time and obviously reluctant. Conrad translated. \"She says...he deceived her. Kept things from her. And she excused it for a long time, hoping he could make good on his promise to end the Blights. But she finally came to realise that he would sacrifice anything and anyone to accomplish his goal, and didn't care about the collateral damage.\" \n\nI eyed the ghoul skeptically. It wasn't that those reasons weren't legitimate; there was no question the Architect was more than ruthless enough to watch the entire world burn if it got him what he was looking for. It was more that...it didn't seem like that was enough to explain such a change of heart. It wasn't new information; she'd known for more than two decades that it was true. So why now? \n\nAnd then something clicked. \"It was because of Kell, wasn't it?\" Conrad looked at me in confusion, but I just shook my head and pointed at Utha. \"Ask her. She changed her mind because of what I said about Kell, back at the Mother's nest.\" \n\nConrad turned back to her; she was staring into space over my left shoulder, presumably the place she assumed I was standing. \"Is it because of Kell?\" he asked uncertainly. \n\nThe ghoul slumped even further, if that was possible, and finally nodded. She signed something urgently at Conrad, and then reached a hand up one armoured sleeve. Zevran and Aedan jumped, both of them producing daggers seemingly out of thin air; Conrad jumped back, and Alistair pushed in front of me with a curse. She ignored them all, didn't even wince as Zevran's blade pierced the skin on her neck, simply grabbing the dagger she'd been reaching for and holding it out in my general direction hilt first. She didn't waver; her hands didn't shake even as a trickle of black blood wound its way down her neck. \n\nI looked to Conrad, whose expression was hilarious, a weird combination between surprise, fear, puzzlement, and disgust. \"What did she say?\" \n\nHe swallowed, turning to look me in the eye, still looking vaguely...sick, or something. Constipated? I had to stifle a completely inappropriate giggle. \n\n\"She wants you to stab her.\" \n\nIt was my turn to gape like a fish, stuttering wildly. \"W-what?\" \n\n\"She wants to see you, hear you, and she said the only way she could was if you attacked her. The Architect told her that those you've attacked, like the emissaries whose mana you steal, can see you. She wants you to stab her.\" \n\nI stared, open-mouthed, at the ghoul, who nodded firmly at something behind me and to the left. I exchanged looks with Aedan and Alistair, both of whom looked surprised, but not incensed, which surprised me more. I looked at Conrad, who shrugged his shoulders helplessly, and Zevran, whose attempt to conceal a highly amused smirk was entirely unsuccessful. The men holding her at sword-point sheathed their weapons, and Conrad settled back down beside the ghoul, waiting expectantly. \n\nAppalled and horrified, I curled into Alistair's arms, wrapping my shaking hands around his waist. He wasn't fooled. \n\n\"Love, you don't have to do this if you don't want to.\" \n\n\"But you think I should?\" He hesitated, and I continued. \"You all do. You think she has answers she might only give to me. And you're not wrong. But to stab someone in cold blood?\" \n\n\"It doesn't have to be some severe injury,\" he countered softly. \"A finger prick might be enough, honestly. And if that gives you the chance to find out anything -- what he did to you, what other plans he had...how to keep him from hurting anyone else? It might be worth it.\" \n\nI squeezed him once, taking comfort from the kiss he pressed to my forehead, and then with a reluctant sigh, disentangled myself to sit in front of Utha. \n\nI took the dagger from her outstretched hand with distaste, although watching her look of fascination as the dagger, from her perspective, disappeared into thin air made me chuff out a strained laugh. I examined the former Warden, looking for signs of reluctance, and saw nothing. She kept her arm -- bare to the elbow, blackened skin and all -- extended, and so with a sigh, I deliberately drew the point of the blade a few centimetres along the ruined flesh, leaving a thin trail of oozing black ichor as I did. \n\nThe look on her face when I suddenly appeared to her was almost comical. She ignored the wound I'd made completely, and I tried not to squirm as her assessing gaze travelled over my seated form. She signed something, and Conrad choked beside me; when I glanced at him, he was nearly purple with suppressed laughter. \n\nI sighed. \"What?\" \n\nHe let out a completely unmanly giggle. \"She thought you'd be bigger.\" \n\nAedan and Alistair guffawed behind me as I blushed and rolled my eyes. The ghoul smirked, the effect somewhat hampered by her ghastly complexion and the black circles under her milky eyes, but it made her seem much more human, relaxing me somewhat. \n\nI didn't know what to do with the dagger I held; I wasn't about to give it back to the ghoul who I still didn't entirely trust, but I didn't want to hold it, either. I set it beside me awkwardly, wiping my hand on the leather of my pants while I thought of what I wanted to ask. \n\nShe beat me to it, signing something to Conrad. \"She wants to know about...about her friends, I think?\" \n\n\"Fiona, you mean? Duncan?\" She nodded. I continued in a softer voice, \"Kell?\" I sighed. \"Duncan was a thief, you know. He escaped his shackles. He freed the others, and they escaped...but there were too many darkspawn between them and the surface. They'd never have made it. So Kell...he decided to distract the darkspawn, give the others a chance to escape. He ordered them to leave him. He tried to get Hafter to go with them, but he wouldn't go, so the two of them attacked the darkspawn and then took off, and the 'spawn chased them. I don't know exactly,\" I winced, \"how he died, but there were hundreds of them chasing him.\" \n\nShe nodded sadly, a lone tear rolling down her cheek. The only possible outcome of that sort of self-sacrifice was obvious, and didn't need describing. \n\nI cleared my throat and continued more confidently. \"Maric, Fiona, and Duncan escaped, only to be captured by Remille, and you saw what happened there. Duncan, well, he had stolen some artifact from Remille before you all went after Bregan, and it protected him -- his taint didn't advance. He died during the Blight, just last year.\" I flinched away from that thought, the grief -- though no longer raw -- still unpleasant. \"But...Fiona's taint, after they escaped...it disappeared, or something. I think it made her like me. She didn't have to go through her Calling. She's still alive, somewhere, though if Weisshaupt hasn't kicked her out of the Wardens yet, they will. And...she had a child. Maric's child.\" \n\nHer eyes were wide, her entire body frozen in shock. I wonder if it's entirely due to Fiona's taint disappearing, or a Grey Warden having a child, or if the identity of the father has anything to do with it. I was saved from my internal debate about telling her just who that child was by Alistair settling down beside me noisily. \n\n\"I'm that child.\" Her gaze roved over his face, recognition obvious in her expression. \"Hello, I'm Alistair,\" he continued self-consciously as she continued to stare. \n\nShe smiled, then, the first real smile I'd seen from her, even if it was sad. She nodded at my husband, then signed something to Conrad. \n\n\"You look just like him,\" he translated. \n\nAlistair blushed. \"So I've been told.\" \n\nWith one last searching look, the ghoul turned back to me. \"Would we have lived too?\" Conrad translated. \n\nI winced -- just who she meant by 'we' was obvious, and tragic. \"I can't be sure, obviously -- your taint, and Kell's, was more advanced than Fiona's -- but it seems likely, yes. Assuming you were able to escape, of course.\" \n\n\"And he knew?\" Her gesture at the unconscious former Magister behind me was unnecessary. \n\n\"I don't know.\" I sighed. \"My knowledge is piecemeal. He was clearly playing with forces he didn't fully understand.\" Which is probably the motto of his entire long lifespan, honestly -- from breaching the Fade up until now. \"We still don't know anything about what he actually did to me, or what those amulets did to Fiona. No one at Weisshaupt was able to figure it out either, even after studying them for twenty years. So whether he knew the effect could be reversed? No idea, and I don't fancy waking him up to ask, even if I thought he'd tell us the truth.\" \n\nShe shook her head, resigned, and irritably wiped away the tear tracks that had formed. It's rather surreal to watch a darkspawn cry. \n\n\"Do you know what he did to me? Or even why?\" I asked once she seemed composed again. \n\nConrad translated her signs. \"No. He sent her away sometimes, to look for things -- books, I think? -- and what he did to you must have happened one of the times she was away.\" He paused while she signed something else, her movements suddenly jerky, like she was irritated. \"He knew she wouldn't agree with it, I think. She always stopped him -- wouldn't allow him to make Broodmothers, or sacrifice people for his plans, or if they were just in his way. She's realised over the years there were lots of things he either concealed or lied about because he knew she wouldn't accept them.\" \n\nI tugged my braid, disappointed. \"What has he been working on, do you know? There's the plan to put the darkspawn through the Joining with Grey Warden blood...\" ",
        "Conrad watched her hands, then answered. \"That's the only recent plan she's aware of. There was the other -- to put all people through the Joining to make them Wardens, but even she could see the problem there -- too many deaths, and then no babies. And then trying to kill the Archdemons -- and we all know how well that worked. But she didn't know about that until you told her.\" \n\n\"Are there any more Broodmothers out there? Any more 'free' darkspawn?\" \n\nShe shook her head, almost... sadly? \"She killed them all, she says. All of the rest of the Mother's, and all of the Architect's. They trusted her, ignored her because she is a ghoul, so she was able to kill them all.\" \n\nI reached out and patted her arm, careful to avoid the blood. \"Thank you.\" She looked at me, perhaps wondering if I was sincere. \"Honestly. I don't...I can't condone the choice you made. Following him was never a good idea, and it went against everything you were supposed to stand for as a Warden. I think at first you wanted to believe him for your own reasons -- maybe you were afraid you'd have to go on your Calling, or you thought it would somehow bring justice to your family if you could accomplish something so important before you died. I don't know -- and then later, well, it was clear he could impair your reasoning, mess with your emotions. But killing them, stopping him -- that couldn't have been easy. So thank you.\" \n\nShe finally nodded. \n\nI looked up at Aedan, then over to Alistair and Conrad. \"So what now? What are we going to do with him?\" \n\nUtha signed something. \"She says the poison should last a few days, during which he will remain unconscious. She said she has only a little bit more, but if he swallows it he might stay out for a week. After that, her suggestion is we find somewhere to hide him -- but not allow anyone near him, not ever. She says that he can influence Wardens like he did her, and shouldn't be given that opportunity.\" \n\nI thought of Corypheus -- how the Wardens had tried to do that, had gone to extraordinary lengths to do exactly what she said, and he'd eventually broken free. But what choice do we have? Killing him isn't an option either. Maybe Avernus has some ideas. \n\nThinking about the ancient mage gave me an idea -- one I wanted to wait and discuss with Aedan and Alistair alone, well away from Utha or any other Wardens. \"I have an idea, but we can talk about it later.\" I gave my brother and my husband each a hard look, and they nodded. I turned back to the ghoul in front of me. \"And what about you?\" \n\nShe reached out, making me twitch, but merely picked up the dagger from where I'd set it, and handed it to me again hilt-first. She didn't sign, didn't even make eye contact with Conrad or the others, just wrapped my hand around the handle of the dagger and gently pulled my hand toward herself. \n\nI froze, searching the ghoul's ruined face. The implication was obvious; she wanted me to kill her. Why me? I couldn't ask, couldn't even figure out how to verbalise the question. But, I realised as I continued to examine her, she looked tired. Her milky eyes drooped, her hair was patchy and brittle-looking. What little normal skin she had left was wrinkled and spotted, and the corruption of the taint was starting to eat away at her lower lip. I looked away, horrified by what she'd allowed herself to become. \n\nAnd then it occurred to me: she was probably horrified too. And what else did she have now? Where could she go? She'd betrayed the Order she once stood for, betrayed her only ally in this new disgusting existence; she had no hope now that the Architect's promise to her would ever be fulfilled. She'd condemned the man she once loved to death at the hands of the darkspawn she'd sworn to fight, and would never be free of that guilt. She had no future, no hope, and I'd seen no sign that darkspawn ever died of natural causes. So she was stuck with this existence, until she either killed herself or went mad and really joined the darkspawn she'd hated for decades. \n\nI tried to put myself in her shoes, and knew without thinking about it, without a doubt, that I'd wish for death too. I risked a glance around me, and saw only expressions of pity and horror on the faces of my friends and family. I knew none of them would expect me to be the one, but looking back at Utha's face, I could see hope and resignation warring within her, and knew that, with my knowledge, I was the one most likely to understand all of it. \n\nThrough all of my introspection and hesitation, the ghoul merely held my hand, waiting patiently. And in that moment, I was decided. I gripped the dagger for the second time, leaned forward to loom over her, and whispered \"Maker forgive you,\" loud enough for her to hear it and nod, looking almost hopeful. And then I thrust the dagger up under her ribs like Zevran had taught me, twisting my wrist until I felt a torrent of hot, sticky tainted blood flow down my hand."
    ],
    "authorname": "ElyssaCousland",
    "tags": [
        "fantasy",
        "fanfiction",
        "dragon age",
        "romance",
        "modern girl in thedas",
        "alistair",
        "anders",
        "awakenings",
        "origins",
        "da2"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/there-and-back-again-ch-146"
}