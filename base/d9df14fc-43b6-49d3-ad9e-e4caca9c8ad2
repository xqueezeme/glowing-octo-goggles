{
    "title": "Sholan Alliance - AU Bk. 03 Ch. 01",
    "pages": [
        "Billy's eyebrows shot up and his jaw dropped and his brain fizzled out for a few moments as he tried to process what she had said. Unfortunately every time it reset it came back to the 'She's Pregnant' before having to reset. Eventually he was able to speak. \"Pregnant? But how?\" \n\nTo put it bluntly his brain decided now was a good time for not just needing a reset to a total derailment of his train of though. It was rather obvious that he was trying to completely understand what she was saying but his utter and complete confusion was coming across the link. Satasha couldn't help but smile since she was feeling his confusion. What he really thought she wasn't sure since it felt like his brain shut down. \n\nBilly finally closed his eyes and took a deep slow breath and used a technique an instructor taught him to slow his thoughts down. It took him some time but he finally calmed enough to think about what she had said. To be honest much of what he was feeling was simple shock. Even with what the doctors had been telling him about the genetic changes it had all been theoretical. Most of the rest of his thoughts were pride and joy. There was a definite feeling of 'I am a real man' in there as well. \n\nSatasha had settled on the bed as he was trying to calm his mind down. It was a rather odd sensation since it almost felt like he was shutting down sections of his mind. It took him some time but finally his mind was calm and somewhat back to normal. She was pleased that he would be able to talk with a semi-rational train of thought. Well till she caught the bit with 'I'm a real man now' and almost smacked him. \n\nBilly opened his eyes and looked at her and a wide smile was plastered on his face. \"I am so happy for both you and us. God I can't wait to see our baby.\" He could feel her irritation with his thought and snickered at her. \"Only real men can get women pregnant you know. If the parts are not original items they can't do dat. There for I am a real man...\" He winked at her just for good measure. \n\nTasha actually growled at him and it was obvious she thought he was teasing her which he was to an extent. She could feel his happiness and pleasure though and she softened. Since they were alone she settled down on his good side and leaned against him and let her worries show in her mind. *I am scared Yilly. Some is the whole idea of carrying and bringing into this world a new life. Some is what the child will look like. I am so scared even though I am pleased as well.* \n\nBilly wrapped his good arm around her and pulled her close. \"Tasha I love you and will be here through whatever happens. I, personally, assume there is a reason for this though I have no idea why. We are not fertile with each other yet look at what we have been blessed with. I don't know if it is from your deities or one of ours but it isn't something random.\" \n\nHe turned his face towards her and rubbed his cheek with hers before gently nibbling her jaw and ear. \"Now why don't you...\" What he was going to say was interrupted by a chime for entrance. \n\n\"Ambassador Madlax, Lt. Commander Verzilon I am Shion senior priest of Vartra. I wish to speak to you for a few minutes. May I come in please?\" \n\nBilly swapped glances with Tasha and they swapped confused look. \"Yes Father Shion but only for a short time since Yilly just came out of surgery and needs to rest.\" Satasha called out as Billy settled back in the bed where he had been. He watched Satasha walk over to the door and when it opened she greeted an older male in a formal looking robe. \n\n\"Good morning Father please come in and would you like a c'shar?\" He had purple on his robe which Billy noticed almost immediately. He reached out and lightly touched fingers with her. She moved towards the dispenser as he came in. \"As I am sure you know this is my bondmate Yilly Madlax and my Leska. If you don't mind I am going to leave off all the other lovely titles. For some reason I don't understand they make him feel old and tired.\" She collected some drinks and brought them over. \n\nBilly raised the head of the bed up higher so he was able to look at the priest better. When he came in and Billy was introduced he held his good hand out. \"This is a pleasant surprise, or I so hope. Welcome Father and please have a seat.\" When the priest touched his fingers Billy had to smile since the male felt very calm. \n\nWhen Billy commented about hoping it was a pleasant surprise he gave him a gentle smile. \"I have been meaning to come and say hello but didn't want to disturb you since you were recovering.\" He liked the feel of Billy's mind though it was rather daunting just from the light touch. Shion could feel his mind working away on several different levels that most people didn't have. \"Thank you Lt. Commander for the drink.\" \n\n\"As I am sure you can figure out I am here for several reasons. First is to meet the first new alien species for close to a hundred years. Second is because somehow the two of you have formed a Leska link which is rather shocking. And of course because of the new life Satasha is carrying.\" After adjusting his robes slightly he picked the cup back up and took a sip. \n\nSatasha had settled down next to Billy once she had handed the Father a drink. He listened to what the Father had to say and his face hardened slightly. \"Whatever happened to privacy of medical information? I do not remember giving permission for any of my medical information out. I also know for a fact that Satasha hasn't given it either. I do not approve of or appreciate this information being given out without our being asked. We can talk about the first two items but till we have been given a chance to talk about the pregnancy alone it isn't going to happen.\" \n\nNow he was sitting up and his expression hardened even more. \"Speaking as the Ambassador this is very concerning. We have rules and regulations on the privacy of patient's personal information. I am going to see about requesting an investigation on how you seemed to have acquired this information. Till this issue is resolved and an addendum added to the treaty no questions will be answered. I will not have our private lives examined by anyone who we don't think should have it. Do I make myself clear Father?\" He was ignoring Satasha's mental attempts to get him to relax. \n\nFather Shion tilted his head and pricked his ears forward as the human spoke. To be honest there was a fair amount of truth to what he had to say but the Brotherhood of Vartra was outside the laws. \"That is clear Ambassador and I will make note of it and bring it to the attention of the appropriate people as well. I will not apologize since there are some things you simply don't know as of yet. At your request I will not touch on the coming kit other than to say congratulations. Would you mind calling for Z'Marl to come in? This conversation will have an impact on her as well.\" \n\nThe fathers tone was even without yielding any trace of emotions. He met Billy's anger and let it roll over him and it showed. As he had said apologies were not going to be given at this moment. He really hoped that once he had a chance to really sit down and talk Billy would start to understand. \n\nThe door opened a moment later and Z'Marl walked in and blinked at the Father. \"Good morning Father.\" She nodded at him before going and sitting on Billy's other side. Even she could feel that he was angry but with what she didn't know. \n\n\"So what do you have to talk to us about Father?\" Satasha asked since she could feel Billy's irritation and that he wasn't in the mood to be anything more than civil. He truly was upset that news of her condition had been allowed to leak without their permission. \n\nShion took one more sip of the char and set the cup down. \"Actually this information is for the three of you and is something you are going to need to consider.\" He looked straight at Billy when he spoke. \"We are aware of the genetic changes that all of you have started experiencing since you have been seen for the ni-uzu virus. This is especially true of Yilly and Satasha. Currently Leska's are seen as a couple and the link for breeding new talents, stronger talents. As the children of those Leska's grow and pass on their genes over time they are spread out through the population. We have been tracking these changes for centuries. One thing many of the current population doesn't realize was that during the time of the Falling Skies they were actually a triad. Usually it was two warriors and a female and the warriors cared for and protected the female while she birthed the next generation of telepaths.\" \n\nHe took another sip and even had Billy's attention though his mind was still hard and angry. \"Normally the Leska linked warrior and female were the main partners in the triad. The third was on the edge of the link but still part of it. He would also provide genes for the next generation as well. Over time the third male or female was no longer needed for the protection of the mother and children. When that happened triads began to vanish since the Leska's no long needed to find or search for their third.\" \n\nShion looked at the three to see what they might have to say. He gave them several minutes and simply smiled. When Billy spoke he almost grinned. \"Okay, for the moment assume I bite on the tasty bit on the end of the sharp pointy thing. What does this mean for us and apparently Z'Marl? If you are saying she is our third then why have we not felt the link pulling us together or how would we know?\" \n\nShion gave him a pleased nod. The human was extremely smart and wasn't bothering to play any games at the moment. \"If the link is going to happen then it will happen at the right time. Presuming you are going to link this impacts her by becoming your third. Since both you and Satasha are warriors your jobs would be to protect her when she is pregnant. Currently since Satasha is pregnant it would be your job to protect the two of them and Z'Marl's job to take care of Satasha. There is one last bit of information I have for you and then I will depart. If the triad so chose they would hold a three way life bonding ceremony. Vows would be exchanged, you would share blood and light incense to Vartra. There is also a special piece of jewelry for the triads as well.\" \n\nHe reached into one of the copious pockets and pulled out three small wooden boxes and set them on one of the bed side tables. \"Take a look at them and the data on the cube in Yilly's box. Read it discuss it and please when you come to a conclusion contact me or my priest for the Telepath's guild.\" He stood and silently left the room as they were contemplating the box. \n\nBilly looked at them but chose not to touch his box as of yet. \"We will need to discuss this in a few days. Right now I am to out of it to make a rational decision and I am going to bed and fall asleep. I would love to have both of you beautiful ladies curl up with me if you are tired.\" He turned to Tasha and gave her a Sholan style kiss and a light lick to the end of her muzzle. Billy then turned to Z'Marl and did the same before he leaned back and tried to get comfortable. \n\n~~~ \n\nThe pirate engineer had finally broken down several days before. He had informed them that he would tell them everything he knew and didn't care what sort of deal they offered. At that point he had been assigned an excellent lawyer to represent him. As far as the lawyer was concerned he was an idiot to give it all up without any deal on the table. He spent several days talking with the man before they had finally ended up with a deal for the protection of his family. Beyond that he was not concerned. \n\nThe deal wouldn't be sealed till he knew his family was safe and off planet where the Organization couldn't get them. He also agreed to have one of the Sholan's in the room during questioning. They had informed him it would be a telepath at which he almost sneered. If the silly git was stupid enough to want to wander through his mind all the more power to him. \n\nOnce he had been given sufficient proof that his family was safe, well other than his ex who he hated, he started answering questions. That had taken a fair amount of time since he had gathered a goodly amount of information over the years. Most of it was on the makeup of the ships and bases but he had a few guesses on who some of the players were. \n\nOut of all the interrogation sessions he was only able to provide the location of one base. He couldn't swear if it was still active since it was one of the primary ones that the Pearl had served out of. Once she had been taken it was very possible all the combatants had been removed as well as much of the materiel items as well. The slave population would be removed from the equation by the simple act of removing all the air and blowing the locks. \n\n~~~ \n\nThe General was sitting in his room aboard his command ship and was looking out the window. Below him was a glowing star but other than that there wasn't anything worth recommending to this hell hole. That was one reason they had picked the system as their current base of operations, nobody had a reason to come here. If anyone did it would most likely be some tramp miner and they were easily taken care of. \n\nHe had just finished reading the report from his analysts and wasn't pleased. They now had definitive proof there were two completely different drive signatures and two different technologies. That indicated there was at least one more hyper capable race out there that they knew nothing of. As of now all they had was sensor data on the strange ship. Of the ship that was destroyed it hadn't left much behind. What had been left behind tied it to the ship they had destroyed. \n\nBased on this they were looking at a minimum of two planets of enemies which changed things. He had since shot off a message to high command but they hadn't gotten off their fat ass's as of yet. Chances were good they were holding off on orders to see if he managed to fuck up. That would allow the damn egg-lickers to get rid of him since he was one of the Emperor's favorite Generals. \n\nAfter reviewing deployment schedules and the status of his parasite craft he called his assistant in. \"Get the drone out of here. I am done with it for the time being. Also call for a staff meeting in one hour. Have food delivered while I am getting clean.\" The drone was already getting out of the bed and went to stand by the door. The last thing the General needed was to smell of sex at the meeting. It would distract the crew from what was needed. \n\n\"Yes General, I will take care of it and what do you wish prepared for the meeting?\" He knew what his General would want but it was always safer to ask. If one didn't it tended to lead to a short painful life at the hands of the priests. \n\nThe General scratched his chin with his fixed claws and finally gave the assistant some orders before turning away to the shower. When he came out the food was there and he quickly ate before heading to the briefing room. He would be the first in even if that meant the others had to wait. If he played this right he was going to be elevated even higher in the Empire. \n\n~~~ \n\nOnce the briefing was done new orders went out to the various scouts to reorganize how they were doing the recon's. The last thing the General wanted was to alert the enemy that they were still there. This was going to require the recon's to take more time in approaching the systems. He was changing this to reduce or eliminate the possibility that his ships would be located and identified. \n\n~~~ \n\nBack on earth the trial for the crew of the pirate ship had been finished. Death sentences had been handed down to the entire remaining crew. Other than the engineer none of the crew had been willing to make any sort of reasonable bargains. All of them had smirked and asked for immunity or no deal. Since they had taken that route the prosecutors had tossed the book at them. This included the table and rest of the library of law. \n\nOnce the trial was over and they had been convicted they had been sentenced to death via hanging. The execution was to be carried out forthwith and no chance of leniency. The sentence was to be carried out three days after the sentence was decided. For that the crew had been moved to the ultra high security wing with a view of the hanging pits. They had the excitement of watching everything being tested and verified to be working. \n\nBy now the so called Capt. Jack Sparrow was medicated to return him to sanity. He had been diagnosed with a chemical imbalance of his brain. It hadn't been enough to save him since they had records showing he had voluntarily gone off the medications a number of times. Each time he had he had committed some heinous crimes. The guards were not being subtle about the amusement value they were getting out of his reaction every time one of the trapdoors was tested. \n\nEventually the day arrived and once they had been fed their last meal the first five were led out of the cells. There were two guards per convict to ensure they didn't try something stupid. Once they were led out to the gallows and carefully hooked up the guards took up a position on each side. An officer would read the charges and sentence. Once done he asked for any last words. \n\nMost of the guards had to snicker at that since they were mostly sworn at. One guard leaned forward and whispered in one pirate's ear. \"See you in hell ya mangy ape. See you in hell.\" Moments later the trapdoors opened and the men dropped. Though they tried to struggle with the heavy weight that had been attached to their ankles it was futile. \n\nAfter a check the bodies were cut down and placed in plain pine coffins and taken away. The noose ropes were replaced and the next five were hung. The last two were led out of the cells and hooked up. The officer spoke the charges and sentence. \"Do you have any last words Percival Rochester?\" \n\nPercival glared at the officer. \"I am Capt Jack Sparrow and will be addressed as such you pissant. You will get your comeuppance before you know it. Your family will be killed from the oldest to youngest while you live. Once you have seen your entire family die brutal deaths it will be your turn.\" Just for good measure he spat in the officers direction. \n\nThe officer raised an eyebrow. \"Fascinating, how are you going to kill the family of an orphan? I wait with bated breath to see that happen.\" He turned to the person manning the levers. \"Release the trapdoors.\" There was a click and thud as the trapdoors opened. Due to the force of the release they were slammed against a backstop and caught by a simple hook to keep them from swinging. \n\nThe weight dropped and a slight sound of the ropes snapping straight with the force. After the prerequisite time the bodies were cut down and placed in a pine box and carted away. \"All guards are to report to medical and are to be on leave till confirmed for active service again.\" It was traditional to ensure the mental stability of the guards and executioner. \n\n~~~ \n\nUndersecretary Nelson was in his office at home watching the execution on TV. It was rare that they were publicly broadcasted but in this case due to the defendants it was allowed. As each group of men were brought out and hung he felt a sense of satisfaction. It wasn't satisfaction that they were killed but satisfaction that potential leak had been plugged. The other leak had been plugged as well when the air car Ricky and Marcella had been in had suffered a drive failure and crashed into the ocean from one hundred thousand feet. There hadn't been enough left to try and salvage other than the black boxes. \n\nThey showed exactly what was needed to ensure it all looked like a horrible accident. That had taken some time to organize but since it had started the moment the new of the capture had gone out they had plenty of time. Now that he had hopefully fewer worries about the potential security breach of the Organization he could relax. ",
        "After turning everything off he walked out of his office and found his wife and gave her a good hug. \"Sorry I have been out of sorts the last couple of weeks hun. I can't really talk about it but can say it was related to the pirates. Now that they have been dealt with I am going to take some time off and we are going on vacation. How would you like to visit Tahoe and go skiing?\" He knew she loved skiing and would jump at the idea which she did. \"I will take care of organizing it. So what is for dinner?\" They walked towards the dining room discussing food choices. \n\n~~~ \n\nBack in Switzerland the Ambassador was having another dinner with Ikarius and his wife. She had grown too really like his wife and enjoyed being invited to their current house and relax. So far Ceolura hadn't asked why his wife limped but tonight she was going to ask. It was obvious that the lady was in pain and they might be able to help. \n\nThey had just finished dinner and Ikarius had been called away for a quick phone call. Since it was just the two of them in the living area she took a sip of the after dinner cordial. As she was lightly twirling the small glass between her fingers she finally looked up at Amanda. \"Amanda I have a somewhat personal question for you. Please feel free to tell me it isn't any of my business and I will respect that.\" She took a deep breath before speaking again. \"I would like to know why you are limping and if you would be willing to have our doctor take a look. We might be able to resolve the issue for you or at least reduce the pain you feel.\" \n\nAmanda had given her a curious look and her first reaction was she was interested in Ikarius. She had rather expected her to ask to spend time with him which she definitely wasn't comfortable with. The actual question startled her and she took a sip of her tea. \"That wasn't quite what I was expecting but it isn't a secret. I was involved in an accident many years ago which destroyed my hip. The doctors did a fine job of putting me back together but the damage was too extensive. They simply couldn't fix all of the damage and ended up using bubblegum and tape to put me back together.\" \n\nWhen asked if she would allow one of the Sholan doctors to take a look she sighed. She had been poked and prodded every time some new treatment came out till she had finally said enough. \"I don't know Ceolura, I just don't know. I have gotten to the point where I can deal with this emotionally. It has taken a long time for me to get to this point. Ikarius has been my rock as I have dealt with this. There were times when I screamed in anger at the fates that did this to me. I almost drove him away in my anger and bitterness. I don't want to excavate those memories and feelings.\" \n\nCeolura was gently sampling what she was feeling as she was talking and she understood what was being said. She stood and walked over to Amanda and settled down next to her and tucked Amanda's arm around hers. \"I understand Amanda and respect your wishes. I just wanted to make the offer since both you and Ikarius have become my friends. Please consider it though. I won't say anything more about it since it is your decision.\" \n\nAmanda nodded but changed the subject. \"How are the four women doing? Are they getting better and have you heard anything about Crystal?\" She had taken an interest in the women and had taken over the collection of donations and gifts for them. The public out pouring was incredible and the sheer amount of mail, donations, and gifts was almost shocking. As of now several million credits had been donated and were being held in trust for them. They had received packages that ranged from cooked goods to toiletries to art of all types. \n\nSince Ceolura was sitting next to her she leaned against her. \"We are getting so many gifts and such for the ladies that I had to hire several people to help with them. Some of the gifts have really amused me and especially the hash brownies from that commune in California.\" She had to giggle since the Sholan's hadn't known what to make of that. \"I was thinking maybe we could bring them over here and have a ladies afternoon soon. I like coming to the ship and visiting them but they need to get out and away from all the people keeping an eye on them.\" \n\nCeolura managed not to grin since that was perfect for one of her dilemmas. \"I am actually glad you brought that up. The ladies have approached me with a request. I told them I would consider it and talk to them tomorrow. For the request I have to deal with it on the Barque since it is Sholan territory. I would like you to come over and sit in and no I am not going to tell you what the question was. I am going to let you wonder.\" She gave Amanda a sly grin which got her glowered at. \n\n\"I might just slide a few of the hash brownies into your dessert woman and then wheedle it out of you.\" She would never do that but she hated surprises and Ceolura was being a bit to coy about this. \n\nIkarius had walked out to hear the last bit and groaned. \"Don't tell me you kept them. That is just so wrong for you to threaten the Ambassador of a foreign state with those things.\" He settled down on the other side of his wife and gave her a peck. \n\nShe snickered at his reaction and relaxed against him. \"I rather like sitting this way. I feel safe and comfortable in your arms Ike and love the warmth and softness of her fur.\" Amanda let out a small contented noise before the conversation continued. \n\n~~~ \n\nBack on Shola Billy and the others were definitely starting to settle in. Jenna and Sandi had been hired by Billy to be part of the Ambassadorial staff. Between letters and documents coming from Earth as well as from Sholan's he didn't have time to deal with them. A small courier service had started up as well and one of the first trips from Earth to Shola had delivered the beginnings of his staff. There were two lawyers, one for his business, and one for the Embassy. This also included several guards and some to fill other necessary positions. \n\nThey had also come with a nice line of credit for the purchase of a building as well as hiring of some Sholan's as staff as well. At the moment Billy was laying in bed grumbling about everything. \"Damn it I wish I had gotten forewarning of their arrival. I could have had even a few things ready for them and not had to dump them on the Accommodations guild as well as Alrel.\" The paperwork he had reviewed and signed for Sue Ann had finally been received and she had jumped in with both feet. \n\nTasha snickered at him as he grumbled. \"Don't you mean it would have given you time to run for the hills?\" She rolled over so she was on top of him and was sitting there straddling him. Her tail was flicking across his legs and she was smirking since she could feel his reaction to her. \"You silly man, keep forgetting that I know all the little thoughts in your mind. That is probably why they didn't tell you. Your ship is here and they had a feeling you might have run.\" \n\nAs she was talking she was lightly running her hands across his chest with her claws just a tiny bit out. She knew he loved the feel of that a great deal. It had been two link days since they had discovered she was pregnant and he had been extremely thorough in making sure she knew what that meant to him. \n\nBilly snickered at her as he ran his hands up and down her chest and abdomen. Her nipples were starting to swell as her pregnancy advanced which he found rather interesting. She let out a slight growl of enjoyment as he slid his hands further down. Though her abdomen was still flat he had to hold his hands over where the baby was growing. \"I still almost am scared to think you are pregnant. I fear I am going to wake up and find it was just a drug dream from the surgery. My leska and my mate.\" \n\nAs he was talking his hands slid lower and his thumbs parted her fur over her lower lips and lightly started caressing them. She leaned back to give him better access and started nibbling on her lower lip in enjoyment. As his thumbs were caressing her lower lips she couldn't help but lightly grind against his erection. *Don't stop Yilly, today is ours and ours alone. I get my lovely and smart leska all to myself.* \n\nBilly started moving his hips as well and finally was in position to slide into her. When he did he sat up and ran his hands up and down her back. With a growl of his own he grasped her scruff and when she postured he bit down and gloried as their minds started merging again. Much of the rest of the night was lost in the 'us' and not the individuals. \n\n~~~ \n\nSally was sitting in the living area at Vangie's house and relaxing with his former mate while Vangie and his daughter were out. She had subtly nudged Vangie to take her shopping, well not subtle; she had told him point blank to take her shopping. She wanted to talk to Holla about the male Signey was hunting down. \n\nShe sighed and took a sip of the c'shar mix Billy had come up with. He had gotten tired of having to mix the instant or real coffee with c'shar. After talking to Tasha she had the chemical makeup broken down and then ordered several pounds of the mix. \"Holla you can tell me to keep my nose out of your business and I will understand. I wanted to talk to you about the male that Signey is pursuing.\" She took a sip and waited for Holla to respond. \n\nHolla took a sip of the mix and then grimaced. \"I rather had that feeling when you pretty much kicked Vangie and Signey out of the house.\" She flicked Sally's cheek with a finger. \"Signey didn't notice since she figured you were doing it to ensure she was getting time with her father.\" She was actually pleased with Sally being there since it did give Signey someone else to talk to and spend time with. \"So what do you want to say or discuss?\" \n\nSally grunted in irritation. \"Taking after my father I am going to be blunt. I don't like him and I don't like the emotions he projects. Signey is just another notch in his belt. Before you say anything about using my abilities I don't even have to try. When Signey is near him he blatantly broadcasts satisfaction that she is going to be his. It isn't a pleasant satisfaction either. If it wasn't for the fact I can feel his emotions and only saw the exterior I would buy his crap for a while.\" \n\nHolla wrapped an arm around Sally and urged her to lean a bit more on her as she listened. \"Good, I don't like him either though I couldn't really say why. We have known his family for a while and they are good people. He did seem a good match for her first heat but the longer they spent together something just bothered me. I hadn't wanted to talk to Vangie about it since it could easily be a protective instinct. We will need to talk to Vangie later. I don't want him going off in a rage and doing something he would regret.\" She nibbled on a claw. \"Let me think about it for a day or two, any other comments?\" \n\nSally leaned into Holla and heaved a sigh. \"Thank you for listening. I was worried that you would feel I was sticking my nose where it didn't belong. I like Signey a great deal and she has been really great with showing me around and welcoming into her inner circle.\" She had to make a face. \"I am not all that much older than she is in years but we start becoming sexually aware and interested much younger. I have had a few people manage to work their way into my shorts before I realized that they were just trying to score. After feeling the pain of rejection and crying on Daddy's shoulder I can't let that happen to her. Vangie would go and rip vital parts off the boy.\" \n\nShe sighed and had to grin. \"If it wasn't for Crystal I would have to say that Kingie would be a good match for her. Now he would be someone Vangie couldn't complain about but I could never do that to Crystal. She needs the security he represents. So who do you like for her?\" The talked till the two came back and Vangie was looking grumpy. \n\nSally laughed at the bags he was carrying and stood and walked over and gave him a good hug. \"Is the poor widdle putty tat being put upon? Would some kitty nip tea help?\" She gave him an innocent look when she said that. \n\nHe growled at her and nipped at her nose in revenge. \"The grouchy kitty is going to get even later. I am going to tickle you till you can't breathe. I am going to let you help her put her new possessions away.\" \n\n~~~ \n\nKingie had told Crystal he needed some boy time and he was going to get a drink with Vangie that evening. \"I hope you don't mind Crystal but I need boy time as well. I am sure Amahs and India would be happy taking you out for the evening.\" He stroked her hair and gave her a hug. \"As usual there will be some boys there but relax and just be yourself. You are a lovely young woman and more than worth getting to know. They know that if any boys show you too much attention to distract them. Knowing Amahs she will simply kick their legs under the table.\" He grinned down at her. \n\nCrystal had to wrinkle her nose at him. \"I know Kingie and India is really good about ensuring they behave. Besides most of them are trying to get her attention and wouldn't do anything to annoy her.\" She leaned against him and rubbed her cheek against his tabard. \"I will be fine Kingie and between your family and the therapist I am doing better. Not perfect but better.\" She looked up at him and stroked his cheek. \"I honestly feel like I haven't just been accepted by your family but made a part of it. Now go, get ready, and remember no bringing home any stray females...\" \n\nKingie covered his eyes with a hand. \"I know Crystal, no strange women in my room... Oh wait, I have one of those strange human females in my room already...\" He leaned over and gave her a light kiss. \"And you have accepted us as well and allowed us to get to know you. Amahs told me that she thinks of you as another sister and is very pleased that you have accepted her. Now you go get ready and I will do your hair for you before I leave.\" \n\nIt wasn't much later before they were both ready to leave and Kingie had to admit that Crystal was looking lovely this evening. That was one thing he really wanted to talk to Vangie and Billy about. The two of them were meeting him at one of the Warrior's favorite watering holes. It would be good to be back amongst his brethren. \n\n~~~ \n\nWhen Kingie made it to the bar and walked in he had to pause for a moment. He drank in the conversation, camaraderie, and rough housing. It felt good to be there and out of the house. Maybe in a few months he could bring Crystal here and show her around. Many of the warriors had heard the story though not many knew what they looked like. While he was enjoying the ambiance of the place he was looking around and found his friends in a corner booth and headed over. \n\nWhen he got closer he realized that Billy and Satasha were there as well and for a moment he wanted to hide. Instead he squared his shoulders and walked over to the booth and slid in and nodded at all of them. \"So Vangie why did you call, you were sounding more than a bit irritated.\" Right about the time he was getting his courage together to call Vangie had beaten him to the punch. \n\nVangie growled and it was an angry growl. \"Sally came to me today about a certain boy who Signey has been seeing and starting to hunt down. It seems that he is playing her false and only plans on\", he frowned slightly, \"putting another notch on his belt. It took me a few minutes to figure that out.\" His fur was starting to stand up in anger. \"I want to have a discussion with him and feel it would be safer to have someone along.\" \n\nBoth Kingie's and Satasha's ears went down and back and both hissed as well. Billy's face hardened as well. \"Since I can't exactly fight right now I will offer to go along and hold your coat for you.\" He had two daughters himself and knew of the two times Sally had been hurt. \"I know exactly how you feel Vangie and I watched Sally have to deal with heartbreak for much the same. I will not allow that to happen again to anyone I know. I will offer to loan you my large wrench to break his legs with if you want.\" \n\nSatasha hissed as well. \"Let me have a discussion with this child and I can promise he won't come near Signey again.\" As she was talking she was flexing her claws and inspecting them. \n\nKingie's eyes had started to go feral and he had to take a slow deep breath. \"Vangie I will be honest, it won't be a good idea if I go with. After dealing with what the ladies had to deal with I don't think I could keep my anger under control.\" He knew much of that was his hormones speaking as well as his drive to father a cub on a female. \n\nSatasha looked at him and then moved over so she was sitting next to him and wrapped an arm around him. She could tell he was feeling conflicted though not why. She gave both of the other males a look before turning back to Kingie. When Satasha spoke her voice was gentle. \"What's going on Kingie? I can sense confusion and worry coming from you. You were feeling it before Vangie even spoke. Is Crystal okay?\" \n\nKingie leaned against Satasha and it helped him to gain some control of his emotions and sighed. Now his body was showing distress and he had to close his eyes. He didn't notice Billy and Vangie trading looks and settle back. \n\n\"Here son, have an ale and relax and talk about it.\" Vangie poured him a mug and urged it into Kingie's hands. \"We are your friends and please talk to us and let us know what has you so worked up.\" He was wondering if she was starting to show an interest in a friend of India's. \n\nKingie's hands tensed around the mug and then relaxed before he lifted it and took a healthy drink. His ears were down showing his distress and his tail was twitching spasmodically as well. When he spoke his voice was low and distressed. \"I, I, I think I am starting to fall in love with Crystal. Not as the little sister I told her I would treat her as but as a beautiful, vibrant, and special girl. I don't know what to do. I am scared to tell her in case she doesn't feel the same. We, my family and I, are vital to her continued recovery and it would kill me if I scared her away.\" He finally shut up and rested his elbows on the table and covered his face. \"I feel like a pathetic excuse for a warrior damn it.\" \n\nBilly leaned back and took a sip of his drink and debated on how to handle this. *Any suggestions Tasha? I know that he would rip his heart out before he did anything to hurt her. She does need to know that males do find her attractive, both sexually and for who she is, but how will this impact on her? I know I am human and so is she but I am no longer totally human.* \n\nTasha wrapped an arm around Kingie. \"Before anything else Kingie I assure you that all of us know better than that. We know that you would never do anything deliberately to hurt her. Even if these thick headed males hadn't noticed your feelings developing Sally and I have. There is nothing wrong with caring for and loving her. What you are going to have to do is figure out why you feel this way. Is it truly for her and what she is coming to mean to you or is it in sympathy? Neither is right or wrong but how you approach it is. I would suggest talking to her therapist first and then talking to her. Don't ever forget we are here to listen as well.\" \n\nBilly reached over and rested his good hand on one arm. \"Kingie speaking as a father you are a very good male and I know that you only want what is right for her. I don't blame you for coming to care for her. You have said it before, she is a little fighter and proves that time after time. She is blossoming the longer she is with your family. Between Amahs and India she is starting to come out of her shell and even going on some carefully planned outings with their friends.\" \n\nHe took a sip before he continued speaking. \"Speaking as the Ambassador\", he made a face, \"and as her guardian if the two of you wish to explore what is developing I don't have a problem. I can't think of a more worthy young man to care for her. It might not last for a great length of time as she keeps healing but I know that you would and will do right by her.\" ",
        "Vangie decided there had been enough seriousness and lightly elbowed Kingie in the side. \"So maybe I do need to drag you along. You can work out some of your emotions watching some pitiful schmuck lose control when threatened? From what I understand he is a paper pusher for the military, not a real warrior at all.\" Just for good measure he winked at him. \"Never know, you might get approval from Crystal for protecting another innocent young female.\" \n\nKingie was swallowing another drink when Vangie spoke and he started choking on the sip. He glared at Vangie and elbowed him back. \"You are a pain in the tail sometimes. Crystal might get the wrong idea if I go beating up boys that are hitting on your daughter. Besides I know Signey and she might come across as innocent but you haven't had to listen to her and Crystal talking. Innocent my tail, besides I have a good idea that she is leading the male in question on.\" He checked his claws as well just for good measure. \n\nHe sighed and leaned a bit more into Satasha. \"Thanks for listening. I was really worried about your reaction to my confusion.\" He gave Kingie and Billy an open look. \"Both of your approval matters to me because I have a great deal of respect for you.\" He looked at Satasha. \"Part of that is you refusal to hide what the two of you felt for each other.\" \n\nSatasha grinned at him. \"Awww, such a nice young male, can we keep him Yilly?\" Just for good measure she scratched under his chin to tease him. \n\nThat got a hiss from him and a snort from Billy. \"Tasha no poaching on family, that is just wrong.\" They started laughing and turned the conversation back to Vangie's issue. \n\n~~~ \n\nThey talked a while longer before Kingie left. He was still confused though he felt better since he hadn't gotten any disapproval from those he looked up to. By the time he arrived back at his parent's house it was late and the lights were out. Since he needed a few more minutes to clear his head he silently walked in and grabbed a drink before going back outside. He settled down in one of the seats out front and leaned back and took a sip. \n\nHe had been out there for a short time when he sensed a presence coming out from the house. He smiled slightly as he recognized the soft footsteps. \"Evening Crystal, sorry I am later than expected. How was your evening?\" When she came over he held his arms out to her and once she sat down urged her closer. \n\nCrystal settled down and curled up in his lap and rested her head on his shoulder. \"I understand Kingie. Yilly called so I wouldn't worry. It was a nice evening for the most part.\" She curled one arm around his neck. \"It is going to sound strange but though they are nice I have trouble connecting with them.\" She rubbed her face on his chest again. \"Their world is filled with the next upcoming band, new fashions, what celebrity is hot, and it is so shallow. I feel\", she waved a hand around as she tried to define what she was feeling, \"older even though I am their age. I know that most of that is because of what happened. My childhood was taken away and how do I explain that? I could try to tell them about what happened but what would that do for me or them?\" \n\nShe snitched his drink and took a sip before handing it back. \"To ruin their innocents would be wrong and wouldn't do anything for me. I might have problems and issues but that would be very wrong of me. I might not like the choices my mother has made but she did teach me right from wrong.\" Crystal looked up at him and stroked his cheek with her other hand. \"What is bothering you Kingie? You have been feeling sort of off balance for the last week or so.\" \n\nKingie looked down at her and met her eyes as he listened to her talking and mentally cringed. This was so not the conversation he wanted at the moment. \"That was nice of him for calling. I should have but I was distracted. I do understand what you are saying about having trouble connecting. I feel that now that I have been a warrior for several years.\" He leaned into her hand and closed his eyes and sighed. Her hand was warm and felt good as she stroked his cheek. When she snitched his drink he grinned at her. \n\n\"You are a good person Crystal and you are right that it wouldn't have done anything for you or them. They didn't do anything wrong or have anything to do with what happened to you.\" He took the drink back and tried to use it to pretend he had forgotten the question she had asked but it didn't work. \n\nCrystal tightened her fingers in the fur of his cheek and gave him a slight jiggle. \"You are avoiding the question Kingie. What is bothering you? I have been living with you and sleeping next to you for months. I know that something is bothering you now fess up.\" \n\nKingie sighed and opened his eyes and looked down at her. He lifted one hand to her cheek and cupped her cheek as well. \"Yes I have been troubled by something but I didn't want to bother you.\" How much to tell her. He didn't want to lie to her since if he did when she found out it would cause a great deal of harm. Then again it might help her confidence that she was still attractive and worth caring for. He sighed and leaned back again. \"Before I say anything please just listen okay?\" \n\nCrystal looked up at him and evaluated his expression and gave him a nod. \"Kingie I know that you would never do anything to hurt me. Not intentionally that is. Just tell me and we will go from there.\" She started stroking his cheek again. \n\nHe sighed and leaned into her touch and closed his eyes again. \"Please don't be concerned that I would do anything you didn't want but... I am starting to care for you as something other than as a sister. I have never met someone who has suffered so much yet is fighting so hard. You might be an unofficial mascot for the warriors that helped rescue you but you have come to mean a great deal to me.\" \n\nCrystal was looking up at him as he spoke and could tell that he truly didn't want to talk about it. Her hand kept stroking his cheek before sitting up more on his lap and pressed both hands to his face. \"Thank you Kingie, thank you for being honest with me. You have no idea how much hearing you say that means to me.\" Her hands were trembling slightly as she leaned forward and gave him a gentle kiss. \"I don't know what or where this will end up going but I have loved you almost from the beginning. At first it was simply an anchor to cling to.\" She kept stroking his face. \n\n\"I can't really say why I fixated on you when I did but I guess I saw something that first day. As you cared for me and let me cling to you it slowly changed. You comforted me, didn't find me repulsive for what happened and was always gentle with me. By the time we arrived here I knew that I was falling for you. I didn't say anything since I was scared of your reaction. I was also scared that I was falling for you simply because you helped save me.\" \n\nShe took his drink and took another sip before putting it down on the table next to the chair. She started stroking his cheek again. \"I know I gave the therapist and medical authorization to talk to you but there were a few things I asked them to hold back from you. I needed to talk to them without involving you. You didn't need to deal with my confusion about what I was feeling and why. It has taken a good amount of therapy and help from the medical telepath. I think that we finally got me to the point where I think I have a handle on my feelings about you. I do love you Kingie and not just because you were there for me. That might have started it but it has grown into something different.\" Crystal gave him another gentle kiss. \n\nHis eyes had been still closed when she shifted and kissed him and they popped open and stared at her. For half a moment he almost panicked till she started talking. The more he listened to what she said the more he relaxed till she mentioned she had requested the therapist hold some information back. \"Stinker, I thought certain issues had been touched on rather lightly.\" He growled slightly at her and then sighed. \"I hate to admit it but I did much the same. I could feel myself starting to fall for you and I was scared that I might do something to set your treatment back.\" He leaned into the second kiss lightly. \n\nWhen he told her he had done much the same she punched him. \"And you are calling me names, you rat.\" She started giggling though before relaxing back into his arms and became more serious. \"I love sleeping next to you and being in your arms but I don't know when we might do something more.\" \n\nKingie leaned forward and lightly kissed her again. \"We will figure this out with the help of our therapists. I do think you are a very beautiful young woman Crystal. I told you that you would find someone who would be able to look past what happened to you. That he would see the real you, now I don't know about you but I am tired and going to bed.\" Just to be silly he stood up with her in his arms. \n\nThat was something she hadn't been expecting and shrieked before clapping a hand over her mouth. \"You are a brute and trying to wake your house up.\" She wrapped her arms around his neck and leaned against his chest. \n\nWhen he walked into the house they found Amahs leaning against the door to her room. Her ears were pricked forward and her tail lightly swishing. \"I was wondering who was screaming. Seems you two are having fun. I think I will just go back to bed.\" She turned and walked back into her room and her tail was showing definite amusement. \n\nKingie growled at her for her teasing but chose to ignore her. \"I am so going to get her in the morning.\" Once inside he settled Crystal on the bed as he stripped his tabard off and stretched and yawned. \"This is one tired kitty.\" He rolled into bed and curled around her and licked one ear and was quickly asleep. \n\n~~~ \n\nThe ship was slowly approaching the boundary of the system it was getting ready to scan. The scan was cut short when they detected a hyper signature as a ship jumped from n-space to h-space. They immediately went to silent running and cut the power back to the absolute minimum. All the data from the scan was processed and came back as boarder line identifiable. It had similarities to the drive signature from when they encountered the enemy fighter. \n\n\"Captain, I finally have the results, or as best possible. The jump was far enough away that some of the data is questionable. Back at the base ship we can use the mainframe for far more sophisticated results.\" The tech scrolled through the notes. \"We are also picking up some very faint traces of high tech energy sources. They appear to be in the asteroid belt but from here we can't refine the data any more. Orders sir?\" \n\nThe Captain tapped his claws against the arm of his chair as he considered his options. His orders were to find the enemy or others. That they had done though it had been completely by accident. \"We don't know the type or range of their sensors but based on the data we have we are going to assume they are somewhat shorter than ours. Total emcom keep our n-space speed down to .2c till we start picking up any sort of scans. At that point kill all forward speed and notify me. You have the bridge.\" \n\nThe male walked to his cabin and after a shot of spirits he rolled into bed and was quickly asleep. The watch would wake him when it was time. \n\n~~~ \n\nThe scout ship pulled out of the system two days later after a good sensor sweep. This obviously wasn't a main outpost but they had detected a number of signatures of potential light combat craft. Once they had drifted far enough out of the system they had slipped into hyper space and headed back towards their command ship. \n\nThe entire time they were heading back he had the tech doing everything he could to tear the data apart. When they arrived back at the command ship he wanted all the data possible. \"How much time till we arrive?\" \n\nThe male at navigation glanced at his monitor before answering. \"At the current speed approximately a week and three days to the edge of the system. The message can be broadcast from there.\" \n\n\"If you can shave time off go for it but safely. They need the information and it is our duty to get it to the General.\" The small crew nodded and turned back to their jobs. This was going to get all of them a commendation and hopefully some time with the drones. \n\n~~~ \n\nWhen the scout ship arrived at the system they immediately transmitted the information they had gathered. By the time they arrived at the carrier it looked like someone had kicked a ratha burrow. Males were scattering everywhere, preparing ships, loading ammo, double checking everything. They knew the General had been selected specifically by the Emperor for this mission. If he succeeded then they would as well and it would advance their position in the Empire and their families. \n\nThe next morning all was prepared and ready for the mission. All ships except the courier were being tasked with the mission. The last thing the General wanted was for any ships to escape and alert wherever they had come from. The plans were detailed but allowed flexibility. Based on the sensor readings the majority of the ships were light combatants with either supply ships or light carriers in support. \n\n\"General on the bridge.\" The current OIC called and stood up from the command chair so the General could sit down. He took up his position next to the General. \"All ships are showing ready and waiting on your orders General.\" \n\nThe General settled in the chair and activated the comm.. \"All ships engage. As instructed we will pause outside the hyper limit to assemble and then proceed to the attack. Keep me informed of all potential problems. If not reported the priests will be asking questions.\" The ships activated their N-space engines and headed towards the system edge before activating their H-drives. \n\n~~~ \n\nWhen Billy woke up the next morning he was grinning and had a very evil glint in his eyes. \"Oh my, I figured out a way to help Vangie and make both a subtle point as well as a blatant point.\" Since he was lying on his back he started cackling and doing what could best be described as a warped happy dance. \n\nSatasha had seen it before and covered her eyes. \"I am not going to ask you overgrown child. That hyper active brain of yours can work up some truly evil solutions to your problems.\" She rolled out of bed and jerked on a tabard as she was walking out to the lounge. \n\nHe could hear her muttering at Dani and Z'Marl. \"Dani you might want to hide. Your father has lost it and I am getting ready to call the medics to give him a happy shot.\" He could feel her concerned amusement since she was thinking of the three students he had punished. \n\nDani stared at her and hurried over to the entrance to the bedroom and looked at her father in horror. \"Oh god Z'Marl we might want to find somewhere else to sleep for a few days. I know that tone of insane gibbering and it bodes ill for someone.\" \n\nBilly snickered at her tone as he sat up. His eyes fell on the small wooden boxes that the three of them had been ignoring. With a sigh he finally picked the one up with his name on it and opened it. Inside was a dark blue velvet which was cradling a necklace. The dangle on the necklace was made up of three sterling silver strips that cradled a sparkling blue-white crystal. The silver was twisted in a spiral and where the crystal was supported the silver was indented to cradle it. When turned the right way the crystal seemed to have a blue fire in the center. \n\n\"Ladies would you come here please?\" Billy had pulled the necklace out and was holding it in his hand. When they came in he showed them the necklace and handed the box with their name over to them. \"I am going to study the data crystal in the box but I am beginning to feel there is something connecting us together. If you wish to read it as well I will copy it to the comm. for your review.\" \n\n~~~ \n\nWhen Crystal woke the next morning Kingie had already left though he did leave a note. It was informing her that he had headed to the consulate for his daily routine. She had expected as much but it was a nice touch. Shortly after she woke and read the note Amahs came in after knocking. She was looking rather nervous. \"Crystal can I please talk to you?\" She looked at her and the distress was obvious. \"I had been paying very close attention to what has and hasn't been said and I am upset and confused.\" \n\nCrystal sat up and gave her a questioning look before holding her arms open to see if Amahs wanted a hug. \"Come here Amahs and I will tell you what I can. Some I will not tell you and if I say that you will respect my boundaries.\" When Amahs came over Crystal settled her in her lap and gave her a good hug. \"Simply ask me about what is bothering you. I think I have a pretty good idea but before I speak I want to know your questions.\" \n\nAmahs leaned into the hug and curled her tail around so it was on her lap and held it. \"What happened to you Crystal? How did you get the scars? I understand there are going to be some things you don't want to talk about.\" She made a slight face. \"It will probably drive me nuts wanting to know but I will do my best not to push.\" \n\nCrystal stroked her back as she organized her thoughts. \"A ship I was on was captured by pirates. To the best of my knowledge only six of us survived and were kept alive on the pirate's ship. I don't really know how long we were held on board but they had fun abusing us mentally and physically. I am not going to discuss that at all.\" She gave Amahs a hard look when she said that. \"Anyways the pirates detected another ship and attempted to board.\" \n\nShe couldn't help but grin. \"That was a huge mistake since it was Yilly's ship with a compliment of warriors including Kingie and Vangie. They took names and kicked ass. Billy was there as well and discovered one of his nieces was aboard ship as well. Long story short somewhere in my mind something told me that Kingie was safe and would protect me.\" She blushed and looked away for a moment. \"I latched onto him and held on for dear life. He knows everything that happened to me and didn't even blink. He held me, comforted me, and encouraged me to get past what was done.\" Crystal smiled at Amahs. \"Because of that and more I love your brother deeply.\" \n\n~~~ \n\nHe slowly came awake and looked up at the ceiling and sighed. This must be hell then since waking up to another cell was not his idea of heaven. Right about then the heavy metal door clanged open. \"Get up dog and follow me.\" \n\nHe sat up and looked at who was talking and it was the guard who had told him he would see him in hell. As he was staring his hands went to his neck and found a rope around it. When he looked it was the noose they had used earlier. \"What? Why am I alive? Am I alive?\" \n\nThe guard gave him a coarse laugh. \"Dog you are dead and your death certificate says so. You were declared dead yesterday upon your execution. Since you are dead nobody is going to come looking for scum like you.\" He gave him an evil smile before screaming at him. \"I gave you a fucking order dog. If you don't obey each and every order you will suffer pain. The more you fight the more pain you will feel. Since this is a new concept for you I will go nicely for the next thirty seconds.\""
    ],
    "authorname": "maxd01",
    "tags": [
        "alien felines",
        "pregnancy",
        "mental link",
        "space travel",
        "space battles"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/sholan-alliance-au-bk-03-ch-01"
}