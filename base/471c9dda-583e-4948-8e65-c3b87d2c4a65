{
    "title": "Once is an Accident",
    "pages": [
        "NOTE: This story contains elements of cheating and unprotected sex. Don't do these things in real life, folks.\n\nThis is a stab at one of my favorite genres, accidental penetrations, so apologies if it's a little less \"realistic.\"\n\n###\n\nThe text popped up on my screen: \"Are you ready for me? I hope you're saving up all your cum for when I see you tomorrow.\"\n\nLysa attached a video. It was taken last summer, right before we were going to be apart for months. The video started on her face, scrunched up in pleasure, then scanned down her chest, her breasts bouncing in rhythm, nipples beautifully hard. The video kept going further down, over her toned abs, to the fuzzy dusting of blonde hair on her pussy. Further down, and I could see her flowery pussy lips opening, welcoming my cock over and over with a wet sound.\n\nBehind the camera, I could hear myself say in a low, gruff voice, \"Fuck, Lysa, I'm about to cum.\"\n\n\"Cum inside me,\" Lysa moaned on the video. \"Cum in me, fill up my pussy...\"\n\nOn the video my cock drove deep into her, as far as it could go, then throbbed, emptying cum into her pussy. Lysa moaned off-camera. In the light of the flash, I pulled my cock from her grasping pussy, letting the cum spill out of her. As the camera tilted up, angling the shot to include not only the cum dripping from her pussy but also her heaving breasts and her face, blonde hair and eyes gazing down at me, I paused the video.\n\n\"Come on,\" I typed back. \"That's not fair. You're making it very hard to stick to our agreement.\"\n\nI'm ashamed to admit that quitting masturbation for three weeks was a harder task than I'd expected, but my girlfriend was going to be out of town for that whole time, and I'd agreed to save it for her. Lysa loved cum more than anything, and I was happy to oblige her, knowing the pent up passion would make my first time back inside her extra good.\n\nOur junior year of college ended three weeks ago, so our whole friend group had gone down to my friend Henry's family's place in the Catskills for a vacation before starting our summer jobs. Lysa had to visit family, so she was only coming for the last chunk of the trip.\n\n\"Only 16 more hours,\" Lysa texted back. \"I get in late tonight.\"\n\n\"Wake me up when you do,\" I texted with a flirty emoji.\n\n\"I've got a few ideas of how.\" She attached another picture, this one of her with two fingers buried inside her wet pussy.\n\n\"I'm blocking you,\" I joked. \"Too much teasing, and it's only 9 A.M.\"\n\nFrom the door of my room, I heard a knock.\n\n\"One second,\" I called out, before texting Lysa: \"Have to go, big day of hiking ahead.\" I put my phone down next to me, then yelled to the door: \"Come in!\"\n\nTess stepped through the door, looking alert and chipper in athletic clothing. She took in the room, frowning.\n\n\"We've been here one night and it looks like a tornado hit your room.\"\n\nMy best friend from childhood, Tess grew up two streets away from me. We were even each other's first kiss when we were 12. But that was all long ago. Both of us had chosen the same college, several states away from our hometown, and remained good friends. I can't say people didn't ask about me and Tess, though. She was undeniably beautiful: big blue eyes below dark eyebrows, high cheekbones and angular features, chestnut-brown hair tied in a tight braid. And yes, I had spent my teenage years observing the changes in her body, watching as she grew into a stunning, willowy woman with a shapely ass and breasts that were on the smaller side but perfectly fit her short frame. I knew she was beautiful, but our relationship was never really romantic (not counting the first kiss), which suited us perfectly. We worked too well as friends to risk anything. Besides, she had been the one to introduce me to Lysa, and Tess was dating Henry.\n\n\"You know how I feel about putting clothes in drawers while on vacation. Besides, you don't have to share my room,\" I said. I stealthily tucked my semi-hard cock into my waistband and stood, brushing past her to pick up one of the shirts from the ground. Sniffing it, I put it on.\n\n\"You're horrible,\" Tess said with a laugh. \"Anyway, I was just coming to rouse you for breakfast. Everyone else is done eating, but what else is new?\"\n\n\"Should I pack a hat? It's supposed to get up to the 90s, right?\"\n\n\"I don't know. Henry and Greg were saying there's a chance of rain. Can I check the weather on your phone?\"\n\n\"Go for it.\"\n\nTess picked up my phone, then let out a yelp and dropped it. She blushed furiously \"Holy crap, whoops! Sorry!\"\n\n\"What?\" I crossed to the bed and picked up my phone. Lysa had texted one last picture, this one a closeup of us having sex. The caption read: \"Don't tire yourself out too much.\" Tess had picked up my phone only to get an eyeful of my hard cock, wet and veiny, stretching out her friend's pussy.\n\n\"Sorry, I didn't realize that would be up on my phone,\" I said, embarrassed. \"Lysa's been... sending me stuff in preparation for her getting in tonight.\"\n\n\"Oh, yeah, no, I get it.\" Tess blushed even deeper, then paused. \"I -- I only looked for a second, so I barely saw anything.\"\n\n\"No, of course.\" It was more flustered than I'd seen her in a long time. Neither of us knew what to say.\n\n\"I'll just check the weather on my own phone,\" Tess said, and left.\n\nTess came from a religious family, so her reaction wasn't unexpected. When you're raised by parents who don't even mention the existence of sex to you, it can be tough to bounce back. I'd been the one to explain sex to her, one day when we were teenagers, coming back from school. Even so, by now I figured she'd gotten over the embarrassment and shame surrounding sex, considering she was dating Henry, but she was still fairly innocent. Then again, she had just been surprised with a closeup picture of her two friends having sex, so who wouldn't be embarrassed?\n\nI'm sure that was it, I thought as I got dressed for the hike. Regular embarrassment.\n\n###\n\nDespite my late start, a few cups of black coffee jolted me into alertness for the hike. Our other friends, Marina, Bo, and Sarah, were experienced hikers who were glad to drag us along at their fast pace, up trails with pine needles that covered treacherous rocks and roots. I spent most of the hike watching where I put my foot, expecting to twist an ankle any second. When I did hike without my eyes glued to the ground, I found them drawn up perfect, strong, slender legs to Tess's ass in her tight athletic shorts. She was walking ahead of me, holding hands with Henry.\n\nI shook my head. Clearly, a mixture of Lysa's teasing and the sexual frustration of the last few weeks had turned me into a dog, slobbering over anything with the slightest female form.\n\nWe stopped for water at a clearing that looked out over the miles of trees below us. As I drank from my water bottle, Henry pulled me aside.\n\n\"Can I ask you something, man? It's about Tess.\"\n\n\"What's up?\" I thought maybe Tess had told him about the picture she'd seen of Lysa and me and prepared to apologize.\n\n\"Tess and I have been dating for like four months now, and...\" he paused, a little awkward. \"I know this is weird, since you guys have been friends forever, but I'm just gonna say it: I kinda thought we'd be doing more, sexually, by now. All we've done is dry humping, nothing below the clothes.\"\n\nHearing that was surprising, but not completely unexpected. So Tess was still a virgin. I don't know how that made me feel. Part of me was bummed for my friends that they were missing out on all the great things sex had to offer, but another part of me, one I didn't realize was there, felt a flash of... something. Not surprise, but maybe lust. I tried not to show emotion on my face as he went on:\n\n\"She's said she's waiting for marriage to actually have sex, which I totally understand, but do you think she'd want to do anything more than just makeout and dry hump? Not even just for me. I'd love to make her... finish, you know.\"\n\n\"I haven't talked with her about it,\" I said truthfully. \"It's not the sort of thing we discuss.\"\n\n\"Do you know if she's ever gone further than that with her previous boyfriends?\"\n\n\"What previous boyfriends?\" Tess had never dated anyone seriously before Henry. Heck, the only reason I knew she was straight in high school was that she'd talk about having crushes on boys, but when I'd tell her to do something, she'd refuse. \"If I were you, dude, I'd just let her lead the way. She does what she wants, but not before she's ready.\"\n\nOn the way back down the mountain I watched Tess with more curiosity. It certainly explained her reaction to the picture -- she was totally inexperienced, so maybe it was more disgust at what she had seen. I felt bad for just leaving my phone open. I knew her well enough to know her reaction wouldn't be one of judgment, but it had to make her uncomfortable. I resolved to apologize when I got the chance.\n\nBy the end of the hike we were all dripping with sweat. As Tess pulled her shirt up to mop off her flushed face, I could make out the tender curve of her breasts beneath her sports bra, and, I noted with another pang somewhere in my stomach, surprisingly hard nipples. When she lowered the shirt she was looking right at me. I looked away, too late.\n\nDamn, I thought, cursing the fact that Lysa wouldn't return for another eight or nine hours. I just needed to stop myself from getting horny for long enough not to do something stupid.\n\n###\n\n\"Well, I'm gonna head to bed,\" Henry said, getting up. It was late at night and we'd put on a movie after the night of drinking had wound down. Just about everybody had drifted off from the movie and gone to sleep, save for me, Henry, and Tess, who'd seen it through to the end. We were all tired, dressed for bed.\n\n\"I'll be right there,\" Tess said, as Henry wandered off groggily. Then she turned to me, a small smile on her lips. \"T minus two hours until Lysa gets here. Are you excited?\"\n\n\"Of course. I miss her a lot.\"\n\n\"I mean, are you... excited?\" Tess said, gesturing down at my crotch.\n\n\"Ha ha ha,\" I said sarcastically.\n\nTess sat in a comfortable recliner across from me, her legs crossed under her. Without realizing, my eyes drifted down her pajama-clad form and I saw with a start that she wasn't wearing panties under her loose pajama shorts. I could make out a dark bush and the tight cleft at the top of what seemed to be her beautiful innie pussy. Of course she wasn't shaven, I thought, my cock beginning to thicken. She'd never even had sex.\n\n\"I guess she hasn't been too far away, what with all those pictures,\" Tess said.\n\nShe shifted on the chair. I got an even better view of her bush, and through it her neat pussy lips.\n\n\"Yeah. I'm sorry about that. You didn't have to see that.\" I tore my eyes away from the faint glimpse of her pussy.\n\n\"No, I liked it,\" Tess said. \"The wifi's terrible out here, so my porn has been taking forever to load. Easier to just get it of the two of you.\"\n\n\"There's plenty more where that came from,\" I joked.\n\n\"Is there?\"\n\nI looked at her, trying to decide whether she was bluffing. We'd both had a lot to drink, but the several hours of the movie had sobered us up. She didn't usually speak this brazenly.\n\n\"Yeah. Videos, too.\"\n\nTess's face was now as pink as mine. Was she not joking around?\n\n\"Can I see?\"\n\n\"Should I airdrop them, or just email?\"\n\nTess stood up and moved across the room to me. My heart started to beat fast. I couldn't stand up, because I was rock hard.\n\n\"Show me.\"\n\nTrying not to let my hands shake, I opened my phone. I pulled up the picture she'd seen, the closeup on Lysa's pussy with my bare cock drilling into it.\n\n\"Really?\" I asked.\n\nTess nodded. She leaned down, and I caught the soft curve of her small breast down her sleep shirt. I hesitated, then thought, Fuck it. I turned the phone to her. She drank in the picture onscreen with her eyes.\n\n\"I've already seen this one,\" she whispered, sending a shiver up my spine. This was bad. I was too horny. I should lock my phone and get out of here. I swiped to the next one -- the video of me and Lysa, paused with the cum trickling out of her pussy, her tits and face in the shot.\n\n\"Where are you?\"\n\nI rewound the video. The only sound in the room was the slick squishing sound of me entering Lysa, then her moaning. Tess's mouth was half-open as she watched.\n\n\"Fuck, Lysa, I'm about to cum.\" At that, I quickly paused the video, returning to my senses. This was too much. Too personal. Lysa wouldn't want me showing intimate videos of us to one of our best friends. And did I really want Tess to see my dick? I was more drunk than I thought. And so was she, if she allowed it.\n\n\"Sorry,\" I mumbled. \"I shouldn't show you that.\"\n\n\"No, it's okay,\" Tess muttered. \"It's hot. I have a thing for small dicks.\"\n\nI looked up at her. She was grinning. We both burst into laughter.\n\n\"Oh, you motherfucker,\" I said, leaping up to grab her. She shrieked and tried to make an escape, but I grabbed her and tackled her, tickling her, onto the couch. We were both laughing. Only when I paused for breath did I realize what a bad idea that had been. I was still completely hard, and was only wearing my boxers.\n\nFrom beneath me, Tess tickled me back, and I grabbed her arms, trying to keep her from tickling me.\n\nThe rest of it happened fast. I was on top of her, hard, and somewhere in the maneuvering my cock must have slipped out of the hole in my boxers. I knew that reaching down to fix the situation would immediately make it clear to her what had happened, so I tried to keep her pinned, unable to look down. That was my undoing -- Tess spread her legs, trying to get them around me for some purchase.\n\nAll of a sudden, as she did, I felt my cock press up through the leg of her baggy shorts, against her hairy mound. She gasped in surprise, moving her lower body back, but all that did was make my cock slip down, nestling into the hot wetness between her lips. It happened so fast I didn't even think about the fact that she was dripping wet.\n\n\"Is that your --\" Tess started to ask, trying to reposition herself.\n\nThen I felt her pussy open and I slipped inside her. We both froze. I looked down. Her hairy pussy lips were stretched around my cock. I didn't have time to think about how amazing her pussy looked -- how long I'd wondered what it would look like, what she'd feel like. Though I was only a few inches into her, it was almost too much for me.\n\n\"You're... inside me.\" Her voice quavered.\n\nIt happened in such slow motion that the freeze-frame image of Tess below me, looking down in open-mouth surprise at her shorts pulled to the side, her wet pussy clenching my bare cock, is burned into my mind, though the moment only lasted a second or two.\n\n\"I'm sorry,\" I said. \"I didn't mean to...\"\n\n\"No, I wasn't wearing panties, it's my...\" She trailed off, her breath ragged.\n\nThe moment was dreamlike. Neither of us were moving to pull apart. My cock throbbed inside her and she gasped. I felt her pussy clench. She was getting wetter, somehow. Involuntarily, I pushed an inch further into her, my cock moving on its own to bury itself as deep into her scalding hot pussy as it could.\n\n\"Wait,\" she said, her voice soft and strained. \"Don't --\" Then she was cut off by a gasp. Her body shuddered and her legs, which were still around me, pushed me deeper into her. I bottomed out in her unbelievably tight pussy. Tess was small, but she could take my whole length buried snugly inside her. She was coming, hard, trying to stifle her own moans as her pussy clenched around me.\n\n\"Fuuuuuuuck, I'm commmingggggg...\" Tess whimpered.\n\nHer body jerked, and she wrapped her arms around me, pushing our bodies fully together. Her pussy was too tight. I wasn't going to last, especially since it had been three weeks with no sex or masturbation. I was bare inside of her, and if she didn't even trim her pussy, what were the chances she used birth control? I couldn't cum in her. With the last ounce of my willpower, I tried to pull out.\n\n\"Tess, I'm gonna --\"\n\nI only made it halfway. Tess, who was still shuddering in orgasm, firmly pulled me back into her. That feeling of sliding the rest of my length back into her tight, tiny pussy was the end of it. I felt my cock swelling up, before I came hard, deep inside her.\n\nAs my cock jerked, shooting cum against the back walls of her pussy, her eyes snapped open. She could feel my warmth splashing into her. \"No, no, I'm not -- oooohhhhhh --\" She writhed in orgasm again, while I emptied three weeks' worth of cum into her. Any thought of trying to pull out was forgotten. All I wanted to do was bury into her and fill her up. I came and came. Each jerk of my cock within her drew another small \"Ooh\" from her. Her pussy squeezed me tighter than any I'd experienced.\n\n\"Oh my goddd....\" she moaned softly. I slumped down on top of her, breathing heavily into her neck. We stayed like that for a while, until the last jerks of my cock and the last of her small shudders subsided, indicating that we'd ridden out our climaxes.\n\nI lifted my head to look down at her. She was beautiful -- blue eyes wide, cheeks flushed, her hair a mess on her sweaty forehead. Through her white sleep shirt, I could see the outlines of her areolae and the tiny tents of her nipples. We looked at each other for a long moment, faces close together, then she shook her head in wonder.\n\n\"I can't believe that just happened.\" Tess looked down at the place where my cock was still buried inside her. Her pussy was overflowing with my white cum, dripping out around my cock. \"You came inside me,\" she said, quietly.\n\n\"I'm so sorry,\" I said, \"I didn't mean to --\"\n\n\"No, I stopped you from pulling out. I... I've never cum that hard in my life. It's my fault. It was so good... I didn't want it to end.\"\n\n\"Me neither,\" I said, and she let out a small laugh. As she did, her pussy squeezed me, milking another drop of cum from me.\n\nI breathed out and lifted myself up, pulling my cock out of Tess with a soft squishing noise. Even after such a hard pounding, her pussy lips were tight and perfect. My cum trickled out from between them, and she reached down to catch it on her fingers. \"Wow.\"\n\n\"I'm sorry.\"\n\n\"Do you always... cum this much? How does Lysa take it all?\"\n\nMy insides twisted at the mention of Lysa. \"Oh, god --\"\n\n\"Don't feel bad. It was an accident.\" Tess was still on her back, legs spread, looking up at me, not making any effort to cover her small, hairy, freshly fucked pussy. It was a beautiful sight.\n\n\"Yeah,\" I said. \"An accident.\"\n\n\"No need to explain to either Lysa or Henry why you took your best girl friend's virginity and pumped her pussy full of cum, especially when it wasn't on purpose.\"\n\n\"Jesus, Tess.\" In the rush of sensations, I'd forgotten. \"I just took your virginity.\"\n\nShe finally stood, barely coming up to my collarbone. I couldn't read her expression. Then she pulled off her shirt, revealing beautifully round, petite breasts that sat high on her chest, with dark nipples that looked big on her small tits. She then slid down her shorts, exposing her pussy in all its glory. A line of my cum ran out of her and down her legs.\n\n\"I'm going to need to shower.\" She looked so serious. I couldn't tell if she was angry, confused, sad -- I was horrified to think I'd just ruined one of my longest friendships.\n\n\"Tess, I --\"\n\n\"Come join me.\"\n\nShe took a step toward me, then threw her arms around me. I hugged her back. I could feel my cock, which in my dazed state I hadn't tucked back into my boxers, pressing into her pubic mound. I was still wet with our combined juices. Tess looked up at me. Tentatively, as if we hadn't just fucked, I leaned in to kiss her. Our lips met in a spark of passion, our tongues probing hungrily for each other. Finally we broke apart.",
        "\"That was the best way to lose my virginity I could have ever asked for.\"\n\nTess took my hand and led me to the bathroom, then locked the door behind us.\n\n\"Never know when Henry'll be back.\"\n\nTess turned on the shower. Undressing myself, I watched her outline in the mirror, her incredible ass, tight and perfect for her frame, with the barest hint of her dark, bushy lips between her legs. She splashed water onto her breasts, testing the warmth, then shivered.\n\n\"This place takes forever for the hot water to turn on,\" Tess said. I was naked, half-hard, staring at her. \"What?\"\n\n\"Just trying to figure out where we go from here.\"\n\n\"Don't ruin it by thinking too much. We'll always love each other. One accident won't change that. Besides, there's something poetic about losing your virginity to the same person you had your first kiss with. Someone you can really trust.\"\n\nAs she spoke, she stood close to me in the small bathroom. It was surreal having this conversation with my childhood best friend -- both of us naked, having just fucked, my cum still dripping out of her pussy, my cock still wet from being inside her. I began to get hard again, despite myself.\n\n\"Wow,\" she said, looking down at my cock. \"Already? You're insatiable.\"\n\n\"I've just spent a while wondering what you look like naked. And here you are. But I'm sorry, I don't mean to make it weird -- \"\n\nTess put her hand on my cock -- the first time she'd done so. It jumped. \"Why do you think I wanted to shower with you?\"\n\nShe got down on her knees, looking up at me with big eyes and her small mouth half-open. Slowly, she reached out her tongue to lick my tip. A strand of my cum trailed from her tongue.\n\n\"Tess --\"\n\n\"I've never given a blowjob, either,\" she said thoughtfully, working her hands down my shaft, which was now fully erect. She circled the tip with her tongue.\"I assumed it would happen before I had sex. And I definitely didn't think I'd be licking my own cum off a cock that had just finished inside me.\" At this, she parted her lips and enveloped my cock in the warm wetness of her mouth. She bobbed up and down on my shaft several times, cleaning her pussy juices off me with her tongue. Then she pulled back, looking up at me while she continued to jerk my cock.\n\n\"Can't tell if that's you or me, but wow, we really taste good together.\"\n\nBefore I could answer, she closed her lips around me again, slowly finding a rhythm as she sucked me. I stroked her hair, looking down at the beautiful sight before me, Tess with her hair a mess, going to town on my cock, her dark nipples jutting out proudly from her chest. Her mouth felt almost as incredible as her pussy, and soon I felt myself swelling in anticipation. She clearly felt it too, because she took me out of her mouth and asked:\n\n\"Would you rather cum in my mouth or in my pussy?\"\n\nIt was strange hearing Tess, innocent sweet nerdy Tess, talk like this.\n\n\"I didn't realize how much you liked talking dirty.\"\n\n\"You know me,\" she said. \"I'm a detail-oriented person.\" She again buried my cock in her mouth, displaying surprising skill for her first time. She looked up at me, then repeated her question around my shaft: \"So? In my mouth or in my pussy?\"\n\n\"I want to do both really badly. But you know me, always indecisive. And it's hard to think with your mouth on me.\"\n\nTess stood. Around us, the bathroom had begun to steam up.\n\n\"Think the water's hot enough now?\" she asked.\n\nTess grinned, then pulled me into the shower with her. Our bodies intertwined under the water. I grabbed her and kissed her hungrily, working my hands down her breasts, to her side, to her tight ass, pulling her close to me and pressing my cock into her leg. She lifted her leg onto the side of the bathtub, spreading herself to me. I got down on my knees and pressed my lips to her womanhood. She groaned in pleasure, but turned my head to make me look up at her.\n\n\"You don't have to. I know I'm not shaved.\"\n\n\"I don't care about that. Besides, Lysa isn't either.\"\n\n\"Yeah,\" Tess said, inhaling as I planted a kiss on her nether lips. \"I've seen the evidence.\"\n\n\"I really, really want to eat your pussy.\" I sank my tongue into her folds, working my way up to her clit and then back down, starting slowly. I slid a finger into her, pumping slowly in and out as I sucked and licked at her clit. I've always loved the taste of pussy, and Tess's was no exception. As I finger-fucked her, I switched the up and down motion with my tongue to a circular motion, right on her clit.\n\n\"Oh, god, please, keep going like that,\" she whimpered. \"You're gonna make me come again.\"\n\nI kept up what I was doing, furiously tonguing her clit and driving my finger in and out of her. Her breath got heavier and she pushed her pussy towards me, grinding hard into my mouth. I savored the taste of her tangy opening as she neared orgasm. Finally, with a great heaving sigh and a jerk of her body, she came. While her other orgasms had been hard and all-consuming but relatively short, this one went on for longer, crashing like a slow wave. I held my mouth to her pussy, continuing what I was doing, until she was done thrashing. She pulled me up and kissed me passionately, tasting her pussy on my lips.\n\nBelow us, my cock nuzzled at her hairy opening. She reached down held me there, then broke away from the kiss and looked up at me. Water cascaded down her breasts, dripping off her hard nipples.\n\n\"It seems like your dick's made the choice for you. In my pussy it is.\"\n\n\"Tess. Once is an accident, twice is a choice,\" I said.\n\n\"Just for tonight, okay? I need you in me.\"\n\nI nodded. Slowly, I began to push in through her slick pussy lips. When I had filled her tight, clutching sheath again, a thought occurred to me and I looked up at her.\n\n\"You're not on birth control, are you?\" She shook her head, kissing me and spreading her legs so I could go deeper into her. And deeper I went, beginning to thrust into her over and over, her pussy stretching to accommodate me.\n\n\"I could have sworn you got harder just now,\" she whispered.\n\n\"Maybe I like cumming inside you with no protection.\"\n\n\"Maybe I like that, too.\"\n\nI looked down at the spot we were joined, her hairy lips split open by my girth. She was so unbelievably silky and wet, the perfect pussy that I would ravage forever if I had the chance. And I was bare inside her. I couldn't tear my eyes away from her pussy or her petite breasts, barely moving as I bottomed out in her again and again. It was better than any fantasy I had ever had about Tess. It was real.\n\n\"Promise not to judge me if I ask you something?\" she panted between strokes.\n\n\"Ask me what?\"\n\n\"Who... who feels better? Who do you like fucking more? Me or Lysa?\"\n\n\"Not a fair question,\" I said. \"Look who I'm inside of right now.\"\n\nTalking about Lysa while fucking Tess drove home the forbidden feeling of it all. I could feel another orgasm rushing on, and I closed my eyes, trying to delay it.\n\n\"But if you had to say. And you can be honest.\"\n\n\"When I fuck Lysa,\" I said, slowing down my frantic thrusting, \"it's amazing. She has the most incredible body, she's experienced, she knows just what to do to get me to cum. Sometimes I like just burying myself in her pussy and feeling all of her around me.\" I stopped, holding my throbbing cock as far into Tess as it would go. Her eyes were mostly closed, savoring the feeling. \"Sometimes when I finish in her, she'll reach down and taste me. Which just gets me going again. I have filled her up every different way. Just about every time you've seen her, she's been full of me.\" Tess moaned at this, clenching me inside her.\n\n\"But you, Tess -- it's a whole different thing fucking you,\" I growled. I started to build back up the pace, gripping her tighter as I sawed in and out of her. \"If Lysa's chocolate, you're cocaine. I've been waiting my whole life to be inside you.\"\n\nTess started to say something, but was interrupted by a knock at the door. We froze.\n\n\"Tess? Are you in there?\" It was Henry. He sounded tired.\n\nTess looked up at me, unsure what to do. I nodded, throbbing inside her.\n\n\"Yep,\" she called out. \"I'm almost done with my shower.\"\n\n\"Why are you showering this late?\"\n\nSlowly, I began to push into her, then withdraw. I could hear the wet squelch of her pussy even over the rushing water of the shower. She fought to keep her voice even as she responded: \"I was feeling a little dirty.\"\n\nI couldn't hold out much longer, and I whispered in her ear as I thrust into her: \"I'm going to cum.\"\n\n\"Don't cum too much,\" Tess warned in a low voice, pausing to gasp as I bottomed out in her. \"You're still going to need some for Lysa tonight.\"\n\n\"I'd rather use it all up in you.\"\n\n\"I'm gonna go to sleep,\" Henry said from outside. He had no idea that inside, I was fucking his girlfriend for the second time ever, readying myself to spray into her unprotected pussy. Tess maintained eye contact with me as I sank myself into her.\n\n\"I'll come soon,\" Tess shouted to him, in a voice that I was sure sounded like she was being fucked. I looked down at her, naked and open for me, drinking in the sight of her pink, ravaged pussy and her firm tits, my thrusts reaching a fever pitch.\n\n\"Tess,\" was all I could groan out before I pulled her tightly to me, buried my cock in her as deep as it would go, and came.\n\nLast time had been incredible for its novelty, but it had all happened so fast that I didn't take it all in. This time, I looked down at her, eyes wide open in pleasure as she felt me shoot my cum into her, quickly filling her up. I pulled out halfway and pushed in again, watching, satisfied, as a glob of cum was pushed out around my cock, painting her lips white. Tess held me hard, flinching as she came down from her orgasm, while I fucked my last drops of cum into her. I was as far up her pussy as I could go, and there was nothing between us. I looked down at her cum-filled pussy split open by my cock and pulled out. Cum poured out of her and onto the floor of the shower.\n\nTess put two fingers into herself, and took them out, covered in cum. She put her fingers to her mouth, letting me watch as she licked them clean.\n\n\"Better than Lysa?\" she asked, her voice low. In answer, I leaned in to kiss her, our two tastes mingling when our lips touched.\n\nWe toweled off quickly and went our separate ways after one last kiss. The last thing I thought before I fell asleep was, I hope we did a good enough job washing the other off -- and out of -- ourselves.\n\n###\n\nI woke up slowly the next morning, groggily taking in my surroundings. It was sunny in my room. Lysa's bag was on the desk. With a start I realized Lysa must have gotten in and not woken me up -- or, worse, she'd tried to wake me up and I'd been too tired. Then I felt a warm, wet mouth envelop my dick, which was rapidly hardening. I looked down at blonde hair obscuring the face, recognizing the incredible lips as Lysa's. She looked up at me, smiling around my cock.\n\n\"Good morning.\" She was topless, her breasts hanging down enticingly.\n\n\"I'm sorry if I didn't wake up fully last night,\" I said.\n\nLysa ran her tongue up the length of my cock, slow and thoughtful. \"You know you talk in your sleep, right?\"\n\nAt this, my stomach clenched. \"What?\"\n\n\"Well, usually you don't, but you must have been really quite tired.\" She punctuated her sentences with slow licks of my cock. \"See, when I came in and got naked and tried to wake you up, you said the darnedest thing.\"\n\nLysa buried my cock into her mouth, deepthroating me until her nose was pressed into my pubic hair, then pulling back out, lines of spit connecting her mouth to my shaft. I looked down at her, confused.\n\n\"Right around the time I got you into my mouth, you looked down at me and said: A third time in one night?\" My stomach fell. She climbed up the bed, angling my cock in between her folds. \"I didn't know what that meant, but then you said: If we keep this up, Tess, I'll have no cum left for Lysa.\" She sat down on my still-wet cock, letting me bury myself into her velvety pussy.\n\n\"First I thought it might just be a wet dream. But then I tasted your cock. And wouldn't you know it, I could swear I tasted wet pussy. And definitely some cum.\" She lifted off me, angling my cock in her for maximum tightness, then slowly inched back down. My head was awash in competing emotions; I was turned on, guilty, horrified, excited, all at once.\n\n\"Lysa --\"\n\n\"Did you fuck Tess?\"\n\nI didn't know what else to say. \"I'm sorry...\"\n\nShe sped up on top of me, working my cock inside her as only she knew how. \"I thought she was a virgin.\"\n\n\"She... she was. The first time was an accident.\"\n\n\"And the second?\"\n\n\"Less of an accident.\" This was crazy. What was going on? She didn't seem angry, asking the questions in a matter of fact voice, as if we were having a calm conversation while I was fucking her.\n\n\"Judging by the taste of her on you, I'm guessing you didn't wear a condom.\" I shook my head slowly. \"Lucky her. She loses her virginity by having raw sex with her best friend. Did you cum inside her?\"\n\nI nodded. Inside Lysa, my cock throbbed, nearing orgasm. We could both feel it. She maintained her pace, sliding her perfect pussy up and down my shaft.\n\n\"She got three weeks of your cum. Was her pussy just... overflowing?\" All I could do was nod, getting closer to my own orgasm. \"Are you thinking about it right now? Picturing how she looked?\"\n\n\"It's... hard not to.\"\n\n\"Are you gonna cum in me while thinking about Tess? Filling up her untouched little pussy?\"\n\nIn answer, I thrust all the way into Lysa and emptied all the cum I had left up her pulsing canal. She moaned, grinding her clit hard into me, and came too. As I held Lysa to me, my cock emptying itself inside her, a movement near the door caught my eye.\n\nTess stood in the doorway, her eyes fixed on the spot where Lysa and I were joined: Lysa on top in cowgirl position, legs spread, my cock splitting her open, ass facing the door. Tess could see the exact spot where I was entering her friend.\n\nLysa saw me looking, then turned around to see Tess. Tess reddened and pulled away from the doorway, but Lysa called out to her: \"You can come in.\" After a moment, Tess's head reappeared, beet-red.\n\n\"I'm sorry, I didn't mean to --\"\n\n\"Mean to what?\" I was still hard inside Lysa and I could feel drops of my cum running down the few inches of my shaft outside of her. Tess was trying hard not to look directly at it, but failing. \"You didn't mean to watch, or you didn't mean to fuck my boyfriend and take all his cum like a little slut?\"\n\nTess said nothing, mortified. I didn't know what to say, either. Lysa beckoned Tess over to the bed, and Tess came hesitantly. She was wearing the same sleep shirt as last night, and her hard, dark nipples were clearly visible through it.\n\n\"Did you like watching?\" Lysa asked. Tess nodded. \"Say it.\"\n\n\"I liked watching,\" Tess said, timid.\n\n\"You liked watching what?\"\n\nTess swallowed nervously. \"All of it. I liked... watching you.. suck him off. I liked watching your pussy open for him. I liked watching him cum in you.\"\n\nI was shocked to hear Tess say that. Some submissive part of her had taken over.\n\n\"Come here, you little slut.\" Tess got onto the bed, following her order. \"Now I want you to taste our connection.\" Tess looked confused, so Lysa clarified: \"Taste the place where he's entering me.\"\n\nI was still hard between Lysa's lips. Tess got between my legs, looking directly at Lysa's supple, round ass cheeks, and her blonde, trimmed pussy around my cock. She reached out her tongue, tentatively, to the underside of my cock. Slowly, she ran it up my shaft, gathering cum and Lysa's cream on her tongue, then reached Lysa's stretched pussy lips. She licked up them, around my cock, so I could feel her tongue on every pass. Lysa breathed out slowly, enjoying it.\n\n\"Now I want you to take him out of me and clean him off,\" she said.\n\nSlowly, Tess reached out to grasp my cock, slick with Lysa's juices and my cum, and withdrew it from Lysa with a soft squish. More of my cum dripped onto my cock. Tess opened her mouth and leaned down to take me in her mouth.\n\n\"Don't swallow,\" Lysa said. \"Keep it in your mouth.\"\n\nTess bobbed her head up and down on my cock, deliberately licking and sucking the wetness off my cock. Directly in front of her nose was Lysa's open pussy, cum dripping out slowly.\n\n\"Now put your mouth on my pussy and put it back in me.\" Tess couldn't reply, her mouth full, but she looked hesitant. Lysa rolled over, spreading her legs in front of Tess. \"Haven't you gotten enough of it? Put his cum back inside me.\"\n\nI was certain Tess wouldn't do it. Fucking me was one thing, but eating Lysa's pussy was another. Would this new, submissive Tess go for it? Still, she was holding the excess cum in her mouth, not swallowing. She looked caught. Lysa absentmindedly rubbed her clit, waiting. Then, to my surprise, Tess darted her mouth towards Lysa's pussy, pressing her lips to it, reaching out her tongue to let the cum in her mouth dribble back into Lysa's waiting vagina. Lysa moaned in pleasure.\n\n\"Keep going... make sure you get it all in...\"\n\nTess used her tongue to push the cum that had dribbled out of Lysa's pussy back in. She began to fuck Lysa with her tongue, in and out of her sopping hole, tasting my cum every time she reached deeper into Lysa. Lysa closed her eyes, rubbing her nipples with one hand and using the other to press Tess's face into her womanhood.\n\nI was rock hard again. Tess was eating my cum out of Lysa's pussy, or, I guess, putting it back in. Was this a dream?\n\nLysa's breathing sped up. She writhed on the bed as Tess continued lapping at her, bringing her tongue from the bottom of Lysa's pussy, where my cum had pooled, to the top, hungrily licking her clit. Lysa gasped, her body rocked with waves of orgasm, and still Tess kept going. I had never seen Lysa orgasm from this angle -- usually I was part of the process -- and it was hot to see her body constrict in pleasure, tits bouncing, eyes screwed shut. It was even hotter to watch Tess eating her out.\n\nFinally, Lysa pulled Tess's face, wet with a combination of spit and cum and pussy, off of her. Both girls were panting.\n\n\"Have you ever gone down on a girl before?\" Lysa asked. Tess shook her head, wiping off her mouth. She looked dazed but horny. \"You're good at it.\"\n\nLysa looked over at me, at my cock, which was standing straight up. \"And after all that coming inside us, he's still ready.\"\n\n\"That was the hottest thing I have ever fucking seen,\" was all I could manage.\n\nLysa sat up and pushed Tess down onto the bed, on her back. Under the sleep shirt, Tess was wearing a pair of grey panties that were fully soaked through. Lysa pulled the panties down, revealing Tess's wet, hairy pussy. As Tess spread her legs, I watched her pussy lips come unglued from each other, revealing pink folds inside.\n\nLysa reached down, into her own pussy, scooping my cum onto her fingers. She reached over and sank those fingers into Tess, pushing my cum inside her. Tess moaned, writhing on the bed.\n\n\"You don't need the extra lubrication,\" Lysa said, reaching down to spread her wetness over my cock. \"But it'll get you started.\"\n\nLysa pulled my cock to Tess's opening. I adjusted myself on the bed, getting up so I was supporting myself over Tess. Lysa slowly rubbed my tip up and down Tess's sopping lips, before putting me between them. Tess cooed in pleasure.\n\n\"Show me how you fucked her.\"\n\nAs I sank into Tess for the third time, I looked over at Lysa. My girlfriend was watching with rapt attention as I bottomed out in Tess's pussy. Then I looked to Tess, who stared up at me, eyes wide. My best friend for so long, the girl I loved so much, open beneath me.\n\n\"Fill me up again,\" Tess whispered.",
        "\"Once is an accident, twice is a choice, but three times?\" I asked.\n\n\"Three times is perfect.\"\n\nTHE END"
    ],
    "authorname": "thegratian",
    "tags": [
        "creampie",
        "threesome",
        "cheating",
        "girlfriend",
        "friend",
        "accidental",
        "cum eating",
        "cum inside",
        "virgin"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/once-is-an-accident"
}