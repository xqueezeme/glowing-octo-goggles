{
    "title": "Naughty Girls Club",
    "pages": [
        "Dianne hadn't seen her sister-in-law Ellen in well over a week, though she had spoken with her the night before on the phone, learning that her brother Bill was out of town on business and wouldn't be returning until Sunday evening.\n\n\"Any plans for Saturday?\" Dianne had asked.\n\n\"No, not really, just the usual, dusting, mopping, changing the sheets on the bed,\" she'd added with a smile in her tone of voice.\n\nDianne envied her sister-in-law in that way, knowing her brother as well as she did, remembering when growing up together how sexual he had been back then, and especially when he'd met and had begun dating Ellen. Thinking back, she laughed...the number of times she'd covered for the two of them, keeping an eye out for their parents if they were out for any length of time at all, just so her brother Bill and Ellen could spend the time fucking one another's brains out while she stood guard. She'd even seen them doing it, neither one of them squeamish at all at her being there, which had on many occasions made her horny, so much so that she'd ended up masturbating in her room later just for some relief.\n\n\"He always did like fresh sheets,\" Dianne chuckled still remembering. \"They always aroused him for some reason.\"\n\nNow it was Ellen's turn to laugh, \"Yeah, I know,\" she giggled excitedly.\n\nEllen really did feel more like a sister to her rather than just her brother's wife. They had always gotten along very well, sharing secrets not only about Bill, but about some of the other men in both of their lives. When it came time to marry, Dianne had been Ellen's maid of honor, and visa versa when a year later Dianne married Steven.\n\n\"So how about you?\" Ellen asked. \"Anything fun and exciting happening for you over the weekend?\"\n\n\"Nah, you know Steven,\" Dianne said once again trying to hide her disappointment, once again envious of her sister-in-law. \"All he ever thinks about is watching the games, or going to them over the weekend, so I'll probably just curl up in bed with a good book later on and enjoy that.\"\n\n\"Maybe you should make it a naughty one at least,\" Ellen suggested. \"After all, we are meeting on Wednesday for the naughty book review,\" she reminded her.\n\n\"Well I'll certainly be doing that, but it sort of sucks getting all aroused after having read something, and then half begging Steven to even do something about it after I am.\"\n\n\"Who said anything about Steven?\" Ellen quipped suggestively.\n\nDianne felt herself blushing over the phone, she'd been doing a lot of that lately already. \"Yeah well,\" she grinned back speaking. \"Even that gets old after a while,\" she finally admitted.\n\nThey had shared a few more pleasantries, and then had hung up looking forward to their weekly little get together with the rest of the girls, which included Ellen's younger sister Michelle and her partner/lover Sharon. There was also another woman who'd recently joined their group, Laurel, who currently worked for one of those erotic stories websites, and who had often read excerpts from some of the stories posted there. One of the highlights of their evening as everyone had found many of the stories she'd brought with her highly arousing as well as entertaining.\n\n#\n\nIt just so happened that Dianne's errands on Saturday brought her within just a few blocks of where Ellen and Bill lived. Since Ellen had already told her she didn't have any real plans other than cleaning the house, she decided to swing by and visit with her, especially as Steven wouldn't even miss Dianne until it was dinnertime.\n\nPulling up in front of the house, she saw Ellen's car parked in the driveway, and knew she was home. Walking up to the front porch, she knocked. Inside, she could hear movement, expecting Ellen to open the door for her momentarily, but after several seconds without her having done so, she knocked again, this time getting a response, but even that an unexpected one.\n\n\"Be right there!\" Came Ellen's voice from inside. Dianne waited, finally hearing the lock being turned, the door opening though she'd been standing there for several minutes patiently waiting.\n\n\"Dianne!\" Ellen said breathlessly and with a surprised tone and look in her eyes upon seeing her sister-in-law. \"Sorry, I wasn't expecting anyone,\" she offered sheepishly beckoning for Dianne to come in.  They kissed one another in greeting, but Dianne could see that Ellen's face was flushed and that she was still trying to catch her breath as though she'd been running or something. But even more oddly, she was also wearing her bathrobe, and it was well after noon, which was once again strange for Ellen to be doing as she never seemed the sort to be lazy, especially when she said she had cleaning to do.\n\n\"Come at a bad time?\" Dianne asked curiously looking about. The house was spotless, just as it always was.\n\n\"Oh no, not at all, I was just ah...well cleaning, like I told you,\" she offered, but her explanation seemed forced when she spoke, especially with any real lack of evidence about that that's what she'd been in the middle of actually doing when Dianne arrived.\n\nThe only room that appeared a little disheveled, if you even wanted to call it that was the den as they entered, though even that was to be expected since it was the one room in the house Ellen and Bill spent a majority of their time in whenever they were home. The problem was, Dianne had been here on several occasions, and it had never looked quite this much in disarray before, several pillows that were normally on the couch now lying on the floor, the TV remote on the floor as well, another minor oddity as that was one of Bill's minor quirks, he always had to have it sitting nearby his chair on the table.\n\n\"Sit down, sit down!\" Ellen beamed smiling, seeing Dianne's curious expression as she scanned her eyes about the room. \"Like I said, just doing some cleaning, going through the couch cushions for loose change,\" she said apologetically, tossing a couple of the pillows from the floor back onto the couch for Dianne to use. \"Would you like some coffee? I think I still have enough for a couple of cups if you'd like, or...I can even make fresh!\"\n\nEllen was talking a thousand miles an hour, obviously there was more going on than what met the eye here, though Dianne couldn't for the life of her think of what it was. If she didn't know her sister-in-law better, she'd almost be suspicious she'd been entertaining someone, but as she'd heard no other sounds, voices, not to mention the fact she felt like she knew her sister-in-law better than that, especially as she and Bill certainly didn't seem to be having any marital problems, she chocked it up to her own overactive imagination.\n\n\"Sure, that would be great,\" Dianne told her, and then watched as Ellen scurried off into the kitchen to pour their coffee.\n\nOnce again spotting the remote, Dianne retrieved it, intending to place it back on the table next to the chair where she'd seen it sitting over a hundred times or more whenever she'd come over. Glancing over towards the TV, she noticed however that the CD player was still showing \"play\", so obviously a movie of some sort was still on even though the TV screen itself was off.  As she rose to replace the remote back where it belonged, she reached for and picked up yet another throw pillow, intending to toss it back behind her on the couch, as she did so, she felt something odd stuffed inside the cover protecting the pillow itself, and curiously slipped her hand in retrieving the object, when she did, her eyes opened wide turning into saucers just as Ellen came back into the room carrying their coffee's.\n\n\"Oh...my!\" Ellen said in confusion, her face suddenly turning scarlet. Dianne smiled however, holding up the toy she had found.\n\n\"Now I understand everything,\" she said grinning, handing over the toy as she accepted her cup of coffee in return for it. \"For a minute there, I thought you were fooling around with someone, not something!\" she grinned enjoying the uncomfortable, embarrassed look on her friends face.\n\n\"Me? Never!\" Ellen replied emphatically. \"You should know me better than that,\" Ellen said somewhat indignantly. \"Using one of these when Bill's not around is one thing...\" She stood there waving the toy in her hand, it flip-flopped back and forth as she did so in a bizarre, almost macabre sort of way, stopping her cold as she stood there looking at it, as was Dianne. Both women burst out laughing as it sat in her hand, once again righting itself.\n\nIn an effort to keep the conversation even more friendly now that the awkwardness had finally passed, Dianne shared with her, \"You know kiddo, I've never even used one of these things myself, how are they anyway?\"\n\n\"Seriously? You haven't? Even with...with...\"\n\n\"Steven?\" Dianne said finishing the question for her. \"No, even though Steven and I hardly even have sex any more, I never have, not that I haven't considered it, or even been curious about them before, just never saw myself using one, always relied on the old standard,\" she said wiggling her fingers once again making Ellen laugh, which is when Dianne saw the robe Ellen was wearing part, revealing the fact that she was indeed naked beneath it. Dianne had seen Ellen in various stages of being undressed before, she'd certainly seen Ellen's breasts when they'd gone out to try on new bra's together before too, but she couldn't honestly recall a time when she'd seen her entirely naked before, let alone the fact that Ellen had shaved her pussy, since she did recall clearly one other time when they'd dressed for Ellen's wedding, and she'd seen her briefly then, but also remembered her having a neatly trimmed, dark haired little bush.\n\n\"So when did you start doing that?\" Dianne asked curiously, looking down and thus alerting Ellen to the fact that she was asking her about her shaved pussy. Realizing her robe had indeed parted, she modestly folded it over, retying the sash before sitting down in the chair across from her, setting the still wobbling life-like flesh-toned penis dildo down on the table next to her.\n\n\"Several months ago I guess,\" she said blushing. \"Bill told me he actually preferred going down on a bare pussy, and since he's so good at doing that, how could I not? I've been shaving it ever since!\"\n\nNow Dianne was blushing, the words out of her mouth before she even realized they were. \"Fuck! I wish Steven was willing to do that!\"\n\n\"You're kidding me!\" Ellen shot back in surprise, you mean in the two years you guys have been married, he's not once gone down on you?\"\n\nDianne couldn't believe she was admitting it, but she was, and felt comfortable enough around Ellen telling her so. \"No, not once. And even though he seems to enjoy it when I do that for him, he told me shortly after we were married that a 'real man' didn't need to do things like that to satisfy a woman, nor did SHE need to use any fucking toys either!\" she added trying to sound a little like the way her husband would say it for Ellen's benefit. Not only that as she further explained things to Ellen, Steven insisted that she keep hair on her pussy, though she did keep it trimmed. Though he hardly even looked at it, all he ever wanted to do was fuck it, and it had been hard enough getting him to even do that much.\n\n\"Fuck!\" Ellen responded back genuinely surprised. \"Oh kiddo, I'm so sorry, I had NO idea!\"\n\n\"Obviously, I didn't either,\" Dianne hated to admit, but there it was. But as she sat there looking at Ellen, the almost obscene statuette now sitting beside her on the table, Dianne asked.  \"Tell me something honey, obviously you and Bill do indeed enjoy and have an active sex life, so...why the toys?\"\n\n\"Oh sweetie, it's because of that, that we've included those, amongst other things!\" she added without elaborating.  Bill has always been excitingly experimental, you know how he is!  He's even the one that suggested I get this thing,\" she said picking it up once again by way of emphasis, \"amongst a few others we have too,\" she said sounding excited to finally be sharing all this with her sister-in-law. \"And I don't mind telling you, even Bill has a few he uses, or which I get a kick out of using on him!\"\n\n\"T.M.I.,\" Dianne laughed, though she was suddenly even more curious than she had been a moment ago to hear more, a lot more.\n\n\"But my point is, it seems the more I use them, even when I'm all by myself, the more aroused I always seem to be, which Bill certainly benefits from, and he knows it. That's why he encourages me to enjoy myself, think about things...\" she wavered, realizing that she might have shared a little too much.\n\n\"What things?\" Dianne pressed, her eyes now glued to the once again wobbling prick that Ellen held in her hand, talking as she did so, continuing to wave it about like a magic wand or something.\n\nEllen hesitated. \"Maybe it would be easier to show you,\" she said boldly, suddenly picking up the remote.\n\nWith the press of a button, the TV turned on once again, along with the movie that had been playing, though the sound was still muted. \"This is what I was watching just before you came,\" she told Dianne. \"And...to explain things a bit further, one of the reasons it took me a moment to answer the door, wasn't because I was trying to put any of this away, or straighten up, it was because I was right in the middle of having a really intense orgasm when you knocked!\"\n\n\"Oh my God!\" Dianne finally breathed, though she couldn't tear her eyes away from the picture on screen.  A very attractive brunette was lying on an oversized bed, she was alone, but had one end of a double dildo deeply inserted inside her pussy, some sort of hand held vibrator held against her clit as she moaned pleasurably even though Dianne couldn't hear it. \"You're watching a woman masturbate?\" Dianne questioned finally turning towards her near sister.\n\n\"Yeah, like I said, Bill's sort of been encouraging me to explore myself, see what sorts of things other woman use or do when they're using some of these,\" she explained.\n\n\"Where the hell did you get this anyway?\" Dianne asked once again turning back towards the TV, finding what the woman was doing to herself to be curiously arousing, though she was still too afraid to admit it, even to Ellen.\n\n\"You'd never believe me if I told you,\" Ellen sat grinning.\n\n\"Try me.\"\n\n\"Michelle gave them to us,\" she said now including Bill in on it.\n\nMichelle was Ellen's younger sister, and an admitted lesbian who'd been living with another woman now for the past couple of years. \n\n\"Wow!\" Was all Dianne could think of to say for the moment. \"I guess I just never imagined you watching something like this, Bill maybe,\" she added grinning. \"But the fact that Michelle obviously does too surprises me a little, though I also guess it makes sense that she'd have movies of women playing with themselves, or even other woman too for that matter. It would have been more odd if she'd given you a porno with men and women in it together.\"\n\n\"Oh, she's given some of those to us too, she might be considered a lesbian, but I do happen to know she still enjoys a man's cock once in a while, just for the heck of it. She even has a friend who she calls her 'boy toy' who she and Sharon occasionally like to play with every once in a while.\"\n\nAgain, Dianne couldn't help but find all this newfound information interesting, as well as mildly arousing, once again looking back up at the TV as the brunette now slipped the interesting little toy inside her pussy having finally removed the almost giant-sized double dildo.\n\n\"Anyway, that's what I was doing when you arrived,\" Ellen said looking back at the screen now herself, a slight quiver of arousal clearly showing in her tone of voice.\n\n\"Cumming, you mean,\" Dianne now teased, because that was what Ellen was actually in the middle of when she first got there.\n\n\"Well yeah sorta, I mean I was, but it like got sort of interrupted there for a moment.\" \n\nDianne noticed as Ellen spoke to her, her own eyes were still glued to the TV. \"Oh, oh! Watch this! Watch this! This is one of my favorite parts!\" Obviously it was too, as Ellen had quite absentmindedly slipped her hand down between her legs, and though the robe she was now wearing hid what she was actually doing to herself, it was clearly obvious. Dianne didn't know what she wanted to look at more, Ellen, or whatever the hell it was taking place on screen that aroused her so much. She finally did turn then in order to look, and once again finding herself amazed if not somewhat shocked by what she now saw.\n\n\"Turn up the sound!\" Dianne actually heard herself saying, and then adding, \"Rewind that!\" She heard Ellen giggle though she didn't turn facing her, watching as the screen paused briefly, and then everything moving backwards at high speed for a moment until Ellen hit normal play again.\n\n\"Wild isn't it?\" Ellen said once again enthralled.\n\n\"Never seen anything like that before,\" Dianne had to admit, though she'd certainly heard about it, even wished at times she knew what it felt like, but she'd never actually seen another woman squirting before. \"Play it again,\" she said feeling a flush come into her cheeks, along with an arousal that she hadn't felt or certainly expected in a long, long time either.\n\n\"That's one of the reasons I have this!\" Ellen said suddenly producing yet another toy that she'd managed to just push beneath the couch Dianne was still sitting on. \"It's the same vibrator that she's using,\" Ellen said now holding this one up. \"Even the package calls it the 'juicer', something about being able to stimulate a woman's 'G' spot better than anything else out there on the market.\"\n\n\"Good God girlfriend!\" Dianne exclaimed smiling. \"Aren't you full of surprises! So tell me,\" she began in nearly the same excited breath, \"have you managed to do that?\" she asked once again turning back towards the screen, though by now an entirely different woman was shown, this one a blond with enormous tits who currently sat licking her own nipples.\n\n\"Ah squirt? No...not yet, but I do think I am certainly getting a lot wetter than I used to,\" she said candidly. \"Like I am right now in fact,\" she also admitted, once again her attention directed back towards the screen.\n\n\"You are? Really? Right now?\"\n\n\"Yes, right now!\" Ellen said looking at her, \"Would you like to see? I mean, I know that must sound really weird under the circumstances, but I'm telling you Dianne, ever since I started using these things, I've gotten a lot wetter, a lot more aroused lately, and Bill has definitely seen and appreciated the improvement!\"\n\nDianne couldn't believe they were even having this discussion let alone anything else, but she couldn't help but be curious about it too, throwing caution and all reasoning to the wind at this point, finding herself not only aroused, but devilishly wicked feeling, which was something else she hadn't felt in too long a time either. \"Really? You'd let me? I mean, that doesn't weird you out or anything if I do?\"\n\n\"No, of course not, actually kind of fun sharing all this with you, you are after all my best friend, not including being my sister-in-law, and more like real sister's in fact, which is why I don't feel quite so embarrassed now telling you, or even showing you all this!\"\n\nLike school mates, curiously exploring one another in the old days that was to some extent the same type of emotional high that Dianne was experiencing now with Ellen. And even Ellen seemed to be feeling the very same way as she stood, but this time allowing her bathrobe to not only part, but to drop to the ground behind her now standing completely naked in front of her friend.  \n\n\"Let me show you what I mean,\" Ellen said enthusiastically excited. She quickly retrieved the naughty looking vibrator, along with the life-like penis looking one and sat down on the floor again amongst the pillows. \"I'll show you the way I was doing it just before you came, and just before I almost did,\" she added with a very lust filled gleam in her eye as she spoke.",
        "Likewise, Dianne positioned herself on the floor, but not before kicking off her tennis shoes, close enough to see clearly though without looking like she was interested in doing anything more than just looking, though in the back of her mind, she was already wondering what it might actually feel like to try out one of these things.\n\n\"Now watch,\" Ellen purred, slowly beginning to insert the life-like prick into her pussy. \"The only reason I'm doing this is, because I actually like the way it feels inside me when I'm using this one to stimulate my clit with. But after a while, I just remove this one completely, and then put this one in and let it do whatever it was designed to do. I've had some of the most intense orgasms doing it that way than I've ever had before!\"\n\nDianne was indeed mesmerized as she watched. She felt her nipples harden, more so in fact than she'd remembered them being in a very long time. But in addition to that, she felt her own wetness, her own moisture pooling between her legs and knew without any doubt that she would soon be showing a wet spot through her jeans if she didn't take them off, which she then did much to Ellen's amusement.\n\n\"Well? I can't very well go home looking like this!\" she said brazenly revealing just how wet her panties already were.\n\n\"Fuck that's hot!\" Ellen said through half glazed eyes as she lay there looking up at her near sister.\n\n\"What?\"\n\n\"That! You!\" Ellen spat, her voice suddenly taking on a completely different tone now, one full of excitement, lust, desire. \"You have no idea how fucking hot that looks, seeing how wet your pussy is, how much you've already soaked through your panties just standing there!\"\n\nDianne actually ran a finger down against them without looking, almost afraid to see it for herself, or see it the way that Ellen obviously was, though she continued to feast her own eyes on Ellen's pussy as she now removed the fake prick casting it aside, inserting the other vibrator in its place, simultaneously increasing the vibration speed as she did so.\n\n\"Oh yeah, finger it a little for me while I cum,\" Ellen said, her voice quivering with hopeful expectation, her nerves raw, on edge, her breath shallow, fast almost panting as she now pressed the vibrator inside herself, holding it there in position, allowing the thousands of miniscule vibrations to caress and tenderly please her cunt inside and out.\n\nWithout evening thinking about it, without any hesitation or sudden shyness or embarrassment, Dianne found herself doing just that, though she still hadn't gone so far as to insert her finger inside herself directly, just locating her clit through the fabric of the material, which was enough as she stood there playing with herself, her clit throbbing wildly, the intensity of the moment escalating rapidly as she stood directly over her friend, between her obscenely spread legs, watching the way Ellen lay pleasuring herself while she in turn stood above her doing the same.\n\n\"Oh fuck! Oh fuck! I'm gonna cum, gonna cum!\" Ellen announced suddenly, her eyes closing, her ass coming up off the floor by more than a few inches, arching her back, in a momentary pause as though time had suddenly ceased to exist as she held there for a moment. Even Dianne had quit working her fingers, her own breath held as she stood there, then like the sound of a trains whistle in the distance, she heard the slow agonizing moan of pure pleasure begin to whistle from deep within Ellen's throat, suddenly exploding outwards as the intensity of her orgasm claimed her, washed over her, and consumed her.\n\n\"Holy fucking shit!\" Dianne spat as Ellen thrashed wildly beneath her now amongst the pillows in the throes of cataclysmic release. She was momentarily lost to herself, oblivious to anyone, or anything apart from the earth-shattering orgasm that seized her body from head to toe. And as she stood there, Dianne saw the sudden eruption of clear liquid as it ran in small little rivulets down between Ellen's legs soaking the floor. She herself was wet, drippingly so, but never before in her entire life had she ever experienced even that much as she was witnessing now. And though it was no where's near the woman's discharge on the movie, when she had actually jettisoned a long lasting streamer of clear liquid from deep inside her pussy, far enough to sprinkle droplets upon the camera lens as it filmed her, even this much was beyond her wildest imagination as she watched Ellen continue to climax, spinning now into yet another one as she continued fucking herself, crying out, groaning and sharing her pleasured joy with her friend.\n\n#\n\nThough she hadn't climaxed, she might as well had, her knees just as weak as though she herself had just had the orgasm she'd just witnessed. Collapsing down into the sea of pillows on the floor, she watched as Ellen slowly surfaced again from her revelry of pure erotic joy.\n\n\"Whew! That felt good!\" Ellen grinned from ear to ear, though feeling a little sheepish.\n\n\"Damn fucking fantastic!\" Dianne had to admit still feeling a little overwhelmed by it all, but also hornier than she'd ever been in a while too.\n\n\"Try it, try them both,\" Ellen said standing up on wobbly knees, just let me wash them off for you first,\" she said now feeling slightly embarrassed.\n\n\"No!\" Dianne heard herself saying, catching Ellen mid-step.\n\n\"No? You don't want to try them?\"\n\n\"Yes, I do, but no...I don't want you washing them off first,\" she again heard herself saying, the thought of masturbating with them still fresh with Ellen's recent spending coating them, somehow a part of the naughty wickedness she was still feeling.\n\nEllen grinned back at her with the same knowing expression on her own face that she was now seeing. \"You feeling what I'm feeling?\" Ellen said now sitting down on the floor beside Dianne once again. \n\n\"Maybe...\" Dianne chuckled, \"tell me what you mean.\"\n\n\"I'm sure you'll remember this,\" Ellen began, once again absentmindedly fingering one of her hard extended nipples while doing so. \"Bill and I had already done it of course, several times, but we'd been teasing one another for several days mercilessly in fact because neither one of us had had the opportunity to do so again. Then your mom and dad dashed out to go pick up some dinner for all of us, remember?\"\n\nDianne did, but now she was enjoying the memory of that moment being retold, as well as enjoying seeing Ellen still fingering her own nipple. \"I do, but keep telling the story,\" she said through a half breath as she brazenly stood, struggling out of her wet panties, along with the tee-shirt and bra she'd been wearing, until she herself was just as naked as Ellen still was as she spoke.\n\n\"Anyway, we didn't really have a whole lot of time, the KFC was just down the street around the corner as you recall.\"\n\nDianne did, but she wasn't about to interrupt the story for that. \n\n\"As horny as we both were, and since you and Bill had always been close enough and comfortable enough to discuss anything and everything with one another, that was when he asked you if you'd be willing to keep an eye out for mom and dad while we did it, right there on the couch.\"\n\nDianne could still see it as though it had happened yesterday. As Ellen continued talking, Dianne closed her eyes, the images forming inside her head, even the sensations, smells, the erotic conversation that began between them now blending with Ellen's words, though they'd become merely background to the memory.\n\n\"Please Dianne please,\" Bill had half begged his sister, just sit there on the couch, keep an eye out for their return,\" he'd asked. The sound of clothes being removed, zippers coming down, belts being unbuckled. She glanced quickly, seeing her best friend and future sister-in-law reaching behind unclasping her bra, already having slipped out of her shorts and panties now straddling her own brother whose hard massive prick she caught the briefest glimpse of as it disappeared inside Ellen's cunt. Seconds later the sounds of them fucking as she peered out the window looking for headlights, her breath coming quickly, the sudden throb of excitement emanating from deep within her own needful pussy.\n\n\"Hurry up you two!\" Dianne had warned worriedly, \"They'll be on their way back any minute now!\" Though she had turned once again to watch them, watch as her brothers hands cupped her friends tits, caressing them pulling on them, just as she herself now sat doing as she remembered doing it to herself even then, though wearing clothes while she'd done so.\n\n\"That's it baby!\" Bill had cried out, \"Make it cum! Make it cum! Make it cum!\"\n\nThough Ellen was on birth control even then, they hadn't wanted to risk any pregnancy this close to the wedding, and as there hadn't been enough time for Bill to race off and locate a condom, there'd been no other choice either. Dianne watched as Ellen suddenly extricated herself from Bill's prick, mouthing it instead as he began ejaculating his hot creamy spunk into her mouth, surprising Dianne as she did, as she watched, even as headlights suddenly bounced in the window telling them all that their parents had returned home.\n\n\"Oh my God they're here! They're here!\" Dianne screamed as Bill and Ellen had scrambled off the couch gathering up their clothes as they did, one racing downstairs to his room, the other upstairs to Dianne's as Ellen had been invited over to spend the night with her just as they'd always done on most Friday evenings.\n\nDianne now heard Ellen's voice, once again in the present. \"But it was later on that evening,\" she continued. \"After we'd all gone to bed. I remember that I'd pretended to fall asleep quickly, but the truth was, I was still horny as hell. Obviously I hadn't gotten off myself yet, and was just waiting for you to fall asleep so that I could masturbate.\"\n\n\"Oh my God!\" Dianne laughed remembering the night. \"That's what I did!\"\n\n\"I know!\" Ellen now smiled knowingly.  \"I know! And that is what I was leading up to, because as erotic naughty as it had been with Bill there on the couch, it was even more so for me after we'd gone upstairs to your room.\"\n\nDianne sat listening to her near-sister, her pussy still throbbing with excitement and expectation, her emotions swirling like a whirlpool inside her head, though she felt more alive, more aroused at this very moment than she'd ever felt before.\n\n\"I remember lying on my side pretending to be asleep, though I had closed my eyes, I could still squint just enough to see you, though after a while it wasn't really necessary anymore.\"\n\nOnce again Dianne could clearly recall that night, even seeing herself as she lay in one of the twin beds separated only by the small nightstand sitting between them. After she had assured herself that Ellen had fallen asleep, she had unabashedly began touching herself, though the sound of the sheet moving, even though she felt certain it wasn't heard, had caused her to pull it down and away from herself, but she also preferred to bend her legs at the knee, spreading herself whenever she masturbated anyway. Dianne glanced over towards Ellen several times, but had seen no movement, hearing only the soft gentle sounds of her slumbered breathing. Her excitement, and arousal from seeing her brother and Ellen there on the couch, very much on her mind as she twirled the tip of her clit with her finger, occasionally slipping a finger inside herself, withdrawing a bit of moisture which she used to further tease and stimulate her hard aroused little nubbin with.\n\n\"When I saw you lower the sheet, bending your legs in order to access your pussy more easily, I couldn't help but slip my own hand down between my legs, though it seemed to take me forever, not wanting to move, fearful that I might alarm you in some way and that you would stop. But thankfully you didn't, and as I watched you in the semi-darkness, I lay fingering my own pussy, wishing as I did so that we were lying in bed together side by side, doing each other instead.\"\n\nDianne couldn't believe she was hearing this, couldn't believe that Ellen had been thinking the very same thoughts and desires that she herself had felt and been thinking about as the two of them had masturbated together there in the darkness of her room. She had been so tempted to stand up, walk over and begin caressing Ellen's breasts as she rode her brother's cock, had it not been for the fact that her parents were due back at any moment, she might have. Her brother no doubt would have welcomed it, encouraged it along with a lot more had she done so.\n\n\"Touch me,\" Dianne moaned softly when Ellen had finished. \"Please Ellen, touch me, and let me touch you.\"\n\nThey stood, embracing, suddenly kissing though neither had expected to do that. Dianne felt her breasts tickle the hard twin peaks of Ellen's breasts as they too embraced, fencing one another, purposely so as they looked down at themselves, Ellen suddenly cupping one of her own breasts, rubbing it against one of Dianne's as she soon mirrored the playful encounter, her taut hard nipple now flicking against one of Ellen's as they laughed joyfully, teasing one another tit to tit, nipple to nipple, breast to breast.\n\n\"Let's go into the bedroom,\" Ellen suggested, taking Dianne's hand in hers, leading the way until they both collapsed on the bed together. Side by side, Dianne felt the gentle exploratory probe of her near-sister's fingers, the tingling touch of them sending an ocean of goose bumps, which spread rapidly across the surface of her flesh. Even as Ellen touched her, finally stroking ever so tenderly the hard stiff nubbin of her sex, her own fingers found simultaneously that same hard little knot sitting between Ellen's sex, that caused her to moan deeply, hotly as she touched her, just as she now began to do as Ellen's slick finger probed, fucked, and twirled about her super-sensitized little clit.\n\nThey came almost simultaneously. Hands and fingers had been everywhere, she had pulled and tugged on Ellen's nipples, just as Ellen had been doing to hers. They had kissed one another passionately, tongues doing what she momentarily considered doing to Ellen's clit, though lacking the courage to do so, still fearful of taking it that far, as must have been Ellen in her mind, for she made no move to do so either. But it was enough, she felt the surge, felt the sudden prickle of joyful release suddenly seize her as she cried out, hearing Ellen's own sweet sigh of pleasured ecstasy joining hers as they fingered one another frenziedly after that until each was satisfied, satiated in a blur of unbridled, uninhibited lust.\n\n#\n\n\"See you on Wednesday then?\" Ellen asked after having walked Dianne to the door saying goodbye. Dianne smiled, grinning even as she quickly hugged her near sister to her, though not daring to kiss her though she felt safe in doing so had she decided to. As erotic/naughty as it had felt, her rational thoughts had returned, though still somewhat confused by her arousal, her attraction towards her own sister-in-law.\n\n\"Yes, Wednesday,\" she confirmed. \"At Michelle's place this time right?\" she asked having already forgotten, her mind still in a fugue as she stood there. Ellen still only wearing the robe she had been in when Dianne had first arrived, the impulse too great to ignore, not chancing a lingering kiss, but leaning forward for a sisterly one which she gave, yet allowing her hand to sneak forward, briefly parting the fold of her robe, seeking and quickly finding the softness of Ellen's tit which she touched, quickly caressed, then stepping back catching the broad smile on Ellen's face as she did so.\n\n\"Sure you don't want to take one of the toys to try out?\" Ellen asked as Dianne stepped down off the porch step.\n\n\"Maybe next time,\" she stated, realizing as she said that, that she was already looking forward to, and hoping that there really would be a next time though she was still struggling inwardly with herself over having enjoyed this encounter with her sister-in-law as much as she had. Finally using the excuse that she'd been gone far too long, and that Steven would be wondering about where she was, even though she knew that to be a lie. He would be indifferent to her whereabouts, or even what she was doing, just as long as she was home in time to fix his dinner.\n\n\"I'll bring one with me on Wednesday, just in case you decide you want to,\" Ellen continued grinning, and then waved somewhat flirtatiously, even briefly baring one of her breasts, flashing Dianne as she slipped into the front seat of her car, laughing with her as Ellen waved once again just before closing the door.\n\n#\n\nThey had been meeting every Wednesday night for several months now. For Dianne, it had become the highlight of her week, a chance to get away and have some time for herself.  Since it was also Steven's bowling night, it was the perfect opportunity for her, she could relax, enjoy the company of her friends without worrying about getting home early, or even late for that matter as Steven usually stayed late himself afterwards in the bar sharing a few beers with his friends.\n\nBut there was a difference this time, she had always looked forward to Wednesdays, but she'd never been this excited before in looking forward to it. She'd only spoken once, and that all too briefly with Ellen when she'd called, Steven sitting too closely nearby to allow the conversation to take on any sexual overtones.\n\nBut now, driving over to Michelle's, she could already feel the moisture gathering between her legs as she openly looked forward to some erotic discussions, hearing each of the women sharing a favorite passage or two with one another, and then discussing it. That, and wondering if Ellen would remember to bring along one or two of her toys as she'd hinted at doing. Wondering further if indeed that she had, would she be brazen enough to take them home with her and actually try them, \"though better yet,\" as she thought about it, \"letting Ellen use them on me!\"\n\nAs was usually the case, Dianne was the last one to arrive, having to drive the furthest except when they met at Ellen's place when she was the closest. Parking her car she entered into Michelle's home, knocking, but then simply walking in. They all did whenever they gathered together.\n\n\"Oh good, she's here!\" Michelle said jumping up from the couch to give Dianne a quick friendly hug. \"Laurel's been reading a few passages to us already while we've been waiting for you to get here. Hot fucking stuff!\"\n\n\"So are you,\" Dianne thought to herself, chastising herself almost immediately afterwards for giving birth to that thought. But the plain and simple truth was, Michelle really was a hottie, obviously with looks much like her older sister, but in a younger, even wanton sort of a way. And the way she was dressed didn't help much either, a simple pair of men's flannel shorts, but also wearing a man's sleeveless underwear tee shirt that hugged her firm braless breasts like it had been painted on. And likewise, as Sharon just then came into the room carrying a tray of drinks, fruit punch laced with more than enough alcohol to send her head spinning, she too was dressed just as provocatively, if not more so than Michelle was. Much fuller breasted than even she was herself, Sharon's breasts likewise strained against the simple tee shirt she also wore, though she also stood in nothing more than a pair of simple white cotton panties, her favorite outfit whenever lounging around the house staying at home. Everyone else was more appropriately dressed perhaps, especially as they'd all driven there, but even Ellen wore a simple sundress that hinted at curves laying just barely beneath the material as she stood next to the window, the last of the fading light still enough to outline that incredibly sexy body of hers, which Dianne had already twice masturbated to while thinking about.",
        "Dianne took a few brief moments to say hello, accept her drink and settle in on the couch next to Ellen who'd shown her more than her usual excitement when seeing her, going so far as to let her lips linger perhaps a bit longer than usual when she kissed her hello, a moment, no matter how brief, wasn't lost on Sharon as she sat there watching the two of them.\n\n\"You sure you're sister isn't gay?\" Sharon had quipped teasingly as she spoke to Michelle.\n\nDianne felt her face flush, saw the same momentary coloration in Ellen's as well as they quickly settled back into their seats trying to look innocent and bewildered at the remark.\n\n\"Who knows, maybe she really is after all,\" Michelle said teasingly. \"You finally coming out of the closet here sis?\" she asked, though she too had found the sudden blush in Dianne's face curiously amusing.\n\n\"Nah, I prefer staying inside the closet when I play,\" Ellen tossed back at her sister. \"Just feels a bit naughtier that way.\"\n\nEveryone laughed at that, but Ellen had managed to defuse the sudden awkwardness that they'd both felt, at least Dianne had anyway, still wrestling with emotions, thoughts and admitted interest which she was taking in while looking at all the women gathered together more so than she might normally have done any other time.\n\n\"Now Laurel,\" Michelle spoke, \"Re-read that last passage you'd just read for us before Dianne got here. It was pretty damn hot even if I do say so myself, so set up the scene for us again, and then read it for her.\"\n\n\"Basically, it's a story about a group of women who had all gone on a cruise together. To make a long story short, there's a severe storm that comes out, knocks out all power to the ship, and it starts taking on water and begins sinking. Ten women in all, find themselves alone, basically abandoned and adrift in their small boat, eventually nearing a small deserted, uninhabited island the following day. After nearly a month without rescue, they've managed to make their little island somewhat inhabitable and comfortable to stay on, plenty of fresh water, fruits, and even a few wild pigs that they're able to live on while awaiting rescue.  Eventually of course, as they grow closer and closer together, now relying on one another in order to survive, there is the additional human need that suddenly arises, and with no men anywhere in sight to satisfy those urges and specific needs, they turn towards one another. Early on in the story, it becomes evident that if intimate relationships do form out of this, it could very well cause petty jealousies and arguments amongst many of the others. As they've also established a bit of a leadership within their group, they further decide to formulate and draw up some sort of pact that would prevent that from ever happening. Essentially then, they all agree that there are urges and desires that each one of them is now beginning to have, to experience, so their only solution in guarding against any dissention amongst them, is to agree to an 'orgy only' format, when everyone is included together during a specific night in the week, something they can all look forward to...\"\n\n\"Sorta like now,\" Ellen whispered over to Dianne as they sat listening, even taking her hand in hers as they sat there, though it was wedged hidden between them.\n\nDianne nodded her head in agreement, listening to Laurel as she continued.\n\n\"Even women who had never thought of, or considered being with another woman now agreed with this, and found their meetings, their orgies, not only pleasurable, but far more exciting and enjoyable than they had ever experienced or even imagined before. Anyway, that's the set up, what I was just starting to read to them before you got here,\" Laurel said glancing towards where Dianne was sitting, \"was the part where they'd decided to incorporate a simple ceremony of sister's before their real orgy began, but something that they also agreed to do before any meeting, and in addition, adding it also the close of any meeting. In that way, they all felt in perfect harmony with one another, even through heated discussions or disagreements, coming together in this unique intimate little way then, ensured that there was always harmony and friendship amongst their newly formed tribe.\"\n\n\"So what did they decide to do?\" Ellen asked curiously.\n\n\"It was agreed,\" Laurel continued smiling, a small blush spreading across her own face as she spoke, \"that they would all sit and form a circle together, like I said, at the beginning of any meeting or discussion, as well as at the end of it. As they did this, each one would put her left hand in the lap of the woman sitting next to her, until the entire circle was now formed, connected in this way. Each one would then simultaneously, finger that same woman, and continue to do so until everyone had reached a relaxed stage of euphoria, not necessarily climax, though that happened upon occasion to, but at the very least that much, until a smile was seen on each and every woman's face before they then went on to other important matters.\"\n\n\"Wow, maybe we should start off our little get-together's with something like that too!\" Michelle suggested teasingly, though everyone there knew she was more serious about actually doing something like that than she was letting on to.\n\n\"You just want to stick your finger in another woman's cunt,\" Sharon teased her, even reaching over to give one of Michelle's breasts a friendly little squeeze. \"So having an excuse like that to do so would be perfect for you wouldn't it?\"\n\n\"Oh, and like you wouldn't?\" Michelle teased back, now actually grabbing one of Sharon's boobs for emphasis, nearly starting a brawl in doing so.\n\n\"Um, should we throw down some Jell-O into the middle of the floor and watch these two go at it?\" Laurel jokingly suggested, \"Or do we continue on with what we came here to do?\"\n\nThat seemed to quiet things down in a hurry, though everyone had found the playful banter between the two actually exciting to watch.\n\n\"Whose turn is it to read now anyway?\" Sylvia asked, another woman friend of theirs now who'd joined them a month earlier shortly after Laurel had invited her along.\n\n\"I think it's actually my sister's turn to read and share something with us,\" Michelle said just as Ellen had stood.\n\n\"Yeah I think it is, but I need to pee first,\" she said heading towards the bathroom. \n\nWhile she did, everyone decided to freshen their drinks, have a pee themselves, or step outside for a quick smoke break before continuing. Dianne stepped into the small kitchenette fixing herself another of the semi-strong fruit punches. Already her mind was reeling with all sorts of thoughts, brought about by Laurel's descriptive little story that had reminded her of her own wicked little encounter with Ellen. \n\nA moment later Ellen joined her there in the kitchen, \"Want one?\" Dianne asked.\n\n\"Yes, please and make it a stiff one too!\" she added grinning. Just then Ellen's sister called out to her from the living room.\n\n\"Hey sis! Where's your book anyway?\" she asked. \"What are you going to read to us?\"\n\n\"It's called 'She'!\" Ellen yelled back out towards her. \"Written by an anonymous author several years ago now, but very enlightening,\" she explained and then adding, \"it's sitting just inside my purse!\" The moment she said that, her eyes suddenly widened in alarm. \"Oh no!\"\n\n\"What?\" Dianne asked but Ellen had already spun around and was heading back out into the living room not even taking her drink with her when she did. Dianne raced immediately after her, arriving only a moment later, but it was obviously already too late. Michelle stood, a silly knowing grin on her face, holding up a life-like penis in one hand, and Dianne's \"G\" spot vibrator in the other.\n\n\"Um, you come prepared? Just in case you needed to dart off into the bathroom again did we?\" she said waving the two toys up for everyone to see, causing a great deal of snickering laughter as she did so. \"Though that's probably not a bad idea either,\" she added once again suggestively, would certainly make the readings a lot more fun and interesting if we all started doing that.\"\n\n\"I'm game if anyone else is!\" Sharon said grabbing one out of Michelle's hand, \"I've always wanted to try this one, just couldn't afford it on my salary,\" she said honestly.\n\n\"You're serious?\" Ellen said gawking at her sister's lover. \"You wouldn't be embarrassed or feel uncomfortable doing that in front of everyone?\"\n\n\"I wouldn't no...only if it were to make anyone else feel uncomfortable or embarrassed, then I wouldn't. So...would it?\" she asked seriously looking about at everyone. To Dianne's amazement, no one voiced a complaint or any real concerns, if anything, blushing excitedly at the mere thought of it, wondering if in fact Sharon really would, or if she was just teasing everyone in suggesting that she might.\n\nEven before Michelle could comment on what Sharon had just said, Sylvia spoke. \"I wouldn't mind trying out the other one, as long as no one was offended by it,\" she said surprising everyone there. \"Though I would ask that you maybe dim the lights just a little so I wouldn't feel quite so brazen or vulnerable while I do.\"\n\nOnce again, no one seemed willing to object to that either, everyone now at least curiously excited with the realization in seeing where all this was going. \n\n\"We've got a few more toys in the bedroom,\" Sharon suddenly offered, \"if anyone else wants to try one while Ellen reads to us,\" she stated already removing the top she'd been wearing along with her white cotton panties so that she now stood there entirely naked, as Michelle soon joined her, also having removed her clothes. Sylvia now stood, undressing herself, once again to everyone's surprise and amazement.\n\n\"Well? Like they say...when in Rome!\" she said grinning as she carefully folded her skirt and blouse over the back of the chair she'd been sitting in.\n\n\"I'll pass...for the moment anyway,\" Laurel said easily. \"But I certainly won't mind watching anyone else either,\" she added smiling.\n\n\"No one's expected to do anything,\" Michelle said then taking over, suddenly becoming this particular tribes little leader, much like in the story Laurel had been reading earlier. \"But maybe we really should lay out a few ground rules here, just in case this does turn into something more than what we've been doing.\"\n\n\"Like what?\" Ellen asked though Dianne detected an enthusiastic tone in her voice when she questioned her sister.\n\n\"Well for one, maybe we should all get naked when we do this, even if a person or individual chooses not to do anything themselves, it would at the very least make everyone else feel a bit more comfortable, and less conspicuous or self conscious about being watched. Anyone have any reason to object to that much at least?\" she asked.\n\nDianne nearly did, but saw no other dissention from the group, including Ellen or even Laurel, both of which suddenly stood and began removing their clothes. The only other person that Dianne thought might voice any strong objection was Margaret, the oldest woman in their group at sixty, though she'd been there from the very beginning and had seemingly enjoyed herself immensely in being there, though she hardly ever spoke or really shared anything about herself, let alone her sex life. That too had obviously ended a few years ago with the sudden death of her husband, which was one of the reasons she'd found herself enjoying this particular little book club of theirs. Perhaps it had given her some sort of an outlet for her still very active and needful desires.\n\nDianne glanced towards the older woman, expecting to find some sort of shocked horror or indignant expression in her face perhaps, but to her surprise, she didn't. If anything, Margaret merely shrugged her shoulders and smiled, and suddenly began unbuttoning her blouse, leaving Dianne as the single solitary person who hadn't begun doing so as yet. So she did.\n\n\"Way cool!\" Sharon said enthusiastically after all the women had finished undressing, once again settling in comfortably, some actually holding various toys or vibrators in their hands, some of which Michelle had retrieved from their personal stash for the women to use.\n\n\"Ok, before Ellen begins here with her reading, how about we add one more little item to the new club rules here,\" she said, though continuing before anyone could ask what that was. \"Next week, everyone just plan on bringing with them whatever they'd like to try or use. You're certainly all welcome to borrow or enjoy whatever we have, but I know that most, if not all of you probably have your own little fun toy you enjoy using, so like I said, next week feel free to bring those along with you as well.\"\n\nGlancing up, Dianne saw Ellen wink at her, she was the only person as far as she knew, that also knew, Dianne had never even used one before let alone had one.\n\n\"Here, try this one,\" she said holding out an egg-shaped vibrating toy that she almost magically produced from her purse. \"I brought an extra one with me, just in case you didn't like either of the other two,\" she honestly admitted as she sat down once again on the couch next to her friend.\n\n\"But now you don't even have one!\" Dianne said holding onto the strange feeling devise.\n\n\"No worries kiddo, we'll share,\" she winked with a whisper causing Dianne to feel a pleasant unexpected jolt in her pussy upon hearing that. \n\n\"So, everyone all comfy and ready for Ellen to begin reading now?\" Michelle asked. Dianne looked about the room, amazed to see so many women gathered together like this, each one of them naked, most of them either holding onto a toy, or at the very least, already caressing themselves with hands and fingers, something that Sylvia had begun doing from almost the moment she'd gotten a hold of the other toy she'd wanted to try. She'd truly been the biggest surprise next to Margaret, unusually shy, though she'd certainly gotten excited whenever she'd given her own reading, she now sat unabashedly working the life-like prick in and out of herself, almost oblivious to whatever else anyone was doing.\n\n\"Start reading!\" she'd said suddenly from out of the blue. \"Before I lose my nerve here!\" she'd added though she also continued to fuck herself openly with the fake prick.\n\nEllen quickly began reading, \"The room was dark, made even more so by the blindfold Patricia wore, something her husband Jeff had placed around her head shortly after binding her to the bed she now lay in, though he had done so, securing her naked body with silk scarves after reassuring her that she had nothing to fear, nothing to worry about. Patricia trusted her husband, implicitly, excited now more than perhaps she'd ever been, listening to his movements about the room as he prepared to pleasure her, promising to do so in ways she'd never known or experienced before, all the while speaking to her in his soft comforting voice...\"\n\nDianne quickly peered around the soft dimly lit room now, since Sharon had quickly extinguished most of the lights, turning off some, dimming others until only the barest of lighting filled the room, enough to read by at least, and see by as well as Dianne noted many of the women, including good old Margaret, as they sat listening, enraptured with the story as they all touched and pleasured themselves in one fashion or another. Some with the toys they had chosen to do so, others like Laurel or Margaret using their own hands.\n\n\"...Patricia then felt the gentle soft probe of something foreign, something wickedly strange as it began to penetrate the moist wet opening of her sex, only then realizing the sound of her husband's voice, still speaking gently to her, soothingly so, was too far away from being a part of the soft hands that gently teased and caressed her aroused flesh. \"Just trust me honey, don't say, or ask anything, just trust me...\"\n\nDianne could no longer refrain, her pussy felt like it was on fire, seeing the women around her, all of whom now touched or pleasured themselves in one way or another as Ellen read to them from her book, even touching her own self as she sat there, one hand down between her legs, frigging her clit while she read, periodically glancing over towards Dianne, smiling, nodding her head in approval, urging her on. For the first time ever, she pressed the switch, feeling the toy come alive in her hand, even on the smallest setting, the vibration sending shock waves through her fingers, her hand, which she now placed against the swollen needful lips of her pussy.\n\n\"...Though tempted, her mind awash in curious wonder, she could only lie there, feeling the softness of the pliant toy as it penetrated her sex, slowly, teasingly, deflowering her femininity as though for the first time all over again. The hands were smooth, another woman's, it had to be she thought though she lay silently, allowing this unexpected, now wanted violation of her body to continue...\"\n\nFor herself, picturing it inside her own head as Ellen read, she couldn't see, couldn't even begin to imagine Steven ever doing anything like this, but she could see, could imagine, and now did, the image of herself being bound in such a way, the touch of Ellen's hand upon her flesh, caressing her, teasing her, splitting her sex with the softness of the now shared prick which had entered her as her own brothers voice continued on in the background.\n\n\"...feel her pussy next to yours. Feel how wet it is, how wanting of you it is. Feel her as she fucks you, fucks herself. Feel the press of her delicious lips kissing yours, the hardness of the prick which you now share, fuck her back honey, allow me the exquisite pleasure of seeing yours, fucking her back, urgently, hotly...excitedly as I stand here stroking my prick while watching you...\"\n\nFor Dianne, it was indeed Ellen's body doing just that, though again Bill's voice as he urged the two of them to fuck one another as he stood there. She could feel Ellen's hands touching, caressing, though she could not, the sensation of want driving her near madness, ever closer towards orgasmic release as she fought against the bonds that imprisoned her.\n\n\"...her climax indeed great, perhaps far greater and pleasurable than any she had ever known, and suddenly all too soon, almost the way it had begun, the silence once again filling the room, a patter of feet upon the floor, someone leaving, a hushed whisper perhaps, then nothing more until her husband's soft kiss upon her lips wakened her like the prince in the fairytale, that this was indeed no longer a dream.\"\n\nEllen closed her book looking up, smiling at the various expressions upon the women's faces, many having obviously climaxed in perfect tune with the ending of her reading, others still hovering just on the edge, though no one spoke either way, the sounds of pleasure clearly filling the room, a few whispers here and there, a slick moist touch suddenly reverberating about the room, now joined by another, and then another as frenzied fingers strove towards finishing their work, or vibrators merely murmuring before, now turned to higher settings, each one now openly screaming their purpose.\n\n\"Holy fuck!\" Michelle's voice now filling the silence, \"right there baby, right there!\" Everyone's attention drawn towards her now, including Dianne's. She found herself envious, watching as Sharon knelt on the floor between her legs, her mouth gently sucking, licking, kissing her lover's split, keeping her on the very edge of orgasm, and then finally allowing her to topple over the edge as Michelle's hands grasped the side of Sharon's head, clinging to it, forcing it even harder against herself if that were possible.\n\nSo engrossed in watching this, as was everyone else, she didn't realize for a moment or so, that there was a differing touch upon herself, only then tearing her eyes away from the two women, looking down, seeing Ellen's fingers now caressing her exposed clit, the vibrator deep inside, it's humming thrills captivating the audience of her lips, her juices, now applauding in joyous rapture as Ellen's finger brought about the climatic end to her cunts performance. Dianne felt her eyes closing like the curtain upon the stage, the applause still ringing in her ears, becoming now the sound of her own voice as she cried out the last note to pleasured song her cunt had just finished singing.",
        "#\n\nIt had indeed been one of the wildest nights she could ever remember having. They had all soon after dressed, all smiling, some embarrassed by the fact that they were, including herself. But it had indeed been the most erotically charged night that many of them could remember experiencing in recent history. The enthusiasm for already looking forward to next week, this one at Ellen's place, with Dianne being the main reader at their next gathering.  She stood for a moment with Ellen out by their cars before driving themselves home.\n\n\"Well that was certainly something wasn't it?\" Ellen had said stating the obvious.\n\n\"Yes, yes it was,\" Dianne replied, still feeling the exquisite aftershocks as they continued to reverberate deep inside her pussy even as they stood there. \n\n\"Wait until I tell Bill about tonight,\" she added nonchalantly, \"I bet he's hard as a rock within seconds after I do.\"\n\n\"Tell Bill?\" Dianne stated somewhat aghast at hearing that. \"You're actually going to tell him what happened here tonight?\"\n\n\"Of course I am!\" Ellen said looking surprised. \"You of all people should know, Bill and I don't hold any secrets from one another, I tell him everything.\"\n\n\"Everything?\" Dianne said once again alarmed. \"Did...did...you tell him about the other day?\" she finally managed, now trembling, the pussy shocks finally abating as a near panic took over from them.\n\n\"Well yes, later on after he'd gotten home and we were in bed...yes,\" Ellen said now sounding a bit bewildered. \"Why wouldn't I?\"\n\nDianne didn't know why she wouldn't, or why she found the admission so overwhelming to hear. She knew her own brother, and knew just in that he'd no doubt have any worries about it, none whatsoever knowing him, but it was still the thought that he actually knew, or knew most of it anyway.\n\n\"Shit Dianne, whose idea do you think it was for me to read that particular passage tonight anyway?\"\n\n\"Bills?\"\n\n\"Yeah...Bills! He thought you, along with everyone else would enjoy it, and obviously...you did, didn't you?\"\n\n\"Yes, yes...of course I did, but you already know that. It's just that, well, I never thought that Bill would actually find...find, what we did acceptable.\"\n\n\"Are you kidding me?\" Ellen laughed. \"You can't even begin to imagine the number of times he's actually suggested, and encouraged it! Good hell Dianne, he knows the shit head your husband really is, and he also knows you, he knows you'd never go out and fool around with another man, but...he also knows that you might not struggle so much with the thought of finding relief and comfort with another woman, especially if that other woman just happens to be your best friend, and the wife of your very own brother!\"\n\n#\n\nEllen was certainly right about one thing, as was her own brother Bill for that matter. Whatever had gone wrong in her marriage, or even why that it had, she wasn't yet ready to throw in the towel just yet either. But at the same time, she also knew she was no longer content to live, or lead an almost celibate life either. Maybe it was like splitting hairs, on the one hand, she wouldn't feel like she was really cheating on him had she gone out and been with another man, yet on the other...here she was, playing and fooling around with her own sister-in-law, even though they both had Bill's approval and support in doing so.\n\nIt was yet again another emotional dilemma for her to try and work through, that and her own marriage to Steven if she could. But she knew until she found satisfactory answers for that, she could, and would no longer deny herself the needed pleasures that she had now experienced once again. She could never go back to that, not now anyway. And at least for now, she could accept what she was allowing herself to feel and experience at the hands of another woman, and perhaps even...women as things obviously had begun to progress in that direction.\n\nShe was even more pleased and relieved when arriving home to discover that Steven wasn't even home yet. It was still a bit early even for him, but she treasured the silence that greeted her as she came into the house, only then removing the egg-shaped vibrator that Ellen had given her to take home with her, experiment with, and pleasure herself.\n\n\"Try it in the tub,\" Ellen had suggested, and then explained to her what she'd meant by that.\n\nAmazingly, Dianne was still very much aroused. She had had one of the strongest most intense orgasms ever, yet here she was only a short while after having done so, wanting to again. \n\n\"Maybe Ellen's right,\" she thought to herself. \"The more you do enjoy it, the more you can and will enjoy it too.\" She smiled thinking about her own brother, how he was so very much like her in many ways, ways she hadn't allowed herself to think or feel for several years now, though thankful that he did, still was, looking out for her own welfare though it be in a very strange way perhaps.\n\nDianne soon after closed, and then locked her bathroom door. Even if Steven came home early, he would never try and enter a closed bathroom door, so she'd have plenty of warning should he arrive home.  Dianne lit a few scented candles, had turned off the bathroom light when her cell phone suddenly rang. As she'd brought her purse into the bathroom with her, as it was also her intent to keep her new found toy secreted away inside it, she quickly snatched up her ringing phone and answered it, seeing that it was in fact Ellen who was actually calling her.\n\n\"What's up? Everything ok?\" she'd asked.\n\n\"Oh just fine, just wanted to call and check on you, was a little worried about you kiddo, you seemed sort of out of it, perhaps worried a little just before you left.\"\n\nIt was true, she had been until she'd had a chance to really think about everything on the drive home, which she had done, and was now feeling better about herself and her decision regarding it, amongst everything else, and even said so to Ellen.\n\n\"In fact, I don't mind telling you, I am at this very moment about to embark on that adventure you told me to try,\" she said grinning into the phone.\n\n\"You are? Right now? Right at this very moment?\"\n\n\"Yes, I am! I am in fact standing here in the bathroom, the water's running in the tub, I'm naked, and I'm holding that marvelous little toy of yours in my hand even as we speak!\"\n\nEllen giggled, she then heard as Ellen obviously turned and said something to Bill.\n\n\"Don't tell me you just told my brother what I'm sitting here about to do!\" \n\n\"Ok, I won't, even though I did,\" Ellen giggled back even more suggestively. \"So I guess I'll let you go, so you can finish doing just that then.\"\n\nAnd Dianne nearly did, until a totally wicked thought suddenly crossed her mind. \"No...don't not quite yet anyway,\" she said sounding suddenly out of breath, but it was the mere thought of what she was about to suggest that had taken her breath away.\n\nEllen could tell by Dianne's tone of voice that something else was suddenly going on. \"Wanna tell me what it is you're thinking?\"\n\n\"Something naughty, something really, really naughty,\" Dianne said stepping down into the tub.\n\n\"Oh yeah? What?\"\n\n\"Remember the other day when you said it was easier to show me than try and explain it?\"\n\n\"Yeah?\"\n\n\"Well, maybe I can't exactly show you what I'm thinking and about to do, but you can certainly hear what that is.\"\n\n\"Oh my God...don't tell me!\"\n\n\"Don't tell you what it is that I'm now doing?\" Dianne quipped knowing perfectly well that wasn't what Ellen had meant.\n\nShe could hear the catch in Ellen's own voice when she spoke, ignoring the question altogether. \"Tell me, tell me everything you're doing, everything you're feeling while you're doing it,\" she said, \"don't leave a single solitary thing out either, or even if you do, let me hear what you're doing at least!\"\n\nDianne laughed, feeling suddenly giddy, naughty, and more than aroused. \"Right now, I'm doing what you first told me to do. I'm slipping the egg inside myself, not turning it on just yet, just putting it in.\"\n\n\"Oh fuck!\" Ellen moaned into the phone, and then Dianne heard in the background behind her the sound of Bill's voice. \n\n\"What? What?\" \n\n\"Shh, just listen, but stay quiet,\" she warned him \"Or I'll lock myself in the bathroom!  Now...go on!\" Ellen urged once again turning her full attention back to her near sister.\n\nShe hadn't stoppered the tub, so there wasn't enough water in the bath to cause her any problems while she spoke on the phone, just enough that it warmed her, comforted, and took the chill out of the porcelain as she lay there.\n\n\"Now I'm lying down, the water's running, I'm inching forward now, ahh..ahh yes, right there, it's beating against my pussy, playing with my clit, just like you told me it would.\"\n\n\"Oh my God, you're really doing this aren't you?\" Ellen said excitedly, and then held her hand over the phone though Dianne could tell that she was as she turned speaking to her brother. \"She is! She is! She's actually masturbating over the phone while I'm listening!\"\n\nDianne smiled to herself, now knowing that her own brother was very much aware of what she was doing now too, and found the thought of that oddly arousing. \n\n\"Hmm, that really is nice Ellen, sort of feels the same the way I sometimes slap my pussy when I'm playing with it, the way the water is pounding against it. Now I'm going to turn on the egg and see how that feels.\"\n\nDianne heard Ellen moan on the other side of the line, \"Fuck this is making me horny just listening to you, and Bill too!\" she added as an afterthought.\n\n\"Nice!\" Dianne responded back. \"So...hearing me playing with myself is making you hot is it?\"\n\n\"You know damn well it is,\" Ellen moaned once again. \"So much so, I'm now touching myself, just slipped my finger inside of my pussy in fact, and Bill is standing next to me, rubbing his cock back and forth against my left tit.\"\n\n\"Oh yes, yes!\" Dianne moaned hearing this. \"The egg is vibrating nicely inside me, the water is still beating against my clit, I'm holding my pussy open with my hand so that I can feel it even more directly now, fingering it...rubbing it slowly back and forth like it was someone's tongue.\"\n\n\"Oh fuck!\" Ellen groaned deeply, \"I wish my tongue was doing that to you,\" she said surprising Dianne upon saying so.\n\n\"Really?\"\n\n\"Yes, really. I'd enjoy doing that to you, licking you, tasting you,\" Ellen paused, Dianne could hear her speaking to Bill though the phone was muffled and she couldn't understand what he'd said. She did hear it when Ellen giggled. \"Bill said I could eat you anytime you wanted,\" she declared excitedly, \"And he'd even enjoy watching me do that sometime if you allowed him to do so,\" Ellen told her.\n\nAt the moment, Dianne would have allowed her own brother to go down on her as horny as she was, but she didn't admit to those thoughts as she answered. \"Oh fuck, I'd love to feel that again, it's been so fucking long since I've had anyone go down on me!\" \n\nThey continued on with their erotic banter back and forth for the next fifteen minutes. Bill had soon after begun fucking her from behind doggy-style while she knelt on the bed frigging her own clit, listening to Dianne as she neared ever closer to orgasm.\n\n\"Oh baby, we want to hear you cum, both of us,\" Ellen asked questioningly, \"can I put you on speaker phone?\"\n\n\"It was decadent yes,\" as she thought about it, her own brother wanting to hear her as she climaxed, but it was just wicked enough to nearly put her over the edge. \"Go ahead,\" she barely managed to say, already hovering, only moments away from feeling the delicious tingle of her clit, her pussy before it exploded. She heard the sudden echo as Ellen did so, in addition to that, she could also hear the sound of Bill fucking his wife furiously from behind as flesh slapped against flesh.\n\n\"Oh fuck, I'm there! I'm there!\" Dianne suddenly yelled into the phone, and heard as she did so, the likewise agonizing groan of mutual delight coming from the two of them.\n\n#\n\nNearly three days passed before Dianne and Ellen managed to schedule lunch together during the day. It had been a hectic week, but also a stressful one. Dianne had made some concerted effort to interest her husband Steven, though it had turned sour almost immediately.\n\n\"So what happened?\" Ellen asked after they'd been seated down together at the table. Dianne had only briefly informed her of the disaster, along with the aftermath.\n\n\"Well you remember that God awful outfit Steven gave me for Valentines last year?\"\n\nEllen did, \"Oh yeah, that black and red corset thing, or whatever it was? The one with the fishnet stockings and black boa feathers?\"\n\n\"That's the one!\" Dianne said nodding her head. \"Anyway, I decided to put it on for him since I hadn't worn it since then, I figured if that was what turned him on, then I was going to wear it for him, even if I thought it was ugly as hell. So I did. I had fixed him his favorite dinner, which granted he did appreciate, and then afterwards went up stairs, put on the outfit and came down into the den where he was sitting. I stood in the door waiting for him to notice me, which he did after a few minutes when a commercial finally came on, looked at me in surprise, and simply said, \"Oh baby, not tonight, I'm beat. How about you wear that for me tomorrow night? Then maybe I'll be in the mood and not so tired.\"\n\n\"Holly...shit!\" Ellen said disgustedly, \"He didn't!\"\n\n\"Oh yeah, he did. So then guess what I did?\"\n\n\"What?\"\n\n\"I stood there and began seductively taking off the fucking outfit like I was still trying to tease him or tempt him into having sex with me, he sat there watching me, but not with any sort of aroused expression on his face, more like annoyance that I wasn't willing to wait until the following day. When I finally had taken everything off, and stood there in the nude, I then reached down, gathered everything up and tossed it at him. You should have seen the look on his face when I did that. I then told him that if he ever wanted to see that outfit again, he'd have to wear it himself. Needless to say, I locked the door to the bedroom, and he ended up sleeping in the guest room where I intend for him to continue sleeping for a while until we either work things out, or call it quits!\"\n\n\"Good for you!\" Ellen said happily, laughing. \"God, I wish I'd been there to see that, I can just imagine what he must have thought when you stripped just before throwing it at him.\"\n\n\"Well, it was funny when I thought about it afterwards, but it certainly wasn't funny at the time. But I have to tell you Ellen, I'm beginning to wonder if there isn't something more that's been going on. I haven't figured it out yet, but I will, especially now that I'm suspicious about a few things that haven't been adding up yet. But they will, I know eventually they will.\"\n\nThey soon after finished their lunch together and then walked out to their cars which they'd also managed to park side by side there in the lot of the diner. \"Heading back into the office?\" Ellen asked.\n\n\"No thank God!\" Dianne smiled. \"I've got one house to show this evening, so I'll busy myself preparing for that at home. What about you?\"\n\nEllen checked her watch, \"Well I know David isn't expected back until after two, even told me to take a long lunch today since he wouldn't have the rest of the information we're working on for his proposal until then, so I still have another forty-five minutes before I have to head back.\"\n\nDianne couldn't explain it, but she suddenly felt aroused, the sexual tension between them almost immediate. \"You thinking what I'm thinking?\" She asked.\n\nEllen grinned, \"Yes, I am...but I have been ever since that night on the phone,\" she said honestly. \"Just wish we really had more time to go someplace, but it's basically the same distance to your place as back to work, and I'd never make it back in time either way.\"\n\n\"Yeah, I know damn it!\" Dianne said wishfully resigning herself to the fact that she'd just have to stay horny until she could get home and do something about it herself. Which is when she felt Ellen reach up, cupping one of her breasts though glancing about the parking lot ensuring that no one was watching or could see them. \"What are you doing?\" Dianne giggled unexpectedly.\n\n\"Being naughty,\" came the simple reply. \"Always wanted to do something naughty wicked in a public place, but just never got around to it.\"\n\n\"You mean to tell me that Bill hasn't managed to fuck you in an elevator or someplace like that yet?\" Dianne chuckled, though half moaning at the same time as Ellen continued caressing her breast, even though it was through the material of the blouse she was wearing, along with her bra.\n\n\"Not yet, but after I tell him about this, I'll bet he'll be out searching for locations!\"\n\n\"I don't doubt that for a minute!\" Dianne agreed, and then suddenly a thought came to her as she noticed Ellen stood with her car keys in hand. \"Give me your keys,\" she said suddenly, which Ellen did without questioning, though her look was certainly curious. \"Just keep an eye out for a moment,\" she added.\n\nDianne had already noted the fact that no windows looked out directly towards them from the diner as they'd parked around back. Even someone driving by would only see what would appear to be two women standing there chatting between their two cars. Taking another last quick glance around, Dianne lifted her already short dress, showing Ellen in the process her pantyhose, which she pinched with her fingers pulling the material away from herself, then pressing the car key against them, and then into them tearing a small hole which she then quickly made larger by ripping it.\n\n\"What the hell are you doing?\" Ellen finally did ask, though once again looking about as she did so.\n\n\"Making it easy,\" Dianne grinned. \"There, now you can finger me!\"\n\nAlmost immediately Ellen began doing just that, with her back to the building, sandwiched between their two cars as they were, they were somewhat shielded as Ellen continued to look over Dianne's shoulders behind her in the event anyone else came out into the parking lot, though there weren't all that many cars that had parked close by where they had. \n\n\"God you're already wet!\" Ellen announced unnecessarily as she slipped her middle finger in and out of her friends hot slick cunt.\n\n\"Tell me about it,\" Dianne moaned pleasurably. \"God Ellen, I haven't been finger-fucked like this since high school!\"\n\nEllen laughed, \"well sweetie, I haven't finger-fucked anyone since high school either!\"\n\nDianne shot her a surprised look. \"Sounds like you need to tell me about that sometime,\" she said breathlessly as Ellen's finger now twiddled her sensitized little clit, working it back and forth, making her weak in the knees.\n\n\"Yeah, I will,\" she spoke nearly as breathless, though concentrating now on what she was doing, still watchful that they weren't being observed or discovered.\n\n\"Fuck, I'm already close!\" Dianne announced moments later. \"But after I do, then it's your turn!\" she told her.\n\n\"Damn fucking right it is!\" Ellen giggled expectantly. \"At least I'm not wearing any pantyhose!\" she informed her, which Dianne had noticed earlier she wasn't. \"Just wish I could also suck your tits too!\" she said her voice filled with lust and excitement.\n\n\"Oh fuck yeah, do it!\" Dianne said rapidly unbuttoning her blouse, and then popping the front of her bra open freeing her tits.\n\n\"God this is insane!\" Ellen laughed pleasurably as she leaned forward capturing one of Dianne's breasts in her mouth sucking it.\n\n\"Yes it is! Wonderfully so!\" Dianne spoke, no longer really caring if anyone could see them at this point, actually finding the thought of that additionally stimulating, wondering what someone might think, or wonder should they in fact actually notice them.\n\nEllen switched tits, now sucking the other, the subtle switch for whatever the reason being the trigger to the climax she'd been hovering on having, suddenly seeing stars, the exquisite pleasure of release happening all at once.",
        "\"Oh yeah, come baby come!\" Ellen said feeling the sudden extra moisture as it filled the cavity of her near-sisters cunt.  Dianne was, shaking almost uncontrollably, hands reaching out to steady herself, uncaring now if anyone could see, her orgasm far too intense to ignore or in worrying about actually being discovered.\n\nSeveral long precious moments later Ellen released her, stepping back slightly, once again surveying their surroundings, assuring them both that nothing had changed, other than the fact that Dianne now stood there, her breasts bare, pantyhose ripped and torn, and a small trickle of fluid running down the inside of her leg.\n\n\"Now it's your turn!\" Dianne announced, reaching forward, lifting the hem of Ellen's short skirt up, and then yanking down almost to her knees the tiny black thong she was wearing.\n\n\"Fuck this feels wicked!\" Ellen near screamed in her excitement. \n\n\"Looks pretty damn wicked too!\" Dianne grinned reaching forward with her own hand, placing it between her dear friend's legs, finding her equally as wet if not even more so than she had been.\n\n\"Not gonna take me very damn long either!\" She said seriously. \"Damn near came when you did!\" she added hotly.\n\nAnd it didn't either. No sooner had Dianne placed her right hand, palm flat against Ellen's mound, middle finger worming excitedly inside her, she came, almost spasmodically, humping herself against Dianne's hand, thrashing wildly for several moments, her low deep-throated moan of release accompanying her pleasure. Only then did she open her eyes swimming back into reality and gasping in surprise, causing Dianne to turn in the direction she was looking, both of them now seeing the equally surprised look on the gentleman's face who had just reached his car only two spots away. Giggling, they embraced, quickly kissing, once again looking over towards the man who continued to stand there, now smiling however, no doubt thanking the Gods for whatever reason at his luck, and jumped into their cars. Dianne didn't even bother to cover her breasts, taking some delight in their exposure, even turning to face the guy directly, smiling, and giving him a quick titty-shake before jumping behind the wheel of her car pulling out of the lot right behind Ellen.\n\n#\n\nIt had felt like an eternity before they had all gathered together again as a group over at Ellen's place. And though he had pleaded, promising to remain sequestered down in the basement, hoping to perhaps hear something through the vents, Ellen had kicked Bill out of the house for their weekly meeting, much to his chagrin, though she had sent him off to a local nudie bar with a fist full of dollar bills.\n\n\"Have fun, come home horny and fuck me, because I will be!\" she had told him sending him out into the night.\n\nEveryone agreed that they'd all been anxiously looking forward to the evening, especially now with the new set of rules that had been put in place. There was only a moment or two of uncertainty as they arrived, each one wondering if indeed the previous week had been more of an anomaly as opposed to being something they would actually continue to observe and to do now whenever they gathered as a group. But as each one arrived, with Ellen as well as Dianne along with Michelle and Sharon already naked, each woman quickly did the same, shortly after producing whatever toys they had brought along with them, along with their books.\n\nOnce again Laurel shared a few delicious excerpts of some of the site's stories she had found, using them as an appetizer of sorts for the main course which was Dianne's turn to do this evening, and which she had found herself openly looking forward to.\n\nMost surprising of all perhaps was Margaret's own personal choice of pleasure device, which both amazed and amused everyone there, though many afterwards commented and shared the fact that they too had experimented on occasion with what she had shown them shortly after everyone was comfortably situated.\n\n\"Back in the day,\" she'd announced causing everyone to laugh, \"when I lived and worked on my father's farm, we didn't have things like what they have now a days, or even if they did, we certainly weren't aware of them,\" she'd begun saying. \"But we were just like a lot of women regardless of that, sexually curious and experimental, which is when I discovered the delights of using these!\" Which is also when she opened her purse removing a zip-lock bag, then retrieved what appeared to be a rather thick, long very dark green cucumber.  \"Best damn dildo I've ever used,\" she said unashamedly.\n\nThe one big advantage in meeting at Ellen's was the amount of space. With several long comfortable couches, most everyone sat beside someone, only Sharon opting to position herself on the arm of one couch, though she'd done so purposely, having first placed a riding dildo on the arm of it before mounting it, soon after stuffing it fully deep inside of herself, which she sat, slowly rocking back and forth on as Laurel read hot little excerpts. Margaret, much to everyone's delight, began working the enormous looking cucumber in and out of herself as well, many watching as she did so, fascinated that she could and indeed would stuff most if not all of it into herself sometimes leaving it there, allowing it to slowly slip out of her on its own accord before easing it back inside once again, repeating the process.\n\nAlso surprising as Dianne and Ellen observed, once again sitting side by side one another with Laurel on one end, was Sylvia who had chosen to half sit, half kneel on the floor instead in front of Laurel, and had almost from the very beginning as Laurel had begun reading, chosen to begin toying with her pussy, delighting her with her fingers while she read.\n\nEven Michelle had taken over for Margaret, now working the woman's cucumber in and out of her cunt, enjoying the slippery sounds she began making as Margaret's pussy began producing a nearly over abundance of liquefied nectar as Michelle did so.\n\n\"Ok, time for everyone to read one of their own special passages they've brought along to share,\" Ellen announced excitedly when Laurel had finished reading what she'd brought along with her for the night to get things started. \"Then of course it will be Dianne's turn to read a full chapter to us while we all masturbate listening to it.\"\n\nShe soon sat down again next to Dianne, turning towards her as she did so. \"And don't think you're having it easy tonight either,\" she half whispered. \"I have a surprise for you while you're reading,\" she told her, causing Dianne to feel a surge of additional excitement to throb deep inside her sex.\n\n\"What?\"\n\n\"Sorry sweetie, you'll just have to wait and see,\" Ellen said smiling, and then turned her attention back towards the group as they one by one read their own favorite passages from whatever books they were reading, taking time out in between for refreshments, or simply for quick naughty moments in pleasuring one another or themselves.\n\nFinally it was indeed Dianne's turn to read from her book, having chosen \"The story of O\" in doing so much to everyone's delight. Opening her book, Ellen slid from the couch where she'd been sitting next to her, suddenly positioning herself between Dianne's legs.\n\n\"Surprise!\" she grinned suggestively, then parting, spreading Dianne's legs even more widely.\n\n\"Oh my God!\" Michelle suddenly exclaimed, \"Maybe my sister really is gay!\" she squealed delightedly.  \"Too bad she's not into incest too!\" she added receiving a nervous chuckle from around the room, though none took her all too seriously, except for Ellen herself perhaps.\n\n\"Don't you wish,\" was her response, now turning once again facing her friend, peering directly at the puffy swollen lips of her cunt. \"Now, just so you know, if you quit reading, I quit licking,\" she told her. \"So...whenever you're ready!\"\n\nShe read, though she found it far more difficult in doing so that she'd initially thought after Ellen had announced her intentions. It had been a long time, a very long time since she'd felt the touch of another person's tongue on her clit, the sensation exquisite, beyond torture as she sat reading, feeling the sensation of Ellen's tongue happily lapping away at her, periodically sucking her softly, tenderly, especially when she came to and read specifically explicit passages from the book. \n\nJust hearing the way Dianne read, obvious lust and desire coming through the tone of her words, added to everyone's increased desires, the added spectacle of seeing Ellen as she hungrily licked, sucked and tickled Dianne's clit while she struggled through some semblance of sanity, wavering on occasion, whereby Ellen would indeed stop, waiting for Dianne to once again collect herself before continuing on. \n\nThe sexual atmosphere went far beyond any that they'd even experienced the week before, Sharon soon after replacing the rubber dildo she'd been riding, putting it back into the harness it was designed for, strapping it onto herself, and then standing against the same arm of the couch she'd been sitting on while Michelle now balanced upon it, giving Sharon access to her cunt while she fucked her from behind. But not to be left out, she in turn now leaning over even as Sharon slid the fake prick in and out of her juicy split, now teasing and tickling Margaret's pussy with her mouth, much to the woman's delight as she excitedly exclaimed to everyone present that it had been well over twenty years since anyone had done that for her.\n\nEven Laurel had rolled off of the couch onto the floor, her head quickly buried between Sylvia's legs, as was Sylvia's now between hers as they tangled together their on the floor in an exotic little sixty-nine, though each including the vibrators they had brought along with them, now pummeling one another with them all the while continuing to lick, suck and tickle one another's clits simultaneously.\n\nDianne was finding it harder and harder to concentrate, the words sometimes blurring on the page as she read, the feel of Ellen's tongue, lips and fingers playing with her cunt almost too much to bear, finally tossing the book off to the side, no longer capable of continuing, lifting Ellen up as she did, drawing her downwards upon her.\n\n\"My turn please! My turn!\" she whimpered and then sighed pleasurably as Ellen climbed up onto her face sitting down. Reaching up, she cupped Ellen's breasts toying with them, rolling her hard taut nipples between her fingers even as she rolled her near-sister's clit with her tongue and lips in much the same way. Ellen groaned, thrashing, rotating her hips in conjunction with that, essentially fucking her face while she did so.\n\nAll about them the sounds of heavy, harsh breathing, pleasures sighs, moans and groans of every depth imaginable. The occasional soft humming purr of a toy as it added to pleasures already given, or the juicy wet slurpy sounds of a woman's cunt liquefying as fingers played boldly in the cream they created, or in the smack of hands slapping ass, or lips sucking clits making deliciously erotic little popping sounds as they did so.\n\nDianne lost track of the number of times she had climaxed, Ellen herself doing the same, switching positions with her, sometimes reaching out to fondle or probe others nearby. In time, though slowly as it seemed, the evening gradually wound down, though Ellen already alerting everyone to save something for the finale, before they departed for the evening, heading for their respective homes.\n\nEllen soon after gathered everyone in a circle on the floor. \"Like we sort of discussed and talked about last time, I thought it might be a good way to end the night, something fun that will continue to bond us all together.\" Everyone watched quietly as Ellen then picked up an egg timer, setting it for ten minutes time. \"Now then, for the next ten minutes, everyone is to place your right hand into the lap of the person sitting next to you. It doesn't matter if you do, or don't climax while we do this. If you can, great, enjoy yourself, but even if you don't, the main purpose of this is to simply unify us intimately as an entire group together.\" Ellen then began the timer, taking her place surprisingly between her sister and Sharon forcing them to scoot apart, and then slipping her hand down between the legs of her own sister.\n\n\"Surprise!\" she grinned simply.\n\n#\n\nBill nearly fell off the stepladder he was standing on. He'd just finished splashing his spunk against the window actually watching it as it ran down the pane, he had stood outside most of the evening peering in from his vantage point, all inside oblivious to his presence as he'd watched carefully from a much higher window than anyone really noticed or even realized that was there. He'd almost lost his balance trying to stuff his prick back inside his pants, and then hurriedly running back down the street to where he had parked his car earlier before anyone emerged from inside the house. He didn't want to risk angering any of them, especially his own wife, vowing to keep this one small little secret to himself in hopes that when it came around to Ellen's turn once again, he would enjoy once again, another very erotic, voyeuristic little moment watching them.\n\n#\n\nAs they had all agreed in the very beginning, if there were ever two or more of them that couldn't make it to the next meeting, they would either reschedule it for the first available day thereafter, or cancel it entirely until the next week, whichever was easiest.\n\nSo it was unfortunately that Laurel had another commitment she had to keep, and Margaret had been called away to attend to her sick sister. They had decided to cancel until the following week because of that, though Dianne had purposely failed to inform Steven they had done so, though she'd hardly spoken to him at all in well over a week now as it was.\n\nKeeping herself busy instead, she had purposely scheduled an open house with a client for that very evening.  When she finally began the drive home, she realized that the bowling alley that her husband went to on Wednesdays was just around the corner. More out of curiosity than anything, she pulled into the parking lot, quickly searched for his car, but didn't find it. Parking her own car, she entered the building, seeing as she did so that most of the teams had already finished, many of the guys even then heading off into the bar for an after bowling drink. Spotting one of the men on Steven's team as he entered the bar, she followed in after him.\n\n\"Jeff? Hey Jeff!\" she called out finally getting his attention. He turned at the sound of her voice, his face suddenly ashen in color as he saw her and knew who she was.\n\n\"Ah...hi Dianne, what brings you out here?\" he asked looking most uncomfortable.\n\n\"I'm looking for Steven, is he here?\"\n\nAlmost immediately she knew something was up as he took too long trying to come up with something to say that would make any sense. \"Gee, I don't know, I think he was here a few moments ago, but I don't know where it was he headed off to. Maybe he went home,\" he suggested finally deciding that was the best answer he could give her.\n\nShe knew better however. Steven NEVER came home early on a bowling night, especially when he could stay after with his buddies and drink beer instead.\n\n\"Ok, thanks,\" she said letting him feel like she'd accepted his answer. \"Just wanted to let him know I was working late tonight,\" she offered by way of her own false explanation, seeing the look of relief in the man's eyes. \"Maybe he's using the restroom,\" she now added again, \"but I can't wait to tell him that, so if you wouldn't mind,\" she left off saying, and then turned hurrying out of the bowling alley after receiving Jeff's assurance that he'd pass along the message.\n\n\"I'll bet!\" she told herself as she walked out the door. \"More like tell him how close a call he'd just escaped,\" she continued thinking to herself, and then stopped just before reaching her car. She remembered at that moment, that when the weather was bad, Steven had told her about parking across the street in the covered parking lot that they were allowed to use when that particular company's business day was done. Acting on a hunch, Dianne crossed the street on foot, took a quick glance on the first of three levels of parking, saw only one or two cars still parked there, neither of which was her husband's.  She almost turned around, and then decided to go ahead and check the second level as it too was enclosed and covered, unlike the third. Silently, she made her way up the short flight of steps to the second level, peering around the corner of the cement wall before fully revealing herself, and not at all too surprised to actually see her husband's car parked there, and directly next to it, another car, this one a small little sports car convertible.  Parked off at an angle away from her, Dianne managed to slip quickly from one cement support beam to another, effectively concealing her presence until she was standing just a few feet and behind where her husband's car was parked. \n\nDianne looked, but at the moment it appeared her husband wasn't there, no movement came from within either car. Then oddly enough, she spotted her husband's bowling bag sitting on the trunk of the car, not in it, where he always kept it. She knew immediately that something was amiss, his ball was one of his prized possessions and he had spent a small fortune on it, so it wasn't something that he would have so easily forgotten to secure away. \"Not unless he had other things on his mind at the time at least,\" she thought to herself.\n\nDianne had very nearly stepped out of the shadows from behind the pillar when suddenly she saw someone sit up in the back seat of her husband's car. It took only a moment more to clarify who it was, and what was going on as she saw the woman bouncing furiously up and down, her breasts bouncing obscenely as she did so. Then just as quickly as she had appeared, she then disappeared. Taking that moment and opportunity, Dianne had already formulated a revengeful little plan, lowering, she quickly moved in between the two vehicles, removing a small pocket knife that she kept inside her purse, she first punctured both sets of tires on either side of her, only then being able to hear the sounds of their coupling as they fucked in the backseat of her husband's car. \n\n\"Tell me I'm your man!\" Steven cried out, \"Tell me how good and how big my fucking cock feels inside of your hot tight little cunt!\"\n\nDianne wanted to puke as she heard the woman repeat word for word everything Steven asked her to say. She quickly scurried around the side of the woman's car however, and then punctured each one of those tires as well, making her way back around to the driver's side of her husband's car, and then doing the same to those. Once again she found herself crouching back and behind her husband's car, reaching up for and silently retrieving the bag containing his bowling ball.\n\n\"Oh yeah baby!\" Came her husband's voice once again, \"That's it, fuck my stiff hard cock, tell me how much you love fucking my stiff hard cock!\"\n\nDianne had heard more than enough, grabbing the bowling bag as both cars slowly settled down onto their rims, she walked back across the street to her car, then dialed Ellen's phone.\n\n\"He sweetie, what's up?\"\n\n\"Well, for one thing...Steven.\"\n\n\"What? I'm not following you.\"\n\n\"Well, at the moment he's banging a woman in the backseat of his car in the parking lot across the street from the bowling alley.\"\n\n\"You've got to be shitting me.\"\n\n\"No, I'm not. It's for real. But there's something else that I just realized.\"\n\n\"What?\"\n\n\"Remember that blond with the ginormous tits at our wedding?\"\n\n\"Yeah?\"\n\n\"Well that's who he's presently fucking. Remember how neither one of us could figure out who she was? Well, I think I just figured it out, that's the gal Steven was dating for a while, until she off and married some ugly rich guy. He even told me about her once, so I'm pretty sure that's who she is.\"",
        "\"Holy shit...what are you going to do?\" Ellen asked.\n\n\"Well, actually, I need you to do something for me, is Bill there? Or is he out on patrol?\"\n\n\"He's out,\" Ellen said grinning, already starting to get an inkling of what Dianne was up to.\n\n\"Do me a favor then, would you mind getting word to him to run a license plate for me?\"\n\nDianne gave Ellen the number, which she'd scribbled down. \"Ok, got it. Now what?\"\n\n\"The moment I hang up, get a hold of him, tell him where he can find Steven and his friend here, oh...and they're gonna need a tow truck, two of them actually, as they're both sitting on four flat tires. Also, there was a small accident in addition to that.\"\n\n\"What kind of an accident?\" Ellen asked.\n\n\"Something about a bowling ball crashing into the window of the woman's car.\"\n\n\"Just be careful,\" Ellen cautioned her, \"You don't want to get yourself hurt.\"\n\n\"No worries, for one thing, they'll have no idea what happened or who did it as I'll be long gone before either one of them can put on enough clothes to come out and see what the hell happened. But I'll wait for five minutes before doing it, that should give you enough time to get word to Bill as to where I'm at, and where he can expect to also find Steven and his friend.\"\n\nEllen laughed, though she also felt bad for her friend. \"God sis, I'm so fucking sorry!\"\n\n\"Don't be, I should have seen this coming for one thing, obviously it's probably been going on ever since we got married. I'd always been suspicious that Steven had married me just to get back at whoever the hell this bimbo is, and now I'm fairly certain, that's just what he did, so as far as I'm concerned, good riddance to bad rubbish!\"\n\n#\n\nWith Steven now out of the way, a week later Dianne offered to hold their book club readings at her house for the first time. Everyone was anxious once again in getting together, and there was even a new member who'd be joining them who Margaret had invited along after getting it approved with the group.\n\n\"She is aware of what goes on here yes?\" Dianne had asked her over the phone.\n\n\"Honey, Doris and I go a long ways back together. She and I were finger-fucking one another long before you were even born, so yes...I daresay she has a pretty good idea since I've explained everything to her. And she's very much looking forward to becoming the newest member of our little group.\"\n\nDoris was indeed a pretty sexy looking gal for her age, and the group as a whole were thrilled to see her and meet her after she'd arrived.\n\nJust before things started, Ellen pulled Dianne off to one side. \"Hey kiddo, wanted to ask you something.\"\n\n\"What?\"\n\n\"You don't happen to have any tall step ladders laying around outside do you?\"\n\n\"No why?\"\n\n\"I'll tell you later,\" she said winking at her."
    ],
    "authorname": "Many Feathers",
    "tags": [
        "lesbian"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/naughty-girls-club"
}