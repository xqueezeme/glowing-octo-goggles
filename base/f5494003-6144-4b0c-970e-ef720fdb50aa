{
    "title": "Serve and Volley",
    "pages": [
        "Copyright \u00a9 PennameWombat June 2021\n\nThe author asserts the moral right to be identified as the author of this work.\n\nThis is a work of fiction. Names, characters, businesses, places, events, locales, and incidents are either the products of the author's imagination or used in a fictitious manner. Any resemblance to actual persons, living or dead, or actual events is purely coincidental.\n\nI'll admit it, this is my back-up story. The original story I'd planned to submit wasn't really working for Nude Day. So... this one. That said, I think it's a sweet little tale of unbridled lust.\n\nI hope you enjoy it. Happy Nude Day!\n\nTags: Nude Day 2021, Ass to mouth, Cum Swallowing, Cunnilingus, Female exhibitionist, Girl on girl, Outside, Public, Short skirt, Threeway\n\n*****\n\nMaking Plans\n\n\"Uh, hey, hello Vicky.\"\n\n\"Hey, Nick. Whatcha doing Saturday? About one?\"\n\n\"Uh, Satur... that's... the 14th. Well, it's 11 a.m. on Wednesday and I haven't a clue what I'm having for lunch today. So... Saturday afternoon has to be wide open...\"\n\n\"Wanna play tennis?\"\n\n\"Sure. Should be a nice day. Not an extra hot week and hardly a cloud in the sky. But against who?\"\n\n\"Me! Think I'm setting you up with Jeanine? She does have bigger tits than me and you had your eyes all over them on the Fourth...\"\n\n\"Oh, hey, uh... well, yeah, I noticed them. I am a twenty-something boy. Rude, crude and no redeeming social value. But yours I really...\"\n\n\"You just liked that MY teeny tiny twenty-something boobs weren't in a bra.\"\n\n\"Uh, yeah. Wha? Tiny? No way. But, uh, they were...\"\n\n\"Nice?\"\n\n\"No, not nice. Very, very nice.\"\n\n\"Ah, I knew you could sweet talk a girl.\"\n\n\"Anyway, I'd love to play you. But... your trip? Your family?\"\n\n\"They say you can't choose your relatives. But you CAN change how much time you spend with them...\"\n\n\"Uh, well, okay, then. Saturday. 1. Anywhere you prefer?\"\n\n\"A park? I don't want to go to the racket club. Too many kids and classes and...\"\n\n\"And I'm not a member. I'm a prole.\"\n\n\"I am a member. But, don't like most of the people there.\"\n\n\"Ohh kay... hmm... ah, I got it. You know where Reservoir Park is? On University Street and South Temple? They have a couple of courts that aren't great, but no potholes and plenty of trees in the park. And I've rarely seen much of a crowd.\"\n\n\"I can find it. We have a plan!\"\n\n\"Cool. But why are you---.\"\n\n\"Space and time only exist from 1 p.m. on Saturday. See you then! Dress to impress and don't be late! I won't be.\"\n\n\"1 it is, Vicky. I will.\"\n\n\"Cool, Nick. If I call you again it'll be the one phone call I'm allowed after being arrested for hacking a dozen people to death with a machete! Send lawyers, guns and money. See ya Saturday!\"\n\nHe stared at his suddenly disconnected cell phone.\n\nReservoir Park\n\nNick parked his motorcycle on University Street at 12:45. And his supposition had been right. The tennis courts were slightly obscured by low bushes and trees on the 13th East side but from here it was a clear view and both were unoccupied, no doubt helped by it being mid-July so the sprawling University campus that began on the other side of this street was largely empty and the closest neighborhood was mostly commercial to service the University and the nearest old houses had been carved into student hovels so few families. A few adult couples sat on blankets sunbathing or in any of the plentiful shade.\n\nHe looked around and didn't see Vicky. He'd arrived intentionally early to both avoid being late but to also calm himself. His car had chosen an hour ago to throw the serpentine belt and after judging the time he'd decided it would have to wait until Monday. The forecast claimed the chance of rain was actually negative and the brilliant blue sky didn't challenge that.\n\nSo the Yamaha. Fortunately it had a rack where he'd carried sports bags and such any number of times. Since he hadn't been expected to pick Vicky up he hoped this wouldn't be a detriment.\n\nBut to what, he had no idea. He looked around again. He didn't know what kind of car Vicky had. But that was only one of the things he didn't know about her, the full list significantly longer than what he did know about her.\n\nFive-seven or close to, a few inches shorter than him, light brown hair not far from his color but about shoulder length. Cute, no, maybe, beautiful? He'd tagged along with his friend Frank to a Fourth of July BBQ and Vicky had likewise tagged along with her friend Jeanine. Per the phone call, Jeanine's chest entered a room a couple of minutes ahead of her but as soon as he'd seen Vicky he'd largely forgotten about that statuesque beauty and her inimitable rack.\n\nVicky's chest was certainly impressive and she'd indeed been braless and in a midriff-baring tank top with extra-large armholes that all meant it wasn't intended for modesty. And her tanned legs down to her white sneakers were entirely exposed in denim shorts that were cut so the exposed bottom swells of her ass cheeks merged with the tops of her thighs.\n\nNot that her firm body offered any reason to object to her choice of clothing.\n\nFrank and Jeanine had some sort of relationship through their jobs so it had provided an excuse for all four of them to meet. He and Vicky had wandered off but their discussion had been light but the attraction had been immediate and mutual. She worked in a... bank... no, some sort of financial thing, but she'd decried interest in discussing it in detail and so he'd reciprocated.\n\nThen Jeanine had insisted the two of them had to leave, another engagement. He'd gotten Vicky's cell number but she'd said with a morose tone she was off on a trip to family until the end of the month but she'd definitely be in touch after. Neither of them had been overly demonstrative but their light touches on bare arms and backs had been sufficient. He'd resolved to be patient. No other relationships were on the horizon and online hookups had lost their charm even with the short time he'd spent with Vicky.\n\nAnd then, the unexpected phone call.\n\nHe'd just rehooked the bungees to his bike's rack when a car pulled alongside. It had the familiar 'U' placard and until the rear passenger door opened he didn't pay it much attention.\n\nThen he saw Vicky's head rise above that door.\n\n\"Hi,\" she said brightly, \"just grabbing my stuff.\"\n\nShe ducked back down and the level of tint on the window again hid her. He saw a racket bag and a little sports bag hit the sidewalk as he took a step in that direction. She stood and pushed the door closed. The car sped off, Nick thought the driver had gotten his next passenger and time was money.\n\nThen he didn't care.\n\nShe walked quickly and met him and rose on her toes and kissed him on the cheek. Then she hugged him, her cheek against the top of his chest.\n\n\"Ah,\" she said softly, \"thank you.\"\n\nHe put his arms around her and finally landed on the bare small of her back. She had a loose, barely-there tank top even skimpier than what she'd worn on the Fourth but this time over a sports bra and a tiny white skirt and plenty of bare flesh between. His grip was loose until his prick informed him that her hip was pressed against it. Pressed with some force and clear intent if the slight movement of that hip was any indication. She leaned her upper body back so she could look up, her hip stayed in place.\n\n\"If I get all your blood there, and feels like it'll take plenty,\" she said with a broad smile, \"won't be any left for your legs.\"\n\n\"Well,\" he said, \"let's really encourage it.\"\n\nHe slid his hands onto her ass but kept them on top of her skirt and pressed. Her arm flew to the back of his head and this time her kiss was on his mouth.\n\nAnd it wasn't soft. Her lips and then her tongue were insistent and after a moment he opened the gate to let the invader in. It was a brutal attack, her tongue was fast and forceful and her hip forced his brain to split its attention. He kneaded her ass cheeks through the thin cloth of her pleated skirt. She finally broke the kiss and rubbed her hip in a tight circle against his raging but constrained erection.\n\n\"I think you're nicely warmed up,\" she said with a slight hoarseness, \"at least I am.\"\n\nHe squeezed her ass cheeks with some force and she purred. Then she led them to disentangle.\n\n\"Nice bike,\" she said as they gathered their bags for the short walk to the courts.\n\n\"Car picked this morning to shit the bed,\" he said and she chuckled.\n\n\"I like riding on 'em, just get a bit handsy sometimes when I do...\"\n\nShe caught her tongue between her lips and he gave a silent laugh.\n\n\"Only one helmet,\" his voice conveyed disappointment.\n\n\"Not required in this state,\" she said brightly. He laughed. She was right about that.\n\nHe had his racket and had just opened a new can of tennis balls he'd bought that morning when he looked at her. The slow relaxation of his cock was immediately reversed.\n\nShe'd pulled off the tank top and her back was to him and she was bent at the waist with her hands in her sports bag. The skirt that had barely reached her thighs was hopelessly overmatched and it was abundantly obvious the skirt was the only cloth between her feet and the bra. Then she shimmied her hips, grabbed her racket and stood and turned.\n\n\"Ready to play?\" Her eyes glittered before she ran off to her side of the court.\n\nHe'd won the first set, six-four. The first two games had mostly been a lark but the third game had transitioned. An overheard mention of tennis on the Fourth had launched them into easily conveyed histories that meshed like cogs. With few words needed, they'd both recalled collegiate varsity level skills with the lowest rungs of the pro tours just in reach... but the real money likely not so, due to matched combinations of not-quite-there talent and solid academic chops that meant more prosaic careers, hers in finance and his in engineering, made for surer futures. Since, both had mostly fallen away from playing because local tournaments didn't excite either and their various friends couldn't offer them proper challenges.\n\nThey stood closely together and drank from their water bottles; sweaty, loose strands from her ponytail stuck to her upper back. Bare, sweaty arms pressed together.\n\nWhere'd you learn to play serve and volley that well? Not so common anymore.\"\n\n\"A girl's gotta have a few secrets,\" Vicky smiled, \" Ready to lose the second set? I spotted you that first one.\"\n\n\"Says you,\" Nick stuck his tongue out at her.\n\n\"Keep that pose in mind,\" she said and quickly thrust her hips forward and flipped the front of her skirt up with her hand and definitively confirmed that she shaved her pubic hair.\n\nThey both looked up. Four women, all somewhere in the mid or late thirties and up, had just arrived. Three were in tennis skirts a bit more sedate than Vicky's and the other in shorts, all in sleeveless tees. Nick and Vicky nodded to the quartet and received nods back. She moved and quickly kissed him on the mouth.\n\n\"My serve,\" she grabbed the balls and ran to her side.\n\n\"One break, coming up,\" he said loudly enough for the quartet to laugh.\n\n\"Only love you'll be getting will be your score,\" was greeted with cheers from the spectators.\n\nMidway through the first game he spared a glance at the four women. The quartet were fit and had solid skills, but well below the competitors they watched. Their expressions conveyed admiration but a growing level of... something. Then that something solidified to shock.\n\nVicky had held serve, albeit after a couple of rounds of deuce and the four spectators had hooted and clapped. At the end of the game, rather than grabbing a ball between her racket and foot as she'd been doing, she bent at the waist with her back to the other court. Three mouths fell open.\n\n\"Told ya,\" a thin, strawberry blonde said as she pointed to a friend with light brown hair across their net, \"you should do that, Sherry. You've got the best ass.\"\n\nVicky laughed. Then she won the second set in a tiebreaker. More cheers from the onlookers.\n\nBy five-five in the third set the four women had mostly quit playing and cheered the singles match along. Sherry had indeed shucked her panties off, her three friends had stood around her and Vicky had given her a thumbs-up as she showed them to the younger woman.\n\n\"Call it a draw?\" Vicky asked.\n\n\"Oh, boo,\" the chorus said, \"kick his ass!\"\n\n\"But if I do that,\" she turned to them, \"he won't want to fuck my brains out! And I've had a terrible, terrible week and I need more than my vibrator tonight!\"\n\nFour shocked looks. Nick blinked. Vicky looked at him.\n\n\"You do fuck on the first date, right?\"\n\nFive faces looked at him with some intensity.\n\n\"This first date,\" he said in as firm a voice as he could muster, \"you better believe it. Ok, draw.\"\n\nVicky laughed and rolled the balls toward their bags. The four spectators offered applause and light-hearted jeers. Vicky flipped the rear of her skirt up as she walked away from them and Sherry put two fingers in her mouth and offered a wolf whistle and Vicky shook her hips as she set her racket on its head and leaned the handle against the chain link fence.\n\n\"I am sopping wet,\" Nick said and pulled his tee shirt off. Sherry whistled again but it looked like the four were shaping up to resume their doubles play as he bent to pull a small towel from his bag.\n\n\"If you can do THAT,\" Vicky said, \"so can I.\"\n\nShe grabbed the bottom hem of her sports bra and whipped it off. Nick's mouth froze slightly open as two beautifully round breasts bounced for just an instant. Her areolas were moderately pink and her large and already-erect nipples were just darker, but not quite red. She had no need of a bra unless she wanted to obscure those lovely dark pink treats. And her choice of tops the two times he'd seen her made clear for casual dress she had little interest in doing so. An attitude he heartily endorsed.\n\n'Natural,' ran through his mind, 'totally.'\n\nHer friend Jeanine's tits flashed through his mind. Her shirt on the Fourth had offered plentiful cleavage and Nick was reasonably certain hers were natural as well. But any further thought of Jeanine disappeared.\n\nVicky slammed into him, her left arm went to his neck and her right around his back just above his waistband. Her nipples pressed tightly into his body and as it had before her tongue's attack was a lesson in ultra-violent brutality. Her skin was covered with sweat, as was his.\n\nForewarned being forearmed, his retaliation was vicious. He ignored her back and both hands initially landed on top of her skirt but as soon as she nudged her thigh against his miserable shaft he pulled the cloth up and landed on her bare ass cheeks. She exhaled into his mouth and pressed harder against his crotch. A whistle from the other court and he opened an eye a slit.\n\nSherry had her cell phone up and was taking pictures or a video. Then he noticed Vicky's eye had likewise flashed open. She laughed into his mouth but her tongue kept up its attack. Then she created a slight gap and her right hand left back and followed his waistband until it was sandwiched between their bodies. His shorts were snug and not that long, she HAD asked for him to 'dress to impress' and had a drawstring tie. He felt her fingers unravel the knot. Then her tongue and lips offered a truce and she pulled away just far enough to whisper.\n\n\"She wants pictures, let's give her some good ones.\"\n\nBefore Nick could respond Vicky grabbed his waistband with both hands and in one swift move squatted and pushed his shorts and jock to his ankles. His engorged prick sprang free, level with Vicky's face. She'd also turned them slightly so they were directly side on from Sherry and her crew.\n\n\"Wha...,\" he said.\n\n\"It IS nice,\" she said in a voice intended to carry. She quickly pushed her mouth over it and with deliberate speed swallowed it completely.\n\nNick was aware his wasn't the largest cock west of the Rocky Mountains, but he knew he was far from the smallest. One former girlfriend had mostly refused oral and when he'd intimated a certain act she'd made clear 'if that thing gets anywhere near my asshole I'll slit your throat!' But he looked down just as Vicky's nose tapped his pubic flesh. He moaned when she paused and he felt her mouth, throat, whatever, ripple along his rampant erection. He bent his head back and closed his eyes and moaned as she worked backwards to expose the shaft.\n\nHe glanced quickly. Sherry's face had a huge grin as she clearly used the video recorder on her cell, her fingers made clear her zooming in as each increment of his cock became visible. Her friends had all frozen where they'd been on the court and had shocked looks.\n\nA car drove along behind the quartet on 13th East, the views from there would be intermittent. But not hidden. He blinked.\n\nBut then the pressure and heat had again fully engulfed his cock and those brain cells concerned with cars and streets and the possibility that Sherry was broadcasting them to the world at the moment lost out. He pumped his hips forward and pushed his flesh even deeper into her throat. She held his ass and guided his movements as sucked him in and out a dozen slow strokes. He moaned and tried to keep his breaths deep and slow.\n\nFinally she slowly backed off and released his prick completely. It throbbed and quivered in a duet with his sped up heartbeat. Her tongue ran around the ring of the head before she stood up, reached and pulled his head down. He read her desire.\n\nShe purred as his right hand cupped her left tit and he sucked the nipple into his mouth. It was already prominent but he felt it grow and harden as he twirled his tongue around it and sucked in to create a vacuum. She wrapped her arms around his shoulders and pulled him against her.\n\n\"Ah, yeah, that's... nice,\" she said, her voice still pitched to carry as she encouraged him to offer equal time to each shapely breast. They weren't Jeanine's but still more than a handful, her tiny top on the Fourth had shown them to be amazingly firm for their size and fully exposed they were even more impressive.\n\nBut her nipples continued to grow. He'd had plenty of lovers and he was pretty sure none of them had this kind of impressive size. He'd always enjoyed when those lovers would let the clear shapes, whether impressively large or not, and even a translucent exposure of color, show in public.\n\nBut he never expected this. And as her hand used the ample saliva she'd left behind to stroke his cock with one hand while the other guided his head was something else he'd never expected.\n\nNor anticipated. How much further? What did she want...\n\nAnd he knew. She nudged him back but kept hold of his cock and spun them. She guided him by the cock the few steps to their court's nearest net post. She pulled him against her back as she flipped the back of her skirt up and she aimed the cock to slip vertically along the cleft of her ass and turned her head to look at him slightly side on.\n\n\"When I said fuck on the first date,\" she said before she turned to look at Sherry, \"I meant fuck... me.. right... fucking... NOW!\"\n\nShe bent over with her left hand on the post and spread her legs so her feet were just wider than her shoulders. She pushed his cock down then released it and her hand quickly reached between her own legs and found it again and pulled it.\n\nHe froze for the merest instant. Her hand was insistent. She was serious. She wasn't tall enough he could stand straight and hit the target, but not so short it would be uncomfortable as it had been a couple of past lovers. He shuffled his feet so she could pull his cock to her entrance but he held fast when the head made initial contact. He felt the hot moisture on offer. She mewled. Was he going to do this? He... they hardly knew each other. It was clear that a condom wasn't even of consideration to her.",
        "Not that he had any HERE. He'd made sure his apartment was well supplied... but that was his apartment.\n\nNot a tennis court. He looked up as a couple of cars went past on 13th East. Neither slowed or changed speed, no heads of drivers or passengers turned.\n\nShe pulled with her hand and pushed her body back, he kept the tip just engaged but didn't let it enter.\n\n\"AAhhh,\" she said and turned her head and looked at him. Her expression was a combination of pleading and feral lust he'd never seen before which gave the most primal portions of his brain the power to overpower the last, desperate rational brain cell holdout. He relaxed his legs and back just enough.\n\nHer fingers guided him in. He was shocked at how hot, how wet, how ready she was. He thought back on her blowjob and tried to enter her with that same deliberate pace. He felt her flesh ripple as she welcomed his intrusion and she twitched as he pushed deeper until his pubic flesh contacted her ass. She looked at him and licked her lips.\n\n\"Kiss me,\" he adjusted his feet and bent forward and did so. It was mouths open, sloppy, not well aligned but full of passion as the flesh of her cunt squeezed and quivered against the length of his cock. She broke the kiss and faced forward to look at the grinning cinematographer Sherry and her apparently scandalized trio of friends.\n\nNot that any of them looked away. Another car drove past. Another driver seemingly oblivious.\n\n\"Now,\" she pulled forward slightly then pushed him to full depth again, \"fuck my brains out.\"\n\nHe laughed and pulled back until only the head was still in her and this time slammed forward. She let out a loud 'aahh' and pushed herself hard against him.\n\n\"YEAH!\" She yelled and he pulled back fast and slammed himself home again before he found a slower but still fast pace. He felt her fingers brush his flesh as she worked a clit that he'd not yet clearly seen or touched. After another moment they found a complementary pace and she pumped back and forth to ensure that he pushed to full depth and almost completely exited her each time.\n\nHer cunt was so tight... so wet... so hot... her fingers worked her clit. He alternated hands to hold her hip while the other reached around and tweaked and pulled those incredible nipples as they fucked. Both of them let out non-verbal grunts and moans. He had the impression that a car going along 13th East had made the turn onto University Street at the far end of the park and had slowly followed that street around the perimeter of the park to where it met South Temple.\n\nHad the car stopped? He wasn't able to quite work it out but he didn't think so.\n\nHe could tell from her glances back that Vicky held the eyes of the four women, especially Sherry's. And that one still seemed to be recording them.\n\nOr was she broadcasting live?\n\nHe couldn't see Vicky's hand between her legs but her arm moved rapidly and he felt the pressure of her fingers where she rubbed herself as they fucked. He felt drops of juice hit his thighs and his calves with each stroke. He wasn't sure squelch was actually a word, but it seemed to cover the sound that his cock and her cunt made with each hard penetration.\n\nMore cars on 13th East. One driver definitely had an extended look as she drove past.\n\n\"Aahh, why the FUCK did I leave for a week!\" She said before she let out a hard grunt as they slammed hard against each other. He felt the head of his cock slam against firm but yielding flesh. \"To be with assholes! And I had THIS HERE!\"\n\nHer arm kicked up its speed a notch and her neck arched back and she gripped the net post. Her flesh grabbed at the flesh that forcibly intruded into her again and again.\n\n\"Oh, ah, oh FUCKING HELL!\" He felt a sudden rush of near-boiling liquid surround his prick as he hit full depth and her spasm followed its path as he reversed. He again stopped to keep the head just in and as he pushed against her next spasm a gush of juice was forced out to cover both of their thighs. Her back and legs clenched.\n\n\"OUT!\" It wasn't a word. It was an Order. He pulled his flesh free.\n\nShe screamed and he felt and this time saw as well the hot spray of cum hit his quivering prick, both sets of thighs and it splashed onto the concrete just outside of the tennis court's green surface. She rubbed herself and a second, small spray followed it. Her groans and pants didn't make words.\n\nThen she pushed herself up from the post and turned and spun them a quarter turn and squatted in front of him again. She grabbed his prick and easily jacked off a cock covered with natural lube.\n\n\"Give it... give it,\" her voice was hoarse and choppy but still carried. It was his turn to moan as her second hand went around his hips and... a finger went straight up his ass.\n\nThat was it. His turn to offer primitive grunts and groans as his first spray of cum she guided across the tops of her tits. Then she bent and pulled half of his erection into her mouth and used her hand to milk the rest of his cum as his hips jerked. She pulled back and released his cock and looked up and licked her lips.\n\n\"Yum,\" she said through a mouthful of his cum before she stood up and kissed him quickly, \"wait here.\"\n\nShe walked quickly across the court, still topless, the back of her skirt caught in the waistband and he admired her very cute ass as he took slow and deep breaths. Vicky reached up and undid the ponytail and shook her head as hair stuck to her neck and shoulders. He watched Sherry focus on the approach with her cell.\n\nVicky walked right up to the woman and grabbed both cheeks with her hands and kissed her. Nick chuckled, he recognized the kiss. Hard, fast, she forced Sherry's mouth open and a moment of resistance the older woman accepted it. But he saw her eyes open and gyrate slightly.\n\nNick wondered if the woman had ever shared cum before. From the look on her face once Vicky released her he was almost certain she never had. Then the woman he'd just fucked gestured and the quartet gathered closer. Vicky had a huge smile and pointed at Nick, then turned and said something. All four of their mouths dropped open. Then she kissed Sherry quickly and this time skipped back to him, their turn to watch her sweet ass as she moved as she hadn't bothered to return its skirt to normal. Not that it covered much at best.\n\n\"What'd you say?\" It was his most cogent vocalisation for quite some time. She slid her right arm around his left.\n\n\"I told them we're going over there,\" she gestured to a shady area of grass that would be shielded from South Temple and partially shielded from 13th East by shrubbery but otherwise visible from anywhere on University Street and the rest of the park, \"and put out the little blanket I brought. I'm going to feed you protein bars until your magnificent cock is ready again and then you're going to stick it in my butt. And I told them that if any of them were interested they should come over and I'd eat their pussy while you did that. Or pussies, they could take turns.\"\n\n\"Uh, you really...,\" he said as she pushed him to move to gather their stuff.\n\n\"You don't like my ass?\" She said with a definite pout.\n\n\"Ah, oh... oh, hell, I LOVE your ass,\" he said, \"just didn't expect...\"\n\nShe laughed and kissed him quickly. They quickly restored their rackets to their cases then gathered clothes and bags. She led him to the spot she'd chosen and dropped her bags then pulled out and unfurled a microfiber blanket as a car pulled onto and drove along University Street. Then she undid a snap and let her skirt drop to the ground before she sat down cross-legged. The sheen of drying sweat and cum covered her chest and legs. He sat next to her, both of them in only their tennis shoes and socks.\n\nShe pulled a protein out of her bag and smiled. Two adult couples at the far end of the park on their own blankets had seemed to watch some part of their earlier fuck and tried to hide their looks now.\n\n\"Hey, Vicky,\" he said softly, she leaned her head onto his shoulder and offered a soft 'hmm,' \"about last week... just over there you said...\"\n\nShe put her finger on his lips. \"Ssshhh,\" she said, \"1 p.m.... Space and time...\"\n\nThey split the bar and drained their water bottles. She stood quickly and took them to the fountain next to the tennis court and filled them, strutted back. He felt his cock respond. She handed his bottle then sat quickly and bent.\n\n\"When we're done,\" her voice was all slow, low lust and seduction, \"can all our crap fit on your bike?\"\n\nHe did a quick inventory. \"You might need to carry your sports bag, but I've had that much. Just so we don't go too far.\"\n\n\"You're close?\" He nodded at her question and she nodded back. \"Good. Dump it all at your place then you're taking me for ice cream.\"\n\nHer grin was broad and her dark eyes glittered. His cock twitched hard and a few more brain cells crossed lines.\n\n\"Just one thing,\" she added as she looked at him with amused eyes, \"I left all my underwear at home and just have the little skirt and my tank. My bra's soaked and no way putting that back on. Gonna be quite the snail trail on your bike seat, by the time we're done.\"\n\nHe hadn't worked out what to say when she renewed the kissing attack with brutal vigor. He quickly called up the Reserves and his tongue pushed hers back. Then she left it to its devices and bent to find his cock. This time she didn't suck it all in but worked the large head and used her tongue and lips and even her teeth a bit. He shifted slightly so he could get fingers to her crotch. Like her still huge nipples, her clit was large and impressively hard. He stuck fingers between her lips to moisten them and used it as lube to stroke her erect flesh.\n\n\"So,\" he said and she gave an 'uh ha,' \"about your ass...\"\n\nShe reached into her sports bag and pulled out a squeeze tube of lube. She sucked hard on his cock then sat up.\n\n\"Always come prepared, and always be prepared to come. Now, kiss me.\"\n\nHe did. Their hands worked the other's cock and pussy as their tongues renewed their earlier battles. Her pussy pushed more moisture out and his cock was restored to its full glory.\n\nThey broke the kiss as their view darkened slightly. Sherry stood over them. Her hair wasn't quite brown or blonde and long and still in its ponytail. She had a light blue sleeveless tee shirt on and apparently had a moderately large chest. Her skirt wasn't long but not as short as Vicky's. She bent at the knees and quickly set her bag and racket on the grass.\n\nFrom their angle he couldn't quite see her crotch. Her face was flushed.\n\n\"Ah, just in time,\" Vicky said, Sherry's three friends had followed but stood at a distance, their expressions a mixture of anger and... something. Lust? Vicky pushed Nick and he knelt. She slowly stroked a cock that was again iron.\n\n\"Think he's ready?\" Sherry's face went from frown to smile before she caught her tongue quickly between her lips.\n\n\"You're... serious...,\" the standing woman said.\n\n\"This...,\" Vicky stroked Nick's cock again and made sure all four women could see her doing it, \"ALL of this... is going up my butt. I love eating pussy during a hard ass fuck. And all of this... that's a hard ass fuck.\"\n\nVicky released him and stood up and wrapped Sherry in a hug and kissed her hard and deep again. She broke the kiss and grabbed the woman's hands and pulled her. After a moment of resistance she followed.\n\n\"Let's lose this,\" Vicky undid the snap on Sherry's skirt and with a nudge it dropped to the ground. Her pubic hair was a shade darker than her head and it was full but trimmed. Her shocked expression stayed as Vicky spun her and guided her to a seated position so her back was to her friends and the main part of the park and pushed the woman's legs apart and dropped to her own hands and knees before she began to massage and kiss Sherry's thighs. She shook her own ass.\n\nNick got the hint. He pushed fingers into Vicky's pussy and kissed her rosebud. She laughed. Nick kissed but looked up. Sherry's friends had come closer but still stood and stared. Then Nick noticed Sherry's left hand. Actually, he noticed the gold band.\n\nDid getting your pussy eaten by another woman count?\n\nThen Vicky shimmied her ass and reminded him of his duty. He stuck his tongue just into her back entrance before she kissed her way to her own target and Sherry jumped from her position reclined on her elbows as she made hard contact with her target.\n\nNick pulled his head back and squeezed lube onto two fingers and rubbed around Vicky's back door before he slid them inside her. He heard the hummed purr and her lovely ass shook quickly. He slid fingers into her pussy and pressed against those in her ass. He finger fucked her as her head bobbed and Sherry's expression went slack and her eyes opened and closed.\n\nIt seemed that Vicky knew how to eat pussy. But she let out a grunt and bucked her hips. He laughed and pulled his fingers out, he quickly lubed up his cock and stroked it a few times to bring it to full attention, not that it'd flagged much with the multiplicity of available enticements to keep it at full mast.\n\nHe shuffled on his knees and placed the tip at its target. He pushed and enjoyed the view as the head disappeared into the very snug heat of his new girlfriend's asshole. He stopped. Vicky's head rose from its snack and both she and Sherry looked at him.\n\n\"'Bout time, I was worried it'd fallen off or something,\" Vicky said, \"might need to work that monster slow---.\"\n\nHe pushed. Not as hard as he'd shoved his missile into her sweet twat but he didn't hold back. Her neck popped back and her mouth opened wide and she groaned. The pressure he fought was intense but her tone had made him as hard as he'd ever been and nothing was going to stop him now.\n\nUntil his body made contact with her ass cheeks. He grunted, he'd never felt such tight pressure, such heat surround his entire cock. Vicki's back and neck arched and her eyes closed and she let out a long series of exhaled groans and primitive syllables before her body relaxed around the brutal intruder that impaled her.\n\n\"Sorry... Sherry...,\" she said between slow breaths, \"this...\"\n\nNick used one hand to hold her hip as he slowly withdrew and squeezed more lube onto the shaft as it emerged. She grunted as he did so. Sherry's friends had approached her within a couple of steps, one tried to casually use her cell but Nick didn't care as he shoved the entirety of his cock even harder despite the resistance Vicky's rear passage offered.\n\n\"Oh... FUCK! That's....,\" Vicky looked at Sherry then up at her friends, \"you bitches NEED to let this ass raper stick that monster up all of your butts!\"\n\nShe ended that with a moan as he hit full depth and, bracing her hips with both hands he pulled back and shoved home again.\n\n\"But if ANY of you even TOUCH my man's cock I'll KILL YOU!\"\n\nHer head dove again and her body lurched forward when Nick slammed himself into her again. He reached around and found a nipple, it was no smaller nor softer than it had been. Neither was the other one as he alternated hands to grip her ass and caress those ridiculous nipples. She let out a hum and Sherry jumped as Nick pushed Vicky's body hard into her. On his next stroke to rebury his prick she pushed back to meet him and he heard her huff.\n\nHe let out his own moan at the heat and pressure that engulfed his steel hard cock. He quickly added a bit more lube when his shaft performed its next partial retreat. With the slight respite a couple of renegade brain cells performed a rear-guard action and tried to make known that there WERE more cars parked along University Street than there HAD been... yet no more people actually in the park...\n\nClearly those people were wandering around the University Campus which is WAY OVER THERE the vast majority of brain cells responded. Now, shut up! We have an ass to fuck! No... this is the best ass we've ever fucked.\n\nNot that there had been THAT many... But, still.\n\nHe shoved his cock home again and Vicky's face was buried deeper into Sherry's crotch before that older woman suddenly closed her eyes hard and moaned and bucked her hips. Her elbows let out and she laid flat on her back and held Vicky's head with both hands.\n\n\"Oh... god... ah... that feels...,\" was all she managed before a spasm ran across her whole body. She held it for one, then a second second before her arms fell to her sides and she groaned and went still.\n\n\"Oh... god... stop.... I can't,\" Sherry moaned when Nick shoved Vicky's face hard into her crotch again. Vicky pulled her head up and pushed back just as hard. Her right hand was restored to its position between her own legs and had clearly resumed its servicing of her clit.\n\n\"I... need...,\" she grunted as Nick upped his speed and her arm ticked up its pace as well, \"I need a fresh cunt. RIGHT HERE! This one's done. Weak.\"\n\nBut she grinned when she looked back quickly at Nick.\n\n\"Hey, you, Red,\" Vicky said forcefully, \"drop those shorts and get down here!\"\n\nSherry slid to her right and turned, looked up at her friends. 'Red' wasn't so much a redhead as a strawberry blonde.\n\n\"God, Alice, she is so good at this,\" Sherry said, \"you divorced your husband and dumped the last guy because they were shit at it. Well...\"\n\n\"Get your skinny ass naked, oof, ah...,\" Vicky said, \"and learn how it's done!\"\n\nNick looked up. Red, Alice, looked at Vicky, then Sherry, who lolled on the edge of the blanket, then at her other two friends.\n\nBoth of whom had expressions of absolute scandal.\n\n\"C'mon, Alice,\" Sherry said. Vicky grunted again before she spoke in choppy syllables.\n\n\"Now! I need more... than... my hand while he splits me in two! And after I sucked out all that cum before... he's not ready!\"\n\nThat seemed to do it. Alice quickly undid her shorts and pushed them and her underwear down. Her pubic hair was a red landing strip and she was indeed skinny. Firm, but thin. Not the kind of scrawny ass Nick was usually interested in, but that wasn't the ass he was, or cared about, fucking. She quickly dropped into position.\n\n\"I can't believe this,\" the tallest of the pair of still-standing friends said, she had dark hair cut into a bob.\n\nNick shoved Vicky's face hard into the new crotch and Alice jumped slightly but her face went to an appreciative smile. Not only Vicky's pussy and ass, but her mouth was talented. Of course, she HAD inhaled his entire erection, so... if they all didn't end up in prison, he'd never had a girlfriend like this one. Cocks, cunts... She seemed to like them all. And her arm had lost none of its impetus in rubbing her own crotch. Alice's face showed her enjoyment of whatever exactly Vicky was doing to her.\n\nThen Sherry upped the ante. She sat up and swiftly pulled her tee shirt off and reached and undid her bra. She had a few extra pounds but her tennis habit and whatever else mostly kept up and her breasts were about the same size as Vicky's but with considerably more sag. Then she hopped on her ass and grabbed Alice's tee.\n\n\"Hey, uh,\" the strawberry blonde said but she shifted so Sherry could get it off, followed by another quick bra removal before Alice dropped flat. Except for her erect and very dark nipples her breasts essentially disappeared. One of her hands went to Vicky's head and the other went to those nipples and pinched and pulled. Sherry laughed.\n\n\"This is obscene,\" the shorter of the two standing women said. Vicky looked up.\n\n\"No one's... oof, ah, shi... no one's forcing you to watch,\" she said before she made Alice jump with a return to her crotch aided by another hard thrust by Nick.\n\nSweat dripped from Nick's chin, his body covered with it. They were in shade but it was still a hot day.\n\nBut the weather was only a minor part of it. Vicky's body dripped sweat, her mouth and arm fully engaged in guiding two pussies to climax. Her asshole flexed and grabbed as its brutal intruder forced its way in and out, the flesh extended on each reversal.",
        "\"Oh... shit...,\" he grunted out as the impossible happened and a cock that had to already be fully engorged seemed to grow by another increment. He kicked up his pace to match what he'd done to her cunt earlier and Alice jumped and jerked as Vicky's face slammed repeatedly into her crotch, her thin legs opened almost ninety degrees and both of her hands seemed to try to pull her nipples from her body, her grip on them that tight.\n\nHe knew he couldn't go faster or deeper and was simply amazed at what he was able to do. He knew too he needed to cum. And soon. His legs would give out if his heart didn't, he wasn't sure he'd hit this heart rate during the tennis match.\n\nOr ever.\n\nTwitched waves ran across Vicky's body as her arm was a blur. Whatever magic her mouth performed had Alice humping her back and moaning as she redoubled her efforts to rip her nipples from her own tits. Sherry sat cross-legged next to her friend and her left hand idly played with her own crotch.\n\nBitch one and bitch two glared. But they still hadn't walked away and watched intently.\n\nAlice's back arched and she let out a long moan and her tits tripled in size as it really seemed she would rip both nipples from her body. Nick buried his cock with his hardest and fastest strokes yet and Alice's body shook for two of them as Vicky's face had no hope of escaping its duty. Finally, Alice collapsed and even her hands lost their coordination and her tortured nipples sprang back against her chest before her arms fell to her sides. Sherry laughed.\n\nVicky's neck arched back and it was her moan that was followed by a primal scream as her hand froze. Her ass clinched so tightly as he hit full penetration that not even his strength could immediately overcome it as her climax blew another load of boiling cum from her cunt all over both sets of thighs to soak the blanket. A visible wave ran from the very edges of her ass cheeks to finally cause her neck to arch so far and fast he worried she'd snapped it. A second wave soaked them even more before her colon finally loosened just enough for him to move.\n\nAnd he knew. His locked muscles snapped him back and it was his primal scream that was doubled when Vicky sped forward and caused his cock to spring free as sweat and lube flew. She spun and dropped onto her back with his cock above her upper chest and she reached across her body with her right hand to grab his pulsating prick. Her left hand reached between his legs and she pressed his ass to guide his movements.\n\nHis first shot of cum almost missed her completely to land mostly on the blanket with just a bit on her right shoulder. She aimed the second at her open mouth and her aim was mostly true, although it also hit her lips and chin. The third shot had lost hardly any volume and she ran it in a diagonal from her lower left cheek and across her nose to finally sputter against her other cheek and her closed right eye.\n\nShe sprang to a near sitting position and her mouth closed on his cock just in time to contain the diminishing offerings as he jerked his hips and pumped his cock in and out of her mouth a half dozen times and his entire body shivered at the last two as he let out another primal moan.\n\n\"Oh, YUM,\" Vicky shouted after her mouth released his ridiculously messy cock and Sherry and Alice whooped when the younger woman reached up to grab Nick's neck and as she fell back she pulled him on top of her.\n\nHe had a momentary qualm as she guided his mouth to her cum-covered face and her own waiting mouth. But it was only for a moment and this time it was his tongue that initiated the hostilities before counter attack was joined with gusto.\n\nOne sound was rapidly overtaken by a second.\n\n\"God, that's DISGUST---,\" was nearby, but not from the blanket.\n\nBut it was quickly drowned out by a cacophony of multiple car horns that rapidly moved to near-rhythmic synchrony. Final hard tongue thrusts preceded a silently-negotiated truce and she hugged him tightly and each mouth moved to lightly kissing cheeks. He heard a whisper as the parked car symphony wound down.\n\n\"That ice cream is gonna taste soooo good...\" A nibbled ear was her appetizer.\n\n*****\n\nIf you enjoyed this I hope you'll give me a good vote. Or, feel free to let me know what you thought. If this did appeal to you, this is my third Nude Day story. Way back in the diluvian days of 2019 was , rather radically different than this one and in Erotic Horror. My  was is also rather different and is in E&V."
    ],
    "authorname": "PennameWombat",
    "tags": [
        "nude day 2021",
        "ass to mouth",
        "cum swallowing",
        "cunnilingus",
        "female exhibitionist",
        "girl on girl",
        "outside",
        "public",
        "short skirt",
        "threeway"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/serve-and-volley"
}