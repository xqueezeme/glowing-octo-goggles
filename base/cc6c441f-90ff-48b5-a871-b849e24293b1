{
    "title": "Forever M'Lady",
    "pages": [
        "Author's preamble: I puzzled over the category to select but decided that the often brutal images in several scenes required the BDSM tag. For those who do not like surprises sprung upon them, I should add further tags: Lesbian sex, 'straight' sex,  anal, oral, fisting, anal fisting, menstruation, pissing, piercing and a passing mention of gay sex (but don't worry, those who are put off by two men together: that element is truly miniscule and lasts only for a very few sentences with no detail.) \n\nAll sexually active participants are over the age of 18.\n\nForever M'Lady is a stand-alone story set in late Victorian England. Essentially a Romance, the story is entirely fictitious, a product of  my own imagination. Any names, either of person or place, have no counterpart in the real world. Nor do the characters. \n\nI am no expert in late 19th century life so if there are anachronisms herein, I beg forgiveness.\n\nI am indebted to Dan Griffin for his prompt and scholarly editing of my text. If you find any more mistakes, they are entirely mine.\n\nNow nothing remains but the reading. I trust you will enjoy the story as much I enjoyed the composition.I welcome comments and votes.\n\nMerf68\n\nForever M'Lady.\n\nChapter 1 \t\tBarton Court\n\nThe day after my fourteenth birthday, my father took me to Barton Court, the local 'big house', where I was to be taken on as the most junior servant. Daddy patted me on the head and said he would see me on Sunday. He left me there in my Sunday best with just a change of clothing in a package clutched to my chest. A girl, who told me her name was Faith, took me in hand and led me first to the Housekeeper's door. She was just a year or two older than me. \n\nWe entered her office when called in; Faith bobbed a little curtsy and hissing at me to copy her. Mistress Sharp was a tall, imposing woman wearing a starched, tight white blouse and voluminous black skirts. Around her waist was a wide belt from which hung a large ring of keys. \"Well?\" she almost barked, glaring at the intrusion.\n\n\"Please, Mistress Sharp, this is the new girl, Jane Fairfax,\" said my guide.\n\n\"Harrumph,\" Mistress Sharp grunted, looking down her long nose, which was as sharp as her name. \"Come here girl, I do not bite. I want a proper look at you.\" As she looked me over, motioning for me to turn this way and that, she continued, \"I am in charge. You will always address me as Mistress Sharp or just Mistress. I am Lord Barton's Housekeeper and so control his domestic staff.\" She finally gripped my jaw and looked straight into my eyes. \"I will not tolerate misbehaviour. Understand?\"\n\n\"Yes, Mistress Sharp.\"\n\n\"Faith, take her to the Linen Keeper for a uniform, then to the still room. Then return to your own duties.\"\n\n\"Yes, Mistress.\" We both had to curtsy again before we left.\n\nThat was four years ago. In that time I had made my place in the big house until, one day, Mistress Sharp summoned me. It was with some trepidation that I went. My only other visits to her office had been to be disciplined for infractions of the rules. I left each time with a very sore bottom imprinted with the marks of a large wooden spoon and tears flooding from my eyes. However, this time I knew of no reason to be summoned.\n\nI entered her office, dropped a curtsy and stood before Mistress Sharp and Master Johnstone, the Butler. I had learned in my time that Master Johnstone was even the Housekeeper's boss, only one-step below God, so I was even more nervous. It was almost like having the clock turned back when I was instructed to turn my head and my body this way and that, this time for Master Johnstone's inspection. \"Show me your legs, Jane. Lift your skirts.\" I did as bidden, holding up my skirts and turning to give him views all round, until he told me cover up again.\n\n\"Yes, Mistress Sharp,\" he turned to the Housekeeper. \"She's a comely, buxom wench. M'lady told me to bring her although I cannot think where M'lady saw her. She has been kept downstairs?\"\n\n\"Master Johnstone, last week, Faith was ill in bed and Jane was sent to empty the chamber pots. Perhaps M'Lady saw her. I trust she has done nothing wrong?\"\n\n\"I think not, Mistress Sharp. M'lady did not seem annoyed or distressed when she instructed me.\" Turning to me, he said, \"Come.\" He walked out of the door and I had to rush to keep up with him. \"When did you last bathe, Jane?\" he demanded over his shoulder.\n\n\"All Souls Day, Sir,\" I responded. Without breaking his long stride, he turned to a side passage and took me to the large bathing room. He called for hot water and within minutes, four maids had filled the bath, meanwhile I had been ordered to strip. I obeyed reluctantly but I could have been a marble statue for all the attention he paid to me. A quick glance up and down, an almost imperceptible nod and then he turned to speak to one of the girls. She was to run and get me a new uniform. \"And I mean 'new',\" he finished.\n\nI scrubbed myself everywhere, yes everywhere, with carbolic soap until my skin was almost sore but felt tingling and glowing. I then dried with a big white towel and stood there shivering for a minute until my new uniform arrived. I quickly dressed myself and brushed my hair as best I could until Master Johnstone was satisfied. Finally, I was taken into the Family part of the house and it almost felt like hallowed ground. At the door from the servants' area into the Family area, he stopped and told me, in a very soft voice but his tone was hard as steel, \"Whatever you see or hear beyond this door is Private. You will never tell anybody, not your friends, not your superiors, not even me. You will obey any orders M'Lady gives you instantly. If you transgress, you will be severely whipped and taken to prison. Is That Absolutely Clear?\"\n\n\"Yes, Master Johnstone.\"\n\nHis face softened with a friendly smile. \"Jane, M'lady has not told me why she wants to see you but I think your fortunes are changing for the better. Mistress Sharp has given me good reports on you so I am confident you will fit in. Good luck. Now, chin up and come with me.\"\n\nHe led me into another world where everything was beauty and elegance. Up a grand staircase, he led me, and along a couple of passages until we stood outside a large, heavy door. He rapped loudly then opened the door and ushered me in on command from within.\n\n\"M'lady, you wanted to see Jane.\"\n\n\"Ah, Jane is a nice name. Come in girl, come in. Carry on, Johnstone.\"\n\n\"Yes, M'lady.\" He closed the door as he left. \n\nI did not know what to expect so my heart was in my mouth as I curtseyed deeper than I had ever done in my years of service.\n\n\"Come here, Jane. I want you to stand right there,\" she pointed to a spot just in front of her seated form. \"Remove your clothes and set them down there.\" Again, she pointed, this time to a nearby chair. Twice within 30 minutes, I had been ordered to remove my clothing. I was nervous and embarrassed as I slowly removed my clothes and stood there in my birthday suit. I could feel my face burning and blushing and, as I looked down at my bosom, I saw the same deep red flush spread down there as well.\n\nI was not allowed to cover myself with my hands. I was turned round, bent over at all angles, touching my toes and any other position M'lady required. She touched me all over, examining every secret place with her fingers and hands, even her mouth on my nipples, which tingled and gave me a strange feeling very new to me. I went weak at the knees as her finger tried to push inside my privates. What was happening to me? \n\nI felt disappointed when she withdrew and ordered, \"Kiss me, Jane.\"\n\nHow was I to know what she meant? The only people I had ever kissed were my parents and my siblings so I leant forward, pursing my lips and kissed hers and withdrew.\n\n\"No, no, Jane. Kiss me as if I were a boy who is courting you down behind the lake.\"\n\n\"Please, M'lady, no boy has ever courted me. I'm a good girl.\"\n\n\"I'm sure you are, Jane,\" she said, ringing a little hand bell.\n\nA maid appeared within scant seconds. \"M'lady?\"\n\nI had to look twice before recognising my dear friend, Faith, the very first girl I met at the Big House and with whom I had shared a room for two years. But my, had Faith changed since. Her hair was prettily brushed and tied back behind her cap. She was always a slim girl and it seemed that the only bits which had grown with her age were her breasts and hips. The rest, if anything, had slimmed down even more. Her bosom seemed about to break free of her very tight blouse and seemed almost freakish against her narrow waist, not much more than eighteen inches round, flaring out to child-bearing hips. Her uniform seemed tailored to fit her like a tight skin. She looked beautiful. I smiled in friendship and in admiration for her beauty.\n\n\"You know Jane. You will be training her until you leave. First, teach her how to kiss properly.\" \n\nFaith stepped towards me smiling reassuringly. I did not know what to do so I just stood there as she put one hand behind my head and latched her mouth onto mine. Her lips were apart and very mobile. It seemed quite exciting and made my privates tingle, but when her tongue tried to push between my lips, I resisted at first then allowed it to invade my mouth. Her tongue was trying to 'play' with mine and I found myself liking it so I tentatively pushed my own tongue forward and it was hungrily sucked into her mouth. Faith held me in her embrace, our mouths glued together and our tongues entwining and exploring. Exciting feelings were coursing through my body and, for some reason unbeknown to me, there was a trickle of liquid on the top of my thighs. My breathing was heavy by the time Faith finally released me.\n\n\"You may go, Faith. Now, Jane, come here and try again,\" instructed my Mistress. Her hand went straight between my legs as soon as I was close enough and I became more aware of the slickness as a finger easily penetrated my privates. She pulled my face close to hers and her mouth mashed onto mine. I tried to match her enthusiasm, kissing as Faith had taught me. M'Lady seemed happy with my new skill and I felt so good and tingly all over as her finger played around inside my privates. Strange new feelings were taking over my body and I yearned for ... for something. M'Lady's spare hand took a firm hold on my breast and pinched my nipple very hard and, as she did, I felt wave after wave of warmth spreading from my privates, through my belly, taking over my body. I tried to suppress it but I found myself calling out \"Oh, Oh Mistress. Ooooh.\"\n\nI was almost senseless and my legs felt like one of Cook's jellies. Suddenly I realised that I was hanging on to M'Lady's shoulders. \"I'm sorry M'Lady, I don't know what happened.\" I made to step back from her but she did not release me. She made me look at her, for my head was bowed. She was smiling, her eyes shining and her own breathing was speeded up.\n\n\"You learn fast, Jane. I am very pleased that you climaxed quickly and I do not mind you calling out. Was that your first climax?\"\n\n\"If you please, M'Lady, what is a 'climax'?\" \n\n\"You just had one. It was when your body felt wonderful all over.\"\n\n\"Yes, M'Lady, I have never felt like that before. I did not know what was happening but it felt so good.\"\n\n\"I am quite sure,\" M'Lady chuckled, \"you will have many, many more climaxes. You have a lovely body for me to play with and you will come to worship my body. Now come, lay across my lap.\" \n\nNervously, I complied with M'Lady's instruction and found myself face down staring at the rich colours of the rug. M'Lady pressed my legs apart and her hand cupped my private parts. I could feel much wetness down there and soon her hand was spreading that wetness over my buttocks. The good feelings were coming back with each caress of her hand and each caress spread more of the fluid leaking from me.\n\nSuddenly, M'Lady's hand smacked my left buttock. It did not hurt too much, not after Mistress Sharp's discipline, but I flinched from the shock. Then I received another smack on my right buttock before her hand was once more dipping into my private parts. I made so bold as to whisper, \"That feels nice in my privates, M'Lady.\"\n\nI received another, harder slap then her finger invaded me again. \"You will call this your pussy. What is it Jane?\"\n\n\"Please, M'Lady, it is my pussy.\"\n\nHer finger nudged at the entrance to my back passage. \"This is your arse.\" Her other hand grasped my breast: \"These are your tits. You will use these words. So, you like me feeling your pussy?\"\n\n\"Yes, M'Lady.\"\n\nWith that, she started spanking my bottom, very fast and hard. I felt my bottom cheeks getting warmer and warmer with each smack. Her strokes were stinging now, which made me squirm on her lap. She stopped smacking me and her hand went to my pussy again again. The glow from the smacks travelled to my pussy and, once again, the warmth spread itself through my body. Once more, I could feel those marvellous sensations building in me. My breaths were coming hard and fast and I felt a very hard smack on my bottom, and for some reason, the pain of that made me lose my senses again.\n\nI was given a minute or two to gather my wits then I was told to kneel between M'Lady's legs. She lifted her skirts and told me to kiss her cunt. \"Cunt is another word we use for pussy,\" she told me when I hesitated. \"Kiss my pussy.\"\n\nIt seemed like a disgusting thing to do but I followed my orders. I kissed her pussy lips, which were open and wet. The taste was a little salty, but sweet. I instinctively started to lick up the delicious juices, which made my Mistress push my mouth harder onto her pussy, which she ground over my teeth until she gave out a loud cry and slumped back in her chair. \n\nI had been given no further instructions so I continued to kiss and lick M'Lady's pussy, which caused her to start bucking against my mouth again and in a few minutes she was throwing herself back in her seat and calling out, \"Yes, Yes! Oh keep doing that.\"\n\nEventually she stopped squirming about and pushed me away from her cunt. I was strangely reluctant to lose the wonderful taste and smell of her. She made me kiss her again, it was a slow and languorous kiss, without the fervour of our earlier kisses, but soft, and tender, until she sighed and had me kneel at her feet.\n\n\"Listen carefully to your duties while you are with me, for you will be staying here as my personal servant. Faith is leaving me in two weeks and she will teach you what you need to know. My husband will summon you on occasion: Faith will tell you what you must do. You are a virgin. Yes?\"\n\n\"Yes, M'Lady, I have lain with no man.\"\n\n\"Lord Barton will enjoy taking your virginity so you may expect him to send for you soon.\" She tinkled her little hand bell once again and Faith appeared within seconds.\n\n\"M'Lady?\"\n\n\"Take this delectable creature, have the seamstress come and take her measurements for a set of appropriate uniforms for her new duties, which you will explain to her in full. She will sleep with you until you leave for your new position. You must play with each other so she will learn how to pleasure me. Now go, both of you.\"\n\nFaith told me to pick up my uniform and led me through a door and across the passage to her room. She took me into her arms and flooded my face with kisses. \"Oh, I am so happy for you, Jane. I suggested to M'Lady that you might be a suitable replacement for me and she seems to like you.\" Her voice took on a serious note: \"M'Lady likes to hurt her maid.\" She turned me around and inspected my bottom. \"I see you have already been spanked. Well, girl, you will get many spankings, and worse, should M'Lady feels so inclined. Sometimes she will whip you, just for her own pleasure.\n\n\"Lord Barton will also want to use you, but he is altogether different. He will want you to whip him and he will then want to fuck you in your cunt or your arse or your mouth. Whatever he tells you, you must do it, no matter how strange you find his orders.\"\n\nFaith dropped her voice until it was a conspiratorial whisper. \"He married M'Lady for her family's money and she married because she wanted the title. It is a marriage of convenience but a happy one although they do not enjoy 'marital relations': that is where you come in. You will have to take care of both their needs. Get yourself dressed now, while I bring the Seamstress to come and measure you.\"\n\nFaith left me alone so I slipped into my uniform and sat waiting for her to return. As I was sitting there thinking about my new position and what duties I might have to perform, I heard the tinkle of M'Lady's bell. As Faith was missing, I felt I had to answer the summons.\n\n\"If you please, M'Lady, Faith has gone for the Seamstress. How may I help?\"\n\n\"Very good, Jane. Through that door is my bedchamber. There is a robe on my bed. You will bring it here.\"\n\nI opened the bedchamber door and was entranced by the beauty of the room. I saw a deep red silk gown laid on the bed so I retrieved it and took it to my Mistress. \n\n\"Undress me.\"\n\nI opened all the buttons on her blouse and eased it off her shoulders, folding it and setting it to one side, on the same chair where my own uniform had been placed earlier. Her breasts were firm and stood proudly underneath her shift. I loosened the buttons on her silky skirt and steadied her as she stepped out of the garment. I removed M'Lady's underclothes, getting a good look at her slim body, then held the robe open for her to put her arms into the sleeves and I wrapped the robe around her and tied off the belt at her waist.\n\n\"Take those away,\" she indicated her discarded clothes, \"Faith knows what to do with them. Tell her I wish to bathe as soon as she returns. If the Seamstress is with her, she must wait until I have bathed because you must help Faith. Go now.\" \n\n\"Yes M'Lady.\" I bobbed a courtesy and took the soiled clothes with me. I did not have to wait long before Faith and the Seamstress arrived. I relayed M'Lady's message, which sent Faith rushing back out again, presumably to summon hot water for M'Lady's bath. Again, I had to respond to the tinkle of her bell: M'Lady told me to bring before her the Seamstress who was instructed to make my uniforms tight around my body, accentuating my breasts. We were then dismissed.\n\nWhen Faith returned this time, two strapping boys carried a large tub into the suite and deposited it in a room in which the floor was covered with tiles. They placed it on the floor and left quickly. Soon there were four scullery maids, each struggling with two large pails of water yoked across their shoulders. They emptied those into the bath, but one pair was just set on the floor still full, and scurried away with the empty pails. \n\n\"Tell M'Lady her bath is ready,\" said Faith as she checked the water temperature and added a little cold water from one of the pails. I went quickly to M'Lady's chamber and gave her Faith's message. She rose slowly from her bed and, with me following respectfully, repaired to the bathroom. Faith was standing by the bath, wearing nothing but a smile. \"You must undress too, Jane. Whenever you bathe me, you will remove your uniform.\"\n\nI complied, thinking that I seemed to be naked as often as not around here. Faith removed M'Lady's robe folded it and placed it to one side while I was once again getting out of my clothes. I had to stand on the other side of the bathtub and assist M'Lady into the water. Faith started washing M'Lady's body and I was instructed to do the same. As the water splashed all around, I realised why we were naked: our uniforms would have been soaked. \n\nWe were drying her off when a snagged nail caught across her breast. M'Lady immediately slapped me very hard across my face, bringing tears to my eyes. \"Trim your nails, girl. Faith, make sure she does.\"",
        "\"Yes, M'Lady,\" we said in unison and continued our task, with me making sure my offending nail did not hurt her again. When M'Lady was quite dry, we had to powder her everywhere then we returned to M'Lady's bedchamber. We had to dress our Mistress in a foundation garment, which seemed cruelly tight and then over all, we helped her into a beautiful gown. I had the task of brushing her long dark tresses but I was cautioned by Faith to be very careful not to tug on the snags. \n\nMeanwhile Faith was powdering M'Lady's face and applying very delicate colouring to enhance her cheeks. Faith then showed me how to pile M'Lady's hair onto the top of her head and pin it there. When we were quite finished, M'Lady looked so beautiful. She seemed to glide elegantly out of her apartments, leaving Faith and me alone. \"Time for our bath,\" said my companion with a smile. \"We must always bathe after M'Lady.\"\n\nWe returned to the bathroom where Faith added some hot water to the tub and stepped into the water. I bathed her then she made me get into the tub and I was scrubbed for the second time that day. When we were bathed, dried and dressed, we collected M'Lady's soiled clothes and Faith led me out of the apartment. She found Master Johnstone whom she told that our Mistress had finished bathing. We then had to take M'Lady's clothes to the laundry room and collect yesterday's washing, including Faith's own uniform which she changed every day.\n\nWe returned to our room to find the Seamstress waiting patiently. Again, I had to strip as she took all my measurements with her tape measure. \"I'll bring your first set in the morning.\" She informed me before scurrying off to her tasks. Four strong youths arrived and took away the bathtub then we made ourselves busy tidying up the apartment. Faith then showed me how to clip and file my fingernails so they would not cause any more problems, and instructed me to be sure always to keep them short and smooth. \n\nMy friend showed me how to tie and pin my hair, although our hair was not so intricately coifed as our Mistress required of her own. She then sat me down and gave me a lecture on my duties: how M'Lady might want to use me and how to cater for M'Lord's peculiar demands. I would be expected to spank his bottom, much as M'Lady had spanked mine. Sometimes I would have to strap him to his bed and whip him, very hard. I would be required to suck his cock when he so desired and he would want to fuck me in my cunt and my arse. \n\n\"That will hurt,\" she told me, \"but you must not complain, however he wants to have his way with you. Make sure your back passage is clean - I will show how to do that - and it will need greasing. You should do this before you go to him because you will not get a chance to do so later. Even though it will hurt for the first few times he does that, you will find that you will enjoy him fucking you there. I know I enjoy it and often I have a climax. However, Jane, you must always remember that your pleasure is not the object, only theirs, our Master and Mistress. Sometimes you will have to sleep with him or her. You will always be unclothed when you do so and may be woken up during the night to give service, as they require. Another thing, Lord Barton has very bad breath but you must never show any revulsion when he wants to kiss you. You must ignore the unpleasantness.\n\n\"I'm not trying to frighten you,\" she continued, \"just make you aware of your duties. To speak the truth, this is a good position: much better than working in the stillroom or anywhere else 'downstairs'. You will frequently have to deal with the senior members of staff as you relay M'Lady's messages and instructions, so you can, you should, walk proudly through the house as befits your new position. You should not have any more dealings with your old friends downstairs, which is why I have not seen you for two years.\n\n\"During the day, our Mistress will take her meals here in her apartment: it will be your duty to collect her food from the Cook and serve her. Most evenings, however, she will dine with Lord Barton and you will often be present to attend to her needs. Ignore the serving staff, even though they may tease you. Mr Johnstone is in charge of them and he has a keen eye for any misbehaviour on their part. His beatings for their infractions are much worse than any that Mistress Sharp administered.\n\n\"Well,\" Faith said, finishing her lecture, \"that is how your life will be from now on. In two weeks, I will be taking up a new position as Lady Cynthia Smythe-Jones' maid, I am very excited about that, and you will take my place here. I am sure you will do well.\" With that, she hugged and kissed me. Now let us get your back passage clean for I'm certain Lord Barton will call for you as soon as he learns you are a maiden.\"\n\n\"It is called an enema,\" my friend informed me, \"and you really need to do this every day after you have moved your bowels, because you never know when M'Lord may want you and he usually has you sucking his cock right afterwards.\" With that, she produced a fierce-looking metal contraption, which had a large plunger on one end and a narrow metal tube, bent in an 'L' shape, at the other. She showed me how to fill that plunger with warm water and a special soap.  I had to lay on the floor, on my side with my knees pulled up. Faith greased my arse and pushed her finger inside a short way, and then she carefully pushed the little tube into my arse and started depressing the plunger. \n\nMy belly was swelling and I felt very full as she continued to pump more water into me. She made me wait and told me to endure the cramps, which soon started. I had to hold it all inside me for ages before she let me evacuate the smelly mess and then she did it again, and a third time and by then the water passing from me into the pail was clean.\n\nWhen I was dressed again, Faith took me to the kitchen where we were given our meals. We ate quickly in case M'Lady came back earlier than expected. \n\nChapter 2\tEntertaining M'Lord and M'Lady\n\nIn fact, it was more than two hours before M'Lady returned to her chambers. It's not my place to say so, but she seemed a bit tipsy, from the wine at dinner, I assumed.\n\n\"Take Jane to Lord Barton then return to me immediately,\" my companion was instructed. I quickly returned to our room and made sure my arse was well greased then followed Faith along the corridor with my tummy churning. What would my Master be like? What would he require of me?\n\n\"If you please, Sir, this is Jane, Lady Diana's new maidservant.\"\n\nLord Barton dismissed her and turned his attention to me. He was not a big man, smaller than I was, and he was quite portly. He was perspiring heavily and seemed more in his cups than had been M'Lady. \"Don't just stand there, gel, undress then undress me,\" he instructed.\n\nOnce again, I stripped and followed M'Lord to his bedchamber. As I was removing his clothes I realised that Faith was correct: he had very bad breath and I almost gagged from the stench. \"So you are still a virgin?\" \n\n\"Yes, M'Lord, I have lain with no man.\" \n\nHe was fondling me as I undressed him, gently caressing my breasts and gripping my buttocks, his fingers probing my private parts, front and back. \"Nice tits, gel, nice arse too.\" When he was naked, he lay back on the bed and I was instructed to suck his cock. I forced myself to take his limp member into my mouth as he held my head. Before too long, as I continued to service him, his cock grew and hardened and soon he was trying to force my head further onto his flesh until it was trying to push into my throat.\n\nHe pulled back and I saw, for the first time, a fully rampant male member. Surely, it was too big to enter my body, I thought, it will split me apart. I was more than a little fearful when he had me lay on the bed with my legs apart. He knelt between my legs and I felt his cock probing at my cunt and pushing its way inside me. M'Lord gripped my hips and thrust himself forward. I think it was fortunate that I had moistened his cock with my mouth, because I was quite dry down there but he did not care. He just pushed into me until he came to my barrier then moved slowly in and out. That gave me feelings similar to those M'Lady had given me and I felt my body reacting by flooding my pussy with liquid. This helped a lot but, when he thrust himself savagely past my barrier, I felt a sharp pain that made me squeal aloud. M'Lord ignored that, building up a rhythm of pushing in and out, as my pussy tried to adapt to this invasion. \n\nAs he continued to drive into me, my body took over and I felt that nice warm feeling my Mistress had given me. His thrusts became more and more urgent and he was grunting with each push until suddenly he rammed his cock all the way into me and I felt a throbbing and his seed pumping into me. This made me almost faint with the pleasure I felt and I experienced an empty feeling as his softening cock withdrew.\n\nI was made to take that cock into my mouth again. It was covered in my blood and I could taste my own juices and his seed. I must admit to enjoying that. After several minutes, the flesh in my mouth grew back to full size and he was trying to force it down my throat, with only limited success as it made me gag, but M'Lord persevered until I felt my throat being forced open by his cock.\n\nI was just becoming accustomed to this assault when he pulled out. \"In that drawer, gel, find the paddle. Get it and sit there.\" M'Lord indicated a solid upright chair. I retrieved the paddle and sat as instructed. M'Lord bent over my lap and I was told to spank him. My first stroke was tentative as I was not sure just what he wanted. \"Spank me like you mean it!\" I was told, so I started spanking much harder until he was squirming on my lap but I was instructed to continue. His bottom was very red and looked sore by the time he had experienced enough. I was then thrown back onto the bed and he fucked me again, roughly. He had made me bring the paddle with me and I had to use it as he fucked in and out. It was quite difficult for me to concentrate on my task as once again, my body was overcome with another climax and his seed flooded my pussy again. He flopped out of my pussy, rolled over, apparently exhausted, and dismissed me to return to my Mistress.\n\nAs I dressed, he pulled on the cord on the wall behind his bed and, while I was still half-naked, Johnstone entered the bedchamber. \"You rang, M'Lord?\" he said, ignoring me. I hurried out of there and walked back to M'Lady's chambers, trying to let myself in without disturbing my Mistress, but she must have heard me and called for me to attend her.\n\nShe was on her bed with Faith, both of them naked and Faith's face was very wet as she looked up from her position at M'Lady's cunt. \"Did my husband fuck you?\" she demanded.\n\n\"Yes, M'Lady, he did that twice.\"\n\n\"Strip and onto the bed with you, Jane. Faith, clean out her cunt. I don't want to taste him at all.\" Again, I found myself with my legs spread and Faith ministering to me, giving me more of those lovely feelings through my body. It was helped by my Mistress playing with my breasts, pinching my nipples and taking them between her teeth, all the time requiring me to tell her all about my evening. I felt Faith's tongue penetrating me, seeking out all my Master's deposits. She was everywhere, even pushing her tongue into my arse, which was curiously delightful. \n\nWhen I got to the part where I had to clean him after he had fucked me, I told M'Lady that I tasted my own blood on him. \"Did you like that taste?\" she asked.\n\n\"Yes M'Lady, I think I did.\n\nIt was not too long before M'Lady changed her place. I was still in the same position with Faith between my legs but now my Mistress was kneeling over my face and she sat down and smothered my mouth with her pussy. She tasted delicious and I needed no orders to start servicing her with my tongue and lips. I was in heaven with my friend servicing me as I was doing the same to M'Lady. For more than an hour we all played together on M'Lady's bed, giving each other many climaxes.\n\nAt one stage, M'Lady had me on my back with legs spread as much as possible while she pushed a finger up my slick pussy. A second finger was introduced and the two fingers moving inside me found sensitive spots which had never been touched before. Faith was told to play with my clitoris which made me gush more. The third finger hurt at first but it was a nice pain which faded slowly and soon felt wonderful as they all moved in and out, giving me another climax. Then we two girls spent the next hour just pleasuring our Mistress with our mouths and hands before she finally ordered us to towel her down and dress her for bed. We then left for our own bed spooned together with my hand resting gently on the huge swell of Faith's breast.\n\nChapter 3\tFaith's last night\n\nThe next two weeks seemed to fly past. Faith showed me all I needed to know about my new position. It was mainly to keep M'Lady's apartments clean and tidy, carry messages to the Housekeeper or Butler, ensure M'Lady's clothing was properly washed and pressed, dress her as required, bathe her ... all those little tasks occupied much of my time. And, of course, to be on hand to meet any of M'Lady's requirements and frequently that meant satisfying and abating her passions. M'Lady seemed almost insatiable, demanding that one or both of her maids service her at any time, day or night. Truth be told, we both enjoyed that side of our life and even liked to have our own pleasures once M'Lady dismissed us for the night. Lord Barton sent for me three more times in that period and fucked my arse each time. Faith was correct, I did learn to enjoy having my back passage fucked and being clean inside myself made the task of sucking his cock afterwards less unpleasant. Because M'Lady did not like the taste of her husband in my arse and pussy, Faith taught me how to douche and cleanse myself inside before attending my Mistress. I had my bottom spanked by M'Lady several times: I was getting used to these and found the pain very exciting, much to her pleasure. I was surprised by the attitude of Mistress Sharp and Master Johnson: they both seemed to have a greater respect for me and if I had business with either of them, they attended to me right away.\n\nIt was Faith's final night before she left M'Lady's service to travel to her new position. My Mistress surprised us maids by ordering a couple of bottles of wine to celebrate. She insisted that we both had three glasses of the stuff and M'Lady drank the rest. I had never drunk any alcohol so three glasses of wine, while delicious, had me feeling more than a bit dizzy. But M'Lady was in a fine mood and decided that tonight I was to be the plaything of them both. I think Faith enjoyed paddling my bottom as much as I enjoyed it: my mouth was clamped on M'Lady's pussy and Faith had to spank until our Mistress had a climax.\n\nWhen she had recovered, M'Lady told Faith to get the whip. My friend went to a certain drawer and brought out a horsewhip which she presented to our Mistress. I was told to stand in the middle of the room, legs apart and with my hands clasped behind my neck. M'Lady walked round my body, touching it with the tip of the whip. Suddenly she flicked the tip over one of my nipples. Ow, that stung and made me suck in my breath before the other nipple was struck. She circled me some more, trailing the tip of her weapon over my skin, before standing in front of me, she whacked right up between my legs, aiming the vicious strike at my pussy. I squealed through clenched teeth as this new wave of pain hit me. Satisfied with my reaction, I saw M'Lady's eyes glistening with pleasure. She stepped close to me and kissed me sexily, the while rubbing the staff of the whip between my pussy lips and over my clitoris.\n\n\"Tonight, Jane,\" she panted in a whisper, \"I am going to hurt you and hurt you. I'm going to make you scream and cry. I was going to beat Faith as well, but we can't send her off with the bruises so you will have her share as well as your own.\"\n\nFaith was told to kneel behind me, hold my pussy lips apart to expose my clitoris which M'Lady whipped several times. It was agony but I did not get any time to absorb the pain before she lashed across the soft flesh of both my breasts, catching across my nipples. I looked down at my breasts to see a dark bruise starting to form against the pale skin. She put the whip to one side briefly then took one breast in her hand, pinching the sore nipple before taking it into her mouth and biting harshly on the hard nub. This was repeated on the other breast before she slapped both breasts with her hands several times and then picked up the whip again.\n\nWalking back and forth in front of me slowly, she picked out target after target with the whip until my front was crisscrossed from shoulders to thighs with dark stripes and I was screeching with each stroke and blubbering like a baby but she was relentless until I moved my hands to try to protect my body. \n\n\"Straps,\" she ordered and Faith produced a set of leather bindings. I was put face down on the bed while Faith proceeded to bind my wrists and ankles to the corners of the bed until I was spread out and helpless. M'Lady just let rip on my back, striking repeatedly with the whip. Oh god, how it hurt from my shoulders to my thighs. Eventually Faith was told to release the straps and I was made to turn over, face up.\n\nM'Lady knelt between my legs and insinuated a finger into my pussy which was leaking copiously. A second, then third finger soon joined the first, all of them moving and massaging me from the inside. That was nice but then she pulled back and before long four fingers were trying to enter me, stretching my poor pussy almost unbearably. Eventually M'Lady pulled out then shoved all four fingers as far as she could. I screamed and writhed, trying to close my legs, trying to pull back, away from the relentlessly thrusting hand. She stopped all the movement and just ran her fingers over my pussy but told Faith to strap me again. The straps were pulled taut until I was stretched and helpless again.\n\nM'Lady's four fingers penetrated me again, but more slowly, allowing me to adjust to the pain as they tickled right up inside my pussy, twisting this way and that until I found myself raising my hips to meet each penetration which sparked off little bush fires racing through my body.\n\nM'Lady withdrew her fingers and brought her hand to my mouth. I had to lick it all clean while Faith bent down to nibble at my clitoris. I could not see what was happening 'down there' with Faith's head blocking my vision but I felt M'Lady's fingers once more entering my stretched pussy. Oh god, I felt her curl her hand and her thumb joined the fingers as she pushed them further into me, I felt I would surely be split wide open but she eased it back and forth a few times.\n\nM'Lady whispered something to Faith who swung her legs over my upper body and I saw her pussy descending onto my face and mouth, dripping as it came down. My mouth was smothered and I used my tongue to go inside her. Suddenly I felt a whole hand powerfully, relentlessly, enter my passage. My screams of agony were muffled: Faith's pussy was grinding into my mouth as M'Lady's hand repeatedly violated my pussy. Then suddenly, I found myself on a plateau on which all the pain transmuted into pleasure and Faith moved so she was back at my clitoris.\n\nI was gasping for air and squealing in pleasure as M'Lady thrust right in and Faith bit hard on my clitoris. The most massive climax completely took over my body and I was thrusting back at the hand that was pleasuring me so much. I do believe I lost consciousness for a short while and came round to see both my torturers smiling down at me. Faith's hand massaged my clitoris gently as M'Lady slowly pulled her hand out of my pussy. There was another painful stretching as the width of her hand passed out, then only a feeling of emptiness and soreness.",
        "I was totally drenched in sweat as Faith loosened the straps but that did not stop my Mistress crawling up my body to kiss me passionately, her hands moulding my breasts and pinching the nipples hard which, after the pain my pussy had suffered, was just a pleasure. When I was free of the straps, I was ordered to towel myself down then rejoin M'Lady and Faith. Now it was my friend's turn and M'Lady told me we had to spend the rest of the night pleasuring Faith before she left us in the morning. It was well into the night when we finally dressed our Mistress and put her to bed before we both retired, exhausted and glowing from the night's activities.\n\nWe overslept a little and then it was a scramble for Faith to get ready for her new life. M'Lady had ordered the Seamstress to run up a small trunk of new clothes for her and a carriage would come to take her away but she had to dress very quickly. When she was ready, we both entered M'Lady's bedchamber for Faith to say her goodbyes. Even our Mistress was tearful as we all kissed. Faith left me to dress my Mistress as she walked out of my life. We did meet up later but in very different circumstances, as I will relate.\n\n\"Well, Jane,\" M'Lady said after I had dressed her, \"it's just you now. Come, kiss me.\" She hugged me close and I flinched because of the painful bruises all the way up and down my back. She immediately released the hug and took my face in her hands as her tongue pushed insistently into my mouth. \"Undress, Jane. Let me see how you look.\" I complied and M'Lady inspected the damage she had inflicted upon me. \"You will be sore for a few days, Jane, but you were very brave last night. I will not let my husband have you for a day or two. Now go about your duties.\"\n\n\"Yes, M'Lady. Thank you, M'Lady.\"\n\nIt was about four days later that M'Lady started menstruating. I was horrified when she ordered me to lick her clean until she reminded me that I liked the taste of my own blood. Although reluctant I touched my tongue to the ooze of blood and tentatively drew my tongue back into my mouth. Not as bad as I thought. I will try some more. Yes I think I like this metallic taste, was my feeling as my mouth closed in on its target.\n\n\"Oh, that's nice Jane. Why I always want more sex when I'm bleeding, I just don't know, but you may neglect some of your duties because you will be spending much more of your time right where are for a few days. Ah yes, just there girl, harder. I can't wait to taste your blood.\"\n\nTwo days later she got her wish when my own bleeding started and, now I had learned the joys of sex, I too felt almost insatiable. We were fortunate in that our times were close together because we could both go on forever. Within a couple of months, our cycles matched exactly. One month we spent four days in her bed doing nothing but pleasing each other, broken only by my visits to Cook for trays of small foodstuffs, like some of Cook's own pork pies, or sausages or a cheeseboard and bread and butter. We hardly slept, we did just about everything that two women can do to each other, always seeking that time out of time when climax merged into climax.\n\nFaith was right, this was about as good a position as a serving wench could get. M'Lady did not give me too many tasks, I think M'Lady was a little bit in love with me and I had the temerity to feel the same about her.\n\nLord Barton required me to attend him about three times a week. As well as having his pleasure with me, he sometimes had one of the page boys, whom he liked to bugger join us. I am glad Robin Farrer, the page, also kept his back passage clean because I would have to suck Lord Barton's prick after he had buggered Robin, and I sometimes had to pleasure Robin with my mouth. Robin was as sweet as our master was foul. \n\nThe only other times I enjoyed my evenings with M'Lord was when I had to beat him. M'Lady knows I enjoy being beaten and it gets her very erotically charged to whip me, and maybe that is why she loves me a little. Sometimes she really lays into me with her horsewhip and I have a climax just from the exquisite pain. So, I thought, one time when M'Lord was telling me to beat him hard, if I can make him climax like that, maybe I would not have to lay with his stinking body on and in me. Therefore, I kept on hitting him as hard as I could. Now I knew why M'Lady liked doing this to me. I watched the welts appear across his back, buttocks and thighs and then, glory be, his body was jerking as his tool was spurting its cream onto the bed covers. I was right, he was too spent to want to use me again so I was dismissed.\n\nM'Lady wanted to know why I was so excited when I returned to her chambers so I found myself telling her what had happened, how her husband had spent on the bedclothes when I beat him mercilessly. M'Lady wanted me to tell all the details and I could tell from the juices leaking from her pussy that she was getting very excited too. I finished my tale across her lap while she gave me a really good spanking. When I had finished telling her. She had me retrieve the whip from its drawer then bend over the back of her chair. \"I know what we both need, Jane,\" she whispered before the whipping started. It was amazing that she had a climax, without being touched, at exactly the time of my own. \n\nThere was an added bonus for me. M'Lord did not send for me so often, only once or twice a week, but after about a month I would have to beat him again. Afterwards, I was usually whipped by M'Lady to the extent that we both climaxed together. Oh, they were lovely, those nights.\n\nChapter 4\tLord Percival Underweir\n\nThree times each year, Lord Barton and M'Lady travelled by train to other cities in connection with his business interests and as a holiday for her. Their personal servants travelled with them.  Master Johnstone and I would travel in the luggage car to each destination. It was almost a year after I had taken up my position as M'Lady's maid that I was sleeping in the strange servant's quarters on one of the journeys when I was shaken awake by our hosts' housekeeper, told to dress quickly and instructed to follow her. Eventually she knocked on a door and I was ushered in.\n\nM'Lady was laying across the bed lasciviously, wantonly naked. Her pussy was open as if she had just been fucked and leaking a cream which I recognised. A strange man, as handsome and comely as I have ever seen, who was also unclothed, was kneeling next to her playing with her breasts, tweaking at her nipples which I knew she loved. \"Jane,\" said M'Lady, \"Clean this gentleman's prick with your mouth. Undress first, girl.\"\n\nI stripped quickly and took hold of the man's almost-soft prick and licked the tip for a while then sank my mouth over it. I could taste my mistress on him, and the saltiness of his sperm. It was such a lovely tool, I was enjoying taking it into my mouth and, as it grew hard with my ministrations, I took it into my throat, as I had been forced to do by Lord Barton. But this time I was doing it willingly and the gentleman took hold of my head and fucked my mouth and throat. \n\nI was enjoying myself and was disappointed to hear M'Lady say, a little impatiently, \"Now come and clean me girl.\" But I moved from one pleasure to another as I worked assiduously to savour the taste of everything in her pussy. I know she had two climaxes before she was satisfied for the moment and my face was pushed away. All the time I had been pleasuring M'Lady, the gentleman was fondling my breasts, playing with my nipples. He leaned over and whispered something to M'Lady. \n\n\"Of course you can. Use Jane any way you like. Spank her if you wish: that always gets her excited enough to go wild and willing for anything. It will be interesting for me to watch her reactions.\"\n\n\"Thank you Diana,\" he spoke aloud for the first time. A deep voice which rumbled, the sound seemed to penetrate my flesh, vibrating in my depths. He spoke again, \"Jane, that's a pretty name for a pretty wench. Come, let me look at you.\" Standing, he held my face between his hands and stared at me with his big liquid brown eyes. I felt almost shameless, staring at this very handsome man. I tore my eyes away from his and cast my gaze down but he shook my head gently and raised my face to look at him again. \n\nHis hair was a deep red, as was the goatee and bushy moustache. The long forehead led down to those intoxicating eyes. He had high cheek bones, an aquiline nose and the generous lips were slightly opened in a smile. Pulling my face to his, he kissed me, so soft and gentle it made my heart melt like ice on the hot stove. We both gasped as he pushed our faces apart. \n\n\"Indeed, Diana, she is a delectable creature.\" He seemed just as delectable to my sight and had sparked a fever in me I had never known before. I desperately wanted to kiss him again so, bold as brass, I did. His lips were very mobile and his mouth opened with his tongue starting to probe. I held his tongue between my lips and sucked it hungrily into my mouth as if I were sucking his cock.\n\nAs we were kissing so passionately, his hands were roaming all over my quivering body, tweaking my sensitive nipples, squeezing and fondling my breasts, brushing lightly over my abdomen, fingers running through my bush then penetrating my slit. I gasped into his mouth when he touched my pleasure button, my body became limp in his arms and he laid me gently on the bed. I welcomed him between my legs, I welcomed his hard tool teasing up and down my pussy lips, I welcomed that tool into my body and had a climax as soon as he thrust himself right into me, stretching my pussy, taking control. He plunged deep in heavenly long, slow strokes repeated endlessly, seemingly touching places never before discovered. He was driving me out of my mind as he speeded up his thrusting, making me squeal aloud with each stroke. I knew he was close to shooting inside me so I tried to squeeze my pussy around his prick until finally he cried out, \"Jane, oh Jaannnne ...\" as I felt him pump into me and that lit the wildfires coursing through my soul. We clung to each other, gently kissing as we recovered from the intense passions of the past few minutes. I closed my eyes, relishing the feeling of his tool softening in my pussy and felt bereft when it finally left me.\n\nI was startled by the touch of a cool hand wiping away the tears of sheer joy from my face. I opened my eyes to see that it was M'Lady hand performing this service. Her eyes glistened with pleasure. Turning them to my lover she said, \"That was beautiful and so exciting to watch, Percy.\" She was on one side of me, he on the other. M'Lady kissed him passionately over my body. \n\nHe broke the kiss with M'Lady, bent down to kiss me briefly then said in that deep voice, \"Jane, I think your Mistress should taste our juices.\"\n\n\"Oh no Percy, I won't do that,\" she cried.\n\nHe put a finger in my pussy, stirred it around then brought it to M'Lady's lips but she held them clamped shut, refusing him with a shake of her head. Undeterred he bathed her lips with his wet fingers, until she relented and opened her mouth to suck his finger clean. He dipped his fingers in my pussy again and brought them back to her mouth. This time she needed no urging. It seemed she liked the taste after all. Twice, thrice and four times he repeated his actions. Then he smiled at me and told me to sit upon M'Lady's face. \n\nAgain M'Lady defied him, saying, \"No, Percy. She is my servant.\"\n\n\"Trust me, Diana,\" he coaxed, \"you like the taste on my fingers, I promise you will enjoy licking her cunt for more of the taste. Jane, sit on her mouth. She wants it but is afraid to admit it.\" I looked at her to check for her permission but she said neither yea or nay so, urged by the man, I presented my pussy to my Mistress. He spoke truly. Not long after I felt M'Lady's first, tentative, licks, her tongue was penetrating my pussy, performing the service that had been mine to her, as her maid.\n\nHis smile was mischievous as he asked me, \"Jane, you like a spanking, don't you?\"\n\n\"Yes, Sir, I like to be spanked.\"\n\n\"Then I'm going to warm your pretty little bottom before I fuck it.\"\n\nThat thought set me all-aquiver again as I enjoyed the tongue licking out my pussy with enthusiasm. Then M'Lady made to lick her tongue firmly over my clitoris which propelled me to another climax. As she was coping with the extra flood, he was making free with his hands on my breasts and his mouth on mine. I reached down to feel his prick growing in my hand as I stroked it up and down. As it leaked from the top, I spread his own juice all round, making it slippery in my hand. \n\nAfter many heavenly minutes of this, he decided it was time to spank me so I was bent over the side of the bed as he stroked my bottom, the calm before the storm. M'Lady saw her chance and manoeuvred her body until her cunt was in my face so I started to lap at her juices. Then Percy's hard, horny, hand came down for the first of many times. It was as good a spanking as I had ever had, with soft caresses after every few strikes. He then used his hand and my juices to lubricate his prick and my arse, positioned the hard flesh at my back entrance and pushed right in. Oh, that lovely burning pain as my arse was stretched to accommodate him and he was in full heat as he thrust himself into my arse relentlessly. He gave me two climaxes like this before I felt him give a final deep thrust and hold it there as his sperm pumped my back passage full.\n\nWhen he was finally spent, he presented his softening tool to M'Lady's mouth. She did not hesitate for long before she reached her tongue out to taste then took the tool between her lips and sucked. Well, we three played around until my Master and Mistress were satiated. He had been very persuasive and had M'Lady do things she had never considered before but she always relented and seemed to enjoy whatever he suggested. So it was that I was eventually dismissed. I left them still entangled in a passionate kiss and found my way back to the room I shared with a maid from our hosts' household and pulled the blanket over me as I fell, exhausted, to sleep.\n\nI attended M'Lady the next morning to wash and dress her and had to start by using my mouth to bring her to a couple of orgasms before completing my usual tasks. She seemed thoughtful when I served her breakfast and finally said, \"Jane, you will join me and Lord Underweir this evening. He finds you very attractive wants you with us again.\"\n\n\"Very good, M'Lady,\" I replied, thrilled with the prospect as I liked him so much.\n\nSo it was that, as M'Lady walked to Lord Underweir's chambers that evening, I followed her. When we arrived, our host kissed M'Lady first then turned to me, took me in his arms and kissed me deeply and passionately. I hoped my Mistress would not get jealous that he was kissing me much more than he kissed her but she did not seem to mind and soon we three were on the bed naked and setting about the business of giving and receiving pleasure together. This state of affairs continued each evening for about a week until one day M'Lady said I was to go to Lord Underweir's chambers on my own, without her. I had an evening of loving with Percy, as I was instructed to call him and we spent the night in his bed, although we did not get much sleep. The following evening it was M'Lady who went to Lord Percy alone. She returned to her own rooms at the end of the evening and, as I prepared her for bed, she kept looking intently at me with an enigmatic smile playing about her lips.\n\nAfter M'Lady broke her fast, a page arrived and asked M'Lady if I would attend Lord Underweir so she instructed me to go to him. Little did I know that my life would be turned upside down in the next few minutes but I knew something was different when he told me to sit with him. He took my hands in his and just simply asked me to marry him.\n\nHis proposal, coming out of nowhere like that, caused me to swoon. I came round in his arms to see the concerned look on his face as he stared down at me. He sat me upright again and said, \"Well Jane, what do you say? Will you marry me?\"\n\nM'Lord, how can I marry you, I am a simple serving wench, a lady's maid.\"\n\n\"If you say 'Yes', Lady Diana will teach you how to be a Lady. We will all talk about it shortly and arrange how this is to be done.\"\n\nI stared at the man, saw the love in his eyes and realised that I was deeply in love with him. \"Yes, M'Lord, I will marry you, if you can make it possible.\"\n\nHis put a finger to my lips. \"Not M'Lord, Jane. I am Percy and you must call me so.\"\n\n\"Yes, Percy.\"\n\nHe took me into his arms once again, kissed me thoroughly then we both returned to M'Lady's chambers. Over tea, we discussed how I could be introduced to him officially. I did not have much to add to the conversation, still wondering about this momentous change in my life. Soon they had a basic plan laid out. Diana, as I was told to call M'Lady, would teach me the ways of an English lady. I was to have basic schooling and various tutors to coach me in all the skills I would need. Percy would provide me with a complete new wardrobe which would befit my new status. We spent the whole morning making plans for my future. I think Diana was as excited as I was at the prospect of taking me under her tutelage. We all had lunch together and then Percy left us to take care of his business.\n\nChapter 5\tMistress Jane\n\nNow Diana (I still felt uncomfortable calling her that) and I talked about our return to Barton Court. She would introduce me to our neighbours and her friends as a distant cousin and install me in the suite next to hers. When Diana thought I was ready, I would be introduced to Percy as her cousin. There would be a long courtship as my training progressed until, finally, we would be wedded and I would become Jane, Lady Underweir.\n\nLord Barton was, naturally, acquainted with Diana's plans and guffawed loud and long when he was first told. He was amused by the whole affair and, give him his due, he never again treated me as his wife's maidservant except the second day after we arrived back at Barton Court, he asked me - asked, not ordered - to attend him and give him one final thrashing 'for old time's sake' as he said. Robin was there, too, and Lord Barton was buggering him while I turned M'Lord's arse black and blue before he finally ejaculated into Robin's back passage. M'Lord actually thanked me and wished me well for the future.\n\nThe promised suite adjoining Diana's was made available to me and I was given a small wardrobe of some of Diana's clothes to see me through until Percy's wardrobe came. I felt so strange in M'Lady's - no, Diana's - gowns but they fit me with just a little adjustment. \n\nLord Barton summoned me and Diana to his office then rang the bell for Johnstone to attend. He was informed of my change of status. Johnstone was to instruct the whole household staff that there should be no gossip about my change of status but that I was to be treated with the same respect Lady Diana commands. She was to have a new maidservant and one would also be allocated to me. Johnstone had a twinkle in his eye for me as he left to carry out M'Lord's instructions. \n\nMy final task for Diana would be to train her new maid, as I would also have to train my own girl.  Lord Barton insisted that either or both new girls should also be available to him when he so required. It was I who suggested that Eleanor, who was currently working in the linen room, might suit Diana's needs. She had the sort of figure Lady Diana preferred and she had a happy nature. My choice for myself was Annie, a pretty girl just turned eighteen with a sweet disposition and comely body and who had shared my room when Faith became Diana's maid. Annie had also been with me in the still room I had left just over a year ago. I joined Diana in her chambers as Johnstone was instructed to bring the two girls to us. ",
        "Here I must digress to tell you how my parents learned of my change in status. After my unofficial betrothal, and I had started learning to become a Lady, M'Lady sent a message to my parents, inviting them to take tea with Diana Lady Barton at three of the clock on Sunday. The messenger was told to assure them there was nothing amiss. As Annie knew my parents she was to meet them at the gates and bring them to M'Lady's sitting room. Diana and I, me in one of Diana's loveliest gowns, sat side by side and there were comfortable arm chairs for her guests. Eleanor was standing to one side by the Welsh dresser. Annie knocked and entered when called. \"Mr and Mrs Fairfax, M'Lady.\" \n\n\"Take their coats Annie,\" instructed Diana, rising to escort my mother to one chair and indicating the other for my father. She sat back down next to me. They were both staring at me sitting by a Lady and dressed like I was one, too. \n\n\"Eleanor, tea for Mr and Mrs Fairfax. Annie, the sandwiches.\" \n\n\"Yes, M'Lady.\"\n\n\"Mr and Mrs Fairfax, I am sure you are puzzled about why I might invite you. Just as you are puzzled to see Jane looking as she is. She asked me to tell you because you may not believe her, indeed she has difficulty believing it herself. Cutting to the truth, Jane's position in life has changed enormously, she is to become a Lady. Now I must ask something from you, Will you both solemnly swear not mention anything else you hear to anybody, not even your family? Please believe me, your daughter's future depends on your silence.\"\n\nHe looked over at my mother, she nodded so he replied, \"Yes, we both swear not to say anything.\"\n\n\"Jane, you tell them.\"\n\n\"Thank you, Diana. Mummy, Daddy, it's really true. Lord and Lady Barton were staying with another peer, a friend of his. I travelled with my Mistress as her maidservant and one day our host saw me serving M'Lady and tried to spend as much time in M'Lady's company as he could, just so he could see me. Then one day, he asked me to become his wife. Oh, Mummy, he is just a little older than me, he's so handsome and loves me dearly so I accepted his proposal. It's clear he could not marry a servant so Lady Diana has graciously agreed to train me in ladylike ways. I have become her guest and I am to be known as her cousin. When I am ready I will be introduced to my Lord, he will court me, propose to me. Then we will be officially betrothed to be married and I will become his Lady.\" I shrugged. \"I have a long way to go before I walk down the aisle.\"\n\n\"Who is this Lord?\"\n\n\"Daddy, I too am sworn to secrecy. I may not say until we have been introduced to each other socially.\"\n\n\"That is true, Mr Fairfax. She and her unofficial fianc\u00e9 know, of course, I know and Lord Barton must know because Jane has her own apartment next to mine, even her own maidservant, that's Annie behind her. To the world she will be my social equal. My husband will be escorting her to many social functions so her position here must match her life and her expectations.\"\n\nI stood up and pulled my Father to his feet and hugged him. He was trembling a little. Mummy next. I threw my arms around her and she hugged me to her breast. \"Oh Mummy, I'm so scared. I don't think I can do this.\"\n\nShe gave me a squeeze, put her hands on my shoulders and gave me her most serious look. \"Jane Fairfax, you weren't brought up to give in. I am proud of you. You always deserved the very best. Now you hold your head up and don't let me hear what you can't do. You can be what you desire. My dearest child, I think this will be goodbye for us. Go to your new life with all my love and blessings.\"\n\nShe turned to Diana, \"M'Lady, would you excuse me and Mr Fairfax. We won't take up any more of your time. Thank you for the tea and particularly thank you for the wonderful news you have given us.\" Now she hugged me close and kissed me. They both turned and walked towards the door.\n\n\"Annie,\" M'Lady quickly summoned her, \"Their coats, then walk with them to the gates.\" \n\nI called after them, \"Goodbye Mummy.\"\n\nDiana put her arm around my shoulder, hugged me then used her handkerchief to wipe away the tears streaming down my face.\n\nChapter 6\tAnnie and Eleanor\n\nI could see their nervousness as the two new maids were brought in by the Butler. Both curtsied deeply when ushered before us. They had clearly been subjected to the same bathing routine I'd had so were freshly scrubbed and with their carefully brushed hair still damp, in new uniforms. Eleanor was told to remove hers as soon as Johnstone left about his duties. \n\nIt was almost a repeat of my own introduction to personal service as Diana first examined her everywhere then required of her new maid a kiss. She tried, poor girl, but I could see she was as inexperienced in such things as I had been. Diana looked over at me with a shrug and a helpless smile and told Eleanor to ask Mistress Jane to teach her to kiss. \n\n\"Please, Mistress Jane, will you teach me how to kiss?\" Her lips were soft and fulsome against mine, but static. I quickly introduced her to the more exciting ways of kissing, using her lips and tongue while I played with her large bosom, which was one of the reasons I had suggested her, knowing Diana's predilection for over-sized breasts. Happily, she responded quickly and I soon passed her back to her Mistress and was pleased to see that Diana was enjoying kissing those luscious lips and that her new servant was returning the favours enthusiastically. Eleanor was on her knees learning the taste of M'Lady's pussy when Diana suggested that I take Annie to my own chambers to start her training.\n\nAnnie followed me through the door connecting my and Diana's rooms. My first action, when we were alone, was to kiss her. She too was inexperienced in that department, as I had thought, but she was a quick study and soon our kisses became more passionate. I had her remove her clothes and examined her closely. She had lovely soft skin and I took much pleasure in touching her everywhere but she flinched when my finger entered her virgin pussy. She was quite dry down there so I supposed my finger pushing in was a little uncomfortable. She was also blushing furiously at the invasion of her private parts.\n\n\"Annie,\" I said firmly, \"you are now my personal maidservant. I can, and will, touch you wherever I want. You must get used to it and learn to like it because I will often take my pleasure with you. I have a large sexual appetite and you will satisfy my needs.\" With that, I reached for her breasts and pulled on her nipples to bring her body closer to me. I kissed her sexily, one hand playing with her breasts and nipples. Tthe other massaging the mound above her pussy and before too long I was pleased to notice her juices starting to trickle onto my fingers and her nipples popped up with the treatments they were getting. That was a good sign. I remembered my own first climax at the hands of my then Mistress in just these circumstances and wanted this to be Annie's. Sure enough, her breathing became heavier, panting as my finger slid, now easily, inside her. \n\n\"Mistress Jane, oh Mistress, what is happening to me?\" By now my finger was stirring around inside her pussy and I took an engorged nipple into my mouth and sucked it hard. When I rubbed a thumb over her clitoris, Annie let out a loud shriek and collapsed into my lap. I let her lay there until she came back to her senses, I looked at her lovely body, her high and pointed breasts, her slim waist, her flaring hips. My finger was still gentle pushing in and out of her pussy when she moaned softly, shuddered and muttered an apology, saying she didn't know why she collapsed. I assured her I was not annoyed. \n\nI brought my fingers, slick with Annie's juices, to her lips but she shrank away from my hand so I licked my fingers and was pleasantly surprised by the taste of my maid. She was as sweet as a honey pot, so delicious, I dipped my finger into her pussy again and brought a fresh supply to my mouth. Annie's eyes were as wide as saucers when she saw me obviously relishing her taste from 'down there' so when I brought my fingers to her lips again, she nervously let the fingertip touch her lips which she licked to taste the juices then, seemingly wanting more, she took my finger into her mouth and sucked avidly.\n\n\"See, Annie, you taste very nice, don't you?\"\n\n\"Yes, Mistress Jane. You gave me feelings I have never had before.\"\n\n\"Did you like those feelings? Would you like more?\"\n\n\"Oh yes, Mistress,\" she responded with her eyes shining.\n\n\"Then I promise you that you will experience those feelings many, many more times as you satisfy me. But, for now, get dressed and kneel here by my side, there is much for you to learn about your new position. \n\n\"Annie,\" I continued when she was on her knees, \"you know that I was in just your position when M'Lady took me on as her maidservant? Yes, well I know exactly how you are feeling right now. You are nervous, you are wondering just what you may have to do for me. Perhaps you are worried that you might do something to annoy me and that you might sent back to the stillroom. Or that I will be a harsh Mistress. Let me tell you that my time as M'Lady's maidservant has been the best year of my life. So, you must relax, you must learn your tasks and duties. Some of them are pleasant, as you have just experienced, but I must tell you that some things that will be required of you are not so nice. More of that later, but you must do the best you can and I'm sure your time in my service will be much better than working in the still room. And remember that I am as new to my new position as you are. We must help each other.\"\n\n\"Yes, Mistress Jane, I will try my hardest.\"\n\n\"I know you will, Annie.\" I patted her bowed head. \"You and I were good friends when we worked side by side. It cannot be quite the same now I'm to become a Lady but I will always think of you as my dear friend.\"\n\n\"Thank you so much Jane.\" She put her hand to her mouth when she realised her transgression. \"Forgive me, Mistress.\" \n\n\"Hush, girl, you are forgiven, but you must always call me Mistress, especially before anybody else.\"\n\nChapter 7\tJanice learns a lesson\n\nThere was a knock on the door connecting my room to Diana's. \"Enter,\" I called.\n\nIt was Eleanor, wearing her uniform again. \"If you please, Mistress Jane,\" she said, bobbing a curtsy, \"M'Lady would like you to come and bring Annie.\"\n\n\"We will be there directly,\" I responded, and told Annie to get to her feet. \n\nDiana had that certain look about her which I recognised as that of a woman satisfied. \"Jane,\" she greeted me with a kiss. I could taste what I assumed to be Eleanor on Diana's lips so her new maid had obviously been learning to please her Mistress. \"I think we should have the Seamstress make these girls new uniforms.\" She smiled. \"Eleanor, tell the Seamstress we require her services.\"\n\n\"Yes, M'Lady.\" Eleanor left us to fulfil her task.\n\n\"She can make a start on a couple of pretty gowns for you, too. The rest will have to wait until Lord Percy's gift arrives.\"\n\nIn the past year there had been a change in the household staff. Mistress Sharp had been rushing about organising the preparation of food for a large party Lord Barton had arranged when she suddenly keeled over, dead. It was the Seamstress who took over the Housekeeper's position while her assistant assumed the role of Seamstress.\n\nWhen I had worked in the stillroom, Janice, for that was the name of the new Seamstress, had always treated me with disdain and often downright unpleasantness. It was she who had gleefully reported an imagined infringement of the rules to Mistress Sharp and caused me to have a sore bottom. When Janice arrived, followed by Annie, she gave me a seething look of hatred and jealousy and she barely concealed the smirk on her face.\n\nDiana was quick to notice her attitude towards me and her face coloured with rage. \"How dare you behave so? Eleanor, bring the Butler and the Housekeeper to me immediately. You,\" she said, pointing at Janice, \"Do Not Move One Inch.\" For several minutes, until Johnstone and Roberta Black, the new Housekeeper, joined us, the atmosphere in the room was seething. \n\n\"Mistress Black, I required the Seamstress to run up new uniforms for our new maidservants and she deliberately and flagrantly insulted Mistress Jane. That I will not tolerate. Johnstone, did not Lord Barton give instructions that Mistress Jane should be treated with the same respect given to me?\"\n\n\"Yes, M'Lady, he did so instruct me and I delivered his order to all the staff.\"\n\nTurning to Janice she demanded, \"Did you receive that order?\"\n\nGone was that smirking grin, replaced by a look of sheer terror as she realised she had badly overstepped the mark. Hanging her head, she mumbled, \"Yes, M'Lady.\"\n\n\"Speak up child, and look at me.\"\n\n\"Yes, M'Lady,\" she sobbed, with tears forming in her eyes.\n\n\"I will not stand for any, I repeat, any disrespect towards Mistress Jane,\" said Diana, addressing all three of them. \"Is that absolutely clear?\"\n\n\"Yes, M'Lady,\" they chorused.\n\n\"With your permission, M'Lady,\" the Housekeeper added, \"I will ensure she is properly disciplined.\"\n\nDiana looked over to me with a mischievous smile on her face. \"No, Mistress Roberta, I think we will do this another way. Mistress Jane had been insulted, I think Mistress Jane should administer a punishment suitable to assuage the distress that creature has caused. Jane, would you like to retrieve your whip? You, what is your name?\"\n\n\"Please M'Lady, I'm Janice Bairstow.\"\n\n\"Well Janice Bairstow, you will bend over the arm of that chair and lift your skirts right up over your back.\"\n\n\"Please, M'Lady, forgive me.\"\n\n\"Do as I say. Now! Johnstone, hold her down.\"\n\nSoon Janice's skinny bottom was presented to me. All the years of Janice's unpleasantness towards me, all the insults, all the indignities to which she had subjected me gave my arm strength as I whipped her mercilessly, her bottom, her lower back and her thighs were all covered in welts and a couple of bleeding wounds by the time I had finished. I think it was only Diana who knew that I had climaxed with my final stroke right on the torn flesh of her buttocks.\n\nJohnstone released her when I was finished. He looked at me with some kind of admiration. Janice just collapsed to the floor sobbing uncontrollably, no longer caring that her body was still on display.\n\n\"Stand up girl\" barked Diana, \"and stop that stupid blubbering.\" Janice managed to get to her feet, allowing her skirts to fall back into place and tried to control her sobs.\n\n\"Mistress Black, you will reduce Janice to the lowest position in the household. I thought of sending her packing but I think perhaps she will better serve as a sharp reminder to the rest of the staff. You, girl, just one more insult and I will instruct the constable to take you before the magistrate. Is that absolutely clear? Go now.\"\n\n\"M'Lady,\" Mistress Black said when Janice had hobbled away, \"I will personally ensure your new maids get their uniforms. Will there be anything else?\"\n\n\"Mistress Jane will need her own small wardrobe. You will consult with me and her about her needs but that can wait for a day or two. For now, take these two and measure them up properly. You know how I like my maids to look.\"\n\n\"Indeed, M'Lady.\" Roberta gathered up Eleanor and Annie with a glance and the three left us alone with Johnstone. \n\n\"If I may be so bold, Mistress Jane, you wield a fair whip hand.\" He dipped his head in salute and retired.\n\n\"Oh, Jane,\" whispered my former Mistress when we were alone, \"I do believe you enjoyed that beating you gave her.\"\n\n\"That I did, Diana. In all my years in this household, she has made herself my enemy. Revenge is sweet.\" I giggled behind my hand, \"Especially when I climaxed. Oh, yes, I enjoyed it.\"\n\n\"Watching you beating her has made me quite excited. Will you join me in bed?\"\n\nBy the time our maids came back, we had both given each other several wonderful climaxes and only just got dressed in time for their return.\n\n\"Lord Barton may require one of the girls tonight. I know Faith told you how you should prepare yourself. Perhaps you would deign to instruct Eleanor and Annie.\"\n\n\"Of course I will, Diana, but I rather think Lord Barton will be satiated for a day or two after my last visit. Come with me girls.\" I led them to my old room in Diana's apartment and told them of their Master's peculiar demands and shortcomings, showed how they should prepare themselves and demonstrated the enema machine on Annie.\n\nChapter 8\tLearning to be a lady\n\nSo it was that I slipped into my new life with much help from Diana, from Reginald, as I was told to address Lord Barton, from Mistress Black and Johnstone and especially from Annie who had the knack of always being cheerful about the apartment, humming as she worked, and instilled a measure of confidence in me when I became discouraged with all I had to learn and remember. Strangely, it seemed to me, even Janice went out of her way to be helpful and there was no trace of insolence or rebellion in her attitude. Indeed, it was she who went far and wide to find a particular cloth Diana thought would make a lovely summer robe for me. I even asked Diana if she could see her way to reinstating Janice, if only to the position of assistant to the new Seamstress, so Janice regained much of what she lost. I never had any disrespect from any other member of staff except once, which I will relate later for the rest of my time as a guest at Barton Court and Annie reported once that Janice had vehemently defended me when a kitchen drudge made a disparaging remark about 'that upstart, Jane Fairfax'. Diana and I both agreed that our maids had taken up their duties well, including our erotic needs.\n\nMy mornings were all taken up with lessons from an array of tutors. I learned to read and write, I learned about geography, etiquette, deportment, dancing, horse riding ... so many things to learn, sometimes my head was spinning before it was time for me to share lunch with Diana. I would spend most afternoons with my ostensible cousin; we became close friends quickly and she relished her task of creating a lady out of a serving wench. When the weather was clement, we would stroll together in the extensive gardens of Barton Court. There was a delightful walk through an old stone quarry with trees and bushes lining the pathway, which sometimes zigzagged through the maze of canyons from which the stone had been quarried to build a Roman Fortress a mile away on top of Longset Hill. Sometimes we would ride our horses around the Estate, either ambling gently through the trees or racing at top speeds across a meadow. That was fun. It was after one such ride that I retained the horsewhip so that I would not have to borrow Diana's, should I need one.\n\nDiana admitted me to any discussions about household management with the Housekeeper. \"Jane,\" she explained, \"When you have to run your own house, you will need to know about your duties in that direction.\"\n\n\"Tell me, Diana, I notice you always call Roberta 'Mistress Black'? You do not use such terms to the rest of the staff.\"\n\n\"Jane, this is a large household and we employ many staff. Your household at Tradiscombe will be even bigger and you could not possibly manage alone. If you look at Barton Court, we have Johnstone who attends Reginald. He acts as Reginald's second-in-command as far as the rest of the staff are concerned. To help him he has Roberta Black who looks after the everyday running of all the services they provide.\n\n\"We can ask for whatever we require or desire and we communicate with the Butler and Housekeeper, often via our maids, and it is their task to ensure that we are served with all expediency. Tell me, when you were my maid and I sent you to Mistress Black or Johnstone, did they ever keep you waiting?\"",
        "\"Never, Diana.\"\n\n\"No, of course not because they know that the whole household exists to keep me, my husband and our guests happy. Those two run our household and maintain discipline just so we get what we want. I often consult Roberta Black about our needs, any important changes I want made, or perhaps to organise a party. I could not do without her so she deserves the respect from me that using her honorary title gives. If another member of our staff hears my respect, then she gets respect from her. So it is little enough for me to call her Mistress Black.\"\n\n\"Yes, I see, Diana. Thank you so much for explaining these things, I had not truly realised their importance.\"\n\nDiana and I would often call upon her friends, some of whom became my friends too. We would go into the city to look around the shops, stopping for tea at the best hotels. Sometimes Reginald would escort us to a dinner and dance party and Lord Barton arranged our own parties. They were fun. Diana and I wined and we dined and we danced with all the handsomest men under the benign eye of her husband. We would go home in a gay mood but exhausted, to be greeted by our faithful maids who pampered, undressed and put us to bed, sometimes I would have Annie join me for the night. She always brings me sweet relief and has a lovely body to hold when I have her sleep with me. \n\nOur social life included the church. We walked there every Sunday but rode in the carriage in inclement weather and it was at the church that I widened my small circle of friends. Two or three times each week Diana and I would visit one friend or another or we would receive them in our apartments.\n\nMy new wardrobe took about four weeks to arrive in a cart. Before I left Percy, his Seamstress had carefully taken all my measurements and had, I learned later, devoted all her time to looking through the latest fashions and recreating the loveliest gowns, petticoats, undergarments. Everything a Lady would need. We all had so much fun opening each carefully wrapped package and examining the wonderful contents. One gown was a deep purple velvet with gold braiding, so lovely that I held it to my body daydreaming of Percy dancing me around the room. \n\nPercy wrote letters to me two or three times a week. At first I had to get Diana to read them to me and write my replies, which made me learn to read and write much faster, I wanted to read for myself my lover's messages of his devotion to me. One of my lover's epistles to me, before I could read them myself, described in very explicit detail what he would like to do with my body. \"Oh, Jane. I wish he would do that to me, you lucky girl.\"\n\nI know he kept and treasured all my letters, and especially those in the childish fashion of a learner. I, too, have all his letters bound in a red ribbon, pressed in rose petals and saved in the ottoman under the window of my apartments in Tradiscombe, my home as Jane, Lady Underweir. Even now, I often spend happy hours sitting on that ottoman in the sunshine reading Percy's precious letters.\n\nIt was after I had learned to read that I discovered the pleasure of books and I devoured Reginald's library, reading everything from translations of the old Latin philosophers and historians to the latest novels by Mr Charles Dickens and anything in between. I became a voracious reader and one of my greatest pleasures was to sit in my chair reading a romance aloud while Annie was beneath my skirts, slowly lapping at my pussy. I taught Annie the basics of literacy so that she, too, could enjoy the huge wealth of literature available. Annie's preference was the romantic stories.\n\nSome afternoons Diana and I would play canasta in her rooms then one day I had an idea. I gave Annie her instructions in the morning, before my session with Brother Dominic who was teaching me geography. That afternoon, we both took our seats at the card table. I watched Diana's face as she dealt the cards. Suddenly her eyes widened. I knew why because my legs were being parted at the same time and I felt Annie's tongue licking its way to my pussy. Diana quickly realised what was happening so she and I opened our legs as wide as the smiles on our faces to give our girls full access. I don't remember which of us won the card game. It didn't matter because it was interrupted several times by the girls exchanging places. Diana asked if that had been my idea and I confirmed that it was. \n\n\"Thank you my dear friend,\" she said, hugging me, \"for such a lovely surprise.\" Her voice changed to a whisper although we both knew that the girls under the table could hear. \"When did I last whip you?\"\n\nHer words gave me that deep gut feeling of a long-denied craving. \"Not since Lammas Day, Diana, when Percival asked for me one last time.\" My nipples were tingling, my heart was thumping in my heaving chest, my knees felt weak. By all the gods in Olympus (yes, Ancient Greece was one of my studies) I needed the release I had not had since I stopped being her maid. Annie had tried to satisfy me but her heart was not in the task; she did not want to hurt her Mistress. I looked at Diana with a plea in my eye.\n\nShe had an enigmatic smile playing about her lips and a twinkle in her eye when she leant over the table and stroked my cheek as she said, \"Come to my rooms after dinner. Bring Annie. And you, Annie, don't stop what you are supposed to be doing right now.\" I think Eleanor had difficulty coping with the sudden flood from my pussy when Diana told me to come to her rooms.\n\nWe played another couple of hands of canasta but my thoughts were elsewhere so Diana chuckled and told me to return to my rooms as I was in a different world. I told Annie to go about her duties as I sat in my chair and picked up the book Brother Dominic had left me that morning but the olive groves of Italy could not hold my attention, not with all the little erotic daydreams spinning through my mind. \n\nAnnie was currently brushing the carpets around my feet when she looked up at me. \n\n \"Forgive my impertinence, Mistress Jane, but do you really enjoy what M'Lady says she is going to do? Does it not hurt you terribly?\"\n\nI took her face in my hands and kissed her. \"Bless you, Annie. Yes, it does hurt very much. That is the whole point. Nevertheless, your Mistress has needs, the pain is a powerful thing and I find that the more I get the more I want. There comes a time when the pain seems to go away and it is as if I am in the middle of a warm glow, my Golden Place. I feel every stroke as just more flame which burns through my body, I feel the heat in my pussy, in my breasts. My nipples are on fire. Truly, I like it so much that I climax.\"\n\nHer eyes were wide open, looking at me as I saw her trying to digest what I had told her, trying to believe it.\n\n\"It is true, Annie. Tell me, what do you feel when I spank you?\"\n\n\"As you say, Mistress, I feel a warmth in my pussy which makes me want to achieve a climax but surely, Mistress, I don't think Janice enjoyed it or had a climax when you whipped her.\"\n\n\"Different circumstances, Annie. Janice was just getting punished, she knew it and all who were there knew it. It comes down to what is in your mind. A punishment just hurts, as we both know from the Housekeeper's wooden spoon but pain in the bedroom is entirely different because it is a matter of the pleasure which the pain gives. As far as Janice was concerned, it was a very harsh punishment but let me tell you, Annie, I really did enjoy beating her. You know how she used to treat me? Yes, well she made my life a misery and I enjoyed every stroke of that whip. Did you know I had a climax when I beat her?\n\n\"You see, some people want, even need, to be whipped; other people get much pleasure from using the whip. I happen to like both sides of the coin. And do you know what I like best? To give somebody a good whipping then have Lady Diana do the same to me. This evening you may see that I like being whipped.\"\n\nThere was awe in her wide open eyes. I took hold of her head and kissed her then looked straight into her eyes. \"Tell me Annie, truthfully, what did you feel when you saw me punishing Janice?\"\n\n\"I suppose I felt a bit excited at the sight, Mistress Jane.\"\n\n\"So you have some idea of what pain can do.\"\n\n\"Yes, Mistress, perhaps I do.\"\n\n\"All this talk about what is going to happen this evening has made my cunt wet. Put aside that brush and dustpan and get to work down there, there's a good girl.\"\n\nI really don't know how I managed to eat my food at the dinner table, especially as Diana kept fixing me with her stare and knowing smile. Thank goodness, I thought, for all those petticoats or my gown would have a large damp patch. Eventually Diana and I bid Reginald 'Good night' as he sipped at his port, Diana instructed Johnstone to send a bottle of Scotch whisky to her rooms and we left in silence.\n\nI had Annie undress me and bring me the pastel-blue light cotton robe. I knocked on Diana's door which was opened almost immediately by Eleanor to reveal Diana wearing the red robe I knew she loved, nipples poking small hills into the silk, and with wide open welcoming arms. \n\nI moved into her embrace and we kissed long and sweet until she whispered very quietly into my ear, \"Are you ready for this? It is just for you tonight.\"\n\n\"Yes, M'Lady, I'm ready,\" I whispered back.\n\n\"Hush Jane, not 'M'Lady' in front of the servants.\" Diana had Eleanor pour us all a generous measure of the whisky which we all swallowed straight down, followed by a second measure which was treated the same way.\n\n\"Now,\" said Diana to us all, \"I want you girls to undress. Eleanor, bring me the whip.\" When Diana had the whip, she ordered the maids to face each other. \"Annie, you will slap Eleanor's breasts as hard as you can. I want to see a big red hand mark.\"\n\nEleanor saw Annie's apologetic look and accepted it as the slap was delivered. \"Now the other breast, but even harder. Keep slapping, both sides, hard.\"\n\nEleanor's breasts were soon bright red when Annie was told to stop. Now Eleanor had to repeat the slapping on her friend. I think both of them were a little surprised when Diana felt their pussies and said, \"See Jane, they are both wet.\"\n\nIt was true, they were both becoming excited. We all had another measure of whisky so, none of us being really accustomed to alcohol, we were all more than a little tipsy. Diana was clearly in charge of things when she told Eleanor to put her hands behind her head, push her breasts out and remain absolutely still. She handed the whip to Annie and told her to whip her friend's breasts. Eleanor squealed at the stroke but I knew Diana would not be satisfied with the blow. She took the whip back and made Annie assume the same position as Eleanor then lashed as hard as I knew she could. Annie screeched and I saw the familiar welts appear across my maid's bosom but Diana made her stand firm and accept the pain. When she had herself under control again, she was given the whip and told to try again. This time she did her best, leaving that tell-tale red mark across the pale flesh.\n\nEleanor screamed and brought her hands down to comfort her the pain and ward off further pain but Diana insisted she stand straight and put her hands behind her head again. She eventually overcame her fear and stood there when Annie was instructed to aim for her nipples which were puckered, sticking out well beyond the softer flesh. Again Eleanor screamed but she fought bravely to keep her pose as Annie was told to deliver several more strokes. Eleanor was panting heavily between sobs and we all saw that her thighs were wet with the juice from her pussy. \n\nThen it was Annie's turn to stand with hands behind her head. Eleanor did not make the same mistake and her first stroke was full on. As if she didn't want to show that it hurt, Annie let out just a little gasp then chewed on her lip. It must have worked because she remained in position to accept the stroke across her nipples and all the subsequent blows. I was proud of her bravery. After that first gasp, she uttered not a sound until Eleanor was stopped, then she let out an enormous sigh as she lowered her hands. But her hands went to her pussy and she crossed her legs, dancing around. \n\n\"M'Lady, I need to pass water. Please may I be excused for a minute?\"\n\nAt that, Diana got a devilish gleam in her eye. \"Stay where you are. Eleanor, on the floor, face up. Annie, sit on her mouth and let it go.\"\n\nAnnie started dribbling as she opened her legs to squat on her friend's mouth, splattering Eleanor's face with her piss. The look on Annie's face was one of pure relief as she let go and Eleanor tried to swallow it all but some leaked to the floor.\n\nDiana stood behind me, her fingers twiddling my nipples. \"This is fun, isn't it?\" she said, nuzzling into my neck. \n\n\"Yes, M'Lady,\" I whispered very quietly and kissed her.\n\n\"I don't know about you, Jane, but I need a climax. Your choice, which of them will you have?\"\n\nIn reply I ordered Annie between my legs. She knew all my little triggers by now and soon gave me the climax I needed. I had her sit upon my lap and asked her if she enjoyed peeing in her friend's mouth. Both Diana and her maid looked up to hear her affirmative answer. \"Did you like it,\" was Diana's question to her maid.\n\nEleanor looked a little embarrassed to admit it but she said \"Yes, M'Lady. You took me by surprise but I liked the taste.\"\n\n\"I think Annie will have to learn to like it too.\" I announced as my maidservant shivered a little in my arms.\n\n\"So far we have all had some fun but this is what is now going to happen. Remember, tonight is for Mistress Jane's pleasure and you girls will play your part. We will all have another glass of whisky - pour them, Eleanor - to give us courage for this.\" We emptied our glasses and swallowed the fiery spirit before she continued. \"I am going to give you, Eleanor, a whipping you will remember, while Mistress Jane watches. Then she is going to do the same to Annie while I watch.\" She looked over at me and smiled. \"Then you two will go to your room and play together as much as you wish.\"\n\nNow she whispered very quietly, \"And Mistress Jane is going to get what she has been missing.\" \n\nI settled back in my chair and exposed my breast, telling my maid to suckle. I turned my body so that she may do this and watch Eleanor standing in the middle, hands back behind her head. Diana stepped up close and held Eleanor's eyes in her gaze as she took a nipple between the fingers of each hand and squeezed cruelly and lifted, making her stand up on tiptoes. Then the Lady stepped back a pace or two and looked over Eleanor's trembling torso, selecting her first target. I was not surprised to see that it was the nipples. She has a thing about breasts and particularly nipples. Diana's next target was lower down and soon her servant had half a dozen welts crisscrossing her abdomen. The front of her thighs had more of the same before Diana turned Eleanor so that her back was turned towards us. Starting at the top, Diana striped her back all the way down to behind her knees. \n\nShe was then turned again with her Mistress standing right in front and told Eleanor to open her legs wide, tapping them further out with the whip until she was satisfied. That first stroke was right up between her legs, smack bang on her pussy. Eleanor cried out in agony and I felt Annie pull harder on my tit when she witnessed it. But Diana was not satisfied with just the one. Time and time again the lash caught her pussy and clitoris until we all heard her calling \"M'Lady, M'Lady, oh M'Lady, yesssss.\" As her whole body was taken over by a massive climax. I looked over to Diana and saw that she was also in her own world. Eleanor's pussy and thighs were just dripping so Diana brought the leather tip and inserted it into her cunt then, with a smile, brought it over for me to taste.\n\n\"You see, Annie. That is how it can happen, do you think you could climax like that?\"\n\n\"Oh, Mistress Jane, I cannot take that. Please no, Mistress.\"\n\n\"Yes, Annie, you must take that and now, for see, Lady Diana has finished?\" Eleanor was now on her Mistress's lap having her breasts played with and waiting, watching, for her friend's turn. \"Come now, Annie. Be brave for me, be as brave as Eleanor.\"\n\n\"Now, Annie,\" I said when she was in position, \"I have another two rules for you. First, you shall not utter a sound until we are finished.\"\n\n\"I will try my best, Mistress.\"\n\n\"Good girl, that is all I can ask. The second rule is that you may not climax until I say you may.\" I planted that little seed in her mind hoping it would grow and come to be an obsession with her body wanting to climax but her mind saying no, she may not.\n\nMy technique was unlike Diana's. She concentrated on one area then moved on to the next but I just walked around Annie and used the whip here and there as the fancy took me, her legs were wide open so her pussy was often struck from front or back. She was brave and only the slightest grunt could be heard when I hit a particularly sensitive spot. Eventually I put the whip aside and kissed her. \n\n\"Do you need to climax, Annie?\"\n\n\"No Mistress, yes Mistress. I don't know Mistress.\"\n\nKissing her again, I found her clitoris, slick with secretions, so I knew she was close. I clamped a thumb and forefinger on her sensitive button, digging in harshly with my nails and whispered, \"Now Annie, now.\" With a loud wail her, whole body flushed and shuddered, her pussy gushed and she almost collapsed in my arms even as I was recovering from my own volcanic explosion.\n\n\"Well done, Annie. You were very, very good. You made me proud.\" Now you run along with Eleanor and the two of you enjoy yourselves.\"\n\n\"Yes, Mistress.\" She turned to leave then faced me again. \"Thank you, Mistress Jane, for that experience. I never thought it would happen but you made it so.\" She and Eleanor gathered up their uniforms and left just me and Diana standing, facing each other. \n\nChapter 9\tLady Diana has a bad time\n\nShe had a full tumbler of whisky in each hand, at least as much as we had already imbibed. The bottle on the table behind her was empty. We looked each other straight in the eyes with love as I reached for one of the tumblers. We sipped and sipped again, then a larger sip. She sat on the edge of her bed and, with a gesture, asked me to sit beside her. I did so and again our eyes locked. \n\nShe raised her glass. \"Jane, I need this spirit to help me. I am very nervous so you need to help me. I was a little surprised when Eleanor climaxed, and even more when Annie climaxed on your command. I saw in both of them what I see in you, you reach a point where the pain doesn't matter, you smile through the pain until it all seems to explode. Seeing that is so exciting. I want you to take me to that place, Jane, but I'm scared, so scared, so this:\" she took a gulp from her tumbler, and I copied her, \"will give me the courage.\" I sensed she had more to say and was curious.\n\nShe took a deep breath, exhaled it slowly and said, \"Tonight, Jane, under the influence of alcohol, we are going to do whatever we want. I want to fuck you with my fist and you must treat me the same. We will hurt each other very much, I want to drink your piss and give you mine. I want you to do anything you can think of and I will do the same. Will you drink to that with me?\"\n\nI raised my glass and threw the contents down my throat saying, \"Let the Devil take the hindmost!\" It made me cough a little but I watched Diana downing hers. Both of us were wearing just those simple robes. She opened mine and pushed it off my shoulders; I did the same to hers and we stepped away from the robes piled at our feet. She grabbed me and her kiss was almost savage in its intensity. Good, I wanted her as excited by the prospect as was I. Her hand sneaked between us and reached for my groin. Taking a good hold on my bush, she tugged very hard, almost lifting me off my feet. Oh, that was what I needed, some really rough treatment before the beating started. She knew me so well. The two beatings she had already arranged had served to get me ready for anything and I knew that Diana was also ready for anything. ",
        "She blew her warm breath in my left ear then nibbled at the lobe, kissed her way round to my lips then, just as gently nibbled and kissed back to my other ear. Then she stepped back and slapped my face, left, right, left, right, left, right and again. I bent down and bit her nipple, grinding it between my teeth. She tried to pull away but my teeth were firmly clamped and her pull served only to elongate her breast. \n\nThe liquor I had drunk was now acting on my bladder so I had an idea. I gripped her nipples and led her to her bathing room with its tiled floor upon which I made her lay down. She realised what I was doing when I squatted over her face and started pissing. She opened her mouth and I filled it then continued pissing all over her face until I finally settled down over her mouth and made her drink the rest. As soon as I had finished, she turned the tables on me and very soon she filled my mouth. I didn't get much of her flavour until she sprayed my face. I could then lick my lips and I discovered that I liked her taste.\n\nDiana took me to the bed and I was told to get on my hands and knees and to wait for a minute without moving. I heard the door open and, a minute later, close again. Diana got on the bed behind me and I felt my arse being greased as far inside as she could manage to push the stuff. She started with just two fingers in my arse, soon to be joined by a third. These she kept working in and out, turning round, stretching me down there until she deemed I was ready and four fingers pushed into me. She kept working her hand round and round until I felt her withdraw slightly and I knew her thumb had been added. I remembered back to when Diana, then M'Lady, had done the same in my pussy and surely my arse could not take that much but she persisted until with a quick push, it was in me. Her whole hand in my burning arse, pushing further in until it would go no further. At that point, she pulled her hand all the way back until most of it was outside again then with a hard push, right up into me again. Then she just fucked my arse with her hand, making me climax several times until she tired of the game. Oh, the cruel woman, she pulled her hand from deep inside me all the way out in one swift motion. I screeched in pain before I collapsed on the bed. My arse felt wide open - and very empty.\n\nI rested for a minute, gathering my strength then sat facing her. I raised my right arm in a fist and just asked, \"Arse or cunt, wench.\"\n\nI think somehow she relished being called 'wench' in these circumstances because she replied, \"Mistress Jane, in my cunt if I must. I have never had anything more than a finger in my arse.\"\n\n\"On your back, servant,\" I ordered. \n\n\"Yes Mistress.\" I got the straps out of her drawer and soon had her ankles strapped to the bedposts over her head, exposing her cunt and her arse to anything I decided. The flickering of a candle in the corner of my eye for some reason got my attention. I glanced idly in that direction and noticed the long, slim shape. Things clicked in my mind and I went over and plucked the candle from its holder. I could not get my finger and thumb round it by a good half inch. Yes, this will do, was my thought. I brought the candle to the bed, blowing out its flame on the way. I thought it might be better if I moulded the wax while it was still soft to give it a round head. As I did so, a trickle of still-molten wax spilled over my finger and dropped onto Diana's inner thigh. I felt the wax stinging me where it dripped and saw how she flinched. I put the thought at the back of my mind and noticed the maids' pot of grease. Diana must have retrieved it when she left the room earlier. I greased up the candle, then her arse.\n\n\"No Mistress, please not my arse.\" \n\n\"Be quiet, wench.\" I pushed the candle against her arse, just nudging against the hole. It looked like a huge prick poised ready so I pushed it right in all the way until no more would fit. That was in one swift movement and I felt a thrill to hear the scream which came from her mouth. I love that burning pain when something is forced up my arse, like when Percival used to do it. I left her moaning and squirming as I retrieved another candle but this one I did not extinguish. The flame had built up a reservoir of molten wax which I dribbled slowly down her thigh and watched it solidify. Diana just twitched a little as I allowed the flame to refill the little bowl. This time down her other thigh, allowing the wax to get perilously close to her pussy.\n\n\"Are you enjoying this, wench?\"\n\n\"Yes, Mistress. It gets me excitaaaahhhh.\" I had poured the next lot of wax straight onto her puffy cunt lips. My spare hand spread the lips and exposed the nub at the top. I rubbed that for a second or two then dumped more hot wax right on target. That made her squeal and leap to try to get out of the restraints but they held fast. She jumped when I picked away the congealed wax from her clitoris and jumped a mile again when her privates were once again flooded. I put my candle to one side and gave the one up Diana's arse a slap, making it rock inside her. I was a little envious of my 'maid' at that point. I think I would like that candle rocking inside my arse.\n\nI cleared the wax from her pussy again, getting my fingers soaked in her copious juices. She was as ready as she would ever be. I went for the big start with four fingers thrust in hard. She screamed and struggled but I kept my hand firmly in place, pulled back just enough to get my thumb into the picture and let her have the lot as I bored my hand inside her. I rested it there so she could get used to it. When she was relaxed enough to want to roll her hips for more was when her clitoris was again doused in hot wax. Her body went rigid, her cunt clamped itself round my arm, her hips bucked up and down as she let out a loud wail then went limp. \n\nI allowed her a moment of respite before I started my hand stirring and moving inside her cunt again. \"Oh Mistress, not again, no more, I'm so sore.\"\n\n\"Silence, you baggage.\" She was soon matching my movements in spite of her earlier plea. I started sliding my hand back and forth inside her, clenching and unclenching my fist.\n\n\"Mistress, please fuck me, fuck me harder. Oh Mistress yes, here it comes ... yeeessss, yesyesyes, ahhhhh.\" Then, shortly afterwards and more of a grunt, \"Oh now that feels good, Mistress.\"\n\nI had given her no rest this time and partially withdrawn my hand before ramming it back home. I pulled further out and again thrust. Next I pulled all the way back until just the tips of my fingers remained between her cunt lips, paused and plunged. Pull back, pause and plunge, again and again. The whole bed was rocking as she tried to release her hands and legs but I was relentless, ignoring her pleas of, \"No more Mistress Jane. Oh, not again.\" Another shuddering climax went through her and I decided she had had enough fucking. For now.\n\nI noticed, as I withdrew my fist, that her cunt was gaping, wide open. It was such a tempting sight that I reached for the candle again. \"Let the Devil take the hindmost,\" I said, almost mockingly as I poured the hot wax straight into her depths. She just shrieked and shrieked, enough to rattle the windows, it seemed. I took a firm hold on the candle still in her arse and pulled it straight out. Another gaping hole! For a final time my candle dropped its load, right in her arse. This invoked more screams. Oh, I was enjoying myself, even knowing it would be my turn soon. \n\nI released Diana from her straps and gave her time to stretch the kinks out of her muscles. She had never endured the cramps from being confined and strapped before this evening. \"I need to pee, wench. Come!\"\n\nShe beat me to the bathing room and was on her back, mouth open, when I arrived. I straddled her head, facing her feet and let my piss flow onto her face and hair. I made little steps down her body, making sure she was wet all down then I settled onto her face, making her drink all the rest while massaging the piss into her skin. \"Thank you Mistress. You taste nice.\"\n\nI bent down and started lapping up my own piss from her body. She was right about the taste.\n\n\"Are you ready for your beating, baggage?\" I didn't wait for an answer but returned to the central clearance in the bedroom. Diana followed like a good servant. \"You know the position,\" I said, retrieving the horsewhip and slapping it in the palm of my hand. \"Wider.\" I lashed the whip against the inside of her thigh and she spread as wide as she could.\n\nI stepped in close and kissed her hungrily until she was panting. \"Are you ready for this, you little slut?\"\n\n\"Will you hurt me, Mistress Jane?\"\n\n\"Yes,\" I replied with a smile while twisting her nipples cruelly. \"Yes, bitch, I am going to whip you as you deserve. You know my rules: you will stand still, keeping your breasts pushed out. You will not make a sound and you will not climax until you have my permission.\" I gave her nipples even harsher treatment, making her squirm. \n\n\"Be still,\" I ordered and watched her control her body. \"Do you understand my rules?\"\n\nShe just stood there with much fear in her eyes.\n\nI slapped her face. \"Do you understand, wench?\"\n\n\"Yes, Mistress. Please don't hurt me.\"\n\nI stepped back a pace and looked over the lovely, trembling body before me, deciding upon my first strike. A dark brown nipple was surrounded by a disk of dark pink set on the pale skin of the breast. It reminded me of an archery target. Very well! I lashed down aiming for that nipple and was pleased to see bruise running from the swell of her breast to the tip. I looked into her eyes again, they were almost popping out on stalks as she made a valiant attempt to control her movements until her breath came out in a long low hiss.\n\n\"Well done, wench.\" I complimented her control then lashed the other nipple and stepped to the side to take aim at both nipples. I started walking around her, keeping her waiting and guessing. I saw her pussy lips everted, pink and glistening. I rubbed between those succulent lips with the tip of the horsewhip then flicked it upwards, not too hard this time, more of a reminder about how vulnerable, how sensitive, she was down there.\n\nI switched tactics now and started to strike all over her body, hard enough to bring red stripes everywhere. I surveyed my 'artwork' then had her bend at the waist and I laid into her soft bottom with a vengeance, working my way from the small of her back to her thighs. Next, my 'servant' felt the full power of the whip between her legs as I continually lashed her lovely pussy from behind. I had her stand again.\n\n\"Are you enjoying this, wench? I am.\"\n\n\"Please Mistress, no more. I cannot bear any more.\"\n\n\"But Diana, there is much more to come. Believe me you can bear it, you must bear it.\" I whipped her nipples again. \"You will bear it.\"\n\nNow, I knew instinctively, was the time to bring her to the peak. Systematically and without pause, I lashed her everywhere and, by the time her body was striped with black and blue welts, I knew she had entered what I called the golden place. She flinched with each blow but there was smile on her face which was wet with her tears. Now for the final stroke and give her release. \n\n\"Let it go, wench, you may climax,\" and I lashed her pussy with all my strength and my own climax burned through me.\n\nFor many seconds, her body shuddered, her mouth was open and calling oh, and ah and wheeeeeee as her legs buckled and she sank to the floor holding her tortured pussy and rocking forward and backwards as she tried to compose herself. I knelt next to her, stroked her face and hair and held her in a cuddle.\n\nEven through the tears she hugged me back and whispered, \"Thank you, Jane. I never knew. Gods above and below, I've been in your 'golden place' and never ever had a climax like that. Thank you, darling, thank you.\"\n\nAfter her climax, there was a shift in our relationship. I was no longer her Mistress, she was no longer my serving wench. We were just loving friends. We sat on the floor for many long minutes, letting the passions subside then, as we both relaxed, it changed again. M'Lady was back in charge and I was her maid again. There was a glint in her eyes as she said, \"Now it's my turn, bitch.\"\n\nChapter 10\tDiana's revenge\n\n\"I think I need some more whisky,\" M'Lady said. She pulled her robe, somewhat gingerly, about her body and tinkled her little bell. \n\nA few seconds later, Eleanor appeared, straightening her uniform. She was perspiring and breathing heavily, something had obviously been interrupted. \"M'Lady, you wanted me?\"\n\n\"I want another bottle of whisky. If Johnstone has retired, find out who is on duty. Go girl.\" She gave us both a quick curtsy before disappearing on her task.\n\n\"Are you afraid, Jane?\"\n\n\"I am a little, M'Lady.\"\n\n\"You should be because it is going to be a long, very painful journey for you.\"\n\nI had been honest, I was a little afraid. I knew M'Lady would take me to the limits of my endurance before giving me my release. I craved that release, what made me afraid was what would happen between now and then.\n\nIt was several minutes before Eleanor reappeared bearing the required bottle. \"Forgive me M'Lady, I had to find Master Johnstone's assistant and he had to get the cellar keys.\"\n\n\"That's fine Eleanor. I want you to get Annie and you will both undress and sit here on the floor and watch me work on Mistress Jane, perhaps help me.\"\n\nThere was a look of surprise on her face but she said, \"Very good, M'Lady,\" and soon the two girls, the marks all over their bodies clearly visible, were sitting there.\n\n\"Annie, pour us all some whisky. You and Eleanor may have so much.\" She indicated with her fingers about one inch. \"Mistress Jane and I will have this much.\" Her fingers measured almost a full tumbler for us. The girls just sipped but we Ladies gulped down much more. I was like Diana that evening, I needed the extra bit of courage it would give me: I had a feeling that she was going to be rough with me.\n\n\"Let me tell you girls, I know you are discrete or you would still be Downstairs but what you are going to watch must never, ever, go outside this room. You have already realised that Mistress Jane loves pain and I think you two will also want more after what happened to you both this evening.\"\n\n\"Yes, M'Lady.\" The two girls looked at each other and smiled. Annie spoke for them, \"We will both want to experience that again M'Lady.\"\n\n\"I thought so,\" my friend responded, then she smiled at them and at me, \"I know just what you mean because Mistress Jane has just taken me there and I know I will want to go there again. Not now, not soon,\" she shivered, \"but sometime in the future ...\n\n\"It may seem strange to you but it works for me and Mistress Jane, you will hear me calling her my serving wench or other terms of abuse and she will call me M'Lady. Since you left us, I have been her servant and she my Mistress, but it is only a game we play. Isn't it, wench?\" \n\nThat last question was aimed at me. I bobbed a curtsy and answered, \"Yes, M'Lady.\"\n\nTurning back to our maids, she went on, \"You may wonder why I brought you here for this. I want you to learn, you especially Annie, but you too Eleanor, because Mistress Jane may want you to hurt her. Probably not as much as you will see here, but when you see me with her you will know that just a little is not enough.\" \n\n\"Yes, M'Lady,\" they nodded.\n\nShe turned again towards me and raised her glass. \"Devil take the hindmost?\" There was that glint of mischief in her eyes. \n\nUndeterred by the challenge, I drained my tumbler and said defiantly, \"Yes, and the Devil take the hindmost.\"\n\n\"Take off my robe, girl,\" she ordered. I stepped across and removed her garment. There was a gasp from the girls to see their mistress marked so with the bruises at all angles from her upper chest and back, down to calves, but she ignored it. \"Stand in the proper position.\"\n\nMy hands were behind my head and my legs spread as wide as possible, inviting that first lash, longing for it to start, but it did not come. Not then, not there, for first she used a strap to tie my hands together in place. It was during the first tour of my body, my breasts received the first, right up, underneath them. \"Chest out, slut.\" (Another gasp from the audience.)\n\n\"Hmmm,\" she said to herself, \"I think I'll play with her a little.\" She looked me up and down then poked my tit with her whip, watching the soft flesh give way. She lightly flicked the nipple. \"Hmmm.\" She balanced the whip on my shoulder and took hold of my breasts as if assessing something, squeezing and kneading. \"Hmmm.\" Over her shoulder she called, \"Eleanor, bring my sewing basket.\"\n\n\"What on earth ...?\" I wondered.\n\nDiana took the basket behind me so I did not see what she was doing. In the corner of my eye I saw Eleanor standing at my shoulder when Diana stepped in front of me, coming close, lifting my left breast in the palm of her hand. She reached towards Eleanor with her other hand and was passed something, I knew not what. Diana made me look into her eyes when I felt something very sharp being pushed into the very flesh of my tit, at the top swell. She reached again and this time the sharp pain was underneath. Again on the inner surface then the outside. I chanced a look down and saw, sticking out of the top and each side of my breast, the head of a pin. The shank of the pin was buried in my breast. The pain, although unusual, was after all just a pin prick and no longer hurt. She realised that the pins were not successful so pulled them out.\n\nM'Lady took hold of my breast again, fondling it as if trying to find inspiration. She made a wide circle with both hands and put them round my breast and, as she narrowed the circle my breast looked fuller and firmer. Diana played with my nipple, flicking a finger nail over it. Of course that made the nipple stick out even more. She was deep in thought for a moment then got the two girls together. I could not hear her whispered instructions to them but one went to a drawer and produced M'Lady's jewellery box. Annie was a little later coming out of M'Lady's shoe cupboard with some long black strands of what looked like string until I saw that it was the leather laces from her winter boots. What was she doing? What was she going to do?\n\nShe started with a shoe lace and tied a simple slip knot, passing the loop around my tit as far back as it would go, she then pulled the loop tight and my breast bulged out so she tightened further and further, as tight as she could get it then wound the rest round my breast, getting tighter with each of the four turns until she tied it off. It felt very tight and my breast was swelling and turning colour. It was very sensitive to M'Lady's fondling as she admired her handiwork. With a happy smile on her face she proceeded to truss my other breast, and the pressure started to build up there. Both breasts were aching now as they swelled against their bonds, I felt they would burst. Now they were very sensitive, even M'Lady's stroking hand hurt and a suddenly squeezed nipple was an agony which seemed to be directly connected to my clitoris.\n\nShe picked up her whip and rested it against my nipples so it would remember the target.\n\n\"M'Lady, no, please no, they are too tender.\"\n\nShe just looked at me with an evil grin and lifted the whip. Her weapon did remember its target, three times. I closed my eyes tightly trying to accept the pain as I took a deep breath and exhaled it slowly. I looked again when M'Lady took hold of my tit again and suckled on it, now and then using her teeth. Painful, yes, but a nicer kind of pain because my nipples always like a little loving. My other nipple received its fair share and I felt the first vague stirrings in my loins. I felt good. I knew there was much more to come but I sensed the light at the end."
    ],
    "authorname": "merf68",
    "tags": [
        "lesbian",
        "straight",
        "anal",
        "oral",
        "fisting",
        "anal fisting",
        "brutal whipping",
        "pissing",
        "menstruation",
        "piercing"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/forever-mlady"
}