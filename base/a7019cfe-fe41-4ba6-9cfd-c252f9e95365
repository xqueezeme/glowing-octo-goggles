{
    "title": "Sightless, Soundless, Speechless",
    "pages": [
        "Author's Note: If all goes well and Murphy's Law resolves itself, then this is my entry in the . But before the story, there's a few things and I'll throw them in a list, so they're easy to skim.\n\nFirst, this is not the usual content I write. So if you read this story, like it, and find yourself over on my page, I'll update the biography there with a description of the content warnings of the other stories to give you an idea of them.\n\nSecond, it's better to think of this as a romance that has erotica in it. By that, I mean it is not a short story and there is a lot of build up. I know that cuts a lot of an audience out and I'm sorry for that, but I'd rather tell you now than disappoint later. The content of this was such that I couldn't see a way to make it work without playing out the full romance, so that's the option I went with.\n\nThird, if you're still here, then thank you for letting me have a chance to tell you a story, even if it might not be the one you expected. Posting this one makes me a little nervous, but some recent events and changes in life led to my writing it and, well, I hope you enjoy, have fun, and maybe it will be a good cheer up story for you, too.\n\n<center>Sightless, Soundless, Speechless</center>\n\nI. The Legend Of The Goddess And The Trickster\n\nThe Story Keeper\n\nThere are many questions that humans have for a keeper of stories, but a common one is, \"Why is it that only the old legends hold magic in their depths?\"\n\nIt's a fair question. Modern day stories involving the influence of the gods and goddesses are perhaps the most difficult for me to collect and hold dear. I suspect it is for this reason that they are also my favorite. It requires a great deal of travel to find these stories, but there are those who still believe and I think it wise that they do. Of course, I may be biased, as I have had many the opportunity to see what might be the effects of these gods and goddesses.\n\nThough their names may change, their songs, in my experience, often remain similar. Athena may be called Minerva, but she is still tactically clever. After all, what's in a name? Of course, there are other changes. In some versions, different gods have different siblings. Different deities have different trinities and dualities and pieces of a whole. It matters little to me and my nature, as I must confess to being enamored with all of them.\n\nBut I have a personal favorite to share, a tale of the trickster and his beautiful sister, who is best described as the goddess of soul mates and everlasting love.\n\nNow, this story describes soul mates as a phenomenon the sister may \"gift\" to humans in sparing amounts. The reason for this has much to do with complications of free will and the natural chaos and order of the universe, but it holds no bearing for our story's purposes. Let us just say that the soul mates must be born where they may come in contact, they will always come in contact, and they will instantly recognize their compatibility. There are other rules, but I should like to keep the legend simple, as very few stories benefit from being caught in their technical details. For our purposes, these are the important ideas and the sister goddess can watch her joyful results in her scrying bowl. As you can imagine, she is a happy creature and a fun loving entity. She does not lie and she is as sweet as her magic.\n\nOf course, her brother, the trickster, has a different sense of humor. The story has it that he approached his sister in her glittering cave, his jackal's face alive with mischief when he did.\n\nHis sister was wary, for she knew her brother quite well, but she was fond of manners and she would not turn her family away. \"Dear brother,\" she said, \"to what do I owe the joy of your visit?\"\n\nHer brother's grin widened. \"I was just thinking that it has been quite a while since we had a wager. I'd like to make one with you.\"\n\nThe sister sighed, for she knew better than to refuse. The trickster god was a god of a strange sort, you see. He was both just... and deceitful in his justice. Humans who were too greedy or too arrogant often found themselves afflicted by his humorous punishments. But the sister knew that if her brother was turning bored with this pastime of his, then he might well try to venture outside of his jurisdiction. She did not want unfair punishment given to humans and she certainly did not want her brother wounded by his own folly if he trespassed in another god's domain. He was clever, yes, but he did have a bad habit of being a bit rash.\n\n\"You have lost every one of them before, dear brother, but it is has been a while, I suppose. To what do you propose?\"\n\nHe grinned. \"I've been thinking for a long time of ways to thwart your magic. Surely your soul mates can't withstand everything?\"\n\n\"If you kill them, they are reborn for another chance until they may live out their lives together,\" the sister replied softly.\n\n\"Yes, I'm aware. I mean other things. My bet is that I can break the next two you bond.\"\n\nThe sister rolled her eyes, for she had lived a very long time with her pure form of magic and knew well what little could stop true love. As another story once noted, even death cannot sway that magic. \"If you lose this time, I demand double your incarceration time in return. For every other wager, I have commanded you back to your domain for 300 years. This time, you will leave me in peace for 600.\"\n\nThe jackal god cackled. \"If I win, I get to have sway in your domain for 600.\"\n\n\"No.\" The sister shuddered at the mere thought of the trickster god in the realm of attraction. There were reasons why jinn could not grant wishes for love, after all. \"Not my domain.\" She hesitated, then softly suggested, \"I will offer another reward for your winning, instead. I offer a soul mate for you if I lose.\"\n\nThe sister wasn't certain how this offer would be received but it seemed to be a clever offer, indeed, when the trickster brother fell silent. It also served to give the sister a bit of a sad insight. Her brother was not a bad god, despite his mischievous ways. He did, at least, try to keep his deceit as a strangely honest kind and he did try to keep his fallbacks befitting of the deserving.\n\nHe was not a god to deserve such loneliness as his pause suggested. \"I would like that,\" he said quietly.\n\nThe sister nodded, still thoughtful over the agreement, and together, she and her brother decided the terms of their contest. It was rather simple, really, as the sister had learned that simplicity was best when dealing with the god of tricks. The more details were added, the more loopholes he could find, but this was so straightforward that she couldn't see a way for him to be overly clever about it.\n\nThe goddess of soul mates would choose any two unborn humans she wished. She could touch upon their lives gifts of beauty and grace to her heart's content, while the trickster god was permitted but a single touch on their lives. The sister began to weave her magic on the children and she told her brother what she was doing as she was doing it, certain he would protest some of it.\n\nFor instance, she touched the girl with her own beauty and, as you might imagine, the goddess of the heart's mate was a beautiful creature indeed. Her golden hair was within the possibility of the unborn girl's genetics, so the sister gave her that, watching her brother for any dismay. He only snickered in his jackal's way and bade her to continue all she liked.\n\nSo she did. She made the boy handsome, made their voices melodic, made them graceful, made them intelligent. At the end of it, she thought she might have created a couple more perfect than she'd ever created before and could see no way at all that the jackal god of tricks might thwart these two. They would be envied by any who saw them, surely!\n\nThe brother grinned wickedly and he was not so kind to tell the sister what he did. He merely worked his magic on first the unborn boy and then the unborn girl, while the sister watched to make sure he didn't try to affect them again. But he didn't and her confusion increased. \"But what could you have possibly done?\"\n\nThe brother waved before he snickered playfully again. \"Oh, you won't have to wait long to find out. I'll leave you be, as we have years before they find each other due to your magic.\"\n\nThe sister stared into her scrying waters, bemused and with a strange feeling of discomfort. She had lived with her brother too long to not be wary when he seemed so certain and yet, try as she may, she could find no answer to what he had done. She watched the bowl as both pregnancies were perfectly healthy and went wonderfully.\n\nBut the brother had spoken true. She did not have to wait long at all to learn what he had done. Indeed, his magic was quite obvious as soon as the soul mates were born. The sister cried out in dismay when she learned, disheartened and unhappy and, for the first time, quite unsure that her magic would succeed.\n\nYou see, the brother gave one blindness.\n\nAnd the other, he gave deafness.\n\nAt first, the sister goddess thought there may have been a little hope. The blind one was blind from birth, but the one with deafness seemed unaffected by the trickster god's magic, at first. Alas, this was not the case and it happened that the brother's magic merely took a few years to have its hold. By the age of six, it had taken full effect. The sister goddess watched helplessly as the children were raised, waiting for the day that they would find their other half, and certain that it could only lead to pain in some way, but there was nothing she could do once it was set into motion. She watched as they grew up in wonderful houses, watched as they found their ways through school, watched as they learned friendships and sorrows. And she waited for a little over 18 years for that day where they had their first moment...\n\nMay the goddesses of song guide my pen and tell the tale through me.\n\n--------\n\nII. Something Like A Seeing Eye Dog\n\nDavid\n\nWhat always struck me as an entertaining phenomenon is that a person with vision will be the one to give you the worst possible account on what he imagines blindness is like. On the other hand, if you ask someone born blind, they'll often tell you that they didn't even understand the concept of their missing an entire sense for a good first five or six years of their lives. By then, they'd already adapted to feeling and hearing their way through the world.\n\nOf course, that being said, there was one thought that made me wonder about vision as a boy. I was listening to Tolkien's Lord of the Rings and Collections on an audiobook my mother had gotten me and Aragorn told the hobbits the story of Beren and Luthien Tinuviel on their way to Rivendell. You see, it's a story about a mortal man who falls in love at first sight with an elf. What's even more delightful about the story is that at the end it talks about Aragorn's expression and it says, \"His eyes shone, and his face was rich and deep.\" Later, you would learn that, by that time in the story, Aragorn had already fallen in his own love at first sight with the Lady Arwen.\n\nThe concept fascinated me. What must that be like, to see the one and know, instantly, that they were yours? I couldn't fathom the thought and I thought it was the most magical thing ever conceived. Of course, that may have been influenced by the text I was reading at the time.\n\n~David Layton, from The Sightless Memoirs\n\nTo no one's surprise, my mother was the person in my life who had the most problems with my trying on campus college classes and living away from home for the first time. It took a full semester of purely online classes before anyone was able to convince her. Eventually, it was my father who had to intervene by saying, \"The campus is only 30 minutes away and he can't take every class online. Let him try it. If it's too much, then we work something else out. Besides, he's only taking one class on campus to begin with and Miles is taking it with him.\"\n\nThat was, apparently, the thing that managed to soothe my mother. Miles Hendrickson. Other people had a Seeing Eye dog and I had a Miles.\n\n\"Mate, your mom is driving me insane. I don't know how many more polite ways I can think of to tell her that you're blind and not a fucking idiot. It's like she thinks you're just going to willingly step out in front of the first car you hear.\"\n\nI laughed where we were in my room. Miles' voice always had this sense of playful taunting at everything. We found each other in grade school, when my life was a lot more confusing. People treated me differently and I think that's what really made it the worst growing up, not that I blame them for it. They could see quite clearly that I was different, but I, on the other hand, was still trying to figure out how the hell I even was different. \"I'm actually proud of her for this. After she cried like a baby when they dropped Jessie off for the first time at college, I honestly thought I never stood a prayer of a chance at this. Okay, which science credit are we taking?\"\n\nMiles and I had a favorite pastime that we discovered in high school. Chess. We made our own modified chess board where the squares were marked with slightly raised lines to form a grid and the letters A through H were across the bottom in worn Braille, while the numbers 1 through 8 went up the side. I felt the pieces as I remembered their position, feeling my knight, as my pieces were marked with a button glued on them.\n\n\"Zoology can't be that bad without vision, right? Your sister said she had to do this coloring book. All you'd have to do is scribble over a toucan with a lot of different colors and they'd have to pass you, wouldn't they?\"\n\n\"Okay, but hear me out. I'm just spitballing, but maybe we should choose a class I can make some effort in.\"\n\n\"Why on earth would we do that? What's the point of being you if you can't abuse accommodations some?\"\n\nI moved my piece and the way we had Miles play was that he would speak a piece name and then a designation. For instance, he would say something like, \"Bishop to F4.\" And then I could feel the movement from the previous square and trace it to get my bearings as I needed. After so long playing with him, though, I rarely even needed the board. It was just for fun to have it and feel it. \"Okay, okay, I'm not saying we can't find one to abuse a little. But let's meet in the middle, right? So, if I were going to be totally responsible, I would say, 'Let's take Physics, Miles.'\"\n\n\"No, God, please. Please, don't do that to me, mate. I'll take back every blind joke I've ever made and I'll never buy you another Viewmaster as long as I live.\"\n\n\"You didn't let me finish! I like my Viewmaster collection. It's getting a glass case one day, with Braille designations for each different slide thing. And no, see then, I wouldn't be abusing it hardly at all, right? But I could say Biology...\"\n\nMiles' voice jumped up in his humor and I grinned. \"Oh, that's brilliant. Animal kingdom lists for the serious days, but those microscope days, on the other hand.\"\n\nMiles and I had based our friendship on the fact that he never treated me any differently or with any less humor than he'd treat anyone. One time, he landed us both in detention during dissection day in middle school because he waited for our teacher to pass behind us and promptly said, \"David, mate, you want a turn with the scalpel? I'd trust you as a surgeon with as steady as your hands are reading Braille.\" We quickly learned all kinds of things we could get away with since I was blind and God, the list was beautiful. Of course, there was a trade, as there were also some things I couldn't away with as a kid. Sneaking out of the house on my own was pretty terrible.\n\nPeople often make the assumption that because I couldn't see, my life was this separate entity from anyone else's, but the fact was that the phrase \"boys will be boys\" still applied. That being said, there were definitely some differences. \"Okay, which professor's name looks the most promising to look up first? If they're anything like that one online instructor last semester, I'll go with the Physics before I suffer that again, Miles.\"\n\n\"That's fair enough. That one was awful. Okay, this one looks promising. Professor Schafer.\" For instance, Miles and I had learned freaking quickly that I had to look up my teachers and I had to email them before the semester start to make them aware that hey, they had a blind kid in their class because they'd genuinely have no idea otherwise. It took me one bad experience in an online class, of all things, to realize that there were some limitations. There weren't many, but they did happen. I started out not saying anything to my instructors because I thought it wouldn't matter in an online environment or that they would already know. I learned the na\u00efvet\u00e9 in that logic when I ran into my first proctored exam and the poor proctor lab instructor was at a little bit of a loss and the class instructor turned irate. In the end, Miles and I had to cheat in that one class. It was a frustration that I would learn to live with, that people weren't always as adaptable as I had learned to be.\n\nBut for the most part, people weren't bad. They were just people. Professor Schafer's class was something that I would look back on and marvel at because it taught me more than just Biology. Schafer was a wonderful person. Weeks later, as classes drew nearer and my mother eventually helped me move into my college apartment with Miles, I would email Schafer while my software read her replies to me and she wasn't just helpful. She asked curious questions during the exchange, making sure that I could learn like anyone else. The path that led to Schafer's Bio I class was one that I would always look back on with more than a little fondness.\n\nI ended up in that class and at that college because I wanted a career in software and IT and I could try to claim that the reason for this was something selfless, like an interest in ADA applications, but that'd be a total lie. The truth was that in high school I learned that some days, being blind felt like my personal Goliath, but others, it made me feel a little like Matt Murdock. Back in grade school, people thought I was some kind of wizard because I could keystroke command my way through writing an entire paper. People would have me keystroke command indentation and marvel at the fact that I didn't need to see, so I ended up in coding because it made the Matt Murdock days easily outweigh the Goliath days.\n\nI was a lucky guy, really. I could tell you all about the bad times, but the truth was I had parents who made sure I never wanted anything. One time, they got me a color reader for Christmas, even though I didn't know a thing about colors. I held it up to a shirt to hear it say, \"Sky blue,\" and then marveled when I felt the inside of the shirt sleeve for the button I used to indicate the color blue. I had Miles, who treated me like I was anyone else and who was enough of an idiot that he made every day amusing.\n\nLeading up to that class was its own form of joy, too. Even the build up just felt like something that would start my life down this new path. In her nerves, my mother made sure I had everything I could ever need for that semester. My refreshable Braille display was brand new, she got me a new laptop and we set everything up for it together along with my dad, who knew these things comforted her. Miles, on the other hand, got me a microscope kit for my birthday, collapsing into cackles of laughter when he said, \"I thought it might help for the class.\" I heard my mother throw something at him, but she loved Miles more and more with every passing antic that made me laugh.",
        "So, that was how I ended up there. It's strange. Whenever you make a decision for something that will change your life, you don't even realize that you're making it. It's only in hindsight that we realize how important some things are.\n\nI started that second semester as a guy who was just excited to be trying for independence, like any other person.\n\n--------\n\nTo this day, I would never know what love at first sight felt like to those with vision. I can only speak on the experience as a blind man. It's a strange thing to consider, isn't it? How could one possibly fall in love at first sight when one has never had sight?\n\nI don't know. I can only describe it as well as I can. It happened without a feeling, so fast and suddenly that I didn't even know it for quite a while. There was no sound with it, no warning.\n\nI merely walked into a room one day and my heart was no longer my own. And I would never want it back or mind that it had been taken in the first place.\n\nDavid Layton, from The Sightless Memoirs\n\n\"Hey, mate, how do you know you're not gay?\"\n\nI grinned, holding my white cane. Miles walked on my left and I loved the sounds of being in a city slightly larger than my home town. It wasn't much bigger or anything, but it had so much more sound. The cars on the street were both grating and exciting. I stopped at the crosswalk, tapping the street signal and feeling the Braille lettering there. Even if I know what some of those street signs always say and even if they never change, I just like feeling the raised dots against my fingertips as an orientation when I didn't have a wall to traverse alongside. \"What do you mean, how do I know I'm not gay?\"\n\n\"Like, I see a girl and I think she's gorgeous. She has long, red hair and these green eyes or something. You've never seen me. How do you know I'm not your type?\"\n\nI always felt like they should update crosswalk voice readers. Some of them could be flat out irritating, like the one we turned at then. It was way too robotic and somehow irritatingly high pitched at the same time. The ones at home had a male voice and those weren't too bad, actually. We walked when it said to walk. \"Because I don't like the way you sound or smell.\"\n\nMiles choked on his laughter so that I had to grin and Miles had a few different laughs. One was this soft cough when he was trying to be quiet about it and others were just his equivalent of texting \"lol\". Any joke about my being blind always made his laugh this genuine sound, though. I knew some people who would get offended on my behalf because of Miles and we had no end of joy over it. We tried to not be assholes because we knew that the feelings of people like that came from a good intention, but really... I just like humor. I'd heard enough of all the warnings about the dangers for someone like me. Being asked how I knew I wasn't gay was a pretty nice change.\n\n\"Okay, that sounded terrible, let me explain.\"\n\n\"No, no, mate, you can't take it back now. I get it. My voice is annoying to you.\"\n\n\"Oh, shut up. No, really, girls sound different. Like, when a guy walks down a hallway with jeans and tennis shoes, it sounds different than when a girl does. Girls have tighter clothes, you know? The fabric sounds different and the way they walk sounds lighter. Sometimes they wear heels and it makes this really cool click sound and they wear different body spray and stuff. There's all these little things and their voices sound a lot softer.\"\n\nHe still had laughter in his answer. \"Yeah, you're right, that does sound a lot better than how you originally put it.\"\n\n\"Oh, you knew what I meant.\" The feeling of stepping away from the streets and onto the college campus was one of my favorite feelings. There was an exact turn off where the last road of the route we took started to fade away and the sound changed. Instead of the street, there was the rustling of the wind through trees that were periodically placed. There was a narrower feeling to walking down the pathway and Miles and I ended up walking a little closer together while he adjusted to let me take the lead for easier cane travel. It was more peaceful in sound, but also a little more nerve wracking. In my experience, people on the campus tended to be less attentive than people walking through the crosswalks. Miles and I had gotten fairly comfortable with it, though, and he would rarely touch my elbow and tug so that I shifted to a side if he had a concern. He was great about it, too. My mom, for instance, held my elbow a little too much while my dad had to gently chide her. Miles only ever did it when it was necessary and he always added a comment like, \"Man, these people will just straight up trample a motherfucker in dark glasses like elephants from the Jungle Book. Jesus...\"\n\nHe let me feel the press bar to the science lab building and we were early that day. We'd coordinated it with Schafer for me to meet her, so that she could tell me some of the adjustments she was going to make and be sure I was fine in person. I should probably add that my school of choice was, for obvious reasons, not a larger one. It was small enough for the instructors to be more willing to work with me, but no one put as much care into it as Schafer so far.\n\nMiles and I were used to being early for a lot, too, so we actually ended up being early for being early. I felt the Braille on the signs by certain doors, reading the numbers, and followed them up until I found the room. The cool thing about finding places like classrooms was that after a certain time, muscle memory would kick in. Think of it like this unconscious distance counter in my head. Every time would be faster and faster, much like anyone finding a new classroom.\n\nSchafer wasn't there yet when we walked through the door, but there were two other people who turned out to be very interesting. It was an occurrence that made me wonder what sense of humor God must have. Later, I looked up the odds of what happened and they were stupid. Sometimes you have to wonder about higher powers, you know?\n\n--------\n\nIII. Silence With A K\n\nKelsey\n\nOne of the things that I've discovered in my life is that Deaf culture is, as the name suggests, a culture. However, I would later have cause to examine the blind community and something would interest me. If you ask many blind people, they will say there isn't a \"blind culture\" in the same sense that there is a Deaf one, per se. So the question that came to me was why the one, but not the other? If sensory loss had any regards in the decision, then both would have a culture or neither would. Examining it would become an interest of mine and I came to the conclusion that there were likely more factors than I could address in my life to play a part in the answer.\n\nHowever, I think I can identify a large factor as being a communications and language barrier. The Deaf community are heavily steeped in their language's respective sign language, for instance. This is not to say that a language is the only thing that makes a culture, by any means, but I think for this specific one, it seems to play a rather noticeable part. For instance, Deaf interaction is usually very expressive and it is not at all difficult to see why this is the case, since sign languages rely on the visual and expressive. For instance, one way to clarify a question in ASL is to lower the eyebrows in a questioning manner.\n\n~From Dr. Archer's Essays on Languages and Their Resonances Through Cultures\n\nMy sign name was the ASL gesture for silence, except it was made with two Ks instead of flat palms. In the Deaf community, it was sometimes part of the culture that we had a sign language designation as our name and my childhood speech instructor was the one who gave me my name. It might seem odd that a deaf girl would be identified by the sign for silence, when most of the deaf people I spoke with were usually silent, but there was a reason for mine. \n\nIt stemmed from when my parents had set me up to learn how to keep speaking after I lost most of my hearing by the time I was six, due to lesions and cysts in my ears. Surgery by surgery, I lost the hope of repairing my hearing. I remember watching my parents speak to me with concern on their faces, while I couldn't quite understand their words anymore, let alone the fear they had that led them to comfort me. The truth is that I was too young to miss hearing or to feel fear at the thought of losing it, but of course my parents wanted what was best for me, like most parents do. So they signed me up for speech classes. \n\nTheir thinking was that I had had a little time to hear sounds and to shape them, enough that I could work off of memory and then I would be able to better communicate with people. But sometimes, we learn our own ideas for what's best for us and they don't always align with our family's views. Much to my parents' frustrations, I refused to speak unless my instructor made me, after I tried it around other kids my age and they gave me funny looks because I didn't sound like they did. It wasn't easy to speak when I couldn't hear myself. Most of the time it was a godawful lesson in freaking frustration, to be honest. It was slow and so damned boring and I figured out that I would never get it right, never. So I quit speaking altogether and became content with ASL.\n\nSilence. But with Ks for Kelsey. That was me, a mouse that was far too afraid to make sound.\n\nPeople always had this weird thought that my life was missing something because of my being deaf and quiet, though. They seemed to think it was some kind of entirely different entity, but it wasn't. Oh, there were definitely differences, don't get me wrong, but it probably wasn't as strange as most expected. My life was pretty great actually, especially after I met Maddie in grade school. She wasn't fully deaf. She was deaf in one ear, but her family members were all deaf and she struggled to listen to people in middle school. She just didn't grow up in a household where she paid attention to sound, so she wouldn't pick up on certain things. But she started to figure it out a lot easier when her and I became such good friends because she started to try to translate other people for me and it helped her learn to watch. At the time, I had reading aids and that kind of thing, but it became really cool when Maddie came along. It was sometimes easy to remember that we lived in an audio heavy world. Maddie and I tried to stay together as much as we could when we went onto college together and we made our way pretty well actually. We had a lot of fun figuring out the things we could get away with because dear God, two girls with ASL in their repertoire? During some of our end of semester testing in middle school, when we were with teachers who didn't know us and didn't know what to look for, I got away with signing test answers to Maddie when we were discreet enough about it. Of course, by that time I had learned to lip read decently and we could get away with pretending we weren't deaf and hard of hearing as long as we didn't draw too much attention to ourselves.\n\nAnd the pranks? There were endless possibilities.\n\nSo it wasn't all that different, actually. Some things are the same no matter what sensory divisions humans may have between them. I went to college like anyone else who went to college, even if I had to stay with email to communicate with my academic advisor. I did have a tendency to stay with mostly online classes, but I lived in an apartment complex near campus with Maddie, since my parents wanted me to learn independence.\n\nI ended up in Dr. Schafer's class when I needed a science lab credit, something that had to be on campus and Schafer had been really cool when I emailed her. So it was mostly pure random chance that I ended up in that class on the day that a blind teenage boy walked in where I was early to meet with Schafer. Maddie stood beside me, but the moment was surreal, as if the world ceased to exist.\n\nI don't know if there's sound for people with hearing when they fall in love, but there wasn't a thing for me. I merely looked at him and my life's path changed.\n\nHe had this dark, slightly wavy hair that was somewhat messy in its style. A Braille charm necklace hung over his black, sports logo shirt and I watched while he lifted his hand to hold it. His jeans were ripped at the knees and he held a white cane, his backpack over one shoulder casually.\n\nHis friend stared at Maddie when she signed to me, What do you think the odds are of a blind kid and a deaf kid ending up in the same lab together?\n\nThe friend's eyes went wide and I watched his lips move with his phrase and lip reading is tricky. I make the best of it, but when I don't know the person I can only get about a third of what they say on a good day. The rest is something I have to infer from body language and expression, but his words were clear as day. This is kind of cool.\n\nI grinned and felt my vocal chords move with my giggle before I could cut it off. I was good at keeping those sounds short after a while. Once I realized that it was hard for me to sound like someone with hearing, I had started to cut off things like those giggles as well. I liked my silent movie world and I liked being quiet. It was why I had gone to a college for a web design degree. I loved the feeling of silent expression that came from coding. With the age of technology, so much was read online and that was a medium that I felt safe with. Colors spoke as much as sound did, at least to me, and I turned out to be good at it. Who better to get messages across with design work than someone who was limited in their communication?\n\nSuch random occurrences of events that places us in the paths of the people we meet. Such strange twists of fate that dictate our lives in sometimes profound ways. I watched the blind guy curiously, marveling at how he tilted his head when his friend talked beside him. He smiled with whatever his friend told him and those facial expressions made me more curious with another thought.\n\nHis expressions, right from the start, were more open and honest than most people had. Of course, I would later consider it and think that it was obvious that he would be more open. There was no smile more honest than from someone who had never seen another smile to mimic it.\n\nI don't know if this is the case for other deaf people, but my parents told me the story of Helen Keller when I was very young. The thought of being both blind and deaf gave me this confusion. What must that be like to not see or hear? For that matter, what must it be like to be able to hear, but not see? The concept of sound was one of my favorite thoughts in the world. It traveled as a wave and other people could translate those waves into something the brain received and interpreted. Do you know how cool that is? I had all the parts, but my receptors were broken from surgery, so there was little for my brain to interpret. It was the kind of thing I had looked into with so much curiosity as a child, reading book after book. How did it work for people? What must they hear when that sound was translated? My memories of sound faded fast after I lost my hearing and my questions only grew. What would it be like if the brain couldn't translate those sounds? In the bible, when the people built the tower of Babel, God inflicted them with different languages. Did he suddenly make those people translate the sounds differently and that's why they abruptly couldn't all understand each other?\n\nAll that being said, I liked it from an academic standpoint. When I read books and people talked about all the sounds in life, it sounded like chaos. I liked my world. It was peaceful and hearing people often seemed so oblivious to all the sights around them.\n\nFor instance, they didn't focus on the way people's lips moved when they spoke, like the way the teeth bared and the lips pulled back to shape an \"e\" sound. The friend's mouth was moving too fast for me to catch all of it, but Maddie was wonderful.\n\nHe's asking what the odds are of this happening, too.\n\nI grinned. Can you imagine what the instructor must be thinking? You'd think administration would see something like this.\n\nMaddie translated what I said for me, so that the blind guy laughed and I liked the way his lips curved crookedly, with this obviously happy appearance. It made me smile too, especially when he shook his head and spoke.\n\nHe says admin doesn't notice shit, from what he's seen so far.\n\nYou know how kids always think adults notice everything and have all the answers and then teenagers are angry because they're trying to find independence and rebel and they're confused? Well, I have a theory that teenagers start to actually figure things out when they realize that adults don't know as much as we thought they did. In reality, people who were deaf or blind couldn't wait for people to help them because adults had their own lives and there had been a ton of times when people didn't even realize I was deaf. I had to be the one to email my instructors for help. I had to be the one to insist when I needed transcription.\n\nI think I took my first steps into adulthood with that class, to be honest. The way Maddie made the signs to translate had some of the guy's emotions in them. They were emphatic with the exasperated amusement I could see on his face, plain as day.\n\nHis friend gestured to himself, his lips forming the words My name is and I didn't catch his, but I caught the next name as it was one I had seen people say before.\n\nThis is David.\n\nMaddie translated anyway, fingerspelling the names while I grinned. She said our names while I signed out, My name is Kelsey. I hesitated on my name, though, getting a sudden idea.\n\nI don't know what it was about David Layton, why my stomach fluttered with nerves at the sight of him. All I knew was that he couldn't see my name and I didn't like it. I wanted him to have a signed name for me, even though he wasn't deaf and even though it shouldn't have mattered to me. Maddie had said our names out loud, but I had all those stories of Helen Keller and it gave me an inspiration.\n\nAsk him if I can show him my name in his hand.\n\nMaddie gave me a curious look, no doubt wondering how the hell I was going to do that. I rolled my eyes and nodded her to say it anyway. She did and David's expression lit up while he nodded.\n\nYou see, I didn't know about being blind, but I did know the frustration of being deaf and the feeling of isolation that came from being unable to communicate with a lot of people. And I knew just enough to know that blind people relied on sound and one other obvious key sense. Touch.\n\nI took his hands and formed a K in sign, letting him feel the way my forefinger and the middle finger split, while the thumb pressed between them. His touch was something I became intrigued with right from the first. It wasn't like anyone else's would be. It wasn't like how someone would touch with purpose, to correct a sign when it was wrong or to shake your hand. It was curious instead and he traced the form of my fingers to see with this grace, although in hindsight that probably shouldn't have amazed me as much as it did. How else would he touch when he had to trace things like Braille to read?\n\nHe went over the K and then rested his cane against his shoulder to try to make it with his own right hand. I grinned and corrected what little needed to be corrected, so that his face lit up again with excitement, enough that I laughed a little before I could suppress it. Then, I caught his other hand back, made another K, and moved him in the sign for silence, going from crossed in front of the lips to down and out.\n\nKelsey.\n\nSilence. Me.\n\nHis face was alive with excitement and he mouthed my name, so that I grinned, this warm feeling of joy filling me from my head to my toes. Everything about it gave me this pure, basic happiness. His touch, his expressions. Communicating with him felt like something truly special in life, perhaps because of our obvious differences. It was true that I was used to hearing people having their vocal way of my name, but I couldn't hear that way. This felt... It just felt special.",
        "And I loved how excited he seemed when Maddie explained what I'd done, the differences in the names. Miles turned eager at the thought and I caught his initial words, That's freaking cool. Maddie had to translate the rest when he spoke too fast and I couldn't catch enough to piece his sentences together. David's Braille name is just a bunch of dots spelling it out. Your guys' way makes me jealous.\n\nI already liked Miles. He made me laugh again and David intrigued me. I looked up when Schafer appeared behind them and David turned around without being guided because of the sound. He waved easily and I couldn't keep from watching while they spoke with Schafer and Maddie signed beside me, quick summaries.\n\nSchafer's expression was amused, her short blond hair pinned back, and she was this smaller woman, with a calm and easily approachable demeanor on sight. So, I don't know what the odds of this ever happening again are, but I'll be honest. This is my first time ever having a blind student. I've had a hard of hearing student before, but we'll figure this out together.\n\nShe was organized and she started with David first, asking him questions about what might work for him while I spoke with Maddie in sign. The seats are set up for groups of four. Do you think she'll let us be partners with them?\n\nMaddie stared at me for a moment, hesitating before she signed her words. Kelsey... Sometimes I forget quite why your parents wanted me to watch over you and just how sheltered you are after living such a quiet life. I blushed at that. It was true that I had refused to get out much and it was true that I had ended up academically brilliant, while still being none too savvy with the world. It's not a bad thing! But, for the record, she's not going to care who we partner with, honey. We're paying for the class like everyone else, so it's all the same to her.\n\nRight. This was college I was in now and I wasn't supposed to do things like ask permission like that anymore. I was just supposed to do what I liked and figured out what worked for me. I watched the two in front of us while they talked or, more accurately, I watched David while he spoke easily, admiring at how he seemed to get these rules. Schafer obviously had a setup worked out that easily satisfied David and they let us talk with her next, standing back.\n\nMaddie translated, while I watched Schafer talk, trying to get used to the way she shaped words. I didn't have to pay attention to most people, but I always tried to make things easier for my instructors whenever I could. Now, for you, I've tried to create a more detailed transcript of any instructions. Since this is a lab and not a lecture, this will actually be pretty easy. Most of everything is already pretty detailed. Beyond that, I think it's going to be a matter of clarifying, so if that works for you, then we can go by any email questions or questions after class. What do you think?\n\nI thought I really liked her. That sounds straightforward.\n\nShe nodded and... that was it. I had been stressed about meeting with her for this class, but that was that. She made it so easy and fast that I didn't even have a chance to work up the anxiety or fear. I glanced at Maddie and then back at Miles and David and I know it will probably sound funny to people who got out more in high school, but even when we sat across from the two of them at a lab table, I kept waiting for someone to stop me, to fuss at me for doing something I wasn't allowed to do.\n\nOf course, no one did. As for David and Miles, they seemed to have the mindset that Maddie and I did, which was of course we were all going to work together. It was a decision that went with that sensation of time having stopped when he walked through the door, one that went with the butterflies I had gotten when teaching him how to sign my name. David, the old biblical name. We spoke quietly together before the lab started, Maddie translating for me. For the first time in ages, I was a little frustrated by my inability to hear when I wondered what his voice must sound like. I was even a little frustrated that I needed a translator, wishing I could have his words and thoughts more directly, although I think that thought was more from the knowledge that this was someone who would never be able to read my sign language, someone who would be tricky for me to communicate with in an almost impossible way. And I wished that it wasn't the case, even then.\n\nBecause all the while, I couldn't keep my eyes off of someone who couldn't even see my sign language and had learned my name anyway. My stomach flipped with those butterflies.\n\n--------\n\nThe Story Keeper\n\nAs you can imagine, the sister blinked curiously into her scrying bowl after this exchange. She had spent those 18 years in restlessness that her beautiful couple wouldn't be able to appreciate how perfect their soul mates were. The boy couldn't see how gorgeous the girl was, how much like crystal her eyes were. The girl couldn't hear the boy's gentle voice, how kind every word could be, how much laughter he spoke with, how much heart he had in his thoughts. She wouldn't be able to hear music so that they could dance together at their wedding and he wouldn't be able to see how his bride might look in her wedding white one day. The sister imagined every negative thing and her brother, the trickster god, didn't even bother her again. He left her to watch the day the two met on her own.\n\nAnd yet, when the girl showed a blind boy how to say her name in sign language and he inhaled curiously, happily, the goddess felt a new kind of intrigue. She watched with a little more hopefulness as one meeting led to a second and then a third...\n\n--------\n\nDavid\n\nIV. The Shyest Fae\n\nNothing makes you ready for when a doctor tells you that your unborn son will never have sight. There are probably a lot of people in this world who can give you a better account of how to handle adversity in their life. I can tell you that I am not one of them and only caution you on how to not go about it.\n\nI had wanted a child more than anything in life and my husband and I had problems with this for a while, but eventually we started down that pathway. Jessie was my first born, a beautiful girl, healthy even if she was a premature birth. I had never dared to hope that I might be graced with the miracle a second time and yet, I was. Jessie was only a year old when I became pregnant again. I couldn't have been happier while setting up another beautiful nursery on the top floor of our house, thrilled that the household was going to grow a little larger again and have a little more love. I chose that top hallway, down a door from Jessie's room where I would be right across the hallway from both of them and they could both grow up together, not far from each other.\n\nIt was a strange thing on the day we found out that David would be born blind. At first, I was... perhaps in a state of shock. I had the thought that maybe I was already a bad mother because I hadn't anticipated news like that. I remember walking up to the nursery and staring around at it, thinking that I needed to move everything to another room on the ground floor. My blind son would be safer there, where he wouldn't have to worry about stairs every day. I closed my eyes and felt my way around the room, holding my stomach and imagining what his life was going to be like without a sense.\n\nI don't have pride. When he was born and they put me on painkillers, it started a darker path for a year or so. The upside to this story is that I have a loving husband, which meant my terrible coping mechanism had to be kept in the dark. It forced me to keep my senses and to not lose myself entirely. Our nanny had a keen eye, however, and it was she who finally discovered me. It was a fortunate thing, as it ensured this dark time was short lived. There were many ways it could have been worse. My daughter and son could have grown up with a far larger problem in their mother because I was far weaker than either of them were. My husband could have been absent, my nanny could have been far less kind. In the end, my husband did learn of my habit and I learned a valuable lesson when he held me that night.\n\n\"We figure it out together.\" It wasn't easy, but then these things never are. My story was likely the easiest it could have been, however, with so much love already surrounding me.\n\n~Carolyn Layton, from The Sightless Memoirs\n\nKelsey Archer was her name. I had to ask for their last names and grinned when Maddie told us, my heart jumping erratically with every new thing I learned about Kelsey. She fascinated me from the start and I'm going to try to explain this as best as I can. Sometimes it's hard to translate these ideas to people who don't understand the world without sight.\n\nTo me, she was like a book's description of an apparition, an ethereal, mystical ideal. For instance, that first day in that lab, I knew she was there. I knew she was sitting right across from me, I could hear Miles beside me, and I could hear Maddie Bell across from him.\n\nBut there was so little sound across from me. Every now and again I would hear her clothes rustle when she moved, I would hear her hands when she signed excitedly. Sometimes it was like the softest clapping sound, almost nonexistent. I could smell her strawberry scented body spray and I could hear when she wrote something down, the scratching of a pencil. I had to use my laptop for any answers I would type, of course, and I had a setup with Schafer where I would send them to her via her email. So I could hear all these things and I knew she was there, but everyone talked around us during the lab, people at other tables, Miles, and Maddie.\n\nAnd there was nothing of that level of sound across from me. Maddie had said her name was the sign for silence, made with Ks, and I thought that was so very fitting. Every now and again, I would hear the softest sound that made me a little sad. It was when she was amused and it was the soft start of a very shy laugh, but she always cut it off and I knew what that was like, knew why she cut that laugh off. I mean, I didn't know what she saw on other people's faces when they heard something that sounded different, but I knew what I heard in other people's voices when they saw me feel a tabletop to sit down to eat or something. For me, that soft laugh felt like a fae becoming shocked at its own sound and running off to hide again. It gave me this strange fear that she would evaporate away from me.\n\nIt felt like a myth, in a weird way, right from the start. What was more, she was bloody brilliant. Like... Wow. People called me smart, but she was always a joy to talk with through Maddie and sometimes I got frustrated that I couldn't talk with her directly. It took us a couple of labs before Miles and I asked them if they wanted to go eat with us at one of the college restaurants. It was a quieter place that we liked, so we could actually all talk together and Miles and I had made it a habit to go there sometimes.\n\nThey loved it when we showed it to them. It was Miles who started the conversation because I had become a quiet person when I was around her and she sat across from me again, while I listened around us and tried to place that silent area in front of me, that place that seemed empty... only not quite. \"I have tried to explain the idea of shading and light to him so many freaking times.\"\n\nI laughed, focusing and hoping that I could draw her out to talk through Maddie. \"I love comic books so much. I don't get it. How do you look at a picture of Spiderman in front of a building and realize that he's in front of a building? How do you just see that?\"\n\nMaddie laughed and I heard the sounds of sign from across from me, waiting for the reply eagerly. \"She says... Wow, that's clever. Huh. Okay, she says to imagine that you can isolate an echo. Think of how it would be if you could take that one soundwave that was reverberated off of something and then imagine if you compared it to a soundwave that traveled the same total distance as the echo. How would you know it was different?\"\n\nI hesitated. \"Um. I don't know if I would, but, if I did know, I think it would be because it would just sound different in comparison if it had been.... Oh, wow, that is bloody brilliant. Fuck me, I didn't think about it. Don't translate that.\"\n\nMaddie burst out laughing. \"She can lip read the word 'fuck' really well. We learned those as soon as we knew what they were together.\"\n\nI choked on my drink while Miles cackled. \"We figured out Braille for every profanity we could, too. We used to glue M&Ms to a piece of paper to make them.\"\n\nKelsey made one of those laughing sounds that always made me grin. I loved every sound she gave me. Like I said, it was like being near an apparition, someone I knew was there and someone who was so intelligent, but I couldn't fully \"see\" her. There was no voice to let me hear her inflections. There was no full laughter like Miles gave. The only thing I had with her was touch. \"Will you show me some more signs?\" I asked her softly.\n\nIn answer, Maddie said, \"She says she'll show you how to spell your name,\" and then she gave me that one anchor that let me know she wasn't a ghost and I liked the way she felt, too. I hope that doesn't sound weird. I just mean that her touch was always soft when she took my hands and she always took care to not startle me with it. She was clear with how she formed her hand in my palm and she let me feel so that I could \"see\". Her skin was smooth and I associated it with that shadow that made me sometimes wonder if she was really there. I associated it with how clever she always was with her answers, with how thoughtful her questions were, even though they were coming from someone else's voice. Of course, Maddie had a nice voice, don't get me wrong! It wasn't too high or too low and it was perfect for translating her friend.\n\nBut I sometimes wondered, what would Kelsey's be like if she could use it? I traced my fingers around her hands, feeling the shape she made for a \"d\", and then tried it for myself. She corrected it in a routine from before and I grinned happily, then felt an \"a\", thinking through the pieces of her I did know for myself.\n\nShe sounded light when she walked. During the second lab, she had worn different shoes than she had for the first and those sounded more like boots, but they sounded flat too. Even in them, her steps were light and I thought she was a smaller person. I knew her hands were smaller, but she made sure her signs were clear, even for me. I grinned when \"v\" was easy to make and \"I\" was just as easy.\n\nI knew that small laugh sounded shy and nervous, but pretty too. I knew I liked her strawberry spray. I knew she was thoughtful to my blindness even though she was missing a completely different sense. All of these things made me imagine her voice as soft, like her, and maybe a little too soft most of the time, with how shy she was.\n\nMiles laughed when I spelled my name. \"You know if we were in a film class, any of us, we could ace it on principle. It almost seems like a waste that one of us isn't, actually, because we could make the quality absolute shit and use the laziest video editing ever, but so long as we had a legitimate blind guy learning bloody sign language, they'd have to give us some credit.\"\n\nMaddie was signing while she spoke and I realized that I was starting to be able to tell the sounds of sign with the brushing of her hands. \"Did you guys figure out really early on that you could get away with all kinds of stuff?\"\n\nKelsey laughed while Miles answered by telling how we used to get away with so much in our English classes when we had to reenact plays. He told them how we once had to reenact the balcony scene from Romeo and Juliet, but we had to do it Valley Girl style, so we switched out my dark glasses with some shades and I wasn't even facing the right direction when I tried to talk to him. I listened and laughed along, but I was distracted.\n\nKelsey signed some of her answers, but then placed her hand back in mine so that I could trace her fingertips. She was restless sometimes and I felt her hands move every now and again in my palms, this light twitching.\n\nI realized that she was thinking of things to say, but sometimes she was holding off so that she could keep her hands in mine and I got butterflies in my stomach, so much so that I managed to force myself to speak at the end of eating. \"Hey, um, do you guys like movies?\"\n\nI expected Miles to outright laugh at me for even asking, but his voice was oddly subdued when he said, \"We're pretty good at recaps.\"\n\nWas it just me or did Maddie sound like she was standing awful close to him when she answered? \"We love movies.\"\n\nLater, I would look back on it and realize the strange reality that I had kind of, sort of asked a deaf girl on a double date, but at the moment I was just too nervous. We chose an action movie after Kelsey said the shaking of the surround sound and vibration was the most fun in those. I don't know that what I felt was even exactly the dating kind of nervous, either, though. It was more this thought that I hadn't expected to really get out all that much when I first gave college a try. That first semester, Dad had convinced Mom to let me stay a few weekends with Miles in the apartment, Miles and I had mostly kept to ourselves. I mean we went to eat and went to a place to listen to football games, yeah, but this was the first I could say we'd made real friends with anyone else.\n\nOf course, I thought of her hand in mine and it wasn't lost on me that those friends were girls.\n\n--------\n\nMy mother was easily one of the strongest people I had ever met.\n\nI wouldn't even find out until much later that she cried the night she found out that I would be born blind, that she even had problems at all. By the time I was old enough to have fully formed memories, I would remember things like tracing her smile and learning the feel of happiness while she baked cookies. I had memories of Christmas and petting the tree skirt, grinning eagerly because I already knew that one day I would come home and feel presents under the tree as well after my mother wrapped them. Oh, I knew that outwardly she probably didn't seem strong. She had a soft heart and the kindest voice that could turn stern when she was concerned for my safety.\n\nBut it was this internal strength that she had, the quiet fortitude of a pacifist's soul. My mother did not like confrontation. She avoided it as much as she could, actually, but, oh, when she was forced into it... Well, let's just say that I learned quite quickly that it is not wise to anger a gentle soul with how her voice could change in an instant when she felt the protection that a mother bear would feel. One time, I made the mistake of running off from her when we were at the mall together. I had been learning cane travel and it was this exciting thing for me, something that made every outing feel like a detective adventure. That gentle soul had zero problem taking me to the car to beat my tail over it after I scared the hell out of her.\n\nOf course, while I sniffled and held her hand, she turned around and bought me a Transformer because I loved to figure out how to move the pieces to change the toy. It was that quiet strength and gentle love that taught me to take responsibility for my own location, something that made it easier for those times I would become lost, something that made me learn to listen and to pay attention to my surroundings.\n\n~David Layton, from The Sightless Memoirs\n\nHere's the thing about girls for me. Like I told Miles, I knew I wasn't gay, but for me, appearance was out of the equation for the most part, right? I mean I could tell some things. Like, I could tell when a girl was taller than me by where her voice came from. I could tell Kelsey was shorter than me just by those small sounds she gave me for hints, even. For the most part, though, it was all about talking for me.",
        "What was strange was how I didn't have a direct line of talking with the person who had interested me more than any other girl. Maybe that was part of why she interested me so much to begin with, actually. I still don't know. All I know is that I was curious as soon as she quietly taught me how to sign a version of her name during that first lab. What was it like, being in a world without sound? I couldn't help but be a little afraid of that idea when I relied on sound for so much. It let me know when traffic was heavy, for instance, and I had to have software read to me from my laptop when I wrote a paper, so I could hear it back to make sure I was free of typos. I loved audiobooks, although I loved reading on my refreshable Braille display more. And music was part of my day to day routine.\n\nWhat would it be like, to be without all that, but to be able to see, too? I already couldn't imagine things about vision. How did someone see a stop light and know when to start pressing the brakes? How could they just tell? What was it like to wake up in the middle of the night and need to turn on a light to go get water? My white cane worked just as well for me in the dark as it did with lights and my glow in the dark cane wasn't for me. It was for other people to be aware of me.\n\nIt seemed like a crazy concept. That's what I was thinking about when I chose which hat I was going to wear to go to the movie. I know it sounds crazy that I might like hats, but I loved the ones with raised designs on them. The threads felt silky where they formed lettering and I loved the Minnesota Vikings, so I trailed my finger across the logo and chose that one, tucking my Braille locket under my shirt. Miles fox whistled when I walked out.\n\n\"Not bad for a blind guy, mate.\"\n\n\"You know, you talk a lot of shit to someone who has to carry a stick all the time, one that's pretty convenient to hit you with.\"\n\n\"I didn't talk shit! I called you gorgeous, I don't know-\" He cut off, laughing, when I slapped where I knew his shoulder would be. I didn't need sight anymore to know how to hit Miles.\n\n\"Hey, Miles, can I ask you something?\"\n\n\"Sure, mate, what's up?\"\n\nI hesitated on the question, trying to think on how to phrase it. \"If I feel something protective over Kelsey, how much do you think is based on the fact that she's deaf?\"\n\n\"Er.\" He fell silent to collect his thoughts, but to his credit, he didn't laugh at me or anything like that and his voice was calm when he answered. \"I think I can see why you ask, David, but I honestly don't think a lot of it is based on that. I'm guessing you mean like how you guard her when we go out to eat and stuff, right, and... I think Kelsey was more sheltered than even you were, mate.\"\n\nI exhaled. \"Thank God. It's not just me, then!\"\n\n\"No, it's definitely not. I'm not so good with the sign language or anything, but sometimes when she's signing to Maddie for Maddie to translate, she's definitely asking permission or advice or something. I don't mean in a weird way. I mean that she... she seems unsure of herself a lot and she's so damned shy.\"\n\n\"Like how she cringes closer to me sometimes when someone directs their voice at her!\" I felt this sense of eagerness that I wasn't crazy.\n\n\"Yes. That's it. She flinches a lot and she tries to make herself smaller all the time. So... I don't know quite what you sense or see, but she's pretty obvious about these things, so I'd say the being protective thing has more to do with you picking up on that atmosphere than it does with her being deaf. I mean... okay, remember back in middle school when you told me that I could ask that substitute teacher for help and I argued with you about it because he didn't look overly nice and you turned out to be the right one?\"\n\nI laughed. \"Yeah, I couldn't figure out why you didn't hear it in his voice at the time.\"\n\n\"Yeah, and I think that you pick up on these things even better than most people, David. I don't know if it works the same way with her because of how different this is, but I feel like it does work the same way.\"\n\nI hesitated. \"Okay, but will you let me know if I seem too overbearing or too... I don't know, just annoying or something? I don't want to do that. I really like her, you know?\"\n\n\"Oh, are you giving me permission to tell you when you're an idiot?\"\n\n\"Yes,\" I answered easily and Miles laughed.\n\n\"Yeah, mate, I get it and yeah, I'll let you know.\"\n\n\"And will you let me know if I look-\"\n\n\"Oh, my fucking God, David. Would you go already? Stop being nervous and weird, Casanova. Just think of it like dating any other girl.\" But I was still a little anxious when we walked out the door together and started the walk to the theatre. \"Okay, look, I get the nerves, mate, but you already know what it's like being a little different. You know? And I don't mean that in a bad way so don't think that! I just mean that... you two have a lot in common.\"\n\nI smiled, thinking of that sweet little fae who had been able to understand my Python coding jokes. \"Yeah. Yeah, okay, I just wanted to make sure.\"\n\nBut I had other thoughts too, about how I was starting to feel a need to have her close when I met with her, not in a controlling way and not even in a needy way. It was more a way borne of a desire to guard her when sometimes she asked a question that was a little more na\u00efve than most, when sometimes her brilliance seemed offset with an extremely sheltered life. Her deafness made her quiet, sure, but it was that shy, frightened nature that made me feel the need to guard her, much like the way she cut her laughter so short made me want to somehow guard her so she could laugh more.\n\nI felt a little better after Miles' pep talk.\n\n--------\n\nV. Code Horny\n\nKelsey\n\nWhen speaking of music as a visual language rather than an audio art, it seems most obvious that one should start with the mention of Ludwig van Beethoven. If there was ever a compelling argument to be made for the fact that music is a visual art, as well as a unifying language, it would be with the famous deaf composer. It sometimes seems an impossibility that the man who would go on to compose the accompaniment for that famous poem Ode to Joy, while he was almost totally deaf, was also the man who wrote about his suicidal contemplations in the Heiligenstadt Testament when that deafness was setting in. Of course, an argument is there to be made that critics at the time did not think Ode to Joy as grand as I may think it is. I cannot speak on this with any real credibility. One might say I simply do not have an ear for it.\n\nI can only speak on what this goes on to discuss, which is the fact that the visual of music is, in itself, an art form. The sight of Ode to Joy when it is played on the piano is something of a dance that fascinates me. The rhythm is visible in the body of the performer and each performer is unique. This made me wonder, then, if the visual of music on a page couldn't be considered an art form of its own, as well as a language. And, if this is true, could it not be a possibility that a deaf person could analyze this art form and create their own art off of how they see the notes linguistically shaped together on a page? Certainly, a deaf person can transpose music. This is as easy as translating English to Italian, if you know the languages.\n\nBut composing. Ah, then it is not so easy. My discovery is that yes, I think it is possible. However, I must conclude the argument that there are limitations and parameters to this. For myself, I cannot claim that I would feel well enough in letting another listen to one of my compositions, for instance, without first letting a dear friend of mine ensure I am not piecing together a lot of musically discordant nonsense. In other words, I feel as if I have to approach this thought and my experimenting with the good sense that I am most certainly limited, if you will.\n\n~From Dr. Archer's Essays on Music as a Readable Language\n\nI loved movies.\n\nNo, really, I loved movies so much and hearing people never believed me when I tried to tell them that. In movie theaters, they have this surround sound so you can feel the vibrations in the seat when something exciting happens and it lines up really cool in action and superhero movies. Those are the best, too. I felt more excited than ever when I got dressed and it probably made an entertaining visual when I played dress up. I knew David wouldn't be able to see it, but I didn't care. The thought of meeting with him that night made me think of holding his hand to teach him ASL and I got this girlish sensation of blushing shyness.\n\nPeople never seemed to think about deaf people and relationships, which always struck me as strange. Why wouldn't we have relationships? I could tell you about my first kiss and what kinds of things I liked in guys. Granted, I probably wasn't as far along the relationship continuum as a lot of people my age, but that wasn't from being deaf. That was because I had been caught up in various projects in school. One time, I got caught up in playing with tuning forks and feeling how it made glasses shake when the glasses were filled with different levels of water. I was curious all the time, about everything, and I loved coding the most. When I discovered that, I started to make web page after web page and my parents got me design software, so I got caught up in that. But then I got caught up in how many different coding languages there are and that excited me the most. Language was probably my real fascination, even then.\n\nBut David Layton liked some of those things I had gotten caught up with, too.\n\nI thought about how he looked when he talked about Python coding and got those butterflies again. I thought about holding his hand and how he so gracefully traced the shape of signs to see them. He was handsome, too, and one time he had taken his dark glasses off.\n\nHis eyes were striking, beautiful. It made me sad that he didn't show them off more, that he blinked almost fearfully and turned his head in a nervous tic when his glasses were removed.\n\nMaddie grinned when I walked out the door, seeing me with my favorite pink shirt and my favorite ripped jeans. Sweetheart, I feel as if it's my responsibility to inform you that you have, what's that word again? Oh, right, a crush.\n\nShe drew out the sign for that last word, her face alive. People never pay attention to someone who speaks in sign language, but I think it's one of the coolest languages. It was always a very expressive language since so much of it just relied on visual expressions. It frustrated my mother sometimes, how complacent I was with using sign language. I still had to meet with my vocal coach, but it felt like a lost cause and an impossibility for both of us. When I couldn't hear most of the sounds I was making and all I had to go off of to form words was how my vocal chords felt or the shape my lips made, it frustrated me quickly. People I've met seemed to think that it would just be easy for a deaf person to read lips or to learn how to talk after they saw the occurrence in movies or wherever else. It never was for me.\n\nNow I had another language to consider though. I had found a book on Braille after we went and ate with Miles and David. \n\nMaddie's teasing made me blush, but I had a return. You're one to talk! You looked for a reason to lean against Miles.\n\nOh, do not. At least my reason for being into someone has to do with the fact that the jokes he makes about his blind friend are freaking hilarious. How much of a nerd do you have to be to get turned on over a guy's Python coding?\n\nYou know what, fuck off. I'm not apologizing for getting into a guy's intellect. It's sexy.\n\nHer face lit up with her laughter. Okay, I won't say another word about you being horny over code so long as you never use the phrase \"a guy's intellect\" again, like he's Lews Therin Telamon trying to weave Saidin.\n\nI grinned, a giggle escaping me while we walked to the movie theater together, signing back and forth in the cool night air. I'm pretty sure that reference makes you every bit as nerdy as you're accusing me of being. The streetlights made it easy to make our way, even if I couldn't hear cars. I was used to watching for everything though, as a bonus of having been deaf for a while. I barely even remembered having to relearn how to look for things. There were a couple of friends I'd made in different groups that had been born with hearing, but lost it later than I did in life and they always brought that up, that they had been able to hear cars coming before, but then they couldn't hear where sound was coming from anymore and they had to look. Even Maddie had trouble, being deaf in one ear, but not as much so in the other. She said it was disorienting when every sound seemed like it was a disembodied source sometimes because she couldn't pinpoint where the sound waves would come from when she only had the one ear to pick most of them up.\n\nI had lost my hearing too young to remember much about that problem. I watched everything and it amazed me how much hearing people missed. I think I already mentioned that, but I'm trying to think of a good explanations. For instance, I had to spend most of my life watching people's hands, their faces and their lips. That was how I communicated and there was very little to no sound in my world. Everything was expression, so when I saw someone like David hear a voice and turn their head and carry on a conversation without having to see the person they spoke with, when he could just know where sounds were coming from... It looked like magic happening. The expression wasn't even there at all for him. How did that work? People couldn't hear as much in someone's voice as I saw on someone's face, could they? And inflections. Wouldn't that get confusing? How did the ups and downs of those translate so easily? I had forgotten a lot of what was in a person's voice over my life.\n\nI tried to have Maddie explain the concepts sometimes, but she couldn't get the idea across very well. She said that, to her, she didn't think there was as much expression in the voice as we had in our hand gestures and faces, but she also had to read lips most of the time to piece together what all she missed, since she couldn't actually hear very well. We talked about it on the way to the movie, but we also had another thought to consider for the conversation.\n\nI bet he thinks the same thing, you know. If we tried to describe what we saw and then asked him, he'd probably think we were crazy to think that the visual showed more than he could hear in a voice.\n\nHow do you think he \"sees\" the world, Kelsey? Like, do you think he makes images in his head based on the shapes he traces with his hands?\n\nFuck no. She laughed at my cursing. I don't know why, but Maddie loved seeing me curse. It was one of those things that made me wonder if everyone might have still seen me as a younger person than I was. I wasn't sure if this was an effect of being shy, sheltered, nervous, deaf, young in appearance, or a combination of all of those things. It'd be like me trying to formulate a song off of sheet music. How the hell would he make an image off of what he's never seen before?\n\nIt's so crazy to think about, though.\n\nWe approached Miles and David and I grinned when Miles spoke, watching his mouth to catch some of the words so I could get used to how he talked while Maddie translated. He says it's definitely not fair that we have a silent language and could be shit talking both of them.\n\nOh, get over yourselves, I signed back, grinning.\n\nHe laughed and nudged David, while I caught his mouth say the word, Sassy.\n\nYou're one to talk! I signed it before Maddie could even translate and he burst into laughter off the emphatic gestures alone, having seen enough of sign to get a gist at times, even if he didn't know the words. I was in rare spirits and David grinned when Maddie translated, while I wondered what this strange elation was that made its way up my abdomen and through my chest like heat and electricity mixed together.\n\nI hesitated for the next part, filled with nerves, but he couldn't see and I couldn't speak to let him hear me. He had already told us that he could hear things like my footsteps sometimes, but that it was unusually silent at times and I wondered how that must feel, to be unable to see and then to be around a muted person. Was it like I was a nonexistent area around him, like he knew I was there, but couldn't keep me in \"sight\"? I didn't know, but I knew too much about life without a sense and I didn't want him to be left in so much darkness.\n\nThat was part of the reason for what I did. The other part was that I really enjoyed his touch. I gently took his free hand, taking care to not startle him, and the butterflies fluttered their wings faster when his expression lightened with happiness and he tightened his hand around mine.\n\nI have a concept of how melody works, from things like memories and being able to feel bass vibrations, but I liked to think that the feeling of my heart in my chest in counterpoint with those butterflies in my stomach was as pretty as people said Moonlight Sonata was supposed to sound, even though Beethoven was beginning to go deaf at its creation.\n\nWe must have looked a strange group when buying movie tickets. The cashier watched us curiously, I noticed, and I pointed it out to Maddie when I noticed him watching David's cane and my signing, so that she noticed it and hid her face in my shoulder with her laughter.\n\nI know it's rude to use sign language like that, but it only seemed fair when David couldn't see some of the looks of curiosity. I hadn't even considered it too much, if I'm being honest with you. I was too preoccupied with my curiosity in what his world must have been like, in how he'd chosen his career choice, and in how he moved through a world he couldn't see. I was caught up in his facial expressions and his dark hair and his sense of humor. It might sound strange, but, well... In showing him how to sign in his hand and in liking his touch, I hadn't actually considered the fact that we were a blind person and a deaf person besides for the obvious barriers it presented. I had spent so much of my life trying to pantomime communication with people, so I didn't discriminate when someone was interested in learning my language because that was just too much of a rare occurrence. I just enjoyed it. Seeing other people look at us was the first real consideration I had of the fact.\n\nIt did frustrate me again that we couldn't communicate a little easier, though. There was a delay in getting our responses to each other when Maddie had to translate and that wasn't a judge on her at all! She was wonderful. It was just the way it was and, sometimes, I did wish I could read his lips better so I could be rid of some of the delay. The good news was that it got easier to read someone the more I was around them. I could read my mother almost every necessary word for her sentences.\n\nThat was also the first time I had cause to consider that we were swimming against two streams of communication and I remember being amused and fascinated by the thought and then just forgot about it when I grabbed my drink, signed my thanks, and took David's hand again. Later, when I tried to explain parts of our story, people would get amazed that I could just forget something like that, but, well, I can't hear what people say, so it's hard to care much about it. Besides, I had other things on my mind.\n\nLike how I had to fall quiet in order to hold his hand and it made me consider the things I really wanted to say when I had to let go of him in order to say them. There was another aspect that was tricky, too, and that was how I didn't want to pull David along like he needed guiding. I didn't want to take away the independence he had with things like cane travel because I knew all about having a sheltered life with concerned and loving parents. It took a little more concentration than one might expect for me to calm my pace to his, not that I lagged behind. I just followed along beside him, working to keep us at equal length and pacing. It made it easier that he was so much better at the rules of being in college, while I still felt like the quiet girl who asked my parents permission for everything when they were so protective. No, David knew things that Maddie did, like how college instructors wouldn't give a shit about who was lab partners. It created a kind of balance where he might need a hand to pull him out of someone's way, but I felt like he was the one to guide me anyway.",
        "One time, I did \"accidentally mess up\" though, which resulted in my shoulder brushing lightly against his. He turned his face to where he knew I was and grinned in reply, a hint of that shyness that all people have in new romance over his features.\n\nHis smile was the most beautiful thing, open and honest. He couldn't mimic facial expressions as he saw them on other people, couldn't copy things he saw in a movie. His smile was only his and it seemed like, to me at least, that made it all the more special.\n\nMiles broke the moment when he draped an arm over Maddie's shoulder and his words were simple enough that I didn't even need the translation. Aww, aren't they cute?\n\nDavid's face turned red and he blatantly gave Miles a sign that everyone knew. Fuck off..\n\nI couldn't keep the giggle entirely quiet, but I was starting to not mind it so much when it happened around David. Every time it did, he tilted his head slightly to the sound and his lips curved up in a softer smile than all his others. It made me feel cute instead of awkward, made me realize that he liked those small reminders of my audible presence at his side, and it... made me wish I could give him more of those.\n\nFor the first time in any movie I'd been to, I didn't sit beside Maddie, which may seem like a strange thing for me to note when I was already learning to live on my own. The thing was that it was a moment to make me realize how dependent I had become on her translation and presence for even the smallest things. But she had her own interest, of course, and stayed with Miles. Always before, she would sign some things she thought I needed to hear, but she didn't do that for the first time in years. At first, I felt a little bit of last childhood nerves, the kind that have lingered, the kind that I would look back on and be grateful for the opportunity to have, as they meant I had lived a safe and protected life longer than I probably should have and much longer than many others have had.\n\nBut then I curled my hand into David's and he traced my fingertips.\n\nI took a deep breath and just turned to watch on my own. Well. Kind of.\n\n--------\n\nHuman beings often have a rather bad habit of getting caught up in eloquence. This isn't a criticism, by any stretch of the imagination, as that might make me one of the worst hypocrites to criticize unnecessary abuses of vocabulary. However, I think it should be noted that simplicity can hold its own beauty. For an example, the shortest language in the world is called Toki Pona and has 123 words in it. The most obvious question in regards to this is, how can that possibly work in a useful way?\n\nWell, in short, we rely on language to communicate an idea with someone. Any combination or sequence of letters on a page, any combination of gestures or sounds or mixture of all of those, that can get this idea across is viable. If one did not have a word for the concept we know, in English, as \"zebra\", for instance, one might say \"a striped horse\" and so long as the person you are speaking with understands that concept and pictures a zebra, you have successfully gotten your point across.\n\nSince the Deaf community is something close to home for me, let me offer another thought for consideration. I am used to being in a room of people and being unable to communicate easily with them. I am used to pantomime and games of charades. However, if you took a hearing person who did not know ASL and placed them in a room full of people who only knew ASL, then they become an outsider rather than me. In either case, a linguistic barrier exists that needs to be broken for communicative purposes. In this case, would not a language like Toki Pona, or some sign equivalent, that can describe most necessary ideas be more useful than English, which can be beautifully eloquent, but nigh impossible to ever truly master?\n\n~From Dr. Archer's Essays on Common Linguistics and Unifiers\n\nI wasn't really expecting what happened during that movie. It started with the first action sequence, when the vibrations started from the bass so that I grinned excitedly. Any visual explosion of light usually resulted in the shaking of my chair. What was more, David's hand would flex in mine every now and again, but I realized it wasn't just response to whatever he heard. It was response to my small intakes of breath, to the way my hand shifted with the noise.\n\nHe stroked his fingertips to my wrist, tracing the veins there curiously and my eyes went wide, my body turning warm. I think I've described that his touch was delicate, graceful, because it was how he could \"see\" and I was reminded of the fact in a very different way than before. He traced my palm again and I held still, thinking a lot of thoughts I didn't know what to do with when they took me by surprise, things like how he read by touch and I wondered what my wrist felt like when my pulse must have been racing. I wondered what he might read in that touch, if my pulse could form words like his Braille or morse code.\n\nI watched the actors' lips move, but I wasn't really focusing on it as much as I usually did. I was distracted with David stroking the outside of my wrist, making a circle around it as if to piece the image together. I tried to keep one eye on the movie, but I also leaned closer to him... then rested my head against his shoulder. His fingers paused their tracing and my heart thudded with this curious sensation in my ears, the kind I got when riding roller coasters.\n\nHe hesitated while I waited with my breath held and then he finally seemed to make up his mind while the scenes played on. I think it was halfway through, or maybe a little over that, when he switched my hand to his right one and wrapped his left arm around my shoulder in a way that boys everywhere have once held their girl.\n\nI would always have one regret after that date, just one, and that was how I didn't make my permission more obvious sooner. I should have rested my head in the hollow of his shoulder from the start and it turns out that you don't need to see or hear to find that perfect spot where you fit next to someone. You could just feel the way your shoulder turned to match the embrace, like a puzzle piece fitting with another.\n\nThe movie continued like nothing had happened while I wondered what was happening. How did I feel so connected with someone I was so isolated from? If I lived in a different world than everyone else, a silent world, then I must have lived two worlds apart from his.... right?\n\nThat didn't feel like it was right. It didn't get any less with my resting against his shoulder, his other hand tracing my wrist while I tried to keep our PDA movie acceptable. Don't judge me too hard. I was crazy smart and all that and people had high opinions of me - sometimes I thought they were every bit as too high as people were overly protective of me, actually - but I was still a teenager.\n\nI shifted in my seat with the feelings of being close to someone and I dreaded the end of the movie when it came. We waited until the lights came up and of course we broke apart from each other while I turned to watch Maddie and Miles. Maddie translated while they talked about the movie and I grinned, but my heart was still racing, my thoughts far away from where she signed that this movie was as good as its prequel.\n\nDavid kept his face where I could see it when he answered, even though it was awkward for him and my heart fluttered harder. I felt like I should have been shivering in my seat and I watched their conversation, but I think even then I knew what I was waiting for. David was smiling. I don't know. I thought maybe it was better.\n\nThey talked while we got up and I took the chance for what I wanted as soon as we walked outside, waving at Maddie.\n\nShe watched me, tilting her head, and her smile grew with my gesture. Go on and wait?\n\nHer eyes glittered and Miles was laughing at the exchange so that I blushed. It turned out he didn't need a translation for that one and it forced me to consider that maybe my mood was a little more obvious than I would have hoped. David tilted his head to the sound, curious, and Maddie made a very obvious display of turning around and grabbing Miles to walk a little distance away.\n\nThe way the movie theater was set up, there was a side of it that was more or less isolated, especially at night. I wanted to pull David along, but I couldn't make myself do that even then, could only go at his pace while he cane walked where I led with his glow in the dark cane. He tapped the wall curiously and then turned to where he knew I was, his gaze slightly to my left.\n\nI didn't leave him in darkness too long and since I couldn't give him my voice, I gave him his other form of sight. I pressed him gently back against the wall and then pressed my body to his, while his lips parted with his shock. He wrapped his arms around me eagerly though, his right hand stroking up to tangle in my hair, while his other caressed my back. His fingertips trailed up my head and across my shoulder blade, slowly tracing a partial picture of me where I was aligned against his body.\n\nI wished he could see so I could ask his permission better, but then settled on lifting up to kiss the corner of his mouth. When he turned his head to press his lips to mine, it was enough of the permission that I had hoped for. For him and between us, it was clear as day.\n\nI tightened my hold and I wasn't totally innocent by that point. I had had kisses before, for instance, but none of them would ever or could ever compare to David's kiss, at least not to me. What other kiss could possibly come close to one with a person who used their touch to see?\n\nHe cradled my hair in the softest caress, feeling it for the texture and the thin strands. His lips shaped around mine and his tongue flicked against them in the most strangely innocent gesture, as if he couldn't resist at least trying another sense to get a more complete picture of me. But then that lick seemed to only make him want more of the pieces, so that he moved the hand at my back to my face instead, curiously tracing my cheekbones. His fingertips were feather light and I couldn't keep from pressing closer against his body. Though the gestures themselves were innocent, my heart pounded in my chest when I felt how sexually aroused he was.\n\nBecause I was too. I felt needy in this soft kind of way, felt like that heartbeat wasn't just in my chest, but had traveled between my legs and through my abdomen. I couldn't hold back a soft sound and felt my vocal chords vibrate with something that encompassed that need. At first, I felt that old embarrassment, that fear that I didn't sound like I should, but David made it impossible for me to stay scared when his kiss turned fierce at what he heard. His tongue brushed against my lips again so that I parted them and he turned tentative again, those light little licks far more hesitant when I opened. My body pulsed with that strange all consuming desire of new infatuation, in my blood stream, in my veins, in his own pulse where I held his wrist to press his fingertips in their caress, so that, for the first time in my life...\n\nI felt as if I could almost hear the exhalation that he gave me against my kiss and if I could remember enough of sound to imagine that one, I would imagine it as the emotion of desire that went with the rhythm of all those things together.\n\n--------\n\nVI. Learning To Talk\n\nDavid\n\nI have many favorite quotes in life, as most people notice rather quickly. Most of them are romantic in nature and a lot of them also come from Star Trek: The Next Generation. There is one quote that falls in both of those categories that would stick with me for a long time as a boy and it comes from a rather surprising source in the android Lieutenant Commander Data. It's a quote where he's describing friendship and here's how he defines it. \"Even among humans, friendship is sometimes less an emotional response, and more a sense of... familiarity. As I experience certain sensory input patterns, my mental pathways become accustomed to them. The input is eventually anticipated, and even missed when absent.\"\n\nThe quote became a favorite because if you look a little closer, you'll notice that he doesn't specify what kind of \"sensory input\" he means. So much of humanity's descriptors relied on sight, but I remember hearing that quote and smiling as a kid because it was one that I could easily understand. For me, that sensory input relies on the sound of a friend's voice, of the way their presence feels, of how their gait sounds as they walk. When I met Kelsey Archer, I had cause to consider something else.\n\nMaybe there was something more to that quote. Maybe if you had to focus more to notice those inputs, they became more and more expected and more easily missed. After all, there is another famous quote that says \"absence makes the heart grow fonder\". Does that quote still apply if the person isn't really absent, but so much of the senses I relied on were muted? To me, I think that all of these thoughts applied. Every touch from someone who was so quiet became a treasured motion and every expected touch became something I would most certainly miss when I wasn't allowed it.\n\n~David Layton, from The Sightless Memoirs\n\n\"Tell me what she's like, please, Miles!\" I begged it of him when we got home.\n\nMiles laughed, but it was a gentle laugh and I briefly had the thought that his own relationship seemed to make him a little different, but it wasn't a bad thing. \"David, it doesn't matter. What does she feel like to you, mate? You told me you knew you weren't gay because girls were different.\"\n\n\"They are! And she feels amazing, soft and sweet, but tell me what other people see, too, please!\" Of course, I didn't go into details, like how her lip gloss tasted like cinnamon and her hair smelled even better when I was that close to her. And that sound she had made when I licked her lips... It was this softest little whimper of need, made all the sweeter by the fact that sound from her was so much more rare than it was from others.\n\n\"What does it matter what other people see?\"\n\n\"Because I want to know more about her! Miles, you don't get it. Do you remember those fairy tales that have fae that are shy, the ones where they'll appear to someone, but then quickly disappear when there's too much noise? Or how sometimes they're so shy they'll scare themselves with their own voices? That's what it's like being around her! Other people talk all around us and it's like she disappears... but not really!\"\n\nHe sighed and I heard him scratch his hair. \"I get it. Okay, I don't get it and I can't empathize, but I get the concept of what you're saying anyway. But try to get what I'm saying. I won't be able to tell you the things that matter to you, mate. Like, you know how you know what to look for in the different kinds of buttons you use for your shirt colors? You know how to feel for a point of a triangle or something, right? I'm not going to be able to tell you anything useful. You know how long her hair is. You know she's smaller and slighter. You know she's quiet and too quiet sometimes. You know she's bloody brilliant. Sometimes it's scary being around her and Maddie said she often has to write thoughts to her instead of signing when she doesn't have adequate enough words. I don't know how it'll make any difference or give you anything of value for me to tell you what color her hair is.\"\n\n\"Because it does! Did you know that books use colors all the time to describe an emotion? All the time, Miles! Black hats are the bad guys in westerns. Blue means calm. Green is what grass feels like and it's growth. White is how snow feels. Colors do have meaning!\"\n\n\"Okay, okay. I'll tell you, but... I think it's going to make you nervous in some ways. First, can I tell you what you look like?\"\n\nI tilted my head. Do you know, in all the years we'd been friends, we'd never talked about this? I was just David and he was Miles. I hadn't really considered what I might look like to other people. \"Okay, I guess.\"\n\n\"Do you remember that show you loved, White Collar?\" I nodded, grinning. \"Okay, remember the main character? Well, you look like him, mate.\"\n\nWell, now I felt shy. That guy was pretty cool. He had this quote in one episode I loved about how murder was indelicate and distasteful. \"Wait, really? Is that a good thing?\"\n\n\"Yeah, it's definitely a good thing, David. Did you never wonder why Kacey Camden asked you to the dance that one year? You looked great then, mate. I mean sometimes I think I'd go gay for you now that you grew out of of some of the awkwardness, if you didn't hate the way I sound.\"\n\n\"Goddammit, I'm going to hear about that for years. Okay, but what's that got to do with her?\"\n\n\"She's gorgeous.\" I grinned, unable to keep from it. \"She's got this blonde storybook hair and her eyes are this really light blue, like swimming pool water blue. She's smaller and cute and shy.\"\n\nI sat down in our chair, feeling all those butterflies all over again. \"I knew it. Wait, why wouldn't you tell me that?\"\n\nHe hesitated, sitting across from me. \"I don't know, man. Some guys get all jealous over gorgeous girls and shit, you know? I know you're not like that, but it didn't seem like something to bother you with, I guess. You're cute, she's cute. But I also don't mean to give you the impression that she's shallow over you or anything.\"\n\nI didn't even think about all that. It just didn't cross my mind actually but, like I said, I had read books and I listened to media. So I knew descriptions of the trope where a person would see someone else looking at their loved one and feel jealous about it, but that didn't register to me. I think part of it might have been the obvious reasons that I wouldn't see it when someone else would look at her like that. My \"sight\" was just different.\n\nBut I think another reason, one that was far deeper and more emotion based, was one I knew without doubt. I considered how she patiently taught me how to spell my name in sign language by cleverly letting me feel the letters. I thought about how she so thoughtfully didn't try to guide me through a movie theater, how she pressed against me in our embrace so that I could somehow \"see\" her when I couldn't have her voice. See, I didn't need Miles to tell me that she wasn't shallow over me and I didn't need anyone clarifying the fact that I was pretty sure I didn't have to worry about jealousy with her.\n\nMuch like I didn't need to see the color pink to understand that it went with love and infatuation, I could just tell. It was in the way her lips felt when she kissed, in the way she held me tighter with the want to be closer, the way she pressed my hand to her cheek to encourage me to feel more of her. Those touches were too honest, too open, too attentive.\n\nNo, I didn't worry about all the rest. I think another reason for this was that the two of us had too many more prominent, obvious problems to consider with each other. Things like jealousy just fell to the wayside when we had to expend our creativity in figuring out ways to talk with each other.\n\n--------\n\nLater on, my collegiate life would take a strange turn from meeting Kelsey Archer, but this was a mutual life change for both of us. I have a fondness for recollection and seeing the winding paths that happened in my life. I had started with the goal to have a career in IT, for instance. This goal would refine itself and end up with a different manifestation than I would have ever expected and a large part of that has to do with the fact that Dr. Archer and I had a relationship that required a great deal of creativity.\n\nCarnegie Mellon University's Randy Pausch would be, due to his work in Virtual Reality, someone I ended up looking into when I was growing up. He had a lecture before he died entitled \"The Last Lecture\" and in it, he discusses a project entitled Alice that teaches kids how to program by giving them the feel of creating a game instead. He summarizes this best by saying, \"The best way to teach somebody something is to have them think they're learning something else.\"",
        "I can speak very well to this effectiveness, especially when matters of the heart are involved. I thought I was just learning to speak with someone incredibly special to me. Both of us would go on to learn a great deal more than that and then we would go on to use that knowledge for our own elaborate creations. Of course, that being said, it was a hilarious effect at the beginning where two intellectual dreamers had problems with some of the most basic solutions that were right in front of our faces.\n\n~David Layton, from The Sightless Memoirs\n\nWith every passing lab, my obsession with that strange, wonderful apparition only grew. Every moment of too much quiet where I had to have faith she was still there only served to make me more intrigued. I've heard books tell of puppy love all the time and I'd dated girls before, kissed them sometimes, and felt emotions. Of course I did, but there were none I would say gave me actual infatuation. Crushes, maybe, and that description of puppy love, but not the more serious emotions.\n\nI was getting more and more infatuated. During some of the labs, she would get creative and make raised cardboard cutout pieces so that I could feel concepts of sight when I couldn't use the microscope. She used hole punches sometimes to create dotted effects for instance, the bought paint pens and let the designs dry to create a kind of Braille effect when the dried paint had a different texture. Of course, we learned she couldn't be overly elaborate with that technique because it wasn't always an obvious feeling. But Kelsey didn't let that stop her. She kept trying with me, finding ways to create images. \n\nWe went out to eat with Miles and Maddie every day we had a lab together. Even better, during that next lab after our kiss, she traded our handshake greeting for a hug and I got to feel her hair against my cheek, like a sheet of silk that parted into strands under my touch. My favorite part was our routines. You see, the more we hung out together, the more it started to feel... Well, I know I was involved and this will sound like a romantic thought, but we felt like two halves that fit. She could see and I could hear. She would casually shift me around a backpack sometimes and then pull my chair out for me to feel and I would give her a copy of any notes I took on my laptop, so she didn't have to wonder if her lip reading was enough.\n\nBut it took an embarrassing amount of dates before Kelsey realized something that made me feel like an idiot. Of course, she would say that it made her feel the same thing, but even so.\n\nIt was when we were doing animal kingdoms and I loved animal kingdoms. Little visual, all descriptor. My zone. I listened my way through the list of them and went to a word document to take my own notes when I heard an excited sound across from me. I looked up, grinning and tilting my head, because it was so rare that she made sound that wasn't things like her footsteps. \"What's up?\" The cool thing about Kelsey was that I didn't even have to whisper. We had started to hang out more and apparently it got easier and easier for her to understand people the more she saw how they shaped words, so I had learned that if I kept my sentences basic and shaped the words clearly where she could see it, she could get what I said a lot of the time.\n\nI heard her tap the laptop and then she made a more frustrated sound, still quiet, but Maddie whispered what she said while Kelsey shifted over to sit next to me instead of across from me. I tried to listen to see if we were disturbing anyone, but Maddie got my attention. \"She asked if you would open another word document and show her how to make it read to you?\"\n\nI froze. It was so bloody easy and it was right there in front of me every damn day! I keystroked open another document, then turned the laptop so that Kelsey could type, then showed her what to press to make it read through my headset. The voice read her message in my ear. \"Testing.\"\n\nI grinned in excitement and heard Miles whisper an echo of my thoughts beside me, \"How the hell did none of us manage to think of that? He uses it every damn day. It's basically the same way they already bloody text each other, but right between them instead!\"\n\nI tried to keep my laughter down, but was also too excited when I pressed Ctrl+A, then backspaced to delete it to let her know the message ended. \"It works.\"\n\nShe followed my keystroke lead and then backspaced before answering, \"Now we don't have to worry about certain nosy other parties who don't recognize a good movie.\"\n\nI snickered, deleted it when it ended, then answered, \"Most judgmental translators ever, really.\"\n\nShe made that soft, shy sound from when she laughed, typing back. \"Can you show or tell me some of the keystroke commands sometime? It's so cool watching you do it.\"\n\nThat feeling of being more like Matt Murdock hit me stronger than ever and I felt my face turn hot with the pleasure it gave me to have the admiration come from her. It was really hard to focus enough to study with her as my partner, but we went to the animal kingdoms page and kept up a separate document where she could make her own suggestions or interjections.\n\nBefore that, we had exchanged numbers and we had added each other on Facebook, but I had to use speech to text for those things and they were distance platforms anyway. What I mean by that is if we were having a conversation with Maddie and Miles, it was easier to have things translated than to have her text it to me, then have my phone read it to me. Either way was a translation, right? So we used our friends, since it felt more inclusive to them and took less time for everyone.\n\nThen, on my laptop, she was the one who realized that we could, actually, have a silent form of communication. Well, mostly silent in the sense that my headphones kept it just between us. If we were together, just the two of us... it was like having a Facebook or letter conversation with anyone.\n\nThree days later, Kelsey somehow managed to get Miles and Maddie to go on a date, so that she could come over to the apartment I shared with Miles, texting me that she was on her way so that I had my laptop set up in my room.\n\n--------\n\nVII. \"Linguistics\"\n\nKelsey\n\nI have been asked before what I think the \"neatest\" language in the world is. I can't give you an answer to that one, but I can offer you what I think is the neatest written alphabet. That is the Korean Hangul.\n\nThis may be an analogy that some will disagree with, but I love to think of Hangul as a language of Lego pieces. The idea is this. You have a one-to-one ratio of sounds with the language and whatever sounds you make, you piece together the corresponding letters into \"syllable blocks\". You stack the sounds together, in a sense. Of course, there are organized rules to this, but this is not a course on writing Hangul and this is all just personal opinion. Visually, it is just the writing system that I have had the most joy with. Forgive me for making a language sound like a simple child's game, but I have my faults, too. I can only hope you don't take it to mean disrespect to the language.\n\nAs if that wasn't cool enough, though, it is also something called a featural writing system. What that means is that the letters are shaped into a visual representation of how the sound is made with the mouth. For instance, a \"t\" sound is made by touching the tongue to the roof of your mouth and the symbol is shaped to look like that. You might be able to understand why I would love that type of language so very much.\n\n~Dr. Archer, from a Linguistics Lecture Hall\n\nI got that heated feeling again when he led me to his room. We had decided on that place to talk with each other, but the logic had honestly been so we could stretch out easier and have the laptop between us. It was only when he sat down closer to the wall, propping up against his fluffy pillow, while I crawled beside him, that it occurred to me where we were and what we were doing. It was only after I pressed my shoulder to his so that he could have a sighting on where I was that I realized how close that put me to him. When one party relies on touch to know the other exists, things get really confusing as a teenager. I knew the feelings of wild hormones well enough, but this was... different. It was deeper, stranger. It took those preexisting hormones and transformed them into something I thought was probably unique.\n\nI stopped and took his hand when he reached for his laptop, keeping in mind where it was so I didn't do anything to it, and cupped the back of his neck to draw his head down to me. He didn't reach for the laptop again, something that made me smile against his kiss. He pulled me closer instead while I felt that strange array of feelings that I thought of as a song. The second time made me realize all the more parts of it too, things I had somehow missed the first round, like how his breath felt against my own periodic breaths. Before, our kiss had been close, but it hadn't been so close that he'd needed to take off his dark glasses. The second time, on the other hand, he paused to lift them up on his head and my heart fluttered all the more wildly. He drew me closer so that I leaned across him, so that I couldn't keep from smiling against his lips and I was so much more comfortable with him that I only felt mildly embarrassed when I couldn't keep a sound escaping me.\n\nIt made me feel less embarrassed when he drew me even closer because of it. He brushed his tongue against mine again and this time, I hesitated... and then got more bold than before and opened my mouth in a way that wasn't innocent anymore. He didn't take advantage in any violent way, was instead tentative at first again when he brushed my tongue with his own.\n\nAnd then he wasn't tentative anymore when he realized what we both wanted. He deepened the kiss so that I suddenly understood how some people considered kissing so erotic. I kept my eyes closed, forcing myself to minimal sight since he was forced to minimal sound with me. Somehow, it felt better for me to have us both on the same sensory pathway, to have us both forced to touch and taste and smell instead and oh, there was enough of all three of those. I didn't know what cologne David wore, but I loved it. It wasn't too much and it wasn't too strong. It was just perfect and the taste of him was sensual ecstasy. Every touch he gave me was with that grace that so fascinated me and that included how he kissed. God, I didn't expect how much it would make me... ache. But I did ache. I shifted further in his lap, carefully keeping my feet to the side so I didn't hurt anything still, but fixed myself so that I was sitting up.\n\nThe action made me feel his own arousal again, hard against me, and I cheated, opening my eyes to see him lift his head, where he let it fall back against his headboard with his pleasure. His lips were parted and his striking eyes were open without the dark glasses to hide them. I felt a little guilty for a moment that I was doing this instead of talking and hoped he didn't think these actions shallow when we finally had our own quiet way of speech to try out, one that felt closer than when we texted.\n\nBut I also couldn't keep from grasping his face again and pressing our lips back together, twisting on his lap so that he gently bit my lower lip and then fed me his tongue again. Why did this make me hurt? Because it did. I had known arousal, like anyone, and I had gotten myself off before in self discovery, but why did doing this specifically make me focus that strange heavy pain on him? Because every feeling was most definitely focused on him. I didn't want to get myself off like I knew I could, but I wasn't even sure that I specifically wanted him to do that.\n\nI just wanted more of him in general, in any way I could get it. The result was that my kiss turned more fierce, but so did his. I couldn't keep from shifting in arousal and when I opened my eyes to see again, his face was expressive with his pleasure. He stroked his hands down my sides, then across to my stomach, gently tickling sensitive spots so that I smiled against his lips. I got excited and nervous and shy all at once when his hand gently stroked up a little... but he didn't cross that line. Somehow, in just his touch and his kiss, he made it clear that he wished he could, but it felt more like it was because his picture of me was incomplete and he wanted to touch everywhere. Well, okay, it was also pretty damn clear that he wanted to do it for other reasons too.\n\nI hesitated again, wondering when I was going to stop the both of us, wondering if he would stop either of us, but then I lightly covered his hand with mine and lifted his fingers to cover my breast over my shirt and bra. And wherever either of us was going to stop ourselves, it wasn't there.\n\nHe froze for a moment, while I watched him, staring down into his sightless eyes, but I sometimes had cause to wonder if David didn't see more in the world than anyone else. His palm was that feather light touch again and his other hand caressed around my side where he already knew from other holds. He trailed his fingers across the swell of one breast and then felt the other, then paused to trace up to my neck so he could touch my locket, continuing up to my chin, my lips. The circuit continued back down, eagerly, to cup one globe in a hand that was so warm, with a sensation that I could oh, so barely feel through my bra over my nipple... My eyes fluttered closed with the pleasure before I snapped them back open, unwilling to miss anything his expression gave me.\n\nIt was a good thing I did because he mouthed a sentence, clear enough to easily read. You're so beautiful.\n\nI blushed, but nuzzled him in a way I hoped he couldn't mistake for anything but joy. It seemed like it worked when he grinned, stroking over my breasts again to gently cup and hesitantly squeeze the other one. I couldn't stop the sound when he did so, blushing at the feeling of doing it, but David's face turned desirous at whatever it sounded like. He drew me back for more of his kiss and squeezed again, gently caressing at the end. His breaths turned sporadic against my lips, something that made my heart race all the faster and he stroked his palm to where it pounded, lips curving up against mine.\n\nEven at that time, I would wonder if I wasn't caught up in no small amount of lust and attraction and flirtatious affection. It was just a rational thought for me. Of course, later I would be able to tell you the truth. I loved him and, if I hadn't loved him from the moment I first laid eyes on him with that Braille locket, then I definitely felt love for him by that point.\n\n--------\n\nDavid and I would get asked a wide variety of questions together, as you might expect. A few of them would just become predictable parts of conversation. For instance, didn't it scare you when you first started dating?\n\nThe answer is, well, mostly no. If you ask most members of the Deaf community, they hate the word \"disability\". We're not disabled. We're just deaf and we talk differently. Likewise, David had been blind since birth and it was just a part of his life. So, scared? Not exactly. However, we definitely noticed these facts, but they just seemed like parts of our life, for the most part. I think we both had the occasional rare thought that we were a few steps apart from each other by definition of the sensory world.\n\nBut when it was just the two of us, he was David and I was Kelsey. We would both talk and laugh together often at the thought that the people around us seemed to have more problems with it than we did. For us, we simply had a communication barrier and we wanted to not have one, so we worked to figure out how to get rid of it together.\n\n~Kelsey Archer, from The Sightless Memoirs\n\nWe only stopped our playful cuddling, make out, feeling out session when I finally took a moment to look at my phone and jolted in David's lap because it'd been an hour of our time together. I frantically curled up at his side and carefully sat his laptop in his hands, so that he grinned and pulled up our word document. You might wonder why we would bother with that setup when we could have used our texting while alone. The answer is easy.\n\nTexting felt too much like talking from a distance between us. Having his laptop and cuddling as close as we could while still typing was like having a close conversation. It was cozier and better. I don't know how to describe some of these things besides to say that it was the difference between having a conversation while across the room from each other and talking intimately. David fixed his dark glasses and his earbuds, cutely only using one headphone out of force of habit, so that I had to grin at the sight when I couldn't give him sound for him to worry about hearing. I typed in our word document first.\n\nIt's \u202a5:30\u202c now!\n\nHe laughed and I loved getting to feel his laugh. His sides tightened up when he did and his smile turned wider and more open with it. Color me incredibly disappointed.\n\nI giggled and pressed my palm to his shoulder. You know what I mean. Can I ask you questions?\n\nSo long as I can ask them too.\n\nOkay, first one. What's your favorite game to play?\n\nHis face lit up. Chess.\n\nI couldn't help but have a thousand more questions at that answer. Wait! How do you play it? And can I play it with you somehow?\n\nHis brow furrowed thoughtfully. Well, the way I play it is with designations. So the squares going up are 1 through 8 and across is A through H. We'd just have to be able to communicate where we're placing pieces and we could theoretically use any board. I don't really need to be able to feel the squares anymore.\n\nI blinked, thinking that through for him when he couldn't see the game. God, that was brilliant. It was also cool and it made me wonder. So, theoretically, if I signed designations into your hand and you either mouthed the designations so I could see it or signed them back, then we wouldn't even need a board?\n\nHis expression was excited, but then turned thoughtful again. Yeah, but I think you're forgetting that we'd still need the pieces, so you could let me feel which piece you were moving. We couldn't just say a square. We'd have to say 'Knight to D3'.\n\nBlasts. I'd gotten so excited by the thought that it seemed like a rather crucial, obvious oversight. So I could just touch a pawn to your palm and then sign 'E4' and...\n\nHe grinned and nodded eagerly. Teach me the letters! I like your touch and then we can try to play.\n\nI couldn't keep from laughing happily at the thought of having his hands feel mine to learn to speak and his face lit up all the more to the sound. I slowly, but surely, taught him the alphabet in sign, while we periodically messaged and wondered...\n\nWhat other games could we improvise and make work between us? If chess worked, why wouldn't others? We lost track of time where I learned the basics of chess without a board and he learned the signs for designations.\n\nBesides that, a few other things happened with our strange first date together, other than the obvious of getting more physically intimate. For one thing, Miles and Maddie got back to the apartment and I had a cue that someone knocked on the door when David looked up and gestured, pantomiming knocking. We had started to figure each other out before that date, but that was a moment that made me realize quite how comfortable we were. I went and opened the door while he twisted to sit over the bed and grabbed his white cane. Miles shifted from foot to foot and Maddie waved over his shoulder, then rolled her eyes at me so I grinned and got the gist.\n\nI stood back so he could see that we were, in fact, alive and well, piecing his sentence together when he spoke and that made me realize something else."
    ],
    "authorname": "Payne_Hall",
    "tags": [
        "blind",
        "deaf"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/sightless-soundless-speechless"
}