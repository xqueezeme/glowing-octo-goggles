{
    "title": "Secrets of Apple Grove Ch. 02",
    "pages": [
        "The chronological order of my stories is as follows:\n\nTodd & Melina series, Interludes 1-5, Sperm Wars series, Russian Roulette series, Case of the Murdered Lovers series, Case of the Murdered Chessplayer series, The Swap series, Interludes 6-10, The Murdered Football Player Series, Case of the Black Widow series, Teresa's Christmas Story, The Case of the Black Badge series, A Case of Revenge series, Teresa's Summer Race, The Trilogy series, Dark Side Of The Force series, Caught In The Act series, The Phyllis Files 1-2, Case of the Murdered Bride series, The Credit Card Caper series, The Phyllis Files 3, The Hot Wives Investment Club series, Seriously Inconvenienced series, Case of the Paper Trail series, Christmas Mystery Theater, The Porno Set Mystery series, The Medical Murder Mystery series, The Eightfold Fence series, The Phyllis Files 4, Pale Morning Light series, Silverfish series, Cold As Ice series.\n\nSecrets of Apple Grove, Ch. 01-02\n\nFeedback and constructive criticism is very much appreciated, and I encourage feedback for ideas.\n\nThis story contains graphic scenes, language and actions that might be extremely offensive to some people. These scenes, words and actions are used only for the literary purposes of this story. The author does not condone murder, racial language, violence, rape or violence against women, and any depictions of any of these in this story should not be construed as acceptance of the above.\n\n*****\n\nPart 7 - Mom, Apple Pie, and Crime \n\nSaturday morning, April 11th. I drove into the small town where I grew up. The streets didn't seem to be as wide, the playgrounds were smaller, the town itself seeming to have shrunk in size from what I remembered.\n\nBut most of all was what was in the air, the feeling... as a child, there were carefree days and limitless possibilities, even in a small town like this. But now, there was a sense of tension, of suppression... and the distinct air that this town was slowly dying.\n\nApple Grove had been a railroad junction as well as the center of the County, so it had become the County Seat. Back in the days of the late 19th Century that Laura Ingalls Wilder had written about, Apple Grove was a place where farmers brought their goods to be transported by rail to the State and the Nation. Now, BigAgraFoods, which was headquartered in my current Town, ran most of the farms using machinery instead of people. There were few jobs, almost no industry, and the young people did as I had done: they left for other places.\n\n\"Let's go have breakfast at the diner.\" Phyllis said. \"Sheriff Greenwood is meeting us there.\" Indeed, when we parked and went inside, the former sheriff already had the back table commandeered for us. But it took a while getting there.\n\nI was wearing my police uniform of light blue short-sleeve shirt, dark blue pants with black piping down the side, dark blue soft shoulderboards with my rank. But I was recognized as a prodigal son.\n\n\"Donny? Is that you?\" a redheaded man gasped as he stood up. His name was Marty Robbins, and he was wearing a local EMT uniform like the two other men at his table. His hair was darker red than mine, more like orange. He had been in my high school class. When he was in the 5th grade, he had said he was going to become a paramedic... and he had.\n\n\"Hi Marty.\" I said, shaking his hand. \"It's been a long, long time... Paramedic.\" Marty got it, that I had remembered his childhood prediction. He introduced me to his fellow EMTs, one of whom I recognized as having worked with the Town & County EMS before.\n\n\"Charlie Strauss!\" I said. \"You're up here now?\"\n\n\"Yes sir, Commander.\" said Strauss. \"I was able to find this job. Had to get out of there with all that going on with your Fire Department.\"\n\n\"I hear ya.\" I said. \"We need to talk about that before I leave.\"\n\n\"So, Donny, you did become a cop.\" Marty said. \"We'd heard you'd gone into the military.\"\n\n\"I did, in the Reserve.\" I said. \"Did some private business, then this job came up, and it's worked out great.\"\n\nBy then, several other people had come around, some who I remembered, some who had known my parents when I was pretty young. I endured a lot of introductions, then made my way to the back table to join my mother and Sheriff Greenwood.\n\n\"Good to see you, Donny.\" said Greenwood. He was getting some weight on, and looked like the quintessential small town Sheriff. He reminded me a little bit of that Sheriff in Coltrane County that had been murdered (Author's note: see The Case of the Murdered Football Player), but was a damn sight more honest and trustworthy.\n\n\"I'm glad your mom was able to get you up here.\" said Greenwood. \"We've heard of some of the things you've accomplished in that University town down there, and I know from your mom that you like interesting, even strange cases. We might have something for you.\"\n\n\"Oh, what's that?\" I asked.\n\n\"The first thing is about your father's legal papers.\" said Greenwood. \"I still have some friends in the Courthouse, and they were the first to alert me to the situation. I contacted your father's old law firm, and they said they were looking into a data breach as well. I suggested they call the Apple Grove Police about it, and they did. At that point, Sheriff Spaulding gave me a call and made a point to tell me to mind my own business, that I was not Sheriff anymore and that he was, and he'd handle things his way and in his own good time.\"\n\n\"I take it you and Spaulding don't get along.\" I said.\n\n\"He ran against me for Sheriff two years ago, and he won.\" said Greenwood. \"You know that Court case in your State about that guy who lost a rigged race?\"\n\n\"John Cummings?\" I said. \"Right in my own County. His own Party threw him to the dogs.\"\n\n\"My case was something like that.\" said Greenwood. \"Voting looked irregular. I asked the State to come in to do a recount, but Spaulding went to court and the judge blocked it. Judge's name is Guilford, and he's backed by several wealthy people in the county, including the Jacksons.\"\n\n\"Doug and Roberta Jackson?\" I asked.\n\n\"They're the ones.\" said Greenwood. \"Do you know them?\"\n\n\"I've met them.\" I said. \"Their son was murdered in my County.\"\n\n\"Oh, that's right.\" said Greenwood, and I glanced at my mom. I could tell Greenwood knew more than he was letting on, and indeed was playing a bit dumb. My mom's eyes were twinkling as she looked back at me. Greenwood said: \"Well, the Republican Party sat by with their thumb up their ass while Spaulding's people were actively subverting us. They totally shut it down, wouldn't do a recount. Some citizens started up a recall effort, seeing what was going on, but that was squelched too... and in some cases by intimidation with threats of physical violence.\"\n\n\"Good grief.\" I said. \"Not the town I grew up in, for sure.\"\n\n\"Absolutely. So yes,\" continued Greenwood, \"there's bad blood between me and Spaulding. But until this thing happened about your father's law firm files, there hadn't been any real issues crop up between us. The town is not his jurisdiction, either, so I don't know why he called me except for pure intimidation.\"\n\n\"Okay, then.\" I said. \"So I need to talk to the law firm guy or guys. Mom, what are you going to do today?\"\n\n\"Why, I'm going to check up on some old friends.\" said Phyllis. \"Just old ladies gossiping, nothing you'd be interested in, I'm sure.\" I just looked at Sheriff Greenwood, who looked back at me, and we both started chuckling.\n\n* * * * * * * * * * * * * * * *\n\n\"Hi, Donald.\" said the youngish lawyer, who was about my age, as he let me into the otherwise locked doors of Grove & Partners law firm. They had bought out Troy & Partners, my dad's firm, some years before. \"Thank you for coming. I understand you have some experience in cyber-security.\"\n\n\"Yes, Mike, I do.\" I said. Mike G. Todd was the junior partner of the firm, and as such was the most tech-savvy.\n\n\"Here, let me show you what happened.\" He brought up some information from the firm's servers. \"This breach here. You can see that this access looks like it's internal, but it's none of our guys.\"\n\n\"How did you find this?\" I asked as I began connecting my laptop to the law firm's computer and running diagnostic tests.\n\n\"I was asked to look for it, by Sheriff... er, former Sheriff Greenwood.\" said Mike. \"The files affected all had to do with your father's work with a charity, Victory Christian Ministries.\"\n\n\"Hmm, never heard of 'em.\" I said. \"Were the files corrupted?\"\n\n\"Yes, they were.\" Mike said. \"And before you ask, the backups were destroyed, as well.\"\n\n\"So no way to get to whatever is on them.\" I said. \"Unless there's another backup somewhere.\"\n\n\"That's correct.\" said Mike. \"I tried to see if your father had left any paper files, which we have in secure storage at the Courthouse. And when I went to see, that's when it started coming out that they'd been hacked too, but couldn't find any real damage or losses. And the night after I went over there, someone tried to break into the storage areas. Police evidence is secured there, so the perp didn't succeed.\"\n\nMy diagnostic was finished. What the lawyer didn't know is that the program also copied all the information I could get from the law firm's computers. Certainly not all of their files, but the corrupted ones as well as some others. I also left a couple of backdoor access places, disguised as anti-virus software that really would stop the perps from accessing the computers again.\n\n\"Okay,\" I said, \"it looks like some standard but very sophisticated data-mining viruses were introduced into your computer. I'm placing some anti-virus protocols on your servers, and you'll be alerted if these bad boys try to access your stuff again.\"\n\n\"What the hell is going on?\"\n\nThe voice was that of an older man, dressed in an expensive suit. He was tall, lean, with a full head of now-gray hair. I recognized him as Hamilton Phillips, whose law firm had bought out my father's. Phillips was the Senior Partner of Grove & Partners, P.C.\n\n\"Mr. Phillips!\" said the younger lawyer, fear creeping into his voice. \"I was just asking Don Troy to look into our computer breach. He's a specialist in that area.\"\n\n\"Oh really?\" snarled Phillips as he observed me in my police uniform. \"He looks like a cop to me. Do you have a warrant to be accessing our computers, Mr. Troy?\"\n\n\"No, and I don't need one.\" I said as I put my laptop away in its bag. \"I'm Douglass Troy's son, by the way.\"\n\n\"I know who you are, boy.\" said Phillips. \"And I don't care. You're not welcome here, ever. Mr. Todd, we will speak of this later, but for now, get that man out of here. Immediately.\"\n\n\"Yes sir--\" Mike started, but I interrupted as I stood up.\n\n\"Mr. Phillips,\" I said, my voice commanding but with attempts to keep it gentle, \"why don't you tell me what you're afraid of, and maybe I can help you. Not only with this security breach, but with whoever is obviously pressuring you.\"\n\nI had already seen the fear in Phillips' eyes, and now I could clearly see it as his agitated features contorted into a mask of fear and hideous hatred.\n\n\"Get out!\" he gasped. \"Get the fuck out, you son of a bitch!\"\n\n\"Don't talk about my mother like that,\" I said, \"or whoever's threatening you won't be the only one whipping your ass. Now I'm offering to help you, Mr. Phillips. I think you know who and what I am, and you were a friend of my father's. But once I leave, you're on your own.\"\n\nPhillips seemed to consider the words, but for only a moment. \"Why are you still here? Get out. Get out of this county. Don't come back. And leave that laptop here.\"\n\nI put the laptop bag's strap over my left shoulder, giving me easy access to my gun. I began walking out when Phillips stood in front of me.\n\n\"I said leave the laptop.\" he said menacingly. \"You're not leaving without it.\"\n\nI put my hand on my gun, having flicked open the strap holding it in place. \"Try and stop me.\" I said quietly, my eyes boring into his. His eyes saw that I wasn't bluffing. He relented, his face red with anger. I quickly walked out of there.\n\n* * * * * * * * * * * * * * * *\n\nPhyllis sat on the porch in one of the rocking chairs as the other woman talked. She was Old Mrs. Starnes, and she had lived in this house since the day she was born. It was a two-story house with tall ceilings and a big porch, built in the late 1800s when the town was first started. Mrs. Starnes was the grandmother of Kip Starnes, whose name had come up in the Murdered Football Player case.\n\n\"Yes, Phyllis, this town is dying.\" Mrs. Starnes said. \"And you're right that something else is going on around here. There is a sense of depression here, and that's because of the oppression that is happening.\"\n\n\"Aftermath of the Sheriff election?\" Phyllis asked.\n\n\"Oh, no, that was actually only a small part of it.\" said Mrs. Starnes. \"After your husband Douglass died and Phillips took over the firm, subtle changes started happening. The bank hired a new president, an outside guy from North Carolina. He and Phillips are friends. I heard rumors that the Blacks in Providence Springs can't get loans from this bank anymore.\"\n\nProvidence Springs was a farm town west of Apple Grove, about halfway to the western county line, and it was where nearly all of the Blacks in the county lived until Rome got the highway and grew enough to provide jobs.\n\n\"Oh my.\" said Phyllis. \"And the rest of the county? Rome?\"\n\n\"Rome has all the processing plants now, the ones that in the time we were children were here in Apple Grove. They have access to transportation and shipping there.\" said Mrs. Starnes. \"A lot of illegal immigrants there, working the packing plants and the hotels as janitors and the like. Almost no one ever comes over from Rome to Apple Grove; if they do, the Sheriff's deputies stop them for any sort of reason. I'm shocked you and your son weren't pulled over when you came in.\"\n\n\"What does the Police Chief have to say about all of this?\" Phyllis asked. \"What was his name again?...\"\n\n\"Sims. Larry Sims.\" said Mrs. Starnes. \"He's a year away from his pension. Several of us believe that he was quietly told that if he knew where his bread was buttered, he'd keep his mouth shut and he'd be allowed to retire with his pension. If he makes waves, he'll be out on the street with nothing.\"\n\nMrs. Starnes continued: \"As an example: Sims and Greenwood were very good friends, not to mention colleagues that cooperated very well. When that Sheriff election was contested, Chief Sims stood by and did nothing. Greenwood begged Sims to help, but Sims just wouldn't take a public stand. They're no longer friends, and I hear that Sims just stays in his office and goes through the motions. He started drinking, too, but not all that heavily. Not enough to hamper doing his job, but enough for some people to notice.\"\n\n\"Oh my.\" Phyllis said again. \"Any idea what... or who... is behind it all?\"\n\n\"No, not at all.\" said Mrs. Starnes. \"Oh my, look at that.\" She was pointing to the Sheriff Department car that was coming down the street. The deputy slowed as he passed the house, peering hard at the two women. Phyllis felt the tension, both in the deputy and in Mrs. Starnes.\n\n\"Phyllis, it's been nice seeing you again.\" said Mrs. Starnes, concluding their chat. \"But I think you probably should go find your son now. And may I suggest you have him or someone you trust with you at all times.\"\n\nMeanwhile, former Sheriff Greenwood was sitting in his personal vehicle, waiting for Phyllis to end her chat with Mrs. Starnes. He was parked off the road, hidden by some bushes, and he'd seen the Sheriff car driving down the street and knew what it meant. He was about to exit the car and go to Phyllis when someone walked up to his car.\n\n\"Hello, Sheriff.\" said the someone.\n\n\"Well, my goodness, it's you.\" said Greenwood. \"What in the world brings you here?\"\n\n* * * * * * * * * * * * * * * *\n\nI entered the Apple Grove Police Department building, which was next to the Fire Department and its two engines, on the west side of Courthouse Square. The offices were small and old, and the entire Apple Grove P.D.'s compliment of twelve officers barely matched the number of Detectives in my two divisions.\n\nOne reason for that was the way this State allowed counties to compose themselves, which was different than my current State's structure. In my State, there were town police and county police and/or Sheriff Departments, and of course my own County was merged with my Town into one unified force. In Apple Grove's county, the town had police jurisdiction in a radius of several miles outside the town limits, and outside of that was the Sheriff Department's responsibility. The Rome Police Force had a significant radius while Apple Grove, Providence Springs to the west, and the town of Springer to the northwest had smaller radii.\n\n\"Is Lieutenant Wisocky here?\" I asked the receptionist/clerk at the front desk. She buzzed the office of the Media Relations Officer, not knowing that Media Relations was not the reason I'd asked for Lieutenant Wisocky.\n\n\"Donny? Donny Troy?\" exclaimed the dark haired woman that appeared in the hallway. \"I can't believe it!\" She came up and gave me a warm hug, which I returned as warmly as I could. Leanne Wisocky's hair was cut just above her shoulders and was straight with no styling. She was wearing her uniform of a royal blue shirt and navy blue pants, with an \"A.G.P.D.\" insignia on the left collar and a silver Lieutenant bar on the right collar. \n\nHer large breasts strained against the fabric of the shirt, which caused a first stirring of my loins. She had put on weight in the years since I'd seen her. In her youth she'd been a real tomboy, and her body was shapely and very hot, especially her legs. But one could tell even then that she was somewhat 'big boned' and would one day be a 'big girl'. She wasn't fat, but beginning to put on weight here and there, and she no longer had that hourglass shape of her youth... an hourglass shape that Teresa Croyle now had that made her look so hot. \n\nBut there was another reason the sight of Leanne was stirring my loins. She was the woman that had taken my virginity.\n\nShe was a little bit older than me, and she'd graduated high school and gone to a small college. She had always wanted to be a policewoman, and her schooling was towards that end. She came home one summer, and she and I began hanging out a good bit. On one hot summer afternoon we were alone at her house... and good things started happening.\n\nI wasn't a jock in my youth, though I was on the football team because every boy in the school was on the team, though I rarely played. I also was on the Golf team, making the sixth and final varsity position my Senior year and lettering in that sport. I was always curious of the world around me, going off to explore creeks and trying to catch snakes, and Leanne did those explorations with me and other boys when we were younger.\n\nShe had been sexually active for a while, and on that hot summer day I went for it. I was fairly bold even then, and when her bikini top had a malfunction, a nip-slip, before I realized it I was leaning over and kissing her teat! That led to me kissing her mouth and things going from there. I got my first blowjob that day, followed by my first intercourse in the missionary position, totally bareback sex. Leanne was on the pill, which was fortunate because I shot what felt like a huge load into her.\n\nMy father never knew, but I think my mother observed and deduced it that very night. A few days later I heard her saying something about me having a swagger that I hadn't had before. And she tried to dissuade me from seeing Leanne, but it would've been easier to stop sap from running in the trees than it would be for me to give up that summer of hot sex with a hot girl.",
        "Leanne went back to school, and didn't return the next summer: she had an internship with a police department somewhere. Meanwhile, I was already beginning to date other girls. Most of them didn't put out, but I got some smoking hot blow jobs and occasional condom-sheathed intercourse. Then I went to college, and sex was plentiful... especially with the legendary stud Jack Burke as my roommate... but more on that at another time...\n\n\"It's great to see you!\" Leanne said. \"What brings you home to Apple Grove?\"\n\n\"I just escorted my mother up here.\" I said. \"I'm having to take care of some things related to my father's old law firm while she visits with her old friends.\"\n\n\"Oh, I see.\" said Leanne. Was that a bit of a shadow on her still-attractive face? I thought to myself as she said \"Let's go say hello to the Chief.\" She led me to the office of the Chief of Police and knocked on the open door.\n\n\"Oh my gosh, Donny Troy!\" exclaimed Chief Sims when he saw me. I knew that I had not been to Apple Grove for some time, and rarely since I'd left for college, but I could see that Chief Sims had aged beyond his years. Small lines etched into his face, his hair just a bit more gray than I thought it should be.\n\n\"Good to see you, Chief.\" I said. \"It's been a long time since I've been here.\"\n\n\"It surely has, it surely has.\" Sims said. \"So what brings you here?\" I repeated the story I told Leanne, somehow knowing that telling the full story was something that I should not do. I did say that I'd already been to the law offices to complete my task.\n\n\"Ah, so your mother is here with you?\" asked the Chief. \"How is she doing?\" I said she was doing very well, and was an Auxiliary Policewoman in my Town.\n\n\"Well, I'll be.\" the Chief said.\n\n\"Chief,\" Leanne said, \"why don't I take Donny to lunch.\"\n\n\"That'd be a great idea.\" said Sims. \"Before you go, can I have a private word with you, for just one moment?\"\n\n\"I'll wait outside for you.\" I said. \"Good to see you again, Chief.\"\n\nI began talking with the receptionist as I waited for Leanne. I noticed her necklace. \"Is that a rune?\" I asked, as if simply curious.\n\n\"Oh! Why yes, it is.\" the woman said, a bright happy smile appearing on her attractive face. \"I went to a seminar camp a few years ago.\" She then moved to change the subject by asking \"Your rank... is that 'Colonel'? We don't have anything higher than Captain here, except the Chief, of course.\"\n\n\"It's 'Commander'.\" I said. \"My name is Don Troy. I grew up here in Apple Grove.\"\n\n\"Oh, I see.\" said the woman. To my total shock, she looked warily around the room, then said quietly \"You're that Iron Crowbar guy, aren't you?\"\n\n\"Er, yes... yes I am.\" I said, also quietly, as if sharing a state secret.\n\n\"Just between us...\" the woman said, again looking around furtively, \"keep your eyes open... and don't you or your mother be alone anywhere at any time.\"\n\nI was too shocked to say anything and Leanne came out of the Chief's office just then. The receptionist turned to her paperwork and giggled as if I'd just said something flirtatious.\n\n\"Still the ladies man, I see.\" said Leanne, seeing the receptionist flushing and smiling, totally fooled by the woman's act. \"I hope my husband doesn't catch us having lunch.\"\n\n\"Yes.\" I said. \"If you don't mind, why don't you drive so I can call my mom on the cellphone...\"\n\nPart 8 - Diamonds Are Forever \n\nSheriff Daniel Allgood descended the stairs into the secure \"dungeon\" areas of Town & County Police Headquarters. He was in a most very foul mood already, and this news had not made it any better.\n\nIn the Evidence rooms were Lt. Tanya Perlman, Detective Martin Nash, Lt. 'Curly' Goodwin of Internal Affairs, Detective Gayle Tunnin of Internal Affairs, the Evidence Supervisor in his gray baseball cap, and Sergeant Rudistan and Senior Patrolman Morton.. \n\n\"What's going on, Perlman\" the Sheriff asked, the tone of his voice instantly warning Tanya to be on guard. \"By the way, do any of you smell smoke?\"\n\n\"Yes, Sheriff,\" said Lt. Tanya Perlman, \"I smelled it when I came down here, but nothing is smoking or burning. But that's not the important thing. The diamonds we recovered earlier this week...are gone.\"\n\n\"Gone?\" asked Allgood. \"How?\"\n\n\"Not sure yet. They were right here...\" she pointed to a box inside the safe that the most valuable objects were stored in as a double-precaution, \"...and they are now gone. The Evidence Supervisor found the safe open when he got here half an hour ago. The safe was opened with the combination.\"\n\n\"Curly, who knows the combination?\" asked Allgood.\n\n\"The Evidence Room officers, the Armorer, and the D.A. and all the ADAs know it.\" said Lt. Goodwin. \"The Commander, Deputy Chief, and Captain Aarons also know it, and the Chief will when he's installed. You're also entitled to know it, being Sheriff, but I don't think anyone's told you.\"\n\n\"No, I don't know it.\" said Daniel. Just then, Myron Milton walked up. \"What the hell do you want, Milton?\" Daniel snarled. He and Myron were still antagonistic to each other from the past times of sparring while Allgood was the I.A. leader.\n\n\"Sheriff!\" said Tanya, both defensively of Myron and a rebuke to Daniel Allgood. \"Myron, what do you have for me?\"\n\n\"Ma'am,\" said Myron, intentionally not noticing Daniel's presence, \"two things of great importance. The card used to gain access to the Evidence Rooms was used last night at 2:30am, and that card was used to gain access to the Evidence Rooms is the base keycode of Detective Sharples. However--\"\n\n\"Okay, someone go get Sharples!\" ordered Allgood.\n\n\"Hold on, Sheriff.\" said Tanya, wondering why Allgood was in such a foul mood and being so unlike himself. \"What's the full story on that, Myron?\"\n\nMyron replied \"As Commander Troy taught us after that morphine loss at the Hospital last November/December timeframe, when a key card is duplicated, it generates a code with \"5555\" at the end instead of the real numbers. It'll let the person in, since there may be a hostage situation going on, but the point is that the card was duplicated and the forgery used to gain entrance.\"\n\n\"Goodwin,\" said Allgood, his voice a bit quieter, \"go get Sharples anyway, bring him in and question him about his I.D., make sure he has his card and that it's real, and ask if anyone had access to it at any time.\"\n\n\"Yes sir.\" said Goodwin, also a bit shocked at how his old boss was acting. He tasked Detective Tunnin with that assignment and she left.\n\n\"Okay, Myron, what else?\" Tanya asked.\n\n\"Ma'am, I've checked the key codes to get downstairs.\" said Myron. \"Sharples has not been down here at all since the diamonds were put in the safe. Also, the forged card was not used. I have the list of everyone who has come up and down the stairs since the diamonds were put in here, from using their cards. But after the Evidence Supervisor checked on the diamonds yesterday before locking the safe at close-of-business, no one except this forged card's holder came into the Evidence Rooms, and no one came down from upstairs at all.\"\n\n\"So someone was hiding down here, waited until 2:30am, then used a forged card to get in.\" said Allgood. \"Curly, don't you guys have cameras with motion-sensor detectors covering these downstairs hallways, the Armory and the I.T. areas?\"\n\n\"And inside the Evidence Rooms.\" said Goodwin. \"I'm having my people go through last night's tapes now, but so far they've found nothing.\"\n\n\"How can that be...\" Daniel said, then turned to Myron. \"Milton, are those cameras computer controlled? Could someone have programmed them to shut off?\"\n\n\"No, Sheriff.\" said Myron. \"That was one of Commander Troy's precautions. The cameras feed data to the Internal Affairs servers, but are hard-coded and cannot be accessed from outside nor instructions given from outside. It's old-school technology. They can be turned off, but the switches are inside Internal Affairs, not connected to any digital system, just plain electrical wires.\"\n\n\"And the fuses to them?\" asked Daniel.\n\n\"Anything electrical that involves I.A. has the fuse boxes within I.A.\" said Curly Goodwin. \"Daniel, you know that.\"\n\n\"Yeah, I just wanted to make sure of it.\" said Allgood. \"Well, Lt. Perlman, you're the Iron Crowbar this weekend... what happened here?\"\u2028\n\n\"Not enough data yet, Sheriff.\" said Tanya, most very astutely mimicking the Iron Crowbar's oft-quoted words. \"Let's see if anything shows up on the motion-sensor tapes.\n\n* * * * * * * * * * * * * * * *\n\n\"So that's why we smelled smoke.\" said Sheriff Allgood as he watched the television screen in the Main Conference room. The tape showed smoke filling the corridor just before 2:30am. Nothing else could be seen for several long minutes.\n\n\"The smoke activated the motion-sensor cameras, but there are no smoke detectors in the hallway nor the Armory, where guns are fired.\" said Curly Goodwin. Also in the room was Tanya Perlman and Martin Nash. \"Only inside the Evidence Rooms, the I.T. server rooms, the Data Mining cubicles, and Internal Affairs's server room and cubicles.\"\n\n\"And we really can't see if someone is walking through that smoke.\" said Allgood. \"What happened with Sharples and the Evidence supervisor?\"\n\n\"The Evidence Supervisor has fully cooperated, and his statement coincides completely with the facts as we know them.\" said Lt. Goodwin, giving details more for the MCD officers than for Sheriff Allgood as he continued: \"He checked off on the contents of the safe, which was videotaped. Commander Troy had 'suggested' that when the diamonds were brought in, and his suggestions are considered to be instructions.\"\n\n\"Man, that's some serious security.\" said Martin Nash. \"Is this literally every-day commonplace?\"\n\n\"If we get a really big stash of drugs, cash, or something like these diamonds,\" said Curly Goodwin, \"then yes, it's typical. Especially when Commander Troy feels the need to do it, and these diamonds were something we don't normally have.\n\n\"Finish up about Sharples.\" Daniel Allgood said. \n\n\"Yes sir.\" said Goodwin. \"At first he was cooperative. He showed our guys his Police I.D. card, it's the genuine article. He said he did not know of any time where it was out of his possession. Then--\"\n\n\"If I may...\" said Nash, interrupting, \"... how was Sharples during this questioning? Nervous, calm?\"\n\n\"We have it on tape so you can watch, but he appeared calm,\" said Goodwin, \"up to a point. As our guys began questioning him harder, he got suspicious and asked what it was about. Per protocols, our guys didn't say, and at that time Sharples said 'This is the Commander fucking with me again, isn't it? I want a Union rep before I say anything else.'.\" Our guys tried to cajole him into talking, but he again insisted upon a Union rep, and complained that they were harassing him by asking him questions after he'd asked for the rep's presence. We haven't called in the Union yet, so we have nothing.\"\n\nTanya sighed. \"Once again, that fat son of a bitch skates by. He may be totally innocent, but he can use this paranoia about the Commander to not answer questions, and the Union rep will make an issue out of any more questions.\"\n\n\"If he's innocent, he should have no problems answering our questions.\" Allgood said.\n\n\"That's what we told him, and he got more belligerent and started complaining about being questioned after asking for the Union rep.\" said Goodwin. \"It's like someone taking the Fifth, we can't just assume guilt.\"\n\n\"True. True enough. Okay, Miss Acting Iron Crowbar,\" said Daniel Allgood, his tone humorous but with just a touch of derision, \"what do you think of all this?\"\n\n\"First, Sheriff,\" said Tanya, \"it's obvious that someone knows completely about our security in the basement areas, and this elaborate and quite effective scheme was created to defeat that security. This is also a one-time plan, as we'll be adapting to it. Obviously someone wanted those diamonds very badly, enough to go through this to get to them. The amount they are worth would make it worth someone's while to do it, though.\"\n\n\"Second,\" Tanya continued, \"whoever thought of this scheme is of a brilliant mind, and I'm speaking of the level of Commander Troy, who has worked religiously on making security foolproof in this and all other areas. I am saying that someone has actually mentally defeated the Iron Crowbar, and there is no way that Detective Sharples could've thought of this.\"\n\n\"Third,\" Tanya said, \"it shows that there is at least one mole and likely more in this Police Department. Someone knew the combination to the safe, someone knew how to get in, someone--\"\n\n\"But how did they get down there?\" asked Sheriff Allgood. \"There's always someone on duty upstairs that can see anyone entering the room leading to the downstairs. There are two separate keycodes needed to open those doors, and no keycodes were used at all last night. And the sheer number of people that would have to conspire to make a cover-up of this happen is just too large for me to even consider as a possibility.\"\n\n\"I agree with you, Sheriff.\" said Tanya. \"And I have no clue how the perp or perps got into the Evidence Room.\"\n\n\"Well,\" said the Sheriff, getting up, \"you guys keep investigating. I think I'm going to have to give the Iron Crowbar a call.\" He did not observe Tanya's eyes flash fire at the blatant insult, intended or not, as he left the room.\n\nPart 9 - Apples and Oranges \n\nAs Phyllis walked back to where former Sheriff Greenwood's car was parked, she was totally shocked to see the car behind his, and the person who was sitting in the car with Greenwood.\n\n\"Melina!\" Phyllis gasped. \"What on earth are you doing here?\"\n\n\"We'll talk about that.\" Melina said. \"Sheriff, I'll drive Phyllis around. Thanks for your help.\"\n\n\"No problem.\" said Greenwood. \"It was good seeing you again. You too, Phyllis.\" Melina got out of the car and Greenwood drove off, back towards town. Melina and Phyllis got into Melina's car.\n\n\"He remembered me from Don's father's funeral.\" Melina said.\n\n\"I see.\" said Phyllis. \"And you are up here because...\"\n\n\"Because you need to be watched over.\" said Melina. \"My sister is concerned about her mother-in-law as well as her husband, but the one who was absolutely beside himself when he heard that you and Don came up here was Special Agent Jack Muscone of the FBI. He asked Laura to have someone watch over you and Don, and Laura asked me to come. Didn't bother me, as Daniel is in something of a mood right now, and I needed to get out of Town myself for a few days.\"\n\n\"I see.\" said Phyllis. She did not mean that she accepted her ex-daughter-in-law's explanation. She was seeing much further. Melina's presence was a cluuuue, she thought to herself.\n\n\"Since you're here,\" Phyllis said, \"let's go to lunch... oh, Don is calling.\" She answered the cellphone. After she disconnected, she said \"Let's go towards Rome. Don and a police friend are having lunch over there.\"\n\n* * * * * * * * * * * * * * * *\n\nLeanne had me drive almost all the way back to Rome to find a decent restaurant. There was a Chinese buffet that she said was very good, so we stopped there. Indeed, there was a large selection, and it was reasonably tasty.\n\nAs we ate lunch, I said \"Okay, Leanne, you've gotten me out of town, out of the way. So what's going on around Apple Grove? Your Chief was more nervous than happy to see me, and I felt some tension at breakfast at the diner.\"\n\n\"First,\" said Leanne, \"someone found a dead body in a farm field south of town this morning. It's out of our jurisdiction, and therefore is the responsibility of Sheriff Spaulding. He doesn't like us helping in cases that are his county jurisdiction.\"\n\n\"Okay.\" I said. \"Did you think I was going to interfere with that?\"\n\n\"I don't know.\" Leanne replied, then said \"I'll just tell you this, Don.\" She repeated much of the story that Mrs. Starnes had told Phyllis, though of course I didn't know that at the time. Leanne concluded by saying \"I try to help Sheriff Greenwood where I can, and so does the Chief. But we don't know who might be helping Sheriff Spaulding, and Spaulding's friends now control the law firm, the bank, the judge, and most of the Town Council. Our mayor quit and moved away; we heard he and his wife were threatened.\n\nLeanne finished up: \"I've heard of some of the things you've done with your own Police Force, not to mention the legend of the 'Iron Crowbar' and your meteoric rise to the top. And that's why people around here are scared of your presence. Your mother was up here a short while ago, and I think she got wind of some of the things going on. Is that why you're here?\"\n\n\"No,\" I said, putting the clue I'd just received into its compartment, \"I came up to investigate some things in connection with my father's old law firm. Not really any big deal, as far as I can tell, just some hacked files. But there is one thing I'd like you to help me with, if you don't mind. Can you get me into the vaults that have the old physical legal papers that my dad filed away for and with the county? They're in the Courthouse and where the evidence rooms are.\"\n\n\"No, I can't get you in there.\" said Leanne. \"It's always two-man control in there. However, we still have some friends in the Courthouse. But how you're going to get in there without being seen is another matter entirely.\"\n\n\"Oh, that shouldn't be a problem.\" I said. \"The Courthouse is closed for the weekend, is it not?\"\n\n\"Yes, but the DMV and tag office are open until noon, and there are people milling about.\" Leanne replied.\n\n\"Oh well,\" I said, \"probably nothing anyway.\" Just then, two ladies approached our table. One was my mother. I was having a bit of trouble believing who the other was.\n\n\"Melina?\" I said. \"Pardon my surprise. Nice to see you.\" I introduced Leanne.\n\n\"Ah yes, I remember Leanne.\" said my mother with, shall we say, a bit less than her usual charm and enthusiasm.\n\n\"You're looking very well, Mrs. Troy.\" Leanne said, unperturbed by Phyllis's attitude towards her. \"And Melina, you're Don's wife, aren't you?\"\n\n\"Ex-wife.\" said Melina. \"Long story, but he's married to my sister now, and I'm married to his boss.\"\n\n\"Of course,\" I said, \"her sister, being my wife, is my real boss. Melina, I don't know if you met Leanne, she was a bit older than me in school. She's with the Apple Grove Police now. Would you ladies care to join us for lunch?\"\n\nI think my mother would've declined, but Melina said \"Sure.\" and sat down, all but forcing Phyllis to do so. Melina and Leanne did most of the talking, at least Melina had Leanne do a lot of talking about Apple Grove. In addition, Melina ate a staggering amount of food, and I didn't keep up. Is she pregnant again? I wondered. She didn't appear to be, but who knows.\n\nOur check was brought to the table, along with orange slices. The woman that brought them, a lovely older Asian woman, presented me with an extra fortune cookie.\n\n\"Special fortune for the gentleman.\" she said, bowing. She then quickly went away. I took out the fortune cooking from its wrapper and broke it open, then read the fortune. It read:\n\n\"Iron Crowbar should consider taking helicopter flying lessons.\"\n\n\"Er, ma'am...\" I said, looking up, but the woman was gone. As I got up, a young girl came up. \"Do you know who that lady was, the hostess, the older lady?\"\n\n\"Ah, so sorry, sir, I do not know of any lady. Our hostess is at front desk, sir.\" she said. I looked over. The woman at the front counter was not the woman who'd given me the fortune cookie.\n\n\"Is there another hostess, another older woman?\" I asked the girl, as well as a second girl that had come over.\n\n\"So sorry, sir, no such lady here.\" said the second girl. I realized I was going to get nowhere fast trying to find the mysterious woman.\n\nWe paid our bill and left. I had shown my mother the piece of paper, and she had gasped and shaken her head in surprise. As we went into the parking lot, I noticed something... the trunk of my mother's car, that I had been driving, was open... and a young, slender Latino man was going through the trunk!",
        "\"Hey! Stop right there!\" I shouted. I began running at him. \"Police! Stop! \u00a1Alto!\" The young man dropped the (plain black) tire iron he was carrying and ran away. He was tremendously fast, and I had no hope of catching him, and he fled between some buildings and was gone.\n\nI came back to the car, where the women were waiting. \"Okay, let me get a plastic bag and put this tire iron in it. I'll have someone at our Crime Lab look for fingerprints.\" I suited the word to the deed, getting a large plastic bag that my mother had brought, meant for dirty clothes but now serving a greater need.\n\n\"Any idea who that was, son?\" Phyllis asked.\n\n\"What do you think he was looking for?\" Leanne asked.\n\n\"My laptop.\" I said. \"I put it in the trunk when I left the law office, but before getting to the police station I pulled over and got it and put it under the back seat.\" Opening the left rear door, I pulled the seatback up slightly. There was a space there, where I'd secreted my laptop. \"Okay, I'll take Leanne back. Melina, Mom, do you want to follow us into town?\"\n\n\"Why don't we go back to the hotel room first?\" my mother said to Melina.\n\n\"Good idea.\" Melina said. \"Don, do you want me to keep that laptop for you?\"\n\n\"No, I've got it.\" I said. \"By the way, Leanne... is there a Wal-Mart near here?\"\n\n* * * * * * * * * * * * * * * *\n\nBack at Apple Grove Police Headquarters, I went inside with Leanne, hoping to find a secure internet connection, so I could transmit the contents of the laptop to my own Headquarters' servers. Leanne led me to her office, which contained such a connection.\n\n\"You can sit here, at my desk.\" Leanne said. I came up to her and slid my arms around her.\n\n\"You know,\" I said, \"we haven't had a chance to renew our old acquaintance.\" I leaned over and kissed her right on the mouth. She didn't resist, but she didn't really respond, either.\n\n\"I can see that you're still as aggressive as you were when we were younger.\" Leanne said with a smile. I just kissed her mouth again, letting my tongue slip past her lips and over her tongue. We deeply kissed for a long minute as I tried to maneuver Leanne around to sit or lie down on the edge of her desk. But there, she stopped me.\n\n\"Okay, stud,\" she said, \"you've got to get that information into your computers, pronto. Besides, what would happen if your mother came in?\"\n\n\"That never bothered you before.\" I said with a grin, but the moment was over as Leanne slipped out of my arms. I went to work as she left the office, saying she was going to use the restroom.\n\nThough the line was theoretically secure, I still used PGP-style security layers on top to transmit all the data I'd obtained from the law office onto TCPD servers under my personal seal. Then I got out my purchase from Wal-Mart: a burner phone. I set it up using the activation card, giving the name 'Jean-Paul Michaux'. I then used the burner phone to call a number, leaving the message that I was in Apple Grove, I needed help, and describing what I needed. \n\nOnce all that was done, I went into the main area, where Leanne, the Chief, and a couple of uniformed officers were talking. The Chief introduced me to the other officers. They were talking about the murder found that morning.\n\n\"Guy from Providence Springs.\" one officer was saying. \"Black, 56 years old, did mechanical work on BigAgraFoods hay-bailers. No idea why he was found so far away from home, no motive yet for his murder.\"\n\n\"How did he die?\" I asked.\n\n\"Beaten over the head with what looks like a tire iron or a crowbar, something heavy and metal.\" the officer said. \"Head was smashed to a pulp. He was identified through fingerprints.\"\n\nJust then, there was a hush over the Station. I turned to see a man in a brown uniform of the Sheriff's Department enter the room. He was a bit older than me, maybe his late thirties, lean and toned. His hair was a dark red, and his face was angular and had a natural mean look to it.\n\n\"Who are you?\" he snarled at me.\n\n\"Sheriff, this is--\" the Chief started.\u2028\n\n\"I asked him.\" the Sheriff said, deliberately interrupting the older Chief of Police as he pointed at me.\n\n\"My name is Commander Donald Troy, and you must be Sheriff Spaulding.\" I said.\n\n\"I know who you are, Troy.\" said Spaulding. \"And I don't give a damn if you grew up here or not. In the here and now, you're out of jurisdiction. You're not a 'Commander' here, Troy, you're just a piece of dog shit. And you're unlawfully carrying a gun in my jurisdiction. Give me your gun, slowly. Now.\" His hand went to his own gun.\n\nI slowly reached into my pocket and withdrew my credentials, which included my Federal Firearms Carry Permit. I extended my arm, displaying the card.\n\n\"Federal Firearms Carry Permit, Sheriff.\" I said. \"I'm entitled to carry my gun in this jurisdiction or any jurisdiction within the United States of America... and I will not relinquish my arms to you nor to anyone else.\"\n\n\"Like hell, you won't.\" the Sheriff said. Chief Sims stepped up between us.\n\n\"Sheriff, the man has a Federal carry license.\" the Chief said placatingly. \"Now I'm sure you don't want any problems about that, like having the FBI come in over something as trivial as trying to disarm him over that.\"\n\n\"You telling me this guy is a Fed?\" Spaulding asked, his eyes looking at me with even more open hostility.\n\n\"No, Sheriff,\" said the Chief, \"but he's got a Federal permit to carry, and he's a law enforcement officer that grew up around here. Just let it go, Sheriff.\"\n\nSpaulding considered the Chief's words, then glared at me and relented. The tension in the room subsided somewhat. \"All right. But I'll have people keeping an eye on him.\" With that, the Sheriff turned and was about to leave. Despite my better judgement, I couldn't resist:\n\n\"Sheriff,\" I called out, \"I heard you had a murder in your county last night. If you'd like any assistance in solving it, I'll be glad to help out while I'm here.\"\n\nThe Sheriff turned, a very ugly look on his face. \"You stay the fuck out of my business, asshole.\" he said venomously. \"I'll investigate my cases as I see fit, and I don't need your fucking help. If I see you poking your fucking nose where it doesn't belong, Troy, I'll blow your god-damned head off.\" With that, Sheriff Spaulding turned and stalked out of the building, furious with anger, his face beet red.\n\n\"Good grief, Donny.\" the Chief said, sheer amazement in his voice. \"You just about made his head explode when you offered your help, there.\"\n\n\"Funny, that.\" I said. \"This county has some real problems, don't it... some real problems...\" I noticed the look on Leanne's face. She was totally shocked, and I could tell it was at the way I'd stood up to the Sheriff.\n\nPart 10 - Rhymes With Apple \n\n\"Okay, thanks Sandra.\" Cindy Ross said into her cellphone. She and Teresa were at the public park, watching kids on the playground and young adults on the disc golf course.\n\n\"That was Sandra Speer of the FBI.\" Cindy said. \"They had the nearest FBI office to here check out that plane that took off with our perps. Seems that a plane matching the description landed at a small airport about 75 miles north of here. That airport has a museum of old planes, and it's run by a retired Delta Airlines pilot.\"\n\nCindy continued: \"The two guys in the plane from here got off and then got into another one, a larger one, and took off... which made the museum guy take notice, as that was what the Commander would call a 'strangeness'. As he went to check out the plane that was left, he saw smoke coming out of it, and it was soon engulfed in flames. He called the FBI himself; apparently he knows someone in the nearest office. They were already on the alert, and called Jack Muscone.\"\n\nTeresa nodded. \"And I did notice that Don's wife provided us with transportation to get here, keeping us relatively safe. So something's up. You talked to Don. Did he say anything?\"\n\n\"No.\" Cindy said. \"He's up in his boyhood town of Apple Grove, investigating something. I suspect that has his full attention.\"\n\n\"Wow, he left Town while we were already on leave?\" Teresa asked, understanding the implications of that. \"Whatever it is in his hometown, it must be huge.\"\n\n\"Yep.\" Cindy said, then added with some disparagement, \"Something else he won't tell us about, I'm sure.\"\n\n\"He tells you a lot more than he tells me.\" Teresa said. \"Of course, he's working with me to try and get rid of that fat ass Sharples.\"\n\nCindy didn't reply, but tried to train her mind to think as the Iron Crowbar would. But nothing came to her, so she said \"Is there a Wal-Mart or a sporting goods store anywhere near here? Let's go buy a couple of frisbees and play this disc golf course.\"\n\n\"It's something to do.\" Teresa said, acknowledging that there simply wasn't much to do in this little town. Not much had changed in the years since she'd left this place...\n\n* * * * * * * * * * * * * * * *\n\nEMT Charlie Strauss was sitting with me and EMT Marty Robbins at the Fire Station next to Police Headquarters. We were in a small back office that served as a conference room.\n\n\"Charlie,\" I said, \"now that you're out of my Town & County, I'd like for you to tell me what was going on with the Fire Department and EMTs in my County. I know there are problems, but can't get anyone to elaborate. I'll keep your name secret, but maybe I can help do something if I know what I'm dealing with.\"\n\n\"You should've run for Sheriff, then.\" said Strauss, then caught himself. \"Oh, I'm sorry, I shouldn't have said that like that.\"\n\n\"I know what you mean,\" I said, \"and Sheriff Allgood wants to do something about it, also. He's been getting a lot of runaround.\"\n\n\"You should give him a crowbar, then, and let him beat the shit out of the Fire Chief and the other highfalutin officers there.\" said Strauss, obviously still emotional about his time with the Town & County EMS. He took a breath, sighed as he exhaled, then said \"Okay, here's the deal:\n\n\"EMTs are supposed to be an integral part of a County's emergency services.\" said Strauss. \"Most places have EMS as part of the Fire Department, and that should and does work out in most places. But for some reason, not in your County, Commander.\"\n\nStrauss continued: \"Just take a look at the written requirements for EMS ranks versus those for the Fire Department. EMS gets all the shit duties, having to clean the stations, then some Fire Department puke comes along, throws coffee on the floor and the Station Superintendent is there not just yelling at us, but writing us up. If a Firefighter can't make the grade, he can still hold a County job elsewhere; but if an EMT is let go, he's forbidden by County law from holding any public service job, at all, ever.\"\n\nI realized that Strauss had a point as he continued: \"Firefighters come up through the ranks at a reasonable pace, though not as fast as the Police. That's not a knock on you guys, it's just sayin'. But EMTs? We can't get promoted for years, and what a guy has to go through to become a Paramedic, which is like Sergeant in the Police Department, is crazy. Robbins here is the only person here who would qualify to be a Paramedic in your County, and that's not saying anything about him or the Apple Grove EMS; they just make advancement impossible in your County.\"\n\nStrauss continued: \"And you know about the medals, don't you Commander? We used to be separate, and had our own medals with green-edged ribbons. The Fire Department insisted we only have red-edged ribbons, given by them. The Fire Department there has more medals than any other branch of public service, but they made sure we had the fewest... and they work hard as hell to deny medals to EMTs. We can't even get an Achievement Medal out of them.\"\n\n\"I see.\" I said. \"And most EMTs quit and find other jobs before getting the time-in-grade to advance.\"\n\n\"Yes sir.\" said Strauss. \"But it's more: look at the leadership positions. The very highest EMS position is Chief Medical Officer, the equivalent of a Watch Captain.\" That was equivalent to a Police Captain, I noted as Strauss said \"The CMO has to be a full medical doctor and is 'encouraged', which means required, to be on Staff at a local hospital, and do you know how hard it is to get a Staff position?\"\n\nI certainly did know, as my wife was on Staff at University Hospital, but Strauss was not finished: \"And if there is no medical doctor and the CMO position is unfilled, the next grade, Deputy CMO, also has to be a medical doctor, and cannot be an Acting CMO or fill in the CMO position and represent us with the County leadership.\"\n\n\"What about your Union?\" I asked. \"Aren't they separate from the Fire Department's Union?\"\n\n\"Theoretically,\" said Strauss, \"but the Council wouldn't listen to a word they said, and the FD Union was always opposing us and the Council would take their side, every single time. Commander, I was a damn good EMT with you guys, but I didn't have a chance to do shit while I was there, and I was always being threatened with demotion or being fired... by Fire Department officers. Up here, I've got a chance to advance and we work well with the Fire Department and Police. It's night and day with what's down there.\"\n\n\"I see.\" I said. \"I appreciate you telling me this, Strauss. We've lost you and other good EMTs already, but maybe I can stop the hemorrhaging and get some stuff fixed...\"\n\nI left the EMTs and went back to the Police Station. It was 3:15pm. As I went inside, the receptionist bored her eyes into me, tugging at her rune around her neck at the same time. My nod was almost imperceptible. I set my new burner phone down on the edge of the counter behind which she was sitting and made my way to the Chief's office. The Chief and Leanne were inside.\n\n\"Chief,\" I said, \"I appreciate your help today. I'm going to go catch up to my mom, and we might head on home. If we do, it was good seeing you, and even better seeing your lovely Lieutenant here.\" Leanne blushed and smiled wryly as the Chief and I shook hands. Leanne was escorting me to the door and just as I was about to leave, the receptionist stood up.\n\n\"Oh, Commander, you left your cellphone here.\" she said.\n\n\"Oh my goodness.\" I said as she came around and handed me the phone... and I felt the two keys being passed with them.\n\n\"Thank you.\" I said as I took the phone. \"Thank you very much.\" The receptionist smiled as I pocketed the phone and the keys and headed out, neither Leanne nor anyone else watching the wiser at the transaction that had taken place.\n\nAnd ooh-wee, was the price for this one going to be high...\n\nPart 11 - Diamond Flush \n\nIt was the University's Spring football game, Blue vs. Silver, which marked the traditional end of Spring football practices. There were probably 20,000 fans that had come up for the afternoon football game, which was more than expected but not enough for the TCPD to make any special arrangements. Lt. Wes 'Coldiron' Masters had effected an efficient traffic plan, and all was going well.\n\nIn the President's private box were two people. They had been given the credentials by University President Sidney P. Wellman. One was Town & County Councilman Thomas P. Cook, and the other was University Regent Henry R. Wargrave.\n\n\"Tom, what I'm telling you is that I need help.\" said Wargrave. \"The local police intercepted the raid, and this time the Iron Crowbar got it right. And my plan to get those diamonds out of the Evidence storerooms was also for nothing; someone beat my guys to the punch, and the diamonds were stolen last night.\"\n\n\"Yes, it was unfortunate.\" said Cook. \"I was going to have Sharples get those diamonds back for you, but we were also too late.\" Wargrave could not tell if Cook was lying to him.\n\n\"Look, sir,\" Wargrave said, \"I am up against it. The FBI is all over me, and they're becoming relentless. I might have to step out of the country for a while, just to get them off my back. We've worked together before, there's a lot of goodwill built up, and I need your connections now.\"\n\n\"What would you like for me to do, Henry?\" Cook asked.\n\n\"Either get the FBI off me, or help me get some working capital to continue my operations while I dodge them.\" said Wargrave.\n\n\"Okay, I'll put something together for you.\" said Cook. \"Money is tight for all of us. The Iron Crowbar has done more damage than even he realizes. His capture of The Silverfish and exposure of Harkins really put a crimp on us. By the way, do you know where Harkins is? He has eluded us, amazingly enough.\"\n\n\"No sir, I have no idea.\" said Wargrave. \"Once I get some cash flow going, I'll flush him out for you.\"\n\n\"Good, we have a deal.\" said Cook. \"Sit tight, and let me get some things going... oh look, one of our running backs just injured his knee. How do you think the team is going to do this fall?\"\n\n\"I'd be ecstatic with a winning season.\" said Wargrave.\n\n* * * * * * * * * * * * * * * *\n\nThe first text on my police cellphone came from Tanya Perlman at 3:30pm that afternoon. It read: \"Diamonds stolen from Evidence safe last night. Sheriff thinks we're not up to the task and will call you soon.\"\n\nI called her and got the gist of what was going on. I told Tanya that she was doing fine, then called Myron Milton. \"Myron, I need you to look up some data in two places. Keep this under wraps, but if you find anything, put it on the evidence servers and let Internal Affairs know about it.\" Myron said he would, and that he would call me back with his findings.\n\nMinutes later, Sheriff Daniel Allgood called. \"Don, we've got a problem down here.\" he said. \"The diamonds you recovered the other day have been taken out of our Evidence Rooms.\" He went on to explain things, which was almost verbatim what Tanya had told me, but with a few extra comments about Sharples added that he knew but she didn't.\n\n\"Sheriff, Lieutenant Perlman is very sharp concerning crime scenes.\" I said, definitely boosting my officer to the Sheriff. \"I'd put her on the scent until I get back, and she'll probably have it solved by the time I get out of this county up here.\"\n\n\"I'm sure she'd give it her best try,\" said Allgood, \"but let's be brutally honest here, Don. Whoever did this defeated your safeguards. There is a great criminal mind behind this, and I mean no disrespect to your Detectives when I say it may be out of their league.\"\n\n\"Daniel,\" I said, deliberately using his first name, \"we'll talk about the quality of my officers, which is top-notch, when I get back. Also, there's two things you need to do until I get back. First, you need two officers guarding the doors to the Evidence Room, stationed in the hallway, 24-7. Not upstairs, but downstairs, in the hallway. I'll call Lt. Masters and let him know what I need of him, as well. We'll fix the weakness when I get back.\"\n\n\"Okay,\" said Daniel. \"But what about the diamonds?\"\n\n\"Oh, don't sweat those.\" I said nonchalantly, trying not to laugh outwardly as I was inwardly.\n\n\"What?!?!\" Daniel roared into the phone. \"Don, you do know what those diamonds are worth, don't you?\"\n\n\"Yes sir.\" I said. \"They're not worth a damn thing. I've got to run. We'll get it resolved when I get back.\"\n\nWith that, I disconnected the call.\n\nTo be continued."
    ],
    "authorname": "WifeWatchman",
    "tags": [
        "police drama",
        "crime drama",
        "mystery"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/secrets-of-apple-grove-ch-02"
}