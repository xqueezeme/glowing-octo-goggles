{
    "title": "Time Isn't Real Pt. 02",
    "pages": [
        "CW: questionable consent; rape mention; death\n\nCHAPTER ELEVEN - THE NOTEBOOK\n\nThe video ended, and left me with a frozen image of my father on the screen.\n\nHe'd said so much already, and yet it was only the first of five separate USB sticks - each, I assumed, were video files.\n\nEverything I know, he had said. And what information he'd given me already - about the power, about Hugo. That I had someone in my life who was pretending to be a friend when they weren't.\n\nHugo wanted the power. He wanted to achieve it through me, and the earlier he did it the better. For him. Which meant there was a good chance he was already putting things into place.\n\nI closed the box, containing the other four memory sticks, and rubbed my eyes. It had been a long day, already, and the lull of sleep tugged at the lids of my eyes. Only, I reckoned I would struggle to sleep tonight. The heavy weight that had been laid in my stomach wasn't going anywhere soon, and I knew that it was only a matter of time until it caught up with me, the same way it had my father.\n\nMatter of time. Funny, Brooke. Real funny. \n\nThe smell of the pizza we'd gotten on the way home wafted into the air, and I felt a swell of hunger go through me; there would always be time to come back and go through the other videos in the morning. I was here for the weekend - why rush all of the world-shattering information into one evening?\n\nThen, I got a text that reminded me that I didn't, in fact, have all the time in the world.\n\nH // Just checking in! Just got off the phone with your mum - sounds like you found some new stuff of your dad's. If there's anything in there helpful, you be sure to let me know, okay?\n\nH // FYI your mum helped me out by giving me your student flat address - I'll drop by after the weekend so we can talk everything over. Probably better than doing it over text, yeah?\n\nMy stomach twisted. He knew where I lived, where Shannon and Kloe and Ryan were. If he talked to them... if he talked to Shannon, would she tell him? Would he work out that she knew?\n\nIf he did, what would he do to her?\n\nI paced the room, weighing up my options.\n\nOption one - I stay here, watch all of the videos and learn how to turn back time. Then, I go back by a day, to before Hugo knew anything about anything, and start over, maybe using that advantage to get ahead of him somehow.\n\nOption two - I go home tonight, before I look at anything else, and come clean to Shannon. She saw something, and if Hugo shows up asking questions, she'll want to know. Fuck knows how bad that would go.\n\nOption three - I eat pizza, sleep tonight, and hope that everything's fine!\n\nI sat on the edge of my bed. Option three was naive. Option one leaves people at risk of someone who, according to my dad, is so set on acquiring this power that his big plan is child-murder.\n\nWhich left two. I go home. I come clean, at least to Shannon, and she finds out what the fuck happened with her and Byron.\n\nHowever... if I was able to go back, I could stop that from happening. Undo the trauma I accidentally put her through. I could start over, not just for me, but for everyone.\n\nI stood, and returned to my little desk, opening the box and putting in the next USB to mum's laptop. The grey brick whirred as the fans span, filling the room with an uneasy, unending noise.\n\nWhat came up on the screen was another video file - a much longer one. When I opened it, I saw my father, leaning back in his work chair, the light on his face being very forgiving to the blue in his skin, and the frailty of his demeanour. Backlit as he was, he looked almost angelic.\n\nHe held up a small brown-leather notebook,\n\nShowing it to the camera like it was the holy grail.\n\n'This,' he said, his lips pursed and his jaw tight. 'This is the most important thing in the universe to me. The first time I travelled backwards, it was a three-minute trip back. A test, to see how possible it was. It turns out - very. The issue was, as is the issue for each of us... the nature of our gift means we have very little to gain from those who came before us. Knowledge, perhaps. But not tutelage.'\n\nHe opened the notebook, turning it to a page near the start.\n\n'That first time, I had this notepad in my hand. Not for any reason - I had been jotting down some thoughts, and I realised that I made a mistake. I spelled my own name wrong. And, I thought about pushing the entropy of the universe back a moment or two so I could do it again. When I did... and I know I did. I watched the clock on the wall... I found myself three minutes in the past. My notepad was back on the table, and when I opened it to correct my mistake, lo and behold, it was still there.'\n\nHe dropped the notebook out of the shot, so it was just me and him looking at each other. Well, I could pretend that was the case, anyway.\n\n'It's a tricky game,' he said. 'As soon as you're born, I could no longer go back. When you inherit your powers from me, you are locked out of going any further back than that. But as soon as you travel back in time, Brooke, you become what I call a fixed point. A point that stands outside usual cause-and effect.\n\n'For example, for those three minutes, when I had gone back in time, I had a memory of the clock being ahead of what time it was. I remembered the future. The only way to do that, is by not adhering to the law of time. What I didn't bank on, was that by holding the notebook when I wound the clock back, it would become fixed as well.'\n\nHe held up the journal. 'This has notes within it of every life I have led. Every secret I have. And I leave it to you.'\n\nI paused the video.\n\nWhile there was a heavy emotional process going on right now, seeing my father's face for the first time in years, I was certain I wasn't missing anything there. He had left the notebook to me - but it wasn't here.\n\nI checked the box again, just to make sure I wasn't being stupid, but nope - definitely wasn't there.\n\n'Shit,' I muttered.\n\n'What?' came my mother's voice, making me spin towards her. My back, and the back of the chair, would have been blocking the box from her view - but nothing could have stopped her from seeing her dead ex-husband's face on the screen. 'Oh... Sorry, Brooke. I didn't mean to...'\n\nI closed the box, quietly, and turned to her, standing. 'The box had some messages for me. Things he wished he'd said.'\n\nHer face hardened. 'Prick could have tried while he was still here.' Then, when she saw my face, she sighed, opening her arms. 'I didn't mean that. Oh, my love, I'm sorry.'\n\nAgain, it was strange - this was the most I'd ever gotten from her. She had, for so long, resented me. Blamed me for everything that went wrong. I was second place only to dad.\n\nAnd now she was hugging me.\n\n'The rest of that pizza still there?' I asked, and she nodded.\n\n'Come on. He'll be here when you get back,' she said, putting her hand on my back and leading me away. 'And... Brooke, I know that I shouldn't ask, but... did you get anything from it? From seeing him, like that?'\n\nI shrugged as I closed the bedroom door behind me. 'I don't think I found what he wanted me to.'\n\nShe accepted that, even though the truth she heard wasn't the truth I meant.\n\n* * * * *\n\nAfter dinner, which was as quiet and awkward as could be expected, mum tried to get me to watch one of those awful BBC Four documentaries about a band from the seventies I'd never heard of before. I gave her a line about being exhausted, physically and emotionally, and she accepted it and let me stalk away back to my room.\n\nIt was true, of course, on some level. I was exhausted. But I was also... itching. I needed to get back to Shannon and Kloe and Ryan. Hugo knew where they were, and he knew I wasn't there. If he caught on that I was onto him, it could spell trouble.\n\nSo, without opening another one of those USBs - I didn't need mum snooping on me - I crawled into bed and tried to come up with a plan.\n\nIt didn't come, though. There was too much in my head. Too much noise, from being back here, and being buried under an avalanche of new information. The notebook, Hugo's real motivations, the fucking time-travel. It was ludicrous.\n\nAnd yet, beneath all of that, there was something else. Something that reared its head when I let myself drift, closer and closer to sleep in the wee hours of the morning, my dreams starting to encroach in, and my hands slipping to my chest, and the gap between my hip and my underwear.\n\nI still haven't cum since fucking Bryson. \n\nThat disgusting, awful brute of a man had the cock of a God, and he thought it meant he could do whatever he wanted. He almost had. And when I stepped in, I had exposed myself to Shannon, giving her a glimpse of what was really going on.\n\nBut all of that trouble, all of the lies and secrets, paled right now in the memory of his member filling me like some heroic pillar of sex. Thick and hard and powerful.\n\nFuck, if I had thought about it more, I should have locking him in some custom-built coffin, with a hole for his mouth and another for his cock. Take away everything about him, and he was the perfect guy. Handsome and hung.\n\nThe 'rapist' thing was a bit of a downer, of course, in reality. But, in the dark of the night, between my sheets, and as my fingers found the parts of me that made me shudder and hold back moans, I was more than happy to indulge in the mixture of fantasy and memory.\n\nSo, as I writhed beneath the weight of my duvet, wearing nothing but my panties and a tee that caught on my nipples as I humped my own digits, I dragged myself closer and closer to orgasm, the building pleasure coming on fast and heavy. A deep, well-needed release to what had been a pressure-filled day.\n\n'Oh shit,' I hissed as my muscles started to lock up, the waves of pleasure crashing over me in a long-overdue tide; I whimpered into my bottom lip as I fucked myself, the difficulties of the day evaporating as I let myself cream to the thought of Bryson's monstrous cock.\n\n'Hmff,' I groaned as the orgasm subsided - not enough to completely undo the stress I was feeling, but at the very least it gave me a moment of peace as I basked in the afterglow.\n\nThen, as I realised the world around me had fallen silent, I remembered what exactly happened now when I came.\n\nTime had stopped.\n\nI smirked, my libido surging again at the thought of my self-pleasure stopping the world dead, and even though I knew that, at some point, I'd have to get back to my flatmates and keep Hugo away from anything that would give him access to me, tonight was mine.\n\nIf nothing else, I could always use my dad's recordings to figure out how to rewind time, and try again.\n\nI sat up, the bedsheet stopping in mid-air as I pulled it off myself, and slid out of bed. Still in only my now-dampened pants, a pair of socks and a plain white tee, it was strange that I couldn't feel the cold on my skin. Like everything else, it had stopped. Obeying my pleasure.\n\nI slipped out of the room, conscious that it was that - my pleasure - that kept me in control. So, as I went through the house, I made a point to avoid my mother's room and every now and again slipped my hand into my underwear, stroking the sensitive wet folds of myself, making me groan as I masturbated throughout my childhood home. It was grotesque, and lewd - and I kind of loved it.\n\nNo one would ever know. No one could.\n\nHell, it occurred to me that, by eating every pussy and sucking every cock I fancied, I could keep the world stopped from here back home. I could walk home, spending days in this lusted-up haze, using pleasure as pit-stops between travel.\n\nI wondered how many people on this road, right now, were fuckable.\n\nI knew I needed more. More than what had already happened. More than the lack-luster orgasm I had managed through the same means as everyone else - wanking under the sheets after 'going to bed'. But I wasn't just anyone. Not any more. This power... it meant I was free to do what I wanted, to play how I wanted, so long as I didn't hurt anyone.\n\nAnd so long as no one found out.\n\nCHAPTER TWELVE - THE CRUSH\n\nThrough the front door, and out into the street I wondered, my skin not reacting to what should have been baltic cold. There was rain, hanging in the air, suspended in time. As I walked through it, I collected water across my face and clothes, soaking me in a whole new way.\n\nAnd, as I looked around, trying to remind myself of any eligible bachelors within walking distance, I saw across the way a very welcome sight; my childhood crush.\n\nLorna Derring.\n\nWell, childhood crush might be misleading - for most of it I had no idea it was a crush. For the longest time, I thought I just liked her. I basically discovered my bisexuality by staring through my window and seeing her; I saw her take off her bra when she was eighteen, the summer before I left for Uni, and it just about changed my life.\n\nAnd, right now, she was in front of her window again, 20 years old, and looking out at the street. In fact, if I wasn't mistaken, she was looking straight at my window.\n\nCreeper.\n\nWith a smirk, and remembering what her tits had looked like, back-lit by the soft orange of her lamp and across the street on a summer evening, I slid my finger across my clit, and allowed the lust to make my decision for me - and to keep everything frozen until I was done.\n\nHer back door was unlocked, which seemed unsafe. Anyone could break in with the intention of, I don't know, taking advantage. Either way, I slipped in under the cover of frozen time, and almost skipped through her house. It was a mirror image to mums, with all of the rooms on the wrong side, but it was easy to navigate my way through and find my way upstairs.\n\nI spotted Lorna's dad in the living room as I skipped past, asleep with a can lodged between his thighs, and the TV frozen on a frame of Family Guy. He wouldn't be a problem.\n\nUp the stairs, each step made my nipples graze against the material of my tee, sending little shivers through me that, I knew, were helping me keep the silence going. So long as I couldn't hear the rain, I knew I was safe.\n\nAnd then, suddenly, I was in Lorna's room. Her bedroom was open, and inside the darkened space was nothing but shadow-covered furniture, all falling away in my focus aside from Lorna herself, who stood looking out at the street, leaning over her own desk that sat beneath it. From the glow of the streetlamps flooding in, I could see that this wasn't a child's room anymore, and I tried to remember if mum had mentioned anything about Lorna in the last few years. Whether she'd gone to Uni as well, or if she'd stayed at home, maybe worked from this desk.\n\nThe bed, as I passed it, seemed unmade, which was unlike the rest of the room. It was all clean surfaces, topped with amenities that cast shadows and glinted in the white-yellow light, the rain speckling the window as she peered out.\n\nShe was beautiful. As beautiful as the day she'd revealed my sexuality to me. Her face was a picture of soft features, aside from a sharp jawline that put Olivia Wilde to shame. Her lips, illuminated in the street light, looked plump and soft in profile, and her eyes caught a melancholy expression as she looked out into the road.\n\nHer body was... immaculate. It was impossible to deny that, as leery and objectifying as I knew it to be. The hourglass figure, and a waist that cinched her in the middle, letting her butt, clad in soft pyjama bottoms, speak for itself. Her top was a thin vest, and by the way she leaned I could tell the last few years had done nothing to make her bust any less impressive. I was jealous, and horny, and in awe, all at once.\n\nBut, as I followed her eyeline across the road, I saw that she wasn't just staring openly out into the rain.\n\nAcross the road, I could see my own window, the blind open and the light drifting inside as it had here. In fact, I could see the shadow of my desk, and the top of my laptop reflecting the rippled, rain-muddled light, and, behind that, the bed. Her window, as it was placed, gave her the perfect vantage pint to watch me right back.\n\nAnd, all of a sudden, I found myself wondering if, those years ago, she hadn't known I was watching when she shed her top in front of her window.\n\nBut, as I watched her, I felt that pressure building; the threatening of the end, of the world catching up. Of Lorna coming back to life, seeing my mid-climax self vanish from my bed, and appear behind her.\n\nAnd so, through absolutely no selfish motivations, I allowed myself to drop to my knees behind her bent-over rump, my fingers slipping into the elastic of her pyjama bottoms, and pulling the fuzzy grey bottoms down. Her curves were revealed to me in the low-light, and her lack of underwear became apparent as I was able to see the glistening of her wetness. Like rain on the window, she reflected the lamplight between her thighs, and I wished beyond wish in that moment that I could smell her.\n\nIn lieu of one sense, I tested another; my palms smoothed out the warm, firm flesh of her backside, my thumbs reaching in to the crease where her thighs meet her sex, spreading her pink folds wide. As she was bent over, having watched me fuck myself to orgasm, and being frozen in that instant, I pressed my tongue to her wet sex; the musk and bitter-sweet of her flower soaked into my mouth as I tasted her, that first splash of pleasure washing over me like the warmth of alcohol.\n\nI moaned as I ate her, slathering my tongue and lips over her wetness, her juices smearing my nose and chin as I had my way with her. I wished beyond anything else that I was able to fuck her for real. To hear her moans as I sucked her clit, or to feel her fingers thread through my hair to urge me onwards. At the very least, to look into her eyes as she came on my tongue.\n\nAs I tasted her, I sat back, and watched a strand of wetness stretch from my lips to her pussy, and I looked at the tight knot of her arsehold. With a tentative heart, I kissed her pucker, and found her tasting clean - in fact, it was soapy, and I wondered if she was fresh out of the shower. Either way, within minutes I was working my tongue into her tight hole, as my thumb stayed on her clit and I threaded two fingers into her slick channel, fucking her unmoving, gorgeous figure, knowing the only thought in her mind as I went was of me.\n\nShe's going to think of me as she cums.\n\nI smirked, and wondered whether she was done. If my assault on her sex would be enough to make her orgasm to the thought of me. So, with a final, loving kiss, with a dab of tongue as a thank-you for her show way-back when, I sat back. I stood, pulling Lorna's pyjama's up as I went, before sliding her hand from the table to her sex, and slipped her middle finger into her slit. Then, as a parting gift, I pulled up her top, and gave myself a view of those hanging tits, and committed them to memory.\n\nThen, with a rush in my heart, and the taste of Lorna on my lips, I skirted my way back out of the house, across the road in the rain, and back into my own bedroom as fast as I could.\n\nThen, as I crawled back into my bed, I shifted until I could see her - the blur of Lorna's image through the glass and the rain; the glow of light on the pink of her nipples almost indistinguishable from the rest of her.",
        "In fact, as I looked, I suddenly became very worried she hadn't been watching me at all. That, in movement, she wouldn't have been able to see me through the rain, and that her slickness was all to do with something else. \n\nEither way, as the pressure built, I let the world snap back into life, and I watched through the muddled glass as Lorna shuddered and dropped out of view.\n\nAnd, to myself, I smiled, wondering if she had cum to the thought of me. Even if she hadn't, I knew now how her sex tasted. Call it an intrusion, but in that moment it was near impossible to care - the closure of the buddin bisexual's dream coming true was enough to justify it for me.\n\nBesides, Lorna would never know. All she knew was that she had a great orgasm, and that it came out of nowhere. And she might have another one. Who knew.\n\nThen, I watched as she pulled herself up, and through the rain and the glass and the distance, I could have sworn that our eyes met. Locked. A moment passed, where communication was impossible, and we stared at each other. As far as she knew, both of us had just came in unison, and now we were looking one another dead in the eye - a sign of our... inspirations aligning.\n\nAnd so, with all the awkwardness of a bisexual disaster staring her crush in the face, I waved.\n\nI fucking waved.\n\nFrom across the street, I could have sworn I heard her laugh at me, the warmth in her face impossible to fake, and the dipping of her head a clear give away. Then, she looked back up, and I felt like it was two years ago, and I was back as a longing eighteen-year-old baby bi with no idea what to do. Only, this time, Lorna was looking back.\n\nAnd then, she was gone. Slinking back into the dark, and out of the stream of light gifted by the streetlight, and I followed, back into my own darkness.\n\n* * * * *\n\nI woke to the buzzing of my phone. In the blur of early-morning half-wakefulness, for a moment I believed I was back in the flat, and the unfamiliar layout of the room made me panic - but then reality seeped in, and I remembered what had happened.\n\nI sighed, annoyed at myself for the lust-drunk violation of Lorna, before the constant BZZ-BZZ-BZZ threatened to drive me insane and I grabbed the phone, opening it.\n\n'Brooke?' I heard, and I recognised the voice before I even bothered to read the name at the top of the screen.\n\n'Kloe?'\n\n'So, were you planning on telling us you weren't coming home?'\n\nI sighed, sitting up and rubbing my eyes. 'Sorry.'\n\n'We were worried sick, B. Ryan thought you'd gotten yourself killed. Shannon's been locked away in her room, not talking to anyone. Fuck, I didn't know what to think.'\n\n'You could have called yesterday,' I reminded her.\n\n'I didn't know you were gone until this morning! Me and Ryan got up, and you... just weren't here.'\n\nI stayed quiet for a moment. 'I'm back at my mum's.' Kloe sighed, knowing enough to know it was smarter not to give her opinion. She hated my mum, and not for no good reason, but she knew right now that saying it wouldn't help anything. 'And it's seven in the morning - I'm never up by now.'\n\n'Eh,' she said, dismissing it. 'I wanted to wake you up, and you weren't there.'\n\n'When?'\n\n'About ten minutes ago.'\n\n'So,' I laughed, 'when you said you were worried sick, you mean that you saw my bed empty and you called me?'\n\nA pause. 'Yes.'\n\nI laughed. 'Thanks, Kloe. I should be back today, so.'\n\n'Nice. Let me know if, you know. You need to talk. If you're back there...'\n\nI looked at the laptop, and held back any more information than I had to give. 'Yeah.'\n\n'Love you,' she said, before hanging up. I dropped my phone into the bedding, and sat there for a moment, as the previous day swam back in my memory.\n\nA knock at the door made me jump, and I watched unmoving as my mother pushed my bedroom door open. It creaked, and gave way to her peering face.\n\n'Hey sweetheart - thought I heard you up,' she said.\n\nI nodded, cracking my neck. 'I'll be heading back soon - thanks for giving me the, uh, the box.'\n\nShe nodded, hanging in the doorway awkwardly. 'I know we haven't had... that we're not...'\n\nI shrugged, knowing that what she was trying to say wasn't going to do much to help anyone. 'It's okay, mum. We are who we are.'\n\n'You were always so much more like him, and when he stopped loving me... I guess I pushed that onto you, as well. Unfairly.'\n\nDidn't expect that.\n\n'You were so young,' she said. 'When everything started to fall apart... he just seemed like a totally different person, overnight. He'd go from panicky and stressed, to... serene. Loving. It was horrid, the way he changed.' She saw the look on my face, and straightened. 'All I'm saying is, whatever he left you, whatever message you got from him, I hope he gave it on a good day.'\n\nI nodded, not knowing what to say. 'Thanks.'\n\nShe tapped the doorframe, and slipped away, pulling it shut behind her. I waited a moment, before bouncing up and going to the laptop. I pulled out the USB, putting it in the box, and locking it. I paused, looking out the window, the rain from last night having left dark stains on the pavement where the sunlight hadn't reached yet, and the trees looked fresh and greener than usual today. Across the road, I saw the window of Lorna's room, and swallowed a smile. That night was, in a way, nothing. And yet, it had given me something I hadn't expected.\n\nAnd, from what I'd seen, she'd enjoyed herself, too.\n\nSo, with the box under-arm, I made my way downstairs, and used my phone to book myself a bus ticket for midday. I planned to finish the USBs somewhere I would be able to ensure my privacy, and then perhaps start my own journal - seeing as the one dad left me had gone walk-about.\n\nPlus, I still needed to have that talk with Shannon. She deserved to know the truth, even if I was planning to undo it later. For now, the Shannon that was alive right now, with the memories she had, and after what she'd been through... because of me... she deserved to know the truth. At least for now.\n\nCHAPTER THIRTEEN - THE CONFESSION\n\nCarrying the backpack I'd borrowed off of mum as I walked through the city towards home, I kept expecting a call from Hugo. He'd asked me to keep practicing, before calling my mum and finding out not only that I was there, but the address of where I lived normally. He knew more than he should.\n\nAnd, of course, I knew why he wanted to, now. I knew the reason he had gotten close to me. But, he'd made a mistake that he didn't make with my dad - he'd gotten to me after the cut-off. As soon as I knew how to roll back time, I had decided I was going to go back to the day my father died. Start this whole thing again, without Hugo ever getting close. After all, he sent that letter to me, and had hoped for me get in touch. All I had to do was... not that.\n\nBut, I had a sneaky feeling that, if I was going to try and turn back time, even if only by a few days (as opposed to decades, as dad had managed), I was going to have to practice more with my ability. And, if that took time, I'd have to inhabit this timeline for a bit longer - which meant there was someone I needed to talk to.\n\n'Is Shannon still not coming out?' I asked, the back on my back heavy enough to be uncomfortable.\n\n'Not yet,' Kloe said. 'You're back in the city, then?'\n\n'Just walking back now,' I told her.\n\n'You want a lift?'\n\n'Nah,' I said. 'I like the air.'\n\nKloe paused. 'You know, at some point, you're going to have to tell me what's going on.'\n\nI smiled. She always knew when something was up. 'Maybe,' I said. 'Time'll tell.'\n\n'Sure,' she said, not exactly making an effort to hide the playful doubt in her voice. 'Get home safe.'\n\n'See you soon,' I said, before Kloe hung up.\n\nThe trip home was calm, and the fresh air was soothing to the tightness in my chest. All up until I passed the train station, in the center of town. As I passed, all I could think about was the coffee shop inside. I wondered, as I quickened my pace and took an early left turn to avoid being closer to the building than I had to be, whether Hugo was inside, coffee-in-hand, plotting how he was going to... to do what he wanted to do.\n\nWhich raised a question.\n\nWas he planning to rape me? Or... seduce me, somehow? Maybe he would try to strike a deal. If I gave him a child, he would make it quick.\n\nThe guy was rich beyond my knowledge, and I knew him and my father, before I was born, worked together not only to figure all of this out, but to use his power to develop the capital to fund their research. At least, I figured they had done that. If he wanted to pay someone to snatch me up in the street, he could. Theoretically. And, after all, I would be able to stop, pause time and get away. Which meant he probably wouldn't do anything so brazen.\n\nOf course, my mind also drifted to the last time I was in there - with that bitch lawyer. What I'd done to her was similar to what I'd done to Lorna, only that lawyer deserved the humiliation. With Lorna, it was more of a thank-you, in the privacy of her own room, while she herself snooped on me to watch me cum.\n\nIt wasn't long before I was home; or, at least, standing in front of the brown front door of our flat. For a minute or so, I struggled to make myself go inside, knowing that Kloe wanted to know what was going on, and Shannon knew she'd seen something no one but me could explain. Ryan, to his credit, had been a direct recipient, and yet hadn't noticed a damn thing.\n\nThinking about that night, with Ryan and Penny... for some reason, that was the thing that gave me the energy to go up the stone steps outside our flat, push in my key, and let myself in.\n\nAs soon as I did, I saw Kloe at the end of the hall, her eyes wide as she saw me, before her hand went to her hip and her eyebrow hitched up in that way it does.\n\n'And where the fuck have you been?'\n\n'...Outside?'\n\nShe nodded. 'For, like, a million years. You scared of us?'\n\nI looked up the stairwell, knowing Shannon was up there, in her room, hiding away. 'Not you,' I said.\n\nKloe registered what I was saying, and turned away, making me realise that Ryan and Penny were there with her in the kitchen, all of them sharing a late-afternoon dish of ramen. Students are always students.\n\n'What's in the bag?' Ryan asked as I started to scale the stairs.\n\n'Drugs and porn,' I answered casually, to which he nodded and went back to his noodles.\n\nUpstairs, there was an uneasy quiet. I knew that no one else was up here - no one except me and Shannon. My feet felt heavy on the floor, and the simple shifting of my backpack on my bag seemed louder than the street I'd only just come in from.\n\nI hesitated outside my own room, pushing open the door enough to throw in the bag, landing it on my bed happily. After that, I passed Ryan's room, and saw Shannon's door across the way, shut fast.\n\nThe door was a blank, white-ish thing, like all of them, but it was oddly imposing. My stomach twisted, as I knew that whatever happened after this conversation, there was no going back.\n\nI knocked twice.\n\nSilence. No answer.\n\n'Shannon? It's Brooke... we need to talk.'\n\nAnother silence, followed by the quiet creaking of her bedsprings. After a second or two, I heard the sound of her lock clicking open. It opened an inch, and I saw Shannon's brown eyes, soft and fearful, looking at me.\n\n'Shannon,' I said, keeping calm despite the sense of imposing dread rising within me. 'Let me in? Please?'\n\nShe stared at me, her expression hardening for a moment. 'If I didn't, would you be able to get yourself inside anyway?'\n\nI paused, and my hesitation seemed to answer her.\n\n'Do it,' she said, almost hissing. 'Show me I wasn't crazy.'\n\n'You're not crazy-'\n\n'Then do it.'\n\nI realised, in that moment, that she had no idea what she'd seen. She was half-convinced it was some sort of hallucination, or that she'd had a mental break. If I was a worse person, I might have followed that, and let her doubt herself into eternity.\n\nOnly, I knew that wasn't going to do her any good. And I wasn't about to do her any more harm.\n\nSo, I took a breath, closed my eyes, and did what I needed to. I brought to memory the circumstances of Shannon's discovery - Bryson, his cock, and the time I'd spent enjoying it. I remembered the smell of Shannon's wetness on my fingers, as I teased her into arousal.\n\nThe memory, while tainted, was enough for me to feel that warmth flow into me as I tapped into that piece of me the power relied on. Lust, pleasure, sensuality.\n\nThen, I focused on those trigger words.\n\nTime Isn't Real.\n\nThe quiet of the uneasy upstairs became completely silent. Shannon's fearful, inquisitive expression froze in place.\n\nCarefully, I pushed the door open, brushing it past Shannon's chest as it swung inwards. I reached in, and peeled her fingers off the wood of the door so it didn't pull her over, before opening it enough to slip past her and get inside.\n\nOnce I was in, I saw the mess of Shannon's room in all of its glory. Her bed was trashed, the covers and at least two blankets strewn around a lump of pillows; her clothes were in a lump on the floor, and her own 'office' area - a small wooden desk pressed into the back corner - was covered in the remnants of takeaway food she must have gotten in last night to avoid cooking.\n\nIt was the beginnings of a depression nest. Retreating from not just her flatmates, and not just me, but from herself. Her responsibilities to herself.\n\nThen, just as I was about to resume the world, I saw something that made me feel like I was intruding beyond the simple act of inviting myself into her room. It was there, between the folds of her bedding. A red sex-toy, still slick with her wetness.\n\nI turned away, happy to have not seen that, and said the words.\n\nTime Isn't Real.\n\nShannon sucked in a breath as she witnessed me, for the second time, vanish before her. For a moment, she held still. Not still enough, of course. Frozen within herself, not time.\n\nThen, she turned. Her face as white as a sheet, she pushed the door shut, and looked me in the eye, a slight shake in her lip. Without a word, she crossed the room, not saying a word, before taking a seat on her small chair across from me. I copied, sitting on the end of her bed, trying not to think about what was also on the bed, behind me.\n\nFor a moment, she just... stared. I wondered if I should say something, break the silence.\n\n'How?' she asked, taking me by surprise.\n\nI considered trying to lie, but it seemed like we were well past that.\n\n'I inherited it,' I told her, the truth spilling from me like red wine onto a white carpet. 'My father died two days ago, and passed it on to me.'\n\nShannon blinked, absorbing in, but otherwise did nothing. She just watched, and let the silence sit for a few seconds, before I felt the need to fill it.\n\n'I... I have these trigger words, plus... well, I have to be in a certain headspace. With the... headspace, and the words, I'm able to make time... stop.'\n\nHer eye twitched at this, and her fingers fidgeted. 'Stop?'\n\nI nodded. 'Yeah. And, I was left some things by my father - videos. I haven't watched all of them, yet, but I can do other things, too.'\n\nHer jaw tightened. 'Like what?'\n\n'I can reverse time,' I said, trying to find some kind of balance between it sounding absolutely ludicrous, and pompous as fuck. 'I mean, I can't... yet. But, it's something that I am apparently able to do, with training.'\n\n'Training?' Shannon's voice was sharp, and her eyes were suddenly filled with fury. 'Training? Is that what it was, Brooke? What happened to me - what you did to me - was that training?'\n\n'No!' I shouted, realising straight away that it sounded defensive. So, I tried again, quieter. 'No. I was... that was...'\n\n'Tell me,' she said, her hands gripping the chair arms, like she was physically having to hold herself down.\n\n'That headspace?' I said, closing my eyes to avoid having to look at her. 'I have to be... aroused. Horny. Whatever. It's the mental trigger.'\n\nSilence. I opened one eye and peeked at her, and watched as her face twisted into a strange sort of smile.\n\nThen, she laughed.\n\nA full, deep-belly laugh that had her almost double over as she recovered, before looking up at me, red in the face.\n\n'That's fucked up,' she said, and I felt myself crack, too.\n\nI let out a laugh that Shannon echoed, and within a moment we were both just hollering, wiping our eyes and taking deep breaths.\n\nThen, after a minute or so, the room fell quiet again. Shannon looked up at me, loosened by the laughter, but with a seriousness that quickly seeped back into her eyes.\n\n'So... what you did with Bryson...'\n\n'I thought... I didn't know what he was like. I thought that you, and him... that you liked him. And, I wanted to nudge you towards him. And him towards you.'\n\nShannon looked at me, the echoes of laughter on her face. She sat back, and ran her fingers through her hair. 'I did like him,' she said, like it was an admission of some crime. 'So, I guess I was as blind to it as you.'\n\nI nodded. 'I'm so sorry, Shannon. Without me... he wouldn't have...'\n\nBut she shook her head. 'No, it wasn't you, Brooke. It was him.' Then, like a lightbulb going off, she sat forwards. 'Hold on... afterwards, when he was suddenly outside-'\n\n'Yeah, that was me, too,' I said. Shannon's smile reappeared on her face, and she pointed at me.\n\n'I liked that,' she said.\n\n'Me too,' I laughed, and she sighed. 'But it doesn't undo what I did to you.'\n\nShannon closed her eyes, and waved her hands like she was shaking away the fog. 'Hold on - so, how does it work? Because, to me, I was just getting, like... more and more turned on with each second. It felt like...' She paused, and her eyes locked me on. 'Did you feel me up?'\n\nDeciding to side-step a little, I said, 'Whatever I do to people when everything is... paused, those reactions catch up afterwards. So, if I slap someone, they'd feel it when I started time again. If I hit someone a thousand times-'\n\n'They'd feel all of it at once,' Shannon finished. I nodded. 'So. Did you? Feel me up?'\n\nI sighed. And nodded.\n\n'Wow,' she said. Her fingers twisted between each other. 'So... you did feel me up.'\n\nTime to be honest. 'Shannon, I did more than that.'\n\nShe held my gaze. 'I know. Between instants, it was like... like someone was... did you...?' and she kind of hovered her hands over her chest.\n\nI nodded.\n\nShe bit her lip, and nodded. 'And...' She pointed downwards, towards her lap. I nodded again. 'Okay.'\n\nShannon shifted in her chair, just adjusting her seat, and I frowned. Things felt... off.\n\n'Shannon, what's going on?' I asked, and she sighed, her hands going to her face.\n\n'I'm going crazy,' she said into her palms. I moved, quickly going forwards, onto my knees, to go to her.\n\n'You're not going crazy,' I told her, my voice soft as I took one of her hands in mine. 'Shannon - this is all real. I know it's nut, but-'\n\n'Not that,' she said, wrapping her other hand around mine, until we were just gripping each other's fingers in a mesh of attempted connection. 'It's just... since that happened, I haven't been able to stop thinking about it. Like, at all. I googled it, and apparently it a common response after the shock - for the brain to try and organise something painful as something... pleasurable. But, Brooke - I literally haven't been able to stop.'",
        "I looked at her, putting together the innuendo of her words, and as she stared at me intently, my mind flicked to the still-wet toy in her bed.\n\n'Oh. OH.'\n\n'Yeah,' she said, nodding. 'I'm a freak.'\n\nI shook my head. 'No - you're not a freak, Shannon. It's the same for me. What happened was... awful. But, I promise you, you're safe. I'll keep you safe. Nothing like that will happen, ever again.'\n\nShannon smiled, even though I knew it was a bit of a performance.\n\n'Brooke... will you help me?'\n\nI nodded, squeezing her hands. 'Of course - I will do anything to help you, Shannon.'\n\n'No,' she said, her hand slipping out from under mine, only to place it on top softly. 'Will you... help me?'\n\nI looked up at her, and she was staring a hole into my soul. 'Really?'\n\n'I need someone else to think about,' she said, a shiver going through her. 'And... yesterday, it wasn't him who made me feel that way. It was you. Besides, I still don't know if I believe you.'\n\nA smirk tugged at the edge of her lip, and I tried to figure out if she was serious. 'You want proof? I'll show you proof,' I said. Then, 'Time Isn't Real.'\n\nCHAPTER FOURTEEN - THE PROOF\n\nShannon was frozen in front of me, and I knew I would have to do something to keep myself... in the zone, so that I could keep this going longer. But, I figured I was hyped up enough from what she'd said to give me a few extra minutes.\n\nSo, I started by going around her room. I knew she had that red toy - and I planned on doing some terrible things with it now I knew it was there, and what Shannon had used it for - but I wanted to know what else she had.\n\nShannon was the shy, quiet one of our friends - and I was certain that she was a bit of a freak, too. All I had to do was find my own evidence.\n\nI started with the bedside tables - they both had top drawers, but neither of them yielded any results. In the corner of my eye, I kept noticing that splash of red between the sheets, and knew I would always have that as a back-up if needed.\n\nEven so, I eventually found Shannon's box of shame - a literal shoebox under the bed. Popping it open, I found a relatively sorry set - some cheap nipple clamps, a blindfold, another, smaller dildo, and two sets of handcuffs.\n\nI bit my lip, getting an idea.\n\nI grabbed them, throwing them to the bed, and turned to Shannon. She was as I'd left her - on the chair, leaning forwards, a glint of excitement in her eye.\n\n'She wants proof,' I told myself, as I went to her.\n\nTo start my... messing, and to keep my arousal ticking-clock going, I leaned in and left a long, soft kiss on her lips.\n\nEven here, when time stopped her lips from moving back against me, or from pressing back into me, or parting as an invitation for my tongue, I felt the warmth glowing off her as we made contact.\n\nThen, I put my hands to her armpits, and lifted. She wasn't heavy anyway, but the lack of gravity affecting her meant all I had to do was get her off the chair. Then, as she hovered in the air, I could push her across the room, until she hovered over her bed.\n\nI pushed her down, flipped her face-up, until her back was oddly pressed into the bed, her legs curled up beneath her and her arms acting out where the 'arms' of the chair had been. It took me less than a minute, before I had her spread-eagle on the bed - still fully dressed, of course - and took her handcuffs. Slotting one set around her left hand, and then to the left notch on the bed frame, and then the same to her right, I made sure she was well and truly at my mercy.\n\nWith a knot in my stomach, and before I did anything else, I needed to know whether she was horny before I'd even started. Because, let's be honest, she was going to be when I finished.\n\nSo, I tugged at the waist of her jogging bottoms, maroon and branded with a name I half-recognised, until they were halfway down her soft thighs. I spread them ever so slightly, so I had access to her simple black panties. The material was dark enough so that I wasn't quite able to tell whether she was wet or not, so I did the only logical thing there was for me to do.\n\nI pushed her thighs apart, shuffled myself between her legs, and pressed my tongue to the fabric, and tasted the slickness of her sex that had sept into her underwear. She was soft, and while I didn't go beneath the fabric, I knew that when I started time up again, Shannon was going to feel the slick of my tongue against her sex, tied to her own bed.\n\nWhat she felt of that, I was about to find out.\n\nI sat back, looking down at her, joggers pulled down, her tank top ruffled and slightly riding up over her navel, those excited eyes looking out into thin air.\n\nWith an evil thought, I grabbed the blindfold from her shoebox, and pulled it over her eyes.\n\nThen, I sat back, and said the words.\n\n'Time Isn't Real.'\n\nShannon reacted immediately, gasping as she was all of a sudden dropping a half-inch onto her bed, her center of gravity turned by 90 degrees, her arms bound and her eyes covered.\n\nAfter a moment, she settled. 'What the fuck?' she asked, a half-laugh in her voice. I was kneeling between her feet, and as I shifted, she pointed her blinded face at me, trying to get a feel for the situation. She tugged at her handcuffs, and squeezed her thighs together feeling the way she'd been undressed.\n\n'How was that?' I asked, genuinely curious to get feedback. 'I've never been able to to talk to anyone about this, so...'\n\n'It's so strange,' she said. 'It literally... I was between breaths. And all of a sudden, I'm blind, and I feel like I'm upside down and falling, I can't move... it was kind of scary, to be honest.'\n\nI put my hand on her shin, stroking it slightly. 'Sorry.'\n\n'No!' she replied, a little too fast. 'No, it's... it's fine.'\n\n'Well, Shannon,' I said, leaning over her, putting my hands either side of her chest. She lay back beneath me, able to tell I was looming over her. 'As the first person able to tell me what it feels like, I'm going to do whatever I can to make sure you get the full treatment.'\n\n'The full treatment?' Shannona asked, slightly breathless. I realised she was rubbing her thighs together beneath me, so I decided to get up and off her. She frowned. 'Where are you going?'\n\n'I'm not going to leave this chair,' I said, sitting down. I pulled my phone out of my pocket, and popped it on the desk next to me, making sure I had a good view of Shannon's restrained form, and set it to video. 'At least, not in any way you'll be able to tell.'\n\nThen, before she was able to react, I pressed Record, and thought those magic words - Time Isn't Real. \n\nShannon, about to speak, had stopped with her head back and her mouth wide open; her legs, squeezed together, were an inviting challenge, and her tee desperately needed to be removed from the equation.\n\nSo, I started small.\n\nI got myself up onto the bed, straddling her waist, and began to kiss her neck. The soft of her collar bone, warm against my lips, was so... intimate, that it quickly became her jaw line, and then her bottom lip. Before I knew it, I had my mouth over hers, open and welcoming, with my tongue exploring the wet depths of her.\n\nAs I sat back, I pulled her blue t-shirt up over the swell of her chest. She wasn't wearing a bra, and as she lay on her back they had pooled slightly - in the way larger breasts do - and her nipples were like tiny erasers atop them, just begging for attention.\n\nI started just by cupping her bust in my hands, fondling her pleasantly, squeezing softly and dragging her nipples beneath my palms as I moved. I imagined her moaning and writhing beneath me, and hoped that, when I started everything back up again, she would moan the way I imagined.\n\nI managed to stop myself, not wanting to go too far too quickly, and pulled her top down. Then, I swung my leg over her, went back to the chair, and took a breath. I was riled up now, my heart beating quickly, and my own wetness making itself near unignorable. I'd have to do something about that sooner rather than later, I knew.\n\nTime Isn't Real, I thought, and Shannon's half-formed word turned into an unexpected moan.\n\n'Wh-aaoaooooh! OH wow,' she whimpered, her back arching under the unseen fondling of her beautiful breasts, her head turning as though my lips were on her. I watched, rapt, as she reacted to each of the things I'd done to her, all at once - overwhelming her.\n\n'How does it feel, Shannon?'\n\n'So good,' she moaned, her hips rolling as she writhed in the bed, arms still pinned up and out. 'What did you do?'\n\nTime Isn't Real.\n\nShe froze again, and this time I stepped it up. I put myself between her feet, and tugged her jogging bottoms off her legs fully; this pulled her legs straight, so when I went to open her up for access she wound up with her legs stock-straight pointing out in a 2-10, which more than anything just made me laugh.\n\nThen, I saw the slickness shimmering on her crotch - not just a spot, but most of the panel of fabric over her folds was wet through, and all humour went out of me.\n\nI nestled myself down, so my face was inches from Shannon's sex, locking my arms around her thighs. The inside of her thighs were silky-soft against my cheeks, and then my lips, as I kissed my way upwards, spotting her flesh with dots of wetness as my tongue trailed her. I moaned against her left thigh, stopping as I reached her lips, trapped behind her panties, and swapped to the right. I trailed my fingers beneath the legs of her underwear, the slight fuzz of public hair making me smile as I made out with her legs.\n\nThen, I sat back, breathed out as I looked down upon the spread legs and soaked crotch of my friend, her mouth open mid-moan, her nipples pressing through the fabric of her top, and let my fingers drift to my own sex.\n\nI was soaked, and within a moment of my fingertips gliding over my folds, I knew it wouldn't take much for me to cum. So, I resisted, got back in the chair, and braced myself.\n\nTime Isn't Real, I thought, focusing my mind in that way - which was becoming easier and easier with each attempt - and watched the world spin back into activity.\n\n'Oh shit,' Shannon moaned as her legs dropped to the bed, flexing as my ministrations on and around her sex catch up with her.\n\n'What can you feel?'\n\n'Your tongue,' she whimpered, bucking slightly against the air. 'God, it's like a million kisses and licks, all at once - fuck - Brooke I could get used to this.'\n\nI laughed. 'Well... how far do you want to go?'\n\n'So far,' she moaned, pulling performatively against her bindings, stretching and arching her back as she humped the nothing where my head had been.\n\n'Do you want me to make you cum?'\n\nShe nodded. 'Oh, God, yes,' she moaned.\n\n'How hard?' I asked, having to resist touching myself in any way as I watched her writhe.\n\n'Fuck me,' she moaned, calming slightly as her hands gripped the handcuffs, and her chest rose and fell with each shuddering breath. 'Please, Brooke - whatever you just did, I want more.'\n\n'As you wish,' I said.\n\nTime Isn't Real.\n\nWasting no time, I just about dove on her, yanking off her underwear and exposing the wet of her sex to me. Her folds, glistening and pink, welcomed me down as I settled into position, arms wrapping around her hips again.\n\nI started tentatively, kissing her mound; when I felt the soft squish of her juices on my chin and lower lip, I knew I had to go deeper. Harder.\n\nSo, I started to slather her clit with my tongue, sucking her nub and her folds and the curved of her thighs in loving, lathering slurps. Her juices covered my face as I ate her, moaning into her sex as I tasted the sweet-sour of her lust and pleasure, gripping her hips as I rocked myself into her, fucking her with my tongue and face.\n\nAs the heat got to me, I reared back, pulling my own top up and off, throwing it to the floor. Then, quickly after, my bra, unclipped and discarded. I unzipped my jeans and kicked them off, before settling back between Shannons' legs wearing only my socks and my own wet-through panties.\n\nFor what must have been an easy twenty minutes - though it was, obviously, impossible to tell - I worshipped Shannon's sweet sex, my tongue and fingers playing with her in any which way I could think of, until I was near the edge.\n\nThere's only so much a girl could do without getting anything back.\n\nSo, I pulled off my own underwear, and hopped out of the gap between Shannon's legs, and straddled her face instead. Her mouth was open, and with the blindfold on I had no worries of getting fluid in her eyes by accident - so, I settled myself on her face.\n\n'Oh shit,' I whimpered as the contours of her face slipped against me; her nose dipped slightly into me, breaking the seal, and as I rolled my hips her lip dragged against my clit in a way that made me whimper. I pulled her top up towards me, and spent some time teasing her gorgeous nipples as I ground myself all over her face, the constant slk, slk, slk of my wetness beating a soft rhythm matched only by my panting.\n\nI dropped forwards, kissing her stomach down to her fuzzy mound as I fucked myself against the ridges of her nose. I slathered my tongue against her, moaning into her clit as I got closer, and closer, and closer, the pent-up frustrations and sexual tension within me overflowing as I used Shannon for my own pleasure.\n\nAnd I knew - knew - that when I came she would snap back into movement. And, I kind of wanted to see what would happen. If Shannon woke up as I came on her face, all of my assault on her sex slamming into her at once.\n\nYeah.\n\nThat I needed to see.\n\nSo, I fucked her. I rode her face, and ate her pussy, until I could feel the sparks of pleasure as they threaded through me, fireworks behind my eyes, as I pushed myself over the line.\n\n'Fuck, fuck, fuck,' I moaned into her as I came, the pleasure rippling through me. And then, all of a sudden.\n\n'FFMMHhhhhhhhmmmff!!'\n\nShannon exploded into her orgasm, her mouth screaming into my sex as I came atop her; her body flexed under me, legs raising up to clamp my head between her thighs as she came onto my face, her wetness soaking me as we writhed in bliss, loud and unthinking and uncaring.\n\nEventually, I rolled off her, sitting at the edge of the bed as I looked down at a red-faced, blind-folded Shannon. I pulled the thing off her eyes, and she looked at me with glassy, unfocused eyes, and she smiled into a lazy laugh as we just... looked at each other.\n\n'Holy shit,' she smiled as I stood, turning off the recording phone, saving it for myself.\n\n'Good?' I asked, and she just started laughing again. 'I'll take that as a yes.'\n\nCHAPTER FIFTEEN - THE POINT\n\nAn hour or so later, after me and Shannon had taken a moment to... sort ourselves out, I was back in my room. It had only been one night, and yet it seemed like a lifetime ago since I was last here. Before everything with Bryson, before discovering I was able to turn back time. The world was upside down, now.\n\nSpeaking of which.\n\nI plugged USB number three into my laptop, the backpack on the floor open an up-ended in my cum-drunk hurry to figure out what the fuck I was supposed to do next.\n\nI knew, at some point, I would have to face Hugo. But not yet. First, I needed to get myself clued up on what I was able to do, and who I was.\n\nAs the video loaded, my face-down phone lit up, buzzing at me to complain I'd gotten a text. I flipped it over, and saw a message from Hugo.\n\n'The man himself,' I muttered as I pulled my headphones on, plugging those into the laptop as the video waited for me to press play. 'We'll get back to you, Hugo.'\n\nI pressed play.\n\n* * * * *\n\n'We saved you pizza,' Kloe chimed as I came down into the living room. Despite the fact that my whole world was slowly unspiralling, that little comment of normalcy, wrapped up in empathy, was... impactful.\n\nI went up to her, my goth-inspired, skinny-butch lesbian friend who was easily several inches taller than me, and gave her a big ol' hug.\n\n'Thanks,' I mumbled into her shoulder.\n\n'N'aw,' she mumbled, wrapping her arms around me and giving me a squeeze.\n\n'What kind of pizza?' I muttered.\n\n'Pepperoni,' she said. She leaned back, holding my shoulders. 'Where ya been all day?'\n\nI saw, through the bay window our living room boasted, that the sun had set. 'Watching videos of my dad,' I said. Kloe's eyes were soft, despite her cut-throat eyeliner, and invited me to say more. 'I went back to my mum's because he left me stuff. Recordings. Advice, stuff like that - I guess, because he knew he was dying.'\n\nKloe nodded, and hugged me again, and I accepted it happily.\n\nThen, after she let me go, her, Ryan, Shannon and I sat in our living room, watched shitty TV, drank gin (or, if you're Ryan, homemade rum-and-cokes) and ate slightly-cold pepperoni pizza, for a good few hours. At some point, Ryan peeled away to his girlfriend, and Shannon retired to bed after something of a tiring day, so me and Kloe were left together.\n\nShe shuffled over to me on the sofa, as a bad Australian reality show set on a boat-hotel rattled on in the background, and gave me a look.\n\n'What?' I asked.\n\n'I'm not hurt,' she said. 'I know you've been through... a lot lately, and I don't expect you to keep up with everything-'\n\n'Oh my God,' I gasped, realising.\n\n'-but I just wanted to bring it up.'\n\n'It's your birthday tomorrow,' I said, nodding.\n\nKloe brightened a little, obviously happy that I'd remembered. She grinned at me, but it turned a little into a cringe. 'I'm sorry, dude - I thought you were going to forget.'\n\nI nodded. 'I'm a little drunk, but that's stupid.'\n\nShe smiled. 'Sorry.'\n\n'The sorry is what's stupid. I've been... a mess. For ages. And my dad dying didn't help,' I said. Then, I stopped. That was the first time I'd said it out loud. Kloe noticed the change, and she put her arm around me, squeezing me in. 'I'll get you something really nice for your birthday,' I promised, but Kloe just gave a soft laugh.\n\n'Don't you mind me,' she said, her voice quiet enough to almost be lost in the noise of the TV. 'This is a gift, Brooke. Just you an' me.'\n\n'Yeah?' I asked, looking up at her. For a moment, she was so close to me - the drink, and the brain-fog of the general ridiculousness of the day almost pushed me to lean in. To kiss those black lips, and feel her against me.\n\nBut that was a bad idea. You don't go back from something like that. I'd already gone there with Shannon, and I wasn't prepared to lose Kloe as a friend.\n\n'If you could go back in time,' I asked, leaning my head on her shoulder, 'what day would you go back to, to live over again?'\n\nKloe shrugged. 'Maybe the day I met Billie Piper. I feel like, knowing what I know now, I could have had a shot with her.'\n\nI laughed softly, and I could feel her smile in the way she squeezed me.\n\n'This is a nice night, though,' she continued. 'If you fancy topping this, I think that might be a good goal for you.'\n\n'Hmm?' I asked.\n\n'I'm just saying,' she shrugged. 'That sounds like a nice way to live your life. Trying to make days that, if you could, you'd want to go back to, and live in them all over. Imagine having a load of those. Some people think that, when you die, you play through your life again, like on spectator mode. If you had a load of really good days, I could imagine that being really nice.'",
        "I nodded, knowing this was turning into one of those nights. 'Yeah.'\n\n'I'm babbling nonsense,' she said. 'Drunk. Late. Sleepy.'\n\n'Too full of pizza to move,' I complained, splaying over her like a cat. I ended up laying on her lap, facing up at her. She peered down at me, a look on her face I couldn't place.\n\nI'm going back to yesterday anyway, I thought, justifying a bad decision with a half-hearted plan. And she looks like she wants to kiss you, too.\n\nI sat up, fuelled by a mix of to-the-wind carelessness and dutch courage, and pressed my lips to her.\n\n'Hm!' she chirped as I kissed her, and for an instant I wondered if I'd made the worst mistake.\n\nThen, her hand snaked behind me, cupping my head and sliding into my hair as her eyes fluttered closed. My hand went to her neck, her jawline, as I kissed her. It was nothing like Shannon - Kloe was ready for this. And she gave as good as she got.\n\nHer tongue slipped into my mouth, and I moaned around it as one of her hands found the small of my back as I sat up. I was twisted towards her, so I folded one of my legs between us, turning awkwardly without breaking the kiss, ending up with me straddling her on the sofa.\n\nMy arms were either side of her head as we made out, moaning and gasping and whimpering as we made drunken sapphic love with our mouths, her hands exploring the curves of my waist, one settling on my butt as her fingers slipping under the fabric of my shirt. When I felt her fingers against my skin, I shuddered, and realised that there was no way this was stopping soon.\n\nWe were going all the way.\n\nI pulled off her, and in a quick movement I pulled my top up and off myself, and Kloe's hands went to my back, stroking my shoulder blades, down to the small of my back and up again, pulling me by the neck back into a kiss with her.\n\nShe looked so fucking good, smirking with that cocky grin as she easily undid the clasp of my bra. I whimpered as she tugged it off me, throwing it away as she kissed down my chin, my neck, my chest, before taking my nipple into those gothic lips.\n\n'Oh shit,' I whimpered as she suckled me, nibbling with perfect pressure, her tongue flicking over my hardening nub with expert dexterity.\n\nAs she did, I grabbed the bottom of her shirt, pulling it up. She leant back, letting me undress her, before she grabbed my waist and went to my other nipple, making me moan beneath her talented mouth. I leant back, letting her pop off me, and took her face in my hands as I kissed her again. Both of us wore slightly dizzy smiles, lost in the moment.\n\nThen, her hand slid against the soft of my belly, slipping downwards; her fingers were beneath the soft fabric of my pyjamas, but over my underwear, before I was able to say anything. And, I wouldn't have - as soon as I felt that contact, even through the material, I let out a lewd moan that Kloe seemed to feed on.\n\n'Point of no return,' she said into my ear as I rested my head on her shoulder, rolling my hips instinctively against her fingertips as she teased.\n\n'Please,' I whimpered. 'Kloe, please, fuck me.'\n\nShe kissed my neck, making me melt, as her fingers worked their way into the elastic of my underwear, while her other hand crept up my stomach. She tweaked my nipple as her fingers slipped between my wet folds, and she took my neck in her hand, squeezing in a way that wasn't painful, but the sudden dirty excitement that flooded through me was only amplified by her middle finger sliding into me.\n\n'Ohhhhhh,' I moaned, before she pulled me by the neck and kissed me as she worked her finger into me, quickly finding that spot within me. I whimpered into her lips as she took me, a second finger sliding into me and making me shudder, almost sending me over the edge as I humped into her lap, writhing against her. The swell of her black-bra-clad tits dragged against my damp nipples, sensitive from her suckling, as I ground my body against her.\n\n'Fuck,' she smiled into my mouth as I begged her. 'Brooke - you are fucking hot.'\n\nI clawed at the back of her neck as her thumb slid against my clit, her fingers working me over like it was nothing. 'Shit, Klo - Klo, I'm gonna - gonna - oh FUCK.'\n\n'Shhhh,' she teased, shushing me with her mouth - she kissed me as I came on her relentless fingers, shuddering into her lap as her tongue slid into my mouth again, her hand around my neck squeezing slightly as I came.\n\n'HmmffFF-HMF-FFFMmmm,' I groaned, unable to stop the shuddering of my body.\n\nIn fact, it was only after a half-minute or so that I realised Kloe had stopped moving - my orgasm had frozen the world, her tongue still inside my mouth, her hand around my neck, fingers deep inside my sex. It was... intoxicating.\n\nSo, I just rolled my hips, fucking those perfect fingers, the curve of her digits dragging into all of the best spots within me with each downwards movement. I slid my tongue around her, pinching my own nipples as she held me, frozen in her grip around my neck, as I fucked myself on her unmoving form closer, and closer, and closer--\n\n'Fuck, that's hot,' she moaned as I came again, reanimated as my eyes rolled, shuddering against her fingers.\n\nI saw stars, or fireworks, or everything, as she kissed me again, before sitting back. Her fingers slipped out of me, and I whimpered pathetically as I collapsed against her, her skin warm and flushed against me as I tried to catch my breath.\n\n'Thank you,' I giggled into her ear, and she smirked - she liked that.\n\n'Well, if I take you to bed, will you make it up to me?' she asked.\n\nI nodded, and Kloe stood, her hands beneath my butt, and I gripped around her neck as she lifted me, taking me to bed in an easy, powerful movement.\n\nThen, she had me make it up to her.\n\nFor hours.\n\nCHAPTER SIXTEEN - THE PLAN\n\nRyan laughed at me when I slinked out of Kloe's room in the morning, a wobble in my walk and a dumb smile on my face.\n\n'Good night?' he asked, and I nodded, wearing a mix of my pyjamas - salvaged from the livingroom floor by Kloe last night - and Kloe's tee, which was far too big for me and dipped beneath my knees.\n\nKloe followed, gave Ryan a knowing, smug grin that made me roll my eyes, before she went to the kitchen for her gross bran stuff. She might be awesome, but she was also a dancer, and her diet was strict. Save, of course, the trash food last night.\n\nThough, thinking about it, did she eat any of that pizza last night?\n\n'Happy Birthday,' Ryan chimed, the laugh in his voice barely beneath the surface. Then he turned to me. 'And to you.'\n\n'Shut up,' I smiled.\n\n'She's been wanting to do that for years, you know.'\n\nMy stomach twisted, but I didn't know why. 'Really?'\n\nRyan nodded, before leaning in. 'Shannon, too. She told me, drunk once. Ya little heart-throb. Don't know what you got, but all the girls want it.'\n\nI shrugged, smiling. 'I'm just that good.'\n\nHe laughed, before standing. 'I'm off - but I'll be back for tonight - you and Shannon are still sorting stuff out, right?'\n\nI hesitated. 'Yes.'\n\nHe narrowed his eyes at me, but let it go. 'Cool. See ya.'\n\nWith a wave, he was up and out of the flat. Shannon was nowhere to be seen, so it was just me and Kloe. She emerged from the kitchen, biting into a nutrition bar - and not one of the sugar-laden ones, she'd done her research - and plonked down into the chair to my right. Ryan had the TV set to that awful breakfast show, where presenters messed up cooking recipes and gave away bogus mortgage-deals live on air, before being low-level racist.\n\n'So,' she said, getting my attention. She smirked when I looked over.\n\n'What?' I laughed.\n\n'Last night. It was good,' she said.\n\nI nodded. 'Yeah, it was.'\n\n'I'll accept it as my birthday present, if you want.'\n\n'What, like... another, tonight? I mean-'\n\n'That's not- unless, you-'\n\n'OH! If you don't-'\n\n'No, I mean, I don't don't-'\n\n'So, you want... you want to?'\n\nShe softened, and burst into a silly laugh that I joined in with. 'Fuck, we're like teenagers. This is so dumb.'\n\nI nodded. 'We're grown-ups. No need to be silly about it.'\n\n'Agreed. Let's be mature,' Kloe said, steeling her face, even though a smile waited underneath.\n\n'Absolutely. Happy birthday, roommate.'\n\n'Thank you, friend.'\n\n'Your pussy is delicious.'\n\nShe spluttered into laughter, accidentally spitting some of her fucking nutrition bar across the room, which made me howl.\n\n* * * * *\n\nAs I pushed open my bedroom door, I was surprised to see someone sitting in my chair, watching the videos on my laptop.\n\n'Shannon?' I asked, and she turned, caught. She pulled off the headphones, standing quickly.\n\n'Sorry,' she said. 'I just... after yesterday... I needed to know.'\n\nI pulled the door shut behind me as I came in, and Shannon stepped to the side as I looked at the laptop. It was the same thing I'd watched last night.\n\n'What did you find out?' I asked.\n\n'You... can do that? Just... turn back time?'\n\nI gave a sigh. 'No. Not yet.'\n\n'But-'\n\n'I know what he said,' I said, closing the laptop. 'And... maybe, if I was able to do everything he said needs to happen. But I can't... not yet. I like this timeline, at least so far. And, once you go back, I'd have to live through it all again.'\n\nShe nodded. 'So... I, uh. Heard.'\n\n'Heard what?'\n\n'You. And Kloe.'\n\n'Oh. Oh. Oh, God - I'm sorry-'\n\n'Dude,' Shannon said, putting a hand up. 'Don't worry about it. You sounded like you had a good night, at least. And, me and you were just messing around, because this power... it's built around sex. So, you know. Don't worry about it.'\n\nI nodded, wondering if there was another reason she was being so nice about it.\n\n'I had a question,' she said. 'Are you going to try? Because you don't have to go far back. You could do what he said - just go back by, like, a minute.' She frowned at me. 'You haven't already, have you? Like, I'd have no way of being able to tell, if you'd rolled time back, and I was just here like an idiot-'\n\n'Shannon,' I said, stopping her. 'I haven't. It's like my dad said... I'd have to let go of everything here, even if it was just a minute I'd lose this conversation. How that man went back by entire lifetimes... I have no idea.'\n\n'I do,' she said softly, leaning against my desk as I sat in the chair. 'The chance to start over. Go back, do things differently. Try again.\n\nI nodded, and looked at the laptop, thinking of my dad. 'I can't go back far enough to fix my regrets. So, for me, forwards is the way, I think.' Then, my phone buzzed. Fuck. 'Unless...'\n\nI opened it up. Hugo.\n\n'Who's that?'\n\n'Hugo,' I said. Shannon frowned, and I figured that she must not have watched the video where he talked about Hugo's plan. Which was good. Knowing that might make her... I don't know. Worry. 'Could you give me a minute?'\n\nShe nodded. 'Sorry. For snooping.'\n\n'It's okay,' I said. 'It's nice to be able to talk about it.'\n\nShe stepped out, and pulled the door shut with a half-smile that made me think she was still feeling guilty - but I didn't have time to worry about that. My phone kept buzzing, impatient, until I answered.\n\n'Hello?'\n\n'Brooke,' Hugo sighed, sounding almost relieved. 'I'm glad I caught you - I know we only spoke recently, but some things have come to light-'\n\n'Yes, they have,' I said.\n\nHe paused. 'How do you mean?'\n\n'I mean, Hugo,' I said, perfectly ready to launch into an accusatory spiel about what I knew he wanted. But, I stopped myself. Just dumping everything I knew out in front of him would do nobody any good. Instead, I pivoted. 'I mean, my dad left me some stuff. Instructions.'\n\n'Ah,' he said, a lightness in his voice. 'He taught you about... going back.'\n\n'Yeah,' I said, rubbing my eyes as I stretched my neck out. Kloe had really done a number on me.\n\n'Then you should know,' he said, 'your father lived many lifetimes, and he always seemed happiest when he had you.'\n\nI sniffed, realising that, while I knew he was a snake, and I knew he wanted not only to murder me, but to use me to father a child, and then kill that child to get the ability, Hugo was about to make me cry.\n\n'Thanks,' I said, soft enough for my voice to avoid cracking.\n\n'I wonder if there was, perhaps, anything else in those instructions? About myself, perhaps?'\n\nI hesitated. He knew something was up. 'I haven't gone through all of it yet,' I lied, hoping it was a good enough bluff to hold him off.\n\n'In any event,' he said, sounding like he'd shaken the rain off his umbrella - trying to clear the conversation to move it the way he wanted. 'Perhaps we should meet. Your mother gave me your address - I can come by this afternoon?'\n\n'No,' I said, a hair too quickly. 'It's my flatmate's birthday today - we're having a party, so it's not the best day.'\n\nHe sighed, clearly frustrated. 'Tomorrow, then,' he said. Something in his voice told me that wasn't his intention. Something dark.\n\nBefore I could say anything else, he hung up.\n\nThe quiet unsettled me, so I turned to my laptop and pulled it open. Pulling the headphones on, I pressed play on the video Shannon had loaded up - straight away I knew which video it was.\n\nThis was where he went through what it took to turn back time.\n\nIt wasn't as simple as saying a few words, and being a bit horny. By comparison, stopping time was like swimming downwards; turning back time was more like feeling yourself start to drown, and intentionally doing nothing about it.\n\n'For it to work,' my father's voice said, for the second time, 'you have to be willing to let everything go. To walk away from whatever life you have built, from that version of the world. No matter if you're going back a minute, or a day, or a decade. You have to be willing to die.'\n\nHis face was stony, the truth of his words evident in his eyes. I wondered how many times he'd 'died'. How many lives he'd stopped, and started over in - for one reason or another.\n\n'But it's more than that,' he said. 'You have to be willing to kill, too.'\n\nMy heart sank as I listened to his words again. The weight of listening to this last night was what had led me to need Kloe's embrace - and, later, her company - and hearing it again was just as tough.\n\n'One life,' he continued. 'One of my lives, we had a large family. I stuck around, and you fell in love. I won't tell you his name, but... you had a family. Three children. And, because of Hugo, and my own fear, I wound time back to before they were born. I took them from you,' he admitted. Those cut-from-rock features of his face started to crack, his eyes watering just as they had the night before. His sickly way made the scene pitiful, but I couldn't help him. I couldn't do anything for him.\n\n'I lost that life, fine. But those kids... I loved them. I loved that version of you. After that one... I couldn't face you. I couldn't face what I'd done. So, if you are going to do anything like that, be ready for the regret, Brooke. Because you can't undo it. Once you start over, there's no way back. Be sure you want to leave.'\n\nI paused him again, having heard enough.\n\n* * * * *\n\nNearer to noon, I got a text from Ryan that made me panic, and then relax all within the space of, like, a minute.\n\nR // Hey! I'll cover you for Kloe's birthday - you've got enough on - just keep her home till we get back!\n\nI hadn't forgotten about the party - how could I? - but my responsibilities around it were a little lost on me. I was sure I'd been asked to get something - cake, drinks, invites or something. Maybe even just a present.\n\nWell, that I'd already taken care of.\n\nB // Nice one thanks Ry - you need anything else from me?\n\nR // If you end up going out, grab me some vodka\n\nR // and Penny wants a Solero\n\nR // but don't feel pressured to get that\n\nR // actually I want a solero too\n\nI let out a laugh as I read his texts - I needed that kind of normal. Light and stupid. It was reassuring. And, as I sat in the livingroom, laptop on my knees, scrolling through Kloe's facebook feed to watch the birthday platitudes roll in, I was happy for the distraction from my dad's videos, now safely copied to my online storage. Accessible any time.\n\nIt was a struggle not to obsess, I had to admit; especially as I knew Hugo was coming. And that something was... wrong.\n\n'What's he saying?' Kloe asked as she plopped down next to me, a selection of birthday cards in her hand. One by one, she opened them up, groaning with each family member's annual donation of charity.\n\n'Penny wants a solero,' I said as she pulled out a tenner from a card with a frog in a dunce hat on it. I didn't get the joke; Kloe barely looked at it.\n\n'Thank you auntie Lynn,' she mumbled, pocketing it.\n\nAs we sat, my phone buzzed again. Thinking it was Ryan, I opened it absent-mindedly.\n\nH // Brooke, I apologise for earlier. As mentioned, some things have come to light around my situation, financially speaking. I was hoping to discuss it with you, and perhaps request a favour. Let me know if we can speak tomorrow. \n\nI stared at it for a moment, unsure what to say.\n\n'You okay?'\n\nI turned the phone face-down, and looked up at Kloe, who was giving me a wary eye. She knew something was up.\n\nI nodded. 'What time's the party starting?'\n\nCHAPTER SEVENTEEN - THE PARTY\n\nThe flat had filled hours ago; Ryan and Shannon had covered me, getting the drinks and snacks that were out in the kitchen, while Kloe mingled with people from her course, people we'd known for years, even some of her braver family members who were dedicated enough to make the trip.\n\nThere must have been about fifteen people in our flat, between the group in the living room drinking and laughing as social circles met, the lot in the kitchen standing around as Kloe circulated, chatting and laughing and generally having a great time.\n\nI found Shannon at the doorway between the livingroom and the hallway, looking about as lost as me.\n\n'Hey,' she said as I leant against the other side of the door frame. 'Did you know Kloe had this many friends?'\n\n'I literally recognise, like, four people here. And two of them are you and Kloe.'\n\nShannon laughed, moving to the side as one of Kloe's cousins squeezed past, probably looking for the toilet.\n\n'It's so strange,' she said. 'All of, you know, the stuff going on with you - and yet, life just... goes on. Birthdays. Flat parties. It doesn't stop just because you're living with a mutant.'\n\nI gasped, feigning shock as I looked at her. 'A mutant?'\n\n'You're like something from the X-Men. Or Misfits or something, I don't know.'\n\n'Didn't peg you as a comic-book reader.'\n\n'Me? Oh, I'm not, but you don't go through puberty with access to Hugh Jackman's rippling pecs and not dip into that well.'\n\n'Very fair. But I'm not exactly a superhero.'\n\n'Oh yeah - it's all about sex with you, isn't it,' Shannon said with a smirk. 'Especially with the birthday girl.'\n\n'Shut up,' I said into my drink.\n\n'You sounded like you had fun,' Shannon said. Then, after a drink, she looked me in the eye. 'Fancy some fun now?'\n\nMy heart skipped. 'What - now?'\n\nShannon nodded. 'It's not like anyone would catch you,' she said. 'And, you know, Kloe's cousins just left.'\n\n'Meaning?'\n\n'Meaning, as of now, no one here is related.'\n\nI laughed at her. 'You're ridiculous.'",
        "She shrugged. 'All I know is, the stuff you're able to do - everyone should get a taste of that shit.'\n\nI turned to her. 'Go on, then. Pitch me your idea.'\n\nShe turned to face me more, and a spark passed between us. 'Once around the room. You get everyone - but just a little bit. Nothing too obvious.'\n\nI considered it. 'You're serious?'\n\n'I am,' she said, before biting her lip, and then turning away. 'That would include me, by the way. If you were interested.'\n\nI looked around - everyone was a student, and most of them were pretty attractive. Kloe had a lot of dancer friends who were in phenomenal shape, and the idea of having a little go on them was seeming a little more doable by the minute.\n\n'What do I get out of it?' I asked, the shared amusement between me and Shannon as the music sent soft ripples through the walls.\n\nHer eyebrow cocked, and that was answer enough. The act was the reward.\n\nAnd, in all honesty, after waking up next to Kloe this morning, I'd been hankering for a little fun all day.\n\nSo, I shrugged, put my drink on the mantle to my right, and as I kept Shannon's gaze, I thought those magical words.\n\nTime Isn't Real.\n\nThe sudden stoppage of sound, movement, everything was jarring. Even now, after having done this time and time again, it gave me pause as everything stopped dead.\n\n'Nice,' I muttered, before going to work.\n\nI started, naturally, with Shannon. Like she'd said, all I really wanted to do here was give a little to everyone here; nothing too dramatic. I didn't need anyone embarrassing themselves creaming their pants.\n\nSo, I simply went up to Shannon's frozen form, pressed my lips against her neck, and slid my hand down the front of her trousers. My fingers travelled downwards, beneath the fabric of her underwear, and into the slick folds of her sex.\n\n'You're wet,' I mumbled into her unhearing ear as I played with her for a moment or two, just lazily playing with her clit as I scoped out my next target.\n\nOnce I was happy that Shannon would get a pleasant shock to her system, I pulled my fingers from her pants, and went to the nearest person.\n\nShe was a dancer - someone from Kloe's circles. Slim and petite, she had a nose ring and a tattoo on the back of her neck of something in sanskrit. I frowned, wondering if she was one of those instagram-hippies who got foreign-language tattoos and piercings for clout.\n\nAlthough, in all honesty, it was hard to care - because they suited her. She was wearing a loose vest top and a sports bra, with fishnet leggings and shorts, and was leaning against the back of the sofa as she spoke to a guy sat opposite; I'd get to him later.\n\nI spent the time to slide beneath her bra, leaving a thin trail of Shannon's juices on this dancer's nipple, before pulling the shorts down and giving her a long, indulgent lick along her slit. Her sex was tight and well-kept, with just a snatch of black hair tickling my nose as I explored her opening with my tongue.\n\nThen, I backed up and put her back as she was.\n\nNext, I crossed to the guys on the sofa. I didn't know him, but he was handsome enough; he had curls of hair and glasses that made him seem smart. So, I slithered into his lap, kissing his neck and nibbling his earlobe. I slipped down, unbuckling his belt quickly, giving me enough room to slip my hand down into his jeans. The feeling holding a stranger's flaccid cock in my hand was an odd one, but the knowledge that, for him, he was going to experience the fondling of some ghostly, unseen hand was enough to let me enjoy it.\n\nI stroked him, and tugged his waist down enough to pull his cock out from his jeans. It was long enough, even flaccid, and as I pulled his foreskin back I let a dribble of spittle drip onto the head, before using my thumb to coat the pink head of his cock. Once it was wet and shiny, I packed him away, did up his belt, let out a shudder of breath as the power trip started to go to my head, and went on to the next person.\n\nFrom cock to labia, clit to balls, I travelled the room, slobbering and licking and tasting and sucking and loving. Each person - every single person - slid against my tongue, felt the ridges of my face, puckered against my lips or suffered the sensual attentions of my fingers.\n\nI loved it. Once I had done everyone but Kloe, I stopped for a moment and looked around the space - around the faces of all of these strangers, knowing how their cocks felt in my small hands; how the folds of their pussies submitted to my tongue. It was all very... intoxicating.\n\nAnd then, there was the birthday girl. Kloe, who I had known for years, and just last night - and this morning - we'd spent our time getting to know each other in a whole new way. Images and memories of which, as I approached her, mid-sip of a rose-coloured gin she'd gotten as a gift tonight, made me was to strip her naked and fuck her senseless here and now. She would, one second, be enjoying a conversation with some friends, and the next be orgasming like a lunatic to the sensations of me, bucking into the air as her friends watched on, every single one of them now suddenly in the mood to fuck.\n\nIt was a nice fantasy - but I knew I could never do that to her.\n\nThis, however...\n\nI smirked as I pulled her top up, revealing the braless chest of one of my closest friends, before I spent a minute or two just devouring them. I knew, expertly well, that she was a fan of having her nipples suckled, her pink nubs sensitive and ever-erect. She told me she liked how, in dance sessions, she could feel her dance partners' thumbs slip across them - even though she was gay, she enjoyed the tease.\n\nBut I wasn't stopping at teasing.\n\nOnce I was, reluctantly, finished with her tits, I sighed a shaky breath and slid down her, onto my knees, like I was about to pray for the first time since leaving my Church of England Primary School. Only now, when I looked up, instead of seeing God, I was looking up into the denim-clad crotch of my friend, as my fingers deftly unbuttoned her. I pulled the jeans over her dancer's hips, down to her mid-thigh, exposing the black lacy underwear she was wearing underneath.\n\nShe looked, in a word, delicious.\n\nSo, I got to eating.\n\nOnly for a half-minute - a minute at most. I tasted, and licked, and slobbered, and sucked her sex, knowing where on her to kiss, where to tease with the tip of my tongue, where to caress lovingly with my thumbs as I ate her.\n\nAnd, again when I was done, I smoothed out my breathing, pulled up her clothing, and tried my best to make it look like nothing had happened. I went back to Shannon's side, in the doorframe, and took one last look at the quiet, still room, and tried to swallow the smirk on my face when I said the words.\n\n'Time Isn't Real.'\n\nFor a moment, there was a lurch - as though the entire room balked at what was happening to them; conversations dragged to a sudden halt, and smiles faltered. All around me, the party-goers experienced a shared, unexplained surge.\n\nAnd, even though none of them knew it was happening to anyone other than themselves, there was a sudden shift in the room. A gasp or two; a roll of the eyes; a buckling knee; even a moan, quickly shifted into a cough.\n\nShannon looked at me, a smile on her face that betrayed the naughtier thoughts below the surface. I knew what she meant.\n\nDo it again. \n\nConversations started to begin again, with one or two 'What the fuck's swirling around - so, before anything was able to change, I made a decision.\n\nTime Isn't Real.\n\nPeople froze, and I started again with Shannon.\n\nMy fingers, following their first foray, dipped into her waistline, slipping downwards until I felt the soft, wet flesh of her sex. Her wetness webbed my fingers, as I slid into her, one finger curling up and into her tight sex, the pressures of her walls squeezing me as I fucked her, slow and singular, in front of everyone.\n\nMy second affair was the dancer with the soft tits. Her pussy was just as tight, and tasted of flowers and musk; the guy on the sofa's cock was an easy six inches, rand beneath his foreskin my spittle still shone on him; the girl with curled hair and platform boots was soaked when I touched her, and her clit stuck to my lip; the lad with a warm smile and a thick cock filled my mouth in a way I found insatiable.\n\nAround the room, I filled my want of depravity. I spent almost a half-hour deliciously enjoying each of them, until my fingers were close to cramping, my tongue was aching, and my knees were sore.\n\nWhen I went back to Shannon's side, wiping the slickness from my chin and trying to settle the flushed red in my cheeks, I looked around the room at the pleasure-washed people here.\n\nTime Isn't Real.\n\nThis time, it was faster - people jolted, squirmed in their seats as they felt my tongue on their clits, my fingers inside them, my throat squeezing the tip of their cocks.\n\nI watched Kloe, particularly, as she stumbled against the counter she was next to, a gasp bumbling out of her as her body took all of my love and attentions on at once. Her hand strayed to her chest, and I noticed her slide her hand over her chest before settling on holding her neck as her hips bucked, the echoes of my lips on her clit shuddering through her.\n\n'Holy fuck,' I heard someone moan, a guy on the other side of the TV; I remembered taking him into my mouth, letting his length drag across my tongue as I blew him like a lover for minutes on-end. He gripped the windowsill, and someone across from him watched with wary eyes. She made a connection.\n\n'Is anyone else...' someone asked, hesitant.\n\nA few nods went around the room.\n\n'What the fuck is happening?' one of the dancers muttered near me, and I felt my heart flutter. One more of those, and there was a good chance I'd trigger a few orgasms - maybe even get the whole room to snap into an orgy.\n\nThen, I saw Kloe. The look on her face wasn't enjoyment. She was worried. Afraid.\n\nAnd I realised that I wasn't doing anything good for these people - I was doing it for myself. And that... that was wrong.\n\nSo, when Shannon turned to me with a grin on her face, I didn't return it. Instead, I left the room, allowing the newly hormone-filled room behind me to settle back into some semblance of normal.\n\nI cracked open the front door, as even started to set in, and the streetlamps were only just starting to cast their yellowish glow on the city, to see a black car across the street. In the front seat, I could make out the shape of a man, and some part of me just knew.\n\nMy heart jumped into my heart, and as I retreated back into the flat, away from the fresh air I'd hoped to get, I spotted another black car, matching in every way, pull up on my left, settling between two already parked cars. No one got out.\n\nI swallowed, nervous, and went back in.\n\n'Where'd you go?' Shannon asked, catching me off guard.\n\nI just shook my head. 'Not feeling good,' I said.\n\n'Is it about-'\n\n'No,' I said. 'Yes. Kind of. Just - let me breath?'\n\nShannon nodded, and got out of my way as I went upstairs, to my room. When the door closed behind me, I felt a sort of tension that, if it was in my head, I would take for my stopping-time almost being up. But it was heavy and hot in my stomach, weighing me down. Holding me in place.\n\nCHAPTER EIGHTEEN - THE THREAT\n\nI must have stayed up there for an hour or so, just wallowing, before my door creaked open. In the spill of light, I saw Penny, her little ginger head of hair and a concerned look on her face peering in.\n\n'Heyyyyy,' she chimed, as I sat on my bed, laptop-on-lap, my pillows all bundled behind me.\n\n'Hey, Penny,' I said, closing the video of my father and setting my laptop to one side. 'How's the party? I didn't see you when I was there.'\n\n'Me and Ryan just got here,' she said. 'We had to pop out for a bit, to-' She stopped herself, and giggled. I got the message. 'What'cha doing up here? I heard things got a bit... strange downstairs.'\n\nI shrugged. 'Didn't feel great. Is Kloe having a good time?'\n\nShe nodded. 'You coming back down?'\n\n'Probably not, Pen.'\n\nShe nodded again, before stepping inside properly, pulling the door shut. She just... looked at me for a moment, before I broke.\n\n'Ohmygod, what?'\n\nShe laughed, and I frowned.\n\n'It's just... Ryan said he saw you coming out of Kloe's room this morning...' her eyebrow arched up at me, and whatever response I could have shown to hide the truth, I didn't figure it out in time. 'You DID?! Oh. My. Fucking. God.'\n\nShe scurried in, slipping up into the bed and sitting next to me; her on top of the duvet, me beneath it.\n\n'Tell me what happened.'\n\nI smiled, unable to think of a good reason not to.\n\n'It was last night. I'd had a rough one, and... and I came downstairs, and her and Ryan had saved me dinner. All of us just watched TV together, and it was a kind of normal I hadn't had in... in far too long.'\n\nPenny nodded, rapt. Her wide eyes, green and filled with vicarious romance, stayed on me the whole time.\n\n'Ryan and Shannon, eventually, left, and it was just us. We snuggled on the sofa, and... I don't even know. We talked about perfect nights, and her birthday, and then... then we were kissing.'\n\nPenny squeaked, and hugged me, squeezing me by the shoulders. I remembered the taste of her pussy on my tongue, and swallowed the memory. Naughty Brooke.\n\n'And then??' she asked, all too eagerly.\n\nI shrugged. 'Then she took me to bed,' I said, in such a way as to say there was nothing more to it.\n\nAnd, honestly, there wasn't.\n\n'Is that all you wanted from me?' I asked, and she sat back, looking at me.\n\n'I mean, people are wondering where you'd gotten to, but to be honest yeah. Yeah, I just wanted the gossip.' She nudged my shoulder. 'This is great though! So, are you together? Or is it too early to tell?'\n\nI paused. 'I... don't know.'\n\n'Do you want me to ask her?'\n\n'No!' It came out a little too quickly, and she backed up.\n\n'Yeah, yeah, sorry.'\n\nI softened. 'Sorry, I'm just... it's all very new.'\n\nPenny nodded. 'Yeah, I get it.'\n\nMy phone buzzed, and my stomach twisted. I didn't check it.\n\n'I'll head back down,' Penny said, swinging her legs off the edge. 'If you come back down, though, you should tell her.'\n\n'Tell her what?' I asked.\n\nBut Penny just shrugged, opening the door. 'Just tell her.' Then, she was gone. A little ginger tornado, storming in and turning everything upside down.\n\nI sighed, and flipped over my phone.\n\nH // Brooke - neither of us is as stupid as we're playing. Half an hour, and we're coming in. Find a way to get your friends out... or don't. \n\nI steeled my face, and went to the window. I could see those black cars again, unmoving.\n\nB // No one apart from us is involved, Hugo. \n\nH // Everyone is, Brooke. Because I know what was in those videos, and I know that your father left you a message about me. So, I'll put down the charade. Either you come out and get in the car across the street, or you can wait until we come in. \n\nH // Either way, this conversation is going to happen. \n\nI stepped away from the window, and closed my eyes, taking a levelling breath. I considered, again, the multitude of plans I'd made in the last few days. How, before Kloe, I was going to go back to yesterday morning; before that, I wanted to go back to my father's funeral.\n\nEach time, I'd backed away, afraid of what I'd have to do to go back.\n\nYou have to be prepared to kill.\n\nWas I prepared?\n\nI looked at the window, and thought of Hugo. Would I kill him? Would I be able to? Or would I be more suited to martyrdom? To give myself up for the sake of those around me.\n\nIn all honesty, neither sounded like great options.\n\nI knew the minutes were counting down, so as I sat in my bed, pulling my laptop back into my lap, I started my father's videos again, just hoping that anything in here that could help me.\n\n* * * * *\n\n'You need to get everyone out,' I told Kloe, my voice soft as I stood next to her in the kitchen while she rinsed some glasses, ready for re-use. A few people had already filtered away, likely after my little stunt freaked them out, but there were still a few of Kloe's dance friends, and one or two of her course mates. Including the four flatmates, and Penny, there were ten people here still, milling around drinking, and making fun of a bad horror movie Ryan had put on for background noise after the music started to give Kloe a headache.\n\n'What?' she asked, laughing at me. But I held my stare.\n\nI must have looked a complete mess. From the lack of sleep I was getting, the general dishevelled-ness of going back to bed fully clothed at seven in the evening, plus everything I'd been dealing with... I could feel it taking a toll.\n\n'I inherited money,' I lied, thinking the analogy was decent enough. 'A lot. From my dad.'\n\n'Holy shit!' Kloe burst, looking like she was about to start to celebrate - but I stopped her, grabbing her wrists and tugging her lanky frame down to my level.\n\n'Kloe - no - there's a guy outside who knew my dad, and he knows I've inherited it, and he wants it.'\n\nAt least that was the truth. In a way.\n\nShe sobered a little, her eyes boring into me. 'You're not kidding.'\n\nI shook my head. 'It's what's been... bothering me lately.'\n\n'We need to call the police!'\n\n'No!' I said, stopping her before she was able to spin away. 'Kloe, no - he has people outside - I just need you to get people out. You can go, too. Go to a club or something.'\n\nShe held my hands back. 'Brooke - I'm not sure I understand. You have a guy threatening you, and you don't want help?'\n\nI sighed. 'I'm... I know what I'm doing.'\n\n'Do you?'\n\nI hesitated, knowing I'd already gone back on plan after plan after plan. That I wasn't willing to do what I needed to. 'I do,' I lied.\n\nShe leaned down, and placed a small, quick kiss on my lips. I stiffened, not expecting it, before giving her one back. Despite everything, I found myself swooning. Grinning.\n\n'What ever's going on,' she said, 'I'm not letting you do it alone.'\n\n'Kloe-'\n\n'Brooke, I'm serious.' She said. 'I'm staying. But... if you think people need to go-'\n\n'They do,' I said, knowing I sounded a little manic. I probably was. Who had time to worry about that, though?\n\nKloe nodded, and as I watched from the kitchen, she went round person-by-person, and told them she was so so thankful for them coming, but she was totally worn out and wanted to call it an early night.\n\nIn minutes, the place was empty, aside from me, Kloe, Ryan, Penny, and Shannon. A few of Kloe's friends were a bit disgruntled, but she seemed to shrug it off, uncaring. Once the door closed, and we were all alone together, she turned to me.\n\n'What's going on?' Shannon asked, following Kloe's gaze to me.\n\nI hesitated, unsure what to say. Unsure how truthful to be. How much danger to put them in.\n\nOnly, I didn't get the chance.\n\nBUMFF - the door slammed open, and Kloe jumped out of the way just as two men in dark clothes, wearing goggles, burst into the room.\n\n'WHAT THE-' Ryan yelled, before one of them stepped into the room, gun whipping out of his waistcoat; he didn't aim at anyone, but it's presence was enough to shut Ryan up. The rest of us froze, and I tried to find the strength in my gut to freeze time.\n\nOnly, the preparation that took from me wasn't exactly fitting with the situation. There wasn't a lot of room for arousal between the adrenaline and panic filling me, blinding me.",
        "Then, as Hugo walked into the room, I felt a swell of anger inside me.\n\n'You should have come outside,' he said, holding a notebook in his hands, and clapping it shut, clipping a pen into the pocket of his shirt.\n\n'That's my dad's...'\n\n'No,' he said, shutting me up as two more of his goons followed him in, closing the door behind them. 'It's mine. Just like that... gift of yours. Wasted, honestly. You should know, if you attempt to pause time, my agents will kill your friends; either here, today, or in a month, or a year. They've been paid very well, and thanks to your father's investment advice in the years up until your birth, I have the capital to support it.'\n\nHis face was drab, emotionless. Like he was giving a lecture.\n\n'That doesn't have to happen,' I said, trying to avoid the panicking, confused faces of my friends.\n\n'I know,' he said. 'That's just my contingency. You can never be too prepared when you're facing time-meddlers. But Brooke, you and I know what I want from you. What I need from you.'\n\nI stared him down. I didn't look at my flatmates, and whether they'd picked up on time-meddlers, as Hugo had put it. I didn't have it in my heart to find out. I just kept my eyes on him, trying to figure out another way.\n\nIf there was one.\n\n'Well?' he asked, putting the pressure on. 'Come now, we walk away - no one gets hurt. And, Brooke, if you try the other part of your gift, I'll know.'\n\nHe patted the notepad in his pocket, and I frowned. 'A fixed point...' I mumbled, remembering what my father had called it.\n\nHugo nodded. 'No matter what you do, I have all of our conversations recorded, Brooke. Go back a week, and the me from a week ago will know that this conversation happened, and that you tried to run. He'll know where your friends live, and that the only way to get to you is to put pressure on them. Save yourself the trouble.'\n\nI rubbed my eyes. 'You stole that.'\n\nHe faltered, not expecting that.\n\n'From my dad - who had just died of cancer,' I said, my voice raising with each word. 'And what for - for, fucking, leverage?'\n\n'It's a fixed point,' he said. 'A unique object, Brooke. Frozen in time, unimpeded by the reversal of entropy - it is impossible. And it's what's going to get me your power - calmly, and peacefully, or... not.'\n\nOnly then did my heart flick to my friends. Penny, her hand crushing Ryan's, looked like she was going to have a heart attack. Ryan was still, quiet, his mind probably racing. Kloe, her face having been horrified, had settled into a forced-calm; like putting a storm in a bottle.\n\nShannon... Shannon knew. She had watched some of the videos, and she knew enough from me to have an idea of what this was - but she still looked shocked. Appalled.\n\nHow could I have let this happen?\n\nHugo held out his hand, open towards me. The four guys, guns lazily at their sides, stiffened a little, waiting for something to happen - and it did.\n\nI took it.\n\nKloe took a half-step, and one of the guys immediately put his arm across her, as Hugo's hand closed around mine.\n\n'Good choice.'\n\nCHAPTER NINETEEN - THE BLUR\n\nFor someone with a complicated relationship with time, it seemed to slip past in an instant between Hugo pulling me from the flat, and being herded into the car. Hugo wasn't driving - he pulled me in behind him to the back seat, and one of his lackeys got in the driving seat. I don't know what the other three did, but I didn't care. I barely noticed.\n\nAll I could think about was Hugo, and his hand clamped around mine, and the way the car purred pleasantly into life beneath us.\n\nWe pulled away, into the road, and started to drive.\n\n'Take us to the lab,' Hugo said, as though this was some sort of taxi. 'Carrigan Road, you know it.' The driver nodded. Hugo, then, turned to me, and pulled out my father's notebook. 'Fascinating thing,' he said. 'But I won't need it now. Still, I'll keep it on me. Nine months until this is really all sorted out.'\n\n'You're sick,' I told him, and he scoffed.\n\n'Nah. You're father - he was sick. Not just from the cancer, either. The man wanted to live lifetime after lifetime after lifetime. Making money, fucking whoever he wanted, having the life. And, to get there was me, his... his clever little friend who knew more than him. I deserved what he had, Brooke. More than him, anyway. I would have done so much more in my youth than just profit. Such a selfish way to think of the world. You, too - using your power whatever you wanted. You don't deserve to live.'\n\n'How can you say that?' I asked, trying not to cry.\n\nHugo shrugged. 'I've got a lot of resentment for your father. Clearly it's rubbed off onto you. I'm not sure what's so complicated.'\n\nThe road was busy, but fast, and the sounds of horns and tyres-on-tarmac was creating an odd, constant rhythm, a pace beneath us that washed over us.\n\n'I spent my entire life sucking up to your father, waiting for my chance to take what he squandered; I won't let you squander it, too.'\n\n'It's not your choice,' I said, closing my eyes.\n\nTime Isn't Real.\n\nThe car stopped, the road silenced, Hugo's face froze in it's smug way. I had only a minute or so before this ran out - the same way it had back at the shop. So, I used it to do the only thing that came to mind. I reached into Hugo's jacket, and I took the notebook.\n\nEven as I held it, it felt... off. Like it was aware of me. It buzzed, or had some kind of magnetic pull.\n\nI kind of hated it.\n\nEven so, I opened it to the most recent page, and saw all of Hugo's notes - the scrawlings in pigeon-scratch about his plan, and what he had threatened; if I jumped back, he'd left a note to himself to kill my friends and take me by force.\n\nSo that wasn't a bluff, then. \n\nWell, fuck him. I ripped the page out, leant over the driver - his window was cracked open, and I was able to push the page through the gap. Even though it froze just outside the gap, I knew that the moment the world started up again, it would be whipped away.\n\nWhich, of course, meant I was able to jump back in time now.\n\nIn theory.\n\nIf I was able.\n\nI settled back into my seat, trying to match my original posture, and putting my hand back into Hugo's grip. I had to squeeze his fingers around me, and hope for the best - despite knowing he'd probably feel that anyway.\n\nOh well.\n\nFuck him.\n\nTime Isn't Real, I thought, channelling the words to bring the world back into time.\n\nHugo's face flexed as his fingers rolled around mine. His eyes narrowed. 'What did you do?'\n\nI shrugged. 'You're the one who's been planning this for God-knows-how-long. You figure it out.'\n\nHe rubbed his face, dropping my hand, before sucking in a deep breath. Then, he gave me a long, hard look.\n\n'This is over,' he said. 'It's not worth the risk.'\n\n'Risk?' I asked, confused.\n\n'WHY is it so hard,' he asked, but it wasn't to me - it wasn't to anyone. Not to me or the driver. He was just... rambling.\n\nThen, from beneath his jacket, on the opposite side to the notebook, he reached in and pulled out a small, shining pistol, and lay it on his lap.\n\n'If I put a bullet in her head,' he said, still not speaking to anyone but himself, 'she'd probably still be ready to harvest, right? If not... I suppose the mother would be next on the list.'\n\nMy stomach turned.\n\n'You dirty fucker.'\n\nHis eyes snapped up to me, coldness overwhelming. 'How dare you.' Then, he raised the gun up to me head, steeling himself for what he was doing, and-\n\nWhen the world stopped, it wasn't the same as normal.\n\nNormal. Ha. How had any of this become normal?\n\nEven so - the way the world would pause, that pressure in my head - it was all wrong. Instead, the car around me blurred, faded and fuzzy as the sounds hovered in the air - loud and unending and stubborn, meeting my ears as I shifted inside my seat. \n\nHugo looked at me, one hand on the gun, one on my hand, trying to hold me in place. His eyes bored into me, wide and scared and wild. \n\nThe car was still, but Hugo buzzed, the same as the notebook. Shimmering between moments. \n\nThen, I realised where I was, and what I was doing. \n\nI wound us back. \n\nThe car slid back on the road, the rhythm of the road reverse. I travelled with it, my body moving backwards, unwinding through time's unending entropy. Obeying. \n\nBut hugo didn't. \n\nHe stayed, frozen in place, as the car left him behind. We slipped back, up the road, as he hovered in place, slipping between the shuddering, blurring car seat, out through the bonnet, and into the road ahead of us. \n\nA Fixed Point, I thought. Just like the notebook - it became a fixed point because my dad had it on him when he went back the first time - that first entropy break.\n\nNo part of me was touching the car - my clothes were following me into the past, but Hugo was fixed now. \n\nOutside of time. \n\nJust like he wanted. \n\nHa. \n\nFuck him.\n\nTime started again, a minute ago. The car slammed into Hugo, his body impacting the front window, and careening off to the left.\n\nThe driver stopped, looking at us with panic in his eyes.\n\nBut it wasn't enough.\n\nSoon enough, there would be police here, and they'd see me in the back of the car. I'd be taken in for questioning. Then my flatmates, who would talk. Why wouldn't they? I'd be linked to Hugo. Somehow, they'd pin it on me.\n\nI had to go further.\n\nBack into the blur. Adrenaline spiked through me, like being stabbed in the heart. It was completely different from stopping time - more fluid than solid. Like wading through frozen water, only I couldn't control my steps - only the speed and direction of the water. \n\nAs I rolled time back, willing it with a part of myself I didn't fully understand, the car slid back up the road. I acted out my actions in reverse; my hand hovering in the air, held by an absent Hugo - his body a Fixed Point and still in the road - then I was being herded back into the house, backwards.\n\nI sped it up, pulling myself further back. The day whizzed past - sitting on my bed, the conversation with Penny, the party, the day in the flat, my morning with Kloe, then Ryan, my night with Kloe.\n\nI slowed. \n\nI reverse, I watched as Kloe slid down my body, her naked body ashine with sweat, her tongue seemingly drying my chest as she went downwards; in reality, in that moment, she'd just finished giving me a mind-blowing orgasm with her pierced tongue, and was teasing me into a kiss. \n\nThe temptation to stay here was immense. To live this moment again. \n\nBut I knew what I needed to undo. And so, I continued. \n\nBackwards, through sex I will never forget - and will endeavour to revisit, as a relationship with Kloe is something I couldn't bare the thought of losing - until we were on the sofa. I came on her fingers in reverse, her forehead pressed against mine, and then we were kissing, and then I was on her lap, and then we were side by side. \n\nA relationship undone. \n\nI wondered how many times my father had done this. Watched his relationships, friendships, family fall apart before him. Moments that, once lost, cannot be pulled together again. \n\nI sped up. I couldn't stomach it. \n\nI rushed through my time with Shannon - thankfully, this process seemed to skip whenever I had stopped time, so I watched her cum on the bed, and then we were stood together, and then I was at the door, and then downstairs. Taking away the burden of knowledge from her. \n\nI kept pushing. The walk through town, the bus journey, until I was back at my mother's house. I watched myself put back the videos, watching them in an instant in reverse, until the box was locked again, it's contents unknown to anyone but the dead - and me. \n\nI wondered if I was dead. If that version of me was now dead, and my memory of her wasn't enough to pretend it was a life lived. \n\nA life unlived. \n\nThe night came back, and I watched myself sleep, felt myself sleep - so I skipped backwards, until I was peering through my curtains to watch Lorna orgasm. Then, the road and the rain, and her sex on my tongue, and her pluch cheeks on my face, and then the rain and road again. \n\nPizza with mum. \n\nThe bus journey, this time in the other direction, and in twilight. Then sunset. \n\nI untyped texts to Hugo, and back-walked through the town center to the flat. \n\nAgain, my heart broke when I saw the look on Shannon's face. Bryson's humiliation. Then, his attack. \n\nAnd then, like it had never happened, him and Shannon were studying, and I was lurking. \n\nJust like that. Undone. \n\nI kept going, unsatisfied. My sins all laid out, open for my rectification. \n\nThe shop, and my lurking outside of it. \n\nThe coffee shop, and the lawyer I had humiliated for being a bitch. That one, I didn't regret much. Watching her dishevelled staggering back into her stall become confidence and rudeness bothered me, but I let it go. \n\nI let it all go. \n\nThe meeting with Hugo - I was alone, now. He wasn't here for me to wind back, to undo. He was done. \n\nBack, and back, and back I went. To my evening with Penny and Ryan - which flashed by, and mostly consisted of me masturbating - to me walking home, until...\n\nThe world came into focus. The blur was gone. My emotions, the physical state of my brain, was quite excited. Upset. Conflicted.\n\nThe University cafeteria around me bustled with life, and movement, and voices I didn't care to tune into. I picked up my bag, sucked in a levelling breath, and left.\n\nTime to start over.\n\nCHAPTER TWENTY - THE BEGINNING\n\nThe evening air was brisk, and pushed me to half-jog most of the way back to the flat. On the way, my mind hovered on Shannon, Kloe, Ryan and Penny. How they would be, only a few days undone. Shannon wouldn't remember my power. Kloe wouldn't remember our... us. \n\nWhen I reached the bottom of the street, I saw light - blue and red, pulsing up the hill. As I climbed, the incline a well-traveled bother to me now, I saw the ambulance as it finished it's business, driving away, sirens blaring.\n\nShannon was on our doorstep, and saw me coming.\n\n'Brooke!' she called, her excitement in her voice infectious. I couldn't help but smile.\n\n'What happened?' I asked, despite knowing exactly what had happened.\n\n'Someone was hit,' she said. 'They're keeping it all very quiet. Ryan thinks it's a conspiracy - there's been people in black suits going round and talking to witnesses, instead of your usual police lot.'\n\n'Fuck,' I said, before she ushered me inside. 'Something smells amazing, though.'\n\n'I'm teaching myself to make pasta sauce from scratch,' she said, buzzing into the kitchen. 'You probably don't need anyone asking you how you are,' she started.\n\n'Nah,' I smiled. 'It's been... a long few days.'\n\nShannon smiled sadly, as she stirred her tomato-and-garlic sauce pot. I got the cheese from the fridge, and put it in her prep area.\n\n'Cheers,' she said.\n\nAnd then, I hugged her.\n\nShe wasn't expecting it - I could tell by the small yelp she gave. I wasn't even sure I expected it. But I couldn't help it. I just gave her the best squeeze I could.\n\n'Sorry,' I said, pulling away. 'Strange times.'\n\nShe smiled, and shook her head. 'Anytime you need a hug - let me know.'\n\nI nodded, and started to stray from the room. There was someone else I needed to speak to tonight. Before anything else unexpected happened.\n\n'Where's Kloe?' I asked.\n\n'In her room,' Shannon said, not taking her eyes off of her sauce. There was a comfort to the normality that I enjoyed for a moment, before slinking away, heading up stairs.\n\nI dropped off my bag in my room, before knocking quietly on Kloe's door. The knot in my stomach was tight, and made of teflon. I had no way of knowing if our tryst was the result of alcohol and horniness, or if coming back and extra day or so earlier than we'd kissed the first time meant that I'd undone something that made her want me, or if-\n\n'Brooke?' Kloe asked, in an unexpected state of undress. Her make-up was missing, and she had a blanket wrapped around her, with bare shoulders poking out from beneath. 'What's up? You're back so soon after-'\n\nShe stopped herself, concerned that mentioning my dad's funeral would upset. But I was so far past that.\n\nI just wanted her.\n\n'Can I come in?' I asked, and she nodded, stepping aside. 'I have a confession to make.'\n\nShe looked at me a bit funny, closing the door behind me. The bed, stripped of its main cover, complained beneath me as I sat, and Kloe watched me with a wary eye.\n\n'Seeing... what I've seen,' I started, hesitantly balancing the truth and what she knew, 'I think that I should admit when I've been... dishonest. My father kept secrets, and they ruined his life. Ruined our relationship. I don't want to have that. I don't want to die lonely, and unloved.'\n\nKloe's eyes shimmered as she watched me unload, not knowing whether to move or stay still. As a compromise, she just waited, breathing slightly unevenly, her care for me making her emotional.\n\n'I have never been honest with you,' I said, just jumping in. Not fully. I think you are... gorgeous. And funny. And caring. And, from what I've heard, you're rather good in bed.'\n\nShe let out a laugh, disbelieving and surprised. I smiled, too, and looked up at her.\n\n'I...care about you,' I admitted. 'A lot. More than I have for anyone. And I wanted you to know that. Because I couldn't forgive myself if I didn't say anything. And there. It's out there. No going back.'\n\nNot again. Never again.\n\nShe looked at me, frozen, lips parted and a tear stain on her cheek.\n\n'Brooke...'\n\nOne word, quiet and sad, told me what I was scared to know. Things were different. And I had screwed it.\n\nBut I wasn't going back to fix it. Undo it. I wouldn't. Not to her.\n\nI wiped my face, realising I'd been crying, too, and stood. 'Sorry - you didn't need this,' I said. 'It was unfair to-'\n\nBut, as I went to pass her and pull the door handle, she stepped in the way.\n\nAnd all of a sudden, we were there again.\n\nLips less than an inch from each others'.\n\nHer hand brushed mine, and her warmth shocked me.\n\n'Close your eyes,' she said, and I obeyed. I felt as she opened her arms, the blanket opening between us, as she pulled me in for a hug. I wrapped my arms around her, sank my face into her shoulder, and bawled.\n\nJust bawled.\n\nAll of the stress - seeing Hugo die - the attack on her and my friends - the self-hatred after the party - humiliating strangers - causing Bryson's assault of Shannon - all of it just flooded out of me, and Kloe just held me through it.\n\nMy fingers dug into the naked skin of her back, our bodies pressed together beneath her blanket, as she just held me in place, letting it all fall out of me.\n\nEventually, at some point, I managed to gather myself, and I realised as my eyes opened, that she was naked beneath her. She was naked, and she'd let me in, allowed me into her vulnerability like this, just to make me feel better. Just to comfort me.\n\nI pulled away from her, only slightly, and she looked down at me.\n\n'I said eyes shut,' she said.\n\nI smirked, and shut them. I could feel her breath on my lips; her chest against mine; her arms wrapped around my shoulders and settled on my back.",
        "Then, like a granted wish, I felt her kiss me.\n\nI moaned, my hand slipping beneath the blanket, down to the small of her bare back; Kloe whimpered into my mouth, our tongues meeting as our lips parted and played.\n\nWe paused, for breathm, or to take stock, and I saw her smile.\n\n'Pervert,' she said. 'Eyes. Closed.'\n\nI obeyed, and she shuffled us towards the bed. She sat, and in a moment I straddled her, pulling off my jacket between kisses, hands roaming as we exchanged whimpers and moans and wordless gasps.\n\nHer lips found my neck, and her hands abandoned the blanket as I unbuttoned my black trousers, slipping them off clumsily as she laughed at me.\n\nThen, once I was just as naked as her, she pulled me back into the bed, our limbs folding between each other, as our bodies created warmth in the small spaces between us.\n\nAnd, as I kissed my way down her body, and Kloe's eyes rolled, biting her lips and gripping the headboard, I decided that it might not have been a bad thing that I learned the ways to make her cum already.\n\nIt gave me the chance to make a great first impression.\n\n* * * * *\n\nI didn't have a plan. I figured it was better to go without. My father had made all the plans in the world, and had gotten nothing to show for it except cancer, and an enemy who was willing to do anything to take his one gift.\n\nNo - I didn't care about that. The power gave me the ability to play, sure. To tease and heighten and exaggerate my sexual encounters. Kloe certainly seemed to enjoy the mega-orgasms I treated to every now and again.\n\nIt also meant that I was able to stay safe. Well-fed. Once my father's inheritance came in, I was even able to sleep at night without worrying over bills or rent.\n\nI wasn't going to scam the stock market, or to try and find some part of the world where my gift would make me millions - however tempting it was. Instead, every now and again, I used it to get an extra hour during an exam when needed, and to nab a fifty-pound bill out of a banker's pocket and sneak it into a homeless person's box. Or maybe I would use it to get passed the bouncers at a concert they were charging \u00a3200 a ticket for.\n\nBut I had learned my lesson.\n\nI wasn't God. The gift came with prices - some more obvious than others. I was also, for now at least, unsuspected.\n\nIn fact, I was loved.\n\nAnd, in all honesty, sometimes I would take a moment to pause time, and just get an extra minute of looking at Kloe's face, lit by the fireplace or in the glow of a bad movie, her smile or scowl or laugh paused.\n\nJust so I could enjoy it a little longer.\n\nA huge thank-you to my Patrons; these massive projects would not be possible without your support x\n\nObi\n\nMannie_RSF\n\nGuyRandomz"
    ],
    "authorname": "Danni_Iridescent",
    "tags": [
        "time",
        "time stop",
        "lesbian",
        "narrative",
        "long form",
        "bisexual",
        "novella",
        "time control",
        "romance",
        "manipulation"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/time-isnt-real-pt-02"
}