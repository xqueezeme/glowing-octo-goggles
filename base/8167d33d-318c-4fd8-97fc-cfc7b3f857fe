{
    "title": "Love Me... Love My Dogs Pt. 07",
    "pages": [
        "More from John and Christie. Thanks for requesting it.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThe sun was warm, and the view spectacular. It was everything I thought it would be. \n\nPalm trees swayed in the soft breeze. The ocean was the perfect shade of blue, deeper than the sky, which was agreeably cloud-free. A strip of pristine sand stretched away in both directions as far as the eye could see. It was paradise, and the room was equally lovely. A huge bed, luxurious bath suite, and ample space to relax. \n\nEver since Christie had suggested this vacation, I had been having dreams about it. Some might find them closer to nightmares. There was nothing wrong with the location, or the view. It was me. \n\nSo when I say it was everything I thought it would be, it was. \n\nAnd less. \n\nYou see, I had tried to imagine what it would be like to look out the window and see nothing but naked people. I tried. I imagined dozens of Christies bouncing around. That was part of the problem. Dozens of women like her would cause a perpetual erection. That could cause friction between us, couldn't it? I had foolishly avoided talking to her about me feelings on the matter, hoping I was being overly pessimistic. \n\nNow, I had no choice. \n\nAs soon as I looked out from our balcony, I knew I was in big trouble. \n\nI assumed that it was mostly couples, which should have meant an equal number of naked guys down there. The pool staff appeared to be entirely female, tipping the balance, to the point where I barely noticed the men. All I saw was tits and asses. Big tits, small ones, perky ones and saggy ones, sunbathing ones, and bouncy ones playing volleyball. My dick saw them too. \n\nOf course, we weren't naked yet. The lobby and other public access places were 'clothing required', and we had just arrived. It's not like we needed to unpack and change our clothes. \n\n\"Are you ready, honey?\" Christie asked from behind me. I turned, and saw her coming out of the bathroom, gloriously bare. She was refreshed, and eager to get out into the sun. \"Honey?\" \n\nI suppose the look of terror showed on my face. Christie smiled, and walked over to the bed, sitting elegantly. She patted the mattress beside her. \n\n\"John? Please?\" \n\nI hung my head, and took a seat. \n\n\"You're reluctant. It's understandable. You know, you have nothing to be worried about,\" she smiled. \"You have a very nice body. I'm sure there are plenty of men and women out there who have a lot more to be concerned about. Probably many you'd rather not see naked. You are not among them.\"\n\n\"Thank you honey, but that's not the issue,\" I replied. \"I mean, it will take a little getting used to, but I don't mind being naked.\"\n\n\"So?\" she asked, raising an eyebrow. \n\n\"Oh boy,\" I sighed. There was no avoiding it now, and no way to slip past her. She knew me too well, and knew how my mind worked. I'm surprised she hadn't already figured it out. \n\nThen again, perhaps she had, and wanted me to admit it to myself. Ever the therapist. \n\n\"Okay... I'm... I'm worried about how I'll react, um physically, to being around all these naked women,\" I said softly. \n\n\"You're concerned about being hard?\" she giggled. \"Honey, I'd be concerned if you weren't walking around with a woodie!\"\n\n\"Yes, I get that,\" I nodded, \"but I wanted to be sure you know it's not because I want to have sex with anyone else. I love you, baby, and you're the only one for me, despite whatever my penis may be indicating.\"\n\nChristie, slid closer, and kissed me softly. \n\n\"I understand,\" she smiled, kissing me again. \"I hope you will extend me that same consideration. There are a lot of dicks out there, too. I didn't suggest coming here to window shop. I just find the idea of being totally free very exciting, and want you to feel it too. Deal?\" \n\n\"Deal,\" I grinned. \n\n\"Good. Now get those clothes off, and let's give your cock a chance to get hard!\" she laughed. \"I'm looking forward to the jealous looks I'm going to get!\" \n\nMe too, I thought. I'll be the older guy with the stacked, gorgeous twenty year old on my arm. I think I win. \n\n***\n\nI followed Christie out onto our balcony. It was more of a deck really, and overlooked the pool area. I closed the sliding door, and punched in the lock code, since I had no pockets for a key card. She was waiting for me, hand extended, and I took it, allowing her to lead me down the garden path toward the sound of frolicking nudists. \n\nWe cleared the shrubbery, and joined the large group of naked guests on the pool deck. I followed her ass as she weaved through the crowd, searching out a pair of empty loungers. I wasn't blind to the turning heads that followed her. After all, she had sure turned my head. \n\nAt last, we found two seats together. We both laid back, and relaxed in the warm sun, holding hands. \n\n\"Can I get you something from the bar?\" a voice asked softly from above. I opened my eyes. \"I'm Cynthia.\" \n\nIt was a very beautiful black girl, every bit as naked as we were. Her eyes were remarkable, and her plump, pouty lips framed a brilliant smile. Her curly hair was cut short, in a style that was probably more a convenience than a statement of her femininity. That femininity was clearly evident in her body, with a tight, narrow waist, slender hips and legs, and a very nicely populated chest. Probably a C-cup, it was her nipples that caught my eye most. \n\nActually, if she came much closer, those nipples might poke my eye out, as they were standing out like inch-long thimbles. I'm sure she caught my eyes on them, but I'm equally sure I wasn't the first one to notice. \n\n\"Sure,\" Christie smiled, and we placed our order. I watched Cynthia as she wiggled away to fill our drink request, and heard Christie giggle. \"Ah, there he is.\" \n\n\"Hmmm?\" I asked. \"He who?\" \n\n\"Your little friend,\" she laughed. I looked down. \n\nSure enough, I was hard as a rock, and standing straight up. \n\n\"I'm sure you haven't noticed, but you're not alone,\" she whispered. \"Pretty much every dick within sight is stiff, and most of them are nothing compared to yours.\"\n\n\"Most, you say?\" I prodded, getting into this naked thing. It might be fun after all. \n\n\"Yes, well, not that I've noticed,\" she grinned. \"Did you see Cynthia's nipples? Jeez, you could hang a hat on those, couldn't you?\" \n\n\"I'm sure I don't know what you're talking about,\" I smirked. \n\n\"Really?\" Christie giggled. \"Well, here she comes with our drinks. Feel free to check them out. I don't mind at all.\" \n\nIndeed, Cynthia did arrive seconds later, toting her tray. On it were our drinks, and a small jar. She knelt between us, smiling still. \n\n\"Here you go,\" she said brightly. \"Drinks for both of you, and a little of our house tanning butter. Would you like any help applying it?\" Her eyes dropped for an instant to take in my erection. \n\n\"Thank you,\" I smiled back, \"but I think we can handle it.\" \n\n\"As you wish, sir,\" Cynthia nodded. \"Ma'am.\" \n\n\"Cynthia, may I ask you a question? It's a little personal,\" Christie asked. \n\n\"Of course. You can see I have nothing to hide\" she replied. \n\n\"Are you cold, or just happy to see us?\" Christie giggled. \"Those are really something. You could stir drinks with them!\"\n\n\"Ah, yes,\" Cynthia laughed. \"It's the breeze. They're pretty sensitive.\" She twanged one with her fingers. \n\n\"Well they're impressive, aren't they, honey?\" Christie smiled, making sure I couldn't say I hadn't seen them. I nodded. Cynthia helped, turning in profile to silhouette the excited prongs. \"I wish mine were like that.\" \n\n\"Well I wish my breasts were more like yours,\" Cynthia replied. \"Damn girl! You're pretty impressive yourself! If you need anything, I'll be around.\" She winked, and walked away. \n\n\"Are you going to have a chat with every naked woman on the property, or is the lesson over?\" I asked. \n\n\"Just wanted to be sure you knew that looking was fine,\" she smiled. \"Get as hungry as you want to, as long as you eat at home. Now, how would you like to oil me up, before I burn?\" \n\n\"I live to serve,\" I laughed, grabbing the jar of cocoa butter while she rolled onto her stomach. I would have to settle for rubbing the fragrant, oily substance into her back and ass for now. I'm sure she would turn over eventually, and then I'd get to do the fun side. \n\nI scooped a dollop of the buttery solid onto the middle of her back, and watched as her body heat and the sun melted it into a puddle. Another gob just above her ass met the same fate, and I began to spread it across her skin, giving her a smooth, even coating, and a massage at the same time. Her ass got extra attention, and her thighs. Within minutes, she was glistening in the sun. \n\n\"Mmmmm, thank you, sweetie,\" she moaned softly. I was within reach, and rubbing her had done nothing to reduce my erection, so she grabbed my dick. \"Don't forget to put some of that on yourself, especially on this lovely piece of meat. Don't want to get it burnt, and not be able to use it.\" \n\nIt was good advice. Sure, we had done some pre-tanning in the backyard, but the sun here was much more intense than at home. So I put a glob on my chest, and spread it across my body. When it came time to coat my penis, I tried not to look like I was enjoying it too much. Just spread the oil, don't jerk off. \n\n\"That looks pretty hot,\" Christie giggled. \"All shiny and slippery. I might have to make use of it.\" \n\n\"Yeah... What is the official policy on public sex here, anyway?\" I asked. \"I mean, with all the skin and raging hormones, it has to happen, doesn't it?\" \n\n\"I'm sure this is a complete surprise to you, but I asked them that when I booked the room,\" Christie said quietly, her eyes closed, relishing the sun broiling her back. \n\n\"Really? I'm stunned!\" I replied sarcastically. \n\n\"Okay wise guy. I'll keep the information to myself if you like,\" she threatened with a smile. \"Do I get an apology?\" \n\n\"Sorry, honey. I got carried away. What did they say?\" I asked. \n\n\"Thank you. Officially,\" she continued, \"they discourage it in the major spaces, like here at the pool, or in the dining room, where we're supposed to be dressed ... So doing me on the table during dinner is a no-no. Unofficially, and as long as some discretion is shown, if no one complains, then since we're all adults, it's permitted.\"\n\n\"I see,\" I laughed. \"That explains the action over there.\"\n\n\"Where?\" Christie hissed, her head coming up quickly. \n\n\"Blonde riding cowgirl. My 2 o'clock,\" I replied softly. \"I don't think you really need to be subtle. They're attracting a crowd of onlookers.\" \n\nChristie sat up, and looked in that direction. The blonde in question was definitely riding her boyfriend's cock, but it wasn't a frenzied public fuck. More of a relatively surreptitious 'I'm going to sit on you and grind my clit on your boner until I cum' kind of coupling. While we watched, she tossed her head back and groaned, shuddering through a presumably satisfying orgasm. Some of those around them applauded, and a couple of the women kissed her in congratulations, before she laid forward to rest on her man's chest. \n\n\"Wow. That was something,\" Christie giggled. \"If being naked wasn't enough to make you frisky, that would do it, wouldn't it?\" \n\n\"Yep,\" I nodded. My cock had just become accustomed enough to the abundance of naked women to relax. Now it was standing up again. \n\n\"Oh, hell. I want to fuck, but I'm not ready to do it out here yet,\" she purred. \"Let's go back to the room.\" \n\n\"You talked me into it,\" I laughed. \"Lead the way.\" \n\nSeconds later, we were threading our way through the crowd, and onto the path that led to our suite. Christie was a few paces ahead of me, and she suddenly froze. I stopped behind her, as she cocked her head, listening carefully. Once I stopped moving, I could hear it too. A rhythmic, huffing grunt. She smiled, and tiptoed down the branch of the path that led toward the sound. \n\nShe stopped again, and her eyes locked on something barely visible through the thick bushes. She gave me the Navy Seal 'look over there' signal, and I stood close behind her, placing my head right beside hers. \n\nWe couldn't see their faces. He had his back to us, blocking our view of her, other than her hands on his shoulders, and her legs splayed wide. The huffing was him, and he grunted with each stroke of his prodigious cock into her pussy. For the second time in minutes we were watching people have sex right in front of us. Christie reached down, and grabbed my steely cock, moaning softly. I kept watching the show, and she slowly dropped to her knees, taking the head into her mouth. I struggled to stifle my own groan. \n\nThrough the bushes, the guy had picked up the pace, and now we could hear his lady moaning as well as him. He gave a few final desperate thrusts, and came inside her with a deep growl. Christie was sucking me quietly, so she heard it, too. She quickly stood, and dragged me away by the penis. \n\n\"Oh shit! I am so horny!\" she gasped, as we reached the main path and turned back toward our door. She darted up the stone steps onto our deck. \"Open the fucking door! I'm nearly ready to explode!\" \n\nI punched in the code, and slid the door aside. I never got the chance to close it. \n\nChristie pushed me inside, and onto my back on the bed. She immediately mounted me, and impaled herself, dropping her sodden cunt over my cock in one excruciating stroke. \n\n\"Oh my god!\" she hissed, and began to fuck herself with a fury I hadn't seen recently. I just laid back, and let her go, watching intently. Her boobs were flying nearly as wildly as her hair. At this pace she couldn't last long. Within seconds, she was howling at the top of her lungs. Her body shook through multiple waves of ecstasy, and she collapsed onto my chest, gasping for air. \n\n\"Oh god, oh god, oh my fucking god,\" she whispered. \"I thought it would be exciting to see other people fucking, but I had no idea!\" \n\n\"Want some more?\" I suggested. \n\n\"Um, YEAH!\" she giggled. \"I want you to fuck me until I can't stand up straight!\" \n\n\"I'll give it my best effort,\" I smiled, grabbing her ass and rolling us over. I dragged her a little closer to the edge of the bed to gain some leverage, and started to stroke into her pussy smoothly. Christie's face lit up, and her mouth formed an 'O'.  \n\n\"Oooooooooo, yes. This is a nice warm up for our wedding night,\" she said softly. \n\nAh yes... Our wedding. I almost forgot to tell you. \n\nThere had been a lot of discussion at home between us about whether to tell her parents or not. I thought we should, and that maybe we shouldn't elope. Angela and Ed deserved the opportunity to see their daughter get married. Christie was of the other mind ; she knew that her parents would take over the ceremony if it was left to them, and she didn't want them blowing all that money on her. \n\nIn the end, we compromised. We told them our plans, and gave them the opportunity to come with us if they wished to attend. At first, Ed was willing... Until he found out about the nude part. Oddly, that seemed to pique Angela's interest even more. I guess she really was her daughter's mother. \n\nSo, it was decided. We would go ahead and get married, naked on the beach, and send them pictures of us together, edited for skin content to avoid giving Ed a stroke. On our return, we would have a small, private reception to celebrate. It was a reasonable solution. \n\nSo, we had four more days of premarital sex to look forward to, before Christie became the old ball-and-chain, and I lost interest in her. \n\nYeah, right, like that could happen. It's like saying I could lose interest in Paradise. She was my whole world. I loved her more every day. \n\nBelow me, Christie was wailing though another orgasm, and the bed was protesting at the abuse we were subjecting it to. My smooth strokes had given way to hard, fast and desperate. I had hooked her ankles over my shoulders, and folded her in half, slamming her into the mattress with each thrust. \n\nI thought I saw some movement out of the corner of my eye, and turned my head toward the wide open doorway to the deck. There, I saw four faces, peeking over the stone wall that surrounded the patio. I grinned, and went back to pounding my darling's pussy furiously. \n\n\"Smile honey,\" I grunted, drawing ever closer to my climax. \"We've got an audience. Probably should have closed the door if we wanted privacy.\" \n\nChristie's face registered the excitement this information gave her, and she screamed even louder, cumming again. \n\n\"Good show,\" she moaned after the surge had passed. \"Give... them... a good... show.\" \n\nI knew what she was suggesting, and started to slam her even harder. The thought of being watched was more appealing than I thought it would be, and I just knew I was going to cum like I never had before. Any second now. \n\nI pulled out, and aimed my cock at her, stroking it fast. She lowered her legs, and propped herself up on her elbows, presenting her face and chest as targets. \n\nOh. My. God. I nearly pulled a muscle cumming, and shot the first rope right into her face from four feet away. It splashed across her cheek, and into her hair. More followed, and more, and more, although the subsequent squirts were less impressive, and less forceful. As I finished spraying the final drops across her belly and breasts, I looked out to the patio. \n\nMy first glance had seen just four faces. Men or women, I hadn't had the opportunity to determine which. Now, I was able to see three women, and one man. The guy appeared to be fucking one of the women from behind while they watched. \n\nI staggered in the direction of the door, my dick still dripping with both Christie's juices and my cum. One of the women looked at it and licked her lips, then made eye contact with me as I reached the open doorway. \n\n\"That was incredible,\" she giggled. \"Thanks for letting us watch.\"\n\nI nodded. It was the extent of my ability to communicate at this point. I slid the door shut, locked it, and drew the curtain, officially ending the performance. \n\nWhen I flopped down on the bed beside Christie, she was licking her fingers. She had managed to get most of the cum from her face into her mouth, but would still need a shower to get it out of her hair. \n\n\"What did they say?\" she asked. \n\n\"They wanted to know when the next show was,\" I laughed. \"We should have sold tickets.\" \n\n\"Well, perhaps for the next show, we should move to a more public venue,\" she giggled. \"I'm going to have a shower, then I think we need a nap. I know I do,\" she groaned, sitting up slowly. Cum ran down her body in oozing trails of translucent goo. \"Holy shit, honey! I'm covered! Did you use it all?\"\n\nI didn't answer. She said 'nap', and I switched off. I didn't even feel her wiping my dick with a washcloth, or tucking me in. \n\n***\n\nThe sun was setting when Christie stirred in my arms. The movement woke me up, relatively speaking. It brought my out of my coma, but I was still very fuzzy. \n\n\"We should get up, baby,\" she whispered, kissing me gently. \"Dinner is in thirty minutes. I'm starving.\"\n\n\"Mmmmm, too,\" I mumbled. Words were still a problem. \n\n\"Well, I've had my shower. You haven't,\" she reminded, me. \n\n\"Nag, nag, nag,\" I grumbled, holding her closer. \"What are you going to wear?\" \n\n\"As little as possible,\" she said, snuggling into my chest. \"My red sundress, I think.\"\n\n\"Mmmmm. I like that dress,\" I replied, still not moving. \"You look good in it. You look good in anything...\" \n\n\"... And better in nothing,\" she smiled, completing my much used compliment. \"You're very good for my ego, you know that? I feel invincible when you're with me.\" \n\n\"Just doing my job, Ma'am,\" I whispered. We were no closer to getting up. \n\n\"Alright,\" she groaned, turning in my arms. \"Obviously, I could die of starvation if I wait for you to move, so I'll go first.\" She rolled out of bed, grabbed the covers, and whipped them off me quickly. ",
        "\"Hey!\" I gasped, suddenly cold. I curled up in a ball, and tried to hide under her pillow, but she grabbed it away from me. \n\n\"Get up, or I'll get the ice cubes,\" she threatened with a laugh. \n\n\"Okay, okay,\" I replied, begrudgingly.\n\n\"You know, I'm not planning on wearing any underwear. Just the dress,\" she smiled, replacing the stick with a carrot. \n\n\"Really?\" I laughed, sitting up. \"I think I'll have a shower before we go.\" \n\n\"Good idea, honey,\" she giggled, kissing my lips. \"You do that.\" \n\n***\n\nThe shower did wonders for my clarity of thought. It focused my attention on what was important. \n\nLike Christie's ass, for example. It was wiggling along the hallway in front of me right now, barely covered by the skirt of her red sundress. It was her favourite summer dress, because she could tease the hell out of me. It was my favourite dress because she was in it, or at least, most of her was. Mid-thigh short, snug from the waist up, and with a low back that flowed up to a halter neckline, it was devastating from any angle. Her big breasts were the stars of the show, even though it didn't show any cleavage. She would be certain to catch some eyes. \n\nThere was a crowd at the dining room entrance, so she stopped at the end of the line, and I closed in behind her. I put my hands on her hips, and nuzzled her neck. \n\n\"Mmmmm, John,\" she giggled, \"you're not forgetting the rules about sex in the dining room, are you?\"\n\n\"No, my dear,\" I whispered, kissing her earlobe. \"Just claiming my mate. I want to make sure everyone knows we're together.\" I wrapped my left arm around her waist, and let my right hand slide down the side of her thigh. As promised, there were no panties under her skirt. When I reached the bottom hem, I turned left across the front of her thigh and eased my fingers up between her legs. \n\n\"John, honey,\" she gasped quietly, leaning back against me, \"you are being very naughty.\" My fingers found the moist folds of her pussy. \n\n\"I assume that's the reason you left your panties in the room,\" I breathed. \"Naughty goes both ways.\" \n\nIt was our turn to be seated, so I removed my hand from between her legs, and followed her through the restaurant to our table. We were right on the railing, overlooking the ocean, which was growing darker by the second now that the sun had slipped below the horizon. \n\nI sat silently, looking at my soon-to-be wife, her eyes reflecting the flickering torch light that pierced the darkness. It was an appropriate metaphor for the love we both felt for each other. She was, simply put, the most beautiful creature I had ever seen, and I would never stop appreciating her. She stared out to sea, lost in thought, and I watched her, until she felt my gaze. \n\n\"I knew you were watching me,\" she smiled. \"You're making me blush.\" \n\n\"You're sure it's not the sea breeze on your damp pussy?\" I asked, grinning as I peeked under the table. At first, she held her thighs tight together as she laughed at my comment, then she gave me a quick flash by parting her legs. \n\nAs the waiter approached, she closed them again, but as I was giving him my order, I could see Christie shift in her seat slightly. When the waiter turned to her, I could see her legs were ajar again. Her skirt was short to start with, but it was riding up a bit more. She had turned herself in her seat, to face him directly. I'm certain he had a good look at her bald cunt. He closed his pad, collected our menus, and left. Christie remained in place. \n\n\"Darling?\" I asked, quietly. \n\n\"Just getting into the spirit of this place,\" she replied, an excited quaver to her voice. \"Consider it a tip. Besides, working here, he's probably seen thousands of pussies. He likely hardly notices anymore.\"\n\nI looked around. The tables were high, and the seats elevated to match, which meant you could see under them much more easily. Two tables away, I saw a willowy blonde and her man eating. Her legs were open, and I could clearly see her cunt. I'm sure closer inspection would yield similar views all over the room. I was just about to say the same to Christie when the blonde turned her head, and saw me peering under their table. \n\nShe didn't even slow the conversation she was having, and merely parted her legs wider, ensuring I had an even better look. Her right hand was busy gesturing with her fork, but her left moved down, and pulled the hem of her own skirt higher. Then she placed two fingers on her labia, and spread them. \n\nI nearly choked. Christie glanced over her shoulder, and saw the source of my surprise. \n\n\"See? Told you I wasn't the only one,\" she giggled. \"She's trying to make friends with you. I'd better keep an eye on that one.\" \n\n\"I'll do it for you,\" I smiled. The waiter had arrived with our drinks, and my attention was divided for a moment. \n\n\"Hmmm, yes, I'm sure you will,\" Christie said softly. \n\nThe rest of dinner was uneventful. The food was quite good, and Christie continued to offer her luscious vagina for the viewing pleasure of anyone who cared to look. Her blonde counterpart did the same. We were waiting for our dessert when a couple approached our table. It was the blonde, with her male partner in tow. \n\nOfficially, she was dressed, and following the rules of the restaurant, but her dress was more along the lines of a long tank-top that reached just below her crotch. Oh... and it was pretty much transparent. Her nipples were standing up, and clearly visible. \n\n\"Hi,\" she smiled, extending her hand to Christie first, then to me. \"I'm Marlena. This is my husband, Ellis,\" she said, still holding my hand. Christie introduced us... listing me as her husband, as well...and allowed Marlena to continue. \"I wanted to invite you to join us tonight, if you'd like. We'll be at the hot tub at midnight. You should come too. It's lots of fun. I hope to see you there.\" She released my hand, and they walked away. \n\n\"Just in case you're wondering,\" Christie giggled, \"I'm not sharing you with her. Call me greedy, but I know what I've got, and I'm not letting any other woman take samples.\" \n\n\"Same goes for you, my love,\" I smiled. \"So, we're not going to the hot tub, right?\" \n\n\"Oh no, we're going!\" she laughed. \"I'm turning into a full blown exhibitionist, and I just love watching. I've heard about the hot tub. It's the place to go to fuck. I can't wait to see it for myself. Maybe tonight, we'll just watch for a while, then go find a more private place to satisfy our urges. That's okay with you, right?\"\n\n\"We came together, we cum together, we leave together,\" I nodded. \n\nDessert arrived. Christie wasted no time, scarfing it down rapidly. \n\n\"Eat up baby,\" she directed. \"I've got another dessert for you back in the room. I am so wet and horny. I'm sure I'll leave a puddle on the chair.\" \n\nCr\u00e8me br\u00fbl\u00e9e doesn't take long to eat, and I set a new record. It was delicious, but I liked what would be waiting for me in our room even better. We walked out quickly, and virtually sprinted down the hall to our suite. Christie stepped out of her dress while I found the key, and she was naked before I got the door open. She stepped in, and I could see the slick of wetness dripping down her inner thighs. \n\nBefore I managed to close and lock the door, she had discarded her dress and was laying on her back on the bed, legs splayed wide, masturbating furiously. I smiled, and took my time, dropping the key on the bedside table, and kicking my shoes off. I sat on the bed beside her, and watched her fingers as they worked on her overheated pussy. \n\n\"John, please!\" she gasped. \"I'm begging you!\" \n\n\"Patience, my sweet,\" I laughed, kneeling beside the bed. I dragged her closer, amazed that her fingers didn't even pause. \n\n\"Patience and orgasms don't mix,\" she groaned. \"Eat my cunt, please! Use that fabulous tongue on my clit, and make me scream!\" \n\nI reached in, and pulled her fingers out of her twat, licking them clean. \n\n\"Hey! Those were mine!\" she giggled.\n\n\"And this is mine,\" I replied, spearing her with my pointed tongue. She groaned, and grabbed my hair. Her pussy was awash with her delicious, fragrant juices, and I made several sweeping passes with my tongue to clean it up. Christie was squirming on the bed, obviously quite aroused by having been on display during dinner. I knew it wouldn't take much to set her off. The only question was how to play it ; do I prolong her torture, or let her have her release now? \n\nI weighed the options, and decided that there were several factors in favour of a quick completion. We had just made love before dinner, and I was stuffed, so I really didn't need to stretch it out for personal reasons. Besides, I knew we would likely be active later, so this was just for her. \n\nWith that in mind, I burrowed my tongue deep into her vestibule. She was as sweet as the cr\u00e8me br\u00fbl\u00e9e had been, so I delved into her folds eagerly. Just because it was for her, that didn't mean I wasn't going to enjoy it as well. I swirled my tongue around between her labia, and occasionally swept up and over her clit. \n\nChristie's moans began to increase in pitch and volume, a clear indication that her orgasm was growing closer. Her thighs were draped over my shoulders, and began to quiver. She was ready. \n\nI moved up, and sucked on her clit. That was all it took. \n\nHer grip on my hair clenched tight, and she pulled my face deeper into her snatch. Her legs shook, wrapping around my head, and making it hard for me to hear her scream, but scream she did, as she arched her back. \n\nBreathing might be an issue if she held me like this too long, but thankfully, she flopped lifeless on the bed before I was in desperate need of oxygen. Her legs were limp, dangling over my shoulders, and the only sign of life was her heaving chest. \n\nI pulled the covers back, and manoeuvred her under them, before stripping myself and sliding in beside her. I cradled her softly in my arms, listening to her breathing. I could reach the switch on the cord of the bedside lamp, and turned it off. \n\n\"Thank you,\" Christie breathed, barely audible. \n\n\"Anytime,\" I smiled. \"For you, baby, anytime.\"\n\n***\n\nChristie's subconscious must have flagged the prospect of watching several couples in the act as important, because she woke up from our nap unassisted. She stretched like a cat in my arms, and smiled brightly. \n\n\"Well, gee, look at the time, will you?\" she giggled. \"There was something we were going to do at midnight, wasn't there?\" \n\n\"If you're sure you want to,\" I yawned. \n\n\"I'd like to,\" she smiled, rolling out of bed. \"I didn't know I was such a voyeur, but I find myself strangely turned on by watching people fuck.\"\n\n\"I'm not sure that's strange,\" I laughed. \n\n\"Well then get your ass out of bed, and let's go. We could be missing the best part,\" she called over her shoulder as she went into the bathroom. \n\nA few minutes later, we were stopped outside the bushes that surrounded the hot-tub area. Christie turned, and put her arms around my neck. She kissed me softly, and smiled. \n\n\"Thank you,\" she said quietly. \"We come together, we cum together, we leave together, right?\" \n\n\"Absolutely,\" I replied. \"Nervous?\" \n\n\"Terrified! Alright. Tally ho!\" she giggled, and led the way through the gate. She held my hand, and as we stepped clear of the hedges, her grip tightened. \"Holy fuck!\" \n\nThe tub itself was quite large, a bubbling cauldron that would probably seat a dozen easily. It glowed with a diffuse blue light, that was enough to illuminate the writhing mass of bodies on the smooth stone patio around it. \n\nThere were only a few people actually in the tub, and those were actively servicing a partner that was seated, legs spread, on the edge of the deck. Two women were sucking their men's dicks, and three guys were feasting on their ladies' pussies. Another three or four couples were fucking around the fringes, in various positions. The centrepiece was a cluster of four men, surrounding a blonde with massive, enhanced tits. She had one cock in every hole, and one in her right hand. \n\nAs the shock wore off, I recognized Marlena, the blonde from dinner, and her husband Ellis. He was ploughing her furiously from behind, and she was kissing another woman who was being similarly skewered by another man. Other than the airtight blonde in the middle, it appeared everyone was paired up, and I didn't see any swapping, but then again, we just arrived. \n\nI finally noticed the sound. A moan, rising and falling like a wave, in twenty-three part harmony, and the percussion of slapping bodies. Christie's hand reached back, and grasped my cock, which was so hard I thought it might burst. \n\nChristie turned around, and knelt. She wasted no time, jamming my cock down her throat as far as she ever had on the first gobble. A few feet away, a petite brunette was riding her supine partner on a lounge, while watching my cock sliding in and out of Christie's mouth. \n\nI ran my fingers through Christie's hair, and tried to make sense of the bizarre situation. Earlier today, I watched my first bout of live sex. After that, Christie and I were the observe-ees, as a group of strangers were witness to us fucking in our room. During dinner, a woman flashed her bald pussy at me... the same woman who was now screeching as her husband drilled her, not twenty feet away from us. \n\nChristie suddenly paused her actions, pulling my shaft out of her mouth, and stroking it with one hand. She looked around the area, obviously deep in thought, then shook her head. She stood, took my hand, and led us out. \n\nOnce we were clear of the area, she stopped, and turned to me. \n\n\"That was interesting,\" she smiled. \"I really want to fuck, but I don't think I'm ready for an audience yet.\" \n\n\"Honey, you had one this afternoon,\" I laughed. \n\n\"Yes, but I didn't know that until we were well into it,\" she nodded. \"Let's go to the beach. It's bound to be less crowded.\" \n\nLess crowded, it was, but it wasn't empty. The moon was playing hide and seek behind the sparse cloud cover, so the beach was alternately fully illuminated, or dark, depending on the moment. During one of the fully lit moments, I counted three couples making love on the sand. Christie gave me a cheeky grin, and took my hand, leading me to a gap between the two closest pair. We had about twenty paces to either side, enough to give the semblance of privacy when the moon was hidden, yet let us see and be seen when the moon was clear. \n\nShe pushed me down on my back, and resumed the blowjob she had started in the tub. I laid my head back, and stared up at the smattering of stars while she did her thing. A minute later, I felt the cool night air on my cock, and looked down to see her taking her place in the saddle. Her warm wetness surrounded my shaft as she settled aboard. She leaned forward, resting her breasts on my chest, and kissed me gently. \n\n\"This is more like it,\" she whispered. \"The tub is fun, and exciting, but this is more my style. Romantic, yet public, alone yet not hidden. Not merely fucking, but making love.\" Another kiss said more than her words could. \n\nChristie rode me gently for a few minutes silhouetted from my point of view against the back lit clouds and visible stars. Her motions were controlled, languid, and sensual, silently conveying her emotions. I felt her body quivering, and knew she was cumming quietly, with only a few grunts to betray the orgasm. She leaned forward again, and I rolled us over, letting me take control. \n\nWith her legs wrapped around my waist, I continued the pace she had set, pushing into her smoothly and without hurry. I saw her looking off to one side, where the couple there had finished, and were now resting, while watching us intently. \n\n\"Do you want to leave?\" I whispered in her ear. \n\n\"No, it's okay,\" she smiled. \"Just make love to me. Let them watch.\" \n\nI kissed her in agreement, and kept thrusting into her. The moonlight showed me those big, beautiful breasts of hers, crowned with extremely stiff nipples, swaying softly with the movement of our bodies. It was all very romantic, yet erotic, and exciting as hell. \n\n\"Oh god!\" she gasped, and her grip on my shoulders tightened, as she came again. I started to spear her a little harder, hoping to get one more out of her before I came myself. It was a valid strategy, and as it turns out it worked. \n\nWithin minutes, Christie was gasping and cumming again. She could sense I was very close as well, and answered my unasked question. \n\n\"Cum on my tits,\" she moaned, cupping the wobbling globes to steady them. I gave her a few last strokes, and pulled out, squirting wildly across her chest, while our audience watched closely. \n\n\"That's it, baby,\" she smiled. \"It feels so warm in the cool air!\" \n\nI laid back down beside her to catch my breath, and together we rested for a few minutes, until she stood and offered her hand. \n\n\"Let's go,\" she giggled. \n\n\"Are you going to rinse off in the ocean?\" I asked. \n\n\"No!\" she laughed. \"Let them see your cum on me! It's your territory. You marked it!\" \n\nI smiled, and took her hand, climbing to my feet. I brushed the sand off her ass, then mine, and we started to walk back to the room. We did pass two other couples along the way, and both of the women gave Christie a knowing smile and a nod when they saw my cum dripping down her body. \n\nOnce we made it back inside our room, we both headed for the shower. There, under the warm spray, we kissed and cuddled, washing and caressing each other gently. We dried each other, and snuggled into bed. It was late, the end of a long first day here, and we quickly fell asleep. \n\n***\n\n\"Honey? Are you awake?\" \n\nMy eyes opened. It was still dark out. I was spooned behind Christie, holding her close, and cupping one breast. \n\n\"Yes,\" I mumbled, \"but I'm not operational.\"\n\n\"That's not why I asked,\" she giggled, turning in my arms. She kissed my chest. \"I need to talk.\" \n\n\"Okay, but take it slow,\" I yawned. \"I'm not wide awake yet.\" \n\n\"I'm sorry,\" she whispered. I could hear the emotion in her whisper. \n\n\"Okay, NOW I'm awake,\" I said, suddenly very concerned. \"You're sorry? Why would you have anything to be sorry for?\" \n\n\"We're here because of me. I had wanted to come here for years. It seemed like fun, and I liked the idea of being naked. I got a rush out of the thought of all these guys wanting my body,\" she explained. \n\n\"And now you don't?\" I asked. I was awake, but not quite enough to follow her thinking yet. \n\n\"I've changed. I'm not a horny teenager anymore. I think coming here was a mistake. I'm sorry I made you bring me here,\" she said. The emotion was getting thicker. I heard her sob. \n\n\"Whoa, whoa, whoa,\" I laughed. \"What's this? Why is my darling so upset?\" \n\n\"John, tonight at the hot tub, I looked around, and all I saw was people for whom sex was more important than anything. I saw people fucking, for the sake of sex alone,\" she cried. \"I want more than that! I've got more than that!\"\n\nI held her, and let her get it out. She had done it for me, I could certainly return the favour. It took quite a while, but her tears gradually subsided. \n\n\"Have I ruined things between us?\" she asked. \n\n\"Christie, honey... No!\" I gasped. \"How could you even think such a thing?\" \n\n\"John, I love you so much! I just feel like I may have cheapened our relationship by coming here. What we have is so special. Can you forgive me?\" she begged. \n\n\"Honey, there's nothing to forgive,\" I reassured her. \"This is a nice resort. The fact that everyone is naked notwithstanding, I'm having fun. We are together, and that's what matters. Remember, we're getting married in a few days.\"\n\n\"Yes,\" she smiled weakly. \"You're sure you're not mad at me?\" \n\n\"You haven't snuck off to fuck anyone else, right?\" I asked, knowing the answer. \"Like you said to me... get as hungry as you like, as long as you eat at home. I'm enjoying all the tits and ass on display here, but there's only one pair for me.\" I cupped her breast in the dark. \"I'd know these anywhere, and they're all mine!\" ",
        "\"John, what did I do to deserve you?\" she asked, sounding more like the Christie I loved. Even psychologists need some therapy occasionally, I guess. She was rubbing off on me. \n\n\"Oh honey,\" I laughed, \"I've asked myself that same question dozens of times, only about you. Let's just go with it, shall we? I'm so lucky I found you.\"\n\nHer lips were warm and soft when she kissed me. I could feel that my words had eased her mind. \n\n\"So, let's just enjoy the rest of our time here. Go on the sailboat. Do some diving. Hang out by the pool. Get married,\" I suggested. \n\n\"Sounds like a plan. I think I've had enough of the hot tub, though,\" she giggled. \n\n\"I suppose, although I would have liked to see how that blonde in the middle finished. She was pretty busy,\" I laughed. \"Four guys. She'd be well coated.\" \n\n\"Yes, but I think quality beats quantity,\" she smiled, kissing me again. \n\n\"Well, if you'd like, I might be able to arrange some more quality,\" I whispered. \n\n\"Save it for tomorrow, darling,\" she replied with another kiss. \"I think we both need some sleep. Goodnight, baby.\" \n\n\"Goodnight sweetheart,\" I smiled. \n\n***\n\nThe sun woke us up in the morning. It was like a fresh start. Christie was smiling at me when my eyes opened. \n\n\"Feeling better?\" I asked. \n\n\"Much,\" she nodded. \"Thank you. I was feeling a little fragile, and you reminded me that I'm not alone. We're a team.\"\n\n\"So what do you want to do after breakfast, teammate?\" I queried. \n\n\"You mentioned scuba diving. I've always wanted to do that,\" she smiled. \n\n\"Oh, you'll love it!\" I laughed. \"And I'll love seeing you naked underwater!\" \n\n\"Good. Let's eat,\" she smiled, gathering her dress off the couch. She slipped into it quickly, and tried to look patient as I found my clothes. \n\nBreakfast is a little less formal, with a large buffet set up in the restaurant, and seating on a first-come, first-served basis. We found a table, and I made an exploratory pass on the buffet. \n\nI came back with a plate heaped high, and found Christie in a conversation with the blonde Marlena, who had commandeered my seat. I took the chair next to Christie, and listened to the girls chatting. \n\n\"I totally understand,\" Marlena said, touching Christie's hand. \"Don't give it another thought. This is our third time here, and we were pretty intimidated the first time, too. No one's trying to force anyone to do things they don't want to do.\"\n\nChristie stood, hugged Marlena, and went to get herself some food, leaving me to get to know the pretty blonde. \n\n\"I saw you last night at the tub. I would have welcomed you but I was a little busy,\" she smiled. \n\n\"Yes, I saw that,\" I laughed. \"Where is Ellis today, anyway?\" \n\n\"Sleeping,\" she said softly. \"He's a bit under the weather, so I'm a solo act. What are you two planning today?\"\n\n\"Scuba diving,\" I said, between bites. \"She's never been, but I've been certified for years.\"\n\n\"That sounds like fun!\" Marlena grinned, as Christie returned, with a decidedly more feminine portion of food. \"I wonder if I could do that?\" \n\n\"Do what?\" Christie asked. \n\n\"Diving,\" I replied. \"Of course you can. They teach you how before they let you go. If you want to go, just sign up, and meet us at the pool. It's not that difficult.\"\n\n\"You wouldn't mind?\" Marlena asked. \n\n\"We'll see you at the pool,\" Christie smiled. \"You and I can learn together.\" \n\nSo, we were quite happy to have Marlena as a friend. A naked friend, but a friend just the same. \n\nAfter we finished breakfast, Christie and I went back to out room to relax for an hour. She had plenty of questions about diving, the equipment involved and what we'd see underwater. I answered her concerns, and gave her something else to think about. Did she want to wear a bathing suit or not?\n\nThere were two dive boats; one big one and one small one. Because the resort had two areas... one nude, and one 'prude'... which boat was which depended on how many people wanted to go diving. \n\nAt the appropriate time, we left our room... naked. We walked out to the pool, and found Marlena talking to the instructor, a pretty brunette with nice tits and a wide smile. It looked like we would be on the small boat, and I would be the only guy diving. \n\nI took a seat, and watched as the instructor, Maria, got the girls set up with equipment, and walked them through the use of it. When it came time for everyone to get in the pool, I joined them, laying relaxed on the bottom and watching them practice recovering their regulators, and clearing their masks. I knew this was going to be a fun day. Boobs float, and I was going to have three sets to watch. I might want to rent a camera, purely for souvenir purposes, of course. \n\nAnd so I did. Maria gave me a knowing grin when she handed the small underwater camera on a selfie stick. \n\n\"For the fish, of course,\" she smiled. \n\n\"Naturally,\" I laughed back. \n\nWhen we arrived at the dive site, the captain, who was clothed, tied off on the marker buoy. Maria tended to Christie and Marlena, leaving me to get myself ready and jump in when I felt like it. She told me to wait on the bottom. \n\nResort dives for uncertified divers are shallow, no more than 30 feet, so we'd have plenty of time to explore the reef. I heard three thumps, and looked up, with the camera running, at the three women descending slowly. It was, as I expected, quite a sight. Especially Christie, whose big breasts were trying to escape from her buoyancy compensator. She was grinning from ear to ear. \n\nMaria checked everyone, then led off, showing her charges the residents of the reef. I lagged back a bit, getting some images of their three bare asses wobbling with their movements, then quickly caught up. Maria had been here enough that she knew 'everyone's' address; where the moray eel lived, the turtle cleaning station, and even the octopus, which seemed to be rather fond of her breasts as it grabbed her with three arms. Maria shook her finger at the playful creature as she put him back in his hiding spot. \n\nIt was a wonderful dive, and over far too fast. Before we knew it, we were back on the boat, and heading in. The cool breeze had everyone's nipples standing up, and I got a group shot of my naked companions arm in arm. \n\nWhen we arrived back at the resort, Christie, Marlena and Maria had a brief conversation that I couldn't hear. Maria waved at me, and Marlena gave me a hug, before Christie took possession and we walked back to our room. \n\n\"I invited them to our ceremony,\" she smiled as we stepped into our suite, where the air conditioning made her nipples prong up again. \"They said they'd be delighted.\" \n\n\"That's great, honey!\" I smiled. \"Invite every woman here, if you like. It'll make for some great wedding pictures!\"\n\n\"Hmmm, yes. I think you're having a little too much fun here,\" she giggled. \"You and your wandering eye.\"\n\n\"My eye may wander, but my heart and body are all yours, my dear,\" I laughed, taking her into my arms. \n\nWithin seconds we were rolling about on the bed, kissing each other urgently. A frantic, pre-lunch quickie ensued, ending with me pumping her full of cum. \n\n\"There, see?\" I panted, resting beside her. \"Like I said. All yours, baby.\" \n\n***\n\nIn the days that followed, Christie and I had a blast. Now that the decision had been made... that we were not here to partake in any extracurricular activities, other than as spectators... we had lots of fun. \n\nWe dove nearly every day, and made love on the beach nearly every night. There were sailboats to be ridden, and a sunset cruise to take. Our all over tans were getting deeper and darker each day from time by the pool. I found out all those clich\u00e9s about nude volleyball were true ; it really was fun to watch, especially when your fianc\u00e9 is involved. All those bouncy boobs. Mmmmm. \n\nChristie found herself enjoying the eyes on her more and more, and believe me there were plenty of eyes, both male and female. That strawberry blonde hair, hanging long down her back seemed to initially attract attention, but it was the rest of her that set the hook. You already know how I feel about her firm ass, flat belly, and spectacular breasts. Apparently I wasn't alone. \n\nHer new comfort with being watched led to some fun around the pool. It started when she very thoughtfully applied some cocoa butter to my dick. Her hands lovingly spread the slippery oil, and woke up the sleeping dragon. \n\nMy cock stood up, and she just smiled, continuing her gentle ministrations. What began as sunburn prevention became a full on hand job, which attracted a crowd. Before I knew it, a gaggle of spectators, mostly women, had formed around us. They were cheering her on quietly. \n\n\"Mmmmm, yes, jerk that cock,\" I heard from the crowd, among other comments. \"Make it squirt, honey.\" \n\nThat was certain to happen. The crowd of naked women eagerly anticipating it made it inevitable. Christie's hands worked their magic. I have to admit, I couldn't remember her ever stroking me from start to finish. Usually, she would just use her hands to get me ready for more cooperative activities. She was looking into my eyes, and read my excitement level correctly. \n\nShe moved closer, angling my cock toward her chest. The motion of her arms stroking me furiously made her tits jiggle in such a way that accelerated the process. \n\n\"Oh god!\" I groaned, and erupted. I heard the gasps from around us as ropes of my seed splashed across Christie's chest, arms and hands. It was a very pleasurable release, and she milked the last drops out into her palm. She spread the gooey mess all over her chest, while the crowd applauded. With the show over, the audience dispersed, and Christie laid back on her lounge to finish massaging my semen into her skin. \n\n\"I wonder what the SPF factor for cum is?\" she giggled. \n\n\"Well, if you need more, I'd be happy to provide it,\" I panted, catching my breath. \n\nShe just smiled, and rested her head back, closing her eyes. \n\n\"Mmmmm. You're the only supplier I need,\" she whispered. \"I love you.\" \n\n***\n\nThe hand job was just the beginning. She also gave me a very enjoyable blowjob, very sneakily turning her lounge around and leaning over onto mine to suck me. Only those in close proximity could see, as she swallowed my load. \n\nShe saved the best for last, but we'll come back to that later. First, there was the little matter of a wedding. \n\nWell, at least I didn't have to worry about what to wear. A simple bow tie identified me as the groom. Christie made a trip to the on-site hairdresser, and came back looking immaculate, just the way a blushing bride should look. \n\nShe helped me with my tie, and donned her flowered bridal tiara, before picking up her bouquet. She had my ring on her finger, and I had hers on mine, as we had no pockets to hold them in. \n\n\"Are you ready, my darling?\" I asked waiting at the door. \n\n\"Yes,\" she smiled, touching my face gently. \"I'm ready, and very happy. I always dreamt of marrying a good man. I think I've found him.\" She kissed me softly. \"Let's go, husband.\" \n\nI said she could invite everyone, and I think she did. The beach was crowded, with naked people clustered around the arch that served as a backdrop for the weddings here. Marlena and Ellis were there. So was Maria, from the dive boat, and Cynthia, our favourite pool waitress, with her astounding nipples. \n\nChristie and I took our places in the arch, and the, um, marriage guy, joined us. It never occurred to me until that moment to enquire what his qualifications actually were, but we knew that the marriage would be legal, so it didn't really matter. \n\nThe ceremony itself was pretty simple ; much like any other non-religious marriage, except of course for the lack of clothing. There was the customary flowery description of love, marriage and commitment, followed by us exchanging promises to remember this moment, and our complete devotion to each other. \n\nThroughout it all, the photographer flitted about, his camera whirring as he captured the moment for posterity. I had a feeling that most of these pictures would end up in our private files. Not everyone needed to know what my dick looked like, or Christie's tits and ass, for that matter. \n\nAfter the 'I do' s, he took us aside, and we did the posed photos. He was very good. Obviously practice does make perfect, because he was able to position us in such a way that the interesting bits of being naked were covered by other parts of each other's bodys. While it was clear that we were nude, the pictures were tasteful, and suitable for viewing by relations with a minimum of tittering. \n\nAs receiving lines go, this one was epic. A man can only take so many full frontal naked hugs from attractive women before a certain part of his anatomy begins to notice. The hugs began to take on the additional component of a quick grope of my dick, and a knowing smile. More women grabbed my shaft in a few minutes than had done so in my lifetime. I'm sure the same could be said for Christie's breasts. \n\nThe sun was beginning to set when everyone dispersed. Christie took my hand, and together we walked slowly back down the beach. There were still plenty of people around, and more were joining them to watch the sunset. We took a seat on the warm sand, still holding hands, and she rested back against me. It was very romantic. \n\nShe pulled my right hand around her shoulder, and pressed it onto her breast. Using her left hand, she grasped my cock, and began to manipulate it into hardness. She turned her head, and kissed me. \n\n\"This seems as good a place as any,\" she smiled. \n\n\"For...?\" I asked. \n\n\"Consummation,\" she giggled. \n\n\"We had sex this morning,\" I laughed. \"I think we, um, consummated, enough for twenty people since we got here.\"\n\n\"Those were when we were single,\" she corrected. \"This will be the first time as man and wife. Just to make it official, you understand.\" \n\nShe wasn't going to leave it up for debate, and bent over to take my cock in her mouth, brushing away a few grains of pesky sand before she did. I groaned, and the few heads that hadn't already noticed what she was doing turned to get an eyeful. \n\nThis would be weird anywhere else in the world, but on this one, small section of beach, among twenty or thirty other naked people, it somehow wasn't. A young bride, sucking her new husband's cock in full view, while the sun set slowly? Barely worth mentioning, really, but definitely worth watching. Christie began to compete with the reason everyone else came down to the beach in the first place ; the sunset. She had repositioned herself on hands and knees, and the movement of her bobbing head had her big, hanging breasts swinging nicely. \n\nThis was not to be simply a blowjob, and she pulled away for a moment to check the sun's progress. The lower edge of the blazing disc was just about to touch the horizon. \n\n\"Ooooo, perfect! You're ready, and I'm so ready I'm dripping down my thighs,\" she smiled, spinning around to face the sun, still positioned on all fours. \"Come on, baby. Fuck your wife!\" \n\nIt took me a few seconds to scrambled to my knees. I looked to the right, where the couple closest to us were staring intently. He was as hard as I was, and his brunette partner was stroking his rod while her eyes locked on the junction between Christie and myself. Her tongue touched her lips, expectantly, and I pushed my cock into my wife's drenched pussy. \n\n\"Oh YESSSSS!\" Christie moaned. I grabbed her hips and pulled her back against me tighter, sliding deeper, until I was buried to the hilt. I shifted my knees on the sand, digging down a bit to get the perfect angle of penetration. She undulated her hips, rotating her juicy cunt on my shaft, as I caressed her firm rump with both hands, pulling out slightly. \n\n\"UHNNN!\" she gasped as I slammed back into her. If she wanted me to fuck my wife in public, then I was going to FUCK my wife in public. I gripped her hips again, and started to stroke deeply into her pussy, in a steady rhythm. \"OH FUCK, yes baby! Fuck my cunt! Fuck my married cunt!\" \n\nI really liked the sound of that. Mrs. Christie Reynolds, wife of John Reynolds, screaming for her husband to pummel her pussy from behind. The whole 'naked-on-a-beach-full-of-strangers-at-the-time' thing was just the icing on the cake, or in this case, the muffin. \n\nI wasn't expecting what happened next. Neither did Christie. It brought the whole situation to a new level of bizarre memorability. \n\nThe couple to the right moved into a parallel position, about ten feet away, and the brunette, on all fours, readied herself for her partner's cock. He obliged her, matching my rhythm. Within what felt like seconds, another couple had done the same, to our left. Christie looked to both sides, then turned her head just far enough for me to see the smile on her face. \n\nBy the time the sun was halfway down, there were five couples, us included, doing it doggy style, facing the brilliant glare. It was public group sex of a sort. Formation fucking. Sunset sex in sequence. \n\nIt was also a race against time. Christie made it clear she wanted to cum together, and she was getting close. The extra stimulation of having others similarly engaged and in very close proximity was helping me catch up. \n\n\"Hard - er, ba - by! Har - der!\" she grunted, urging me on. \"I'm gon - na cum - mmm!\" \n\nThat about did it. My hips went into the automatic overdrive gear that instinctively precedes orgasm, and within seconds, I was pumping her pussy full of warm semen while she tried to muffle her shrieks of joy. She set me off, and we set the others off. \n\nIn rapid succession, the other couples came like popcorn. A only one male came inside his partner, while the others pulled out and sprayed their cum on the body parts presented ; ass, tits or face. \n\nIn typical male fashion, the guys all exchanged high-fives. The ladies were more, well, ladylike, sharing hugs all around, while somehow not spreading excess cum all over each other. With that, and with the sun below the horizon, the performance broke up, along with the audience. \n\nChristie picked up her flowers, shook the sand out of them, and brushed her knees clean of clinging grains. She was smiling when she looked up at me, and adjusted my tie. \n\n\"There. It's official. We're married,\" she giggled, craning up to kiss me. It wasn't a peck. Her arms wrapped around my neck, and her tongue explored my mouth. I pulled her tight against me, squashing her deliciously full breasts between us. We stood in place, rocking back and forth slowly, for a minute or two. Finally, she pulled away. \n\n\"Let's go back to the room, wife,\" I whispered. \n\n\"Lead the way, husband,\" she smiled, taking my offered arm. \"Your cum is trickling down my leg. It tickles,\" she said quietly. \"I'll need a shower. Care to join me?\" \n\nThere she goes again, nagging me. \n\nMy wife... I think I'll keep her. \n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThank you so much for your time. \n\nThis would seem a logical point to end, or at least pause the story of John and Christie. Please send me your thoughts on the matter, and cast your votes. \n\nThanks."
    ],
    "authorname": "ilikeithot6308",
    "tags": [
        "older man",
        "young woman",
        "blonde",
        "big tits",
        "wedding",
        "romance",
        "sex in public",
        "voyeurism"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/love-me-love-my-dogs-pt-07"
}