{
    "title": "The Pirate King Ch. 20",
    "pages": [
        "Wow guys, long time no see.\n\nThanks so much for the encouraging and heartfelt messages you sent during my long absence. Winter hit hard, and I'm trying to make enough money to pay my bills, etc, etc, life. I never forgot about you, or the Pirates. This story is my sanctuary, my practiced escapism. I could never just walk away and leave it go, not forever. \n\nI hope this winter has treated you better than it has me. Remember, sunshine is only ever hours away. And in the meantime we have the moon, and the stars, and all the ways in which those things are infinite and reflections of our own desires and mythologies and still maintain their own truths. Remember all the things that are the moon; a myth, a story, a physical body that controls the seas. Distant, yet so close you can nearly reach out and touch it, so present that it affects our very day to day life. Warm enough to speak to on nights you are lonely. So cold that to visit it without protection would mean death. And yet we went anyway, we put on suits and rocketed through space and past death just because we wanted to go and visit our friend. \n\nMay you find someone who treats you like we treat the moon. \n\nPeace, love, peace again. Rate and comment, feedback if you'd like, I love you and love to hear from you. Each and every one of your voices is special and powerful. \n\n***\n\nThe Captain woke me that night with the force of his dreams.\n\nIt was not something that he meant to do. It was not something that he could have helped. If he could have, I believe that he would have kept his fear from disturbing me and taken it all for his own.\n\nBut he could not. And it was not his own, or at least it did not have to be for he was with me. And the universe understands these things and perhaps his body did as well, held the truth of our connection closer than his mind would allow and so when the nightmare came he reached out and grasped onto me, his hand landing on my forearm with a grip so tight it startled me from my slumber.\n\nIt had been a long time since I had been grabbed out of sleep. Still, my body had not forgotten what usually came from such touches and my eyes flew open, my hand coming up ready to defend or strike. The Captain, already half-awake and now faced with the sudden movement of my body, reacted accordingly and pulled away with a startled noise. I, recognizing the noise he made and, more importantly, recognizing the anxiety held within it, froze. \n\nAnd that was where we finally came to rest; I, frozen in my moment of defense and the Captain, his moment of fear. \n\nWe laid there in the darkness, our pants swirling in the air above us and catching raggedly against each other. I could barely see him, could only hear him in his breathing, feel him in the way he didn't move, could see the faintest outline of the wild curls that sprung up whenever he tossed at night.\n\nMy heart beat. I anchored myself in the space we created and bade it continue. \n\nThe Captain was the first to speak. \"Shit,\" he said. His outline slowly began degrading as he slipped toward the bed, his face dripping towards the covers. \"Shit, shit, shit, my love, I didn't-\"\n\nThis outline, those small sounds. They were not enough for me. I reached out and wrapped an arm around him, felt my skin slide across the smoothness of his chest until my fingers held his shoulder and I could pull him towards me. He fell into my arms, a gravity created as much by the negative we had been as the positive we were.\n\n\"My love,\" I whispered into his hair. His breath left his frame to crawl shakily through my ribs. I waited until I felt his chest again inflate in my grasp before I spoke again. \"I'm right here.\"\n\nI did not say it in full, but I knew he understood. Nothing can hurt you so long as I am with you. How many times had I told him that? How many ways had I promised those words? I said it and so it was true. Or it was true, and then I said it, but in the end all that mattered was that truth. And of that, I was certain.\n\nHe wrapped an arm around my shoulder, pulling me tighter still. I still could not see him but now I could feel him, could smell him, could touch him and was that not better than sight? A mirage you can see. An illusion you can witness. But this, this truth, it was all the senses I trusted and it sat so close to my being that I no longer could tell the difference between it and my name. \n\nHe said not a word, and I said nothing more. We simply held each other in the darkness, surrounded by the knowledge of our love, the protection of our sincerity, and we allowed these simple realities to cocoon us as we drifted back to sleep.\n\n***\n\n\"How long until we reach the border?\" \n\nI glanced across the table as I put down the Captain's breakfast. He had the maps spread out across the surface, his annotated map of the border on the top. I saw he had marked out an approximate position for us that was nearly perfect. \n\nNearly. But still, it was close enough. I placed my finger just north of the spot, a few centimeters above the line he'd marked out. The border was curling North in these currents. \"We should be there by tonight.\"\n\nHe took a deep breath as he looked at where my finger lie. I let him stare, not knowing what might be going through his mind but knowing that he would tell me when he felt it was time for me to know. \n\nWhen his eyes left the map, the place they moved was me. I watched him trace his gaze up my booted feet, my worn breeches. The shirt he had chosen for me, half tucked in and splashed with flour. When they reached my face I felt his gaze tickle against the stubble I hadn't shaved yet that day, the scars I wore more easily than my clothing. The ones he never asked about, the ones that had stories he knew and ones that had stories I tried my best to forget. And when his eyes reached mine?\n\nWhat else could we do? We both smiled. \n\n\"Eat your breakfast,\" I told him. He reached across the table to trace his hand down my arm. I caught his hand at the end of its path and squeezed it lightly before letting go. \n\nI paused in the door and looked back, as much to see him again as to make sure that he was eating. \n\nHe was not eating. He was standing at the table, braced lightly against the solid wood. His chin was in his hand, a smile was on his face and a half-dreamy, half sharpened look in his eyes as he stared distractedly at my ass. \n\nI shook my head, laughing softly to myself, and headed up to the deck.\n\nI found Natch leaning on the deck railing, looking green and winded. I clapped him on the back and he groaned, collapsing down so that his face was in his arms.\n\n\"Good night?\" I asked him. \n\n\"I'm never drinking again.\" I patted his shoulder and left him to deal with his hangover in peace.\n\nHamms welcomed me with a glint in his eye and a smile. \"The ropes were missing you, lad.\" I got to work coiling and cataloging. I wanted everything in perfect shape for when we crossed the border. \n\n\"Should be smooth sailing,\" Hamms told me. \"Weather just right for sailing.\"\n\nI nodded my agreement. It would be just right, at least until we crossed into the North. After that there might be storms as Dreyfus pushed against my control. \n\nI glanced up at the sky and frowned. I did not know how that would go. He was as much the sea as I, as Val, and I had no illusions of control over something so tenuous and mutable. \n\n\"And there's nothin' better than being at sea with - oh, what the gods?\" \n\nI looked up at the change in Hamms' voice. He was standing above me, shading his eyes to look over the horizon. \"Lookout,\" he shouted. \"East, South-East.\" \n\nWe waited as the call went up the sails, men relaying it until it reached the crow's nest. \n\nMy eyes were not as sharp as Hamms', but I already knew what it was that he saw. I should have seen it earlier, should have sensed what came for us from the east, but I had not been looking east. I had been looking North. \n\nWhy would I look east? East was old things that stayed dead and families that didn't try to kill you. East was comfort and safety and ships that held no consequence for men such as me. \n\nAnd yet. \n\nThe sea whispered to me. I shivered at the cool touch of salt water at my spine, the knowledge it sent up my muscles and caused my stomach to drop just a bit, from surprise or excitement or the unknown of it all. \n\nThe shout went out above us. Knowledge from above, from below, crashing into my soul and making me sharper. \n\n\"What,\" Hamms asked, \"the fuck is a ship doing so close to the border?\"\n\nI turned on my heel and went to get the Captain.\n\n***\n\nThe Captain recognized the ship immediately. \"Tobit,\" he told me as he snapped his eyeglass shut. \"A friend.\"\n\nI remembered the ship that he had parlayed with when I had first come aboard, so many months ago. A lifetime. \"Do you have many of those?\"\n\n\"Friends?\" He shrugged. His eyes were tight on the approaching sails. I knew that he understood that if we could see them, they would have seen us. Yet he gave no orders. \"There are many who dislike the current King. We help each other when we can.\" \n\nI leaned back on the mast and watched this ship approach. \"How often do you speak?\"\n\n\"Only when necessary.\"\n\n\"So these men do not know that you have changed ships.\"\n\nThe Captain's eyes closed as his hand covered his face. \"Oh, shit.\" Then he was gone, barking instructions at men who ran to make his words reality. \n\nTobit flew a plain black flag, as many unaffiliated pirates did, and so I assumed that he would chase us no matter who he thought we were. I was right - his sails went up as soon as he landed in a good wind, and the first cannonball landed not thirty yards from our ship. \n\nHe forced our hand. It was not a prescient move, but he did not understand who this ship contained. How could he have known? Or even guessed? And so he treated us as he would any other ship he might find and fired. He must have thought we had but one option, to turn to the wind and run, to trim our sails in the same currents he had found. The sea pushed us generally, and his fire more specifically. What chance did we have against both he and nature? \n\nWe could have killed them all. I could have made my seas be as they wished, my ships be where I wanted. We could have done whatever we so desired. \n\nAttack was the better option. Running in this wind took us away from our direction, or at least not towards it. We would be moving parallel to the lines we were meant to cross. And so we should have fought, made them dead and then made our way to the places we should be. It would have been easy, so easy with the arms we had on board, the souls of our crew members. I could have taken the ship down all by myself, and I was not by myself. We could have destroyed their ship and left them afloat at the sea's mercy. And the sea had lost any sense of duty to them the moment they had begun firing on him. \n\nBut the Captain did not ask me to call up new winds, or for us to turn to them and prepare our own weapons. Instead he ordered the white flag flown and for us to turn tail, to keep distance between us so that they could not put holes in our hull. \n\nI crossed my arms and leaned on a line on the stern, watching the ship chase. The wind was in both of our favor and we had the better ship. We could have easily outrun them. \n\nThe Captain walked up beside me, spyglass out. \"I just need him to see me.\"\n\nI watched him stand stark against the grey of the sea. \"You could have flown your standard.\" Every captain had a flag they had made up for them. We carried it personal and intimate in our souls, our identities. \n\n\"Don't have one.\" The Captain frowned out over the sea. \"Too close to a name, and I only got to captain after I lost mine.\" After he mutinied. After he tried to kill Dreyfus. \n\nI should have guessed as much. Of course he didn't have a standard; how could he? And yet it was such a shocking thing, to hear a captain say they had no flag. To hear my Captain, this man who commanded with such ease my very soul, tell me he did not have what every other captain in the seas had a right to claim. I crossed my arms and leaned back against the riggings, letting that knowledge sink into my bones. \n\nIt did not feel right. \n\nHe looked over to me, eyes quick and brows tight. \"What about yours? What does it look like?\"\n\nMy standard. I let the rope bite into my back and felt the way the sea beat in my chest in time with my heart. \"You know the flag Dreyfus flies as the King's?\" \n\nThe Captain watched me. We bounced over swells, sending up spray. I breathed in the mist and felt myself becoming nothing but salt water and pressure. \n\n\"That was mine.\"\n\n\"Your personal standard? The one you created?\" At my nod, the Captain shook his head. \"You told me it was yours, I just didn't think...\"\n\nWe stood in silence for a bit. The sea beneath the ship, on the ship, in my lungs, my hands, my mouth. A ship following us that I could not destroy. \n\n\"Oh,\" the Captain said. \"Look, he's seen me.\" He waved and a small figure on the other ship began waving his arms wildly. \"I'm going to let them get closer so that he knows it's me for real, that I'm not captured or something.\" He glanced over at me. \"Is that going to be alright?\"\n\nIs it safe, he asked. Is it safe for them, is it safe for me, what can I expect from the sea in this maneuver? I recognized his question and sighed, letting some of the pressure from my body. I nodded as he walked past me, and he paused long enough to rest his hand on my hip, to press his lips to my cheek, and then he was gone to be the men's Captain and I was left standing at the stern, watching Tobit's ship approach and feeling the border sit so very, very close. \n\n***\n\nTobit pulled his ship up beside us with an ease that spoke of expertise and practice. He spent the entire maneuver standing close to the rail, staring down our ship with five men standing at his shoulder. \n\nI did not recognize him, or at least I did not from this distance. That put me more at ease than anything he could have done in action or in word. \n\nI could identify the exact moment when he saw where the Captain stood, his long black cloak tapping at his ankles in the light breeze, his hair wild and exactly the type of control I longed for. It was the moment his shoulders dropped, when his hand left the sword hilt at his side. It was also the moment a large grin spread out over his wrinkled face, lifting the edges of a grey beard that stood out stark against his dark face and made his every expression look more animated than perhaps he intended. Thick grey eyebrows lifted in joy, mirrored by his hands, waving enthusiastically. \n\nThe Captain laughed, lifting his own hand in a greeting. \"He's a good man,\" he told me as their ship drew near. \"Excitable. Would do anything for a bottle of good wine. And don't let him start telling you stories or you'll be stuck all day, but. A good man.\" He then paused for a moment, looking back at me. \"He is not a fan of the King.\"\n\nA few days ago this might have been nothing but a proclamation of shared interests, proof that this man should be entertained. This day, I knew that it was something more. I nodded a quiet acknowledgment of this warning, eyes searching to see what this meant to him. \n\n\"He will say things,\" the Captain said. His eyes were as active as mine, busy inspecting every inch of my face as I waited for more information.\n\nIt soon became clear that this was all the Captain had intended to say. I shrugged. \"People talk.\"\n\nThe Captain winced a bit. \"Tobit talks a lot.\" That was all he was able to say, for their ship had arrived.\n\nI watched closely as Tobit walked across the gangplank our men laid. You can learn a lot about a man by the way he enters a space. \n\nThe way Tobit walked onto our ship made me fear that we did not have enough space for him. It was not that he was a tall man - standing on our ship, surrounded by the Russian and Thron and Gret and yes, myself, he seemed particularly short. But height is only one of the ways that men carry their size. In every other regard he was large, larger than he had any right to be and yet that largeness sat on him so well it would have been strange to see him any other way. His large white beard rested on the top of a large round stomach, held in by a large golden belt adorned by an even larger golden belt buckle. He rested his hands there when not engaging them in massive shows of emotion punctuating a booming voice that carried across the sea and made my skin tickle. \n\nThe Captain told me that they had first met when Tobit had tried to chase down his ship, screaming curses into the wind and shooting cannonballs wildly. \n\nIt had been marked as one of the King's ships. The Captain had stolen it when he had fled after his coup had not gone as planned. It had not been part of the main fleet, but it still held the King's markings and it was those marks that Tobit saw the first time they met, and nothing else. \n\n\"He's an anarchist,\" the Captain told me after he left. \"He says he's neutral, but gods all does he hate the King as an institution.\" \n\nI did not know this as I first greeted Tobit. Nor would it have made any difference. The Captain had told me that he was a friend, and I was not the King. To me these things simply were. \n\n\"Gods,\" Tobit said before even saying hello. \"And what the devil are you doing with a ship from the King's personal fleet?\"\n\nThe Captain shot me a look. I shrugged. It was too good a ship to waste on a man who sailed under Dreyfus. \n\n\"Won't confuse yer friends at all, switching to a King's ship. Another King's ship. This, of all the King's ships. Gods. You know what this here ship has done?\" He shook his head, beard following the motions a beat behind. \"Do I want to know how you got yer hands on a thing like this?\" \n\nThe smallest smile passed over the Captain's lips. \"It was a gift.\" \n\n\"A gift? Lords and demis, from who?\"\n\nThe smile was slightly larger this time. \"A lover.\" \n\n\"Well.\" Tobit blinked a few times, but recovered well. \"Well, you hold on to that one, lad. You hold on tight and don't do 'im any harm because I'd bet ye a ship of me own that he'd make twice the enemy.\" He shook his head again, eyes scanning the deck of the ship. \"A lover,\" he muttered to himself. \"All gods, a gift from a lover.\"\n\nThe Captain smiled lightly and extended an arm. \"Would you like to finish this conversation below decks?\"\n\nTobit's eyes twinkled at the suggestion. \"Got that cook o' yers firing, eh?\" His eyes snapped over to me. I met them steadily, taking in the steel that hid just behind the glint. \"This yer new first mate, then? After Wicky did the runner.\"\n\nThe Captain merely raised a brow. \"You heard about Wicky.\"\n\n\"Gods, lad. I've got things to tell you about Wicky.\" He tossed a hand in my direction. \"Be a good lad and go fetch yer Captain some grub, yeah? I've got things I need to be tellin' him.\"\n\nThe Captain's eyes moved to me, his mouth already opening, but I shook my head and turned to go. I had things I wished to ask Cookie anyway. \n\n\"So many things, lad,\" Tobit was continuing as he headed below decks. His voice echoed out from the small hallway. \"Glad I ran into ye, for I've got things to tell ye.\"\n\n\"Sailor.\" The Captain's hand landed lightly on my arm as I moved to follow them on my way to the kitchen. \"You don't have to do as he asks.\"\n\nI knew. I looked into the Captain's eyes and saw that he understood that. He smiled, a mischievous expression that sent my heart careening, and squeezed my arm. \n\n\"I won't let him say anything important until you get there.\" He gave me a quick kiss on my cheek and hurried off after Tobit, who was still shouting about the many important things about which he'd come to tell the Captain, as if our meeting was anything but chance. \n\nCookie already had two plates made up and was working on a third. I waved him off the third setting; I would not be eating with them. I was not hungry, it felt wrong to eat food I had no hand in preparing, and on top of that I no longer needed to abide by captain's rules. No hospitality, no false companionship, no need to talk to men I did not wish to speak to. No sharing plates with strangers simply for the politeness of it. I had to do nothing. ",
        "It was refreshing, and I was relishing in it. \n\n\"Who is it, then?\" Cookie asked. \n\n\"Tobit.\"\n\nHe nodded as soon as he heard the name. \"A fine man. Not a good one, not by a long shot, but that's got merits in itself and he's a fine man, a fine friend.\" He thought for a moment. \"He'll be wanting wine.\"\n\nI loaded the plates onto a tray, balancing the weight carefully. \"Tea will be fine.\"\n\nCookie didn't protest, although it looked like he might. \n\n\"His cook,\" I asked. The cook's name would tell me more than almost anything else could. \n\n\"Ah.\" He read the label on the tea he pulled down and frowned, grabbing something else from the cabinet. \"Udo, last I heard.\"\n\nI nodded, content in the Captain's trust and my memory of his cook. \"He trained under Minnie while I was King.\" \n\nThere was a pause, a cup half-filled with boiled water. I leaned against the doorway as I waited on Cookie's fear to evaporate. \n\nA heavy sigh filled the room, and then the water continued to fill the cup. \"Best you don't talk to him, then.\" \n\nI took the tea and added it to the tray, noticing that he had made three cups. I nodded my thanks and began to leave. \n\n\"Lad!\"\n\nI paused in the doorway to hear what he might have to say.\n\n\"I'm serious. Don't talk to the cook. Don't let them know who you are. The less who know you live, the better. Aye?\"\n\nI did not turn to look at this cook who might tell me what should happen. I was the sea. I was the Captain's lover. I was the brother of the King, the son of another, the father of my daughter and the brother of my brothers and I was tired of my past taking up more room in my life than my present. I left the kitchen without another word. \n\nTobit and the Captain were in the meeting room, set up on a corner where they could sit across each other with very little distance. When I entered the room the Captain was laughing at something Tobit had said, his hand on the other man's forearm. He waved me in, grin deepening and eyes darkening to see my form. I felt a warmth in my soul at the silent greeting. \n\n\"Sailor,\" he said. \"Thank you.\"\n\nI put the tray on the table between the two of them. If I had still been in my father's ship, I would have been expected to serve, to pour the drink and set the table. If I had been on my ship, I would have had someone else there to do it for me. \n\nBut I was not on my father's ship. And there was no one else. I left the plates for the men to sort out on their own with a sense of joy I did not know I could find in inaction, taking a cup of tea for myself. \n\nTobit didn't seem to mind not being served. He alternated between clapping his hands and rubbing them together, verbally admiring the plates Cookie had put together. \"Best cook on the seas, yers is. You sure he isn't lookin' fer better pay?\"\n\nThe Captain and I both knew now that Cookie was not just a very good cook. Or rather, that being a very good cook meant much more than simply preparing quality food. But the Captain merely smiled at the reduction of Cookie's role and took his own plate. \n\nTobit was scanning the tray, taking in everything I had - and had not - brought. \"Ye haven't any wine?\"\n\n\"No,\" I answered quickly. Both the Captain and Tobit looked up at me, surprise and frustration mixed over their faces in amounts I did not care to tally. I did not want the Captain drinking. I looked over both their heads and ignored whatever it might be they were pressing at my body, letting it sink into inky, uncaring blackness. \n\n\"Our cook makes excellent tea,\" the Captain informed him. \n\n\"Aye,\" Tobit agreed, sounding only a bit sullen. \"But then again, yer cook makes excellent everything.\"\n\nThe Captain was frowning up at me. I ignored his expression, but he was merely concerned. \"You're not eating?\" \n\nThat got Tobit's attention. \"He's staying?\"\n\nI crossed my arms. Why would I not? \n\n\"Of course,\" the Captain was quick to respond.\n\n\"Why?\"\n\nThe Captain leaned back in his chair. I recognized the way his muscles sharpened and knew his eyes would be very, very dark. \"Why should he not?\" \n\n\"Ye can't just bring in a new man.\" Tobit's mood changed as quickly as a storm at sea. Fear made his voice sharp and unattractive. \"I don't know nothin' about him.\"\n\n\"He's trusted,\" the Captain told him quietly. There was a weight to his words that was not normally there. I wanted more than just weight, but I tried to be content with that. \n\nTobit certainly was. He leaned back in his chair, eyes inspecting me with a force that caused me to raise a brow. \"Trusted, eh?\" The Captain nodded. \"Didn't think you'd ever trust anyone, lad. Not after the things been done to you.\" The Captain barely flinched at the casual reminder of his past; I'm sure my gaze intensified, because Tobit blinked as if he had salt in his eyes. \"Alright then. What's the man's name?\"\n\nPurposeful silence filled the room as the Captain and I met eyes. \n\nTobit threw up his hands. \"No, lad. No, I'm not doing another one of ye. I can't barely talk about you, lad, havta describe ye every time I want to bring ye up in conversation. And now there's another without a name? Pahh.\" His hands were as passionate and animated as his beard, flying through the air as if they had their own things to say about this development. \"How am I supposed to trust a man who's name I don't even know?\"\n\n\"You trust me.\"\n\n\"You near killed the King, and have more a reason to hate him than anyone. Who the fuck is he?\" \n\n\"The brother of the King.\" \n\nThe Captain froze, words half-crafted in his mouth. He turned to look at me slowly, surprise fading to questions, but I didn't want to answer them and I was tired of hiding. Had we not already revealed ourselves? Why should this man's presence dictate my existence, make me reduce myself to something I was not, had never been? The Captain leaned back in his seat and slowly closed his mouth.\n\n\"He betrayed me for his crown,\" I told Tobit, watching him lower his hand slowly back to the table. Tea dripped from his wrist from the sudden stop my words had caused. \"Killed me. You trust men who want him dead. Who has more reason for that than I?\" \n\nTobit stared at me for a long time. I looked back, unconcerned. Let him take me in, measure me against what stories I'm sure he might have heard. Let him find me wanting and wonder what else I might still be willing to do. \n\n\"Shit,\" he decided. He turned to the Captain, who was sitting very still, his eyes dark beneath darker brows. \"Is this fuckin' true? Is he who he says he is?\"\n\n\"All of it,\" the Captain confirmed. When he met my eyes I saw concern warring with pride, with amusement. \"And more.\"\n\n\"Shit.\" Tobit's hands were in his beard, tugging at the grey length. \"Gods all and every single fucking lord, what are ye thinking? Are ye mad? Do you know what he's done? Do you know who he's been?\"\n\nThe Captain leaned back, a satisfied grin on his face. I stared down the portly man, calm in the face of whatever he would become. \n\n\"Ye bring that aboard and still think I should trust ye?\"\n\nThere was a flash across the Captain's face at that; I think Tobit saw it as clear as I did for he pulled back quickly. \n\n\"I told you he was trusted,\" the Captain said evenly. The beginnings of darkly.\n\n\"Aye, but I'm thinkin' real hard about whether or not I should be trustin' you.\"\n\nThe Captain raised one shoulder then let it fall, as if he did not have a care in the world. I saw those cares written so carefully on his face, watched him grow darker still and felt it call to parts of me I knew would always be commanded by him. \"Watch yourself, Tobit.\"\n\n\"Watch myself? He used to be the King! He used to be - he's royalty. Fuck.\" Tobit seemed unaffected by the growing energy the Captain contained. He turned to me, slamming into the oceans I had gathered with a singular abandon that might have at one point earned him respect. That day it made me only think him careless. \"Yer not the one who brought him this here ship, then?\"\n\nI couldn't keep the smile from my lips at the memory of the gift. \n\n\"Aw, fuck.\" Tobit did not seem amused. \"A lover, too? Yer in a war o' the gods, lad. Their bullshit -\" he pointed at me, \"is not for us mortals. A war of family, of sorcerers, of, of.\" He shook his head, shaking his beard. \"It is not for the likes of us.\"\n\nThe Captain merely shrugged his shoulder again. \"Perhaps not for the likes of you, Tobit.\"\n\n\"Gods,\" he responded. \"Fuckin' all the gods on this blue earth and the world comin' to an end.\"\n\nI smiled at his words, causing him to stare. Let it try, I thought. Let the world go ahead and try.\n\n****\n\nThe Captain got Tobit calmed down some, although it took time and quite a bit of explaining. He insisted that he was not able to understand it in the time of one meal and I was sent back to Cookie for another plate for both he and the Captain. \n\nCookie frowned at me as I walked in. \"And what's he still doing here?\"\n\nI ignored him, grabbing a few bites for myself while I was still in the kitchen. I had no desire to eat in front of Tobit. I was not his equal and never would be; I did not need to pretend for the sake of hospitality to find him worthy of sharing my table. \n\n\"Lad,\" Cookie warned as I left his realm, but it was too late for warnings and I had not headed the first one and so I left. \n\nTobit accepted the food with some level of trepidation, perhaps realizing what it meant to be served by me. Remembering his careless words to me earlier. I took up my position against the wall again and watched him chose his plate with somewhat less delight than the first time. \n\nThe Captain did not appear to be in any level of discomfort. Quite the contrary; he seemed more at ease than I had seen him in days, weeks. Since we had entered the cracks of the world and left a splintered version of ourselves. \n\nHe looked whole again. Comfortable. He watched Tobit struggle with a slight turn to his mouth that I had come to understand as amusement.\n\n\"So.\" His easy word made Tobit start; I saw a smile flit across the Captain's face, gone before Tobit could focus his attention on him. \"You had something to tell me.\"\n\n\"Oh!\" Tobit's gaze turned to me for the briefest moment. Then he cleared his throat, pushing his plate away. \"Aye. Lots to tell you, lad, 'tho perhaps less now than before.\"\n\n\"Oh?\"\n\n\"Aye. Just.\" Tobit waved a hand in my direction. \"Seems you might know more than me, then.\"\n\nThe Captain smiled wanly. \"Only one way to find out.\"\n\n\"Hmm.\" Those green eyes were back on me, half-hidden under eyebrows drawn down in a near caricature of suspicion. \"I suppose.\"\n\nThe Captain waited. When it became apparent that Tobit was not going to continue, he prompted, \"What of Wicky?\"\n\n\"Ah.\" Tobit pulled his gaze from me. \"That piece of shit. Never liked him, you know.\"\n\nThe Captain nodded sympathetically. \"I know.\"\n\n\"Oh you know, do you? And do you know where he is?\"\n\nThe Captain shifted slightly. I knew he would be wanting look at me. I knew he would be wondering if I knew, dying to ask. \"I don't,\" he told Tobit instead. \"Honestly, I'd forgotten about him.\"\n\n\"Ye shouldn't have. He certainly hasn't forgotten about you. Passes your name, or what of it he has,\" and here the rotund man made a quick gesture of protection, perhaps worried about the possibilities such a name might conjure up, \"onto any man who will listen. Got a bounty out on yer head, he does.\"\n\n\"Shit.\" \n\nI stood back, listening with only the slightest interest. None of this was news to me. Wicky's whereabouts had always been known, and Val had let me know through one of his boys at the last port about the bounty. It did not worry me past the fact that the King might catch wind of it and learn of our location. And now even that was no longer a concern. \n\n\"Where's he sailing these days?\" the Captain asked. \n\n\"He's been dancing with the border for some time now.\" That was true. Over and back, over and back, unwilling to go too far in either direction. I wondered how Tobit had come across this information. \n\nThe Captain nodded, a small amount of relief apparent on his body. \"Won't go North to give the King the information he has. He's too afraid.\" \n\n\"He should be more afraid of us.\"\n\nTobit and the Captain looked over at me; Tobit with surprise and caution, the Captain with a warmth that melted some of the anger that had wormed its way into my lungs. \n\n\"Aye,\" he agreed. He reached out his hand and I took it in mine. \"He should be.\"\n\n\"In any regard.\" Tobit leaned back, his eyes on the Captain. \"You should avoid the man.\"\n\nI hummed quietly to myself. I had different plans, but they did not involve a captain that was not mine and so I kept them to myself. The Captain squeezed my had, perhaps to let me know that he understood what I was thinking or perhaps simply to connect us as we always were, and then he returned his hand to his side. \n\n\"Is that all, Tobit? Men I should avoid?\" He smiled as he said this, and the expression made me smile as well even as Tobit frowned and leaned back instinctively. \"I could have just as well known that for myself.\"\n\n\"Aye,\" Tobit agreed, stepping around the sharpness of my love's smile with practice. \"But there's more to it, then.\"\n\n\"More to Wicky?\"\n\n\"Nay, lad. More to the oddness.\" Having found comfort in his narrative, Tobit leaned back into the Captain's space. \"There's been many, many an strange thing happening upon the sea, lad.\"\n\nThe Captain leaned in further, making the space between them intimate and conspiratorial. This looked like a play, each playing parts they had practiced many times. \"What kind of strange things?\"\n\n\"Strange things like that.\" He pointed at my form. \"Men supposed to be dead walkin' in the light of day. People you saw fer sure go down, back up in the world and steerin' their own ships like it weren't nothin'.\"\n\nI frowned at that. \"You've seen these men for yourself?\"\n\n\"No, man! I'm not a fool!\" He tugged at his beard. \"They're all in the North, that's what they say. Army o' ghosts waitin' on those that dare cross the border.\" \n\nThe Captain looked at me. \"Love,\" he asked quietly. \n\nI shrugged. I did not have an answer for him. This was the work of Dave, that much was for sure, but how? And why? It must be Dreyfus, Dreyfus and Dave and agreements I had never been ready to make. Something within me vibrated a warning and I allowed myself to notice the way it made me nervous. \n\n\"Strange storms,\" Tobit was continuing. \"Calm where there should be rough, rough where there should be calm. Ports inactive with years suddenly filled with ships, ships I've never seen and flying no standard you'd recognize.\" \n\nThe Captain shot me another look. I shrugged again, more slowly. The storms were probably my fault. I did not know anything about the ships. \n\n\"Talks of war on the docks, peace from the brothels but it depends on which brothel yer goin' to since there suddenly seems to be two different groups of 'em. Fighting their own war, never seen anything like it, not in my days.\" He shook his head. \"A mess, a right fuckin' mess is what all of this is. And now I find you, and ye've got a fuckin' ghost aboard yer ship, and it's the old King and a near god at that and yer not seemin' to understand how that's like to make the whole world turn itself right over. Pahh.\" He narrowly missed his own nose with his swinging hands. \"A right mess, a right mess, all this shit. I don't know what to do with ye lad, don't know at all.\"\n\nThe Captain wasn't looking at Tobit as he was saying all of this. He was looking at me, the smile on his lips so filled with hunger and promises of possession that my stomach did a flip. \n\n\"And Wicky'll have yer head before yer even thirty knots into the North,\" he was continuing, and I was tiring of his voice and even more tired of hearing of Wicky and so I broke my Captain's gaze (my Captain, my Captain, would I ever be free from his gaze? Did I ever want to be, did I wish such a hell upon myself?) and turned grey storms to Tobit. He froze, hands arrested mid-movement, words clinging to his lips in icicles. \n\n\"Wicky,\" I told this boring man, this no one, \"is not a concern.\"\n\nTobit glanced quickly over toward the Captain. Whatever he saw there must not have filled him with comfort. I watched him slowly begin to close his mouth, watched him attempt to spool frozen words back into place as if they had never expanded carelessly in the air. \"Aye,\" he made from those shards he collected. \"But I don't think ye give him enough -\"\n\nBut I was done with him, with men. Men who were not my Captain and who could not stop me endlessly with nothing but his eyes, as he was doing now. \"He will be dead within a fortnight,\" I said, and those words were for the Captain, not for Tobit, and I saw how they made his eyes glint, his face harden into something I wanted to reach out and touch and when he leaned back in his chair and ran his eyes over me I could not hide the shiver that cold gaze sent all through my oceans. \n\n\"Lads,\" Tobit warned. \n\n\"Promise?\" the Captain asked. \n\nI smiled. \"I promise.\" And the Captain smiled back, and Tobit made a noise so worried I had to laugh.\n\n*** \n\nWe escorted Tobit back to deck quickly after our conversation. Perhaps he had finally come to understand his place on that ship, in that room. In our company. Perhaps it made him uncomfortable to be something so powerless, so small.\n\nI do not know. I did not pay attention as we walked him up to the deck, then back to the walkway that still connected our two ships. The crews had not mingled, and so it should have been an easy enough thing to send Tobit across and pull away.\n\nI followed him across the walkway.\n\nTobit didn't notice until we were already on his ship. He turned to pull up the lashings for the gangway and jumped, finding me standing where he had expected no one. \"And what do you think yer doin'?\" he asked.\n\nI ignored him, beckoning the Captain over. I could sense his hesitation at crossing to another Captain's ship uninvited but, in the end, all ships belonged to me and I would do as I wished. I waited until he was at my side before I bothered to turn again to the man growing with anger at my side.\n\n\"Tobit,\" I said. Something within him gave at the name, but it was not powerful and he merely hardened to hear me speak it. I could have found the name that would make him crumble if I wanted, but it took time and energy and I did not think him worth it. I stared at him, feeling my seas slowly rising and tasting how salt spray began to thrust itself into my mouth.\n\nMuch could be said of Tobit, but he was a good Captain and with the years of his service had learned when to fight and when give to the power of the ocean. \"What is it you want?\"\n\nIt was good to find out that the Captain had access to a network of men, that there were those we could trust out in ships at least in the south. But there was another network, a trustworthy, potentially more powerful network, if only one knew how to activate it. \n\nI had been taught, long ago, exactly how to do that. \"I need to talk to your cook.\"\n\nThe cook on Tobit's ship was still Udo, as Cookie had thought. I recognized him immediately from the time he had spent training in Minnie's kitchen. \n\nHe recognized me as well. The dish in his hand shattered on the ground at the end its fall, shocked from his hand by my sudden appearance in his doorway.\n\n\"Udo,\" I said calmly. The name tasted like ash brushed off a fire-baked bread, like familiarity, like danger. He flinched as it left my lips, borne on winds I directed and controlled and existed within. \"You've come far.\"\n\nHe dove for his spell cabinet before I finished my sentence. He moved fast. \n\nI was faster. \n\nThe Captain stood in the doorway, eyes wide as he took in the sudden explosion of force I had enacted on this small man. I beckoned him over with the hand that did not hold the cook to the ground. \"Hold him, please.\" ",
        "The Captain did as I asked. Udo was spitting spells at me, at the Captain, at the very air around us but they were incomplete and so had no effect. I shrugged off the broken strands as they hit my shoulders, hearing the choked noises that came from his lips as he tried to tie me with the names he had once tucked away for the day he might need them. \n\nToday was that day, and they were no help at all. My nameless form carefully opened his spell cabinet and took in the contents. \n\nWhen I was content, I closed the door again. \"You still work with Minnie.\" \n\nThe man looked like he was would be sobbing if only he could catch his breath. The Captain, holding his shoulders, shot me a look of concern which I ignored. \n\n\"Will you send her a message, please?\"\n\nThere was no confirmation from the man in his panic. But he would do as I asked. He was a cook, and one of Minnie's. He knew his place in the order of fate. \n\n\"You're going to tell her,\" I began, making shapes from the ocean that had come to live in my throat, quiet and filled with restrained violence, \"that I live.\" I thought for a moment and then amended the thought. \"Or at least that I am back. I am coming, and I will not come alone.\" The Captain was staring at me with open concern now, but I continued. My words splashed down on this man and made him close his eyes in fear. \n\n\"Look at me,\" I told him. And he did. He had to. \n\nWhen I was confident I had his attention, I began the message. \"Remind her of the sea, and send it with comfrey.\" Protect those you care about, because I am unable to. \"Tell her she will need her obsidian at hand.\" The attack will come from the north, and it will come from a family member. A family member of hers. I sent a silent apology to Alan; with so few members of her family left, she would at least suspect. \"And red jasper.\" \n\nRed jasper was for a lover. This, this might be less obvious to her. She might expect me to arrive with Cass, although part of me was sure Minnie was keeping tabs on her with her network and would know she had not left her cave. That she could not leave her cave. \n\nThe Captain was still staring at me, brows drawn down as he listened to me speak in code to a man who so obviously recognized my form and did not take comfort in it. I knew he would be concerned at the safety of this gesture. I was not. If this man did not do what I asked, he would lose his job. More than that. He would lose his references, his family. His community. \n\n\"Do you understand?\" I asked him now. Udo nodded furiously, eyes locked with mine. \n\n\"Good.\" I looked up to the Captain. \"You can let him up now.\"\n\n\"I'm sorry,\" Udo said immediately, \"I'm so sorry.\"\n\n\"Don't be sorry,\" I told him. \"Do your job.\" \n\nHis head worked up and down at a rate that made me fear for his neck. Without another word, I stood and left the kitchen. \n\nThe Captain caught up with me in the hall leading up to Tobit's deck. \"Was that smart?\"\n\n\"He will do what was asked.\" My oceans, my seas, they were not receding. Every breath I took tasted like salt, like power, like the surety that I was going to become another thing I did not want to become. I closed my hand tight and tried in vain to tie down the whole of the planet's salted water. \n\n\"Sailor.\" His eyes searched my form. I did not want to look at him. I did not want to see his face, those eyes that made me more than I ever wanted to be. \"You knew that man.\"\n\nI continued looking over his shoulder at a past that would not leave me be. \n\nHis hand found my shoulder, then my wrist. He brought my arm to him, wrapped me around him. \"He was terrified of you.\"\n\nMost men are, I thought of saying. You should be, too. I am the sea and I am the sea god I killed and I am the monster that created that sea god and I am the King and I am dead and I am and I am and I am, and I don't know how to make me stop. \n\nThe weight of these words rested in my mouth until my head was so heavy it was borne down to his shoulder, and there it stayed until one of Tobit's men found us and ushered us back up into the light.\n\n****\n\nWe did not stay on the deck to watch Tobit fade into the horizon, to witness his ship again become part of the ever-present shine on the rolling waves. The Captain paused only long enough to give instructions to Natch. I did not pause at all, instead rolling with the waves towards the dark of the cabin and the nearness of walls. It was the closest I could get to the dark of the sea, the depths I craved. The ways the pressure would slide against my skin until there was no more air in my lungs, until I turned to dust, then to stone, then to something more precious to those that cared about these things and yet I would be nothing for there were no eyes to witness my existence. \n\nThe Captain witnessed my existence. The Captain was the only eyes I needed. He moved into the room behind me with a grace that kept the waters around me still and I relished in it, settled in the stillness and then I settled further and settled and settled and then I found that I had sunk to the floor, my head on my knees, my breath pooling in the thick air between my legs. \n\n\"My love.\" The Captain was at my side. How he could move in this space and not disturb the things I had become baffled me, amazed me, made me love him so much I thought my heart might burst. \"Are you alright?\"\n\nI leaned into him, feeling how his body could take my weight. He gathered me in his arms and let me take his warmth. \n\nIt was his heartbeat that finally brought me home. The rhythm beat so steady, so solid, and I felt his arms around me and knew that it was he that was those thing. Steady. Solid. His breathing warmed my scalp just above my ear as I matched my exhales with his and let him teach me what air could do.\n\n\"Love,\" he said softly. I sighed and melted into him further. \n\n\"I did not like what I had to do,\" I heard myself admit. It was true; I had not enjoyed what speaking to the cook had made me. Had not wanted to watch the man quake before me as he stared at the ghost of a man he had once sailed under. Had not wished to feel what my names felt like as they dripped, broken, down my spine. \n\n\"You would not have done it if it wasn't necessary.\" He smoothed back my hair and pressed a kiss to the skin he uncovered. \"All is well, we're safe, you did what you needed to do.\" He paused for a moment as I nodded into his lips, feeling the way my hair brushed against the soft skin. I wondered if I roughened him. I wondered if he softened me. I wondered if we remained the same and yet were so changed and knew I would never take back the person I could have been, that I had been, for a life without this man. \"Although I am not sure what exactly it is that you did.\"\n\nMy sigh this time was so large his arms moved in and then back out from my vision. The air around us swirled with the power of our breath, still made thick by the pressure I had brought to our existence early. I waited until everything settled before speaking; this was not information to bring into an room chaotic. \"I needed to get in contact with someone.\"\n\n\"Minnie.\"\n\nI nodded.\n\n\"You've spoken of her before.\"\n\n\"She is.\" Important. Powerful. An ally I can't afford to lose. I waited until those thoughts moved through my body and made way for the truth. \"I miss her.\" \n\nThe Captain pressed his lips more firmly against me for a moment, then backed away. \n\n\"Tell me about her.\"\n\nAnd so I did. I told him how she pulled me into her warm kitchen, shivering and wet from the ocean's cold. How she brushed the salt from my skin and bathed me for the first time in fresh water that didn't fall from the sky. How she dressed my wounds and taught me to cook, taught me patience and the care of weapons and where on animals the spots were that would make them dead and where the spots were that could heal them, all the things my father did not have the time to teach but wanted me to know, expected me to know when he sent me out to ghost my first ship when I was so young I couldn't reach men's throats and instead had to cut their legs like sheep. How she let me cry when my father would have beat me for it, when he did beat me, how she hid my pets from the men and tried to teach me spell work and wasn't upset when it didn't take. How she explained the world to me when what everyone else said sounded like gibberish, because their tongues were tuned to rocks and sand and trees and I was made of wetter, more towering things that crashed and turned their truths to shifting sand. How she kept me from getting lost. \n\n\"A tree might not be there,\" Minnie would tell me. \"A river's not gonna move, but it might run dry. The winds? The currents? They'll always be there for ya, but only if ya know how to find them.\"\n\nAnd I did. I always would, and she didn't have to teach me and she didn't ask anything of me but my arms to bake her bread in the morning. \n\n\"Where is she now?\" the Captain asked when I finally wound down. It was dark in the cabin. I had been speaking for the better part of three hours.\n\n\"You should know,\" I told him. \"You've sailed with her.\" \n\nHe took a moment to understand that. When he did, surprise cracked across his face. \"She sails with Dreyfus?\"\n\n\"She sails with the King.\" And she always would, until she passed her place down to the next in line. It was her destiny, her fate. \"Who holds the crown is not of consequence to her.\"\n\n\"That doesn't bother you? That she chooses to be with a man who killed you?\"\n\nI shrugged and leaned my head back against him. \"It is fate.\"\n\n\"That's not an excuse.\" There was an edge to his voice that surprised me. I turned back to see his eyes hardened, his gaze somewhere else entirely. \"I mean, we have some control over our own destinies.\"\n\n\"Some,\" I agreed. \"But fate is fate.\"\n\n\"That's bullshit. Fate doesn't control our whole lives. We make decisions. She chose to stay. I'm here because I decided to mutiny.\"\n\nI was silent. I did not know what to say. \n\n\"I mean, come on. You don't believe in this completely either, right?\" At my silence, the slight smile on his lips dropped. \"Really?\"\n\n\"You can't control your fate.\"\n\n\"Control -\" His face twisted for a moment. \"I have control over my own life. Not fate. Me. I make choices and I'm responsible for the consequences. You can't tell me that isn't true.\"\n\nI did not know what to say. Things happened. You followed your path. It is what it is meant to be.\n\n\"Sailor.\" The Captain was sitting up straight now. His brows were drawn down tight. \"I know you don't believe all this. You're the one who said the prophecy was bullshit.\"\n\n\"The prophecy is bullshit.\" I sat up, pulling away from him slightly. His words had landed on my skin and were making me itch with all the spikes he had hidden in his tone, and I was no longer sure I wanted to hold my body so close to his mouth. He frowned to lose my form but allowed me the space. \"But that is not fate.\"\n\n\"Then what is it?\"\n\n\"Obscurity. Intention.\" I shrugged, keeping a careful eye on the way his mouth shaped words. Wondering where this had come from and why. \"Perhaps the prophecy's fate is to be false. It can both be fate and be untrue.\"\n\n\"It can't.\" He threw up his hands. \"That's the stupidest thing I've ever heard.\" I didn't know what he wanted me to say. I sat in silence and watched his mouth gather points. \"It can't be both true and untrue. Bullshit and fate. I don't want to be defined by something so fucking. So.\" He struggled with the words, shattered sentences sitting bloody and unwilling in his mouth. I saw the moment he gave up on his body, watched it pass from his mouth to his throat, his shoulders, saw it land in his chest and the downward press of his knees. Saw all the places those swallowed shards pressed against the inside of his skin. \"Jesus. If that's true, then why bother with any of his? What was the fucking point?\" \n\nI knew suddenly with a clarity that hurt what he was asking, what struggles he had awoken. I, too, had lost my names. I had felt them ripped from my soul, unconsenting and nearly unconscious. Had become empty, had become lost, directionless. For fate. For a prophecy in which I did not believe. For the sea. \n\nBut I believed in fate, believed in the order of the world. Things happened because they had to. I met the Captain because it had to be; anything less than this would have been unthinkable. Why ponder on what might have been? This world existed; all others did not, and could never have been. \n\nI had never stopped to consider that the Captain might not believe it was so. \n\nErrant curls had fallen into his face as he had wrestled with his internal battle. I wanted to reach out and brush them back but I was afraid that I would cause punctures I did not intend, and so I merely lightly brushed a hand over his knee where his last words had fallen, bright and worked over so hard they must have tasted like dust. \"Do you regret it?\"\n\nI would have never considered to ask this before this conversation; even saying the words felt wrong, my tongue struggling to shape the sounds. How could he regret this? Him, and I, here together? But it was also him nameless, and it was also him in pain at night, and it was also him not being able to sleep, and not having a standard for his first captainship, and, and, and. How much had he lost merely to gain me? \n\nOf course I would do it all again for him. My world had not begun until the Captain had entered. But I did not believe I had that choice - it was fate. It simply was. \n\nThe Captain believed he had a choice, that he controlled his narrative. Then this was not a forgone conclusion. But then we were not a certainty - we could have never been. \n\nThat thought hurt to even consider, and I did not wish to think it and yet I had to because the Captain did. My fingers were light on his knee and my eyes did not come anywhere near his. I could not bear to look at him as I finished the question I had never thought to consider, let alone ask. \"Knowing what you now know, would you have done things differently?\"\n\nThe pause he took was so long I thought I would die. He will leave me, I thought. My fate, my destiny. My meaning. It is to be not enough for the man that is my everything. \n\nBut then; \"No,\" he said. He reached up; his hand traced over my cheek. \"Never. The things I did brought me here. They brought me to you.\" His fingers sent sparks down my spine; or perhaps it was his words, settling on my bones and working at become etchings, permanent marks for me to carry. \"I couldn't risk changing anything, not if that might mean losing you.\"\n\nI leaned forward until my forehead met his. I had to ask, had to know. \"Even if that means losing your name?\"\n\n\"My love.\" His hand took root at the base of my skull. I thought about warning him away for my spine was dangerous now, sizzling and electric, but he had made it that way and I did not have the words. \"You are worth so much more to me than my name.\"\n\n\"Love,\" I breathed, my lungs his truth, his name, our reality. His free hand landed on my cheek and I turned into him, connected with him, sparks seeking purchase and turning back on themself, nowhere to go, nowhere to go...\n\nHe caught my chin and lifted my head up. I had a moment to look up into those endlessly dark eyes before his lips hit mine and I dissolved into nothing but electric blue flashes and relief.\n\nHe teased me, my Captain. He knew he had me falling apart beneath him, that I wanted to become nothing but his darkness and my glint of sunlight and the ways those things might interact forever and become something so much more but he held me back, kissed me so slow and never enough to let me fully dissolve. It was little by little that I became lost to him, first my eyes, then my limbs, and soon he was straddling me and all I could think about were his lips, his teeth, his fingers and how they danced so dangerously over the places I wanted them most of all and landed on the places I needed them, because that was where they were. \n\nI could only breathe when he broke his lips away from me, so focused was I on the things he made me feel, and soon my lungs were empty but for him. He licked over my bottom lip and a rip of lightning green ran across my world making me gasp, and I heard him laugh as my hips bucked up against his without me having made allowance for them to do so. I wondered dizzily if he might not create a new star from all the sparks he made me give him. If he couldn't use me to create a new constellation, a galaxy. A universe, all for us. \n\nAnd then there came a knock at the door. \n\nWe ignored it at first, so caught were we in each other and the passion we wove. But the sound came again and the Captain pulled away, his eyes flashing dark as he turned towards the noise. \n\n\"Shit,\" he said. I breathed into the space he left behind, wondering if I looked as desperate for air as I felt and hating the chance he'd given my body to breathe. I wanted to go breathless for him. I wanted to be nothing but pressure and darkness and commands I could not ignore. \"It's probably Natch. I didn't leave him much instruction, he'll be wondering...\" he trailed off as he ran his eyes over my still-frozen form.\n\n\"I really should get that,\" he told me. He did not sound convinced. \n\nThe knock came a third time, sounding hesitant. The Captain tilted his head, curls falling into his face as he looked down at me with a smile that cut to my stomach and made my heart begin to race. \n\n\"Be right there,\" he called towards the door. He leaned down and pressed his lips to my skin. \"Don't. Move,\" he breathed into my ear, and I thought he'd go to the door, but instead he turned his body just a bit and called, \"Come on in.\"\n\nThe door opened, showing Gret with his head buried in a set of maps. \"The bearings you gave us don't make sense, the -\" Gret froze, finding the Captain straddling my panting form. \n\n\"Ah,\" he said, backing up slightly. He held the door as if it could shield him physically from what was happening before him. \"If this is a bad time -\" \n\n\"Not at all,\" smiled the Captain. He slid his hand down my chest as he stood. I tilted my head back and closed my eyes, counting to one hundred as I tried to control my body's reaction to his legs skimming my lap. \n\n\"Okay,\" Gret said weakly. I lost my place and had to begin again. \n\nThe Captain leaned over me again, wanted to show this man how it worked, and I stayed still as he put his lips next to my head. \"Stay,\" he reminded me. He waited a beat. \"Are you trying not to think about what's going on?\" \n\nI nodded, still trying to count. \n\n\"That's hardly fun.\" He paused. I felt the ends of his curls tickling at my neck. \"No, no fun at all. Why don't you think about what I'll do to you when I get back instead.\" \n\nThere were no numbers that could save me from the places my mind went, tripping over itself. \n\nThe Captain lifted his lips, looking at my face. He smiled, then kissed me gently, and it was all to show this man how this worked, it was all to remind me who was in charge, and I loved it, my body sang, and when he left I stayed and tried not to think too hard about what I hoped would come next because I did not want to explode.\n\nSome time later I heard the door open and then close, and then the Captain was back at my side. \"Control,\" he told me quietly. He slid a finger down my chest, catching on the fabric of my shirt and causing me to gasp for breath. \"Of fate, of my life.\" He reached my waistband and shifted his body so that his hand could slide within my pants. It brought his face against mine. \"Of you.\" His breath was hot against my cheek, his hand hot against my skin, and I was his, his, his. \n\n\"That is what I do.\" He whispered in my ear and I would have lost my breath at that but he chose that moment to grab my cock, firmly pulling it and I yelped, had to move up and his mouth was waiting for me, and he kissed me, one hand on my cock and one hand on my head and his mouth on mine and if someone was in control, it certainly wasn't me. ",
        "He put his hand in my hair and pulled me up, up, up, until his pressure began to push me back and I fell back on the bed, his body toppling above. All this time his hand stayed on my cock, his breathing harsh in my ear, and my heart beat faster, faster, faster. \n\n\"Get your pants off,\" he commanded, and I obeyed as quickly as my shaking body could. He used his fingers to pull my shirt from my body and soon I was naked for him, bared to him, and his fingers traced over my skin so lightly I shuddered. \n\nHe stayed like that a moment, fingers tracing patterns in my swirling currents. I lay there and relished in my ability to obey him in even this, knowing I always would. His fingers slid over my chest, my stomach, traced over scars and brushed past a cock so hard and ready and aching for him to my hips and then my thighs before he pulled his hand back with a smile. \"Love you like this. The way your body stays so still even as you fucking lose yourself.\" He dropped a kiss on my forehead and I shook from the force of his lightness, his dark. \"Gonna need you to stay like that,\" he whispered to my skin. \"Still, and ready for me. Don't you move.\" \n\nAnd then he was gone. I barely breathed as I laid there in wait for him, my seas churning, churning, churning...\n\nWhen his face filled my gaze again he was smiling, his dark hair falling into both our faces. It got caught up between our lips as he leaned down to kiss me. \"Love you like that, shaking and waiting.\" He swept his hair to the side and sat back, looking at me. \"I make you wait, you know. To look at you. To make you more.\" \n\nI knew, and I loved it about him. I turned my head and saw he had brought the manacles back with him, and had not brought his clothes. My hands came together on their own accord, wrists meeting just above the head of my cock at my stomach. He watched me, eyes twinkling with a darkness that churned my stomach and made me want him so much more. He took my hand and drug them up above my head, his lips teasing distance from mine. I made a small noise as he passed me by and he laughed.\n\n\"Love you like this, too,\" he told me as he snapped the first manacle around my wrist. I moaned as I felt the familiar pressure. \"All the ways you're so loud with your silence. How you beg with the quietest motions, the simplest noises.\" The other manacle snapped shut and I felt the truth of their power like a shock, like a lightning strike. \"My quiet, stoic sailor.\" His fingers ran down my arms, my side, and then his hands were on my hips and his lips just above my cock and I couldn't breathe. \n\n\"How I love you,\" I heard him mutter, and then he took me in in his mouth. \n\nHe worked me slowly, his head traveling up and down at a pace so slow it made my stomach jump in pleasure and the effort it took to remember to bring air to my lungs. I tried to my best to keep my hands above my head, knowing that was where he wanted them, but when he swirled his tongue slow and hard against the base of my cock, the head buried deep within his throat, I drew them down and over my eyes, the manacles rattling from the move. \n\nHe paused in his movement. Then his lips lifted from my cock. \"Thought you were gonna stay still.\" I could hear his smile in his words, could feel it in the way his tongue curled around the head of my cock. My arms gathered tighter around my eyes and I cursed. \n\n\"Gonna have to do something about that,\" he muttered before licking my cock from the base to the tip. I cursed over and over again as I shook beneath him. \n\nThen his hand was again in my hair. He pulled me up and into a bruising kiss that took up my entire focus until his hand again landed on my cock and I became a split entity, nothing but cock and lips and it took a whole minute for me to realize that my Captain had stopped kissing me and pushed me against the bed, face-first, my ass in the air and my arms guarding my over-stimulated head. \n\nI could hear him chuckling as he leaned down to kiss the back of my neck, his hands moving my hips to where he wanted them. I felt him press up against me, felt his hard cock slid along my crack and nearly cried out. \n\nHis hand smoothed my hair back from my hidden face as best he could. \"Too much?\"\n\nI shook my head and pressed back into him, causing him to make a noise that was a half-laugh, half moan as he pressed my head into the mattress. \n\n\"Love this, too,\" he told me, his voice the wrong kind of light - my kind of light, the dangerous kind, angler fish and the glint of merfolk gold, the kind of light that you know is just out of reach but you'll use your last breath to reach for it anyway - as he nudged my knees apart. \"Love how you take what I give you and make it better, more.\" His fingers dripped down my crack and I felt how slick they were. He pressed a single finger into me and I moaned to have him within me but needed more, needed so much more. When he pressed a second finger in I called out. At the third, I was nothing but noises and desire. \n\nHe held my head down into the bed and pressed his fingers into my ass again and again, ignoring my cries. \"Love when you get like this,\" he told the base of my spine. I babbled something as his teeth brushed against my skin even as his fingers continued their relentless rhythm. \"When you become nothing but sex and need and those noises you make,\" and here he drove his fingers deep into me and I called out, begged him but I did not have the words, could not make the sounds and I felt him laugh behind me, \"and I get to lick up all the pieces you leave behind.\"\n\n\"Sir,\" I managed. \"Need you.\"\n\n\"Oh?\" He didn't pause. \"Need what?\"\n\n\"Need you.\" I turned my head and looked back at him and at that he paused, froze, really, his eyes on me and only me, his gaze so dark I was sure I would be consumed. I looked into those dark eyes and told him, \"Need you inside of me.\"\n\nThere was a long moment as I wondered giddily if I perhaps had not crawled inside of him, that his eyes were so deep and endless and promising that I might have fallen in but then he slammed his finger into my ass again and I hid my face in my arm and cried out, feeling the way he had known exactly where to place his fingers. \n\n\"No,\" he told me. The cold in his voice belied the way his breath was catching. \"Can't do that.\"\n\n\"Sir,\" I begged. My body was shaking with need. \"Please.\" \n\n\"Been so long.\" He paused and then I felt him stretch me further, his fingers moving apart and then back together within me. I do not know what noises I made as he played. \n\n\"Need you ready.\" His voice was light untethered, on the verge of gone and I was gone, so gone and when he leaned down and whispered in my ear, \"Beg.\"\n\nI fell apart. \n\nI stopped thinking, stopped trying. Became nothing but what he wanted me to be and what I could be for him, and he wanted me to beg and so I begged, begged him to fuck me, begged him to take me, to press his cock within me and to please, please do it soon I needed him, I needed his cock and I was do not know what of my words did it for him or perhaps it was the whole of them combined but halfway through a sentence his fingers left me and I called out for I was bereft. My cry was interrupted as I moved through space, my body toppling at his physical command.\n\n\"Wanna see your face,\" he told me as he spread my legs. I looked up to see him hovering above me, one hand on my thigh keeping my legs wide and one in my hair, and then I lost sight of him as he pressed into me and took me all in a single motion. \n\nWhen the sparks faded from my eyes and I could again begin to think I found him staring down at me, his hand tight in my hair and his cock buried deep within me. The hand from my leg was slowly wandering upward over my stomach, my chest. I gave a strangled cry as he pinched one of my nipples and he moaned above me, fingers tightening. \n\n\"I fucking love you,\" he whispered into my neck, and then his hands were gone to my hips and he began to fuck me. \n\nThere was no pretense of quiet, of slow build up. He knew what I needed, what I relished and begged for without words and with and it was what he needed as well and so he took it, took it hard and took me fast, his eyes on me the entire time. \n\nI tried to watch him back, I truly did. But my eyes kept drifting closed or perhaps they were still open but I was not seeing, was not understanding anything but the way he made me feel, the way his cock was in me again and again, his hands on my hips, and among it all, within all of that (as if it were not enough; I was overwhelmed, un-containing, I was overflowing with things to understand and take in and yet the world, reality, the sea...) there was a pressure, a knowledge, and I sought to push it away to concentrate on nothing but him and it was by doing this that we came to cross over the border with no warning at all. \n\nHe felt it with me, through me. The surging power of a thousand directed energies spilling over my body, a hundred broken spells trying their best to latch onto my soul, my names shattered or hidden or putrid and rotten in the homes that had been crafted for them there. It hit all at once and I bucked in a new way, a different way and the Captain saw this change and dropped down to wrap his arms around me, his face buried in my neck. Buried deep within me he shielded me from what he could and held me through what he could not, and I held tight to his form and felt the way his muscles covered bones held lungs pumped air and birthed galaxies, and I took refuge in new worlds and emptiness that had never known the things that I had been made to do. \n\n\"Love you,\" he whispered again. And I heard in those words everything he meant, all the ways he reached out to me and protected me, gave me space to heal and be whatever it was I needed to be. I was not the things the world had created, not when I was with him. I was me, and he loved me. I was the sea and a sailor and a man and this man, this Captain. \n\nHe loved me. \n\nMy manacled hands lifted over his head to hold onto him as I felt the power of this crashing against the power of this place, the knowledge of it, the ways those conflicting and similar things became cold and warm fronts and moved for each other, lifted, shifted, and felt the beginning of such an existence that I had never had the wonder before of learning. \n\nThis was my home. The Northern seas sang to have me back, and my body sang back and vibrated with the joy of it. I dug my fingers into the Captain's back and pulled him closer to me, deeper into me, wanting him to feel the truth of this place with me. Needed him to be connected to it with me. \n\n\"I've got you, baby,\" he whispered. His arms went on either side of my head as he began slowly fucking me again. Our eyes were locked, my gaze overflowing with salt and the grey of these turbulent seas and I needed more, wanted to dissolve in spray and churn in all the ways that gave the sea direction, live in the currents that hid in the crashing swells and the Captain saw that, tasted that, perhaps even heard it as the wind whipped outside of our window, my home exulting in my return as parts of me returned to my soul with the rush of long absence and gravity. \n\nI was speaking, I think, saying words or perhaps merely noises but I know my mouth was on the Captain's ear as he fucked me and held me down and I was there, I was with him and I was also in the ocean, I was the ocean and I exploded in salt and movement and power as I clung to the Captain and wondered why had i ever worried that another might control these seas, they were mine, they were me and our ship rolled into them and the Captain rolled into me and I laughed to know the crashing currents that grew were nothing, nothing but a choir raised from audacity here to sing me home. \n\nThe Captain pressed his lips into my laughter and if it were anyone else I would have fought against such containment but I knew he could only make me more and I laughed again and spun us, felt the ship turn beneath us as the sea righted our path as his hands tightened on my wrists, held me tight and and didn't allow my body to move and I knew, I knew that he was doing this, that by keeping me still he was forcing my soul to move, that he had made me so much and not allowed my body to express it and so this was it, this was the only way and the Northern waters laughed with me as I gave into him, surrendered, as my lips formed words that begged and pled and turned into moans and the Captain leaned down and bit my ear and I heard his voice in every molecule of my being, every centimeter of the sea;\n\n\"Come for me.\"\n\nI threw my head back and felt his fingers dig into my skin as the tips of waves flew in our open window, the sea rough and our lovemaking rougher, the Captain's thrusts wild and bringing his skin breaking against mine again and again and I tasted salt in the air and on his lips as he bent down to press them to the mine as I gave myself to him and came. \n\nHe was shortly behind me, his hips twitching and his hands tightening on my wrists, my hair. He drug me as close as I could get to him and still, still we sought to be closer and when he came he shouted into my mouth and the sea responded with a clap of waves that sent our ship rocking and knocked us to our side. \n\nWe lay there in the bed, panting, his hand still in my hair and my cum smeared across both our stomachs. I could feel him shaking and could not be sure that it was not from the wind whistling through our sails, the way the whole of the floor beneath our feet quaked. Everything shook. We had shaken the world. I was everything and nothing and the Captain had made me such, had brought me back to such harmony with the wild, dangerous things I held within myself and out in the world and I breathed with the storm outside us, feeling how it was exactly as it needed to be, how I was exactly as I needed to be and how I carried us precisely where we were meant to exist. \n\nThe Captain stirred in my arms and I shifted slightly, unsure how to move a body and an ocean at the same time but willing to try for him. But he was merely moving to bring his body yet closer to mine. \n\n\"The ocean,\" he said, and kissed my neck with a gentleness that told me everything those two words were meant to convey. \n\nI wrapped my arms around his neck and buried my face in his hair, crashing into the ship and myself and reveling in my infinity. \n\n\"Welcome home,\" I told him. \n\nWelcome home. \n\n****\n\nWhen Natch burst through the door, neither of us moved. I do not think that we could have, our bodies exhausted, our breathing so tangled it would take hours to separate back out if, perhaps, we ever felt the need to do so. \n\n\"The ocean,\" Natch gasped. He was dripping wet, blonde hair plastered to his face making him look nearly drowned. \"This storm, it came from nowhere.\"\n\nI snuggled closer to the Captain and closed my eyes again. I was still spread out, extended by the way the Captain had ripped apart the limits my body \n\n\"How many sails do we have up?\" the Captain asked, sounding slightly bored. \n\n\"Only two. It happened when we crossed the border,\" Natch continued. I heard the fear in his voice, how his words tumbled out too quick from lungs more focused on finding breath to fight, to run. My fingers traced up and down the Captain's back and I felt him shiver beneath my touch even as I did my best to snatch the stars from the sky, laughing as I crashed back towards my infinity only to rise and try again.\n\n\"The mainsail?\"\n\n\"No, just the -\" Natch cut himself off. \"Did you hear me? It started right as we crossed the border.\"\n\n\"Which sails?\"\n\n\"Topsail and jib. We couldn't get to the topsail, the seas -\"\n\n\"Best get that topsail down, then,\" the Captain cut him off. His eyes were on me, a slight smile on his lips. I kissed his collarbone and watched how his eyes consumed me and never seemed to becomes sated, even as I was endless, even as I churned and cut and spun out and back into this limited body. I wondered if he knew he was holding the whole of a storm. The whole of a sea. \n\n\"Cap.\" Natch's voice was raised in pitch and volume. \"The men almost fell, the seas are wild, we crossed the border and the sea erupted like -\" There were many unsaid things dropped into the pause he took. \"Cap, there's wild tales about the north.\"\n\n\"Aye.\" The Captain's eyes followed the path my fingers took over his chest. \n\n\"And the folk that don't leave it.\"\n\n\"Aye,\" the Captain said again. I lost track of my fingers as I became a swell, as I grew, expanded with a swirling motion and momentum that lifted and dropped molecules and cracked water against air until the sky became frustrated and turned my tips to foam, and I smiled and the Captain was kissing my forehead in a room so small, so perfect. \n\n\"Cap.\" Another loaded pause. I carried it out the window and dissolved into spray, settled it on the rough grain of the wood, dripped it into dark turning water and explored the meaning of dimensionality. \"I think someone is controlling the sea.\"\n\n\"Aye,\" the Captain said, a hint of awe in his voice. I heard him from where I crashed again and again against a stubborn rock for no other reason that it was in my way and I had the luxury of time to make it not be so, from where I lay deep and racing beneath the turbulent tips, from where I forced another ship to run back across the border and sent a thunderclap to herald my joy at the chase. From where I lay in his arms in a cabin on a ship in my vast expanses. \"I think you very well might be right.\"\n\nNatch took that in with incredulity. \"Aren't you the least bit worried about that?\"\n\n\"No. Why should I be?\"\n\nNatch stood silent, shell shocked. \n\n\"He won't let us get hurt.\" The Captain brushed my hair back and the ship rocked with the power of that touch. \"Will you, love?\"\n\nI looked up at him in adoration and saw the way he smiled down at me, the awe and love and hunger in his eyes and I turned my gaze to Natch and found him staring. I do not know if it was the sex that still dripped from my body like a rock after a swell, or the way the sea clung to my skin as if it were static but when Natch not say another word. He took a small step back and swallowed, nodded, and left. \n\nThe Captain did not seem to notice his movements. He continued to run his hand through my hair. I hummed happily to feel his touch against the turbulence of my soul. \"I am right. You are controlling this.\"\n\nIt wasn't a question and so I did not bother to answer. He smiled as his gaze traced over my body, the way my hands remained bound, the cum still spread over my stomach, dripping from my ass. His gaze sharped as his eyes traced over my hips and then he leaned down, pressing a kiss to my temple. \n\n\"You amaze me,\" he muttered into my hair as he settled into my arms and I into his. \"You absolutely amaze me.\"\n\nI pulled him as close as I could and allowed myself to again drift, expanding out past rocks that would become sand that would become nothing but ways for others to see the motions I took, past ships that fled the ways I wore my joy, past vast expanses of nothing but me and the things that used my existence to live, until I reached the far end of the battering winds and shifting currents where an unremarkable ship manned by an unremarkable man drifted just on this side of the North and just on the right side of the winds.\n\nOur ship skimmed the top of a swell, cresting easily with the slow force of truth. As we crashed back down into my valleys I smiled, feeling our momentum carry us forward towards our goal, towards that unremarkable ship and the unremarkable man, and I closed my eyes to listen to the Captain's heart and contented myself with the knowledge that when the stars rose tomorrow, neither the ship nor the man would be there to block my view."
    ],
    "authorname": "nakamook",
    "tags": [
        "gay pirates",
        "gay male",
        "gay",
        "bsdm",
        "domination",
        "novel",
        "plot",
        "exhibitionism",
        "handcuffs",
        "rough sex"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/the-pirate-king-ch-20"
}