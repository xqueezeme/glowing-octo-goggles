{
    "title": "How to Tame a Brat Pt. 04",
    "pages": [
        "<center>Chapter 10</center>\n\n<center>Reuben</center>\n\nAfter our conversation in the snow, I left the clubhouse and drove up the mountain to my home, trying to keep my frenzy at bay. The hunt was on. The games had started.\n\nThere was so much to do.\n\nI was tired of trying to resist Alice. I had spent far too many months avoiding her, trying to convince myself she wasn't the right kind of sub for me, that I'd missed the truth of the matter; she'd been placed in my life for a reason, and I needed to remember my truths. Listen to the Master. The visions don't lie. \n\nA few days later in my home in DC, I paced up and down the hallway as I made a mental list of everything I needed to do. History. Research her disorder. Follow up with Lewis and Pierce. Download all my apps again. Create a folder on my phone for her. Tidy up the playroom. Charge everything and unbox the toys. Get online and find some resources or articles on how to deal with a brat, which was the one thing I thought I'd never have to do, so it was the one thing I'd never really read up on.\n\nThe first and most important task was the one I didn't quite want to tackle yet. I argued with myself about it as I walked towards the bedroom door, and then past it, and then turned and walked the hallway again.\n\nJust clear the room out. \n\nAlice may bail. This might not work out. \n\nIt's been six years, clear the room out. \n\nShe probably won't travel with me. At least not right away. \n\nIf she goes in there and sees that room, it will upset her. Clear the room out. \n\nI paused in front of the door, staring at it and wishing I didn't have to do this on my own. Wishing I'd accepted my friend's offers to help. Wishing I'd done it right away, while I was still numb.\n\nI can't. Not tonight. \n\nIt wasn't that late, so I called Becca. \"Exciting life you live, Mr. Weston. Calling me on a Friday night?\"\n\n\"I'm in there with the champs, apparently. You answered on the first ring.\"\n\nShe laughed. \"What's up, Reuben?\"\n\n\"I need you to tell me everything you can about Borderline Personality Disorder.\" There was a hesitation on the other line, and I could practically hear her smirk. \"Shut up.\"\n\n\"Alice? Really? She isn't your type, Reuben.\"\n\n\"Tell me about it,\" I sighed, settling down in my recliner. \"But humor me.\"\n\nBecca broke down the nine characteristics that made up the disorder, explaining that a person had to have five in order to be diagnosed. Most of what she said seemed to clarify Alice's personality almost immediately; rapid mood shifts, attachment issues, fear of abandonment, dissociation, and more. I'd seen evidence of these behaviors, but hadn't known what to make of them.\n\n\"Are things making sense?\" Becca asked.\n\n\"More than you know.\"\n\nLittle things started to click. Of course there were the rapid mood shifts, but there was more than that.\n\nThere was a day when Sophie and Cat had been sitting together having a private conversation, and Alice had gotten a hurt look on her face and avoided the two for the rest of the day because she'd felt left out. It seemed to have resolved itself, so I hadn't thought too much of it.\n\nThen there was the way she seemed to be obsessed with annoying me, and then suddenly out of nowhere she'd decided she was done with me, and avoided me completely. I was sure other things would come to the surface as I dug further.\n\nAnd the times she appeared to completely lose herself mentally, staring off into space, rubbing at her neck, and then jumping with fear and covering her face when someone called her attention back to her body. She dissociated regularly, and panicked when brought back to herself.\n\n\"Why are you doing this, Reuben? You haven't pursued anyone in years and now you're choosing her? She's going to frustrate the hell out of you. Don't get me wrong, I like Alice, and she's fun for a romp, but you and I both know that's not what you want.\"\n\nI knew Becca was just watching my back. She was being a good, responsible friend, like she always was, calling me out.\n\n\"I don't think I have much of a choice, Becca,\" I said softly. \"I recognized her the moment I saw her... it's her.\" \n\nOn the other end, Becca was quiet.\n\n\"The girl I told you about. That I've dreamed about.\"\n\nA moment later, Becca burst out in laughter.\n\n\"What!\"\n\n\"Oh my fuck. Do I have to say it?\"\n\n\"Please don't say it.\" I pinched the bridge of my nose. I knew she was going to throw that line at me, the one that we'd joked about within our friend group for years...\n\nShe didn't listen. \"Karma's a bitch, bitch!\" and she laughed again.\n\nHer laughter was bubbling and contagious, and I couldn't help but join in. After a few minutes, we both calmed and caught our breaths.\n\n\"What are you going to do?\" she asked.\n\n\"What I always do.\"\n\n\"Okay... do you need anything else from me?\"\n\n\"Do me a favor, please don't mention this to anyone else yet.\"\n\n\"Okay,\" she said, \"but you should talk to Michael Lewis before you do anything drastic.\"\n\n\"Don't worry, I plan on it. I just got into town this afternoon... I need to talk to Lindsay anyway.\"\n\n***\n\nI spent the small amounts of free time I had left that week reading up on brat taming -- or as some people called it, brat wrangling. My research was enlightening, and I was left with a basic idea of how to deal with someone who needed to be forced into submission instead of asking for it. The more I read, the more I understood why it was attractive to some people.\n\nThere was a crucial moment in almost all dynamics where the submissive tests the Dominant. It's usually after the newness has worn off. The submissive will sometimes break a rule, push a boundary, or act out just to make sure their Dominant will continue to hold fast to the rules they've put it place. As a Master, I was always very aware of this kind of behavior, because I knew from my training that allowing those moments to pass without punishment was always the beginning of the end.\n\nAnd as a sadist and an asshole, they were some of my favorite moments, because it allowed me to let loose just a little bit more than normal. It allowed me to take charge, to prove myself, to make those lines abundantly clear that yes, I am still in charge here, even when I'm being nice to you. It was one of the things I loved most about kink and power exchange; taking charge and clearly reinforcing those boundaries.\n\nAfter my research, the thing I discovered was for brats and tamers, they lived for that moment of push and pull. And even though I still wasn't sure about how bratting and topping from the bottom all fit together, I understood the appeal on a conceptual level.\n\nI joined some Facebook groups and Discord channels, staying quiet in the background but reading a variety of posts and messages. I came to the conclusion that there were also two very distinct groups of brats; the ones that did actually want to obey and please their Doms, and the ones who just wanted to fuck around and cause trouble, regardless of the damage they did along the way.\n\nI was praying Alice was more the former than the latter.\n\nThere were more tidbits and valuable things I gathered, compiling it all into a document on my cloud that I could access from my phone or laptop. I added to it often, plotting and planning so I would be prepared when she broke. I wasn't sure how long it would take before Alice caved to the challenge that I'd given her... but I was going to be ready when she did.\n\nThe rest of my time in DC was busy, as always. I met with Becca and some of the newer girls at the Weston House, did an interview for a new chef, and visited a new restaurant in town that looked like it had potential.\n\nMonday evening I was sitting in the lounge, and the two people I needed to see walked in. I had a feeling they would. Michael Lewis and Lindsay Murray worked with me in regards to the Weston House, though they also did some other things I didn't ask too many questions about. Part of the work they did related to IT, and they somehow always had information on things they shouldn't.\n\nI'd learned early on not to ask too many questions. The answers usually just pissed me off.\n\nLindsay had a habit of spending most of her free time in the lounge. She was close to many of the regular members, and we were still a small enough community that it didn't draw too much attention to her. Which was good, considering she was technically a fugitive.\n\nMichael settled across from me, and Lindsay headed to the bar to get drinks and food. While she was occupied, I took the chance to catch up with Michael.\n\n\"I need to ask you about someone,\" I started.\n\n\"Alice Benson,\" he said. \"I know.\"\n\nI shook my head in disbelief. \"How. How do you always know?\"\n\nHe shrugged and swirled his whiskey. \"Part of the job.\"\n\n\"What can you tell me?\"\n\nHe studied me for a minute, then set his glass down. \"She's... amazing. Took everything I threw at her, no matter how fucked up, and kept coming back for more. I adored her, she was one of my favorites... I'm still pissed about how it ended.\"\n\n\"How did it end?\"\n\n\"I was wanted for being a serial killer,\" he raised an eyebrow and took another sip of his whiskey. \"Lindsay and I had to go on the run. You remember.\"\n\n\"I do.\"\n\n\"Lindsay had to convince me not to kidnap her... which means when we took off, I had to ghost her. Girls with personalities like hers don't come back from that. Even when we resolved the charge and I started going back to The Underground, she refused to scene with me again. And by that time, almost six months had passed. Maybe longer... and she'd moved on.\"\n\n\"Would you scene with her again?\"\n\n\"Hands down, any day of the damn week.\"\n\n\"Was it just play, or did you two have a dynamic?\"\n\n\"Monthly scenes. I won't play more than once a month with anyone; it's too intense on the body. She did lighter stuff with Pierce during the interim.\"\n\nI knew from experience that Pierce didn't play light. Then again, Michael's scenes were usually monitored because of the intensity, and rarely did he do anything outside of the private rooms, because people tended to get upset by watching.\n\n\"Did she ever give you pushback? Talk back to you?\"\n\n\"You can't talk back when you're gagged and hogtied.\" He had a slight smile on his face, like he was remembering something beautiful.\n\nI tried not to be jealous of Michael and the way he was speaking about Alice, but it made me angry to know he had played with her, and probably fucked her, and I still hadn't even gotten my hands on her body. It pissed me off that for years, she'd been right around the corner, in my own neighborhood, in my community, had known some of my best friends, and I hadn't run into her.\n\nWhy hadn't I met her sooner? Why did I have to wait? \n\nLindsay interrupted my mental rant by flopping down on the couch beside me, setting a large pint glass on the table in front of us.\n\n\"Where's your boyfriend?\" I asked her.\n\n\"Teaching the newbies how to use our fancy schmancy new computer system,\" she said. \"He's down at basecamp 1 for a few weeks and then he'll be back here where he belongs.\"\n\n\"Careful,\" Michael said as he rose to go get a refill of his own drink. \"She's moody.\"\n\nLindsay stuck her tongue out at him as he walked away, but he ignored her.\n\n\"How do you feel about an off-the-record assignment, Lindsay?\" I asked her softly.\n\nShe glanced at me with a side-eye, and I recognized the sensation of her pulling ideas and memories from my own mind into hers. It always had a physical sensation with it. Unlike Alex, Lindsay's clairvoyance seemed less refined and more aggressive.\n\nOr maybe that was just Lindsay's nature. Alex was subtle. Lindsay was very far from that.\n\n\"Alice Benson,\" she said softly. \"I think I remember her. What's the scoop?\"\n\n\"I need to acquire her belongings. They're currently in her former Dom's house.\"\n\n\"Ooh,\" she grinned widely, her bright green eyes sparkling with excitement as she rubbed her hands together. \"Breaking and entering, and theft! Sounds like a fun evening.\"\n\n\"I also need to know the names of the friends he had over for his Christmas eve party where he assaulted Rachel... I assume you heard about that?\"\n\n\"Oh yeah. Don't worry, I've already got that list for you.\" She dug into her jeans pocket and pulled out a piece of paper with three names and addresses listed on it.\n\n\"How did you...\"\n\n\"Don't ask.\"\n\n\"You're terrifying.\"\n\n\"Obviously.\" She flipped her hair over her shoulder. \"Tell me the plan for Woodrow.\"\n\n\"I plan to take him out for drinks, convince him I need to apologize for my previous behavior and get his side of the story. That will give you time to get into his house and collect all of Alice's stuff. While you're there, see if you can find any kind of contract or paperwork he may have related to her.\"\n\n\"Sounds fun. Can I beat him up afterwards?\"\n\n\"No.\" I rolled my eyes. \"Not now. Maybe after I get the details. You... you can still do that thing, right?\" I whispered the last part.\n\nLindsay had once demonstrated to me the full extent of her abilities. One thing she was able to do involved touching things others had touched, and reading or absorbing the memories associated with the item. I wasn't sure how it worked, but I thought it might be useful.\n\n\"I'll give you all the information I can get. But I'll warn you, energy remnants and implanted memories die after a few weeks of not being touched. So if it's been any length of time, there might not be much left.\"\n\n\"It's unlikely you'll get anything, then.\"\n\n\"I'm still down for stealing shit.\"\n\n\"I have plastic tubs in the back of my car right now.\"\n\n***\n\n\"I'm glad we could chat, Reuben,\" Peter said as he sipped his third cocktail.\n\nPeter Woodrow and I sat side by side in the lower level of Reuben's that was open to the public, and he was drinking some fruity sweet cocktail designed for college students who didn't like the taste of alcohol but still wanted to get fucked up. He was already starting to get fuzzy and we hadn't really gotten anywhere yet.\n\nMeanwhile, I was gritting my teeth and clenching my fists to avoid punching him in the mouth. Now that I'd seen what happened between him and Rachel, everything that came out of his mouth sounded skeezy. But I had no choice. I needed to be out with him tonight so he wouldn't be able to pin the theft on me.\n\nI'd knocked on his door that afternoon and offered my hand, asking to take him out to dinner and drinks to \"clear the air.\" He'd fallen for it, probably because he didn't remember me shouting at him and hitting him in the ribs because he'd been too intoxicated. I'd seen Lindsay's car drive up to his house in my rear view mirror as I turned out of his neighborhood.\n\n\"Tell me about your slave,\" I asked. \"The one who ran away.\"\n\n\"My little ghost,\" he said softly, swirling his drink. He downed the rest of it, ordered a fourth, and then attacked the cheese fries in front of him.\n\n\"Alice was an anomaly,\" he continued after a moment. \"She was mentally wacked out, so it was hard to tell if she was serious, or if she was testing you. She topped from the bottom all the time. We had rules in place that she asked for, but she broke them regularly. It was exhausting.\n\n\"She reached a point where she was so hard to follow, so chaotic and stressed out from losing her job, her friend dying, seeing her old Dom again, her old Daddy dying... she shut down on me. I did the only thing I knew to do... I gave her a very heavy impact session. She always seemed settled after that. And she did. She slipped into subspace, didn't drop hard at all after the session, and coasted her way through the next few weeks totally blissed out...\n\n\"And then your friend freaked out and decided to punch me in the face,\" he said, spitting the word friend as if it were a curse. \"Alice ran off, and I haven't seen her since... I've called the police, put out a missing person's report on her. I worry she's gotten herself into trouble. She doesn't do well on her own.\n\n\"But even the few times she freaked out on me in the past, she always came back,\" he said, nodding with conviction. \"I believe she'll come back to me eventually.\"\n\n\"What other times did she freak out on you?\"\n\n\"Just a few random times when her disorder got the worst of her. Usually it was when she felt we were getting closer, more intimate, more emotionally involved. She would push me away, act out, brat worse than normal in an effort to get me to leave her, so she would have control over the situation. It's all about control for her. She's not really a sub. A bottom and a masochist, but she doesn't submit. Not really... she's fun as hell to fuck, though. She lives to be dominated.\"\n\nWe talked for a little longer, until I got a text from Lindsay saying all of Alice's stuff was out of the house and she had all the paperwork from his safe. I dropped him off on his doorstep and drove away before he could realize he'd been robbed.\n\nLindsay was already in my house when I got home. \"How'd you get through the security locks,\" I asked her.\n\n\"Bitch please,\" she rolled her eyes. She was sitting on the lid of one of the plastic tubs. \"I work for one of the most high-tech private military organizations in the world and am wanted for international cyber terrorism, and you're wondering how I got past your rinky-dink podunk electric locks? I broke into the pentagon last week. For fun.\"\n\nI had a feeling that was an exaggeration on her part, but I let it go.\n\n\"Thanks for getting that stuff... you pick up on any memories?\"\n\nLindsay shook her head. \"This must have all been left behind at least a few months ago.\"\n\n\"About six months from what I understand.\"\n\n\"Yeah, no dice. Remnants die pretty fast. Sorry, Reuben.\" She hesitated, then asked, \"You want help with the room?\" She nodded her head slightly towards the hallway where the third door on the right stood, unopened, untouched, like a time capsule I had yet to disturb.\n\nI wanted to tell her that I'd take care of it myself, but I knew I probably wouldn't. I'd paced up and down the hallway just two days ago, trying to convince myself to clear out all that stuff, knowing there would be a new resident in that room one day. And yet... I just couldn't stand the idea of even opening the door.\n\n\"It won't be as bad as you think,\" Lindsay said. \"I can block it out for you, if you want.\"\n\nNever be ashamed of your emotions. \n\n\"No,\" I said. If I was going to counsel a kindergartner on facing their fears, I could clean out a bedroom and deal with what came my way.\n\nLindsay stood behind me as I opened the door. Inside, it was as if she were still outside on the swingset; her shoes sat by the foot of the bed, her stuffed AristoCat and octopus on top of white lacy pillows. A white eyelet comforter with lace around the edges was pulled neatly up to the top of the bed. All around the room, taped to the wall, were colored drawings of birds, butterflies puppy dogs, and stick figures. There were many drawings of tall dark stick men beside shorter stick girls, the girls wearing pink triangle dresses, colorful tiaras, and a collar around the neck, a long leash attached from the collar to the stick man's hand.\n\nLindsay inhaled slowly, her eyes seeming to fade out as she looked around the room. She was scanning for energy that she could sense with her strange abilities.\n\nPart of me hoped Lindsay would find something; just a snippet that she could share with me. I picked up a sweater on the closet floor and brought it to my face, hopeful.\n\nIt smelled stale.\n\nLindsay shook her head after a moment. \"Sorry, Reuben... it's all gone.\"\n\nI left the room to get a box.\n\n***\n\nLindsay and I packed up Robin's belongings in less than an hour, leaving the room stripped completely bare save the mattress and the furniture. There were a few things I chose to set aside; a few specific drawings with letters written on them, her AristoCat stuffy, her journal, some photographs, and the leash that she normally wore attached to her collar when we were out and about. I put it all in a box and shoved it onto the top shelf of my closet, wondering if I would ever be able to pull it out again.",
        "While we boxed up the rest to get rid of, I felt like I was in a brain fog. My body was on auto-pilot, and my mind was assaulted with memories I hadn't expected.\n\nI remembered so many things. I remembered giving her the cute mary-jane style shoes that sat at the foot of the bed. They were the first shoes she'd ever received, or at least that she could remember receiving. She'd hugged them to her chest. I remembered the first time I laid with her on the white eyelet bedspread, holding her against my chest while she had a panic attack, trying to calm her down. I remembered sneaking in on Christmas morning to wake her up only to find she'd spent all night coloring and drawing Christmas trees in her journal, and could barely wake up to open her eyes to come see the presents under the tree. I remembered the first words she'd ever spoken to me, out loud, when she finally regained enough bravery to let her voice be heard.\n\nLindsay didn't normally show any emotion besides being excited about hurting people, so it was strange to see her quiet and subdued while we boxed up Robin's belongings. I was sure she was feeding off my own emotions, and I regretted dragging her into this whole mess. But when we were finished, she looked at me and smiled sadly.\n\n\"I'm glad you let me help you with this. I know it's been weighing on you.\"\n\n\"I've... been putting it off for a while.\" Six years isn't a while. It's over half a decade. \n\n\"Sometimes, clearing out the old makes space for the new...\" she cocked her head. \"At least, that's what I told myself when I killed my dad.\" Before I could ask about that statement, she shook herself as if to clear the memories from her head. \"Anyway,\" she put on her usual snarky smile and slapped me on the shoulder as she passed. \"See you later? We're picking up a new shipment of girls next week.\"\n\n\"We'll be ready.\"\n\n<center>Chapter 11</center>\n\n<center>Alice</center>\n\nI tried, I really did.\n\nFor the next few weeks, I was remarkably good. I kept my mouth shut, I didn't look at him, and I only bratted Scott and Brian and Noami. Cat got the brunt of my whining, but she took it in stride.\n\nIt wasn't because I didn't like him, or because he'd upset me. It wasn't because I didn't relish the feeling of his hand around my throat and the way he'd growled into my face. No, actually those few moments we'd shared had become a mental vacation I could take whenever I needed to. And I really wanted more. Every time I saw him after that, I could tell he was listening, waiting, measuring my behavior and waiting for me to act up so he could step in.\n\nBut I just couldn't walk through that door.\n\nI don't do casual. I don't do once-a-week playtime. I am an all-or-nothing, twenty-four seven, total power-exchange kind of person, and that is non-negotiable.\n\nThat was the exact situation I had run away from, the reason I was living out of my car with a scar on my neck from where the collar had cut into my skin as I pulled away. And I couldn't willingly walk into that again. That wasn't what I wanted, it wasn't how I did things anymore. I didn't really even know if I could ever have another Dom again, let alone someone as serious as Reuben. After all, every serious relationship I'd ever had ended in disaster.\n\nI decided we were just complete opposites who would never mesh. So after our confrontation, I was on my best behavior for a little over a month. Even though at night when I crawled into bed, I thought about what he might do if I poked fun at him, and shivered at the ideas that came into my head. And against my better judgement, my naughty fantasies were making the idea become more and more appealing, and it was hard for me to remember why I had thought it was a bad idea to begin with.\n\nThe argument went like this.\n\nBut I don't want a Dom. \n\nBut I want him. \n\nBut he isn't the kind of Dom I want. \n\nBut he's the kind I need. \n\nNo. I'm not doing this again. He'll get tired of me in a few months, or I'll say something rude or break a rule, and he'll release me, and I just can't go through that again. \n\nNo, I don't think he's the kind of person to do that. He might be exactly the right kind of Dom for me. \n\nBut he's old school.\n\nBut he likes me, and I like him. \n\nBut I don't want a Dom. \n\nAnd so forth.\n\nIt all ended up being a moot point. The problem with being a brat is sometimes shit just comes out of my mouth. Coupled with the fact that I was so pent up after almost six weeks of being polite, and the fact that his beard and mustache was filling out and looked fine as hell, I just couldn't help myself. At least that was my excuse for what happened.\n\nOn the Sunday in question, Reuben settled down next to Mark and Cat, who were probably discussing punishment ideas, because that's what Doms did when they got together. He was scrolling on his phone, listening to their conversation absentmindedly. He wore his dress pants and a button-down, as per usual. He completely ignored me, which kind of pissed me off, and I found myself glaring at him.\n\n\"You look like you're thinking really hard about something,\" Scott said, sitting down beside me with a plate of fried chicken.\n\n\"How can you eat again, you just ate like an hour ago!\"\n\n\"I was hungry,\" he shrugged, dipping his chicken into honey mustard.\n\n\"You eat more than a fourteen-year-old boy,\" Cat said, rolling her eyes. \"Wish my metabolism was that fast.\"\n\n\"Karma will bite him in the ass one of these days,\" Reuben said, his voice low with just a hint of humor. \"It gets us all in the end.\" He patted his stomach and Mark rolled his eyes.\n\nI snickered, putting on a silly voice. \"And here we see The Undertaker in his natural habitat, attempting to make a joke and failing miserably.\"\n\n\"The-- the what?\" Reuben's mouth fell open at my words.\n\nThe words poured out of my mouth like a tsunami. \"The Undertaker. You're so glum. And boring. And you never smile. And what's with the suit every time you're here? Do you even own a pair of jeans? Take a chill pill. Gawwwd.\"\n\nWell, that felt amazing, I thought. Hopefully that wasn't too obnoxious for him to handle.\n\nBased on the look on his face, I was probably in trouble, but fuck him. Whatever. Life is short and boring without ragging on your friends. I felt so free and so good spouting my shit, it was like the weight on my shoulders lifted. Why the hell had I tried so hard not to be myself just because he'd given me a stupid warning that I knew he probably wouldn't follow through with?\n\nThen I got a really mean idea and grabbed my cup, fishing an ice cube out of it, and chucked it across the room at him. It hit him in the chest and fell into his lap. \"Here, I have an extra one. If you need more, I'm sure Lisa can give you a prescription.\"\n\nThe look on his face was glorious. He stared with complete and utter shock at the ice cube that now sat in his lap. God I loved getting actual facial expressions out of the stone-faced man. He looked up at me, his eyes narrowing. I snickered and looked away.\n\n\"Alice!\"\n\nMr. Weston's voice was loud and harsh, and the others in the room quieted. I froze in place and glanced at him. Quietly, his voice as low and as quiet as an oncoming thunderstorm, he said, \"What did I tell you about running your mouth?\"\n\nI was mad at him. How dare he encroach on me, anyway? Threaten me and say he was going to put me in my place. Besides, he was all about the rules. He wasn't going to just top me out of nowhere when he wasn't my Dom. Yeah maybe he'd \"warned me\" but that didn't mean anything. Right?\n\nI faced him straight on and said, loud and clear, \"You ain't gonna do shit, old man.\"\n\nFor the first time since I'd met him in six months, Reuben smiled.\n\nI swallowed as I watched the corners of his lips twitch, and then his eyes darkened as his face broke into an evil, twisted grin, and he chuckled under his breath. There was something very dangerous about the way he was looking at me.\n\nThen he stood up and began stalking towards me with long, fast strides.\n\n\"Oh shit,\" I whispered, and turned and ran.\n\nI thought I was faster than him, but maybe the sheer shock of him actually coming after me gave him the advantage. Before I even made it out of the room, he fisted my hair in his hand. I jerked back when he caught me, and he dragged me by the hair towards the elevator.\n\n\"Let go of me, you big fat jerk!\" I shouted.\n\n\"Shut up.\"\n\nI squirmed in his grip, trying to escape, but it was completely pointless. He had a good grip on my hair, and it made my scalp feel like it was going to explode. I threw my arm up to try to hit him, but he caught it with his free hand, wrenching my arm behind my back and then pulling my back against his chest, pinning my arm behind me and holding me tight while he dragged me into the elevator.\n\nHe let go of me with one hand once we were inside the elevator, flipping a switch near the top where only he could reach, forcing it to stop mid-journey. Then he grabbed me by both shoulders and spun me around, shoving my back against the wall of the elevator.\n\n\"You asshole, let me go! You think you're so scary--\" I lifted my hands to push him off but he caught my wrists, crossing them above my head and holding them firmly with one hand. I was about to shout again, but he covered my nose and mouth with his other hand, holding my jaw closed and covering my nose at the same time so I could barely breathe. I tried to kick him, but my legs were literally too short to even reach him.\n\nThe look on his face was raw power. He looked hungry, and was practically vibrating with energy as he stared down at me, dark eyes full of anticipation. It made me freeze at the sight.\n\n\"You mouthy little bitch. You just can't control yourself, can you?\"\n\nI tried to curse at him but it wasn't working with his hand over my mouth. I opened my mouth to try to bite at his hand, but the angle was wrong, and I couldn't do anything but lick his hand, which was just weird and stupid. His hand over my nose kept me from breathing, and I shook my head to try to get his hand off me, but he was about a gazillion times stronger than me, so it did absolutely nothing.\n\n\"Keep struggling, Alice. Go ahead. See how that turns out for you. I will absolutely hold you here until you pass out.\"\n\nNervous, I stopped squirming, hoping he would let go of me, but he didn't.\n\n\"You want to be a snot? Fine. I'll help you remember why it's a bad idea. But don't do it in church, it's not cute.\"\n\n\"Okay,\" I tried to say, but it came out muffled.\n\n\"What's that? Are you trying to say something?\" His voice was sarcastic, mocking me.\n\n\"Lrm grrmff mrr!\"\n\n\"I'm sorry, I don't think I understand you.'' His voice was filled with condescension. \"Oh, maybe it's because you can't fucking breathe.\" His hand tightened around my face.\n\nI stopped struggling, begging and pleading with him with my eyes. I had the urge to keep fighting, but I was getting dizzy. Excitement and fear rose up in me as he leaned in closer to me, looking directly into my eyes. Worse, his proximity, the thrill of his power over me, and the feeling of his hands on my body were making my blood hot.\n\n\"Are you going to continue running your mouth?\"\n\nI shook my head vigorously.\n\n\"Are you going to throw more ice cubes at me?\"\n\nAnother shake. \"Plllmrh! Prrfhl.\"\n\n\"Are you going to be a little bitch in front of your friends?\"\n\nMy eyes burned and a few tears escaped, and I shook my head again.\n\nHe finally removed his hand from my mouth and I choked huge lungfuls of air.\n\n\"Look at me,\" he growled. I forced my eyes open and met his gaze, my pulse racing as I realized how close he was to me. I could smell his breath and her cologne and it made my mouth water. His fingers tightened around my wrists and I felt his fingernails dig into my skin.\n\nOh no. Oh god, not here, not now. But I was still catching my breath and powerless to resist, so I let out a choking moan as I felt his nails bite into my skin, pain burning down my arms and settling in my gut.\n\nWith his other hand, he held my chin firmly, letting his nails dig in there too. The pleasure in my belly began to grow. The way he was staring at me, and the scent of his skin, and the feeling of absolute uselessness began to settle over me. Holy shit, he was going to melt me right into a puddle on the ground. I can't give up that easily, I thought. But I wanted to. I wanted to just let go, and melt.\n\n\"Now you listen to me. You're going to go out there and apologize to your friends for being a brat. Then you're going to go upstairs to your room so I can finish punishing you. And if you give me an ounce of shit during any of that, I promise you, you will regret it. Do you understand?\"\n\nI nodded, not wanting to make him any angrier than he already was.\n\nA low rumble started in his chest as he stared at me, his eyes devouring every inch of me like a hungry animal. My stomach clenched at the look in his eyes. Oh my god, I really had no idea what I was in for, did I? Why was I this stupid?\n\n\"Open your mouth.\"\n\nSlowly, hesitating slightly, I did as he asked. He leaned forward like he was going to kiss me. What the fuck? I held my breath, but I didn't feel his lips. Instead, a wad of spit fell onto my tongue.\n\nAnother clench in my gut and a subtle wave of pleasure burned through my body at the shock and the degrading nature of the act. I looked at him in shock.\n\n\"Close.\" He tapped my chin and I obeyed, feeling his spit sit like a strange texture on the surface of my tongue. \"Swallow.\"\n\nI couldn't resist the order. My eyes fluttered shut as I did, another slight tremor running through me, and I squirmed at the pressure in my gut. I was slick between my legs to the point that it was soaking through my panties. I stood there, pinned against the wall, tears in my eyes, almost floating from the feeling of being so completely taken over by him.\n\nHe slapped me on the cheek. Not hard, not even hard enough to leave a red mark, but my eyes flew open and I gasped at him in shock. Holy shit, if he hit me a little harder, I might actually explode. \n\nHis index finger settled on my lips. \"The next time you feel like running your useless little mouth,\" he murmured, \"I want you to shut up... and swallow. Do you understand?\"\n\nIt was all I could do to nod.\n\nHe straightened, releasing me and reaching up to flick the switch on the elevator, sending it back down to the first floor.\n\n\"Go,\" he said when the doors opened. I took a deep breath and forced my legs to work, exiting the elevator. As I did so, he slapped my ass once and I jumped in surprise. It wasn't hard enough to hurt, just hard enough to surprise me and send a little jolt of pleasure between my legs.\n\nOutside in the dining area, people quieted when they saw me. I must look like a total disaster. This is so unfair. What a jerk! And they have no idea what he did to me in there... \n\nI heard his measured footsteps behind me, so I spat the words out. \"I'm sorry for being a brat,\" I said, and then whirled around and went back in the elevator to go upstairs.\n\nI wasn't sure what to expect. He could be a total jerk, manipulative and rude. He could be absolutely amazing, like he was two minutes ago. Could I tell if he was using me? Could I tell if I was being taken advantage of again?\n\nDid I even fucking care?\n\nIt was hard to tell when every reaction I had felt like an overreaction, but also felt so real.\n\nI closed my eyes in the elevator, thinking really hard about Alex. I might need your help, I thought. I don't know what to expect. You know how my brain works, I won't be able to set boundaries with him. I don't know how to-- \n\nHer voice invaded my own chaotic thoughts. {\"Be humble, and trust him.\"}\n\nI wasn't sure what that was supposed to mean, but Alex was the most trustworthy person I knew. If she said I should trust him, if she believed I was safe with him, I was.\n\nI took a steadying breath and resolved to see this through, anxiously awaiting what he had in store for me.\n\n<center>Chapter 12</center>\n\n<center>Reuben</center>\n\nAlice stared straight ahead with wide eyes and a beautiful blush on her face as we stood in the elevator, slowly rising to the third floor. I was still buzzing with adrenaline and excitement, relishing the look on her face and the expressions of my friends when I'd stepped out of the elevator to make sure Alice did as she was told.\n\nCat looked at me with a smirk on her face and winked. Sophie couldn't even meet my eyes, and she blushed. I'd never seen her blush before; I didn't think she could with her dark complexion. Mark was grinning ear-to-ear.\n\nMy phone buzzed a few times on our way up the elevator ride, assumedly from my friends downstairs commenting on what they'd observed. I turned my phone off so I could focus exclusively on my girl. She was still staring straight ahead, barely breathing, but she looked excited.\n\nNo... she looked turned on. That sweet, gorgeous little moan that had come out of her mouth when I'd gripped her wrists was something I'd be hearing in my dreams.\n\nThe elevator door opened on the third floor and I grabbed her by the back of the neck, walking with her to her room. Her hands shook as she opened the door.\n\nDo not trigger her. Do not upset her. You need to reign it in. \n\n\"Sit down,\" I said, nodding to her armoire. She did so and sat still, her back straight, hands clasped tightly. I stood behind her, my hands on the top of her chair so I could see her face in the mirror. \"Get your notebook.\"\n\nShe made a face and opened her mouth to say something, but I cut her off with a look. She shut her mouth, swallowed, and then looked away and grabbed her notebook.\n\n\"Good girl.\"\n\nShe bit her lip, staring at the notebook, and then opened it up to a blank page, waiting and staring down at it, barely breathing. My gut told me something was wrong.\n\n\"Alice, look at me, please.\"\n\nShe slowly lifted her face just enough for me to see large tears dripping down her cheeks, her mascara running slightly.\n\n\"Why are you crying,\" I whispered, trying not to sound cruel as I asked.\n\nShe sniffed and scrubbed at her eyes with the back of her hand, and then took a steadying breath. \"I... people don't... I'm not... good.\" Her eyes got that strange distant look, like she was remembering something that happened a long time ago. Something she'd forgotten about.\n\nI knew she'd come out of a few bad relationships, but I couldn't help but wonder... When was the last time someone had taken care of her? When was the last time she'd heard those words directed at her? No wonder she was so desperate for attention.\n\nI gently set my hand on top of her head, stroking her silken hair for a few moments. \"I think there's a good girl in there somewhere. I think she's just scared.\"\n\nHer eyes flashed. \"You don't know anything about me,\" she spat.\n\n\"I know half of my friends in DC miss you, and the other half are scared of you,\" I said, remembering some of the conversations I'd had when asking around about her. \"I know you don't trust your emotions or your reactions because you've been told too many times that you're over-dramatic and too emotional. You like things other people think are scary or disgusting or offensive, and you think it makes you a freak. You're tired of trying to plan, drive, and navigate all at once, and desperately crave someone to tell you to shut up and do as you're told, and then force you to do so. And... you think you're broken, or that there's something wrong with you.\"\n\n\"There is,\" she said. \"It's called brain damage.\"\n\n\"Okay,\" I shrugged. \"So you're a little fucked up. Rough around the edges.\" I gathered her hair in my hand and gently pulled it until she lifted her chin all the way up, meeting my eyes as I looked down at her. \"You think that's going to scare me away?\"",
        "She stared at me for a minute, then said, \"You checked up on me?\"\n\n\"Of course I did. Had to know what I was getting myself into.\"\n\nShe attempted to glare at me, but the effect was lost because she was so cute upside down like that, glaring like an angry kitten.\n\n\"You baited me,\" she said.\n\nI held in a smile and let go of her hair, and she righted herself, staring at me in the mirror. \"Not in the least. If anything, you baited me.\" I leaned forward, meeting her eyes in the mirror and whispering in her ear. \"Are you okay?\"\n\nShe nodded and smiled a little.\n\n\"Did I upset you?\"\n\nShe shook her head.\n\n\"Are you going to keep being a brat?\"\n\nShe smirked. \"Is it going to get me punished like that again?\"\n\n\"Like that? No... much, much worse.\" Visions and fantasies of things I wanted to do to her flitted through my mind, sending another hot wave of excitement and desire through me.\n\nShe grinned, her eyes lighting up. \"Then... yeah, absolutely.\"\n\n\"Good.\"\n\nI caved to the temptation to turn my face and feel the softness of her neck against my cheek, and then straightened. I needed to be careful about getting up in her face, because her lips were just too plump and biteable, and her breath smelled like candy.\n\n\"I thought you didn't like brats.\"\n\n\"I didn't think I did. Guess you're changing my mind.\"\n\n\"Hm. Guess that means I won this round.\" A cheeky smile settled on her face.\n\n\"Oh, is that what you think?\"\n\n\"Mh-hm. Yep.\" She popped her lips on the \"p\" obnoxiously. \"Sure did.\"\n\n\"I see.\" I reached over to her pencil cup and withdrew a pen, handing it to her. \"Three hundred lines.\"\n\n\"Hold on... what?\" She stared up at me in shock.\n\nI said it again very slowly and clearly. \"Three... hundred... lines. I will not be a brat in church.\" I turned away from her and headed for the door. \"You have until next Sunday. If they aren't finished, your punishment will be severe, embarrassing, and very public.\" I looked back over my shoulder at her, challenging her to say something, but she shut her mouth, swallowed, and angrily began writing.\n\nI smiled as I shut the door.\n\nBaby steps with this one, I thought. But she'll be worth it. Watching her force herself to have some control simply because I demanded it of her was the hottest thing I'd seen in months, and I was very quickly becoming addicted to putting her in her place.\n\nMaybe I was wrong about this brat thing."
    ],
    "authorname": "LindsayMurray",
    "tags": [
        "brat",
        "brat taming",
        "bratting",
        "brat tamer",
        "mf",
        "face slapping",
        "spit",
        "spitting",
        "slow burn",
        "choking"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/how-to-tame-a-brat-pt-04"
}