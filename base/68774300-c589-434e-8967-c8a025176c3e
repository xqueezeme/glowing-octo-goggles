{
    "title": "The Ponytail Express Ch. 08",
    "pages": [
        "Disclaimer time. Thanks everyone for your kind remarks and feedback, even the negative stuff. I hope you keep reading; we'll see how far this ship can sail.\n\nAlso, Niamh is pronounced \"NEEV\". ScSc = Scorekeeper Scent,\n\nThe Ponytail Express\n\nChapter 8: Executive Decision\n\n5:22am\n\nFriday morning\n\nFred woke up to the warmth of Deb's mouth taking in as much cock as she could. He made eye contact with her as he caressed her hair affectionately. Deb's eyes smiled and she winked while she lazily sucked away, occasionally pausing to lick and fondle his balls. She held Fred's other hand while jacking the base of his cock with the other.\n\n\"Deb, give me your other hand.\" His breathless request cut through the slurping noises around his stiff member. They were palm to palm now. Deb laid between Fred's thighs, the magnificent backside of her sculpted physique on display, blond hair pulled back behind her in a ponytail. Fred sighed in contentment while his lover gave his morning wood a tongue bath.\n\n\"Deb, keep your mouth on my cock, but stop when you get to my crown,\" Fred requested shakily. In response, Deb took a long suck, stopping when Fred could see his glans on her lips.\n\nThe pair laid in that position, still palm to palm. Fred slowly moved his hips, watching his cock sink into Deb's mouth until halfway down the shaft. When she realized what Fred was doing, she moaned with lust. Both the taste and texture of his flagpole was heaven as she flicked her tongue when and where she could. Her excitement built with his as she felt his hips increase the pace. Their hands locked as Fred's grip tightened the closer his orgasm approached. Deb had greased his dick with copious amounts of her saliva in her oral worship as each upward thrust sent little explosions of spittle into the air. Her chin was caked with saliva and precum as she polished her lover's erect tool lovingly, adoringly. Periodically, Fred would go too deep with a thrust, making contact with the back of her throat, but Deb would arch her back and neck to adjust to his cock as it plunged into her hungry mouth. It wasn't long before she could feel his balls tighten. He was going to cum soon; she knew the signs.\n\n\"Deb!\" The first of several successive jets of Fred's seed spattered the roof of her mouth, careening down her throat. Her lover spasmed underneath her; as he cried her name, she rubbed her thighs together; that, and the taste of him was all it took. It wasn't the mind-shattering orgasm that had become commonplace, but a satisfying one, nonetheless. She finished swallowing him, taking time to rub the rest into her skin as she nibbled on his glans. It was like she wanted to smell like him. No, she wanted his smell on her; it marked her as his. Fred laid there trying to catch his breath.\n\n\"Good morning, babe.\" Deb greeted.\n\n\"Morning, dear,\" Fred sighed. \"Time to head over to the police station. We have a big day ahead of us, and I want to make sure we control enough of it to not get us thrown in prison.\"\n\nBrass Nugget Casino\n\n8:05pm\n\n\"Tell me what the fuck happened.\" Mr. Terry sat in the back of his limo, letting two of his employees know how angry he was. Since this was a business trip, Guppy drove, Rick was replaced by Minka, who sat opposite him in the immaculate limousine. Minka, a former champion of the ring, looked like she'd run into trouble earlier tonight. She had a bandaid on her right ear, a bruise on her chin and favored her left arm. She had one of those messy pixie cuts with long bangs in front; cold blue eyes stared at her boss. She was impassive, adjusting the coral neck scarf she wore when she wasn't in Mr. Terry's private quarters. He liked seeing those scars. Black sports bra under a black tank top with a tactical harness that held a beretta in a holster, loose fit black jeans with leg holsters that currently housed four throwing knives, and a pair of sneakers. Her feet fidgeted, giving away the fact she was scared. That was good, but she was in the clear. Tonight, he would do something he made a deal he would never do; he would be the sausage in the middle of a sister sandwich. He was going to break the Ryan sisters.\n\nAs her boss simmered, Minka reported.\n\n\"Boss,\" she began, \"Niamh was taken from her bungalow at the cathouse by a group of college kids. We're not sure who their leader is, but it's the three from Wednesday night, plus another girl. Their names are Frederick Markinson, Benji Kilmeade, Deborah Stallings, and Onvipa Dasna. It looks like Frederick took a cab in earlier in the day and worked as an advanced scout. Video surveillance shows him spending a little money, but mainly talking to personnel. Later, Benji Kilmeade arrived as part of a group with several other students in the Diamond. That's where I first came in because large groups of college students rarely come out here impromptu. It was strange, but not alarming. Benji's appearance after Wednesday set off some warning bells, but up to that point Frederick hadn't appeared on our radar as he stayed on the Casino floor. There was something curious about him, though.\"\n\nMr. Terry's eyes bore into Minka's. \"Curious, you say.\"\n\n\"He'd acquired what looked like a squeeze bottle of Windex. It looked like periodically he'd spray it.\"\n\nHis eyes narrowed. \"What in the blue fuck?\"\n\n\"Not sure, Boss. He left the bottle. We think it was full of piss.\"\n\n\"Weird fucker. He a meth-head?\"\n\n\"Sheriff Mackey's check came back and they're all squeaky clean, boss. Frederick fits the profile, but he doesn't exhibit any telltale signs of being an addict. Highly unlikely for the others. Kilmeade drinks and that's about it.\"\n\n\"He better watch out.\" Mr. Terry mused, \"habit like that can get him kicked off the football team, Defensive MVP or not.\" Mr. Terry indicated for Minka to continue.\n\n\"Boss, this Markinson kid then somehow manages to talk his way out to the ranch.\" Minka eyed Mr. Terry intently. She thought it was an inside job; unlikely, but you never know. Mia might have found someone crazy, but then he was patient enough to wait almost six hours. Someone had to have given him help.\n\n\"Then what?\"\n\n\"Frederick drops a grand to see Niamh. At the same time, there was a camera outage in sector 2. We did the usual and sent a pair out to make sure it wasn't another short. The last thing they radioed in was the make and plates of a car belonging to Ivaan Sakul, Onvipa's father.\"\n\n\"What happened to the guys we sent out?\" Mr. Terry was curious.\n\n\"The girls beat them up then zip tied them to a tree.\"\n\n\"Fucking Christ.\"\n\n\"Onvipa and Deborah then climbed the fence, snuck into the ranch undetected, took out two more men, one of which was guarding Niamh's shack. The four then retreated back where the vehicle was waiting.\"\n\nMr. Terry looked at Minka. \"You're leaving out your involvement.\"\n\n\"Rick and I got wind of what was going on, but I arrived onsite first. I hit Frederick in the shoulder with a throwing knife and was advancing to acquire Niamh when Onvipa and Deborah entered into the theater.\"\n\n\"How'd it go?\" Mr. Terry was looking at pictures of both women on his cell. He wondered if they were good enough to survive the ring.\n\n\"You want an assessment of their fighting skills Boss, or how I fared?\"\n\n\"I know how you fared, Minka. They beat you.\" He let disappointment ooze into his voice. She blinked in response.\n\n\"They both exhibited knowledge of Krav Maga, but they're not experts. Boss, have you ever heard of Pariset Ju-Jitsu?\"\n\n\"Enlighten me.\"\n\n\"It's also called atemi ju-jitsu, it developed off French judo. It involves striking vital points on the body. Tough to say if she's an expert, but she surprised me with the knowledge. If you want an assessment, I'd say Onvipa would be entertainment for one fight. Deborah is another story. A little more training and she could be formidable in the ring.\"\n\n\"Then why the fuck didn't any of my recruiters say anything?\"\n\n\"Her father is Captain Ned Stallings, is why.\"\n\n\"Oh shit. Fair enough. Stepped over the line tonight, though. We'll have to work out a deal where those two bitches get to make a return trip to the ranch and work off debt accrued.\"\n\nMinka was impassive; her features didn't change.\n\nMr. Terry's cell went off -- he put it into the car's systems.\n\n\"Vincent!\" Mr Terry greeted.\n\n\"Eddie!\" Vincent responded.\n\n\"Tell me something I want to hear, Vince!\"\n\n\"My pleasure, Eddie! Looks like they've got the Frederick guy along with Deborah and Onvipa at the police station. They're giving statements, but the Sergeant is keeping a lid on it. Niamh is at the hospital along with that Benji Kilmeade kid, giving a statement to the cops there. This whole thing happened in my jurisdiction, so we've got ourselves a containable situation.\"\n\n\"Tell me something I don't already know. Vince, I wanna see you at the station. Guppy, head to the CFPD. We'll see you soon.\"\n\n\"See you in a bit, Eddie.\" They hung up.\n\nEdward Terry contemplated whether he wanted Minka to suck him off, deciding against it. He wanted to be intimidating and a blowjob would make him soft.\n\n\"I'm looking forward to talking to this Frederick Markinson kid.\"\n\n\"Talk to him?\"\n\n\"Kid spent an entire afternoon getting the lay of the land, has the patience and the personality to talk his way past my guards, then escapes with one of my girls. Not only that, but he convinces two hot ass chicks and a member of the football team to help him? We're sure Mia never met this kid until the other night.\"\n\n\"We're sure.\"\n\n\"Have we been able to find Mia yet?\"\n\n\"No. We think she might have gone out with the other college students. They all left at roughly the same time.\"\n\n\"Fuck! Yeah, this kid went to a lot of trouble to plan this. Had to talk a lot of people into helping him out. Doesn't sound like a loner to me. Rick checked him out yesterday and I got the feeling he actually liked him. So yeah, right know I don't know whether I want to kill the kid or hire him. Aside from the weird spray bottle shit he pulled, not sure what was about. Far as Mia's concerned, we run a trace on her work cell and if she ditches that we text pictures of us torturing her cousin on her personal cell. That'll send her back to us; we don't have to know where she is.\"\n\nCFPD\n\n8:26pm\n\nThey parked in the lot, which tonight had more civilian vehicles then law enforcement. Edward Terry, Minka, and Guppy were not the usual sort of people who walked unescorted into a police station. They went through a metal detector and passed -- Minka left her toys in the vehicle. Sheriff Vincent Mackey was waiting for them when they came in.\n\n\"Hey Eddie.\"\n\n\"Vince. Where are the frails?\"\n\nVince looked quizzically at Eddie.\n\n\"The broads? Chicks? Bitches? Cunts? You following me, Vince?\"\n\n\"Yeah, I follow you Eddie, they're in Sgt Jackson's office. The Fred guy is in interrogation room number four.\"\n\n\"Vince, I want you to round up both bitches. After I get done with the Markinson kid you're going to personally deliver them to the casino.\"\n\n\"Sounds like a plan, Eddie.\" Vince Mackey ambled away.\n\n\"I don't like interrogation rooms. Minka, make sure they're not recording anything. Guppy, you're with me.\" Minka headed to the observation room.\n\nA few minutes later the pair entered interrogation room 4.\n\n\"Wow,\" Edward Terry exclaimed, \"nice smell.\" He noticed the entire station smelled the same way; it was just more prevalent in the room.\n\n\"Guppy, what kind of smell is that?\"\n\n\"Sandalwood, boss,\" Guppy answered.\n\n\"Frederick fucking Markinson!\" Edward yelled an affably sarcastic greeting. The kid was a poster child for unassuming faces. He looked tired and haggard, sporting a bandage around his shoulder where Minka got him with the knife. Eddie took the only other chair in the room, while Guppy took up space directly behind Fred, trying to be as menacing as possible and succeeding.\n\n\"Call me Fred.\" The kid answered back.\n\n\"Alright, Fred. Call me Mr. Terry. Guppy, make Fred more comfortable.\"\n\nGuppy grabbed the chair with Fred in it and pushed it into the table roughly. It knocked the air out of Fred, who wasn't ready for it.\n\n\"I'll call you whatever the fuck I feel like, Frederick.\" Eddie emphasized Fred's full name as he tried to catch his breath.\n\n\"You've been fucking busy, Frederick. You come into my ranch and poach my property. What were you fixing to do, Frederick? Aside from sign your own death warrant.\"\n\nFred put up a hand. \"Ponytail Express,\" He answered.\n\nEddie's smile didn't reach his eyes. \"Ponytail Express. What is that?\"\n\n\"Softball team we're putting together.\"\n\nEddie kept smiling. \"Yeah?\"\n\n\"I'm the scorekeeper. So yeah, we wanted to recruit Mia. Figured the best way to do that would be to head in and get her cousin out, too.\"\n\n\"So, you did this for a chick's softball team?\"\n\nFred nodded.\n\n\"To recruit Mia onto this -- Ponytail Express?\"\n\nFred repeated the same action, only this time he exhibited a pained grin.\n\n\"You gotta be shittin me, Frederick.\"\n\nFred shook his head.\n\n\"Okay kid, okay. How'd ya do it?\"\n\nFred looked at him. \"Do what, exactly?\"\n\n\"I know you fucked with me earlier tonight Frederick, so I feel it is incumbent upon myself to warn you against doing it a second time. How'd you do it, Frederick.\"\n\n\"I talked my way in.\"\n\nEddie laughed. \"You don't seem like much of a talker. Seem like more of a lone gunman type. Like in ten years you'll have a middle name and be in the news for assassinating somebody important\"\n\nFred nodded. \"Do I have ten years after what I did, Mr. Terry?\" He asked.\n\n\"Frederick, here's what's going to happen. I'm going to walk out of here with you and your two girlfriends, Ondifa and Bev...\"\n\n\"...Onvipa and Deb.\" Fred corrected. Something about Frederick bothered Eddie; he couldn't quite put his finger on what it was.\n\n\"Onvipa and Deb. Whatever. Those two bitches and you are coming with me. We're going to have a party at the Casino, and it's going to be wild. On the debauchery scale I'm going to get it on with your two girlfriends at about an eight. You needed a referral to get my guys at the ranch; you're going to tell me who helped you get in. After that, I'm going to watch you dig a hole we're going to bury you in.\" Eddie realized what was bothering him. Frederick wasn't afraid.\n\nBefore Fred could talk, Eddie looked like he just thought of something.\n\n\"The spray bottle full of piss. What the fuck was that for, Frederick?\"\n\n\"Call me Fred.\"\n\n\"Okay, Fred,\" Eddie hadn't meant to answer him like that.\n\n\"Guppy.\" Fred spoke.\n\n\"Yeah, Boss?\" Eddie was confused.\n\n\"Guppy...\" Eddie tried to say.\n\n\"Mr. Terry, you need to be quiet right now. Guppy, go stand in the corner over there, and suck your right thumb.\"\n\nTo Eddie's amazement and terror, Guppy did exactly what the kid told him to do. He wanted to say something, but he couldn't speak. Guppy sucked his thumb like a scared four-year-old.\n\n\"Mr. Terry, I order you to sit still. You're able to put your arms on the table with your palms facing down, but other than that you don't have any control over them. Your arms.\" Fred corrected on the last little bit.\n\nFred pulled his chair back out, so he was more comfortable. He was still considering what Eddie had said earlier.\n\n\"I'm going for a ride, but it's not the one you wanted. You're going to stay here and admit to a lot of bad things. You're going to jail for a long time, Mr. Terry. And you'll never be able to remember why.\"\n\nInside the Observation room, Minka watched as Guppy slammed the kid into the table. Did they have to hurt him like that? The unassuming guy was young and incredibly stupid, but there was something noble about him that she found appealing. And she didn't like a lot of guys. Minka wondered what kind of gun he was packing under his. Was it a 38 special, or an honest to God H&K 45? For a kid he looked great in his jeans; kids weren't her type, but if he was, Fred would be in trouble. The observation room smelled like fresh chocolate chip cookies.\n\nA sound behind her signaled danger. She'd been daydreaming about a 19-year-old loser for some ungodly reason. Like out of a surreal dream, the pair of harmless looking girls were mere feet away. Both wore jean shorts that showed off leg, sport tank tops and sneakers, but the petite exotic named Oni had taken her sandals off.\n\nThe blond named Deb was the primary threat. A knife was in Minka's hand from the leg sheath automatically, but the blond closed with a speed Minka had seldom seen in an opponent, much less a one so young. The merc unleashed a low kick, striking out a right leg to stop her advance, keeping her at an ideal distance for the knife. She knew Oni was on her left looking for an opening, and in close quarters like this she needed to take out the blond fast.\n\nMinka saw her opening; Deb made her first and last mistake, moving to the side and presenting an opportunity the killer couldn't pass up. With lethal efficiency and speed, she delivered a knife thrust, meant to pierce the kidney.\n\nThe blond impossibly caught the knife thrust in both hands, redirecting the killer's maneuver, pulling her off-balance. A near-blinding pain arced through her hand, up her forearm to her shoulder. Minka knew enough about anatomy to know the hand was the ideal place to mess with nerves on account of there not being enough muscle or fatty tissue to be in the way. Somehow this girl knew exactly how to exert pressure to injure, and right now Minka felt a pain in arm she'd seldom felt before. The knife clattered to the ground.\n\nMinka knew she'd fallen for the oldest trick in the book. The college freshman baited the trained killer into attacking a weakness that was instead a strength, and she'd fallen for it. She'd been out of sorts since their initial encounter, but now Minka just felt embarrassed as the young athlete maneuvered her into an arm bar, turning her around, spraining her wrist in the process.\n\nShe saw Oni running at her and knew she couldn't get out of Deb's hold. The thai woman struck out into her chest with her left foot, but it was only to use her chest as leverage, as she delivered a vicious knock-out kick right to her chin.\n\n\"Haaaaiiiii-YAAAAHHH!\" Oni yelled as she delivered a cinematic jumping front kick, as she was perpendicular to the floor, using the momentum to transition into a back flip, managing to land on the falls of her feet.\n\nWhen Minka woke up, she was on the floor of the observation room, both girls above her. Her chin was dislocated, and she was still too groggy to move. The blond was much closer and did something Minka wasn't ready for but couldn't defend against either way -- she kissed her on the lips, biting her lower lip hard enough to draw blood.\n\nMinka didn't have a problem with that.\n\nFred made sure he programmed Edward Terry into coming clean about his criminal organization. He was going to be implicating a lot of folks including sheriff Vincent Mackey, who was going to confess as well. While Fred spoke to Mr Terry, Deb and Oni let Fred know they managed to snag Minka; it was up to Fred if he wanted to make her a part of the Ponytail Express.\n\nEventually, the trio of Deb, Oni and Fred exited the CFPD in high spirits; they'd just came out on top and were relieved, happy, and horny. Fred had a woman on either side of him, his arm around Deb, while Oni had warmed up to him, holding his hand tightly. Deb had texted Fred in on the all the things she'd been up to with Oni throughout the day; keeping her friend constantly aroused, watching Oni masturbate in the car in front of Deb on the way out to the cathouse. While Oni pleasured herself, Deb recounted how she'd blown then fucked in the police station early this very morning. Oni finally came when Deb told Oni she wanted to watch her fuck Freddy.\n\nOnvipa had cleaned herself up after their harrowing encounter with Minka out at the ranch.",
        "\"I'll drive. Fred, you should keep your truck here overnight. I can take you tomorrow morning.\" Her usual silvery voice sounded tired but happy.\n\nFred smiled; he'd been busy today as well.\n\n\"I snagged us the Executive Suite at the Cantella Forks Hotel. Mia and Niamh are in an adjoining suite, but we've got the other. We could probably walk, but to be honest I'd like to sit; besides, there'll be valets that will park your car.\"\n\nOni and Deb exchanged pleasantly surprised looks.\n\n\"Freddy!\" Deb cheered, leaning into his good arm, \"You're the best.\"\n\nOni had a bruise on her left cheek, Deb had a cut on her leg and cut on her left arm, but she was energetic. Fred had gotten the worst of it with a knife gash in the back shoulder blade. He wanted to get it looked at, but he also wanted to rest; and there was the other thing he wanted to do.\n\n\"It's alright if I spend the night then?\" Oni asked, a bit too innocently. Her long, jet-black hair was pulled back into pigtails. Fred looked at Deb, grinned, then moved over to Oni, bringing in for a hug before picking her up by the waist. She reacted with laughter, wrapping her limbs around him. Oni's face was above his, so she tilted down, her dark eyes catching his in her own enchanting spell.\n\nFred's shoulder protested, but he didn't care.\n\n\"If you spend the night that means I get to fuck you.\" Oni's eyes momentarily widened in shock, then lust. Her full lips captured his while Deb looked on, grinning like a Cheshire cat. Things were going exactly the way she had hoped.\n\nOni pulled away. \"I want you to pound my pussy like you did D's at the police station this morning,\" her dulcet tones dripped with need. \"I want to see what all the fuss is about.\"\n\nFred set her down, then moved to Deb, hugging her and kissing her on the mouth. She gave her man the patented Deb Stallings sloppy kiss. Oni's lip gloss never tasted so good.\n\n\"We might not make it to the hotel,\" Oni remarked. Deb grabbed her with both hands, pulling her in for a lip-smacking kiss.\n\n\"Holy shit that's hot,\" Fred admired the best friends as they played a game of tonsil hockey.\n\nDeb finally pulled away with a splatter of saliva and a few threads of drool.\n\n\"Hotel. Now,\" Oni agreed.\n\nThe trio, all flirtation and speed, piled into Oni's vehicle. Deb sat up front while Fred was in back. He was curious if Mia would be up for joining the three of them for extra-curricular activities. Fred thought he should at least invite her. Deb put a hand on Oni's leg.\n\n\"Say, Deb and Oni.\"\n\n\"Yeah, Babe,\" Deb answered.\n\n\"Hm?\" Oni responded.\n\n\"What you both say to Mia joining us tonight? Would you be okay with it?\"\n\nIn response, Deb took out her cell and texted Mia, letting her know they were coming up. She had been prepping the gorgeous redhead with texts for the past couple of days. Deb would let Freddy put the finishing touches on her. Mia would be a part of Freddy's harem.\n\n\"Fred, you sure you can tackle three bitches tonight with a hurt shoulder? Maybe we should pick up some Viagra or something.\" Oni was being Oni. Fred moved to right behind her; Deb watched the interaction with interest.\n\n\"Oni, after I drench your pussy, I'm going to watch Deb and Mia eat you out. How hot would that be?\" He saw the intake of breath, her leg spasmed. She looked in the rear-view mirror at Fred.\n\n\"Vesuvius hot, Fred.\"\n\n10:32pm\n\nCantella Forks Hotel\n\nThe short car ride over and the time spent in the lobby of the hotel did nothing to diminish the lust they felt. There were no shy glances between them, just knowing looks. Deb and Oni hadn't committed to anything physical yet, but it was clear that was about to change. Fred warned off the bellhop and the trio found themselves alone in the elevator, headed up to the Executive Suite where Mia waited.\n\nDeb attacked Freddy as soon as the doors closed, stepping up with a hand on his crotch and voraciously french-kissing him. Oni scooted in, devouring Fred's neck, but concentrating on unbuttoning, then unzipping him. Deb started to jam her hand inside Fred's jeans, taking his shaft into her hand while moaning into his mouth.\n\nWhen his cock was sprung from its prison, His jeans were halfway down his legs. His back was up against the back of the elevator. He could barely hear the music over the sound of heavy breathing; mostly his own, and the beat of his heart in his ears. Oni knelt, whipped his briefs down to join with his jeans, and beheld the cock Deb was stroking.\n\n\"Yummy,\" she complimented. Deb broke off the kiss wetly and looked down. Oni looked back at Deb with pleading eyes.\n\n\"Please may I suck your boyfriend's cock?\"\n\nDeb looked to a breathless Fred for one second, then back to Oni. Knowing what the answer would be, she didn't need his approval; Fred deserved a show.\n\nDeb crouched down, still holding the pulsating prize in her hand. God, she wanted to suck it herself so bad. Deb got in close to her friend; Fred looked down at both, making eye contact with her. His hard cock twitched in her hand.\n\n\"Ask nicely for it, Oni.\" Deb's voice was husky with lust.\n\nOni pursed her lips, gave her best puppy dog eyes.\n\n\"May this humble but awesome woman please suck Fred's magnificent cock?\"\n\nDeb brought the cock to her own lips, giving it a good suck, coating it with her own saliva. She left a healthy dollop on the crown of her boyfriend's dick. Then she presented the shiny present to her best friend.\n\n\"Oni, you are worthy of this prize,\" Deb announced.\n\nOni looked at her friend, her lips fastening around the crown of Fred's cock, making sure to suck Deb's spittle into her mouth. Oni angled herself so the couple could both clearly see what she was doing.\n\nJust then the elevator popped open with a ding. An older couple were just about to get in and saw two women kneeling, one of them with a dick in their hand, the other with the tip of the dick inside her mouth. The young man smiled, waving weakly\n\n\"Nice night,\" Fred offered.\n\nThe couple was too stunned to move. The man finally smiled, giving Fred the thumbs up. Oni and Deb giggled. Before the door closed, the couple got a good look as Oni resumed sucking.\n\nShe took him deep down her throat; Fred felt his cock hit the back of her throat.\n\n\"Holy shit, Oni.\"\n\n\"God, you are an incredible cocksucker,\" Deb complimented. She moved in and began sucking on Fred's balls. Oni's lips moved up on the cock as she swirled her tongue around his glans, kissing him on the frenulum. Done with lavishing affection on Fred's ballsack, Deb licked the base of the shaft, getting cheek to cheek with Oni. Her arm went around her friend, grabbing her waist. Her other hand was on Fred's thigh. Oni's arm went around Deb, her hand fastening onto the magnificent bottom. The pair shared cock between them; eventually their tongues met as they kissed over the crown of Fred's cock. Their tongues fought an erotic duel around his glans, their lips smacking and slurping together. Fred put a hand on each of their heads, gently pushing them closer around his dick. They began devouring each other passionately. Oni moaned around Deb's tongue, pinching her friend's ass and pumping Fred's spit slicked cock. Deb's hand also moved to Oni's shapely ass, kneading her tender flesh. Deb sucked on Oni's tongue, loving the feel of her man's hand on her head, his cock against her cheek and her best friend's hand feeling her up inside an elevator. Oni didn't know it yet, but she was going to be a great inductee into Fred's harem. Her and Mia. This was going to happen.\n\nThe elevator dinged the 23rd floor. Oni and Deb reluctantly pulled out of their hot kiss, helping Fred put on his underwear and jeans.\n\n\"Might as well keep them unzipped and buttoned,\" Deb advised, holding hands with her friend. Oni put a hand in the back of Deb's jean shorts,\n\n\"You're so hot, D,\" Oni gushed.\n\n\"Fuck, Sweet Pea, you're not so bad yourself,\" Deb confided. She looked back at Fred.\n\n\"Get that door open before Oni and I go at it out here.\"\n\nFred pulled the card key out of his back pocket. Deb pinched his ass.\n\nOni complained. \"I want Fred's cock again.\" She twirled her long, black hair. \"I want his nuts in my mouth.\" Deb chuckled in response.\n\nFred got the door. Given the day's events he should be exhausted, but after the tease in the elevator he wanted more. As much as he wanted Oni and Deb, he was looking forward to Mia. The door opened into a small kitchen. Lights were off, but the large screen TV was on, and cast enough light to see. The Executive suite was spacious, holding a sectional couch, two chairs, and a coffee table, all overseen by a 65\" LED TV. Not far from that was a single king-sized bed that looked like it would fit three people, or maybe four if they were cozy. Fred thought they could make it work. There was also a large bathtub-hot tub which was separate from the bathroom nearby. Moving to stand from the couch was Mia Riley, looking quite different from when Fred had first seen her at the Diamond. She was freshly showered, her full, thick red hair was still damp and hung down to her broad, muscular shoulders. Fred thought she looked a little underweight; probably due to the emotional weight of the past three years. She had the body of a fighter and the apparent bruises to match; at least, Fred hoped they were from the ring. Mia's nose ring shown and a tattoo of a what had to be a green softball bat framed in black barbed wire was visible on her shoulder. Mia was styling black lace panties barely covered a full, rounded ass and a black laced bra barely contained a pair of massive, pillowy breasts. Fred hadn't known her long, but she had the look of someone who believed she was being conned.\n\n\"Hubba hubba,\" Oni murmured.\n\n\"Holy shit,\" Deb exclaimed.\n\nFred tried to put his tongue back in his mouth.\n\n\"Would someone tell me why I'm here and what the hell happened?\"\n\nFred tore himself away from the six-foot amazon's tits, instead concentrating on her forehead right above her green eyes.\n\n\"Deb,\" Fred began, \"I think we owe it to both Mia and Oni to explain what's going on.\"\n\nMia nodded. \"I mean, I owe you guys for what you did, but this goes way beyond just recruiting me for your softball team.\"\n\nOni groaned. \"Dammit, I was looking forward to some three-way action! I'll be back in five minutes. Where's the bathroom? I have to jill one out, if you catch my drift.\"\n\nThree people stared at her for a beat. Oni extricated herself from Deb and skipped to the bathroom.\n\nMia looked amused. \"Kinky. That explains why I'm wearing this,\" She explained, indicating her lingerie. \"I'm assuming you got these for me?\" Her eyes were on Fred.\n\n\"I wish,\" Fred admitted, trying like hell not to ogle her.\n\n\"It was me,\" Deb began, \"I did it. Freddy is right, we owe you an explanation.\" She leaned into Fred. \"Like the kind you gave me Monday. But we're overdressed compared to you.\"\n\nMia shrugged. \"This is your setup. Do what you want.\"\n\nOni came back from her \"bathroom break\" looking a little more sorted out. Deb went in to clean up, and soon Fred felt a text come through his cell, from her:\n\nIF I THINK THE CONVERSATION IS LASTING TOO LONG, I'M GIVING THEM THE CODES THEN FUCKING YOUR BRAINS OUT. I'VE WAITED ALL DAY FOR YOUR COCK AND I CAN'T STAND IT MUCH LONGER.\n\nShe included a selfie of her in the nude in the bathroom. One hand was clearly in her pussy, and she had a look that Fred could feel in his pants.\n\nHe responded with:\n\nK\n\nAfter a bathroom break the quartet gathered in the living room except Oni, who frolicked on the bed. Mia reclined in one of the single comfy chairs, Deb and Fred sat together on the sectional couch. Everyone was dressed in their underwear; no one seemed to mind except Fred. However, with how tired he was, how much his shoulder hurt even with the painkillers, he wasn't hard for now.\n\n\"Here we all are,\" Mia began.\n\n\"Hi, Mia. I'm Oni.\" The siamese-american wore a blue sport bra and panties. She waved to the tall redhead.\n\n\"Hi, Oni. I'm Mia. Sorry to interrupt your 'three-way' action. This shouldn't take too long, then I'll get out of your hair and let you get your 'throuple' on.\" Mia's voice was naturally low and sexy.\n\nMia looked at Fred and Deb. \"So, what the fuck is really going on.\"\n\nOni stopped frolicking on the bed and moved to sit on the corner, almost catlike.\n\nFred looked at Deb.\n\n\"Take it, babe,\" she quipped.\n\nOkay, so Mia, I'm going to come over near you and ask you a question.\" Fred kissed Deb on the shoulder and rose, walking over to Mia who still looked amused.\n\n\"Fred's getting hard.\" Oni teased.\n\n\"Thanks, Oni,\" Fred winced.\n\n\"That's close enough, Slim.\" Mia suggested.\n\n\"Okay, yeah. So, remember the other night when you first smelled me?\"\n\nMia thought about it, then nodded. \"Yeah.\"\n\n\"Do you remember how I smelled?\"\n\n\"Yeah. You smelled pretty damn good as I recall.\"\n\n\"How do I smell now?\"\n\nMia stood and took a few steps Fred's way. She leaned in and took a whiff.\n\n\"Huh. Nothing. Not even any BO. No pit stick, no cologne. That's kinda weird.\"\n\n\"Here's the thing. I haven't worn any deodorant or cologne since Monday. However, I have used soap.\"\n\nMia looked over towards Deb.\n\n\"Oh, I can smell him,\" Deb's voice almost trembled with excitement, \"and believe you me, he smells incredible.\"\n\n\"Ok, I'll bite,\" Mia spoke, still standing near Fred, \"why can't I smell you, Fred?\"\n\n\"Because I haven't said Aversive Olfactory yet.\"\n\nMia swayed on her feet. Her nostrils flared; her pupils dilated.\n\n\"Christ, I can smell you. It's like if sandalwood had sex with jelly donut.\"\n\n\"Aversive Olfactory.\" Fred spoke, calmly.\n\nMia swayed again, looking at Fred, then looked at Deb.\n\n\"Aversive factory!\" Oni yelled from the bed.\n\nDeb looked at Oni. \"Oni, Sprinkle Daisymuse Sakul.\" Oni collapsed in a heap on the bed. Mia saw that happen and looked back at the two of them, somewhat alarmed. She took a seat; Fred moved back to Deb, who continued.\n\n\"Fred has had this ability for six days. Within that span he's been able to influence a few people. Tonight, it was Mr. Terry. That guy is going to give himself up and do some serious jail time. We're going to put someone in charge of the Casino that will protect our interests and that means leave you and your cousin Niamh alone. And before you ask, no. At least as far as I know, Fred has no plans to influence your sister. Fred?\"\n\nFred nodded vigorously. \"Niamh's been through enough. Rick is going to set up a bank account for her and hopefully we can set her up with a good life going forward. I think she deserves it.\"\n\nMia was processing all the information.\n\n\"Thanks for Niamh,\" she swallowed, \"but let's start as the part where I was ready to rip your clothes off and fuck you six ways to Sunday just now.\"\n\nFred nodded, sitting down. Deb smiled proudly. \"Just a minute. Allow me to explain after I've woken up sleeping beauty over there.\"\n\n\"Oni, I want you to come out of trance in three, two, one, now.\" Oni rose from the bed, yawning.\n\n\"Sprinkle Daisymuse Sakul.\"\n\n\"Hey guys. What's going on? Getting bored over here.\"\n\n\"We're just explaining the ScSc, Oni.\"\n\nOni crinkled her nose like she sniffed a fart.\n\n\"You know it should be SKS, right?\"\n\nDeb shook her head, grinning wickedly. \"I think it should be SkSc instead. Fred, this is confusing.\"\n\n\"It's ScSc, you're breaking my balls over here,\" Fred mumbled.\n\n\"Are you explaining to her how she is attracted to Fred?\"\n\n\"Yes, Oni.\"\n\n\"You can do that to everyone then?\" Mia asked.\n\n\"Not everyone,\" Fred answered, \"Most people though.\"\n\n\"Wait, you did this to me just to get me to say yes to being on the Ponytail Express?\"\n\n\"Definitely,\" Deb spoke, \"the offer is to play for the Express this summer. After that, you're free to go your own way. That's almost all we're looking for.\"\n\nMia smirked. \"Almost all, cheerleader? What else are you looking for.\"\n\n\"Itchy buttocks!\" Oni giggled.\n\n\"Not quite itchy buttocks,\" Deb explained, \"but sex is on the menu, Mia. Fred wants you and you want him. You probably wanted him the second he asked you about popcorn.\"\n\nMia blushed. \"Okay, this is -- a lot to process, I...\"\n\nDeb moved to sit in Fred's lap. She kissed him lightly on the lips.\n\n\"Please don't go, Mia. Stay.\" Fred grew hard fast with Deb sitting on his cock, her sculpted body in such proximity.\n\n\"Mia, we'd like you to stay. You don't have to do anything you don't want to do,\" Deb fibbed.\n\nMia looked at the two of them.\n\n\"So, you have an activation code that makes me immune to this ScSc? Why wouldn't you just have it on all the time so everyone could be your slave?\"\n\nDeb was quick to answer. \"You may not have picked up on this yet Mia, but Freddy has a conscience. It's a rare thing these days, but he'd rather give you a choice. If it makes you feel any better, I can give you the phrase so you can use it to go in and out. I know that's what I did in the beginning. I was afraid I'd lose my fucking mind whenever I smelled him. It was easy to get carried away.\"\n\n\"So, you want me to be a willing participant in your sex games and a member of the Ponytail Express for the summer, and in return you're going to set both my cousin and me up with new lives?\"\n\n\"That's the idea,\" Fred croaked. His dick was granite against Deb's finely sculpted pear-shaped ass.\n\nMia looked over to Oni. \"I assume you're on board with all this then?\"\n\n\"Affirmative, Big Red,\" Oni joked, \"I've been wanting to fuck Fred since Tuesday pretty much. Today Deb said it was okay, so I feel a lot better about it. And Fred made me pretty happy when he said he was going to fuck me then watch...\"\n\n\"...Yeah, she gets it Oni,\" Fred interrupted.\n\nDeb wanted Freddy bad. His dick was so hard against her ass. She wanted to take it out and put it into her juicy pussy; it was so fucking tempting.\n\n\"Okay. I've had worse dealings. What was the phrase again?\"\n\n\"Cursive redactory!\" Oni teased.\n\nDeb kissed Fred, on the lips, then whispered into his ear.\n\n\"Fuck the shit out of Oni but let me know when you've cum in her pussy.\"\n\n\"I love you, Deb,\" Fred murmured. Deb got off him and he rose to walk to the bed. Oni saw him coming towards her and the huge tent in his underwear.\n\n\"Is that for me?\" Oni squealed in delight.\n\nDeb stayed on the couch but motioned Mia over. The redhead watched appreciatively as Fred ambled over to the bed and Oni, who grabbed him and flipped him onto the bed.\n\n\"Where's my dick!\" She half-joked as she peeled off his briefs, exposing his hard flagpole.\n\n\"There's my dick!\" She leaped off the bed, peeled off her own soaked panties, then leaped back onto Fred with feline grace.\n\nFred thought there was only one way she was going to calm down.\n\n\"Oni, it's time.\"\n\nShe squealed again, straddling him, then palming his shaft with one hand while the other balanced on his chest.\n\n\"Take off your bra and show me your tits, Oni -- ohhhh,\" Fred moaned as Oni slid down his flagpole and he entered her tight but wet canal. She was tighter than Deb. About halfway down his shaft he met resistance.\n\n\"Doggamn, Fred,\" Oni gurgled, lifting herself back up, while peeling herself out of the sports bra with one fluid movement. She gazed at Fred with renewed lust before lowering herself back down.\n\n\"ohohohohoh fuuuuck,\" Fred felt liquid warmth around his cock as Oni's cunt rippled making the tight entry almost painful for him. She lifted back up, and Fred saw her juices on his cock before she went back down, this time a bit farther now that she was getting lathered up. She had both hands on his chest for balance, her long, lustrous black hair hung down to the middle of her back and over her shoulders. Fred could barely see her face and wanted to get closer to he put a hand on her muscular heart shaped ass, giving it a good pinch while sitting up to lay claim to her right breast, taking it into his mouth, teasing her pert, erect nipple. Her hands moved from his chest to his shoulder and back of neck, holding him in place. She impaled herself on his cock for a few more strokes while he teased her nipple with his lips. Another gush of Oni's juice and he was balls deep inside her molten depths. She began garbling unintelligible phrases, and gradually Fred's cock began to feel better inside her narrow love canal. He released her tit from his mouth and laid back down to let Oni cowgirl him.",
        "Mia walked over the couch reluctantly. Deb thought it was adorable that Mia really didn't like her all that much. Her suspicion turned her on even more.\n\n\"Don't be scared, I don't bite,\" Deb joked. Mia took a seat on the couch, those magnificent boobs shimmying slightly. Mia wasn't even trying to be sexy, and Deb wanted her.\n\n\"Look, I'm down with both Vadge and cock, but I don't do watersports.\"\n\nDeb cocked her head to the side. \"Watersports?\"\n\n\"Piss play, golden showers. I don't do that. Scat, bestiality, heavy BDSM, Furry stuff, or kissing.\"\n\n\"Ewww!\" Deb exclaimed. \"Wait -- kissing is off the menu?\"\n\nMia nodded, glancing back at Oni as she was starting to impale herself into Fred's dick.\n\n\"You lump kissing in with bestiality?\"\n\n\"Yeah.\"\n\nDeb wanted to get to the bottom of that conundrum but surmised it would only delay the inevitable.\n\n\"Aversive olfactory.\"\n\nDeb had been sharing bodily fluids with Fred all week, and at this point Fred's pheromones were making her influential as well. Deb knew this was the case since she had been able to influence Thalina by being in the same room with her. And now it was working with Mia.\n\nMia grabbed Deb by both legs, pulling her into her lap so they were face to face. Deb's legs widened to accommodate Mia's demand for physical contact. Deb's breasts rested just above Mia's; it was a totally new and delightful feeling for Fred's girlfriend, who had two words to say to the alabaster skinned amazon.\n\n\"Kiss me.\"\n\nMia's full, pouty lips mashed up against Deb's. The sexy pair swapped spit, smacking and slurping. Soon, they were tongue-wrestling in every sense of the word.\n\n\"Aversmmmwaaah,\" Mia was trying to say the phrase to bring herself back, but Deb was having none of it, bringing her strong legs around Deb's back, and putting an arm on the back of her neck to hold her in place. Mia had a hand on Deb's ass and back and wasn't struggling to hard to push her away, so Deb snaked a hand down Mia's belly, inside her lace panties. She felt the redhead's pubic hair; it was rough, almost like a brillo pad. Deb's fingers angled through her pubic mound to start rubbing her vulva. It had the desired effect.\n\n\"Mmmmmmm,\" Mia's fire was being stoked by the cheerleader. She loved the feel of the athletic woman's belly up against hers. Wanting to spring those tits from the sports bra they were confined in, the sultry redhead unhooked it while sucking on Deb's tongue. It took her a couple of tries due to both the tongue in her mouth and the hand working the folds of her lady garden. Mia could tell Deb was inexperienced when it came to women, and it made her feel smug that she knew more about it then she did. She no longer cared about the fucking phrase or whatever.\n\nDeb could hear the slapping sounds of flesh on flesh nearby and knew Oni was getting a solid deep dicking from her man. Mia was more pliable now that she was getting her pussy rubbed, and the pair were effectively tongue-battling each other. Mia had somehow blitzed Deb's mouth and she found herself getting tongue fucked by Mia. The two gazed at each other with lust as they slurped, moaned, and sucked face.\n\nMia trapped Deb's arms with her own, lifting her breasts up to her own face to suck on them. They were supple and heavy looking with nipples as hard as bullets and brown half-dollar sized areola. It was almost like they defied gravity. As that weren't enough, Deb sported an under-boob tattoo of roses, forming a larger rose on her lower sternum. Mia felt like the tattoo didn't do her tits justice; no tattoo ever would.\n\n\"Cheerleader tits,\" the redhead drawled in her gravelly voice. She licked a nipple that tasted like lilacs mixed with vanilla, drawing a coo of delight from the blond, who was unsurprisingly strong herself. and her lock on Deb's arms tightened.\n\n\"I...ahhhhhh,\" Mia felt Deb's finger invade her nethers, taking the wind out of her sail but applying gas to her engine. She devoured Deb's breast, licking and sucking the tender areola and having fun nibbling on her hard nipples. Mia had a long and illustrious sexual history but had seen few women make eye contact the way this young lady did. The redhead found her hips beginning to move to the fingerbanging beat as the sexy athlete inserted a second finger. The dual sounds of her mouth slurping and churning those perfect breasts coupled with the squishing sounds of Deb's finger in her weeping pussy was almost a nostalgic feeling to some her best sexual experiences. Mia's strong arms released Deb's, and she gave Mia's forehead a wet smooch. Mia pulled her face off Deb's titflesh.\n\n\"Have you ever been with another woman, Deb?\"\n\nDeb shook her head no, looking down at Mia. She bit her lower lip and arched an eyebrow, pulling her fingers out of Mia's love cavern.\n\n\"Can't say that I have, Mia.\"\n\nMia shot Deb an \"aw shucks\" look, managing a grin that Deb had no choice but to return.\n\n\"OHGOD, Fred is fucking my foo foo!!\" Oni wailed, causing Deb and Mia to giggle.\n\nMia smooched Deb's chin, which was already wet with their shared spittle.\n\n\"Well,\" Mia proposed, \"why don't you make yourself comfortable while I show you what the fuck you've been missing?\"\n\n\"With an offer like that, how can a girl refuse?\"\n\n\"You may be a girl now Deb, but you'll be a grown-ass woman after I'm done with you.\" Mia put a fair bit if sultriness into her voice that gave Deb goosebumps and caused her pussy to writhe in expectation.\n\n\"Acta non verba, Mia,\" Deb\n\n\"Deeds not words?\"\n\nDeb nodded.\n\nMia indicated Deb sit on the top of the couch, with her feet on the cushions. That way she could easily see Oni and Fred fuck each other senseless. Deb assumed the position gracefully after shimmying out of her panties. Oni and Fred were creating an erotic melody of wet slapping noises, grunts and various expletives. It was no surprise Oni was getting the grand fucking of her young life. Her best friend was going to enjoy becoming a member of Fred's harem.\n\n\"Hey, cheerleader,\" Mia's low gravelly drawl interrupted her reverie as she looked down on the woman both Fred and she wanted. Mia beheld her leaking pussy, looking up at her and shaking her head.\n\n\"I thought your breasts were gorgeous. Your pussy is fucking amazeballs and I bet it tastes even better. Hold onto your ass, Deb.\"\n\nWith that, Mia kissed the inside of Deb's lusciously muscular thigh, slurping and smacking her way to the bottom of the V. God, the musky aroma made the redhead shiver with anticipation. Mia realized she was the only one still dressed. However, it was time to show Deb what a skilled cunning linguist could do.\n\nFred was holding his own. Oni was quite sexy in her own right; he found the differences to be fascinating and as a result was able to keep himself hard. He was having a hard time seeing Deb and Mia over on the couch, but when he saw Deb perched atop it, his dick twitched inside Oni. He could see the side of Deb, the swell of her breasts and her left arm brace herself on the back of the couch. He saw Deb steal a glance his way and he grinned, mouthing the words \"I love you.\"\n\nFred wanted to up the ante; he rose up on Oni, kissing her on the lips.\n\n\"Ooooohhh Fred you're the best! You're destroying my little foo foo!\" she squealed.\n\nHe moved to her ear while she bobbed slowly up and down on his magic rod.\n\n\"I'm about to go scorched earth on your little foo foo, Oni,\" He tugged on her earlobe with his teeth for emphasis. Her she moaned, biting him on neck, trying to give him a hickey. He looked over her shoulder at the show unfolding within his view.\n\n\"Now turn around. I'm want to fuck you from behind so you can see Deb get her pussy eaten.\" He felt it only fair everyone involved should watch Deb's inaugural sex with another woman.\n\n\"Oh,\" Deb scrunched forehead while Mia began giving her sopping pussy a proper tongue bath. The redhead hummed into Deb's muff.\n\n\"Oh fuck.\" Her left leg spasmed.\n\n\"What are -- Oh, Jesus, Mia,\" Deb groaned. Whatever she was doing to her pussy it was better than great.\n\nOver on the bed, Fred arranged things to his liking. He could just see Mia's mop of full red hair moving almost casually. He could hear periodic moaning, and the wet slurping of Mia's mouth on her lover's buttery crease. Oni was on all fours watching the show unfold in lustful awe. Fred brought both hands down on her small, gorgeous heart shaped ass with a loud smack.\n\n\"Ju-fucking-manji!\" Oni keened as Fred sunk his cock back into her well-fucked love canal. His balls smacked against her ass as he began pounding her for a dozen strokes before he suddenly stopped, putting his hands behind his back. Oni was transfixed with Deb getting her undercarriage spit shined by Mia until she no longer felt Freddy's thrusts. She looked over her shoulder at Fred, confusion and lust evident on her pretty face.\n\n\"Oni, I want you to fuck back into me.\" He grabbed a handful of her long, black hair twisting it in his hands and pulled on it just a bit.\n\n\"Fred, you fucking man-god, you're fucking me so good, so fucking good,\" she cried. Fred felt another flooding of her love canal and luxuriated in the feeling. His precum was leaking into her gooey snatch and she began humping back into him.\n\nOver on the couch, Deb was getting the cunt munching of her short adult life. Her breathing was labored; her eyes widened in lust, shock and surprise.\n\n\"Fuck Mia, what are -- youdoing ahhhhh!\"\n\nMia extricated her face from Deb's cunt, looking up at her. It was tough sledding because Deb had the best snatch she'd ever tasted. It was like a hot musk sundae without any calories.\n\nDeb looked down at Mia, her breasts heaving.\n\n\"Who said you could fucking stop?\"\n\nMia gave that \"Oh, shucks, ma'am\" grin and settled in between Deb's wide opened thighs to resume her oral ministrations. The redhead put an arm around Deb, gripping the small of her back, while the other spread the outer folds of her labia open so Mia could really get to work. She used lips, tongue, teeth, nose, and chin along with her hand to really give Deb the proper executive experience.\n\n\"Mia, how -- Ohshit, you -- Oh-if I'd known it could b-be this f-fucking goood GOD!\" Deb moved her head to the left, her blond hair flowing with her. Her pussy snapped around both Mia's tongue and thumb.\n\n\"I w-wou-would've b-been into girls a l-l-long--long--oooo,\" Deb's thighs closed around Mia's head.\n\n\"Time agooooawwooo!\" Deb wailed as an orgasm tore through her. Her breasts jiggled; washboard abs flexed as she gushed into Mia's eager mouth.\n\nMeanwhile, Oni was slamming her eager pussy into Fred's greased up cock. Fred had Oni's arm pulled back behind her while the other still had her by the hair. Oni wept as she came, trying to say something nice about how she was feeling, but it was all nonsense. She was looking back at him, while he had her but also Deb in his sightline. Deb was a fucking amazing sight, blond hair spilling around her, bathed in orgasmic bliss. Her sculpted body gleamed with sweat, the muscles in her back contracting. Fred's balls erupted his seed into Oni's tight, rippling \"foo foo.\" She managed only one line of coherence.\n\n\"Thank you!\"\n\nFred stayed inside her as she fell to the bed. Her ass still stayed in the air as she arched her back to accommodate his positioning. Fred saw it as an act of submission. He kept pumping loads into her quaking body.\n\nBack on the couch, Deb leaned backwards dangerously, one hand on the back of the couch while the other gripped Mia's hair while the redhead furious munched Deb's quivering gash. Mia got a great deal of personal satisfaction knowing Deb would never forget this moment. Judging by the lack of any noise from Oni, Fred was done fucking her. Mia wanted to get in on the fun tonight and hoped Fred had a round of good, hard sex left in him. Mia tapped on Deb's thighs the way an MMA fighter would tap out due to a submission hold. Deb leaned back over to embrace the redhead.\n\n\"That was incredible, Mia,\" Deb complimented, awe in her voice.\n\n\"Wait, it gets better,\" Mia promised in that low, sexy drawl of hers.\n\nThe pair of women, now lovers, rose. Deb was a little shaky, Mia was more than happy to put an arm around her, feeling up that fine ass of hers. Deb cooed, kissing Mia on the shoulder. They both got quite a good look at Oni, laying on her stomach, back slightly arched as she laid between Fred's thighs. His legs were apart as he eyed both Mia and Deb; Oni was clearly giving him head.\n\n\"Attention shoppers, we have a cleanup in the Oni aisle. I repeat, cleanup in the Oni aisle,\" Fred joked. Oni turned around to look at the pair, taking Fred's spit-shined now hard cock out her mouth.\n\n\"Fred made a mess inside my foo foo. I need someone to clean it up.\" Oni moved her legs apart, her freshly fucked cuntlips leaked Fred's seed.\n\nMia and Deb exchanged glances.\n\n\"Looks like a two-tongue job to me,\" Deb admitted.\n\n\"In for a penny,\" Mia admitted.\n\nPonytail Express are:\n\nDeborah Stallings\n\nOnvipa Sakul \"Oni\" Dasna\n\nMia Grace Riley\n\nThalina Hughes\n\nFrederick Markinson"
    ],
    "authorname": "A_Gavin_MaCross29",
    "tags": [
        "light violence",
        "male dominant",
        "femdom",
        "ff",
        "ffm",
        "mf",
        "athlete",
        "cunninglus",
        "coed"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/the-ponytail-express-ch-08"
}