{
    "title": "Claiming Treasure Ch. 16-20",
    "pages": [
        "Spider Monkey's POV<br >Arrowhead Lake House\n\n\"So Vegas instead of Orlando?\"\n\n\"Yeah,\" Vic said as he started to set the table for dinner. \"The good news is that we can leave earlier than I thought we could. Chase and Rori are flying to Dallas tonight; they heard back from Roadkill after he verified it was safe to come back. They will get the twins, and fly back with Roadkill, Possum, Brenda, and Zoe.\"\n\nI stirred the venison chili as the sourdough bread finished baking. I loved the stuff, and my love of it came with me from San Francisco. I kept my sourdough starter in my kitchen, baking a dozen or so loaves a week. \"Why not fly commercial?\"\n\n\"They don't want to deal with the TSA, or have the passenger manifests showing up anywhere on government databases. We may be all right with the government, but that doesn't mean they aren't watching us.\" Having money also meant traveling in comfort and not having to change planes and rush between gates with cranky babies. A direct flight to Two Harbors was perfect.\n\nI thought about the people coming back on the plane. The nannies made sense, as did Rori's parents, but that wasn't all of the ones who had left. Heather was not with them anymore, but the guards? \"What happened to Brent and Laura?\"\n\n\"They are packing up all their stuff and driving the two vehicles back,\" he said. \"They should be here in two days, three if they take their time.\"\n\n\"It will be good to see them,\" I said. \"Have your um, bosses left already?\" Damn, I almost said, 'Alphas.' I was going to have to guard my words and actions if I was going to keep my secret, which was that I knew THEIR secret, secret. What they didn't know wouldn't hurt them.\n\n\"Yes. Rori and Chase should be taking off from Two Harbors any minute now. Ron is in charge, and I'm making sure everything stays safe for their return.\"\n\nThree months up here while your year-old babies were in hiding. I couldn't imagine how tough this had been on Chase and Rori. \"It's safe to bring them back?\"\n\n\"It is. The people we were worried about are no longer a problem.\" I stared at him, expecting more, but he shrugged his shoulders. \"I can't tell you, baby.\"\n\n\"You and your security stuff,\" I said. \"Speaking of stuff we can't speak about, I gave Rori the last data packet on the Sons of Tezcatlipoca operations. I'm at a dead end with them; the Feds can pick at the carcasses now that I've stripped the meat off.\"\n\n\"Profitable?\"\n\n\"I'm not going to dip into my retirement savings just yet,\" I said with a grin. \"Stealing from a criminal organization is the best. The Feds don't care, not after the deal Colletta made with them, and not after I've moved it through so many accounts they'll never trace it.\"\n\n\"You're a genius, and I love you,\" he told me. Pulling me into his arms, he leaned down and gave me a deep, toe-curling kiss.\n\nI wanted him; it seemed like I always wanted him, from the first time he walked into my Silicon Valley condo. \"I could use some loving,\" I said as I moved until my arms wrapped around his muscular torso. \"We've got ten minutes before the bread is ready.\"\n\n\"Turn off the burner then,\" he said.\n\nI let go and turned around to turn the gas off, only to shriek in surprise when he yanked my sweatpants and panties down to my ankles in the middle of our kitchen. \"What are you doing?\"\n\n\"I'm not wasting any time,\" he said as he dropped to his knees. I held on to the counter as he moved my legs apart, and his tongue licking at my needy pussy. I moaned in pleasure as his talented tongue got me warmed up. It wasn't long before I was begging for his cock like a bitch in heat.\n\nI giggled to myself at just how close to the truth I was.\n\nHe pushed the clothes off my legs and stood up. I hopped into his arms, his big hands cupping my ass as he moved me to a spot by the sink. I squealed a little as my bare ass hit the cold granite, but that noise was nothing compared to the scream as he plunged that big cock up to the hilt in one powerful stroke. \"VIC,\" I said as he pulled back out. \"Fuck me, baby.\"\n\nEven with me on the counter, I was still a little too low for my big guy. He put my left leg on his shoulder, opening me up as my hands grabbed his neck. I closed my eyes as he took me hard and fast, just the way I liked it. He was strong and dominant, and I was his helpless fuck toy as he pounded me with that big cock of his.\n\nWhen I was farther along in pregnancy, we'd have to be careful, but my obstetrician assured me our baby was well protected even during this. I giggled as I thought back to his pleased expression in her office at our last appointment. \"I just want to be sure,\" I had told my Doctor. \"Vic is a BIG guy if you know what I mean, and we are very athletic during sex.\"\n\n\"How athletic are we talking,\" my Doctor asked.\n\n\"He bends me like Gumby and pounds me into a puddle,\" I said proudly. Vic was biting back a smile.\n\n\"If it becomes uncomfortable during sex, stop and change positions,\" she said. \"The body is an amazing thing. I would be careful of anything like a table that presses into your belly, but other than that? Have fun.\" Leaning in, she whispered in my ear. \"If I had that hunk at home, I'd be doing the same thing.\"\n\nMy moans just encouraged him to give it to me harder and faster. \"YES! FUCK YES,\" he yelled before he pulled me tight, his cock pulsing as it filled me up. That sent me over the edge, and I came hard with him, squirting all over his stomach with my orgasm. He held me as we waited for our bodies to return to normal; when he could move, he pulled off some paper towels from the holder and got them wet. \"We made a mess,\" he said as he pulled out, keeping the big mess from hitting the floor.\n\n\"I don't care,\" I said. \"That was amazing.\"\n\n\"So are you,\" he said as the buzzer went off. \"I'll pull the bread out. You go clean up while it cools.\"\n\nI held the towels in place as I jumped off the counter, grabbing my clothes on the way. \"Wash your hands first,\" I said as I waddled out to the hallway.\n\nHe had pulled his jeans back up and had food on the table when I returned. I'd been shocked to find out how good he was at cooking, and he said this chili recipe he'd learned from his Grandmother. He must have learned the recipe over a cooking fire outside a cave, though.\n\nI'd found all kinds of stuff on the open sections of the Council website after I'd caught up on the trial videos. The website included complete genealogical information on all the world's werewolves, and Pack rosters with matings and birthdates. May 20<sup>th</sup>, 1814. That was Vic's birthday.\n\nMy big dog was over two hundred years old.\n\n\"He'd fuck you to death if he was twenty years old,\" I said to myself as I used the bathroom. \"And you'd let him.\"\n\nI washed up and dressed as he was bowling up my dinner. I went to sit at my place, but he pulled me into his lap instead. \"I like having you close,\" he said as his hand moved to my belly.\n\n\"Are you always going to be this protective of me?\"\n\n\"No. It'll get worse as you get bigger.\" I could see the pain in his eyes, and I knew why. He'd lost his mate in childbirth when his daughter was born.\n\n\"I'm going to get so fat,\" I said as he handed me a buttered piece of the hot bread.\n\n\"Then I'll carry you wherever you need to go,\" he said. \"When I can't be here with you, I'll arrange for help.\"\n\nI added shredded cheese and a dollop of sour cream to my bowl and dug in. I was hungry, and the chili paired perfectly with the sourdough. \"What's the new plan for our trip?\"\n\n\"We'll load up my trailer with our motorcycles and head south,\" Vic said. \"We'll stay with the Vegas Brotherhood chapter for a few days, then one of their prospects will load up Heather's motorcycle and stuff and follow us up the west coast to San Francisco before flying back. We can grab anything you need out of storage while we are in town. We'll drive north into the mountains, drop off Heather's stuff in Washington, then take the northern route to get home.\"\n\n\"We should have the prospect meet us in the City, and take the Pacific Coast Highway up,\" I said. \"We've got time and money, and I want to ride before I'm too fat and ugly to be out in public with you.\"\n\n\"You have no idea how beautiful you are to me when you are carrying my child,\" he told me as he kissed my forehead. \"I want to ride with you, but I'm not worried about you getting so big you need the whole lane or anything.\"\n\n\"Why, then?\"\n\n\"I don't want to stop every fifteen minutes so you can go to the bathroom.\"\n\nI smacked him across the nose with my bread and acted offended as long as I could, but when he started laughing, I lost it too. I loved this man.\n\nHe had to go back to work for a few hours, so I went back to my office after he left. I'd hacked into the server yesterday, and had the files transmitted to me and mirrored already. I had all the data on a removable hard drive on my hacking server, but there was a lot more I wanted to do in there.\n\nI inserted a program I'd written into the Council server; every night after midnight, it would check for files that had been updated since the previous night and transmit them to my server automatically. Once that was in place, I went to work on their telephone system. The Council was using a relatively modern system that had Voice Over Internet Protocol connections to the phone system. I used an escalating rights hacking program to break through and get administrator rights.\n\nWith that power, I set about configuring the system the way I wanted it. The system could save the audio files of calls from all phones, and I turned that feature on. I pointed it to a new folder I created with a misleading name, on a section of the server that wasn't encrypted or password protected. Combined with the other program, I would know everything they did.\n\nAt least I would after I broke through their 32-bit encryption on the personal files of the Council members. I was running a program on my hacking server to do just that, but it would take time.\n\nI heard the garage door open and turned off the screens. The programs would stay running, and I would check them tomorrow.\n\nRight now, I wanted some more loving.\n\nTwo days later, I was loading a laptop, portable desk, external hard drive, headset, and portable printer into the back seat of Vic's truck. \"We're going on vacation, baby. Why are you bringing that?\"\n\n\"It's a long drive, and you know I don't like driving your big truck, especially with a trailer behind it,\" I said. \"I've got to keep busy somehow, and I still have work to do.\"\n\n\"You're retired,\" he said.\n\n\"Hacking never sleeps,\" I told him as I set things up. Before we left, I removed the hard drive with the Council data and replaced it with a blank one. All the updates that came in while I was gone would go on that. If I had high-speed internet access, I could download it remotely.\n\nI was looking forward to warmer weather; in early April, Minnesota could be below zero or in the sixties in the same week.\n\nWe were in Texas before the hacking program broke through the encryption, and I didn't have much time to look at it before we arrived at the Las Vegas clubhouse. I begged off the party early that night, leaving Vic down at the bar doing shots with Aces and his Club officers. All of the files were unlocked, and I started doing word searches to find things related to Rori and Chase.\n\nIt was going to take days to go through it all, and I was on vacation.\n\nCh. 17\n\nRori King's POV<br >Arrowhead Pack House\n\nI sat in the shallow water of our pool, leaning back against Chase's chest as our babies played with the bubblers. We'd been home and together now for four days, and I hadn't let them out of my sight. When our plane landed, and I finally saw them, I couldn't stop crying. Their little hands kept touching my face as if they couldn't believe I was there.\n\nWe'd missed so much in the three months they were gone. Milestones and memories were lost forever for us. I had so much anger for the Council and what they made us do.\n\nI was so grateful to the people who kept them safe while they were in hiding. Possum and Roadkill had made the most of their time with their grandchildren; when Cheryl bumped her head and ran for Possum instead of me, I sank to the ground and started crying. She picked her up and brought her over, letting me kiss her better. \"It will go back to normal soon,\" she said as she sat by me.\n\nIt took a day or two, but it did. The Pack threw a party to welcome back the children, their nannies Brenda and Zoe, warriors Brent and Laura, and Betas Possum and Roadkill the night we returned. I couldn't thank them enough. The party had gone well into the night, as Chase and I kept watch over the pair as they slept in the pack-n-play.\n\n\"Rori, you and Chase have a phone call you NEED to take. It's your uncle Martin,\" the security center linked me.\n\n\"On my way.\" I waved Brenda and Zoe forward and told them we'd be back soon. I rinsed off in the locker room and quickly pulled on my clothes, meeting Chase on the other side as we walked to our office. \"Transfer the call to my office, please.\"\n\n\"Yes, Alpha.\"\n\nThe phone rang, and I put it on speakerphone. \"Martin, how are you,\" I said.\n\n\"Rori, I need you to sit down,\" he said.\n\nMy stomach flipped as Chase pulled me down into his lap on the desk chair. \"Go ahead, Martin,\" he said as he wrapped his arms around my waist.\n\n\"I got a call from the Coast Guard Sector Field Office in Grand Haven, Michigan, a few minutes ago. A fishing vessel saw something suspicious on their sonar and marked the location. The Coast Guard responded and identified it as a crash site.\" I was going to be sick. \"It's the plane Charles was in,\" he said. \"A salvage boat and divers raised the plane. His body has been positively identified.\"\n\nMy stomach lurched, and I pushed myself off of Chase's lap and grabbed the garbage can. I lost my lunch, heaving it out as Chase held my hair back. When I had nothing left, I sat back, and he handed me a bottle of water to rinse my mouth out. \"What happened,\" I said.\n\n\"We don't know yet. The Federal Aviation Administration, National Transportation Safety Board, and FBI are all involved. They won't tell me anything.\"\n\nI let Chase pick me up and take me back to the chair. \"What happens with his body?\"\n\n\"It will undergo an autopsy, and after that, they will release it to me. I plan to have Charles cremated then spread his ashes at his favorite spot on our land.\"\n\n\"I want to be there,\" I said. \"For both.\"\n\n\"I'll let you know. I'm sorry, Rori. I wish you had more time with your grandfather than you did.\" I could tell he was barely holding on.\n\n\"I will let Ashley and Colletta know,\" Chase said. \"Thank you for calling.\" He picked me up and carried me back to our home, sending a cleaner to the office to take care of the garbage. He put me in the shower as the nannies returned our sleeping babies to us. I fell asleep with my toddlers by my side, taking comfort in their scents and their breathing.\n\nBrian Steele's POV<br >Council Headquarters<br >Banff Pack, Alberta, Canada \n\nTeri, Rick, and I were powering through a scene in Battlefield: V and things were slowing down. I was getting pissed at the freezing and performance. \"Dude, what's going on with our Internet,\" Rick asked over the headphones as he bumped my knee with his.\n\n\"I don't know, but you know how bad the internet speed sucks out here. It's probably the server in town.\" We had a fiber optic line connecting the Pack and Council servers to the telecommunications company serving the area.\n\n\"It happens every night at midnight,\" Teri said. \"Annoying.\"\n\n\"It's probably the data backups,\" I said. \"I'll check them out tomorrow.\"\n\nFive minutes later, the speed went back to normal, and we kept playing until two in the morning. Teri and Rick were mates, and both worked in the building maintenance group for the Banff Pack. Both were in their twenties, and among the few in the Pack who were into computer gaming. Alpha John Coffey was a stickler to isolation from humans; only a few select people allowed to conduct business with them. Gaming wasn't as fun when you were under Alpha orders not to communicate with other humans. Thus, our late-night gaming parties were the only way for me to enjoy multi-player games.\n\nI was the computer guru for the Pack. I had been the Alpha Geek in the pack since I was thirteen, finding computers to be my thing instead of fighting. The Alpha put me in charge of the Computer Room at fourteen. My duties had expanded when our previous Alpha, Jack Coffey, had become the Chairman of the Werewolf Council. The Council now occupied another building, and I had furnished it with a dedicated server. While construction was going on, I added a third data center for backups. The third center was in its own small building, far removed from the others and with its own power supply.\n\nI'd made it this far, reaching low Beta status within the Pack at age thirty-five, because I could handle anything with the computers. As I woke up the next morning, the conversation from last night was bothering me. I ran some diagnostics, finding nothing amiss. I did some disk cleanup and archived some files, knowing these would help, but not finding the cause of the problem. I checked the program for the data backup routine on the Council server, and didn't see anything that would explain the performance. I checked at the third data center and verified all the updates were going on time. I needed to figure out where the problem was, and for that, I went to the Pack server room.\n\nThe data backup routine looked fine there too. \"Time to troubleshoot,\" I told myself. I set the backup time on the Pack server to two in the morning, knowing the Council server was at midnight. The only other explanation was the common data line into town. I'd have to monitor performance in real-time and see where the demand was coming from. Tonight, instead of gaming, I was going to be working.\n\nI went through my duties during the day, taking a nap in the afternoon since I'd be up half the night. It worked out well for me because both the Alpha and the Chairman had been in a foul mood since the trials. I kept quiet and in the back at the daily staff meeting, and generally hid out in the computer rooms. I had no desire to feel the anger of a pissed-off Alpha.\n\nAt dinner, I found a quiet table next to Rick and Teri. \"I can't play tonight, but I want you guys to play without me,\" I said. \"I have some things I need to check to figure out this speed issue at midnight.\"\n\n\"It's not a big deal,\" Teri said.\n\n\"It could be a sign something is wrong, maybe equipment starting to fail or a corrupted program. It's just one night.\"\n\n\"Fine. But don't get pissed when we get this level without you,\" Rick said.\n\n\"Like THAT will happen.\"\n\n\"How long is the Alpha going to stay pissed off about Alpha Rori getting away with it,\" Rick said over the link. You never EVER talked shit about Alpha John out loud. It was a quick trip to the punishment pole if you did, even the Ring if he considered your words a challenge to his Alpha position.\n\n\"It's hard to tell. I know that he's been working the phones with other Alphas. It's got to hurt when two-thirds of the Packs side with a female Alpha over Pack law and tradition.\"\n\n\"Alpha Rori is badass, Alpha Coral too,\" Teri said. \"Really. You wouldn't believe how many Omegas and females are rooting for her.\"\n\n\"Coral's been the Omega Goddess since the Battle of the Coral See back at Bitterroot years ago. The Alphas are not going to allow her to keep that Pack for long. A dominant female Alpha goes against everything they believe,\" I said.\n\n\"I've talked to my sister in the Blue River Pack. They lover their Alphas, and there is no way any Alpha wannabe will get the votes to sustain a challenge,\" Teri said.",
        "\"And that's why we've got a pissed-off Alpha and Chairman, plus the Council,\" I said. \"Alpha Rori is untouchable now; she has ridden this 'Luna's Blessing' thing to rally two-thirds of the Packs in support, plus she's the Blessed One. You saw the trial; they wanted to control her and put their own people in place, and instead, they've cemented her as the leader of a movement. Honestly, I think Alpha John would face a challenge before Coral or Rori would.\"\n\n\"Just remember to keep your heads down and not say anything,\" Rick said. \"It's way above our paygrade.\"\n\n\"I wish Banff was on their side; I wouldn't mind a touch of Luna's Blessing,\" Teri said as she touched her belly. She and Rick were mated twelve years, and her heats hadn't taken yet. \"Now Alpha Coral is pregnant AGAIN, with her daughter just over a year old. It's not fair.\"\n\nAlpha John had shifted and run into the woods in a rage when THAT piece of information came out. He hadn't come back until the next morning. \"Luna Roseanne is on his ass like white on rice about it, too. Sixty years and no heir.\"\n\n\"Not our business,\" I said as I picked up my plates. \"I'll see you tomorrow.\"\n\nI was sitting in the Council server room, with my computer set up to monitor server and broadband performance as it got close to midnight. When the hour struck, the activity levels picked up a lot more than I expected. The file backup program was communicating properly with the backup server, but the internet traffic was through the roof.\n\nI dug deeper, finding the program that was causing the activity and pulling it up. My blood ran cold as I realized what it was doing.\n\nThe files were going out over the Internet.\n\n\"NO NO NO FUCKKKKK!\" I tried to end the program to stop it, but that didn't work. I unplugged the fiber optics connecting us to town and watched as the transmission ended.\n\nThat should have been the end, but it wasn't. Another program started up, one I couldn't access, and I watched in horror as files started to disappear.\n\nWe'd been hacked!\n\nThere was a worm in the system, and it was chewing through the system and eating everything in its path. I jumped up, hitting the emergency power-down button for the room. The servers turned off as I raced up the stairs and over to the Pack building. I ignored the mental sends from Pack members angry at the loss of Internet access, knowing their games or video streaming being interrupted was nothing compared to the security breach going on. Racing down the stairs to the computer room, I could hear the hard drives operating simultaneously as the worm continued to eat its way through. I hit the emergency power-down, then ran back upstairs.\n\nThe worm had hit the backup server, and it had been several minutes since the attack began. I powered that down as well.\n\nI took a few deep breaths, then made the mental call. \"Alpha, our computer systems have been compromised and I've had to shut them down. Someone had access to our servers,\" I said.\n\n\"WHAT THE FUCK IS HAPPENING, BETA STEELE?\"\n\n\"I don't know yet, Alpha. We need to notify the Council that someone hacked their server. I need help figuring out who did this to us and how.\"\n\nCh. 18\n\nBrian Steele's POV<br >Werewolf Council Server Room, Banff Pack\n\nMy meeting with Alpha John Coffey and his father, Council Chairman Jack Coffey, nearly resulted in my death. To say they were upset was orders of magnitude off. No, news like this wasn't suited for something like a hurricane scale. The Richter scale was more like it, and this was an eight-plus magnitude seismic shift.\n\nAlpha John had shifted his hand and was moving towards me to slash my throat open, then Councilman Nathan Kirk grabbed his arm and held it. \"Not now,\" he growled.\n\nAlpha John was shaking in rage. \"He FAILED US!\"\n\n\"He got hacked. We don't know who did it. We don't know what information they accessed. We don't know a lot of things, and right now, he is our best chance of finding them out. Calm yourself and think, Alpha, before you make things worse.\"\n\n\"He's right,\" Chairman Coffey said. \"Sit down, boy.\"\n\nThe look he gave me before he returned to his seat at the conference table promised pain at a later time. I let a breath out, but my heart was still racing.\n\n\"What do you know,\" Councilman Millner said.\n\nI gathered my thoughts. \"The Council server got hacked, the Pack server as well,\" I said. \"It appears that the program inserted worked with the automatic backup software to the backup server. In addition to transferring files to the backup server, it was transmitting them over the Internet.\"\n\n\"How did you find it,\" Chairman Coffey said.\n\n\"There was a performance decline at midnight I was troubleshooting, and I saw the data transfers through the Internet pathway. I found the program, recognized it as malware, and tried to delete it. That activated a worm.\"\n\n\"Worm?\"\n\n\"A program designed to sit there until triggered. It started to delete files on the server and activated on the Pack and Backup servers too. I had to power down the computers to stop it from corrupting even more data.\"\n\n\"Current status of the systems, then?\"\n\n\"All have been shut down, and I've removed the hard drives. There is no further damage, but the systems cannot be restarted with those programs still active.\" I leaned forward a little. \"Whoever did this wasn't some teenager in a basement. They bypassed state-of-the-art firewalls and implanted programs I've never seen before. I posted the symptoms anonymously on a discussion board for network administrators. None had heard of such a hack before.\"\n\n\"What needs to happen next,\" Alpha John asked.\n\n\"The servers will need a full reboot and update first, to make sure the operating system is clean,\" I said. \"Once they are up and running, I'll use a stand-alone system to copy files from the server drives that are not affected by the hacker, leaving the corrupted programs behind. Once I'm satisfied I've recovered what I can, I will transfer those files back to the servers. Nothing will connect to the Internet until I'm certain we are clean again.\"\n\n\"Timing?\"\n\n\"It will take several days to recover everything, Alpha. Since the backup server is corrupted, I can't just do a system restore.\"\n\n\"We need the systems back up as soon as possible,\" Chairman Coffey said. \"We also need to find out who did it and what they got. I don't have to tell you how harmful the information on this server would be if humans have it. Pack rosters, finances, everything!\"\n\n\"Please tell me it was encrypted,\" Councilman Millner said.\n\n\"The data in the open portions of the server is not encrypted, sir,\" I said. \"That would include the videos, Pack genealogy data, discussion boards, anything else. Individual folders are password protected. Financial data, Alpha files, and Council files are encrypted.\"\n\n\"Can you figure out who did this while you restore the files?\"\n\nI thought about it; I was an administrator, and this required a different skill set. \"I don't think so, sir. I'm not an expert in network security. There are people out there that are, but almost all of them are human.\"\n\n\"We can't bring humans in on this,\" the Chairman said.\n\n\"I agree,\" Millner said. \"Who in the Packs do we need to bring in?\"\n\nI listed a few names, fellow network administrators who could help with the restoration of our systems and beefing up our security. \"There's only one person I know of who knows enough about hacking to find the hacker who did this,\" I said. \"Beta Teri Carlson in the Arrowhead Pack.\"\n\n\"FUCK,\" Alpha John said. \"Are you sure?\"\n\n\"Yes, sir.\"\n\nCouncilman Kirk stood up so fast he knocked his chair to the ground and over to the wall. \"ANYONE BUT ARROWHEAD! Dammit!\"\n\n\"Sit down, Councilman.\" Chairman Coffey waited until everyone was calm and sitting down again. \"I will make the call. Beta Steele, when she arrives, you are to monitor her activities. She is to evaluate what data was compromised, HOW it was compromised, and who did it. When we find out, Council enforcers and the local Pack will eliminate the threat.\" I had no doubt what he meant by that. \"I will make the call. Everyone get back to work.\"\n\nI wouldn't sleep again for thirty-four more hours.\n\nAlpha Rori King's POV<br >Arrowhead Pack House\n\n\"Has she talked to him yet,\" Chase said as he arrived late to breakfast.\n\nI looked over to the long table where Mykayla sat with the other Omegas she roomed with. They were at the table in the far corner, Mykayla at the end against the wall, and close to the door to the kitchen. Timur sat across the table and three people down, the closest he could get to his mate in human form without her starting to panic. \"No, but she looks at him once in a while before looking away quickly.\"\n\n\"It will get better. Mykayla's wolf wants to be around her mate, even if her human side is afraid of him still. I've kept command on her to remain in human form because she needs to get over this.\"\n\n\"She tolerates his wolf,\" I said.\n\n\"She was never abused by a wolf, only by the men of the Pack,\" Chase said. \"Abuse that extensive, going back as far as she can remember? It doesn't just go away. She grew up fearing males and what they would do to her.\"\n\n\"She learned to be in the Pack, to serve in the dining room.\" She had been doing better, helping out where she was needed.\n\n\"Over months living here, Mykayla learned her Alphas and the other women would protect her from harm. The males here were not the ones she had dealt with before, and they treated her with respect. This latest attack made her rethink everything. She hasn't been out of the kitchen except to eat, sleep, or go to therapy. She's hiding again.\"\n\nI could kick myself for not anticipating what might happen with Bitterroot here. The ones who had actively abused her were dead. It was the ones too young to kill that I hadn't considered. I didn't know what in Luna's name Alpha Long was thinking when he brought one of those males to MY pack. \"How is Timur coming along,\" I asked Beta Ron.\n\n\"He's a good warrior,\" Ron said. \"Beta potential, and he's a beast in the training ring. He needs work with weapons, and his fighting style needs to be updated. I've set a training program for him, and he's assigned to the Security Center rotation now.\"\n\n\"He's qualified there?\"\n\n\"Not yet, but he will be in a week. He's still learning our territory and our security procedures. It's a lot different than what he had in Russia.\" Ron laughed a little. \"We don't have miles of ground between the closest border and our Pack House. He's had to adjust to life on a lake by humans.\"\n\n\"Yeah, we are unique in that. I don't regret it, though. I love living here on the lake,\" I said. To me, it was worth the security tradeoff. Having the Pack House deep in the woods hadn't worked for my parents twenty years ago. We had a lot of goodwill with our neighbors and our community BECAUSE we didn't isolate ourselves. When our secret eventually came out, it would be more important than ever to have those relationships. \"Has anyone heard from Vic?\"\n\n\"He checked in yesterday,\" Ron said. \"They were north of Los Angeles on the Pacific Coast Highway; I think they are in Santa Barbara for a day or two. They are taking their time heading north, and they are having a blast riding in the nice weather. One of the Vegas chapter prospects is going to meet them in San Jose; he's got Heather's bike and gear in the trailer. \"\n\nNow I was jealous. Our Pack tradition was to go to Orlando in January to get away from winter, and this year it didn't happen with the trial and our arrest. I hadn't ridden my Harley since before Thanksgiving. I'd never been on the Pacific Coast Highway, but I'd talked to people who had. \"Damn. One more thing for my list,\" I said.\n\n\"Not this year,\" Chase said.\n\nI just nodded. \"Too much going on, and I don't want to be away from my babies any more than I have been,\" I agreed.\n\n\"Alpha Rori, you have a message from Chairman Coffey. He needs you to call him on the secure line with your staff as soon as possible.\"\n\n\"Thank you,\" I told the Security Center wolf on duty. I directed the nannies to take the babies home and informed Chase and my Betas of the meeting. \"Timur, join us in my office. The Chairman wants a call, and I don't know if it has to do with Beloretsk or not.\"\n\n\"Of course, Alpha,\" he said. I saw him excuse himself and smile at Mykayla before he walked off. She watched him leave, and her face showed disappointment. I smiled at that; the mating bond was powerful. Fighting it was a losing battle as it was stronger than anything else in our lives. Timur needed to keep chipping away at that armor she'd grown around her heart, and he'd eventually break through to her.\n\nWe all gathered in my office as I connected the scrambler device to the phone. \"No one talks unless I ask you to,\" I said. \"We need to be careful in these dealings; the Council is not our ally.\" With that said, I dialed the number.\n\n\"Chairman Coffey,\" the voice came after the scrambling devices synced up.\n\n\"Sir, this is Alpha Rori King. My mate and Betas are with me as you requested.\"\n\n\"There will be a videoconference with all the Alphas in the world at one this afternoon Central time,\" he said. \"I need your help before the meeting.\"\n\n\"What do you need, sir?\"\n\n\"There's an issue here at Council Headquarters. A hacker penetrated the servers of the Council and the Pack, and my network administrator tells me the program was automatically sending files to an unknown recipient.\"\n\n\"How bad is the exposure?\"\n\n\"The hacker got access to everything, but the most sensitive files are encrypted. The ones that are not are still ones humans cannot have, including the genealogies.\"\n\nOh shit. If that got out, we were ALL out. \"How can we help,\" I said, but I had an idea what he wanted.\n\n\"Our staff is getting help to recover what we can with the servers, but the hacker has to be found and stopped immediately. Beta Steele informed us that the person most qualified to do that is your Beta Teri. I need her services here as soon as possible, for as long as it takes to eliminate this threat.\"\n\nI looked over at Beta Teri, who was wide-eyed over the news. \"Can you do it?\"\n\n\"I have to, Alpha. This is a worst-case scenario.\"\n\n\"I will get Beta Teri to Banff as soon as possible, Mr. Chairman. Is there anything else you require?\"\n\n\"Not at this time. Notify Banff security center with the details, and they will pick you up. The Council and Alpha John will be traveling to Blue River and will hold the conference there,\" he said. \"The servers here at Banff may not be up for days.\"\n\n\"I understand, Mr. Chairman.\"\n\n\"I will talk to you again soon,\" he said before he ended the call.\n\n\"Teri, go pack. Roadkill, order up a jet and make arrangements to get her to the airport,\" I said. Both left.\n\n\"And me,\" Beta Ron asked.\n\n\"Pick someone to watch her back. I don't trust Alpha John as far as I can throw him.\"\n\nCh. 19\n\nBeta Teri Carlson's POV<br >Calgary Airport\n\n\"I can't believe you made me take you along,\" I told Ron as I snuggled into his shoulder as we descended into Calgary.\n\n\"You're mine, you're pregnant, and you are not among friends. Three strikes against this trip. There's no way I was going to let you head THERE without ME, and Rori understood when I told her,\" he said with a low growl. He was whispering quietly enough that none of the humans around us in first class would be able to hear.\n\n\"It's not that simple. Charles' funeral will be soon, and Rori will need to leave for it. Vic won't be back for a week or more. We're leaving them short-handed.\"\n\n\"I know. I told Rori and Chase that if something had to give, it was the Council. I would have been fine staying home.\"\n\nI just shook my head. \"You know I can't do that. The hack is bigger than me, bigger than all of us. I need to help, no matter what I might want to do.\"\n\nHe kissed my forehead. \"I know. We all do. Timur will have to step up, and so will others. Possum and Roadkill are back too. They will survive.\"\n\nI held on to his hand as we landed, and we retrieved our luggage and walked outside. I smelled the wolf before I saw him, waving at us from a Chevy Suburban parked at the curb. \"Mr. and Mrs. Carlson,\" he said with a wave as he ran forward. \"Welcome to Canada.\"\n\n\"Thank you,\" I said as he grabbed my suitcase. He and Ron put the luggage in the back while I slid into the back. \"We can't trust anyone here, so we'll use the link as much as possible,\" I said.\n\n\"I agree. Vague and friendly is the word.\" The driver and the Omega with him tried to start a conversation, but I pretended to be tired. Instead, we talked about how we were going to handle the Alphas until I did fall asleep.\n\n\"We're here,\" Ron said as he gently shook me. I looked out at the Pack House; it looked like a resort hotel set in the trees and mountains.\n\nThe driver stopped under the covered entrance, and a nervous-looking young man with glasses opened the door. \"Welcome to Banff Pack, I am Beta Brian Steele. I thank you for coming to help me with this.\"\n\nHe shook my hand first, then Ron's, as we introduced ourselves. \"You're in charge of computer systems here?\"\n\n\"Yes. Your bags will be in your room, but I need you to meet the team tonight,\" Brian said.\n\n\"We should check in with your Alpha first,\" Ron said.\n\n\"He is with the Council at the Blue River Pack. With our systems down, the Council temporarily relocated to the closest Pack.\" He opened the door to the basement. \"They pass along their appreciation for your assistance.\"\n\nI mentally cringed; Coral must be pulling her hair out, and Keith would be on edge with her pregnant and unable to shift. It was another reason to get the job done and get the hell out of here. \"How bad is it?\"\n\n\"We're still piecing it together,\" he said. \"We know the hack is less than a week old, as the backup drives we removed earlier is clean. The Pack and Council servers are being restored using these drives, and we have not restored internet connectivity yet.\"\n\n\"What do you mean piecing it together,\" I said.\n\n\"The worm was rather effective,\" he said. \"It corrupted the hard drives, overwriting sectors as it went. Luckily, there were two servers and a backup server, and I was able to power down the systems before the worm could finish its work.\" He reached a door and punched in a code, then opened it and let us in.\n\nThe server room was pretty standard, rows of cabinets with the computer components, and three work stations. There were three other people inside. \"Betas Ron and Teri Carlson of Arrowhead Pack, may I introduce the rest of my team. Joe Walker, IT specialist at Monongahela Pack; Lisa Funk, IT specialist for the Werewolf Council, and Patrick Burkette, system manager at the Katahdin Pack.\"\n\nThey had lots of coffee and snacks on a table in the corner, and it looked like none of them had left recently except to go to the bathroom. \"The kitchen will deliver whatever you need down here to eat,\" Brian said. \"We have roughly split up the duties. I am reconstituting the servers so we can get back online; it's slow because I'm trying to recover as much as possible without reinfecting the system. Joe is focusing on how the hacker got through our security and into our systems. Lisa is working on damage control, looking to see what the hacker downloaded and what he didn't. Patrick is working on recovering the files on the damaged disk drives.\"\n\n\"What do you need from me?\"\n\n\"You are the one with experience in the hacking world. We've managed to recover parts of the programs used, including the worm. I need you to fill in the gaps and see if you can identify the people behind it.\"",
        "I pulled my laptop out and set up at a desk they had for me. \"I'll be fine, honey,\" I told a worried Ron. I'd learned long ago that he was incapable of understanding my computer job, and I no longer tried. \"Go get dinner and bring me back something I like.\"\n\n\"I'll be back. Have I lost you for the night?\"\n\nI nodded. \"You know how it is with computer geeks. I'll be down here until I can't function, then I'll come up and snooze for a few hours. I'm glad I slept on the plane.\" He stepped out, and Patrick showed me what they had so far.\n\nHeather Rhodes' POV<br >Cascade Pack House\n\n\"Thank you for dinner,\" I said as I excused myself from the head table in the Pack dining room.\n\n\"Have fun at training,\" Alpha Carson said.\n\nI smiled before I followed Beta Carl out of the room. I'd settled into a routine while my ribs healed up; I'd use the exercise bike in the morning before knife training, spend the afternoon with a pack member shadowing their job, then after dinner, it was time for firearms training. I loved using the Firearms Training System and had become quite proficient at busting plates. I wasn't up to Beta Angelina's level yet, but I wasn't embarrassed by her anymore.\n\nWe went down to the training area, but instead of going into the training room, we went into the armory. \"What's going on?\"\n\n\"Now that you have proficiency in using the firearm, we are going to start training on the practical aspects. I expect you to carry a firearm on you any time you are out of your room,\" he said.\n\n\"Is that necessary?\"\n\nCarl shook his head. \"Probably not, but I've talked to you about habits. Carrying a pistol and at least one knife needs to be a habit, just another part of getting dressed. If it isn't a habit, you might not do it. You NOT have it when you need it.\"\n\n\"How am I going to carry? I'm going to be as big as a house soon.\" My belly wasn't much now, but wearing a heavy gun belt and holster wasn't going to last long.\n\n\"That's why we're here.\" He opened a cabinet and pulled out a few holsters, then a blue plastic training pistol. \"While you can carry with a belt, it would be good to do so. We don't have to worry about you hiding it from the Pack, so we'll use an outside-the-belt holster.\" He helped me replace the belt on my jeans with a more substantial one, then threaded on the holster. \"Police carry on the hip for good reasons; it allows you to sit normally and is fast to draw. Give it a try.\" I went through the motions he showed me at half speed, then went faster until it felt jerky. \"Not bad. Some people prefer appendix carry, here in front to the left of your buckle, mainly if they sit down a lot or are driving. I don't like drawing across my body, so I don't do this. The small of the back holster gives good concealment, but is uncomfortable when sitting or driving.\"\n\nI tried the two and had to agree. \"Hip, for sure,\" I said.\n\nHe set me up with a holster and belt for the Glock I was used to firing, then set it aside. \"As you get farther along in pregnancy, the belt won't work. Ankle carry doesn't help because it's difficult to bend down. There are two options then, shoulder holsters and bang bras.\"\n\n\"Bang what?\"\n\n\"Here.\" He handed me a small holster that looked like a C-clip. Taking out a different plastic pistol, this one being a single-stack 9mm Glock 43 compact, he put it into the holster. It covered the trigger and barrel but was open on the bottom, and the grip was showing. \"Want to try?\"\n\n\"How does this go?\"\n\n\"You need a sturdy bra. Clip this over the strap in front, so it hangs just below.\" I was glad I was wearing a loose T-shirt; I turned away and clipped it in place. It felt weird as it hung there, but wasn't uncomfortable. I turned back around; looking in the mirror, you couldn't even see it. \"To use this, you reach up, grab it by the grip, and give it a sharp pull down.\"\n\nI did what he said; it popped free. \"Nice,\" I said.\n\n\"Not good for anything more than a compact pistol, though. I prefer you wear a full-sized shoulder holster.\" He took the rig out and put it on; the pistol was under my left arm, grip forward, while the other side could hold two spare magazines. The draw wasn't much slower than the hip holster, and the weight was evenly distributed across my back and shoulders. \"What do you think?\"\n\n\"I like it,\" I said. \"I like them both.\"\n\n\"That one is yours now that we've adjusted it. I'll get you a compact pistol and bra holster; you can use it as a backup. When we leave tonight, we start. If I catch you out of your room without a pistol, you're not going to enjoy the punishment when we do our morning runs,\" Carl said.\n\n\"I don't enjoy the runs NOW,\" I teased him.\n\n\"All right. Leave the plastic gun here, and we'll go to the trainer.\" Going in, I was handed the laser Glock replica and holstered it. For the next two hours, we practiced drawing and firing, using videotaped shoot/no-shoot scenarios based on police training. It was fun but nerve-wracking. The scenarios he put me through drove home just how quickly a situation could degrade, and how little time you had to make decisions.\n\nI was tired when he finally shut the trainer down. \"Nice job,\" Carl told me as he took the training pistol from me. \"Now, we go to the armory.\"\n\nWe walked to another part of the basement, near the security center. \"Holy shit,\" I said as I followed Carl into the room.\n\n\"Redneck heaven,\" he said as he walked past the shelves filled with pistols and the wall racks of rifles. Over the next hour, he showed me how to operate and clean the Glock 19 and the Glock 43. When I had them ready, he handed me the magazines and a pair of latex gloves. \"Silver-core bullets aren't something we mess with,\" he said. \"It won't harm you, but it won't be pleasant if you have residue on your fingers and touch someone. Use gloves and wash your hands after you load the magazines.\"\n\nI filled three 19-round magazines and one six-round magazine. I took out two more rounds; inserting the magazines, I racked a round in, ejected and topped off the magazine, then put the full magazine back in. The tiny Glock didn't bother me at all in the bra holster. \"Nice,\" I said as I peeled the gloves off.\n\n\"Wipe the grips with a baby wipe, then wash your hands,\" he said. \"The silver ammunition won't kill a werewolf unless you hit a vital area, but it will cause the wound to bleed, and it burns like fire. I wish we could do some live fire, but Doc says no.\"\n\n\"If I have to fire these while I'm pregnant, I'll apologize to my babies for the noise later.\" I impulsively hugged him. \"Thank you, Beta Carl. I've learned a lot from you.\"\n\n\"You're welcome, Luna.\" He got a glazed look that meant someone was mentally sending to him. \"I have to go. Have a good night; Angelina will be outside your door at six for your run.\"\n\nI groaned. \"Don't you people sleep?\"\n\n\"Don't forget a weapon,\" he said as he left me at the staircase.\n\nI looked at the clock, and it was past ten already. I better get some sleep.\n\nCh. 20\n\nJoe Walker's POV<br >Banff Pack Computer Room\n\nIt was so simple, and I almost missed it.\n\nThe mystery of how the hacker had accessed a secure Council server had evaded our team for three days now. The worm had destroyed many of the files, its design such that it covered its tracks. I had to find something else.\n\nWe knew that the program had infected the hard drive between six and nine days ago. The connection logs were not corrupted, thank Luna. These files recorded the IP addresses, usernames, and passwords of those accessing the system. It wouldn't tell me what they did, but it would list who had accessed and for how long. I was slogging through the pages of data, cursing the fact that the trials resulted in so many people logging in during this time when I saw it.\n\nThe same username and password had been used twice, both active at the same time, and from different servers.\n\nI moved over to the terminal connected to the reconstituted Council server, which still was isolated from the outside world. Accessing the right file, I found out the username belonged to Colletta Nygaard, former Luna of the Cascade Pack.\n\nI looked up and across the room to where Beta Teri was staring at her screen. She hadn't yet figured out the source of the hack or how it worked. As I considered the new information, I had to wonder if she was here to find the hacker, or if she WAS the hacker. Luna Colletta was the mother of her Alpha and was hostile to the Council and its decisions.\n\nIt wasn't enough, not yet. Going back to the log, I did a reverse lookup of the IP address used for access. Neither matched the IP addresses used for the Arrowhead Pack server. One went to a server in Australia, while the other was in rural Minnesota.\n\nTwo Harbors, Minnesota. Home of the Arrowhead Pack.\n\nMy head hurt at the possibilities. I walked over to where Lisa was pinching the bridge of her nose while leaning back in her chair. \"I'm going to take a break. Want to get some air?\"\n\n\"Sure.\"\n\n\"We'll be back in a few. Anyone need anything from upstairs?\"\n\n\"Milky Way bars,\" Patrick said.\n\n\"I'm good,\" Teri replied.\n\nBrian Steele was still sleeping, so I held the door open for Lisa and followed her upstairs. Walking outside, we enjoyed the crisp night air. There was no one around at three in the morning. \"I need you to tell me if I'm crazy or not,\" I told her.\n\n\"About what?\"\n\nI explained what I found. The dual logins by Luna Colletta. The fake IP address in Australia. The potential Arrowhead involvement in the hack. She didn't say anything for a minute as she walked along. \"It could be Arrowhead was hacked first; someone found Colletta's login and used that for their own devices,\" I said.\n\n\"Or it could be that Arrowhead wanted to spy on the council, and Teri is here to make sure it doesn't blowback onto Saint Rori,\" Lisa said. \"You, I mean we, cannot hold back this information. It's my responsibility to inform the Council of the potential Arrowhead involvement.\"\n\n\"What if I'm wrong?\"\n\nShe stopped and grabbed my arm. \"What if you are RIGHT, Joe?\"\n\nI looked up at the stars. \"You are right,\" I finally said.\n\n\"Come on. I've notified the Chairman we have a breakthrough. He will meet with us in twenty minutes.\" She led me back into the dining hall, where we got coffee and sandwiches before the meeting.\n\nThe Chairman blew a gasket when I told him what I found.\n\nBeta Ron Carlson's POV<br >Banff Pack House\n\nI woke at five, the bed next to me cold. Teri was in full computer mode, spending long hours in the computer center with no windows and no sense of time. \"Love, how are you doing?\"\n\n\"Busy,\" she said. \"And frustrated. Nothing is happening.\"\n\n\"I know just how you feel,\" I said with a hint of horniness over the bond. I could feel her response, and I kicked it along with a description of what I'd rather be doing with her right now.\n\n\"I have a few more hours before I come out,\" she said. \"Don't wait for me for breakfast. Get out there and continue your work,\" she said.\n\n\"Give me fifteen minutes.\" I quickly dressed and headed down to the dining hall. When Rori had sent me, protecting Teri was only part of why I was here. I was also trying to gauge the mood of the Pack. Rori suspected that even in Packs that were opposed to us, the strong opposition was only at the top. That is what Coral found in Blue River, and what I was looking for here.\n\nSo far, that was the case. I'd spent a lot of time talking with the Omegas and Warriors, most of whom were very interested in my Pack and my Alpha. If a challenger came forward along Coral's lines, the Pack would back him or her. They wouldn't openly disrespect their Alphas, but their eyes told me what they thought.\n\nI got my pancakes and bacon from the kitchen, then sat down at the table in the nearly-empty room. One of the Omegas got me juice and coffee, just as another woman approached. \"Beta Ron, what are you still doing here,\" she asked.\n\n\"Breakfast,\" I said. \"Please, join me.\"\n\n\"You didn't leave?\"\n\nI looked at her funny. \"Why would I leave?\"\n\nShe shook her head. \"The Council wakes me up in the middle of the night and tells me to order a jet for five people to go to Two Harbors, and have a car downstairs in thirty minutes to go to the airport. I thought something happened with you or your mate, and you had to return home.\"\n\n\"Maybe it's Council business,\" I said. \"No one said anything to me.\"\n\n\"You're probably right.\"\n\nI was getting that feeling that something was wrong. The full Council walked in with Alpha John, and all of us stopped talking and nodded our heads in respect. Councilman Kirk glared at me, which almost made me ill. \"Something is wrong, Teri. The Council sent a plane to Arrowhead in the middle of the night, and none of them are on it.\"\n\n\"Shit. Lori left with Joe a few hours ago, and they aren't back yet.\" I could sense her fear through the bond. \"I found something in the hack. It's a code I've only seen one person use.\"\n\n\"Who?\"\n\n\"Spider Monkey.\"\n\nFUCK fuck fuckity fucking FUCK! If she was behind this, we had a MAJOR problem. \"We have to warn them, Teri.\"\n\n\"I agree. The Internet isn't available, and I can't get an outside connection without attracting notice.\"  The Pack House was far removed from roads and surrounded by mountains, and there wasn't cell service here. \"We can't risk a telephone, either. We need to get to where we can get a cell tower.\"\n\n\"We need to get out of here, and quick,\" I told her. \"Come on up to the room. We'll steal a car and make a run for the US border.\" I excused myself and went back up to our room, throwing all our stuff into a backpack and a bag. I had just finished when Teri came in, pulling Brian Steele in behind him. \"What's going on?\"\n\n\"Brian is going to get us out of here, and Alpha Rori is going to take him into our Pack,\" she said.\n\n\"I cannot stay, the Alpha is going to kill me as soon as he doesn't need me,\" Brian said. \"I'm your only chance of getting out of there without being seen.\"\n\n\"What's the plan?\"\n\nTen minutes later, we were under a blanket in the back of one of the Pack cargo vans. We kept still as he slowed, mentally communicating with the guard at the main gate. \"We're through,\" he finally said. \"Thirty minutes, and we'll dump the van.\"\n\nAs soon as the service became available, I used my cell to make two phone calls. The first was to Alpha Rori, to warn her someone was on their way. The second was to order an Uber to take us to the Calgary airport. While I was busy with this, Teri got us a flight to Minneapolis and a connection to Duluth.\n\nWe would get home by nine tonight, and we knew we'd miss the action by at least eight hours.\n\nHeather Rhodes' POV<br >Cascade Pack House\n\nI had taken a quick shower after my morning run with Angelina, thankful that my ribs healed enough that it didn't hurt to breathe. Dressing in yoga pants, sports bra, a T-shirt, and a hoodie, I walked into the Pack Dining Room at just before seven. Carson pulled out the chair to his right at the breakfast table and smiled at me. I looked around, but I could tell everyone expected me to take it. \"Good morning, everyone,\" I said as I sat down.\n\n\"Good morning, Luna,\" the Betas responded. I just blushed; I didn't deserve the title, but I couldn't stop them from giving it to me. In their mind, I was their Luna as soon as their Alpha claimed me as his mate during the asylum hearing.\n\n\"Did you sleep well,\" Carson asked me as he started serving me scrambled eggs out of one of the bowls on the table while his plate remained empty. It was another one of his habits I couldn't break. Angelina had explained it all to me. Their wolf instincts demanded that he make sure his mate was cared for and fed, even before he ate himself. When the mate was pregnant, the urge to feed me was even stronger. He wouldn't eat himself until I had enough.\n\n\"Well, thank you.\" I was still in the room I had chosen on arrival and was still sleeping alone in my bed. Carson had the room across from me, not that he slept there. From the first night, his wolf would take over and whine at my door before sleeping in front of it. By the second night, I'd tired of the whining and just let him in. I made a bed for him on the floor next to my bed, and he stayed there in his wolf form. So far, I hadn't let him up in the bed, but he whined and put his head up by my pillow every night. I'd say no, he'd give my face or neck a lick, and then he'd settle down for the night. I turned to Beta Angelina. \"What is the plan for this morning?\"\n\n\"Alpha hasn't told me yet,\" she said.\n\nI looked back at Carson. \"The forecast is warm and sunny, and I would like to take you to some of my favorite places in the territory,\" he said.\n\n\"By ATV? Car?\"\n\n\"Riding on my back, if you're up to it.\" I quickly nodded yes, because it was my favorite way of getting around. As fast as a horse, but with more acceleration and maneuverability, it was a rush like none other. \"There are some waterfalls near the northeast border that should be amazing with the snowmelt. I was going to get a picnic lunch packed for us since it will take several hours to get there. The view is worth it.\"\n\nI looked at his eyes, which were betting me to agree. I could see his love for me, and I liked spending time with him, but I had to respect our doomed future. The closer I got to him, the harder it would be when the Council took me away. I couldn't allow him to die, not when my twins would need him. \"What do I need to bring?\"\n\n\"Ski wear would be good for the trip, as there is still lots of snow around. Layers. I'll have you carry my clothes in a backpack with the food and anything else you want to bring.\"\n\n\"Swimsuit?\"\n\nHe just laughed. \"Mountain runoff is nothing to swim in,\" he said. \"Bring your camera, though.\"\n\nWe talked about some of the things he wanted to show me, and others added their favorite spots. He had given me a high-resolution compact camera to capture memories with, and I'd bring that along. I wanted to leave him lots of photos of me to show the babies when they grew up. \"What are you going to do on your day off, Angelina?\"\n\nShe snorted in her juice. \"Not a day off. As the Luna's guard, my place is out there with you. I'll be around, but you won't notice me.\"\n\n\"Fine. I'm going to go change for my day out,\" I said. I stood and kissed Carson on the cheek, then started to walk out.\n\n\"Luna,\" Beta Carl said as he stood up and moved in front of me. \"Spot check.\" He moved his hand over, tapping the holster under my left shoulder before he smiled. \"Good.\"\n\n\"If you check to see if I'm wearing my Bang Bra, I don't know if your mate or your Alpha would remove your fingers first,\" I said as Carson and Angelina both growled at the thought. \"I'll be back in fifteen minutes.\"\n\nA few of the Pack members saw us off as I climbed onto Carson's wolf, and we headed out. I put my chest down and hugged his neck as he started to run up the trail, with the mud and snow kicking up behind us. I was still grinning as we reached the first rest point, a beaver dam that widened the stream into a beautiful mountain pond. \"Too bad it's so cold,\" I said as he went over to take a long drink.\n\nHe just chuffed at me, following me as I circled the pond to take the best photos. I even had him stand on the bank so I could capture him and his reflection in the still waters. He was lying down and watching me, waiting for me to finish so we could get going again. I climbed back on, and we continued up the valley.\n\nThe temperature climbed into the fifties, and I took off my shell and snow pants at the next stop. This waterfall was only about eight feet tall, but the spring flow was impressive. I took more photos, enjoying my morning with him. He didn't shift, and we were soon on our way to the last one.",
        "I could hear the waterfall well before I could see it. All of the sudden, we crested a rise, and it was in front of us. It dropped about thirty feet, the flow splitting into three streams along the way. \"It's beautiful,\" I said as I climbed off.\n\nHe shifted and took his clothes out of my backpack. \"Everything up here is beautiful, Heather,\" he said. When he dressed, he took the pack and put it on his back before hugging me from behind. \"This is my favorite place in the world. My Mom used to bring me. It always relaxes me to watch it.\"\n\n\"I can see why.\" He took my hand and led me up the trail towards the top of the falls. \"I want to see the bottom,\" I said.\n\n\"We will go there last, or you'll be soaking wet for lunch,\" he said.\n\n\"Fine.\" He led me to a rock overlooking the falls and set out our picnic lunch as I sat in the warm sun. He fed me bread, cheese, and sausage as I leaned back into his chest and listened to the roar of the falls.\n\nIt was beautiful.\n\nAfter lunch, I turned around in his lap and wrapped my legs around him while I held on to his neck. \"Thank you,\" I said.\n\n\"You are welcome. I love to make you smile,\" Carson said.\n\nI looked into his eyes, seeing only love and devotion to me. My shields weren't strong enough to hold him back any longer. I wasn't sure I wanted to.\n\nI leaned forward and captured his lips with mine.\n\nHe growled deep in his chest, his arms pulling me closer as the kiss deepened. It was perfect, it was a kiss I'd never forget, and then it was over.\n\n\"We're in danger,\" he said as he lifted me to my feet. Pulling off his clothes, he shifted into his wolf and growled at the woods above us."
    ],
    "authorname": "partwolf",
    "tags": [
        "supernatural",
        "love",
        "mates",
        "motorcycle",
        "pack",
        "werewolf",
        "wolf pack",
        "wolf",
        "furry",
        "drama"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/claiming-treasure-ch-16-20"
}