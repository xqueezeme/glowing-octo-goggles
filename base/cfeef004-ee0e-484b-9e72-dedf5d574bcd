{
    "title": "I Will Love You Forever Pt. 2 Ch. 20",
    "pages": [
        "Note: Thank you all for patiently waiting for me. Real life interferes. Thanks to Donalde for beta reading for me and to all of you for reading this story. \n\n*\n\nPatricia waited nervously by the telephone. The rumor was that Dr. Coleman would be announcing who was going to be the next surgical resident that day. She was more nervous about it than Kenji was. In fact, he barely mentioned it. It was usually her that brought it up. She knew that he would be fine with whatever happened, but she really wanted this for him. As the day passed, she gave up hope that the decision had been made and began to prepare dinner. She was looking through the refrigerator when the phone rang. She slammed the refrigerator door shut and ran to the phone thinking that it was Kenji.\n\n\"Patricia?\" It was Dai's soft voice instead of Kenji's. \"Is Kenjiro there?\"\n\n\"No, he won't be home until tomorrow- what's wrong?\" Patricia asked picking up on the woman's anxiety.\" \n\n\"I-I don't know for certain,\" Dai replied. \n\n\"Is Hiro alright?\" Patricia asked starting with the obvious.\n\n\"Hiro is fine, I am fine too.\"\n\n\"Then that leaves Hiroshi,\" Patricia said. \"What's wrong?\"\n\n\"I- he is always so tired lately and he is losing weight. He says that he is fine, but Patricia- I do not believe him. Something is wrong.\"\n\n\"Do you want me to call Kenji?\" Patricia asked.\n\n\"No, but will you speak with him later?\"\n\n\"Yes and I'll tell him about your concerns-Dai, is he having any pain anywhere?\"\n\n\"I do not think so, but he would not say even if he were. I do not think that it is the disease that your father has, but Patricia, something is very wrong with Hiroshi. I can feel it.\"\n\n\"I'll talk to Kenji tonight,\" Patricia assured her. \"Do you think that you could convince him to go to the hospital if Kenji thinks he needs to go?\"\n\n\"I will give him no choice,\" Dai replied resolutely.\n\n\"I'll call you after I talk to Kenji,\" Patricia said and hung up. She almost called Kenji but decided against it. He wouldn't get the message until later unless she said that it was an emergency and as far as she could tell, this wasn't an emergency.\n\nShe went back to her dinner preparations making a mental list of all that she needed to tell him. The concern about his father moved up to number one the list followed by news from Joel and Penny and then news that Niko wanted to deliver himself. On second thought, she decided to let Niko share his news first. He was so excited and it would be wrong to make him wait.\n\nDinner would be something simple since it would be just the three of them. She would make a nicer dinner the next day when Kenji would be home. Actually, her mother would be making the dinner since she had classes and would ride home with Kenji.\n\nShe heard a car pull into the driveway and knew that it was Abby with Niko and Marie. Niko was the first one in the house.\n\n\"Did he call?\" he asked his voice full of excitement.\n\n\"Not yet, but it's early,\" Patricia replied thinking that the excitement was over his news.\n\n\"So we do not know if papa was chosen?\" he asked.\n\n\"No, not yet,\" Patricia replied touched by the fact that Niko's primary concern wasn't for himself. The thought that some girl was going to be very lucky crossed her mind. \"He should be calling soon and I'll let you talk to him first.\"\n\n\"Thank you mama,\" Niko said with a slight bow. He could hardly wait not only to tell Kenji his news, but to hear what happened. The thought of his papa being a surgeon thrilled him to no end. He was proud of him anyway and wanted to be like him- but a surgeon! That would be something.\n\n\"I want to talk to papa too!\" Marie chimed in not wanting to be left out.\n\n\"You will,\" Patricia said picking her up. \"Were you a good girl for aunt Abby?\"\n\n\"She certainly was,\" Abby said as she sat down at the kitchen table.\n\nPatricia was about to offer her a glass of water, but Niko was already filling a glass for her and asking her to stay for dinner.\n\n\"I think I will if you don't mind,\" Abby replied. \"I don't feel like eating alone tonight.\"\n\nPatricia looked at Abby with concern. She wasn't going to say anything, but changed her mind.\n\n\"Abby, what's going on?\"\n\n\"Nothing, I just feel like some company tonight. Is that a problem?\" Abby asked her tone sharp.\n\nNiko and Marie looked at her and then at Patricia. Niko took Marie by the hand and led her from the kitchen.\n\nThere was a long silence before Abby spoke.\n\n\"Patricia- I'm sorry. I've just been out of sorts lately and before you ask, I'm not sick or anything like that. It's just that lately-I've been missing people. I miss Ralph more than I can say. I've missed him since he died, but lately- then there's-well- never mind. You have better things to do and think about other than the mutterings of an old woman.\"\n\nPatricia sat at the table and took Abby's hands in hers. \n\n\"Abby, do you remember telling me that you thought of me as a daughter and that you loved me as such?\"\n\n\"Of course I do!\" Abby replied. \"I meant it then and I mean it now. I love Kenji and those children too.\"\n\n\"You also were the first person that I told about Kenji and the first to help us instead of telling us why we couldn't happen. You put yourself at risk hiding us and I can't tell you how much we all love you for it. Abby, I think of you as another mother and just as you once told me that I could come to you with anything, you can come to me. Tell me what's bothering you.\"\n\nAbby didn't say anything for a long time and then glanced at the clock. \n\n\"We have time,\" Patricia said. \"I can always make sandwiches so tell me what's wrong.\"\n\n\"There isn't really anything wrong per se,\" Abby replied. \"I can't really explain it. I just feel-out of sorts. Patricia, if I tell you something can you try to keep an open mind?\"\n\n\"Abby, are you in trouble?\" Patricia asked with a grin.\n\n\"What?\" Abby asked momentarily confused. Then she started to laugh. That had been the question that she asked Patricia when she made her tell her what her trouble was. \"No dear,\" she replied still laughing. She actually felt better after the laugh and gave Patricia's hand a squeeze. \"You always could make me laugh,\" she said still chuckling. \"I think that my problem is that there are things that I've never shared with anyone. I'm beginning to realize that the older I get, the more important it's becoming to me that someone know the real Abigail J. Aldridge.\"\n\nPatricia didn't say anything, but waited sensing that Abby really needed and wanted to talk. The truth was, she had always been curious about Abby's past; but didn't want to ask. \n\n\"Do you remember your mother asking me why I was helping you?\"\n\n\"I remember and I asked you the same thing. You said something about 'Romeo and Juliette' being your favorite story.\"\n\n\"That was and still is true,\" Abby said. \"Every time I read that story I imagined how I could have helped them. You and Kenji were my real life Romeo and Juliette. Thankfully your story turned out much better than theirs did. There's another reason why I helped you- Patricia, I know what it's like to love someone and not be able to be with them because it isn't socially acceptable. But let me tell you a little about my family first.\n\nMy parents were both from well to do families. Their marriage was an arranged one, but fortunately at least they liked each other. I do believe that had they been left to choose, they wouldn't have chosen each other, but at any rate; they were happy enough. I was an only child only because my mother couldn't seem to carry to term so when they found out she was expecting, she was put on bed rest. I was early, but not horribly so and as you can see, I survived. I had a happy childhood, but I wasn't spoiled. I learned the value of a dollar and learned not to take anything for granted.\n\nI was considered quite beautiful when I was a young woman and had my share of suitors. The problem was that I wasn't interested. All of my friends where talking about this boy or that one, but I found it boring. However- when they talked about women they had my attention. At the time I didn't know or understand the significance of what that meant.\"\n\nPatricia had an idea of where Abby was going with her story, but didn't interrupt. She gave Abby's hand a squeeze of encouragement.\n\n\"We managed to survive the flu epidemic of 1918 although we lost many loved ones. By that time however, I was educated- or as well educated as a woman could be in those days and I was supposed to get married. The thought terrified me. I didn't want to get married much less be touched by a man.\"\n\n\"But you must have had male friends,\" Patricia said.\n\n\"I did,\" Abby confirmed, \"but the key word is friends. I wasn't expected to marry them and to have children with them. Anyhow, the wedding didn't happen. He married someone else which didn't hurt my feelings at all. Needless to say, my parents were furious. The marriage would have been both financially and socially advantageous for them.\"\n\n\"What happened?\" Patricia asked.\n\n\"Nothing for a while,\" Abby replied. Then they hired new servants. There was one- a beautiful mulatto girl named Lorena. She was so beautiful. She was a tiny thing who made me look like an amazon. Somehow, much to my mother's chagrin; we became friends. Then we became lovers. We kept it hidden for quite a while before my father caught us. Lorena disappeared and I never saw her alive again. My father made me marry my late husband thinking that it would cure me of what ailed me. My mother blamed it on Lorena.\"\n\n\"Abby, I'm so sorry...\"\n\n\"The man that they made me marry also came from a wealthy family and he was a brute. I won't go into the details but the torment finally stopped when we reached an understanding. He could go and do as he pleased as long as he was discreet. It was the same for me. My parents forgave me and thought that they had fixed me because whenever we were all together; we acted like the happily married couple that they wanted us to be. I wish that I could say that I mourned when he died, but I was relieved. I could hide under the cloak of widowhood and say that I was still in mourning and not be approached by the marriage issue. He did leave me rather well off and when my parents died, they left me money as well. All was well until 1929 when the great depression started, but we weren't nearly as bad off as most were. Many of my father's associates committed suicide because they couldn't face the fact that they were now as poor as some of those who served them. \n\nAnyway, Lorena is part of the reason why I helped you and Kenji. Then fate or God was kind to me again and sent me a crotchety man by the name of Ralph. It seems that you and Kenji have a way of bringing good people together, but at any rate; I knew that he cared about me. But all I could think of was that he was a man. It didn't occur to me to be honest with him. He would have understood and we would have managed somehow. Unfortunately I didn't realize that I loved him until it was too late.\"\n\nAbby wiped away a tear and continued.\n\n\"Watching you and Kenji and being a part of this family has been both a pleasure and a blessing. Watching your children grow has been an amazing experience...\"\n\n\"Abby tell me the truth,\" Patricia said her voice intense, \"are you sick?\"\n\n\"I promise that other than the aches, pains and regrets of getting old; I'm fine. I'm not sure of why it took me so long to tell you about me, but now that I have; I feel much better.\"\n\n\"Abby,\" Patricia said after breathing a sigh of relief, \"It doesn't matter what you were or are. You will always be Abby who loved me enough to teach me. Without you, I wouldn't be where I am today. Without you, Kenji and I wouldn't be together. We love you and don't you ever forget it.\"\n\nTears of relief down Abby's face. She was almost certain that Patricia wouldn't be disgusted with her, but she was still afraid. What would Kenji think of her?\n\n\"Did you think that telling me this would change how I feel about you?\" Patricia asked almost hurt.\n\n\"I had hoped not,\" Abby replied.\n\n\"It doesn't and it won't,\" Patricia said firmly. \"Is it alright to tell Kenji? I won't if you don't want me to.\"\n\n\"Patricia, one of the reasons why you and Kenji are so strong together is because you don't keep secrets from each other. No matter how bad it is, you share it and you work through it. What I'm saying is that it's alright to tell him.\"\n\n\"Thank you and Abby? It won't change how he feels about you so don't worry about that.\"\n\nAbby's shoulders sagged in relief. Truth be told, she was more worried about Kenji's reaction although she didn't know why. Suddenly, she was ravenous. It was an indication of just how heavily her secret had weighed on her.\n\n\"It's early yet, I bet those kids are hungry; why don't we start supper?\"\n\n****\n\nEveryone now knew that Kenji had interviewed for the position of surgical resident. Many congratulated him, some gave him looks of envy and a few had even stopped speaking to him. It didn't bother him-he continued on as he usually did. Every so often he would see Ernie at the hospital and ask how things were.\n\n\"They're good,\" Ernie replied. \"I'm keeping my fingers crossed I get a letter from someone. My preference is here, but I'll go wherever I need to. The complicating factor if I get accepted somewhere else will be Maeve.\"\n\n\"She could transfer could she not?\" Kenji asked.\n\n\"She could, but all of her family is here,\" Ernie replied. \"The other issue is us. We're not sure if we really belong together. So in a way, an internship in another city or state might be a good thing.\"\n\n\"I understand,\" Kenji said. \"I wish the best for you.\"\n\n\"Thanks- by the way, word has it that you're up for the surgical resident spot.\"\n\n\"I interviewed for it,\" Kenji confirmed. \"I have not been accepted yet. If I am not, then we will continue as planned.\"\n\n\"Well, good luck,\" Ernie said offering his hand.\n\nKenji shook it and watched Ernie hurry off. He looked at the watch that Patricia had given him for Christmas and decided to wait a little longer before calling her. It wasn't quite five and he wanted dinner to be over before he called. He knew that her first question would be if he had slept and he would be able to tell her that he had. The last shift had been a difficult one and he fell into bed soon after talking with her that morning.\n\nHe bought a cup of tea from the cafeteria and went outside to enjoy it. As he sipped the tea, he read through his notes from the night before. He felt the hairs on the back of his neck prickle and looked up. Mai was sitting with Vera on the opposite side of the large patio. Vera was reading something, while Mai stared at him with an expression of hatred, desire and confusion. They hadn't spoken since their last conversation and he planned to keep it that way. When he saw her start to stand, he stood up and left the patio taking his tea with him.\n\nEven though it was early, he decided to call home.\n\nPatricia answered on the second ring. As expected she asked him if he slept and for how long. Satisfied that he had rested, she put Marie on the phone. \n\n\"Hello pretty one,\" Kenji greeted. \n\nThey chatted for a few minutes before Marie told him that she missed him and had a new picture for him.\n\n\"I look forward to seeing it,\" Kenji replied. \"I love you.\"\n\nNiko was next.\n\n\"Papa! Do you know yet?\"\n\n\"Not yet,\" Kenji replied. \"How is school?\"\n\n\"It's fine, papa guess what happened?\" Niko asked excitedly making Kenji smile.\n\n\"Let me see,\" Kenji mused, \"you have grown another ear?\"\n\n\"No,\" Niko replied giggling, \"that isn't possible. Do you give up?\"\n\n\"I give up,\" Kenji replied laughing.\n\n\"Florrie can come over to play! Her mother said that she could.\"\n\n\"That is good news!\" Kenji replied. \"Is her father aware of this?\"\n\n\"Yes, Florrie said that he said that it was alright.\"\n\n\"Then I am pleased for you,\" Kenji said meaning it. Florrie would be the first child allowed to come to their house to play. \"When is this going to happen?\" he asked hoping that it would be while he was home.\n\n\"Saturday,\" Niko replied. \"She's going to eat lunch with us. Can we have a picnic?\"\n\n\"I do not see why not; discuss it with your mother.\"\n\n\"She already said yes but I had to ask you too,\" Niko replied happily.\n\nThey hung up a few minutes later with Kenji telling Niko that he loved him and to help with his sister. A moment later, he was talking to Patricia. Her soft, \"I miss you\" was like music to his ears. He missed her too.\n\n\"So no word yet?\" she asked.\n\n\"Not yet, I will call as soon as I know something. Kirei-Niko tells me that Florrie is coming over for lunch. Are you sure that her father is alright with this?\"\n\n\"He was there when Florrie's mother gave permission,\" Patricia replied. \"Of course this is only Wednesday; he could have changed his mind by now. For Niko's sake I hope that he doesn't. He's so excited. I told him yes to the picnic-is that alright with you?\"\n\n\"He asked and I told him that it was fine,\" Kenji replied. \"I saw Mai today.\"\n\n\"And?\"\n\n\"We did not speak, but Kirei; she didn't look right. She looked fine physically, but something is different.\"\n\n\"Maybe she finally got the message,\" Patricia said.\n\n\"Perhaps- what is happening at home other than the pending visit from Florrie?\" Kenji asked changing the subject.\n\nPatricia told him that Abby had stayed for dinner, but left out the particulars of their conversation. She did tell him that Abby was thrilled that Joel and Penny were coming for the summer and offered to have them stay at her house. Finally she got around to the conversation with Dai.\n\n\"There is no pain?\" Kenji asked.\n\n\"No, just that he's losing weight and tired. I asked her if he's been eating and drinking more than usual, but she says no. She's pretty worried about him.\"\n\nKenji didn't say anything for a long time. Patricia swore that she could almost hear his brain working as it processed the information.\n\n\"I will call him after I'm through talking to you.\"\n\n\"What do you think it is?\" Patricia asked.\n\n\"It could be nothing,\" Kenji said. \"It could be that he needs to take a vacation- he works much too hard.\"\n\n\"Will you call me and let me know?\"\n\n\"Of course,\" Kenji replied. \"Kirei...\"\n\nHe stopped when he felt someone behind him. He turned around to see Mai watching him. A moment later, Vera appeared, took her arm and led her away.\n\n\"Kenji?\"\n\n\"I am here Kirei, I was momentarily distracted. I apologize. I was going to ask you about another overnight getaway before Joel and Penny arrive.\"\n\n\"Funny that you should mention that,\" Patricia said. \"I was thinking about that earlier today. We'll look at our schedules when you get home. Call your dad and then call me back.\"\n\nKenji hung up and dialed his father's number. He was surprised when he answered the phone himself. He closed his eyes and listened to his father's voice.\n\n\"Kenjiro! What a pleasant surprise!\"\n\n\"Hello father, how are you?\"\n\n\"I'm fine, just a little tired is all. Have you heard about the surgical position yet?\"\n\n\"No, not yet,\" Kenji replied. \"Father, I'm calling because Dai called Patricia...\"\n\n\"I told her that I am fine!\" Hiroshi snapped.\n\n\"Do not be angry with her,\" Kenji said softly. \"She loves you and is concerned about you. She did what any wife would do for her husband.\"\n\n\"I know,\" Hiroshi said softly. \"You are right, but Kenjiro; I am fine. I just need to take some time off. I am not as young as I used to be.\"\n\n\"Will you come to the hospital for testing?\" Kenji asked knowing that the answer would be no.\n\n\"I plan to take a week off to rest,\" Hiroshi said. \"If I am not better by the end of it, I will agree to be examined.\"\n\nKenji knew that his father would want to try the herbal remedies first. \"Do I have your word that you will come to the hospital if you aren't better by the end of a week?\"",
        "\"Yes, you have my word,\" Hiroshi said.\n\n\"Good. It has been a long time since you have been to our home. Are you available on Saturday?\"\n\nThe invitation came as a welcome surprise. It was always Patricia who called to make the invitation.\n\n\"We would enjoy that,\" Hiroshi replied.\n\nAfter he hung up, Kenji called Patricia back and told her what happened.\n\n\"They will be coming to lunch on Saturday.\"\n\n\"Great! You know, why don't we just make it a family affair? I'll call your mom and everyone else.\"\n\nKenji hung up and went to his room to rest. It was past six and obvious that he wouldn't find out about the surgical position until later in the week.\n\n*****\n\nMai went from day to day doing what her father expected of her-obey. The only time she really relaxed was when she was at the hospital. But even that was limited. It seemed that for a while everywhere she looked she saw either Shotaro or Kenji. Each time she saw them, she had to swallow her anger. Shotaro like Kenji avoided her when he could, but if he was in the same room with her; he spoke to her. He didn't know that she had seen him with the black woman- there was no point in telling him. It would change nothing.\n\nSometimes when she saw Kenji, she wondered what gave him the courage to do as he wished. She also wondered the same thing about Shotaro. What was it about the women that they loved that could draw them away from tradition? Then she realized that she had the answer. It was love. It had nothing to do with rebelling or trying to be disrespectful-they loved these women enough to forsake friends and family. The idea of loving someone that much boggled her mind, but there it was and there was no disputing it.\n\nShe realized that Vera was right about something. Even if she had managed to pull Kenji away from his wife and children, he would and could never love her. He would be thinking of his wife as they made love and would more than likely call out her name. Understanding that she should have had from the beginning began to settle in. It changed how she felt about Kenji only slightly. As much as she wanted him and thought she loved him; she now hated him too. Her feelings for Shotaro had gone from dislike to hatred. That he hadn't spoken up sooner rankled her. That he dared to bring his woman with him infuriated her. He was going to sleep with her after being with that woman! Their children would have had inferiors for siblings.\n\nShe no longer spoke to Ani about anything unless she absolutely had to and that included the pregnancy- it didn't matter. Ani was now a part of the enemy camp. Her only friend was Vera who unbeknownst to her was watching her watching Kenji while she pretended to read. Mai didn't notice Vera tense when she was about to stand up and approach Kenji. Nor did she see Vera relax when Kenji realizing what was happening left the patio. Mai settled back in her seat debating as to what she should do. \n\nMaking an excuse that she needed the bathroom, Mai followed Kenji to the phones and listened to him talking to his family. As always, she could tell when he was talking to Patricia. The timbre of his voice changed becoming deeper and more intimate- she could almost feel the love that he had for her. She could even imagine what it sounded like as he murmured words of love into Patricia's ear- it would be deeper yet, but gentle and intense at the same time. Jealousy and anger rose making her feel hot. She jumped when Kenji unexpectedly turned around to see her watching him. The expression on his face was impassive, but she could tell that he was irritated at the intrusion on his privacy. When Vera caught up to her and led her away, she went without comment.\n\n\"What do you think you're doing?\" Vera asked. \"You know that your father is having you watched.\"\n\n\"I don't care anymore,\" Mai said. \"What more can he do to me?\"\n\n*****\n\nAni watched and listened as her father spoke in rapid Japanese on the phone. He had been behaving mysteriously and was in a relatively good mood considering all that was happening with Mai. The change had begun the week before and when she asked him about it, he put her off telling her not to worry about anything. She had believed him, but now she was concerned. Mai was drawing even further into herself and Ani was beginning to wonder about her mental state.\n\n\"Prepare for a guest,\" he said when he hung up. \"He will be here by the weekend.\"\n\n\"Yes father,\" Ani said dutifully. As much as she wanted to know who the visitor was, she didn't ask. It wasn't her place to question anything that her father did. As she began to make dinner preparations, she thought about Mai. She missed her sometimes impulsive sister, but didn't know how to fix the rift between them. Even the subject of the baby hadn't helped. Jiro understood, but totally agreed with her father. Mai had disgraced all of them. In his opinion, Shotaro wasn't any better; but he wasn't their problem. When she suggested that she talk to her father about Mai, Jiro forbade it. \n\n\"Stay out of it,\" he admonished firmly without offering an explanation. But Ani already knew the reason. Her father was loaning Jiro the money to start his own business. He didn't want anything to interfere with that happening.\n\nAni set the table wondering who the mysterious guest was and how her father knew him. Upon further thought, she decided that it was probably a business partner from Boston. It suddenly occurred to her that her father hadn't said when the visitor was leaving. That was unusual. In the past he had always given them some indication of how long the guest would be staying so she knew how to plan their meals. A feeling of dread fell over her as she thought she understood what was happening. A part of her-the sister part of her wanted to call the hospital to tell Mai to run as fast and as far away as she could. The other part of her, the obedient wife and daughter couldn't make herself take that step. She argued that her first loyalty was to her husband and besides; she had tried to help Mai by warning her. It wasn't her fault that Mai had refused to listen.\n\nDinner was ready by the time Mai and her father got home from the hospital. Jiro would be late because he was meeting with some investors. Ani was tempted to take the opportunity to speak with her father, but decided against it. What if he said something to Jiro? Conflicted, she stood firm in her decision not to say anything. Mai would have to make her way alone.\n\nMai walked in and past Ani without speaking to her. Their father noticed, but made no comment. He didn't care so long as Mai did as she was told when the time came. He also knew that Ani was conflicted. She loved Mai, but he also knew that she wouldn't interfere-Jiro had seen to that. Dinner was a long, silent affair with Mai excusing herself after the dishes were done. Ani watched her only sister walk away and felt another pang of guilt. She followed Mai to her room and tried to talk to her again.\n\n\"Mai-please...\"\n\nMai stopped walking but didn't turn around.\n\n\"Please talk to me...\"\n\n\"Why?\" Mai rudely interrupted as she turned around. \"So that you can report back to him?\"\n\nAni took a step back. The anger that she saw in Mai's brown eyes frightened her. But it was more than that- mixed in with the anger was hatred. Mai hated her.\n\n\"Mai, listen to me,\" Ani begged. \"I haven't told him anything! I have nothing to tell! I only told him about Kenjiro because he asked a direct question and I won't lie for you.\"\n\n\"Of course not, you're the dutiful daughter,\" Mai said snidely.\n\n\"You aren't being fair,\" Ani said. \n\n\"Aren't I?\" Mai snapped. \"Is it fair that I am not free to be with someone of my choosing? Is it fair that we are traded off like cattle for the Kabata name? Is it fair that Shotaro is allowed to have his black bitch on the side and nothing happens to him? Is any of this fair?\"\n\n\"I tried to warn you,\" Ani said raising her voice. \"I tried to tell you that no good would come of your infatuation with Kenjiro Takeda but did you listen? I told you to try to meet Shotaro halfway. I told you this when father first announced that you were going to marry him. Again-did you listen to me? And now you stand there and tell me that I was supposed to lie for you. You walk around here acting as if I am the enemy when I'm not. You are your own enemy! All you had to do was marry Shotaro and all would have been well, but you chose a different path. The question that you must ask yourself is this- was it worth it?\"\n\n\"I didn't want to marry Shotaro!\" Mai yelled. \"I don't and didn't love him and I will tell you this- the woman that he is in love with is here with him! He was going to marry me and keep her as his mistress! Had we had children, our line would have been tainted. The woman is half Negro and if I had gone back to Boston nothing would have been different. Tell me, if this were Jiro we were talking about, would you feel differently?\"\n\nAni couldn't reply. Shotaro was going to continue his affair with the black woman even after he and Mai married? She saw Mai's point, but that didn't erase her obligation to her family. She still maintained that Mai hadn't made a real effort to win Shotaro over. If she had, he wouldn't have found someone else. \n\n\"If you will excuse me, I have things to do,\" Mai said as she turned away.\n\n\"Do as you always do,\" Ani called after her. \"Things don't go your way so you go to your room and sulk. You make no effort to seek a solution. Instead you look for the easiest way out. This time his name was Kenjiro Takeda. Do you not realize that Shotaro could have been your way out? Apparently he is as enthused about tradition as you are.\"\n\nMai froze as she began understand what Ani was saying.\n\n\"If you had taken the time to get to know him, you and he could have approached father together. Father would have respected that even if he didn't agree with it. A compromise of some kind could have been reached between him and Shotaro's family. But when you started pining over Kenjiro Takeda-a married man; you lost that opportunity.\"\n\nMai turned around to face Ani.\n\n\"Just because I follow tradition doesn't mean that I am blind and stupid,\" Ani said hotly. \"I have spent the past weeks agonizing over the change in our relationship. I can only tell you that I am not the enemy; I never was. Goodnight Mai.\"\n\nMai watched Ani walk away wondering how much of what Ani said was true. Had she really brought all of this on herself? She thought about the first time that she met Shotaro. Her immediate impression of him was that he was attractive, but weak looking. He wasn't tall like Kenji was, but he had a nice smile when he smiled and was wiry as opposed to thin. She remembered watching him as he talked with her father and decided that she didn't like him. He didn't fit her idea of what her husband should look like. When they officially met, he smiled at her politely; but she didn't return the smile. By the end of the meeting, he was acting as coolly toward her as she had been toward him. Ani noticed and later that evening pulled her aside.\n\n\"What are you doing? Why did you act that way?\"\n\n\"I don't like him,\" Mai replied.\n\nAni stared at her in disbelief. She liked Shotaro even though he was a bit standoffish.\n\n\"You didn't give him a chance,\" Ani replied. \"You barely spoke him and he was trying...\"\n\n\"I don't like him,\" Mai repeated.\n\nAni threw her hands up and walked away. Mai had already made up her mind and there was no changing it. The next meeting didn't go any better than the first. Once again Shotaro tried to be cordial but Mai remained aloof. After the second meeting her father took her aside.\n\n\"The next time you meet-you will show some interest...\"\n\n\"But...\"\n\n\"Do not interrupt me. You will make an effort to get acquainted with Shotaro. You will marry him. It is not up for discussion or debate.\"\n\nShe tried. But did she really? Mai asked herself as she went to her room. She had other opportunities after that second meeting. After that they only saw each other occasionally as Shotaro was in college at the time. Each meeting was no better than the first and Mai now understood that she had set the tone for their relationship. Ani had been right then- how much was she right about now?\n\nIn that moment, Mai both envied and hated Ani. She wished that she could do what was expected of her without question, but that wasn't who she was. She went into her room and sat on the floor to think. There was no point in thinking about the past. As Ani said, that was a lost opportunity. Mai knew that her father was up to something. Like Ani; she sensed the change in his mood. Mai realized in retrospect that had she played her cards differently, she might have been able to find something out from Ani. It was another lost opportunity. She was, she realized as Ani had told her so many times too impulsive. She never looked ahead to the consequences of her actions and in the past things had somehow worked out. Her gut was telling her that this time would be different. She thought about going to Ani and apologizing for her behavior, but Ani would see right through it. All she could do now was to finish her residency and then disappear.\n\n****\n\nVera looked at the phone. She was concerned about Mai's mental state. She didn't think that she was a danger to others, but she could be a danger to herself. She knew that Mai considered her to be her one true friend and if she found out that she was the one spying on her... \n\nThe way Vera saw it was that she few options. She could continue as she was and hope for the best or she could tell Mai what was happening. If she did the latter, she would be kicked out of the nice apartment and she wasn't sure that she could go back to sleeping in shifts. There was also the matter of her job. It had been filled within hours after she resigned. She had no choice but to continue as she was. She could however, not tell Mai's father everything. \n\nThe phone rang before she could pick it up to make her call. She knew who it was. He was the only one who called her. She hadn't even told her family that she had moved. If she did, they would assume that she had money that she really didn't have and would begin to make demands on her. They were already counting down the days until she was finished with her residency. She pushed her concern about Mai aside and answered the phone.\n\n\"What do you have to tell me?\"\n\nImmediately, Vera began talking about the events of the day. When she was finished, there was a soft click. Her caller had hung up.\n\n****\n\nKenji packed his bags and got ready to leave. He still hadn't received word about the surgical residency position. He really wasn't concerned about it; he was just ready to go home to Patricia and the children. He was also concerned about his father. The more he thought about it; the less he liked what he had heard. While there were no blatant signs that anything was amiss, he knew that there were plenty of diseases where the symptoms could manifest as fatigue. Some of the cancers came to mind as well as a few other things. In retrospect, he wished that he had insisted that his father come to the hospital but there was nothing that could be done about it now. When he saw him at the picnic, he would press the issue.\n\nOn his way out, he saw Mai being dropped off. He couldn't help but notice how miserable she looked. He felt for her, but there was nothing he could do for her. She would interpret his concern as something more. He hoped that the woman that he assumed was her friend could help her. He hurried on his way eager to be home. On his way, he stopped by Abby's house and picked some fresh flowers for Patricia. They had flowers in their back yard, but Abby had some that they didn't have. Abby saw him pull up and went outside.\n\n\"Is everything alright?\" she asked as she dried her hands on a dishtowel.\n\n\"Everything is fine,\" Kenji replied. \"I came to pick some of those flowers that Patricia likes.\"\n\n\"Come on in- I have some starter plants for her,\" Abby said leading the way. \"So no word yet?\"\n\n\"No, but I expect to hear something soon,\" Kenji replied eager to be gone now that he had what he came for. \"Will you be at the picnic on Saturday?\"\n\n\"I wouldn't miss it! Patricia asked me to make the potato salad.\"\n\nKenji thought that Abby was acting a little nervous, but didn't comment on it. She seemed well enough and he knew that if she had a problem, she would have said something. They chatted for a few more minutes before Kenji left for home. As he drove home, he thought about some of the other married residents who wished that they weren't going home. They dawdled and found other things to do and on occasion called their wives telling them that they had to stay another night. He didn't understand it, so one day he asked one of the residents about it.\n\n\"Not all of us are as fortunate as you are,\" he explained. \"I can't speak for the others, but when I go home, all I hear is the countdown to when we can buy a house or buy a car. Home isn't a place of relaxation for me so every so often; I lie and say that I have to stay.\"\n\nKenji couldn't imagine deliberately staying away from his family. He counted down the hours until he could see them again.\n\n\"Some of us were wondering about you,\" the resident whose name was Alan said. \"We noticed that as soon as it's time to leave; you haul ass. Is home really that great?\"\n\nKenji thought a minute before answering. \"My wife and children are the reason that I am here and home-home is a respite for me.\"\n\n\"Your wife doesn't have a calendar that she uses to cross the days off with?\" \n\n\"She does,\" Kenji chuckled, \"but it has other uses as well.\"\n\n\"So she does keep track,\" Alan commented.\n\n\"Yes, but only so she can start planning the celebrations,\" Kenji replied correcting the resident's assumption. \"My wife is a planner- she has to be with the children and her classes.\"\n\n\"She goes to school?\" Alan asked surprised. He and Kenji knew each other, but had never really talked outside of the clinical setting.\n\n\"She is in the pre-med program,\" Kenji said proudly. \"It is our hope that when the time comes; she will be accepted into the medical school here.\"\n\n\"Damn,\" Alan said impressed. \"Claudia would never do anything like that. She's too busy learning how to be a doctor's wife as if that's different than being the wife of a the man who's a butcher. You're a lucky man. So how did you get so lucky?\"\n\n\"I was taken away from Patricia- I was interred at Manzanar,\" Kenji explained. \"We were apart when she discovered that she was pregnant with our first child. It was a very difficult time for both of us. I think-no, I am certain that our separation has much to do with my wanting to be home as much as possible. Of course, I love her and our children and even if we hadn't been separated; I would still rush home to them.\"\n\nThe two men became friends after that and often shared meals together.\n\nKenji pulled into the garage, left his bag in the car but took the plant in. From the garage, he could hear the radio playing and imagined Patricia singing with it as she made dinner. It was one of his guilty pleasures that he missed. His stomach growled at the smell of the meatloaf that he had requested that she make and he couldn't wait to hold her. But he had to watch her even if it was for a few seconds as she sang and danced her way around the kitchen. He went to the door and slowly opened it hoping that she was within sight. Initially, she wasn't but a few seconds later; she was in full view her hips swaying to the beat of the music. Her soft alto voice reached his ears soothing him. He was home. He watched for another minute before making a sound alerting her to his presence. Suddenly, the door to the garage was thrown open and Patricia was in his arms. As he kissed her and held her close, he began to sway to the music. It was the first time he had danced with her and he wondered why he hadn't done it sooner. He pulled her closer and nuzzled his nose in her hair and inhaled. He began to harden and was about to whisper a promise into her ear when Niko and Marie's excited voices interrupted him.",
        "\"Papa!\" they cried in unison as they tore into the kitchen.\n\nKenji gave Patricia another kiss, released her and knelt to greet the children. He hugged them tightly and kissed each one on the cheek.\n\n\"Did you bring me a present?\" Marie asked kissing him back.\n\n\"Not this time pretty one,\" Kenji replied. \"If I brought you a present every time I came home, then it will no longer be a surprise or special.\"\n\nMarie pouted for a few seconds and then brightened when Patricia mentioned the picture that she had drawn for Kenji.\n\n\"Do you have stories for me?\" Niko did already knowing the answer, but he loved hearing the response. He loved those times with Kenji as much as he loved making grilled cheese sandwiches with Patricia. Each story that Kenji told reinforced that he wanted to be a doctor. He didn't know what kind- but it didn't matter.\n\n\"I have stories for you, but let's help with dinner first and then I'll read with your sister.\"\n\n\"Yes papa,\" Niko replied happily.\n\nKenji took his time enjoying the dinner that Patricia made thinking that it was too bad that there wasn't a place where he could keep food cold where it wouldn't be stolen. They let the children dominate the dinner conversation- there would be plenty of time for him and Patricia to talk after they made love. The main topic of conversation was Florrie's impending visit. Even Marie was excited at having another playmate other than Niko although he did play dolls with her and was a frequent guest at her tea parties.\n\nBoth Patricia and Kenji noticed that Niko was no longer protecting Marie by taking the blame for her misbehavior. In fact, he often stopped her before she got into trouble. As a result, her behavior improved.\n\nAfter dinner was done and the kitchen cleaned, Patricia sat on the couch next to Kenji with her head on his shoulder as he read with Marie. Her newest drawing lay on the sofa beside him. He patiently waited for her to sound out the words and complimented her on a job well done.\n\n\"Niko helped me,\" she said obviously pleased that Kenji was pleased.\n\n\"Your brother is a good teacher,\" Kenji said with a smile at Niko who beamed. \"I am very proud of both of you.\"\n\nNiko and Marie were allowed to stay up for another thirty minutes much to their surprise and delight. When it was time finally time for bed, Marie started to pout. Before Patricia or Kenji could say anything, Niko took Marie by the hand.\n\n\"Come on, if you complain, they won't allow us to stay up late again.\"\n\nMarie started to complain again, but Niko pulled on her hand and led her away.\n\n\"We will come to say goodnight in a few minutes,\" Kenji said as he put an arm around Patricia and kissed her head. His thoughts went to the residents who didn't want to go home to their wives and children. He still couldn't fathom it.\n\nFifteen minutes later, the children were settled in their beds. Kenji and Patricia sat in the living room waiting for the inevitable call for a drink of water that would come from Marie. When it came, Kenji was the one to respond. When he came back, he had an idea.\n\n\"Tomorrow night we will sit a small glass of water on her table.\"\n\n\"We can try it,\" Patricia said, \"but don't be surprised if she spills it in her bed.\"\n\n\"I hadn't thought about that,\" Kenji confessed. \"Maybe that can wait and besides, it doesn't take long to get her a glass of water.\"\n\n\"She just wants an extra few minutes alone with her daddy,\" Patricia said. \"I think that in many ways, she misses you more than Niko does. She doesn't really say anything or chomp at the bit like Niko does, but she starts looking at the door when it's time for you to come home.\"\n\nKenji got an idea when he saw the necklace that he had gotten Patricia for her birthday a few years before. He had wanted to replace the chain, but Patricia wouldn't hear of it. She wanted it as it was given to her.\n\n\"What are you thinking about?\" She asked as she snuggled closer.\n\nHe told her about the residents who sometimes lied to their wives about having to stay at the hospital.\n\n\"That's terrible!\" Patricia said shaking her head in disbelief.\n\n\"It was a reminder to me about how fortunate I am to have you and our children. Come to bed with me, allow me to show you how much I love you.\"\n\n\"Give me a few minutes to change...\"\n\n\"Pease-no gown,\" Kenji said softly. \"Let's just undress and get into bed. I need to feel you close to me.\"\n\nPatricia stood up and held out her hand. Kenji took it without hesitation and stood up. Without a word, he led her up the stairs and to their room only stopping to make sure that Marie was sleeping. Satisfied that she was sound asleep, Kenji took Patricia into the bedroom and began to undress her taking time to caress her face with his fingers and lips. Patricia stood still with her hands on his waist. Her grip tightened when he took an earlobe between his lips and gently nibbled on it. That simple act always made her weak in the knees and wet between her legs. She wanted to press into him so that she could feel his hardness against her stomach, but she stepped back and looked up at him.\n\nWhile her hands worked at his belt, she looked into his eyes. When he tried to stop her, she lightly slapped at his hands. He took hold of her hands and brought them to his heart and then to his lips. She pulled her hands back still in his and kissed the back of his hands and went back to work on the belt. Finally it was loose and the button and zipper undone. His slacks fell to a heap at his feet. Patricia dropped to her knees and reached into his shorts. It had been far too long since she had taken care of him like this.\n\n\"Kirei...\" Kenji moaned as the head of his erection slipped into her mouth. This wasn't what he had in mind. He was supposed to be caring for her. He wanted to stop her, but he didn't. Patricia fondled his semen filled sacs as she suckled and nibbled on his cock. It had been several weeks since they had partaken in this form of lovemaking. As much as they enjoyed it, it was something that they didn't so often. It only made it more special when they did. \"Kirei-stop! I...\" the words were lost as a moan that started deep in his belly worked its way up to his mouth as his semen left his balls and traveled up his cock exiting into Patricia's waiting mouth. He cried out as she continued to suckle at his deflating cock. The tip of it was so sensitive that even her warm breath made him shudder. He hadn't wanted to climax so quickly, but the night was young. He would be ready again within the hour.\n\nHe pulled her to her feet and kissed her not caring that he had just come in her mouth. The way he saw it was that it was a part of him that they shared. He felt the same about her nectar as he thought of it and he couldn't wait to taste her. He kicked off his shoes and stepped out of the slacks that were puddled around his feet and began to edge Patricia back toward the bed.\n\n\"Thank you for that,\" he murmured. \"It's my turn to please you.\"\n\nWhen they reached the bed, Kenji finished undressing her and eased her back onto the bed. Instead of going directly to her vee, he started at her face. He took his time exploring her with his hands, lips and tongue. Patricia shivered when he licked along her jawline and then blew on it.\n\n\"I like that,\" she murmured and then moaned when he made his way to her shoulder. She gasped when his strong fingers found a nipple and pinched and then rolled it back and forth. The moisture between her legs grew with each touch and each kiss. He planted soft, warm kisses down her body as he made his way to his goal. The scent of her arousal grew stronger the closer he got to his ultimate goal. He licked his lips when he finally reached his destination. Patricia's legs were already spread as wide as she could get them. Even though she knew what was going to happen, she still jumped when his tongue started at the bottom of her slit and slowly worked its way to the top.\n\n\"Oh- do that again,\" she said her breath coming out in short pants. \n\nKenji obliged and repeated the movement three times. Just as it hadn't taken him long to climax, it wouldn't take her long either. She was already close. Kenji looked up at her to see her pulling on her nipples. The sight of her playing with her breast made his cock jump to attention. Without further ado, he gently took her clit between his lips and flicked his stiffened tongue over it. Patricia reached down, took his head between her hands and held him there. She released him only because she felt the orgasm coming and needed to stifle her screams. Kenji kissed her pulsing clit until she came a second time with a pillow over her face. Afterwards, he moved up beside her and took her into his arms and held her as they slept. An hour later, Kenji was awake and trying not to move. \n\n\"I'm awake,\" Patricia said planting a kiss on his chest. \"Why are you awake? You have to be exhausted.\"\n\n\"I'm fine,\" Kenji replied. \"I've gotten used to being up at night. Why are you awake?\"\n\n\"I guess I don't want to miss anything,\" Patricia replied. \"And this is one of the few times that we can talk without interruption.\" \n\n\"You have something on your mind,\" Kenji said. \"Tell me about it.\"\n\nShe began with her concerns about Florrie's visit or rather what would happen if she didn't come.\n\n\"Niko will be hurt,\" Kenji agreed, \"but we will deal with that when and if it happens. What else?\"\n\nEventually, Patricia got around to telling him about Abby. He didn't say anything for a long time. Patricia thought that he had fallen to sleep.\n\n\"She has suffered much,\" Kenji finally said. \"I only wish that she had shared with us sooner. She needn't have suffered alone.\"\n\n\"I know, but I'm glad that she finally told us,\" Patricia replied. \"I can't begin to imagine what it must have been like for her not to have anyone to turn to. We had it hard, but we had people to help us. Kenji, I think she's afraid of what you will think of her.\"\n\nIt bothered Kenji that Abby would think that his feeling for her would change because of her sexual orientation. It also explained why she had seemed nervous when he saw her at her house. He made up his mind to call her and to let her know that he still loved and respected her, but first; he had a wife to take care of.\n\n***\n\nAfter Kenji left, Abby continued with her chores. The potatoes for the potato salad were boiling and the ingredients that she would put in it were chopped and in a bowl in the fridge. The next chore was to clean the room that Ralph had slept in for Joel and Penny's arrival. The door to the room had remained closed. She had no desire to go inside. The last person to use the room had been Joel and he had cleaned it before he left. Reluctantly, she walked to the door of the room and then stood there. She allowed her regrets to wash over her and then she brushed them aside. There was no point to it. It wasn't as if she could go back and change anything. \n\nShe opened the door and stood in the doorway. A layer of dust covered everything. It would take her hours to clean the room plus wash the linens. She looked around the room and decided that she didn't like the color. It needed new life breathed into it. As soon as possible she would have the room painted in something bright and cheery as opposed to the eggshell white that it was. Then she had another burst of inspiration. She would let Marie have a wall to do with as she wished. Niko could help if he wanted to, but for the most part it would be a project for her and Marie.\n\nAs she stripped the bed, Abby thought about Kenji. She didn't think that his attitude toward her would change, but the thought that it might made her nervous. She had been surprised that Patricia hadn't asked her why she didn't tell them sooner. If she had asked the question, she wouldn't have had an answer other than fear. Her family hadn't accepted what she was- they forced her into marriage. She had been alone for a long time before Patricia and then the others had come into her life. She told herself that she was being silly and finished stripping the bed. She would find out soon enough if things between her and Kenji had changed.\n\n****\n\nTrue to his word, Hiroshi took time off from the nurseries. He had hired in more than capable help and it also seemed to ease Dai's anxieties. He was going to say something to her about calling Kenji but decided against it. It was as Kenji had told him- she loved him and was concerned. Hiroshi had to admit that if he thought something was wrong with either Dai or Hiro; he would have called Kenji too. He did feel a little better and seemed to be eating more too lending credence to the thought that he was simply working too hard and needed to relax.\n\nThe problem was that ever since the interment, he had this hidden fear that everything would be taken away from them again. He had a large sum of cash locked in the safe in his office, but as far as he was concerned; it wasn't nearly enough. The beginning of the Korean War threw him back to when Pearl Harbor had been bombed. On his worst days, he could still see himself at Manzanar and killing Joben Saito. On his best days all he worried about was if they had enough money to be comfortable if anything happened. He relaxed a little when the Walter-McCarran act passed making it possible for first generation Japanese to become American citizens. He was also a little surprised that Kenji hadn't done it yet. He and Dai talked about it at great length. He wanted her and Hiro to become American citizens, but she refused saying that if he wouldn't; then neither would she. He tried to make her understand that it just wasn't possible. He couldn't take the chance of being discovered as he wasn't supposed to leave the camp as a free man. He still hadn't made her see reason yet. It was something that he planned to bring up during his time off. This time he wasn't going to take no for an answer.\n\nHe smiled and closed the ledger book when he heard Hiro calling his name. He remembered a time when Kenji would call for him just as excited as Hiro was. The smile faded as he remembered sending Kenji away telling him that he was too busy to talk or play with him. When he thought about it, he realized that that was the beginning of Kenji beginning to think on his own. Hiroshi could now see it clearly. He taught Kenji to think for himself because it kept him out of his hair with his never-ending questions about the universe or why things happened the way that they did. Instead of telling him that he didn't know and finding out with him; he had pushed him away.\n\nHe felt a pang of guilt mixed with pride that Kenji had become the kind of man and father that he himself had never been. He was pulled from his thoughts when Hiro burst through the door carrying a book.\n\n\"Papa can we read?\"\n\nInstead of answering, Hiroshi patted his lap.\n\n\"Of course we can read, but why don't you read to me?\"\n\nDai watched from the doorway and felt a little better. Hiroshi seemed more like his self. She had been wondering if what ailed him was more emotional than physical. She knew that he still harbored a great deal of guilt about his actions in the past and she knew that he was almost obsessed with making sure that they had enough cash on hand. To some degree she understood his concern, but on the other hand; the obsession was destroying him. She still hadn't discounted the concern that there was something physically wrong with him. She hoped that Kenji would take a moment to talk with him and convince him to go to a doctor to be examined.\n\n\"Why do you not join us?\" Hiroshi asked when he saw Dai standing in the doorway.\n\nDai smiled and walked over to them. When she sat down, she tried to reconcile the man that she was seeing with the man who had tried to have his daughter in law harmed and then became a spy for Japan during the war. She couldn't even begin to truly understand what he must have felt as he never really talked about it. She knew about Patricia- she had pushed him to reconcile with Kenji, but the rest of it, the spy part; she knew very little.\n\nHiroshi waited until she was sitting before he started the story. As he read, the lines of worry seemed to magically disappear. Even his voice seemed lighter. Once again she wondered about his mental state and decided to mention something to Kenji when she saw him. Maybe he would have some insight. Soon Hiro was giggling as Hiroshi changed his voice to distinguish between the different characters in the story. That night for dinner, Hiroshi ate as he had in the past- with gusto and relish. \n\nMaybe he was going to be alright- she hoped.\n\n****\n\nNiko planted himself by the front door and anxiously waited. He had completed all of his chores early and even helped Marie with hers. Now all he had to do was wait for Florrie's mother to bring her. Kenji saw him sitting by the door and hoped that Florrie really came. He hated to see Niko hurt if it didn't happen. He had already spoken to him to warn him that Florrie's parents could change their minds. Niko refused to believe it. He had a child's faith that an adult wouldn't lie to him-mostly because he had never been lied to by anyone in the family. He hadn't yet learned that not everyone was as honest as his family was. He eyed the clock. Florrie was due to arrive at eleven so that they would have time to play before the picnic at two. He had helped prepare snacks for him, Florrie and Marie so that they wouldn't get hungry. \n\nAt ten-fifty five, his heart began to pound. Like his father; he abhorred lateness. He took a deep breath and resumed his watch. At the stroke of eleven, his heart began to sink. Kenji stood back watching as Niko's shoulders which promised to be as broad as his grandfather John's began to sag.\n\n\"Perhaps they are just delayed,\" Kenji said as he approached Niko.\n\nNiko didn't say anything. He kept his eyes glued to the window. By fifteen minutes after eleven; he gave up. Florrie wasn't coming. He swallowed the lump that had formed in his throat and blinked back tears of disappointment.\n\n\"Niko...\" Kenji started to say when a beat up old car pulled into the driveway.\n\nNiko took off running out of the house and down the driveway toward the car. The man whom Kenji assumed was Florrie's father didn't get out. Florrie's mother did. Kenji couldn't help but notice how slowly she moved. When he got closer, he could see that the left side of her face was swollen. He looked at the man behind the wheel who returned his look with disgust written all over his face. Niko and Florrie were already talking. He smiled at the excitement that he heard in their voices. He turned his attention back to Florrie's mother.\n\n\"Mrs....\"\n\n\"I'm fine,\" she said before he could ask the question. \"We'll be back for Florrie around six if that's alright.\"\n\n\"Of course, but would you like to join us?\" Kenji asked. \"We have plenty of room and food.\"\n\nShe looked back at her husband and then back at Kenji.\n\n\"No thanks-I have a lot to do.\"\n\n\"I understand,\" Kenji said looking at her husband. He knew a beaten woman when he saw one. He had seen his share of them at the hospital. \"You are welcome here at any time.\"\n\nHe could have sworn that he saw a look of gratitude on the woman's face as she got back into the car. He looked at Niko who had a troubled expression on his face and then at Florrie who didn't- she was happy to be there. He couldn't help but wonder if Florrie wasn't being hurt too and if she was- what could be done about it?\n\n\"Let's go inside,\" Kenji said gently as he reached out to touch Niko's shoulder. His heart sank when he saw Florrie flinch. His fears had just been confirmed.\n\nPatricia watched from the front door, but decided not to go out. Her concern was that if Florrie's father saw her too, he would change his mind about the little girl staying. Not being seen was a small price to pay for Niko's happiness. As soon as the car pulled away, she stepped outside. She saw the concerned expression on Kenji's face and knew that they needed to talk.",
        "\"Hi Florrie, welcome to our home!\" Patricia greeted. \"We've been looking forward to your visit.\"\n\nFlorrie looked at the house and then at Niko. \"Is this really your house?\"\n\n\"Yes, this is where we live,\" Niko replied confused by the question.\n\n\"Come in,\" Patricia replied. \"Niko has snacks all ready for you since we won't be eating until later.\"\n\nFlorrie gawked at everything as she followed Niko and Patricia to the kitchen. She had heard that people lived in nice houses, but she never thought that she would see one much less be inside of one. She took in everything so that she could keep her promise to her mother to tell her everything that happened.\n\n\"I'll never see the insides of a nice house, so you tell me everything and that includes what you ate.\"\n\n\"I'll show you where we wash our hands before we eat,\" Niko said and started to walk away.\n\nFlorrie stayed rooted where she was. She felt as if she had left her world and entered into a new one. Washing hands before eating? They never did that before they ate. They just sat at the table and ate even if their hands were dirty from playing or working outside.\n\nKenji stood next to Patricia and watched for several seconds before he said anything.\n\n\"Florrie, it is alright.\"\n\nBoth he and Patricia saw Florrie flinch when Kenji spoke. Patricia looked up at him and understood why he had looked so concerned. When Florrie finally followed Niko to the bathroom, she turned to Kenji.\n\n\"She's being hurt.\"\n\n\"Yes Kirei, she is and so is her mother,\" he replied as he put an arm around her. He was going to say more, but Niko and Florrie were on their way back to the kitchen. \n\nWhen Florrie saw Kenji's arm around Patricia, she stared. She couldn't remember ever seeing her father touching her mother like that. She looked at Patricia half expecting to see fear and was perplexed when she didn't.\n\n\"Please sit down,\" Niko said holding a chair out for her. \"I will go find Marie and we will have a snack.\"\n\n\"Niko, why don't you take Florrie with you?\" Patricia asked when she saw the anxiety on the girl's round face. Alone again, Patricia turned to Kenji. \"What do we do?\"\n\n\"I don't know,\" Kenji replied. \"Nick or Will would be better at answering that question from a legal standpoint.\"\n\nThey could hear Marie's happy giggles as they approached the kitchen. Once again Niko offered Florrie a chair and held it out for her and then did the same for Marie. Florrie was flabbergasted when Niko told her what the options were as far as things to drink. At her house it was usually just water.\n\n\"O-Orange juice please.\"\n\nShe watched mesmerized as Kenji led Patricia to the table, helped her into a chair and then kissed her head. Niko poured orange juice for her, Marie and then finally himself and served it while Kenji made Patricia a cup of tea.\n\nThe snack time was quiet at first, but by the end of it; a bright little girl had emerged and was chatting with them freely. One thing was apparent to both Kenji and Patricia- Florrie was an exceptionally bright child.\n\n\"What does Kirei mean?\" She asked Niko when she heard Kenji use the term with Patricia.\n\n\"It is Japanese for beautiful,\" Niko explained. \"Papa always calls mama that because she is so beautiful.\"\n\nA dark expression crossed Florrie's face and then was gone.\n\n\"My dad never says nice things like that to my mom,\" she said and then stopped. She hadn't meant to say that out loud. Her mother had warned her against saying anything about what happened at home.\n\n\"It's nobody's business but ours,\" her mother told her that morning. \"Just try to have a nice time and remember to tell me everything.\"\n\nThey let the statement pass realizing that Florrie had said more than she should have. Later when they were alone, Florrie asked Niko the question that had been on her mind since snack time.\n\n\"Does your dad really like your mom?\"\n\n\"Of course he does,\" Niko replied. \"He loves her- doesn't your dad love your mom?\"\n\n\"I don't know,\" Florrie replied after a long pause. \"He never said so. Does your dad get mad at you?\"\n\n\"Sometimes,\" Niko replied.\n\n\"Does he hit you?\"\n\n\"No!\" Niko exclaimed appalled by the thought.\n\n\"Does he hit your mom?\"\n\n\"No never-he loves us.\"\n\n\"What happens if you do something bad?\" Florrie asked fascinated that not all fathers were like hers.\n\n\"We talk about it and then I am punished, but I am never hurt. Grandpa Nick believes in spanking, but he's never done it. Florrie-does your papa hurt you and your mom?\"\n\n\"Let's read a book,\" Florrie said changing the subject. She didn't want to think about home. She wanted to enjoy her time in this magical world where everyone seemed to love each other.\n\nPatricia was standing outside of the library where Niko and Florrie were talking. She wanted to check on them before she got busy with the final preparations for the picnic. Her heart broke at the conversation that Niko was having with Florrie. Like Kenji, she didn't know what they could do about it.\n\n*****\n\nMai spent the morning in her room. She knew that something was happening because her father was uncharacteristically happy. Whenever he looked at her, he had a 'now I've got you' look on his face. Ani was quieter than usual. Jiro was too busy being pleased with himself about how the plans for his new business were going to pay her too much attention. If he wasn't talking about the business, he was talking about the coming baby. During those times Mai closed her ears and counted down to when her residency would be complete. She had already made contact with several hospitals on the east coast and all of them sounded promising. She only had to survive the rest of her residency. She had it planned in her head. On her last day, she would walk out of the hospital and catch the first bus or train to the east coast. She wouldn't even let her family know that she was gone. That thought kept her grounded. It was her lifeboat.\n\nAfter lunch, her father and Jiro left the house. Her father instructed her to get make herself presentable and to wear her best kimono. A feeling of dread filled Mai's belly. She looked at Ani who looked away. Mai understood that Ani knew what was happening, but would she tell her? She waited until she was sure that Jiro and her father were gone before she approached Ani.\n\n\"What's going on?\" she asked without preamble.\n\n\"I don't know what you mean,\" Ani replied as she started preparations for dinner.\n\n\"Yes you do,\" Mai said, \"and you're going to tell me.\"\n\n\"Mai- I can't tell you what I don't know. All I know is that the person coming is a business associate of father's.\"\n\n\"I don't believe you,\" Mai said quietly. \"You have to know something. Jiro must have told you something.\"\n\n\"First of all,\" Ani said sternly, \"what Jiro and I discuss is between us. My loyalty lies with him. Secondly, I don't know what father is up to. I only know what I told you. Why he wants you here I don't know and I didn't ask. I would suggest that you do as you were told and get ready.\"\n\nMai stomped off and made a decision. She wouldn't do as she was told. She would meet her father's business associate dressed in her western clothes. As she changed, she had second thoughts about her decision. If she did as planned it would do nothing but further anger her father and at the moment; that didn't suit her needs. She put the clothes away and took out the kimono that she hadn't looked at in months. Sighing heavily, she laid the garment on the bed and looked at it. It was a beautiful garment but to her, it symbolized entrapment. In hindsight, she wished that she had made an effort make it work with Shotaro. They could have found a way to go their own separate ways, but it was much too late to be thinking about that now. He had already married the black woman in a civil ceremony.\n\nShe brushed her long black hair and then put it up in a bun. She looked at her reflection in the mirror and in that moment hated herself. She finally admitted that part of what Ani had been saying was true. Part of this was her fault. She had gone about things in the wrong way beginning with Kenjiro Takeda. As soon as she realized that he was married, she should have backed off. That he was married to a black woman was something that she would never understand even if he explained it to her. Too late she realized that he would have made a good friend. In the back of her mind, she wondered if was too late for that. It was, she decided. His wife would never allow it and if she were in her position; neither would she. Her father more than likely wouldn't be so angry if it hadn't been for her fascination with Kenji. He also might have broken the engagement between her and Shotaro had she played her cards right.\n\n\"Damn,\" she swore as she saw the error of her ways. She also realized that Ani was right about something else- she could have walked away and made it on her own. Thousands did it, so why couldn't she? That led to her second decision of the night. She wasn't going to wait until her residency was over to leave. She was leaving as soon as possible. The first obstacle was a place to stay. Vera came to mind and Mai was certain that she would take her in. The next thing was how to get her belongings out of the house without arousing suspicion. Her mind whirred with excitement. She was actually leaving! It was something that she should have done long ago. Now that she had a plan, she could go through the evening's charade. She would be the dutiful daughter and do everything that was required of her.\n\nThree hours later, Jiro, her father and the house guest were at the house. Mai checked her appearance and plastered a fake smile on her lips. She left her room confident that the evening would pass slowly and without incident. Her father, Jiro and the house guest were in the living room being served sake by Ani.\n\n\"Ah there she is,\" her father said when he saw her. \"This is my daughter- Mai- the one that I was telling you about.\"\n\nMai felt a ball of ice form in the pit of her stomach as she listened to the introduction. The man stood and politely bowed. She took in his appearance. He was about twenty years older than she was and had the bearing of someone who had been in the military. He was handsome in a stern sort of way with his salt and pepper hair cropped short. He assessed her with cool, almost disinterested eyes before turning back to her father.\n\n\"Kanojo wa hijo ni utsukushidesu- she is very beautiful.\"\n\nMai listened to them discussing her as if she wasn't there. \n\n\"I told you this did I not?\" her father was saying, \"but I also told you that she is willful and needs a strong hand.\"\n\nMai took a step backward as she understood what was happening. She saw all of her plans vanish as her father gave her away to a man that she didn't know.\n\n\"Mai come here,\" her father said sternly. He waited until she was standing in front of him. \"This is Tamoya Ito. He is my friend and business associate.\"\n\nMai swallowed hard and bowed.\n\n\"His wife of several years died and has left him childless and alone- he has agreed to marry you...\"\n\n\"No! Father please...\" \n\n\"It has been decided,\" he said his voice cold. \"You will spend the evening becoming acquainted as the wedding will be in two days' time.\"\n\nTamoya Ito looked at Mai and grinned. \"Come, sit and let us get to know each other.\"\n\nMai frantically looked around hoping that just once that Ani would forget tradition and say something- anything to help her. She saw that Ani was just as surprised as she was, but that Jiro wasn't. He knew and he hadn't told Ani. Ani's eyes met hers and the looked away making it clear that she wasn't going to interfere.\n\n\"Sit down,\" her father said sternly.\n\nSeeing as she had no choice, Mai sat down. She folded her hands in her lap and looked down at them. She spoke only when spoken to and offered no more information than what was required. She didn't miss the way that the man lustfully eyed her. Her mind frantically raced trying to think of a way out of her predicament. One thing was clear, if she was going to leave; it had to be tonight. She would take a cab to Vera's apartment and hide there. She would miss her rotations, but it couldn't be helped.\n\nFinally the evening was over. Mai felt as if she was caught in a whirlwind from which there was no escape. As soon as Tamoya was gone, Mai ran into her room and tore the kimono off. She ignored the tentative tap on the door and began to stuff a small bag with her personal items. She froze when she heard a sound that she didn't recognize. The door was being locked. Her father had anticipated her reaction. Tears of anger, defeat and hatred ran down Mai's face as she listened to the hushed voices on the other side of the door. One of them was Ani; the other belonged to her father. Eventually the voices moved away from the door and all was silent. It was over- she had lost.\n\n*****\n\nSaul hummed his way through his shift. Nothing could destroy the good mood that he was in. His patience in dealing with Isadora was paying off. Their after church conversations were more relaxed and she smiled more easily. He rushed home to get ready for the Saturday night picnic. With any luck, he would get to sit with Isadora and Lucas Newton would stay away. Saul didn't care that the young black man glared at him or made snide comments. In fact, he didn't care what anyone thought or said. The only opinion that interested him was Isadora's. He grinned when he thought about Reggie and Joshua's reaction when he told them about his intentions toward Isadora.\n\n\"You're going to do what?\" Reggie asked incredulously. \"Are you crazy?\"\n\n\"No....\"\n\n\"Look here son,\" Joshua broke in, \"think about this- things are hard enough as it is. Find yourself a nice white girl...\"\n\n\"It's either Isadora or no one,\" Saul replied. \"I can't tell you how I know that she's the one, but I know that she is.\"\n\nIt was Cora who tried to put an end to the discussion.\n\n\"Reggie and Joshua- leave him be. If he wants Isadora as his wife then so be it. He's a fine man and any woman would be blessed to have him. We need to be supporting him and not trying to discourage him from the path that he feels god is leading him. You two should be ashamed of yourselves.\"\n\nBoth men were quiet. They had no argument against what Cora said although Reggie tried.\n\n\"Come on Aunt Cora- you know that what we say is true.\"\n\n\"I'm not saying that it isn't,\" she replied. \"What I am saying is that it isn't for us to decide what he should and shouldn't do. That's between him, Isadora and god. We can do one of three things, try to stop him, stay out of it or try to help. I for one am going to try to help. What you do is up to you.\"\n\nSaul jumped out of his chair, grabbed Cora and hugged her. For some unknown reason of the three present, her opinion was the one that really mattered. Later he would realize that it was because she had become his mother. His birth mother would never understand or accept his decision about Isadora. He didn't think that she would disown him; but she wouldn't accept Isadora either. He walked in the door to see Noah Jackson sitting on the sofa sipping a glass of water. For just a moment Saul thought that he had changed his mind about sending him to school.\n\n\"Saul! How are you?\" Noah greeted.\n\n\"I'm fine sir- how are you?\"\n\n\"Good, I was hoping to take a few minutes of your time. I have something that I need to discuss with you.\"\n\nSaul sat down across from Noah and waited.\n\n\"Tell me about your friend Harry,\" Noah said.\n\n\"What do you want to know?\" Saul asked warily.\n\n\"What has he been up to?\"\n\n\"I don't know,\" Saul replied honestly. \"We haven't really talked for a long time now- why are you asking?\"\n\n\"Why the change in your relationship?\" Noah asked. \"Wasn't he the one that you stood up for?\"\n\n\"Yes, but something changed,\" Saul replied. \"He's not the same person. He's angry about the way things are. He doesn't see the changes that are already happening-the changes aren't happening fast enough to suit him.\"\n\nNoah was quiet for several minutes. He knew more about Harry's doings than his best friend did. The question was did he want to take a chance with someone who believed that violence was the way to fix things? Harry Simons definitely had the spark, but could he be redirected?\n\n\"I plan to talk to him,\" Noah said making his decision. \"I'm also going to tell you what your friend has been into.\"\n\nSaul was shocked, appalled and saddened by what he heard. The good mood that he had walked in with was gone. His friend was well on his way to destroying his life because of anger and hatred. He looked at the clock, stood up and walked out of the house leaving Noah Jackson sitting on the sofa. As he walked toward Harry's house, he spoke to all that spoke to him and nodded at those who didn't. When he reached Harry's house, he hesitated. Harry had made it clear that he didn't want to talk about what he was into. Saul walked to the front door and knocked. Harry's mother answered the door.\n\n\"Saul? My lord it's been a long time! What's been keepin ya?\"\n\n\"It's nice to see you too,\" Saul replied with a smile. He was relieved that whatever feelings Harry had or didn't have toward him weren't held by his mother.\n\n\"Harry says you been busy- going to school and all.\"\n\n\"Yes ma'am- I'll be starting classes soon. Is Harry home?\"\n\n\"No, he at some meeting,\" she replied and then glanced around. \"I'm glad you came- you got a minute?\"\n\nA few minutes later, Harry's mother told Saul her concerns.\n\n\"I'm tellin you because you're his friend and maybe he talks to you. I don't know what he into, but he's so mad all the time. Don't get me wrong, he helps like he always did; but he ain't the same.\"\n\n\"I know,\" Saul commiserated, \"I see the same thing. I'll try to talk to him the next time I see him.\" He didn't have the heart to tell her that her son was involved in criminal activity. Harry's mother thanked him and saw him to the door. \n\n\"I wish that he could go to school,\" she said before she said goodbye. \"He's so smart.\"\n\nSaul agreed but didn't tell her about Noah Jackson. It wasn't for him to do. He walked back home with a heavy heart. He knew deep in his soul that he had lost a friend.\n\n*****\n\nIsadora changed clothes three times before putting on the pale yellow dress that she had started out with. Maeve sat on her bed rolling her eyes as Isadora changed back into the dress. What she wanted to know was what the big deal was. She was almost positive that there was a man involved, but Isadora had adamantly denied it. Maeve believed her-almost. She was going to the church picnic with Isadora and hoped to see who it was that she was getting dressed up for. Maeve was surprised at the invite to the picnic, but hid it. Ernie was going to spend the evening applying for residency programs which left her free. Even if he hadn't been busy, she wasn't going to miss the chance to see who had caught her friend's eye.\n\nFinally Isadora was ready- Maeve thought. When she started to change her clothes again, Maeve spoke up.\n\n\"What's his name?\"\n\n\"Who?\" Isadora asked.\n\n\"Don't hand me that,\" Maeve scoffed. \"You're acting like I do when I'm getting ready for a date with Ernie.\"\n\n\"Speaking of Ernie, what's happening with you two?\" Isadora asked seizing the opening that Maeve gave her.\n\nMaeve wasn't fooled and called Isadora on it. \"Don't change the subject- who is he? Is he tall, dark and handsome? Is he a student? What does he do for a living? Is he okay with you being a book worm?\"\n\nIsadora didn't answer. She picked up her sweater and walked out of her room leaving Maeve sitting on the bed.\n\n***\n\nThe back yard of the church was decorated with balloons and brightly colored ribbons. The tables were already set up and covered with white tablecloths. The food table was already laden with food and more was coming. Saul helped wherever he was needed earning several sincere smiles of thanks. He felt Lucas Newton's eyes on his back but ignored him. As he worked he kept an eye out for Isadora. He had already picked a table out for them to sit at if he could get to her first.",
        "He was coming out of the back door when he saw her and Maeve walk into the yard. He barely gave Maeve a glance as his eyes were on Isadora. He liked the way the pale yellow dress contrasted with her smooth, dark skin. A thought began to creep into his mind and he stopped it before it took hold. He handed the box that he was carrying to whoever walked by and began to make his way to Isadora. However, before he was halfway across the yard; Lucas was already talking to Isadora. Not to be deterred, Saul continued on his way not stopping until he reached the small group.\n\n\"Hello Isadora, Lucas\" he said with a smile that reached his eyes. He almost shouted with happiness when Isadora turned away from Lucas and gave him a full smile.\n\n\"Hello Saul,\" she said in that low husky voice that made his knees weak. \"This is my friend Maeve.\"\n\n\"Hello,\" he greeted with a nod of his head. \n\n\"Saul is going to be starting classes soon,\" Isadora explained.\n\n\"Really?\" Maeve asked. \"What will you be studying?\"\n\n\"Eventually I hope to go into the ministry,\" Saul replied ignoring the glare that Lucas gave him.\n\n\"Interesting,\" Maeve commented as she looked at Isadora. So this was him, she thought to herself. On the face of it, she liked Saul much better than she did Lucas and it had nothing to do with skin color. The black man who had introduced himself as Lucas Newton didn't feel real to her. His presentation seemed fake. It was as if he was trying to be someone that he wasn't. Maeve had the feeling that the man really didn't care about Isadora or her plans but she didn't know why he would pretend until she met Saul. He was competing with Saul only because he was white. This, she thought was the real deal when Isadora introduced Saul to her. She had only just met him, but there was something about him that she liked. Maybe it was the way that he spoke softly or... the way that he looked at Isadora. The man was head over heels in love with her best friend! She wondered if Isadora knew, but suspected not. It was time to have a talk with her friend, but not before she talked to Saul.\n\nLucas listened without comment. He was seeing what Maeve was seeing and not liking it. He was forced to ask himself the question- what he would do if he had managed to sway Isadora his way. Marry her? No- he couldn't and he wouldn't. Isadora Hughes was too independent for him. He had meant it when he made the comment about her staying home and having babies. As much as he hated the idea of a white man wanting and having a black woman, he didn't hate it enough that he was willing to take his place. He slipped away without saying anything. There were other women who were much better marriage material than Isadora Hughes.\n\nSaul felt it when Lucas symbolically called 'uncle' and smiled. It was far from over, but his main competitor was out of the picture. As far as he knew, there was no one else interested. It was time to take a small step forward.\n\n\"Isadora, would you and your friend care to sit with me?\"\n\nTime seemed to stop as Isadora considered her answer.\n\n\"We would love to,\" Maeve replied for the both of them. \"Lead the way.\"\n\n\"Isadora?\" Saul asked wanting her to have a say in the matter. \"Is that alright with you?\"\n\nIsadora hesitated for a few seconds before nodding her head yes. Maeve and Saul both breathed a sigh of relief. Whether she knew it or not, that was when Isadora began to truly fall for the tall white man from South Carolina.\n\n****\n\nTheodore Ellis was a very unhappy man. Not only was his political career not going as well as he had hoped, his wife was demanding more of him sexually. It seemed that the further the pregnancy went, the more demanding she became. If he came home late in the hopes that she was asleep, she would be awake with her legs spread wide open when he walked into the bedroom. The sight of her nude body almost made him sick. She was no longer accepting the excuses that he was too tired and pestered him until he gave in. To complicate things even more, she had refused to get rid of the maid. To compensate for his attraction to her, he often spoke to Millie harshly even though she had done nothing to deserve it. But at night.... At night when his head was between his wife's thin, pale thighs; it was Millie that he thought of. It was Millie that he was sliding in and out of and Millie that he shot his seed into. He didn't understand it. Prior to her, he had never thought of being with a black woman in a sexual way. So why her? It was a question that he asked himself every time he saw her and every time he sated his perpetually horny wife. Every time he looked at Hazel, he wished that she and the kid were gone.\n\nReminding himself that they were a means to an end was no longer effective. He wanted to crawl out of bed, go to the bathroom and wash the taste of her out of his mouth. At the time he had been eating her out, he had been fantasizing that it had been Millie, but now reality was lying on the bed to the right of him and its taste in his mouth. The sounds of her soft snores grated on his ears and nerves. The sight of her huge white belly nauseated him. Unable to stand it any longer, he slowly crept out of bed and went to the bathroom. He brushed his teeth, took a shower and went to his office locking the door behind him. That he wore nothing but a towel didn't bother him. He was comfortable with his body even though he hated sharing it with the nympho as he had taken to calling his wife in private.\n\nHe looked at the letter on his desk not believing that he had forgotten to open it. Then he remembered why. He had been practically raped as soon as he walked into the house. He sat at his desk and opened the letter. He skimmed down the page looking for a signature becoming curious when there was none. He looked at the envelope and frowned when he saw that there was no return address on it. He almost threw the letter in the trash, but something told him to read it.\n\n\"Warden Ellis,\n\nYou don't know me, but I know you. I was a prisoner at your fine establishment when that whole Jacob Lincoln thing went down.\"\n\nEllis's heart raced as he continued to read the letter.\n\n\"Now, I'm no fan of the black man, but we both know what you did was murder. Actually, you killed two men-Lawrence Goodman and Jacob Lincoln. I know that you think that you got away with it-maybe you did, but then again; maybe you didn't. It may surprise you to know that people actually care enough about that black man that they're asking questions. Do you know what will happen to your political aspirations if it comes to light that you facilitated murder? Hell- forget about your political aspirations... your life as you know it will be over. You may even get to occupy the same cell as Lawrence did. Imagine living out the rest of your days with the men that you once lorded over- how long do you think you would last? I can see the headlines now- former warden incarcerated for murder- body found burned to a crisp.\"\n\nEllis stopped reading. Suddenly a life with Hazel and their brat didn't seem so bad. He fought his panic and continued to read.\n\n\"Here's the thing, I have proof of what I'm telling you. I can prove that you helped Jacob Lincoln kill Lawrence Goodman. The question is how much are you willing to pay for the proof? I'm sure that you think that I'm shitting you, but I'm not and as a measure of good faith- I'll tell you who I'm not. \"I'm not that kid that you let out early so don't go bothering his family- they don't know anything. By the way, that kid should have never gone to prison- his father was a bastard. Now, Teddy; watch your mail.\"\n\n\"Shit...\" Ellis whispered. \"Shit.\"\n\nHe ignored the jiggling of the door knob to his office glad that he had locked it. He ignored Hazel's stupid question as to whether he was in there. Who the fuck did she think was in there? After several minutes of calling his name and jiggling the doorknob, she went away. Ellis spent the rest of the night trying to figure out who the letter had come from. His one and only suspect had been eliminated. Then he had a horrifying thought. If one person knew, then so did others and one of them would be believed even if he managed to get rid of the writer of the letter. For the first time in his life, Theodore Ellis, aspiring governor was afraid.\n\n*******\n\nNick checked his brief case several times and counted the envelopes. Satisfied that he had more one for each person involved, he closed it and put it by the door to the garage. Hana was packing up the egg rolls that Patricia always requested for the family gatherings. When she was done, Nick swept her up into his arms and kissed her. He hadn't even told her about his surprise. It was an easy secret to keep since Hana avoided anything political. Her time in prison and then the internment camp had done that. The only person that wouldn't be able to take part in his surprise was Hiroshi. He and Nick had already talked and both decided not to take the risk. The only thing that marred Nick's mood was the fact that the case against Ellis was moving so slowly. The longer it went the more the chance that he would get wind of the fact that he was being investigated went up.\n\n\"Nick?\" Hana called bringing him back from his thoughts. \"Why are you taking your briefcase?\"\n\n\"Oh- I have some papers for Will to look at and I don't want the kids to get into them,\" he lied. He kissed her again and put her on her feet. \"Do we have time for a fast one?\" he asked suddenly horny.\n\nHana blushed, but didn't say no.\n\n\"I'm taking that as a yes,\" Nick said as he picked her up and carried her to his office. Minutes later he was sitting behind his desk, pants around his ankles with Hana firmly impaled on him with her arms around his neck. He pressed his lips into her shoulder and lightly bit down. Hana jumped and then ground down hard against him. Hana came with a low moan with him following her seconds later. It wouldn't be the first time that he wished that he was a much younger man. They cuddled for a few minutes and then got ready to leave. As he loaded the car, Nick planned when he was going to make his big announcement.\n\n****\n\nFlorrie was having the time of her life. Not one cross word had been spoken by and to anyone and she loved it. She watched as an adult gently corrected Marie when she got a little too rambunctious. If Marie would have been at her house, she would have had a sore bottom and a bruise to go along with it. The other thing that she noticed was Marie's hair. It was fixed with two neat braids that hung down her back. Unconsciously she touched her dirty blond hair and wished that it looked as nice as Marie's did. She blinked back tears when she remembered that in a few hours; all that she was experiencing would be nothing but a memory.\n\nAbby watched the girl and took note of her wistful expression. She left her chair and went over to her.\n\n\"Hello, my name is Abby; what's yours?\"\n\n\"Florrie.\"\n\n\"Is that short for Florence?\" Abby asked.\n\n\"It was my grandmother's name- is Abby short for something?\"\n\n\"Abigail although I don't like it much,\" Abby replied.\n\n\"It's prettier than Florrie.\"\n\n\"I happen to like the name Florence,\" Abby said as she sat in the chair next to Florrie. \"There was a very famous woman by the name of Florence- do you know who she is?\"\n\nFlorrie forgot about Niko and his promise to bring her a cookie and a drink when Abby began telling her about Florence Nightingale.\n\n\"She was real?\" Florrie asked awed.\n\n\"She was,\" Abby confirmed. \"She was a very strong woman- someone to look up to. The next time you're in school, ask your teacher about her.\"\n\nNiko came back with the promised drink and cookies. \"I'm sorry that I took so long,\" he said. \"I spilled the drink and dropped the cookies. I had to go back.\"\n\nAnother first. A sincere apology. Her father had apologized many times but he had never meant it. Here was Niko apologizing because he took so long bringing her a drink. As much as she hated knowing that the day would end, she couldn't wait to tell her mother that things didn't have to be the way they were. They didn't have to be scared of being hurt, they could be happy like Niko's family was.\n\nFlorrie took the offered snack and smiled at him before saying thank you- that was the one thing that her father enforced; good manners. Niko sat next to her and watched her from the corner of his eye. Her questions about his family had concerned him. He had always felt some concern for her, but today it was worse. The joy of having her at the house was diminished by the concern that he didn't understand. His parents felt it too- he saw it in their faces and somehow that scared him more than what he felt. He was going to say something when Nick's voice boomed across the yard.\n\n\"If I can have everyone's attention!\"\n\nThe chatter died and everyone looked toward Nick.\n\n\"I need everyone to come closer so that I don't have to shout!\" \n\nNiko looked at Florrie and took her hand. For just a moment, Florrie didn't move. Finally she allowed herself to be led to where Nick was standing. When everyone was surrounding him, Nick spoke.\n\n\"I have good news for Kenji, Hana, Hiroshi and Dai. The Walter-McCarran act has passed. What that means is that the four of you are able to become American citizens.\"\n\nHana, Dai, Hiroshi and Kenji looked at each other speechless. Kenji was usually up on what was happening politically, but lately he had been far too busy.\n\n\"I have the papers here for you to fill out...\"\n\nSuddenly, everyone was talking at the same time. Patricia hugged Kenji, Hana and then Dai. After the briefest of hesitations, she hugged Hiroshi who to her surprise; hugged her hard. John, Patricia's father watched as his daughter hugged the man that had planned her death and felt a small amount of guilt. It wasn't just because guilt that he hadn't forgiven Hiroshi, it was guilt because he had turned her away when she had needed him the most. He released Hattie's hand, walked over to Hiroshi and extended his hand. Patricia and Hattie looked at each other and smiled. John had finally let go of the old hatred.\n\nThe picnic which had been waning now had a new energy. The women were sitting together already planning the celebratory party. Kenji pulled Nick aside and asked about Hiroshi.\n\n\"Is it wise that he do this?\"\n\n\"No it isn't,\" Nick replied, \"and he knows it. He won't apply-there's too much of a chance that someone will realize who he was.\"\n\nKenji was relieved and turned to the next topic at hand-Florrie. Nick listened as Kenji told him of his suspicions. Nick was silent for a long time before he replied.\n\n\"I understand what you're saying, but unfortunately there's nothing that I can do from a legal standpoint unless the mother comes forward, but Kenji; there are other issues. Chances are she doesn't work- who will support her and the girl? How will they survive if he goes to jail? Does she want to leave?\"\n\n\"There is nothing?\" Kenji asked.\n\n\"Kenji, it hasn't been that long since women were allowed to vote- look, I know that this is hard and I know that you want to help; but right now, there's nothing that we can do until...\"\n\n\"He kills her,\" Kenji said softly.\n\nNick didn't know what to say. The fact of the matter was that Kenji was right. The man wouldn't be charged until he killed the girl, the woman or both of them. Then the question would be why she didn't go to the police. The thing that really stuck in his crawl was that if the woman made a pre-emptive strike to save her and her child, it was over. She was going to prison. \n\n****\n\nFlorrie's parents were an hour late in coming to get her. To Florrie it was bitter-sweet. It gave her another hour of peace, but it also prolonged the agony of going home. She and Niko were playing in the living room when the car peeled into the driveway. \n\n\"What on earth is that?\" Abby asked.\n\n\"That's my dad's car,\" Florrie replied softly. Reality was back.\n\nAbby stood up when the Florrie's father laid into the horn. She went out to the driveway and stood there looking into the car. She could see a woman that she assumed was Florrie's mother slouched down in the seat as if hiding in embarrassment. Finally the woman got out of the car and hugged herself.\n\n\"I'm sorry we're late- is Florrie ready?\"\n\nAbby eyed the woman for several seconds before replying.\n\n\"She's ready, why don't you come in for a moment? I believe we packed up a box of left overs for you.\"\n\nFlorrie's father laid on the horn again and gave Abby an angry, impatient stare.\n\n\"We need to get going, but thank you.\"\n\n\"I insist,\" Abby said reaching for the woman. \"It won't take long.\"\n\nBy this time, Florrie's father was out of the car. His face was red with anger at being made to wait.\n\n\"Go on in there and get her! The card game starts in an hour- shit!\"\n\nFlorrie's mother glanced at her husband and followed Abby into the house. She noticed how the woman guarded her left side and knew that she had been hit. She felt a pain in her own side as she remembered her time with her husband. Now that she had the woman in the house, she didn't know what to do. She looked around for Nick and caught his eye. He looked at her and made his way to her.\n\n\"Nick this is Florrie's mother- I'm sorry, I didn't get your name.\"\n\n\"Ruthie.\"\n\n\"Ruthie, this is my friend Nick, he's a lawyer....\"\n\n\"I don't need a lawyer,\" the woman said clearly panicked. \"Where's Florrie? We need to get going.\"\n\nShe walked away calling Florrie's name. Abby grabbed the box of food from the table and followed her out of the house. \"Wait!\" she called, \"your food!\" Florrie's mother didn't stop. She grabbed Florrie and hurried out of the house. She opened the back door of the car, pushed Florrie in and quickly got in behind her. Abby watched helplessly as the car pulled away. She didn't hear Kenji come up from behind her, didn't know that he was there until he spoke.\n\n\"Nick says that there is nothing that we can do.\"\n\n\"Yes there is,\" Abby said. \"We got you and Hana out of that camp didn't we? If we could do that, then we can help them.\" Just saying the words made Abby realize what her problem was- she needed to be needed. Kenji and Patricia no longer needed her as they had before. They loved her, but they didn't need her. Florrie and her mother had just become her next mission. \n\nShe turned around, looked at Kenji and gave him a big smile which he returned. This was the Abby that they hadn't seen in a long time. She started to go to the house and he stopped her.\n\n\"Patricia told me of your past- it has no bearing on how we feel about you. Please- let us know how we can help you with your mission.\"\n\nAbby hugged him in relief, but she wasn't going to involve them in her plans to help the Lanes. They had more than enough to on their plates. She thanked Kenji and followed him back to the house with a spring in her step. Someone needed her even if they didn't know it.\n\n****\n\nSaul made Isadora and Maeve sit while he went to get them something to drink.\n\n\"He's cute,\" Maeve said as soon as they were alone, \"and he likes you.\"\n\nIsadora ignored her and looked around. She wasn't going to have this conversation with Maeve or anyone else she decided when she saw Bella and a few other ladies smiling at her. Besides, there was nothing to discuss. Saul came back with the drinks and served Isadora first. She gave him a small smile and murmured a quiet thank you. When it came time to eat, they went up together, but he made Isadora go first, then Maeve before helping himself. He kept the conversation at the table superficial when he really wanted to know everything about Isadora. He wanted to know what her plans were, her hopes and dreams, but more importantly; he wanted to know what happened to her.\n\nShe had a 'tell' as Jacob would say. It was an almost imperceptible one, but it was there. He saw it each time they met. Her eyes would shift just a little to the right before she looked at him. After a minute or two, she was fine. He wondered if Maeve knew anything and decided not to ask. Whatever it was, it had to come from Isadora. He looked at Isadora, noting the fullness of her lips. He wondered what they would feel like pressed against his. He tried to remember the last time he kissed a girl and found that he couldn't unless the stolen kiss from Nina Willows counted. He shifted in his chair and forced himself to think about something else.",
        "After the main meal, Isadora offered to get dessert for them. When Saul offered, she waved him away. He couldn't help it, he watched her as she walked away. He watched the gentle sway of her hips as she walked to the dessert table and couldn't wait for the day that he would be able to put his hands on them and hold her close to him.\n\n\"She's a looker isn't she?\" Maeve asked with amusement.\n\n\"What? I...\"\n\n\"Give it up, you like her,\" Maeve said. \"It's written all over your face, in fact; you more than like her. Look, I don't know you; but I like you. I think that you're honest so I'm going to be honest with you. Isadora is like a sister to me and I will hurt anyone one who messes with her. If you like her than fine, but so help me; if you...\"\n\n\"Wait,\" Saul said holding his hands up. \"I don't know what...\"\n\n\"Don't be stupid and ruin my impression of you,\" Maeve interrupted. \"You're in love with her. Any idiot can see that. I just had to give you my best friend speech. Now- something happened to her. I don't know what, but I have my suspicions and no I'm not going to share them. You're the first man that I've seen her get dressed up for so that says something. I'm telling you this so you'll know that you have to be careful with her.\"\n\nSaul nodded. He had been right- something had happened. The first thing that came to his mind was the unthinkable. He tried to discount the thought, but it wouldn't go away. Deep in his heart, just as he knew that he was going to marry her, he knew that someone had hurt her.\n\n\"Thank you, I'll keep that in mind.\"\n\n\"So when are you going to ask her out?\" Maeve asked.\n\n\"I thought...\"\n\n\"I said to be careful, not wait for the second coming,\" Maeve said cutting him off. \"So?\"\n\n\"I don't know,\" Saul confessed.\n\n\"Alright,\" Maeve said in a rushed whisper, \"here's the plan- there's a gathering at school next week. I'll get Isadora there and you meet us there. It's at six by the library- can you make it?\"\n\n\"I... I'll be there,\" Saul replied deciding not to look a gift horse in the mouth.\n\n\"Good- it's Friday night at six.\"\n\nIsadora came back with the desserts and gave Maeve a suspicious look.\n\n\"Ohhh apple pie!\" Maeve exclaimed and took a plate out of Isadora's hand. \"Oh by the way, I invited Saul to the social next week. I thought that it might be a good idea for him to meet some of the other students. I already got a ticket for you. I'll pick one up for him on Monday.\"\n\nIsadora looked from Maeve to Saul and then back at Maeve. \"He can have my ticket...\"\n\n\"Oh no you don't,\" Maeve cut in, \"you promised and if you don't go, Saul will feel like a third wheel- Ernie's going too.\"\n\nSaul sat back and watched. He wasn't about to let an opportunity to spend an evening with Isadora pass even if it was a set up and they were with other people. He watched as a look of resignation crossed Isadora's face.\n\n\"Fine, but I won't stay for the whole thing; I've got studying to do.\"\n\n\"Fine,\" Maeve said claiming the small victory.\n\nSaul felt as if he was floating on air. They weren't going out on what he would call an official date, but it was close enough. He barely tasted the pie that he was eating; his mind was on the next week. Isadora gave him a quick glance and looked away. He was handsome she thought- there was no denying that and she liked his gentle spirit, but... he was white, he was male and she couldn't and wouldn't be distracted from her goals.\n\nSaul openly watched her. He could see the uncertainty and then resolve in her face. He was in for a fight, but he didn't mind. Anything worth having was worth fighting for and Miss. Isadora Hughes was more than worth it. When she looked at him, he smiled reassuringly and said something that he hoped would relax her.\n\n\"Maybe we can take a tour of the school- I don't know where anything is.\"\n\n\"That's a great idea!\" Maeve chimed in. \"Let's meet at five instead of six. Isadora, I'll pick you up at quarter till five.\"\n\nOnce again Saul intervened. \"Is that a good time for you?\" he asked Isadora.\n\n\"That's fine,\" she replied quietly, she couldn't wait to get Maeve alone. She had a few things to say to her.\n\n*****\n\nMai sat on her bed staring at the wall. Was this really happening? Was her father really going to force her to marry his business partner? The answer to both questions was yes. In less than forty-eight hours, she would be married to a man that she didn't know unless she could stop it. But how? What could she do to make herself less desirable to the older man picked out for her? She thought about what she knew about him which wasn't much. Appearances mattered to him- maybe she could use that. Slowly a plan began to form. She undressed and got into bed. She needed to be rested if she was going to follow through with her plan.\n\nA light tap on her door woke her early the next morning. She ignored it and turned over. When the door opened, she sat up. Ani stood in the doorway holding a tray with tea on it. \"We must talk.\"\n\n\"I have nothing to say to you,\" Mai said coldly. \n\n\"Mai- I didn't know about the marriage! I thought...\"\n\n\"And if you had known?\" Mai asked icily, \"what would you have done? Nothing is what! You would have continued to be the perfect, dutiful daughter. Ani- get out.\"\n\nInstead of leaving, Ani stepped into the room and closed the door behind her. She sat the tray on the dresser and walked toward Mai. Mai blinked at the anger she saw in Ani's usually soft eyes.\n\n\"This is your doing!\" Ani hissed. \"Shotaro finding another is your doing! How dare you make this my fault! I will not accept the blame for your mistakes and impulsiveness! I will not accept the blame for what is happening because you were too afraid to walk away. You gambled and you lost! All you had to do was marry Shotaro- what arrangements you made between you would have been between you- do you understand what I am saying? He was your way out of this life that you claim to hate so much! You could have married and then after a period of time parted ways. Here is my suggestion- do as father wishes. Ito san seems to be a reasonable man. Perhaps you will come to love him. Don't make the same mistake that you made with Shotaro.\"\n\n\"Get out,\" Mai said as she turned her back on her sister.\n\nAni didn't move right away. She didn't tell Mai that she had tried to talk to their father against the wishes of Jiro- she knew what she would say; it was too little too late. She was right Ani realized. Still, she had tried and she had warned Mai several times. In her mind she had done all that she could without getting into trouble herself.\n\n\"Ito San is coming for lunch- be ready,\" Ani said as she stood up and walked out leaving the tea behind.\n\nMai lay on the bed rethinking her plan. It could backfire and she could make things much worse. On the other hand, what was the worst that could happen to her? Her father would disown her; she would never see her niece or nephew and she would be penniless except for what she had in the bank and in her purse. Was her freedom worth the consequences? Yes she decided, it was. Ani, she decided was right- she had been too afraid to leave.\n\nShe left the room, went to the bathroom and took a shower. Afterwards she went back to her room and drank the now cold tea. By this evening, if all went well; she would be a free woman. Poor, but free. When it was time to dress for lunch, she put on her western clothes knowing that she was expected to dress in a kimono. Her heart hammered when her father tapped on the door before unlocking it. If he came in, it was over. He would make her change while he stood watch. \n\n\"Come out,\" he said gruffly and walked away.\n\nMai took a deep breath to steady her nerves and left the room. All conversation stopped when she walked into the living room. She almost turned around when she saw the look of rage on her father's face. Tamayo Ito looked at her impassively but said nothing. He wanted to see what was going to happen next.\n\n\"You will go change,\" her father said quietly, but the anger was evident in his voice.\n\n\"No.\"\n\nAni gasped in shock, Jiro's mouth fell open and her father was so angry that he couldn't speak. Mai's behavior was beyond disrespect- it was open defiance. Of the three of them, only Tamoya understood what was happening and he rather liked it. He was going to enjoy teaching Mai what her role as his wife was going to be.\n\n\"Come, sit with me,\" he said gently. \n\nMai looked at him. Even though his tone was gentle, it held a firmness that dared her to defy him. Instead of taking the offered seat, Mai sat across from him. She saw a flicker of anger in his eyes although the smile remained on his face.\n\n\"Mai...\" her father said.\n\n\"No matter,\" Ito said still looking at Mai. \"We will have plenty of time to become acquainted with each other.\"\n\nA chill ran through Mai when she heard those words. This man who appeared to be kind and soft spoken was anything but. If she married him, she was doomed. The life that she wanted would be forever out of her reach. She also knew that she would be watched like a hawk. The reality of her situation was beginning to sink in. She wished that she had made the effort to get to know Shotaro. She wished that she had never laid eyes on Kenjiro Takeda. Her list of regrets grew, but the worst regret was that she hadn't listened to Ani. If she had, she would have done things differently.\n\nLunch was a long tortuous affair. Ito was looking at her with lust in his eyes and more of his true personality was emerging. If Mai thought that her father was cold and unbending-Ito was worse. He too believed in the old ways and that a woman's place was at home serving her husband and giving him strong children; especially sons. With every word that he spoke, Mai saw her medical career and life slip away.\n\nIto left shortly after lunch but would be returning for dinner. The wedding was scheduled for the next day and if she was going to do anything to stop it; it had to be now. As soon as Ito was gone, Mai dropped to her knees at her father's feet.\n\n\"Father-please don't make me do this! I am sorry for everything that I have done. Release me from this marriage and I swear to be the dutiful daughter that I have never been.\"\n\nHer father looked down at her and backed away. \"It is much too late for that,\" he replied. \"You have defied me for the last time.\"\n\nMai crawled to him and wrapped her arms around his legs. \"Papa-please! Forgive me! I will do whatever you want and without complaint, but don't make me marry him!\"\n\n\"It is done,\" he replied as he firmly removed her arms from around his legs and walked away leaving her on the floor with tears streaming down her face.\n\n\"I hate you!\" She screamed after him. \"I hate all of you!\"\n\nShe angrily shrugged Ani's hand off of her shoulder and got to her feet. She ran to her room with Ani close on her heels. Ani slipped into her room just before the door closed.\n\n\"Get out!\" Mai screamed. \"Get the hell out of my room!\"\n\nAni was shocked. She had never heard Mai curse in anger, but that didn't change the fact that she was told to stay with her. \n\n\"I am to stay with you,\" she replied softly. \"We fear for your mental state.\"\n\n\"Now you are concerned?\" Mai asked while laughing bitterly. \"Do you know what you can do with your concern?\"\n\n\"Mai- it will be alright, just do as you are told...\"\n\n\"Do you understand what is happening here?\" Mai asked. \"Father has gotten rid of his problem child. That man- Ito san will take away my career and the life that I want. He plans to bend me until I am the perfect wife! He plans to keep a child growing in my belly until am too old to carry them. This is what you helped father do so keep your concern.\"\n\nAni didn't know what to say. To some degree what Mai said was true, but the majority of what was happening lay on Mai's shoulders. She suspected that Mai knew this and a good part of her anger was because of that knowledge.\n\nAni stayed with Mai until it was time for dinner. Their father had arranged for someone to come make the evening meal. Mai was going to dress in western clothes again, but Ani managed to talk sense to her.\n\n\"Do as you are told,\" she urged. \"Maybe father will change his mind.\"\n\nMai put on the kimono with tears in her eyes. Her father wasn't going to change his mind. There was too much involved with money being the least of them. When they went to the dining room where the men were waiting, Mai noticed that her father visibly relaxed. Ito had a look of satisfaction on his face, but didn't speak. Like before, she didn't speak unless spoken to and answered the questions in short sentences. After dinner the men retired to Jiro's office to talk business leaving Ani and Mai alone.\n\nIt was during a conversation with Ani that Mai thought that she had another way to save herself.\n\n\"The first time that he enters you will be painful. Try to relax and it will get better. After that it will become pleasurable.\"\n\nMai stared at Ani wondering why she hadn't thought of it herself. She practically ran from the dining room and into Jiro's office without knocking. The men looked at her and then at each other.\n\n\"Ito san, I must confess something to you,\" Mai said breathlessly. She could almost taste her pending freedom.\n\n\"I am listening,\" he said his tone cool. He didn't like interruptions especially when they were rude.\n\n\"I cannot lie to you- I... I have been compromised. I do not come to you untouched.\"\n\n\"Jiro,\" Mai's father said, \"you will please excuse us.\"\n\nJiro left albeit reluctantly. He wanted to see how this played out.\n\n\"Explain yourself,\" Mai's father demanded.\n\n\"There is nothing to explain,\" Mai said. \"I am no longer pure.\"\n\n\"Were you forced?\" Ito asked.\n\nMai thought about her answer. If she said yes, then he might overlook the fact that she wasn't a virgin. He would also demand a name from her. If she said no, he would consider her a slut and back out on his agreement to marry her.\n\n\"No, I gave myself willingly.\"\n\nMai couldn't look at her father nor was she prepared for the unexpected feeling of shame that she felt. She winced when the word \"slut\" flew from her father's mouth. Ito, however; seemed unaffected by her revelation. He knew exactly what she was up to and had to admire her drive. He also knew that her father was waiting for him to refuse to marry her and so was she. She was hoping for it. When her father started to speak, Ito silenced him by holding up his hand.\n\n\"I see,\" he mused. \"How long ago was this indiscretion?\"\n\n\"Not long ago,\" Mai lied.\n\n\"How long ago was this indiscretion?\" Ito asked again his tone daring her to lie.\n\n\"Last week,\" Mai lied.\n\n\"I see... who was the man?\"\n\n\"I.... just someone that I met at the hospital...\"\n\n\"You are lying,\" Ito said coldly. \"You may be telling the truth about the indiscretion, but you are lying as to when it happened. There is one thing that you will learn about me- I do not suffer liars. I will still marry you although you are not as your father said. I do this as a personal favor to him because of our friendship. Leave us and prepare for our wedding.\"\n\nMai couldn't believe it. He was still going to marry her! She knew what her mistake was- she had taken too long to answer the questions and she hadn't thought it through. She should have taken the time to think about the questions that he would ask. She had come across as desperate and panicked and Ito had seen through it. She passed Jiro as she went to her room where Ani was already waiting for her.\n\n\"Mai...\"\n\n\"Shut up Ani,\" Mai said as she undressed and put on her nightgown. \"I have nothing to say to you.\"\n\nMonday morning came too quickly as far as Mai was concerned. The smell of cooking food nauseated her. In a matter of hours, she would be married and if Ito had anything to do with it, she would be pregnant by the end of the honeymoon. Her one hope was that he wouldn't be as virile as he looked or that his seed was dead. The thought of him touching her made the nausea turn into a bout of vomiting. Ani sat by and watched her not saying anything.\n\nMai stumbled from the bed, to the hallway and into the bathroom. As she washed her face and rinsed her mouth, she saw the straight razor on the shelf. It belonged to her father. Ironically it was a gift that she and Ani had given him for one of his birthdays. She picked it up and looked at the blade. As always, it was honed to its maximum sharpness. She made a cut in her thumb and watched the blood flow from it. She turned toward the bathroom door, was about to lock it when Ani stepped in.\n\n\"What are you doing?\" Ani asked and then she saw the razor. \n\nMai began to cry as Ani took her last means of escape from her hands. Ani was conflicted. For Mai to consider harming herself proved how truly distraught she was. She thought about helping Mai and almost gave in when she saw the look of misery on Mai's face, but once again, the part of her that was the dutiful daughter won out.\n\n\"Take a shower and pull yourself together,\" Ani said not realizing how much like their father she sounded.\n\n\"Ani- please- help me,\" Mai begged. \"Don't let him do this to me! Help me escape!\"\n\n\"I can't, now get into the shower and I won't say anything about what you were going to do.\"\n\nMai's eyes hardened and her body stiffened as she stared at her sister.\n\n\"This will be the last time that we speak,\" she said her tone low and intense. \"You are no longer my sister.\"\n\n\"Mai...\"\n\nMai turned her back to Ani, stripped and got into the shower without saying another word. She didn't speak when she got out of the shower or when she went back to her room. As far as she was concerned, she had no family.\n\nTwo hours before the wedding, Mai was being carefully painted white from head to toe. Her father had decided that the wedding would performed in the Shinto fashion. He was trying to make a point- Mai hadn't missed it. The headpiece that he chose was also to make a point. Instead of the wataboshi, a white hood; he chose the tsunokakushi. Its purpose was to hide the bride-to-be's horns of jealousy and to symbolize her intention to be an obedient and gentle bride. The Kimono had been worn by her mother and Ani but instead of the tsunokakushi; they had worn the wataboshi.\n\nShe had envisioned herself getting married, but not like this. Kenji came to mind and she pushed him away. He was partly why she was in this mess. No-he wasn't she amended. She was in this mess because she put herself there, but that didn't mean that she deserved what was happening to her. She stood still as Ani painted her and then helped her dress. Her father, Tamayo and Jiro were already at the Shinto shrine waiting for them. The driver that her father had hired was waiting patiently by the car. Mai entertained thoughts of trying to get him to take her elsewhere, but reality set in. If Ani wasn't with her, there was a slight chance she might have succeeded.\n\nAni stood back and surveyed her work. Mai was a beautiful bride. She would be even more beautiful if she would at least pretend to be happy. Ani sighed and made no comment. Mai wouldn't have responded. She ushered Mai to the living room, picked up their bags and helped her into the car. Mai's face had a stony expression on it as she stared straight ahead of her.\n\nThe car parked in front of the Shrine- a ride that seemed far too short for Mai. The driver got out, opened the back door and assisted Ani who then assisted Mai. Mai tried to bolt, but Ani had too firm of a grip on her arm and the driver was behind her blocking her path of escape. She wouldn't have gotten far anyway, but she had to try.\n\nLess than an hour later, Mai was married to Tamayo Ito. She spoke to no one until it was time to leave. Tamayo had informed her during the reception that they would not be returning to Jiro's home- they would be leaving immediately for their honeymoon and then to Boston. She started to object, but bit her tongue when she saw the look in his eyes.",
        "Before they left, Ani, Jiro and her father stood before them. Mai looked each of them in the eyes for several seconds before she spoke.\n\n\"Anata wa subete no watashiniha shinde iru- you are all dead to me. Ko o nozoku dare mo watashi ni hanashikakenai kamo shirenai- no one but the child may speak to me. He is an innocent.\n\nAni felt as if she had been sucker punched. She knew that Mai had been angry, but to pronounce them dead? She had hoped that once the wedding took place and Mai grew accustomed to the idea, that she would see that they did what they thought best. That they were looking after her welfare as she seemed incapable of doing so for herself. She thought that Tamayo would allow Mai to finish her residency- apparently; she was wrong. She was beginning to see that she had been wrong about a few things. It had taken losing Mai to make her see that. The question that she asked herself was this- if given the chance, would she have done anything differently? Sadly the answer was no. Right or wrong, she would have done the same things. It wasn't her place to change or question things but- if that was so, then why did she feel so horrible?\n\nThey watched as Mai followed Tamayo to a waiting car. It would be the last time that they would see Mai for a long time.\n\n*****\n\nNiko was worried. It was Wednesday and Florrie hadn't been to school since the picnic at his house. He tried to hide his concern but it finally got the best of him. During the recess period, he went to the teacher.\n\n\"Mrs. Randall?\"\n\n\"Yes Niko? She asked as she began to grade papers.\"\n\n\"I'm worried about Florrie...\"\n\nAt this she looked up from her papers. The truth was, she was worried too. Florrie was one of her best students and had never missed more than one day.\n\n\"I'm worried too,\" she confessed. \"I'll go check on her after school today, how's that?\"\n\nNiko nodded eagerly, his anxiety slightly eased. He wondered if he should tell the teacher about Florrie being hurt. If he did, he might get into trouble, but if he didn't then no one would help her.\n\n\"Mrs. Randall- I-I think that her father hurts her.\"\n\n\"Maybe she's sick,\" she replied. She had the same suspicions, but she wasn't about to tell a child that. The problem was, if that was the case; what could she do about it? \"I'll stop by her house after school. I'm sure that she's alright and will be back tomorrow. Why don't you go play and try not to worry.\"\n\nNiko walked away not at all convinced that Florrie was alright. \n\nAs Mrs. Randall thought, Florrie was at school the next day. She was quiet and didn't return his smile and happy greeting.\n\n\"Florrie? Are you alright?\"\n\n\"I'm fine... I forgot to thank you for letting me come to your house.\"\n\n\"You're welcome- I hope that you can come again.\"\n\nFlorrie didn't reply. She couldn't bring herself to tell Niko that her father had finally gotten a job and that they would be moving to Texas. She forced herself to smile and tagged him.\n\n\"Tag! You're it!\" and took off running.\n\nBy lunch, she was back to her cheerful self. She wanted her last hours of school to be happy ones. At the end of the day, she had no choice but to tell Niko that she was moving.\n\n\"Where?\" Niko asked thinking that she was moving to another house.\n\n\"Texas, my father got a job in the oil fields. He said that things will get better now that he has a job. He promised not to hurt us anymore.\"\n\nEven at his young age, Niko didn't believe it even though he didn't know why. Unashamed, he allowed a tear to escape. Florrie had been his first true friend and now he was losing her. Not only that, he had become her protector at school. No one teased her and called her names like 'Oink' or 'fatso' or 'piggy'. Who would protect her at this new place?\n\nWhen Florrie's mother came to get her, she gave Niko a sad smile and thanked him.\n\n\"You've been a good friend to my Florrie- thank you.\"\n\nNiko sadly watched as Florrie and her mother walked away. \"Niko?\" Abby called from behind him, \"What's wrong?\" \n\nShe listened as Niko told her about Florrie's leaving.\n\n\"When are they leaving?\" Abby asked.\n\n\"Today was her last day,\" Niko replied.\n\n\"But she didn't say when they were leaving?\"\n\n\"No,\" Niko replied miserably.\n\n\"Let's get you home,\" Abby said. Her mind was already going at a hundred miles an hour. \"What's your teacher's name? Randall isn't it?\"\n\n\"Yes...\"\n\n\"Good,\" was all that Abby said under her breath as she helped Niko into the car. She didn't know what she could do, but she had to do something.\n\nThe next morning, Abby was at the school early hoping that Mrs. Randall was early. It wasn't too long before the teacher arrived at the school. Abby introduced herself and asked for a moment of the teacher's time.\n\n\"What are you proposing?\" Mrs. Randall asked when Abby was through. \"Legally there isn't much that we can do.\"\n\n\"I'm well aware of that,\" Abby replied, \"but what if we got her mother to leave her here?\"\n\n\"And then what? Who will take care of her? Where will she live?\" Randall asked. \"And what about her father? I went to the house to check on things and I swore that he was going to hit me.\"\n\n\"I'm not afraid of men like him- I was married to one. As far as where Florrie will stay, she can stay with me. I live alone and it'll be nice to have a youngster around.\"\n\n\"What is it that you want me to do?\" Randall asked.\n\n\"Go with me, help me convince Florrie's mother that it's in Florrie's best interest that she stay here. After she agrees, I can take things from there.\"\n\n\"Why are you doing this?\" Randall asked. \"What's in it for you?\"\n\nAbby smiled remembering being asked the same question several years before. Then the answer had been it was because no one should be kept from the one that they loved. Now it was because she had seen something in the little girl. She saw an intelligence that mirrored Patricia's and given the chance, the girl could go far.\n\n\"Will you help me?\" Abby asked after answering the question.\n\nAfter thinking about it for several minutes, Randall agreed; but with one stipulation. She wanted a male nearby in case things got out of hand. Abby agreed, but the only person that she could think of was Nick. After promising to take care of it, Abby left. She felt absolutely wonderful.\n\nShe went to Nick's office hoping that he would be in and not in court. He wasn't in, but Will was.\n\n\"Abby!\" he said surprised to see her, \"what brings you here?\"\n\n\"I was hoping to talk to Nick; do you know when he'll be back?\"\n\n\"He's in court, but he shouldn't be long. Is there something that I could help you with?\"\n\n\"Well-maybe...\"\n\nShe explained the situation and told him what she hoped to accomplish.\n\n\"You'll need the father's permission as well,\" Will told her.\n\n\"I don't think that he'll give it,\" Abby murmured. \"Isn't there anything that we can do?\"\n\n\"Legally no, all I can say is that you need his permission in writing. Are you going to see this family alone?\"\n\n\"No-Florrie's teacher is going with me and she wants a man to go along. I was going to ask Nick if he was available.\"\n\n\"If he can't then I will,\" Will said. \"I agree with the teacher. This man sounds volatile. I'll draw up some papers for them to sign. It won't take long if you want to wait.\"\n\nAbby decided to wait for the papers. Besides, she still needed to talk to Nick- it wouldn't hurt to have back up. He arrived almost thirty minutes later as surprised to see her as Will had been. She quickly explained the situation and waited for his response.\n\n\"Will is right- the father has got to agree as well, but let's say that he does; Abby are you ready for a child? I know from Kenji and Patricia that your time won't be your own...\"\n\n\"Nick,\" Abby said firmly, \"what in the hell am I doing now? I help Kenji and Patricia, but other than that what am I doing with my time? This little girl and her mother need help. Are you going to help me or not?\"\n\nNick blew out a breath, thought for several seconds and then finally agreed. For one, he knew that Abby would go with or without him and secondly; he understood what was happening. \n\n\"I'll meet you at the school at four, but Abby if they refuse, then it's over.\"\n\n\"I understand,\" Abby said. \"Will is coming too.\"\n\n*****\n\nFlorrie tearfully packed up her few belongings. The plan was to leave first thing Saturday morning. What she didn't understand was why she couldn't go to school for the last day. She pushed as far as she dared stopping when she saw the nervous tic in her father's jaw. It became more pronounced when her mother lobbied on her behalf. Suddenly, Florrie understood something. Things weren't going to change no matter how much money they had. Her father would always be the grown up version of the bullies at school.\n\nTears welled in her eyes as she thought about school. It had become the only place where she felt truly safe and that was because of Niko. She would be going to a new school where she knew that she would be teased because of the dirty blond color of her hair and her chunkiness. Maybe she could ask her father about not going to school. She hadn't been teased in so long that the thick skin that she had developed had grown thin. The bottom line was this- she didn't want to leave but what could she do?\n\nTo cheer herself up, she thought about the picnic at Niko's house. She was still amazed at the amount of love and affection that she saw. Her mother hadn't believed her when she told her about it.\n\n\"Nobody acts like that,\" her mother said. \"They just pretended because you were there.\"\n\n\"No mom- it was real! Niko's dad called Niko's mom Kirei- it's Japanese for beautiful. His dad served his mom and ...\"\n\n\"I don't believe it,\" her mother interrupted gently.\n\n\"I asked Niko if his dad ever hurt him and he said no... Niko doesn't tell fibs- he says that it's wrong.\"\n\nRuthie Lane looked at her daughter and smiled. She didn't dare dream of a life where she could be cared for like that. It wasn't going to happen. It hadn't happened for her mother or her mother before her. If there was one thing she wished for Florrie, it would be that. She would sell her soul if it meant that her baby girl wouldn't have to live the life that she did.\n\n\"Of course he doesn't lie,\" Ruthie said softly, \"he's a good friend.\"\n\n\"Mom? Why is daddy so mad all the time? I try to be good and to do as I'm told.\"\n\n\"It isn't us,\" Ruthie replied. \"Your daddy loves us, but he isn't a happy person. Just remember that you're a good person no matter what your daddy or anyone else says.\"\n\nFlorrie replayed that conversation in her head a thousand times and clung to the part that she was a good person. As far as her father loving them, she had never really believed it. After spending the day with Niko and his family; she knew that it wasn't true. Her father didn't even like himself; how could he like anyone else?\n\nWhen she heard her mother puttering around the kitchen, Florrie went to help her. As far as she was concerned, this was the worst part of the day. Her father's mood was dependent upon several things- if food was cooking, if there was a beer waiting for him and if he had won at cards. If none of the above happened, they were in for a hard night. If all of the above happened; all would be good. If only one of the things happened...\"\n\nFlorrie checked the fridge relieved that here were two bottles of beer sitting on the shelf. She touched one to check the temperature grateful that they were cold. She hurried to set the table and made sure that the bottle opener was next to her father's plate. The biscuits were already to go into the oven- there were extra for the ride to Texas and the chicken was ready to fry. Her mother had made extra of everything for the trip. There wouldn't be extra money to spend on food and other luxuries. They weren't even going to stay in a hotel-they were going to drive straight through.\n\nDinner was barely on the table when he walked in. Both Florrie and her mother froze and moved closer to each other.\n\n\"How are the two prettiest girls in California?\" he boomed when he walked into the kitchen. \"Supper sure smells good! You made extra didn't you? We can't afford to be spending money on food.\"\n\n\"I made extra,\" Ruthie said softly pulling Florrie closer to her not trusting her husband's good mood.\n\n\"Good, let's eat and hit the sack, I want to be out of here before the sun rises.\"\n\nJust before six, there was a tap on the door.\n\n\"You were expecting someone?\" He asked suspiciously.\n\n\"N-No,\" Ruthie stammered. \"I don't know who it is.\"\n\nMichael Lane stood up from the table and went to the door.\n\n\"What do you want?\" he asked when he saw Mrs. Randall and Abby at the door.\n\nRandall was nervous, but Abby wasn't. She looked up him and smiled sweetly.\n\n\"We heard that you were moving and wanted to talk to you about Florrie and her future. May we come in?\"\n\nMichael Lane stepped back and let them in. He didn't see Nick and Will until it was too late.\n\n\"On second thought,\" he said, \"let's keep this outside. The house is a mess with us moving and all.\"\n\nAbby could see Florrie and her mother standing behind him with anxious expressions on their faces.\n\n\"I would like to speak to your wife and Florrie as well,\" Abby said.\n\nMichael smiled down at her revealing the charmer that he could be if he chose so. \"They're busy getting ready to go. What do you want?\"\n\nAbby looked at Randall and nodded. It was time for her to make her pitch.\n\n\"Mr. Lane- Florrie is one of my best students. She's to the point where she is making friends and becoming more confident in herself. I think that a move would be detrimental to her at this point. I suggest letting her finish out the school year...\"\n\n\"Uh huh and where is she supposed to stay? Who's going to feed her? In case you haven't noticed she isn't a little girl. What about her clothes?\"\n\n\"That's where I come in,\" Abby said. \"I live alone so I have plenty of room. I also have no other dependents so I can afford to give Florrie whatever she needs. I agree with Mrs. Randall- Florrie is exceptionally bright. A move right now may not be in her best interest.\"\n\nRuthie moved closer so that she could hear the conversation. She could hardly believe it; someone was offering to take Florrie. If Florrie stayed she would have a chance at a good life.\n\n\"Michael? Maybe we should think about it. \"We can go to Texas, find a place and come back to get her. It'll be easier that way.\"\n\n\"Mom...\"\n\n\"Shush Florrie,\" Ruthie said realizing that she was fighting for Florrie's future.\n\n\"Did you know about this?\" Michael asked as he turned to look at Ruthie. \"Did you set this up?\"\n\n\"She knew nothing about it,\" Abby said drawing his attention away from his wife. \"Mrs. Randall and I talked and thought that we could be of some help. As your wife said, it would be easier for you to find a place to live and to get settled without a child.\"\n\nMichael didn't buy it and looked at Florrie. \"What you been saying girl?\"\n\n\"N- no-nothing daddy, I promise,\" Florrie replied with a tremor in her voice. She watched as the good mood that her father had been in slowly turned into a dangerous one. It was turning into one that would have her hiding under her bed.\n\nHearing the change of tone in Michael's voice, Nick and Will stepped forward.\n\n\"Who in the fuck are you?\" Michael demanded angrily.\n\n\"Friends of the ladies who happen to be attorneys,\" Nick said as he stepped closer. \"There's no need to get angry, they're only trying to help...\"\n\n\"Who asked for their help?\" Michael asked, \"I sure as hell didn't, now get the hell off my porch!\"\n\n\"Michael- wait,\" Ruthie said. \"Let her stay, we'll save money that way too. It's only for a few months. I can get a job and help out. Please let her stay.\"\n\nFor just a minute, Abby thought that he was going to agree. So did Ruthie, she began to push Florrie toward the door when he spoke.\n\n\"Get the fuck off my porch before I call the cops.\"\n\nHe started to close the door, but Abby stuck her foot in. \"May I at least say goodbye to her?\"\n\nReluctantly, Michael Lane moved aside so that Florrie could get by him. Abby knelt in front of the girl and took her chubby face in her hands.\n\n\"Florence Lane, you are a beautiful little girl who is going to grow up to be a beautiful woman. One day you're going to make your mark on the world just like Florence Nightingale did. Don't let anyone tell you that you're not special and if they do; don't believe it.\" Abby slid her hands from Florrie's face, to her arms and took her hands in hers. She pressed a small piece of paper into her hand and then hugged her. \"You call me collect if you ever need me and I'll come get you- I promise.\"\n\nAs if sensing what Abby was saying, Michael grabbed Florrie and pulled her back. He gave the group standing on the porch a final glare and slammed the door shut in their faces. Abby stared at the closed door and then began to pound on it.\n\n\"Abby, let's go,\" Nick said as he tried to pull her away.\n\n\"I know that you hit her!\" Abby screamed through the door. \"You beat your wife too you miserable son of a bitch!\"\n\nNick picked Abby up, carried her from the porch and hugged her. He didn't know what it was about that little girl that made her react so strongly, but it didn't matter. She was right, Michael Lane was hurting his family and there wasn't a damned thing that he could do about it.\n\nNick took Abby home, while Will drove Mrs. Randall back to the school. He didn't know what to say to her. I'm sorry didn't seem adequate or appropriate. If he had had his way, he would have beaten Michael Lane so badly he would never want to hurt another person, but he couldn't. He was an officer of the law.\n\n\"This is wrong,\" Abby said softly. \"No man should be allowed to hurt his family.\"\n\nNick didn't say anything- he agreed.\n\nThe next morning Abby drove to Florrie's house hoping that they hadn't left yet. If they hadn't, she was going to try again. As soon as she pulled up, she knew that they were gone and that they had probably left not long after they did. She hoped that Florrie would remember what she told her and that she would use the phone number if she got into trouble. Now she had to tell Niko that she had failed. Florrie was gone.\n\n*****\n\nSaul changed his shirt four times wishing that he knew what Isadora's favorite color was. Finally he decided to go with a white dress shirt and dark slacks. He ran his hands through his dark hair that had just been cut by Cora. \"This isn't a real date,\" he murmured and then he grinned. \"Of course it is- we're just not alone.\"\n\nAs he finished dressing, thoughts of Harry crept in. What would he say about his interest in a black woman? Would he be placed on the list of those that Harry hated? He had tried several times to catch Harry at work, but had either just missed him or Harry was avoiding him. He suspected the latter. Saul was almost certain that Harry's mother had told him that he had come to the house looking for him. He sighed. The time to talk to Harry was getting short unless he kept going to his house. In two weeks his job at the train station would end and he would be a full time college student. His stomach did a flip at the thought. He had never imagined anything like this happening. He had never imagined falling in love with a woman of color either, but yet; both of those things had happened.\n\nThe more he thought about it, the more he realized that maybe things were meant to happen as they did- definitely not killing his father or going to prison, but the rest of it- he was convinced that he would still have met Jacob Lincoln or someone like him and he would still be here getting ready for a date with the woman of his dreams. He was tempted to set a goal of when he would go on a date alone with her, but nixed the idea. He would go as slowly as she needed him to. He could and would wait for her. He had the feeling that she would be well worth the wait.",
        "He was at the library early. He didn't want to miss a minute of being with Isadora. Isadora, Maeve and Ernie walked up a few minutes after he got there. Isadora was dressed in a light blue dress with white sandals. To Saul she was the most beautiful woman in sight if not the world. His father used to feel that way about his mother, but that was before he began to drink and became an abusive brute. As Isadora walked toward him, Saul wondered how she would react to the news that he had been imprisoned for murder. He hoped that once she heard the circumstances that she would understand. He hoped that she understood that he would do it again if need be to protect her and his family. That prompted another thought- his family and their reaction.\n\n\"Saul,\" he muttered, \"you're getting too far ahead of yourself.\"\n\n\"Hi Saul,\" Maeve greeted when they finally reached him. \"This is Ernie, Ernie this is Saul Mullins from South Carolina. He'll be starting classes in two weeks.\"\n\nSaul and Ernie shook hands and assessed each other before relaxing. Ernie saw that Saul was no more interested in Maeve than he was interested in Isadora. It wasn't that he didn't think that Isadora was pretty, she was; but not his type.\n\nMaeve took charge of the tour and made sure that Isadora had to walk with Saul. By the end of the tour, Isadora had relaxed enough that she and Saul were talking freely. It helped that all of his questions pertained to school. During the social, Maeve introduced Saul to a few of the students that would be in some of his classes. One of them was a pretty brunette who tried to latch onto Saul by offering to help him study. Maeve looked over at Isadora to see what her reaction was. \"Aha!\" She thought when she saw Isadora's eyes squint. She looked at Saul to see how he was handling the blatant flirtation. She was impressed with how he gently put the girl off. \"Yep,\" she thought, Saul Mullins had it bad.\n\nAfter the social, Ernie drove Saul and then Isadora home. He waited in the car to give Maeve and Isadora a few minutes for girl chat and then lightly tapped on the horn. He still had several applications to go through. He had only agreed to go to the social because he and Maeve hadn't spent any real time together and that concerned him. A lot of things about their relationship concerned him and at some point, they needed to talk.\n\n****\n\nIsadora went into the house hoping to sneak into her room unseen. She knew that Bella had wanted to talk to her ever since the picnic and so far, she had managed to avoid her.\n\n\"Did you have a nice time?\"\n\n\"Yes, it was fun,\" Isadora replied as she headed for her room.\n\n\"Isadora, sit down for a minute,\" Bella said, \"I want to talk to you.\"\n\n\"I really need to...\"\n\n\"It won't take long, I promise,\" Bella said as she patted the empty spot next to her on the couch. When Isadora was sitting, Bella took her hands in hers. \"Honey, people are talking about you and the white boy. Most don't care- they like him, but others...\"\n\n\"There's nothing to talk about,\" Isadora broke in.\n\n\"Isadora, are you really that na\u00efve? That boy is in love with you- anybody with half a brain can see it.\"\n\n\"He doesn't even know me!\" Isadora exclaimed. \"And I'm not interested in him or any other man.\"\n\n\"Why is that?\" Bella asked. \"I've told you before that I know that something happened to you and I can even guess what it is, but Isadora at some point you're going to have to share it with someone.\"\n\n\"What does he have to do with this?\" Isadora snapped.\n\n\"Nothing or maybe everything,\" Bella replied. \"All I know is what I see and I'll tell you something else that I see... you like him. If you didn't you wouldn't have taken so long to get ready...\"\n\n\"So?\" Isadora retorted.\n\n\"Isadora, aside from whatever your issue is- why are you so afraid of this man?\"\n\n\"I'm not... it's just that he's white and....\"\n\n\"And what?\" Bella asked. \"The last I knew white people had the same body parts as black people or any other people for that matter. As far as him not knowing you, you haven't given him a chance.\" \n\n\"Why are you so concerned about this?\" Isadora asked.\n\n\"My concern is for you,\" Bella replied. \"Like him or not, but if you decide not to get to know him; ask yourself why. If it's because he's white- then ask yourself since when do you care what people think? If it's only because he's a man, then ask yourself if it isn't time to put those demons of yours to rest. If it's because you're simply not interested; then fine and douse the fire before it gets any bigger.\"\n\nIsadora pulled her hands from Bella's and looked at her. She knew that Bella was right about the demons in her, but she needed them. They were the fuel that kept her going. Whenever she got tired and thought that she couldn't possibly read another page or write another word, all she had to do was close her eyes and think about them-specifically him. The one she was sure made her...\n\n\"Bella, thank you for your concern, but I'll be fine.\"\n\nBella noticed that she avoided the topic of Saul but didn't press. She had gotten out what she wanted to say. Isadora went to her room, changed clothes and sat down to study. She found that she couldn't focus because the conversation with Bella wouldn't let her be. She had to admit that she knew that Saul was interested in her, but in love with her- unlikely. He was just another white man drawn by the taboo of wanting to be with a white woman. Even as she thought it, she knew that it wasn't true, but it suited her purpose to believe that it was. She forced herself to go back to studying although she was more than prepared for the upcoming exam. Within a few minutes, she was immersed in her studies. Thoughts about Saul and the conversation with Bella faded away as she read the text.\n\n****\n\nSaul floated on air. In his mind the evening had been a resounding success. The only down point had been when the brunette openly flirted with him, but that had been easily dealt with. He did notice that Isadora had been watching through squinted eyes. She was jealous! She might not have acknowledged it, but she was. That told him what he wanted and needed to know- Isadora liked him in spite of her act of indifference.\n\nHe was in the process of changing clothes when Reggie called through his door, \"You've got company!\"\n\nSaul frowned, who would be coming to see him at nine at night? His frowned turned into a smile; it had to be Harry- who else could it be? He quickly finished changing and rushed out to the living room. Harry was sitting on the sofa holding a glass of juice in his hands. Saul thought that he looked nervous and wondered why. He had eaten plenty of meals at the house. It was an observation that he tucked away for possible use.\n\n\"Harry! It's good to see you...\"\n\n\"Why are you looking for me?\" Harry asked icily. \"I told you that you're safe, now what do you want?\"\n\n\"Why do you think that I want anything?\" Saul asked staring into Harry's eyes, \"In all the time that we've known each other, have I ever asked you for anything? I was looking for you because you're my friend even if you no longer consider me yours.\"\n\nHarry visibly jerked. Saul was his friend and always would be, but he could only do so much to keep him safe.\n\n\"Saul-you don't understand...\"\n\n\"Understand what? That you're part of a group that condones criminal activity? I understand that you think that you're doing it for the right reason, but Harry-robbing people no matter what the reason is wrong and you know it. How long will it be before someone is accidentally killed or hurt?\"\n\n\"Listen to Mr. College man,\" Harry scoffed. \"You sit there and talk about right and wrong, but look at you- nice clothes, plenty to eat. You can go any place you want because of the color of your skin. Things need to change and if we have to kill to make it happen, then we will.\"\n\nSaul stared at the young man before him. This wasn't the same man that he had become friends with at the train station. That man hadn't been so bitter and angry. That man wouldn't have entertained the thought of hurting anyone. When had that man disappeared?\n\n\"This isn't you,\" Saul said softly. \"The Harry that I knew wouldn't do what you're doing. You're angry and rightfully so, but... Harry- what happened? When did you decide that it was alright to rob and possibly hurt innocent people?\"\n\n\"I always felt that way,\" Harry replied defensively.\n\n\"Liar,\" Saul said quietly. \"If you continue this, you will get caught. If someone dies, you could go to prison for the rest of your life. Is that what you want? I can tell you from very personal experience that you don't want to go there. For as tough as you think you are- there's someone tougher. It's a dangerous place that I survived only because someone took me under his wing. Harry- there's another way- the right way. It will take time, but don't all things worth fighting for?\"\n\n\"We're tired of waiting,\" Harry replied.\n\n\"We?\" Saul asked, \"Are you talking about those thugs that I see you eating lunch with? Harry wake up! They don't care about what's happening around them- they're in it for the money and nothing else. Harry- there's a way out of this, but you've got to leave that gang. There's a way that you can make a difference in a more positive way.\"\n\n\"Sure,\" Harry said as he laughed. \"There's a tooth fairy and a Santa Claus too.\"\n\nSaul heard the hope and uncertainty in his voice and made a decision. Noah Jackson might be angry about it, but his friend's life was at stake.\"\n\n\"Harry, there's a man that can help you. In fact, he was part of the reason that I was looking for you. He wants to talk to you.\"\n\n\"Why would a white man want to help a black man?\" Harry asked. \"What does he get out of it? My undying loyalty and I call him Massa?\"\n\nSaul was taken aback by the loathing that he heard in Harry's voice.\n\n\"Not all white people hate black people and vice versa,\" Saul said. \"Look at where I am. These people have treated me as if I was family-hell; they are family. I would fight for them as I would my birth family. But you're wrong about the race of the man that wants to meet with you. His name is Noah Jackson and he's a black man. All I'm asking is that you think about what you're doing and that you meet with him-unless you're too chicken to hear what he has to say.\"\n\n\"I'm not afraid to meet with anyone,\" Harry said taking the bait.\n\n\"Good...\"\n\n\"After I meet with your friend, I want you to stay the hell away from me. I don't want you at my house and I sure as hell don't want to talk to you at work-got it?\"\n\n\"I got it,\" Saul replied. He had done what he could; he could only hope that Harry saw reason before it was too late.\n\nAfter Harry left, Saul stayed where he was for a long time thinking about the conversation with Harry. It could go either way. He went to his room, knelt by his bed and began to pray for his friend. He ended the prayer with prayers for his family, friends and Isadora asking for guidance on how to reach her and for patience. When he was done, he got lay on his bed and began to read.\n\n*****\n\nOne month after filling out the forms, Hana, Kenji and Dai prepared to become among the first of the first generation Japanese to become American citizens. Kenji was dressed in a dark suit with a small American flag pinned to the left lapel of his suit jacket. Hana and Dai were dressed in western clothing wearing an American flag pin on the left lapels of their sweaters. In fact, all of them were sporting the American flag pin even the children. Patricia felt a relief that she didn't understand at first. Then she understood. Kenji couldn't be taken away from her ever again. Him, Hana and Dai would be afforded the same rights as those born American. She wished that there was something that they could do for Hiroshi, but she understood why he didn't want to take the risk.\n\nAs they were getting ready to leave, the telephone rang. Patricia wasn't going to answer it, but remembered that Abby had given Florrie Lane their number in case she needed it. She told Marie to go to the car and went to answer the phone.\n\n\"Hello?\"\n\n\"I would like to speak with Nick Alexander- it's important a soft female voice said urgently.\n\n\"Who is this?\" Patricia asked her voice terse.\n\n\"I don't have time for this, is he there or not?\"\n\nPatricia hesitated before responding, \"hold on.\"\n\nNick was helping Hana into the car when Patricia called him.\n\n\"There's someone on the phone for you- a woman. She says it's important.\"\n\nNick finished helping Hana into the car and took off into the house at a run. When he got to the phone, all he heard was a dial tone.\n\n\"Shit,\" he muttered. "
    ],
    "authorname": "kalamazoo707",
    "tags": [
        "japanese male",
        "black female",
        "racism",
        "forced marriage",
        "drama",
        "romance novella",
        "interracial romance",
        "historical"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/i-will-love-you-forever-pt-2-ch-20"
}