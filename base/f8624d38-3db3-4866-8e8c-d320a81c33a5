{
    "title": "Great Anal",
    "pages": [
        "Anal sex is one of those things that in general men love, and women put up with, but that isn't always the case. Sometimes if you're just in the mood it can be incredibly pleasurable and oh so naughty. It seems that more often than not it is the discomfort factor that puts most women off anal sex. A lot of this is caused by either lack of knowledge, or not taking enough time over it. You see women in porn films taking a huge cock straight into their ass without any sort of preparation....trust me, it doesn't happen like that. I need at least twenty minuets of foreplay and a lot of lube before I feel ready to take a cock in my ass. It did take me a while to be able to truly enjoy anal, without feeling too much discomfort, but it's definitely worth taking some time to go used to. \n\nThe key is to take it slow, and have some good toys to start off with. If your lady is willing and relaxed then you shouldn't have too many problems. Make sure the room is warm and comfortable and you have plenty of lube to hand. In my experience, the best position to start off in is on your back, with your legs up and spread as wide as you can. It also seems to help if you're propped up on some pillows. I like to start with a toy of some sort, a small butt plug or dildo makes it easier as you have more control. Just take it nice and slow, stopping at any discomfort, then proceeding slowly. Some women like to have their clits played with, sometimes I love this, and other times I'd rather just focus on what I'm doing. Personally I like to start out playing with the butt plug myself, my boyfriend just watching. I find it easier knowing I'm in complete control and that I can stop at anytime. Make sure you have the butt plug well lubed, and just move it gently, a little deeper each time. It will get to a point where you almost have the whole butt plug in, and the widest point is stretching you open, this is when it can be easy to get a bit worried as it can become a little uncomfortable. Either stop for a little while before continuing, or just hold it and you'll feel it starting to pull in of its own accord. Don't panic and try to pull it out, just relax and once it slips right in it feels a lot better. By this point you feel really full and it makes me oh so horny. I frequently can't resist sucking my boyfriends cock at this point, getting him really hard for what's to come next.\n\nOnce I feel comfortable and ready, I find that the best position for anal penetration is to have the man lying on his back and the woman on top, facing him. Many women will probably disagree with me, but it seems to work for me. Just going slowly, I am in total control in this position. On my knees I position his cock head against my ass and push gently until it slides in, covered in plenty of lube of course. Since I've already been playing with the butt plug I usually have no problems taking most of his length quite quickly. Being in this position means that not only am I in charge, but the angle in perfect to take my boyfriend as deep as possible. \n\nPushing deeper now, but feeling only a little pain thanks to the toys earlier, I take him half way in. You could always go back to the toys if you don't feel ready to take him deeper, or let him play with his fingers. Usually I start bouncing slowly on his cock, which always drives him insane and feels pretty damn good to me too. I tend to start playing with myself at this point and as I do I start to take him deeper, reapplying lube as needed. Still moving up and down on his cock he starts to get incredibly hard and I find it hard to stop him thrusting back into me, which can cause some pain if you're not expecting it. I generally put one hand on his chest to hold him back until I feel ready to take him all the way. So slowly I sink all the way down onto his cock and just hold it there until I become accustomed to it. By this point he's going totally insane and any hope I had of hold him back is gone, my pussy is drench and I can't hold back either. Playing with myself, he is now holding my hips and thrusting deep into my ass, where he shoots his load as I start to cum oh so hard. Amazing. \n\nGot to be in the mood, but when you are it can't be beaten. "
    ],
    "authorname": "Always_loopy",
    "tags": [
        "anal how-to",
        "butt plug",
        "anal sex advice",
        "sex advice"
    ],
    "category": "How To",
    "url": "https://www.literotica.com/s/great-anal"
}