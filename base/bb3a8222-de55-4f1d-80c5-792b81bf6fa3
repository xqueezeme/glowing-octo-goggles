{
    "title": "Mike & Karen Ch. 07",
    "pages": [
        "Disclaimer: All characters are 18 years of age or older while actively engaging in sexual activity. This story is a prequel/sequel (sprequel?) to my other work, Alex &amp; Alexa. As always, many thanks and gratuitous panty shots from Freja and Jeanie to my long-suffering editor and beta-reader for their assistance in polishing up and improving this work. Reviews are welcome; flames will be snickered at and deleted with extreme prejudice. Enjoy! \n\nPlease Note: There are incest themes with a secondary couple in this story. Just a forewarning. \n\n*** \n\nKaren sat in the middle of the bed, leaning back against the pillows propping her up and stretching her arms overhead, letting out a contented sigh. The motion pushed her magnificent breasts forward, although only she was really in the right state to appreciate this. On her left side, a young man with tousled blond hair lay still and stared blankly at the ceiling of the bedroom. On her right, a man with cropped brown hair seemed to be in a similar catatonic state. \n\n\"Goodness,\" she mused, putting her arms down into her lap and looking at them both with a smirk. \"Am I right in assuming this means that neither of you is up for Round Four?\" \n\nChapter VII - Oh, Frabjous Rapture! \n\nAlexa lay cuddled next to her husband, tracing a finger along his chest, following the path of his chiseled muscles. He wasn't as tall or as massively built as his father, Michael, but he had an impressive physique nonetheless. Alex was built like a gymnast, with broad shoulders, a tapered waist and strong hips and thighs. He shared his father's mane of wild blond hair, ice-blue eyes and infectious grin. \n\nThey also shared one other trait, but that didn't bear mentioning at the moment. She smirked and giggled, drawing his attention from gazing at the ceiling above. \n\n\"And what, O aunt-wife of mine, has piqued your amusement?\" he asked, his arms resting behind his head on the pillow and wearing a smirk on his handsome face. \n\n\"Just thinking about how good life is,\" she sighed contentedly. \"I'm madly in love with and married to the most wonderful man imaginable, I've rediscovered my family that I've been missing for nineteen years, my soul-mate and best friend lives nearby and is married to one of the most unintentionally funny girls to ever live, I'm acing my courses and we're having a Paris wedding.\" \n\nHe nodded and put an arm around her, pulling her close. He loved the feel of her lush, naked body next to his, inhaling her summery scent. There was no finer thing in the entire world. \"After the summer we had, maybe God decided we needed a little break, eh?\" \n\nShe kissed his pectoral and nodded, humming. \"So much of it brought on by ourselves, too. Kar agrees it's unusual, our situation, but now that she understands it, she's ferociously in favour of us as a couple.\" \n\n\"Yeah, dad's the same,\" Alex agreed. \"They're taking point on challenging the legal system about us getting married. I considered debating him on the necessity, but he'd already laid out the reasons for why he and mom should, and there was just no countering those points. God help the world if mom ever lets him become a politician.\" \n\n\"Well, Kar gave me the same line of reasoning, and I couldn't counter any of her points on the matter either,\" Alexa agreed, shrugging slightly. \"They're determined, and I guess we'd best let them. They're the most incredible people and couple that I know of; they're what I hope to be with you one day.\" \n\n\"If we're even a tenth of the couple they are when we grow up, we'll have done amazingly well,\" Alex quipped, grinning. \"They were always my model for who I wanted to be, no question.\" \n\n\"Well, as long as you don't end up the same size as my brother-in-law, then I'm good with it,\" she teased, reaching down now and stroking his cock. \"You're the same size as him where it counts, at least from my point of view.\" \n\nShe looked down now at her hand as she continued fondling her nephew gently, lost in thought. Alex indulged her, enjoying her attentions as always. It wasn't long before Alexa had moved down his body and replaced her hand with her skilled mouth, taking his tool between her wet lips and humming in pleasure as she bobbed up and down. Alex arched his back and curled his toes in response, enslaved to her sexual prowess. \n\nShe swirled her tongue around the throbbing head of his now hard cock, looking sideways at him and winking. Her hand followed her mouth up and down, making a gentle twisting motion on the shaft, which now glistened and throbbed in desire. Her free hand had already snaked down between her own legs and was churning in her gooey pussy. \n\n\"Mmmmm, mind if I ride top deck this time?\" Alexa purred, slowly pushing her body up and straddling her glorious body over his. Facing down his frame, she settled on top of him, his erection pressed flat beneath her. She looked back over her shoulder and smiled as she squirmed her creamy hips, dragging her slippery pussylips along his throbbing hard-on and making them both moan. Alex reached down and massaged her beautiful ass cheeks, gently pulling on them to give her a little stretch, the delicious sting making her shiver in delight. \n\nThen the time for teasing was over, and Alexa took his cock in her hand and pressed the head against her tight entrance. She sighed as she moved down slowly, the head penetrating her. Then she let gravity take over, and she sank onto his throbbing tool, and they both groaned loudly as she bottomed out on him. She felt so full and tight, an elation she would never tire of. \n\n\"Uhn ... I'm so in love with you, Alex ...\" she sighed as she began to move up and down slowly, leaning forward slightly so that her hands were resting on his powerful thighs. She loved this position, since his cock was naturally pulling back in the opposite direction from her tunnel when she leaned forward, so the head and the shaft hit and throbbed against all sorts of wonderful spots inside her. \n\n\"I love you too, Alexa,\" he breathed, still caressing her ass and pushing up and down with his hips gently. His cock seemed to be a perfect fit for her, and she certainly was for him. He reveled in how tight she was, her expert control over the muscle contractions that were always guaranteed to make him cum hard inside her. \"I have since the moment I laid eyes on you.\" \n\n\"Gnnn, I wanted you inside me,\" she panted, rocking now, her eyes closed. \"I wanted you in me from the moment I came through that gate, Alex, I couldn't fight it. I didn't want to. I just ... I knew deep inside that you were my destiny. My love ...\" \n\n\"Glad I wasn't alone in my feelings,\" Alex grunted, his thumbs gently caressing the little puckered knot just above her pussy while he fucked his aunt. \"I didn't have a chance.\" \n\nThe time for talking seemed past, and they lost themselves in pleasuring one another, a cycle of expert lovemaking between two people totally devoted to the other's pleasure. Though they hadn't been together much more than a single season, they knew one another, body and soul, and how to make each other feel like they'd died and gone to heaven. He pushed up and down while she rolled her hips in circles now, his cock almost inside her now. \n\nWhile there was certainly no rush anymore, the couple felt no need to prolong their lovemaking at this particular moment, either. Alexa was breathing heavily, a sheen of sweat on her glorious body, the hairline of her corona of golden hair damp from their exertions. Alex was feeling much the same, shivering as her hungry pussy swallowed his cock, squeezing around it at just the right time to keep the pleasure mounting. \n\nFaster and faster they fucked, panting and moaning as they careened toward their climax together. Alex was pushing a finger in and out of Alexa's behind while she skewered herself on his cock, making her whimper and shudder at the welcome sensation. \n\nShe was fairly bouncing on him as orgasm approached, the gasps becoming yelps and Alex groaned in unrestrained passion as he grabbed her waist and pulled her down onto him as hard as he could while pushing up with his hips. Alexa arched her back, keening as she tried not to scream, her teeth clenched, her golden hair cascading down her back ... \n\nThe young couple groaned together loudly as they came, his cock throbbing mightily inside her as he lashed her pussy with his pearly essence. Her womanhood clenched around him greedily, milking him for every last drop of his offering. Her hands were squeezing her opulent breasts, massaging them and pushing her even higher into the realm of utter bliss. Unreal colours scintillated around her, stars seeming to blink or pulse in time with the massive cock throbbing inside her. Limbs tingled and she felt as creamy as the cum deep inside her. \n\nAlex sagged back into the bed, sighing heavily, his hands caressing his aunt's shapely back. It never ceased to amaze him how hard this woman could make him cum, and he never tired of their lovemaking. He couldn't even conceive of such a thing. He worshipped everything about her and was devoted to her happiness and pleasure. Nothing else mattered to him in comparison. \n\nAlexa finally sighed in contentment and laid back on him, her legs still bent beneath her on either side of his hips. She was more than flexible enough that this was no discomfort for her, and she loved how the pull of her suddenly tightened pussy felt around his cock. She knew he loved the feeling as well. She purred as his strong hands came up to rest on her soft breasts, caressing them gently. They lay silently for some minutes, just content to enjoy their post-orgasmic bliss together. She turned her head to smile at him and rubbed her nose against his. \n\n\"God, Alex, you could make me give up even lesbian sex ...\" she murmured, her hand caressing his cheek now. He smiled and squeezed her breasts playfully, making her giggle. \n\n\"Well, no need to do that; I'd hate to be the reason Freja and Jeanie get cut off from you. They'd never forgive me.\" \n\n\"Oh, I don't think you need to worry,\" she whispered, nipping at his earlobe while she squeezed her pussy around him again. \"They'd probably hunt me down too. At least we'd die together.\" \n\n\"Raped to death by two crazed lesbians, I can see the headlines now,\" Alex muttered, eliciting a snicker from his aunt. \"Like I said, don't stop having tawdry lesbian sex on my account. To be honest, I rather enjoy it, even if I'm just watching, as opposed to participating.\" \n\n\"I promise to always make room for you, my love,\" she murmured against his lips, craving the touch of his body everywhere on her. \"To my dying day, my only purpose in life is to make you the happiest man alive.\" \n\nThey kissed lovingly, whispering to one another. They lapsed into silence again, with his hands on her breasts, and her hands over his. His cock finally softened, and she shivered as he slid out of her. Alexa immediately moved down to his waist and used her mouth to clean him of their mingled cum, until not a drop was left. She sighed in satisfaction and knelt up beside him, stretching her arms overhead and squeaking. Her magnificent breasts jutted forward, and she looked over, smirking as she saw her nephew staring at them in wonder. She wiggled them about for a moment and then flopped on top of him, sighing contentedly. \n\n\"I really am the luckiest aunt-wife in the entire world, you know that?\" she purred, rubbing her nose against his. \n\nAlex chuckled: \"You spend a lot more time thinking about our consanguinity than I do, at least, I think you do.\" \n\n\"You're my nephew and you're my husband, and you're perfect the way you are,\" she cooed, smiling dreamily. \"And just maybe I enjoy the taboo kink of it. But I'm something of a deviant, in case you haven't noticed.\" \n\n\"Well, you're no Freja Kjaer,\" Alex said, shrugging. \n\n\"Hey now, you take that back!\" she giggled. \"I am every bit the deviant Fre is, I'll have you know.\" \n\n\"Based on conversations I've heard you two having when you think no one is listening, I'm going to say that's a lie,\" Alex chuckled. \"Don't get me wrong, you're a deviant, no question, but she's the title-holder.\" \n\n\"Yeah,\" Alexa admitted, sighing somewhat forlornly. \"A girl can dream, though.\" \n\n\"D'you miss it?\" he asked gently, stroking her hair. \"The freedom to be completely wild and uninhibited, I mean. Not that I'm trying to keep you from misbehaving, mind, but I know things are somewhat different now by necessity.\" \n\n\"Oh, I think you always miss things you got away with when you were younger,\" Alexa mused, lightly kissing his fingers. \"Yes, getting fucked by two or three guys at once was fun, but I can simulate that by having you, Freja and Jeanie fuck me at the same time. And to be honest, Alex, it's all a very distant second to my feelings for you and how much I love to be fucked by you. If I had to choose between three dicks in me at once or just yours, it's a nolo contendere. Best believe it.\" \n\n\"I do,\" he replied, nodding. \"Same with me. If I had to choose between you and some harem fantasy, you'd always win.\" \n\n\"Well, Jeanie and Fre are happy to help with the harem fantasy, they both think you're the best guy ever,\" she purred, caressing his chest again. \"Hope you're enjoying it.\" \n\n\"What's not to enjoy when you're involved?\" he asked, pulling her up into a deep kiss. \n\n*** \n\n1986 ... \n\nBoth men were finally stirring, and Karen looked down at them, trying to keep the amusement off her face. The sheets were bunched at her waist, keeping her midriff and glorious breasts exposed. The air of the room was warm and rather cloying. To her, it smelled like sex had been had in here recently. Not recently enough, because she'd been sitting between these two for close to half an hour now, waiting to see if they'd recover. \n\n\"Welcome back to the land of the living, boys,\" she remarked lightly, reaching down and patting their arms. \"I was beginning to worry I might have killed you.\" \n\n\"Holy shit,\" the brown-haired one murmured at last. \"How the Hell?\" \n\n\"Beg pardon?\" she asked, putting a finger to her ear and tilting said ear down to him. \n\n\"You ... outfucked the two of us,\" he breathed, struggling to sit up now. \"I'd always heard you were some frigid, rich bitch and probably a lez.\" \n\n\"And what do we think now?\" she queried, still smiling. \n\n\"That you're a goddam succubus,\" he answered. \"You're a demon in the sheets.\" \n\n\"Well, I doubt my father or our minister would approve, but it certainly sounds better than being a frigid, stuck-up bitch,\" Karen said cheerfully, winking at him. \"Such a pity that your tank is empty, however.\" \n\n\"Hey now,\" protested the young man, righting himself in the bed. \"Just because I needed a breather doesn't mean we're done here.\" \n\nShe turned to look down at their blond partner. \"And you, Mitchell?\" \n\n\"If he's fuckin' able to keep going, so am I ...\" he grunted, also sitting up and then exhaling deeply. \"Not losin' out to him.\" \n\n\"I was not aware that winning and losing were notions involved in our troilism,\" Karen observed, smiling. \"It does please me, however, to know that our evening is not finished just yet.\" \n\nKaren then leaned forward and moved onto her hands and knees, crawling down to the foot of the bed. She smirked, because she could almost feel their eyes staring at her behind. She reached the bottom and deftly bent over the side, locking her ankles together. She heard one of them moan at the sight of her glistening pussy and her puckered knot, nestled between her perfect cheeks. \n\nHaving finished rummaging in her small bag she'd brought over, she came back up with a bottle of water. She turned and knelt, letting them watch her as she emptied the contents of the bottle before putting it aside. She smiled at them and pointed at her overnight bag. \n\n\"I brought bananas and walnuts,\" she mentioned. \"Would that help any?\" \n\n\"No,\" the brown-haired boy named Robert said, waving off her offer. \"Don't worry, you're gonna get your Round Four.\" \n\n\"Oh, frabjous rapture,\" Karen giggled, relieved her night was not already over. \n\n*** \n\nAngela Coulson was kneeling on her desk. Well, sort of kneeling. She was indeed on her knees, but also doubled over so that her breasts were squashed to the tops of said knees and her forehead was pressed to the wooden top of the oaken furniture. Her arms were pulled backwards and held tight, virtually immobilizing her as a huge cock slid in and out of her womanhood. She panted and stifled a loud groan, since anyone could still be walking by outside her office at this hour. \n\nBehind her, Mike indeed was holding her by her wrists, keeping her in place while he drove deep inside her pussy. The professor panted and squirmed, shuddering at the power of his body as he dominated her. The sound of his hips slapping against her ass echoed through the small office. He'd already made her cum three times, although she was quite easy to bring to climax. \n\nThere was no particular reasoning behind their dalliance, outside of both enjoying the sex - he was not taking any of her courses, and she was, seemingly, happily unmarried. So when she had approached him one night and slyly propositioned him, he saw no need to refuse the request. Their sex was pleasant enough, and while it didn't directly help his grades (like he needed the help), he imagined it never hurt to have the faculty look on him favourably. \n\nThe woman gasped and arched her back, shaking and mewling. He could feel her pussy clenching around him as she began to cum again, feeling her wetness on the front of his thighs. That was indeed one thing he enjoyed about Miss Coulson: it wasn't at all difficult to keep her wet, and she seemed to cum easily and hard if she was overpowered and dominated, something he could readily accomplish. \n\n\"Okay, okay,\" she gasped, squirming against him as much as she could. \"Go ahead and cum now, lover!\" \n\nMichael nodded, pulling harder on her arms and making her grunt as he stretched out her body and began pushing deeper inside her still. She gritted her teeth and groaned, loving the way his cock split her wide and pummeled the back of her cunt. Shaking and sweating, she gasped as he released her arms, which flopped to her side on the desk, his hand now holding her by her ass cheeks. \n\nShe dragged her tingling, numb hands up to her head, rubbing her face and slowly pushing herself up. She bit her lip as he fucked her hard, and she could feel him swelling inside her. \n\nThen the titan student pulled out of her and she quickly turned around, sitting on the edge of her desk. She took his throbbing cock into her mouth, humming as she sucked on it hungrily. She could only get about half of it in her mouth, but she bobbed back and forth, needing to taste him. He clasped her head and pumped against her face, finally cumming. The warm spunk surged down her throat, and she swallowed as much as she dared before popping her lips off his massive tool and enveloping it between her breasts. He pumped against her strongly while she massaged him, his cock still spurting and glazing her breasts in his pearly cum. \n\nMike sighed and relaxed as Angela squirmed her breasts against him, while also using her hand to help get the last of the semen out of him. She kissed at the head, cum still pumping from it, and she could feel it dripping down her body, onto her thighs and her crotch. Her own sigh of satisfaction followed his, and she lay back on her desk, her face aglow with her dreamy-eyed bliss. She rubbed her sticky breasts, smiling at him coyly and spreading her legs wider. Mike eased his cock back inside the professor, slowly pushing back and forth, letting them both ride out the waves of pleasure. \n\nShe watched as he closed his eyes, still deep in her, but seeming to pause. He then carefully pulled out of her and stood back before turning and walking over to the closet not far away. Opening it, he reached inside. There was something of a squeal and he hauled out a young, slender brunette woman, who was wearing a thin tank top and cut-off jeans, which were partially undone. ",
        "\"Did you know that you apparently teach a Voyeurism course?\" he grunted as he dragged the girl back to the desk and presented her to the professor. Angela sat up, seemingly unimpressed as the girl blushed furiously. \n\n\"Kim,\" she said sternly. \"What the Hell? This is not okay!\" \n\n\"I'm sorry, miss,\" whimpered the girl. \"I've known that you two were ... I just wanted to see, you looked so beautiful, please don't hate me!\" \n\n\"I don't hate you,\" the teacher almost purred as she took the girl into her arms. Mike's eyebrow rose as she kissed the new girl almost lovingly, seemingly not at all concerned about his cum getting all over her clothes. The girl kissed her back, almost desperately. \"Spying, girl?\" \n\nThe girl pulled back from the kiss, her face flushed and breathing heavily. \"I ... I've done it before, miss. I just had to see what you were doing, and I had to see him.\" \n\n\"Well, clearly I'm the interloper here,\" Mike observed, not at all concerned about his nudity in front of the new girl. \"And also not your only student tryst.\" \n\n\"No,\" the professor said, shaking her head. \"You're my only male student lover, though. And it's not as big a risk as you might think, DeBourne, especially if the students don't take any of your courses. You should remember that if you ever plan to teach.\" \n\nMike shrugged: \"Well, hello, Kim. I'm Mike.\" \n\nThe girl smiled shyly and nodded at him. \n\n\"So you intended to just hide in my closet and masturbate?\" Angela asked, making the girl blush again and look at the floor. \"You might've asked if you could join, you know. I doubt our friend here would object too much to having two girls at once.\" \n\n\"I'm sorry,\" Kim said quietly, still looking at the floor. \n\n\"Me too, because he just came, and none of it's in you,\" Angela pointed out. \"I guess your penance is going to be licking all his cum off of me, isn't it?\" \n\nKim's eyes widened in excitement and she nodded eagerly. Mike watched in fascination as the girl knelt between the teacher's spread legs and began lapping hungrily at her gooey pussy, getting his cum out of her. Angela fondled herself, smiling almost lovingly down at the girl before looking up at him and winking. \n\n\"So, I know we're living in a day and age where consent is of ever-increasing importance, but I'll ask all the same,\" Angela continued as the younger woman lapped at her slit. \"Would you object to Kim here joining our little trysts?\" \n\nMike shrugged: \"Not like Vitamin E is in short supply. If you're happy with it, I am.\" \n\nAngela smiled slyly and crooked a finger, beckoning him closer. He approached, looking down at the girl between her legs. Kim came up for air and saw him standing nearby, his massive cock not far from her face. \n\n\"Woof,\" she breathed, reaching out and placing her tiny hand on it, giving it some experimental strokes. \n\n\"I think that's a two-person job, my love,\" Angela purred, sliding off the desk and kneeling next to her student. \"Let's play with it together, shall we?\" \n\nMike stood still and closed his eyes, feeling the mouths and hands of the two women on him now. \n\nGod, he loved university life. \n\n*** \n\n\"There,\" Karen panted as she held onto the shoulders of Mitchell, and her legs hooked around his waist. \"Now isn't this much better?\" \n\n\"Gnnnn, can't believe I'm doing this,\" he moaned, his hands on her breasts, massaging them in circles as he thrust his cock up inside her pussy. \"He's right fuckin' there, I can feel him.\" \n\n\"Oh, come now, what's a little skin and membranes between friends?\" Karen breathed, thrilled to be enjoying herself. Behind her, Robert, the other boy involved, was holding her by her ass cheeks, which he spread while slid his member deep inside her derriere, in time with Mitchell's thrusts. Pinned between them like this, she was loving the challenge of fucking and squeezing them both, something she rarely got to do. \n\nShe knew what Mitchell was referring to, the fact that his scrotum kept slapping against Robert's, since their genitalia were so close to one another's as they fucked her. She also didn't care much, to be honest. He was just being macho and neurotic, she was certain. \n\n\"Here, a little something extra to distract you ...\" she gasped. She turned her torso to the right, leaving her hips facing Mitchell. She exalted in the stretch and how flexible she was, how she was the only person she knew who could do this. Turned to the side now, she reached for their heads and gently pressed them down toward her abundant and now readily available breasts. The two boys sucked on her nipples, even as they kept thrusting inside her, trying to break rhythm with one another so that their balls quit slapping together. \n\nKaren craned her head back and moaned as they sucked her breasts, her arms now resting around their shoulders. True, she was propped on Mitchell's thighs, and Robert's hands were on her ass cheeks, but she was still sinking down even farther onto them than before, and it felt utterly divine. \n\nShe needed to find another girl who could play with her and Lisa, so that she could get double-penetrated more often, like back in boarding school. \n\nShe felt their teeth biting on her nipples and she groaned rapturously, working on squeezing them individually, which took considerable effort, but clearly paid big dividends in the pleasure department. She flexed her ass cheeks and rocked around, making Robert moan, before squeezing her pussy around Mitchell, eliciting a similar response. Both boys were trembling as they tried their best to fuck her into a blissful coma. They wouldn't, of course, but they were getting an A for effort, and they would indeed make her cum. \n\nKaren panted, her body shining with sweat now as she moved herself up and down on her lovers, synchronizing their thrusts up into her once again, even if it meant balls touching. She'd come over to this house just off campus, having been entreated by both of these young bucks to share a night of passion. She had agreed, finally, but only if she had sex with them in tandem. \n\nThey may have balked initially at the notion of being so close to one another, but the bragging rights for saying you got laid by Karen Gordon was too good an opportunity to pass up. Not fearing for her safety, Karen had walked over and met her paramours that night. Several rounds later, she could feel that their energy reserves were finally tapped. Once they'd made her cum this time, she'd be heading back to her dorm. \n\nThey were gripping her tighter now, and she could feel their bodies trembling. Whether the boys liked it or not, they were synchronizing their orgasms, and it made her giggle. She squeezed them harder with her ass and pussy, hearing their little moans become louder and louder. \n\n\"Wait for me, boys ...\" she managed to gasp, feeling the wondrous, tingling sensation that heralded climax starting to course through her. She rode a little harder between them, driven to heights of delight by the feeling of their cocks throbbing inside her, almost swelling as they approached the finish ... \n\nKaren threw her head back and sighed loudly, cumming hard, even while both boys began pumping their cum into her. She ground and writhed between them, almost feeling their cocks press together inside her, separated only by the thin, slick membrane between her pussy and ass. Scintillating colours washed through her, an unreal bliss that made her feel like she was floating on clouds of pure pleasure. \n\nAlmost drunk on the hormones pumping through her body, Karen felt like she was in a swoon, gravity turning into nonsense and her limbs little more than galactic strings of tingling stars in their thousands. So warm and wet, like gooey caramel that oozed deliciously through one's fingers. \n\n\"Mmmmm, that is exactly what I came over for,\" she purred, hugging them both close to her. She had turned her torso to the front again, and Mitchell was wearily kissing and sucking on her nipples. Robert was kissing at her shapely back. \"Let's lie down like this, shall we? I'm not done feeling you inside me ...\" \n\nRobert gingerly shuffled backwards and slowly eased himself down onto the bed, trying to keep himself inside Karen's ass, and making her giggle at the shifting sensation. Her legs unwrapped from around Mitchell, and she laid them outside of Robert's, keeping her spread wide enough for the blond boy to lie on top of her, although her needed to prop himself up on his hands to do so. He looked down at her somewhat uncertainly, but she smiled up at him with what seemed like genuine affection and caressed his cheek. \n\n\"You both did so well,\" she said in a soft voice. \"It's been a long time since two boys made me climax that hard.\" \n\n\"Thanks,\" Robert said tiredly beneath her. \"You, uh ... you really rocked my socks tonight.\" \n\n\"Reciprocity is the key to happiness,\" she agreed, wiggling her behind on top of him, making them both moan. \"Never forget that lesson, gents.\" \n\n\"D'you ... think we'll do this again?\" Mitchell asked, his cock still buried in her pussy. But she could feel them both beginning to soften inside her, and she had no intention of ending up glazed like a toaster strudel. \n\n\"I will consider it,\" she answered, nodding to him. \"Just remember, I'll be expecting more of the same, and at least one more round from the two of you, so you'd best eat your Wheaties beforehand.\" \n\nThe two boys nodded wearily. \n\n\"And now,\" she announced, sitting up, making Mitchell step back and pull out while Robert moaned loudly as she sat on his cock, sinking it deep inside her again. \"I believe you two told me about a bathroom and shower I could use?\" \n\nMitchell nodded and waited while she gingerly clambered off Robert and wrapped a towel around herself. He led her down a hall to the bathroom, in which there was indeed a shower stall, thankfully only big enough for one. \n\n\"Thank the Lord for effective birth control pills ...\" Karen thought to herself as she squished through the bathroom door. Inside the shower, she cleaned herself meticulously, emerging to dry up and get herself ready to leave. She came back to the bedroom, smirking as she saw Robert still lying naked on the bed, while Mitchell sat on the opposite side, looking quite drained. \n\n\"I enjoyed myself very much, boys, thank you,\" Karen said cheerfully as she started to slip on her dress, forgoing the bra and panties she'd worn over to the house. \"You delivered on your promise of a good time, and I won't forget it. Don't worry, I can find my own way out. Ta!\" \n\nLeaving them laying side-by-side on the bed, she went down the steps to the main floor and out the front door, closing it behind her. \n\n\"Ladies ...\" she lilted at two girls who were sitting on the verandah, smoking and gaping at her in astonishment before looking back at the door she'd emerged from. She went down the steps and headed the few blocks back to campus, feeling very good about her night, and circumstances in general. \n\nThis was even better than boarding school life \n\n*** \n\n\"Wow, Kar, two guys at once?\" Alexa murmured in fascination as she sat in the whirlpool opposite her older sister, each of them holding a champagne flute in their slender hand. Both were naked, of course, since there was no modesty or formality between them at this point. They were completely comfortable around one another. It was only natural. \n\nKaren shrugged: \"Hardly my first time, nor my last. Did you think you had a lock on that sort of behaviour with your easy Millennial and bohemian ways?\" \n\n\"Well, no,\" Alexa giggled, smiling cheerfully. \"It's just ... you're my big sister, and you're so regal and dignified. And against all odds, you made getting fucked by two guys at once sound regal and dignified, it's just ... strange and awesome to me.\" \n\n\"I'm sure you look quite glorious when you have two men inside you, Alli,\" Karen replied, winking. \"Sexuality fits you like a crown.\" \n\n\"Perhaps, but guys are not required anymore,\" Alexa agreed, shrugging. \"With Alex in my life now, I've got the only man I need. Same for you and Mike, I assume?\" \n\nKaren nodded: \"Always. If I ever happen to couple with another man, which is extraordinarily rarely, it is for a given circumstance, one my mighty husband would overlook. I have, on one or two occasions, had sex with Dr. Stevenson, when we were at one of his intimate parties, for instance.\" \n\n\"Hard to imagine ever needing another man if I had Mike around to tear up my insides,\" Alexa mused. \n\n\"Need wasn't a factor in the equation at all,\" Karen explained. \"For example, six years ago, the Stevensons were hosting a swingers' party, and the numbers went askew, leaving the good doctor without a partner at one point since his wife was already accounted for. Michael was already busy with some women, and it wouldn't do to have the host feel left out, so I simply mounted him and rode him into the sunset, so to speak.\" \n\n\"Like taking one for the team,\" Alexa said, sipping her champagne. \"A noble gesture.\" \n\n\"Precisely,\" Karen agreed. \"While Michael is, indeed, everything I desire in a man, he understood long ago about these parties and how they might work out this way. And in thirty years, I have been with maybe three other men for a brief period. That works out to one a decade, not bad for a swinger's lifestyle.\" \n\n\"I guess my relationship with Alex is still too new to countenance those kinds of things,\" Alexa admitted. \"It also makes sense that Mike could overlook it, since he doesn't need to be territorial about you, does he?\" \n\n\"We have supreme faith in one another, Alli; I can't begin to imagine giving him cause to worry,\" the older sister pointed out. \"What could another man give me that he doesn't? We don't need more money, his love for me is unconditional, and you've seen what he does to me in bed ...\" \n\n\"Yeah, I do spy on your guys quite a bit,\" Alexa admitted, blushing. \"My bad.\" \n\nKaren waved it off. \"You're just spying on your older sister having sex; you're not the first younger sister to ever do it, it's completely normal and we don't mind. Even if it weirds Alex out.\" \n\nAlexa giggled as she shuffled around the jacuzzi to sit next to her sister, snuggling in close. \"It does. But he'll adjust. He never seems to have had anything like an Oedipal complex about you, according to him.\" \n\n\"That's good to hear,\" Karen said, putting her arm around her little sister's shoulders. \"We were too busy raising a young god to worry about psychosexual neuroses. Alex lives in awe of me, same as he does with his father. The only Freudian rebellion in there against his mother-figure is that bent sense of humour he gets from Michael.\" \n\n\"Well, he has your dry, acerbic wit as well, I might add,\" Alexa stated, clinking her crystal flute against Karen's. \"Is it weird that I'm perfectly willing to share Alex with other girls, like even Heather, but I'm not the least bit interested in being shared by other guys?\" \n\nKaren shook her head. \"I'm convinced that most Blackwell-Gordon women are decidedly bisexual with lesbian leanings, to be honest. I'm pretty sure I preferred making love to women more than men over all. But then a particular man steps into our lives, and all other men fall away, never to matter again. For mom, it was dad, for me it was Michael, and for you, it was Alex.\" \n\n\"So, I'm just carrying on the tradition of the women who came before us?\" \n\n\"Be proud of it, little sister,\" Karen said, smiling warmly at her younger sibling. \"Because I promise you won't regret the choice you've made.\" \n\n\"I already know that, Kar...\" Alexa purred as she leaned in and gave her sister a loving kiss. \n\n*** \n\n1986 ... \n\nKim gasped and whimpered as she lay on top of Angela, the two women kissing one another hungrily. They squirmed against one another, splayed out on the desk in the professor's office while Mike stood between their legs, pushing his cock in and out of the dainty, slender student. He could almost hear her hips popping as her pussy tried to accommodate his huge member. \n\nTongues plunged and tangled between the two women, hands groping breasts feverishly. Kim shuddered and then Angela groaned as Mike pulled out of the student and slid deep inside the professor. He held Kim by her ass cheeks as he fucked Angela now, less gentle than he had been with the younger woman, whom he was still somewhat afraid of breaking, although she certainly got credit for not flinching. \n\nMike had begun to think of the two as a couple, to be honest. There was clearly some emotional attachment between them and they were just using him for sex, not that he minded. Kim seemed almost slavishly devoted to the teacher. He also found it interesting that she was one of Professor Coulson's business students, which defied the logic she'd preached to him a week before about how risk was minimized by not sleeping with one's actual students. \n\nHe shrugged and continued on, smirking as the older woman convulsed around his cock, kissing the student greedily to keep them both from screaming. Once she had finished her orgasm, Mike pulled out of her and pushed back into Kim, who keened in depraved pleasure. He fucked her strongly until she too wailed, cumming hard. He pulled out of her pussy and pumped his hand along his length, grunting as he fired several spurts of thick, creamy cum onto her ass and up her back. As the women lay still, clearly spent, he teased this throbbing head up and down their wet slits before sliding slowly back inside Kim, who murmured in pleasure. \n\nThe sex session over, Kim got up wearily, put her clothes back on and left the office first. Angela was smiling at the closed door while she dressed, sitting on the desk. \n\n\"Lovely girl, isn't she?\" the teacher mused as she pulled one of her nylons up. \n\n\"Very nice,\" Mike agreed casually, not actually thinking one way or the other. She was just involved in his tryst with the business teacher, and their three-ways were hot. What wasn't to like? \"You've been her lover for some time, I take it?\" \n\n\"Quite a bit longer than one would readily admit to in most company,\" the older woman answered, her tone an elusive one. \"I'm glad she's to your liking.\" \n\n\"She hasn't given me a reason to dislike her, barring her little spying stunt,\" he said, shrugging. He watched as the teacher snapped her garters back into place, noticing that she hadn't done anything about cleaning the sticky mess of cum off her chest. Perhaps she intended to at home. Whatever. \"And I don't mind if she joins us, as long as she can keep her mouth shut.\" \n\n\"I'm sure you'll find a way to persuade her, handsome,\" Angela said in a seductive voice, getting down from the desk and slinking up to him, her hand now stroking his cock. She smiled up at him as he towered over her, clearly thinking he was ensorcelled by her. \"She's well worth accommodating, take my word for it.\" \n\nShe left a lipstick kiss on his pectoral muscle and then helped him dress. As he walked down the hall, he couldn't help but think something was amiss. And he'd be damned if he knew what it was. \n\n*** \n\nHome. \n\nShe admitted that it felt strange to be here, now that the campus had become her residence. Sure, everything was completely familiar, just as she'd left it, but every time she came home for a visit, things just felt even more remote than they had before. And Karen had to admit, she'd never felt completely comfortable in her own house. \n\nOf course there had been happy times, all of which she treasured, but the mansion had a sterile, almost museum-like quality to it, as if nothing was to be disturbed, even when in the recreational rooms. White walls, accented with marble and molded plasters, the intricate tiles on the floor, nooks and alcoves lined with vases, busts and works of art. ",
        "She entered the music room, wherein sat so many instruments: the harpsichord, the piano, her violin and cello, the flute, and even a pair of harps, one orchestral and the other Celtic. And of course, she could play them all. Her preference may have been the stately violin, but she was more than proficient with any of these. Comfortable chairs were spaced around the acoustically designed room, allowing her parents to listen to her while she practiced or played for them. \n\nShe knew there would be a command performance this weekend, there always was. Her father expected her to keep practicing, no matter where she lived, and her university life was not to interfere with her phenomenal talents with music. \n\nShe actually didn't mind playing for them, to be honest. Her mother was clearly transported by listening to her, and it was one of the easier ways to get her father's approval, because God knows, it wasn't by venturing into the world of Experimental Physics. \n\nPoor little rich girl indeed. \n\nOdo shuffled down the hall toward her, managing to somehow look dignified in spite of his advanced age. The beagle had been her father's constant companion for almost as long as Karen had been alive. They got along very well, although it was clear that Odo considered her a beloved child of his master, and not another human superior. It was cute how the animal almost doted on her sometimes. \n\nShe smiled and squatted down to caress his neck, making the old dog snuffle and wag his tail. His jowls were decidedly grey, his skin drooping off his body, and his spine seemed rather wattled. He nuzzled her hand lovingly and then turned around, expecting her to follow him down the hallway. \n\nKaren sighed as she stood and began following. Clearly, she was being summoned. She considered her entrance; should she just walk into the study with her schoolbag on her shoulder, much as she had during her boarding school days, or to opt for a more dignified approach that would not ruffle her father so much? \n\nShe dropped the bag in a small chair next to a portrait of some ancient relative of days gone by. She corrected her walk, returning easily to the model of elegance and poise she'd been bred to be. There was no time to change into more appropriate clothing, but it wasn't really necessary, either. Elegance was innate, not sartorial. \n\nShe followed her canine chaperone into the study, where the melodic strains of a Bach keyboard partita were playing from a radio. Her mother was standing in one corner on top of a white tarp, busily painting away on some project that screamed psychedelic freedom. The spattered coveralls Miranda Gordon wore were a stark contrast to Jonathon Blackwell's crisp charcoal-grey suit, which didn't dare crease, even though he was sitting in an ornate chair, reading The Robb Report. He looked up from his magazine, his cool blue eyes regarding her evenly. \n\n\"I am glad to see that the trappings of university life have not interfered with your punctuality,\" Jonathon mused, his voice and face showing the faintest traces of approval in his otherwise inscrutable expression. \n\n\"The last time I checked, O progenitor, the purpose of institutions of higher learning was to improve upon one's character, was it not?\" she retorted, smirking and then curtsying, even though she was not wearing a dress. \n\n\"Oh, Jonathan, show a little compassion, you ogre,\" Miranda chided as she put down her brush and went to her beloved daughter, hugging her lovingly. \"Don't mind your father, Karen, he's missed you terribly and it has interfered with his circuitry.\" \n\n\"I missed you both too, mom,\" Karen whispered back, feeling her eyes tear up. \"Being away is still hard.\" \n\n\"Perhaps, but you are the most gifted member of either of our families, my girl, and you will do great things,\" Jonathon Blackwell said, rising from his chair and approaching the pair. Miranda stepped back and the father stood in front of his daughter, his hands on her upper arms, assessing her. \"You're growing into your adulthood well, Karen.\" \n\n\"Growing takes little effort, father,\" Karen replied, standing tall. \"Living up to my name is my challenge.\" \n\n\"No, my love, exceeding your name is your ambition,\" Miranda pointed out. \"And let's be honest, it won't be difficult for you.\" \n\n\"I daresay nothing should be difficult for her,\" Jonathon almost agreed. \"Your breeding speaks for itself, girl.\" \n\n\"As you command, father,\" Karen said, sighing inwardly. Direct approval, just once, wouldn't be such a bad thing. \"Since I am here for the weekend, what will I be doing?\" \n\n\"Nothing exhausting,\" the Blackwell patriarch said, turning and walking over to a small table on which sat a crystal decanter and some brandy snifters. \"Akhtemar, direct from Armenia. Miranda?\" \n\nThe brunette woman nodded her assent. Karen looked at her mother, repressing a sigh of contentment upon seeing her. Yes, she loved her father, as difficult as he could be, but her mother was her true joy and inspiration in life. Her lush brown hair was threaded with red, courtesy of her Scottish lineage. Her brown eyes were rimmed in a bluish-green that enchanted anyone staring into them. She was statuesque and curvy, capable of looking very posh and regal when called upon, even when she wore coveralls to paint her hippie art. \n\nJonathon Blackwell, in contrast, almost seemed like a painting, akin to those portrayed on the ancestral wall, done in crisp colours but somehow formal and deep. His cold blue eyes were like lasers, but also spoke of subtle, brilliant intellect. His hair was an ash-blond, kept short but formally stylish. His demeanour was aristocratic, his expression always one of analysis, given to disdain. Few things in life outside of his wife, his daughter, and his beagle carried his ready approval. \n\n\"Karen?\" he queried, holding up a snifter. \"I know you're not quite legal to drink yet, but maybe an exception?\" \n\n\"Thank you, father,\" she replied, clasping her hands in front of her lap and nodding. \"I will take one.\" \n\n\"Let's go to the atrium,\" Miranda suggested, leading the way. Karen followed, while Jonathon and Odo brought up the rear. The atrium was strangely calm, since the house surrounding it blocked most of the October weather effects. They sat around a small wrought-iron table together, with Odo curling up near Karen's feet, clearly pleased to see her. \n\n\"So you said 'nothing exhausting' would be happening during my visit, but then ceased to elaborate on the subject,\" Karen pointed out while swirling the brandy around gently in its snifter, to release its bouquet and flavour. \"What, then, am I in store for?\" \n\n\"I was hoping to visit an art show with you,\" Miranda mentioned, sipping at her drink. \"Will there be time for that, Jonathon?\" \n\nThe blond aristocrat considered. \"We do have a visitor coming this afternoon,\" he said finally. \"You might remember him, Karen.\" \n\n\"Let me guess,\" she ventured, almost interrupting her father, but her neutral tone made it quite clear she was unimpressed. \"Would it happen to be Edward McNoughton?\" \n\nMiranda glanced over at her husband, whose eyes narrowed almost imperceptibly. \"And how, pray, did you extrapolate that?\" \n\nKaren shrugged: \"I keep track of your stock and dealings in the business columns. I know ol' Eddie's dad, Chester McNoughton, has been wooing you for some time now about forming a partnership between our electronics and mainframing endeavours with his advertising juggernaut. He sends over Edward, his eligible bachelor son, to talk about coalescing this partnership around connubial bonds, much as your father had done with the Gordons.\" \n\nJonathon said nothing, merely observing his daughter. \n\n\"He's sending over a suitor for me, isn't he?\" Karen almost demanded, although she could already see she was right. \n\nJonathon nodded slightly. \"You are truly brilliant, Karen. Well done and well played. As tempting as this merger he suggests might be, I think its future is best left up to you. Entertain Edward tonight, Karen. After that, the decision is yours alone.\" \n\nKaren's heart thundered in fury in her chest, but she didn't let it show. She would obey her father, at least up to this point. He was the great authority figure in her life, and she owed him that much. She closed her eyes and nodded her assent. \"Of course, father. Now if you'll please excuse me ...\" \n\nShe stood up, went to her mother and kissed her on the cheek. She kissed her father similarly before going into the house, taking her brandy with her. Even Odo could tell she wished to be left alone. Miranda looked at Jonathon and sighed. \n\n\"She's too good for him, Jonathon,\" the matriarch stated honestly, knowing that she held her husband's ear like no one else on earth possibly could. \"That twit could never be worthy of such a prize.\" \n\n\"Of course not,\" Jonathon replied, frowning. \"This was an offer made to me specifically, Miranda, not to the family. Agreeing to it would put even more capital in my corner and help to keep the family wolves at bay.\" \n\n\"Perhaps, but I see in your eyes that you think it's not worth the price, which is her happiness,\" Miranda said gently, putting her hand on his. \"And the sad part is, no matter how independent she might be, Karen could very well sacrifice her happiness for the family's future.\" \n\n\"You disapprove?\" he asked somewhat archly. \n\n\"Would I have fallen in love with you and married you if I did?\" she cooed, smiling. \n\nJonathon sighed. The one woman (well, one of two) that he was powerless before, asking him to overlook the empire he'd been bred to rule, for the sake of his daughter. What if they'd had a boy? \n\nHe'd just have to leave it in Karen's hands. \n\n*** \n\nKaren closed the door to her old bedroom and sighed, leaning back against it, and taking another sip of the brandy while dropping her schoolbag, having retrieved it before coming upstairs. She hated Akhtemar, although she'd never tell her father that. She had, in boarding school, developed a taste for absinthe, to which she'd been introduced by a teacher who was also a lover. \n\nShe stepped out of her shoes and took another sip as she headed over to her vanity, sitting down on the plush chair in front of it. She looked at herself in the large mirror, observing her features as she had done countless times throughout her life. Her features were decidedly patrician, like her father's family, but those sharp aquiline faces were softened in her by her mother's Gordon heritage. Her cheekbones were high, but not wedged or angular. Her nose was rather slender, but not long, either. Her eyes were an astonishing tawny-amber colour, which was found in neither family. They were deep and expressive, radiating intelligence and a cool aloofness, but in the presence of those she loved, they were warm and caring. \n\nHer hand caressed her shining bronze hair, which shared the faintest tints of red with her mother. She kept it in a manageable but fashionable Dutch bob, falling just past her jawline. She thought it was rather reminiscent of the elegant but rebellious Flappers of the Roaring Twenties, a fun and sassy style that suited her perfectly. \n\nShe slowly pulled off her thin cashmere sweater, revealing her opulent breasts contained within a silken, lacy brassiere. She undid the clasp nestled into her bosom and pulled the garment apart, freeing her breasts from their confines. She was pleased how they stood up straight and did not sag, despite their size, because of the time she took to train and strengthen her lateral, pectoral and oblique muscles. Capped with small, dusky areolas and nipples, she was proud of their appearance and knew she was ogled by men and the envy of women everywhere. \n\nShe stood and undid the button of her jeans before shimmying them down, revealing panties that matched her bra. Those came off next, and she moved the chair back and snaked her legs up to rest on it, spreading them to look at her pussy. She had been shaving herself smooth for some years now, except for the tiny strip of coppery hair that sat just above. She considered her netherlips, even and without droop to them, like so many other girls seemed to have. The hood of her clit was visible, the tiny bud just barely peeking out beneath, making her smile. \n\nShe used two fingers to pull her lips apart, revealing her bubblegum-pink insides. She almost shook her head as she noticed how she glistened wetly. \n\nThe curse of the Gordon women, she thought to herself as one finger from her free hand traced around the outer lips of her womanhood, teasing herself. Always more wet and horny than we would ever admit to anyone. \n\nShe closed her eyes and sighed quietly as she felt her finger sliding up and down the slick lips, making her tremble. She couldn't count the number of times over the years she had sat exactly like this, in this very chair, and teased herself until she was so riled that she practically impaled herself on her favourite toy, desperate to cum. \n\nSpeaking of ... \n\nShe slinked off the chair and wiggled over to her schoolbag, shivering as she felt the wetness between her thighs. She opened the bag and pulled out Roland, named after the greatest of Charlemagne's Paladins. The long, thick and realistic-looking dildo was a comforting weight in her hands. She smiled and gave him an affectionate kiss before returning to her vanity. \n\nHer favourite feature about Roland, aside from his pleasing size, was the suction cup at the base, allowing her to stick him to any convenient surface as her mood allowed. She looked around the room, allowing herself a light giggle as she remembered all the places she'd stuck him over the years for her depraved use. \n\nShe couldn't think of many places around the house that remained inviolate, outside of her parents' room, in fact. \n\nShe moved her plush chair aside and pulled over another one, one that had a specific purpose. This sturdy, heavy chair had a high back and only a small ring of cushioning around the seat edge, to soften contact with her legs, once the faux center cushion was pulled away. The middle was now quite bare, showing only wood. She smiled as she lovingly fixed the suction cup to the center of the chair, Roland now standing upright and proud. \n\nI don't know, but he seems ... smaller somehow. Why is that? \n\nShe wore a forlorn smile as she thought back to the art room, some two weeks before, and what she'd seen when she dared to peek inside. \n\n\"I still love you, Roland, I promise,\" Karen said to her godemiche, stroking it gently. She fetched a tiny plastic bottle of lube from her bag and drizzled it over Roland's head before using her hand to smear it up and down his length. She could already feel the tingle of anticipation deep in her core, and her nipples were hardening. \n\nShe needed this release, especially if that insufferable snot Eddie McNoughton was coming to court her. It wouldn't do to have sexual energy pent up inside her, because she might very well punch him if he said anything to anger her. \n\nAnd she had promised her father that she would try to stop punching the young men who came calling. \n\nKaren slid her tongue along her upper lip unconsciously as she rose and straddled the chair, facing her vanity. She reached back and braced her hands on the sides of the chair's tall back while she looked at herself in the mirror. She trembled, noticing that she could tell her pussy was wet, even without using her fingers to discover it. She bent her knees gradually, the swollen head of Roland now pressing very lightly against those same lips. \n\nShe rocked her hips slowly, teasing the head against her lips, parting them slightly, sliding back and forth between them, moving from the narrow, V-shaped base at the bottom, back to her clit, against which the polymer cockhead pressed, making her bite her lip as it tingled. This was a tried-and-true technique for her, one she never tired of. It was so easy to make herself cum. \n\nShe shuddered slightly as she eased down, feeling the head pass through the lips and force her tight tunnel apart. These exquisite moments of penetration were so wonderful to her. She relaxed her thighs and knees to allow gravity to do most of the work and she sank down onto the dildo, gasping as it penetrated deeply, pushing her walls wide. Her behind and the back of her thighs touched the chair as she bottomed out on her beloved toy. \n\nGod, she'd missed this. She didn't use Roland nearly often enough at the dorm, simply because there was too little time to do so. Most of her sexual release came through making love to her roommate Lisa in any event, and the slender redhead was decidedly intimidated by Roland's size. She'd tried using the dildo once, and her hips nearly popped out of joint. She was even scared to use it on Karen. \n\nOccasionally, she had enough alone time to get in a quick session with him, sometimes even in the communal shower stalls. But none of those missed opportunities mattered now, since Roland was deep inside her and she felt as full as ever. It was Heaven. \n\n\"Yessssss ...\" she sighed to herself quietly, sliding her legs closed around the dildo and shuddering as her pussy tightened up around it. She held her legs together for close to two minutes, squeezing her thighs as hard as she could. Her fingers gripped the side of the chair seat tightly and she bit her lip, her eyes squeezed shut. \n\nFinally she gasped and leaned forward, her eyes snapping open and going wide. Her skin was flushed pink as an orgasm surged through her, the first of many she would allow herself before her \"guest\" arrived. Pleasure coursed through her, and she knew she was soaking the wood of the chair. She didn't care; the furniture was serving its sole purpose at this moment. \n\nShe leaned against the tall chair back, breathing heavily, entranced by the sight of her magnificent breasts rising and falling in rhythm. One of her hands reached down and played with her clit and her mushy pussylips for several seconds while she caught her breath. There was already sweat on her brow and her skin was decidedly pink from her exertions. \n\nBut this session of self-love was far from over - she looked into the vanity mirror, enthralled by the sight of her pussy split wide by the cock deep inside her. Bracing her hands on the side of the chair again, she watched herself as she lifted up slightly and began churning her hips in circular motions, almost as if she were stirring Roland inside herself. \n\nThrough heavy-lidded eyes she watched as she fucked the dildo, now sinking up and down on it slowly, deliberately. The sight of the fake cock sliding into her and then coming almost all the way out was intoxicating to her. She allowed the head to come almost all the way out, moaning as it penetrated her again, flexing her tight pussy against the invader. \n\nThe smell of her body, her sexual arousal ... the heady mix of her wet womanhood and the pheromones she was secreting in her sweat had her in a drunken rapture. She hoped that carnal pleasure was this wondrous for everyone else on the planet. She fucked the dildo, repeatedly moving up and sinking down in succession, slowly gaining speed. \n\nShe changed rhythms again, thrusting her hips back and forth while keeping Roland deep inside her. His textured, veiny surface grazed along her wet walls, making her grunt and gasp, battering her senses with delight. \n\nHer hands flashed up and suddenly grabbed the rims of the chair on either side of her head, and she squeezed her eyes shut and gritted her teeth as she arched her back and strained, letting out a long, strangled sound before the orgasm burst through her defences and she had to keep from wailing in ecstasy. She ground and churned shamelessly on the dildo, fucking it as hard as she could. Her breath came in wet pants, her face flushed a deep pink now, glistening all over with cleansing sweat. ",
        "She sagged into the chair, trying to control her breathing, not to mention the spinning of the room brought on by the orgasm. Her heart thundered in her chest and she could feel her wanton pussy clenching around Roland greedily, craving yet more.  \n\nGods, woman, wouldst thou have the whole world for thy cunt? her brain wondered feverishly. \n\nShe groaned almost too loudly as she wearily leaned forward, the angle of penetration changing as she gripped the front of the chair. Her lovely breasts were squeezed between her arms now, and she allowed Roland to stay deep inside her as she reached up and caressed them fondly. She brought them up to her mouth, kissing them and then swirling her tongue around the nipples, shivering and whimpering as she took the little buds between her teeth and tugged on them gently. Her slit grew even wetter, if that was possible, to the place where she could feel the backs of her thighs sticking to the chair. It made her smile tiredly. It was always the same, with the same payoff. And she loved it. \n\nHer thighs would be sore later, but it was worth it. She continued squeezing and caressing her breasts while she used the strength of her dancer's legs to move up and down, the dildo filling her. Sweat streamed from her skin as she worked her thighs and gyrated her hips. Her bronze hair was sticking to her neck and the sides of her face now, her bottom lip stinging from biting it. \n\nAnother orgasm crashed through her as she plunged herself down onto Roland, doubling over to lean as far forward as she could and still remain impaled on him. Her pussy gushed her essence, soaking the chair while she gasped for breath, her eyes wide. Her body felt like it was on fire, a tingling flame of unadulterated pleasure consuming her from the inside. \n\nWhere was the man who could make her feel like this? \n\nShe sat up and flopped back against the chair, chest heaving as she panted loudly, not trying to deny it. If her parents or any servants walked by and heard her, so be it. She didn't care. She caressed her sweat-slicked breasts and midriff with one hand while the other stroked her cheeks and jaw. She bit on a fingernail gently, enjoying her unreal orgasmic high. \n\nShe felt ... unstuck. Loose, all over. \n\nKaren somehow pushed herself up off the dildo and shifted around slightly, but then clapped her hand over her mouth and almost screamed into it as she took Roland deep inside her ass ... \n\n*** \n\nKim was braced against the stone wall, looking up at Mike through glassy eyes, her slender legs wrapped around his waist. His powerful hands held her off the ground while his hips pistoned against her, driving his cock back and forth inside her needy pussy. His eyes were locked with hers as they fucked in the long, dark space between the two campus buildings. \n\nMike had no small suspicion that Kim was something of a masochist, addicted to pleasure through pain. She loved having her behind gripped tightly, her tiny breasts squeezed hard, and his cock was cracking open her pussy like a buffet lobster. She gasped and whimpered, but thankfully not loud enough to attract attention. She was hardly the first girl he'd ever brought back here, certainly, and it was an ideal spot for these quickies. \n\nHe was somewhat mystified that Angela was nowhere to be seen, though. \n\nKim had found him walking through the campus after dark, and asked if she could have sex with him, for she was horny. He found this somewhat odd, since to the best of his knowledge, she didn't actually live on campus, so what was she doing here at this hour? But who was he to judge her comings and goings? \n\nIf for no other reason than to ensure her safety, he acquiesced to her plea and brought her back to this spot. His total physical domination and her willing surrender aside, she seemed strangely affectionate somehow, maintaining constant eye contact and reaching up to caress his face frequently, even when he was almost punching out of her spine with his cock. \n\nKim shuddered and strained, squeaking as she was hit by her third orgasm. Mike saw no need to prolong the exercise further and surrendered to his own needs, pushing deep inside and cumming. Of course, the condom he wore acted as a barrier, and he always carried protection with him, because one never knew when a situation like this might arise. He never bragged about it, but getting laid was ridiculously simple for the oldest DeBourne child. \n\nHe pressed in close to her, her legs still around his waist. Her brown hair was worn up in two ponytails on the sides of her head. She was wearing a flimsy blouse that she'd pulled up to her shoulders to expose her breasts and a short skirt, with no panties beneath. Her jogging shoes were still crossed behind his waist. \n\nShe looked up at him, her head tilted slightly to the side, as if she were spellbound, her pupils large in her brown eyes. She was rapt by him. \n\nOr maybe it was just the Oxytocin. Hard to tell. \n\nHe may not have felt the need himself, but he allowed her to kiss him, her lips pressing to his. He undulated his hips, pushing back and forth inside her slowly, and she moaned into his mouth. Finally, she unhooked her legs from behind him and allowed Mike to pull out, shuddering as he did so. She went down to her knees and stripped the condom from his cock before taking it into her mouth and sucking the cum from it. He watched her, his hand resting gently on her head. \n\n\"Mmmmm, I love the taste of your cum,\" she murmured, pulling her mouth off of him and gently stroking his shaft with her hand. \"But the condoms, they interfere with the taste, it adds a bitter, rubbery edge.\" \n\n\"Sorry about that,\" he replied, shrugging. \"Have to be careful.\" \n\n\"Well, if you don't want to, then try it bareback, and I wouldn't mind that at all,\" she said, her tone hopeful. \"Then I could always bring some condoms, the ones I use are sorta fruit-flavoured, y'know? It'd make cleaning you up even more enjoyable.\" \n\n\"I think it's a man's responsibility to bring protection, I would never impose on you,\" he said, his voice firm. \"But, if you like, I'll look for some of the fruit-flavoured condoms you're referring to and buy some, so that I taste better for you.\" \n\nShe didn't answer for a moment, as if struggling to accept his suggestion, and then finally nodded. \"That's very considerate of you, Michael. Thank you.\" \n\nHe allowed her to stand up and adjust her clothing while he pulled up his pants and buckled his belt. \"You don't live on campus, do you?\" \n\n\"No, I don't,\" Kim replied, shaking her head. \"I have to take a bus home.\" \n\n\"Then at least allow me to escort you to whatever bus stop will start getting you back most safely, okay?\" he suggested, holding out his arm for her to take. \n\nShe smiled warmly: \"Thank you, Michael. I would love that.\" \n\nThey walked in silence through the campus and down College Street until they reached Spadina Avenue, where she hopped onto a southbound bus, saying that she lived down on the Lakeshore. She waved to him and blew a kiss as the bus disappeared into the October night. It wasn't long before he was back on campus and heading to Brennan Hall. \n\n\"Wow, has she got it bad for you, Ace,\" said a voice from nearby. \n\nMike stopped and turned, looking at Mona, who was sitting on one of the benches under a shade tree, smiling up at him while she closed her books. Unless you were looking directly at her, you wouldn't have noticed her in the darkness. \n\n\"Is that so?\" he queried. \"And how long did you have to hide there in order to figure that out, Nancy Drew?\" \n\nShe rolled her eyes. \"Oh please, DeBourne,\" Mona almost scoffed, but she was smiling. \"You can hardly do anything on this campus without being noticed. You walked right by me when you took her behind Koffler House. You're not the first guy to fuck back there, y'know.\" \n\n\"You don't say.\" \n\n\"I might have allowed myself to be taken back there by a guy once or twice,\" she answered, shrugging. \"But speaking to my original point, Gargantua: she's really got a thing for you. She's all doe-eyed and slack-jawed when she's in your presence.\" \n\n\"I don't see what concern this is of yours, Mona, although I'm happy to consider you at the very least a fond acquaintance if not a friend,\" Mike said evenly. \n\n\"Ooh, high praise indeed,\" she mused, fanning herself for effect. \"Kar said that you're the king of not explaining yourself to mere mortals. Look, I'm not trying to interfere, Mike, but that girl wants you for herself. Big time.\" \n\n\"I hate to disagree, but I might have very strong proof to the contrary.\" \n\n\"Oh, you mean her and Prof Coulson?\" she asked before giggling. \"Yeah, there's the most poorly kept secret on campus. And everyone assumes you're boffing the prof too.\" \n\n\"It seems like there's no such thing as a well-kept secret around here,\" he almost growled. \"So why are you so sure she's gone on me if she's Coulson's little plaything?\" \n\n\"Look, just call it women's intuition, okay?\" Mona said, standing now and holding the books she'd been reading to her chest. \"Walk me back to Annesley, I'll tell you more.\" \n\nMike sighed and shrugged, allowing the life lesson to continue. Mona strolled alongside him, reassured by his towering presence, although she never actually felt unsafe on campus. She understood why Janet had enjoyed his company, even if he was being reticent somewhat and difficult and difficult at the moment. She didn't mention Kim very often in the conversation, mostly just referring to signs and things that might tip a guy off about how a girl is feeling, especially when she won't say anything.  \n\n\"Just promise me you'll at least ponder what I'm saying,\" she said finally as they stopped in front of her dorm doors. \"You're the nicest guy on campus, Mike; I'm just wanting to not see this get difficult for you, okay?\" \n\nHe nodded: \"I'll consider your words, Mona. Thanks. Have a good night.\" \n\nHe then turned and strode into the darkness. Mona watched him disappear and finally sighed, shaking her head. Why were boys so stubborn all the time? \n\nShe went through the doors, already knowing she was going to be telling Janet, Lisa and Karen about what had happened \n\n*** \n\n\"Eddie, how good to see you,\" Karen said pleasantly as she stood and walked across the patio to greet their guest. \"How was your trip in?\" \n\n\"Comfortable enough; I've had longer trips for less gratification,\" the man said in an affected accent as he approached his hosts. He did his best to refrain from ogling the young woman whom he now greeted, taking her hands in his and holding them while looking down into her eyes. He'd always been stunned by Karen's regal beauty, even if he found her somewhat taller than was necessary in a woman. \n\n\"I'm glad to hear it,\" she lilted, smiling. She was wearing an elegant dress, dark green with white accents that fell past her knees. She felt the dress was distressingly and unnecessarily conservative, but she had a father to placate. \"You remember my mother, of course.\" \n\n\"Of course,\" he said, flashing a toothy smile at Miranda. \"It's good to see you, Miranda.\" \n\n\"You too, Eddie,\" remarked Karen's mother, smiling politely. \"I hope your parents are well?\" \n\nBut he was already walking up to Karen's father, and shaking his hand vigorously. \"Good to see you, sir. I hope we can find time to share your brandy and some cigars.\" \n\n\"We will see what we can do,\" Jonathon said in a noncommittal tone. He'd never liked this snot-nosed brat. The thought of him as a son-in-law unsettled the Blackwell patriarch. \"We'll discuss some issues during your stay, but it will be my daughter who is hosting you for the most part.\" \n\n\"As it should be, because no one's ever had a more lovely or dedicated host,\" Eddie beamed, turning to look at Karen again. \"Tell me, Kar, what is it you're studying again?\" \n\nKaren repressed the urge to punch her guest. \"Experimental and mathematical physics are my primary fields.\" \n\n\"Well now, that sounds intriguing,\" Eddie mused. \"Always treading new frontiers, hm?\" \n\n\"There have been women physicists before, Eddie,\" she remarked, gesturing for him to follow her. \"This way, please.\" \n\nShe walked along quietly, refusing to hold her hands folded in front of herself, looking demure. Eddie walked alongside her, looking around at the surroundings and clicking his tongue. \"Very nice,\" he said. \"Top-drawer, really.\" \n\nGood Lord, do people really still use that phrase? Karen wondered, trying not to frown as she walked. \"I'll show you to your room, so that you can settle in.\" \n\n\"You're my hostess, shouldn't you be settling in with me?\" he asked in what he considered a blithe tone. \n\n\"Not so fast, skipper,\" she said, holding up a chiding finger. \"I'm worth a lot more than the few hundred million this merger with your daddykins represents.\" \n\n\"You've always been such a coy tease, Karen,\" Eddie remarked, smiling. \"One of your charms, for certain.\" \n\n\"You have no idea, Eddie,\" Karen said dryly, restraining from clenching her hands into fists. \"Trust me on this.\" He followed her until she arrived at a spacious guest room, gesturing for him to enter. He looked around and nodded. \n\n\"Not bad at all,\" he mused. \"Your father certainly has good taste.\" \n\n\"Actually, my mother picks out most of our d\u00e9cor and furniture,\" Karen mentioned, her tone civil. \"She's got an incredible eye for subtle and elegant, with a decided aversion to the ostentatious.\" \n\nEddie's eyes flicked over at her quickly and then looked at the plaster moldings, which were covered perfectly with gold leaf. Was he meant to infer that his family's tastes were ostentatious? \n\n\"Do we happen to know which of our families has the higher net worth this year?\" he asked casually, but it was clearly a challenge, meant to put her in her place. \n\n\"I couldn't begin to tell you, Eddie; I don't even know what my own family is worth, let alone anyone else's,\" Karen replied, shrugging as she stood near the door. \"I find the notion of tracking one's fortune somewhat ... shabby, to be honest. Money, in and of itself, means little or nothing to me, and money cannot buy breeding. All I care about is a person's character beneath the expensive baubles and clothes.\" \n\nEddie sighed and moved closer to her, looking down into her eyes and taking her hands in his, a gesture she allowed. She was supposed to be a gracious host, after all. Eddie McNoughton considered himself a charming playboy. She saw no point in making his visit hellish just yet. \n\n\"Karen, darling,\" he said, showing his pearly whites through his smile. \"You're the most eligible girl within a thousand miles, easily. And I can take very good care of you. Your penchant for high-performance cars, though unusual in a woman, is well-known. There's no car I can't get for you.\" \n\n\"Goodness,\" she said, making a show of fanning herself. \"One doesn't know what to say.\" \n\n\"You could even keep on with your little career in physics in some capacity, I'm sure,\" he reasoned. \"I'll buy you a lab, as long as everyone knows who's buttering our bread, of course.\" \n\nKaren looked up into her suitor's eyes, subtly lining up her knee with his crotch, just in case he said one more colossally stupid thing ... \n\n*** \n\nThe Present: a pub ... \n\nThe crowd cheered as '70's glam-rock beats filled the establishment. From their table near the stage, Mike, Alex, Freja and Jeanie all roared and yelled in excitement. Up on stage, Karen and Alexa, wearing white knee-high boots and white minidresses on which were stitched large, stylized cats, one yellow and the other blue, broke into song. \n\n\"You think you're gonna make me softer with your fancy car! Ah-ha-ha-ah! \n\nBut I can tell you all of your tricks ain't gonna get you far! Ah-ha-ha-ah!\" \n\nThey say that money's got a magic touch! \n\nBut not to me, it doesn't mean that much! \n\nYou won't have me tonight! \n\nAll right, all right, all right, all right! \n\nSo long! See ya, honey! \n\nCan't buy me with your money! \n\nTracy and Daisy, they may be crazy, \n\nBut I'll never be your girl! \n\nSo long! See ya, honey! \n\nCan't buy me with your money! \n\nYou now it's not worth trying, \n\nSo long! So long! So long!\" \n\n\"Wow, mom can really move, can't she?\" Alex observed, looking up at the stage. \n\n\"You just noticing that now after almost nineteen years?\" his father chuckled. \"That must have been voluntary.\" \n\n\"Yeah, well, I keep getting prolonged views of her panties because of how she's dancing,\" the son almost grimaced. \"I mean, I'm used to it with Alexa, but she's just sorta wiggling up there; mom's full-on dancing and flashing her gitch at us.\" \n\n\"If you've ever seen the original videos where Agnetha and Frida are dancing, you'd know that she's right in character,\" Mike pointed out. \"Frida was the dancer of the duo, Agnetha was a wiggler. Frida wasn't terribly modest, seemingly \n\n\"Mom's got that down to a T, then,\" Alex laughed, relaxing and just enjoying the show. The whole pub crowd was going nuts now, cheering and clapping while the sisters cavorted about. \"Those cat outfits, though - where the Hell did they get them? Did mom make them just for tonight?\" \n\nHis dad shrugged. \"For all I know, your mother somehow acquired the originals. If so, they've held up well in the intervening forty years.\" \n\n\"Scandinavia gave the world ABBA!\" Freja said loudly to her wife over the din of the bar as they sat next to Mike and Alex. \"What have you to say about that?\" \n\nJeanie laughed in delight and clapped as she watched the display. \"Remind me to make love to Scandinavia as a thank-you for that!\" \n\n\"I graciously accept on behalf of all Nordic peoples!\" Freja whispered in her brunette lover's ear, making her shiver. \"Forever and a day.\" \n\nThe action onstage continued. Alexa wiggled and strutted around the raised platform; Karen danced, thinking nothing of how often her purple panties were on display for a packed house. \n\n\"You didn't have to send me flowers like you did today! Ah-ha-ha-ha! \n\nI wouldn't keep a thing from you, I gave them all away! Ah-ha-ha-ah! \n\nThe girls might fall for everything you've got, \n\nBut I'm not one of them and you know I'm not! \n\nYou won't have me tonight! \n\nAll right, all right, all right, all right! \n\nSo long! See ya, honey! \n\nCan't buy me with your money! \n\nTracy and Daisy, they may be crazy, \n\nBut I'll never be your girl! \n\nSo long! See ya, honey! \n\nCan't buy me with your money! \n\nYou know it's not worth trying \n\nSo long! So long! So long!\" \n\nThe audience shouted even louder as the sisters completed a third round of the chorus and then began a series of incredibly Seventies dance moves while the music faded out. Mike and Alex restrained Freja and Jeanie from throwing their panties onstage while they cheered frantically. \n\n\"Nice white-girl boogie there!\" Alex laughed as his mother and aunt joined them back at the table, blush-flushed with the elation of a successful performance. \"You two are a hit, no lie.\" \n\n\"Did you expect otherwise?\" Karen said airily, knocking back most of a glass of water to rehydrate. The yellow cat on her dress glittered under the karaoke stage lights. Fortunately, her violet panties were finally concealed from view. \n\n\"Not really,\" Alex readily admitted. \"Nice to know someone still gives dad a run for his money.\" \n\n\"Hey, you're not so bad yourself, you know,\" Alexa pointed out. \"We've all heard you up there.\" \n\n\"Yeah, but I don't want it out,\" Alex said, shrugging. \"I'm a nerd; I don't wanna be known as a square.\" ",
        "\"Yes, I'm sure your video games will revoke your nerd card in disgust,\" Karen said dryly, drinking her absinthe before leaning into her husband and whispering something in her ear. Mike listened intently and then grinned, nodding. \n\n\"I think we can arrange that,\" he said readily. \"After the kiddies go to bed.\" \n\n\"'scuse me?\" Alexa queried, looking at her sister and brother-in-law. \"After we go to bed?\" \n\n\"There are some things in life that your tender years have just not prepared you for yet, darling,\" Karen purred, snuggling into her husband's massive arm. \"I'll tell you when you're older.\" \n\nAlexa sighed and shook her head before looking down at her lap. \"These outfits are drafty.\" \n\n\"We have worn less, ja?\" Freja quipped from across the table and winking. \n\n\"Not in front of a crowded bar,\" Alexa replied. \n\n\"I am thinking you are remembering wrongly,\" said her Danish friend with a naughty grin. \"The bar in Berlin? There was also the club in Milan. Oh, and the rave in -\" \n\n\"Hush, you strumpet!\" Alexa hissed. \"I actually want to keep my husband, you know.\" \n\n\"Oh, do go on, Freja,\" Alex said, leaning his elbow on the table and resting his chin on it, his eyes glinting with amusement. \"Don't hold back.\" \n\nAlexa groaned and put her head on the table while Freja launched into her accounting of events. \n\n*** \n\n1986 ... \n\n\"You can't be serious,\" Mike said as he stood in front of the two women. He was scowling while he looked at them, the younger clinging to the older one, both smirking. \"Why would you do this?\" \n\n\"I thought we were clear, Michael,\" Angela said simply. \"Kim is really quite infatuated with you. I daresay she's in love. And I love her greatly. So if it's you that she wants, it's you she'll get.\" \n\n\"Not interested,\" Mike growled. \n\n\"That's too bad, because you don't really have a choice,\" Angela continued. Both girls were leaning against the professor's desk while they looked at the hulking student who towered over them. His hands flexed in frustration. \"I don't want to resort to perfidious means like extortion and blackmail, but I will, if you make it necessary.\" \n\nShe pulled Kim tighter against her side, looking at him pointedly. \"It wouldn't do for people to think you assaulted both a student and a prominent professor, would it? You're practically an icon for men who treat women with respect in this institution. Imagine the outrage if it were learned that you were no more than another bullying predator?\" \n\nMike stood silently, fuming. What could he say without getting himself in worse trouble? \n\n\"Let's face it,\" continued the professor. \"Your DNA is all over us both, big boy. So I suggest you knuckle under and give my Kimmy what she wants, before I start playing hardball.\" \n\n\"You're crazy,\" Mike said tightly. \"You won't get away with this.\" \n\n\"Oh, most assuredly, I will have my way,\" Angela said sweetly, \"Best that you think about this offer very seriously before tomorrow. We'll see you back here.\" \n\nKim sauntered up to make and smiled at him wickedly, running her tiny hand over his chest. \n\n\"Don't keep me waiting, my love ...\" she said softly before joining her professor. Angela wrapped her arm around arm around Kim's waist and kissed her lovingly before they left the room together. Mike glared at the door as it clicked shut, standing in the darkness, his heart thumping in his massive chest in fury. \n\nHe finally stormed out of the professor's office, heading back to his dorm. He felt trapped and he really didn't know what to do. \n\n*** \n\n\"It's somewhat absurd to be traipsing around this campus while we could be luxuriating in your father's house, isn't it?\" Eddie asked as he walked arm-in-arm with Karen, glancing around with mild disdain. \"How small is the full scholarship this place offers?\" \n\n\"I did indeed receive a full scholarship, but the sciences department is excellent, respected for its work by both Oxford and MIT,\" she replied, refraining from smashing his head into the side of a building. \"Beyond that, my parents give the institution endowments.\" \n\n\"Quaint,\" Eddie mused, watching some students walk by, wearing jumpsuits fluorescent colours. His pressed grey suit provided a stark contrast. Until now, he'd failed to comment on Karen's form-fitting jeans and cashmere sweater. \"But surely you don't identify with these people.\" \n\n\"I'm reasonably certain we share more than a few strands of DNA.\" \n\n\"You know what I mean, Karen,\" Eddie pressed. \"You know full well that we're better than them.\" \n\n\"Because of our moneyed status?\" she queried, turning her head to look up at him. \n\n\"Breeding speaks for itself, and you know it,\" Eddie said emphatically. \"It always has.\" \n\n\"I couldn't agree more,\" she said readily. \"It's painfully obvious, on occasion.\" \n\nEddie either ignored the jibe or didn't get it, because he said nothing for several seconds while they walked. Finally, the silence was too much. \"So you actually live in the dorms?\" \n\n\"I choose to, yes.\" \n\n\"With a roommate?\" \n\n\"Lisa is a delightful girl. I'm quite fond of her.\" \n\n\"Your choices sound distressingly ... what is that?\" \n\nKaren followed her companion's gaze and saw DeBourne towering over everyone on the far side of the campus' esplanade, striding across it in what was clearly barely contained fury. She shook her head and sighed. \n\n\"That, Eddie, is the future of humanity. Best not get in its way, because uncounted billions of dollars will not protect you from its wrath.\" \n\n\"You're into poetry as well as physics?\" he almost sneered. \"Look at that lout. Is he on the football team or something?\" \n\n\"He's actually in the Physics department with me, and the only person whose grades keep pace with mine,\" Karen said levelly. \n\nEddie grunted: \"I expected you to be better at physics than you are, if that's your competition.\" \n\nHe turned to take her hands in his and look down at her. He seemed to be convinced this was some magical gesture, guaranteed to seduce her with that winning smile of his. \n\n\"Darling, I do not like disagreeing with you like this,\" he said. \"We both know what is expected of us, and our life will be nothing but splendid. Our two empires merge, and we inherit everything eventually. I'll take very good care of you.\" \n\nHe smiled again. \"Why don't you show me this dorm room of yours?\" \n\nHe turned and began walking, not waiting for her answer, and not seeming to care about the directions required to reach Whitney Hall. Beside him, Karen walked along quietly. She'd been (mostly) politely rebuffing his advances, but this might have been despair on her part. Her mind was whirling as she thought about what this weekend was supposed to entail. \n\nShe knew her mother and father were not happy about this match, but this was simply too perfect an opportunity for her father to ignore - the McNoughton media empire was a godsend, with the potential to turn Jonathon Blackwell into a juggernaut that would shake the industry. More than that, though, the offer had been made to him personally, not the family at large. With the addition of the McNoughton resources, he would be able to make those jackals in the family knuckle under, once and for all. \n\nAnd all that was required was for her to be the daughter she was raised to be. \n\nThe conflict within made her chest hurt and she subtly squeezed her eyes shut as she warred with herself. Everything in her life had brought her to this weekend. Her exquisite upbringing and purpose in life, so very at odds with her passions. To everyone around her, she was a study in dichotomy: regal and sophisticated, and yet so grounded and full of conviction, so ... humane. \n\nThey were used to her fiery independence, to the place where even the professors most often acceded to her wishes, and everyone thanked the heavens above she was not capricious, given how forceful her personality was. And yet, almost none of them knew how trapped she felt. \n\nHer father. Jonathon. Bred to lead and rule. In another era, he might have been a great lord. He was cunning and often ruthless, driven by his intellect and ambition. He was the culmination of centuries of elite Blackwell breeding. No one in the family, barring Karen herself, was more brilliant or accomplished. Jonathon Blackwell's only weaknesses were his wife and daughter. \n\nAnd what right did Karen have to throw her family's legacy aside? Wasn't her mother happy? Miranda Gordon had come from another powerful industrial family, but one of very different temperament. Their marriage was arranged by their parents, to combine their fortunes. The imperious Jonathon and lovely Miranda seemed worlds apart, yet they grew to love one another greatly, giving birth to their only child, Karen Leda Diana Gordon. \n\nShe loved her father so much. Yes, he was difficult, and hard to relate to sometimes, but he was very much responsible for who she was, who she'd become, every bit as much as her mother had been. And she could never thank him enough for that. \n\nHer eyes stung, and she blinked it away. What would she do? Her mother had left her to decide, because this is what she was bred to do, to make the right decision, all on her own. She felt like centuries of family legacy was settling on her shoulders. \n\nShe couldn't look at Eddie, but she could picture him, walking along beside her - she knew he was not her equal in any sense. What would happen when she had their children? Could she rely on her raw genetics to overcome his shortcomings? Was that possible? \n\nAn unbidden image of the DeBourne family filled her mind, with Michael rising from their midst and striding forward. \n\nAt least she had one simple task in front of her. \n\n*** \n\nEddie was sitting in a small, unused room of the men's dorm, having closed the door and unlocked a sizable attach\u00e9 case from which he pulled out his new cellular phone. A Mitsubishi Roamer, it was the most advanced device on the rapidly growing market - comparatively light and with superior service, its weight a mere four kilograms, including the battery pack. He sat back in the rather natty chair and began dialing an extension before putting the device to his ear. \n\n\"Hey, dad,\" he said casually into the mouthpiece. \"Yes, I'm down here at her campus, actually. No, I let her bring me to campus, so she could show me around and see what she's doing with her studies. Yes, yes, still Physics ... I know, yes, cute, but I didn't want to argue with her. Unseemly.\" \n\nHe listened for several moments. \"Oh, it will happen, dad, don't worry about that. Everyone knows how devoted Karen Gordon is to her family and its legacy. And Jonathon Blackwell can't turn down your offer.\" \n\nEddie smiled slyly: \"Yes, I've already been to her dorm room, if you know what I mean ...\" \n\nMore nodding followed. \"And by the end of this weekend, she'll have agreed to my marriage proposal. I don't mind her running a little, after all. It's always about the chase and the kill, isn't it? And what a prize she'll make, hm?\" \n\nNow he frowned as he listened to his father. \"Dad, I know that, and you know that. But as far as the Blackwells are concerned, we're negotiating from a position of strength, where they need us more than we need them. It doesn't have to be true, we just need to make sure they believe it until their money is in our bank accounts. It's what we've been waiting for.\" \n\nEddie pinched his eyes. \"Dad, we've been over this. Repeatedly. Don't sit on this. We need to strengthen that stock now with additional shares. Its weakness is bad, I - stop doddering, dad! Yes, I'm talking about Iris and PSDV, dad. It's dangerously weak. You've gotta prop it up if you want this merger to work. The slightest whiff of weakness and Jonathon Blackwell goes running and we're back to square one.\" \n\nHe leaned back in the chair and looked at the ceiling in exasperation. Why did the old man have to be so dense? \"Just ... just let me handle this end of it. If you want, I'll even take care of the other part when I - good, good, I'm glad to hear you'll move on it as soon as possible, because I shouldn't announce our engagement until that fix is in place, right? Excellent ... I'm going to go find my bride-to-be. I'll call you tomorrow.\" \n\nEddie ended the call, returned the unit to its case and got up to leave. He should have elicited a promise from her to meet him somewhere when he was done with his call. Muttering to himself, he exited the room, leaving it in silence. \n\nBehind the long chesterfield on the far wall, Michael DeBourne continued lying on the floor, his hands behind his head and wearing a small frown as he looked at the ceiling. \n\nWell, at least one simple task in life presented itself. \n\n*** \n\n\"It wouldn't do for people think you assaulted both a student and a prominent professor, would it? You're practically an icon for men who treat women with respect in this institution. Imagine the outrage if it were learned that you were no more than another bullying predator?\" \n\nKaren stood in front of the two women, using her handheld microcassette recorder to play back the conversation from earlier in the weekend. Her expression was cold, contemptuous. In front of her, Professor Coulson and Kim were pale, the younger girl shaking in anger. \n\n\"You can't do this!\" the professor snapped angrily as she held onto her lover's arm. \"You have no right!\" \n\n\"What an ironic thing to say, given that you're trying to blackmail a student into virtual slavery,\" Karen retorted, not moving. \"The question is, what happens next? I believe it's your move.\" \n\n\"How dare you?\" Angela almost snarled, barely able to contain her anger. \"I don't care who you think you are, you won't get away with this!\" \n\n\"I believe that a trip to the dean's office to present him with this little gift will prove you quite wrong, Miss,\" Karen said, displaying the recorder prominently. \"Shall we find out?\" \n\n\"No!\" Kim almost shrieked, lunging forward and grasping wildly for the tape machine. \"He's mine! You won't take him from me!!\" \n\nShe spun and crashed to the floor as the back of Karen's hand smacked her across the face. She trembled in pain and fright, hiding her face and whimpering. Angela surged up from leaning against her desk, but paused upon seeing the dire look in Karen's tawny eyes, a warning of imminent danger if she tried to do anything brave. With considerable effort, she did not go to her beloved Kim's aid, but sagged back against the desk, calming herself. \n\n\"What do you want?\" she asked testily. \n\n\"Isn't it obvious?\" Karen reasoned. \"Leave DeBourne the Hell alone and quit blackmailing him, you lunatics. He's done nothing to deserve it, he's a genuinely decent man, and he'll only ever hate you if you do this. How on earth could you think this would work?\" \n\n\"Leave him alone so you can have him for yourself?\" Kim hissed bitterly. \n\n\"You're a damned fool, you know that?\" Karen said, trying to keep the overwhelming contempt out of her voice as she stared down at the stricken girl. \"What is here for you to even study if you're so misanthropic and unbalanced as to try this nonsense?\" \n\nShe looked over at the professor now. \"And how can you possibly think this is in any way sane, rational or permissible?\" \n\n\"What else do you want?\" Angela demanded. \n\nKaren shook her head. \"What I said. Leave him alone. Never darken his life again, either of you. Oh, I could go ahead and get Kim expelled and you fired, but that doesn't appeal to me right now. The faculty doesn't need a scandal. I'll be holding on to this tape, with copies given to friends, and if you two even think of going near that big lout, I'll have this in the dean's office so quickly, you won't have time to feel the doors slamming your skinny asses on the way out.\" \n\n\"You wouldn't dare,\" Angela said through her teeth, glaring hatefully. \n\n\"Try me,\" Karen replied, her voice colder and harder than iron. \"Challenge me on this, and the dean's office is my next stop. Walk away. Now and forever. Keep your psychotic little dependency on one another for all I care. But leave DeBourne and the student body alone. Are we clear?\" \n\nAngela stood up, pulled Kim not so gently to her feet, and stormed out of the office, dragging the sniffling student with her. Karen watched the door for some time before sighing and looking at the little device in her palm. \n\n\"Well, at least some of us have guardian angels ...\" she murmured to herself before leaving the office. She was now on the ground floor of the building, deep in thought as she headed out into the campus. She'd been walking for some time, when she sensed something and looked up, her eyes widening. \n\nMike DeBourne was striding quickly toward her, his face grim with intent. She swallowed, steeling herself. The sight of that man never ceased to both thrill and terrify her. \n\n\"What's the rush, Mongo?\" she almost squeaked, wrestling to keep her voice under control and her heart from beating out through her breast and bloodying her silk blouse. \n\n\"Do you have a pen?\" he said as he came to a stop and towered over her. \n\n\"Why -\" \n\n\"A pen, Gordon,\" he repeated, clearly not interested in being debated. \"I need a pen. Now.\" \n\nShe almost frowned at him for being so terse with her, but clearly he was in earnest. Her eyes never left his as she took a small ballpoint out of the little handclasp she always carried. Now he held out his palm, which seemed wider to her than a Saskatchewan wheat field. \n\n\"Your hand,\" Mike said. \n\nNow she scowled. \"Don't you think you're being a little forward here, Mister?\" \n\n\"Hand. Now,\" Mike almost boomed. She thrust her dainty hand forward almost reflexively, a thrilling chill going up her spine. She watched as he deftly removed the cap and fixed it in place on the back of the pen with one hand and then turned her palm over to begin writing on the back of her hand. She made a wry face as she watched, not at all sure what the oversized tyrant thought he was doing. Didn't he understand that she had some quality sulking to do before her life ended in connubial misery? \n\nWasn't it enough that she'd saved him from a life of horror? If she'd told him? \n\nWhich she hadn't. And wouldn't. The thought of his gratitude, the depth of it gave her frightening feelings. If she was stuck marrying Eddie McNoughton, she didn't want to feel DeBourne's gratefulness tugging at her heartstrings every day of the rest of her life. \n\nHe pulled back from writing on her hand and she drew her arm in to look at what he'd written. \n\nIris ... PSDV ... \n\nHer eyes suddenly widened. \n\n\"You've got until the Index opens on Monday morning to work this out,\" Mike said to her in a quiet but very serious voice. \"Don't delay. Go.\" \n\nKaren nodded and was gone in a flash. Mike watched her go, sighed, and shook his head. At least one of them had a guardian angel to watch over them. \n\n*** \n\nKaren sat in a chair in the study, glancing casually at a newspaper while her father was on the phone, trying not to smirk. Her mother stood near him, looking proudly at her daughter. \n\n\"I understand that they're screaming and threatening legal action,\" Jonathon said to whomever he was speaking with. \"But we both know they're blustering and have no leg to stand on. I want this takeover in effect forthwith. This will rock the entire exchange floor and our own stocks will shoot up, forgetting our new acquisitions. Let old Chester shriek until he's blue in the face and falls over, for all I care. I'll force him out, and his son will be lucky if he stays on as a janitor. No, you don't need to know why I'm so intent on their destruction. Let's just say they made it personal. Yes. Now, I pay you a lot of money to produce results like this for me, so go close the deal and enjoy the river of green that comes your way. Good day.\" ",
        "He put down the phone and let out a sigh before turning and nodding to his daughter. \"I don't know how you accomplished that, Karen, but well done, girl. By tomorrow when the floor closes, that entire advertising and media empire will be mine, legally and fairly. It's a coup. Do I want to know how you gleaned that little detail about their stock's secret fragility?\" \n\n\"Probably not,\" she replied, putting down the paper and standing up to go and join her parents. \"But your personal empire has grown, and I am not required to marry a janitor, so everyone wins.\" \n\nJonathon nodded. \"It's Sunday night, Karen. This little interlude isn't interfering with your studies, is it? No Blackwell can abide by such a thing.\" \n\n\"No, father,\" she lied, ignoring the sting at the corner of her eyes and the ache in her heart. \"I'll see that Jordan gets a car ready to take me back to campus. \n\nWhy could he never just outright approve of what she'd done? Why was there always something? \n\nJonathon Blackwell considered and nodded. He allowed his daughter to kiss his cheek and then she hugged her mother before leaving the room. Miranda silently wiped at the corner of her eye as her daughter disappeared. \n\n\"I worry that she may one day never come back to us,\" Miranda said, trying to not choke on the words. \n\n\"A parent's job is to make themselves progressively unnecessary, Miranda,\" Jonathon replied, ignoring the tug in his chest, because his house would soon feel that much emptier. \"She is going to do great things, far beyond anything we'll accomplish. I know how loyal she is to this family, and sometimes it's a kindness to her future self to push her away and set her free.\" \n\nMiranda squeezed his hand. \"You are so full of shit, Jonathon,\" she said, smiling. \"You have no idea what to do with her, any more than I do.\" \n\nShe now turned to face him and took his hand on hers, gazing at him lovingly. \"You're an impossible man, Jonathon Blackwell, and yet I love you more than words will permit me to say. And if you would have me release this child to her destiny, at least give me another to fawn over then.\" \n\nHe raised an eyebrow. \"Another child? Are you sure?\" \n\nShe nodded, her brown eyes warm with love. \"If it's a boy, Alexander. If it's a girl, Alexandra.\" \n\nHe smiled and shook his head. \"When have I ever denied you anything, Miranda Gordon?\" \n\n*** \n\nMike was laughing cheerfully as he sat at the table, surrounded by friends while they slogged their way through the Shrine of the Kuo-Toa. Bram, the Dungeon Master, loudly announced the extra experience points that Amberley Bloodstar, the party's bard, would be getting for quick thinking and excellent roleplay. \n\n\"And just when gold ol' Mr. DM thought he had you, he rolls a 1. Talk about dodging a bullet!\" cackled Erik, who was playing a Paladin. \"Or is this case, a net and a poisoned spear. Bet those barbs and hooks would've hurt.\" \n\n\"Yeah, I imagine,\" Mike agreed, smiling, but realizing that the statement was more true than they'd ever know. Talk about dumb luck.\" \n\n\"Bullshit, dude,\" said Abel, the party's wizard. \"You've either got horseshoes up your ass or the world's busiest guardian angel.\" \n\n\"You may be right...\" Mike agreed, his thoughts still far outside the room. \n\n*** \n\nLisa laughed delightedly and watched while Karen spun and danced around their room, her flimsy dress swirling about her. The King Porter Stomp, arranged by Benny Goodman played on the radio just sitting on the table. Karen felt an exhilaration she could barely believe. Had she really been allowed to dodge that bullet? \n\nThank God for guardian angels! \n\n\"I could watch you dance all day!\" Lisa exclaimed, clapping along with the lively tune. It was everything the Flapper Era represented, and Karen displayed its joyous abandon perfectly with her hypnotic body and moves. \"You ever gonna teach me to dance like that?\" \n\n\"I would love to!\" Karen replied as she twirled about, a glorious symphony of diaphanous fabric and shapely legs on display. \"You would look so good doing this sort of dance.\" \n\n\"Oh, not like you,\" Lisa said, blushing. \"But just dancing with you would be so cool.\" \n\nKaren danced with abandon and Lisa turned her head as the door to their room opened, allowing Mona and Janet in. \n\n\"We thought we heard a party,\" Mona quipped as she sat down on Karen's bed, watching with a smile as her friend danced. \"Someone's in a good mood. I probably would be too, though, if I narrowly avoided marrying a creep.\" \n\n\"A mega-rich creep,\" Janet countered, sighing. \"Least Karen could've done was point him my way, y'know.\" \n\nLisa, Mona and even Karen laughed, although she never stopped twirling. She couldn't believe how light she felt. Her friends cheered and watched, and she was happy for them being there, but she felt a pang she needed to fight down, and perhaps a sting in the corner of her eyes, because the person she wanted to be dancing for wasn't there. \n\nAfter all, she had him to thank for everything. \n\nWhy did their worlds have to be so far apart and impossible? Why couldn't things have been a little bit different? Why couldn't he have been a bit more wealthy? \n\nWhy couldn't she have been a little poorer? \n\nShe forced it from her mind, knowing there was no point in lamenting impossibles. He was in her life as much as circumstances allowed, and she would happily make do with that fact. For as long as possible. \n\nShe didn't want to stop dancing. \n\n*** \n\nAlexa sat sideways in her husband's lap, snuggled into him on the swinging love seat on the back deck of the house. It was a surprisingly quiet mechanism, given how it had been reinforced to accommodate her brother-in-law's massive frame. She nuzzled against his neck, almost purring in contentment. Alex just held her and caressed the outside of her thigh through her jeans. \n\n\"Mmmm, you sure I'm not too heavy?\" she murmured. \n\n\"Light as a feather, I mean it,\" Alex assured her. \"Having you here like this is Heaven, Alexa.\" \n\n\"I'm glad,\" she sighed, her arms around his neck. \"I feel so safe, content and ... completed ... when I'm with you like this. I love you so much.\" \n\n\"I know you do,\" he said. \"I love you too. No matter how many stages you get naked on.\" \n\nShe giggled and batted her hand against his shoulder playfully. \"Brat. There haven't been that many stages.\" \n\n\"Didn't you force Freja to stop at twelve?\" Alex teased his aunt. \n\n\"Well, there are untold millions of stages in the world, and I've been naked on only twelve of them, so I stand by my statement,\" she sniffed. \"If Kar can make double penetration seem dignified, I can dance on stages naked and retain a shred of dignity.\" \n\n\"Yeah, wasn't sure I needed to know that about mom,\" Alex admitted. \"Or her penchant for violet panties. I guess I should just be thankful she was wearing any, right?\" \n\n\"Yeah, my sissy is a wild child, no two ways about it ...\" Alexa mused, growing quiet for some time, as if lost in thought. \"Alex?\" \n\n\"Yep.\" \n\n\"You trust me, right?\" \n\n\"You know I do.\" \n\n\"And you know that Kar and I have a ... mostly unspoken dynamic between us, right?\" \n\n\"Hard not to notice when you're naked in a tub together,\" he answered, making her blush. \"But yeah, I've know you do. So what?\" \n\n\"It's just ... well, we're going to Quebec together. We'll be gone for a whole week while I meet the Blackwells.\" \n\n\"You thinking something might happen, and you're asking me if I'm okay with that?\" he queried. \n\nShe looked at him now, her face very close to his. She bit her lip for a moment. \"Yes?\" \n\nHe smiled: \"Dad sorta told me it was quite possible and to not be a hard-ass about it. If he's not worried and couldn't be bothered to care, I guess I shouldn't either, right?\" \n\nAlexa smiled back and nodded. \"Smart cookie, your dad. I'm not saying that anything will definitively happen, but it's hard to imagine us not giving in at least a little.\" \n\nAlex shrugged: \"You Blackwell-Gordon women have your quirks, but dad pointed out that whatever those quirks might be, it's still worth it a million times over for the privilege of being married to one. I gotta say, I totally agree.\" \n\nShe hugged him again, burying her face in his shoulder. \"Thanks for being understanding. You ... you know that if it weren't okay with you, I'd've resisted the urge, right? No matter how strong it was.\" \n\n\"I believe it,\" he said, holding her close. \"I know what I mean to you, Alexa. Hell, I can identify with it, because you're my everything.\" \n\n\"Oh, Alex!\" his aunt said, pressing her lips to his and kissing him deeply. \n\nNeither wanted this moment to end. \n\n*** \n\nThe Yorkville club was quite full, the audience listening as Karen sat on a stool on stage, singing into a microphone while a quartet behind her softly played the torch music she'd chosen softly. Her eyes were closed as she let the music flow through her, and her form-fitting black dress glittered in the stage lights. Her husband watched from a table near the stage. \n\n\"The night is like a lovely tune \n\nBeware my foolish heart \n\nHow white the ever constant moon \n\nTake care, my foolish heart \n\nThere's a line between love and fascination \n\nThat's hard to find on a moment such as this \n\nAnd they all have the very same sensation \n\nWhen you're lost in the magic of a kiss \n\nYour lips are much too close to mine \n\nBeware my foolish heart \n\nBut should our eager lips combine \n\nThen let the fire start \n\nFor this time it isn't fascination \n\nOr a dream that will fade and fall apart \n\nIt's love, this time it's love \n\nMy foolish heart \n\nThe night is like a lovely tune \n\nBeware my foolish heart \n\nHow white the ever constant moon \n\nTake care, my foolish heart.\" \n\nThe crowd in the swank club clapped in appreciation. Karen was always welcome to come and sing on open-mic nights. She smiled and nodded her head before coming down from the stage and joining her husband at their table. Not surprisingly, he had a glass of champagne waiting for her. \n\n\"Don't you ever get tired of finding ways to make me fall in love with you all over again?\" he asked, smiling as she settled in and sipped thankfully at the bubbly offering. \n\n\"Absolutely not,\" she replied, sighing and putting her drink down to gaze at him. \"I'd lose all purpose in my life. I've dedicated my entire being to making sure I deserve your love.\" \n\n\"Oh, so you're just lazy, then,\" Mike quipped, reaching across the table and taking her hand in his. It always thrilled her that his hand covered hers, even both of them at once, so completely. It made her feel safe and content like nothing else on earth possibly could. \"Because I'm pretty sure I spend my waking hours devoted to you.\" \n\nShe always blushed when he said things like that. She always had, and she had no intention of stopping. She loved to hear it. Her heart fluttered in her chest as she smiled at him. \"Lucky me, then. Because both of our lives could have been so different. I'll never forget how you saved me from marrying Eddie McNoughton.\" \n\n\"Oh, I couldn't let you marry that tool,\" Mike said, shaking his head. \"Absolutely not. Talk about casting pearls before swine.\" \n\n\"I don't think I've ever asked, or dared ask,\" she lilted, stroking his hand now, her eyes shining with total devotion and love. \"Did you scupper that weekend so that I was still available for you down the road?\" \n\nMike smiled and looked at her hands, shaking his head. \"I wish. If I was, I didn't know it at the time. All I knew was that it didn't suit me to see your life and future ruined, stuck with that twerp.\" \n\n\"At the time, I'd been trying to convince myself that maybe my life wouldn't be so bad,\" she sighed, remembering her despair and how trapped she felt. \"Comfortable, superficially pleasant, but empty. I would've done it, ultimately, for my family and its legacy.\" \n\n\"I know, Kar,\" Mike said gently, squeezing her hands. \"And it's one of your most incredible traits, your loyalty and resolve. And, to be honest, I think that little mulligan was your reward from above, you know?\" \n\n\"I sure hope so,\" she agreed, nodding. \"Because look where I ended up - the happiest woman alive, and the most in-love.\" \n\nMike believed her. The depths of Karen's devotion and unconditional love for him would have been almost unnerving to anyone else, but he cherished it and returned it with every fibre of his being, wholly enamoured of this goddess he'd been blessed enough to marry. What had he done to be so deserving? \n\n\"I can't begin to express the excitement and relief I felt when you wrote those letters on my hand all those years ago,\" she said, remembering it vividly. The thrill of you touching me aside, the gift you gave me changed my world so completely, and my family's. My dad never gave you the credit you deserved for it, you know.\" \n\n\"Your dad has my eternal gratitude for giving you to the world, so he's allowed to have his quirks,\" Mike said easily. \"I liked being your guardian angel, after all. And I had my own crisis that weekend to deal with, mind. I wonder whatever happened to scare Coulson and that Kim girl off.\" \n\n\"Well, actually ...\" Karen said quietly, looking at the table and blushing. \n\nMike laughed: \"It was you all along? And you've never told me?\" \n\n\"Mona told me about your conversation with her and I smelled a rat. I skulked around and heard them plotting, so I recorded their blackmail schemes and confronted them about it, convincing them to back off or I'd put them through Hell. They just slinked away.\" \n\nMike raised an eyebrow, looking at her in amusement. \n\n\"Annnnnnd I've been holding onto that tidbit, in case I ever needed some ammo to make you fall completely in love with me again.\" Karen murmured, still looking at the table, blushing like a little girl in front of a crush. \n\n\"Well, congratulations, Gordon, because you just earned another ten thousand years of my undying love and devotion,\" Mike said cheerfully, but she recognized the tone beneath, knowing he was serious. Somehow, some way, he loved her more than ever, more than he had before she returned to the table. It astounded her how in love he was. How could she be worthy? \n\nThey stared at one another across the table in silence, because words were no longer necessary. They rarely were, to be honest. The spell was broken, unfortunately, when the ma\u00eetre d' came up to them. \n\n\"My apologies for intruding, Mrs. DeBourne,\" he said in a low and quiet tone, meant only for them. \"But there have been nineteen tables that requested another song from you, if you would be willing.\" \n\n\"Oh, frabjous rapture ...\" Karen said dryly as she rose to her feet while her husband simply chuckled in amusement. \n\n*** \n\nAuthor's Notes: This chapter's focus was mostly on Karen's family and the paradox or dichotomy it represents for her. The DeBourne clan is infinitely likeable, whereas Jonathon Blackwell is a royal pain in the ass, who has a hard time with emotions. Even his wife, the woman he loves so desperately, and who loves him back every bit as much, knows how detached he can be. I hope this fleshed them out a little for everyone. \n\nIf you want to know about the cat outfits, and Karen dancing in her purple underwear, watch a 1975 video feature of ABBA called \"So Long: Made in Sweden for Export.\" That will give you an excellent example of the floor show the Blackwell-Gordon girls put on. And if those are the original outfits, well, Karen and Alex are both taller, bustier, and leggier than Frida and Agnetha, so those little numbers would be really tight on them. \n\nAs for Karen flapper-dancing near the end of the story, the song is the King Porter Stomp, as performed by Benny Goodman and his orchestra. My inspiration for Karen dancing was an animated GIF of Louise Brooks dancing, as cut from the silent classic \"Pandora's Box.\" \"Louise Brooks dancing\" is a simple internet search, and the GIF is about four seconds long. Very worth it to watch. \n\nI have it on good authority that Karen's troilist romp was incredibly sexy, and she didn't seem slutty at all, due to her composure and control of the situation. I hope this is true, because Karen will royally kick my ass if I portray her as slutty somehow. Yeek. \n\nGuess that's all for now. Other stories await. \n\nKeep your stick on the ice! \n\nManagement"
    ],
    "authorname": "BiscuitHammer",
    "tags": [
        "romance",
        "incest romance",
        "humour",
        "music",
        "karaoke",
        "alcohol",
        "alphas clash",
        "bisexuality",
        "threesome"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/mike-and-karen-ch-07"
}